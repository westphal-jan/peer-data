{"id": "0903.0467", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Mar-2009", "title": "The Parameterized Complexity of Global Constraints", "abstract": "We argue that parameterized complexity is a useful tool with which to study global constraints. In particular, we show that many global constraints which are intractable to propagate completely have natural parameters which make them fixed-parameter tractable and which are easy to compute. This tractability tends either to be the result of a simple dynamic program or of a decomposition which has a strong backdoor of bounded size. This strong backdoor is often a cycle cutset. We also show that parameterized complexity can be used to study other aspects of constraint programming like symmetry breaking. For instance, we prove that value symmetry is fixed-parameter tractable to break in the number of symmetries. Finally, we argue that parameterized complexity can be used to derive results about the approximability of constraint propagation.", "histories": [["v1", "Tue, 3 Mar 2009 08:44:47 GMT  (25kb)", "http://arxiv.org/abs/0903.0467v1", "Proceedings of the Twenty-Third AAAI Conference on Artificial Intelligence"]], "COMMENTS": "Proceedings of the Twenty-Third AAAI Conference on Artificial Intelligence", "reviews": [], "SUBJECTS": "cs.AI cs.CC", "authors": ["christian bessiere", "emmanuel hebrard", "brahim hnich", "zeynep kiziltan", "claude-guy quimper", "toby walsh"], "accepted": true, "id": "0903.0467"}, "pdf": {"name": "0903.0467.pdf", "metadata": {"source": "CRF", "title": "The Parameterized Complexity of Global Constraints", "authors": ["C. Bessiere", "E. Hebrard", "B. Hnich", "Z. Kiziltan", "C.-G. Quimper", "T. Walsh"], "emails": ["bessiere@lirmm.fr", "ehebrard@4c.ucc.ie", "brahim.hnich@ieu.edu.tr", "zeynep@cs.unibo.it", "cquimper@alumni.uwaterloo.ca", "toby.walsh@nicta.com.au"], "sections": [{"heading": null, "text": "ar Xiv: 090 3.04 67v1 [cs.AI] 3M ar2 00"}, {"heading": "Introduction", "text": "One of the jewels of constraint programming is the notion of a global constraint (see, for example, Re'gin 1994; Re'gin 1996; Bessiere and Re'gin 1997; Re'gin and Rueher 2000; Beldiceanu and Contegean 1994; Frisch et al. 2002)). Global constraints specify patterns that occur in many real-world problems, and have efficient and effective distribution algorithms for truncating the search space. Thus, we often have decision variables that have to take into account different values (e.g. activities that require the same resource all have to be assigned at different times). Therefore, most constraint solvers provide a global ALLDIFFERENT constraint that is propagated efficiently and effectively (Re'gin 1994). Unfortunately, several common and useful global constraints that have been proposed in the past have proved impracticable (e.g. Quimper 2003; Bessiere et al 2004)."}, {"heading": "Formal background", "text": "A constraint satisfaction problem (CSP) consists of a set of variables, each with a limited BC domain of values and a set of constraints that allow combinations of values for some subset of variables. We assume that any constraint can be checked in polynomial time. We use uppercase letters for variables (e.g. X, Y) and lowercase letters for values (e.g. d and di). We consider both finite domain and fixed variables. A variable X takes a value from a finite domain of possible values (X). A set variable S takes a set of values from a domain of possible sets. We consider fixed variables as a vector of 0 / 1 finite domain variables that represent the characteristic function of the set. This representation is equivalent to maintaining upper limit (ub (S) and lower limit (lb (S))."}, {"heading": "Parameterized complexity", "text": "Recently, Bessire et al. have shown that a number of common global constraints are insoluble to propagate (Bessire et al. 2006b). For example, while enforcing bound consistency on the NVALUE constraint is polynomial, domain consistency is NP-hard. Here, we show that the tools of parameterized complexity can provide a finer-grained view of such complexity outcomes. These complexity tools help us to more accurately identify what makes a global constraint (in) comprehensible. The insights gained can guide the search - for example, we will see that they can identify small back doors on which the propagation algorithms are proposed. We will present the necessary tools from parameterized complexity theory."}, {"heading": "An example", "text": "It is therefore possible to explore the total number of values in the world and it is perhaps obvious that the number of values in the world of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World of the World"}, {"heading": "Backdoors", "text": "As we will see in the next section, dynamic programming is a common method for obtaining fixed parameter tractability results for restriction propagators. Another method is to identify a decomposition of the global constraint in which there is a strong back door containing a limited number of variables, which is often a cycle cutset into an acyclic (and thus polynomial) bottom door that breaks through all cycles of the problem (Dechter and Pearl 1987), once the cycle cutsets give a polynomial bottom door but are instantiated (Williams, Gomes and Selman 2003). A cycle cutset is a subset of variables that break through all cycles of the problem (Dechter and Pearl 1987)."}, {"heading": "Other examples", "text": "We give some other examples of global constraints that can be propagated with set parameters."}, {"heading": "Uses", "text": "The global constraint USES ([X1,., Xn], [Y1,., Ym]) applies iff [Xi] 1 \u2264 i \u2264 n} [Yj] 1 \u2264 j \u2264 m}. That is, Xi uses only values used by the Yj. Enforcing domain consistency on such a constraint is NPhard (Bessie et al. 2005). However, these are fixed parameters that can be propagated in the total number of values in the range of Yj. We let k = | j dom (Yj) |. We give an automaton to accept the USES constraint, which scans through Y1 to Ym and then X1 to Xn. The states of this automaton are all possible values that can be used by Yj. Since there are k possible values in the areas of the Yj, there are O (2k) possible states."}, {"heading": "Among", "text": "The AMONG constraint was introduced in CHIP to model resource distribution problems such as car sequencing (Beldiceanu and Contegean 1994), and it counts the number of variables based on values from a given set. AMONG ([X1,.., Xn], [d1,., dm], N) holds iff N = | {i | Xi = dj, 1 \u2264 i \u2264 n, 1 \u2264 j m} |. Here we are looking at a generalization of AMONG where we use a fixed variable S instead of fixed values dj. That is, AMONG ([X1,., Xn], S, N) holds iff N = | [i \u2264 i \u2264 m} |. The enforcement of domain consistency on this extended version of AMONG is NPhard et al."}, {"heading": "Roots", "text": "Many counting and occurrence constraints can be specified using the global ROOTS constraint (Bessie, re et al. 2005). ROOTS ([X1,..., Xn], S, T) holds iff S = {i | Xi, T}. As before, we consider S and T to be abbreviations for the vector of 0 / 1 variables representing the associated characteristic function. ROOTS can specify a wide range of other global constraints, including AMONG, ATMOST, ATLEAST, USES, DOMAIN, and CONTIGUITY constraints. Enforcing domain consistency on ROOTS is NP-hard (Bessie, re et al. 2006c). However, it is traceable with fixed parameters to expand into k = | ub (T) and CONTIGUITY constraints."}, {"heading": "Bound consistency", "text": "It is not as if this is global consistency, but the domain consistency is NP-hard (Bessie, Baptiste and Durr 2008). As a second example, the bound consistency on the INTERDISTANCE consistency is polynomial, but domain consistency is NPhard (re-gin 1997, Baptiste and Durr 2008). INTERDISTANCE ([X1,., Xn] holds iff Xi \u2212 Xj. This global consistency is useful in scheduling problems such as runway sequencing. As a third example, the extended global consistency of the EGCC (X1,., Xn]."}, {"heading": "Meta-constraints", "text": "A meta-constraint, however, is a constraint that applies other constraints. For example, since a constraint C of nature p, the meta-constraint CARDPATH (N, [X1,.] however, in terms of constraints, C (X1,., Xp) to C (Xn \u2212 p + 1,., Xn) hold (Beldiceanu and Carlsson 2001).This allows us to specify that we want at least 2 days \"off\" in each sequence of shifts. CARDPATH can encode a range of Boolean connections since N-1 gives disjunction, N = 1 gives exclusive or, and N = 0 gives negation."}, {"heading": "Symmetry breaking", "text": "Symmetry is a common feature of many real-world problems, which dramatically increase the size of the search space when not taken into account. Consider, for example, value symmetry. A value symmetry is a bijection of values that obtain solutions. A simple and effective mechanism for dealing with symmetry is to add constraints to eliminate symmetric solutions (Puget 1993; Crawford et al. 1996). For example, any possible permutation of these values is symmetry. A simple and effective mechanism for dealing with symmetry is to add symmetric solutions (Puget 1993; Crawford et al. 1996)."}, {"heading": "Approximate consistency", "text": "We can use approximation algorithms to partially filter such global constraints (Sellmann 2003). Consider, for example, the knapsack constraint, KNAPSACK ([X1,.., Xn], [w1,.., wn], C, [p1,.., pn], P), the iff: n, i = 1wiXi \u2264 C andn, i = 1piXi > PC is the capacity, and P is the profit. Based on a fully polynomial time approximation scheme, Sellmann gives a propagator based on dynamic programming that guarantees approximate consistency, filtering values that have only one factor outside the optimal gain."}, {"heading": "Other related work", "text": "The analysis of traceability has a long history in constraint programming. Such work tends to focus on the structure of the constraint graph (e.g. (Freuder 1982; Dechter and Pearl 1989) or on the semantics of constraints (e.g. (Cooper, Cohen and Jeavons 1994). However, these lines of research deal with a constraint problem as a whole and do not say much about global constraints. For global constraints on limited biodiversity, asymptotic analysis has been used to investigate the dispersal both in general and for constraints with a particular semantic. For example, the GAC schema algorithm of (Bessiere and Re'gin 1997) has a constraint on limited biodiversity that is limited to the constraints on biodiversity and to the ranges of size d."}, {"heading": "Conclusions", "text": "We argued that parametrized complexity is a useful tool for studying global constraints. In particular, we showed that many global constraints, such as NVALUE, DISJOINT, and ROOTS, that cannot be fully propagated, have natural parameters that make them fixable. This traceability tends to be the result of either a simple dynamic program or a decomposition that has a strong backdoor of limited size. This strong backdoor is often a cycle cutset. We also demonstrated that parametrized complexity can be used to investigate other aspects of constraint programming, such as symmetry breakage. For example, we demonstrated that value symmetry can be fixable to break down the number of symmetries. Finally, we argued that parametrized complexity can be used to derive results about the approximability of the spread of constraints."}], "references": [{"title": "Runway sequencing with holding patterns", "author": ["Baptiste Artiouchine", "K. Durr 2008] Artiouchine", "P. Baptiste", "C. Durr"], "venue": "European Journal of OR", "citeRegEx": "Artiouchine et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Artiouchine et al\\.", "year": 2008}, {"title": "and Carlsson", "author": ["N. Beldiceanu"], "venue": "M.", "citeRegEx": "Beldiceanu and Carlsson 2001", "shortCiteRegEx": null, "year": 2001}, {"title": "and Contegean", "author": ["N. Beldiceanu"], "venue": "E.", "citeRegEx": "Beldiceanu and Contegean 1994", "shortCiteRegEx": null, "year": 1994}, {"title": "and R\u00e9gin", "author": ["C. Bessiere"], "venue": "J.", "citeRegEx": "Bessiere and R\u00e9gin 1997", "shortCiteRegEx": null, "year": 1997}, {"title": "The complexity of global constraints", "author": ["Bessiere"], "venue": "In Proc. of the 19th National Conf. on AI. AAAI", "citeRegEx": "Bessiere,? \\Q2004\\E", "shortCiteRegEx": "Bessiere", "year": 2004}, {"title": "The range and roots constraints: Specifying counting and occurrence problems", "author": ["Bessi\u00e8re"], "venue": "In Proc. of 19th IJCAI,", "citeRegEx": "Bessi\u00e8re,? \\Q2005\\E", "shortCiteRegEx": "Bessi\u00e8re", "year": 2005}, {"title": "Among, common and disjoint constraints", "author": ["Bessiere"], "venue": "In Recent Advances in Constraints: Joint ERCIM/CoLogNET Int. Workshop on Constraint Solving and Constraint Logic Programming", "citeRegEx": "Bessiere,? \\Q2006\\E", "shortCiteRegEx": "Bessiere", "year": 2006}, {"title": "Filtering algorithms for the NVALUE constraint. Constraints 11(4):271\u2013293", "author": ["Bessi\u00e8re"], "venue": null, "citeRegEx": "Bessi\u00e8re,? \\Q2006\\E", "shortCiteRegEx": "Bessi\u00e8re", "year": 2006}, {"title": "The complexity of global constraints. Constraints 12(2):239\u2013259", "author": ["Bessi\u00e8re"], "venue": null, "citeRegEx": "Bessi\u00e8re,? \\Q2007\\E", "shortCiteRegEx": "Bessi\u00e8re", "year": 2007}, {"title": "Characterizing tractable constraints", "author": ["Cohen Cooper", "M. Jeavons 1994] Cooper", "D. Cohen", "P. Jeavons"], "venue": "Artificial Intelligence", "citeRegEx": "Cooper et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Cooper et al\\.", "year": 1994}, {"title": "Symmetry breaking predicates for search problems", "author": ["Crawford"], "venue": "In Proc. of the 5th Int. Conf. on Knowledge Representation and Reasoning,", "citeRegEx": "Crawford,? \\Q1996\\E", "shortCiteRegEx": "Crawford", "year": 1996}, {"title": "and Pearl", "author": ["R. Dechter"], "venue": "J.", "citeRegEx": "Dechter and Pearl 1987", "shortCiteRegEx": null, "year": 1987}, {"title": "and Pearl", "author": ["R. Dechter"], "venue": "J.", "citeRegEx": "Dechter and Pearl 1989", "shortCiteRegEx": null, "year": 1989}, {"title": "M", "author": ["Downey, R.G.", "Fellows"], "venue": "R.; and Stege, U.", "citeRegEx": "Downey. Fellows. and Stege 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "Global constraints for lexicographic orderings", "author": ["Frisch"], "venue": "In Proc. of 8th Int. Conf. on Principles and Practices of Constraint Programming (CP-2002)", "citeRegEx": "Frisch,? \\Q2002\\E", "shortCiteRegEx": "Frisch", "year": 2002}, {"title": "and Johnson", "author": ["M. Garey"], "venue": "D.", "citeRegEx": "Garey and Johnson 1979", "shortCiteRegEx": null, "year": 1979}, {"title": "and Roy", "author": ["F. Pachet"], "venue": "P.", "citeRegEx": "Pachet and Roy 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "and Walsh", "author": ["Quimper", "C.-G."], "venue": "T.", "citeRegEx": "Quimper and Walsh 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "and Rueher", "author": ["R\u00e9gin", "J.-C."], "venue": "M.", "citeRegEx": "R\u00e9gin and Rueher 2000", "shortCiteRegEx": null, "year": 2000}, {"title": "and Szeider", "author": ["M. Samer"], "venue": "S.", "citeRegEx": "Samer and Szeider 2008", "shortCiteRegEx": null, "year": 2008}], "referenceMentions": [], "year": 2013, "abstractText": "We argue that parameterized complexity is a useful tool with which to study global constraints. In particular, we show that many global constraints which are intractable to propagate completely have natural parameters which make them fixedparameter tractable and which are easy to compute. This tractability tends either to be the result of a simple dynamic program or of a decomposition which has a strong backdoor of bounded size. This strong backdoor is often a cycle cutset. We also show that parameterized complexity can be used to study other aspects of constraint programming like symmetry breaking. For instance, we prove that value symmetry is fixed-parameter tractable to break in the number of symmetries. Finally, we argue that parameterized complexity can be used to derive results about the approximability of constraint", "creator": "LaTeX with hyperref package"}}}