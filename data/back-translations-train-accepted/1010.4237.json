{"id": "1010.4237", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Oct-2010", "title": "Robust PCA via Outlier Pursuit", "abstract": "Singular Value Decomposition (and Principal Component Analysis) is one of the most widely used techniques for dimensionality reduction: successful and efficiently computable, it is nevertheless plagued by a well-known, well-documented sensitivity to outliers. Recent work has considered the setting where each point has a few arbitrarily corrupted components. Yet, in applications of SVD or PCA such as robust collaborative filtering or bioinformatics, malicious agents, defective genes, or simply corrupted or contaminated experiments may effectively yield entire points that are completely corrupted.", "histories": [["v1", "Wed, 20 Oct 2010 16:05:28 GMT  (169kb)", "http://arxiv.org/abs/1010.4237v1", "24 pages, appeared in NIPS 2010"], ["v2", "Fri, 31 Dec 2010 18:36:49 GMT  (172kb)", "http://arxiv.org/abs/1010.4237v2", "26 pages, appeared in NIPS 2010. v2 has typos corrected, some re-writing. results essentially unchanged"]], "COMMENTS": "24 pages, appeared in NIPS 2010", "reviews": [], "SUBJECTS": "cs.LG cs.IT math.IT stat.ML", "authors": ["huan xu", "constantine caramanis", "sujay sanghavi"], "accepted": true, "id": "1010.4237"}, "pdf": {"name": "1010.4237.pdf", "metadata": {"source": "CRF", "title": "Robust PCA via Outlier Pursuit", "authors": ["Huan Xu", "Constantine Caramanis"], "emails": [], "sections": [{"heading": null, "text": "We present an efficient convex optimization-based algorithm, which we call Outlier Pursuit, which, under some mild assumptions on the uncorrupt points (e.g. satisfied by the generative standard approach in the PCA issue) reveals the exact, low matrix decomposition of the subspace and identifies the corrupt points. Such identification of the corrupt points, which do not conform to the low-dimensional approach, is of overriding interest in bioinformatics and financial applications, and beyond. Our techniques include the decomposition of the matrix by means of nuclear standardization, but our results, setup and approach are necessarily different from the existing line of work in matrix completion and matrix decomposition, as we develop an approach to restore the correct gap space of the corrupt matrix rather than the exact matrix itself.I."}, {"heading": "A. Algorithm", "text": "Given the M data matrix, our algorithm, called Outlier Pursuit, generates (a) a matrix U, with orthonormal rows spanning the low-dimensional true subspace that we want to restore, and (b) a series of column indexes I corresponding to the outlier points.Algorithm 1 outlier PursuitFind (L, C), the optimum of the following convex optimization programs Minimize: E = E = E = E = E = E = E (2) Calculate SVD L = U1V 1 and output U = U1. Output the series of non-zero columns of E, i.e. I = J = C = 0 for some i} While in the silent case there are simple algorithms with similar performance, the benefit of the algorithm and analysis extends to more realistic and interesting situations where, in addition to the gross insolvency problem, there is also a problem of E = 0 for some E = i."}, {"heading": "B. Performance", "text": "We show that under fairly weak assumptions, Outlier Pursuit restores exactly the column space of the low-level matrix L0 and the identities of the non-zero columns of the outlier matrix C0. \u2212 Theorem 1 (Noiseless case): Suppose we observe M = L0 + C0, where L0 has rank r and the incoherence parameter \u00b5. Suppose also that C0 is supported on most \u03b3n columns. Each output to Outlier Pursuit exactly restores the column space and identifies exactly the indexes of the columns corresponding to outliers that are not in the recovered column space, as long as the fraction of the corrupt points, \u03b3, satisfactory point 1 \u2212 and satisfactory point c1 \u00b5r, (5) where c1 = 9121. This can be achieved by fixing the parameter \u03bb in outlier tracking to 3 7 points."}, {"heading": "C. Related Work", "text": "In fact, it is so that most of them are able to survive themselves, and that they are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...)"}, {"heading": "A. Oracle Problem and Optimality Conditions", "text": "As discussed, the true solution (L0, C0) in general cannot be replaced by the problem (1). (1) Rather, our goal is to reactivate a pair (L), so that L), so that L, \"the right column solution, and C,\" the right column solution (L, \"C\") is developed by considering the alternative optimization problem, in which we add constraints to (2), which we hope should be its optimum. (1) In particular, we need to define the SVD of the true L0 = U0V \"0,\" and define for each matrix X the projection onto the space of all matrices with the column space in U0 as PU0 (X) as PU0 (X): 0 \"X,\" so that the column support I0 of the true C0, \"defining the projection PI0 (X) as the matrix, the results if all columns in I0 are set to 0.0."}, {"heading": "B. Obtaining Dual Certificates for Outlier Pursuit", "text": "In this section, we perform the proof collection of the PU (H) = PT (H) = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,, 0, 0, 0,"}, {"heading": "A. Proof of Theorem 6", "text": "The proof consists of three steps. First, we show that if Outlier Pursuit is successful, then (L0, C0) must be an optimal solution for Outlier Pursuit. Then, we show that the existence of Q is equivalent to condition (18). We devote a section for each step. Step 1: We first need a technical problem. Lemma 11: Given is a double certificate Q. Finally, we show that the existence of Q is equivalent to condition (18)."}, {"heading": "2) Step 2:", "text": "Theorem 8: Under Assumption 1, (L0, C0) is an optimal solution for outlier tracking if and only if such a solution exists. (a) PT0 (Q), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0), 0 (0) (0), 0 (0), 0 (0), \"0 (0), 0 (0), 0 (0), 0 (0), 0 (0,\" 0, \"0,\" 0 (0), 0 (0), 0, \"(0), 0, 0 (0), 0 (0,\" (0), 0, 0 (0), 0, 0 (0), 0, 0 (0, 0, 0, \"(0), 0, 0 (0), 0 (0), 0, 0 (0, 0), 0 (0), 0 (0, 0), 0 (0 (0), 0 (0, 0,\", 0, 0), 0 (0, 0, 0 (0), 0, 0 (0), 0 (0, 0), 0 (0, 0 (0, 0, 0), 0 (0), 0 (0), 0, 0 (0, \", 0, 0, 0 (0, 0, 0, 0), 0, 0 (0), 0 (0), 0 (0 (0), 0 (0, 0, 0 (0), 0, 0 (0), 0 (0, 0, 0, 0, 0 (0, 0, 0), 0), 0 (0 (0, 0 (, 0), 0 (, 0), 0), 0 (, 0, 0, 0 (0), 0), 0 ("}, {"heading": "3) Step 3:", "text": "Theorem 9: Assuming 1: If there is any matrix Q = Q = Q = Q = Q = Q = Q = Q = Q = Q (18), then U0V 0 + \u03bbH0 satisfies (18). Proof: Denote Q0, U0V 0 + \u03bbH0. We first show that the two equations of condition (18) (Q0) = PT0 (U0V 0) + \u03bbPT0 (H0) = U0V 0 0 0 (PV0) \u2212 PU0PV0 (H0) \u2212 PVV0 (H0) \u2212 PU0 0 0 0 (H0) H0 H0 H0 (H0) = 0 H0 H0 H0 (H0) = 0 H0 H0 H0 (H0)."}, {"heading": "B. Proof of Corollary 2", "text": "Episode 2 applies due to the following problem: the boundaries between H0 and U0V are narrow. (II) Inequality is narrow. (I) Inequality is narrow. (II) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is narrow. (I) Inequality is equal. (I) Inequality is equal. (I) Inequality is equal. (I) Inequality is equal. (II) Inequality is equal. (II) Inequality is equal. (II) Inequality is equal. (I) Inequality is equal."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Singular Value Decomposition (and Principal Component Analysis) is one of the most widely used techniques<lb>for dimensionality reduction: successful and efficiently computable, it is nevertheless plagued by a well-known,<lb>well-documented sensitivity to outliers. Recent work has considered the setting where each point has a few arbitrarily<lb>corrupted components. Yet, in applications of SVD or PCA such as robust collaborative filtering or bioinformatics,<lb>malicious agents, defective genes, or simply corrupted or contaminated experiments may effectively yield entire<lb>points that are completely corrupted.<lb>We present an efficient convex optimization-based algorithm we call Outlier Pursuit, that under some mild<lb>assumptions on the uncorrupted points (satisfied, e.g., by the standard generative assumption in PCA problems)<lb>recovers the exact optimal low-dimensional subspace, and identifies the corrupted points. Such identification of<lb>corrupted points that do not conform to the low-dimensional approximation, is of paramount interest in bioinfor-<lb>matics and financial applications, and beyond. Our techniques involve matrix decomposition using nuclear norm<lb>minimization, however, our results, setup, and approach, necessarily differ considerably from the existing line of<lb>work in matrix completion and matrix decomposition, since we develop an approach to recover the correct column<lb>space of the uncorrupted matrix, rather than the exact matrix itself.", "creator": "LaTeX with hyperref package"}}}