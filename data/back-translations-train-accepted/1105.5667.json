{"id": "1105.5667", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2011", "title": "Complexity of and Algorithms for Borda Manipulation", "abstract": "We prove that it is NP-hard for a coalition of two manipulators to compute how to manipulate the Borda voting rule. This resolves one of the last open problems in the computational complexity of manipulating common voting rules. Because of this NP-hardness, we treat computing a manipulation as an approximation problem where we try to minimize the number of manipulators. Based on ideas from bin packing and multiprocessor scheduling, we propose two new approximation methods to compute manipulations of the Borda rule. Experiments show that these methods significantly outperform the previous best known %existing approximation method. We are able to find optimal manipulations in almost all the randomly generated elections tested. Our results suggest that, whilst computing a manipulation of the Borda rule by a coalition is NP-hard, computational complexity may provide only a weak barrier against manipulation in practice.", "histories": [["v1", "Fri, 27 May 2011 23:11:40 GMT  (33kb,D)", "http://arxiv.org/abs/1105.5667v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jessica davies", "george katsirelos", "nina narodytska", "toby walsh"], "accepted": true, "id": "1105.5667"}, "pdf": {"name": "1105.5667.pdf", "metadata": {"source": "CRF", "title": "Complexity of and Algorithms for Borda Manipulation", "authors": ["Jessica Davies", "George Katsirelos", "Nina Narodytska", "Toby Walsh"], "emails": ["jdavies@cs.toronto.edu", "gkatsi@gmail.com", "ninan@cse.unsw.edu.au", "toby.walsh@nicta.com.au"], "sections": [{"heading": "Introduction", "text": "Choice is a simple mechanism for combining preferences in multi-agent systems. Unfortunately, results like Gibbrard-Sattertwhaite's prove that most voting rules can be manipulated, which means that it could pay off for agents to report their preferences incorrectly. An appealing way out of manipulation is the mathematical complexity (Bartholdi, Tovey, & Trick 1989) While manipulation can exist, is it mathematically too difficult to find it? Unfortunately, few voting rules in common use are difficult to manipulate with the addition of vote weights. Small voting rules that are difficult to manipulate include single transferable votes, 2nd order Copeland, rank pairs with a single manipulator and maxims (Bartholdi & Orlin 1991; Bartholdi, Tovey, & Trick 1989; Xia et al 2009)."}, {"heading": "Background", "text": "The Borda Rule is a scoring rule proposed in 1770 by Jean-Charles de Borda. Each voter lists the m-candidates. A candidate receives a rating of m \u2212 k for appearing in the lowest place. The candidate with the highest overall score wins the election. As is customary in literature, we break ties in favor of the coalition of manipulators. The Borda Rule is also used by many organizations and competitions, including the Robocup autonomous robot football contest, the X.Org Foundation, the Eurovision Song Contest, beginning with the election of the most valuable player in Major League Baseball. The Borda Rule or its variations are also used by many organizations and competitions, including the Robocup autonomous robot football contest, the X.Org Foundation, the Eurovision Song Contest, beginning with the election of the most valuable player in Major League Baseball. The Borda Rule has many good features. For example, it never elects the condoret (against) one candidate, against the other candidate."}, {"heading": "Complexity of manipulation", "text": "The unweighted manipulation problem of the coalition (UCM) is to decide whether there are votes for a coalition of unweighted manipulators + > n votes so that a particular candidate wins. As in (Bartholdi, Tovey, & Trick 1989), we assume that the manipulators have complete knowledge of the results given to the candidates from the votes of the non-manipulators. Theorem 1 Unweighted coalition manipulation for the Borda rule is NP-complete with two manipulators. Proof: Obviously, the problem lies in NP. A polynomic witness is simply the votes that make the chosen candidate the winner. To show the severity of the election, we reduce a permutation sum problem over n integrators, X1 to Xn, to a manipulation problem with n + 3 candidates. By Lemma 1 we can construct an election in which the non-manipulators cast votes to give the point vector: & lt.C (n)."}, {"heading": "Approximation methods", "text": "The NP hardness limits only the complexity of the worst case when calculating a manipulation. If there are enough manipulators, we can easily bring each candidate to victory. Next, we consider minimizing the number of manipulators required. For example, REVERSE is a simple approach proposed to calculate Borda manipulations (Zuckerman, Procaccia, & Rosenschein 2008).The method constructs the votes of each manipulator one by one: candidate d is placed first, and the remaining candidates are placed in reverse order of their current Borda results; the method constructs the manipulation of votes on until d wins. A long and complicated argument shows that REVERSE constructs a manipulation that uses at most one more manipulator is optimal. Example 1 Suppose we have 4 candidates, and the two non-manipulators have cast votes: 3 > 1 > 2 > 4 and 2 > VERSE: VERRESE: &ltRESE: &ltRESE: < R7: V3, V3, V3, V3, V3."}, {"heading": "Manipulation matrices", "text": "iD rf\u00fc ide rf\u00fc ide rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the"}, {"heading": "Largest Fit", "text": "Our first approach, LARGEST FIT, is inspired by the recycle bin and multi-processor planning. < Construction of an n by relaxed manipulation matrix is comparable to packing n objects intom bins with a limitation of the capacity of the different trash bins. In fact, the problem is even similar to planning nm-length jobs on n different processors with a limitation on the total memory of n different jobs ticking on each clock. Krause et al. have proposed a simple heuristics for this problem, which requires the most memory at the time with the maximum remaining memory space allocated to less than n jobs. (Krause, Shen, & Schwetman 1975) If there is no time, this job can be taken up, then the schedule is extended by one step."}, {"heading": "Average Fit", "text": "Our second approximation method, AVERAGE FIT, takes into account both the size of the gap and the number of points that need to be added to each column. If two columns have the same gap, we want to select the column that contains the fewest points. To achieve this, we look at the average score that is required to fill each gap: that is, the size of the gap divided by the number of points that need to be added to the column. AVERAGE FIT places the largest unallocated score in the column that can accommodate the largest average. AVERAGE FIT does not assign the largest unallocated score, but the largest such score that fits into the column. This avoids hitting d where it is not necessary. If two or more columns can accommodate the same average score, we tie either arbitrarily or on the column with the fewest points. The latter is more restricted and works best experimentally. It is possible, however, to construct the first cases, it is better."}, {"heading": "Theoretical properties", "text": "We show that LARGEST FIT is incomparable, as there is an infinite family of problems on which LARGEST FIT finds the optimal manipulation, but REVERSE does not, and vice versa. Full evidence for theorems 3-4 can be found in (Davies et al. 2010). Theorem 3 there is a problem with 2K + 2 candidates on which LARGEST FIT finds the optimal choice."}, {"heading": "Experimental results", "text": "In order to test the performance of these approximation methods in practice, we conducted several experiments. Our experimental setup is based on the (Walsh 2010): we generated either uniform random votes or votes drawn from a Polya-Eggenberger urns model. In the urns model, votes are randomly drawn from an urn and returned to the ballot box along with b other votes of the same type. This captures varying degrees of social homogeneity. We used b = m! so that there is a 50% probability that the second vote is the same as the first. In both models, we generated between 22 and 27 votes for different meters. We tested 1,000 cases at each problem size. To determine whether the manipulations returned were optimal, we used a simple satisfaction problem."}, {"heading": "Uniform Elections", "text": "We found optimal manipulation in 32,502 out of 32,679 unique, uniform elections within one hour. Results are shown in Figure 1. Both BIG FIT and AVERAGE FIT represent a significant improvement over REVERSE, solving 83% and 99% of cases to optimality. REVERSE solves fewer problems to optimality as the number of candidates increases, while AVERAGE FIT does not seem to suffer so much from this problem: AVERAGE FIT solved all 4 candidate instances and 98% of the 128 candidates. We find that in each of the 32,502 cases where REVERSE found an election manipulation, either AVERAGE FIT also or AVERAGE FIT found an election manipulation (n \u2212 1)."}, {"heading": "Urn Elections", "text": "We were able to find the optimal manipulation for 31529 of the 31530 unique ballot boxes within one hour. Figure 2 yields results. Reverse replaces approximately the same proportion of ballot boxes as unitary instances, 76%. However, the performance of GREAT FIT drops significantly. It is much worse than reversal if only 42% of instances are resolved to optimality. Similar pathological behavior with the correlated votes we saw in the proof of Theorem 4. The good performance of AVERAGE FIT is maintained. It found optimal manipulation in more than 99% of instances. It never lost reverse and was beaten in our experiments only in one case by GREAT FIT."}, {"heading": "Related problems", "text": "There is an interesting connection between the problem of finding a solution to the problem of the electoral rule and two other problems in discrete mathematics: the problem of finding a permutation matrix with limited diagnoses (PMRDS). - There are a number of reasons why it has come so far. - There are a number of reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far. - There are many reasons why it has come so far."}, {"heading": "Conclusions", "text": "We have demonstrated that it is difficult to manipulate the Borda rule with only two manipulators, thus solving one of the last outstanding questions regarding the computational complexity of unweighted coalition manipulations for common electoral rules. To assess whether such computational complexity is important in practice, we have proposed two new approaches that attempt to minimize the number of manipulators, based on ideas from container packaging and multi-processor design, and we have studied the performance of these methods both theoretically and empirically, and our best method finds optimal manipulation in almost all generated elections."}, {"heading": "Acknowledgements", "text": "Jessica Davies is supported by the National Research Council of Canada. George Katsirelos is supported by the ANR-UNLOC project ANR 08-BLAN-0289-01. Nina Narodytska and Toby Walsh are supported by the Australian Department of Broadband, Communications and the Digital Economy, ARC and the Asian Office of Aerospace Research and Development (AOARD-104123)."}, {"heading": "Appendix: Constructing votes with target sum", "text": "Our NP hardness test requires a technical problem that allows us to construct votes with a given target total.Lemma 1 Given the integers X1 to Xm, there are votes over m + 1 candidates and a constant C, so the final result of the candidate i Xi + C is for 1 \u2264 i \u2264 m and for the candidate m + 1 y, where y \u2264 C.Proof: Our proof is inspired by theorem 5.1 (Xia, Conitzer, & Procaccia 2010).We show how to increase the score of a candidate by 1 more than the other candidates, except for the last candidate whose score increases by 1 less. >. > 2 > m + 1For example, we want to increase the score of the candidate 1 by 1 more than that of the candidates 2 to m and by 2 more than that of the candidate m + 1. Consider the following pair of votes: 1 > m + 1 >.. > m \u2212 1 > m > m \u2212 1 >. >. > 2 > m + 1The score of the candidate 1 increases by m + 1, the repetition of the desired candidate, + 1 to the desired candidate + 1 and by the desired result of the desired candidate by 1 m \u2212 1."}], "references": [{"title": "Single transferable vote resists strategic voting. Social Choice and Welfare 8(4):341\u2013354", "author": ["Bartholdi", "J. Orlin 1991] Bartholdi", "J. Orlin"], "venue": null, "citeRegEx": "Bartholdi et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Bartholdi et al\\.", "year": 1991}, {"title": "The computational difficulty of manipulating an election", "author": ["Tovey Bartholdi", "J. Trick 1989] Bartholdi", "C. Tovey", "M. Trick"], "venue": "Social Choice and Welfare", "citeRegEx": "Bartholdi et al\\.,? \\Q1989\\E", "shortCiteRegEx": "Bartholdi et al\\.", "year": 1989}, {"title": "On the reconstruction of binary and permutation matrices under (binary) tomographic constraints", "author": ["Brunetti", "Lungo", "Del", "Gritzmann", "S. Vries 2008] Brunetti", "A. Lungo", "A. Del", "P. Gritzmann", "S. de Vries"], "venue": null, "citeRegEx": "Gritzmann et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Gritzmann et al\\.", "year": 2008}, {"title": "When are elections with few candidates hard to manipulate", "author": ["Sandholm Conitzer", "V. Lang 2007] Conitzer", "T. Sandholm", "J. Lang"], "venue": null, "citeRegEx": "Conitzer et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Conitzer et al\\.", "year": 2007}, {"title": "An empirical study of Borda manipulation", "author": ["Davies"], "venue": null, "citeRegEx": "Davies,? \\Q2010\\E", "shortCiteRegEx": "Davies", "year": 2010}, {"title": "Analysis of several task-scheduling algorithms for a model of multiprogramming computer systems. JACM 22(4):522\u2013550", "author": ["Shen Krause", "K.L. Schwetman 1975] Krause", "V.Y. Shen", "H.D. Schwetman"], "venue": null, "citeRegEx": "Krause et al\\.,? \\Q1975\\E", "shortCiteRegEx": "Krause et al\\.", "year": 1975}, {"title": "An empirical study of the manipulability of single transferable voting", "author": ["T. Walsh"], "venue": "In Proc. of the 19th European Conf. on Artificial Intelligence", "citeRegEx": "Walsh,? \\Q2010\\E", "shortCiteRegEx": "Walsh", "year": 2010}, {"title": "Complexity of unweighted coalitional manipulation under some common voting rules", "author": ["Xia"], "venue": "In Proc. of 21st IJCAI,", "citeRegEx": "Xia,? \\Q2009\\E", "shortCiteRegEx": "Xia", "year": 2009}, {"title": "A scheduling approach to coalitional manipulation", "author": ["Conitzer Xia", "L. Procaccia 2010] Xia", "V. Conitzer", "A. Procaccia"], "venue": "Proc. 11th ACM Conference on Electronic Commerce", "citeRegEx": "Xia et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Xia et al\\.", "year": 2010}, {"title": "Minimizing Makespan in a TwoMachine Flow Shop with Delays and Unit-Time Operations is NP-Hard", "author": ["J.K. Lenstra"], "venue": "J. Scheduling", "citeRegEx": "Lenstra,? \\Q2004\\E", "shortCiteRegEx": "Lenstra", "year": 2004}, {"title": "Algorithms for the coalitional manipulation problem", "author": ["Procaccia Zuckerman", "M. Rosenschein 2008] Zuckerman", "A. Procaccia", "J. Rosenschein"], "venue": "Artificial Intelligence", "citeRegEx": "Zuckerman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Zuckerman et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 7, "context": "The small set of voting rules that are NP-hard to manipulate with unweighted votes includes single transferable voting, 2nd order Copeland, ranked pairs (all with a single manipulator), and maximin (with two manipulators) (Bartholdi & Orlin 1991; Bartholdi, Tovey, & Trick 1989; Xia et al. 2009). Borda is probably the only commonly used voting rule where the computational complexity of unweighted manipulation remains open. Xia, Conitzer, & Procaccia (2010) observe that:", "startOffset": 279, "endOffset": 460}, {"referenceID": 6, "context": "Our experimental setup is based on that in (Walsh 2010).", "startOffset": 43, "endOffset": 55}], "year": 2011, "abstractText": "We prove that it is NP-hard for a coalition of two manipulators to compute how to manipulate the Borda voting rule. This resolves one of the last open problems in the computational complexity of manipulating common voting rules. Because of this NP-hardness, we treat computing a manipulation as an approximation problem where we try to minimize the number of manipulators. Based on ideas from bin packing and multiprocessor scheduling, we propose two new approximation methods to compute manipulations of the Borda rule. Experiments show that these methods significantly outperform the previous best known approximation method. We are able to find optimal manipulations in almost all the randomly generated elections tested. Our results suggest that, whilst computing a manipulation of the Borda rule by a coalition is NP-hard, computational complexity may provide only a weak barrier against manipulation in practice.", "creator": "LaTeX with hyperref package"}}}