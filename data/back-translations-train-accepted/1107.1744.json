{"id": "1107.1744", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Jul-2011", "title": "Stochastic convex optimization with bandit feedback", "abstract": "This paper addresses the problem of minimizing a convex, Lipschitz function $f$ over a convex, compact set $\\xset$ under a stochastic bandit feedback model. In this model, the algorithm is allowed to observed noisy realizations of the function value $f(x)$ at any query point $x \\in \\xset$. The quantity of interest is regret of the algorithm, which is the sum of the function values at algorithm's query points minus the optimal function value. We demonstrate a generalization of the ellipsoid algorithm that incurs $\\otil(\\poly(d)\\sqrt{T})$ regret. Since any algorithm has regret at least $\\Omega(\\sqrt{T})$ on this problem, our algorithm is optimal in terms of the scaling with $T$.", "histories": [["v1", "Fri, 8 Jul 2011 22:18:05 GMT  (525kb,D)", "https://arxiv.org/abs/1107.1744v1", null], ["v2", "Sat, 8 Oct 2011 06:06:43 GMT  (526kb,D)", "http://arxiv.org/abs/1107.1744v2", null]], "reviews": [], "SUBJECTS": "math.OC cs.LG cs.SY", "authors": ["alekh agarwal", "dean p foster", "daniel j hsu", "sham m kakade", "alexander rakhlin"], "accepted": true, "id": "1107.1744"}, "pdf": {"name": "1107.1744.pdf", "metadata": {"source": "CRF", "title": "Stochastic convex optimization with bandit feedback", "authors": ["Alekh Agarwal", "Dean P. Foster", "Daniel Hsu", "Sham M. Kakade", "Alexander Rakhlin"], "emails": [], "sections": [{"heading": null, "text": "\u221a T). Since every algorithm shows remorse for this problem, our algorithm is optimal in terms of scaling with T."}, {"heading": "1 Introduction", "text": "The classic multi-armed bandit problem, formulated by Robbins in 1952, is probably the most basic setting of sequential decision-making under uncertainty. Therefore, after selecting one of the available actions (\"arms\"), the decision-maker is forced to observe an i.i.d. realization of the costs of the arm drawn after a distribution related to the arm. The performance of an algorithmic rule (algorithm) in the sequential selection of weapons is measured by regret, which is the difference between the expected cost of the chosen actions compared to the expected cost of the best action. Various extensions of the classical formulation have received much attention in recent years. In particular, research focuses on the development of optimal and efficient algorithms for multi-armed bandits with large or even infinite scope for action, based on various assumptions about the structure of the costs (rewards)."}, {"heading": "2 Related work", "text": "The method used by the author, however, is a variant of the classic Kiefer-Wolfowitz method [12] for estimating an optimal point. The result assumes a continuous second derivation of the mean function that does not disappear, while the first derived method in Auer et al. [3] for a one-dimensional non-convex problem with a limited number of optima. The result assumes that the mean function does not disappear, while the first derived method will be zero at the optima. The method is based on discrediting the intervals and not on exploiting the excesses. Yu and Mannor [19] have recently investigated unimodal bandits, but they only consider one-dimensional and graphically structured settings."}, {"heading": "3 Outline of our approach", "text": "In fact, it is as if most of us are able to survive ourselves if we do not put ourselves in the position in which we find ourselves. (...) It is not as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves. (...) It is as if we are able to survive ourselves."}, {"heading": "4 One-dimensional case", "text": "We start by specializing the setting to 1-dimensional to illustrate some of the key ideas, including the center device. Without losing universality, we assume that the domain is X = [0, 1] and f (x) [0, 1] (the latter can be achieved by pinning f (x \u0445) = 0, since f is 1-Lipschitz)."}, {"heading": "4.1 Algorithm description", "text": "In each epoch, the algorithm aims to discard a portion of the workable region that should contain only suboptimal points. To do this, the algorithm repeatedly queries f at three different points in the workable region. Each epoch is further subdivided into rounds in which we query the function (2nd log T) / 2nd time in round i at each of the points. By Hoeffding's inequality, this implies that we know the workable value within the highly probable region. The value is halved in each round so that the algorithm can stop the epoch with the minimum number of queries sufficient to resolve the difference between the workable values at two of the xl, xc."}, {"heading": "4.2 Analysis", "text": "The analysis of algorithm 1 is based on the functional values contained in the confidence intervals we construct in each round of each epoch. To avoid having probabilities during our analysis, we define an event E where in each epoch \u03c4, and each round i, f (x), [LB\u03b3i (x), UB\u03b3i (x)] for x {xl, xc, xr}. We will perform the rest of the analysis at any time tied to E and limit the probability of Ec at the end. The following theorem limits the regret generated by algorithm 1. We note that the regret would be maintained in relation to the points queried by the algorithm. \u2212 The sequence of queries is intangible for regret. Theorem 1 (Reset for algorithm 1)."}, {"heading": "4.2.1 Bounding the regret in one epoch", "text": "We start by showing that any reduction in the world of work is possible after each epoch has never discarded nearly optimal points. Lemma 1. If the epoch ends in round i, then the interval time for all epochs is so large that each epoch ends in case 1. This means that either LB9 (xl) or LB9 (xr), that LB9 (xr) or LB9 (xl), that LB9 (xr), that LB9 (xl) or LB9 (xr), that LB9 (xr), that LB9 (xr), that LB9 (xr), that LB9 (xl) or that LB9 (xl), that we (xl), that (xl), that (xl), that (xl), that (xl)."}, {"heading": "4.2.2 Bounding the number of epochs", "text": "In order to determine the final limit of the general regret, we have limited the number of epochs that can occur before working hours. The final limit of regret is simply the product of the number of epochs and the regret that has arisen in each epoch. The proof is based on the observation that the total number of epochs that the algorithm 1 performs is borderline. In fact, if the algorithm i (T / 2) a log T - 1 / 2, step 7 of the algorithm would require more than T queries to get the desired confidence intervals in this round."}, {"heading": "4.2.3 Proof of Theorem 1", "text": "The statement of the theorem follows by combining the epochal limit of remorse of Lemon 3 with the above limit for the number of epochs and shows that all these limits exist with a sufficiently high probability. Lemon 3 implies that the regret that has arisen in each epoch is at most216\u03c3 log T \u03b3i \u00b2 \u2264 216\u03c3 log T \u03b3min \u2264 216 \u043c log T. Thus, the total regret that has arisen in all epochs is at most216 \u221a T\u03c3 log T \u00b7 12 log4 / 3 (T8\u03c3 log T). Finally, let us remember that the entire analysis has so far been conditioned by event E. In which all confidence intervals constructed by us contain the functional values. We would now like to control the probability P (Ec). Let us consider a fixed round and a fixed point x. Then, after we have queried the entire epoch, Hoding's inequality results that P (f (x) is bound for a fixed (Epox), that we are all epochs."}, {"heading": "5 Algorithm for optimization in higher dimensions", "text": "We move on to the representation of the general algorithm that works in d-dimensions. The natural approach would be to try and generalize that algorithm 1 works in multiple dimensions. However, the obvious extension requires the construction of a cover of the unit sphere and the query of the function along each direction so that we know the behavior of the function along each direction. While such an approach leads to regret that the dependence on the dimension d is exponential both in regrets and in runtime. The same problem was encountered in the scenario of zero order of optimization by Nemirovski and Yudin [15], and they use a clever construction to capture all directions in polynomically many queries. We define a pyramid to be a d-dimensional polyhedron defined by d + 1 points; d points form a d-dimensional regular polygon that is the base of the pyramid, and the axis lies above the graphical level containing an illustration."}, {"heading": "6 Analysis", "text": "We start by showing the correctness of the algorithm and then proceed with the repentance analysis. In order to avoid having probabilities during our entire analysis, we define an event E in which for each epoch \u03c4 and for each round i, f (x) [LB\u03b3i (x), UB\u03b3i (x)] is scanned for each point x in the round. We will condition the rest of the analysis to E and limit the probability of Ec at the end. We also assume that the algorithm is executed with the settings \u0432 (\u03b3) = (6c1d 4c22 + 3) \u03b3 and \u0432 (\u03b3) = (6c1d 4c22 + 5) \u03b3, (4) and the constants c1 \u2265 64, c2 \u2264 32."}, {"heading": "6.1 Correctness of the algorithm", "text": "To prove the correctness of our algorithms, we just need to show further that if the algorithm to work on case 1 (b) progresses, we will not discard all approximate optimizations of f by error and show that the step of increase is actually correct, as claimed. These two assertions will be established in the next pair of lemmas. Let us assume that the removal of the vertex of f is constructed by errors in the epoch (1b) in the middle of B (rp) at least rp / d. This assumption will be established in later.Lemma 5. Let us construct the distance from the top of the epoch terminated by case (1b) as the lowest CI of the last pyramid in the epoch, and assume the distance from the top of B (rp)."}, {"heading": "6.2 Regret analysis", "text": "Suppose algorithm 2 is set to c1 \u2265 64, c2 \u2264 1 / 32 and the parameters \u0394\u03c4 (\u03b3) = (6c1d 4c22 + 3) \u03b3 and \u0445 \u03c4 \u03c4 (\u03b3) = (6c1d 4c22 + 5) \u03b3.Then, with a probability of at least 1 \u2212 1 / T, the net regret caused by the algorithm is limited by 768d3\u03c3 T log2 T (2d2 log dc22 + 1) (4d7c1 c32 + d (d + 1) c2) (4c1d 4 c22 + 11).Comments: The presence of T in algorithm 2 and theorem 2 can be addressed again with a duplication argument. As before, theorem 2 is optimal in the dependence on T. The great dependence on d is also seen in Nemirovski and Yudine [15], which perform a microcosmetic examination of the 7-fold case in an unspecific question and then improve the whole isonnoal analysis."}, {"heading": "6.2.1 Bounding the regret incurred in one round", "text": "This problem highlights the importance of evaluating the function in the center of the pyramid, a step that was not necessary in the framework of Nemirovski and Yudin (15). We also remember that the pyramids constructed by the algorithm are such that the distance from the center to the base is at least r.2 / d 3.Lemma 7. Supply of the algorithm reaches case 2 (a) in round i of the epochal plane, and assume that x * B (R.2), where x \u00b2 is the minimizer of the current pyramid and that x \u00b2 is the current pyramid."}, {"heading": "6.2.2 Bound on the number of epochs", "text": "To consider the number of epochs, we must first show that the cone-cutting step discards only a sizeable portion of the amount that we have listed in the epoch. Let's remember that we need to understand the ratio of the volumes of the epochs in order to understand the amount of volume that is discarded in each epoch. Let's be the smallest number that contains epochs, and let's understand the smallest number of epochs that include epochs. Let's be the smallest number that include epochs. Let's be the smallest number that include epochs, and let's be the smallest number of epochs that include epochs. This problem is analogous to the volume reduction that arises in the analysis of the ellipsoid method for convex programming with a gradient oracle. Let's start by arguing that it is sufficient to understand the number of epochs with a set of half epochs."}, {"heading": "7 Discussion", "text": "The algorithm builds on the techniques of Nemirovski and Yudin [15], which are based on the optimization of the convex order. The most important contribution of our work is to extend their algorithm to a low-noise environment, so that a low regret about the query of the points can be guaranteed. The new algorithm relies decisively on a center device, which shows the crucial differences between a minimization of regret and an optimization guarantee. Our algorithm has the optimal scaling of the regret O (\u221a T) up to logarithmic factors. However, our regret guarantee has a fairly large dimension dependence. As noted in Theorem 2, this is not surprising, since the algorithm of Nemirovski and Yudin [15] exhibits a large dimension dependence even in a noiseless case. Random approaches [5] have been successful in improving dimension scaling in the noiseless case, as the Nemirovski scenario is interesting for one of the scenario of Yudin [15]."}, {"heading": "Acknowledgments", "text": "Some of this work was done while AA and DH were at the University of Pennsylvania. AA was partially supported by MSR and Google PhD scholarships while this work was done. DH was partially supported by grants AFOSR FA9550-09-1-0425, NSF IIS-1016061 and NSF IIS-713540."}, {"heading": "A Properties of pyramid constructions", "text": "In this case, we have assumed that the initial simplicity is contained in B (rp), where rp) = Rp / (c1d).Lemma 15. Let's be the k-th pyramid constructed in each round of the epoch. 1. The distance from the center of B (rp) to the top of B (rp) is rp / (c1d).2 The distance from the top of the epoch is constructed in each round of the epoch. 1. The distance from the center of B (rp) to the top of B (rp) is rp / s."}], "references": [], "referenceMentions": [], "year": 2011, "abstractText": "<lb>This paper addresses the problem of minimizing a convex, Lipschitz function f over a convex, compact<lb>set X under a stochastic bandit feedback model. In this model, the algorithm is allowed to observe noisy<lb>realizations of the function value f(x) at any query point x \u2208 X . The quantity of interest is the regret<lb>of the algorithm, which is the sum of the function values at algorithm\u2019s query points minus the optimal<lb>function value. We demonstrate a generalization of the ellipsoid algorithm that incurs \u00d5(poly(d)<lb>\u221a<lb>T )<lb>regret. Since any algorithm has regret at least \u03a9(<lb>\u221a<lb>T ) on this problem, our algorithm is optimal in terms<lb>of the scaling with T .", "creator": "LaTeX with hyperref package"}}}