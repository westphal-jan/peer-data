{"id": "1207.6713", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Jul-2012", "title": "Model-Lite Case-Based Planning", "abstract": "There is increasing awareness in the planning community that depending on complete models impedes the applicability of planning technology in many real world domains where the burden of specifying complete domain models is too high. In this paper, we consider a novel solution for this challenge that combines generative planning on incomplete domain models with a library of plan cases that are known to be correct. While this was arguably the original motivation for case-based planning, most existing case-based planners assume (and depend on) from-scratch planners that work on complete domain models. In contrast, our approach views the plan generated with respect to the incomplete model as a \"skeletal plan\" and augments it with directed mining of plan fragments from library cases. We will present the details of our approach and present an empirical evaluation of our method in comparison to a state-of-the-art case-based planner that depends on complete domain models.", "histories": [["v1", "Sat, 28 Jul 2012 17:00:01 GMT  (193kb)", "http://arxiv.org/abs/1207.6713v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["hankz hankui zhuo", "tuan anh nguyen 0001", "subbarao kambhampati"], "accepted": true, "id": "1207.6713"}, "pdf": {"name": "1207.6713.pdf", "metadata": {"source": "CRF", "title": "Model-Lite Case-Based Planning", "authors": ["Hankz Hankui Zhuo", "Tuan Nguyen"], "emails": ["zhuohank@mail.sysu.edu.cn", "rao@asu.edu", "natuan@asu.edu"], "sections": [{"heading": null, "text": "ar Xiv: 120 7,67 13v1 [cs.AI] 28 Jul 2 012"}, {"heading": "Introduction", "text": "Most planning work assumes that complete domain models are given as input to synthesize the plans."}, {"heading": "Related Work", "text": "As the title implies, our work relates to both case-based planning and model-based planning. As mentioned in the introduction, our work most closely resembles the spirit of original case-based planning systems such as CHEF (Hammond 1989) and PLEXUS (Alterman 1986), which viewed the case library as an expanded representation of domain knowledge. CHEF's use of case-change rules, for example, serves a similar purpose to our use of incomplete domain models. However, our work differs from CHEF in two ways: First, unlike us, CHEF summarizes access to a (more complete) domain model during its debugging phase. Second, CHEF seeks to adapt a specific case to the existing problem, while our work expands a skeletal plan with relevant plan fragments derived from multiple library plans. Post-CHEF case-based planning largely focuses on access to a racted model-based, complete one."}, {"heading": "Problem Definition", "text": "In fact, it is a plan based on a series of models of action and a model of action based on a sequence of actions (or a plan) defined by (a1, a2,...) in which a model of action is defined, such as (a), ADD (a), DEL (a), DEL (a), A), D (a), D (a), D (a), D (a), D (a)."}, {"heading": "Generate causal pairs", "text": "Considering the initial state s0 and the target g, we create a series of causal pairs. A causal pair is an action pair < ai, aj > that ai provides one or more conditions for aj. The method of generating l becomes in algorithm 2. Note that in step 3 of algorithm 2 l \u2032 is an empty sentence if p cannot be achieved. In other words, skeletal plans cannot provide guidance for some goals at the highest level. Results: a set of causal pairs l is contemplated 2http: / / www.cs.toronto.edu / aips2000 / Algorithm 2 Generate causal pairinput: initial state s0, goal g, incomplete action models A. Output: a set of causal pairs l.1: l = \u2205; 2: for each statement p-g do 3: generate a plan designated by a set of causal pairs. (< 4: l = l-solution) see the final example for D (end of the problem)."}, {"heading": "Creating Plan Fragments", "text": "In the process \"build fragments\" of Algorithm 1, i.e. (\"We would like to build a series of plan fragments.\" (< s0, g > of P \"and < si0, gi > of a plan example pi.\" In other words, a figure, designated by m, consists of a series of plan examples {< o \u00b2, o >}, where o \"is an object (i.e., an instantiated parameter) of plan example pi, and o is an object of P.\" We can apply a mapping of m to a plan example pi, the result of which is designated by pi. \"m,\" so that si \"m and s0\" are common propositions, also for gi and g. \"We measure a figure m by the number of propositions divided by initial states si0 | m and s0, and goals gi and g. Wedenote the number of common propositions by (pi, m)."}, {"heading": "Mining Frequent Plan Fragments", "text": "In step 3 of algorithm 1, we aim to build a series of frequent plan fragments. We use the method \"freq mining =.\" Given the fact that there will be no function that perfectly maps the two planning problems, our intuition is that a plan fragment, which occurs frequently in various plan examples, increases our confidence in the quality of the mapping between the objects involved and the success of the reuse of the fragment as part of a plan for solving the problem to be solved. So we borrow the concept of frequent patterns defined in (Zaki 2001; Pei et al. 2004) to use our frequent plan fragments. The problem of degradation sequential patterns can be described as follows: Let me = {i1, i2,."}, {"heading": "Generating Final Solution", "text": "In steps 4-6 of algorithm 1, we create the final solution with frequent plan fragments generated by step 3; we address the procedure we can decouple from algorithm 3. (If a plan fragment contains an action (or both actions) of a causal pair, we can append the plan fragment to the final solution and remove all causal pairs fulfilled by the new psol; and then recursively proceed until the solution is found, i.e., l = causal actions are found, i.e. the procedure returns incorrectly (l 6).Algorithm 3 concat frag (psol, F, P); input: a plan psol, a set of causal pairs l, a set of causal pairs, and no solution is found."}, {"heading": "Experiments", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Dataset and Criterion", "text": "We evaluate our ML-CBP algorithm in three planning areas: blocks2, driverlog3 and depots3. In each domain, with a classical planner such as FF planner4, we generate between 40 and 200 planning examples and solve 100 new planning problems based on different percentages of completeness of domain models. For example, we use 45 to indicate that one predicate is missing from five predicates of the domain. We define the accuracy of our ML-CBP algorithm as a percentage of correctly solved planning problems. Specifically, we use ML-CBP to generate a solution to a planning problem and execute the solution from the starting state to the finish. If the solution can be successfully executed from the starting state and the goal is achieved, then the number of correctly solved problems increases by one.3http: / / planning.strath.ac.uk / competition / 4http / / members.deri.at / joer.gh / problems, the NDL models can increase the accuracy of the MBP models that are available."}, {"heading": "Experimental Results", "text": "We would like to test the number of plan examples in the following aspects: (1) the change in accuracy with respect to the different number of plan examples; (2) the change in accuracy with respect to different percentages of completeness; (3) the change in accuracy with respect to different support thresholds; (4) the average number of plan lengths; (5) the term of ML-CBP is the term of ML-CBP algorithm with respect to the state-of-the-art CBP (Case Based Planning) system OAKPlan (Serina 2010). OAKPlan requires a complete domain model and a case library as input for a new planning problem. To make OAKPlan comparable to our ML-CBP algorithm, we fed an incomplete domain model to OAKPlan that was the input of ML-CBP models instead of a complete domain control."}, {"heading": "Conclusion", "text": "In this thesis, we introduced a system called ML-CBP for model-based case-based planning. ML-CBP is able to integrate knowledge from incomplete domain models and a library of plan examples to find solutions to new planning problems. By using the incomplete domain models, we first create a skeletal plan based on standard planners and then mine sequential information from plan examples to eventually generate solutions. Our experiments show that ML-CBP is effective in three benchmark domains compared to case-based planners based on complete domain models. Therefore, our approach lends itself well to scenarios where the planner is limited to incomplete model-based domain models, but has access to a library of plans that are correct in terms of complete (but unknown) domain theory. Our work can be considered both as a contribution to model-based planning, which is interested in plan synthesis among incomplete domain models, as well as a presentation of original planning aimed at an expanded vision of the case."}], "references": [{"title": "E", "author": ["Amir"], "venue": "2005. Learning partially observable deterministic action models. In Proceedings of IJCAI, 1433\u2013", "citeRegEx": "Amir 2005", "shortCiteRegEx": null, "year": 1439}, {"title": "Automated composition of web services via planning in asynchronous domains", "author": ["Pistore Bertoli", "P. Traverso 2010] Bertoli", "M. Pistore", "P. Traverso"], "venue": "Artificial Intelligence Journal 174(3-4):316\u2013361", "citeRegEx": "Bertoli et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bertoli et al\\.", "year": 2010}, {"title": "Automatically composedworkflows for grid environments", "author": ["Deelman Blythe", "J. Gil 2004] Blythe", "E. Deelman", "Y. Gil"], "venue": "IEEE Intelligent Systems", "citeRegEx": "Blythe et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Blythe et al\\.", "year": 2004}, {"title": "and Weber", "author": ["D. Bryce"], "venue": "C.", "citeRegEx": "Bryce and Weber 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "N", "author": ["R. Fikes", "Nilsson"], "venue": "J.", "citeRegEx": "Fikes and Nilsson 1971", "shortCiteRegEx": null, "year": 1971}, {"title": "K", "author": ["Hammond"], "venue": "J.", "citeRegEx": "Hammond 1989", "shortCiteRegEx": null, "year": 1989}, {"title": "Web service composition as planning, revisited: In between background theoriesandinitial state uncertainty", "author": ["Bertoli Hoffmann", "J. Pistore 2007] Hoffmann", "P. Bertoli", "M. Pistore"], "venue": "Proceedings of AAAI", "citeRegEx": "Hoffmann et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Hoffmann et al\\.", "year": 2007}, {"title": "and Kambhampati", "author": ["L.H. Ihrig"], "venue": "S.", "citeRegEx": "Ihrig and Kambhampati 1997", "shortCiteRegEx": null, "year": 1997}, {"title": "J", "author": ["S. Kambhampati", "Hendler"], "venue": "A.", "citeRegEx": "Kambhampati and Hendler 1992", "shortCiteRegEx": null, "year": 1992}, {"title": "M", "author": ["T.A. Nguyen", "S. Kambhampati", "Do"], "venue": "B.", "citeRegEx": "Nguyen. Kambhampati. and Do 2010", "shortCiteRegEx": null, "year": 2010}, {"title": "Mining sequential patterns by pattern-growth: The prefixspan approach", "author": ["Pei"], "venue": "IEEE Transactions on Knowledge and Data Engineering", "citeRegEx": "Pei,? \\Q2004\\E", "shortCiteRegEx": "Pei", "year": 2004}, {"title": "I", "author": ["Serina"], "venue": "2010. Kernel functions for casebased planning. Artificial Intelligence 174(16-17):1369\u2013", "citeRegEx": "Serina 2010", "shortCiteRegEx": null, "year": 1406}, {"title": "A", "author": ["R.S. Sutton", "Barto"], "venue": "G.", "citeRegEx": "Sutton and Barto 1998", "shortCiteRegEx": null, "year": 1998}, {"title": "Learning action models from plan examples using weighted MAX-SAT", "author": ["Wu Yang", "Q. Jiang 2007] Yang", "K. Wu", "Y. Jiang"], "venue": "Artificial Intelligence Journal", "citeRegEx": "Yang et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2007}, {"title": "M", "author": ["Zaki"], "venue": "J.", "citeRegEx": "Zaki 2001", "shortCiteRegEx": null, "year": 2001}, {"title": "L", "author": ["L.S. Zettlemoyer", "H.M. Pasula", "Kaelbling"], "venue": "P.", "citeRegEx": "Zettlemoyer. Pasula. and Kaelbling 2005", "shortCiteRegEx": null, "year": 2005}, {"title": "L", "author": ["H.H. Zhuo", "Q. Yang", "D.H. Hu", "Li"], "venue": "2010. Learning complex action models with quantifiers and implications. Artificial Intelligence 174(18):1540 \u2013", "citeRegEx": "Zhuo et al. 2010", "shortCiteRegEx": null, "year": 1569}], "referenceMentions": [], "year": 2012, "abstractText": "There is increasing awareness in the planning community that depending on complete models impedes the applicability of planning technology in many real world domains where the burden of specifying complete domain models is too high. In this paper, we consider a novel solution for this challenge that combines generative planning on incomplete domain models with a library of plan cases that are known to be correct. While this was arguably the original motivation for casebased planning, most existing case-based planners assume (and depend on) from-scratch planners that work on complete domain models. In contrast, our approach views the plan generated with respect to the incomplete model as a \u201cskeletal plan\u201d and augments it with directed mining of plan fragments from library cases. We will present the details of our approach and present an empirical evaluation of our method in comparison to a state-of-the-art case-based planner that depends on complete domain models.", "creator": "LaTeX with hyperref package"}}}