{"id": "1208.1692", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Aug-2012", "title": "On Finding Optimal Polytrees", "abstract": "Inferring probabilistic networks from data is a notoriously difficult task. Under various goodness-of-fit measures, finding an optimal network is NP-hard, even if restricted to polytrees of bounded in-degree. Polynomial-time algorithms are known only for rare special cases, perhaps most notably for branchings, that is, polytrees in which the in-degree of every node is at most one. Here, we study the complexity of finding an optimal polytree that can be turned into a branching by deleting some number of arcs or nodes, treated as a parameter.", "histories": [["v1", "Wed, 8 Aug 2012 15:32:42 GMT  (18kb)", "https://arxiv.org/abs/1208.1692v1", null], ["v2", "Fri, 10 Aug 2012 13:36:15 GMT  (18kb)", "http://arxiv.org/abs/1208.1692v2", "(author's self-archived copy)"]], "reviews": [], "SUBJECTS": "cs.DS cs.AI cs.CC", "authors": ["serge gaspers", "mikko koivisto", "mathieu liedloff", "sebastian ordyniak", "stefan szeider"], "accepted": true, "id": "1208.1692"}, "pdf": {"name": "1208.1692.pdf", "metadata": {"source": "CRF", "title": "On Finding Optimal Polytrees", "authors": ["Serge Gaspers"], "emails": ["gaspers@kr.tuwien.ac.at", "mikko.koivisto@cs.helsinki.fi", "mathieu.liedloff@univ-orleans.fr", "ordyniak@kr.tuwien.ac.at", "stefan@szeider.net"], "sections": [{"heading": null, "text": "ar Xiv: 120 8.16 92v2 [cs.DS] 1"}, {"heading": "1 Introduction", "text": "In fact, it is so that we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in which we are in a time, in which we are in which we are in which we are in which we are in a time, in which we are in which we are in a time, in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we in which we are in which we are in which we are in which we in which we are in which we are in which we in which we are in which we are in which we in which we are in which we are in which we are in which we in which we in which we are in which we in which we are in which we in which we are in which we in which we in which we are in which we in which we are in which we in which we are in which we in which we in which we in which we are in which we in which we are in which we in which we are in which we in which we are in which we in which we in which we are in which we in which we are in which we are in which we in which we are in which we in which we are in which we are in which we in which we are in which we are in which we in which we in which we are in which we in which we are in which we in which we are in which we are in which we are in which we in which we are in which we are in which we in which we are in which we are in which we in which we are in which we are in which we are in which we in which we are in which we are in which we are in which we are in which we in which we are in which we are in which we in which we are in which we in which we are"}, {"heading": "4 Fixed-parameter tractability", "text": "Theorem 5 shows that the k-branching problem can be solved in \"non-uniform polynomial time,\" as the sequence of the polynomial time bound depends on k. In this section we will examine whether we can \"get out of the exponent\" and create a uniform polynomial time algorithm.The framework of a parameterized complexity Downey and Fellows (1999) provides the appropriate tools and methods for such an investigation, as it allows us to distinguish between uniform and non-uniform polynomial time tractability in relation to a parameter. An instance of a parameterized problem is a pair (I, k), where I is the main part and the method, as the latter is usually a non-negative integer. A parameterized problem is tractable parameter when there is a computable function f and a constant c."}, {"heading": "5 Concluding remarks", "text": "We have studied a natural approach to extending the well-known efficient algorithms for branching to polytrees, which differ from branching in just a few additional arcs. At first glance, one might expect this to be achievable simply by guessing the additional arcs and solving the remaining problem for branching. However, we do not know if such a reduction is possible in the narrow sense. In fact, we had to take a slight detour and modify the two matroids in a way that guarantees control for the interactions caused by the presence of high-in-degree nodes. As a result, we obtained an algorithm that runs polynomially in the input size: namely, there can be more than (n \u2212 1k + 1) relevant input values for each of the n nodes; therefore, the runtime of our algorithm is less than cubic in the input size that runs polynomially in the input size."}, {"heading": "Acknowledgments", "text": "Serge Gaspers, Sebastian Ordyniak and Stefan Szeider confirm the support of the European Research Council (COMPLEX REASON, 239962), Serge Gaspers the support of the Australian Research Council (DE120101761), Mikko Koivisto the support of the Finnish Academy (Grant 125637) and Mathieu Liedloff the support of the French Agence Nationale de la Recherche (ANR AGAPE ANR-09-BLAN-0159-03)."}], "references": [{"title": "An algorithm to construct a minimum directed spanning tree in a directed network", "author": ["F.C. Bock"], "venue": "Avi-Itzak, B., ed., Developments in Operations Research. Gordon and Breach. 29\u201344.", "citeRegEx": "Bock,? 1971", "shortCiteRegEx": "Bock", "year": 1971}, {"title": "Two algorithms for weighted matroid intersection", "author": ["C. Brezovec", "G. Cornu\u00e9jols", "F. Glover"], "venue": "Mathematical Programming 36(1):39\u201353.", "citeRegEx": "Brezovec et al\\.,? 1986", "shortCiteRegEx": "Brezovec et al\\.", "year": 1986}, {"title": "A note on finding optimum branchings", "author": ["P.M. Camerini", "L. Fratta", "F. Maffioli"], "venue": "Networks 9:309\u2013312.", "citeRegEx": "Camerini et al\\.,? 1979", "shortCiteRegEx": "Camerini et al\\.", "year": 1979}, {"title": "A theorem on trees", "author": ["A. Cayley"], "venue": "Quart. J. Math. 23:376\u2013378.", "citeRegEx": "Cayley,? 1889", "shortCiteRegEx": "Cayley", "year": 1889}, {"title": "A transformational characterization of equivalent Bayesian network structures", "author": ["D.M. Chickering"], "venue": "Uncertainty in artificial intelligence (UAI 1995).", "citeRegEx": "Chickering,? 1995", "shortCiteRegEx": "Chickering", "year": 1995}, {"title": "Learning Bayesian networks is NP-complete", "author": ["D.M. Chickering"], "venue": "Learning from data (Fort Lauderdale, FL, 1995), volume 112 of Lecture Notes in Statist. Springer Verlag. 121\u2013130.", "citeRegEx": "Chickering,? 1996", "shortCiteRegEx": "Chickering", "year": 1996}, {"title": "On the shortest arborescence of a directed graph", "author": ["Y.J. Chu", "T.H. Liu"], "venue": "Science Sinica 14:1396\u20131400.", "citeRegEx": "Chu and Liu,? 1965", "shortCiteRegEx": "Chu and Liu", "year": 1965}, {"title": "Learning polytrees", "author": ["S. Dasgupta"], "venue": "Uncertainty in Artificial Intelligence (UAI 1999).", "citeRegEx": "Dasgupta,? 1999", "shortCiteRegEx": "Dasgupta", "year": 1999}, {"title": "Parameterized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": "Monographs in Computer Science. New York: Springer Verlag.", "citeRegEx": "Downey and Fellows,? 1999", "shortCiteRegEx": "Downey and Fellows", "year": 1999}, {"title": "Optimum branchings", "author": ["J.R. Edmonds"], "venue": "Journal of Research of the National Bureau of Standards 71B(4):233\u2013240.", "citeRegEx": "Edmonds,? 1967", "shortCiteRegEx": "Edmonds", "year": 1967}, {"title": "Submodular functions, matroids and certain polyhedra", "author": ["J.R. Edmonds"], "venue": "Combinatorial Structures and their Applications, 69\u201387.", "citeRegEx": "Edmonds,? 1970", "shortCiteRegEx": "Edmonds", "year": 1970}, {"title": "Matroid intersection", "author": ["J.R. Edmonds"], "venue": "Annals of Discrete Mathematics 4:39\u201349.", "citeRegEx": "Edmonds,? 1979", "shortCiteRegEx": "Edmonds", "year": 1979}, {"title": "Parameterized Complexity Theory, volume XIV of Texts in Theoretical Computer Science", "author": ["J. Flum", "M. Grohe"], "venue": "An EATCS Series. Berlin: Springer Verlag.", "citeRegEx": "Flum and Grohe,? 2006", "shortCiteRegEx": "Flum and Grohe", "year": 2006}, {"title": "Exact Exponential Algorithms", "author": ["F.V. Fomin", "D. Kratsch"], "venue": "Texts in Theoretical Computer Science. An EATCS Series. Springer.", "citeRegEx": "Fomin and Kratsch,? 2010", "shortCiteRegEx": "Fomin and Kratsch", "year": 2010}, {"title": "A weighted matroid intersection algorithm", "author": ["A. Frank"], "venue": "Journal of Algorithms 2:328\u2013336.", "citeRegEx": "Frank,? 1981", "shortCiteRegEx": "Frank", "year": 1981}, {"title": "Bayesian network classifiers", "author": ["N. Friedman", "D. Geiger", "M. Goldszmidt"], "venue": "Machine Learning 29:131\u2013 163.", "citeRegEx": "Friedman et al\\.,? 1997", "shortCiteRegEx": "Friedman et al\\.", "year": 1997}, {"title": "Packing rooted directed cuts in a weighted directed graph", "author": ["D.R. Fulkerson"], "venue": "Mathematical Programming 6:1\u201313.", "citeRegEx": "Fulkerson,? 1974", "shortCiteRegEx": "Fulkerson", "year": 1974}, {"title": "Efficient algorithms for finding minimum spanning trees in undirected and directed graphs", "author": ["H.N. Gabow", "Z. Galil", "T. Spencer", "R.E. Tarjan"], "venue": "Combinatorica 6(2):109\u2013122.", "citeRegEx": "Gabow et al\\.,? 1986", "shortCiteRegEx": "Gabow et al\\.", "year": 1986}, {"title": "Efficient implementation of graph algorithms using contraction", "author": ["H.N. Gabow", "Z. Galil", "T.H. Spencer"], "venue": "Journal of the ACM 36(3):540\u2013572.", "citeRegEx": "Gabow et al\\.,? 1989", "shortCiteRegEx": "Gabow et al\\.", "year": 1989}, {"title": "Computers and Intractability", "author": ["M.R. Garey", "D.R. Johnson"], "venue": "San Francisco: W. H. Freeman and Company, New York.", "citeRegEx": "Garey and Johnson,? 1979", "shortCiteRegEx": "Garey and Johnson", "year": 1979}, {"title": "Learning Bayesian networks: The combination of knowledge and statistical data", "author": ["D. Heckerman", "D. Geiger", "D.M. Chickering"], "venue": "Machine Learning 20(3):197\u2013243.", "citeRegEx": "Heckerman et al\\.,? 1995", "shortCiteRegEx": "Heckerman et al\\.", "year": 1995}, {"title": "Which problems have strongly exponential complexity? J", "author": ["R. Impagliazzo", "R. Paturi", "F. Zane"], "venue": "of Computer and System Sciences 63(4):512\u2013530.", "citeRegEx": "Impagliazzo et al\\.,? 2001", "shortCiteRegEx": "Impagliazzo et al\\.", "year": 2001}, {"title": "An algorithm for finding an optimal \u2019independent\u2019 assignment", "author": ["M. Iri", "N. Tomizawa"], "venue": "Journal of the Operations Research Society of Japan 19:32\u201357.", "citeRegEx": "Iri and Tomizawa,? 1976", "shortCiteRegEx": "Iri and Tomizawa", "year": 1976}, {"title": "A simple derivation of Edmonds\u2019 algorithm for optimum branchings", "author": ["R.M. Karp"], "venue": "Networks 1(3):265\u2013272.", "citeRegEx": "Karp,? 1971", "shortCiteRegEx": "Karp", "year": 1971}, {"title": "Exact Bayesian structure discovery in Bayesian networks", "author": ["M. Koivisto", "K. Sood"], "venue": "J. Mach. Learn. Res. 5:549\u2013573.", "citeRegEx": "Koivisto and Sood,? 2004", "shortCiteRegEx": "Koivisto and Sood", "year": 2004}, {"title": "Learning Bayesian belief networks: An approach based on the MDL principle", "author": ["W. Lam", "F. Bacchus"], "venue": "Computational Intelligence 10:269\u2013293.", "citeRegEx": "Lam and Bacchus,? 1994", "shortCiteRegEx": "Lam and Bacchus", "year": 1994}, {"title": "Combinatorial Optimization: Networks and Matroids", "author": ["E.L. Lawler"], "venue": "New York: Holt, Rinehart and Winston.", "citeRegEx": "Lawler,? 1976", "shortCiteRegEx": "Lawler", "year": 1976}, {"title": "Algorithms and complexity results for exact Bayesian structure learning", "author": ["S. Ordyniak", "S. Szeider"], "venue": "Uncertainty in Artificial Intelligence (UAI 2010).", "citeRegEx": "Ordyniak and Szeider,? 2010", "shortCiteRegEx": "Ordyniak and Szeider", "year": 2010}, {"title": "Finding optimal gene networks using biological constraints", "author": ["S. Ott", "S. Miyano"], "venue": "Genome Informatics 14:124\u2013133.", "citeRegEx": "Ott and Miyano,? 2003", "shortCiteRegEx": "Ott and Miyano", "year": 2003}, {"title": "Exact structure discovery in Bayesian networks with less space", "author": ["P. Parviainen", "M. Koivisto"], "venue": "Uncertainty in Artificial Intelligence (UAI 2009), 436\u2013443.", "citeRegEx": "Parviainen and Koivisto,? 2009", "shortCiteRegEx": "Parviainen and Koivisto", "year": 2009}, {"title": "On the parameterized complexity of the fixed alphabet shortest common supersequence and longest common subsequence problems", "author": ["K. Pietrzak"], "venue": "J. of Computer and System Sciences 67(4):757\u2013771.", "citeRegEx": "Pietrzak,? 2003", "shortCiteRegEx": "Pietrzak", "year": 2003}, {"title": "A simple approach for finding the globally optimal Bayesian network structure", "author": ["T. Silander", "P. Myllym\u00e4ki"], "venue": "Uncertainty in Artificial Intelligence (UAI 2006), 445\u2013452.", "citeRegEx": "Silander and Myllym\u00e4ki,? 2006", "shortCiteRegEx": "Silander and Myllym\u00e4ki", "year": 2006}, {"title": "Finding optimum branchings", "author": ["R.E. Tarjan"], "venue": "Networks 7:25\u201335.", "citeRegEx": "Tarjan,? 1977", "shortCiteRegEx": "Tarjan", "year": 1977}], "referenceMentions": [{"referenceID": 4, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al.", "startOffset": 0, "endOffset": 15}, {"referenceID": 3, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al.", "startOffset": 172, "endOffset": 191}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al.", "startOffset": 249, "endOffset": 261}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al.", "startOffset": 249, "endOffset": 300}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al.", "startOffset": 249, "endOffset": 318}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977).", "startOffset": 249, "endOffset": 339}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977).", "startOffset": 249, "endOffset": 373}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977).", "startOffset": 249, "endOffset": 386}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two.", "startOffset": 249, "endOffset": 401}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two.", "startOffset": 249, "endOffset": 420}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two.", "startOffset": 249, "endOffset": 575}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two. Given the recent advances in exact exponential algorithms in general (see, e.g., the book by Fomin and Kratsch (2010)), and in finding optimal DAGs in particular, it is natural to ask, whether \u201cfast\u201d exponential-time algorithms exist for finding optimal polytrees.", "startOffset": 249, "endOffset": 1008}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two. Given the recent advances in exact exponential algorithms in general (see, e.g., the book by Fomin and Kratsch (2010)), and in finding optimal DAGs in particular, it is natural to ask, whether \u201cfast\u201d exponential-time algorithms exist for finding optimal polytrees. For general DAGs the fastest known algorithms run in time within a polynomial factor of 2, where n is the number of nodes Koivisto and Sood (2004); Ott and Miyano (2003); Parviainen and Koivisto (2009); Silander and Myllym\u00e4ki (2006).", "startOffset": 249, "endOffset": 1302}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two. Given the recent advances in exact exponential algorithms in general (see, e.g., the book by Fomin and Kratsch (2010)), and in finding optimal DAGs in particular, it is natural to ask, whether \u201cfast\u201d exponential-time algorithms exist for finding optimal polytrees. For general DAGs the fastest known algorithms run in time within a polynomial factor of 2, where n is the number of nodes Koivisto and Sood (2004); Ott and Miyano (2003); Parviainen and Koivisto (2009); Silander and Myllym\u00e4ki (2006).", "startOffset": 249, "endOffset": 1325}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two. Given the recent advances in exact exponential algorithms in general (see, e.g., the book by Fomin and Kratsch (2010)), and in finding optimal DAGs in particular, it is natural to ask, whether \u201cfast\u201d exponential-time algorithms exist for finding optimal polytrees. For general DAGs the fastest known algorithms run in time within a polynomial factor of 2, where n is the number of nodes Koivisto and Sood (2004); Ott and Miyano (2003); Parviainen and Koivisto (2009); Silander and Myllym\u00e4ki (2006).", "startOffset": 249, "endOffset": 1357}, {"referenceID": 0, "context": "Edmonds (1967) gave an efficient algorithm for the class of branchings, that is, directed forests with in-degree at most one; the algorithm was discovered independently by Chu and Liu (1965), and it has been later simplified and expedited by others Bock (1971); Camerini, Fratta, and Maffioli (1979); Fulkerson (1974); Gabow et al. (1986); Gabow, Galil, and Spencer (1989); Karp (1971); Tarjan (1977). Chickering (1996) showed that for general directed acyclic graphs, DAGs, the problem is NP-hard even if the in-degree is at most two. Motivated by this gap, Dasgupta (1999) asked for a network class that is more general than branchings yet admitting provably good structure-learning algorithms; his findings concerning polytrees, that is, DAGs without undirected cycles, were however rather negative, showing that the optimization problem is NP-hard even if the in-degree is at most two. Given the recent advances in exact exponential algorithms in general (see, e.g., the book by Fomin and Kratsch (2010)), and in finding optimal DAGs in particular, it is natural to ask, whether \u201cfast\u201d exponential-time algorithms exist for finding optimal polytrees. For general DAGs the fastest known algorithms run in time within a polynomial factor of 2, where n is the number of nodes Koivisto and Sood (2004); Ott and Miyano (2003); Parviainen and Koivisto (2009); Silander and Myllym\u00e4ki (2006). However, it is not clear, whether even these bounds can be achieved for polytrees; a brute-force algorithm would visit each polytree one by one, whose num-", "startOffset": 249, "endOffset": 1388}, {"referenceID": 3, "context": "ber scales as the number of directed labelled trees n2 Cayley (1889). Do significantly faster algorithms exist? Does the problem become easier if only a small number of nodes are allowed an in-degree larger than one? In this work, we take a first step towards answering these questions by considering polytrees that differ from branchings by only a few arcs.", "startOffset": 55, "endOffset": 69}, {"referenceID": 3, "context": "ber scales as the number of directed labelled trees n2 Cayley (1889). Do significantly faster algorithms exist? Does the problem become easier if only a small number of nodes are allowed an in-degree larger than one? In this work, we take a first step towards answering these questions by considering polytrees that differ from branchings by only a few arcs. More precisely, we study the problem of finding an optimal k-branching, defined as a polytree that can be turned into a branching by deleting k arcs. We make the standard assumption that the scoring function decomposes into a sum of local scores; see the next section for precise definitions. We note that k-branchings generalize branchings in a different direction than the Tree-augmented Naive Bayes classifier (TAN) due to Friedman, Geiger, and Goldszmidt (1997). Namely, in a TAN the in-degree of each node is at most two, and there is a designated class node of in-degree zero, removing of which leaves a spanning tree; the tree is undirected in the sense that the symmetric conditional mutual information is employed to score arcs.", "startOffset": 55, "endOffset": 825}, {"referenceID": 8, "context": "We therefore investigate variants of the k-branching problem that admit fixed-parameter tractability in the sense of Downey and Fellows (1999): the running time bound is given by a polynomial whose degree is independent of the parameter, the parameter contributing a constant factor to the bound.", "startOffset": 117, "endOffset": 143}, {"referenceID": 22, "context": "While there are plenty of alternative scoring functions, derived under different statistical paradigms and assumptions Lam and Bacchus (1994); Chickering (1995); Heckerman, Geiger, and Chickering (1995); Dasgupta (1999), the most popular ones share one important property: they are decomposable, that is,", "startOffset": 119, "endOffset": 142}, {"referenceID": 4, "context": "While there are plenty of alternative scoring functions, derived under different statistical paradigms and assumptions Lam and Bacchus (1994); Chickering (1995); Heckerman, Geiger, and Chickering (1995); Dasgupta (1999), the most popular ones share one important property: they are decomposable, that is,", "startOffset": 143, "endOffset": 161}, {"referenceID": 4, "context": "While there are plenty of alternative scoring functions, derived under different statistical paradigms and assumptions Lam and Bacchus (1994); Chickering (1995); Heckerman, Geiger, and Chickering (1995); Dasgupta (1999), the most popular ones share one important property: they are decomposable, that is,", "startOffset": 143, "endOffset": 203}, {"referenceID": 4, "context": "While there are plenty of alternative scoring functions, derived under different statistical paradigms and assumptions Lam and Bacchus (1994); Chickering (1995); Heckerman, Geiger, and Chickering (1995); Dasgupta (1999), the most popular ones share one important property: they are decomposable, that is,", "startOffset": 143, "endOffset": 220}, {"referenceID": 9, "context": "The power of matroid formulations is much due to the availability of efficient algorithms Brezovec, Cornu\u00e9jols, and Glover (1986); Edmonds (1970, 1979); Frank (1981); Iri and Tomizawa (1976); Lawler (1976) for the weighted matroid intersection problem, defined as follows.", "startOffset": 131, "endOffset": 166}, {"referenceID": 9, "context": "The power of matroid formulations is much due to the availability of efficient algorithms Brezovec, Cornu\u00e9jols, and Glover (1986); Edmonds (1970, 1979); Frank (1981); Iri and Tomizawa (1976); Lawler (1976) for the weighted matroid intersection problem, defined as follows.", "startOffset": 131, "endOffset": 191}, {"referenceID": 9, "context": "The power of matroid formulations is much due to the availability of efficient algorithms Brezovec, Cornu\u00e9jols, and Glover (1986); Edmonds (1970, 1979); Frank (1981); Iri and Tomizawa (1976); Lawler (1976) for the weighted matroid intersection problem, defined as follows.", "startOffset": 131, "endOffset": 206}, {"referenceID": 8, "context": "The framework of Parameterized Complexity Downey and Fellows (1999) offers the suitable tools and methods for such an investigation, as it allows us to distinguish between uniform and non-uniform polynomial-time tractability with respect to a parameter.", "startOffset": 42, "endOffset": 68}, {"referenceID": 8, "context": "FPT 6= W[1] is a widely accepted complexity theoretic assumption Downey and Fellows (1999). For example, FPT = W[1] implies the (unlikely) existence of a 2 algorithm for n-variable 3SAT Impagliazzo, Paturi, and Zane (2001); Flum and Grohe (2006).", "startOffset": 65, "endOffset": 91}, {"referenceID": 8, "context": "FPT 6= W[1] is a widely accepted complexity theoretic assumption Downey and Fellows (1999). For example, FPT = W[1] implies the (unlikely) existence of a 2 algorithm for n-variable 3SAT Impagliazzo, Paturi, and Zane (2001); Flum and Grohe (2006).", "startOffset": 65, "endOffset": 223}, {"referenceID": 8, "context": "FPT 6= W[1] is a widely accepted complexity theoretic assumption Downey and Fellows (1999). For example, FPT = W[1] implies the (unlikely) existence of a 2 algorithm for n-variable 3SAT Impagliazzo, Paturi, and Zane (2001); Flum and Grohe (2006). A first parameterized analysis of probabilistic network structure learning using structural parameters such as treewidth has recently been carried out by Ordyniak and Szeider (2010).", "startOffset": 65, "endOffset": 246}, {"referenceID": 8, "context": "FPT 6= W[1] is a widely accepted complexity theoretic assumption Downey and Fellows (1999). For example, FPT = W[1] implies the (unlikely) existence of a 2 algorithm for n-variable 3SAT Impagliazzo, Paturi, and Zane (2001); Flum and Grohe (2006). A first parameterized analysis of probabilistic network structure learning using structural parameters such as treewidth has recently been carried out by Ordyniak and Szeider (2010). The algorithm from Theorem 5 considers O(n) relevant choices for the set S = D\u222aD, and for each fixed choice of S the running time is polynomial.", "startOffset": 65, "endOffset": 429}, {"referenceID": 18, "context": "3-SAT-2 is well known to be NP-hard Garey and Johnson (1979). Our reduction uses the same ideas as the proof of Theorem 6 in Dasgupta (1999).", "startOffset": 36, "endOffset": 61}, {"referenceID": 7, "context": "Our reduction uses the same ideas as the proof of Theorem 6 in Dasgupta (1999). Let \u03a6 be an instance of 3-SAT-2 with clauses C1, .", "startOffset": 63, "endOffset": 79}, {"referenceID": 30, "context": "We devise a parameterized reduction from the following problem, called Partitioned Clique, which is well-known to be W[1]-complete for parameter k Pietrzak (2003). The Instance is a k-partite graph G = (V,E) with partition V1, .", "startOffset": 147, "endOffset": 163}, {"referenceID": 31, "context": "Do significantly faster algorithms exist when restricted to our two specific matroids? One might expect such algorithms exist, since the related problem for branchings can be solved in O(n) time by the algorithm of Tarjan (1977). Even if we could solve the matroid intersection problem faster, our algorithm would remain practical only for very small values of k.", "startOffset": 215, "endOffset": 229}, {"referenceID": 8, "context": "Specifically, we ask whether the restricted problem is fixed-parameter tractable with respect to the parameter k, that is, solvable in O(f(k)p(n)) time for some computable function f and polynomial p Downey and Fellows (1999). The fixed-parameter algorithm given in Section 4 can be seen as a first step towards an answer to this question.", "startOffset": 200, "endOffset": 226}], "year": 2012, "abstractText": "Inferring probabilistic networks from data is a notoriously difficult task. Under various goodness-of-fit measures, finding an optimal network is NP-hard, even if restricted to polytrees of bounded in-degree. Polynomialtime algorithms are known only for rare special cases, perhaps most notably for branchings, that is, polytrees in which the in-degree of every node is at most one. Here, we study the complexity of finding an optimal polytree that can be turned into a branching by deleting some number of arcs or nodes, treated as a parameter. We show that the problem can be solved via a matroid intersection formulation in polynomial time if the number of deleted arcs is bounded by a constant. The order of the polynomial time bound depends on this constant, hence the algorithm does not establish fixed-parameter tractability when parameterized by the number of deleted arcs. We show that a restricted version of the problem allows fixed-parameter tractability and hence scales well with the parameter. We contrast this positive result by showing that if we parameterize by the number of deleted nodes, a somewhat more powerful parameter, the problem is not fixed-parameter tractable, subject to a complexity-theoretic assumption.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}