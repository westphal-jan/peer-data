{"id": "1311.4527", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Nov-2013", "title": "A message-passing algorithm for multi-agent trajectory planning", "abstract": "We describe a novel approach for computing collision-free \\emph{global} trajectories for $p$ agents with specified initial and final configurations, based on an improved version of the alternating direction method of multipliers (ADMM). Compared with existing methods, our approach is naturally parallelizable and allows for incorporating different cost functionals with only minor adjustments. We apply our method to classical challenging instances and observe that its computational requirements scale well with $p$ for several cost functionals. We also show that a specialization of our algorithm can be used for {\\em local} motion planning by solving the problem of joint optimization in velocity space.", "histories": [["v1", "Mon, 18 Nov 2013 20:38:57 GMT  (754kb,D)", "http://arxiv.org/abs/1311.4527v1", "In Advances in Neural Information Processing Systems (NIPS), 2013. Demo video available atthis http URL"]], "COMMENTS": "In Advances in Neural Information Processing Systems (NIPS), 2013. Demo video available atthis http URL", "reviews": [], "SUBJECTS": "cs.AI cs.DC cs.MA cs.RO cs.SY", "authors": ["jos\u00e9 bento", "nate derbinsky", "javier alonso-mora", "jonathan s yedidia"], "accepted": true, "id": "1311.4527"}, "pdf": {"name": "1311.4527.pdf", "metadata": {"source": "CRF", "title": "A message-passing algorithm for multi-agent trajectory planning", "authors": ["Jos\u00e9 Bento", "Nate Derbinsky", "Javier Alonso-Mora", "Jonathan Yedidia"], "emails": ["jbento@disneyresearch.com", "nate.derbinsky@disneyresearch.com", "jalonso@disneyresearch.com", "yedidia@disneyresearch.com"], "sections": [{"heading": "1 Introduction", "text": "This work focuses on trajectory planning for multiple collisions, an important problem in robotics [1, 2], computer animation and crowd simulation [3], which lead to suboptimal solutions. In contrast, our methodology plans are simplified for all agents at the same time when agents are ambiguous and can be dynamically assigned to a number of target positions [1]. We look at the harder problem of robots having a unique identity and their target positions."}, {"heading": "2 Minimizers in the TWA", "text": "In this section, we provide a brief description of the TWA [13], and, in particular, the role of the minimizer building blocks needed to solve a particular optimization problem. Section B of the supplementary material contains a full description of the TWA. As a small illustrative example of how the TWA is used to solve optimization problems, we assume that we want to solve a particular problem. Section B of the supplementary material includes a full description of the TWA (x1, x3) + f2 (x3) + f3 (x3), in which we (.) the functions can represent soft costs, such as f3 (x3) \u2212 2, or hard equality or inequality constraints, such as f1 (x1, x3) = J (x1), in which we use the notation J (.) if (.) is true or if (.)."}, {"heading": "3 Global trajectory planning", "text": "We begin by defining the variables to be optimized in our optimization problem. In1These are the step size and \u03c10 constants. See section B in the supplementary material for more details. Our formulation is that we do not track the points of the trajectories by a continuous time variable that records values in [0, T]. Rather, our variables are the positions {xi (s)} i [p], where the trajectories are indexed by i and the breakpoints are indexed by a discrete variable, the values between 1 and \u03b7 \u2212 1. Note that {xi (0)} i [p] and {xi (\u03b7)} i [p] are the initial and final configuration, sets of fixed values, not variables to be optimized."}, {"heading": "3.1 Formulation as unconstrained optimization without static obstacles", "text": "With respect to these variables, the non-collision restriction in the formulation above simply does not appear to be a problem."}, {"heading": "3.2 Formulation as unconstrained optimization with static obstacles", "text": "In many scenarios, agents should also avoid collisions with static obstacles. In view of two points in space, xL and xR, we can prohibit all agents from crossing the line segment from xL to xR by adding the following term to the function (3): \u2211 p i = 1 \u2211 \u03b7 \u2212 1 s = 0 f wall xL, xR, ri (xi (s), xi (s + 1). Remember that ri is the radius of agent i andfwallxL, xR, r (x, x) = J (\u03b1x + (1 \u2212 \u03b1) x) \u2212 (\u03b2xxR + (1 \u2212 \u03b2) xL for all \u03b1, \u03b2 [0, 1]). (7) Note that f coll can be expressed with fwall. In particular for collr, r \u2032 (x, x \u00b2, x \u00b2) x \u00b2 x \u00b2, x \u00b2, x \u00b2, x \u00b2, x \u00b2, x \u00b2, x \u00b2, x \u00b2, x \u00b2, x, x \u00b2, x \u00b2, x \u00b2, x, x \u00b2, x \u00b2, x, x \u00b2, x \u00b2, x \u00b2, x, x \u00b2, x, \u00b2, x \u00b2, x \u00b2, xr, x, x \u00b2."}, {"heading": "3.3 Message-passing formulation", "text": "To solve (3) with the help of the TWA, we have to specify the topology of the two-sided graph associated with the unrestricted formulation (3) and the operation performed by each minimizer, i.e. the logic of the weight update and the x-variable update equations. We then move the description of the selection of initial values and internal parameters to Section 4.We first describe the two-sided graph. To be specific, we assume that the cost function takes the form of (5).The unlimited formulation (3) then tells us that the global objective function is the sum of the preference values (p + 1) / 2 terms: \u03b7p (p \u2212 1) / 2 functions f coll and arrop functions f costC. These functions are a total number of (\u03b7 + 1) p variables from which only (\u03b7 \u2212 1) p are free (since the initial and final configurations are specified). Accordingly, the mixed graph has passed on as a coalm \u2212 its message."}, {"heading": "3.3.1 Agent-agent collision minimizer", "text": "We start with the minimizer, which is associated with the functions for \u2212 r \u2212 coll, which we call gcoll. This minimizer receives as parameter the radius, r and r \u00b2 of the two agents, whose collision it avoids. Minimizer takes as input a series of incoming n messages, {n, n, n, n \u00b2, n \u00b2, and thus associates the two equality nodes connected to the position of one of the agents at two consecutive fractions and n \u00b2 and n \u00b2 from the corresponding equality nodes for the other agent. gcoll (n, n \u00b2, n \u00b2, n \u00b2, n \u00b2, n \u00b2, n \u00b2, n \u00b2, n \u00b2) The messages n and n come from the two equality nodes connected to the position of one of the agents at two consecutive fractions, and n \u00b2 and n \u00b2 from the corresponding equality nodes for the other agent."}, {"heading": "3.3.2 Agent-obstacle collision minimizer", "text": "The minimizer for fwall is called gwall. It is parameterized by the obstacle position {xL, xR} and the radius of the agent who has to circumnavigate the obstacle. It receives two n messages, {n, n}, and the corresponding weights {n, r, xR, \u2190 \u2212 \u03c1}, from the equality nodes connected to two consecutive positions of an agent who has to circumnavigate the obstacle. Its output, the x variables, are defined as wall (n, n, r, xL, xR, \u2190, p) = arg min {x, x} fwallxL, xR, r (x, x) + p \u2212 p \u2212 p \u2212 p \u2212 p \u2212 2 + p \u2212 p \u2212 2 x \u2212 n. (10) If agents move in the plane (2D), this minimizer can be solved by using optimization in (10) as a mechanical problem affecting a system of springs that we can precisely solve and the reduction is not effective in (2D)."}, {"heading": "3.3.3 Minimum energy and maximum (minimum) velocity minimizer", "text": "If f-costs can be broken down as in (5), the minimizer associated with the f-costs functions is denoted by gcost and receives two n-messages, {n, n}, and the corresponding weights, {\u2190 \u2212 \u03c1, \u2190 \u2212 \u03c1}. The messages come from two equality nodes associated with two successive positions of an agent. The minimizer is also parameterized by a cost factor c. It displays a series of updated x-messages, which are called gcost (n, n, \u2190 \u2212 \u03c1, c) = arg min {x, x} f-costs (x, x) + \u2190 \u2212 \u03c1 2 x \u2212 2 + \u2190 \u2212 \u03c1 2 x \u2212 n \u00b2 2. (11) The update logic for the \u2212 \u00b2 weights of the minimal energy minimizer is very simple: Always set all initial weights \u2212 \u2192 to 0."}, {"heading": "4 Numerical results", "text": "We are now reporting on the performance of our algorithm (see Appendix J for an important commentary on the properties of our algorithm that are always available).Note that the lack of freely available scalable algorithms for global flight planning in the literature makes it difficult to measure our performance against other methods.Even in a paper, it is difficult to appreciate the grace of the trajectory optimizations discovered, so we include a video in the supplementary material that ultimately shows optimized trajectories and interim results as the algorithm progresses for a variety of other scenarios, including those with obstacles. All of the tests described here are for agents on a two-dimensional level, but the last were conducted with six cores of a 3.4 GHz i7 CPU.The various tests do not require any special adjustment of parameters."}, {"heading": "5 Local trajectory planning based on velocity obstacles", "text": "In this section we will show how the common optimization presented in [12] is based on the concept of speed obstacles (11] (VO), and can also be solved via the transmission TWA. In VO, given the current position {xi (0)} i [p] and the radius {ri} of all agents, a new speed command is calculated jointly for all agents, which minimizes the distance to their preferred velocity. This new speed command must guarantee that the trajectories of all agents remain collision-free for at least a time horizon. New collision-free velocities are calculated at any moment until all agents reach their final configuration. Subsequently [12], assuming a barrier-free environment and dynamics of the first order, we will pass through collision-free velocities, minimize {vi} i [p] i [p]."}, {"heading": "6 Conclusion and future work", "text": "The solution is based on solving a non-convex optimization problem with TWA, a modified ADMM. Its similarity to ADMM brings scalability and easy parallelization, but the use of TWA considerably improves performance. Our implementation of the algorithm in Java on a conventional desktop computer using a basic scheduler / synchronization mechanism across its few cores already scales to hundreds of agents and achieves real-time performance for local planning. The algorithm can flexibly take into account obstacles and different cost functions. For level agents, we have derived explicit expressions that take into account static obstacles, moving obstacles and dynamic constraints on speed and energy."}, {"heading": "A Comment on related literature", "text": "For problems with many degrees of freedom or complex kinematic and dynamic constraints, such as dealing with multiple agents or manipulators, however, the equality of search methods with the local planners required by the exploration loop is more difficult to implement. Furthermore, as explained in [9], sampling algorithms cannot simply produce solutions where multiple agents move in confined spaces, as in CONF1 with obstacles. Some of the disadvantages of using discrete random search structures are visible even in extremely simple scenarios, for example, for a single holonomic agent that needs to move between two points in open space as quickly as possible."}, {"heading": "C Agent-agent collision minimizer", "text": "Here we specify the details of how to introduce the following variables: \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"(2),\" \"2,\" \"2,\" \"(2),\" \"2,\" \"2,\" \"(2),\" \"2,\" \"2,\" \"\" 2, \"\" 2, \"\" 2, \"\" 2, \"\" 2, \"\" 2, \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" \"2,\" 2, \"\" 2, \"2,\" 2, \"2,\" 2, \"(2),\" (2), \"2,\" 2, \"(2),\" 2, \"2,\" (2), \"2,\" (2), \"2,\", \"2,\" (2), \",\" 2, \"(2),\" (2), \"(2),\" (2), \"(2),\" (2), \"(2),\" (2), \"(2),\"), \"(2),\" (2), \"(2),\", \"(2),\" (2), \"),\" (2), \"(2,\"), \"(2,\"), \"(2),\" (2), \"),\" (2, \"),\" (2, \"),\" (2), \"(2,\"), \"(2),\" (2), \"),\" (2, \"),\" (2), \"(2,\"), \"),\""}, {"heading": "D Agent-obstacle collision minimizer", "text": "In Section C, we expressed the agent-agent collision minimizer by applying a linear transformation to the agent-obstacle collision minimizer. Now, we show how the agent-obstacle minimizer can be posed as a classic mechanical problem with a system of springs. Although the relationship in Section C is general, the transformation shown in this section only holds when the agent-obstacle minimizer (10) moves in the plane, i.e. xi (s). \u2212 Similar transformations should be held in higher dimensions. \u2212 If the obstacle is a line segment [xL, xR], the agent obstacle minimizer (10) shows that the following non-convex optimization problem can be solved, minimizing {x, x). \u2212 n If the obstacle is a line segment [xL, xR], the agent obstacle minimizer (20) becomes."}, {"heading": "E Energy minimizer", "text": "The energy minimizer solves the quadratic optimization problem in {x, x} [C-x-x-2 + (\u2190 -\u03c1 / 2) \u2022 x-n-2 + (\u2190 -\u03c1 / 2) \u2022 x-n-2]. From the optimality conditions of the first order we get 2C (x-x) + \u2190 -\u03c1 (x-n) = 0 and 2C (x-x) + \u2190 (x-n) = 0. We get the solution for x and x, x = \u2190 \u2212 \u03c1 \"n + 2C\" (\u2190 \u2212 \u03c1 n) 2C (\u2190 + \u03c1 n) 2C (\u2190 \u2212 \u03c1 + \u03c1) + \u2190 \u2212 \u03c1 \"(\u03c1 + \u03c1) + \u03c1.\""}, {"heading": "F Maximum velocity minimizer", "text": "This minimizer solves the convex problem \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 minimizes {x, x} [(\u2190 \u2212 \u03c1 / 2). Otherwise, the constraint is active, and if we apply the KKT conditions, we have \u2190 \u2212 270 (x \u2212 x) = \u2212 44 (x \u2212 n) = \u2212 44 (x \u2212 x), where \u03bb 6 = 0 is such that we get x \u2212 x = C. Solutions for x and x, x = 27 \u2212 44 (x \u2212 n) n + 49 (x \u2212 n) n (x \u2212 n)."}, {"heading": "G Minimum velocity minimizer", "text": "These minimizers are calculated in a very similar way to achieve the maximum equality of the individual terms. However, if the difference x \u2212 x is again the expression (24), we should choose the negative solution starting from n \u2212 n in such a way that the fastest way to get to x \u2212 x \u00b2 is in x \u2212 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x \u00b2 x. When the minimum speed of the minimizers is reached again, we resolve any uncertainty by allowing the equality < 0 in (25), we should choose the negative solution, i.e. (26) When the minimum speed of the minimizers is reached, we will resolve any uncertainty by allowing the equality of the individual terms. + In the software, this is achieved by setting them to be equal to the number of terms Velcity is \u2212 we will explain the individual obstacle in this section of the minimizer."}, {"heading": "I Mechanical analog", "text": "In this section we will explain how to compress the minimum energy configuration of Figure 6-right.Let the energy a) always b). < b) It is reduced to calculating the minimum of a one-dimensional real function over a closed interval. < b) There are two main scenarios that need to be taken into account. < b) If we have multiple local minima, i.e. several stable static configurations, we need to compare the energy of the following two configurations and return the segment with minimum energy. (a) The slab is tangent toR, for example, as in the blue configuration of Figure 6-right. (b) One of the sources is fully compressed and exactly one end of the slab touches theboundary ofR, for example in the red configuration of Figure 6-right."}, {"heading": "J Comment on our algorithm", "text": "Note that our algorithm does not provide guarantees at any time and, if stopped earlier, may cause collisions. However, if stopped early, a suboptimal set of non-colliding trajectories can be found at very low computational cost by using our algorithm to resolve the feasibility problem in (2) based on the state of the algorithm at a standstill. In addition, although dynamic / static obstacles can be seamlessly integrated into our framework, a solution must be recalculated (as is the case with A * or RRT *) if their orbits / positions change unexpectedly. However, when new information is received, our algorithm may use the previous solution as the first guess, possibly shortening the convergence time. Note that in some scenarios a low-cost local planning approach, such as the one outlined in Section 5, may be advantageous."}, {"heading": "K Comment on the scaling of convergence time with p", "text": "Based on [13], we believe that the scaling of convergence time with p in non-adversarial configurations is not exponential, unlike CONF1, where downtime is likely. Our reasoning is based on a link between path planning and plate packaging. For example, planning the minimal energy trajectory using piecewise linear trajectories is associated with packing plates in multiple 2D layers, with the two matching plates between successive layers costing more if they are far apart. Numerical results in [13] show that the runtime of ADMM and TWA for plate packaging is no more than polynomial in the number of plates, and we believe that the runtime for path planning for non-adversarial configurations has a similar complexity."}], "references": [{"title": "Image and animation display with multiple mobile robots", "author": ["Javier Alonso-Mora", "Andreas Breitenmoser", "Martin Rufli", "Roland Siegwart", "Paul Beardsley"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "Coordinating hundreds of cooperative, autonomous vehicles in warehouses", "author": ["Peter R. Wurman", "Raffaello D\u2019Andrea", "Mick Mountz"], "venue": "AI Magazine,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2008}, {"title": "Clearpath: highly parallel collision avoidance for multi-agent simulation", "author": ["Stephen J. Guy", "Jatin Chhugani", "Changkyu Kim", "Nadathur Satish", "Ming Lin", "Dinesh Manocha", "Pradeep Dubey"], "venue": "In Proceedings of the 2009 ACM SIGGRAPH/Eurographics Symposium on Computer Animation,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Complexity of the mover\u2019s problem and generalizations", "author": ["John H. Reif"], "venue": "In IEEE Annual Symposium on Foundations of Computer Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1979}, {"title": "On the complexity of motion planning for multiple independent objects; pspace-hardness of the \u201dwarehouseman\u2019s problem", "author": ["John E. Hopcroft", "Jacob T. Schwartz", "Micha Sharir"], "venue": "The International Journal of Robotics Research,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1984}, {"title": "Finding and optimizing solvable priority schemes for decoupled path planning techniques for teams of mobile robots", "author": ["Maren Bennewitz", "Wolfram Burgard", "Sebastian Thrun"], "venue": "Robotics and Autonomous Systems,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "Mixed-integer quadratic program trajectory generation for heterogeneous quadrotor teams", "author": ["Daniel Mellinger", "Alex Kushleyev", "Vijay Kumar"], "venue": "In IEEE International Conference on Robotics and Automation,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Generation of collision-free trajectories for a quadrocopter fleet: A sequential convex programming approach", "author": ["Federico Augugliaro", "Angela P. Schoellig", "Raffaello D\u2019Andrea"], "venue": "In IEEE/RSJ International Conference on Intelligent Robots and Systems,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Randomized kinodynamic planning", "author": ["Steven M. LaValle", "James J. Kuffner"], "venue": "The International Journal of Robotics Research,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "Real-time obstacle avoidance for manipulators and mobile robots", "author": ["Oussama Khatib"], "venue": "The International Journal of Robotics Research,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1986}, {"title": "Motion planning in dynamic environments using velocity obstacles", "author": ["Paolo Fiorini", "Zvi Shiller"], "venue": "The International Journal of Robotics Research,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1998}, {"title": "Collision avoidance for multiple agents with joint utility maximization", "author": ["Javier Alonso-Mora", "Martin Rufli", "Roland Siegwart", "Paul Beardsley"], "venue": "In IEEE International Conference on Robotics and Automation,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "An improved three-weight messagepassing algorithm", "author": ["Nate Derbinsky", "Jos\u00e9 Bento", "Veit Elser", "Jonathan S. Yedidia"], "venue": "[cs.AI],", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Codes on graphs: Normal realizations", "author": ["G. David Forney Jr."], "venue": "IEEE Transactions on Information Theory,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2001}, {"title": "Incremental sampling-based algorithms for optimal motion planning", "author": ["Sertac Karaman", "Emilio Frazzoli"], "venue": "arXiv preprint arXiv:1005.0416,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "Sur l\u2019approximation, par \u00e9l\u00e9ments finis d\u2019ordre un, et la r\u00e9solution, par p\u00e9nalisization-dualit\u00e9, d\u2019une class de probl\u00e8ms de Dirichlet non lin\u00e9are", "author": ["R. Glowinski", "A. Marrocco"], "venue": "Revue Franc\u0327aise d\u2019Automatique, Informatique, et Recherche Ope\u0301rationelle,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1975}, {"title": "A dual algorithm for the solution of nonlinear variational problems via finite element approximation", "author": ["Daniel Gabay", "Bertrand Mercier"], "venue": "Computers & Mathematics with Applications,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1976}, {"title": "Generalized lagrange multiplier method for solving problems of optimum allocation of resources", "author": ["Hugh Everett III"], "venue": "Operations Research,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1963}, {"title": "Hestenes. Multiplier and gradient methods", "author": ["R. Magnus"], "venue": "Journal of Optimization Theory and Applications,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1969}, {"title": "Hestenes. Multiplier and gradient methods", "author": ["R. Magnus"], "venue": "Computing Methods in Optimization Problems", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1969}, {"title": "A method for nonlinear constraints in minimization problems", "author": ["M.J.D. Powell"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1969}], "referenceMentions": [{"referenceID": 0, "context": "This paper focuses on trajectory planning for multiple agents, an important problem in robotics [1, 2], computer animation, and crowd simulation [3].", "startOffset": 96, "endOffset": 102}, {"referenceID": 1, "context": "This paper focuses on trajectory planning for multiple agents, an important problem in robotics [1, 2], computer animation, and crowd simulation [3].", "startOffset": 96, "endOffset": 102}, {"referenceID": 2, "context": "This paper focuses on trajectory planning for multiple agents, an important problem in robotics [1, 2], computer animation, and crowd simulation [3].", "startOffset": 145, "endOffset": 148}, {"referenceID": 3, "context": "Centralized planning for multiple agents is PSPACE hard [4, 5].", "startOffset": 56, "endOffset": 62}, {"referenceID": 4, "context": "Centralized planning for multiple agents is PSPACE hard [4, 5].", "startOffset": 56, "endOffset": 62}, {"referenceID": 5, "context": "To contend with this complexity, traditional multi-agent planning prioritizes agents and computes their trajectories sequentially [6], leading to suboptimal solutions.", "startOffset": 130, "endOffset": 133}, {"referenceID": 0, "context": "Trajectory planning is also simplified if agents are non-distinct and can be dynamically assigned to a set of goal positions [1].", "startOffset": 125, "endOffset": 128}, {"referenceID": 6, "context": "Both mixed-integer quadratic programming (MIQP) [7] and [more efficient, although local] sequential convex programming [8] approaches have been applied to the problem of computing collision-free trajectories for multiple agents with pre-specified goal positions; however, due to the non-convexity of the problem, these approaches, especially the former, do not scale well with the number of agents.", "startOffset": 48, "endOffset": 51}, {"referenceID": 7, "context": "Both mixed-integer quadratic programming (MIQP) [7] and [more efficient, although local] sequential convex programming [8] approaches have been applied to the problem of computing collision-free trajectories for multiple agents with pre-specified goal positions; however, due to the non-convexity of the problem, these approaches, especially the former, do not scale well with the number of agents.", "startOffset": 119, "endOffset": 122}, {"referenceID": 8, "context": "Alternatively, trajectories may be found by sampling in their joint configuration space [9].", "startOffset": 88, "endOffset": 91}, {"referenceID": 9, "context": "Many single-agent reactive collision-avoidance algorithms are based either on potential fields [10], which typically ignore the velocity of other agents, or \u201cvelocity obstacles\u201d [11], which provide improved performance in dynamic environments by formulating the optimization in velocity space instead of Cartesian space.", "startOffset": 95, "endOffset": 99}, {"referenceID": 10, "context": "Many single-agent reactive collision-avoidance algorithms are based either on potential fields [10], which typically ignore the velocity of other agents, or \u201cvelocity obstacles\u201d [11], which provide improved performance in dynamic environments by formulating the optimization in velocity space instead of Cartesian space.", "startOffset": 178, "endOffset": 182}, {"referenceID": 11, "context": "Building on an extension of the velocity-obstacles approach, recent work on centralized collision avoidance [12] computes collision-free local motions for all agents whilst maximizing a joint utility using either a computationally expensive MIQP or an efficient, though local, QP.", "startOffset": 108, "endOffset": 112}, {"referenceID": 12, "context": "Our method, based on the \u201cthree-weight\u201d version of ADMM [13], is easily parallelized, does not require parameter tuning, and we present empirical evidence of good scalability with p.", "startOffset": 56, "endOffset": 60}, {"referenceID": 11, "context": "iii) We show that our method can specialize to perform local planning by solving the problem of joint optimization in velocity space [12].", "startOffset": 133, "endOffset": 137}, {"referenceID": 12, "context": "This paper also reinforces the claim in [13] that small, yet important, modifications to ADMM can bring an order of magnitude increase in speed.", "startOffset": 40, "endOffset": 44}, {"referenceID": 12, "context": "In this section we provide a short description of the TWA [13], and, in particular, the role of the minimizer building blocks that it needs to solve a particular optimization problem.", "startOffset": 58, "endOffset": 62}, {"referenceID": 13, "context": "The TWA solves this optimization problem iteratively by passing messages on a bipartite graph, in the form of a Forney factor graph [14]: one minimizer-node per function fb, one equality-node per variable xj and an edge (b, j), connecting b and j, if fb depends on xj (see Figure 1-left).", "startOffset": 132, "endOffset": 136}, {"referenceID": 12, "context": "Without going into the full detail presented in [13] and the supplementary material, the estimates x1,1 and x1,3 are then combined with running sums of the differences between the minimizer estimates and the equality-node consensus estimates to obtain messages m1,1 and m1,3 on each neighboring edge that are sent to the neighboring equality-nodes along with corresponding certainty weights, \u2212 \u2192\u03c1 1,2 and \u2212 \u2192\u03c1 1,3.", "startOffset": 48, "endOffset": 52}, {"referenceID": 0, "context": ", \u03b7 \u2212 1} and \u03b1 \u2208 [0, 1].", "startOffset": 17, "endOffset": 23}, {"referenceID": 0, "context": "the integrated kinetic energy or the maximum velocity over all the agents) and the function f coll r,r\u2032 is defined as, f coll r,r\u2032(x, x, x \u2032, x\u2032) = J(\u2016\u03b1(x\u2212 x\u2032) + (1\u2212 \u03b1)(x\u2212 x\u2032)\u2016 \u2265 r + r\u2032 \u2200\u03b1 \u2208 [0, 1]).", "startOffset": 191, "endOffset": 197}, {"referenceID": 0, "context": "We recall that ri is the radius of agent i and fwall xL,xR,r(x, x) = J(\u2016(\u03b1x+ (1\u2212 \u03b1)x)\u2212 (\u03b2xR + (1\u2212 \u03b2)xL)\u2016 \u2265 r for all \u03b1, \u03b2 \u2208 [0, 1]).", "startOffset": 124, "endOffset": 130}, {"referenceID": 12, "context": "In particular, the step-size in [13] (their \u03b1 variable) is always 0.", "startOffset": 32, "endOffset": 36}, {"referenceID": 11, "context": "Convergence-time distribution for each epoch using our method (blue bars) and using the MIQP of [12] (red bars and star-values).", "startOffset": 96, "endOffset": 100}, {"referenceID": 11, "context": "In this section we show how the joint optimization presented in [12], which is based on the concept of velocity obstacles [11] (VO), can be also solved via the message-passing TWA.", "startOffset": 64, "endOffset": 68}, {"referenceID": 10, "context": "In this section we show how the joint optimization presented in [12], which is based on the concept of velocity obstacles [11] (VO), can be also solved via the message-passing TWA.", "startOffset": 122, "endOffset": 126}, {"referenceID": 11, "context": "Following [12], and assuming an obstacle-free environment and first order dynamics, the collision-free velocities are given by, minimize {vi}i\u2208[p] \u2211", "startOffset": 10, "endOffset": 14}, {"referenceID": 0, "context": "\u2016(1\u2212 \u03b1)(xi(0)\u2212 xj(0)) + \u03b1(xi \u2212 xj)\u2016 \u2265 ri + rj \u2200 j > i \u2208 [p], \u03b1 \u2208 [0, 1] (12) where C \u2032 i = Ci/\u03c4 , xref i = xi(0) + v ref i \u03c4 and we have dropped the \u03c4 in xi(\u03c4).", "startOffset": 65, "endOffset": 71}, {"referenceID": 11, "context": "We compare the mixed integer quadratic programming (MIQP) approach from [12] with ours.", "startOffset": 72, "endOffset": 76}, {"referenceID": 11, "context": "Our method finds a local minima of exactly (13), while [12] finds a global minima of an approximation to (13).", "startOffset": 55, "endOffset": 59}, {"referenceID": 11, "context": "Specifically, [12] requires approximating the search domain by hyperplanes and an additional branch-and-bound algorithm while ours does not.", "startOffset": 14, "endOffset": 18}, {"referenceID": 11, "context": "The results show the order of magnitude is similar, but, because our implementation is done in Java while [12] uses Matlab-mex interface of CPLEX 11, the results are not exactly comparable.", "startOffset": 106, "endOffset": 110}], "year": 2013, "abstractText": "We describe a novel approach for computing collision-free global trajectories for p agents with specified initial and final configurations, based on an improved version of the alternating direction method of multipliers (ADMM). Compared with existing methods, our approach is naturally parallelizable and allows for incorporating different cost functionals with only minor adjustments. We apply our method to classical challenging instances and observe that its computational requirements scale well with p for several cost functionals. We also show that a specialization of our algorithm can be used for local motion planning by solving the problem of joint optimization in velocity space.", "creator": "LaTeX with hyperref package"}}}