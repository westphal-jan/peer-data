{"id": "1404.4089", "review": {"conference": "aaai", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Apr-2014", "title": "On the Role of Canonicity in Bottom-up Knowledge Compilation", "abstract": "We consider the problem of bottom-up compilation of knowledge bases, which is usually predicated on the existence of a polytime function for combining compilations using Boolean operators (usually called an Apply function). While such a polytime Apply function is known to exist for certain languages (e.g., OBDDs) and not exist for others (e.g., DNNF), its existence for certain languages remains unknown. Among the latter is the recently introduced language of Sentential Decision Diagrams (SDDs), for which a polytime Apply function exists for unreduced SDDs, but remains unknown for reduced ones (i.e. canonical SDDs). We resolve this open question in this paper and consider some of its theoretical and practical implications. Some of the findings we report question the common wisdom on the relationship between bottom-up compilation, language canonicity and the complexity of the Apply function.", "histories": [["v1", "Tue, 15 Apr 2014 21:43:41 GMT  (74kb,D)", "http://arxiv.org/abs/1404.4089v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["guy van den broeck", "adnan darwiche"], "accepted": true, "id": "1404.4089"}, "pdf": {"name": "1404.4089.pdf", "metadata": {"source": "META", "title": "On the Role of Canonicity in Bottom-up Knowledge Compilation", "authors": ["Guy Van den Broeck", "Adnan Darwiche"], "emails": ["guyvdb@cs.ucla.edu", "darwiche@cs.ucla.edu"], "sections": [{"heading": "Introduction", "text": "In fact, most of them are able to determine for themselves what they want to do and what they want to do."}, {"heading": "Background", "text": "We will use the following notation for propositional logic: uppercase letters (e.g. X) denote propositional variables and lowercase letters denote their instances (e.g. x); bold letters represent variable sets (e.g. X) and their instances (e.g. x); a literal is a variable or its negation; a Boolean function f (X) assigns each instantiation x > (true) or \u0441 (false)."}, {"heading": "The SDD Representation", "text": "The Sentential Definition (SDD) is a newly introduced representation language that expresses itself in its different expressions in a certain way. (SDD) The Sentential Definition Definition Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition- Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition-Definition"}, {"heading": "Queries and Transformations", "text": "It is a. \"S.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D.\" D. \"D.\" D. \"D.\" D.D. \"D.D.\" D.D.D.D. \"D.D.D.\" D.D.D. \"D.D.\" D.D. \"D.D.\" D.D. \"D.\" D. \"D.D.\" D. \"D.\" D. \"D.D.\" D. \"D.\" D.D. \"D.\" D. \"D.\" D. \"D.\" D.D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D. \"D.\" D"}, {"heading": "Conclusions", "text": "We have shown that the Apply function for reduced SDDs can take exponential time at worst, which solves an open question since the introduction of SDDs. We have also followed some of the theoretical and practical implications of this result. On the theoretical side, we have shown that it implies exponential complexity for various transformations, such as conditioning and existential quantification. We have also identified the class of limited vtrees for which the Apply function can be implemented in polynomial time even for reduced SDDs. On the practical side, we have empirically argued that working with reduced SDDs remains advantageous despite the polytime complexity of the Apply function for unreduced SDDs. The canonicity of reduced SDDs, we argued, is more valuable for the Bottom-up compilation than a polytime Apply due to its role in facilitating caching and dynamic search for polyup, which seems to contradict some of the Bottom-up results of the Bottom-tree."}, {"heading": "Complexity of Transformations", "text": "We must now show that the results of the SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD (the SDD) for a reduced SDD (the SDD) for a reduced SDD (the SDD (the SDD) for a reduced SDD (the SDD (the SDD) for the SDD (the SDD) for a reduced SDD (the SDD (the SDD) for the SDD (the SDD) for a reduced SDD (the SDD (the SDD) for the SDD (the SDD) for the SDD (the SDD) for a reduced SDD (the SDD (the SDD) for the SDD (the SDD (the SDD) for a reduced SDD (the SDD (the S"}], "references": [{"title": "Graph-based algorithms for Boolean function manipulation", "author": ["R.E. Bryant"], "venue": "IEEE Transactions on Computers C-35:677\u2013691.", "citeRegEx": "Bryant,? 1986", "shortCiteRegEx": "Bryant", "year": 1986}, {"title": "On probabilistic inference by weighted model counting", "author": ["M. Chavira", "A. Darwiche"], "venue": "Artificial Intelligence Journal 172(6\u20137):772\u2013799.", "citeRegEx": "Chavira and Darwiche,? 2008", "shortCiteRegEx": "Chavira and Darwiche", "year": 2008}, {"title": "Compiling relational bayesian networks for exact inference", "author": ["M. Chavira", "A. Darwiche", "M. Jaeger"], "venue": "International Journal of Approximate Reasoning 42(1):4\u201320.", "citeRegEx": "Chavira et al\\.,? 2006", "shortCiteRegEx": "Chavira et al\\.", "year": 2006}, {"title": "Dynamic minimization of sentential decision diagrams", "author": ["A. Choi", "A. Darwiche"], "venue": "Proceedings of the 27th Conference on Artificial Intelligence (AAAI).", "citeRegEx": "Choi and Darwiche,? 2013", "shortCiteRegEx": "Choi and Darwiche", "year": 2013}, {"title": "Compiling probabilistic graphical models using sentential decision diagrams", "author": ["A. Choi", "D. Kisa", "A. Darwiche"], "venue": "Proceedings of the 12th European Conference on Symbolic and Quantitative Approaches to Reasoning with Uncertainty (ECSQARU).", "citeRegEx": "Choi et al\\.,? 2013", "shortCiteRegEx": "Choi et al\\.", "year": 2013}, {"title": "A knowledge compilation map", "author": ["A. Darwiche", "P. Marquis"], "venue": "Journal of Artificial Intelligence Research 17:229\u2013264.", "citeRegEx": "Darwiche and Marquis,? 2002", "shortCiteRegEx": "Darwiche and Marquis", "year": 2002}, {"title": "On the tractability of counting theory models and its application to belief revision and truth maintenance", "author": ["A. Darwiche"], "venue": "Journal of Applied Non-Classical Logics 11(12):11\u201334.", "citeRegEx": "Darwiche,? 2001", "shortCiteRegEx": "Darwiche", "year": 2001}, {"title": "SDD: A new canonical representation of propositional knowledge bases", "author": ["A. Darwiche"], "venue": "Proceedings of the 22nd International Joint Conference on Artificial Intelligence, 819\u2013826.", "citeRegEx": "Darwiche,? 2011", "shortCiteRegEx": "Darwiche", "year": 2011}, {"title": "DNNF-based belief state estimation", "author": ["P. Elliott", "B. Williams"], "venue": "Proceedings of the 21st National Conference on Artificial Intelligence (AAAI).", "citeRegEx": "Elliott and Williams,? 2006", "shortCiteRegEx": "Elliott and Williams", "year": 2006}, {"title": "Inference in probabilistic logic programs using weighted CNF\u2019s", "author": ["D. Fierens", "G. Van den Broeck", "I. Thon", "B. Gutmann", "L.D. Raedt"], "venue": "UAI, 211\u2013220.", "citeRegEx": "Fierens et al\\.,? 2011", "shortCiteRegEx": "Fierens et al\\.", "year": 2011}, {"title": "Pruning conformant plans by counting models on compiled d-DNNF representations", "author": ["H. Palacios", "B. Bonet", "A. Darwiche", "H. Geffner"], "venue": "Proceedings of the 15th International Conference on Automated Planning and Scheduling, 141\u2013150.", "citeRegEx": "Palacios et al\\.,? 2005", "shortCiteRegEx": "Palacios et al\\.", "year": 2005}, {"title": "New compilation languages based on structured decomposability", "author": ["K. Pipatsrisawat", "A. Darwiche"], "venue": "Proceedings of the Twenty-Third AAAI Conference on Artificial Intelligence (AAAI), 517\u2013522.", "citeRegEx": "Pipatsrisawat and Darwiche,? 2008", "shortCiteRegEx": "Pipatsrisawat and Darwiche", "year": 2008}, {"title": "Knowledge compilation and theory approximation", "author": ["B. Selman", "H. Kautz"], "venue": "Journal of the ACM (JACM) 43(2):193\u2013224.", "citeRegEx": "Selman and Kautz,? 1996", "shortCiteRegEx": "Selman and Kautz", "year": 1996}, {"title": "Probabilistic databases", "author": ["D. Suciu", "D. Olteanu", "C. R\u00e9", "C. Koch"], "venue": "Synthesis Lectures on Data Management 3(2):1\u2013180.", "citeRegEx": "Suciu et al\\.,? 2011", "shortCiteRegEx": "Suciu et al\\.", "year": 2011}, {"title": "Complete sets of logical functions", "author": ["W. Wernick"], "venue": "Transactions of the American Mathematical Society 51(1):117\u2013132. Xue, Y.; Choi, A.; and Darwiche, A. 2012. Basing decisions on sentences in decision diagrams. In In Proceedings", "citeRegEx": "Wernick,? 1942", "shortCiteRegEx": "Wernick", "year": 1942}], "referenceMentions": [{"referenceID": 7, "context": "The Sentential Decision Diagram (SDD) is a recently proposed circuit representation of propositional knowledge bases (Darwiche 2011).", "startOffset": 117, "endOffset": 132}, {"referenceID": 12, "context": "The SDD is a target language for knowledge compilation (Selman and Kautz 1996; Darwiche and Marquis 2002), meaning that once a propositional knowledge base is compiled into an SDD, the SDD can be reused to answer multiple hard queries efficiently (e.", "startOffset": 55, "endOffset": 105}, {"referenceID": 5, "context": "The SDD is a target language for knowledge compilation (Selman and Kautz 1996; Darwiche and Marquis 2002), meaning that once a propositional knowledge base is compiled into an SDD, the SDD can be reused to answer multiple hard queries efficiently (e.", "startOffset": 55, "endOffset": 105}, {"referenceID": 0, "context": "SDDs subsume Ordered Binary Decision Diagrams (OBDD) (Bryant 1986) and come with a tighter size bound (Darwiche 2011), while still being equally powerful as far as their polytime support for classical queries (e.", "startOffset": 53, "endOffset": 66}, {"referenceID": 7, "context": "SDDs subsume Ordered Binary Decision Diagrams (OBDD) (Bryant 1986) and come with a tighter size bound (Darwiche 2011), while still being equally powerful as far as their polytime support for classical queries (e.", "startOffset": 102, "endOffset": 117}, {"referenceID": 6, "context": "Moreover, SDDs are subsumed by d-DNNFs (Darwiche 2001), which received much attention over the last decade, for fault diagnosis (Elliott and Williams 2006), planning (Palacios et al.", "startOffset": 39, "endOffset": 54}, {"referenceID": 8, "context": "Moreover, SDDs are subsumed by d-DNNFs (Darwiche 2001), which received much attention over the last decade, for fault diagnosis (Elliott and Williams 2006), planning (Palacios et al.", "startOffset": 128, "endOffset": 155}, {"referenceID": 10, "context": "Moreover, SDDs are subsumed by d-DNNFs (Darwiche 2001), which received much attention over the last decade, for fault diagnosis (Elliott and Williams 2006), planning (Palacios et al. 2005), databases (Suciu et al.", "startOffset": 166, "endOffset": 188}, {"referenceID": 13, "context": "2005), databases (Suciu et al. 2011), but most importantly for probabilistic inference (Chavira, Darwiche, and Jaeger 2006; Chavira and Darwiche 2008; Fierens et al.", "startOffset": 17, "endOffset": 36}, {"referenceID": 1, "context": "2011), but most importantly for probabilistic inference (Chavira, Darwiche, and Jaeger 2006; Chavira and Darwiche 2008; Fierens et al. 2011).", "startOffset": 56, "endOffset": 140}, {"referenceID": 9, "context": "2011), but most importantly for probabilistic inference (Chavira, Darwiche, and Jaeger 2006; Chavira and Darwiche 2008; Fierens et al. 2011).", "startOffset": 56, "endOffset": 140}, {"referenceID": 0, "context": "SDDs subsume Ordered Binary Decision Diagrams (OBDD) (Bryant 1986) and come with a tighter size bound (Darwiche 2011), while still being equally powerful as far as their polytime support for classical queries (e.g., the ones in Darwiche and Marquis (2002)).", "startOffset": 54, "endOffset": 256}, {"referenceID": 0, "context": "SDDs subsume Ordered Binary Decision Diagrams (OBDD) (Bryant 1986) and come with a tighter size bound (Darwiche 2011), while still being equally powerful as far as their polytime support for classical queries (e.g., the ones in Darwiche and Marquis (2002)). Moreover, SDDs are subsumed by d-DNNFs (Darwiche 2001), which received much attention over the last decade, for fault diagnosis (Elliott and Williams 2006), planning (Palacios et al. 2005), databases (Suciu et al. 2011), but most importantly for probabilistic inference (Chavira, Darwiche, and Jaeger 2006; Chavira and Darwiche 2008; Fierens et al. 2011). Even though SDDs are less succinct than d-DNNFs, they can be compiled bottom-up, just like OBDDs. For example, a clause can be compiled by disjoining the SDDs corresponding to its literals, and a CNF can be compiled by conjoining the SDDs corresponding to its clauses. This bottom-up compilation is implemented using the Apply function, which combines two SDDs using Boolean operators.1 Bottomup compilation makes SDDs attractive for certain applications (e.g., probabilistic inference (Choi, Kisa, and Darwiche 2013)) and can be critical when the knowledge base to be compiled is constructed incrementally (see the discussion in Pipatsrisawat and Darwiche (2008)).", "startOffset": 54, "endOffset": 1278}, {"referenceID": 11, "context": "In fact, the discovery of SDDs was mostly driven by the need for bottom-up compilation, which was preceded by the discovery of structured decomposability (Pipatsrisawat and Darwiche 2008): a property that enables some Boolean operations to be applied in polytime.", "startOffset": 154, "endOffset": 187}, {"referenceID": 7, "context": "SDDs satisfy this property and stronger ones, leading to a polytime Apply function (Darwiche 2011).", "startOffset": 83, "endOffset": 98}, {"referenceID": 0, "context": "The Apply function (and its name) originated in the OBDD literature (Bryant 1986) ar X iv :1 40 4.", "startOffset": 68, "endOffset": 81}, {"referenceID": 7, "context": "The Sentential Decision Diagram (SDD) is a newly introduced representation language for propositional knowledge bases (Darwiche 2011).", "startOffset": 118, "endOffset": 133}, {"referenceID": 7, "context": "This type of decomposition is called an (X,Y)partition (Darwiche 2011).", "startOffset": 55, "endOffset": 70}, {"referenceID": 7, "context": "Given a vtree, each Boolean function also has a unique compressed SDD, when this property is combined with either trimming or normalization properties (Darwiche 2011).", "startOffset": 151, "endOffset": 166}, {"referenceID": 7, "context": "Compressed and trimmed SDDs are canonical, and so are compressed and normalized SDDs (Darwiche 2011).", "startOffset": 85, "endOffset": 100}, {"referenceID": 7, "context": "OBDDs correspond precisely to SDDs that are constructed using a special type of vtree, called a right-linear vtree (Darwiche 2011).", "startOffset": 115, "endOffset": 130}, {"referenceID": 3, "context": "Vtree search algorithms can sometimes find SDDs that are orders-of-magnitude more succinct than OBDDs found by searching for variable orders (Choi and Darwiche 2013).", "startOffset": 141, "endOffset": 165}, {"referenceID": 11, "context": "subset of structured d-DNNF and, hence, support the same polytime queries supported by structured d-DNNF (Pipatsrisawat and Darwiche 2008); see Table 1.", "startOffset": 105, "endOffset": 138}, {"referenceID": 7, "context": "Algorithm 1 shows the outline of an Apply function (Darwiche 2011) that takes two SDDs \u03b1 and \u03b2, and a binary Boolean operator \u25e6 (e.", "startOffset": 51, "endOffset": 66}, {"referenceID": 7, "context": "Without compression, this algorithm has a time and space complexity of O(nm), where n and m are the sizes of input SDDs (Darwiche 2011).", "startOffset": 120, "endOffset": 135}, {"referenceID": 6, "context": "However, Xue, Choi, and Darwiche (2012) proved the following.", "startOffset": 24, "endOffset": 40}, {"referenceID": 5, "context": "Theorem 1 has a number of implications, which are summarized in Table 2; see also Darwiche and Marquis (2002).", "startOffset": 82, "endOffset": 110}, {"referenceID": 6, "context": ", Pipatsrisawat and Darwiche (2008)).", "startOffset": 20, "endOffset": 36}, {"referenceID": 0, "context": "This corresponds to the OBDD reduction rule that eliminates decision nodes with isomorphic children (Bryant 1986).", "startOffset": 100, "endOffset": 113}, {"referenceID": 6, "context": "Xue, Choi, and Darwiche (2012) showed a class of Boolean functions whose OBDDs have exponential size with respect to certain orders (right-linear vtrees), but which have SDDs of linear size when the vtrees are not right-linear (but have the same left-to-right variable order).", "startOffset": 15, "endOffset": 31}, {"referenceID": 6, "context": "For unreduced SDDs, Darwiche (2011) showed support for \u2227BC, \u2228BC, and \u00acC (see Algorithm 1).", "startOffset": 20, "endOffset": 36}, {"referenceID": 5, "context": "The negative results for FO,\u2227C and\u2228C follow from identical OBDD results in Darwiche and Marquis (2002), and the fact that OBDDs are a special case of SDDs.", "startOffset": 75, "endOffset": 103}, {"referenceID": 14, "context": "Given that reduced SDDs support polytime negation, this result generalizes to any binary Boolean operator \u25e6 that is functionally complete together with negation (Wernick 1942).", "startOffset": 161, "endOffset": 175}], "year": 2014, "abstractText": "We consider the problem of bottom-up compilation of knowledge bases, which is usually predicated on the existence of a polytime function for combining compilations using Boolean operators (usually called an Apply function). While such a polytime Apply function is known to exist for certain languages (e.g., OBDDs) and not exist for others (e.g., DNNF), its existence for certain languages remains unknown. Among the latter is the recently introduced language of Sentential Decision Diagrams (SDDs), for which a polytime Apply function exists for unreduced SDDs, but remains unknown for reduced ones (i.e. canonical SDDs). We resolve this open question in this paper and consider some of its theoretical and practical implications. Some of the findings we report question the common wisdom on the relationship between bottom-up compilation, language canonicity and the complexity of the Apply function.", "creator": "TeX"}}}