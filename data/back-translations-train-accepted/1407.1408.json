{"id": "1407.1408", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Jul-2014", "title": "The Complexity of Reasoning with FODD and GFODD", "abstract": "Recent work introduced Generalized First Order Decision Diagrams (GFODD) as a knowledge representation that is useful in mechanizing decision theoretic planning in relational domains. GFODDs generalize function-free first order logic and include numerical values and numerical generalizations of existential and universal quantification. Previous work presented heuristic inference algorithms for GFODDs. In this paper, we study the complexity of the evaluation problem, the satisfiability problem, and the equivalence problem for GFODDs under the assumption that the size of the intended model is given with the problem, a restriction that guarantees decidability. Our results provide a complete characterization placing these problems within the polynomial hierarchy. The same characterization applies to the corresponding restriction of problems in first order logic, giving an interesting new avenue for efficient inference when the number of objects is bounded. Our results show that for $\\Sigma_k$ formulas, and for corresponding GFODDs, evaluation and satisfiability are $\\Sigma_k^p$ complete, and equivalence is $\\Pi_{k+1}^p$ complete. For $\\Pi_k$ formulas evaluation is $\\Pi_k^p$ complete, satisfiability is one level higher and is $\\Sigma_{k+1}^p$ complete, and equivalence is $\\Pi_{k+1}^p$ complete.", "histories": [["v1", "Sat, 5 Jul 2014 14:11:46 GMT  (604kb,D)", "https://arxiv.org/abs/1407.1408v1", "A short version of this paper appears in AAAI 2014"], ["v2", "Fri, 20 Feb 2015 17:10:55 GMT  (599kb,D)", "http://arxiv.org/abs/1407.1408v2", "A short version of this paper appears in AAAI 2014. Version 2 includes a reorganization and some expanded proofs"]], "COMMENTS": "A short version of this paper appears in AAAI 2014", "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.LO", "authors": ["benjamin j hescott", "roni khardon"], "accepted": true, "id": "1407.1408"}, "pdf": {"name": "1407.1408.pdf", "metadata": {"source": "CRF", "title": "The Complexity of Reasoning with FODD and GFODD\u2217", "authors": ["Benjamin J. Hescott"], "emails": ["hescott@cs.tufts.edu", "roni@cs.tufts.edu"], "sections": [{"heading": null, "text": "p k + 1 complete. For \u043fk formulas the evaluation \u043fpk is complete, the satisfaction is one step higher and \u03a3 p k + 1 complete, and the equivalence is \u043fpk + 1 complete."}, {"heading": "1 Introduction", "text": "The complexity of the conclusions in the first order logic has been extensively studied. It is known that the problem is undecidable and that even this has to do with severe limitations regarding the types and number of predicates permitted in the logical language. [8] Unfortunately, the problem is also undecidable if we limit attention to satisfaction among finite structures. [6, 24] Thus, in both cases, the relative difficulty of the problems cannot be quantified without further specialization or assumptions. On the other hand, algorithmic progress in AI has been made efficient in some cases. [6, 24] In this paper, we examine such problems under the additional constraint that an upper limit of the intended model size is explicitly given. This constraint is natural for many applications where the number of objects is either known in advance or a preliminary version of this paper as [10]."}, {"heading": "2 FODDs and GFODDs and their Computational Problems", "text": "In this context, it should be noted that the people mentioned in the study are people who are able to fathom their identity, and that they are able to fathom their identity, and that they are able to fathom their identity, and that they are able to fathom their identity, and that they are able to fathom their identity."}, {"heading": "2.1 Syntax", "text": "The first decision in favor of GFODDs is a special case of GFODDs, where the function for the function is maximally variable. < B > FODDs are a special case of GFODDs, where the generalization (GFODD) is defined by all variables. [33, 16] Aggregation is defined by listing the variables in the diagram. [33] The structure of GFODDs can be described in any order (wi1,., wim) and a corresponding list of lengths. In this paper, we limit the aggregation operators for each variable. To reflect the structure of GFODDs, and to distinguish between the aggregation classes, we sometimes have a GFODD by < V >. However, when we emerge clearly from the context, we use B >. FODDs are a special case of GFODDs, where the function for the function is maximally variable."}, {"heading": "2.2 Semantics", "text": "Charts, such as formulas of the first order, are evaluated in possible worlds, which give an interpretation of their symbols.1 (in particular a possible world or interpretation, I) indicate a domain of objects, an assignment of each constant in the signature to an object in the domain, and the truth values of predictors over these objects.The semantics assigns each node a value designated as MAPB (I), for each interpretation I taking into account all possible indicators. A variable assessment is an assignment of the quantity of variables in B to domain indicators in the interpretation I. This assignment assigns each node the label1Possible worlds in the literature, including structures of the first order, models of first order and interpretations. In this work we use the term interpretations-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-indicators-MAPI-atom in the interpretation and thus to its truth-value-indicators-indicators-indicators-a single path from root to-leaf. The value of this interpretation of these indicators-indicators-indicators-indicators-indicators-indicators-we define the MAPI-indicators-indicators-indicators-we use the MAPI-indicators-indicators-indicators-indicators-indicators-under PI-indicators-PI-indicators-indicators-indicators-indicators-we."}, {"heading": "2.3 Computations with GFODDs", "text": "It is only a matter of time before that happens, that it happens."}, {"heading": "2.4 Complexity Theory Notation", "text": "Remember that the polynomial hierarchy of P, NP and Co-NP is defined, using an inductive constraint in relation to the calculation with oracles [14, 32, 26]. In particular, we have this in class B. An algorithm is in class A B if it uses calculation in A with a polynomic number of calls to an oracle for a problem in class B. Then we have in class B. Then we have \u0439pk + 1 = NP pk, and in class A + 1 = co-NP pk. One problem lies in class B. Its complementarity lies in class p k and therefore (since the oracle always responds deterministically and correctly) each of these two can serve as an oracle in the definition."}, {"heading": "2.5 Computational Problems", "text": "It is a question of whether, and to what extent, it is a problem at all, which relates to the number of variables and the number of nodes in the GFODD, to the interpretation of constants in the GFODD, and whether it is a problem that requires the interpretation of constants in the GFODD, whether it is a problem or not, whether it is a problem that is a problem that cannot be solved, whether it is a problem that is not solved, whether it is a problem that is not solvable, whether it is a problem that is not solvable, whether it is a problem that is not solvable, whether it is a problem that is not solvable, whether it is a problem that is not solvable, whether it is a problem that is not solvable, whether it is a problem that is not solvable."}, {"heading": "3 The Complexity of Reasoning with FODD", "text": "In this section we develop the complexity results for the specific case of FODDs, which verify the existence of FODDs is essentially the same as evaluating conjunctive queries in databases and can be analyzed similarly. We have the argument here for completeness. Theorem 12 FODD evaluation is NP -complete.Proof. Membership in NP is shown by the algorithm we apply to this problem, MAPB (I) calculates and returns the number of nodes we can represent in a generic Hamiltonian path. Yes is back iff some evaluations returns a value as needed.For hardness we reduce the path to this problem. As shown in the figure, we can verify the number of nodes in a generic Hamiltonian path more than a FODD B. To do this, we simply produce a left path E (x1, x2), E (x3)."}, {"heading": "4 The Complexity of Reasoning with GFODD", "text": "In this section we will analyze the calculation problems for GFODD. We will begin with some observations on an idea of \"supplements\" for GFODDs. Let us be a GFODD associated with the ordered list of variables (wi1,.) and aggregation operations (A1,.), where each Ai is worth more or less. Let us replace all others with the supplement (B) (in relation to the maximum value M), where we change the sheet values and aggregation operations as follows: Let M be any value more or equal to the leamax f value in B. Each sheet value is replaced with M \u2212 v. Each aggregation operator is replaced with A, where Ai is max and vice versa.Theorem 17 Let us leave a GFODD with min and vice versa.Theorem.Theorem."}, {"heading": "1 T(T)", "text": "\"We don't even have a problem,\" he says, \"but we have a problem we can't solve.\" \"We have a problem we can't solve.\" \"We have a problem we have to solve.\" \"We have a problem we have to solve.\" \"We have a problem we have to solve.\" \"We have a problem we have to solve.\" \"We have a problem we have to solve.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem we have to solve.\" \"We have a problem.\" \"We have a problem.\" \"We have a problem.\""}, {"heading": "5 Discussion", "text": "This book discusses the complexity of the problem on the basis of FODD and GFODD."}, {"heading": "Acknowledgments", "text": "This work is partially supported by the NSF scholarship IIS 0964457. Part of this work was done when Roni Khardon was on leave from Trinity College Dublin."}, {"heading": "A Detailed Proofs", "text": "We reduce QBF satisfaction with k / 3 variations of quantifiers to satisfy minimum requirements (k / 1) alternately GFODDs. The reduction takes up most of the construction from the evidence of Q2x2. Qmxm f (x1, x2, xm), where this form needs to be adapted to the new context. To simplify notation, it is convenient to group variables with the same quantifiers so that the QBF has the form Q1x1. Qkxkf (x1, x2, xk), where xi refers to a set of variables."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "<lb>Recent work introduced Generalized First Order Decision Diagrams (GFODD) as a knowl-<lb>edge representation that is useful in mechanizing decision theoretic planning in relational do-<lb>mains. GFODDs generalize function-free first order logic and include numerical values and<lb>numerical generalizations of existential and universal quantification. Previous work presented<lb>heuristic inference algorithms for GFODDs and implemented these heuristics in systems for<lb>decision theoretic planning. In this paper, we study the complexity of the computational prob-<lb>lems addressed by such implementations. In particular, we study the evaluation problem, the<lb>satisfiability problem, and the equivalence problem for GFODDs under the assumption that the<lb>size of the intended model is given with the problem, a restriction that guarantees decidability.<lb>Our results provide a complete characterization placing these problems within the polynomial<lb>hierarchy. The same characterization applies to the corresponding restriction of problems in first<lb>order logic, giving an interesting new avenue for efficient inference when the number of objects<lb>is bounded. Our results show that for \u03a3k formulas, and for corresponding GFODDs, evaluation<lb>and satisfiability are<lb>\u03a3pk complete, and equivalence is \u03a0<lb>p<lb>k+1 complete. For \u03a0k formulas evalua-<lb>tion is<lb>\u03a0pk complete, satisfiability is one level higher and is \u03a3<lb>p<lb>k+1 complete, and equivalence is<lb>\u03a0pk+1 complete.", "creator": "LaTeX with hyperref package"}}}