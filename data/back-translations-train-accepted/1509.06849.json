{"id": "1509.06849", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Sep-2015", "title": "Minimum Weight Perfect Matching via Blossom Belief Propagation", "abstract": "Max-product Belief Propagation (BP) is a popular message-passing algorithm for computing a Maximum-A-Posteriori (MAP) assignment over a distribution represented by a Graphical Model (GM). It has been shown that BP can solve a number of combinatorial optimization problems including minimum weight matching, shortest path, network flow and vertex cover under the following common assumption: the respective Linear Programming (LP) relaxation is tight, i.e., no integrality gap is present. However, when LP shows an integrality gap, no model has been known which can be solved systematically via sequential applications of BP. In this paper, we develop the first such algorithm, coined Blossom-BP, for solving the minimum weight matching problem over arbitrary graphs. Each step of the sequential algorithm requires applying BP over a modified graph constructed by contractions and expansions of blossoms, i.e., odd sets of vertices. Our scheme guarantees termination in O(n^2) of BP runs, where n is the number of vertices in the original graph. In essence, the Blossom-BP offers a distributed version of the celebrated Edmonds' Blossom algorithm by jumping at once over many sub-steps with a single BP. Moreover, our result provides an interpretation of the Edmonds' algorithm as a sequence of LPs.", "histories": [["v1", "Wed, 23 Sep 2015 05:49:53 GMT  (389kb,D)", "http://arxiv.org/abs/1509.06849v1", null]], "reviews": [], "SUBJECTS": "cs.DS cs.AI stat.ML", "authors": ["sungsoo ahn", "sejun park", "michael chertkov", "jinwoo shin"], "accepted": true, "id": "1509.06849"}, "pdf": {"name": "1509.06849.pdf", "metadata": {"source": "CRF", "title": "Minimum Weight Perfect Matching via Blossom Belief Propagation", "authors": ["Sungsoo Ahn", "Sejun Park", "Michael Chertkov", "Jinwoo Shin"], "emails": ["chertkov@lanl.gov", "ssahn0215@kaist.ac.kr,", "sejun.park@kaist.ac.kr,", "jinwoos@kaist.ac.kr"], "sections": [{"heading": "1 Introduction", "text": "This year it is more than ever before in the history of the city."}, {"heading": "2 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Minimum weight perfect matching", "text": "In view of an (undirected) graph G = (V, E), a matching of G is a set of vertex disjunct edges in which a perfect matching must additionally cover all corners of G. In view of integer edge weights (or costs) w = [we], a perfect matching problem consists in the calculation of a perfect matching that minimizes the sum of its associated edge weights. The problem is formulated as the following IP (Integer Programming): Minimizing w x is subject to the determination of E (v) xe = 1, as well as the calculation of V, x = [xe], x {0, 1} | E | (1) Without loss of generality, one can assume that weights are strictly positive.1 Furthermore, we assume that IP (1) is feasible, i.e. there is at least one perfect fit in G."}, {"heading": "2.2 Background on max-product Belief Propagation", "text": "Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha Alpha"}, {"heading": "2.3 Belief propagation for linear programming", "text": "A common distribution of the (binary) random variables Z = [Zi] \u04320, 1} n is called a graphical model (GM) if it is factorized as follows: for z = [zi] vassistststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststststst"}, {"heading": "3 Main result: Blossom Belief Propagation", "text": "In this section, we present our main result - an iterative algorithm called Blossom-BP to solve the problem of the perfect conformity of the minimum weight with any chart in which the algorithm uses the Max product BP as a subroutine. We first describe the algorithm using LP instead of BP in Section 3.1, where we call it Blossom-LP. Its BP implementation is explained in Section 3.2."}, {"heading": "3.1 Blossom-LP algorithm", "text": "8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8"}, {"heading": "3.2 Blossom-BP algorithm", "text": "In this section we show that the algorithm can be implemented using BP. The result is derived in two steps, the first part being the following theory. (1) Theorem 3 LP (8) always has a semi-integral solution x (0, 12, 1), so that the collection of its semi-integral edges shapes disjoint odd cycles.Proof. For the proof of Theorem 3, once we show the semi-integral solution of LP (8), it is easy to verify that the semi-integral edges shapes disjoint odd cycles. Hence, it is sufficient to show that each vertex of the polytopes consisting of limitations of LP (8) is always semi-integral. For this purpose, we use the following problem, which is in the Appendix.Lemma 4 LetA = [Aij]."}, {"heading": "4 Proof of Theorem 2", "text": "Firstly, it is relatively easy to prove the correctness of the Blossom BP as it has been carried out in the following five years: \"It is not as if we are in a position to see the Blossom LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP-LP"}, {"heading": "5 Conclusion", "text": "The BP algorithm is popular for approaching inference solutions emerging in graphical models, where its distributed implementation, associated ease of programming, and strong parallelization potential are the main reasons for its growing popularity. This paper aims to develop a polynomial BP-based scheme that solves the problem of balancing minimum weights perfectly. We believe that our approach is of greater interest in advancing the challenge of developing BP-based MAP solvers in more general GMs as well as distributed (and parallel) solvers for large-scale IPs."}, {"heading": "A Proof of Lemma 4", "text": "For the proof of Lemma 4, let us assume that there is a line in A with a non-zero entry = I. Then we can assume that it is the first line of A and A11 = 1 without loss of generality. Thus, A \u2212 111 = 1 \u2212 1i = 0 for i 6 = 1 and the first column of A \u2212 1 has only 0 and \u00b1 1 entries, since each line of A has at most two non-zero entries. This means that we can delete the proof of Lemma 4 for the submatrix of A. Thus, we can assume that each line of A contains exactly two non-zeros."}, {"heading": "B Proof of Corollary 5", "text": "The proof of corollary 5 is completed with theorem 1. If LP (9) has a unique solution, LP (9) has a unique and integral solution according to theorem 3, i.e., condition C1 of theorem 1. LP (9) fulfills condition C2, since each edge corresponds to two vertices. Now, we must prove that LP (9) condition C3 of theorem 1. Let x (9) be a unique optimal solution of LP (9). Suppose v is a non-flowering vertice, and suppose v (v) = 1 for any vertice (v) = 1 for any vertice (v). If xe 6 = x (f) exists, there is f = 1 for such a vertice (v)."}, {"heading": "C Proof of Claim 8", "text": "First of all, it should be noted that w \u2020 (see (14) for its definition) is only updated when contracting and expanding the 1st step. If contraction occurs, there is a cycle C that must be contracted before step 1. Then, before contraction, it can be observed that for each vertex v in C, yv is expressed as a linear combination of w \u2020: yv = 12 x E (C) (\u2212 1) dC (e, v) w \u2020 e, (16) where dC (v, e) the diagram distance from the vertex v to the edge e in the odd cycle C. In addition, w \u2020 after contraction is expressed as {w \u2020 e w \u2020 e \u2212 yv if v is otherwise updated in the cycle C and e \u00b2 w \u2020 e. Thus, the updated value \u2020 e can be expressed as a linear combination of the old values vvvvvvim v2."}, {"heading": "D Proof of Claim 9", "text": "To achieve this, one must assume that a -th iteration in the t-th iteration is only a -.th iteration in the t-t-th iteration, where t-th iteration is in the t-th iteration. (D) iD \"s is in the t-th iteration, which is in the t-th iteration, which is in the t-th iteration, which is in the t-th iteration, which is in the t-th iteration in the t-t-th iteration, which is in the t-th iteration, which is in the t-th itertex-th iteration, which is in the t-th iteration, which is in the t-th itertex-th iteration, which is in the t-t-t-th itert-th."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "<lb>Max-product Belief Propagation (BP) is a popular message-passing algorithm for<lb>computing a Maximum-A-Posteriori (MAP) assignment over a distribution represented<lb>by a Graphical Model (GM). It has been shown that BP can solve a number of combinato-<lb>rial optimization problems including minimum weight matching, shortest path, network<lb>flow and vertex cover under the following common assumption: the respective Linear<lb>Programming (LP) relaxation is tight, i.e., no integrality gap is present. However, when<lb>LP shows an integrality gap, no model has been known which can be solved systemati-<lb>cally via sequential applications of BP. In this paper, we develop the first such algorithm,<lb>coined Blossom-BP, for solving the minimum weight matching problem over arbitrary<lb>graphs. Each step of the sequential algorithm requires applying BP over a modified graph<lb>constructed by contractions and expansions of blossoms, i.e., odd sets of vertices. Our<lb>scheme guarantees termination in O(n) of BP runs, where n is the number of vertices<lb>in the original graph. In essence, the Blossom-BP offers a distributed version of the cel-<lb>ebrated Edmonds\u2019 Blossom algorithm by jumping at once over many sub-steps with a<lb>single BP. Moreover, our result provides an interpretation of the Edmonds\u2019 algorithm as<lb>a sequence of LPs.", "creator": "LaTeX with hyperref package"}}}