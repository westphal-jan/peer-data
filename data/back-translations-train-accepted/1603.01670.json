{"id": "1603.01670", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Mar-2016", "title": "Network Morphism", "abstract": "We present in this paper a systematic study on how to morph a well-trained neural network to a new one so that its network function can be completely preserved. We define this as \\emph{network morphism} in this research. After morphing a parent network, the child network is expected to inherit the knowledge from its parent network and also has the potential to continue growing into a more powerful one with much shortened training time. The first requirement for this network morphism is its ability to handle diverse morphing types of networks, including changes of depth, width, kernel size, and even subnet. To meet this requirement, we first introduce the network morphism equations, and then develop novel morphing algorithms for all these morphing types for both classic and convolutional neural networks. The second requirement for this network morphism is its ability to deal with non-linearity in a network. We propose a family of parametric-activation functions to facilitate the morphing of any continuous non-linear activation neurons. Experimental results on benchmark datasets and typical neural networks demonstrate the effectiveness of the proposed network morphism scheme.", "histories": [["v1", "Sat, 5 Mar 2016 02:06:43 GMT  (679kb,D)", "http://arxiv.org/abs/1603.01670v1", "Under review for ICML 2016"], ["v2", "Tue, 8 Mar 2016 16:36:00 GMT  (680kb,D)", "http://arxiv.org/abs/1603.01670v2", "Under review for ICML 2016"]], "COMMENTS": "Under review for ICML 2016", "reviews": [], "SUBJECTS": "cs.LG cs.CV cs.NE", "authors": ["tao wei", "changhu wang", "yong rui", "chang wen chen"], "accepted": true, "id": "1603.01670"}, "pdf": {"name": "1603.01670.pdf", "metadata": {"source": "META", "title": "Network Morphism", "authors": ["Tao Wei", "Changhu Wang", "Rong Rui", "Chang Wen Chen"], "emails": ["TAOWEI@BUFFALO.EDU", "CHW@MICROSOFT.COM", "YONGRUI@MICROSOFT.COM", "CHENCW@BUFFALO.EDU"], "sections": [{"heading": "1. Introduction", "text": "In fact, it is that we are able to put ourselves at the top of society, and that we are able to move to another world in which we are in, in which we are in, \"he said."}, {"heading": "2. Related Work", "text": "A number of papers trying to mimic the teacher network with a student network have been developed, which usually need to be learned from scratch. For example, (Bucilu et al., 2006) the authors attempted to train a lighter network by mimicking an ensemble network. (Ba & Caruana, 2014) extended this idea and used a flatter but broader network to mimic a deep and wide network. In (Romero et al., 2014) the authors adopted a deeper but narrower network to mimic a deep and wide network. The proposed network morphism scheme differs from these algorithms in that it directly inherits the children's network (network function) from the parent network, enabling network morphynism to achieve the same performance."}, {"heading": "3. Network Morphism", "text": "We will first discuss deep morphing in the linear case, which is actually associated with width and kernel size morphing, then we will describe how we deal with nonlinearity in neural networks, and finally we will present the stand-alone versions for width morphing and kernel size morphing, followed by subnet morphing."}, {"heading": "3.1. Network Morphism: Linear Case", "text": "We start with the simplest case of a classical neural network. First, we drop all non-linear activation functions and look at a neural network that is connected only to fully connected layers. As shown in Figure 2, in the parent network, two hidden layers Bl \u2212 1 and Bl \u2212 1 are connected, so that the weight matrix G: Bl \u2212 1 and Cl \u2212 1 are the characteristics of Bl \u2212 1 and Bl \u2212 1 the characteristics of Bl \u2212 1 and Bl \u2212 1 the characteristics of Bl \u2212 1 the characteristics of Bl \u2212 1 and Bl \u2212 1. For network morphism, we will insert a new hidden layer Bl \u2212 1 so that the child network is satisfied: Bl + 1 = Fl \u00b7 Bl + 1 \u00b7 (Fl \u2212 1) = G \u00b7 Bl \u2212 1, (2) where Bl \u2212 1 is the hidden layer Bl \u2212 1."}, {"heading": "3.2. Network Morphism Algorithms: Linear Case", "text": "In this section, we present two algorithms for solving the network morphism equation (6). Since the solutions of the equation (6) may not be unique, we will perform the morphism operation in such a way that it follows the desired practices that: 1) the parameters must contain as many disparate elements as possible and 2) the parameters must be on a uniform scale. These two practices are widely adopted in existing work, since random initialization is preferred to zero-fill for non-convex optimization problems (Bishop, 2006), and the scale of initializations is critical for convergence and good performance of deep neural networks (Glorot & Bengio, 2010; He et al., 2015b). Next, we will introduce two algorithms based on deconversion to solve the network morphism equation (6), i.e. 1) general network morphisms and 2) practical network morphisms."}, {"heading": "3.2.1. GENERAL NETWORK MORPHISM", "text}, {"heading": "3.2.2. PRACTICAL NETWORK MORPHISM", "text": "Next, we propose a variant of algorithm 1 that can solve equation (6) with a victim in not sparse practice. This algorithm reduces the zero convergence condition to the point that the number of parameters of Fl or Fl + 1 is not less than G, instead of G. Since we are focusing on network morphism in an expanding mode, we can assume that this condition justifies itself, namely either Fl expands G, or Fl + 1 expands G. Therefore, we can claim that this algorithm solves the network morphism equation (6). As described in algorithm 2, in the event that Fl G expands, starting from Kr2 = K2, we can call iteratively algorithm 1 and shrink the size of Kr2 until the loss converges to 0. This iteration is terminated because we are able to guarantee that Kr2 = 1, the loss is zero, for the other algorithm, that Fl + 1 expands."}, {"heading": "3.3. Network Morphism: Non-linear Case", "text": "In the proposed network activation, it is also necessary to deal with the non-linearity in a neural network. In general, it is not trivial to replace the layer Bl + 1 with two layers Bl + 1. (Fl ~ Bl \u2212 1), where it represents the non-linear activation functions. (Fl = G, where I can satisfy the identity function. (G ~ Bl \u2212 1), the IdMorph scheme in Net2Net (Fl + 1 = I), and Fl = G, where I can perform the identities."}, {"heading": "3.4. Stand-alone Width and Kernel Size Morphing", "text": "As already mentioned, the network morphism equation (6) includes the morphing of network depth, width, and size. Therefore, we can do the morphing of width and core size by introducing additional deep morphing via algorithm 2. Sometimes we need to pay attention to separate network width and core size morphing operations. In this section, we present solutions for these situations."}, {"heading": "3.4.1. WIDTH MORPHING", "text": "For the width of the net, we assume that Bl \u2212 1, Bl \u2212 1, Bl \u2212 1, Bl \u2212 1 are all parental net layers, and the goal is to extend the width (channel size) of the net from Cl \u2212 1, Cl \u2212 1, (12) Bl \u2212 1 (cl + 1) = all parental nets. (13) For the child network, Bl \u2212 1, (cl \u2212 1) = random Bl \u2212 1 (cl + 1) = random Bl \u2212 1 (cl + 1) = random Bl \u2212 1 (cl + 1) = random Bl (cl + 1) = random Bl + 1 (cl + 1), random Bl + 1 (cl + 1), cl + 1 (cl + 1), Bl + 1 (cl + 1), c, c, c, c, 1, cl, 1, cl, 1, 1, cl, + 1, 1, (1), Bl, 1, 1, Bl, 1, 1, (1, cl, 1, 1, 1, 1, 1, 1, Bl, (1)."}, {"heading": "3.4.2. KERNEL SIZE MORPHING", "text": "For the morphing of the core size, we propose a heuristic but effective solution. Suppose that a revolutionary layer l has the core size Kl, and we want to expand it to K-l. If the filters of the layer l are padded with (K-l-Kl) / 2 zeros on each side, the same process applies to the blobs. As shown in Fig. 5, the resulting blobs are of the same shape and also with the same values."}, {"heading": "3.5. Subnet Morphing", "text": "An elegant way is to first design a subnet template and then construct the network through those subnets. Two typical examples are the mlpconv layer for the network in this section, that is, the network morphism from a minimum number of layers in the parent network to a subnet in the children's network. A commonly used subnet is the stacked sequential subnet as shown in Fig. 6 (c). An exmaple is the recipient layer for GoogLeNet (typically one) of the layers in the parent network."}, {"heading": "4. Experimental Results", "text": "In this section, we will conduct experiments on three sets of data (MNIST, CIFAR10 and ImageNet) to show the effectiveness of the proposed network morphism scheme, 1) different morphing operations, 2) both classical and revolutionary neural networks, and 3) both idempotent activations (ReLU) and non-idempotent activations (TanH)."}, {"heading": "4.1. Network Morphism for Classic Neural Networks", "text": "The first experiment is performed with the MNIST dataset (LeCun et al., 1998). MNIST is a standard dataset for handwritten digit recognition with 50,000 training images and 10,000 test images. In this section, instead of state-of-the-art DCNN solutions (LeCun et al., 1998; Chang & Chen, 2015), we use the simple Softmax regression model as a superordinate network to evaluate the effectiveness of network morphism in classical networks. 28 x 28-digit images were flattened as a 784-dimensional feature vector as input. The superordinate model achieved an accuracy of 92.29%, which is considered a baseline. We then converted this model into a multi-layer model (MLP) by adding a PReLU or PTanH hidden layer with the number of hidden neurons h = 50. Figure 7 (a) shows the performance curves of netmorphotation."}, {"heading": "4.2. Depth Morphing, Subnet Morphing, and Internal Regularization for DCNN", "text": "This year, it has reached the stage where it will be able to take the lead in order to achieve the objectives I have mentioned."}, {"heading": "4.3. Kernel Size Morphing and Width Morphing", "text": "The base network (cifar _ base) is a narrower version of cifar _ 222 with an accuracy of 81.48%. Fig.9 (a) shows the curve of core size morphing, which expands the core size of the second layer in each subnet from 1 to 3 (cifar _ ksize), resulting in a performance of 82.81%, which is 1.33% higher than the parent network. Furthermore, we double the number of channels (width) for the first layer in each subnet (cifar _ width).Fig.9 (b) shows the results of NetMorph and Net2Net. As you can see, NetMorph is slightly better. It improves performance to 83.09%, while Net2Net drops a little to 82.70%. For width morphing, NetMorphar and Net2Net only work for the non-linear morphon function, while NetMorph are activated directly."}, {"heading": "4.4. Experiment on ImageNet", "text": "We also conduct experiments on the ImageNet dataset (Russakovsky et al., 2014) with a layer of three object categories; the models were trained on 1.28 million training images and tested on 50,000 validation images; the top-1 and top-5 accuracies for both 1-view and 10-view are reported; the proposed experiments are based on the VGG16 network, which was actually trained on multiple scales (Simonyan & Zisserman, 2014); as the Caffe (Jia et al., 2014) implementation prefers only one scale, for a fair comparison, we first de-scale this model by replicating it on the ImageNet dataset with images enlarged to 256 x 256; this process caused about a 1% drop in performance; this coincides with Table 3 in (Simonyan & Zisserman, 2014) for a fair comparison; we first de-scale the GNetNet version of the G16 school form by adopting the GG-H dataset."}, {"heading": "5. Conclusions", "text": "We have introduced various morphing operations and developed new morphing algorithms based on the morphism equations we have derived. Nonlinearity of a neural network has been carefully considered, and the proposed algorithms allow the morphing function of continuous nonlinear activation neurons. Extensive experiments have been conducted to demonstrate the effectiveness of the proposed network morphism scheme."}], "references": [{"title": "Do deep nets really need to be deep", "author": ["Ba", "Jimmy", "Caruana", "Rich"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Ba et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Ba et al\\.", "year": 2014}, {"title": "Batchnormalized maxout network in network", "author": ["Chang", "Jia-Ren", "Chen", "Yong-Sheng"], "venue": "arXiv preprint arXiv:1511.02583,", "citeRegEx": "Chang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chang et al\\.", "year": 2015}, {"title": "Net2net: Accelerating learning via knowledge transfer", "author": ["Chen", "Tianqi", "Goodfellow", "Ian", "Shlens", "Jonathon"], "venue": "arXiv preprint arXiv:1511.05641,", "citeRegEx": "Chen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2015}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["Girshick", "Ross", "Donahue", "Jeff", "Darrell", "Trevor", "Malik", "Jagannath"], "venue": "In IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Girshick et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Girshick et al\\.", "year": 2014}, {"title": "Understanding the difficulty of training deep feedforward neural networks", "author": ["Glorot", "Xavier", "Bengio", "Yoshua"], "venue": "In International Conference on Artificial Intelligence and Statistics,", "citeRegEx": "Glorot et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Glorot et al\\.", "year": 2010}, {"title": "Deep residual learning for image recognition", "author": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"], "venue": "arXiv preprint arXiv:1512.03385,", "citeRegEx": "He et al\\.,? \\Q2015\\E", "shortCiteRegEx": "He et al\\.", "year": 2015}, {"title": "Delving deep into rectifiers: Surpassing humanlevel performance on imagenet classification", "author": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"], "venue": "arXiv preprint arXiv:1502.01852,", "citeRegEx": "He et al\\.,? \\Q2015\\E", "shortCiteRegEx": "He et al\\.", "year": 2015}, {"title": "Learning multiple layers of features from tiny", "author": ["Krizhevsky", "Alex", "Hinton", "Geoffrey"], "venue": null, "citeRegEx": "Krizhevsky et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Krizhevsky et al\\.", "year": 2009}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["Krizhevsky", "Alex", "Sutskever", "Ilya", "Hinton", "Geoffrey E"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Krizhevsky et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Krizhevsky et al\\.", "year": 2012}, {"title": "Gradient-based learning applied to document recognition", "author": ["LeCun", "Yann", "Bottou", "L\u00e9on", "Bengio", "Yoshua", "Haffner", "Patrick"], "venue": "Proceedings of the IEEE,", "citeRegEx": "LeCun et al\\.,? \\Q1998\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 1998}, {"title": "Fully convolutional networks for semantic segmentation", "author": ["Long", "Jonathan", "Shelhamer", "Evan", "Darrell", "Trevor"], "venue": "arXiv preprint arXiv:1411.4038,", "citeRegEx": "Long et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Long et al\\.", "year": 2014}, {"title": "Learning and transferring mid-level image representations using convolutional neural networks", "author": ["Oquab", "Maxime", "Bottou", "Leon", "Laptev", "Ivan", "Sivic", "Josef"], "venue": "In IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Oquab et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Oquab et al\\.", "year": 2014}, {"title": "Faster r-cnn: Towards real-time object detection with region proposal networks", "author": ["Ren", "Shaoqing", "He", "Kaiming", "Girshick", "Ross", "Sun", "Jian"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Ren et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ren et al\\.", "year": 2015}, {"title": "Fitnets: Hints for thin deep nets", "author": ["Romero", "Adriana", "Ballas", "Nicolas", "Kahou", "Samira Ebrahimi", "Chassang", "Antoine", "Gatta", "Carlo", "Bengio", "Yoshua"], "venue": "arXiv preprint arXiv:1412.6550,", "citeRegEx": "Romero et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Romero et al\\.", "year": 2014}, {"title": "Imagenet large scale visual recognition challenge", "author": ["Russakovsky", "Olga", "Deng", "Jia", "Su", "Hao", "Krause", "Jonathan", "Satheesh", "Sanjeev", "Ma", "Sean", "Huang", "Zhiheng", "Karpathy", "Andrej", "Khosla", "Aditya", "Bernstein", "Michael"], "venue": "International Journal of Computer Vision,", "citeRegEx": "Russakovsky et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Russakovsky et al\\.", "year": 2014}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["Simonyan", "Karen", "Zisserman", "Andrew"], "venue": "arXiv preprint arXiv:1409.1556,", "citeRegEx": "Simonyan et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Simonyan et al\\.", "year": 2014}, {"title": "Going deeper with convolutions", "author": ["Szegedy", "Christian", "Liu", "Wei", "Jia", "Yangqing", "Sermanet", "Pierre", "Reed", "Scott", "Anguelov", "Dragomir", "Erhan", "Dumitru", "Vanhoucke", "Vincent", "Rabinovich", "Andrew"], "venue": "arXiv preprint arXiv:1409.4842,", "citeRegEx": "Szegedy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Szegedy et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 8, "context": "Deep convolutional neural networks (DCNNs) have achieved state-of-the-art results on diverse computer vision tasks such as image classification (Krizhevsky et al., 2012; Simonyan & Zisserman, 2014; Szegedy et al., 2014), object detection (Girshick et al.", "startOffset": 144, "endOffset": 219}, {"referenceID": 16, "context": "Deep convolutional neural networks (DCNNs) have achieved state-of-the-art results on diverse computer vision tasks such as image classification (Krizhevsky et al., 2012; Simonyan & Zisserman, 2014; Szegedy et al., 2014), object detection (Girshick et al.", "startOffset": 144, "endOffset": 219}, {"referenceID": 10, "context": "2015), and semantic segmentation (Long et al., 2014).", "startOffset": 33, "endOffset": 52}, {"referenceID": 13, "context": "fundamentally different from existing work related to network knowledge transferring, which either tries to mimic a parent network\u2019s outputs (Bucilu et al., 2006; Ba & Caruana, 2014; Romero et al., 2014), or pre-trains to facilitate the convergence and/or adapt to new datasets with possible total change in network function (Simonyan & Zisserman, 2014; Oquab et al.", "startOffset": 141, "endOffset": 203}, {"referenceID": 11, "context": ", 2014), or pre-trains to facilitate the convergence and/or adapt to new datasets with possible total change in network function (Simonyan & Zisserman, 2014; Oquab et al., 2014).", "startOffset": 129, "endOffset": 177}, {"referenceID": 8, "context": "Depth morphing is an important morphing type, since current top-notch neural networks are going deeper and deeper (Krizhevsky et al., 2012; Simonyan & Zisserman, 2014; Szegedy et al., 2014; He et al., 2015a).", "startOffset": 114, "endOffset": 207}, {"referenceID": 16, "context": "Depth morphing is an important morphing type, since current top-notch neural networks are going deeper and deeper (Krizhevsky et al., 2012; Simonyan & Zisserman, 2014; Szegedy et al., 2014; He et al., 2015a).", "startOffset": 114, "endOffset": 207}, {"referenceID": 2, "context": "IdMorph is explored by a recent work (Chen et al., 2015), but is potentially problematic due to the sparsity of the identity layer, and might fail sometimes (He et al.", "startOffset": 37, "endOffset": 56}, {"referenceID": 2, "context": "To the best of our knowledge, this is the first work about network morphism, except the recent work (Chen et al., 2015) that introduces the IdMorph.", "startOffset": 100, "endOffset": 119}, {"referenceID": 13, "context": "In (Romero et al., 2014), the authors adopted a deeper but narrower network to mimic a deep and wide network.", "startOffset": 3, "endOffset": 24}, {"referenceID": 11, "context": "Pre-training (Simonyan & Zisserman, 2014) is a strategy proposed to facilitate the convergence of very deep neural networks, and transfer learning2 (Simonyan & Zisserman, 2014; Oquab et al., 2014) is introduced to overcome the overfitting problem when training large neural networks on relatively small Although transfer learning in its own concept is very general, here it is referred as a technique used for DCNNs to pre-train the model on one dataset and then adapt to another.", "startOffset": 148, "endOffset": 196}, {"referenceID": 2, "context": "Net2Net is a recent work proposed in (Chen et al., 2015).", "startOffset": 37, "endOffset": 56}, {"referenceID": 2, "context": "For an idempotent activation function satisfying \u03c6\u25e6\u03c6 = \u03c6, the IdMorph scheme in Net2Net (Chen et al., 2015) is to set Fl+1 = I , and Fl = G, where I represents the identity mapping.", "startOffset": 88, "endOffset": 107}, {"referenceID": 16, "context": ", 2013) and the inception layer for GoogLeNet (Szegedy et al., 2014), as shown in Fig.", "startOffset": 46, "endOffset": 68}, {"referenceID": 9, "context": "The first experiment is conducted on the MNIST dataset (LeCun et al., 1998).", "startOffset": 55, "endOffset": 75}, {"referenceID": 9, "context": "In this section, instead of using state-of-the-art DCNN solutions (LeCun et al., 1998; Chang & Chen, 2015), we adopt the simple softmax regression model as the parent network to evaluate the effectiveness of network morphism on classic networks.", "startOffset": 66, "endOffset": 106}, {"referenceID": 14, "context": "We also conduct experiments on the ImageNet dataset (Russakovsky et al., 2014) with 1,000 object categories.", "startOffset": 52, "endOffset": 78}], "year": 2017, "abstractText": "We present in this paper a systematic study on how to morph a well-trained neural network to a new one so that its network function can be completely preserved. We define this as network morphism in this research. After morphing a parent network, the child network is expected to inherit the knowledge from its parent network and also has the potential to continue growing into a more powerful one with much shortened training time. The first requirement for this network morphism is its ability to handle diverse morphing types of networks, including changes of depth, width, kernel size, and even subnet. To meet this requirement, we first introduce the network morphism equations, and then develop novel morphing algorithms for all these morphing types for both classic and convolutional neural networks. The second requirement for this network morphism is its ability to deal with nonlinearity in a network. We propose a family of parametric-activation functions to facilitate the morphing of any continuous non-linear activation neurons. Experimental results on benchmark datasets and typical neural networks demonstrate the effectiveness of the proposed network morphism scheme.", "creator": "LaTeX with hyperref package"}}}