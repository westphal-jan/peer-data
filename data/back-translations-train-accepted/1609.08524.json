{"id": "1609.08524", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Sep-2016", "title": "UbuntuWorld 1.0 LTS - A Platform for Automated Problem Solving & Troubleshooting in the Ubuntu OS", "abstract": "In this paper, we present UbuntuWorld 1.0 LTS - a platform for developing automated technical support agents in the Ubuntu operating system. Specifically, we propose to use the Bash terminal as a simulator of the Ubuntu environment for a learning-based agent and demonstrate the usefulness of adopting reinforcement learning (RL) techniques for basic problem solving and troubleshooting in this environment. We provide a plug-and-play interface to the simulator as a python package where different types of agents can be plugged in and evaluated, and provide pathways for integrating data from online support forums like Ask Ubuntu into an automated agent's learning process. Finally, we show that the use of this data significantly improves the agent's learning efficiency. We believe that this platform can be adopted as a real-world test bed for research on automated technical support.", "histories": [["v1", "Tue, 27 Sep 2016 16:42:30 GMT  (4966kb,D)", "http://arxiv.org/abs/1609.08524v1", null], ["v2", "Sat, 12 Aug 2017 21:31:02 GMT  (4956kb,D)", "http://arxiv.org/abs/1609.08524v2", "Appeared (under the same title) in AAAI/IAAI 2017"]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["tathagata chakraborti", "kartik talamadupula", "kshitij p fadnis", "murray campbell", "subbarao kambhampati"], "accepted": true, "id": "1609.08524"}, "pdf": {"name": "1609.08524.pdf", "metadata": {"source": "CRF", "title": "UbuntuWorld 1.0 LTS - A Platform for Automated Problem Solving & Troubleshooting in the Ubuntu OS", "authors": ["Tathagata Chakraborti", "Kshitij P. Fadnis", "Murray Campbell", "Subbarao Kambhampati"], "emails": [], "sections": [{"heading": null, "text": "Building effective communication agents has long been the holy grail of artificial intelligence (Turing 1950), but research in this direction has largely recognized that different types of conversation require different skills of an automated agent depending on what the context of the interaction has been like; the focus is therefore on approaches aimed at specific applications. For example, communication agents in the form of chat bots are required to be more creative, reactionary, and human-like; for automation in the context of customer service, qualities such as precision and brevity are more relevant. In fact, human agents strive to be as structured as possible in their interactions with the user. For successful automation in this particular mode of dialogue, we refer to end-to-end-to-end targeted systems, or e2eGCS, we identify the following typical features."}, {"heading": "The Agent Ecosystem", "text": "Although the user can only interact with a generic agent interface, the internal quality of the agent itself Q could be one of several types}, {"heading": "The Environment", "text": "This year, more than ever before in the history of the country in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is not a country, but in which it is a country, a country, a city and a country."}, {"heading": "Experiments and Looking Forward", "text": "In fact, most of them are able to follow the rules they have imposed on themselves. (...) Most of them are able to understand the rules. (...) Most of them are able to understand the rules. (...) Most of them are not able to understand the rules. (...) Most of them are able to understand the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...) Most of them are not able to follow the rules. (...)"}], "references": [{"title": "L", "author": ["S.R.K. Branavan", "H. Chen", "Zettlemoyer"], "venue": "S.; and Barzilay, R.", "citeRegEx": "Branavan et al. 2009", "shortCiteRegEx": null, "year": 2009}, {"title": "Deep reinforcement learning in large discrete action spaces. arXiv:1512.07679v2", "author": ["Dulac-Arnold"], "venue": null, "citeRegEx": "Dulac.Arnold,? \\Q2015\\E", "shortCiteRegEx": "Dulac.Arnold", "year": 2015}, {"title": "and Weld", "author": ["O. Etzioni"], "venue": "D.", "citeRegEx": "Etzioni and Weld 1994", "shortCiteRegEx": null, "year": 1994}, {"title": "C", "author": ["O. Etzioni", "H.M. Levy", "R.B. Segal", "Thekkath"], "venue": "A.", "citeRegEx": "Etzioni et al. 1993", "shortCiteRegEx": null, "year": 1993}, {"title": "Building softbots for unix (preliminary report)", "author": ["Lesh Etzioni", "O. Segal 1993] Etzioni", "N. Lesh", "R. Segal"], "venue": "Technical report", "citeRegEx": "Etzioni et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Etzioni et al\\.", "year": 1993}, {"title": "Pddl - the planning domain definition language", "author": ["Mcdermott"], "venue": "Technical Report TR-98-003,", "citeRegEx": "Mcdermott,? \\Q1998\\E", "shortCiteRegEx": "Mcdermott", "year": 1998}, {"title": "A", "author": ["R.S. Sutton", "Barto"], "venue": "G.", "citeRegEx": "Sutton and Barto 1998", "shortCiteRegEx": null, "year": 1998}, {"title": "S", "author": ["R.S. Sutton", "D.A. McAllester", "Singh"], "venue": "P.; Mansour, Y.; et al.", "citeRegEx": "Sutton et al. 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "A", "author": ["Turing"], "venue": "M.", "citeRegEx": "Turing 1950", "shortCiteRegEx": null, "year": 1950}, {"title": "H", "author": ["Zhuo"], "venue": "H.; Nguyen, T.; and Kambhampati, S.", "citeRegEx": "Zhuo. Nguyen. and Kambhampati 2013", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [], "year": 2016, "abstractText": "In this paper we present UbuntuWorld 1.0 LTS a platform for developing automated technical support agents in the Ubuntu operating system. Specifically, we propose to use the Bash terminal as a simulator of the Ubuntu environment for a learning-based agent, and demonstrate the usefulness of adopting reinforcement learning (RL) techniques for basic problem solving and troubleshooting in this environment. We provide a plug-and-play interface to the simulator as a python package where different types of agents can be plugged in and evaluated, and provide pathways for integrating data from online support forums like Ask Ubuntu into an automated agent\u2019s learning process. Finally, we show that the use of this data significantly improves the agent\u2019s learning efficiency. We believe that this platform can be adopted as a real-world test bed for research on automated technical support. Building effective conversational agents has long been the holy grail of Artificial Intelligence (Turing 1950). Research in this direction has, however, largely recognized that different modes of conversation require widely different capabilities from an automated agent, depending on the particular context of the interaction; the focus has thus been on approaches targeted at specific applications. For example, conversational agents in the form of chat bots are required to be more creative, responsive and human-like; while for automation in the context of customer service, qualities like precision and brevity are more relevant. Indeed, human agents while providing customer support make a conscious effort to be as structured as possible in their interactions with the user. For successful automation in this particular mode of dialog (that we refer to as end-to-end goal-directed conversational systems or e2eGCS) we identify the following typical characteristics End-to-end. This is the ability of the agent to build and operate on knowledge directly from raw inputs as is available from the world and generate the desired behavior. Goal-directed. The interaction is these settings are targeted at achieving specific goals, i.e. to solve a particular problem or reach a desired state. General purpose. It is infeasible to build fundamentally different support agents for every possible environment, \u2217Bulk of the work was done during an internship (Summer, 2016) at the Thomas J. Watson Research Center, Yorktown, NY. and hence there must be a learning component to the agent that facilitates automated building of domain knowledge. Adaptive. An agent must learn to adapt to its experience and update its knowledge, and this further underlines the importance of an agent\u2019s capability to learn. Integrated. Finally, the agent must be able to interact with the human in the loop and integrate (and subsequently learn from) human intelligence in order to solve a wide variety of problems effectively. One of the canonical examples of such systems is technical support. As in the case of customer service in general, automation for technical support requires an agent ascribing to the e2eGCS paradigm to be able to: \u2022 learn a model or understanding of its environment automatically by means of experience, data and exploration; \u2022 evaluate its knowledge given a context, and learn to sense for more information to solve a given problem; and \u2022 interact with the customer, maybe in multiple turns, in a natural fashion to solve a given problem effectively. In this paper we specifically address the learning problem, and make a first attempt to lay a pathway towards achieving fully fleshed-out e2eGCS of the future. Technical support is a particular instance of customer service that deals with problems related to the operation of a specific piece of technology, which means there often exists an underlying (albeit unspecified) model to the operation of such a system, and the model learning proposition becomes especially attractive in this context. However, the critical problem here is that the engineers who build the technology, the people who use it, and the ones who provide support for it are often distinct from each other. One solution then would be to make the architects of the system also build the support engine following the same software specifications; this quickly becomes intractable (and might well require its own support!). A more worthwhile alternative is to learn this model automatically; such an approach, while being considerably simpler to follow, is also likely to be more effective in capturing domain knowledge and providing directed personalized support. The specific domain we look at in this work is technical support in the Ubuntu operating system. This is undoubtedly a real-world environment where support is most sought after, as evident from the thriving community on the official online ar X iv :1 60 9. 08 52 4v 1 [ cs .A I] 2 7 Se p 20 16 Figure 1: Graph (http://bit.ly/2blmZk1) showing the number of zombie posts from 01/2011 to 07/2016. These are the posts that have remained unanswered for more than 72 hours, and their number is growing exponentially. Ubuntu help forum Ask Ubuntu , a question and answer site for Ubuntu users and developers belonging to the Stack Exchange network of Q&A sites. Ask Ubuntu currently boasts of more than 370k registered users and 238k questions asked till date, and ranks at #3 in the family of 158 Stack Exchange communities in terms of traffic or number of users (as of August 2016). A closer look however reveals that this rank is not an indicator of the quality of support in terms of percentage of questions actually answered (Stack Exchange 2016), Ask Ubuntu operates at a lowly rate of 65%, ranking just five places off the bottom of the list. Further, as shown in Figure 1, the number of posts that go unanswered is exploding in recent times (Ask Ubuntu 2014). While there are many causes that may have led to these dire circumstances, some of which we discuss below, one thing is quite certain Ubuntu needs support, and there isn\u2019t enough of it out there. Motivation Ask Ubuntu\u2019s afflictions may be largely attributed to the following main causes 1. New users clogging up the system with simple problems that experienced users do not care to respond to. 2. Duplicate questions, due to large number of users who do not bother to look up existing solutions before posting. 3. An unhealthy newcomer to expert ratio in the community as a result of Ubuntu\u2019s rapidly growing popularity. 4. The continuous roll out of new software/OS versions and corresponding problems with dependencies. 5. Incompletely specified problems, including insufficient state information and error logs leaving members of the community little to work with. We claim here that a large number of these problems can readily be solved through automation. While it may not be reasonable to expect an automated agent to learn the most nuanced details of the Ubuntu OS and solve niche issues that the experts on Ask Ubuntu are more capable of addressing, the large majority of problems faced by users on the forum are readily addressable, being either (1) simple problems faced by newbies that may be directly solved from the documentation, and hence may be learned from exploration in the terminal; or (2) duplicates of existing issues which may Figure 2: Use case querying Ask Ubuntu for guidance. have already been solved, and hence may be learned using relevant data from Ask Ubuntu. The learning approach then also indirectly addresses issues (3) by freeing up (and in turn tapping into) support from Ask Ubuntu and (4,5) since the domain knowledge built up over time as well as local state information sensed by the integrated support agent may be useful in providing more directed and personalized support. Figure 2 provides an illustration of the kind of tasks we are interested in. Consider the simple task of opening a text file. It can be achieved in a single step using gedit, or it can be arbitrarily harder depending on the actual state of the system the agent might need to install gedit if it is not available, and it may need to access the internet and sudo permissions to do so. We want our agent to learn these workflows and dependencies by itself by exploring the Bash environment so that, for example, when an error comes up regarding administrative rights, the agent knows it needs to execute the sudo command. Of course, this is one of the many traces that the agent will need to explore before it learns the correct choices. Ironically, we want to turn to Ask Ubuntu itself in order to make the agent\u2019s life a little easier. As we noted before, users on Ask Ubuntu have been solving similar problems for a long time, and the solutions to Figure 3: A schematic representation of the UbuntuWorld 1.0 LTS prototype. their issues can provide valuable guidance to the learning agent. For example, Figure 2 shows an example where the learning agent queries a TF/IDF based reverse index on the Ask Ubuntu forum data in Lucene (Lucene 2016) with the terminal output as the context, to receive a suggestion of using sudo in this state. Thus in addition to wanting our RL agent to explore and build a model of Ubuntu, we also want to make sure that the exploration is smart given the abundance of data already available on troubleshooting in Ubuntu in online forums such as Ask Ubuntu. We refer to this as data-driven reinforcement learning. Related Work Bringing AI techniques \u2013 particularly reasoning and decision-making \u2013 to the problem of automated software agents has a rich history within the automated planning community. Of particular importance is the work on building softbots for UNIX by Etzioni et al. (Etzioni, Lesh, and Segal 1993; Etzioni and Weld 1994), which is the most comprehensive previous study on this problem. Indeed, as we introduced earlier, many of the issues that are cataloged in that work remain of importance today. The current work builds upon the work of Etzioni et al., particularly their focus on a goal-oriented approach to the problem (Etzioni et al. 1993); however, it goes beyond that work in actually realizing a learning-based agent framework (in our case, reinforcement learning) for the Ubuntu technical support domain. Succinctly, we seek to automate in the largest possible degree the promise of the softbot approach by: (1) exploiting the Bash shell as a robust simulator for learning agents to explore the world; and (2) using the large amounts of data generated by human experts on the internet. On the learning side, Branavan et al.\u2019s work on using reinforcement learning (RL) to map natural language instructions to sequences of executable actions (Branavan et al. 2009) explores a similar problem setting in a Windows OS domain. However, that work focuses on the application of RL techniques to the language processing problem, and on mapping text instructions to executable actions. In contrast, our work focuses on learning task-oriented models for solving the e2eGCS problem. Thus the most relevant prior explorations into this area are complementary to our work in different ways; while the softbot work lays the groundwork for our architecture, Branavan et al.\u2019s work provides a report on using learning on a related but different problem. Contributions The contributions of the paper are \u2022 We provide a platform UbuntuWorld 1.0 LTS based on the Ubuntu OS, and its interface to the Bash terminal, where different types of agents can be plugged in and evaluated. This can be adopted as a valuable real-world test bed for research in automated technical support. \u2022 We propose data-driven RL as a viable solution to the model learning problem for automated technical support in Ubuntu, by augmenting human intelligence in the form of data from online technical support forums like Ask Ubuntu to aid the traditional RL process.", "creator": "LaTeX with hyperref package"}}}