{"id": "1610.08445", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Oct-2016", "title": "New Liftable Classes for First-Order Probabilistic Inference", "abstract": "Statistical relational models provide compact encodings of probabilistic dependencies in relational domains, but result in highly intractable graphical models. The goal of lifted inference is to carry out probabilistic inference without needing to reason about each individual separately, by instead treating exchangeable, undistinguished objects as a whole. In this paper, we study the domain recursion inference rule, which, despite its central role in early theoretical results on domain-lifted inference, has later been believed redundant. We show that this rule is more powerful than expected, and in fact significantly extends the range of models for which lifted inference runs in time polynomial in the number of individuals in the domain. This includes an open problem called S4, the symmetric transitivity model, and a first-order logic encoding of the birthday paradox. We further identify new classes S2FO2 and S2RU of domain-liftable theories, which respectively subsume FO2 and recursively unary theories, the largest classes of domain-liftable theories known so far, and show that using domain recursion can achieve exponential speedup even in theories that cannot fully be lifted with the existing set of inference rules.", "histories": [["v1", "Wed, 26 Oct 2016 18:13:42 GMT  (186kb,D)", "http://arxiv.org/abs/1610.08445v1", "Accepted at NIPS-2016. 22 pages, 1 figure"]], "COMMENTS": "Accepted at NIPS-2016. 22 pages, 1 figure", "reviews": [], "SUBJECTS": "cs.AI stat.ML", "authors": ["seyed mehran kazemi", "angelika kimmig", "guy van den broeck", "david poole"], "accepted": true, "id": "1610.08445"}, "pdf": {"name": "1610.08445.pdf", "metadata": {"source": "CRF", "title": "New Liftable Classes for First-Order Probabilistic Inference", "authors": ["Seyed Mehran Kazemi", "Angelika Kimmig"], "emails": ["smkazemi@cs.ubc.ca", "angelika.kimmig@cs.kuleuven.be", "guyvdb@cs.ucla.edu", "poole@cs.ubc.ca"], "sections": [{"heading": "1 Introduction", "text": "This year, it is at an all-time high in the history of the European Union."}, {"heading": "2 Background and Notation", "text": "A logical variable (LV) is typed with a population. We represent LV with lowercase letters, constants with uppercase letters, the population is associated with a LV x, and its cardinality with one of Xi. A parameterized random variable (PRV) is of the form F (t1,.. tk), where F is a predicate symbol and each ti is an LV or a constant. An unary PRV contains exactly one LV and a binary PRV contains exactly two LVs. A grounding of a PRV is achieved by replacing each of its LVs x with one of the individuals."}, {"heading": "2.1 Converting Inference for SRL Models into WFOMC", "text": "For many SRL models, the (elevated) conclusion can be converted into a WFOMC problem. Let's take as an example a Markov logic network (MLN) [24] with weighted formulas (w1: F1,.., wk: Fk). Let's let the theory T for each weighted formula wi: Fi of this MLN have a set Auxi \u21d4 Fi, so that Auxi is a predicate where all LVs occur in Fi. If we assume that \u03a6 (Auxi) = exp (wi) and \u0438 and \u0445 1 are for the other predicates, the partition function of the MLN is equal to WFOMC (T)."}, {"heading": "2.2 Calculating the WFOMC of a Theory", "text": "We describe a set of rules R that can be applied to a theory to efficiently find its WFOMC components; for further details, readers are referred to [28], [22] or [11]. We use the following theory T with two clauses and four PRVs (S (x, m), individuals (x, m), T (x) and Q (x) as our ongoing example: \"X,\" \"\" X, \"\" X, \"\" \"X,\" \"\" X, \"\" \"\" X, \"\" \"\" \"X,\" \"\" \"S (x, m}, {"heading": "2.3 Domain-Liftability", "text": "Definition 1. A theory is domain-liftable [31] if the calculation of its WFOMC is polynomial in theory. A theory class C is domain-liftable if it checks domain-liftability. So far, two classes of domain-liftable theories have been recognized: FO2 [30, 31] and recursively inconsistent [15, 22]. Definition 2. A theory is in FO2 if all its clauses have up to two LVs. Definition 3. Let T be a theory. T is recursively inconsistent (RU) if for each theory T \u2032 results from the application of rules in R, except when no other rules apply."}, {"heading": "3 The Domain Recursion Rule", "text": "Van den Broeck [31] considered another rule as domain recursion in the rulebook for calculating the WFOMC of a theory. The intuition behind domain recursion is that it modifies a domain recursion by making an element explicit: \"x = x.\" This allows us to compute WFOMC by means of dynamic programming. We refer to R extended to the domain recursion rule as RD. Example 2. Let's say we have a theory whose only clause is \"x, y, p: Friend (x, y) friend (y, x) who is friend of y, y is also friend of the domain recursion rule as RD. Example 2. Let's say we have a theory whose only clause is\" friend \"(y, y) friend (y, x) who is friend of y, y is also friend of x."}, {"heading": "4 Domain Recursion Makes More Theories Domain-Liftable", "text": "S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S2 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4, S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause: S4 clause"}, {"heading": "6 Experiments and Results", "text": "To see the effect of using domain recursion in practice, we find the WFOMC of three theories with and without using the domain recursion rule: 1 - the theory in Example 3, 2 - the S4 clause, and 3 - symmetric transitivity. We implemented the domain recursion rule in C + + and created the codes using the g + + compiler. We compare our results with the WFOMC v3.0 software4. Since this software requires domain-liftable input theories, we require the jobs for the first theory, the jobs for the second, the x for the second, and the p for the third."}, {"heading": "7 Discussion", "text": "We categorize the theories relating to domain recursion as: 1 - theories that are domain-liftable using domain recursion (e.g. S4, symmetric transitivity, and theories in S 2FO2), 2 - theories that are domain-liftable but we have not yet identified them, and 3 - theories that are not domain-liftable even when using domain recursion. We have the theories in category 2 and 3 identified and characterized as future work, but here we show that the theories in category 3 are not domain-liftable."}, {"heading": "8 Conclusion", "text": "We identified new classes of domain-liftable theories called S 2FO2 and S 2RU by reviving the domain recursion rule. We also demonstrated how useful this rule is for theories outside of these classes. Our work opens up a future research direction for identifying and characterizing larger theory classes that can be domain-liftable using domain recursion. It also helps us come closer to a dichotomy between theories that are domain-liftable and those that are not, similar to the Dalvi and Suciu dichotomy result [6] for answering queries in probability databases. It has been shown [15, 16] that summarizing the WFOMC rules to low-level programs (e.g. C + + programs) provides 175-fold acceleration compared to other approaches. While putting together the previously known rules to low-level programs was easy, the summary of the domain-recurrence programs (e.g. C + to low-level recurrence programs) offered 175fold acceleration results."}, {"heading": "9 Proofs of the Theorems, Propositions, and Lemmas", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "9.1 Proof of Proposition 1", "text": "The proof that \"we\" (\"we\"), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we\" (we), \"we (we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we \"(we),\" we (we), \"we\" (we), \"we\" we \"(we),\" we \"we\" (we), \"we\" we (we), \"we (we),\" we \"we\" we \"(we),\" we \"we (we\" (we), \"we\" we \"we\" we \"(we),\" we \"we\" we \"(we\" (we), \"we\" we \"we\" we \"(we\" (we), \"we\" we \"we\" we \"we\" (we \"(we),\" we \"we\" (we \"(we),\" we \"we\" we \"we\" (we), \"we\" we \"(we\" we \"(we),\" we \"we\" (we), \"we\" (we \"(we),\" we \"we\" (we), \"we\" (we \"we\" (we), \"we\" (we), \"we\" (we \"(we),\" we \"(we),\" we \"(we),\" we \"(we\" (we), \"we\" (we \"(we),\" we \"(we),\" we \"we\" we \"(we\" (we), \"(we),\" we \"we\" we \"(we\" (we), \"we\" (we"}, {"heading": "9.2 Proof of Proposition 2", "text": "The proof of symmetrical transitivity has the following two sentences: Q x}, {"heading": "9.3 Proof of Proposition 3", "text": "Proof: After scolemization [30] to eliminate the existential quantifier, the Birthday Paradox Theory contains the following theories: p, p, d, p, p, d1, d2, d1, d1, d2, d2, d2, Born (p, d2), and p, p1, p2, p, d, d: \u00ac Born (p1, d), Born (p2, d), where S is the Skolem predicate. This theory is not in FO2 and not in RU and is not domain-liftable with R. However, this theory is both S 2FO2 and S 2RU, since the last two clauses are cases of \"Born,\" the first in FO2 and also in RU, and has no PRVs with more than one LV except Born. Therefore, this theory is domain-liftable on the basis of Theorem 1."}, {"heading": "9.4 Proof of Theorem 1", "text": "Evidence. The case in which \u03b1 = \u2205 is trivial. Let us leave \u03b1 = \u03b1 (S1) \u0445 \u03b1 (S2) \u0445 \u00b7 \u00b7 \u0445 \u03b1 (Sn). Once we remove all PRVs that have no or a LV by case analysis (annulled), the remaining clauses can be divided into n + 1 components: the i-th component in the first n components contains only Si literals, and the (n + 1) th component contains no Si literals. These components are separated from each other so that we can consider each of them separately. The (n + 1) th component comes from clauses in \u03b2 and is by definition domain liftable. The following two lemmas prove that the clauses in the other components are also domain liftable. The evidence for both lemmas is based on domain recursion.Lemma 1. A clauses theory with only one predicate S is domain liftable, if all clauses in clauses a-Qa-Qa are exactly two-Qa-Qa-Qa."}, {"heading": "9.5 Proof of Lemma 1", "text": "The proof of a theory in this form has a subset of the following clauses: y: y (1), y (1), y (1), y (1), y (2), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (2), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1), y (1, y, y 1, y 1, y (1, y, 1, y (1, 1, 1, 1, 1, y (1), y (1), y (1), y (1), y (1), y (1), y (1, y (1), y (1), y (1), y (1, y (1), y (1), y (1, y (1), y (1), y (1, y (1), y (1), y (1, y (1), y (1), y (1, y (1), y (1, y (1), y (1, y (1), y (1), y (1, y (1), y (1), y (1, y (1, y (1), y (1), y (1, y (1), y (1), y (1, y (1, y (1), y (1), y (1, y (1, y (1), y (1), y (1), y (1, y (1, y (1), y (1), y (1, y (1), y (1, y (1), y (1), y (1"}, {"heading": "9.6 Proof of Lemma 2", "text": "The proof that the sentence of pairs (i, j) is such that the sentence of pairs (i, j) is such that the sentence of pairs (i, j) can be written such that the sentence of pairs (i, qj) is such that the sentence of pairs (i, j) is such that the sentence of pairs (i, j) is such that the sentence of pairs (i, qj) is such (i, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, qj, x, qj, qj, qj, x, qj, qj, x, qj, qj, x, qj, qj, x, qj, x, qj, qj, x, qj, qi, clauses, clauses, clauses, x, clauses, x, qj, x, qj, qj, qj, clauses, clauses, clauses, x, clauses, x, qj, clauses, qj, clauses, x, qj, qj, qj, clauses, qj, clauses, clauses, clauses, x, clauses, clauses, qj, qj, qj, clauses, qj, qj, clauses, qj, qj, clauses, qj, clauses, clauses, clauses, x, qj, clauses, clauses, clauses, clauses, clauses, x, clauses, clauses, clauses, clauses, clauses, clauses, x, clauses, clauses, clauses, clauses, clauses, clauses, x, clauses,"}, {"heading": "9.7 Proof of Proposition 4", "text": "If we prove that T FO2 and T \"are any of the theories resulting from the exhaustive application of the rules in R, expect the case analysis in T to be cancelled. If T first contains a simple PRV with predicate S, it is either still simple in T, or the cancelled decomposition has replaced the LV with a constant. In the first case, we can follow a generic branch of the cancelled case analysis in S, and in the second case, either T\" is empty or all binary PRVs in T have become simple due to the application of the cancelled decomposition in T, and we can follow a generic branch of the cancelled case analysis in each of these PRVs. The generic branch in both cases is in FO2, and the same procedure can be followed until all theories are empty. If T initially contains only binary PRVs, the cancelled decomposition in T applies, since the basis of T is separate from FOU for each pair (FOU FOU 2 and R2U 2)."}], "references": [{"title": "Lifted online training of relational models with stochastic gradient methods", "author": ["Babak Ahmadi", "Kristian Kersting", "Sriraam Natarajan"], "venue": "In ECML PKDD,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "Other questions on probability", "author": ["W.W. Rouse Ball"], "venue": "Mathematical Recreations and Essays, page 45", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1960}, {"title": "Symmetric weighted first-order model counting", "author": ["Paul Beame", "Guy Van den Broeck", "Eric Gribkoff", "Dan Suciu"], "venue": "In PODS,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Automorphism groups of graphical models and lifted variational inference", "author": ["Hung Hai Bui", "Tuyen N Huynh", "Artificial Intelligence Center", "Sebastian Riedel"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Efficient methods for lifted inference with aggregate factors", "author": ["Jaesik Choi", "Rodrigo de Salvo Braz", "Hung H. Bui"], "venue": "In AAAI,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Efficient query evaluation on probabilistic databases", "author": ["Nilesh Dalvi", "Dan Suciu"], "venue": "The VLDB Journal,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "ProbLog: A probabilistic Prolog and its application in link discovery", "author": ["Luc De Raedt", "Angelika Kimmig", "Hannu Toivonen"], "venue": "In IJCAI,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Statistical relational artificial intelligence: Logic, probability, and computation", "author": ["Luc De Raedt", "Kristian Kersting", "Sriraam Natarajan", "David Poole"], "venue": "Synthesis Lectures on Artificial Intelligence and Machine Learning,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2016}, {"title": "Lifted first-order probabilistic inference", "author": ["Rodrigo de Salvo Braz", "Eyal Amir", "Dan Roth"], "venue": "In IJCAI,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Introduction to statistical relational learning", "author": ["Lise Getoor", "Ben Taskar"], "venue": "MIT press,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "Probabilistic theorem proving", "author": ["Vibhav Gogate", "Pedro Domingos"], "venue": "In UAI, pages 256\u2013265,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "Relational Bayesian networks", "author": ["Manfred Jaeger"], "venue": "In UAI. Morgan Kaufmann Publishers Inc.,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1997}, {"title": "A fast variational approach for learning Markov random field language models", "author": ["Yacine Jernite", "Alexander M Rush", "David Sontag"], "venue": "In ICML,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Lifted inference seen from the other side: The tractable features", "author": ["Abhay Jha", "Vibhav Gogate", "Alexandra Meliou", "Dan Suciu"], "venue": "In NIPS,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Knowledge compilation for lifted probabilistic inference: Compiling to a low-level language", "author": ["Seyed Mehran Kazemi", "David Poole"], "venue": "In KR,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2016}, {"title": "Why is compiling lifted inference into a low-level language so effective", "author": ["Seyed Mehran Kazemi", "David Poole"], "venue": "arXiv preprint arXiv:1606.04512,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2016}, {"title": "Counting belief propagation", "author": ["Kristian Kersting", "Babak Ahmadi", "Sriraam Natarajan"], "venue": "In UAI, pages 277\u2013284,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2009}, {"title": "Probabilistic Graphical Models: Principles and Techniques", "author": ["Daphne Koller", "Nir Friedman"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2009}, {"title": "Lifted symmetry detection and breaking for MAP inference", "author": ["Timothy Kopp", "Parag Singla", "Henry Kautz"], "venue": "In NIPS,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Lifted probabilistic inference with counting formulae", "author": ["Brian Milch", "Luke S. Zettlemoyer", "Kristian Kersting", "Michael Haimes", "Leslie Pack Kaelbling"], "venue": "In AAAI,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2008}, {"title": "Markov chains on orbits of permutation groups", "author": ["Mathias Niepert"], "venue": "In UAI,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2012}, {"title": "Towards completely lifted search-based probabilistic inference", "author": ["David Poole", "Fahiem Bacchus", "Jacek Kisynski"], "venue": "[cs.AI],", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "First-order probabilistic inference", "author": ["David Poole"], "venue": "In IJCAI, pages 985\u2013991,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2003}, {"title": "Lifted first-order belief propagation", "author": ["Parag Singla", "Pedro M Domingos"], "venue": "In AAAI,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2008}, {"title": "Probabilistic databases", "author": ["Dan Suciu", "Dan Olteanu", "Christopher R\u00e9", "Christoph Koch"], "venue": "Synthesis Lectures on Data Management,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2011}, {"title": "Completeness results for lifted variable elimination", "author": ["Nima Taghipour", "Daan Fierens", "Guy Van den Broeck", "Jesse Davis", "Hendrik Blockeel"], "venue": "In AISTATS,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "Lifted probabilistic inference by first-order knowledge compilation", "author": ["Guy Van den Broeck", "Nima Taghipour", "Wannes Meert", "Jesse Davis", "Luc De Raedt"], "venue": "In IJCAI,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2011}, {"title": "Lifted relax, compensate and then recover: From approximate to exact lifted probabilistic inference", "author": ["Guy Van den Broeck", "Arthur Choi", "Adnan Darwiche"], "venue": "In UAI,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2012}, {"title": "Skolemization for weighted first-order model counting", "author": ["Guy Van den Broeck", "Wannes Meert", "Adnan Darwiche"], "venue": "In KR,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "On the completeness of first-order knowledge compilation for lifted probabilistic inference", "author": ["Guy Van den Broeck"], "venue": "In NIPS,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2011}, {"title": "Lifted generative learning of Markov logic networks", "author": ["Jan Van Haaren", "Guy Van den Broeck", "Wannes Meert", "Jesse Davis"], "venue": "Machine Learning,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2015}, {"title": "Evidence-based clustering for scalable inference in Markov logic", "author": ["Deepak Venugopal", "Vibhav Gogate"], "venue": "In ECML PKDD,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2014}, {"title": "Scaling-up importance sampling for Markov logic networks", "author": ["Deepak Venugopal", "Vibhav G Gogate"], "venue": "In NIPS,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2014}], "referenceMentions": [{"referenceID": 7, "context": "Statistical relational learning (SRL) [8] aims at unifying logic and probability for reasoning and learning in noisy domains, described in terms of individuals (or objects), and the relationships between them.", "startOffset": 38, "endOffset": 41}, {"referenceID": 9, "context": "Statistical relational models [10], or template-based models [18] extend Bayesian and Markov networks with individuals and relations, and compactly describe probabilistic dependencies among them.", "startOffset": 30, "endOffset": 34}, {"referenceID": 17, "context": "Statistical relational models [10], or template-based models [18] extend Bayesian and Markov networks with individuals and relations, and compactly describe probabilistic dependencies among them.", "startOffset": 61, "endOffset": 65}, {"referenceID": 22, "context": "The aim of lifted inference [23] is to carry out probabilistic inference without needing to reason about each individual separately, by instead treating exchangeable, undistinguished objects as a whole.", "startOffset": 28, "endOffset": 32}, {"referenceID": 4, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 8, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 10, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 13, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 19, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 21, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 26, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 28, "context": "Over the past decade, a large number of lifted inference rules have been proposed [5, 9, 11, 14, 20, 22, 28, 30], often providing exponential speedups for specific SRL models.", "startOffset": 82, "endOffset": 112}, {"referenceID": 30, "context": "These basic exact inference techniques have applications in (tractable) lifted learning [32], where the main task is to efficiently compute partition functions, and in variational and over-symmetric approximations [29, 33].", "startOffset": 88, "endOffset": 92}, {"referenceID": 27, "context": "These basic exact inference techniques have applications in (tractable) lifted learning [32], where the main task is to efficiently compute partition functions, and in variational and over-symmetric approximations [29, 33].", "startOffset": 214, "endOffset": 222}, {"referenceID": 31, "context": "These basic exact inference techniques have applications in (tractable) lifted learning [32], where the main task is to efficiently compute partition functions, and in variational and over-symmetric approximations [29, 33].", "startOffset": 214, "endOffset": 222}, {"referenceID": 0, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 3, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 12, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 16, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 18, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 20, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 23, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 32, "context": "Moreover, they provided the foundation for a rich literature on approximate lifted inference and learning [1, 4, 13, 17, 19, 21, 25, 34].", "startOffset": 106, "endOffset": 136}, {"referenceID": 29, "context": "The theoretical study of lifted inference began with the complexity notion of domain-lifted inference [31] (a concept similar to data complexity in databases).", "startOffset": 102, "endOffset": 106}, {"referenceID": 28, "context": ", two logical variables), is liftable [30].", "startOffset": 38, "endOffset": 42}, {"referenceID": 14, "context": "Kazemi and Poole [15] introduce a liftable class called recursively unary, capturing hierarchical simplification rules.", "startOffset": 17, "endOffset": 21}, {"referenceID": 2, "context": "[3] identify liftable classes of probabilistic database queries.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "Such results elevate the specific inference rules and examples to a general principle, and bring lifted inference in line with complexity and database theory [3].", "startOffset": 158, "endOffset": 161}, {"referenceID": 29, "context": "Domain recursion was introduced by Van den Broeck [31] and was central to the proof that FO is liftable.", "startOffset": 50, "endOffset": 54}, {"referenceID": 25, "context": "However, later work showed that simpler rules suffice to capture FO [27], and the domain recursion rule was forgotten.", "startOffset": 68, "endOffset": 72}, {"referenceID": 2, "context": "[3], asking for an inference rule for a logical sentence called S4.", "startOffset": 0, "endOffset": 3}, {"referenceID": 10, "context": ", [11, 15, 28]) resort to grounding the theories in S 2FO or S RU that are not in FO or recursively unary, and require time exponential in the domain size.", "startOffset": 2, "endOffset": 14}, {"referenceID": 14, "context": ", [11, 15, 28]) resort to grounding the theories in S 2FO or S RU that are not in FO or recursively unary, and require time exponential in the domain size.", "startOffset": 2, "endOffset": 14}, {"referenceID": 26, "context": ", [11, 15, 28]) resort to grounding the theories in S 2FO or S RU that are not in FO or recursively unary, and require time exponential in the domain size.", "startOffset": 2, "endOffset": 14}, {"referenceID": 26, "context": "These results will be established using the weighted first-order model counting (WFOMC) formulation of SRL models [28].", "startOffset": 114, "endOffset": 118}, {"referenceID": 22, "context": "WFOMC is close to classical first-order logic, and it can encode many other SRL models, including Markov logic [24], parfactor graphs [23], some probabilistic programs [7], relational Bayesian networks [12], and probabilistic databases [26].", "startOffset": 134, "endOffset": 138}, {"referenceID": 6, "context": "WFOMC is close to classical first-order logic, and it can encode many other SRL models, including Markov logic [24], parfactor graphs [23], some probabilistic programs [7], relational Bayesian networks [12], and probabilistic databases [26].", "startOffset": 168, "endOffset": 171}, {"referenceID": 11, "context": "WFOMC is close to classical first-order logic, and it can encode many other SRL models, including Markov logic [24], parfactor graphs [23], some probabilistic programs [7], relational Bayesian networks [12], and probabilistic databases [26].", "startOffset": 202, "endOffset": 206}, {"referenceID": 24, "context": "WFOMC is close to classical first-order logic, and it can encode many other SRL models, including Markov logic [24], parfactor graphs [23], some probabilistic programs [7], relational Bayesian networks [12], and probabilistic databases [26].", "startOffset": 236, "endOffset": 240}, {"referenceID": 2, "context": "It is a basic specification language that simplifies the development of lifted inference algorithms [3, 11, 28].", "startOffset": 100, "endOffset": 111}, {"referenceID": 10, "context": "It is a basic specification language that simplifies the development of lifted inference algorithms [3, 11, 28].", "startOffset": 100, "endOffset": 111}, {"referenceID": 26, "context": "It is a basic specification language that simplifies the development of lifted inference algorithms [3, 11, 28].", "startOffset": 100, "endOffset": 111}, {"referenceID": 28, "context": "[30], which", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "2 Calculating the WFOMC of a Theory We now describe a set of rules R that can be applied to a theory to find its WFOMC efficiently; for more details, readers are directed to [28], [22] or [11].", "startOffset": 174, "endOffset": 178}, {"referenceID": 21, "context": "2 Calculating the WFOMC of a Theory We now describe a set of rules R that can be applied to a theory to find its WFOMC efficiently; for more details, readers are directed to [28], [22] or [11].", "startOffset": 180, "endOffset": 184}, {"referenceID": 10, "context": "2 Calculating the WFOMC of a Theory We now describe a set of rules R that can be applied to a theory to find its WFOMC efficiently; for more details, readers are directed to [28], [22] or [11].", "startOffset": 188, "endOffset": 192}, {"referenceID": 29, "context": "A theory is domain-liftable [31] if calculating its WFOMC is polynomial in |\u2206x1 |, |\u2206x2 |, .", "startOffset": 28, "endOffset": 32}, {"referenceID": 28, "context": "So far, two classes of domain-liftable theories have been recognized: FO [30, 31] and recursively unary [15, 22].", "startOffset": 73, "endOffset": 81}, {"referenceID": 29, "context": "So far, two classes of domain-liftable theories have been recognized: FO [30, 31] and recursively unary [15, 22].", "startOffset": 73, "endOffset": 81}, {"referenceID": 14, "context": "So far, two classes of domain-liftable theories have been recognized: FO [30, 31] and recursively unary [15, 22].", "startOffset": 104, "endOffset": 112}, {"referenceID": 21, "context": "So far, two classes of domain-liftable theories have been recognized: FO [30, 31] and recursively unary [15, 22].", "startOffset": 104, "endOffset": 112}, {"referenceID": 29, "context": "Van den Broeck [31] considered another rule called domain recursion in the set of rules for calculating the WFOMC of a theory.", "startOffset": 15, "endOffset": 19}, {"referenceID": 25, "context": "Note that the theory in Example 2 is in FO and as proved in [27], its WFOMC can be computed without using the domain recursion rule3.", "startOffset": 60, "endOffset": 64}, {"referenceID": 2, "context": "[3] identified a clause (S4) with four binary PRVs having the same predicate and proved that even though the rulesR in Section 2.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Birthday Paradox: The birthday paradox problem [2] concerns finding the probability that in a set of n randomly chosen people, a pair of them have the same birthday.", "startOffset": 47, "endOffset": 50}, {"referenceID": 5, "context": "It also helps us get closer to finding a dichotomy between the theories that are domain-liftable and those that are not, similar to the dichotomy result of Dalvi and Suciu [6] for query answering in probabilistic databases.", "startOffset": 172, "endOffset": 175}, {"referenceID": 14, "context": "It has been shown [15, 16] that compiling the WFOMC rules into low-level programs (e.", "startOffset": 18, "endOffset": 26}, {"referenceID": 15, "context": "It has been shown [15, 16] that compiling the WFOMC rules into low-level programs (e.", "startOffset": 18, "endOffset": 26}, {"referenceID": 28, "context": "The last clause is actually in FO, and the Skolemization-rewriting of reused FO variables [30] can be applied, for example to y2 in its second PRV.", "startOffset": 90, "endOffset": 94}, {"referenceID": 28, "context": "After skolemization [30] for removing the existential quantifier, the birthday-paradox theory contains \u2200p \u2208 \u2206p,\u2200d \u2208 \u2206d : S(p) \u2228 \u00acBorn(p, d), \u2200p \u2208 \u2206p, d1, d2 \u2208 \u2206d : \u00acBorn(p, d1) \u2228 \u00acBorn(p, d2), and \u2200p1, p2 \u2208 \u2206p, d \u2208 \u2206d : \u00acBorn(p1, d) \u2228 \u00acBorn(p2, d), where S is the Skolem predicate.", "startOffset": 20, "endOffset": 24}], "year": 2016, "abstractText": "Statistical relational models provide compact encodings of probabilistic dependencies in relational domains, but result in highly intractable graphical models. The goal of lifted inference is to carry out probabilistic inference without needing to reason about each individual separately, by instead treating exchangeable, undistinguished objects as a whole. In this paper, we study the domain recursion inference rule, which, despite its central role in early theoretical results on domain-lifted inference, has later been believed redundant. We show that this rule is more powerful than expected, and in fact significantly extends the range of models for which lifted inference runs in time polynomial in the number of individuals in the domain. This includes an open problem called S4, the symmetric transitivity model, and a first-order logic encoding of the birthday paradox. We further identify new classes S 2FO and S RU of domain-liftable theories, which respectively subsume FO and recursively unary theories, the largest classes of domain-liftable theories known so far, and show that using domain recursion can achieve exponential speedup even in theories that cannot fully be lifted with the existing set of inference rules.", "creator": "LaTeX with hyperref package"}}}