{"id": "1612.08083", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Dec-2016", "title": "Language Modeling with Gated Convolutional Networks", "abstract": "The pre-dominant approach to language modeling to date is based on recurrent neural networks. In this paper we present a convolutional approach to language modeling. We introduce a novel gating mechanism that eases gradient propagation and which performs better than the LSTM-style gating of (Oord et al, 2016) despite being simpler. We achieve a new state of the art on WikiText-103 as well as a new best single-GPU result on the Google Billion Word benchmark. In settings where latency is important, our model achieves an order of magnitude speed-up compared to a recurrent baseline since computation can be parallelized over time. To our knowledge, this is the first time a non-recurrent approach outperforms strong recurrent models on these tasks.", "histories": [["v1", "Fri, 23 Dec 2016 20:32:33 GMT  (221kb,D)", "http://arxiv.org/abs/1612.08083v1", null], ["v2", "Mon, 12 Jun 2017 22:34:00 GMT  (434kb,D)", "http://arxiv.org/abs/1612.08083v2", null], ["v3", "Fri, 8 Sep 2017 22:26:49 GMT  (434kb,D)", "http://arxiv.org/abs/1612.08083v3", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["yann n dauphin", "angela fan", "michael auli", "david grangier"], "accepted": true, "id": "1612.08083"}, "pdf": {"name": "1612.08083.pdf", "metadata": {"source": "META", "title": "Language Modeling with Gated Convolutional Networks", "authors": ["Yann N. Dauphin", "Angela Fan", "Michael Auli", "David Grangier"], "emails": [], "sections": [{"heading": "1. Introduction", "text": "In fact, it is in such a way that one must be able to go to another world, in which one can go to another world, in which one must go to another world, in which one must go to another world, in which one must go to another world, in which one must go to another world, in which one must go to another world, in which one is in, in which one is living, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives, in which one lives in which one lives, in which one lives, in which one lives, one lives in which one lives, in which one lives, in which one lives, in which one lives, in which one lives in which one lives, in which one lives in which one lives, in which one lives in which one lives, in which one lives in which one lives, in which one lives in which one lives, in which one lives, in which one lives in which one lives, in which one lives, in which one lives in which one lives, in which one lives in which one lives, in which one lives, in which one lives in which one lives in which one lives, in which one"}, {"heading": "2. Approach", "text": "In this paper, we present a new neural language model that replaces recurring connections that are very common in practice (5). (D) WN to predict the next word, it is not possible to parallelise the next word. (D) WN to predict the next word is the proposed approach to the inputs to obtain the time dependencies that make it easier to parallelise the individual words of a sentence. This process will calculate each context as a function of a number of preceding words. (D) WN, which is the proposed approach to the recurring networks, is the context size that we can show that we are large enough to fulfil the practice."}, {"heading": "3. Gating Mechanisms", "text": "Gating mechanisms control the path through which information flows in the network and have been shown to be useful for recursive neural networks (Hochreiter & Schmidhuber, 1997).LSTMs allow long-term memory via a separate cell controlled by input and forgetfulness gates, enabling the unhindered flow of information through potentially many time periods. Without these gates, information could easily disappear through the transformations of each time period. Conventional networks, on the other hand, do not suffer from the same kind of vanishing gradient and we find experimentally that they do not require forgetfulness stores. Therefore, our gated linear units only have output gates that allow the network to control what information is to be disseminated in the hierarchy of layers. We show this mechanism to be useful for speech modeling as it allows the model to choose which words or characteristics are relevant to predict the next word."}, {"heading": "4. Experimental Setup", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1. Datasets", "text": "We report the results of two public large format language modeling datasets. First, the Google Billion Word (GBW; Chelba et al., 2013) dataset is considered to be one of the largest language modeling datasets with nearly one billion tokens and a vocabulary of over 800,000 words. In this dataset, words that occur less than three times are replaced by a special unknown symbol. Data is based on an English corpus of 30, 301, 028 sentences, the order of which has been reshuffled. Second, WikiText-103 is a smaller dataset of over 100,000 tokens with a vocabulary of about 200,000 words (Merity et al., 2016). Unlike GBW, sentences are consecutive, allowing the model to be conditioned to larger contexts than individual sentences. For both datasets, we add a beginning of the sequence marker < S > at the beginning of each line and an end of the sequence marker < S > at the end of each line."}, {"heading": "4.2. Training", "text": "We found that Nesterov's dynamics (Sutskever et al., 2013) turn out to be overhead when compared to traditional stochastic gradient descents; the storage costs store another vector of the size of the parameters, but significantly increase the speed of convergence with minimal computational overhead selection; the speed of convergence was further increased by reducing the gradients to 0.1 (Pascanu et al., 2013) and weight normalization (Salimans & Kingma, 2016); the combination of these methods allowed us to achieve stable and fast convergence with comparatively high learning rates such as 1.Pascanu et al. (2013); we argue that gradient truncations are not bound to RNNNs because they can be derived from the more general concept of trustworthy regional methods."}, {"heading": "4.3. Hyper-parameters", "text": "With regard to the architecture of the model, we choose the number of residual blocks between {1,..., 10}, the size of the embedding with {128,.., 256}, the number of units between {128,.., 2048}, the core width between {3,..., 5}. In general, it is easy to find a good architecture, and the rule of thumb is that the bigger the model, the better the performance. With regard to optimization, we initialize the layers of the model with the caiming initialization (He et al., 2015b), whereby the learning rate is consistently scanned in the interval [1., 2.], the dynamic is set to 0.99 and the clipping value to 0.1. Good hyperparameters for the optimizer are quite easy to find and the optimal values do not seem to change very much between the data sets."}, {"heading": "5. Results", "text": "In this section, we compare LSTM and RNN models from the literature with our gated convolutional approach based on two sets of data. Table 1 shows that our model outperforms all state-of-the-art approaches trained on a single GPU on the Google Billion Word benchmark. Of the methods that use multiple GPUs, only the very large LSTM by Jozefowicz et al. (2016) achieves better results. However, this model was trained on 32 GPUs for three weeks, while our model trained on a single GPU within two weeks. The GCNN-13 model has 13 layers of 1268 units each and a core width of 4.On Google Billion Word, the average sentence length is only 20 words, which is relatively short. Next, we test on WikiText-103 to answer the question of whether our model can work equally well in one setup."}, {"heading": "5.1. Computational Efficiency", "text": "We measure the throughput of a model as the number of tokens that can be processed per second. Throughput can be maximized by processing many records in parallel to amortize sequential operations. In contrast, responsiveness is the speed of processing input sequentially, one token at a time. Throughput is important because it indicates the time it takes to process a body of text and responsiveness, an indicator of the time to the end of processing a sentence. A model can have low responsiveness but high throughput by evaluating many records at the same time by stacking. In this case, such a model is slow in processing individual records, but can process many records at a good rate.We rate throughput and responsiveness for models that achieve about 43.9 perplexity."}, {"heading": "5.2. Gating Mechanisms", "text": "In this area, we are dealing with a very complex system, which is about the question of whether and to what extent people who are able to understand the world, understand the world, understand the world, understand the world, understand the world, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understand, understood, understand, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood, understood"}, {"heading": "5.4. Network Depth", "text": "Next, we turn to the question of how network depth affects the accuracy of our model. Figure 4 shows that the deeper we increase the depth of the model, the better the helplessness of Google Billion Word. This also shows that good results are possible with a number of layers smaller than the average sentence length of 20 for GBW, as we use 13 layers in this setting."}, {"heading": "5.5. Context Size", "text": "Figure 5 shows the impact of context size on the gated CNN. We have tried different combinations of network depth and core widths for each context size and selected the best-performing for each context size. Generally, larger contexts improve accuracy, but for windows larger than 20 words, the results decrease dramatically, even for WikiText-103, where we can condition an entire Wikipedia article. This means that the unlimited context that recurring models provide is not strictly necessary for speech modeling. In addition, this finding also coincides with the fact that good performance can be achieved on recurring networks by truncating gradients after only 20 periods, with the average sentence size being shortened over time. Figure 5 also shows that WikiText-103 benefits much more from a larger context size than Google Trillion Word, as performance decreases more with smaller contexts. WikiText-103 provides much more context than Google Word, where the average sentence size is 20 trillion."}, {"heading": "5.6. Training Algorithms", "text": "In this section, we perform an ablation of the weight normalization and the gradient section. To make the comparison fair, we validate the hyperparameters of each configuration separately. Due to the high cost of each of these experiments, we consider only a single iteration of the training data. Figure 6 shows that both methods significantly accelerate convergence. In particular, weight normalization improves speed by more than twice. This acceleration is partly due to the ability to use much higher learning rates (1 instead of 0.01) than would otherwise be possible."}, {"heading": "6. Conclusion", "text": "Compared to recursive neural networks, our approach builds a hierarchical representation of input words that makes it easier to grasp far-reaching dependencies, similar to tree-structured analysis of linguistic grammar formalisms. The same characteristic facilitates learning as traits are passed through a fixed number of layers and nonlinearity, as opposed to recursive networks, where the number of processing steps differs depending on the position of the word in input. Results show that our gated convolutional network on WikiText-103 is reaching a new state of the art. In the larger Google Billion Word benchmark, we achieve a new best result for models trained on a single GPU, outperforming several strong LSTM results."}, {"heading": "Acknowledgments", "text": "We would like to thank Jonas Gehring, Edouard Grave, Armand Joulin and Ronan Collobert for helpful discussions in connection with this work."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "The pre-dominant approach to language modeling to date is based on recurrent neural networks. In this paper we present a convolutional approach to language modeling. We introduce a novel gating mechanism that eases gradient propagation and which performs better than the LSTMstyle gating of Oord et al. (2016b) despite being simpler. We achieve a new state of the art on WikiText-103 as well as a new best single-GPU result on the Google Billion Word benchmark. In settings where latency is important, our model achieves an order of magnitude speed-up compared to a recurrent baseline since computation can be parallelized over time. To our knowledge, this is the first time a non-recurrent approach outperforms strong recurrent models on these tasks.", "creator": "LaTeX with hyperref package"}}}