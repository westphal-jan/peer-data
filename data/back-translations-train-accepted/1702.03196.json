{"id": "1702.03196", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Feb-2017", "title": "Universal Semantic Parsing", "abstract": "Universal Dependencies (UD) provides a cross-linguistically uniform syntactic representation, with the aim of advancing multilingual applications of parsing and natural language understanding. Reddy et al. (2016) recently developed a semantic interface for (English) Stanford Dependencies, based on the lambda calculus. In this work, we introduce UDepLambda, a similar semantic interface for UD, which allows mapping natural language to logical forms in an almost language-independent framework. We evaluate our approach on semantic parsing for the task of question answering against Freebase. To facilitate multilingual evaluation, we provide German and Spanish translations of the WebQuestions and GraphQuestions datasets. Results show that UDepLambda outperforms strong baselines across languages and datasets. For English, it achieves the strongest result to date on GraphQuestions, with competitive results on WebQuestions.", "histories": [["v1", "Fri, 10 Feb 2017 14:57:26 GMT  (622kb,D)", "https://arxiv.org/abs/1702.03196v1", "15 pages with supplementary"], ["v2", "Wed, 15 Feb 2017 16:31:42 GMT  (622kb,D)", "http://arxiv.org/abs/1702.03196v2", "15 pages with supplementary, removed ugly boxes around urls"], ["v3", "Sun, 20 Aug 2017 20:43:17 GMT  (624kb,D)", "http://arxiv.org/abs/1702.03196v3", "16 pages with supplementary, EMNLP 2017"], ["v4", "Mon, 28 Aug 2017 23:59:14 GMT  (633kb,D)", "http://arxiv.org/abs/1702.03196v4", "EMNLP 2017"]], "COMMENTS": "15 pages with supplementary", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["siva reddy", "oscar t\u00e4ckstr\u00f6m", "slav petrov", "mark steedman", "mirella lapata"], "accepted": true, "id": "1702.03196"}, "pdf": {"name": "1702.03196.pdf", "metadata": {"source": "CRF", "title": "Universal Semantic Parsing", "authors": ["Siva Reddy", "Oscar T\u00e4ckstr\u00f6m", "Slav Petrov", "Mark Steedman", "Mirella Lapata"], "emails": ["sivar@stanford.edu,", "slav}@google.com,", "mlap}@inf.ed.ac.uk"], "sections": [{"heading": "1 Introduction", "text": "The Universal Dependencies (UD) initiative aims to develop linguistically consistent annotation guidelines and a large number of uniformly annotated treebanks for many languages (Nivre et al., 2016). Such resources could promote multilingual applications of parsing, improve comparability of evaluation results, facilitate linguistic learning, and more generally support the understanding of natural languages. * In an effort to harness the benefits of UD for understanding natural language, we are introducing UDEPLAMBDA, a semantic interface for UD that maps natural language into logical forms and represents underlying predicate argument structures, in an almost language-independent manner. Our framework is based on DEPLAMBDA for understanding natural language. (Reddy et al., 2016) a recently developed method that converts English Stanford Dependencies (SD) into logical forms. DEPLADA's conversion process is illustrated in more detail in the DEPLA1 BLA.BD illustration only."}, {"heading": "2 DEPLAMBDA", "text": "Before describing UDEPLAMBDA, we provide an overview of DEPLAMBDA (Reddy et al., 2016), on which our approach is based. DEPLAMBDA converts a dependency tree into its logical form in three steps: binarization, substitution, and composition, each of which is briefly outlined. Algorithm 1 describes the steps of DEPLAMBDA in lines 4-6, whereas lines 2 and 3 are specific to the logical form of UDEPLAMBDA. Binarization A dependency tree is first assigned to a Lisp-style s expression, which indicates the sequence of the semantic composition. Figure 1 (b) shows the s expression for the sentence Disney won an Oscar for the film Frozen, derived from the dependency tree in Figure 1 (a). Here, the sub expression (dobj) indicates that the logical form of the formulation won an Oscar."}, {"heading": "3 UDEPLAMBDA", "text": "In fact, it is not the case that this is a way in which people engage in the search for a new world in the most diverse worlds of life and lifestyles of the world. (Si) D \"i\" n \"n\" i \"n,\" \"i\" n \"n\" i \"n,\" \"i\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n,\" \"i\" n \"n\" n \"n\" n, \"i\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n,\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\" n \"n\", \"n\" n \"n\" n \"n\" n \"n\", \"n\" n, \"n\" n \"n\" n \"n\" n \",\" n \"n\" n \",\" n \"n\" n \",\" n \"n\" n \"n\", \"n\" n \",\" n \"n\" n \",\" n \"n\" n \",\" n \"n\" n \",\" n \"n\", \"n\" n \",\" n \",\" n \"n\" n \",\" n \"n\", \"n\", \"n\" n \",\" n \"n\", \"n\" n \",\" n \"n\", \"n\", \"n\" n \"n\", \",\" n \"n\", \"n\", \"n\" n \",\" n \",\" n \",\" n \"n\", \"n\", \"n\", \"n\" n \",\" \"n\" n \",\" \"n\", \",\""}, {"heading": "3.1 Enhancement", "text": "Both Schuster and Manning (2016) and Nivre et al. (2016) point to the need for extended UD representation to enable semantic applications, but such improvements are currently only available for a subset of languages in UD. Instead, we rely on a small number of extensions for our main application - semantic parsing to answer questions - in the hope that this step can be replaced in the future by extended UD representation. Specifically, we define three types of extensions: (1) long-distance dependencies; (2) types of coordination; and (3) sophisticated question tags. These correspond to line 2 of the algorithm 1. First, we identify long-distance dependencies in relative clauses and control constructions. We follow Schuster and Manning (2016) and find them using the acl (relative) and xcomp (control) designations."}, {"heading": "3.2 Graph Structures and BIND", "text": "To deal with graph structures that may result from the extension step, such as those in Figure 2 (a), we propose a variable binding mechanism that differs from that in Figure 2 (b), indicated in line 3 of Algorithm 1. First, each remote dependency is divided into independent slurs, as in Figure 2 (b). We treat BIND like an ordinary dependency label with semantics MERGE, and edit the resulting tree as usual using the s expression: (nsubj (xcomp will (dobj marry Kristoff)). We treat BIND like an ordinary dependency label with semantics MERGE, and edit the resulting tree as normal, using the s expression: (xcomp wants a substitution)."}, {"heading": "3.3 Linguistic Constructions", "text": "It is not the way in which we define the terminology for the terminology of the president in the terminology of the president in the terminology of the president in the terminology of the president in the terminology of the president in the terminology of the president in the terminology of the president in the terminology of the president (xa) in the terminology of the president (xa) in the terminology of the president (xa) in UDEPLAMBDA and (prep) in the terminology of the president (pobj in 2009) in the terminology of the president in the terminology of the president (xa) in the terminology of the president (xa) in the terminology of the president (xa) in the terminology of the president in the terminology of the president (xa) in the terminology of the president in the terminology of the president (pobj in 2009)."}, {"heading": "3.4 Limitations", "text": "In order to achieve linguistic independence, UDEPLAMBDA must sacrifice semantic specificity, since in many cases semantics is borne by lexical information. Consider the sentences John broke the window and The window broke. Although it is the window that broke in both cases, our inferred logical forms do not canonize the relationship between fraction and window. To achieve this, we would have to make the substitution of nsubj dependent on the lexical context, so that when window occurs as nsubj with fraction, the predicate arg2 is used instead of arg1. UDEPLAMBDA does not address this problem and leaves it to the objective application to derive context-sensitive semantics from arg1 and arg2. In order to measure the effects of this constraint, we present UDEPLAMBDASRL in Section 4.4, which addresses this problem by relying on semantic roles from the semantic roller lettering, which we consider most to be non-semantic (2010, Palmer, D)."}, {"heading": "4 Cross-lingual Semantic Parsing", "text": "To investigate the multilingual character of UDEPLAMBDA, we will conduct an empirical evaluation to answer Freebase questions in three different languages: English, Spanish, and German. Before discussing the details of this experiment, we will briefly outline the Employed semantic parsing framework. 5UD v1.3 has 40 dependency labels, and the number of substitution rules in UDEPLAMBDA is 61, with some labels having multiple rules and some representing lexical semantics."}, {"heading": "4.1 Semantic Parsing as Graph Matching", "text": "We use GRAPHPARSER (Reddy et al., 2016) to map these logical forms to their grounded freebase diagrams, using corresponding ungrounded diagrams. Figures 3 (a) to 3 (c) show the unrounded diagrams corresponding to logical forms of UDEPLAMBDA, each based on the same freebase diagram. Figure 3 (d) shows rectangles representing entities, circles events, rounded rectangles representing entity types and edges between events and entities entities predicting or freebase relationships. Finally, the TARGET node represents the set of values of x that are consistent with the freebase diagram, which is the answer to the question. GRAPHPARSER treats semantic parsing as a graph-matching problem with the goal of finding the freebase diagrams that correspond to a structural diagram."}, {"heading": "4.2 Datasets", "text": "We evaluate our approach using two public benchmarks for answering questions compared to Freebase: WebQuestions (Berant et al., 2013), a widely used benchmark consisting of English questions and their answers, and GraphQuestions (Su et al., 2016), a recently published dataset of English questions with their answers and grounded logical forms. While WebQuestions is dominated by simple entity attribute questions, GraphQuestions contains a large number of compositional questions that include aggregation (e.g. how many children Eddard Stark was born in Winterfell?) and comparison (e.g. in what month does the average rainfall of New York City exceed 86 mm?)."}, {"heading": "4.3 Implementation Details", "text": "Dependency Parsing The English, Spanish, and German Universal Dependencies (UD) treebanks (v1.3; Nivre et al 2016) were used to train part of speech taggers and dependency parsers. We used a bidirectional LSTM tagger (Plank et al., 2016) and a bidirectional LSTM shift-reduce parser (Kiperwasser and Goldberg, 2016). Both the tagger and the parser require word embedding. For English, we used GloVe embedding (Pennington et al., 2014), which were trained on Wikipedia and the Gigaword corpus. For German and Spanish, we used SENNA embedding (Collobert et al., 2011; Al-Rfou et al., 2013), trained on Wikipedia corpora (58M English; 397M Spanish)."}, {"heading": "4.4 Comparison Systems", "text": "We have compared UDEPLAMBDA to four versions of GRAPHPARSER, which are based on different representations in addition to previous work. SINGLEEVENT This model is similar to the Learning-to-Rank model of Bast and Haussmann (2015). An unrounded graph is created by connecting all units in the question to the TARGET node, which represents a single event.Note that this 7http: / / 128.2.220.95 / multilingual / data /.baseline cannot handle compositional questions, or combine or compare those with aggregation.DEPTREE An unrounded graph is obtained directly from the original dependency tree.For each parent and their dependents in the tree, an event is created. Each dependency is associated with an edge designated with its dependency relationship, while the parent associates the event with an edge or comparisons.DEPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREPREANT is added to the original word from the original dependency tree."}, {"heading": "4.5 Results", "text": "Table 3 shows the performance of GRAPHPARSER with these different representations. Here, and in what follows, we use the average F1 score of the predicted answers (Berant et al., 2013) as a benchmark. First, we observe that UDEPLAMBDA consistently exceeds the SINGLEEVENT and DEPTREE representations in all languages. With both sets of data, the results for German are lower than for Spanish. This is consistent with the lower performance of the syntactic parser on the German part of the UD Treebank, suggesting that UDEPLAMBDA does not sacrifice too much specificity for universality. With both sets of data, the results for German are lower compared to Spanish. This is consistent with the lower performance of the syntactic parser on the German part of the UD Treebank. While UDEPLAMBDASRL performs better than UDEP-8The parser accuracies (%), which we refer to as 87.733 and 81.8133 for English."}, {"heading": "5 Related Work", "text": "Our work continues the long tradition of constructing logical forms from syntactic representations initiated by Montague (1973).Our literature is rich in experiments on semantic interfaces for HPSG (Copestake et al., 2005), LFG (Kaplan and Bresnan, 1982; Dalrymple et al., 1995; Crouch and King, 2006), TAG (Kallmeyer and Joshi, 2003; Gardent and Kallmeyer, 2003; Nesson and Shieber, 2006), and CCG (Baldridge and Kruijff et al., 2002; Bos et al., 2004; Artzi et al., 2015).Unlike existing semantic interfaces, UDEPLAMBDA uses a dependency syntax, a widely used syntactic resource. A common trend in previous work on semantic interfaces is dependence on the present."}, {"heading": "6 Conclusions", "text": "We introduced UDEPLAMBDA, a semantic interface to Universal Dependencies, and demonstrated that the resulting semantic representation can be used to answer questions against a knowledge base in multiple languages. We provided translations of benchmark data sets into German and Spanish, hoping to stimulate further multilingual research on semantic parsing and question-answering in general. We have only scratched the surface when it comes to applying UDEPLAMBDA to natural language understanding tasks. In the future, we would like to explore how this framework can benefit applications such as summary (Liu et al., 2015) and machine reading (Sachan and Xing, 2016)."}, {"heading": "Acknowledgements", "text": "This work benefited greatly from discussions with Michael Collins, Dipanjan Das, Federico Fancellu, Julia Hockenmaier, Tom Kwiatkowski, Adam Lopez, Valeria de Paiva, Martha Palmer, Fernando Pereira, Emily Pitler, Vijay Saraswat, Nathan Schneider, Bonnie Webber, Luke Zettlemoyer, and members of ILCC Edinburgh University, Microsoft Research Redmond NLP Group, Stanford NLP Group, and UW NLP and Linguistics Group. We thank Reviewer 2 for useful feedback. The authors also thank the Universal Dependencies Community for the tree manners and documentation. This research is supported by a Google PhD Fellowship to the first author. We thank the European Research Council (Lapata; Prize No. 681760) for its financial support."}, {"heading": "1 Universal Quantification", "text": "Consider the sentence Everyone wants to buy a house, 1 whose dependency tree is shown in the Universal Dependencies (UD) formalism in Figure 1 (a). This sentence has two possible readings: Either (1) each person wants to buy a different house; or (2) each person wants to buy the same house. Both interpretations correspond to the following logical forms: (1), (x.person (xa), (zyw.will (ze), (ze, xa), (ye), xcomp (ze, ye), (wa), house (wa), (arg1 (ze, xa), (ze, wa); (2) w.house (wa), (x.person (xa), (ze, xa), (ze), arg1 (ze, xa), (ye), xcomp (ze, ye), arg1 (ze, xa), arg2 (ze, wa)."}, {"heading": "In (1), the existential variable w is in the scope of", "text": "Conversely, in (2) the universal variable x is to the extent of the existential variable w (i.e. the house is independent of the person), which is also referred to as inverse reading. Our goal is to obtain the logical form of surface reading in (1) with UDEPLAMBDA. We do not seek the reverse reading, although this is possible through the use of scolemization (Steedman, 2012). In UDEPLAMBDA, lambda expressions for words, phrases and sentences are all in the form \u03bbx... But from (1) it is clear that we must express variables bound by quantifiers, for example, while we still provide access to x for composition, which requires a change in the type system since the first example borrowed from Schuster and Manning."}, {"heading": "1.1 With Original Type System", "text": "Figure 1 (b) shows the extended dependency tree for the sentence in which BIND was introduced to join the implicit nsubj of buy (BIND). The s expression corresponding to the extended tree is: (nsubj (xcomp wants (mark (nsubj (dobj buy (det house a))) to)) (BIND everyone))). With the following substitution entries, will, buy, buy, EVENT; everyone, house, xcomp wants (mark (nsubj buy (det house a)) to)) (BIND everyone (x) will, buy, buy, buy, buy, EVENT; everyone, house, xcomp; a, to, FUNCTIONAL; year (x)."}, {"heading": "1.2 With Higher-order Type System", "text": "Following this change, we assign the following lambda expressions to the words in our example sentence: Every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x), every human being (x)."}], "references": [{"title": "Quantification and negation in event semantics", "author": ["Lucas Champollion."], "venue": "Baltic International Yearbook of Cognition, Logic and Communication 6(1):3.", "citeRegEx": "Champollion.,? 2010", "shortCiteRegEx": "Champollion.", "year": 2010}, {"title": "Universal Dependencies to Logical Forms with Negation Scope", "author": ["Federico Fancellu", "Siva Reddy", "Adam Lopez", "Bonnie Webber."], "venue": "arXiv Preprint .", "citeRegEx": "Fancellu et al\\.,? 2017", "shortCiteRegEx": "Fancellu et al\\.", "year": 2017}, {"title": "Transforming Dependency Structures to Logical Forms for Semantic Parsing", "author": ["Siva Reddy", "Oscar T\u00e4ckstr\u00f6m", "Michael Collins", "Tom Kwiatkowski", "Dipanjan Das", "Mark Steedman", "Mirella Lapata."], "venue": "Transactions of the Association for Computational", "citeRegEx": "Reddy et al\\.,? 2016", "shortCiteRegEx": "Reddy et al\\.", "year": 2016}, {"title": "Enhanced English Universal Dependencies", "author": ["Sebastian Schuster", "Christopher D. Manning"], "venue": null, "citeRegEx": "Schuster and Manning.,? \\Q2016\\E", "shortCiteRegEx": "Schuster and Manning.", "year": 2016}, {"title": "Taking Scope - The Natural Semantics of Quantifiers", "author": ["Mark Steedman."], "venue": "MIT Press.", "citeRegEx": "Steedman.,? 2012", "shortCiteRegEx": "Steedman.", "year": 2012}], "referenceMentions": [{"referenceID": 2, "context": "Our framework is based on DEPLAMBDA (Reddy et al., 2016) a recently developed method that converts English Stanford Dependencies (SD) to logical forms.", "startOffset": 36, "endOffset": 56}, {"referenceID": 2, "context": "Before describing UDEPLAMBDA, we provide an overview of DEPLAMBDA (Reddy et al., 2016) on which our approach is based.", "startOffset": 66, "endOffset": 86}, {"referenceID": 3, "context": "Both Schuster and Manning (2016) and Nivre et al.", "startOffset": 5, "endOffset": 33}, {"referenceID": 3, "context": "Both Schuster and Manning (2016) and Nivre et al. (2016) note the necessity of an enhanced UD representation to enable semantic applications.", "startOffset": 5, "endOffset": 57}, {"referenceID": 2, "context": "We follow Schuster and Manning (2016) and find these using the labels acl (relative) and xcomp (control).", "startOffset": 10, "endOffset": 38}, {"referenceID": 2, "context": "To obtain the correct coordination scope, we refine conj to conj:verb, conj:vp, conj:sentence, conj:np, and conj:adj, similar to Reddy et al. (2016). Finally, unlike the PTB tags (Marcus et al.", "startOffset": 129, "endOffset": 149}, {"referenceID": 2, "context": "We use GRAPHPARSER (Reddy et al., 2016) to map these logical forms to their grounded Freebase graphs, via corresponding ungrounded graphs.", "startOffset": 19, "endOffset": 39}, {"referenceID": 2, "context": "Entity Resolution We follow Reddy et al. (2016) and resolve entities in three steps: (1) potential entity spans are identified using seven handcrafted part-of-speech patterns; (2) each span is associated with potential Freebase entities according to the Freebase/KG API; and (3) the 10-best entity linking lattices, scored by a structured perceptron, are", "startOffset": 28, "endOffset": 48}, {"referenceID": 2, "context": "Features We use features similar to Reddy et al. (2016): basic features of words and Freebase relations, and graph features crossing ungrounded events with grounded relations, ungrounded types with grounded relations, and ungrounded answer type crossed with a binary feature indicating if the answer is a number.", "startOffset": 36, "endOffset": 56}, {"referenceID": 2, "context": "Features We use features similar to Reddy et al. (2016): basic features of words and Freebase relations, and graph features crossing ungrounded events with grounded relations, ungrounded types with grounded relations, and ungrounded answer type crossed with a binary feature indicating if the answer is a number. In addition, we add features encoding the semantic similarity of ungrounded events and Freebase relations. Specifically, we used the cosine similarity of the translation-invariant embeddings of Huang et al. (2015).7", "startOffset": 36, "endOffset": 527}, {"referenceID": 2, "context": "CCGGRAPH This is the CCG-based semantic representation of Reddy et al. (2014). Note that this baseline exists only for English.", "startOffset": 58, "endOffset": 78}, {"referenceID": 2, "context": "7 DEPLAMBDA (Reddy et al., 2016) \u2013 50.", "startOffset": 12, "endOffset": 32}, {"referenceID": 2, "context": "Most related to our work is the English-specific system of Reddy et al. (2016). We attribute the 0.", "startOffset": 59, "endOffset": 79}, {"referenceID": 2, "context": "Earlier attempts at extracting semantic representations from dependencies have mainly focused on languagespecific dependency representations (Spreyer and Frank, 2005; Simov and Osenova, 2011; Hahn and Meurers, 2011; Reddy et al., 2016; Falke et al., 2016; Beltagy, 2016), and multi-layered dependency annotations (Jakob et al.", "startOffset": 141, "endOffset": 270}], "year": 2017, "abstractText": "Universal Dependencies (UD) offer a uniform cross-lingual syntactic representation, with the aim of advancing multilingual applications. Recent work shows that semantic parsing can be accomplished by transforming syntactic dependencies to logical forms. However, this work is limited to English, and cannot process dependency graphs, which allow handling complex phenomena such as control. In this work, we introduce UDEPLAMBDA, a semantic interface for UD, which maps natural language to logical forms in an almost language-independent fashion and can process dependency graphs. We perform experiments on question answering against Freebase and provide German and Spanish translations of the WebQuestions and GraphQuestions datasets to facilitate multilingual evaluation. Results show that UDEPLAMBDA outperforms strong baselines across languages and datasets. For English, it achieves a 4.9 F1 point improvement over the state-of-the-art on GraphQuestions.", "creator": "LaTeX with hyperref package"}}}