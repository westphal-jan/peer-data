{"id": "1703.00440", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Mar-2017", "title": "Fast k-Nearest Neighbour Search via Prioritized DCI", "abstract": "Most exact methods for k-nearest neighbour search suffer from the curse of dimensionality; that is, their query times exhibit exponential dependence on either the ambient or the intrinsic dimensionality. Dynamic Continuous Indexing (DCI) offers a promising way of circumventing the curse by avoiding space partitioning and achieves a query time that grows sublinearly in the intrinsic dimensionality. In this paper, we develop a variant of DCI, which we call Prioritized DCI, and show a further improvement in the dependence on the intrinsic dimensionality compared to standard DCI, thereby improving the performance of DCI on datasets with high intrinsic dimensionality. We also demonstrate empirically that Prioritized DCI compares favourably to standard DCI and Locality-Sensitive Hashing (LSH) both in terms of running time and space consumption at all levels of approximation quality. In particular, relative to LSH, Prioritized DCI reduces the number of distance evaluations by a factor of 5 to 30 and the space consumption by a factor of 47 to 55.", "histories": [["v1", "Wed, 1 Mar 2017 18:51:13 GMT  (170kb,D)", "http://arxiv.org/abs/1703.00440v1", "11 pages, 5 figures"], ["v2", "Thu, 20 Jul 2017 17:46:04 GMT  (289kb,D)", "http://arxiv.org/abs/1703.00440v2", "14 pages, 6 figures; International Conference on Machine Learning (ICML), 2017"]], "COMMENTS": "11 pages, 5 figures", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.DS cs.IR stat.ML", "authors": ["ke li", "jitendra malik"], "accepted": true, "id": "1703.00440"}, "pdf": {"name": "1703.00440.pdf", "metadata": {"source": "META", "title": "Fast k-Nearest Neighbour Search via Prioritized DCI", "authors": ["Ke Li", "Jitendra Malik"], "emails": ["<ke.li@eecs.berkeley.edu>."], "sections": [{"heading": "1. Introduction", "text": "This year is the highest in the history of the country."}, {"heading": "2. Related Work", "text": "Early exact algorithms are deterministic and store points in building-based data structures. Examples include k-d trees (Bentley, 1975), R trees (Guttman, 1984), and X trees (Berchtold et al., 1996; 1998), which divide vector space into a hierarchy of hemispheres, hyperrectangles, or voronoi polygons and track the points that lie within each cell. While their query times are logarithmic in size of datasets, they exhibit exponential dependencies on ambient dimensionality. Another method (Meiser, 1993) divides space by permeating multiple hyperplanes. It effectively trades space for time and achieves polynomial queries of time at the cost of exponential dimensional complexity into ambient dimensionality."}, {"heading": "3. Prioritized DCI", "text": "(D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l (D) l) l (D) l (D) l (D) l) l (D) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l) l (D) l) l (D) l (D) l (D) l) l (D) l) l) l (D) l (D) l (D) l) l (D) l (D) l (D) l) l (D) l (D) l (D) l) l (D) l (D) l (D) l (D) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l (D) l (D) l (D) l (D) l) l (D) l (D) l) l (D) l (D) l (D) l (D) l (D) l (D) l) l (D) l (D) l (D) l (D) l (D) l (D"}, {"heading": "4. Analysis", "text": "We analyze the temporal and spatial complexity of this event in multiple (dependent) events, each of which is a specific event, and derive the stop conditions for the data-independent and data-dependent versions of the algorithm."}, {"heading": "5. Experiments", "text": "This year, as never before in the history of a country in which it is a country in which it is a country in which it is a country in which it is a country, a country in which it is a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country"}, {"heading": "6. Conclusion", "text": "We have shown that prioritized DCI further improves the dependence of query time on intrinsic dimensionality compared to standard DCI. In particular, a linear increase in intrinsic dimensionality can be largely counteracted by a linear increase in the number of simple indices. Empirical results confirmed the benefits of prioritized DCI in practice. In particular, prioritized DCI requires significantly less distance evaluations and lower memory usage than standard DCI and LSH at all levels of approximation quality."}], "references": [{"title": "Near-optimal hashing algorithms for approximate nearest neighbor in high dimensions", "author": ["Andoni", "Alexandr", "Indyk", "Piotr"], "venue": "In Foundations of Computer Science,", "citeRegEx": "Andoni et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Andoni et al\\.", "year": 2006}, {"title": "Optimal datadependent hashing for approximate near neighbors", "author": ["Andoni", "Alexandr", "Razenshteyn", "Ilya"], "venue": "In Proceedings of the Forty-Seventh Annual ACM on Symposium on Theory of Computing,", "citeRegEx": "Andoni et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Andoni et al\\.", "year": 2015}, {"title": "Approximate nearest neighbor queries in fixed dimensions", "author": ["Arya", "Sunil", "Mount", "David M"], "venue": "In SODA,", "citeRegEx": "Arya et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Arya et al\\.", "year": 1993}, {"title": "An optimal algorithm for approximate nearest neighbor searching fixed dimensions", "author": ["Arya", "Sunil", "Mount", "David M", "Netanyahu", "Nathan S", "Silverman", "Ruth", "Wu", "Angela Y"], "venue": "Journal of the ACM (JACM),", "citeRegEx": "Arya et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Arya et al\\.", "year": 1998}, {"title": "Multidimensional binary search trees used for associative searching", "author": ["Bentley", "Jon Louis"], "venue": "Communications of the ACM,", "citeRegEx": "Bentley and Louis.,? \\Q1975\\E", "shortCiteRegEx": "Bentley and Louis.", "year": 1975}, {"title": "The X-tree : An Index Structure for HighDimensional Data", "author": ["Berchtold", "Stefan", "Keim", "Daniel A", "peter Kriegel", "Hans"], "venue": "In Very Large Data Bases, pp", "citeRegEx": "Berchtold et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Berchtold et al\\.", "year": 1996}, {"title": "Fast nearest neighbor search in high-dimensional space", "author": ["Berchtold", "Stefan", "Ertl", "Bernhard", "Keim", "Daniel A", "Kriegel", "H-P", "Seidl", "Thomas"], "venue": "In Data Engineering,", "citeRegEx": "Berchtold et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Berchtold et al\\.", "year": 1998}, {"title": "Cover trees for nearest neighbor", "author": ["Beygelzimer", "Alina", "Kakade", "Sham", "Langford", "John"], "venue": "In Proceedings of the 23rd international conference on Machine learning,", "citeRegEx": "Beygelzimer et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Beygelzimer et al\\.", "year": 2006}, {"title": "Nearest neighbor queries in metric spaces", "author": ["Clarkson", "Kenneth L"], "venue": "Discrete & Computational Geometry,", "citeRegEx": "Clarkson and L.,? \\Q1999\\E", "shortCiteRegEx": "Clarkson and L.", "year": 1999}, {"title": "Random projection trees and low dimensional manifolds", "author": ["Dasgupta", "Sanjoy", "Freund", "Yoav"], "venue": "In Proceedings of the fortieth annual ACM symposium on Theory of computing,", "citeRegEx": "Dasgupta et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Dasgupta et al\\.", "year": 2008}, {"title": "Randomized partition trees for nearest neighbor", "author": ["Dasgupta", "Sanjoy", "Sinha", "Kaushik"], "venue": "search. Algorithmica,", "citeRegEx": "Dasgupta et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Dasgupta et al\\.", "year": 2015}, {"title": "Locality-sensitive hashing scheme based on p-stable distributions", "author": ["Datar", "Mayur", "Immorlica", "Nicole", "Indyk", "Piotr", "Mirrokni", "Vahab S"], "venue": "In Proceedings of the twentieth annual symposium on Computational geometry,", "citeRegEx": "Datar et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Datar et al\\.", "year": 2004}, {"title": "R-trees: a dynamic index structure for spatial searching, volume", "author": ["Guttman", "Antonin"], "venue": null, "citeRegEx": "Guttman and Antonin.,? \\Q1984\\E", "shortCiteRegEx": "Guttman and Antonin.", "year": 1984}, {"title": "Rank-based similarity search: Reducing the dimensional dependence", "author": ["Houle", "Michael E", "Nett", "Michael"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on,", "citeRegEx": "Houle et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Houle et al\\.", "year": 2015}, {"title": "Approximate nearest neighbors: towards removing the curse of dimensionality", "author": ["Indyk", "Piotr", "Motwani", "Rajeev"], "venue": "In Proceedings of the thirtieth annual ACM symposium on Theory of computing,", "citeRegEx": "Indyk et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Indyk et al\\.", "year": 1998}, {"title": "Finding nearest neighbors in growth-restricted metrics", "author": ["Karger", "David R", "Ruhl", "Matthias"], "venue": "In Proceedings of the thiry-fourth annual ACM symposium on Theory of computing,", "citeRegEx": "Karger et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Karger et al\\.", "year": 2002}, {"title": "Navigating nets: simple algorithms for proximity search", "author": ["Krauthgamer", "Robert", "Lee", "James R"], "venue": "In Proceedings of the fifteenth annual ACM-SIAM symposium on Discrete algorithms,", "citeRegEx": "Krauthgamer et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Krauthgamer et al\\.", "year": 2004}, {"title": "Fast k-nearest neighbour search via Dynamic Continuous Indexing", "author": ["Li", "Ke", "Malik", "Jitendra"], "venue": "In ICML,", "citeRegEx": "Li et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Li et al\\.", "year": 2016}, {"title": "An investigation of practical approximate nearest neighbor algorithms", "author": ["Liu", "Ting", "Moore", "Andrew W", "Yang", "Ke", "Gray", "Alexander G"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Liu et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2004}, {"title": "Point location in arrangements of hyperplanes", "author": ["Meiser", "Stefan"], "venue": "Information and Computation,", "citeRegEx": "Meiser and Stefan.,? \\Q1993\\E", "shortCiteRegEx": "Meiser and Stefan.", "year": 1993}, {"title": "A fast nearest-neighbor search algorithm", "author": ["Orchard", "Michael T"], "venue": "In Acoustics, Speech, and Signal Processing,", "citeRegEx": "Orchard and T.,? \\Q1991\\E", "shortCiteRegEx": "Orchard and T.", "year": 1991}, {"title": "Locality sensitive hashing: A comparison of hash function types and querying mechanisms", "author": ["Paulev\u00e9", "Lo\u0131\u0308c", "J\u00e9gou", "Herv\u00e9", "Amsaleg", "Laurent"], "venue": "Pattern Recognition Letters,", "citeRegEx": "Paulev\u00e9 et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Paulev\u00e9 et al\\.", "year": 2010}, {"title": "Spectral hashing", "author": ["Weiss", "Yair", "Torralba", "Antonio", "Fergus", "Rob"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Weiss et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Weiss et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 5, "context": "Examples include k-d trees (Bentley, 1975), R-trees (Guttman, 1984) and X-trees (Berchtold et al., 1996; 1998), which divide the vector space into a hierarchy of half-spaces, hyper-rectangles or Voronoi polygons and keep track of the points that lie in each cell.", "startOffset": 80, "endOffset": 110}, {"referenceID": 18, "context": "Spill trees (Liu et al., 2004), RP trees (Dasgupta & Freund, 2008) and virtual spill trees (Dasgupta & Sinha, 2015) extend k-d trees by randomizing the hyperplanes that partition the space into half-spaces at each node of the tree.", "startOffset": 12, "endOffset": 30}, {"referenceID": 7, "context": "Examples include navigating nets (Krauthgamer & Lee, 2004), cover trees (Beygelzimer et al., 2006) and rank cover trees (Houle & Nett, 2015), which maintain sets of subsampled data points at different levels of granularity and descend through the hierarchy of neighbourhoods of decreasing radii around the query.", "startOffset": 72, "endOffset": 98}, {"referenceID": 3, "context": "ing (Arya et al., 1998) and local search (Arya & Mount, 1993) have been developed; like many exact algorithms, their query times also scale exponentially in the ambient dimensionality.", "startOffset": 4, "endOffset": 23}, {"referenceID": 11, "context": "Locality-Sensitive Hashing (LSH) (Indyk & Motwani, 1998; Datar et al., 2004; Andoni & Indyk, 2006) partitions the space into regular cells, whose exact shapes are implicitly defined by the choice of the hash function.", "startOffset": 33, "endOffset": 98}, {"referenceID": 21, "context": "Consequently, various data-dependent hashing schemes have been proposed (Paulev\u00e9 et al., 2010; Weiss et al., 2009; Andoni & Razenshteyn, 2015); unlike data-independent hashing schemes, however, they do not allow dynamic updates to the dataset.", "startOffset": 72, "endOffset": 142}, {"referenceID": 22, "context": "Consequently, various data-dependent hashing schemes have been proposed (Paulev\u00e9 et al., 2010; Weiss et al., 2009; Andoni & Razenshteyn, 2015); unlike data-independent hashing schemes, however, they do not allow dynamic updates to the dataset.", "startOffset": 72, "endOffset": 142}, {"referenceID": 3, "context": ", 2015) projects the data to a lower dimensional space that approximately preserves approximate nearest neighbour relationships and applies other approximate algorithms like BBD trees (Arya et al., 1998) to the projected data.", "startOffset": 184, "endOffset": 203}], "year": 2017, "abstractText": "Most exact methods for k-nearest neighbour search suffer from the curse of dimensionality; that is, their query times exhibit exponential dependence on either the ambient or the intrinsic dimensionality. Dynamic Continuous Indexing (DCI) (Li & Malik, 2016) offers a promising way of circumventing the curse by avoiding space partitioning and achieves a query time that grows sublinearly in the intrinsic dimensionality. In this paper, we develop a variant of DCI, which we call Prioritized DCI, and show a further improvement in the dependence on the intrinsic dimensionality compared to standard DCI, thereby improving the performance of DCI on datasets with high intrinsic dimensionality. We also demonstrate empirically that Prioritized DCI compares favourably to standard DCI and Locality-Sensitive Hashing (LSH) both in terms of running time and space consumption at all levels of approximation quality. In particular, relative to LSH, Prioritized DCI reduces the number of distance evaluations by a factor of 5 to 30 and the space consumption by a factor of 47 to 55.", "creator": "LaTeX with hyperref package"}}}