{"id": "1703.07438", "review": {"conference": "acl", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Mar-2017", "title": "The NLTK FrameNet API: Designing for Discoverability with a Rich Linguistic Resource", "abstract": "A new Python API, integrated within the NLTK suite, offers access to the FrameNet 1.7 lexical database. The lexicon (structured in terms of frames) as well as annotated sentences can be processed programatically, or browsed with human-readable displays via the interactive Python prompt.", "histories": [["v1", "Tue, 21 Mar 2017 21:36:28 GMT  (28kb,D)", "https://arxiv.org/abs/1703.07438v1", null], ["v2", "Sat, 22 Jul 2017 04:44:38 GMT  (33kb,D)", "http://arxiv.org/abs/1703.07438v2", "EMNLP 2017 Demo"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["nathan schneider", "chuck wooters"], "accepted": true, "id": "1703.07438"}, "pdf": {"name": "1703.07438.pdf", "metadata": {"source": "CRF", "title": "The NLTK FrameNet API: Designing for Discoverability with a Rich Linguistic Resource", "authors": ["Nathan Schneider", "Chuck Wooters"], "emails": ["nathan.schneider@georgetown.edu", "wooters@semanticmachines.com"], "sections": [{"heading": "1 Introduction", "text": "For more than a decade, the Berkeley FrameNet (henceforth simply \"FrameNet\") project (Baker et al., 1998) has documented the vocabulary of contemporary English in terms of the theory of framesemantics (Fillmore, 1982). As a freely available, linguistically rich resource, FrameNet today comprises more than 1,000 semantic frames, 10,000 lexical senses, and 100,000 lexical annotations in sentences originating from corpora.The resource forms the basis for much research into the processing of natural language - in particular a tradition of semantic role labeling that continues to this day (Gildea and Jurafsky, 2002; Baker et al., 2007; Das et al., 2014; FitzGerald et al., 2015; Roth and Lapata, 2015 and others). Despite the importance of FrameNet, computational users are often frustrated by the complexity of its custom XML format."}, {"heading": "2 Installation", "text": "Instructions for installing NLTK can be found at nltk.org. NLTK is cross-platform and supports both Python 2.7 and Python 3.x environments. It is available in the Anaconda and Enthought Canopy Python distributions for data scientists. 3For a working NLTK installation (version 3.2.2 or later), all you need to do is call a method to download the FrameNet data: 4.5 > > > > Import nltk > > > nltk.download (\"framenet _ v17\") berkeley.edu / fndrupal / FrameGrapher if the user knows he is looking there.) In the interest of space, our API does not display this data in the frame display, but it can be accessed via an individual frame relation object or using the fe _ relations () method () berkeley.edu / fndrupal / FrameGrapher if the user knows that the Relationobject is there, but our API does not show it in the frame."}, {"heading": "3 Overview of FrameNet", "text": "A semantic framework represents a scene - a type of event, state, or other scenario that may be universal or culturally specific, and domain or domain specific. It defines participant roles or framework elements (FEs) whose relationships form the conceptual background required to understand (certain senses of) vocabulary items. Frequently cited examples from Fillmore include: \u2022 verbs such as buy, sell, and pay, and nouns such as buyer, seller, price, and purchase, all are defined in relation to a commercial transaction scene (frame). \u2022 The FEs that are central to this framework cannot or may not be explicitly mentioned in a text containing any of the above lexical items - are the buyer, the seller, the goods sold by the seller, and the money given as payment in exchange by the buyer. \u2022 The concept of REVENGE - hierarchically in vocabulary items such as revenge items."}, {"heading": "4 API Overview", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1 Design Principles", "text": "The API is designed with the following objectives in mind: simplicity. It should be easy to access important objects in the database (primarily frames, lexical units, and annotations), either by iterating over all entries, or by searching for specific entries. To avoid overloading the API with too many methods, other information in the database should be accessible via object attributes. Calling the API's Help () method prints a summary of the most important methods for accessing information in the database. Findability. Many details of the database are complex. The API makes it easy to browse through the interactive prompt of database objects, which is located in the Python method. The most important way it achieves this is a nicely printed representation of the objects, such as the frame representation in Figure 1 (see \u00a7 4.3)."}, {"heading": "4.2 Lexicon Access Methods", "text": "The most important methods for looking up information in the lexicon are: frames (name) frame (nameOrId) lus (name, frame) lu (id) fes (name, frame) The methods with plural names (left) are used to search the lexicon using a regular expression pattern that is to be matched with the entry name. Additionally (or instead) lus () and fes () allow the restriction of results to a specific frame. The result is a list of 0 or more elements. If no arguments are given, all entries in the lexicon are returned. An example of a search for frame name patterns: 7 > > > fn.frames (\"(? i) creat\") 7 (? i) makes the pattern case-insensitive. [< frame ID = 268 name = Cooking _ creation >, < frame ID = 1658 name = Create _ physical _ artwork >,...] relookmapping by LU name pattern - that theent suffix ltis > verball = < 5v = ID"}, {"heading": "4.3 Database Objects", "text": "All structured objects in the database - frames, LUs, FEs, etc. - are loaded as AttrDict data structures. Each AttrDict instance is an association of string keys to values that can be strings, numbers, or structured objects. AttrDict is so called because it allows access to keys as attributes: > > > f = fn.frame (\"Revenge\") > > f.keys () dict _ keys ([\"cBy,\" cDate, \"'name,' ID ',' _ type ',' definition ',' definitionMarkup, 'frameRelations', 'FE', 'FEcoreSets', 'lexUnit','semTypes', 'URL') > > f.name 'Revenge' > > f.ID 347For the most important types of structured objects, the API text display specifies the contents of the object in a human-like way."}, {"heading": "4.4 Advanced Lexicon Access", "text": "Frame relations. The inventory of frames is organized in a semantic network through several types of frame-to-frame relationships. For example, the REVENGE frame is involved in a frame-to-frame relationship: it is related to the more general frame-to-frame relationship through inheritance, as shown in the center of Figure 1. REWARDS _ AND _ PUNISHMENTS, which in turn is involved in inheritance relationships with other frames. Each frame-to-frame relationship bundles mappings between corresponding FEs in the two frames. Apart from the frame-to-frame attribute of frame objects, frame-to-frame relationships can be searched using the main method frame _ relations (Frame, frame2, type), with the optional arguments responsible for filtering corresponding FEs in the two frames and the nature of the relationship."}, {"heading": "4.5 Corpus Access", "text": "In this context, it should be pointed out that this is not only a purely theoretical question, but also a purely theoretical question, which is primarily a purely theoretical question: how to find an answer to the question, how to find an answer to the question, how to find an answer to the question, how to find an answer to the question, how to find an answer to the question whether an answer should be found or not? First and foremost, it is a question of whether an answer to the question whether an answer can be found or not, an answer to the question whether an answer should be found or not, an answer to the question that does not arise."}, {"heading": "5 Limitations and future work", "text": "The bulk of the Berkeley FrameNet data currently not supported by the API is valence patterns. For a specific LU, valence patterns summarize the syntactic insights of the FEs across commented tokens and are presented in the \"Lexical Entry\" report of each LU on the FrameNet website. We intend to expand support for valence patterns in future releases, along with more complex query / browsing capabilities for annotations and better representations of syntactic information related to FE annotations. Some of these functionalities can be modeled by tools such as FrameSQL (Sato, 2003) and Valencer (Kabbach and Ribeyre, 2016). In addition, it is worth examining whether the API for FrameNets can be customized in other languages and to support linguistic mapping to 14 of these other FrameNets in the ongoing multilingual FrameNet project.9"}, {"heading": "Acknowledgments", "text": "We would like to thank Collin Baker, Michael Ellsworth and Miriam R. L. Petruck for their help in understanding the FrameNet annotation process and the technical aspects of the data and for co-organizing the FrameNet tutorial, which introduced an early version of the API (Baker et al., 2015). We would also like to thank Steven Bird, Mikhail Korborov, Pierpaolo Pantone, Rob Malouf and everyone else who contributed to the release of the API by checking the code and reporting bugs, as well as anonymous reviewers for their suggestions."}], "references": [{"title": "Getting the roles right: using FrameNet in NLP", "author": ["Collin Baker", "Nathan Schneider", "Miriam R.L. Petruck", "Michael Ellsworth."], "venue": "Proc. of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Tutorial Ab-", "citeRegEx": "Baker et al\\.,? 2015", "shortCiteRegEx": "Baker et al\\.", "year": 2015}, {"title": "The Berkeley FrameNet project", "author": ["Collin F. Baker", "Charles J. Fillmore", "John B. Lowe."], "venue": "Proc. of COLING-ACL, pages 86\u201390, Montreal, Quebec, Canada.", "citeRegEx": "Baker et al\\.,? 1998", "shortCiteRegEx": "Baker et al\\.", "year": 1998}, {"title": "Natural Language Processing with Python: Analyzing Text with the Natural Language Toolkit", "author": ["Steven Bird", "Ewan Klein", "Edward Loper."], "venue": "O\u2019Reilly Media, Inc., Sebastopol, CA.", "citeRegEx": "Bird et al\\.,? 2009", "shortCiteRegEx": "Bird et al\\.", "year": 2009}, {"title": "Frame-semantic parsing", "author": ["Dipanjan Das", "Desai Chen", "Andr\u00e9 F.T. Martins", "Nathan Schneider", "Noah A. Smith."], "venue": "Computational Linguistics, 40(1):9\u201356.", "citeRegEx": "Das et al\\.,? 2014", "shortCiteRegEx": "Das et al\\.", "year": 2014}, {"title": "Frame Semantics", "author": ["Charles J. Fillmore."], "venue": "Linguistics in the Morning Calm, pages 111\u2013137. Hanshin Publishing Co., Seoul, South Korea.", "citeRegEx": "Fillmore.,? 1982", "shortCiteRegEx": "Fillmore.", "year": 1982}, {"title": "A frames approach to semantic analysis", "author": ["Charles J. Fillmore", "Collin Baker."], "venue": "Bernd Heine and Heiko Narrog, editors, The Oxford Handbook of Linguistic Analysis, pages 791\u2013816. Oxford University Press, Oxford, UK.", "citeRegEx": "Fillmore and Baker.,? 2009", "shortCiteRegEx": "Fillmore and Baker.", "year": 2009}, {"title": "Semantic role labeling with neural network factors", "author": ["Nicholas FitzGerald", "Oscar T\u00e4ckstr\u00f6m", "Kuzman Ganchev", "Dipanjan Das."], "venue": "Proc. of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 960\u2013970, Lisbon, Por-", "citeRegEx": "FitzGerald et al\\.,? 2015", "shortCiteRegEx": "FitzGerald et al\\.", "year": 2015}, {"title": "Automatic labeling of semantic roles", "author": ["Daniel Gildea", "Daniel Jurafsky."], "venue": "Computational Linguistics, 28(3):245\u2013288.", "citeRegEx": "Gildea and Jurafsky.,? 2002", "shortCiteRegEx": "Gildea and Jurafsky.", "year": 2002}, {"title": "Valencer: an API to query valence patterns in FrameNet", "author": ["Alexandre Kabbach", "Corentin Ribeyre."], "venue": "Proc. of COLING 2016, the 26th International Conference on Computational Linguistics: System Demonstrations, pages 156\u2013160, Os-", "citeRegEx": "Kabbach and Ribeyre.,? 2016", "shortCiteRegEx": "Kabbach and Ribeyre.", "year": 2016}, {"title": "Contextaware frame-semantic role labeling", "author": ["Michael Roth", "Mirella Lapata."], "venue": "Transactions of the Association for Computational Linguistics, 3:449\u2013460.", "citeRegEx": "Roth and Lapata.,? 2015", "shortCiteRegEx": "Roth and Lapata.", "year": 2015}, {"title": "FrameNet II: extended theory and practice", "author": ["Josef Ruppenhofer", "Michael Ellsworth", "Miriam R.L. Petruck", "Christopher R. Johnson", "Collin F. Baker", "Jan Scheffczyk"], "venue": null, "citeRegEx": "Ruppenhofer et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ruppenhofer et al\\.", "year": 2016}, {"title": "FrameSQL: A software tool for FrameNet", "author": ["Hiroaki Sato."], "venue": "Proc. of ASIALEX 2003, pages 251\u2013 258, Tokyo, Japan.", "citeRegEx": "Sato.,? 2003", "shortCiteRegEx": "Sato.", "year": 2003}], "referenceMentions": [{"referenceID": 1, "context": "For over a decade, the Berkeley FrameNet (henceforth, simply \u201cFrameNet\u201d) project (Baker et al., 1998) has been documenting the vocabulary of contemporary English with respect to the theory of frame semantics (Fillmore, 1982).", "startOffset": 81, "endOffset": 101}, {"referenceID": 4, "context": ", 1998) has been documenting the vocabulary of contemporary English with respect to the theory of frame semantics (Fillmore, 1982).", "startOffset": 114, "endOffset": 130}, {"referenceID": 2, "context": "The API is included within recent releases of the popular NLTK suite (Bird et al., 2009), and provides access to nearly all the information in the FrameNet release.", "startOffset": 69, "endOffset": 88}, {"referenceID": 5, "context": "The reader is referred to (Fillmore and Baker, 2009) for a contemporary introduction to the resource and the theory of frame semantics upon which it is based.", "startOffset": 26, "endOffset": 52}, {"referenceID": 10, "context": "Extensive linguistic details are provided in (Ruppenhofer et al., 2016).", "startOffset": 45, "endOffset": 71}, {"referenceID": 5, "context": "8In frame semantics, core FEs that are not overt but are conceptually required by a frame are said to be implicit via null instantiation (Fillmore and Baker, 2009).", "startOffset": 137, "endOffset": 163}, {"referenceID": 11, "context": "Some of this functionality can be modeled after tools like FrameSQL (Sato, 2003) and Valencer (Kabbach and Ribeyre, 2016).", "startOffset": 68, "endOffset": 80}, {"referenceID": 8, "context": "Some of this functionality can be modeled after tools like FrameSQL (Sato, 2003) and Valencer (Kabbach and Ribeyre, 2016).", "startOffset": 94, "endOffset": 121}, {"referenceID": 0, "context": "Petruck for helping us to understand the FrameNet annotation process and the technical aspects of the data, and for co-organizing the FrameNet tutorial in which an early version of the API was introduced (Baker et al., 2015).", "startOffset": 204, "endOffset": 224}], "year": 2017, "abstractText": "A new Python API, integrated within the NLTK suite, offers access to the FrameNet 1.7 lexical database. The lexicon (structured in terms of frames) as well as annotated sentences can be processed programatically, or browsed with human-readable displays via the interactive Python prompt.", "creator": "LaTeX with hyperref package"}}}