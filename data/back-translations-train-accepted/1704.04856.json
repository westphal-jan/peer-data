{"id": "1704.04856", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Apr-2017", "title": "A Neural Architecture for Generating Natural Language Descriptions from Source Code Changes", "abstract": "We propose a model to automatically describe changes introduced in the source code of a program using natural language. Our method receives as input a set of code commits, which contains both the modifications and message introduced by an user. These two modalities are used to train an encoder-decoder architecture. We evaluated our approach on twelve real world open source projects from four different programming languages. Quantitative and qualitative results showed that the proposed approach can generate feasible and semantically sound descriptions not only in standard in-project settings, but also in a cross-project setting.", "histories": [["v1", "Mon, 17 Apr 2017 03:20:07 GMT  (52kb,D)", "http://arxiv.org/abs/1704.04856v1", "Accepted at ACL 2017"]], "COMMENTS": "Accepted at ACL 2017", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["pablo loyola", "edison marrese-taylor", "yutaka matsuo"], "accepted": true, "id": "1704.04856"}, "pdf": {"name": "1704.04856.pdf", "metadata": {"source": "CRF", "title": "A Neural Architecture for Generating Natural Language Descriptions from Source Code Changes", "authors": ["Pablo Loyola", "Edison Marrese-Taylor", "Yutaka Matsuo"], "emails": ["pablo@weblab.t.u-tokyo.ac.jp", "emarrese@weblab.t.u-tokyo.ac.jp", "matsuo@weblab.t.u-tokyo.ac.jp"], "sections": [{"heading": "1 Introduction", "text": "In this sense, it is expected that to some extent there will be the same distributional regularities that manifests a proper natural language (Hindle et al., 2012). Furthermore, the unique nature of the source code, which is contained in a simple and human-readable format, allows an indirect mode of communication between developers, a phenomenon that has intensified in recent years in light of the current software development paradigm, where billions of lines of code are written in a distributed and asynchronous manner (Gousios et al., 2014). The scale and complexity of software systems has, of course, led developers to support their understanding (Letovsky, 1987)."}, {"heading": "2 Related Work", "text": "The use of natural language processing to support software engineering tasks has steadily increased over the years, especially in terms of source code search, traceability, and the location of program functions (Panichella et al., 2013; Asuncion et al., 2010).The emergence of unifying paradigms that explicitly relate programming to natural languages in distributional terms (Hindle et al., 2012) and the availability of large bodies of mainly open-source software opened the door to the use of language modeling for multiple tasks (Raychev et al., 2015). Examples of this are approaches to the presentation of educational programs (Mou et al., 2016), error localization (Huo et al.), API proposal (Gu et al., 2016), and code completion (Raychev et al., 2014). The summary of the source code has received particular attention, ranging from the use of key physiological information functions to the completion."}, {"heading": "3 Proposed Model", "text": "We assume that the presence of T models of a given project architecture {v1,.. hi, vT}. Faced with a pair of successive versions (vt \u2212 1, vt), we define the tuple (Ct, Nt) where Ct = 0 (v) represents a code snippet associated with changes over V in time t and Nt represents its corresponding natural language (NL). Let C be the set of all source code snipets and N be the set of all descriptions in NL. We consider training with T code snippets and summary pairs (Ct, Nt), 1 \u2264 t \u2264 T, Ct-C, Nt-N. Then, for a given code snippet Ck, the goal of our model is to produce the most likely NL description N? Specifically, similar to (Iyer et al al., 2016), we use an augmented decoder or architecture."}, {"heading": "4 Empirical Study", "text": "This year, it has reached the stage where it will be able to take the lead."}, {"heading": "5 Conclusion and Future work", "text": "We proposed an encoder decoder model for automatically generating natural descriptions from changes in the source code. We believe that our current results indicate that the idea is practicable and, if improved, could contribute to understanding software development from a linguistic perspective. As a future work, we will consider improving the model by enabling feature learning from richer inputs such as abstract syntax trees, as well as functional data such as executables."}], "references": [{"title": "A convolutional attention network for extreme summarization of source code", "author": ["Miltiadis Allamanis", "Hao Peng", "Charles Sutton."], "venue": "arXiv preprint arXiv:1602.03001 .", "citeRegEx": "Allamanis et al\\.,? 2016", "shortCiteRegEx": "Allamanis et al\\.", "year": 2016}, {"title": "Software traceability with topic modeling", "author": ["Hazeline U. Asuncion", "Arthur U. Asuncion", "Richard N. Taylor."], "venue": "Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering - Volume 1. ACM,", "citeRegEx": "Asuncion et al\\.,? 2010", "shortCiteRegEx": "Asuncion et al\\.", "year": 2010}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1409.0473 .", "citeRegEx": "Bahdanau et al\\.,? 2014", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Improved minimum error rate training in moses", "author": ["Nicola Bertoldi", "Haddow Barry", "Jean-Baptiste Fouet."], "venue": "The Prague Bulletin of Mathematical Linguistics pages 1\u201311.", "citeRegEx": "Bertoldi et al\\.,? 2009", "shortCiteRegEx": "Bertoldi et al\\.", "year": 2009}, {"title": "Pygments: Python syntax highlighter", "author": ["Georg Brandl."], "venue": "http://pygments.org.", "citeRegEx": "Brandl.,? 2016", "shortCiteRegEx": "Brandl.", "year": 2016}, {"title": "Automatically documenting program changes", "author": ["Raymond P.L. Buse", "Westley R. Weimer."], "venue": "Proceedings of the IEEE/ACM International Conference on Automated Software Engineering. ACM, New York, NY, USA, ASE \u201910, pages 33\u201342.", "citeRegEx": "Buse and Weimer.,? 2010", "shortCiteRegEx": "Buse and Weimer.", "year": 2010}, {"title": "On automatically generating commit messages via summarization of source code changes", "author": ["Luis Fernando Cort\u00e9s-Coy", "Mario Linares V\u00e1squez", "Jairo Aponte", "Denys Poshyvanyk."], "venue": "SCAM. volume 14, pages 275\u2013284.", "citeRegEx": "Cort\u00e9s.Coy et al\\.,? 2014", "shortCiteRegEx": "Cort\u00e9s.Coy et al\\.", "year": 2014}, {"title": "An exploratory study of the pullbased software development model", "author": ["Georgios Gousios", "Martin Pinzger", "Arie van Deursen."], "venue": "Proceedings of the 36th International Conference on Software Engineering. ACM, pages 345\u2013355.", "citeRegEx": "Gousios et al\\.,? 2014", "shortCiteRegEx": "Gousios et al\\.", "year": 2014}, {"title": "Deep api learning", "author": ["Xiaodong Gu", "Hongyu Zhang", "Dongmei Zhang", "Sunghun Kim."], "venue": "Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering. ACM, New", "citeRegEx": "Gu et al\\.,? 2016", "shortCiteRegEx": "Gu et al\\.", "year": 2016}, {"title": "Supporting program comprehension with source code summarization", "author": ["Sonia Haiduc", "Jairo Aponte", "Andrian Marcus."], "venue": "Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 2. ACM, pages 223\u2013226.", "citeRegEx": "Haiduc et al\\.,? 2010", "shortCiteRegEx": "Haiduc et al\\.", "year": 2010}, {"title": "Scalable modified Kneser-Ney language model estimation", "author": ["Kenneth Heafield", "Ivan Pouzyrevsky", "Jonathan H. Clark", "Philipp Koehn."], "venue": "Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics. Sofia, Bulgaria,", "citeRegEx": "Heafield et al\\.,? 2013", "shortCiteRegEx": "Heafield et al\\.", "year": 2013}, {"title": "On the naturalness of software", "author": ["Abram Hindle", "Earl T Barr", "Zhendong Su", "Mark Gabel", "Premkumar Devanbu."], "venue": "2012 34th International Conference on Software Engineering (ICSE). IEEE, pages 837\u2013 847.", "citeRegEx": "Hindle et al\\.,? 2012", "shortCiteRegEx": "Hindle et al\\.", "year": 2012}, {"title": "Summarizing source code using a neural attention model", "author": ["Srinivasan Iyer", "Ioannis Konstas", "Alvin Cheung", "Luke Zettlemoyer."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume", "citeRegEx": "Iyer et al\\.,? 2016", "shortCiteRegEx": "Iyer et al\\.", "year": 2016}, {"title": "Meteor: An automatic metric for mt evaluation with high levels of correlation with human judgments", "author": ["Alon Lavie", "Abhaya Agarwal."], "venue": "Proceedings of the Second Workshop on Statistical Machine Translation. Associa-", "citeRegEx": "Lavie and Agarwal.,? 2007", "shortCiteRegEx": "Lavie and Agarwal.", "year": 2007}, {"title": "Cognitive processes in program comprehension", "author": ["Stanley Letovsky."], "venue": "Journal of Systems and software 7(4):325\u2013339.", "citeRegEx": "Letovsky.,? 1987", "shortCiteRegEx": "Letovsky.", "year": 1987}, {"title": "Changescribe: A tool for automatically generating commit messages", "author": ["Mario Linares-V\u00e1squez", "Luis Fernando Cort\u00e9s-Coy", "Jairo Aponte", "Denys Poshyvanyk."], "venue": "Proceedings of the 37th International Conference on Software Engineering-", "citeRegEx": "Linares.V\u00e1squez et al\\.,? 2015", "shortCiteRegEx": "Linares.V\u00e1squez et al\\.", "year": 2015}, {"title": "Effective approaches to attention-based neural machine translation", "author": ["Thang Luong", "Hieu Pham", "Christopher D. Manning."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for Compu-", "citeRegEx": "Luong et al\\.,? 2015", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Building a large annotated corpus of english: The penn treebank", "author": ["Mitchell P Marcus", "Mary Ann Marcinkiewicz", "Beatrice Santorini."], "venue": "Computational linguistics 19(2):313\u2013330.", "citeRegEx": "Marcus et al\\.,? 1993", "shortCiteRegEx": "Marcus et al\\.", "year": 1993}, {"title": "Convolutional neural networks over tree structures for programming language processing", "author": ["Lili Mou", "Ge Li", "Lu Zhang", "Tao Wang", "Zhi Jin."], "venue": "Proc. AAAI. AAAI Press, pages 1287\u20131293.", "citeRegEx": "Mou et al\\.,? 2016", "shortCiteRegEx": "Mou et al\\.", "year": 2016}, {"title": "Minimum error rate training in statistical machine translation", "author": ["Franz Josef Och."], "venue": "Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics, Sapporo, Japan, pages 160\u2013", "citeRegEx": "Och.,? 2003", "shortCiteRegEx": "Och.", "year": 2003}, {"title": "How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms", "author": ["Annibale Panichella", "Bogdan Dit", "Rocco Oliveto", "Massimiliano Di Penta", "Denys Poshyvanyk", "Andrea De Lucia."], "venue": "In", "citeRegEx": "Panichella et al\\.,? 2013", "shortCiteRegEx": "Panichella et al\\.", "year": 2013}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "Wei-Jing Zhu."], "venue": "Proceedings of 40th Annual Meeting of the Association for Computational Linguis-", "citeRegEx": "Papineni et al\\.,? 2002", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Predicting program properties from big code", "author": ["Veselin Raychev", "Martin Vechev", "Andreas Krause."], "venue": "ACM SIGPLAN Notices. ACM, volume 50, pages 111\u2013124.", "citeRegEx": "Raychev et al\\.,? 2015", "shortCiteRegEx": "Raychev et al\\.", "year": 2015}, {"title": "Code completion with statistical language models", "author": ["Veselin Raychev", "Martin Vechev", "Eran Yahav."], "venue": "ACM SIGPLAN Notices. ACM, volume 49, pages 419\u2013428.", "citeRegEx": "Raychev et al\\.,? 2014", "shortCiteRegEx": "Raychev et al\\.", "year": 2014}, {"title": "Improving automated source code summarization via an eyetracking study of programmers", "author": ["Paige Rodeghero", "Collin McMillan", "Paul W McBurney", "Nigel Bosch", "Sidney D\u2019Mello"], "venue": "In Proceedings of the 36th International Conference on Software En-", "citeRegEx": "Rodeghero et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Rodeghero et al\\.", "year": 2014}, {"title": "Recurrent neural network regularization", "author": ["Wojciech Zaremba", "Ilya Sutskever", "Vinyals Oriol."], "venue": "Proceedings of the 3rd International Conference on Learning Representations.", "citeRegEx": "Zaremba et al\\.,? 2015", "shortCiteRegEx": "Zaremba et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 11, "context": "In that sense, it is expected that it follows to some extent the same distributional regularities that a proper natural language manifests (Hindle et al., 2012).", "startOffset": 139, "endOffset": 160}, {"referenceID": 7, "context": "lions of lines code are written in a distributed and asynchronous way (Gousios et al., 2014).", "startOffset": 70, "endOffset": 92}, {"referenceID": 14, "context": "The scale and complexity of software systems these days has naturally led to explore automated ways to support developers\u2019 code comprehension (Letovsky, 1987) from a linguistic perspective.", "startOffset": 142, "endOffset": 158}, {"referenceID": 9, "context": "One of these attempts is automatic summarization, which aims to generate a compact representation of the source code in a portion of natural language (Haiduc et al., 2010).", "startOffset": 150, "endOffset": 171}, {"referenceID": 7, "context": "To this end, we rely on the concept of code commit, the standard contribution procedure implemented in modern subversion systems (Gousios et al., 2014), which provides both the actual change and a short explanatory paragraph.", "startOffset": 129, "endOffset": 151}, {"referenceID": 20, "context": "cation (Panichella et al., 2013; Asuncion et al., 2010).", "startOffset": 7, "endOffset": 55}, {"referenceID": 1, "context": "cation (Panichella et al., 2013; Asuncion et al., 2010).", "startOffset": 7, "endOffset": 55}, {"referenceID": 11, "context": "plicitly relate programming and natural languages in distributional terms (Hindle et al., 2012) and the availability of large corpus mainly from open source software opened the door for the use of language modeling for several tasks (Raychev et al.", "startOffset": 74, "endOffset": 95}, {"referenceID": 22, "context": ", 2012) and the availability of large corpus mainly from open source software opened the door for the use of language modeling for several tasks (Raychev et al., 2015).", "startOffset": 145, "endOffset": 167}, {"referenceID": 18, "context": "ing program representations (Mou et al., 2016), bug localization (Huo et al.", "startOffset": 28, "endOffset": 46}, {"referenceID": 8, "context": "), API suggestion (Gu et al., 2016) and code completion (Raychev et al.", "startOffset": 18, "endOffset": 35}, {"referenceID": 23, "context": ", 2016) and code completion (Raychev et al., 2014).", "startOffset": 28, "endOffset": 50}, {"referenceID": 0, "context": "In recent years several representation learning approaches have been proposed, such as (Allamanis et al., 2016), where the authors employ a convolutional architecture embedded inside an attention mechanism to learn an efficient mapping", "startOffset": 87, "endOffset": 111}, {"referenceID": 12, "context": "More recently, (Iyer et al., 2016) proposed a encoder-decoder model that learns to summarize", "startOffset": 15, "endOffset": 34}, {"referenceID": 2, "context": "Both approaches share the use of attention mechanisms (Bahdanau et al., 2014) to overcome the natural disparity between the modalities when finding relevant token alignments.", "startOffset": 54, "endOffset": 77}, {"referenceID": 5, "context": "(2015) propose a method based on a set of rules that considers the type and impact of the changes, and (Buse and Weimer, 2010) combines summarization with symbolic execution.", "startOffset": 103, "endOffset": 126}, {"referenceID": 5, "context": "In terms of specifically working on code change summarization, Cort\u00e9s-Coy et al. (2014); LinaresV\u00e1squez et al.", "startOffset": 63, "endOffset": 88}, {"referenceID": 5, "context": "In terms of specifically working on code change summarization, Cort\u00e9s-Coy et al. (2014); LinaresV\u00e1squez et al. (2015) propose a method based on a set of rules that considers the type and impact of the changes, and (Buse and Weimer, 2010) combines summarization with symbolic execution.", "startOffset": 63, "endOffset": 118}, {"referenceID": 12, "context": "Concretely, similarly to (Iyer et al., 2016), we use an attention-augmented encoder-decoder architecture.", "startOffset": 25, "endOffset": 44}, {"referenceID": 16, "context": "The decoder is a RNN that reads this representation and generates NL words one at a time based on its current hidden state and guided by a global attention model (Luong et al., 2015).", "startOffset": 162, "endOffset": 182}, {"referenceID": 25, "context": "We use a dropout-regularized LSTM cell for the decoder (Zaremba et al., 2015) and also add dropout at the NL embeddings and at the output softmax layer, to prevent over-fitting.", "startOffset": 55, "endOffset": 77}, {"referenceID": 21, "context": "2007) and sentence level BLEU-4 (Papineni et al., 2002).", "startOffset": 32, "endOffset": 55}, {"referenceID": 17, "context": "using the Penn Treebank tokenizer (Marcus et al., 1993), which nicely deals with punctuation and other text marks.", "startOffset": 34, "endOffset": 55}, {"referenceID": 4, "context": "To obtain a source code representation of each commit, we parsed the diff files and used a lexer (Brandl, 2016) to tokenize their contents in a per-line fashion allowing us to maximize the amount of source code recovered from the diff files.", "startOffset": 97, "endOffset": 111}, {"referenceID": 12, "context": ", 2007) which although is designed as a phrase-based machine translation system, was previously used by Iyer et al. (2016) to generate text from source code.", "startOffset": 104, "endOffset": 123}, {"referenceID": 10, "context": "trained a 3-gram language model using KenLM (Heafield et al., 2013) and used mGiza to obtain alignments.", "startOffset": 44, "endOffset": 67}, {"referenceID": 3, "context": "For validation, we use minimum error rate training (Bertoldi et al., 2009; Och, 2003) in our validation set.", "startOffset": 51, "endOffset": 85}, {"referenceID": 19, "context": "For validation, we use minimum error rate training (Bertoldi et al., 2009; Och, 2003) in our validation set.", "startOffset": 51, "endOffset": 85}], "year": 2017, "abstractText": "We propose a model to automatically describe changes introduced in the source code of a program using natural language. Our method receives as input a set of code commits, which contains both the modifications and message introduced by an user. These two modalities are used to train an encoder-decoder architecture. We evaluated our approach on twelve real world open source projects from four different programming languages. Quantitative and qualitative results showed that the proposed approach can generate feasible and semantically sound descriptions not only in standard in-project settings, but also in a cross-project setting.", "creator": "LaTeX with hyperref package"}}}