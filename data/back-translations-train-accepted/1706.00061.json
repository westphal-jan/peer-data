{"id": "1706.00061", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-May-2017", "title": "The Sample Complexity of Online One-Class Collaborative Filtering", "abstract": "We consider the online one-class collaborative filtering (CF) problem that consists of recommending items to users over time in an online fashion based on positive ratings only. This problem arises when users respond only occasionally to a recommendation with a positive rating, and never with a negative one. We study the impact of the probability of a user responding to a recommendation, p_f, on the sample complexity, i.e., the number of ratings required to make `good' recommendations, and ask whether receiving positive and negative ratings, instead of positive ratings only, improves the sample complexity. Both questions arise in the design of recommender systems. We introduce a simple probabilistic user model, and analyze the performance of an online user-based CF algorithm. We prove that after an initial cold start phase, where recommendations are invested in exploring the user's preferences, this algorithm makes---up to a fraction of the recommendations required for updating the user's preferences---perfect recommendations. The number of ratings required for the cold start phase is nearly proportional to 1/p_f, and that for updating the user's preferences is essentially independent of p_f. As a consequence we find that, receiving positive and negative ratings instead of only positive ones improves the number of ratings required for initial exploration by a factor of 1/p_f, which can be significant.", "histories": [["v1", "Wed, 31 May 2017 19:37:12 GMT  (2569kb,D)", "http://arxiv.org/abs/1706.00061v1", "ICML 2017"]], "COMMENTS": "ICML 2017", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.IT math.IT stat.ML", "authors": ["reinhard heckel", "kannan ramchandran"], "accepted": true, "id": "1706.00061"}, "pdf": {"name": "1706.00061.pdf", "metadata": {"source": "META", "title": "The Sample Complexity of Online One-Class Collaborative Filtering", "authors": ["Reinhard Heckel", "Kannan Ramchandran"], "emails": ["<heckel@berkeley.edu>."], "sections": [{"heading": "1. Introduction", "text": "In fact, most of them will be able to survive on their own, without being able to survive on their own."}, {"heading": "2. Model and learning problem", "text": "In this section we will present the probable model and learning problem considered in this paper. As already mentioned, this model is problematic from this in (Bresler et al., 2014) for the two classes CF. Model: Consider the users and M elements. A user can like an element (+ 1), or reject an element (\u2212 1). Associated with each user is a (unknown) latent preference vector, the user is recommended as a user (0, 1 / 2] M, whose entries are pui the probabilities of the user. We assume that an element i is either \"sympathetic\" to the user u, i.e., pui > 1 + 2, for some users a different model is recommended (0, 1 / 2], or \"not sympathetic.\" i.e., pui < 1 / 2 \u2212 The hidden ranking Rhiddenui is randomly reached as Rhiddenui (as) with probability."}, {"heading": "3. User-CF algorithm", "text": "In this section we present our user-based CF algorithms (User-CF), in order to be successful, it is crucial that we use the user-CF algorithms effectively."}, {"heading": "4. Main result", "text": "Our main result shows that after a certain cold start time, the user CF algorithm essentially yields optimal recommendation.Theorem 1 Let's assume that there are at least N2K users of the same type, for all user types, and that the condition (1) provides a lower reward for some user types, which ensures that user types are different. (4) SetTstart type of all user types is sympathetic to a particular user, for all user types. (4) SetTstart type: = (c) SetTstart type of user types is acceptable for all user types. (4) SetTstart type of user types is not comparable. (1) SetTstart type of user types is not comparable. (1) Per user type \u2212 the user type \u2212 is sufficient \u2212 1."}, {"heading": "4.1. Dependence on pf is nearly optimal", "text": "The cold start time of the user CF algorithm guaranteed by Theorem 1 is proportional to (1 / p2f) 1 \u2212 \u03b1. For low learning rates \u03b1, this scaling cannot be significantly improved, as shown by the following results.c3 kpf \u2206 2log (M / \u03b4), for numerical constants c1, c2 and c3.Proposition 1 Suppose that there are more items than user types, i.e. M \u2265 K. The expected reward of any online algorithm is limited by E [reward (T)] + 1 K. Then there is a group of users with at least N2K users of the same type, for each user type with preference vectors such as that for all T \u2264 p2f the expected reward of any online algorithm is limited upwards."}, {"heading": "4.2. One versus two class CF", "text": "Remember that pf = 1 means that users submit positive and negative ratings and that the user-CF algorithm in pf is nearly optimal. Since the expected number of ratings a user receives in a given number of time steps is proportional to pf, one consequence of our finding is that obtaining positive and negative ratings instead of just positive ratings improves the number of ratings required for initial research by a factor of 1 / pf, which can be significant. Finally, we note that Bresler et al. (2014) provided a performance guarantee for a closely related, collaborative-greedy two-tier CF algorithm that is called collaborative-greedy. Bresler et al. (2014) consider the regime in which the number of users is much greater than the number of items, i.e. N = O (MC), C > 1, and additionally the number of user types obeys (N = M) in the basic theory (1)."}, {"heading": "4.3. Alternative exploration strategies", "text": "While there are other reasonable preference exploration strategies, the essential element of our approach is to divide the article space into subsets of articles Q0, Q1,..., first explore Q0, then allow exploitation steps, continue exploring Q1, allow exploitation steps again, and so on. Instead, when examining the entire article space [M] at the beginning, the learning time required for p-ui to indicate whether an article is likable or not is proportional to M and can therefore be very large. To see this, we consider a preference exploration step that recommends to all users a single element that is uniformly randomly selected from the totality of articles [M]. To ensure that this expectation is greater than 0, Tr must be relevant for assessing whether pui > 1 / 2 is the expected number of u neighbors to which I was recommended, and therefore proportional to Trk M. To ensure that this expectation is greater than the expectation must be set to 0."}, {"heading": "5. Numerical results", "text": "This year, the number of unemployed has tripled compared to the previous year, with the number of unemployed rising by only 0.2 percent in the first six months of this year."}, {"heading": "6. Proof of Theorem 1", "text": "Theorem 1 is directly derived from the following result.Theorem 2 Let us assume that there are at least N2K users of the same type, for all user types, and let us assume that at least a fraction of all elements are sympathetic to a particular user, for all users. Let us also assume that for some \u03b3 users all users meet condition (1).Select \u03b4 > 0 and assume that the number of closest neighbors k, the batch size Q, and the parameter \u03b7 are selected so that k \u2264 9N40K, \u03b7 / 2, k Q \u2265 64 log (8M / \u03b4) pf \u0445 2, (7) andQ \u2265 10 \u03bd log (4 / \u03b4). (8) Then follows the reward accumulated by the user CF algorithm up to a certain time."}, {"heading": "6.1. Proof of Theorem 2", "text": "Theorem 2 is verified by the definition of the following events: G\u03b2 (t) = At this time all users u}, {"heading": "6.2. Proof of Lemma 2", "text": "We remember that rsimu has at least 1 \u2212 10pgood, pgood: 1 \u2212 pgood: 1 \u2212 pgood: 2 \u2212 p.Lemma 4 (Many good neighbors) There are at least N2K users of type u (including u), and we assume that there are more than 1Ts users who are of the same user type as u and satisfy 1Ts. \u2212 psimu, r sim v, and at the same time there are fewer than k\u03b2 users of a different user type than u, who satisfy 1Ts, r sim v, and that for a certain threshold, that of the following two lemmas.Lemma 4 (Many good neighbors) Probably there are at least N2K users of type as users u (including u), and we assume that Ts bears resemblance to at least 1 \u2212 pgood, pgood, pgood, pgood, ppgood, p.Lemma 4 (Many good neighbors) There are at least N2K users of type as users u (including u), and we suspect good, that Ts is at least similar to 10pgood."}, {"heading": "6.2.1. PROOF OF LEMMA 4", "text": "Consider u and assume that there are exactly N2K users of the same user type. There might be more, but it is sufficient to consider N2K. Let v be of the same user type. Let's start with 1 Ts \u2212 \u2212 rsimu, r \u2212 sim v \u2265 \u03b8 with a high probability. At this end, it should be noted that rsimu, r sim v s is a binary random variable, regardless of the probability of success p2f \u2212 pvp \u2212 P (t), where the random permutation of the item space drawn by the user CF algorithm at the beginning, and ru\u03c0 (t) Rv\u03c0 (t) is a binary random variable, regardless of the probability of success p2f \u2212 pvp pup (t) pvp \u2212 P (t). Setting a: = p 2 f 1 M < pu >, pv >, for the notable convenience, it follows convenience, the convenience, the convenience, it follows convenience, the convenience."}, {"heading": "6.2.2. PROOF OF LEMMA 5", "text": "Let u and v be two fixed users of different user types. Similar to the proof of Lemma 4, we begin by showing that 1 Ts rsimu, r sim v \u2264 \u03b8 with high probability. To this end, it should be noted that rsimu, r sim v '= \u2211 Ts \u2212 1 t = 0 Ru\u03c0 (t) Rv\u03c0 (t) is a random permutation of item space and Ru\u03c0 (t) is a binary random variable, independent of t, with probability of success p2f pu\u03c0 (t) pv\u03c0 (t). If we set a = p 2 f 1 M < pu, pv >, it follows the notorious convenience of thatP [1Ts rsimu, r sim v."}, {"heading": "6.3. Proof of Lemma 1 (preference exploration)", "text": "Let us assume that this is a case in which the number of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons increases. Let us assume that the number of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons. Let us assume that the number of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of appearing in the list of the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of appearing in the list of the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of the list of appearing in the list of persons appearing in the list of persons appearing in the list of the list of appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of persons appearing in the list of the list of appearing in the list of persons appearing in the list of the list of appearing in the list of persons appearing in the list of the list of appearing in the list of the list of the list of appearing in the list of the list of persons appearing persons appearing in the list of"}, {"heading": "7. Proof of Proposition 1", "text": "Let us consider a group of users with K user types that do not overlap in their preferences, in particular a group of users where each user u belonging to the k-th user type has a preference vector [pu] i = {1, if i [k (M \u2212 1) / K,..., kM / K] 0 etc. Let us consider a given user and at the time T the expected number of ratings received from u is limited upwards by p2f. Therefore, the algorithm has no information about the user u for all T \u2264 \u03bbp2f in at least a fraction of the runs of the algorithm, and the best it can do is to recommend a random one. In our choice of preference vectors with a probability of at most 1 / K, it will recommend a sympathetic element. Therefore, an upper limit for the expected regret is given by (\u03bb + 1 / K) NT."}], "references": [{"title": "Recommender systems: The textbook", "author": ["Aggarwal", "Charu C"], "venue": null, "citeRegEx": "Aggarwal and C.,? \\Q2016\\E", "shortCiteRegEx": "Aggarwal and C.", "year": 2016}, {"title": "Concentration inequalities for sampling without replacement", "author": ["Bardenet", "R\u00e9mi", "Maillard", "Odalric-Ambrym"], "venue": null, "citeRegEx": "Bardenet et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bardenet et al\\.", "year": 2015}, {"title": "Analysis of a collaborative filter based on popularity amongst neighbors", "author": ["Barman", "Kishor", "Dabeer", "Onkar"], "venue": "IEEE Trans. Inf. Theory,", "citeRegEx": "Barman et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Barman et al\\.", "year": 2012}, {"title": "Multi-armed bandit problems with dependent arms", "author": ["Bart\u00f3k", "G\u00e1bor", "Foster", "Dean P", "P\u00e1l", "D\u00e1vid", "Rakhlin", "Alexander", "Szepesv\u00e1ri", "Csaba"], "venue": "Math. Oper. Res.,", "citeRegEx": "Bart\u00f3k et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bart\u00f3k et al\\.", "year": 2014}, {"title": "Statistical analysis of k-nearest neighbor collaborative recommendation", "author": ["Biau", "G\u00e9rard", "Cadre", "Beno\u00eet", "Rouvi\u00e8re", "Laurent"], "venue": "Ann. Stat.,", "citeRegEx": "Biau et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Biau et al\\.", "year": 2010}, {"title": "A latent source model for online collaborative filtering", "author": ["Bresler", "Guy", "Chen", "George H", "Shah", "Devavrat"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Bresler et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bresler et al\\.", "year": 2014}, {"title": "Regret guarantees for item-item collaborative filtering", "author": ["Bresler", "Guy", "Shah", "Devavrat", "Voloch", "Luis F"], "venue": null, "citeRegEx": "Bresler et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bresler et al\\.", "year": 2015}, {"title": "Regret analysis of stochastic and nonstochastic multi-armed bandit problems", "author": ["Bubeck", "S\u00e9bastien", "Cesa-Bianchi", "Nicol\u00f2"], "venue": "Foundations and Trends in Machine Learning,", "citeRegEx": "Bubeck et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bubeck et al\\.", "year": 2012}, {"title": "Adaptive collaborating filtering: The low noise regime", "author": ["O. Dabeer"], "venue": "In IEEE International Symposium on Information Theory, pp", "citeRegEx": "Dabeer,? \\Q2013\\E", "shortCiteRegEx": "Dabeer", "year": 2013}, {"title": "Linear bandits in high dimension and recommendation systems", "author": ["Deshpande", "Yash", "Montanari", "Andrea"], "venue": "In Annual Allerton Conference on Communication, Control, and Computing,", "citeRegEx": "Deshpande et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Deshpande et al\\.", "year": 2012}, {"title": "Collaborative filtering recommender systems", "author": ["Ekstrand", "Michael D", "Riedl", "John T", "Konstan", "Joseph A"], "venue": "Found. Trends Hum.-Comput. Interact.,", "citeRegEx": "Ekstrand et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ekstrand et al\\.", "year": 2011}, {"title": "The MovieLens datasets: History and context", "author": ["Harper", "F. Maxwell", "Konstan", "Joseph A"], "venue": "ACM Trans. Interact. Intell. Syst.,", "citeRegEx": "Harper et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Harper et al\\.", "year": 2015}, {"title": "Scalable and interpretable product recommendations via overlapping co-clustering", "author": ["Heckel", "Reinhard", "Vlachos", "Michail", "Parnell", "Thomas", "D\u00fcnner", "Celestine"], "venue": "In IEEE International Conference on Data Engineering,", "citeRegEx": "Heckel et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Heckel et al\\.", "year": 2017}, {"title": "Collaborative filtering for implicit feedback datasets", "author": ["Hu", "Yifan", "Koren", "Yehuda", "Volinsky", "Chris"], "venue": "In IEEE International Conference on Data Mining, pp", "citeRegEx": "Hu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2008}, {"title": "Cascading Bandits: Learning to Rank in the Cascade Model", "author": ["Kveton", "Branislav", "Szepesvari", "Csaba", "Wen", "Zheng", "Ashkan", "Azin"], "venue": "In International Conference on Machine Learning,", "citeRegEx": "Kveton et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kveton et al\\.", "year": 2015}, {"title": "One-class collaborative filtering", "author": ["Pan", "Rong", "Zhou", "Yunhong", "Cao", "Bin", "N.N. Liu", "R. Lukose", "M. Scholz", "Yang", "Qiang"], "venue": "In IEEE International Conference on Data Mining, pp", "citeRegEx": "Pan et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Pan et al\\.", "year": 2008}, {"title": "Multi-armed Bandit Problems with Dependent Arms", "author": ["Pandey", "Sandeep", "Chakrabarti", "Deepayan", "Agarwal", "Deepak"], "venue": "In International Conference on Machine Learning,", "citeRegEx": "Pandey et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Pandey et al\\.", "year": 2007}, {"title": "Analysis of recommendation algorithms for e-commerce", "author": ["Sarwar", "Badrul", "Karypis", "George", "Konstan", "Joseph", "Riedl", "John"], "venue": "In ACM Conference on Electronic Commerce,", "citeRegEx": "Sarwar et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Sarwar et al\\.", "year": 2000}], "referenceMentions": [{"referenceID": 10, "context": "In practice, recommender systems often use collaborative filtering (CF) (Ekstrand et al., 2011) to identify items a given", "startOffset": 72, "endOffset": 95}, {"referenceID": 13, "context": "Other examples of such feedback include implicit ratings such as viewing a webpage and listening to a song (Hu et al., 2008), and business-to-business recommender systems (Heckel et al.", "startOffset": 107, "endOffset": 124}, {"referenceID": 12, "context": ", 2008), and business-to-business recommender systems (Heckel et al., 2017).", "startOffset": 54, "endOffset": 75}, {"referenceID": 15, "context": "The problem of generating recommendations based on positive ratings only is known as one-class CF (Pan et al., 2008).", "startOffset": 98, "endOffset": 116}, {"referenceID": 15, "context": "The lack of negative ratings is often considered to make this problem challenging (Pan et al., 2008).", "startOffset": 82, "endOffset": 100}, {"referenceID": 5, "context": "Our model, and elements of our algorithm, are inspired by a related model and algorithm by Bresler et al. (2014) for the two-class CF problem, i.", "startOffset": 91, "endOffset": 113}, {"referenceID": 6, "context": "We do not discuss item based CF algorithms here, but refer to (Bresler et al., 2015) for a recent analysis of an item", "startOffset": 62, "endOffset": 84}, {"referenceID": 4, "context": "One of the first analytical results on user-based CF algorithms, an asymptotic performance guarantee under a probabilistic model, was established by Biau et al. (2010). Most related to our approach is the Collaborative-Greedy algorithm studied by Bresler et al.", "startOffset": 149, "endOffset": 168}, {"referenceID": 4, "context": "One of the first analytical results on user-based CF algorithms, an asymptotic performance guarantee under a probabilistic model, was established by Biau et al. (2010). Most related to our approach is the Collaborative-Greedy algorithm studied by Bresler et al. (2014) for the online twoclass CF problem.", "startOffset": 149, "endOffset": 269}, {"referenceID": 4, "context": "One of the first analytical results on user-based CF algorithms, an asymptotic performance guarantee under a probabilistic model, was established by Biau et al. (2010). Most related to our approach is the Collaborative-Greedy algorithm studied by Bresler et al. (2014) for the online twoclass CF problem. The Collaborative-Greedy algorithm differs from our User-CF algorithm in selecting the nearest neighbors based on thresholding similarity, instead of selecting the k most similar users, and in the way preferences of the users are explored. This difference in the exploration steps is crucial for establishing that after the cold start period, our User-CF algorithm makes optimal recommendations in a fraction 1 \u2212 c/pf of the remaining time steps. Dabeer (2013) studies a probabilistic model in an online setup, and Barman & Dabeer (2012) study a probabilistic model in an offline setup, and state performance guarantees for a two-class user-based CF algorithm.", "startOffset": 149, "endOffset": 766}, {"referenceID": 4, "context": "One of the first analytical results on user-based CF algorithms, an asymptotic performance guarantee under a probabilistic model, was established by Biau et al. (2010). Most related to our approach is the Collaborative-Greedy algorithm studied by Bresler et al. (2014) for the online twoclass CF problem. The Collaborative-Greedy algorithm differs from our User-CF algorithm in selecting the nearest neighbors based on thresholding similarity, instead of selecting the k most similar users, and in the way preferences of the users are explored. This difference in the exploration steps is crucial for establishing that after the cold start period, our User-CF algorithm makes optimal recommendations in a fraction 1 \u2212 c/pf of the remaining time steps. Dabeer (2013) studies a probabilistic model in an online setup, and Barman & Dabeer (2012) study a probabilistic model in an offline setup, and state performance guarantees for a two-class user-based CF algorithm.", "startOffset": 149, "endOffset": 843}, {"referenceID": 16, "context": "A conceptually related online learning problem are multiarmed bandits with dependent arms (Pandey et al., 2007).", "startOffset": 90, "endOffset": 111}, {"referenceID": 3, "context": "Finally, we note that a class of learning problems reminiscent to that considered here is partial monitoring (Bart\u00f3k et al., 2014).", "startOffset": 109, "endOffset": 130}, {"referenceID": 14, "context": "While partial monitoring has been studied in the context of recommender systems (Kveton et al., 2015), we are not aware of papers on partial monitoring in collaborative filtering.", "startOffset": 80, "endOffset": 101}, {"referenceID": 5, "context": "As mentioned previously, this model is inspired by that in (Bresler et al., 2014) for the two-class CF problem.", "startOffset": 59, "endOffset": 81}, {"referenceID": 5, "context": "Following (Bresler et al., 2014), we assume that each user belongs to one of K < N user types.", "startOffset": 10, "endOffset": 32}, {"referenceID": 17, "context": "Assuming that users cluster in the user-item space in different user types is common and is implicitly used by user-based CF algorithms (Sarwar et al., 2000), which perform well in practice.", "startOffset": 136, "endOffset": 157}, {"referenceID": 5, "context": "Following (Bresler et al., 2014) we therefore consider the closely related accumulated reward defined as the expected total number of likable items (pui > 1/2) that are recommended by an algorithm up to time T :", "startOffset": 10, "endOffset": 32}, {"referenceID": 5, "context": "For this regime, Theorem 1 particularized to pf = 1 essentially reduces to Theorem 1 in (Bresler et al., 2014) (there are some further minor differences).", "startOffset": 88, "endOffset": 110}, {"referenceID": 5, "context": "We finally note that Bresler et al. (2014) proved a performance guarantee for a closely related two-class collaborative CF algorithm termed Collaborative-Greedy.", "startOffset": 21, "endOffset": 43}, {"referenceID": 5, "context": "We finally note that Bresler et al. (2014) proved a performance guarantee for a closely related two-class collaborative CF algorithm termed Collaborative-Greedy. Bresler et al. (2014) consider the regime where the number of users is much larger than the number of items, i.", "startOffset": 21, "endOffset": 184}, {"referenceID": 5, "context": "To obtain a dataset with a higher proportion of ratings, following (Bresler et al., 2014), we consider the subset of the Movielens dataset corresponding to frequently rated items and to users that have rated many items.", "startOffset": 67, "endOffset": 89}, {"referenceID": 5, "context": "The following lemma appears in (Bresler et al., 2014).", "startOffset": 31, "endOffset": 53}], "year": 2017, "abstractText": "We consider the online one-class collaborative filtering (CF) problem that consists of recommending items to users over time in an online fashion based on positive ratings only. This problem arises when users respond only occasionally to a recommendation with a positive rating, and never with a negative one. We study the impact of the probability of a user responding to a recommendation, pf , on the sample complexity, i.e., the number of ratings required to make \u2018good\u2019 recommendations, and ask whether receiving positive and negative ratings, instead of positive ratings only, improves the sample complexity. Both questions arise in the design of recommender systems. We introduce a simple probabilistic user model, and analyze the performance of an online user-based CF algorithm. We prove that after an initial cold start phase, where recommendations are invested in exploring the user\u2019s preferences, this algorithm makes\u2014up to a fraction of the recommendations required for updating the user\u2019s preferences\u2014perfect recommendations. The number of ratings required for the cold start phase is nearly proportional to 1/pf , and that for updating the user\u2019s preferences is essentially independent of pf . As a consequence we find that, receiving positive and negative ratings instead of only positive ones improves the number of ratings required for initial exploration by a factor of 1/pf , which can be significant.", "creator": "LaTeX with hyperref package"}}}