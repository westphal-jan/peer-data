{"id": "1707.03190", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Jul-2017", "title": "Accelerated Variance Reduced Stochastic ADMM", "abstract": "Recently, many variance reduced stochastic alternating direction method of multipliers (ADMM) methods (e.g.\\ SAG-ADMM, SDCA-ADMM and SVRG-ADMM) have made exciting progress such as linear convergence rates for strongly convex problems. However, the best known convergence rate for general convex problems is O(1/T) as opposed to O(1/T^2) of accelerated batch algorithms, where $T$ is the number of iterations. Thus, there still remains a gap in convergence rates between existing stochastic ADMM and batch algorithms. To bridge this gap, we introduce the momentum acceleration trick for batch optimization into the stochastic variance reduced gradient based ADMM (SVRG-ADMM), which leads to an accelerated (ASVRG-ADMM) method. Then we design two different momentum term update rules for strongly convex and general convex cases. We prove that ASVRG-ADMM converges linearly for strongly convex problems. Besides having a low per-iteration complexity as existing stochastic ADMM methods, ASVRG-ADMM improves the convergence rate on general convex problems from O(1/T) to O(1/T^2). Our experimental results show the effectiveness of ASVRG-ADMM.", "histories": [["v1", "Tue, 11 Jul 2017 09:29:46 GMT  (120kb,D)", "http://arxiv.org/abs/1707.03190v1", "16 pages, 5 figures, Appears in Proceedings of the 31th AAAI Conference on Artificial Intelligence (AAAI), San Francisco, California, USA, pp. 2287--2293, 2017"]], "COMMENTS": "16 pages, 5 figures, Appears in Proceedings of the 31th AAAI Conference on Artificial Intelligence (AAAI), San Francisco, California, USA, pp. 2287--2293, 2017", "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["yuanyuan liu", "fanhua shang", "james cheng"], "accepted": true, "id": "1707.03190"}, "pdf": {"name": "1707.03190.pdf", "metadata": {"source": "CRF", "title": "Accelerated Variance Reduced Stochastic ADMM", "authors": ["Yuanyuan Liu", "Fanhua Shang", "James Cheng"], "emails": ["jcheng}@cse.cuhk.edu.hk"], "sections": [{"heading": null, "text": "In this paper, we look at a class of composite methods, such as FISTA and TISTA 2009, as if they were applying a class of composite optimization methods that has a high rate of real-world problems, such as: \"There are only a few problems we have in a thrift-inducing regulation technology, such as a group of lasso and nuclear standards.\" If it is an identity matrix, i.e. the above formulation (1) parallels many places of machine learning, statistics and operations research (Bubeck 2015), such as logistic regression, lasso, and vector machine support (SVM). We focus mainly on the large sample system."}], "references": [{"title": "Towards an optimal stochastic alternating direction method of multipliers", "author": ["Azadi", "S. Sra 2014] Azadi", "S. Sra"], "venue": "In Proc. 31st Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Azadi et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Azadi et al\\.", "year": 2014}, {"title": "Advanced topics in machine learning part II: 5. Proximal methods. University Lecture", "author": ["Baldassarre", "L. Pontil 2013] Baldassarre", "M. Pontil"], "venue": null, "citeRegEx": "Baldassarre et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Baldassarre et al\\.", "year": 2013}, {"title": "Model selection through sparse maximum likelihood estimation for multivariate gaussian or binary data", "author": ["Ghaoui Banerjee", "O. d\u2019Aspremont 2008] Banerjee", "L.E. Ghaoui", "A. d\u2019Aspremont"], "venue": "J. Mach. Learn. Res", "citeRegEx": "Banerjee et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Banerjee et al\\.", "year": 2008}, {"title": "A fast iterative shrinkage-thresholding algorithm for linear inverse problems", "author": ["Beck", "A. Teboulle 2009] Beck", "M. Teboulle"], "venue": "SIAM J. Imaging Sci", "citeRegEx": "Beck et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Beck et al\\.", "year": 2009}, {"title": "Distributed optimization and statistical learning via the alternating direction method of multipliers", "author": ["Boyd"], "venue": null, "citeRegEx": "Boyd,? \\Q2011\\E", "shortCiteRegEx": "Boyd", "year": 2011}, {"title": "On the global and linear convergence of the generalized alternating direction method of multipliers", "author": ["Deng", "W. Yin 2016] Deng", "W. Yin"], "venue": "J. Sci. Comput", "citeRegEx": "Deng et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Deng et al\\.", "year": 2016}, {"title": "Fast alternating direction optimization methods", "author": ["Goldstein"], "venue": "SIAM J. Imaging Sciences", "citeRegEx": "Goldstein,? \\Q2014\\E", "shortCiteRegEx": "Goldstein", "year": 2014}, {"title": "Accelerated stochastic mirror descent algorithms for composite non-strongly convex optimization. arXiv:1605.06892v2", "author": ["Hien"], "venue": null, "citeRegEx": "Hien,? \\Q2016\\E", "shortCiteRegEx": "Hien", "year": 2016}, {"title": "Accelerating stochastic gradient descent using predictive variance reduction", "author": ["Johnson", "R. Zhang 2013] Johnson", "T. Zhang"], "venue": "In Proc. Adv. Neural Inf. Process. Syst. (NIPS),", "citeRegEx": "Johnson et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Johnson et al\\.", "year": 2013}, {"title": "A multivariate regression approach to association analysis of a quantitative trait network. Bioinformatics 25:i204\u2013i212", "author": ["Sohn Kim", "S. Xing 2009] Kim", "K.A. Sohn", "E.P. Xing"], "venue": null, "citeRegEx": "Kim et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kim et al\\.", "year": 2009}, {"title": "2016. Mini-batch semi-stochastic gradient descent in the proximal setting", "author": ["Koneeny"], "venue": "IEEE J. Sel. Top. Sign. Proces", "citeRegEx": "Koneeny,? \\Q2016\\E", "shortCiteRegEx": "Koneeny", "year": 2016}, {"title": "An optimal method for stochastic composite optimization", "author": ["G. Lan 2012] Lan"], "venue": "Math. Program", "citeRegEx": "Lan,? \\Q2012\\E", "shortCiteRegEx": "Lan", "year": 2012}, {"title": "Fast proximal linearized alternating direction method of multiplier with parallel splitting", "author": ["Lu"], "venue": "In Proc. 30th AAAI Conf. Artif. Intell.,", "citeRegEx": "Lu,? \\Q2016\\E", "shortCiteRegEx": "Lu", "year": 2016}, {"title": "Linear time solver for primal svm", "author": ["Nie"], "venue": "In Proc. 31st Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Nie,? \\Q2014\\E", "shortCiteRegEx": "Nie", "year": 2014}, {"title": "A general analysis of the convergence of ADMM", "author": ["Nishihara"], "venue": "In Proc. 32nd Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Nishihara,? \\Q2015\\E", "shortCiteRegEx": "Nishihara", "year": 2015}, {"title": "Stochastic alternating direction method of multipliers", "author": ["Ouyang"], "venue": "In Proc. 30th Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Ouyang,? \\Q2013\\E", "shortCiteRegEx": "Ouyang", "year": 2013}, {"title": "Piecewise linear regularized solution paths", "author": ["Rosset", "S. Zhu 2007] Rosset", "J. Zhu"], "venue": null, "citeRegEx": "Rosset et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Rosset et al\\.", "year": 2007}, {"title": "A stochastic gradient method with an exponential convergence rate for finite training sets", "author": ["Schmidt Roux", "N.L. Bach 2012] Roux", "M. Schmidt", "F. Bach"], "venue": "In Proc. Adv. Neural Inf. Process. Syst. (NIPS),", "citeRegEx": "Roux et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Roux et al\\.", "year": 2012}, {"title": "Stochastic dual coordinate ascent methods for regularized loss minimization", "author": ["Shalev-Shwartz", "S. Zhang 2013] Shalev-Shwartz", "T. Zhang"], "venue": "J. Mach. Learn. Res", "citeRegEx": "Shalev.Shwartz et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Shalev.Shwartz et al\\.", "year": 2013}, {"title": "The solution path of the generalized lasso", "author": ["Tibshirani", "R.J. Taylor 2011] Tibshirani", "J. Taylor"], "venue": "Annals of Statistics", "citeRegEx": "Tibshirani et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Tibshirani et al\\.", "year": 2011}, {"title": "Online alternating direction method", "author": ["Wang", "H. Banerjee 2012] Wang", "A. Banerjee"], "venue": "In Proc. 29th Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Wang et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2012}, {"title": "A unified primal-dual algorithm framework based on Bregman iteration", "author": ["Burger Zhang", "X. Osher 2011] Zhang", "M. Burger", "S. Osher"], "venue": "J. Sci. Comput", "citeRegEx": "Zhang et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2011}, {"title": "Scalable stochastic alternating direction method of multipliers. arXiv:1502.03529v3", "author": ["Li Zhao", "S.-Y. Zhou 2015] Zhao", "W.-J. Li", "Z.-H. Zhou"], "venue": null, "citeRegEx": "Zhao et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhao et al\\.", "year": 2015}, {"title": "Fast-and-light stochastic admm", "author": ["Zheng", "S. Kwok 2016] Zheng", "J.T. Kwok"], "venue": "In Proc. 25th Int. Joint Conf. Artif. Intell.,,", "citeRegEx": "Zheng et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Zheng et al\\.", "year": 2016}, {"title": "Accelerated stochastic gradient method for composite regularization", "author": ["Zhong", "L.W. Kwok 2014a] Zhong", "J.T. Kwok"], "venue": "In Proc. 17th Int. Conf. Artif. Intell. Statist.,", "citeRegEx": "Zhong et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zhong et al\\.", "year": 2014}, {"title": "Fast stochastic alternating direction method of multipliers", "author": ["Zhong", "L.W. Kwok 2014b] Zhong", "J.T. Kwok"], "venue": "In Proc. 31st Int. Conf. Mach. Learn. (ICML),", "citeRegEx": "Zhong et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zhong et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 4, "context": "the ADMM is an effective optimization tool (Boyd et al. 2011), and has shown attractive performance in a wide range of real-world problems, such as big data classification (Nie et al. 2014). To tackle the issue of high periteration complexity of batch (deterministic) ADMM (as a popular first-order optimization method), Wang and Banerjee (2012), Suzuki (2013) and Ouyang et al.", "startOffset": 44, "endOffset": 346}, {"referenceID": 4, "context": "the ADMM is an effective optimization tool (Boyd et al. 2011), and has shown attractive performance in a wide range of real-world problems, such as big data classification (Nie et al. 2014). To tackle the issue of high periteration complexity of batch (deterministic) ADMM (as a popular first-order optimization method), Wang and Banerjee (2012), Suzuki (2013) and Ouyang et al.", "startOffset": 44, "endOffset": 361}, {"referenceID": 4, "context": "the ADMM is an effective optimization tool (Boyd et al. 2011), and has shown attractive performance in a wide range of real-world problems, such as big data classification (Nie et al. 2014). To tackle the issue of high periteration complexity of batch (deterministic) ADMM (as a popular first-order optimization method), Wang and Banerjee (2012), Suzuki (2013) and Ouyang et al. (2013) proposed some online or stochastic ADMM algorithms.", "startOffset": 44, "endOffset": 386}], "year": 2017, "abstractText": "Recently, many variance reduced stochastic alternating direction method of multipliers (ADMM) methods (e.g. SAGADMM, SDCA-ADMM and SVRG-ADMM) have made exciting progress such as linear convergence rates for strongly convex problems. However, the best known convergence rate for general convex problems is O(1/T ) as opposed to O(1/T ) of accelerated batch algorithms, where T is the number of iterations. Thus, there still remains a gap in convergence rates between existing stochastic ADMM and batch algorithms. To bridge this gap, we introduce the momentum acceleration trick for batch optimization into the stochastic variance reduced gradient based ADMM (SVRG-ADMM), which leads to an accelerated (ASVRG-ADMM) method. Then we design two different momentum term update rules for strongly convex and general convex cases. We prove that ASVRG-ADMM converges linearly for strongly convex problems. Besides having a low per-iteration complexity as existing stochastic ADMM methods, ASVRG-ADMM improves the convergence rate on general convex problems from O(1/T ) to O(1/T ). Our experimental results show the effectiveness of ASVRG-ADMM. Introduction In this paper, we consider a class of composite convex optimization problems min x\u2208Rd1 f(x) + h(Ax), (1) where A\u2208Rd2\u00d7d1 is a given matrix, f(x) := 1 n \u2211n i=1fi(x), each fi(x) is a convex function, and h(Ax) is convex but possibly non-smooth. With regard to h(\u00b7), we are interested in a sparsity-inducing regularizer, e.g. `1-norm, group Lasso and nuclear norm. When A is an identity matrix, i.e. A = Id1 , the above formulation (1) arises in many places in machine learning, statistics, and operations research (Bubeck 2015), such as logistic regression, Lasso and support vector machine (SVM). We mainly focus on the large sample regime. In this regime, even first-order batch methods, e.g. FISTA (Beck and Teboulle 2009), become computationally burdensome due to their per-iteration complexity of O(nd1). As a result, stochastic gradient descent (SGD) with per-iteration complexity of O(d1) has Copyright c \u00a9 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. witnessed tremendous progress in the recent years. Especially, a number of stochastic variance reduced gradient methods such as SAG (Roux, Schmidt, and Bach 2012), SDCA (Shalev-Shwartz and Zhang 2013) and SVRG (Johnson and Zhang 2013) have been proposed to successfully address the problem of high variance of the gradient estimate in ordinary SGD, resulting in a linear convergence rate (for strongly convex problems) as opposed to sub-linear rates of SGD. More recently, the Nesterov\u2019s acceleration technique (Nesterov 2004) was introduced in (Allen-Zhu 2016; Hien et al. 2016) to further speed up the stochastic variancereduced algorithms, which results in the best known convergence rates for both strongly convex and general convex problems. This motivates us to integrate the momentum acceleration trick into the stochastic alternating direction method of multipliers (ADMM) below. When A is a more general matrix, i.e. A 6=Id1 , the formulation (1) becomes many more complicated problems arising from machine learning, e.g. graph-guided fuzed Lasso (Kim, Sohn, and Xing 2009) and generalized Lasso (Tibshirani and Taylor 2011). To solve this class of composite optimization problems with an auxiliary variable y = Ax, which are the special case of the general ADMM form, min x\u2208Rd1,y\u2208Rd2 f(x) + h(y), s.t. Ax+By = c, (2) the ADMM is an effective optimization tool (Boyd et al. 2011), and has shown attractive performance in a wide range of real-world problems, such as big data classification (Nie et al. 2014). To tackle the issue of high periteration complexity of batch (deterministic) ADMM (as a popular first-order optimization method), Wang and Banerjee (2012), Suzuki (2013) and Ouyang et al. (2013) proposed some online or stochastic ADMM algorithms. However, all these variants only achieve the convergence rate of O(1/ \u221a T ) for general convex problems and O(log T/T ) for strongly convex problems, respectively, as compared with the O(1/T ) and linear convergence rates of accelerated batch algorithms (Nesterov 1983), e.g. FISTA, where T is the number of iterations. By now several accelerated and faster converging versions of stochastic ADMM, which are all based on variance reduction techniques, have been proposed, e.g. SAG-ADMM (Zhong and Kwok 2014b), SDCA-ADMM (Suzuki 2014) and SVRG-ADMM (Zheng and Kwok 2016). With regard to strongly convex problems, ar X iv :1 70 7. 03 19 0v 1 [ cs .L G ] 1 1 Ju l 2 01 7 Table 1: Comparison of convergence rates and memory requirements of some stochastic ADMM algorithms. General convex Strongly-convex Space requirement SAG-ADMM O(1/T ) unknown O(d1d2+nd1) SDCA-ADMM unknown linear rate O(d1d2+n) SCAS-ADMM O(1/T ) O(1/T ) O(d1d2) SVRG-ADMM O(1/T ) linear rate O(d1d2) ASVRG-ADMM O(1/T ) linear rate O(d1d2) Suzuki (2014) and Zheng and Kwok (2016) proved that linear convergence can be obtained for the special ADMM form (i.e. B = \u2212Id2 and c = 0) and the general ADMM form, respectively. In SAG-ADMM and SVRG-ADMM, an O(1/T ) convergence rate can be guaranteed for general convex problems, which implies that there still remains a gap in convergence rates between the stochastic ADMM and accelerated batch algorithms. To bridge this gap, we integrate the momentum acceleration trick in (Tseng 2010) for deterministic optimization into the stochastic variance reduction gradient (SVRG) based stochastic ADMM (SVRG-ADMM). Naturally, the proposed method has low per-iteration time complexity as existing stochastic ADMM algorithms, and does not require the storage of all gradients (or dual variables) as in SCAS-ADMM (Zhao, Li, and Zhou 2015) and SVRGADMM (Zheng and Kwok 2016), as shown in Table 1. We summarize our main contributions below. \u2022 We propose an accelerated variance reduced stochastic ADMM (ASVRG-ADMM) method, which integrates both the momentum acceleration trick in (Tseng 2010) for batch optimization and the variance reduction technique of SVRG (Johnson and Zhang 2013). \u2022 We prove that ASVRG-ADMM achieves a linear convergence rate for strongly convex problems, which is consistent with the best known result in SDCA-ADMM (Suzuki 2014) and SVRG-ADMM (Zheng and Kwok 2016). \u2022 We also prove that ASVRG-ADMM has a convergence rate of O(1/T ) for non-strongly convex problems, which is a factor of T faster than SAG-ADMM and SVRG-ADMM, whose convergence rates are O(1/T ). \u2022 Our experimental results further verified that our ASVRG-ADMM method has much better performance than the state-of-the-art stochastic ADMM methods. Related Work Introducing y = Ax \u2208R2 , problem (1) becomes min x\u2208Rd1,y\u2208Rd2 f(x) + h(y), s.t. Ax\u2212 y = 0. (3) Although (3) is only a special case of the general ADMM form (2), when B = \u2212Id2 and c = 0, the stochastic (or online) ADMM algorithms and theoretical results in (Wang and Banerjee 2012; Ouyang et al. 2013; Zhong and Kwok 2014b; Zheng and Kwok 2016) and this paper are all for the more general problem (2). To minimize (2), together with the dual variable \u03bb, the update steps of batch ADMM are yk = argminy h(y) + \u03b2 2 \u2016Axk\u22121+By\u2212c+\u03bbk\u22121\u2016 , (4) xk = argminx f(x) + \u03b2 2 \u2016Ax+Byk\u2212c+\u03bbk\u22121\u2016 , (5) \u03bbk = \u03bbk\u22121 +Axk +Byk \u2212 c, (6) where \u03b2>0 is a penalty parameter. To extend the batch ADMM to the online and stochastic settings, the update steps for yk and \u03bbk remain unchanged. In (Wang and Banerjee 2012; Ouyang et al. 2013), the update step of xk is approximated as follows: xk = argmin x x\u2207fik(xk\u22121) + 1 2\u03b7k \u2016x\u2212 xk\u22121\u2016G + \u03b2 2 \u2016Ax+Byk\u2212c+\u03bbk\u22121\u2016, (7) where we draw ik uniformly at random from [n] := {1, . . . , n}, \u03b7k \u221d 1/ \u221a k is the step-size, and \u2016z\u2016G = zGz with given positive semi-definite matrix G, e.g. G = Id1 in (Ouyang et al. 2013). Analogous to SGD, the stochastic ADMM variants use an unbiased estimate of the gradient at each iteration. However, all those algorithms have much slower convergence rates than their batch counterpart, as mentioned above. This barrier is mainly due to the variance introduced by the stochasticity of the gradients. Besides, to guarantee convergence, they employ a decaying sequence of step sizes \u03b7k, which in turn impacts the rates. More recently, a number of variance reduced stochastic ADMM methods (e.g. SAG-ADMM, SDCA-ADMM and SVRG-ADMM) have been proposed and made exciting progress such as linear convergence rates. SVRG-ADMM in (Zheng and Kwok 2016) is particularly attractive here because of its low storage requirement compared with the algorithms in (Zhong and Kwok 2014b; Suzuki 2014). Within each epoch of SVRG-ADMM, the full gradient p\u0303 =\u2207f(x\u0303) is first computed, where x\u0303 is the average point of the previous epoch. Then \u2207fik(xk\u22121) and \u03b7k in (7) are replaced by \u2207\u0303fIk(xk\u22121) = 1 |Ik| \u2211 ik\u2208Ik (\u2207fik(xk\u22121)\u2212\u2207fik(x\u0303)) + p\u0303 (8) and a constant step-size \u03b7, respectively, where Ik \u2282 [n] is a mini-batch of size b (which is a useful technique to reduce the variance). In fact, \u2207\u0303fIk(xk\u22121) is an unbiased estimator of the gradient \u2207f(xk\u22121), i.e. E[\u2207\u0303fIk(xk\u22121)]=\u2207f(xk\u22121). Accelerated Variance Reduced Stochastic ADMM In this section, we design an accelerated variance reduced stochastic ADMM method for both strongly convex and general convex problems. We first make the following assumptions: Each convex fi(\u00b7) is Li-smooth, i.e. there exists a constant Li>0 such that \u2016\u2207fi(x)\u2212\u2207fi(y)\u2016\u2264Li\u2016x\u2212y\u2016, \u2200x, y \u2208 R, and L , maxi Li; f(\u00b7) is \u03bc-strongly convex, i.e. there is \u03bc > 0 such that f(x) \u2265 f(y) +\u2207f(y)(x\u2212 y)+ \u03bc2 \u2016x\u2212y\u2016 2 for all x, y \u2208R; The matrix A has full row rank. The first two assumptions are common in the analysis of first-order optimization methods, while the last one has Algorithm 1 ASVRG-ADMM for strongly-convex case Input: m, \u03b7, \u03b2 > 0, 1 \u2264 b \u2264 n. Initialize: x\u0303= z\u0303, \u1ef9, \u03b8, \u03bb\u0303=\u2212 1 \u03b2 (A T )\u2207f(x\u03030). 1: for s = 1, 2, . . . , T do 2: x0 = z s 0 = x\u0303 s\u22121, y 0 = \u1ef9 s\u22121, \u03bb0 = \u03bb\u0303 s\u22121; 3: p\u0303 = \u2207f(x\u0303s\u22121); 4: for k = 1, 2, . . . ,m do 5: Choose Ik\u2286 [n]of size b, uniformly at random; 6: y k=argminy h(y)+ \u03b2 2 \u2016Az s k\u22121+By\u2212 c+\u03bbk\u22121\u2016; 7: z k=z s k\u22121\u2212 \u03b7(\u2207\u0303fIk(x s k\u22121)+\u03b2A (Az k\u22121+By s k\u2212c+\u03bb s k\u22121)) \u03b3\u03b8 ; 8: xk=(1\u2212 \u03b8)x\u0303s\u22121 + \u03b8z k; 9: \u03bbk=\u03bb s k\u22121 +Az s k +By s k \u2212 c; 10: end for 11: x\u0303= 1 m \u2211m k=1x s k, \u1ef9 s=(1\u2212\u03b8)\u1ef9s\u22121+ \u03b8 m \u2211m k=1y s k, 12: \u03bb\u0303=\u2212 1 \u03b2 (A T )\u2020\u2207f(x\u0303s); 13: end for Output: x\u0303 , \u1ef9 . been used in the convergence analysis of batch ADMM (?; Nishihara et al. 2015; Deng and Yin 2016) and stochastic ADMM (Zheng and Kwok 2016). The Strongly Convex Case In this part, we consider the case of (2) when each fi(\u00b7) is convex,L-smooth, and f(\u00b7) is \u03bc-strongly convex. Recall that this class of problems include graph-guided Logistic Regression and SVM as notable examples. To efficiently solve this class of problems, we incorporate both the momentum acceleration and variance reduction techniques into stochastic ADMM. Our algorithm is divided into T epochs, and each epoch consists of m stochastic updates, where m is usually chosen to be O(n) as in (Johnson and Zhang 2013). Let z be an important auxiliary variable, its update rule is given as follows. Similar to (Zhong and Kwok 2014b; Zheng and Kwok 2016), we also use the inexact Uzawa method (Zhang, Burger, and Osher 2011) to approximate the sub-problem (7), which can avoid computing the inverse of the matrix ( 1 \u03b7 Id1+\u03b2A A). Moreover, the momentum weight 0\u2264 \u03b8s \u2264 1 (the update rule for \u03b8s is provided below) is introduced into the proximal term 1 2\u03b7\u2016x\u2212xk\u22121\u2016 2 G similar to that of (7), and then the sub-problem with respect to z is formulated as follows: min z (z \u2212z k\u22121) \u2207\u0303fIk(xk\u22121)+ \u03b8s\u22121 2\u03b7 \u2016z \u2212z k\u22121\u2016G + \u03b2 2 \u2016Az +By k \u2212 c+ \u03bbk\u22121\u2016, (9) where \u2207\u0303fIk(xk\u22121) is defined in (8), \u03b7 < 1 2L , and G = \u03b3Id1\u2212 \u03b7\u03b2 \u03b8s\u22121 AA with \u03b3 \u2265 \u03b3min \u2261 \u03b7\u03b2\u2016A A\u20162 \u03b8s\u22121 +1 to ensure that G I similar to (Zheng and Kwok 2016), where \u2016\u00b7\u20162 is the spectral norm, i.e. the largest singular value of the matrix. Furthermore, the update rule for x is given by xk= x\u0303 +\u03b8s\u22121(z s k\u2212 x\u0303)=(1\u2212\u03b8s\u22121)x\u0303+\u03b8s\u22121z k, (10) where \u03b8s\u22121(z k \u2212 x\u0303s\u22121) is the key momentum term (similar to those in accelerated batch methods (Nesterov 2004)), which helps accelerate our algorithm by using the iterate of the previous epoch, i.e. x\u0303s\u22121. Similar to xk, \u1ef9 s = (1\u2212 \u03b8s\u22121)\u1ef9 s\u22121+ \u03b8s\u22121 m \u2211m k=1y s k. Moreover, \u03b8s can be set to a constant \u03b8 in all epochs of our algorithm, which must satisfy 0 \u2264 \u03b8 \u2264 1\u2212 \u03b4(b)/(\u03b1\u22121), where \u03b1 = 1 L\u03b7 > 1+ \u03b4(b), and \u03b4(b) is defined below. The optimal value of \u03b8 is provided in Proposition 1 below. The detailed procedure is shown in Algorithm 1, where we adopt the same initialization technique for \u03bb\u0303 as in (Zheng and Kwok 2016), and (\u00b7)\u2020 is the pseudo-inverse. Note that, when \u03b8=1, ASVRG-ADMM degenerates to SVRG-ADMM in (Zheng and Kwok 2016). The Non-Strongly Convex Case In this part, we consider general convex problems of the form (2) when each fi(\u00b7) is convex, L-smooth, and h(\u00b7) is not necessarily strongly convex (but possibly non-smooth). Different from the strongly convex case, the momentum weight \u03b8s is required to satisfy the following inequalities: 1\u2212 \u03b8s \u03b82 s \u2264 1 \u03b82 s\u22121 and 0 \u2264 \u03b8s \u2264 1\u2212 \u03b4(b) \u03b1\u2212 1 , (11) where \u03b4(b) := n\u2212b b(n\u22121) is a decreasing function with respect to the mini-batch size b. The condition (20) allows the momentum weight to decease, but not too fast, similar to the requirement on the step-size \u03b7k in classical SGD and stochastic ADMM (?). Unlike batch acceleration methods, the weight must satisfy both inequalities in (20). Motivated by the momentum acceleration techniques in (Tseng 2010; Nesterov 2004) for batch optimization, we give the update rule of the weight \u03b8s for the mini-batch case: \u03b8s = \u221a \u03b84 s\u22121+ 4\u03b8 2 s\u22121 \u2212 \u03b8 s\u22121 2 and \u03b80 = 1\u2212 \u03b4(b) \u03b1\u2212 1 . (12) For the special case of b = 1, we have \u03b4(1) = 1 and \u03b80 = 1\u2212 1 \u03b1\u22121 , while b=n (i.e. batch version), \u03b4(n)=0 and \u03b80= 1. Since {\u03b8s} is decreasing, then \u03b8s \u2264 1\u2212 \u03b4(b) \u03b1\u22121 is satisfied. The detailed procedure is shown in Algorithm 2, which has many slight differences in the initialization and output of each epoch from Algorithm 1. In addition, the key difference between them is the update rule for the momentum weight \u03b8s. That is, \u03b8s in Algorithm 1 can be set to a constant, while that in Algorithm 2 is adaptively adjusted as in (12). Convergence Analysis This section provides the convergence analysis of our ASVRG-ADMM algorithms (i.e. Algorithms 1 and 2) for strongly convex and general convex problems, respectively. Following (Zheng and Kwok 2016), we first introduce the following function P (x, y) := f(x)\u2212f(x\u2217)\u2212\u2207f(x\u2217)T(x\u2212 x\u2217)+h(y)\u2212h(y\u2217)\u2212h\u2032(y\u2217)T(y\u2212 y\u2217) as a convergence criterion, where h\u2032(y) denotes the (sub)gradient of h(\u00b7) at y. Indeed, P (x, y)\u2265 0 for all x, y \u2208 R. In the following, we give the intermediate key results for our analysis. Algorithm 2 ASVRG-ADMM for general convex case Input: m, \u03b7, \u03b2 > 0, 1 \u2264 b \u2264 n. Initialize: x\u0303 = z\u0303, \u1ef9, \u03bb\u0303, \u03b80 = 1\u2212 L\u03b7\u03b4(b) 1\u2212L\u03b7 . 1: for s = 1, 2, . . . , T do 2: x0=(1\u2212\u03b8s\u22121)x\u0303+\u03b8s\u22121z\u0303, y 0= \u1ef9s\u22121, \u03bb0= \u03bb\u0303s\u22121; 3: p\u0303 = \u2207f(x\u0303s\u22121), z 0= z\u0303s\u22121; 4: for k = 1, 2, . . . ,m do 5: Choose Ik\u2286 [n]of size b, uniformly at random; 6: y k=argminy h(y)+ \u03b2 2 \u2016Az s k\u22121+By\u2212 c+\u03bbk\u22121\u2016; 7: z k=z s k\u22121\u2212 \u03b7(\u2207\u0303fIk(x s k\u22121)+\u03b2A (Az k\u22121+By s k\u2212c+\u03bb s k\u22121)) \u03b3\u03b8s\u22121 ; 8: xk=(1\u2212 \u03b8s\u22121)x\u0303 + \u03b8s\u22121z k; 9: \u03bbk=\u03bb s k\u22121 +Az s k +By s k \u2212 c; 10: end for 11: x\u0303= 1 m \u2211m k=1x s k, \u1ef9 =(1\u2212\u03b8s\u22121)\u1ef9+ \u03b8s\u22121 m \u2211m k=1y s k, 12: \u03bb\u0303=\u03bbm, z\u0303 =z m, \u03b8s= \u221a \u03b84 s\u22121+4\u03b8 2 s\u22121\u2212\u03b8 2 s\u22121 2 ; 13: end for Output: x\u0303 , \u1ef9 . Lemma 1. E[\u2016\u2207\u0303fIk(xk\u22121)\u2212\u2207f(xk\u22121)\u2016] \u22642L\u03b4(b) [ f(x\u0303)\u2212f(xk\u22121)+(xk\u22121\u2212 x\u0303)\u2207f(xk\u22121) ] , where \u03b4(b)= n\u2212b b(n\u22121)\u22641 and 1 \u2264 b \u2264 n. Lemma 2. Using the same notation as in Lemma 1, let (x\u2217, y\u2217, \u03bb\u2217) denote an optimal solution of problem (2), and {(z k, xk, y k, \u03bbk, x\u0303, \u1ef9)} be the sequence generated by Algorithm 1 or 2 with \u03b8s \u2264 1\u2212 \u03b4(b) \u03b1\u22121, where \u03b1= 1 L\u03b7 . Then the following holds for all k, E [ P (x\u0303, \u1ef9)\u2212 \u03b8s\u22121 m m \u2211 k=1 ( (x\u2217\u2212zs k)A\u03c6k+(y\u2212y k)B\u03c6k )] \u2264E [ P (x\u0303s\u22121, \u1ef9s\u22121) 1/(1\u2212\u03b8s\u22121) + \u03b8 s\u22121 ( \u2016x\u2217\u2212 z 0\u2016G\u2212\u2016x\u2212 z m\u2016G )", "creator": "LaTeX with hyperref package"}}}