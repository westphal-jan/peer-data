{"id": "0911.0894", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Nov-2009", "title": "A New Computational Schema for Euphonic Conjunctions in Sanskrit Processing", "abstract": "Automated language processing is central to the drive to enable facilitated referencing of increasingly available Sanskrit E texts. The first step towards processing Sanskrit text involves the handling of Sanskrit compound words that are an integral part of Sanskrit texts. This firstly necessitates the processing of euphonic conjunctions or sandhis, which are points in words or between words, at which adjacent letters coalesce and transform. The ancient Sanskrit grammarian Panini's codification of the Sanskrit grammar is the accepted authority in the subject. His famed sutras or aphorisms, numbering approximately four thousand, tersely, precisely and comprehensively codify the rules of the grammar, including all the rules pertaining to sandhis. This work presents a fresh new approach to processing sandhis in terms of a computational schema. This new computational model is based on Panini's complex codification of the rules of grammar. The model has simple beginnings and is yet powerful, comprehensive and computationally lean.", "histories": [["v1", "Wed, 4 Nov 2009 19:33:21 GMT  (288kb)", "http://arxiv.org/abs/0911.0894v1", "International Journal of Computer Science Issues, IJCSI Volume 5, pp43-51, October 2009"]], "COMMENTS": "International Journal of Computer Science Issues, IJCSI Volume 5, pp43-51, October 2009", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["n rama", "meenakshi lakshmanan"], "accepted": false, "id": "0911.0894"}, "pdf": {"name": "0911.0894.pdf", "metadata": {"source": "CRF", "title": "A New Computational Schema for Euphonic Conjunctions in Sanskrit Processing", "authors": ["Rama N", "Meenakshi LAKSHMANAN"], "emails": [], "sections": [{"heading": null, "text": "The codification of Sanskrit grammar by the ancient Sanskrit grammarist P\u0101\u1e47ini is the recognized authority in this subject. His famous sutra-s or aphorisms, which comprise about four thousand numbers, concise, concise and comprehensively encode the rules of grammar, including all rules relating to sandhi-s. This work represents a fresh new approach to processing sandhi-s in the sense of a mathematical schema. This new computer model is based on P\u0101\u00f1ini's complex codification of grammar rules. The model has simple beginnings, yet is powerful, comprehensive and computationally slender. Keywords: Sanskrit, euphonic conjunction, sandhi, linguistics, panini, aphorism, sutra."}, {"heading": "1. Introduction", "text": "The name Saxon (Sanskrit) means \"language that has been brought to formal perfection.\" The fact that the BackusNaur form used in the specification of formal languages has now become popularly known as the \"Paganini-Backus form\" is a first step towards the language processing of such Sanskrit texts in order to develop efficient algorithms and tools for handling segmentation in Sanskrit compound words, which are an integral part of Sanskrit texts. These firstlynecessitates the processing of Sandhi-s or euphonic conjunctions. 1.1 Unicode The Unicode (UTF-8) is assumed to be the digital part of Sanskrit texts."}, {"heading": "2. The Problem", "text": "Sandhi-s in Sanskrit are dots in words or between words where adjacent letters merge and transform; this is a common feature of Indian languages and is particularly elaborately treated and used in Sanskrit. Transformations used are generally divided into four categories: 1. \u0101gama - addition of an additional letter or series of letters 2. \u0101de\u015ba - replacement of one or more letters 3. lopa - omission of a letter 4. prak\u1e5btibh\u0101va - no change (the latter, however, is considered a transformation in the language and was therefore listed above. However, it can be ignored for practical reasons and is therefore not dealt with in this work.) There are almost seventy aphorisms of P\u0101\u1e47ini dealing with Sandhi-s. These aphorisms lay down the rules for the above transformations and specify the conditions under which certain letters are combined with certain others in order to produce certain outcomes. The overall challenge of developing a Sandhi algorithm is to develop a handy algorithm."}, {"heading": "3. The Approach", "text": "To exploit the order of letters: 34 9th Column 1 10th 39 11th Column 3 12th Column: 44 12th Column: 33 11th Column: 33 12th Column: 33 11th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33 12th Column: 33. Column: 33rd Column: 33. Column: 33rd Column: 33. Column: 33. Column: 33."}, {"heading": "4. Results and Discussion", "text": "The most important Sandhi aphorisms, their short description (rule), the corresponding general operator, and the final specialized equations, along with the scope of the operation, are listed in a categorical listing: \u2022 The equations and conditions specified as operators with three subscriptions are those that can be implemented. \u2022 The \"general operator\" is specified for each aphorism ({} the meaning of the aphorism and all conditions under which it enters into force, and provides a generalization from which the final equations are specialized. Thus, a specialized operator would override the \"general operator\" with its own specialized conditions. \u2022 The variable X denotes the order of letters culminating in x; the variable Y denotes the order of letters beginning with y. These are used to represent special conditions that relate to the entire word involved in Sandhi."}, {"heading": "4. etyedhaty\u016b\u1e6dhsu || 6.1.89 ||", "text": "Rule: In all the following rules, v\u1e5bddhi replaces both letters (ai, au, \u0101r, \u0101l) corresponding to the beginning of the second word. a. a. a or \u0101 followed by the prepositions eti, edhati - > aierreplaces both b. preposition pra followed by e\u1e63a\u1e25, e\u1e63ya - > aierreplaces both c. word sva followed by \u012br - > ai replaces both d. a or \u0101 followed by the preposition \u016bh - > aureplaces both e. word ak\u1e63a followed by word \u016bhini - > au replaces both f. preposition pra followed by \u016bh, \u016bh - > au replaces both general operators: \u04351,4 (x, y) = z = z1 if x {1, 2}."}, {"heading": "5. etyedhaty\u016b\u1e6dhsu || 6.1.89 ||", "text": "Rule: In all the following rules, the v\u1e5bddhi letter (ai, au, \u0101r, \u0101l), which corresponds to the beginning of the second word, replaces both. a. a followed by the word \u1e5bta - > \u0101r replaces both b. preposition / words pra, vatsara, kambala, vasana, da\u015ba, \u1e5b\u1e47a followed by the word \u1e5b\u1e47a - > \u0101r replaces both. General operator: \u04181,5 (x, y) = z = z1 = z11z12 if x = 1, 1,5,1 (x, y): z11 = 2, z12 = y + 10 if [y = 7, Y {7 + 41 + 1}] or [X {43 + 17 + 1, 16 + 1 + 41 + 1 + 17 + 1, 42 + 1 + 20 + 30 + 18 + 1, 16 + 1 + 46 + 1 + 23 + 1,"}, {"heading": "33+1+44+1, 7+22+1}, Y {7+22+1}]", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "6. upasarg\u0101d\u1e5bti dh\u0101tau || 6.1.91 ||", "text": "Rule: a or \u0101 at the end of prepositions followed by \u0109- > v\u1e5bddhi letter \u0101r replaces both. (The prepositions qualified for this are: pra, par\u0101, apa, ava, upa) IJCSI International Journal of Computer Science Issues, Vol. 5, 200947General Operator: b = 1.6 (x, y) = z = z11z12 if x {1, 2}, y = 7% 1,6,1 (x, y): z11 = 2, z12 = y + 10 if X {43 + 17 + 1, 43 + 1 + 17 + 2, 1 + 43 + 1.1 + 16 + 1, 5 + 43 + 1} parar\u016bpa sandhi7. General Operator: b = 1,7 (x, y) = z = 1 {11 + 1 {1 {1}, {1}, 17 + 7, 17, 17 + 7, 17 + 17 + 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17 + 17, 17 + 17, 17 + 17, 17 + 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17 + 17, 17, 17 + 17 + 17, 17, 17 + 17, 17 + 17 + 17, 17, 17 + 17, 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17 + 17, 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17, 17 + 17, 17 + 17 + 17, 17, 17 + 17, 17 + 17, 17 + 17, 17, 17 + 17, 17 + 17 + 17, 17, 17 + 17 + 17, 17 + 17, 17, 17 + 17, 17 + 17, 17 + 17 + 17, 17 + 17 + 17, 17, 17 + 17 + 17, 17, 17 + 17"}, {"heading": "8. aka\u1e25 savar\u1e47e d\u012brgha\u1e25 || 6.1.101 ||", "text": "Rule: a, i, u, \u0441 (short or long) followed by similar a, i, u, \u0441 (short or long) - > corresponding long letter replaces both. General Operator: 1, 1,8 (x, y) = z = z1 = y if 1 < = x < = 9, 1 < = y < = 9 All operators 1, 1,8, i are commutative. 1, 8,1 (x, y): z1 = y if [x {1, 3, 5}, y = x + 1] or [x {2, 4, 6}, y = x]: 1,8,2 (x, y): z1 = y + 1 if x {1, 3, 5}, y = x = 1,8,3 (x, y): z1 = 8 if x, y {7, 8, 9} p\u016brvar\u016bpa sandhi"}, {"heading": "9. e\u1e45a\u1e25 pad\u0101nt\u0101dati || 6.1.109 ||", "text": "Rule: e or o followed by a - > first letter replaces both. General Operator = = = 1.9 (x, y) = = 1.4 (x, y) = = 11 (x, y) = z = 13 (x, 11), y = 1 (x, y): z1 = x (x, y) = 22 (x, 11), y = 14.2 (x, r, l). General Operator: z2 (x, y) = z = z2y (x, y) = 3 < = 9, y < = 13 (x, y): z1.1 (x, y): z2 = 15 (x, y): z2 = 15 (x, 4), y (x, 4): 2 (x, y): 2.1.2 (x, y), y < 2 (x, y): 2.1.1 (x, y) = 15 (x, y)."}, {"heading": "4. k\u1e63ayyajayyau \u015baky\u0101rthe || 6.1.81 ||", "text": "krayyastadarthe | | 6.1.82 | | Rule: e is the end of the words k\u1e63e, je, kre followed by y - > ay replaces the first. General operator: \u04452,4 (x, y) = z = z2y = z21z22y if x = 10, y = 15, X {42 + 45 + 10, 29 + 10} and 2,4,1 (x, y): z21 = 1, z22 = x + 5ava\u0439\u0101de\u015ba sandhi"}, {"heading": "5. ava\u1e45 sphot\u0101yanasya || 6.1.123 ||", "text": "Rule: o, which is the end of the word go, followed by a vowel - > \"ava\" replaces the first one. General operator: \u04452,5 (x, y) = z = z2y = z21z22z23y, if x = 11, y < = 13, X = 31 + 11 and 2,5,1 (x, y): z21 = 1, z22 = 16, z23 = 1ja\u015btva sandhi"}, {"heading": "6. jhal\u0101m ja\u015bo\u2019nte || 8.2.39 ||", "text": "Rule: not nasal mutes, sibilants, aspirate at the end of a word - > first letter replaced by the corresponding letter 3. General operator: z2 = x + 5 if x {24, 25, 26, 27, 28}; z2 = x if x {29, 30, 31, 32, 33, 44, 47}; z2 = x + 5 if x {24, 25, 26, 27, 28}; z2 = x = 5 if x {35, 37, 38}; z2 = x = 7 if x = 44, 45, 47}; 2,6,3 (x, y): z2 = x - 3 if x = 34, 2,6,4 (x, y): z2 = x - 5 if x {35, 37, 38}; z2 = 2,6,5 (x, y): z2 = x - 7 if x = 36, y: z6 (x, y): z2 = x - 8 if x, 41}."}, {"heading": "9. na\u015bchavyapra\u015b\u0101n || 8.3.7 ||", "text": "Rule: the last n of a word with the exception of the word pra\u015b\u0101n, followed by ch, \u1e6dh, th, c, \u0430, t, followed by a vowel, aspirate, half vowel or nasal - > the ending n replaced by the combination. General operator: \u04452,9 (x, y) = z = z2y = z21z22y if x = 23, 36 < = y < = 41, 1 < = w < = 23, X {43 + 17 + 1 + 44 + 2 + 23}"}, {"heading": "10. kharavas\u0101nayorvisarjan\u012bya\u1e25 || 8.3.15 ||", "text": "Rule: r followed by hard consonant - > r replaced by visarga. = General operator: p = 2,10 (x, y) = z = z2y if x = 17, 34 < = y < = 46% 2,10,1 (x, y): z2 = 49anusv\u0101ra sandhi11. mo'nusv\u0101ra (except in the case of the word sam followed by the word r\u0101\u0432) General operator: p = 2,11 (x, y) = z = z2y if x = 20,14 < = y < = 47, X {46 + 1 + 20}, Y {17 + 2 + 40}: p = 2,11,1 (x, y): z = 4812. na\u015bc\u0101pad\u0101jhali | 8.aple = = = 47, X {46 + 1 + 20}."}, {"heading": "15. visarjan\u012byasya sa\u1e25 || 8.3.34 ||", "text": "Rule: visarga followed by hard consonant - > visarga replaced by s.General operator: \u04452.15 (x, y) = z = z2y if x = 49.34 < = y < = 46, w {44, 45, 46}; 2,15,1 (x, y): z2 = 46\u015bcutva sandhi"}, {"heading": "16. sto\u1e25 \u015bcun\u0101\u1e25 \u015bcu\u1e25 || 8.4.40 ||", "text": "Rule: Dental, s followed by palate, \u015b - > first replaced by the corresponding palate, \u015b or. General operator: \u04352,16 (x, y) = z = z2y at x {41, 38, 33, 28, 23, 46}, y {39, 36, 29, 24, 19, 44}, 2,16,1 (x, y): z2 = x - 2 at x {41, 38, 46}, 2,16,2 (x, y): z2 = x - 4 at x [33, 28, 23], - > Dentals or s replaced by sandhibals or sandhibals. General operator: \u0432 2,17 (x, y) = z = z2y at x {41, 38, 33, 28, 23, 46} or [s followed by] - > Dentals or s replaced by cerebral or vice versa."}, {"heading": "18. yaro'nun\u0101sike\u2019nun\u0101siko v\u0101 || 8.4.45 ||", "text": "Rule: Half vowels y, v and l followed by nasal - > first replaced by the corresponding nasal vowels. General operator: \u0442 2,18 (x, y) = z = z2y = z21z22y if x {15, 16, 18}, 19 < = y < = 23% 2,18,1 (x, y): z21 = 48, z22 = x"}, {"heading": "19. yaro'nun\u0101sike\u2019nun\u0101siko v\u0101 || 8.4.45 ||", "text": "Rule: semivowel r, mute, sibilant followed by nasal - > first replaced by the corresponding nose. General Operator: z2 = z = z2y at 17 < = x < = 46, x! = 18, 19 < = y < = 23, 19 < = 2,19.1 (x, y): z2 = x at x {17, 19, 20, 21, 22, 23, 44, 45, 46} 2,19.2 (x, y): z2 = x - 5 at x {24, 25, 26, 27, 28} 2,19.3 (x, y): z2 = x - 10 at x {29, 30, 31, 32, 33}: z2 = 2,19.4 (x, y): z2 = x - 13 at x = 34, 2,19.5 (x, y): z2 = x - 15 at x {35, 37, 38}"}, {"heading": "20. jhal\u0101m ja\u015b jha\u015bi || 8.4.53 ||", "text": "Rule: not nasal mutes, sibilants, aspirate followed by soft consonants = = = 41, column 4 - > first replaced by the corresponding column 3 letter. (< 22, x) - then replaced: < 28, 24 < = 22, if replaced: < 22, if replaced: < 24, 24 < = 22, if replaced: < 22, if replaced: < 28, 24 < = 22, if replaced: < 22, if replaced: < 22, if replaced: < 28, 24 < 22, if replaced: < 30, 31, 32, 33, 44, 46, 47} - then: 2,20,3 (x, y): z2, if replaced: 2,20,4 (x, y): z2 = 5, if replaced: 2,20,4 (x, y): z2 = 5, 37, if replaced: 2,2 (x)."}, {"heading": "1. sto\u1e25 \u015bcun\u0101\u1e25 \u015bcu\u1e25 || 8.4.40 ||", "text": "[[file: http: / / www.spiegel.de / politik / deutschland] - [file: http: / / www.spiegel.de / politik / deutschland] - [file: http: / / www.spiegel.de / politik / deutschland] - [file: http: / / www.spiegel.de / deutschland] - [caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption:: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption caption: caption: caption: caption: caption: caption caption caption: caption caption: caption: caption: caption: caption caption: caption: caption: caption caption caption: caption: caption: caption: caption: caption: caption caption: caption: caption: caption: caption: caption: caption caption: caption: caption: caption: caption: caption: caption caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption: caption:: caption: caption: caption:: caption: caption: caption:: caption: caption: caption:: caption: caption: caption:: caption: caption: caption::: caption: caption:: caption:: caption:: caption: caption:: caption:: caption: caption: caption: caption:::: caption: caption::::: caption: caption: caption:: caption: caption::::: caption: caption: caption:::: caption: caption::: caption:"}, {"heading": "4. \u1e45amo hrasv\u0101daci \u1e45amu\u1e47nityam || 8.3.32 ||", "text": "Rule: Short vowel precedes the vowel preceded by a vowel - > 1 < = 1 < = 13, u {1, 3, 5, 7, 9}."}, {"heading": "3. lopa\u1e25 \u015b\u0101kalyasya || 8.3.19 ||", "text": "Rule: Last v or y is preceded by one or \u0101 and followed by a vowel, half vowel, nasal, column 3 or column 4 - > the v or y is dropped. General Operator: Explanation 5,3 (x, y) = z = y if x {15, 16}, 1 < = y < = 33, u {1, 2}, 5,3,1 (x, y) = z = y4. oto g\u0101rgyasya | | 8.3.20 | Rule: y is preceded and followed by a vowel, half vowel, nasal, column 3 or column 4 - > the y is dropped. General Operator: Explanation 5,4 (x, y) = z = y < = y < = 33, u = 11 = 5,4.1 (x, y) = z = y5. hali sarve\u1e63\u0101m | | | 8.3.22 | Rule: y followed by consonants - > Case. General Treatment 5,5 (&lt\u0101wel, &lt\u0101wel = < < < &lt\u0101hi = four; < < < four; < < four in each case)"}, {"heading": "5. Conclusions", "text": "Although there are almost 2500 rules at the letter level (Table 2), this new scheme, which directly maps the patterns in P\u0101\u1e47ini's aphorisms in a simple and effective way, ensures that we arrive at a total of only 110 equations. It is clearly a mathematically slim method for calculating the result of Sandhi operations, and the results represent a mathematical model for processing a large part of the euphonic conjunctions in Sanskrit. The work also demonstrates the simplicity with which euphonic conjunctions can be handled by adopting the precise scheme for the representation of rules. A major strength of this modelling approach is that it is deterministic, as opposed to the probable methods used so far for Sandhi operations. Determinism is inherent in the Sandhi rules, which indeed specify how Sandhi's are formed and not how they are broken, and this determinism has been uniquely modelled and modelled."}], "references": [{"title": "Knowledge Representation in Sanskrit and Artificial Intelligence", "author": ["Briggs Rick"], "venue": "RIACS, NASA Ames Research Center, AI Magazine,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1985}, {"title": "Automata Mista\u201d, Festschrift in Honor of Zohar Manna for his 64th anniversary", "author": ["Huet G\u00e9rard"], "venue": "Taormina,  IJCSI International Journal of Computer Science Issues,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Lexicon-directed Segmentation and Tagging of Sanskrit\u201d, in XIIth World Sanskrit", "author": ["Huet G\u00e9rard"], "venue": "Final version in Themes and Tasks in Old and Middle Indo- Aryan Linguistics,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2003}, {"title": "Shallow Syntax Analysis in Sanskrit Guided by Semantic Nets Constraints", "author": ["Huet G\u00e9rard"], "venue": "Proceedings of International Workshop on Research Issues in Digital Libraries, Kolkata,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "SanskritTagger, a Stochastic Lexical and POS Tagger for Sanskrit\u201d, Peer-reviewed", "author": ["Hellwig Oliver"], "venue": "Proceedings of the First International Sanskrit Computational Linguistics Symposium, France,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "From P\u0101ninian Sandhi to Finite State Calculus\u201d, Sanskrit Computational Linguistics: First and Second International Symposia", "author": ["D. Hyman Malcolm"], "venue": "Revised Selected and Invited Papers,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Computing Science in Ancient India, Center for Advanced Computer Studies, University of Southwestern Louisiana", "author": ["Rao T.R. N", "Kak Subhash"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1998}, {"title": "The Panini-Backus Form in Syntax of Formal Languages, Center for Advanced Computer Studies", "author": ["Rao T.R. N", "Kak Subhash"], "venue": "University of Southwestern Louisiana,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1998}], "referenceMentions": [{"referenceID": 0, "context": "The recognition of Sanskrit as a highly phonetic language as also one with an extensively codified grammar [1], is widespread.", "startOffset": 107, "endOffset": 110}, {"referenceID": 6, "context": "That the BackusNaur Form used in the specification of formal languages, has now come to be popularly known as the P\u0101\u1e47ini-Backus Form [8, 9], bears ample testimony to this fact.", "startOffset": 133, "endOffset": 139}, {"referenceID": 7, "context": "That the BackusNaur Form used in the specification of formal languages, has now come to be popularly known as the P\u0101\u1e47ini-Backus Form [8, 9], bears ample testimony to this fact.", "startOffset": 133, "endOffset": 139}, {"referenceID": 1, "context": "Existing methods of sandhi processing, be they methods to form compound words or even to try to split them, seem to be based on a derived understanding of the functioning of euphonic conjunctions, and usually go the finite automataHMM-artificial intelligence way [3-7, 12].", "startOffset": 263, "endOffset": 272}, {"referenceID": 2, "context": "Existing methods of sandhi processing, be they methods to form compound words or even to try to split them, seem to be based on a derived understanding of the functioning of euphonic conjunctions, and usually go the finite automataHMM-artificial intelligence way [3-7, 12].", "startOffset": 263, "endOffset": 272}, {"referenceID": 3, "context": "Existing methods of sandhi processing, be they methods to form compound words or even to try to split them, seem to be based on a derived understanding of the functioning of euphonic conjunctions, and usually go the finite automataHMM-artificial intelligence way [3-7, 12].", "startOffset": 263, "endOffset": 272}, {"referenceID": 4, "context": "Existing methods of sandhi processing, be they methods to form compound words or even to try to split them, seem to be based on a derived understanding of the functioning of euphonic conjunctions, and usually go the finite automataHMM-artificial intelligence way [3-7, 12].", "startOffset": 263, "endOffset": 272}, {"referenceID": 5, "context": "Existing methods of sandhi processing, be they methods to form compound words or even to try to split them, seem to be based on a derived understanding of the functioning of euphonic conjunctions, and usually go the finite automataHMM-artificial intelligence way [3-7, 12].", "startOffset": 263, "endOffset": 272}, {"referenceID": 1, "context": "Traditional AI methods such as hidden Markov models, which have hitherto been applied for Sanskrit processing [3-7], assume relevance in the sandhi-splitting approach in which there are inherent ambiguities, rather than in the sandhi-building approach which is modeled here.", "startOffset": 110, "endOffset": 115}, {"referenceID": 2, "context": "Traditional AI methods such as hidden Markov models, which have hitherto been applied for Sanskrit processing [3-7], assume relevance in the sandhi-splitting approach in which there are inherent ambiguities, rather than in the sandhi-building approach which is modeled here.", "startOffset": 110, "endOffset": 115}, {"referenceID": 3, "context": "Traditional AI methods such as hidden Markov models, which have hitherto been applied for Sanskrit processing [3-7], assume relevance in the sandhi-splitting approach in which there are inherent ambiguities, rather than in the sandhi-building approach which is modeled here.", "startOffset": 110, "endOffset": 115}, {"referenceID": 4, "context": "Traditional AI methods such as hidden Markov models, which have hitherto been applied for Sanskrit processing [3-7], assume relevance in the sandhi-splitting approach in which there are inherent ambiguities, rather than in the sandhi-building approach which is modeled here.", "startOffset": 110, "endOffset": 115}, {"referenceID": 5, "context": "Traditional AI methods such as hidden Markov models, which have hitherto been applied for Sanskrit processing [3-7], assume relevance in the sandhi-splitting approach in which there are inherent ambiguities, rather than in the sandhi-building approach which is modeled here.", "startOffset": 110, "endOffset": 115}], "year": 2009, "abstractText": "Automated language processing is central to the drive to enable facilitated referencing of increasingly available Sanskrit E-texts. The first step towards processing Sanskrit text involves the handling of Sanskrit compound words that are an integral part of Sanskrit texts. This firstly necessitates the processing of euphonic conjunctions or sandhi-s, which are points in words or between words, at which adjacent letters coalesce and transform. The ancient Sanskrit grammarian P\u0101\u1e47ini\u2019s codification of the Sanskrit grammar is the accepted authority in the subject. His famed s\u016btra-s or aphorisms, numbering approximately four thousand, tersely, precisely and comprehensively codify the rules of the grammar, including all the rules pertaining to sandhi-s. This work presents a fresh new approach to processing sandhi-s in terms of a computational schema. This new computational model is based on P\u0101\u1e47ini\u2019s complex codification of the rules of grammar. The model has simple beginnings and is yet powerful, comprehensive and computationally lean.", "creator": "PScript5.dll Version 5.2.2"}}}