{"id": "0911.2974", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Nov-2009", "title": "A Dynamic Near-Optimal Algorithm for Online Linear Programming", "abstract": "We consider the online linear programming problem where the constraint matrix is revealed column by column along with the objective function. We provide a 1-o(1) competitive algorithm for this surprisingly general class of online problems under the assumption of random order of arrival and some mild conditions on the right-hand-side input. Our learning-based algorithm works by dynamically updating a threshold price vector at geometric time intervals, the price learned from the previous steps is used to determine the decision for the current step. Our result provides a common near-optimal solution to a wide range of online problems including online routing and packing, online combinatorial auction, online adwords matching, many secretary problems, and various resource allocation and revenue management problems. Apart from online problems, the algorithm can also be applied for fast solution of large linear programs by sampling the columns of constraint matrix.", "histories": [["v1", "Mon, 16 Nov 2009 16:39:33 GMT  (22kb)", "https://arxiv.org/abs/0911.2974v1", null], ["v2", "Sat, 4 May 2013 20:10:14 GMT  (88kb,D)", "http://arxiv.org/abs/0911.2974v2", null], ["v3", "Wed, 9 Apr 2014 03:44:37 GMT  (68kb)", "http://arxiv.org/abs/0911.2974v3", null]], "reviews": [], "SUBJECTS": "cs.DS cs.LG", "authors": ["shipra agrawal", "zizhuo wang", "yinyu ye"], "accepted": false, "id": "0911.2974"}, "pdf": {"name": "0911.2974.pdf", "metadata": {"source": "CRF", "title": "A Dynamic Near-Optimal Algorithm for Online Linear Programming", "authors": ["Shipra Agrawal", "Zizhuo Wang", "Yinyu Ye"], "emails": ["shipra@microsoft.com", "zwang@umn.edu", "yinyu-ye@stanford.edu"], "sections": [{"heading": null, "text": "ar Xiv: 091 1.29 74v3 [cs.DS] 9A pr2 014 Submitted to Operations Research manuscript (Please enter the manuscript number!) Authors are encouraged to submit new papers to INFORMS Journals using a style file template that contains the title of the journal. However, the use of a template does not confirm that the paper has been accepted for publication in said journal. INFORMS journal templates are for the exclusive purpose of submitting to an INFORMS journal and should not be used to distribute the papers in print or online or to submit the papers to another publication. A dynamic near-optimal algorithm for online linear programming Shipra Agrawal Microsoft Research India, Bangalore, India, shipra @ microsoft.comZizhuo Wang Department of Industrial and Systems Engineering, University of Minnesota, Minneapolis, MN 55455 forced to submit @ Yedu Management-Stanford University, 30.ee"}, {"heading": "1. Introduction", "text": "In many practical problems, the data does not reveal itself at the beginning, but comes in an online way. In considering a request, the vendor must make an irrevocable decision whether to accept or reject the current offer with the overall goal of maximizing sales while satisfying resource constraints. Similarly, the Network Capacity Manager receives a sequence of requests from users intending to use the network, and its goal is to maximize network capacity. A similar format also appears in online keyword matching problems, and various other problems of online revenue management and resource allocation."}, {"heading": "1.1. Specific applications", "text": "The following are some specific applications of the linear online programming model. Examples are only a few among the wide range of applications of this model. (1) The one-dimensional version of the linear online programming problem investigated in this paper is usually referred to as an online knapsack or secretary problem. In such problems, a decision maker is faced with a sequence of options, each with a specific price and value, and he must select a subset of them in an online manner to maximize the overall value without violating cost constraints. Applications of this problem arise in many contexts, such as hiring workers, job planning, and bidding in sponsored search auctions. Random permutation model has been widely included in the study of this problem, see Kleinberg (2005) and Babaioff et al al (2007) and references thereafter. In these papers, either a consistent competitive relationship is suggested for this problem or a near-optimal algorithm for this problem."}, {"heading": "1.2. Key ideas and main results", "text": "The main contribution of this paper is to propose an algorithm that solves the linear online programming problem with a near-optimal competitive ratio under the random permutation model. (Our algorithm is based on the observation that the optimal solution for the linear offline program can be determined largely by the optimal dual solution p-Rm, which corresponds to the m imbalance constraints.) The optimal dual solution functions as a threshold, so that our algorithm only works if it learns a threshold price vector from some initial inputs, and then uses the price vector to determine decisions for later periods. (Instead of calculating the price vector only once, our algorithm waits steps or arrivals, and then calculates a new price vector each time, i.e. it doubles, 2o, 4o n, and so on."}, {"heading": "1.3. Related work", "text": "The design and analysis of online algorithms is a topic of wide interest in the competitive improvement of science, operations research and management science communities. Although the rating permutation model has recently gained increasing popularity as it avoids the pessimistic lower limits of the competing input model, the online matching and adwords problem is (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010) and the online packaging problem (Feldman et al. (2010), Molinaro and Ravi (2014))."}, {"heading": "1.4. Organization", "text": "The rest of the work is organized as follows: In sections 2 and 3, we present our online algorithm and prove that it achieves a competitive ratio of 1 \u2212 O on the input under mild conditions. In order to follow the discussions clearly and easily, we begin in section 2 with a simpler one-time learning algorithm. While the analysis of this simpler algorithm will be useful to demonstrate our evidential techniques, the results obtained in this environment are weaker than those obtained by our dynamic learning algorithm discussed in section 3. In section 4, we provide detailed evidence for theorem 2 regarding the need for a condition with lower limits used in our main theorem. In section 5, we present several extensions of our study. Then, we conclude our work in section 6."}, {"heading": "2. One-time Learning Algorithm", "text": "In this section we propose a unique learning algorithm for the linear online programming problem. We will consider the following linear subprogram, which is defined only at input, until the time s = 1 aitxt (for the simplicity of notation, without loss of generality, we assume that this number is an integer in our analysis): maximize the competitive value st = 1 aitxt until the time s = 1 aitxt \u2264 1,..., m 0 \u2264 xt \u2264 xt \u2264 xt \u2264 xt 1, t = 1,.., s, (7) and its dual problem: minimize m i = 1 aitxt \u2264 (1 \u2212 2) snbipi + 0 yt subject to the trick mi = 1 aitpi + yt \u2265 0, t = 1,."}, {"heading": "2.1. Competitive Ratio Analysis", "text": "Note that the unique learning algorithm awaits the following simplistic technical issues in our general discussion, and then sets the solution to time t like xt (p), unless it violates the limitations. To prove its competitiveness, we follow the following steps: First, we show that if p \u00b2 is the optimal dual solution for (1), then {xt (p \u00b2)} is close to the primary optimal solution x \u00b2, i.e. learning the dual price is sufficient to determine a near primary solution. However, since the columns are revealed online, we cannot get p \u00b2 s during the decision period. Instead, we use p \u00b2 in our algorithm as a substitute. We then show that p \u00b2 is a good substitute for p \u00b2. With a high probability, xt (p) meets all the limitations of the linear program; 2) the expected value of the p \u00b2 solution (p \u00b2) is close to the optimal offline value."}, {"heading": "3. Dynamic Learning Algorithm", "text": "The algorithm discussed in Section 2 uses the first inputs to learn a threshold price, and then applies it in the remaining time horizon. While this algorithm has its own merits, it requires in particular the solution of a small linear program defined on the basis of variables, the lower limit required on B is stronger than that which is doubled in Theorem 1 by a factor. In this section, we propose an improved dynamic learning algorithm that will achieve the result in Theorem 1. Instead of calculating the price only once, the dynamic learning algorithm will update the price every time the story doubles, that is, it will learn to give a new price.Note: n, 2\u0445n, 4\u0445n,. To be precise, let p define the optimal dual solution for the following partial linear program defined on the inputs until the time is defined: maximize that the deviation from the time is defined as \u0445n, An\u0445n is given a new time, 4\u0445n is given:"}, {"heading": "3.1. Competitive Ratio Analysis", "text": "The analysis for the dynamic learning algorithm proceeds in a similar way to that for the unique learning algorithm (= > Ps = = 1). However, stronger results for the price we have learned in each period of time must be demonstrated here. In the following, we assume that we have a weaker condition on B: 2 \u2212 E and leave L = 2 \u2212 O: 2 \u2212 O: 2 \u}, {"heading": "4. Worst-case Bound for any Algorithm", "text": "In this section we will prove theorem 2, i.e. condition B-2 is necessary for any online algorithm to achieve a competitive ratio of 1-2. We will prove this by constructing an instance of (1) with m elements and B elements of each element in such a way that no online algorithm can achieve a competitive ratio of 1-2 (except B-2). In this construction we will refer to the 0-1 vectors as demand vectors and as profit coefficients. Assume m = 2z for some integers e.g. We will construct z pairs of need vectors in each pair in such a way that the need vectors in each pair complement each other and not item.However, each set of z vectors consisting of exactly one vector of each pair is at least one common element. To achieve this, we will consider the 2z possible boolean strings of length e.g."}, {"heading": "5. Extensions", "text": "In this section we provide you with some enhancements to our results."}, {"heading": "5.1. Online multi-dimensional linear program", "text": "We look at the following more general linear online programs with multidimensional choices xt-Rk in each step, as defined in (3) in section 1: maximize-n-t = 1 f-t-xt subject. (15) Our online algorithm remains essentially the same (as described in section 3), with xt-p-e \u2264 1, xt-0, t-1,..., n-xt-Rk, t-1,.. (15) Our online algorithm remains essentially the same (as described in section 3), where xt (p) is now defined as follows: xt (p) = {0 if for all j, ftj-i-pigitj er, where r-argmaxj \u2212 i-pigitj (ftj-i-pigitj). Here it is the unit vector with 1 at the first input and 0 otherwise. And we break ties arbitrarily in our algorithm."}, {"heading": "5.2. Online integer programs", "text": "From the definition of xt (p) in (9), our algorithm always outputs integer solutions. Since the analysis of the competitive relationship compares the online solution with the optimal solution of the corresponding linear programming relaxation, the competitive relationship given in Theorem 1 also applies to the online integer programs. The same applies to the general linear online programs introduced in Section 5.1, since it also outputs integer solutions."}, {"heading": "5.3. Fast solution for large linear programs by column sampling", "text": "Apart from online problems, our algorithm can also be used to solve (offline) linear programs that are too large to explicitly include all variables. Similar to the unique online learning solution, one could randomly select a selection of variables and for this smaller program use the dual solution p \u0442 to set the values of the variables xj as xj (p) This approach is very similar to the method of column generation used to solve large linear programs Dantzig (1963). Our result provides the first rigorous analysis of the approximation achieved by the approach of reducing linear program size by randomly selecting a subset of columns."}, {"heading": "6. Conclusions", "text": "In this paper, we provide a competitive 1-O algorithm for a general class of linear online programming problems, assuming a random order of arrival and mild conditioning of input on the right. The conditions we use are independent of the optimal objective value, objective coefficients and distribution of input data. Our dynamic learning algorithm works by dynamically updating a threshold price vector in atgeometric time intervals, in which the dual prices we have learned from the uncovered columns in the previous column are used to determine sequential decisions in the current period. Our dynamic learning approach could be useful to design online algorithms for other problems. There are many questions for future research. An important question is whether the current evolution of the size of input on the right is narrow? Currently, as we show in this paper, there is a gap between our algorithm and the lower limit."}, {"heading": "Appendix A: Supporting lemmas for Section 2", "text": "A.1. Hoeffding-Bernstein's Inequality for sampling without replacementBy Theorem 2,14,19 in van der Vaart and Wellner (1996): Lemma 10. Let u1, u2,... ur be random samples without replacement from the real numbers {c1, c2,..., cR}. Then for each t > 0, P = 1ui \u2212 rc."}, {"heading": "Appendix B: Supporting lemmas for Section 3", "text}, {"heading": "Appendix C: Detailed steps for Theorem 2", "text": "Let's c1,.., cn denounce the n customer. For each i, the sentence Ri {c1,.., cn} of the customer with quote vector wi and bid value 1 or 3 is set with equal probability. < p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p,"}, {"heading": "Appendix D: Online multi-dimensional linear program", "text": "D.1. Proof of Lemma 8 with Lagrangian duality, observe that given the optimal dual solution p \u0445, optimal solution x \u0445 is given by: maximize fTt xt \u2212 \u2211 i p \u0445 ig T itxtsubject to eTx \u2264 1, xt \u2265 0. (17) Therefore, it must be true that if x-tr = 1, then r-argmaxj {ftj} is strictly positive and argmaxj returns a unique solution, xt (p-t) Tgtj} and ftr \u2212 (p-p) Tgtr \u2265 0 This means that for t's so that maxj \u2212 (p-p) Tgtj} is strictly positive and argmaxj returns a unique solution, xt (p-p) and x-t are identical. By random perturbation argument, there is at most m values of t that this condition is not met (for each such t, p-satisfied j) an equation ftj = Tgtpl \u2212 l."}, {"heading": "Acknowledgments", "text": "The authors thank the two anonymous referees and the co-editor for their insightful comments and suggestions."}], "references": [{"title": "Throughput-competitive on-line routing", "author": ["B. Awerbuch", "Y. Azar", "S. Plotkin."], "venue": "FOCS\u201993: Proceedings of the 34th Annual IEEE Symposium on Foundations of Computer Science. 32\u201340.", "citeRegEx": "Awerbuch et al\\.,? 1993", "shortCiteRegEx": "Awerbuch et al\\.", "year": 1993}, {"title": "A knapsack secretary problem with applications", "author": ["M. Babaioff", "N. Immorlica", "D. Kempe", "R. Kleinberg."], "venue": "Approximation, Randomization, and Combinatorial Optimization. Algorithms and Techniques , Lecture Notes in Computer Science, vol. 4627. 16\u201328.", "citeRegEx": "Babaioff et al\\.,? 2007", "shortCiteRegEx": "Babaioff et al\\.", "year": 2007}, {"title": "Online auctions and generalized secretary problems", "author": ["M. Babaioff", "N. Immorlica", "D. Kempe", "R. Kleinberg."], "venue": "SIGecom Exch. 7(2) 1\u201311.", "citeRegEx": "Babaioff et al\\.,? 2008", "shortCiteRegEx": "Babaioff et al\\.", "year": 2008}, {"title": "Improved bounds for online stochastic matching", "author": ["B. Bahmani", "M. Kapralov."], "venue": "ESA\u201910: Proceedings of the 18th annual European conference on Algorithms: Part I . 170\u2013181.", "citeRegEx": "Bahmani and Kapralov.,? 2010", "shortCiteRegEx": "Bahmani and Kapralov.", "year": 2010}, {"title": "An overview of pricing models for revenue management", "author": ["G. Bitran", "R. Caldentey."], "venue": "Manufacturing and Service Operations Management 5(3) 203\u2013229.", "citeRegEx": "Bitran and Caldentey.,? 2003", "shortCiteRegEx": "Bitran and Caldentey.", "year": 2003}, {"title": "Online computation and competitive analysis", "author": ["A. Borodin", "R. El-Yaniv"], "venue": "Combridge", "citeRegEx": "Borodin and El.Yaniv.,? \\Q1998\\E", "shortCiteRegEx": "Borodin and El.Yaniv.", "year": 1998}, {"title": "Prediction, learning, and games", "author": ["N. Cesa-Bianchi", "G. Lugosi"], "venue": null, "citeRegEx": "Cesa.Bianchi and Lugosi.,? \\Q2006\\E", "shortCiteRegEx": "Cesa.Bianchi and Lugosi.", "year": 2006}, {"title": "Linear programming and extensions", "author": ["G. Dantzig"], "venue": null, "citeRegEx": "Dantzig,? \\Q1963\\E", "shortCiteRegEx": "Dantzig", "year": 1963}, {"title": "Dynamic pricing in the presence of inventory considerations: research", "author": ["W. Elmaghraby", "P. Keskinocak"], "venue": "Electronic Commerce", "citeRegEx": "Elmaghraby and Keskinocak.,? \\Q2003\\E", "shortCiteRegEx": "Elmaghraby and Keskinocak.", "year": 2003}, {"title": "overview, current practices and future directions", "author": ["J. Feldman", "M. Henzinger", "N. Korula", "V. Mirrokni", "C. Stein"], "venue": "Management Science", "citeRegEx": "Feldman et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2010}, {"title": "Online ad assignment with free", "author": ["J. Feldman", "N. Korula", "V. Mirrokni", "S. Muthukrishnan", "M. Pal"], "venue": "Algorithms\u2013ESA", "citeRegEx": "Feldman et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2010}, {"title": "Online stochastic matching: beating 1 ", "author": ["J. Feldman", "A. Mehta", "V. Mirrokni", "S. Muthukrishnan"], "venue": "disposal. WINE\u201909: Proceedings of the 5th Workshop on Internet and Network Economics", "citeRegEx": "Feldman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2009}, {"title": "Optimal dynamic pricing of inventories with stochastic demand over finite", "author": ["G. 117\u2013126. Gallego", "G. van Ryzin"], "venue": null, "citeRegEx": "Gallego and Ryzin.,? \\Q1994\\E", "shortCiteRegEx": "Gallego and Ryzin.", "year": 1994}, {"title": "A multiproduct dynamic pricing problem and its application to network", "author": ["G. Gallego", "G. van Ryzin"], "venue": "horizons. Management Science", "citeRegEx": "Gallego and Ryzin.,? \\Q1997\\E", "shortCiteRegEx": "Gallego and Ryzin.", "year": 1997}, {"title": "Online budgeted matching in random input models with applications to adwords", "author": ["G. Goel", "A. Mehta"], "venue": null, "citeRegEx": "Goel and Mehta.,? \\Q2008\\E", "shortCiteRegEx": "Goel and Mehta.", "year": 2008}, {"title": "Online bipartite matching with unknown distributions", "author": ["C. Karande", "A. Mehta", "P. Tripathi"], "venue": "Proceedings of the 19th Annual ACM-SIAM Symposium on Discrete Algorithms", "citeRegEx": "Karande et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Karande et al\\.", "year": 2011}, {"title": "Online bipartite matching with random arrivals: an approach based on strongly", "author": ["M. Mahdian", "Q. Yan"], "venue": null, "citeRegEx": "Mahdian and Yan.,? \\Q2011\\E", "shortCiteRegEx": "Mahdian and Yan.", "year": 2011}, {"title": "Adwords and generalized on-line matching", "author": ["A. Mehta", "A. Saberi", "U. Vazirani", "V. Vazirani"], "venue": null, "citeRegEx": "Mehta et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Mehta et al\\.", "year": 2005}, {"title": "Geometry of online packing linear programs", "author": ["M. Molinaro", "R. Ravi"], "venue": "Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science", "citeRegEx": "Molinaro and Ravi.,? \\Q2014\\E", "shortCiteRegEx": "Molinaro and Ravi.", "year": 2014}, {"title": "Weak convergence and empirical processes: with applications to statistics", "author": ["A. van der Vaart", "J. Wellner"], "venue": null, "citeRegEx": "Vaart and Wellner.,? \\Q1996\\E", "shortCiteRegEx": "Vaart and Wellner.", "year": 1996}, {"title": "Dynamic learning mechanism in revenue management problems", "author": ["Z. Springer. Wang"], "venue": null, "citeRegEx": "Wang,? \\Q2012\\E", "shortCiteRegEx": "Wang", "year": 2012}, {"title": "Airline network seat control", "author": ["University", "E.L. Palo Alto. Williamson"], "venue": "Ph. D. Thesis, MIT, Cambridge, MA .", "citeRegEx": "University and Williamson,? 1992", "shortCiteRegEx": "University and Williamson", "year": 1992}], "referenceMentions": [{"referenceID": 5, "context": "For an overview of the online optimization literature and its recent development, we refer the readers to Borodin and El-Yaniv (1998), Buchbinder and Naor (2009a) and Devanur (2011).", "startOffset": 106, "endOffset": 134}, {"referenceID": 5, "context": "For an overview of the online optimization literature and its recent development, we refer the readers to Borodin and El-Yaniv (1998), Buchbinder and Naor (2009a) and Devanur (2011).", "startOffset": 106, "endOffset": 163}, {"referenceID": 5, "context": "For an overview of the online optimization literature and its recent development, we refer the readers to Borodin and El-Yaniv (1998), Buchbinder and Naor (2009a) and Devanur (2011). In many examples mentioned above, the problem can be formulated as an online linear programming problem (Sometimes, people consider the corresponding integer program.", "startOffset": 106, "endOffset": 182}, {"referenceID": 15, "context": ", Mehta et al. (2005), Buchbinder and Naor (2009b)).", "startOffset": 2, "endOffset": 22}, {"referenceID": 15, "context": ", Mehta et al. (2005), Buchbinder and Naor (2009b)).", "startOffset": 2, "endOffset": 51}, {"referenceID": 1, "context": "However, this leads to very pessimistic performance bounds for this problem: no online algorithm can achieve better than O(1/n) approximation of the optimal offline solution (Babaioff et al. (2008)).", "startOffset": 175, "endOffset": 198}, {"referenceID": 1, "context": "However, this leads to very pessimistic performance bounds for this problem: no online algorithm can achieve better than O(1/n) approximation of the optimal offline solution (Babaioff et al. (2008)). On the other hand, although a priori input distribution can simplify the problem to a great extent, the choice of distribution is very critical and the performance can suffer if the actual input distribution is not as assumed. Specifically, Assumption 1 is weaker than assuming the columns are drawn independently from some (possibly unknown) distribution. Indeed, one can view n i.i.d. columns as first drawing n samples from the underlying distribution and then randomly permute them. Therefore, our proposed algorithm and its performance would also apply if the input data is drawn i.i.d. from some distribution. Assumption 2 is required since we need to use the quantity n to decide the length of history for learning the threshold prices in our algorithm. In fact, as shown in Devanur and Hayes (2009), it is necessary for any algorithm to get a near-optimal performance.", "startOffset": 175, "endOffset": 1007}, {"referenceID": 17, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 4 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) and K = {x\u2208Rk :xTe\u2264 1,x\u2265 0} (we use e to denote the all 1 vectors). The offline linear program is to choose x1,...,xn to solve maximize \u2211n j=1 f T j xj subject to \u2211n j=1 g T ijxj \u2264 bi, i= 1, ...,m xj \u2208K. In the corresponding online problem, given the previous t\u2212 1 decisions x1, . . . ,xt\u22121, each time we choose a k-dimensional decision xt \u2208Rk, satisfying: \u2211t j=1 g T ijxj \u2264 bi, i= 1, . . . ,m xt \u2208K, (3) using the knowledge up to time t. And the objective is to maximize \u2211n j=1 f T j xj over the entire time horizon. Note that Problem (2) is a special case of Problem (3) with k= 1. 1.1. Specific applications In the following, we show some specific applications of the online linear programming model. The examples are only a few among the wide range of applications of this model. 1.1.1. Online knapsack/secretary problem The one dimensional version of the online linear programming problem studied in this paper is usually referred as online knapsack or secretary problem. In such problems, a decision maker faces a sequence of options, each with a certain cost and a value, and he has to choose a subset of them in an online fashion so as to maximize the total value without violating the cost constraint. Applications of this problem arise in many contexts, such as hiring workers, scheduling jobs and bidding in sponsored search auctions. Random permutation model has been widely adopted in the study of this problem, see Kleinberg (2005) and Babaioff et al.", "startOffset": 9, "endOffset": 1631}, {"referenceID": 0, "context": "Random permutation model has been widely adopted in the study of this problem, see Kleinberg (2005) and Babaioff et al. (2007) and references thereafter.", "startOffset": 104, "endOffset": 127}, {"referenceID": 0, "context": "Random permutation model has been widely adopted in the study of this problem, see Kleinberg (2005) and Babaioff et al. (2007) and references thereafter. In those papers, either a constant competitive ratio is obtained for finite-sized problems or a near-optimal algorithm is proposed for large-sized problems. In this paper, we study an extension of this problem to higher dimension and propose a near-optimal algorithm for it. 1.1.2. Online routing problem Consider a computer network connected by m edges, each edge i has a bounded capacity (bandwidth) bi. There are a large number of requests arriving online, each asking for certain capacities at \u2208Rm in the network, along with a utility or price for his/her request. The offline problem for the decision maker is given by the following integer program: maximize \u2211n t=1 \u03c0txt subject to \u2211n t=1 aitxt \u2264 bi i= 1, . . . ,m xt \u2208 {0,1}. Discussions of this problem can be found in Buchbinder and Naor (2009b), Awerbuch et al.", "startOffset": 104, "endOffset": 958}, {"referenceID": 0, "context": "Discussions of this problem can be found in Buchbinder and Naor (2009b), Awerbuch et al. (1993) and references therein.", "startOffset": 73, "endOffset": 96}, {"referenceID": 10, "context": ", Mehta et al. (2005), Goel and Mehta (2008), Devanur and Hayes (2009), Karande et al.", "startOffset": 2, "endOffset": 22}, {"referenceID": 10, "context": "(2005), Goel and Mehta (2008), Devanur and Hayes (2009), Karande et al.", "startOffset": 8, "endOffset": 30}, {"referenceID": 10, "context": "(2005), Goel and Mehta (2008), Devanur and Hayes (2009), Karande et al.", "startOffset": 8, "endOffset": 56}, {"referenceID": 10, "context": "(2005), Goel and Mehta (2008), Devanur and Hayes (2009), Karande et al. (2011), Bahmani and Kapralov (2010), Mahdian and Yan (2011), Feldman et al.", "startOffset": 8, "endOffset": 79}, {"referenceID": 3, "context": "(2011), Bahmani and Kapralov (2010), Mahdian and Yan (2011), Feldman et al.", "startOffset": 8, "endOffset": 36}, {"referenceID": 3, "context": "(2011), Bahmani and Kapralov (2010), Mahdian and Yan (2011), Feldman et al.", "startOffset": 8, "endOffset": 60}, {"referenceID": 20, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) 7 inputs (for example, in the online adwords problem, it is estimated that a large search engine could receive several billions of searches per day, even if we focus on a specific category, the number can still be in the millions) with reasonably large right-hand-side inputs (e.g., the budgets for the advertiser), the condition is not hard to satisfy. Furthermore, the conditions in Theorem 1 and 3 are just theoretical results, the performance of our algorithm might still be very good even if the conditions are not satisfied (as shown in some numerical tests in Wang (2012)).", "startOffset": 9, "endOffset": 762}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al.", "startOffset": 113, "endOffset": 136}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al.", "startOffset": 113, "endOffset": 204}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al.", "startOffset": 113, "endOffset": 228}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al.", "startOffset": 113, "endOffset": 251}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al.", "startOffset": 113, "endOffset": 275}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010)) and the online packing problem (Feldman et al.", "startOffset": 113, "endOffset": 298}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010)) and the online packing problem (Feldman et al.", "startOffset": 113, "endOffset": 327}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010)) and the online packing problem (Feldman et al. (2010), Molinaro and Ravi (2014)).", "startOffset": 113, "endOffset": 382}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010)) and the online packing problem (Feldman et al. (2010), Molinaro and Ravi (2014)).", "startOffset": 113, "endOffset": 408}, {"referenceID": 1, "context": "Various online algorithms have been studied under this model, including the secretary problem (Kleinberg (2005), Babaioff et al. (2008)), the online matching and adwords problem (Devanur and Hayes (2009), Feldman et al. (2009b), Goel and Mehta (2008), Mahdian and Yan (2011), Karande et al. (2011), Bahmani and Kapralov (2010)) and the online packing problem (Feldman et al. (2010), Molinaro and Ravi (2014)). Among these work, two types of results are obtained: one achieves a constant competitive ratio independent of the input parameters; the other focuses on the performance of the algorithm when the input size is large. Our paper falls into the second category. In the following literature review, we will focus ourselves on this category of work. The first result that achieves a near-optimal performance in the random permutation model is by Kleinberg (2005), in which a 1 \u2212 O(1/ \u221a B) competitive algorithm is proposed for the single dimensional multiple-choice secretary problem.", "startOffset": 113, "endOffset": 867}, {"referenceID": 16, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 8 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) techniques are required for our analysis. Specifically, Kleinberg (2005) recursively applies a randomized version of the classical secretary algorithm while we maintain a price based on the linear programming duality theory and have a fixed price updating schedule.", "startOffset": 9, "endOffset": 258}, {"referenceID": 16, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 8 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) techniques are required for our analysis. Specifically, Kleinberg (2005) recursively applies a randomized version of the classical secretary algorithm while we maintain a price based on the linear programming duality theory and have a fixed price updating schedule. We also prove that no online algorithm can achieve a competitive ratio better than 1\u2212\u03a9( \u221a logm/B) for the multi-dimensional problem. To the best of our knowledge, this is the first result that shows the necessity of dependence on the dimension m, for the best competitive ratio achievable for this problem. It clearly points out that high dimensionality indeed adds to the difficulty of this problem. Later, Devanur and Hayes (2009) study a linear programming based approach for the online adwords problem.", "startOffset": 9, "endOffset": 884}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)).", "startOffset": 10, "endOffset": 32}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)). They propose a one-time learning algorithm which achieves a competitive ratio that depends both on the righthand-side B and OPT. And the dependence on B is of order 1 \u2212 O( 3 \u221a m logn/B). Therefore, comparing to their competitive ratio, our result not only removes the dependence on OPT, but also improves the dependence on B by an order. We show that the improvement is due to the use of dynamic learning. More recently, Molinaro and Ravi (2014) study the same problem and obtain a competitive ratio of 1\u2212O( \u221a m2 logm/B).", "startOffset": 10, "endOffset": 625}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)). They propose a one-time learning algorithm which achieves a competitive ratio that depends both on the righthand-side B and OPT. And the dependence on B is of order 1 \u2212 O( 3 \u221a m logn/B). Therefore, comparing to their competitive ratio, our result not only removes the dependence on OPT, but also improves the dependence on B by an order. We show that the improvement is due to the use of dynamic learning. More recently, Molinaro and Ravi (2014) study the same problem and obtain a competitive ratio of 1\u2212O( \u221a m2 logm/B). The main structure of their algorithm (especially the way they obtain square root rather than cubic root) is modified from that in this paper. They further use a novel covering technique to remove the dependence on n in the competitive ratio, at an expense of increasing an order of m. In contrast, we present the improvement from the cubic root to square root and how to remove the dependence on OPT. A comparison of the results of Kleinberg (2005), Devanur and Hayes (2009), Feldman et al.", "startOffset": 10, "endOffset": 1151}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)). They propose a one-time learning algorithm which achieves a competitive ratio that depends both on the righthand-side B and OPT. And the dependence on B is of order 1 \u2212 O( 3 \u221a m logn/B). Therefore, comparing to their competitive ratio, our result not only removes the dependence on OPT, but also improves the dependence on B by an order. We show that the improvement is due to the use of dynamic learning. More recently, Molinaro and Ravi (2014) study the same problem and obtain a competitive ratio of 1\u2212O( \u221a m2 logm/B). The main structure of their algorithm (especially the way they obtain square root rather than cubic root) is modified from that in this paper. They further use a novel covering technique to remove the dependence on n in the competitive ratio, at an expense of increasing an order of m. In contrast, we present the improvement from the cubic root to square root and how to remove the dependence on OPT. A comparison of the results of Kleinberg (2005), Devanur and Hayes (2009), Feldman et al.", "startOffset": 10, "endOffset": 1177}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)). They propose a one-time learning algorithm which achieves a competitive ratio that depends both on the righthand-side B and OPT. And the dependence on B is of order 1 \u2212 O( 3 \u221a m logn/B). Therefore, comparing to their competitive ratio, our result not only removes the dependence on OPT, but also improves the dependence on B by an order. We show that the improvement is due to the use of dynamic learning. More recently, Molinaro and Ravi (2014) study the same problem and obtain a competitive ratio of 1\u2212O( \u221a m2 logm/B). The main structure of their algorithm (especially the way they obtain square root rather than cubic root) is modified from that in this paper. They further use a novel covering technique to remove the dependence on n in the competitive ratio, at an expense of increasing an order of m. In contrast, we present the improvement from the cubic root to square root and how to remove the dependence on OPT. A comparison of the results of Kleinberg (2005), Devanur and Hayes (2009), Feldman et al. (2010), Molinaro and Ravi (2014) and this work is shown in Table 1.", "startOffset": 10, "endOffset": 1200}, {"referenceID": 9, "context": "Recently, Feldman et al. (2010) study a more general online packing problem which allows the dimension of the choice set to vary at each time period (a further extension of (3)). They propose a one-time learning algorithm which achieves a competitive ratio that depends both on the righthand-side B and OPT. And the dependence on B is of order 1 \u2212 O( 3 \u221a m logn/B). Therefore, comparing to their competitive ratio, our result not only removes the dependence on OPT, but also improves the dependence on B by an order. We show that the improvement is due to the use of dynamic learning. More recently, Molinaro and Ravi (2014) study the same problem and obtain a competitive ratio of 1\u2212O( \u221a m2 logm/B). The main structure of their algorithm (especially the way they obtain square root rather than cubic root) is modified from that in this paper. They further use a novel covering technique to remove the dependence on n in the competitive ratio, at an expense of increasing an order of m. In contrast, we present the improvement from the cubic root to square root and how to remove the dependence on OPT. A comparison of the results of Kleinberg (2005), Devanur and Hayes (2009), Feldman et al. (2010), Molinaro and Ravi (2014) and this work is shown in Table 1.", "startOffset": 10, "endOffset": 1226}, {"referenceID": 20, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) 9 Competitiveness Kleinberg (2005) 1\u2212O (", "startOffset": 9, "endOffset": 218}, {"referenceID": 9, "context": "(only for m=1) Devanur and Hayes (2009) 1\u2212O( 3 \u221a \u03c0maxm logn/OPT) Feldman et al. (2010) 1\u2212O(max{ 3 \u221a m logn/B,\u03c0maxm logn/OPT}) Molinaro and Ravi (2012) 1\u2212O( \u221a m2 logm/B) This paper 1\u2212O( \u221a m logn/B) Table 1 Comparison of existing results Besides the random permutation model, Devanur et al.", "startOffset": 65, "endOffset": 87}, {"referenceID": 9, "context": "(only for m=1) Devanur and Hayes (2009) 1\u2212O( 3 \u221a \u03c0maxm logn/OPT) Feldman et al. (2010) 1\u2212O(max{ 3 \u221a m logn/B,\u03c0maxm logn/OPT}) Molinaro and Ravi (2012) 1\u2212O( \u221a m2 logm/B) This paper 1\u2212O( \u221a m logn/B) Table 1 Comparison of existing results Besides the random permutation model, Devanur et al.", "startOffset": 65, "endOffset": 151}, {"referenceID": 9, "context": "(only for m=1) Devanur and Hayes (2009) 1\u2212O( 3 \u221a \u03c0maxm logn/OPT) Feldman et al. (2010) 1\u2212O(max{ 3 \u221a m logn/B,\u03c0maxm logn/OPT}) Molinaro and Ravi (2012) 1\u2212O( \u221a m2 logm/B) This paper 1\u2212O( \u221a m logn/B) Table 1 Comparison of existing results Besides the random permutation model, Devanur et al. (2011) study an online resource allocation problem under what they call the adversarial stochastic input model.", "startOffset": 65, "endOffset": 296}, {"referenceID": 7, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003).", "startOffset": 242, "endOffset": 275}, {"referenceID": 7, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003).", "startOffset": 242, "endOffset": 341}, {"referenceID": 7, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003).", "startOffset": 242, "endOffset": 356}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive.", "startOffset": 360, "endOffset": 388}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive.", "startOffset": 360, "endOffset": 459}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals.", "startOffset": 360, "endOffset": 556}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002).", "startOffset": 360, "endOffset": 834}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new.", "startOffset": 360, "endOffset": 865}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new. It is initiated in Williamson (1992), Simpson (1989) and investigated further in Talluri and van Ryzin (1998).", "startOffset": 360, "endOffset": 964}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new. It is initiated in Williamson (1992), Simpson (1989) and investigated further in Talluri and van Ryzin (1998).", "startOffset": 360, "endOffset": 980}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new. It is initiated in Williamson (1992), Simpson (1989) and investigated further in Talluri and van Ryzin (1998). In Talluri and van Ryzin (1998), the authors show that the bid price control policy is asymptotically optimal.", "startOffset": 360, "endOffset": 1037}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new. It is initiated in Williamson (1992), Simpson (1989) and investigated further in Talluri and van Ryzin (1998). In Talluri and van Ryzin (1998), the authors show that the bid price control policy is asymptotically optimal.", "startOffset": 360, "endOffset": 1070}, {"referenceID": 4, "context": "In the operations research and management science communities, a dynamic and optimal pricing strategy for various online revenue management and resource allocation problems has always been an important research topic, some literature include Elmaghraby and Keskinocak (2003) ,Gallego and van Ryzin (1997, 1994), Talluri and van Ryzin (1998), Cooper (2002) and Bitran and Caldentey (2003). In Gallego and van Ryzin (1997, 1994) and Bitran and Caldentey (2003), the arrival processes are assumed to be price sensitive. However, as commented in Cooper (2002), this model can be reduced to a price independent arrival process with availability control under Poisson arrivals. Our model can be further viewed as a discrete version of the availability control model which is also used as an underlying model in Talluri and van Ryzin (1998) and discussed in Cooper (2002). The idea of using a threshold - or \u201cbid\u201d - price is not new. It is initiated in Williamson (1992), Simpson (1989) and investigated further in Talluri and van Ryzin (1998). In Talluri and van Ryzin (1998), the authors show that the bid price control policy is asymptotically optimal. However, they assume the knowledge on the arrival process and therefore the price is obtained by \u201cforecasting\u201d the future using the distribution information rather than \u201clearning\u201d from the past observations as we do in our paper. The idea of using linear programming to find the dual optimal bid price is discussed in Cooper (2002) where asymptotic optimality is also achieved.", "startOffset": 360, "endOffset": 1481}, {"referenceID": 19, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 10 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) our algorithm is distribution free\u2013no knowledge on the input distribution is assumed except for the random order of arrival and the total number of entries. Moreover, instead of learning the price just once, we propose a dynamic learning algorithm that updates the prices as more information is revealed. The design of such an algorithm answers the question raised in Cooper (2002), that is, how often and when should one update the price? We give an explicit answer to this question by showing that updating the prices at geometric time intervals -not too sparse nor too often- is optimal.", "startOffset": 9, "endOffset": 568}, {"referenceID": 6, "context": "However, unlike the doubling trick which is typically applied to an unknown time horizon (Cesa-Bianchi and Lugosi (2006)), we show that a geometric pace of price updating in a fixed length of horizon with a careful design could also enhance the performance of the algorithm.", "startOffset": 90, "endOffset": 121}, {"referenceID": 20, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 12 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) Assumption 3. The problem inputs are in general position, namely for any price vector p, there can be at most m columns such that pat = \u03c0t. Assumption 3 is not necessarily true for all inputs. However, as pointed out by Devanur and Hayes (2009), one can always randomly perturb \u03c0t by arbitrarily small amount \u03b7 through adding a random variable \u03bet taking uniform distribution on interval [0, \u03b7].", "startOffset": 9, "endOffset": 431}, {"referenceID": 20, "context": "Agrawal, Wang and Ye: A Dynamic Near-Optimal Algorithm for Online Linear Programming 14 Article submitted to Operations Research; manuscript no. (Please, provide the manuscript number!) Next, we take a union bound over all distinct p\u2019s. We call two price vectors p and q distinct if and only if they result in distinct solutions, i.e., {xt(p)} 6 = {xt(q)}. Note that we only need to consider distinct prices, since otherwise all the Yt\u2019s are exactly the same. Note that each distinct p is characterized by a unique separation of n points ({\u03c0t,at}t=1) in m+1-dimensional space by a hyperplane. By results from computational geometry, the total number of such distinct prices is at most n (Orlik and Terao (1992)).", "startOffset": 9, "endOffset": 711}, {"referenceID": 7, "context": "This approach is very similar to the column generation method used for solving large linear programs Dantzig (1963). Our result provides the first rigorous analysis of the approximation achieved by the approach of reducing the linear program size by randomly selecting a subset of columns.", "startOffset": 101, "endOffset": 116}, {"referenceID": 7, "context": "This approach is very similar to the column generation method used for solving large linear programs Dantzig (1963). Our result provides the first rigorous analysis of the approximation achieved by the approach of reducing the linear program size by randomly selecting a subset of columns. 6. Conclusions In this paper, we provide a 1 \u2212 O(\u01eb) competitive algorithm for a general class of online linear programming problems under the assumption of random order of arrival and some mild conditions on the right-hand-side input. The conditions we use are independent of the optimal objective value, the objective coefficients, and the distributions of input data. Our dynamic learning algorithm works by dynamically updating a threshold price vector at geometric time intervals, where the dual prices learned from the revealed columns in the previous period are used to determine the sequential decisions in the current period. Our dynamic learning approach might be useful in designing online algorithms for other problems. There are many questions for future research. One important question is whether the current bound on the size of the right-hand-input B is tight? Currently as we show in this paper, there is a gap between our algorithm and the lower bound. Through some numerical experiments, we find that the actual performance of our algorithm is close to the lower bound (see Wang (2012)).", "startOffset": 101, "endOffset": 1395}, {"referenceID": 7, "context": "This approach is very similar to the column generation method used for solving large linear programs Dantzig (1963). Our result provides the first rigorous analysis of the approximation achieved by the approach of reducing the linear program size by randomly selecting a subset of columns. 6. Conclusions In this paper, we provide a 1 \u2212 O(\u01eb) competitive algorithm for a general class of online linear programming problems under the assumption of random order of arrival and some mild conditions on the right-hand-side input. The conditions we use are independent of the optimal objective value, the objective coefficients, and the distributions of input data. Our dynamic learning algorithm works by dynamically updating a threshold price vector at geometric time intervals, where the dual prices learned from the revealed columns in the previous period are used to determine the sequential decisions in the current period. Our dynamic learning approach might be useful in designing online algorithms for other problems. There are many questions for future research. One important question is whether the current bound on the size of the right-hand-input B is tight? Currently as we show in this paper, there is a gap between our algorithm and the lower bound. Through some numerical experiments, we find that the actual performance of our algorithm is close to the lower bound (see Wang (2012)). However, we are not able to prove it. Filling that gap would be a very interesting direction for future research. Appendix A: Supporting lemmas for Section 2 A.1. Hoeffding-Bernstein\u2019s Inequality for sampling without replacement By Theorem 2.14.19 in van der Vaart and Wellner (1996): Lemma 10.", "startOffset": 101, "endOffset": 1681}], "year": 2014, "abstractText": "Authors are encouraged to submit new papers to INFORMS journals by means of a style file template, which includes the journal title. However, use of a template does not certify that the paper has been accepted for publication in the named journal. INFORMS journal templates are for the exclusive purpose of submitting to an INFORMS journal and should not be used to distribute the papers in print or online or to submit the papers to another publication.", "creator": "LaTeX with hyperref package"}}}