{"id": "1001.2665", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2010", "title": "Detecting Botnets Through Log Correlation", "abstract": "Botnets, which consist of thousands of compromised machines, can cause significant threats to other systems by launching Distributed Denial of Service (SSoS) attacks, keylogging, and backdoors. In response to these threats, new effective techniques are needed to detect the presence of botnets. In this paper, we have used an interception technique to monitor Windows Application Programming Interface (API) functions calls made by communication applications and store these calls with their arguments in log files. Our algorithm detects botnets based on monitoring abnormal activity by correlating the changes in log file sizes from different hosts.", "histories": [["v1", "Fri, 15 Jan 2010 11:35:17 GMT  (201kb)", "http://arxiv.org/abs/1001.2665v1", "4 pages, 7 figures, Workshop on Monitoring, Attack Detection and Mitigation (MonAM2006)"]], "COMMENTS": "4 pages, 7 figures, Workshop on Monitoring, Attack Detection and Mitigation (MonAM2006)", "reviews": [], "SUBJECTS": "cs.AI cs.CR", "authors": ["yousof al-hammadi", "uwe aickelin"], "accepted": false, "id": "1001.2665"}, "pdf": {"name": "1001.2665.pdf", "metadata": {"source": "CRF", "title": "Detecting Botnets Through Log Correlation", "authors": ["Yousof Al-Hammadi"], "emails": ["yxa@cs.nott.ac.uk", "uxa@cs.nott.ac.uk"], "sections": [{"heading": null, "text": "This year, it has come to the point where there is only one person who is able to establish himself in the city."}, {"heading": "B. Experiments", "text": "We conducted some initial experiments to determine whether the eof.outf file doif nbsp; s-nbsp; s correlation with C V + / s correlated values (CV) * / * Uncorrelated Value (UCV) * / U C V + + end, when the logical activity is detected, is sufficient to detect bots. For example, we monitor the change in behavior of Internet Explorer (IE) vs. Sdbot [9]. Results show that there is a sudden increase in log file size when the bot uses its UDP, or uses ICMP flood against other systems."}, {"heading": "A. Full details of Architecture", "text": "In order to distinguish between the normal behavior of mIRC clients and the abnormal behavior of bots, we analyzed two cases: the normal behavior and the attack case. Normally, we analyzed two scenarios: \u2022 Three users having a normal conversation. \u2022 Three users having a normal conversation and sending files to each other. In case of attack, we analyzed two scenarios: \u2022 Three bots connecting to an IRC channel and remain idle for two minutes. After the rest period, the bots begin to receive commands from their master (without flood commands). \u2022 Three bots connecting to an IRC channel and remain idle for two minutes. After the rest period, the bots begin to receive commands from their maker, including flood commands. The results generated are passed on to our correlation algorithm to distinguish a normal behavior from the normal results we generate in comparison between the IVC file in order to make more changes."}, {"heading": "A. Botnet Detection through Distributed Log Correlation", "text": "The results from the previous experiment show that it is sometimes difficult to distinguish the normal behavior from malicious behavior, for example, when there is a sudden change in the log file size. Therefore, we present our correlation scheme to distinguish between these two cases. Basically, the idea is to find correlated events on different hosts. As a result, since we are dealing with botnets, there is a high probability that correlated events such as sending similar amounts of data to a bot herder that occurs within a certain time, or generating similar amounts of traffic to other systems. As a result, a high correlation is generated between events that represent malicious activity, while a low correlation represents normal activity, while a low correlation represents normal activity. We examine the normal scenario of three users having normal conversations and using some IRC commands without transferring files to each other. Results show that there is a low correlation between the three users (Figure 2). We also examine the normal scenario of users transferring files between each other."}], "references": [{"title": "The Zombie Roundup: Understanding, Detecting, and Disrupting Botnets", "author": ["E. Cooke", "F. Jahanian", "D. McPherson"], "venue": "In Proceedings of Usenix Workshop on Stepts to Reducing Unwanted Traffic on the Internet (SRUTI 05),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "Botnet Tracking: Exploring a Root-Cause Methodology to Prevent Distributed Denial-of-Service Attacks", "author": ["F.C. Freiling", "T. Holz", "G. Wicherski"], "venue": "Technical Report AIB-2005-07,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "Binary Interception of Win32 Functions", "author": ["G. Hunt", "D. Brubacher. Detours"], "venue": "In Proceedings of the 3rd USENIX Windows NT Symposium,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1999}, {"title": "The Evolution of Malicious IRC bots. White Paper: Symantec Security Response", "author": ["J. Canavan"], "venue": "In Proceedings of Virus Bulletin Conference", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "Bots and Botnets: Risks, Issues and Prevention", "author": ["M. Overton"], "venue": "In Proceedings of Virus Bulletin Conference", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2005}, {"title": "Three ways to Inject Your Code into Another Process. Retrieved Jun", "author": ["R. Kuster"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2006}, {"title": "Intercepting System API Calls", "author": ["S. Kim"], "venue": "Retrieved Jun.  2nd 2006 from http://cache-www.intel.com/cd/00/00/21/ 70/217023_217023.pdf. May", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2004}, {"title": "Anomaly Detection for Internet Worms", "author": ["Y. Al-Hammadi", "C. Leckie"], "venue": "In Proceedings to the 9th IFIP/IEEE International Symposium on Integrated Network Management", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2005}], "referenceMentions": [{"referenceID": 3, "context": "Recently, an explosive growth of coordinated attacks has been noticed [1][6].", "startOffset": 73, "endOffset": 76}, {"referenceID": 3, "context": "These zombies are infected by a piece of malicious code named a bot [1][6].", "startOffset": 71, "endOffset": 74}, {"referenceID": 1, "context": "Current botnets usage trends focus on email spamming/bombing, steal system information, program termination and extorting money from on-line businesses [3][6][7].", "startOffset": 152, "endOffset": 155}, {"referenceID": 3, "context": "Current botnets usage trends focus on email spamming/bombing, steal system information, program termination and extorting money from on-line businesses [3][6][7].", "startOffset": 155, "endOffset": 158}, {"referenceID": 4, "context": "Current botnets usage trends focus on email spamming/bombing, steal system information, program termination and extorting money from on-line businesses [3][6][7].", "startOffset": 158, "endOffset": 161}, {"referenceID": 0, "context": "There have been several studies in detecting and tracking botnets using a non-productive resource (honeypot) and analysing traffic patterns [2][3].", "startOffset": 140, "endOffset": 143}, {"referenceID": 1, "context": "There have been several studies in detecting and tracking botnets using a non-productive resource (honeypot) and analysing traffic patterns [2][3].", "startOffset": 143, "endOffset": 146}, {"referenceID": 7, "context": "One problem with using honeypots is that they cannot detect suspicious traffic without receiving activity directed against them [11].", "startOffset": 128, "endOffset": 132}, {"referenceID": 0, "context": "For instance, the outgoing connections have different lengths and the number of bytes transferred per connection is not fixed [2].", "startOffset": 126, "endOffset": 129}, {"referenceID": 5, "context": "We use a system-wide intercepting technique [8] which monitors all threads currently running on the system to intercept API socket function calls such as send(), sendto(), recv(), recvfrom(), or connect().", "startOffset": 44, "endOffset": 47}, {"referenceID": 2, "context": "myrecv()) and then inject the DLL file into the address space of target process [4][10] (e.", "startOffset": 80, "endOffset": 83}, {"referenceID": 6, "context": "myrecv()) and then inject the DLL file into the address space of target process [4][10] (e.", "startOffset": 83, "endOffset": 87}], "year": 2010, "abstractText": "Botnets, which consist of thousands of compromised machines, can cause significant threats to other systems by launching Distributed Denial of Service (DDoS) attacks, keylogging, and backdoors. In response to these threats, new effective techniques are needed to detect the presence of botnets. In this paper, we have used an interception technique to monitor Windows Application Programming Interface (API) functions calls made by communication applications and store these calls with their arguments in log files. Our algorithm detects botnets based on monitoring abnormal activity by correlating the changes in log file sizes from different hosts. Keywords-IRC; DDoS; Bots; Botnets; API function calls", "creator": "PScript5.dll Version 5.2.2"}}}