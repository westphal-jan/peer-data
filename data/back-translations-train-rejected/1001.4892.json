{"id": "1001.4892", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jan-2010", "title": "Janus: Automatic Ontology Builder from XSD Files", "abstract": "The construction of a reference ontology for a large domain still remains an hard human task. The process is sometimes assisted by software tools that facilitate the information extraction from a textual corpus. Despite of the great use of XML Schema files on the internet and especially in the B2B domain, tools that offer a complete semantic analysis of XML schemas are really rare. In this paper we introduce Janus, a tool for automatically building a reference knowledge base starting from XML Schema files. Janus also provides different useful views to simplify B2B application integration.", "histories": [["v1", "Wed, 27 Jan 2010 10:38:51 GMT  (162kb)", "http://arxiv.org/abs/1001.4892v1", null]], "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["ivan bedini", "benjamin nguyen", "georges gardarin"], "accepted": false, "id": "1001.4892"}, "pdf": {"name": "1001.4892.pdf", "metadata": {"source": "CRF", "title": "Janus: Automatic Ontology Builder from XSD files", "authors": ["Ivan Bedini", "Benjamin Nguyen", "Georges Gardarin"], "emails": ["ivan.bedini@orange-ftgroup.com", "benjamin.nguyen@prism.uvsq.fr", "georges.gardarin@prism.uvsq.fr"], "sections": [{"heading": "Categories and Subject Descriptors", "text": "D.3.3 [Programming languages]: Language constructs and functions - data models, semantics, dynamic memory management."}, {"heading": "General Terms", "text": "Algorithms, management, experiments."}, {"heading": "Keywords", "text": "Ontology, XML mining, application integration."}, {"heading": "1. INTRODUCTION", "text": "Over the past decade, the wave of the Semantic Web has revealed a new vision of using ontology for application integration systems. Researchers have developed several software tools to build ontologies (such as Prot\u00e9g\u00e9 [1]) and merged them in pairs (such as Mafra [2]) or to create alignments (such as S-Match [3]) These solutions, as well as applied ontology creation methods, are mainly human or, as shown in [4], sometimes supported by semi-automatic software tools. Limitations of their application for integrating Internet and enterprise applications include: (i) the lack of tools capable of extracting and obtaining information from a collection of XML files (the \"de facto\" format for defining application information); (ii) the complexity of aligning and merging two or more sources of knowledge, a task that has taken too much computing time to generate; (ii) the complexity of aligning and merging two or more sources of knowledge, a task that is difficult to obtain automatically; (ii) the difficulty of generating a new validation on the basis of Janus, ii) the difficulty of generating a new knowledge, ii) the complexity of generating a new system, ii) and ii) the complexity of which is difficult to achieve."}, {"heading": "2. JANUS ARCHITECTURE", "text": "Our tool implements a customization of several techniques derived from text mining and query / extraction of information applied to XML files (which we call XML mining). XML mining is used to pre-process simple and compound statements that define XML tags, such as XSD elements and complex XSD types. It includes cluster methods based on a Galois grid to quickly detect similarities between names and structures extracted from XML schemas. Figure 1 shows the general architecture of Janus. The algorithm that generates a high-level representation of XML Schema information sources is composed of three main steps. The first step is the extraction task represented by the extract arrow and the acquisition rectangle in Figure 1. It provides the knowledge needed to generate the ontology, the knowledge relationships for different types (such as), and the conceptual relationships for different types (such as)."}, {"heading": "3. FUNCTIONALITIES and VIEWS", "text": "The tool currently offers three visualization methods for viewing the acquired knowledge: the word view shows the list of terms that make up the \"ontology\" and the day clouds (both in Figure 2); the table view provides detailed information on each concept (such as frequency, family visits, source instances, and direct relationships); the graph view plays the semantic network (Figure 3); further views, \"social network concepts,\" are under development; the graph view can show the entire graph or only the part that relates to selected concepts with different layouts (hierarchical, tree,...); the acquired relationships and are visualized in this way: PropertyOf, Synonym, Shared Terms (composite tags with common terms such as address for tender addresses and post _ box _ address) and RelationTo (mainly composite concepts or others of type \"owls: sameAs\"); the graphing view, as well as the ability to select the relationship and / marker classes (and)."}, {"heading": "4. CONCLUSION", "text": "The automatic acquisition of knowledge from XML Schema files shows encouraging results as well as the implemented meta-model (a semantic model detailed in [5]) that appears robust enough to continue research in this direction. However, before a complete and automated tool can be developed, some problems still need to be solved. Nevertheless, the ability to acquire semantic concepts directly from the Interchange Language (XML) without the a priori definition of application ontologies is a new approach to B2B integration. Janus offers a first implementation of this approach. We propose to apply the initial results of this tool to the analysis of 23 existing B2B standards."}, {"heading": "5. REFERENCES", "text": "[1] N. F. Noy, R. W. Fergerson, & M. A. Musen. The Knowledge Model of Protege-2000: Combining Interoperability and Flexibility. EKAW 2000, France. [2] Maedche, A., Motik, B., Silva, N., and Volz, R. MAFRA - Mapping Distributed Ontologies in the Semantic Web. In Proc. EKAW 2002. [3] Fausto Giunchiglia, Mikalai Yatskevich, and Pavel Shvaiko. Semantic Matching: Algorithms and implementation. Journal on Data Semantics, IX, 2007. [4] Ivan Bedini and Benjamin Nguyen. Automatic Ontology Generation: State of the Art. PRiSM Laboratory Technical Report, University of Versailles, 2007. [5] Ivan Bedini, Benjamin Nguyen and Georges Gardarin. Building Reference Ontologies from B2B XML Schema Files, Technical Laboratory Versailles, 2007."}], "references": [{"title": "The knowledge model of Protege-2000: Combining interoperability and flexibility", "author": ["N.F. Noy", "R.W. Fergerson", "M.A. Musen"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2000}, {"title": "MAFRA - Mapping Distributed Ontologies in the Semantic Web", "author": ["A. Maedche", "B. Motik", "N. Silva", "Volz"], "venue": "In Proc. EKAW", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "Semantic matching: Algorithms and implementation", "author": ["Fausto Giunchiglia", "Mikalai Yatskevich", "Pavel Shvaiko"], "venue": "Journal on Data Semantics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Automatic Ontology Generation: State of the Art", "author": ["Ivan Bedini", "Benjamin Nguyen"], "venue": "PRiSM Laboratory Technical Report, University of Versailles,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2007}, {"title": "Building Reference Ontologies from B2B XML Schema Files", "author": ["Ivan Bedini", "Benjamin Nguyen", "Georges Gardarin"], "venue": "PRiSM Laboratory Technical Report, University of Versailles,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "Researchers have produced several software tools for building ontologies (like Prot\u00e9g\u00e9 [1]) and merging them two by two (like Mafra [2]) or producing alignments (like S-Match [3]).", "startOffset": 87, "endOffset": 90}, {"referenceID": 1, "context": "Researchers have produced several software tools for building ontologies (like Prot\u00e9g\u00e9 [1]) and merging them two by two (like Mafra [2]) or producing alignments (like S-Match [3]).", "startOffset": 132, "endOffset": 135}, {"referenceID": 2, "context": "Researchers have produced several software tools for building ontologies (like Prot\u00e9g\u00e9 [1]) and merging them two by two (like Mafra [2]) or producing alignments (like S-Match [3]).", "startOffset": 175, "endOffset": 178}, {"referenceID": 3, "context": "These solutions, as well as adopted ontology building methodologies, are mainly human or, as shown in [4], sometimes assisted by semi-automatic software tools.", "startOffset": 102, "endOffset": 105}], "year": 2008, "abstractText": "The construction of a reference ontology for a large domain still remains an hard human task. The process is sometimes assisted by software tools that facilitate the information extraction from a textual corpus. Despite of the great use of XML Schema files on the internet and especially in the B2B domain, tools that offer a complete semantic analysis of XML schemas are really rare. In this paper we introduce Janus, a tool for automatically building a reference knowledge base starting from XML Schema files. Janus also provides different useful views to simplify B2B application integration.", "creator": "PDFCreator Version 0.9.3"}}}