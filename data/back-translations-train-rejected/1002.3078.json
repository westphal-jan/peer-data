{"id": "1002.3078", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Feb-2010", "title": "Using ATL to define advanced and flexible constraint model transformations", "abstract": "Transforming constraint models is an important task in re- cent constraint programming systems. User-understandable models are defined during the modeling phase but rewriting or tuning them is manda- tory to get solving-efficient models. We propose a new architecture al- lowing to define bridges between any (modeling or solver) languages and to implement model optimizations. This architecture follows a model- driven approach where the constraint modeling process is seen as a set of model transformations. Among others, an interesting feature is the def- inition of transformations as concept-oriented rules, i.e. based on types of model elements where the types are organized into a hierarchy called a metamodel.", "histories": [["v1", "Tue, 16 Feb 2010 13:09:07 GMT  (807kb)", "http://arxiv.org/abs/1002.3078v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["raphael chenouard", "laurent granvilliers", "ricardo soto"], "accepted": false, "id": "1002.3078"}, "pdf": {"name": "1002.3078.pdf", "metadata": {"source": "CRF", "title": "Using ATL to define advanced and flexible constraint model transformations", "authors": ["Rapha\u00ebl Chenouard", "Laurent Granvilliers", "Ricardo Soto"], "emails": ["raphael.chenouard@univ-nantes.fr", "laurent.granvilliers@univ-nantes.fr", "ricardo.soto@univ-nantes.fr"], "sections": [{"heading": null, "text": "ar Xiv: 100 2.30 78v1 [cs.AI] 16 Fe"}, {"heading": "1 Introduction", "text": "This year, it has come to the point where there is only one occasion when there is a scandal, and that is when there is a scandal."}, {"heading": "2 The Model-Driven Transformation Framework", "text": "Figure 1 describes the architecture of our model-driven transformation framework, which is classically divided into two layers: M1 and M2 [14]. M1 contains the models that present constraint problems, and M2 defines the semantics of M1 by meta-models. Meta-models describe the concepts that occur in models, such as constraints, variables, or domains, and the relationships between these concepts, such as inheritance, composition, or association. In this framework, transformation rules are defined to perform a complete translation in three main steps: translation from source model A to pivot model, refactoring / optimization on the pivot model, and translation from pivot model to target model B. Models A and B may be defined by arbitrary CP languages. The pivot model may be refined several times to adapt it to the desired target model (see Section 4). A key feature resulting from a model-based approach to meta transform-rules is that the engineering approach is driven."}, {"heading": "3 A Motivating Example", "text": "This year, it has reached the point where it will be able to sit at the head of the group that is able to find a solution."}, {"heading": "4 Pivot metamodel and refactoring rules", "text": "The pivot model of a constraint problem is an intermediate model that needs to be transformed by rules. Rules can be concatenated to implement complex transformations. Below, the pivot and some structural refactoring and optimization rules are presented."}, {"heading": "4.1 Pivot metamodel", "text": "Our pivot model is designed to support as much as possible the constructs present in CP languages, such as variables of many types, data structures such as arrays, datasets, classes, first-order constraints, common global constraints, and control instructions. We believe that it is better and easier to establish a generic CP metamodel, while it is more complex to find a standard CP concrete syntax. Figure 6 shows the metamodel associated with Pivot models. A pivot model consists of a collection of elements divided into three main concepts: types, characteristics, and the concrete concept of the predicate. The inheritance tree of the types is the same as in the s-COMMA metamodel (see Figure 2)."}, {"heading": "4.2 Pivot model refactoring", "text": "This year it is more than ever before."}, {"heading": "5 Handling CP languages and transformation chains", "text": "In this section we describe the entire transformation chain from a given CP language to another language."}, {"heading": "5.1 Parsing CP languages", "text": "The front end of our system analyzes a source CP language file in order to obtain a model representation (on which transformation rules work) that corresponds to the concepts of the CP language (injection phase).The backend generates the code in the target CP language (extraction phase) from the model representation.The linking of CP languages and meta models is done using the TCS tool [11]. This tool allows for a smooth linking of grammars and meta models. It is responsible for generating parsers of the CP languages and also code generators.Figure 10 represents an extract of the TCS file for s-COMMA. In a TCS file, each concrete concept must have a corresponding template that needs to be matched. For example, the SCMAClass template implements the grammar pattern for class declarations, while at the same time defining features of this concept in the Metamodel COMMA."}, {"heading": "5.2 Model checking rules", "text": "The presented meta-models (see section 2) and the previous subsection show how to get CP language models. However, many irrelevant or erroneous models can be obtained without additional verification [2]. Thus, variables with empty domains or expressions can be defined (e.g., multiple equals in an equality constraint).Multiple ATL transformations are used to verify source models. We transform a source CP model into a model that corresponds to the meta-model problem defined in ATL-Zoo3. A problem model corresponds to a number of problem elements. This concept consists of only three features: - Severity is an attribute with an enumerated type of possible values: Error, Warning and Criticism. - Location is a string that is used to store the location of the problem in the source file. - Description is a string that is used to define a relevant message to decipher problem. several ATL rules were implemented to verify the CP language models."}, {"heading": "5.3 Chaining model transformations", "text": "After the injection step or before the extraction step, models must be transformed with respect to our pivot metamodel. All the refactoring steps presented in Section 4.2 are clearly not necessary in a transformation chain. In fact, it clearly depends on the modeling structures of the source and target CP languages. The idea is to use most of the constructs supported by the target language to have a target model that is similar to our source model in terms of constructs. For3 http: / / www.eclipse.org / m2m / atl / atlTransformations / # KM32Probleminstance, when translating an s-COMMA model into ECLiPSe, we should transform the objects. Therefore, we choose the composition step. We also need enumeration removal and other refactoring steps such as the use of local variables and n-ter predicates. Optionally, we can select the expression chains for simplification."}, {"heading": "6 Experiments", "text": "The second column represents the number of lines of the s-COMMA source files. The next columns correspond to the time of the atomic steps (in seconds): model injections (injections), transformations from s-COMMA to pivot (s-to-P), refactoring composition structures (comp), refactoring enumeration structures (in seconds), transformations from s-COMMA to pivot (s-to-P), refactoring composition structures (comp), refactoring enumeration structures (enum), transformations from pivot to ECLiPSe (P-to-E), and target file extraction file extraction (extract)."}, {"heading": "7 Conclusion and Future Work", "text": "In this paper, we propose a new framework for constraint-model transformations, supported by a set of MDE tools that allow easy design of translators throughout the transformation chain, which consists of three main steps: from the source to the pivot model, refinement of the pivot model and from the pivot model to the target. Refactoring / optimization is always done by the pivot, which provides reusable and flexible transformations, making transformations from / to the pivot easy, facilitating the integration of new language transformations. In this paper, only two languages are presented, but translation processes with gecode and realpaver [9] are already implemented.In the near future, we intend to increase the number of CP languages that support our approach, and to define more pivot-refactoring transformations to optimize and restructure models."}, {"heading": "Preface", "text": "This textbook is aimed at students of Physics, Physical Chemistry and Theoretical Chemistry. Here, the reader will be provided with basic knowledge of atomic and quantum physics at the level taught, for example, in the first chapters of our book The Physics of Atoms and Quantum. Here, the physics student will find material that should be included in the basic training of every physicist. Furthermore, the concepts presented in this book are intended to enable students to gain an understanding of the breadth and diversity of the field of molecular physics and its future as a fascinating field of research. For chemistry students, the concepts presented in this book provide a theoretical framework for this entire field of study. By means of these concepts, at least in principle, it is possible to reduce the enormous stock of empirical chemical knowledge to a few basic principles: that of quantum mechanics. In addition, modern physical methods, the basics of which are introduced here, are becoming increasingly important in chemistry."}, {"heading": "Organization", "text": "ECOOP '95 is organized by the Faculty of Computer Science, A Rhus University and AITO (Association Internationa pour les Technologie Object) in collaboration with ACM / SIGPLAN."}, {"heading": "Executive Commitee", "text": "Conference leader: Ole Lehrmann Madsen (A-rhus University, DK) Programme leader: Walter Olthoff (DFKI GmbH, Germany) Organisation leader: J\u00f8rgen Lindskov Knudsen (A-rhus University, DK) Tutorials: Birger M\u00f8ller-Pedersen (Norwegian Computing Center, Norway) Workshops: Eric Jul (University of Copenhagen, Denmark) Panels: Boris Magnusson (Lund University, Sweden) Exhibition: Elmer Sandvad (A-rhus University, DK) Presentations: Kurt N\u00f8rdmark (A-rhus University, DK)"}, {"heading": "Program Commitee", "text": "Conference leader: Ole Lehrmann Madsen (A-rhus University, DK) Programme leader: Walter Olthoff (DFKI GmbH, Germany) Organisation leader: J\u00f8rgen Lindskov Knudsen (A-rhus University, DK) Tutorials: Birger M\u00f8ller-Pedersen (Norwegian Computing Center, Norway) Workshops: Eric Jul (University of Copenhagen, Denmark) Panels: Boris Magnusson (Lund University, Sweden) Exhibition: Elmer Sandvad (A-rhus University, DK) Presentations: Kurt N\u00f8rdmark (A-rhus University, DK)"}, {"heading": "Referees", "text": "V. Andreev Ba \ufffd rwolff E. Barrelet H.P. Beck G. Bernardi E. Binder P.C. BosettiBraunschweig F.W. Bu \ufffd sser T. Carli A.B. Clegg G. Cozzika S. Dagoret Del BuonoP. Dingus H. Duhm J. Ebert S. Eichenberger R.J. Ellison Feltesse W. FlaugerIIIA. Fomenko G. Franke J. Garvey M. Gennis L. Goerlich P. Goritchev H. Greif E.M. Hanlon R. Haydar R.C.W. Henderso P. Hill H. Hufnagel A. Jacholkowska Johannsen S. Kasarian I.R. Kenyon C. Kleinwort T. Ko \ufffd hler S. D. Kolya P. KostkaU. Kru \ufffd ger J. Kurzho \ufffd fer M.P.J. Landon A. Lebedev Ch. Ley F. Linsel H. Lohmand Martin S. Masson K. Meier C.A. Meyer S. Mikocki J.V. Morris B. Naroska Nguyen U. Reading G.D. Patron P.J. A. S. C. Landho \ufffd fer P. Lebedev Sahlmann Sahlmann Sahlmann."}, {"heading": "Table of Contents", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Hamiltonian Mechanics", "text": "Hamiltonian Mechanics with special attention to higher education institutions.......................................................... 1Ivar Ekeland, Roger Temam, Jeffrey Dean, David Grove, Craig Chambers, Kim B. Bruce, Elisa BertinoHamiltonian Mechanics2.............................................................."}, {"heading": "Beru\u0308cksichtigung der ho\u0308hreren Lehranstalten", "text": "Ivar Ekeland1, Roger Temam2 Jeffrey Dean, David Grove, Craig Chambers, Kim B. Bruce, and Elsa Bertino1 Princeton University, Princeton NJ 08544, USA, I.Ekeland @ princeton.edu, WWW home page: http: / / users / ~ iekeland / web / welcome.html 2 Universite \u0301 de Paris-Sud, Laboratoire d'Analyse Nume \ufffd rique, Ba timent 425, F-91405 Orsay Cedex, FranceAbstract. The abstract should summarize the contents of the paper with at least 70 and no more than 150 words. It is set in 9-point font size and inserted 1.0 cm from the right and left margins."}, {"heading": "1 Fixed-Period Problems: The Sublinear Case", "text": "With this chapter, the preparatory work is over, and we begin the search for periodic solutions for Hamiltonian systems. All this will happen in the convex case; that is, we will examine the limit problem x = JH \u2032 (t, x) x (0) = x (T) with H (t, \u00b7), a convex function of x that goes to + \u221e when it is reversed."}, {"heading": "1.1 Autonomous Systems", "text": "In this section we will consider the case when the Hamiltonian H (x) is autonomous. (To make it easier, we will also assume that it is C1. We will first consider the question of non-triviality, and we will try to derive additional information from it. The general case: non-triviality. We will assume that H (A, B) is subquadratic if H (0, b) is subquadratic, for some constant symmetric matrices A and B. Set: = smallest eigenvalue of B (1). We will assume that H (A, B) is subquadratic."}, {"heading": "Hamiltonian Mechanics2", "text": "Ivar Ekeland1 and Roger Temam21 Princeton University, Princeton NJ 08544, USA 2 Universite \u0301 de Paris-Sud, Laboratoire d'Analyse Nume'rique, Ba timent 425, F-91405 Orsay Cedex, FranceAbstract. The abstract should summarize the contents of the paper with a minimum of 70 and a maximum of 150 words. It is set in 9-point font size and inserted 1.0 cm from the right and left margin..."}, {"heading": "1 Fixed-Period Problems: The Sublinear Case", "text": "With this chapter, the preparatory work is over, and we begin the search for periodic solutions for Hamiltonian systems. All this will happen in the convex case; that is, we will examine the limit problem x = JH \u2032 (t, x) x (0) = x (T) with H (t, \u00b7), a convex function of x that goes to + \u221e when it is reversed."}, {"heading": "1.1 Autonomous Systems", "text": "In this section, we will consider the case where the Hamiltonian H (x) is a separate problem (x). For the sake of simplicity, we will also assume that it is C1.We will first consider the question of non-triviality, and we will try to derive additional information from it. The general case: non-triviality. We will assume that H (A, B) is subquadratic if H (0, b) is subquadratic if H (2) is subquadratic. We will assume that H (A, B) is subquadratic."}], "references": [{"title": "Nonlinear oscillations and boundary-value problems for Hamiltonian systems", "author": ["F. Clarke", "I. Ekeland"], "venue": "Arch. Rat. Mech. Anal. 78, 315\u2013333", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1982}, {"title": "Solutions p\u00e9riodiques, du p\u00e9riode donn\u00e9e, des \u00e9quations hamiltoniennes", "author": ["F. Clarke", "I. Ekeland"], "venue": "Note CRAS Paris 287, 1013\u20131015", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1978}, {"title": "Subharmonic solutions with prescribed minimal period for nonautonomous Hamiltonian systems", "author": ["R. Michalek", "G. Tarantello"], "venue": "J. Diff. Eq. 72, 28\u201355", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1988}], "referenceMentions": [{"referenceID": 2, "context": "MiniZinc [13] is intended to be a standard modeling language, and Cadmium [3] is able to map MiniZinc models to a set of solvers.", "startOffset": 74, "endOffset": 77}, {"referenceID": 0, "context": "1 int set week s g roup s p l aye r s [w\u2217g ] in [ 1 , 9 ] , 2 f o ra l l weeks in [ 1 ,w] { 3 f o ra l l groups in [ 1 , g ] { 4 card ( we ek s g roup s p l aye r s [ weeks\u2217w+groups ] )= g , 5 .", "startOffset": 48, "endOffset": 57}, {"referenceID": 1, "context": "However, many irrelevant or erroneous models can be obtained without any additional checking [2].", "startOffset": 93, "endOffset": 96}, {"referenceID": 0, "context": "These scripts are hand-written, but they can be automatically generated using the am3 tool [1] and the concept of megamodel [7] to get a graphical interfaces to manage terminal models, metamodels and complex transformation chains.", "startOffset": 91, "endOffset": 94}, {"referenceID": 0, "context": "The results in this section are a refined version of [1]; the minimality result of Proposition 14 was the first of its kind.", "startOffset": 53, "endOffset": 56}, {"referenceID": 1, "context": "Again the duality approach enabled Clarke and Ekeland in [2] to treat the same problem in the convex-subquadratic case, with growth conditions on H only.", "startOffset": 57, "endOffset": 60}, {"referenceID": 2, "context": "Recently, Michalek and Tarantello (see [3] and [4]) have obtained lower bound on the number of subharmonics of period kT , based on symmetry considerations and on pinching estimates, as in Sect.", "startOffset": 39, "endOffset": 42}], "year": 2014, "abstractText": "Transforming constraint models is an important task in recent constraint programming systems. User-understandable models are defined during the modeling phase but rewriting or tuning them is mandatory to get solving-efficient models. We propose a new architecture allowing to define bridges between any (modeling or solver) languages and to implement model optimizations. This architecture follows a modeldriven approach where the constraint modeling process is seen as a set of model transformations. Among others, an interesting feature is the definition of transformations as concept-oriented rules, i.e. based on types of model elements where the types are organized into a hierarchy called a metamodel.", "creator": null}}}