{"id": "1002.3195", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Feb-2010", "title": "Efficiently Discovering Hammock Paths from Induced Similarity Networks", "abstract": "Similarity networks are important abstractions in many information management applications such as recommender systems, corpora analysis, and medical informatics. For instance, by inducing similarity networks between movies rated similarly by users, or between documents containing common terms, and or between clinical trials involving the same themes, we can aim to find the global structure of connectivities underlying the data, and use the network as a basis to make connections between seemingly disparate entities. In the above applications, composing similarities between objects of interest finds uses in serendipitous recommendation, in storytelling, and in clinical diagnosis, respectively. We present an algorithmic framework for traversing similarity paths using the notion of `hammock' paths which are generalization of traditional paths. Our framework is exploratory in nature so that, given starting and ending objects of interest, it explores candidate objects for path following, and heuristics to admissibly estimate the potential for paths to lead to a desired destination. We present three diverse applications: exploring movie similarities in the Netflix dataset, exploring abstract similarities across the PubMed corpus, and exploring description similarities in a database of clinical trials. Experimental results demonstrate the potential of our approach for unstructured knowledge discovery in similarity networks.", "histories": [["v1", "Wed, 17 Feb 2010 04:07:06 GMT  (2419kb,D)", "http://arxiv.org/abs/1002.3195v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB", "authors": ["m shahriar hossain", "michael narayan", "naren ramakrishnan"], "accepted": false, "id": "1002.3195"}, "pdf": {"name": "1002.3195.pdf", "metadata": {"source": "CRF", "title": "Efficiently Discovering Hammock Paths from Induced Similarity Networks", "authors": ["M. Shahriar Hossain", "Michael Narayan", "Naren Ramakrishnan"], "emails": ["naren}@vt.edu"], "sections": [{"heading": "1. Introduction", "text": "In fact, it is in such a way that we are able to go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we go to another world, in which we live in another world, in which we go to another world, in which we, in which we, in a world, in a world, in which we, in a world, in which we, in which we, in a world, in which we, in a world, in which we, in a world, in a world, in a world, in a world, in a world, in a world, in a world, in a world, in which we, in which we, in a world, in which we, in a world, in a world, in which we, in a world, in a world, in which we, in a world, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in which we, in a world, in which we, in a world, in which we, in which we, in which we, in a world, in which we, in which we, in a world, in which we, in which we, in a world, in which we, in which we, in a world, in which we, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in which we, in a world, in a world, in which we, in which we, in a world, in a world, in a world, in a world, in which we, in which we, in a world, in a world, in a world, in which we, in which we, in a world, in a world, in a world, in which we, in which we, in a world, in which we, in a world, in which we, in a world, in a world, in a world, in which we, in which we, in a world, in a world"}, {"heading": "2. Background", "text": "The formulations we are exploring are intuitive to understand. An easy way between films can be determined by co-ratio, as stated in Fig. 1: \"Roman Day\" was rated by a user who was also rated in Fig. 1, and so on. In practice, the paths are marked only when a sufficient number of people have rated them, resulting in a sequence of \"hammocks,\" as stated in Fig. 1."}, {"heading": "3. Problem Formulation", "text": "We begin with the formal definition of the space through which similarity networks are induced.Definition 1. Definition D = (O, F, V) is a set of objects that exhibit a series of characteristics. (O, F) We can therefore imagine that the (O, F) represent a subset of O that we call o (f). We also require that the objects that have an obvious meaning of O (f) by F in each case. (O, F) are (films, users), (documents, terms) and (clinical studies, keywords) each with the obvious meaning of V in each case. In Fig. 2 we present a dataset that we will use as a running example. Here are the objects movies (O = {m1, m2, m3, m4, m7, m8} and the characteristics are users (F = {uA, uB, uC, uC, uC, uD)."}, {"heading": "4 Extension to Vector Spaces", "text": "To accommodate vector spaces, we generalize definition 1, so that a database D = (O, F, V) now has a tuple over a series of objects O, characteristics F, and a function V: O \u00b7 F \u2192 R. This helps us go beyond simple binary associations to capture the strength of the association (e.g. weighting values, term weights) or other continuous auxiliary data. (Our ongoing example from Figure 2 contains user-based movie ratings.) The weighted soda gel distance between two objects o1 and o2 is defined by D (o1, o2) = \u2211 f | V (o1, f) \u2212 V (o2, f) \u2212 F max (V (o1, f), V (o2, f))), which reduces the unweighted distance between two objects o1 and o2 when V (o, f), o2, ocks, oths, oths, oths, oths, and V (o, f)."}, {"heading": "5. Algorithms", "text": "Our general methodology is based on the use of the concept grid to structure the search for paths. Remember that the two parameters that affect the quality of the path - hammock width and clique size - impose a duality. Hammock width is placed above characteristics, but the clique size above objects. We use the clique size to cut the concept grid during construction (by including it as a support restriction) and the hammock width to select candidates for the dynamic construction of paths. There are three central arithmetic steps: (i) the construction of the concept grid, (ii) the generation of promising candidates for the path sequence, and (iii) the evaluation of candidates for the potential to lead to the goal. Of these, the first step can be considered as start-up costs that can be amortized through several path finding tasks. We adopt the CHARM-L [14] algorithm from Zaki to begin the search for the second concept and the detail of the construction of the object we are organizing with the second concept and the construction of the object."}, {"heading": "5.1. Successor Generation", "text": "The next generation is the task of using the hammock and clique size requirements to identify a number of possible successors for the following path. Note that this does not use the end object in its calculation. We are examining three techniques for the next generation: 1. Cover Tree Nearest Neighbor, 2. Nearest Neighbors Approximation (NNA) and 3. k-Clique Near Neighbor (kCNN). The first technique aims to find paths when the clique size requirement is 2 (upper and middle paths of Fig. 1), which means that this technique is capable of generating b singleton successors, b being the branching factor of the search. The second two techniques focus on paths of arbitrary clique size, such as the bottom path of Fig. 1. Instead of generating singleton successors, the NA- and kCNN - algorithms are able to present succession sets, each of which represents a K with a preexisting candidate."}, {"heading": "5.1.1 Cover Tree Nearest Neighbor", "text": "The decktree [1] is a data structure for fast adjacent operations in a space of objects organized along any distance measurement (here we use the Soergel distance [7]).The spatial complexity is O (\u0394O), i.e. linear in the object size of the database. A query of the closest neighbor requires logarithmic time in the object space O (c12log (n)), where c is the expansion constant associated with the attribute setting dimension of the dataset (see [1] for details)."}, {"heading": "5.1.2 Nearest Neighbors Approximation (NNA)", "text": "We use the Jaccard coefficient between two objects as an indicator to trace the Soergel distance between objects. However, we cannot simply calculate the Jaccard coefficient between these objects and any other object. We use the concept grid to avoid wasteful comparisons. We first define a predicate based on descriptions and objects. Algorithm 1 NNA (o) Input: An object o fringe (o) Order by feature set size outlook, while fringe 6 = complex comparisons are avoided. Algorithm 1 NNA (o) Input: An object o fringe (o).F fringe (o) Order by feature set size outlook."}, {"heading": "5.2. Evaluating Candidates", "text": "We now have a basket of candidates who are located near the current object and need to determine which of them has the potential to lead to the target. We present two operating modes to classify candidates: (i) normal mode and (ii) mixed mode."}, {"heading": "5.2.1 Normal Mode", "text": "The normal mode is suitable for the general case where we have all objects and characteristics in the database. The primary optimization criterion for the A * search procedure is the cumulative Soergel distance of the path. We use the rectilinear Soergel distance for heuristics. It is easy to see that this can never overestimate the cost of a path from any object to the destination (and is therefore permissible), since the Soergel distance maintains the triangular inequality."}, {"heading": "5.2.2 Mixed Mode", "text": "The mixed-mode distance scale is effective for large datasets where only important information is stored, but other information is removed from the system after recording some of its aggregated information to save space and setup costs. In the mixed-mode approach, for simplicity, we assume that all information about objects outside the concept grid is missing, but some of its aggregated information is provided, such as the number of truncated features. Fig. 3 shows the distribution of common and unusual features of objects o1 and o2 inside and outside a concept grid. The mixed-mode soda gel distance is indicated by: Dmixed (o1, o2) = | U1L | + | U2L | + | U2L | + | CL | + | TO | where the terms in Fig. 3.Theorem 2. Dmixed (o1, o2) never overestimates the original soda gel distance D (o1, o2). Evidence: not permissible due to the more general theorem 3 later."}, {"heading": "5.2.3 Mixed Mode in Vector Spaces", "text": "However, the mixed mode in the vector space model becomes more complex than its mixed model. Figure 4 shows our formula for the mixed mode in the vector space. Similar to the unweighted mode, we assume that all information about properties of objects outside the concept grid is missing in the weighted mixed mode. However, some of their aggregated information such as minimum (minw) and maximum (maxw) weights are available. Consider the number of properties of objects outside the grid that do not occur due to the support threshold of the concept grid, minsup. Some features of the TO can be common to both objects (minw): minimum (minw) and maximum (maxw) weights."}, {"heading": "6. Experimental Results", "text": "We present our experimental results on four datasets (see Table 1) with a 64-bit Windows Vista Intel Core2 Quad CPU Q9450 @ 2.66 GHz and 8 GB of physical memory."}, {"heading": "6.1. Evaluating successor generation strategies", "text": "The goal of our first experiment was to evaluate the number of nodes examined by the A * search, and the time taken as a function of the path length discovered, as a function of various succession strategies. To this end, we defined a synthetic dataset of 1000 randomly selected movies from the Netflix dataset, and aimed to generate more than 50,000 similarity gradients between randomly selected pairs, with a threshold of 0.95 and a branching factor bound (b) of 20. We introduced a time threshold of 120 seconds in the A * search, and Fig. 5 shows the results of only successful searches. Approximately 80% of these searches failed using the deck tree and NNA approaches, but the kCNN approach was able to either successfully generate paths or explain that no path exists in less than 120 seconds. As Fig. 5 shows, the cover tree and NNA search terminate early due to the time restriction applied, but CNN approaches 7."}, {"heading": "6.2. Netflix dataset", "text": "If we consider movies as objects and users as characteristics, we construct the concept grid for the Netflix dataset with a support restriction of 20%. The resulting grid contains 5,884 concepts, of which 120 were leaves and the rest had infantile concepts. We selected 50,000 pairs of movies and tried to generate hammock paths between them. Figure 6 shows our experimental results with different clique sizes and fixed distance thresholds. The graph on the left shows that the performance of our kCNN algorithm depends on the clique size, as the figure shows that hammock paths with a smaller clique size are generated faster than those with a higher clique size. The tendency of the runtime essentially follows the number of nodes studied to generate the paths (the second figure). The third figure shows the corresponding trends of the effective branching factor. It is obvious that the higher the clique size, the worse (the two-factor)."}, {"heading": "6.3. PubMed Abstracts", "text": "In our PubMed case study, we consider paper abstracts as objects and terms as characteristics. We curated 161,693 publications that relate to multiple cytokines, transcription factors, and feedback molecules, and modeled only their titles and abstracts. There were approximately 133,252 unique terms in the dataset after the removal of stopwords, digits, DNA sequences, and special characters. Even for randomly selected paper pairs, we discovered over one million hammock paths. Figure 8 (a) shows the trends in the number of nodes studied, the time it takes to generate paths, and the effective branching factor as a function of path length. Although Figure 8 (a) shows that the average number of nodes studied is large, it is not necessary for this behavior to remain the same for other datasets. In fact, the result is the opposite in some datasets, where the number of generated paths is not reduced, especially if each object has a large number of characteristics."}, {"heading": "6.4. Clinical Trials", "text": "We curated more than 60,000 clinical studies from clinicaltrials.gov and focused on the purpose and description of each study. These are objects and concepts. The concept grid we used had about a thousand unique concepts and was generated with a minimum of 10%. Due to space constraints, we are showing qualitative rather than quantitative results here. Table 2 describes a significant chain of studies linking two different clinical studies related to heart failure and kidney transplantation in patients with cystinosis. (A recognized practice for assessing the statistical importance of discovered chains is to evaluate the likelihood of overlaps in the given descriptor sizes for each step along the way based on the hypergeometric distribution and attributing a p-value after FDR corrections such as the Benjamin Hochberg procedure.) The chain starts with studies on heart failure and goes through studies on atrial fibrillation (arrhythmia), heart abnormalities, colorectal cancer, advanced colorectal cancer, and finally, solid tumors are associated with such studies."}, {"heading": "7. Discussion", "text": "We have presented an efficient algorithmic approach to the discovery of hammock pathways in similarity networks without inducing these networks in their entirety. Experimental results have demonstrated the scalability, effectiveness of our heuristics and the ability to gain domain-specific insights. We believe that our approach can be a useful tool for studying the structure of compounds underlying Boolean and vector-weighted association datasets. Future work aims to include additional distance measurements and define new compressed representations of datasets that can be used for a variety of purposes, from concept modeling to distance estimation."}], "references": [{"title": "Cover Trees for Nearest Neighbor", "author": ["A. Beygelzimer", "S. Kakade", "J. Langford"], "venue": "ICML \u201906, pages 97\u2013104", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Sparsification\u2014A Technique for Speeding up Dynamic Graph Algorithms", "author": ["D. Eppstein", "Z. Galil", "G.F. Italiano", "A. Nissenzweig"], "venue": "J. ACM, 44(5):669\u2013696", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1997}, {"title": "Outcomes of Simultaneous Heart-Kidney Transplant in the US: A Retrospective Analysis Using OPTN/UNOS Data", "author": ["J. Gill"], "venue": "Am J Transplant.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Evaluation of Item-Based Top-N Recommendation Algorithms", "author": ["G. Karypis"], "venue": "CIKM \u201901, pages 247\u2013254", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2001}, {"title": "Algorithms for Storytelling", "author": ["D. Kumar", "N. Ramakrishnan", "R.F. Helm", "M. Potts"], "venue": "KDD \u201906, pages 604\u2013610", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2006}, {"title": "Connectivity Structure of Bipartite Graphs via the KNC-plot", "author": ["R. Kumar", "A. Tomkins", "E. Vee"], "venue": "WSDM \u201908, pages 129\u2013138", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Introduction to Chemoinformatics", "author": ["A. Leach", "V. Gillet"], "venue": "Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2007}, {"title": "Studying Recommendation Algorithms by Graph Analysis", "author": ["B.J. Mirza", "B.J. Keller", "N. Ramakrishnan"], "venue": "J. Intell. Inf. Syst., 20(2):131\u2013160", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2003}, {"title": "A Lattice-Based Model for Recommender Systems", "author": ["S. Narayanaswamy", "R. Bhatnagar"], "venue": "ICTAI \u201908, pages 349\u2013356", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "A Browser for Bibliographic Information Retrieval", "author": ["G.S. Pedersen"], "venue": "based on an Application of Lattice Theory. In SIGIR \u201993, pages 270\u2013279", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1993}, {"title": "Turning CARTwheels: an Alternating Algorithm for Mining Redescriptions", "author": ["N. Ramakrishnan", "D. Kumar", "B. Mishra", "M. Potts", "R.F. Helm"], "venue": "KDD \u201904, pages 266\u2013275", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2004}, {"title": "Using ARROWSMITH: A Computer-assisted Approach to Formulating and Assessing Scientific Hypotheses", "author": ["N.R. Smalheiser", "D.R. Swanson"], "venue": "Computer Methods and Programs in Biomedicine, 57(3):149\u2013153", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1998}, {"title": "The vertex degree distribution of random intersection graphs", "author": ["D. Stark"], "venue": "Random Struct. Algorithms, 24(3):249\u2013 258", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2004}, {"title": "Reasoning About Sets Using Redescription Mining", "author": ["M.J. Zaki", "N. Ramakrishnan"], "venue": "KDD \u201905, pages 364\u2013373", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2005}], "referenceMentions": [{"referenceID": 3, "context": "Two movies can be connected if they have been rated similarly by sufficient number of people; this is the basis for the popular itembased recommendation algorithms [4].", "startOffset": 164, "endOffset": 167}, {"referenceID": 11, "context": "Here path finding has applications to literature-based discovery (similar to the ARROWSMITH program [12]) and clinical diagnosis.", "startOffset": 100, "endOffset": 104}, {"referenceID": 7, "context": "Graph modeling: The use of the word \u2018hammock\u2019 for induced similarity networks appears to have been first made in [8] although this work does not aim to find paths.", "startOffset": 113, "endOffset": 116}, {"referenceID": 5, "context": "The notion of kNC-plots was introduced in [6] where k denotes what we refer to as hammock width in this paper.", "startOffset": 42, "endOffset": 45}, {"referenceID": 12, "context": "Random intersection graphs [13] are a class of theoretical models proposed in the random graph community.", "startOffset": 27, "endOffset": 31}, {"referenceID": 1, "context": "Under these modeling assumptions, connectivity and other properties of these graphs can be characterized [2].", "startOffset": 105, "endOffset": 108}, {"referenceID": 10, "context": "Redescription mining: Redescriptions, a pattern class introduced in [11], induce subsets of data that share strong overlap.", "startOffset": 68, "endOffset": 72}, {"referenceID": 4, "context": "[5] study the problem of \u2018storytelling\u2019 over a space of descriptors, which is the goal of finding a sequence (story) of redescriptions between two subsets by positing intermediate subsets that share sufficient overlap with their neighbors in the story.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "Although this is similar to our objective, the heuristic innovations in [5] are restricted to binary spaces as well and cannot find paths of the same expressiveness (hammocks organized into cliques) and with the same efficiencies as done here.", "startOffset": 72, "endOffset": 75}, {"referenceID": 8, "context": "Lattice based information retrieval: The use of concept lattices as organizing data structures for fast retrieval, query, and data mining is not new [9, 10].", "startOffset": 149, "endOffset": 156}, {"referenceID": 9, "context": "Lattice based information retrieval: The use of concept lattices as organizing data structures for fast retrieval, query, and data mining is not new [9, 10].", "startOffset": 149, "endOffset": 156}, {"referenceID": 10, "context": "[11] to capture similarities between descriptors.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "We adopt the CHARM-L [14] algorithm of Zaki for constructing concept lattices and mining redescriptions.", "startOffset": 21, "endOffset": 25}, {"referenceID": 0, "context": "The cover tree [1] is a data structure for fast nearest neighbor operations in a space of objects organized alongside any distance metric (here, we use the Soergel distance [7] ).", "startOffset": 15, "endOffset": 18}, {"referenceID": 6, "context": "The cover tree [1] is a data structure for fast nearest neighbor operations in a space of objects organized alongside any distance metric (here, we use the Soergel distance [7] ).", "startOffset": 173, "endOffset": 176}, {"referenceID": 0, "context": "A nearest neighbor query requires logarithmic time in the object space O ( c12log (n) ) where c is the expansion constant associated with the featureset dimension of the dataset (see [1] for details).", "startOffset": 183, "endOffset": 186}, {"referenceID": 4, "context": ", [5] uses costly remodelling as a post processing step).", "startOffset": 2, "endOffset": 5}, {"referenceID": 2, "context": ", see [3]).", "startOffset": 6, "endOffset": 9}], "year": 2010, "abstractText": "Similarity networks are important abstractions in many information management applications such as recommender systems, corpora analysis, and medical informatics. For instance, in a recommender system, by inducing similarity networks between movies rated similarly by users, we can aim to find the global structure of connectivities underlying the data, and use the network to posit connections between given entities. We present an algorithmic framework to efficiently find paths in an induced similarity network without materializing the network in its entirety. Our framework introduces the notion of \u2018hammock\u2019 paths which are generalizations of traditional paths in bipartite graphs. Given starting and ending objects of interest, it explores candidate objects for path following, and heuristics to admissibly estimate the potential for paths to lead to a desired destination. We present three diverse applications, modeled after the Netflix dataset, a broad subset of the PubMed corpus, and a database of clinical trials. Experimental results demonstrate the potential of our approach for unstructured knowledge discovery in similarity networks.", "creator": "LaTeX with hyperref package"}}}