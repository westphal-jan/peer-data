{"id": "1005.1567", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-May-2010", "title": "On The Power of Tree Projections: Structural Tractability of Enumerating CSP Solutions", "abstract": "The problem of deciding whether CSP instances admit solutions has been deeply studied in the literature, and several structural tractability results have been derived so far. However, constraint satisfaction comes in practice as a computation problem where the focus is either on finding one solution, or on enumerating all solutions, possibly projected over some given set of output variables. The paper investigates the structural tractability of the problem of enumerating (possibly projected) solutions, where tractability means here computable with polynomial delay (WPD), since in general exponentially many solutions may be computed. A general framework based on the notion of tree projection of hypergraphs is considered, which generalizes all known decomposition methods. Tractability results have been obtained both for classes of structures where output variables are part of their specification, and for classes of structures where computability WPD must be ensured for any possible set of output variables. These results are shown to be tight, by exhibiting dichotomies for classes of structures having bounded arity and where the tree decomposition method is considered.", "histories": [["v1", "Mon, 10 May 2010 14:46:29 GMT  (57kb)", "http://arxiv.org/abs/1005.1567v1", null], ["v2", "Wed, 30 Jun 2010 14:05:01 GMT  (58kb)", "http://arxiv.org/abs/1005.1567v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB", "authors": ["gianluigi greco", "francesco scarcello"], "accepted": false, "id": "1005.1567"}, "pdf": {"name": "1005.1567.pdf", "metadata": {"source": "CRF", "title": "On The Power of Tree Projections: Structural Tractability of Enumerating CSP Solutions", "authors": ["Gianluigi Greco", "Francesco Scarcello"], "emails": ["ggreco@mat.unical.it,", "scarcello@deis.unical.it"], "sections": [{"heading": null, "text": "ar Xiv: 100 5.15 67v1 [cs.AI] 10 May 201 0"}, {"heading": "1 Introduction", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "1.1 Constraint Satisfaction and Decomposition Methods", "text": "This year is the highest in the history of the country."}, {"heading": "1.2 Enumeration Problems", "text": "This year it will be able to introduce the aforementioned brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated brainconsecrated braintecsrteeSe."}, {"heading": "1.3 Contribution", "text": "We define a property for pairs (A, O), where A is a structure and O A is a set of variables that allow us to characterize the classes of tractable instances. Broadly speaking, we say that (A, O) is covered by the decomposition method DM when variables in O occur in a tree projection of a particular hypergraph. (A, O) We describe an algorithm that solves the promising enumeration problem by calculating with polynomial delay all solutions of a given instance (A, B, O) whenever (A, O) is covered by the views defined by DM. (3) In the specific case of (generalized hyper-) tree widths, we show that the above condition is also necessary for the correctness of the proposed algorithm."}, {"heading": "2 Preliminaries: Relational Structures and Homomorphisms", "text": "A constraint satisfaction problem may be formulated as a relational homomorphism problem. < A = > Restrictions A = > Restrictions A = > Restrictions B is a finite series of relation symbols of specified features. < A Relational Structure A = > Restrictions A = > Restrictions B is a finite series of relation symbols of specified features. < A Relational Structure A = \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \".\" The \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \""}, {"heading": "3 Decomposition Methods, Views, and Tree Projections", "text": "In fact, most of us are able to abide by the rules they have given themselves. (D) D \"ei\" r, he says, \"is able to abide by the rules.\" (D \"ei\" n, he says, \"e\" n \"n\" i \"n.\" (D \"i\" n \"i\" n \"n.\" (D \"i\" n \"n\" i \"n\" n. \"(D\" a \"n\" n \"n\" n. \")\" n \"n.\" (D \"n\" n \"n\" n. \"(D\" n \"e\" n \"n\" n \"n\" n \"n\" n. \"n\" n. \")\" n. \""}, {"heading": "3.1 Tree Projections for CSP Instances", "text": "In this work we are interested in restrictions imposed on left-sided structures by CSP instances, based on some decomposition methods}, {"heading": "3.2 CSP Instances and tp-Coverings", "text": "In fact, most of them are able to hold their own. (...) Most of them are able to save themselves. (...) Most of them are able to save themselves. (...) Most of them are able to save themselves. (...) Most of them are not able to save themselves. (...) Most of them are able to save themselves. (...) Most of them are able to save themselves. (...) Most of them are not able to save themselves. (...) Most of them are not able to save themselves. (...) Most of them are able to save themselves. (...) Most of them are not able to save themselves. (...) Most of them are not able to save themselves. (...) Most of them are not able to save themselves. (...)"}, {"heading": "4 Enumerating Solutions of Output-Aware CSP Instances", "text": "The aim of this section is to examine the problem of enumerating CSP solutions for classes of instances in which possible output variables are part of the structure of the given instance. This is formalized by assuming that the relationship structure contains a domain structure that specifies the domain structures for such variables.The definition of all domain variables is from drv (A).We say that an ECSP instance (A, O) is limited to domain structures when O (A).Of course, if it is not, then it is easy to build an equivalent domain variable instance in which an additional fresh invariant output structure is added."}, {"heading": "4.2 Tight Characterizations for Enumerating Solutions with Polynomial Delay", "text": "Next, we will analyze the complexity of ComputeAllSolutionsDM.Theorem 5. Let's be a case where there is no structure, and O'A be a set of variables. If (A, O) a particular solution is found by XIX, then ComputeAllSolutionsDM is indeed, if the algorithm does not output tuples, we can immediately conclude that the ECSP instance has no solutions. Regarding runtime, we know that the initialization steps are feasible in polynomial time. In particular, the calculation of AV and BV is feasible in polynomial time, based on the properties of the decomposition method DM (see Section 3). To characterize the complexity of the propagates, we must instead consider two cases."}, {"heading": "5 Enumerating Solutions over Arbitrary Output Variables", "text": "This year, the time has come for an agreement to be reached, and it will only take a few days."}], "references": [{"title": "Tree-Related Widths of Graphs and Hypergraphs", "author": ["I. Adler"], "venue": "SIAM Journal Discrete Mathematics,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2008}, {"title": "On the Power of k-Consistency", "author": ["A. Atserias", "A. Bulatov", "V. Dalmau"], "venue": "In Proc. of ICALP\u201907,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2007}, {"title": "The power of natural semijoins", "author": ["P.A. Bernstein", "N. Goodman"], "venue": "SIAM Journal on Computing,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1981}, {"title": "Enumerating Homomorphism", "author": ["A. Bulatov", "V. Dalmau", "M. Grohe", "D. Marx"], "venue": "In Proc. of STACS\u201909,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Beyond Hypertree Width: Decomposition Methods Without Decompositions", "author": ["H. Chen", "V. Dalmau"], "venue": "In Proc. of CP\u201905,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "A unified theory of structural tractability for constraint satisfaction problems", "author": ["D. Cohen", "P. Jeavons", "M. Gyssens"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "Parameterized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1999}, {"title": "The tree projection theorem and relational query processing", "author": ["N. Goodman", "O. Shmueli"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1984}, {"title": "A Comparison of Structural CSP Decomposition Methods", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2000}, {"title": "Hypertree decompositions and tractable queries", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2002}, {"title": "Robbers, marshals, and guards: game theoretic and logical characterizations of hypertree width", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "J. of Computer and System Sciences,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "Generalized hypertree decompositions: NP-hardness and tractable variants", "author": ["G. Gottlob", "Z. Mikl\u00f3s", "T. Schwentick"], "venue": "Journal of the ACM,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2009}, {"title": "When is the evaluation of conjunctive queries tractable", "author": ["M. Grohe", "T. Schwentick", "L. Segoufin"], "venue": "In Proc. of STOC\u201901,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2001}, {"title": "The complexity of homomorphism and constraint satisfaction problems seen from the other side", "author": ["M. Grohe"], "venue": "Journal of the ACM,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Constraint solving via fractional edge covers", "author": ["M. Grohe", "D. Marx"], "venue": "In Proc. of SODA\u201906,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2006}, {"title": "Approximating fractional hypertree width", "author": ["D. Marx"], "venue": "In Proc. of SODA\u201909,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2008}, {"title": "Graph minors III: Planar tree-width", "author": ["N. Robertson", "P.D. Seymour"], "venue": "Journal of Combinatorial Theory, Series B,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1984}, {"title": "Graph minors V: Excluding a planar graph", "author": ["N. Robertson", "P.D. Seymour"], "venue": "Journal of Combinatorial Theory, Series B,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1986}, {"title": "Solving Queries by Tree Projections", "author": ["Y. Sagiv", "O Shmueli"], "venue": "ACM Transaction on Database Systems,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1993}, {"title": "Uniform Constraint Satisfaction Problems and Database Theory", "author": ["F. Scarcello", "G. Gottlob", "G. Greco"], "venue": "In Complexity of Constraints,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2008}], "referenceMentions": [{"referenceID": 5, "context": "The decision problem CSP(A,\u2212) has intensively been studied in the literature, and various classes of structures over which it can be solved in polynomial time have already been singled out (see [6, 9, 16, 1], and the references therein).", "startOffset": 194, "endOffset": 207}, {"referenceID": 8, "context": "The decision problem CSP(A,\u2212) has intensively been studied in the literature, and various classes of structures over which it can be solved in polynomial time have already been singled out (see [6, 9, 16, 1], and the references therein).", "startOffset": 194, "endOffset": 207}, {"referenceID": 14, "context": "The decision problem CSP(A,\u2212) has intensively been studied in the literature, and various classes of structures over which it can be solved in polynomial time have already been singled out (see [6, 9, 16, 1], and the references therein).", "startOffset": 194, "endOffset": 207}, {"referenceID": 0, "context": "The decision problem CSP(A,\u2212) has intensively been studied in the literature, and various classes of structures over which it can be solved in polynomial time have already been singled out (see [6, 9, 16, 1], and the references therein).", "startOffset": 194, "endOffset": 207}, {"referenceID": 7, "context": "with possibly infinite domains, the open question in [8] (just recently answered by [13] on finite structures) would have been solved in 1993 [21].", "startOffset": 53, "endOffset": 56}, {"referenceID": 18, "context": "with possibly infinite domains, the open question in [8] (just recently answered by [13] on finite structures) would have been solved in 1993 [21].", "startOffset": 142, "endOffset": 146}, {"referenceID": 7, "context": "This very general approach traces back to the seminal database paper [8], and it is based on the graph-theoretic notion of tree-projection of the pair of hypergraphs (HA,HV), associated with the input structure A and with the structure V of the available views, respectively (tree projections are formally defined in Section 2).", "startOffset": 69, "endOffset": 72}, {"referenceID": 10, "context": "For instance, assume that the fixed threshold on the width is k: in the generalized hypertree-width method [11], the available views are all subproblems involving at most k constraints from the given CSP instance; in the case of treewidth [19], the views are all subproblems involving at most k variables; for fractional hypertree-width, the views are all subproblems having fractional cover-width at most k (in fact, if we require that they are computable in polynomial-time, we may instead use those subproblems defined in [17] to compute a O(k) approximation of this notion).", "startOffset": 107, "endOffset": 111}, {"referenceID": 16, "context": "For instance, assume that the fixed threshold on the width is k: in the generalized hypertree-width method [11], the available views are all subproblems involving at most k constraints from the given CSP instance; in the case of treewidth [19], the views are all subproblems involving at most k variables; for fractional hypertree-width, the views are all subproblems having fractional cover-width at most k (in fact, if we require that they are computable in polynomial-time, we may instead use those subproblems defined in [17] to compute a O(k) approximation of this notion).", "startOffset": 239, "endOffset": 243}, {"referenceID": 15, "context": "For instance, assume that the fixed threshold on the width is k: in the generalized hypertree-width method [11], the available views are all subproblems involving at most k constraints from the given CSP instance; in the case of treewidth [19], the views are all subproblems involving at most k variables; for fractional hypertree-width, the views are all subproblems having fractional cover-width at most k (in fact, if we require that they are computable in polynomial-time, we may instead use those subproblems defined in [17] to compute a O(k) approximation of this notion).", "startOffset": 525, "endOffset": 529}, {"referenceID": 4, "context": "Note that, for the special case of generalized hypertree-width, the fact that enforcing GAC on all clusters of k constraints is sufficient to solve the given instance, without computing a decomposition, has been re-derived in [5] (with proof techniques different from those in [8]).", "startOffset": 226, "endOffset": 229}, {"referenceID": 7, "context": "Note that, for the special case of generalized hypertree-width, the fact that enforcing GAC on all clusters of k constraints is sufficient to solve the given instance, without computing a decomposition, has been re-derived in [5] (with proof techniques different from those in [8]).", "startOffset": 277, "endOffset": 280}, {"referenceID": 4, "context": "Moreover, [5] actually provided a stronger result, as it is proved that this property holds even if there is some homomorphically equivalent subproblem having generalized hypertree-width at most k.", "startOffset": 10, "endOffset": 13}, {"referenceID": 1, "context": ", with a fixed maximum number of variables in any constraint scope of every instance of the class), the question has been answered in [2]: \u2200A \u2208 A, k-GAC is correct for every right-hand structure B if, and only if, the core of A has tree width at most k (recall that treewidth and generalized hypertree-width identify the same set of bounded-arity tractable classes).", "startOffset": 134, "endOffset": 137}, {"referenceID": 13, "context": "In fact, for any recursively enumerable class of bounded-arity structures A, it is known that this method is essentially optimal: CSP(A,\u2212) is solvable in polynomial time if, and only if, the cores of the structures in A have bounded treewidth (under standard complexity theoretic assumptions) [15].", "startOffset": 293, "endOffset": 297}, {"referenceID": 14, "context": "Generalized hypertree-width does not characterize all classes of (arbitrary) structures where CSP(A,\u2212) is solvable in polynomial time [16].", "startOffset": 134, "endOffset": 138}, {"referenceID": 6, "context": "It seems that a useful characterization may be obtained by relaxing the typical requirement that views are computable in polynomial time, and by requiring instead that such tasks are fixed-parameter tractable (FPT) [7].", "startOffset": 215, "endOffset": 218}, {"referenceID": 19, "context": "In particular, it has been observed by different authors [22, 4] that there are classes of instances having bounded treewidth modulo homomorphically equivalence for which answers computable in polynomial time cannot be trusted.", "startOffset": 57, "endOffset": 64}, {"referenceID": 3, "context": "In particular, it has been observed by different authors [22, 4] that there are classes of instances having bounded treewidth modulo homomorphically equivalence for which answers computable in polynomial time cannot be trusted.", "startOffset": 57, "endOffset": 64}, {"referenceID": 4, "context": "For instance, the algorithm in [5] solves the no-promise search-problem of computing a homomorphism for a given CSP instance (A,B).", "startOffset": 31, "endOffset": 34}, {"referenceID": 3, "context": "While the structural tractability of deciding whether CSP instances admit solutions has been deeply studied in the literature, the structural tractability of the corresponding computation problem received considerably less attention so far [4], though this is certainly a more appealing problem for practical applications.", "startOffset": 240, "endOffset": 243}, {"referenceID": 13, "context": ", [15]), and both approaches are dealt with in this paper.", "startOffset": 2, "endOffset": 6}, {"referenceID": 13, "context": "Unlike previous approaches that considered additional \u201cvirtual\u201d constraints covering together all possible output variables [15], in this paper possible output variables are described as those variables", "startOffset": 124, "endOffset": 128}, {"referenceID": 13, "context": "Note that this approach does not limit the number of solutions, while in the tractable classes considered in [15] only instances with a polynomial number of (projected) solutions may be dealt with.", "startOffset": 109, "endOffset": 113}, {"referenceID": 0, "context": "(4) For recursively enumerable classes of structures having bounded arity, we exhibit a dichotomy showing that the above tractability result is tight, for DM = treewidth (and assuming FPT 6= W [1]).", "startOffset": 193, "endOffset": 196}, {"referenceID": 3, "context": "This algorithm generalizes to the tree projection framework the enumeration algorithm of projected solutions recently proposed for the special case of treewidth [4].", "startOffset": 161, "endOffset": 164}, {"referenceID": 13, "context": "We speak of \u201cevidence,\u201d instead of saying that our result completely answers the open question in [15, 4], because our dichotomy theorem focuses on classes of structures satisfying the technical property of being closed under taking minors (in fact, the same property assumed in the first dichotomy result on the complexity of the decision problem on classes of graphs [14]).", "startOffset": 98, "endOffset": 105}, {"referenceID": 3, "context": "We speak of \u201cevidence,\u201d instead of saying that our result completely answers the open question in [15, 4], because our dichotomy theorem focuses on classes of structures satisfying the technical property of being closed under taking minors (in fact, the same property assumed in the first dichotomy result on the complexity of the decision problem on classes of graphs [14]).", "startOffset": 98, "endOffset": 105}, {"referenceID": 12, "context": "We speak of \u201cevidence,\u201d instead of saying that our result completely answers the open question in [15, 4], because our dichotomy theorem focuses on classes of structures satisfying the technical property of being closed under taking minors (in fact, the same property assumed in the first dichotomy result on the complexity of the decision problem on classes of graphs [14]).", "startOffset": 369, "endOffset": 373}, {"referenceID": 9, "context": "2 For instance, for any fixed natural number k, the generalized hypertree decomposition method [10] (short: hwk) is associated with the functions l-hwk and r -hwk that, given a CSP instance (A,B), build the pair (l-hwk (A), r -hwk (A,B)) where, for each subset C of at most k constraints from (A,B), there is a view RC such that: (1) var (R l-hwk (A) C ) is the set of all variables occurring in C, and (2) the tuples in Rr-hwk (A,B) C are the solutions of the subproblem encoded by C.", "startOffset": 95, "endOffset": 99}, {"referenceID": 16, "context": "Similarly, the tree decomposition method [19] (twk) is defined as above, but we consider each subset of at most k variables in A instead of each subset of at most k constraints.", "startOffset": 41, "endOffset": 45}, {"referenceID": 2, "context": "A hypergraph H is acyclic iff it has a join tree [3], i.", "startOffset": 49, "endOffset": 52}, {"referenceID": 11, "context": "The problem of deciding whether a pair of hypergraphs has a tree projection is called the tree projection problem, and it has recently been proven to be NP-complete [12].", "startOffset": 165, "endOffset": 169}, {"referenceID": 7, "context": "Note that the result answered a long standing open question [8, 21] about the relationship between the existence of tree projections and (local and global) consistency properties in databases [13].", "startOffset": 60, "endOffset": 67}, {"referenceID": 18, "context": "Note that the result answered a long standing open question [8, 21] about the relationship between the existence of tree projections and (local and global) consistency properties in databases [13].", "startOffset": 60, "endOffset": 67}, {"referenceID": 1, "context": "Note that if we consider decision problem instances (O = \u2205) and the treewidth method (AV = l-twk (A)), from Theorem 2-bis, we (re-)obtain the nice characterization of [2] about the relationship between k-local consistency and treewidth modulo homomorphic equivalence.", "startOffset": 167, "endOffset": 170}, {"referenceID": 4, "context": ", the power of the algorithm for the decision problem described in [5]).", "startOffset": 67, "endOffset": 70}, {"referenceID": 13, "context": "Indeed, the implication (2) \u21d2 (1) in the theorem below easily follows from the well-known dichotomy for the decision version [15], which is obtained in the special case of ECSP instances without output variables (O = \u2205).", "startOffset": 125, "endOffset": 129}, {"referenceID": 0, "context": "Assume FPT 6= W [1].", "startOffset": 16, "endOffset": 19}, {"referenceID": 13, "context": "We also exploit the grid-based construction from [15], whose properties relevant to this paper may be summarized as follows.", "startOffset": 49, "endOffset": 53}, {"referenceID": 13, "context": "Proposition 2 ([15]).", "startOffset": 15, "endOffset": 19}, {"referenceID": 0, "context": "Assume FPT 6= W[1].", "startOffset": 15, "endOffset": 18}, {"referenceID": 17, "context": "From this latter property, by the Excluded Grid Theorem [20] it follows that every grid is a minor of the Gaifman graph of some l-structure in A.", "startOffset": 56, "endOffset": 60}, {"referenceID": 0, "context": "We show that this entails the existence of an FPT algorithm to solve the W[1]-hard problem p-CLIQUE, which of course implies FPT = W[1].", "startOffset": 74, "endOffset": 77}, {"referenceID": 0, "context": "We show that this entails the existence of an FPT algorithm to solve the W[1]-hard problem p-CLIQUE, which of course implies FPT = W[1].", "startOffset": 132, "endOffset": 135}], "year": 2017, "abstractText": "The problem of deciding whether CSP instances admit solutions has been deeply studied in the literature, and several structural tractability results have been derived so far. However, constraint satisfaction comes in practice as a computation problem where the focus is either on finding one solution, or on enumerating all solutions, possibly projected over some given set of output variables. The paper investigates the structural tractability of the problem of enumerating (possibly projected) solutions, where tractability means here computable with polynomial delay (WPD), since in general exponentially many solutions may be computed. A general framework based on the notion of tree projection of hypergraphs is considered, which generalizes all known decomposition methods. Tractability results have been obtained both for classes of structures where output variables are part of their specification, and for classes of structures where computability WPD must be ensured for any possible set of output variables. These results are shown to be tight, by exhibiting dichotomies for classes of structures having bounded arity and where the tree decomposition method is considered.", "creator": "dvips(k) 5.98 Copyright 2009 Radical Eye Software"}}}