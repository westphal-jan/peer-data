{"id": "1005.4446", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-May-2010", "title": "Genetic algorithms and the art of Zen", "abstract": "In this paper we present a novel genetic algorithm (GA) solution to a simple yet challenging commercial puzzle game known as the Zen Puzzle Garden (ZPG). We describe the game in detail, before presenting a suitable encoding scheme and fitness function for candidate solutions. We then compare the performance of the genetic algorithm with that of the A* algorithm. Our results show that the GA is competitive with informed search in terms of solution quality, and significantly out-performs it in terms of computational resource requirements. We conclude with a brief discussion of the implications of our findings for game solving and other \"real world\" problems.", "histories": [["v1", "Mon, 24 May 2010 22:15:57 GMT  (2609kb)", "http://arxiv.org/abs/1005.4446v1", "Submitted"]], "COMMENTS": "Submitted", "reviews": [], "SUBJECTS": "cs.NE cs.AI", "authors": ["jack coldridge", "martyn amos"], "accepted": false, "id": "1005.4446"}, "pdf": {"name": "1005.4446.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["M.Amos@mmu.ac.uk"], "sections": [{"heading": null, "text": "ar Xiv: 100 5.44 46v1 [cs.NE] 2 4M ay2 010I. INTRODUCTIONThe Zen Puzzle Garden (ZPG) [16] is a one-player puzzle game in which a Buddhist monk rakes a sand garden inspired by Japanese garden design (Figure 1 shows, for example, the Komyozenji Temple Garden).A common feature of such gardens is a flat region of sand or small pebbles raked into a pattern.The ZPG is an example of a transport puzzle; these are problems in which the player moves units around a particular domain (e.g. a warehouse), starting with an initial configuration, until they reach predefined target conditions. Units must move according to the constraints of the puzzle and may only move between connected positions (i.e., a unit may not be \"lifted\" and replaced at a position that may be far from its original position)."}, {"heading": "II. PREVIOUS WORK", "text": "For many transport puzzles, the player must travel around a board between predefined start and end positions, and the puzzles can be extended to the board by introducing objects or obstacles that must be collected or moved to meet given constraints. A well-researched example of the transport puzzle is Sokoban [5], [10]. In this game, the player takes control of a warehouse owner whose task is to move boxes around a labyrinth to certain target positions; only one box can be moved at a time, and boxes must not be pulled. This challenge of the puzzle arises from this latter condition, because if a box is pushed into a corner of any construction, the game is lost. An example of a Sokoban puzzle is shown in Figure 2, where the \"boxes\" are displayed as circles, and the target region as a shaded area. Sokoban is known to be the next variant NP-hard [5] [Different solutions to the problem systems, including APG-specific ones] were applied automatically to the problem systems, including the AI and PG-specific ones]."}, {"heading": "III. THE ZEN PUZZLE GARDEN", "text": "In fact, most of them are able to play by the rules they have set themselves, and they are not able to play by the rules they have set themselves."}, {"heading": "IV. TWO METHODS FOR THE ZPG", "text": "In this section, we will describe two solutions for the ZPG: a search tree method and a genetic algorithm (GA). First, we will present a presentation scheme for the game, before describing a general simulator we have built for the game, and then we will explain the A and GA algorithms."}, {"heading": "A. Representation", "text": "In Figure 4 we show a graph-based representation of the ZPG board. Perimeter tiles are represented by colored nodes, and sand tiles according to their coordination on the board. Units representing the player and the obstacles can occupy vertices on the diagram or travel (as far as permitted) along the connecting edges between them. Although not shown in Figure 4, the monk can move freely between perimeter nodes (i.e., the perimeter subgraph is fully connected). Standard game theory [19] defines a game tree as a diagram in which nodes represent play states, with each branch corresponding to a movement. The complete game tree for a problem is the game tree that begins in the initial state and contains every possible movement. Terminal nodes represent the possible states that can terminate the game; either a target state or standstill. The branching factor is the number of children at each node; an exhaustive search of the tree follows each node and the number of total nodes increases in depth."}, {"heading": "B. Simulator", "text": "Attempts to solve commercial games are often hampered by authors \"reluctance to release commercially sensitive source code. Therefore, in order to test the scriptwriters against game boards, we use the same basic approach as Kendall and Spoerer [13], which is to write a simplified version of the game engine, which maintains the essential features of the game in terms of its rules, but disregards the graphical user interface and other\" gaming capability features. \"The same simulator is used by both the genetic algorithm and the informed search. To determine the quality of a (partial) solution for a given garden, the simulator includes an AreaF method to ensure that all the limitations listed in Section 1 are met."}, {"heading": "C. A* solution", "text": "The A * algorithms are a thoroughly researched first search method. It is best that there is an informed approach to deciding which node is most likely to provide the lowest cost distance to a destination state; the order in which the nodes are visited is determined by a remote node being led to a destination; the heuristic function should be that it never overestimates the cost of a path from root to node."}, {"heading": "D. Genetic algorithm solution", "text": "Regarding the current problem, Hong et al. [9] discuss the application of a genetic algorithm to game search trees, in particular to the Latin square problem developed by Leonhard Euler. A successful step consists of selecting a point on the garden perimeter and a transition to the garden surface, followed by zero or more in-motion decisions (the number of decisions to be made is not zero when a raked square or object is encountered), a successful step consists of selecting a point on the garden perimeter and a transition to the garden surface, followed by zero or more in-motion decisions (the number of decisions to be made is not zero when a raked square or object is encountered), resulting in a monk coming back to the perimeter. If a direction choice on a raked square is required, then most have two options available, as the monk cannot move backwards or move to the raked square."}, {"heading": "V. RESULTS", "text": "In fact, most of them will be able to move to a different world in which they are able to live than in a world in which they are able to live, in which they live, to live and to live."}, {"heading": "VI. CONCLUSIONS", "text": "In this paper, we have described a novel genetic algorithm solution for a block-based puzzle that poses significant challenges in terms of the size of its search space, but competes with an informed search in terms of the quality of the solution and significantly exceeds it in terms of its computational resource requirements. We have presented the ZPG to demonstrate the effectiveness of a genetic algorithm solution as well as to encourage further investigation of its properties. Inspired by [14], we would like to explore questions such as \"Is it possible to automatically generate hard and simple cases of the problem?\" and consider the idea of an aesthetically pleasing solution. In addition to providing a useful test basin for new solutions, the problem domain is of real importance when considering the problem of mobile robotics, where a self-avoiding path must be chosen while also taking into account possible obstacles and moving objects."}, {"heading": "ACKNOWLEDGMENTS", "text": "The authors thank Joseph White (author of the ZPG) for the invaluable help with the game, David Corne for useful advice on representation schemes, and David Goldberg [7] and Robert M. Pirsig [20] for the title inspiration."}], "references": [], "referenceMentions": [], "year": 2010, "abstractText": "In this paper we present a novel genetic algo-<lb>rithm (GA) solution to a simple yet challenging commercial<lb>puzzle game known as the Zen Puzzle Garden (ZPG). We<lb>describe the game in detail, before presenting a suitable<lb>encoding scheme and fitness function for candidate solutions.<lb>We then compare the performance of the genetic algorithm<lb>with that of the A* algorithm. Our results show that<lb>the GA is competitive with informed search in terms of<lb>solution quality, and significantly out-performs it in terms<lb>of computational resource requirements. We conclude with<lb>a brief discussion of the implications of our findings for game<lb>solving and other \u201creal world\u201d problems.", "creator": "dvips(k) 5.98 Copyright 2009 Radical Eye Software"}}}