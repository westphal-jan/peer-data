{"id": "1005.4697", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-May-2010", "title": "The Lambek-Grishin calculus is NP-complete", "abstract": "The Lambek-Grishin calculus LG is the symmetric extension of the non-associative Lambek calculus NL. In this paper we prove that the derivability problem for LG is NP-complete.", "histories": [["v1", "Tue, 25 May 2010 20:36:09 GMT  (13kb)", "https://arxiv.org/abs/1005.4697v1", null], ["v2", "Mon, 31 May 2010 20:16:29 GMT  (13kb)", "http://arxiv.org/abs/1005.4697v2", null], ["v3", "Wed, 25 Aug 2010 13:10:44 GMT  (13kb)", "http://arxiv.org/abs/1005.4697v3", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["jeroen bransen"], "accepted": false, "id": "1005.4697"}, "pdf": {"name": "1005.4697.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jeroen Bransen"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 100 5.46 97v3 [cs.CL] 2 5A ug2 01"}, {"heading": "1 Introduction", "text": "In his papers of 1958 and 1961 Lambek formulated two versions of the syntactic calculus: in (Lambek, 1958) types are assigned to strings, which are then combined by an associative operation; in (Lambek, 1961) types are assigned to phrases (brackets), and the composition process is not associative. We refer to these two versions as L or NL. In terms of generative power, Kandulski (1988) showed that NL precisely defines context-free languages. Pentus (1993) showed that the same is true of associative L. In terms of the complexity of the derivation problem, de Groote (1999) showed that this belongs to PTIME for NL; for L, Pentus (2003) showed that the problem NP is complete; and Savateev (2009) showed that NP completeness also applies to the product-free fragment of L. It is known that some natural language phenomena represent a phenomenon beyond this context."}, {"heading": "2 Lambek-Grishin calculus", "text": "s thesis under the direction of Michael Moortgat. I would like to thank him, Rosalie Iemhoff and Arno Bastenhof, for comments and I acknowledge that all errors are mine. Let V ar be a set of primitive types, we use lowercase letters to refer to an element of V ar. Let formulas be constructed with primitive types and binary connectives."}, {"heading": "3 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Derivation length", "text": "In fact, it is the case that most of us are able to keep to the rules that we need in order to put them into practice. (...) In fact, it is the case that each of us is able to keep to the rules. (...) In fact, it is the case that each of us is able to keep to the rules. (...) In fact, it is the case that each of us is able to keep to the rules. (...) In fact, it is the case that each of us is able to keep to keep to himself. (...) It is the case that each of us is able to determine what he wants to do. (...)"}, {"heading": "3.2 Additional notations", "text": "Let us first introduce some additional notations to make the proofs shorter and easier to read.Let us call an input structure X that contains no structural operators except a structure. A structure can be regarded as a binary tree with in the internal nodes and formulas in the sheets. Formally, we define -structures U and V as: U, V: = A | U \u00b7 \u00b7 VWe define X [] and P [] as the input and output structures X and P with a hole in one of their leaves. Formally:"}, {"heading": "X [] ::= [] | X [] \u00b7 \u2297 \u00b7 Y | Y \u00b7 \u2297 \u00b7X [] | X [] \u00b7 \u2298 \u00b7Q | Y \u00b7 \u2298 \u00b7P [] | Q \u00b7; \u00b7X [] | P [] \u00b7; \u00b7Y", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "P [] ::= [] | P [] \u00b7 \u2295 \u00b7Q | Q \u00b7 \u2295 \u00b7 P [] | P [] \u00b7 / \u00b7 Y | Q \u00b7 / \u00b7X [] | Y \u00b7 \\ \u00b7 P [] | X [] \u00b7 \\ \u00b7Q", "text": "This notation is similar to that of de Groote (1999), but with structures. If X [] is a structure with a hole, we write X [Y] for X [] with a hole filled with structure Y. We write X [] for a structure with a hole. Furthermore, we expand the definition of hole to formulas and define A [] as formula A with a hole in it, similar to structures. Note that by A [B] we mean formula A [] with its hole filled with formula B. To distinguish between formulas for input and output polarity, we write A \u2022 for a formula with input polarity and A \u0445 for a formula with output polarity. Note that in structures this is already defined by the use of X and Y for input polarity and P and Q for output polarity."}, {"heading": "3.3 Derived rules of inference", "text": "A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\" \".A\".A \"\".A \".A\".A \".A\".A \".A\".A \".A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\".A \"A\" A \".A\".A \".A\" A \".A\".A \".A\".A \".A\".A \".A\" \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \"\" \".A\".A \".A\".A \"\".A \".A\".A \".A\" \".A\".A \".A\".A \".A\" \".A\" \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \".A\".A \"\".A \".A\".A \".A\".A \".A\" \".A\".A \"\".A \"\" \".A\".A \".A\".A \"\".A \".A\".A \".A\""}, {"heading": "3.4 Type similarity", "text": "The type similarity relationship introduced by Lambek (1958) is the reflexive transitive symmetrical closure of the derivative relationship. Formally, we define it as follows: Definition 1. A \u0445 B iff there is a sequence C1... Cn (1 \u2264 i \u2264 n) so that C1 = A, Cn = B and Ci \u2192 Ci + 1 or Ci + 1 \u2192 Ci for all 1 \u2264 i < n.Lambek has proven that A \u0445 B iff applies one of the following equivalent statements (the so-called diamond property): C so that A \u2192 C and B \u2192 C (connect) D so that D \u2192 A and D \u2192 B (comply) This diamond property is used in the reduction of SAT to make a choice for a truth value of a variable. Definition 2. If A \u0445 B and C is the connection type of A and B, so that A \u2192 C and B \u2192 C, we define A = B (C) as the type of A / C (C)."}, {"heading": "A and B.", "text": "This is also the solution given by Lambek (1958) for the associative system L, but actually this is the shortest solution for the non-associative system NL (Foret, 2003).Lemma 8. If A \u0445 B with connection type C and LG A \u2192 P or LG B \u2192 P, then there is also"}, {"heading": "4 Reduction from SAT to LG", "text": "In this section we will show that we can reduce a Boolean formula in conjunctival normal form to a sequence of the Lambek-Grishin calculation, so that the corresponding LG sequence can be detected if and only if the CNF formula is satisfactory; this has already been done for the associative system L of Pentus (2003) with a similar construction. (for all 1 \u2264 j) (for all 1 \u2264 j) and \u00ac 1xj stand for the literal formula xj \u2212 \u2212 \u2212 now < t1,., tm >, if clauses c1, 1} m provide a satisfactory allocation for the types if and only if for each 1 \u2264 i se."}, {"heading": "4.1 Example", "text": "Let's take the example of the Boolean formula (x1, x2, x1, x2). We have the primitive types {p1, p2} and the types as in Figure 2. The formula is satisfactory (e.g. with the assignment < 1, 0 >), so LG F1 F2 \u2192 G2. A sketch of the derivative is given in Figure 2, some parts will be proved later in lemma's."}, {"heading": "4.2 Intuition", "text": "This year, it is more than ever before in the history of the city."}, {"heading": "5 Proof", "text": "We will now prove the main claim that \"if and only if\" LG. \"First we will prove that\" if, \"then\" LG. \""}, {"heading": "5.1 If-part", "text": "Let us assume that there is an assignment < t1,., tm > (1) m, that we have one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m, one (1) m."}, {"heading": "5.2 Only-if part", "text": "The only thing we know is that when we apply this rule, this rule has to be applied to the occurrence of P Y. Since this rule requires a binding rule, we know that when it is applied to the right, we know that if it has to be applied to the right, we know that when it is applied to the right, the rules have to be applied to the left side of the line. (P Y) It has to be applied somewhere in the derivative of this rule. (P Y) Because this rule requires a binding rule, we know that when it is applied to the left. (P Y) There has to be a unique derivative that we can convert to X Q Y."}, {"heading": "5.3 Conclusion", "text": "Theorem 1. LG is NP-complete. Proof. From Lemma 4 we know that for each derivative sequence there is a proof of polynomial length, therefore the derivative problem for LG lies in NP. From Lemma 18 and Lemma 23 we can conclude that we can reduce SAT to LG. Since SAT is a known NP-hard problem (Garey and Johnson, 1979) and our derivative is polynomial, we can conclude that the derivative problem for LG is also NP-hard. If we combine these two facts, we come to the conclusion that the derivative problem for LG NP is complete."}], "references": [{"title": "The Non-associative Lambek Calculus with Product in Polynomial Time", "author": ["P. de Groote"], "venue": null, "citeRegEx": "Groote,? \\Q1999\\E", "shortCiteRegEx": "Groote", "year": 1999}, {"title": "On the computation of joins for non associative Lambek categorial grammars", "author": ["A. Foret"], "venue": "In Proceedings of the 17th International Workshop on Unification,", "citeRegEx": "Foret,? \\Q2003\\E", "shortCiteRegEx": "Foret", "year": 2003}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "D.S. Johnson"], "venue": null, "citeRegEx": "Garey and Johnson,? \\Q1979\\E", "shortCiteRegEx": "Garey and Johnson", "year": 1979}, {"title": "Substructural logics on display", "author": ["R. Gor\u00e9"], "venue": "Logic Jnl IGPL,", "citeRegEx": "Gor\u00e9,? \\Q1998\\E", "shortCiteRegEx": "Gor\u00e9", "year": 1998}, {"title": "The non-associative Lambek calculus. Categorial Grammar, Linguistic and Literary Studies in Eastern Europe (LLSEE), 25:141\u2013151", "author": ["M. Kandulski"], "venue": null, "citeRegEx": "Kandulski,? \\Q1988\\E", "shortCiteRegEx": "Kandulski", "year": 1988}, {"title": "The Mathematics of Sentence Structure", "author": ["J. Lambek"], "venue": "American Mathematical Monthly,", "citeRegEx": "Lambek,? \\Q1958\\E", "shortCiteRegEx": "Lambek", "year": 1958}, {"title": "On the calculus of syntactic types", "author": ["J. Lambek"], "venue": "Structure of Language and Its Mathematical Aspects,", "citeRegEx": "Lambek,? \\Q1961\\E", "shortCiteRegEx": "Lambek", "year": 1961}, {"title": "The generative capacity of the Lambek-Grishin calculus: A new lower bound", "author": ["M. Melissen"], "venue": "Proceedings 14th conference on Formal Grammar,", "citeRegEx": "Melissen,? \\Q2009\\E", "shortCiteRegEx": "Melissen", "year": 2009}, {"title": "Symmetries in Natural Language Syntax and Semantics: The Lambek-Grishin Calculus. In Logic, Language, Information and Computation, volume 4576 of Lecture Notes in Computer Science, pages 264\u2013284", "author": ["M. Moortgat"], "venue": null, "citeRegEx": "Moortgat,? \\Q2007\\E", "shortCiteRegEx": "Moortgat", "year": 2007}, {"title": "Symmetric categorial grammar", "author": ["M. Moortgat"], "venue": "Journal of Philosophical Logic,", "citeRegEx": "Moortgat,? \\Q2009\\E", "shortCiteRegEx": "Moortgat", "year": 2009}, {"title": "Lambek grammars are context free", "author": ["M. Pentus"], "venue": "In Proceedings of the 8th Annual IEEE Symposium on Logic in Computer Science,", "citeRegEx": "Pentus,? \\Q1993\\E", "shortCiteRegEx": "Pentus", "year": 1993}, {"title": "Lambek calculus is NP-complete", "author": ["M. Pentus"], "venue": "CUNY Ph.D. Program in Computer Science Technical Report TR\u20132003005,", "citeRegEx": "Pentus,? \\Q2003\\E", "shortCiteRegEx": "Pentus", "year": 2003}, {"title": "Product-Free Lambek Calculus Is NP-Complete", "author": ["Y. Savateev"], "venue": "Proceedings of the 2009 International Symposium on Logical Foundations of Computer Science,", "citeRegEx": "Savateev,? \\Q2009\\E", "shortCiteRegEx": "Savateev", "year": 2009}], "referenceMentions": [{"referenceID": 5, "context": "In his 1958 and 1961 papers, Lambek formulated two versions of the Syntactic Calculus : in (Lambek, 1958), types are assigned to strings, which are then combined by an associative operation; in (Lambek, 1961), types are assigned to phrases (bracketed strings), and the composition operation is non-associative.", "startOffset": 91, "endOffset": 105}, {"referenceID": 6, "context": "In his 1958 and 1961 papers, Lambek formulated two versions of the Syntactic Calculus : in (Lambek, 1958), types are assigned to strings, which are then combined by an associative operation; in (Lambek, 1961), types are assigned to phrases (bracketed strings), and the composition operation is non-associative.", "startOffset": 194, "endOffset": 208}, {"referenceID": 3, "context": "As for generative power, Kandulski (1988) proved thatNL defines exactly the context-free languages.", "startOffset": 25, "endOffset": 42}, {"referenceID": 3, "context": "As for generative power, Kandulski (1988) proved thatNL defines exactly the context-free languages. Pentus (1993) showed that this also holds for associative L.", "startOffset": 25, "endOffset": 114}, {"referenceID": 0, "context": "As for the complexity of the derivability problem, de Groote (1999) showed that for NL this belongs to PTIME; for L, Pentus (2003) proves that the problem is NP-complete and Savateev (2009) shows that NP-completeness also holds for the product-free fragment of L.", "startOffset": 54, "endOffset": 68}, {"referenceID": 0, "context": "As for the complexity of the derivability problem, de Groote (1999) showed that for NL this belongs to PTIME; for L, Pentus (2003) proves that the problem is NP-complete and Savateev (2009) shows that NP-completeness also holds for the product-free fragment of L.", "startOffset": 54, "endOffset": 131}, {"referenceID": 0, "context": "As for the complexity of the derivability problem, de Groote (1999) showed that for NL this belongs to PTIME; for L, Pentus (2003) proves that the problem is NP-complete and Savateev (2009) shows that NP-completeness also holds for the product-free fragment of L.", "startOffset": 54, "endOffset": 190}, {"referenceID": 0, "context": "As for the complexity of the derivability problem, de Groote (1999) showed that for NL this belongs to PTIME; for L, Pentus (2003) proves that the problem is NP-complete and Savateev (2009) shows that NP-completeness also holds for the product-free fragment of L. It is well known that some natural language phenomena require generative capacity beyond context-free. Several extensions of the Syntactic Calculus have been proposed to deal with such phenomena. In this paper we look at the Lambek-Grishin calculus LG (Moortgat, 2007, 2009). LG is a symmetric extension of the nonassociative Lambek calculus NL. In addition to \u2297, \\, / (product, left and right division), LG has dual operations \u2295,;,\u2298 (coproduct, left and right difference). These two families are related by linear distributivity principles. Melissen (2009) shows that all languages which are the intersection of a context-free language and the permutation closure of a context-free language are recognizable in LG.", "startOffset": 54, "endOffset": 822}, {"referenceID": 3, "context": "The axioms and inference rules are presented in Figure 1, where we use the display logic from (Gor\u00e9, 1998), but with different symbols for the structural connectives.", "startOffset": 94, "endOffset": 106}, {"referenceID": 3, "context": "The axioms and inference rules are presented in Figure 1, where we use the display logic from (Gor\u00e9, 1998), but with different symbols for the structural connectives. It has been proven by Moortgat (2007) that we have Cut admissibility for LG.", "startOffset": 95, "endOffset": 205}, {"referenceID": 0, "context": "P [] ::= [] | P [] \u00b7 \u2295 \u00b7Q | Q \u00b7 \u2295 \u00b7 P [] | P [] \u00b7 / \u00b7 Y | Q \u00b7 / \u00b7X [] | Y \u00b7 \\ \u00b7 P [] | X [] \u00b7 \\ \u00b7Q This notation is similar to the one of de Groote (1999) but with structures.", "startOffset": 141, "endOffset": 155}, {"referenceID": 5, "context": "The type simililarity relation \u223c, introduced by Lambek (1958), is the reflexive transitive symmetric closure of the derivability relation.", "startOffset": 48, "endOffset": 62}, {"referenceID": 1, "context": "This is also the solution given by Lambek (1958) for the associative system L, but in fact this is the shortest solution for the non-associative system NL (Foret, 2003).", "startOffset": 155, "endOffset": 168}, {"referenceID": 4, "context": "This is also the solution given by Lambek (1958) for the associative system L, but in fact this is the shortest solution for the non-associative system NL (Foret, 2003).", "startOffset": 35, "endOffset": 49}, {"referenceID": 5, "context": "In this section we will show that we can reduce a Boolean formula in conjunctive normal form to a sequent of the Lambek-Grishin calculus, so that the corresponding LG sequent is provable if and only if the CNF formula is satisfiable. This has already been done for the associative system L by Pentus (2003) with a similar construction.", "startOffset": 113, "endOffset": 307}, {"referenceID": 2, "context": "Because SAT is a known NP-hard problem (Garey and Johnson, 1979), and our reduction is polynomial, we can conclude that derivability for LG is also NP-hard.", "startOffset": 39, "endOffset": 64}], "year": 2017, "abstractText": "The Lambek-Grishin calculus LG is the symmetric extension of the non-associative Lambek calculus NL. In this paper we prove that the derivability problem for LG is NP-complete.", "creator": "LaTeX with hyperref package"}}}