{"id": "1006.3215", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jun-2010", "title": "Solving Functional Constraints by Variable Substitution", "abstract": "Functional constraints and bi-functional constraints are an important constraint class in Constraint Programming (CP) systems, in particular for Constraint Logic Programming (CLP) systems. CP systems with finite domain constraints usually employ CSP-based solvers which use local consistency, for example, arc consistency. We introduce a new approach which is based instead on variable substitution. We obtain efficient algorithms for reducing systems involving functional and bi-functional constraints together with other non-functional constraints. It also solves globally any CSP where there exists a variable such that any other variable is reachable from it through a sequence of functional constraints. Our experiments on random problems show that variable elimination can significantly improve the efficiency of solving problems with functional constraints.", "histories": [["v1", "Wed, 16 Jun 2010 13:49:16 GMT  (504kb)", "http://arxiv.org/abs/1006.3215v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO cs.PL", "authors": ["yuanlin zhang", "roland h c yap"], "accepted": false, "id": "1006.3215"}, "pdf": {"name": "1006.3215.pdf", "metadata": {"source": "CRF", "title": "Solving Functional Constraints by Variable Substitution", "authors": ["YUANLIN ZHANG"], "emails": ["yzhang@cs.ttu.edu)", "ryap@comp.nus.edu.sg)"], "sections": [{"heading": null, "text": "ar Xiv: 100 6,32 15v1 ["}, {"heading": "To appear in Theory and Practice of Logic Programming (TPLP).", "text": "Key concepts: programming of forced logic, problem of satisfaction with constraints, functional constraints, variable substitution, consistency of the arc"}, {"heading": "1 Introduction", "text": "This year is the highest in the history of the country."}, {"heading": "2 Preliminaries", "text": "In fact, it is so that most people are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are not able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves. (...) Most of them are able to identify themselves."}, {"heading": "3 Variable Substitution and Elimination Using Binary Functional Constraints", "text": "We introduce the idea of variable substitution. (N, D, C) We introduce the idea of variable substitution. (D, C) We introduce the idea of variable substitution. (D, C) We introduce the idea of variable substitution. (D, C) We introduce the idea of variable substitution. (D, C) We introduce the idea of variable substitution. (D) We present the idea of variable substitution. (D, C) We present the idea of variable substitution. (D, C) We present the idea of variable substitution. (D, C) We present the idea of variable substitution. (D, C) We present the idea of variable substitution. (D, C) We have the idea of variable substitution. (D, C) We have the idea of variable substitution. (D, C) We have the idea of variable substitution. (D) We introduce the idea of variable substitution. (D, C) We introduce the idea of variable substitution."}, {"heading": "4 Elimination Algorithms for CSPs with Functional Constraints and Non-Functional Constraints", "text": "The idea of variable elimination (definition 4 in section 3) can be used to reduce a CSP in the following way: 1) if the CSP is also functional to i (i.e.), cij in bifunctional form is limited to either i or j in some other functional form, if there is another constraint that cannot be limited by any other condition; 2) that is not limited by any other condition in C.As a trivial example, a CSP without functional limitations is in canonical functional form. If a CSP contains functional limitations, it is contained in a functional form, it is intuitive in a functional form."}, {"heading": "5 Experimental Results", "text": "In fact, most people who live in Germany also live in other countries."}, {"heading": "5.1 Search Space Reduction through Elimination", "text": "The experiments show that elimination could significantly reduce the search space. In fact, we can show that elimination can help reduce the size of the search space (in terms of the current ranges of variables)."}, {"heading": "6 Beyond Binary Constraints", "text": "In order to model real-life problems, nonbinary constraints are often useful. In this section, we discuss the possible extension of the work reported in this paper. The first subsection is to generalize the substitution of nonbinary constraints in an extensive form, and the second proposes an approach to processing nonbinary constraints in an intensive form."}, {"heading": "6.1 Variable Elimination and Non-binary Functional Constraints", "text": "In this context we have to deal with another problem, namely with a problem that has developed in the way it has, how it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way and in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it in the way it is in the way it is in the way it in the way it is in the way it is in the way it in the way it is in the way it in the way it is in the way it is in the way it in the way it is in the way it is in the way it in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is in the way it is the way it is in the way it is in the way it is in the way it is in the way it is in the way it is"}, {"heading": "6.2 Variable Elimination and Non-binary Constraints", "text": "In this case, it is possible that we follow the definition in relation to an existing CP system."}, {"heading": "7 Related Work", "text": "We will now discuss variable substitution in the context of CLP, followed by related work in variable substitution algorithms from other fields. Finally, the relationship to functional, bifunctional and other elimination approaches of variables in the CSP literature."}, {"heading": "7.1 CLP and Constraint Solving", "text": "A more complex example is CLP (R) (Jaffar et al. 1992), which has constraints on finite trees and arithmetic. Variables in arithmetic constraints are replaced by a parametric normal form, which is used during unification and also in solving arithmetic constraints. Our approach is compatible with such CLP solvers, which reduce the subject memory to a normal form by variable substitution. We point out that any CLP language or system that has constraints in finite areas will deal with bi-functional constraints simply because of the need to align an atom in the body with the head of a rule. The question is how powerful is the applied approach. In this paper we show that a variable substitution approach is more powerful than just simple constraints in finite areas, simply because there is a need to align an atom in the body with the head of a rule."}, {"heading": "7.2 Unification, Gaussian Elimination, and Elimination Algorithm for Functional Constraints", "text": "This year, it has come to the point where it will be able to take the lead in the way it has done in the past: in the way it has done in the past, in the time it has had to do and in the time it has to do, in the time it has to do, in the time it has to do, in the time it has to do, in the time it has to do."}, {"heading": "7.3 Functional Constraints and Variable Elimination in CSP", "text": "In fact, most people are able to decide for themselves what they want and what they want."}, {"heading": "8 Conclusion", "text": "Compared to previous work on bifunctional and functional limitations, the new method is not only conceptually simple and intuitive, but also reflects the fundamental property of functional limitations. For a binary CSP with both functional and non-functional limitations, an algorithm is presented to transform it into O (ed2) into a canonical functional form. This leads to a significant simplification of CSP in terms of functional limitations. In some cases, as one of our results (episode 2) shows, the CSP is already solved. Otherwise, the canonical form can be solved by ignoring the eliminated variables, which means, for example, that the search only has to solve a smaller problem than the problem before variable substitution (or elimination). Our experiments show that variable elimination can be significant (in some cases up to several general orders of magnitude), with the non-functional limitations that are less likely to be solved."}, {"heading": "Acknowledgments", "text": "We thank Chendong Li for his help in implementing the elimination algorithm and conducting some experiments in the early stages of this research, and Satyanarayana Marisetti for creating the code for generating random functional constraints and the order of functional elimination. Parts of this work were supported by the National Univ. of Singapore, Grant 252-000-303-112."}], "references": [{"title": "A labelling arc consistency method for functional constraints", "author": ["M.S. Affane", "H. Bennaceur"], "venue": "Proceedings of the Second International Conference on Principles and Practice of Constraint Programming. Lecture Notes in Computer Science, vol. 1118. Springer, 16\u201330.", "citeRegEx": "Affane and Bennaceur,? 1996", "shortCiteRegEx": "Affane and Bennaceur", "year": 1996}, {"title": "An optimal coarse-grained arc consistency algorithm", "author": ["C. Bessiere", "J. Regin", "R.H.C. Yap", "Y. Zhang"], "venue": "Artificial Intelligence 165, 2, 165\u2013185.", "citeRegEx": "Bessiere et al\\.,? 2005", "shortCiteRegEx": "Bessiere et al\\.", "year": 2005}, {"title": "Linear equation solving for constraint logic programming", "author": ["J. Burg", "P.J. Stuckey", "J. Tai", "R.H.C. Yap"], "venue": "Proceedings of the 12th International Conference on Logic Programming. MIT Press, 33\u201347.", "citeRegEx": "Burg et al\\.,? 1995", "shortCiteRegEx": "Burg et al\\.", "year": 1995}, {"title": "Characterizing tractable constraints", "author": ["M.C. Cooper", "D.A. Cohen", "P.G. Jeavons"], "venue": "Artificial Intelligence 65, 2, 347\u2013361.", "citeRegEx": "Cooper et al\\.,? 1994", "shortCiteRegEx": "Cooper et al\\.", "year": 1994}, {"title": "Using pivot consistency to decompose and solve functional CSPs", "author": ["P. David"], "venue": "Journal of Artificial Intelligence Research 2, 447\u2013474.", "citeRegEx": "David,? 1995", "shortCiteRegEx": "David", "year": 1995}, {"title": "Bucket elimination: A unifying framework for reasoning", "author": ["R. Dechter"], "venue": "Artificial Intelligence 113, 1-2, 41\u201385.", "citeRegEx": "Dechter,? 1999", "shortCiteRegEx": "Dechter", "year": 1999}, {"title": "A practically efficient and almost linear unification algorithm", "author": ["G. Escala-Imas", "M. Ghallab"], "venue": "Artificial Intelligence 36, 2, 249\u2013263.", "citeRegEx": "Escala.Imas and Ghallab,? 1988", "shortCiteRegEx": "Escala.Imas and Ghallab", "year": 1988}, {"title": "Constraint Logic Programming", "author": ["J. Jaffar", "M.J. Maher"], "venue": "Journal of Logic Programming 19/20, 503\u2013581.", "citeRegEx": "Jaffar and Maher,? 1994", "shortCiteRegEx": "Jaffar and Maher", "year": 1994}, {"title": "The CLP(R) language and system", "author": ["J. Jaffar", "S. Michaylov", "P.J. Stuckey", "R.H.C. Yap"], "venue": "ACM Transactions on Programming Languages and Systems 14, 3, 339\u2013395.", "citeRegEx": "Jaffar et al\\.,? 1992", "shortCiteRegEx": "Jaffar et al\\.", "year": 1992}, {"title": "Fast parallel constraint satisfaction", "author": ["L.M. Kirousis"], "venue": "Artificial Intelligence 64, 1, 147\u2013160.", "citeRegEx": "Kirousis,? 1993", "shortCiteRegEx": "Kirousis", "year": 1993}, {"title": "Increasing functional constraints need to be checked only once", "author": ["B. Liu"], "venue": "Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence. Morgan Kaufmann, 119\u2013125.", "citeRegEx": "Liu,? 1995", "shortCiteRegEx": "Liu", "year": 1995}, {"title": "Linear unification", "author": ["M.S. Paterson", "M.N. Wegman"], "venue": "Journal of Computer and System Sciences 16, 2, 158\u2013167.", "citeRegEx": "Paterson and Wegman,? 1978", "shortCiteRegEx": "Paterson and Wegman", "year": 1978}, {"title": "Views and iterators for generic constraint implementations", "author": ["C. Schulte", "G. Tack"], "venue": "Recent Advances in Constraints, Joint ERCIM/CoLogNET International Workshop on Constraint Solving and Constraint Logic Programming. Lecture Notes in Computer Science, vol. 3978. Springer, 118\u2013132.", "citeRegEx": "Schulte and Tack,? 2005", "shortCiteRegEx": "Schulte and Tack", "year": 2005}, {"title": "Forward reasoning and dependency-directed backtracking in a system for computer-aided circuit analysis", "author": ["R.M. Stallman", "G.J. Sussman"], "venue": "Artificial Intelligence 9, 2, 135\u2013196.", "citeRegEx": "Stallman and Sussman,? 1977", "shortCiteRegEx": "Stallman and Sussman", "year": 1977}, {"title": "A generic arc-consistency algorithm and its specializations", "author": ["P. Van Hentenryck", "Y. Deville", "C.M. Teng"], "venue": "Artificial Intelligence 57, 2-3, 291\u2013321.", "citeRegEx": "Hentenryck et al\\.,? 1992", "shortCiteRegEx": "Hentenryck et al\\.", "year": 1992}, {"title": "Incrementally solving functional constraints", "author": ["Y. Zhang", "R.H.C. Yap"], "venue": "Proceedings of the Eighteenth National Conference on Artificial Intelligence. AAAI press, 973\u2013974.", "citeRegEx": "Zhang and Yap,? 2002", "shortCiteRegEx": "Zhang and Yap", "year": 2002}, {"title": "Functional elimination and 0/1/all constraints", "author": ["Y. Zhang", "R.H.C. Yap", "J. Jaffar"], "venue": "Proceedings of the Sixteenth National Conference on Artificial Intelligence. AAAI Press, 275\u2013281.", "citeRegEx": "Zhang et al\\.,? 1999", "shortCiteRegEx": "Zhang et al\\.", "year": 1999}, {"title": "Efficient algorithms for functional constraints", "author": ["Y. Zhang", "R.H.C. Yap", "C. Li", "S. Marisetti"], "venue": "Proceedings of the 24th International Conference on Logic Programming. Lecture Notes in Computer Science, vol. 5366. Springer, 606\u2013620.", "citeRegEx": "Zhang et al\\.,? 2008", "shortCiteRegEx": "Zhang et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 13, "context": "Functional constraints are a common class of constraints occurring in Constraint Satisfaction Problem(s) (CSP) (Stallman and Sussman 1977; Van Hentenryck et al. 1992; Kirousis 1993).", "startOffset": 111, "endOffset": 181}, {"referenceID": 9, "context": "Functional constraints are a common class of constraints occurring in Constraint Satisfaction Problem(s) (CSP) (Stallman and Sussman 1977; Van Hentenryck et al. 1992; Kirousis 1993).", "startOffset": 111, "endOffset": 181}, {"referenceID": 4, "context": "Most work on solving functional constraints follows the approach in CSP which is based on arc or path consistency (Van Hentenryck et al. 1992; David 1995).", "startOffset": 114, "endOffset": 154}, {"referenceID": 17, "context": "3 A preliminary version of this paper appeared in (Zhang et al. 2008).", "startOffset": 50, "endOffset": 69}, {"referenceID": 9, "context": "In scene labeling problems (Kirousis 1993), there are many functional constraints and other special constraints.", "startOffset": 27, "endOffset": 42}, {"referenceID": 16, "context": "In this paper, the definition of functional constraints is different from the one in (Zhang et al. 1999; Van Hentenryck et al. 1992) where constraints are functional on each of its variables, leading to the following notion.", "startOffset": 85, "endOffset": 132}, {"referenceID": 4, "context": "A bi-functional constraint is called bijective in (David 1995).", "startOffset": 50, "endOffset": 62}, {"referenceID": 12, "context": "In fact, the synchronization of the domains of the shadow and shadowed variables (for example, u and y above) seems be readily implementable using the concept of views (Schulte and Tack 2005).", "startOffset": 168, "endOffset": 191}, {"referenceID": 7, "context": "Logic Programming and CLP (Jaffar and Maher 1994) systems often make use of variable substitution and elimination.", "startOffset": 26, "endOffset": 49}, {"referenceID": 8, "context": "A more complex example is CLP(R) (Jaffar et al. 1992) which has constraints on finite trees and arithmetic.", "startOffset": 33, "endOffset": 53}, {"referenceID": 11, "context": "In fact, given a term equation, it can be unified in linear time by finding a good variable ordering (Paterson and Wegman 1978).", "startOffset": 101, "endOffset": 127}, {"referenceID": 2, "context": "If the newly added constraint is a binary linear equation, it has been observed that one can improve the efficiency by choosing properly a variable to eliminate from the two involved in the equation (Burg et al. 1995).", "startOffset": 199, "endOffset": 217}, {"referenceID": 15, "context": "For elimination using bi-functional constraints, the one involved in a lesser number of earlier constraints will be eliminated (Zhang and Yap 2002).", "startOffset": 127, "endOffset": 147}, {"referenceID": 6, "context": "In the case of unification, when there are several variables that can be eliminated, we choose the one that is involved in less number of constraints too (for example, (Escala-Imas and Ghallab 1988)).", "startOffset": 168, "endOffset": 198}, {"referenceID": 6, "context": "The variable selection idea, together with the disjoint set data structure and union-find algorithm, had led to almost linear algorithms in (Escala-Imas and Ghallab 1988; Zhang and Yap 2002).", "startOffset": 140, "endOffset": 190}, {"referenceID": 15, "context": "The variable selection idea, together with the disjoint set data structure and union-find algorithm, had led to almost linear algorithms in (Escala-Imas and Ghallab 1988; Zhang and Yap 2002).", "startOffset": 140, "endOffset": 190}, {"referenceID": 1, "context": "1 (O(ed)) (Bessiere et al. 2005) for arbitrary binary constraints.", "startOffset": 10, "endOffset": 32}, {"referenceID": 10, "context": "A fast AC algorithm for a special class of increasing bi-functional constraints was also proposed in (Liu 1995).", "startOffset": 101, "endOffset": 111}, {"referenceID": 0, "context": "A new type of consistency, label-arc consistency, was introduced in (Affane and Bennaceur 1996) and they showed that bi-functional constraints with limited extensions to other constraints can be (globally) solved, but no detailed analysis of their algorithms is given.", "startOffset": 68, "endOffset": 95}, {"referenceID": 16, "context": "In (Zhang et al. 1999), we proposed a variable elimination method to solve bi-functional constraints in O(ed).", "startOffset": 3, "endOffset": 22}, {"referenceID": 3, "context": "Bi-functional constraints also belong to the class of \u201cZero/One/All\u201d constraints which was shown to be one of the earliest classes of tractable constraints (Cooper et al. 1994).", "startOffset": 156, "endOffset": 176}, {"referenceID": 3, "context": "What was not realized in (Cooper et al. 1994; Zhang et al. 1999) was that because the concern was the tractability of the class of Zero/One/All constraints, the importance of variable substitution and class of functional constraints was missed.", "startOffset": 25, "endOffset": 64}, {"referenceID": 16, "context": "What was not realized in (Cooper et al. 1994; Zhang et al. 1999) was that because the concern was the tractability of the class of Zero/One/All constraints, the importance of variable substitution and class of functional constraints was missed.", "startOffset": 25, "endOffset": 64}, {"referenceID": 4, "context": "David introduced pivot consistency for binary functional constraints in (David 1995).", "startOffset": 72, "endOffset": 84}, {"referenceID": 5, "context": "Another related approach is bucket elimination (Dechter 1999).", "startOffset": 47, "endOffset": 61}, {"referenceID": 5, "context": "Another methodologically related work is bucket elimination (Dechter 1999).", "startOffset": 60, "endOffset": 74}], "year": 2017, "abstractText": "Functional constraints and bi-functional constraints are an important constraint class in Constraint Programming (CP) systems, in particular for Constraint Logic Programming (CLP) systems. CP systems with finite domain constraints usually employ CSP-based solvers which use local consistency, for example, arc consistency. We introduce a new approach which is based instead on variable substitution. We obtain efficient algorithms for reducing systems involving functional and bi-functional constraints together with other non-functional constraints. It also solves globally any CSP where there exists a variable such that any other variable is reachable from it through a sequence of functional constraints. Our experiments on random problems show that variable elimination can significantly improve the efficiency of solving problems with functional constraints. To appear in Theory and Practice of Logic Programming (TPLP).", "creator": "LaTeX with hyperref package"}}}