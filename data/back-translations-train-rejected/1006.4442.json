{"id": "1006.4442", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2010", "title": "On the Implementation of the Probabilistic Logic Programming Language ProbLog", "abstract": "The past few years have seen a surge of interest in the field of probabilistic logic learning and statistical relational learning. In this endeavor, many probabilistic logics have been developed. ProbLog is a recent probabilistic extension of Prolog motivated by the mining of large biological networks. In ProbLog, facts can be labeled with probabilities. These facts are treated as mutually independent random variables that indicate whether these facts belong to a randomly sampled program. Different kinds of queries can be posed to ProbLog programs. We introduce algorithms that allow the efficient execution of these queries, discuss their implementation on top of the YAP-Prolog system, and evaluate their performance in the context of large networks of biological entities.", "histories": [["v1", "Wed, 23 Jun 2010 08:05:34 GMT  (104kb,D)", "http://arxiv.org/abs/1006.4442v1", "28 pages; To appear in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "28 pages; To appear in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.PL cs.LG cs.LO", "authors": ["angelika kimmig", "bart demoen", "luc de raedt", "v\\'itor santos costa", "ricardo rocha"], "accepted": false, "id": "1006.4442"}, "pdf": {"name": "1006.4442.pdf", "metadata": {"source": "CRF", "title": "On the Implementation of the Probabilistic Logic Programming Language ProbLog", "authors": ["Angelika Kimmig", "Bart Demoen", "Luc De Raedt", "Ricardo Rocha"], "emails": ["Angelika.Kimmig@cs.kuleuven.be)", "Bart.Demoen@cs.kuleuven.be)", "Luc.DeRaedt@cs.kuleuven.be)", "vsc@dcc.fc.up.pt)", "ricroc@dcc.fc.up.pt)"], "sections": [{"heading": "1 Introduction", "text": "In recent years, it has been shown that people are able to survive on their own, and that they are able to survive on their own if they do not. (...) It is not that they do it. (...) It is not that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...) It is that they do it. (...). (...) It is that they do it. (...) It is that they do it as if they do it. (...).)......................................."}, {"heading": "2 ProbLog", "text": "A ProbLog program consists of a set of facts described pi:: ci together with a set of definitive clauses. (That is, each instance contains no variables) of such a fact is true with probability pi, that is, these facts correspond to random variables. We assume that these variables are mutually independent of each other. (The definitive clauses allow to add any background knowledge (BK). (Figure 1 shows a small probability graph that we will use as a running example for the text.) It can be encoded in ProbLog as follows: 0. 8: edge (a, c). 0. 7: edge (a, b). 8: edge (e). 0. 9: edge (b, c). 0. 5: edge (e, d)."}, {"heading": "3 Inference in ProbLog", "text": "This section discusses algorithms for calculating the probabilities of success and explanation of ProbLog queries accurately or approximately. Additionally, a new algorithm for the Monte Carlo approximation of the probabilities of success is provided."}, {"heading": "3.1 Exact Inference", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "3.2 Approximative Inference", "text": "As the size of the DNF formula increases with the amount of evidence, its evaluation can become quite expensive and ultimately unfeasible. For example, when searching for paths in graphs or networks, even in small networks with a few dozen edges, there are easily O (106) possible paths between two nodes. ProbLog therefore includes several approximation methods."}, {"heading": "3.2.1 Bounded Approximation", "text": "The first approximation is that the probability of a gathering of evidence is highest. (De Raedt et al. 2007), uses DNF formulas to reach both an upper and a lower limit. (De Raedt et al.). (De Raedt et al.). (De Raedt et al}, {"heading": "3.2.2 K-Best", "text": "The use of a fixed number of proofs to approximate probability allows a better control of the overall complexity, which is crucial when a large number of queries need to be evaluated, e.g. in the context of parameter learning. (Gutmann et al. 2008) therefore introduces the k probability Pk (q | T), which approaches the probability of success by introducing the k -best (i.e. the k-most likely) explanations instead of all the proofs used in the creation of the DNF formula used in the equation (7): Pk (q | T) = P-e-Ek (q), bi-var (e) bi (8), where Ek (q) = {e-E (q) | Px (ek)} with the kest element of E (q)} sorts by the non-increasing probability. The placement k = 3fs leads to the probability of success, while k = 1 corresponds to the probability of explanation, if there is a single proof."}, {"heading": "3.2.3 Monte Carlo", "text": "As an alternative approximation technique, we propose a Monte Carlo method, in which we proceed as follows: Execute to convergence: 1. Sample a logic program from the ProbLog program 2. Verify the presence of evidence for the query of interest 3. Estimate the query probability P as a fraction of the samples for which the query can be proved.We estimate the convergence by measuring the 95% confidence interval at each m sample.Given a large number of N sample.However, we can use the standard normal approximation interval for the binomial distribution: \u03b4 \u2248 2 \u00d7 P \u00b7 (P \u2212 1) Notice that confidence intervals do not directly correspond to the exact limits used in our previous approximation algorithm. Nevertheless, we use the same stop criterion, i.e. we run the Monte Carlo simulation until the width of the confidence interval is no more than one percent."}, {"heading": "4 Implementation", "text": "In fact, the fact is that most of them are able to move, to move and to move."}, {"heading": "4.1 Source-to-source transformation", "text": "For example, the program: 0. 715:: edge (\"PubMed 2196878,\" \"MIM 609065\"). 0. 659:: edge (\"PubMed 8764571,\" \"HGNC 5014\"). (9) would be compiled as: edge (\"A, B,\" \"LogProb\"), erding id (\"Rand (\" A, B), ID, GroundID), add to proof (\"GroundID,\" \"LogProb\"). problog edge (0 \"PubMed 2196878,\" \"MIM 609065,\" \u2212 0. 3348). problog edge (1 \"PubMed 8764571,\" HGNC 5014, \"\u2212 0. 4166). (MI10),\" 9065, \"MIM \u2212 6065,\" \u2212 60M."}, {"heading": "4.2 Proof Manipulation", "text": "We present each evidence as a queue containing the identifier of each probability statement used in the evidence, ordered by first use. Implementation requires calls to ungrounded probability statement to be grounded, and during the evidence maintains a table with the probability statement used in the current query along with their identifiers. Grounding identifiers are based on the fact statement supplemented by an earthing number, i.e. 5 1 and 5 2 would refer to different earths of the ungrounded fact with the identifier 5. In our implementation, the queue is stored in a traceable global variable, which is updated by adding an identifier for the current ProbLog fact to the evidence. Therefore, we use Prolog's background tracking mechanism to avoid recalculation of common evidence for prefixes when we examine the space of evidence. Storing a proof is simply a question of the value of the addendum of the actual number we have discussed above."}, {"heading": "4.3 Sets of Proofs", "text": "This year, it has come to the point that it has never come as far as it has this year."}, {"heading": "4.4 Binary Decision Diagrams", "text": "Dre rf\u00fc ide rf\u00fc ide rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the ref\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc"}, {"heading": "4.5 Monte Carlo", "text": "The Monte Carlo implementation is shown in Algorithm 4. It receives a query q, an acceptance threshold \u03b4p =, and a constant m to determine the number of samples generated per iteration. At the end of each iteration, it estimates the probability p as a fraction of the programs sampled over all previous iterations that carried the query, and the confidence interval width to be used in the stop criterion, as explained in Section 3.2.3. Monte Carlo execution differs significantly from the previously discussed approaches, as the two main steps (a) are the generation of an example program and (b) the execution of the standard refutation on the sample. So, instead of combining a large number of proofs, we need a large number of different programs or samples. Our first approach was to generate a complete sample and verify for proof. To speed up the process, evidence f was cached in a trie to jump to a new sample."}, {"heading": "5 Experiments", "text": "We conducted experiments with our implementation of ProbLog in the context of the biological network we have applied as we apply it (Sevon et al. 2006), using two subgraphs evaluated around three known genes to be associated with Alzheimer's disease (HGNC numbers 983, 620 and 582), as well as the complete network. The smaller graphs were used for the best paths of length 2 (resulting in a small network in which probabilities of success of length 3 can be calculated), starting from one of the three genes. Small contains 79 nodes and 144 edges, medium 5220 nodes and 11532 edges. We used Small for a first comparison of our algorithms on a small network in which probabilities of success can be calculated accurately. Scalability was assessed with both medium and with the entire biomine network with approximately 1,000,000 nodes and 6,000,000 edges. In all the experiments we evaluated the probabilities that are associated with each other, we found the two nodes above."}, {"heading": "6 Conclusions", "text": "ProbLog is a simple but elegant type of programming language that allows an explicit representation of uncertainties based on probability factors that prove to be inevitable. Language is a simple and natural extension of the Prolog logical programming language. We have an efficient implementation of the ProbLog language at the top of the ProbLog system, which is designed for major problems. We have shown that ProbLog can fall back on both explanations and approximations of probabilities of success in a large database. To the best of our knowledge, ProbLog is the first example of a likely programming language that can access such large databases."}, {"heading": "Acknowledgements", "text": "We would like to thank Hannu Toivonen, Bernd Gutmann and Kristian Kersting for their many contributions to ProbLog, the biomine team for the application and Theofrastos Mantadelis for the development of SimpleCUDD. Partly this work is supported by the GOA project 2008 / 08 Probabilistic Logic Learning. Angelika Kimmig is supported by the Research Foundation Flanders (FWO-Vlaanderen), partly by V\u0131tor Santos Costa and Ricardo Rocha from the research projects STAMPA (PTDC / EIA / 67738 / 2006) and JEDI (PTDC / EIA / 66924 / 2006) as well as by Fundac."}], "references": [{"title": "Associative Commutative Discrimination Nets", "author": ["L. Bachmair", "T. Chen", "I.V. Ramakrishnan"], "venue": "International Joint Conference on Theory and Practice of Software Development. LNCS, vol. 668. Springer, 61\u201374.", "citeRegEx": "Bachmair et al\\.,? 1993", "shortCiteRegEx": "Bachmair et al\\.", "year": 1993}, {"title": "Graph-based algorithms for boolean function manipulation", "author": ["R.E. Bryant"], "venue": "IEEE Trans. Computers 35, 8, 677\u2013691.", "citeRegEx": "Bryant,? 1986", "shortCiteRegEx": "Bryant", "year": 1986}, {"title": "Stochastic logic programs: Sampling, inference and applications", "author": ["J. Cussens"], "venue": "Uncertainty in Artificial Intelligence, C. Boutilier and M. Goldszmidt, Eds. Morgan Kaufmann, 115\u2013122.", "citeRegEx": "Cussens,? 2000", "shortCiteRegEx": "Cussens", "year": 2000}, {"title": "Efficient query evaluation on probabilistic databases", "author": ["N.N. Dalvi", "D. Suciu"], "venue": "International Conference on Very Large Databases, M. A. Nascimento, M. T. \u00d6zsu, D. Kossmann, R. J. Miller, J. A. Blakeley, and K. B. Schiefer, Eds. Morgan Kaufmann, 864\u2013875.", "citeRegEx": "Dalvi and Suciu,? 2004", "shortCiteRegEx": "Dalvi and Suciu", "year": 2004}, {"title": "Probabilistic logic programs and their semantics", "author": ["E. Dantsin"], "venue": "Russian Conference on Logic Programming, A. Voronkov, Ed. LNCS, vol. 592. Springer, 152\u2013164.", "citeRegEx": "Dantsin,? 1991", "shortCiteRegEx": "Dantsin", "year": 1991}, {"title": "Towards Digesting the Alphabet-Soup of Statistical Relational Learning", "author": ["L. De Raedt", "B. Demoen", "D. Fierens", "B. Gutmann", "G. Janssens", "A. Kimmig", "N. Landwehr", "T. Mantadelis", "W. Meert", "R. Rocha", "V. Santos Costa", "I. Thon", "J. Vennekens"], "venue": "NIPS Workshop on Probabilistic Programming.", "citeRegEx": "Raedt et al\\.,? 2008", "shortCiteRegEx": "Raedt et al\\.", "year": 2008}, {"title": "Probabilistic Inductive Logic Programming - Theory and Applications", "author": ["L. De Raedt", "P. Frasconi", "K. Kersting", "S. Muggleton", "Eds."], "venue": "LNCS, vol. 4911.", "citeRegEx": "Raedt et al\\.,? 2008", "shortCiteRegEx": "Raedt et al\\.", "year": 2008}, {"title": "Compressing probabilistic Prolog programs", "author": ["L. De Raedt", "K. Kersting", "A. Kimmig", "K. Revoredo", "H. Toivonen"], "venue": "Machine Learning 70, 2-3, 151\u2013168.", "citeRegEx": "Raedt et al\\.,? 2008", "shortCiteRegEx": "Raedt et al\\.", "year": 2008}, {"title": "Probabilistic inductive querying using ProbLog", "author": ["L. De Raedt", "A. Kimmig", "B. Gutmann", "K. Kersting", "V. Santos Costa", "H. Toivonen"], "venue": "Tech. Rep. CW 552, Department of Computer Science, Katholieke Universiteit Leuven.", "citeRegEx": "Raedt et al\\.,? 2009", "shortCiteRegEx": "Raedt et al\\.", "year": 2009}, {"title": "ProbLog: A probabilistic Prolog and its application in link discovery", "author": ["L. De Raedt", "A. Kimmig", "H. Toivonen"], "venue": "International Joint Conference on Artificial Intelligence, M. M. Veloso, Ed. 2462\u20132467.", "citeRegEx": "Raedt et al\\.,? 2007", "shortCiteRegEx": "Raedt et al\\.", "year": 2007}, {"title": "Trie Memory", "author": ["E. Fredkin"], "venue": "Communications of the ACM 3, 490\u2013499.", "citeRegEx": "Fredkin,? 1962", "shortCiteRegEx": "Fredkin", "year": 1962}, {"title": "Probabilistic Datalog: Implementing logical information retrieval for advanced applications", "author": ["N. Fuhr"], "venue": "Journal of the American Society for Information Science (JASIS) 51, 2, 95\u2013110.", "citeRegEx": "Fuhr,? 2000", "shortCiteRegEx": "Fuhr", "year": 2000}, {"title": "Statistical Relational Learning", "author": ["L. Getoor", "B. Taskar", "Eds."], "venue": "The MIT press.", "citeRegEx": "Getoor et al\\.,? 2007", "shortCiteRegEx": "Getoor et al\\.", "year": 2007}, {"title": "Term Indexing", "author": ["P. Graf"], "venue": "LNAI, vol. 1053. Springer.", "citeRegEx": "Graf,? 1996", "shortCiteRegEx": "Graf", "year": 1996}, {"title": "Parameter learning in probabilistic databases: A least squares approach", "author": ["B. Gutmann", "A. Kimmig", "K. Kersting", "L. De Raedt"], "venue": "European Conference on Machine Learning, W. Daelemans, B. Goethals, and K. Morik, Eds. LNCS, vol. 5211. Springer, 473\u2013488.", "citeRegEx": "Gutmann et al\\.,? 2008", "shortCiteRegEx": "Gutmann et al\\.", "year": 2008}, {"title": "Propositionalizing the EM algorithm by BDDs", "author": ["M. Ishihata", "Y. Kameya", "T. Sato", "S. ichi Minato"], "venue": "In Proceedings of Inductive Logic Programming (ILP", "citeRegEx": "Ishihata et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Ishihata et al\\.", "year": 2008}, {"title": "Basic principles of learning bayesian logic programs", "author": ["K. Kersting", "L. De Raedt"], "venue": "Probabilistic Inductive Logic Programming, L. De Raedt, P. Frasconi, K. Kersting, and S. Muggleton, Eds. LNCS, vol. 4911. Springer, 189\u2013221.", "citeRegEx": "Kersting and Raedt,? 2008", "shortCiteRegEx": "Kersting and Raedt", "year": 2008}, {"title": "Local query mining in a probabilistic Prolog", "author": ["A. Kimmig", "L. De Raedt"], "venue": "International Joint Conference on Artificial Intelligence, C. Boutilier, Ed. 1095\u20131100.", "citeRegEx": "Kimmig and Raedt,? 2009", "shortCiteRegEx": "Kimmig and Raedt", "year": 2009}, {"title": "Probabilistic explanation based learning", "author": ["A. Kimmig", "L. De Raedt", "H. Toivonen"], "venue": "European Conference on Machine Learning, J. N. Kok, J. Koronacki, R. L. de M\u00e1ntaras, S. Matwin, D. Mladenic, and A. Skowron, Eds. LNCS, vol. 4701. Springer, 176\u2013187.", "citeRegEx": "Kimmig et al\\.,? 2007", "shortCiteRegEx": "Kimmig et al\\.", "year": 2007}, {"title": "Trading memory for answers: Towards tabling ProbLog", "author": ["A. Kimmig", "B. Gutmann", "V. Santos Costa"], "venue": "International Workshop on Statistical Relational Learning.", "citeRegEx": "Kimmig et al\\.,? 2009", "shortCiteRegEx": "Kimmig et al\\.", "year": 2009}, {"title": "On the Efficient Execution of ProbLog Programs", "author": ["A. Kimmig", "V. Santos Costa", "R. Rocha", "B. Demoen", "L. De Raedt"], "venue": "International Conference on Logic Programming, M. G. de la Banda and E. Pontelli, Eds. Number 5366 in LNCS. Springer, 175\u2013189.", "citeRegEx": "Kimmig et al\\.,? 2008", "shortCiteRegEx": "Kimmig et al\\.", "year": 2008}, {"title": "ProbView: A flexible probabilistic database system", "author": ["L.V.S. Lakshmanan", "N. Leone", "R.B. Ross", "V.S. Subrahmanian"], "venue": "ACM Transactions on Database Systems 22, 3, 419\u2013469.", "citeRegEx": "Lakshmanan et al\\.,? 1997", "shortCiteRegEx": "Lakshmanan et al\\.", "year": 1997}, {"title": "Tabling relevant parts of SLD proofs for ground goals in a probabilistic setting", "author": ["T. Mantadelis", "G. Janssens"], "venue": "International Colloquium on Implementation of Constraint and LOgic Programming Systems.", "citeRegEx": "Mantadelis and Janssens,? 2009", "shortCiteRegEx": "Mantadelis and Janssens", "year": 2009}, {"title": "Stochastic logic programs", "author": ["S. Muggleton"], "venue": "Advances in ILP, L. De Raedt, Ed.", "citeRegEx": "Muggleton,? 1995", "shortCiteRegEx": "Muggleton", "year": 1995}, {"title": "Logic programming, abduction and probability", "author": ["D. Poole"], "venue": "New Generation Computing 11, 377\u2013400.", "citeRegEx": "Poole,? 1993a", "shortCiteRegEx": "Poole", "year": 1993}, {"title": "Probabilistic Horn abduction and Bayesian networks", "author": ["D. Poole"], "venue": "Artificial Intelligence 64, 81\u2013129.", "citeRegEx": "Poole,? 1993b", "shortCiteRegEx": "Poole", "year": 1993}, {"title": "Abducing through negation as failure: stable models within the independent choice logic", "author": ["D. Poole"], "venue": "Journal of Logic Programming 44, 1-3, 5\u201335.", "citeRegEx": "Poole,? 2000", "shortCiteRegEx": "Poole", "year": 2000}, {"title": "A top down interpreter for LPAD and CP-logic", "author": ["F. Riguzzi"], "venue": "Congress of the Italian Association for Artificial Intelligence (AI*IA), R. Basili and M. T. Pazienza, Eds. LNCS, vol. 4733. Springer, 109\u2013120.", "citeRegEx": "Riguzzi,? 2007", "shortCiteRegEx": "Riguzzi", "year": 2007}, {"title": "Prolog performance on larger datasets", "author": ["V. Santos Costa"], "venue": "Practical Aspects of Declarative Languages, 9th International Symposium, PADL 2007, Nice, France, January 14-15, 2007., M. Hanus, Ed. LNCS, vol. 4354. Springer, 185\u2013199.", "citeRegEx": "Costa,? 2007", "shortCiteRegEx": "Costa", "year": 2007}, {"title": "CLP(BN): constraint logic programming for probabilistic knowledge", "author": ["V. Santos Costa", "D. Page", "M. Qazi", "J. Cussens"], "venue": "Conference on Uncertainty in Artificial Intelligence, C. Meek and U. Kj\u00e6rulff, Eds. Morgan Kaufmann, 517\u2013524.", "citeRegEx": "Costa et al\\.,? 2003", "shortCiteRegEx": "Costa et al\\.", "year": 2003}, {"title": "Demand-driven indexing of prolog clauses", "author": ["V. Santos Costa", "K. Sagonas", "R. Lopes"], "venue": "International Conference on Logic Programming, V. Dahl and I. Niemel\u00e4, Eds. LNCS, vol. 4670. Springer, 305\u2013409.", "citeRegEx": "Costa et al\\.,? 2007", "shortCiteRegEx": "Costa et al\\.", "year": 2007}, {"title": "A statistical learning method for logic programs with distribution semantics", "author": ["T. Sato"], "venue": "International Conference on Logic Programming, L. Sterling, Ed. MIT Press, 715\u2013729.", "citeRegEx": "Sato,? 1995", "shortCiteRegEx": "Sato", "year": 1995}, {"title": "Parameter learning of logic programs for symbolicstatistical modeling", "author": ["T. Sato", "Y. Kameya"], "venue": "Journal of Artificial Intelligence Research (JAIR) 15, 391\u2013454.", "citeRegEx": "Sato and Kameya,? 2001", "shortCiteRegEx": "Sato and Kameya", "year": 2001}, {"title": "Link discovery in graphs derived from biological databases", "author": ["P. Sevon", "L. Eronen", "P. Hintsanen", "K. Kulovesi", "H. Toivonen"], "venue": "Data Integration in the Life Sciences, U. Leser, F. Naumann, and B. A. Eckman, Eds. LNCS, vol. 4075. Springer, 35\u201349.", "citeRegEx": "Sevon et al\\.,? 2006", "shortCiteRegEx": "Sevon et al\\.", "year": 2006}, {"title": "The complexity of enumeration and reliability problems", "author": ["L.G. Valiant"], "venue": "SIAM Journal on Computing 8, 3, 410\u2013421.", "citeRegEx": "Valiant,? 1979", "shortCiteRegEx": "Valiant", "year": 1979}, {"title": "Logic programs with annotated disjunctions", "author": ["J. Vennekens", "S. Verbaeten", "M. Bruynooghe"], "venue": "International Conference on Logic Programming, B. Demoen and V. Lifschitz, Eds. LNCS, vol. 3132. Springer, 431\u2013445.", "citeRegEx": "Vennekens et al\\.,? 2004", "shortCiteRegEx": "Vennekens et al\\.", "year": 2004}, {"title": "Trio: A system for integrated management of data, accuracy, and lineage", "author": ["J. Widom"], "venue": "Conference on Innovative Data Systems Research. 262\u2013276.", "citeRegEx": "Widom,? 2005", "shortCiteRegEx": "Widom", "year": 2005}], "referenceMentions": [{"referenceID": 25, "context": "Prominent examples include PHA and ICL (Poole 1993b; Poole 2000), PRISM (Sato and Kameya 2001), SLPs (Muggleton 1995), ProbView (Lakshmanan et al.", "startOffset": 39, "endOffset": 64}, {"referenceID": 26, "context": "Prominent examples include PHA and ICL (Poole 1993b; Poole 2000), PRISM (Sato and Kameya 2001), SLPs (Muggleton 1995), ProbView (Lakshmanan et al.", "startOffset": 39, "endOffset": 64}, {"referenceID": 32, "context": "Prominent examples include PHA and ICL (Poole 1993b; Poole 2000), PRISM (Sato and Kameya 2001), SLPs (Muggleton 1995), ProbView (Lakshmanan et al.", "startOffset": 72, "endOffset": 94}, {"referenceID": 23, "context": "Prominent examples include PHA and ICL (Poole 1993b; Poole 2000), PRISM (Sato and Kameya 2001), SLPs (Muggleton 1995), ProbView (Lakshmanan et al.", "startOffset": 101, "endOffset": 117}, {"referenceID": 21, "context": "Prominent examples include PHA and ICL (Poole 1993b; Poole 2000), PRISM (Sato and Kameya 2001), SLPs (Muggleton 1995), ProbView (Lakshmanan et al. 1997), CLP(BN ) (Santos Costa et al.", "startOffset": 128, "endOffset": 152}, {"referenceID": 35, "context": "2003), CP-logic (Vennekens et al. 2004), Trio (Widom 2005), probabilistic Datalog (pD) (Fuhr 2000), and probabilistic databases (Dalvi and Suciu 2004).", "startOffset": 16, "endOffset": 39}, {"referenceID": 36, "context": "2004), Trio (Widom 2005), probabilistic Datalog (pD) (Fuhr 2000), and probabilistic databases (Dalvi and Suciu 2004).", "startOffset": 12, "endOffset": 24}, {"referenceID": 11, "context": "2004), Trio (Widom 2005), probabilistic Datalog (pD) (Fuhr 2000), and probabilistic databases (Dalvi and Suciu 2004).", "startOffset": 53, "endOffset": 64}, {"referenceID": 3, "context": "2004), Trio (Widom 2005), probabilistic Datalog (pD) (Fuhr 2000), and probabilistic databases (Dalvi and Suciu 2004).", "startOffset": 94, "endOffset": 116}, {"referenceID": 33, "context": ") can be extracted from public databases, and probabilistic links between concepts can be obtained by various techniques (Sevon et al. 2006).", "startOffset": 121, "endOffset": 140}, {"referenceID": 31, "context": "The semantics of ProbLog is not new: it is an instance of the distribution semantics (Sato 1995).", "startOffset": 85, "endOffset": 96}, {"referenceID": 4, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 25, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 11, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 26, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 3, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 31, "context": "Sato has, however, shown that the semantics is also well-defined in the case of a countably infinite set of random variables and formalized it in his well-known distribution semantics (Sato 1995).", "startOffset": 184, "endOffset": 195}, {"referenceID": 32, "context": "However, even though relying on the same semantics, in order to allow efficient inference, systems such as PRISM (Sato and Kameya 2001) and PHA (Poole 1993b) additionally require all proofs of a query to be mutually exclusive.", "startOffset": 113, "endOffset": 135}, {"referenceID": 25, "context": "However, even though relying on the same semantics, in order to allow efficient inference, systems such as PRISM (Sato and Kameya 2001) and PHA (Poole 1993b) additionally require all proofs of a query to be mutually exclusive.", "startOffset": 144, "endOffset": 157}, {"referenceID": 26, "context": "ICL (Poole 2000) extends PHA to the case where proofs need not be mutually exclusive.", "startOffset": 4, "endOffset": 16}, {"referenceID": 1, "context": "We present algorithms for computing the success and explanation probabilities of a query, and show how they can be efficiently implemented combining Prolog inference with Binary Decision Diagrams (BDDs) (Bryant 1986).", "startOffset": 203, "endOffset": 216}, {"referenceID": 24, "context": "In addition to an iterative deepening algorithm that computes an approximation along the lines of (Poole 1993a), we further adapt the Monte Carlo approach used by (Sevon et al.", "startOffset": 98, "endOffset": 111}, {"referenceID": 33, "context": "In addition to an iterative deepening algorithm that computes an approximation along the lines of (Poole 1993a), we further adapt the Monte Carlo approach used by (Sevon et al. 2006) in the context of biological network inference.", "startOffset": 163, "endOffset": 182}, {"referenceID": 33, "context": "2007), which are needed to use ProbLog to effectively query Sevon\u2019s Biomine network (Sevon et al. 2006) containing about 1,000,000 nodes and 6,000,000 edges, as will be shown in the experiments.", "startOffset": 84, "endOffset": 103}, {"referenceID": 31, "context": "Sato has shown how this semantics can be generalized to the countably infinite case; we refer to (Sato 1995) for details.", "startOffset": 97, "endOffset": 108}, {"referenceID": 18, "context": ", all minimal sets E \u2286 LT of probabilistic facts such that E \u222a BK |= q (Kimmig et al. 2007).", "startOffset": 71, "endOffset": 91}, {"referenceID": 31, "context": "The ProbLog semantics is essentially a distribution semantics (Sato 1995).", "startOffset": 62, "endOffset": 73}, {"referenceID": 31, "context": "Sato has rigorously shown that this class of programs defines a joint probability distribution over the set of possible least Herbrand models of the program (allowing functors), that is, of the background knowledge BK together with a subprogram L \u2286 LT ; for further details we refer to (Sato 1995).", "startOffset": 286, "endOffset": 297}, {"referenceID": 4, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 25, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 11, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 26, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 3, "context": "(Dantsin 1991; Poole 1993b; Fuhr 2000; Poole 2000; Dalvi and Suciu 2004).", "startOffset": 0, "endOffset": 72}, {"referenceID": 32, "context": "Similar approaches are used for PRISM (Sato and Kameya 2001), ICL (Poole 2000) and pD (Fuhr 2000).", "startOffset": 38, "endOffset": 60}, {"referenceID": 26, "context": "Similar approaches are used for PRISM (Sato and Kameya 2001), ICL (Poole 2000) and pD (Fuhr 2000).", "startOffset": 66, "endOffset": 78}, {"referenceID": 11, "context": "Similar approaches are used for PRISM (Sato and Kameya 2001), ICL (Poole 2000) and pD (Fuhr 2000).", "startOffset": 86, "endOffset": 97}, {"referenceID": 34, "context": "In general, this problem is known as the disjoint-sum-problem or the two-terminal network reliability problem, which is #P-complete (Valiant 1979).", "startOffset": 132, "endOffset": 146}, {"referenceID": 11, "context": "The pD-engine HySpirit (Fuhr 2000)", "startOffset": 23, "endOffset": 34}, {"referenceID": 26, "context": "For ICL, which extends PHA by allowing non-disjoint proofs, (Poole 2000) proposes a symbolic disjoining algorithm, but does not report scalability results.", "startOffset": 60, "endOffset": 72}, {"referenceID": 1, "context": "Our implementation of ProbLog employs Binary Decision Diagrams (BDDs) (Bryant 1986), an efficient graphical representation of a Boolean function over a set of variables, which scales to tens of thousands of proofs; see Section 4.", "startOffset": 70, "endOffset": 83}, {"referenceID": 32, "context": "PRISM (Sato and Kameya 2001) and PHA (Poole 1993b) differ from the systems mentioned above in that they avoid the disjoint-sum-problem by requiring the user to write programs such that proofs are guaranteed to be disjoint.", "startOffset": 6, "endOffset": 28}, {"referenceID": 25, "context": "PRISM (Sato and Kameya 2001) and PHA (Poole 1993b) differ from the systems mentioned above in that they avoid the disjoint-sum-problem by requiring the user to write programs such that proofs are guaranteed to be disjoint.", "startOffset": 37, "endOffset": 50}, {"referenceID": 24, "context": "It is closely related to work by (Poole 1993a) in the context of PHA, but adapted towards ProbLog.", "startOffset": 33, "endOffset": 46}, {"referenceID": 14, "context": "(Gutmann et al. 2008) therefore introduces the k -probability Pk (q |T ), which approximates the success probability by using the k -best (that is, the k most likely) explanations instead of all proofs when building the DNF formula used in Equation (7): Pk (q |T ) = P \uf8eb\uf8ed \u2228 e\u2208Ek (q) \u2227", "startOffset": 0, "endOffset": 21}, {"referenceID": 25, "context": "also (Poole 1993b).", "startOffset": 5, "endOffset": 18}, {"referenceID": 33, "context": "A similar algorithm (without the use of confidence intervals) was also used in the context of biological networks (not represented as Prolog programs) by (Sevon et al. 2006).", "startOffset": 154, "endOffset": 173}, {"referenceID": 4, "context": "The use of a Monte Carlo method for probabilistic logic programs was suggested already by (Dantsin 1991), although he neither provides details nor reports on an implementation.", "startOffset": 90, "endOffset": 104}, {"referenceID": 2, "context": "Our approach differs from the MCMC method for Stochastic Logic Programs (SLPs) introduced by (Cussens 2000) in that we do not use a Markov chain, but restart from scratch for each sample.", "startOffset": 93, "endOffset": 107}, {"referenceID": 10, "context": "Tries (Fredkin 1962) were originally invented to index dictionaries, and have since been generalised to index recursive data structures such as terms.", "startOffset": 6, "endOffset": 20}, {"referenceID": 0, "context": "Please refer to (Bachmair et al. 1993; Graf 1996; Ramakrishnan et al. 1999) for the use of tries in automated theorem proving, term rewriting and tabled logic programs.", "startOffset": 16, "endOffset": 75}, {"referenceID": 13, "context": "Please refer to (Bachmair et al. 1993; Graf 1996; Ramakrishnan et al. 1999) for the use of tries in automated theorem proving, term rewriting and tabled logic programs.", "startOffset": 16, "endOffset": 75}, {"referenceID": 1, "context": "To efficiently compute the probability of a DNF formula representing a set of proofs, our implementation represents this formula as a reduced ordered Binary Decision Diagram (BDD) (Bryant 1986), which can be viewed as a compact encoding of a Boolean decision tree.", "startOffset": 180, "endOffset": 193}, {"referenceID": 33, "context": "We performed experiments with our implementation of ProbLog in the context of the biological network obtained from the Biomine project (Sevon et al. 2006).", "startOffset": 135, "endOffset": 154}, {"referenceID": 20, "context": "However, using SimpleCUDD instead of the C++ interface used in (Kimmig et al. 2008) typically decreases BDD time by at least one or two orders of magnitude.", "startOffset": 63, "endOffset": 83}, {"referenceID": 11, "context": "2007) already scaled up much better than alternative implementations such as Fuhr\u2019s pD engine HySpirit (Fuhr 2000).", "startOffset": 103, "endOffset": 114}, {"referenceID": 25, "context": "ProbLog is closely related to some alternative formalisms such as PHA and ICL (Poole 1993b; Poole 2000), pD (Fuhr 2000) and PRISM (Sato and Kameya 2001) as their semantics are all based on Sato\u2019s distribution semantics even though there exist also some subtle differences.", "startOffset": 78, "endOffset": 103}, {"referenceID": 26, "context": "ProbLog is closely related to some alternative formalisms such as PHA and ICL (Poole 1993b; Poole 2000), pD (Fuhr 2000) and PRISM (Sato and Kameya 2001) as their semantics are all based on Sato\u2019s distribution semantics even though there exist also some subtle differences.", "startOffset": 78, "endOffset": 103}, {"referenceID": 11, "context": "ProbLog is closely related to some alternative formalisms such as PHA and ICL (Poole 1993b; Poole 2000), pD (Fuhr 2000) and PRISM (Sato and Kameya 2001) as their semantics are all based on Sato\u2019s distribution semantics even though there exist also some subtle differences.", "startOffset": 108, "endOffset": 119}, {"referenceID": 32, "context": "ProbLog is closely related to some alternative formalisms such as PHA and ICL (Poole 1993b; Poole 2000), pD (Fuhr 2000) and PRISM (Sato and Kameya 2001) as their semantics are all based on Sato\u2019s distribution semantics even though there exist also some subtle differences.", "startOffset": 130, "endOffset": 152}, {"referenceID": 31, "context": "However, ProbLog is \u2013 to the best of the authors\u2019 knowledge \u2013 the first implementation that tightly integrates Sato\u2019s original distribution semantics (Sato 1995) in a state-of-the-art Prolog system without", "startOffset": 150, "endOffset": 161}, {"referenceID": 26, "context": "AILog2 is a meta-interpreter implemented in SWI-Prolog for didactical purposes, where the disjoint-sum-problem is tackled using a symbolic disjoining technique (Poole 2000).", "startOffset": 160, "endOffset": 172}, {"referenceID": 32, "context": "As proofs are mutually exclusive, the explanation graph directly mirrors the sum-of-products structure of probability calculation (Sato and Kameya 2001).", "startOffset": 130, "endOffset": 152}, {"referenceID": 27, "context": "for instance (Riguzzi 2007; Ishihata et al. 2008).", "startOffset": 13, "endOffset": 49}, {"referenceID": 15, "context": "for instance (Riguzzi 2007; Ishihata et al. 2008).", "startOffset": 13, "endOffset": 49}, {"referenceID": 23, "context": "Furthermore, as compared to SLPs (Muggleton 1995), CLP(BN ) (Santos Costa et al.", "startOffset": 33, "endOffset": 49}, {"referenceID": 35, "context": "For instance, it has already been shown that CP-logic (Vennekens et al. 2004), a recent elegant probabilistic knowledge representation language based on a probabilistic extension of clausal logic, can be compiled into ProbLog (Riguzzi 2007) and it is well-known that SLPs (Muggleton 1995) can be compiled into Sato\u2019s PRISM, which is closely related to ProbLog.", "startOffset": 54, "endOffset": 77}, {"referenceID": 27, "context": "2004), a recent elegant probabilistic knowledge representation language based on a probabilistic extension of clausal logic, can be compiled into ProbLog (Riguzzi 2007) and it is well-known that SLPs (Muggleton 1995) can be compiled into Sato\u2019s PRISM, which is closely related to ProbLog.", "startOffset": 154, "endOffset": 168}, {"referenceID": 23, "context": "2004), a recent elegant probabilistic knowledge representation language based on a probabilistic extension of clausal logic, can be compiled into ProbLog (Riguzzi 2007) and it is well-known that SLPs (Muggleton 1995) can be compiled into Sato\u2019s PRISM, which is closely related to ProbLog.", "startOffset": 200, "endOffset": 216}, {"referenceID": 18, "context": "Another, related use of ProbLog is as a vehicle for developing learning and mining algorithms and tools (Kimmig et al. 2007; De Raedt et al. 2008; Gutmann et al. 2008; Kimmig and De Raedt 2009; De Raedt et al. 2009).", "startOffset": 104, "endOffset": 215}, {"referenceID": 14, "context": "Another, related use of ProbLog is as a vehicle for developing learning and mining algorithms and tools (Kimmig et al. 2007; De Raedt et al. 2008; Gutmann et al. 2008; Kimmig and De Raedt 2009; De Raedt et al. 2009).", "startOffset": 104, "endOffset": 215}, {"referenceID": 14, "context": "(Gutmann et al. 2008) introduces a gradient descent approach to parameter learning for ProbLog that extends the BDD-based methods discussed here.", "startOffset": 0, "endOffset": 21}, {"referenceID": 22, "context": "At the same time, we currently investigate how tabling, one of the keys to PRISM\u2019s efficiency, can be incorporated in ProbLog (Mantadelis and Janssens 2009; Kimmig et al. 2009).", "startOffset": 126, "endOffset": 176}, {"referenceID": 19, "context": "At the same time, we currently investigate how tabling, one of the keys to PRISM\u2019s efficiency, can be incorporated in ProbLog (Mantadelis and Janssens 2009; Kimmig et al. 2009).", "startOffset": 126, "endOffset": 176}], "year": 2010, "abstractText": "The past few years have seen a surge of interest in the field of probabilistic logic learning and statistical relational learning. In this endeavor, many probabilistic logics have been developed. ProbLog is a recent probabilistic extension of Prolog motivated by the mining of large biological networks. In ProbLog, facts can be labeled with probabilities. These facts are treated as mutually independent random variables that indicate whether these facts belong to a randomly sampled program. Different kinds of queries can be posed to ProbLog programs. We introduce algorithms that allow the efficient execution of these queries, discuss their implementation on top of the YAP-Prolog system, and evaluate their performance in the context of large networks of biological entities. To appear in Theory and Practice of Logic Programming (TPLP)", "creator": "LaTeX with hyperref package"}}}