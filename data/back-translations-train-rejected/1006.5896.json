{"id": "1006.5896", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jun-2010", "title": "Counterexample Guided Abstraction Refinement Algorithm for Propositional Circumscription", "abstract": "Circumscription is a representative example of a nonmonotonic reasoning inference technique. Circumscription has often been studied for first order theories, but its propositional version has also been the subject of extensive research, having been shown equivalent to extended closed world assumption (ECWA). Moreover, entailment in propositional circumscription is a well-known example of a decision problem in the second level of the polynomial hierarchy. This paper proposes a new Boolean Satisfiability (SAT)-based algorithm for entailment in propositional circumscription that explores the relationship of propositional circumscription to minimal models. The new algorithm is inspired by ideas commonly used in SAT-based model checking, namely counterexample guided abstraction refinement. In addition, the new algorithm is refined to compute the theory closure for generalized close world assumption (GCWA). Experimental results show that the new algorithm can solve problem instances that other solutions are unable to solve.", "histories": [["v1", "Wed, 30 Jun 2010 16:00:08 GMT  (65kb)", "http://arxiv.org/abs/1006.5896v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["mikol\\'a\\v{s} janota", "joao marques-silva", "radu grigore"], "accepted": false, "id": "1006.5896"}, "pdf": {"name": "1006.5896.pdf", "metadata": {"source": "META", "title": "Counterexample Guided Abstraction Refinement Algorithm for Propositional Circumscription", "authors": ["Joao Marques-Silva"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 100 6.58 96v1 [cs.AI] 30 Ju"}, {"heading": "1 Introduction", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "2 Preliminaries", "text": "All variables are parts of sentences represented by a finite set V. A formula \u03c6 can also be considered a set of literals. Both representations are used interchangeably in this essay. A clause is called positive if it contains only positive literals. Arbitrary Boolean formulas for which the standard definitions apply are also taken into consideration. A variable assignment \u03bd is a total function from V to {0, 1}. In the text, a variable assignment is represented as {xv11,.., x vn}, for which V = {x1,..., xn} and vi, {0, 1}, i, 1.. n. For a variable assignment, a variable with the addition Kong and a formula with the addition we call satisfactory. In this case, a model with the addition \"S\" is replaced by a variable."}, {"heading": "2.1 Minimal Models", "text": "For variable assignments \u03bd and \u00b5 we write \u03bd \u2264 \u00b5 and say that \u03bd is smaller than \u00b5 iff (\u0441 x-V) (\u03bd (x) \u2264 \u00b5 (x))). We write \u03bd < \u00b5 and say that \u03bd is strictly smaller than \u00b5 iff \u03bd and \u03bd 6 = \u00b5. A model \u03bd of \u03c6 is a minimum model if there is no model of \u03c6 that is strictly smaller than \u03bd. And finally, we write \u03c6 | = min \u0445 if \u0432 is strictly smaller than \u00b5 iff \u03bd and \u03bd 6 = \u00b5 in all minimum models of \u03c6.Proposition 1. The models of formula \u03c6, which are strictly smaller than any variable assignment \u03bd, are the models of formula \u03bd (x) = 0 \u00ac x = 1 \u00ac x (1)."}, {"heading": "2.2 Closed World Reasoning", "text": "The intuition behind the closed world assumption (CWA) is that facts are not considered true unless they are explicitly stated, motivated by the kind of reasoning that people use on a day-to-day basis. For example, if Alice asks Bob to buy eggs, Bob will clearly buy eggs. However, he will not buy bread, even though Alice has not stated that the bread should not be bought. Traditional mathematical logic differs in this respect: the fact that the purchase eggs trivially lead to the fact that the fact that they are purchased is not linked to the fact. This intuition has been realized through various formalisms. Here, we present only a small portion of these formalisms, and the interested reader refers to appropriate publications for further reference. [1,6,4] The standard formulation of the CWA rules is divided into three sentences: P, Q and Z, in which P refers to the variables as minimized, Z are the variables that can change when the variables are fixed in P, and Q all other variables are fixed."}, {"heading": "3 Problems", "text": "The CWR rules give rise to the following two problems. The first problem is the calculation of the closure of the theory as defined by the CWR rule. < The second problem is the calculation of whether a particular fact is brought about by this closure. If the closure has been calculated, standard satisfaction algorithms can be used to solve the related problem. < The second problem is that the closure of the GCWA increases the size of the formula by at most a linear number of words, the closure of both ECWA and EGCWA can increase the size of the formula by an exponential number of conjunctions of words. Paraphrasing a formula can be easily constructed, but gives rise to a QBF formula, and our goal is to remain within the ultimate goal of developing purely SAT-based solutions. This paper focuses on the following problems."}, {"heading": "5.1 Constructing and Refining Abstraction", "text": "In the worst case the abstraction is refined exponentially, it is justified to pay attention to the size of the formula, which represents the negation of the abstraction. The negation of an abstraction is a conjunction of the left side of the implication and formulas that capture the substitutions. (?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"}, {"heading": "5.2 Finding Models", "text": "The motivation for this heuristics is to find abstractions in which the specified abstraction contains only a few sentences, which means that each of the B-W models provides a testimony for many models. Heuristics used in the current implementation are motivated by the following two examples: Example 4: (x). The abstraction defined by W = {x, y} shows that the abstraction of W = {x, y} n models since flipping yields both x and y in each model (a witness). The abstraction determined by W = {x, y} n is not sufficient. This abstraction provides a testimony for models with a value, but not for the others. Intuitively, variable z is relevant to the x-y relationship, so it is better to choose a small abstraction."}, {"heading": "7 Evaluation", "text": "Algorithm 3 was implemented in Java using SAT4j as the underlying SAT solver, using its incremental interface [22], and the implementation was evaluated using a benchmark of 260 tests4, most of which are valid software configurations (motivated by [13]), some of which are from the SAT '09 contest - 4 available at http: / / logos.ucd.ie / confs / jelia10 / jelia10-bench.tgzRelatively simple instances were chosen because the calculated problem is much more difficult than satisfaction. The results appear in Table 1. An instance is considered solved if the answer is given in less than 30 sec. The time given in the table is the average for the solved instances. The alternative we tried is based on the tool circ2dlp [19], which transforms the description into a disjunctive logic program, and lists all models of this program [11]."}, {"heading": "8 Summary and Future Work", "text": "The algorithm depends on the application of a SAT solver, but above all on the contrasting refinement of abstraction (CEGAR). While CEGAR has been widely used in software verification [3,8], we are not aware of its application in non-monotonous argumentation.The derivation problem under the set of minimum models can be formulated as QBF [5] or DLP [14,12].The experimental results suggest that current QBF solvers are not practicable for this problem. Comparison with the DLP-based solution shows that our dedicated algorithm enables further instances to be solved. Nevertheless, the DLP-based solution was faster for some instances than others. The promising experimental results indicate that the ideas underlying the presented algorithms have potential for further work."}, {"heading": "A Proofs", "text": "Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 2: Proposition 1: Proposition 2: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 2: Proposition 1: Proposition 2: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 2: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 2: Proposition 2: Proposition 2: Proposition 2: Proposition 2: Proposition 1: Proposition 1: Proposition 1: Proposition 1: Proposition 2: Proposition 1: Proposition 1: Proposition 2: Proposition 1: Proposition 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1:"}, {"heading": "B Deciding Entailment in Full ECWA", "text": "The article introduces an algorithm that enables us to decide whether a formula is included in all the minimal models of a different formula. (This allows us to decide the consequences for ECWA and paraphrase with Q = \u2205 (see section 2). In order to provide a semantic characterization that supports arbitrary Q and Z, the concept of the minimality of models is broadened. Definition 4. Let P, Q and Z be a division of variables V. (P, Z) \u00b5 (P, Z) \u00b5 (P,) \u00b5 (x) = \u00b5 (x) for all x models Q, and, \u03bd (x) \u2264 \u00b5 (x) \u00b5 (x) for all x models P. We write Stuart < (P, Z) \u00b5 (P) \u00b5 (P, not \u00b5) \u2264 (P, Z) \u0445 (P, Z) \u0445 (P, Z) \u0445 (X).We write the results of a method we determine."}], "references": [{"title": "The complexity of closed world reasoning and circumscription", "author": ["M. Cadoli", "M. Lenzerini"], "venue": "AAAI Conference on Artificial Intelligence. pp. 550\u2013555", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1990}, {"title": "Using the Davis and Putnam procedure for an efficient computation of preferred models", "author": ["T. Castell", "C. Cayrol", "M. Cayrol", "D.L. Berre"], "venue": "European Conference on Artificial Intelligence. pp. 350\u2013354", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1996}, {"title": "Counterexample-guided abstraction refinement", "author": ["E.M. Clarke", "O. Grumberg", "S. Jha", "Y. Lu", "H. Veith"], "venue": "Computer Aided Verification. pp. 154\u2013169", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2000}, {"title": "Nonmonotonic reasoning: Towards efficient calculi and implementations", "author": ["J. Dix", "U. Furbach", "I. Niemel\u00e4"], "venue": "Voronkov, A., Robinson, A. (eds.) Handbook of Automated Reasoning, chap. 19, pp. 1241\u20131354. North Holland", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2001}, {"title": "Solving advanced reasoning tasks using quantified boolean formulas", "author": ["U. Egly", "T. Eiter", "H. Tompits", "S. Woltran"], "venue": "AAAI Conference on Artificial Intelligence. pp. 417\u2013422", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2000}, {"title": "Propositional circumscription and extended closed-world reasoning are \u03a0  2 -complete", "author": ["T. Eiter", "G. Gottlob"], "venue": "Theor. Comput. Sci. 114(2), 231\u2013245", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1993}, {"title": "Combining answer set programming with description logics for the Semantic Web", "author": ["T. Eiter", "G. Ianni", "T. Lukasiewicz", "R. Schindlauer", "H. Tompits"], "venue": "Artif. Intell. 172(12-13), 1495\u20131539", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Predicate abstraction for software verification", "author": ["C. Flanagan", "S. Qadeer"], "venue": "Principles of programming languages (POPL). pp. 191\u2013202. ACM", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "On the relationship between circumscription and negation as failure", "author": ["M. Gelfond", "H. Przymusinska", "T.C. Przymusinski"], "venue": "Artif. Intell. 38(1), 75\u201394", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1989}, {"title": "Solving optimization problems with DLL", "author": ["E. Giunchiglia", "M. Maratea"], "venue": "European Conference on Artificial Intelligence. pp. 377\u2013381", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2006}, {"title": "Unfolding partiality and disjunctions in stable model semantics", "author": ["T. Janhunen", "I. Niemel\u00e4", "D. Seipel", "P. Simons", "J.H. You"], "venue": "ACM Trans. Comput. Log. 7(1), 1\u201337", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "Capturing parallel circumscription with disjunctive logic programs", "author": ["T. Janhunen", "E. Oikarinen"], "venue": "European Conf. on Logics in Artif. Intell. pp. 134\u2013146", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2004}, {"title": "How to complete an interactive configuration process? In: Conference on Current Trends in Theory and Practice of Computer Science", "author": ["M. Janota", "G. Botterweck", "R. Grigore", "J. Marques-Silva"], "venue": "pp. 528\u2013539", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Foundations of logic programming", "author": ["V. Lifschitz"], "venue": "Principles of Knowledge Representation pp. 69\u2013127", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1996}, {"title": "Circumscription - a form of non-monotonic reasoning", "author": ["J. McCarthy"], "venue": "Artif. Intell. 13(1-2), 27\u201339", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1980}, {"title": "Applications of circumscription to formalizing common-sense knowledge", "author": ["J. McCarthy"], "venue": "Artif. Intell. 28(1), 89\u2013116", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1986}, {"title": "On indefinite databases and the closed world assumption", "author": ["J. Minker"], "venue": "Conference on Automated Deduction. pp. 292\u2013308", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1982}, {"title": "Implementing circumscription using a tableau method", "author": ["I. Niemel\u00e4"], "venue": "European Conference on Artificial Intelligence. pp. 80\u201384", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1996}, {"title": "circ2dlp - translating circumscription into disjunctive logic programming", "author": ["E. Oikarinen", "T. Janhunen"], "venue": "Logic Programming and Nonmonotonic Reasoning. pp. 405\u2013409", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2005}, {"title": "An algorithm to compute circumscription", "author": ["T.C. Przymusinski"], "venue": "Artif. Intell. 38(1), 49\u201373", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1989}, {"title": "Solving satisfiability problems with preferences", "author": ["E.D. Rosa", "E. Giunchiglia", "M. Maratea"], "venue": "Constraints, An International Journal", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "On the complexity of derivation in propositional calculus", "author": ["G.S. Tseitin"], "venue": "Studies in constructive mathematics and mathematical logic 2(115-125), 10\u201313", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1968}, {"title": "Deduction in non-Horn databases", "author": ["A.H. Yahya", "L.J. Henschen"], "venue": "Journal of Automated Reasoning 1(2), 141\u2013160", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1985}], "referenceMentions": [{"referenceID": 14, "context": "Part of the interest in these techniques is that they bring us closer to how humans reason [15,17,16].", "startOffset": 91, "endOffset": 101}, {"referenceID": 16, "context": "Part of the interest in these techniques is that they bring us closer to how humans reason [15,17,16].", "startOffset": 91, "endOffset": 101}, {"referenceID": 15, "context": "Part of the interest in these techniques is that they bring us closer to how humans reason [15,17,16].", "startOffset": 91, "endOffset": 101}, {"referenceID": 0, "context": "The computational complexity of propositional CWR rules was studied in the early 90s [1,6] and showed that, with few exceptions, the complexity of CWR deduction problems are in the second level of the polynomial hierarchy, being \u03a0 2 -complete [6].", "startOffset": 85, "endOffset": 90}, {"referenceID": 5, "context": "The computational complexity of propositional CWR rules was studied in the early 90s [1,6] and showed that, with few exceptions, the complexity of CWR deduction problems are in the second level of the polynomial hierarchy, being \u03a0 2 -complete [6].", "startOffset": 85, "endOffset": 90}, {"referenceID": 5, "context": "The computational complexity of propositional CWR rules was studied in the early 90s [1,6] and showed that, with few exceptions, the complexity of CWR deduction problems are in the second level of the polynomial hierarchy, being \u03a0 2 -complete [6].", "startOffset": 243, "endOffset": 246}, {"referenceID": 6, "context": "Nonmonotonic reasoning finds a wide range of applications in Artificial Intelligence (AI), but also in description logics [7]", "startOffset": 122, "endOffset": 125}, {"referenceID": 12, "context": "and in interactive configuration [13], among many others.", "startOffset": 33, "endOffset": 37}, {"referenceID": 19, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 116, "endOffset": 120}, {"referenceID": 17, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 139, "endOffset": 143}, {"referenceID": 4, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 186, "endOffset": 189}, {"referenceID": 13, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 230, "endOffset": 240}, {"referenceID": 11, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 230, "endOffset": 240}, {"referenceID": 18, "context": "Finally, different algorithms have been proposed over the years, examples of which include minimal model resolution [20], tableau calculus [18], Quantified Boolean Formula (QBF) solvers [5] and Disjunctive Logic Programming (DLP) [14,12,19].", "startOffset": 230, "endOffset": 240}, {"referenceID": 2, "context": "To cope with this issue, we utilize a technique inspired in counterexample guided abstraction refinement (CEGAR), widely used in model checking [3].", "startOffset": 144, "endOffset": 147}, {"referenceID": 0, "context": "Here we present only a small portion of these formalisms and the interested reader is referred to appropriate publications for further reference [1,6,4].", "startOffset": 145, "endOffset": 152}, {"referenceID": 5, "context": "Here we present only a small portion of these formalisms and the interested reader is referred to appropriate publications for further reference [1,6,4].", "startOffset": 145, "endOffset": 152}, {"referenceID": 3, "context": "Here we present only a small portion of these formalisms and the interested reader is referred to appropriate publications for further reference [1,6,4].", "startOffset": 145, "endOffset": 152}, {"referenceID": 0, "context": "Following [1,6], a closure operation is defined for CWR rules as follows:", "startOffset": 10, "endOffset": 15}, {"referenceID": 5, "context": "Following [1,6], a closure operation is defined for CWR rules as follows:", "startOffset": 10, "endOffset": 15}, {"referenceID": 16, "context": "For each CWR rule below, a formula K is free for negation if and only if the corresponding condition holds: GCWA (Generalized CWA [17]): K is a positive literal and for every positive clause B such that \u03c6 2 B it holds that \u03c6 2 B \u2228K.", "startOffset": 130, "endOffset": 134}, {"referenceID": 22, "context": "EGCWA (Extended GCWA [24]): K is a conjunction of positive literals and for every positive clause B such that \u03c6 2 B it holds that \u03c6 2 B \u2228K.", "startOffset": 21, "endOffset": 25}, {"referenceID": 22, "context": "ECWA (Extended CWA [24]): K is an arbitrary formula not involving literals from Z, and for every positive clause B whose literals belong to P\u222aQ\u222aQ, such that \u03c6 2 B, it holds that \u03c6 2 B \u2228K.", "startOffset": 19, "endOffset": 23}, {"referenceID": 0, "context": "A detailed characterization for existing CWR rules can be found elsewhere [1,6,4].", "startOffset": 74, "endOffset": 81}, {"referenceID": 5, "context": "A detailed characterization for existing CWR rules can be found elsewhere [1,6,4].", "startOffset": 74, "endOffset": 81}, {"referenceID": 3, "context": "A detailed characterization for existing CWR rules can be found elsewhere [1,6,4].", "startOffset": 74, "endOffset": 81}, {"referenceID": 14, "context": "Originally, McCarthy defined circumscription in the context of first order logic as a closure of the given theory that considers only predicates with minimal extension [15].", "startOffset": 168, "endOffset": 172}, {"referenceID": 8, "context": "It is well-known that for the propositional case, circumscription is equivalent to ECWA [9].", "startOffset": 88, "endOffset": 91}, {"referenceID": 16, "context": "[17,1,6]).", "startOffset": 0, "endOffset": 8}, {"referenceID": 0, "context": "[17,1,6]).", "startOffset": 0, "endOffset": 8}, {"referenceID": 5, "context": "[17,1,6]).", "startOffset": 0, "endOffset": 8}, {"referenceID": 16, "context": "These relations are captured by the following propositions (adapted from [17,1,6]): Proposition 2.", "startOffset": 73, "endOffset": 81}, {"referenceID": 0, "context": "These relations are captured by the following propositions (adapted from [17,1,6]): Proposition 2.", "startOffset": 73, "endOffset": 81}, {"referenceID": 5, "context": "These relations are captured by the following propositions (adapted from [17,1,6]): Proposition 2.", "startOffset": 73, "endOffset": 81}, {"referenceID": 2, "context": "The approach of searching for the right abstraction follows the CounterExample Guided Abstract Refinement (CEGAR) loop [3].", "startOffset": 119, "endOffset": 122}, {"referenceID": 21, "context": "In the initialization phase, the negation of this abstraction is \u03c6 \u2227 x \u2227 \u00ac\u03c6[x 7\u2192 0] and is computed using the Tseitin transformation [23].", "startOffset": 133, "endOffset": 137}, {"referenceID": 9, "context": "Namely, preferring 0 yields a minimal model while preferring 1 yields a maximal model [10,21].", "startOffset": 86, "endOffset": 93}, {"referenceID": 20, "context": "Namely, preferring 0 yields a minimal model while preferring 1 yields a maximal model [10,21].", "startOffset": 86, "endOffset": 93}, {"referenceID": 12, "context": "A majority of these are valid software configurations (motivated by [13]).", "startOffset": 68, "endOffset": 72}, {"referenceID": 18, "context": "The alternative we tried was based on the tool circ2dlp [19], which transforms circumscription into a disjunctive logic program, and gnt [11], which lists all models of that program.", "startOffset": 56, "endOffset": 60}, {"referenceID": 10, "context": "The alternative we tried was based on the tool circ2dlp [19], which transforms circumscription into a disjunctive logic program, and gnt [11], which lists all models of that program.", "startOffset": 137, "endOffset": 141}, {"referenceID": 2, "context": "While CEGAR has been amply used in software verification [3,8],we are not aware of its application in nonmonotonic reasoning.", "startOffset": 57, "endOffset": 62}, {"referenceID": 7, "context": "While CEGAR has been amply used in software verification [3,8],we are not aware of its application in nonmonotonic reasoning.", "startOffset": 57, "endOffset": 62}, {"referenceID": 4, "context": "The deduction problem under the set of minimal models can be formulated as QBF [5] or as a DLP [14,12].", "startOffset": 79, "endOffset": 82}, {"referenceID": 13, "context": "The deduction problem under the set of minimal models can be formulated as QBF [5] or as a DLP [14,12].", "startOffset": 95, "endOffset": 102}, {"referenceID": 11, "context": "The deduction problem under the set of minimal models can be formulated as QBF [5] or as a DLP [14,12].", "startOffset": 95, "endOffset": 102}, {"referenceID": 1, "context": "On a more general scale, it is well known that minimal models can be seen as optima with respect to the pertaining ordering [2,21].", "startOffset": 124, "endOffset": 130}, {"referenceID": 20, "context": "On a more general scale, it is well known that minimal models can be seen as optima with respect to the pertaining ordering [2,21].", "startOffset": 124, "endOffset": 130}], "year": 2013, "abstractText": "Circumscription is a representative example of a nonmonotonic reasoning inference technique. Circumscription has often been studied for first order theories, but its propositional version has also been the subject of extensive research, having been shown equivalent to extended closed world assumption (ECWA). Moreover, entailment in propositional circumscription is a well-known example of a decision problem in the second level of the polynomial hierarchy. This paper proposes a new Boolean Satisfiability (SAT)-based algorithm for entailment in propositional circumscription that explores the relationship of propositional circumscription to minimal models. The new algorithm is inspired by ideas commonly used in SAT-based model checking, namely counterexample guided abstraction refinement. In addition, the new algorithm is refined to compute the theory closure for generalized close world assumption (GCWA). Experimental results show that the new algorithm can solve problem instances that other solutions are unable to solve.", "creator": "LaTeX with hyperref package"}}}