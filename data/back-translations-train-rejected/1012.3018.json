{"id": "1012.3018", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Dec-2010", "title": "On the size of data structures used in symbolic model checking", "abstract": "Temporal Logic Model Checking is a verification method in which we describe a system, the model, and then we verify whether some properties, expressed in a temporal logic formula, hold in the system. It has many industrial applications. In order to improve performance, some tools allow preprocessing of the model, verifying on-line a set of properties reusing the same compiled model; we prove that the complexity of the Model Checking problem, without any preprocessing or preprocessing the model or the formula in a polynomial data structure, is the same. As a result preprocessing does not always exponentially improve performance.", "histories": [["v1", "Tue, 14 Dec 2010 13:18:44 GMT  (23kb)", "http://arxiv.org/abs/1012.3018v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.DS cs.LO", "authors": ["paolo liberatore", "marco schaerf"], "accepted": false, "id": "1012.3018"}, "pdf": {"name": "1012.3018.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["lastname@dis.uniroma1.it"], "sections": [{"heading": null, "text": "ar Xiv: 101 2.30 18v1 [cs.AI] 14 DTemporal Logic Model Checking is a verification method by which we describe a system, the model, and then verify whether some properties, expressed in a temporal logic formula, persist in the system. There are many industrial applications. To improve performance, some tools allow pre-processing of the model and verify online a number of properties that reuse the same compiled model; we prove that the complexity of the model checking problem is the same without pre-processing or pre-processing of the model or formula in a polynomial data structure. As a result, pre-processing does not always exponentially improve performance. Symbolic model checking algorithms work by manipulating state sets, and these sets are often represented by BDDs. It has been observed that the size of BDDs can grow exponentially as the model and formula increases in size. As a side effect, we do not prove that DnoDs have the strongest growth characteristics, but only one of the most pronounced ones in terms of the DnoDs."}, {"heading": "1 Introduction", "text": "In fact, it is so that most people who are able to determine themselves are not able to determine themselves, are able to determine themselves, \"he said.\" But it is not as if, \"he said.\" It is not as if. \"\" It is as if. \"\" It is as if}, {"heading": "2 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Model Checking", "text": "In this section we briefly remember the basic definitions of the model check, which are required in the rest of the paper. We follow the notation of [47, 46]. LTL (Linear Temporal Logic) is a modal logic, which aims to code how states develop over time. It has three uniary modal operators (X, G and F) and a binary modal operator (U). Its meaning is: XF is in certain states where it is true, if and only if the formula??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"}, {"heading": "2.2 Composition of Transition Systems", "text": "Each component of the global system is modeled with a transition system, which is a formal way to describe a possible transition that a system can go through. Intuitively, everything is necessary to define the state variables, the possible output states, and the possible transitions, i.e., we must clearly say whether the transition from state s to state s is possible. The formal definition is as follows: [42, 20]. Definition 1 A finite transition system is a triple (V, I,), where V = {x1,.,. xn} is a set of Boolean variables, I is a formula above V, and V \u00b2 is a formula above V, where V \u2032."}, {"heading": "2.3 Complexity and Compilability", "text": "We assume that the reader knows the basic concepts of complexity theory. [48, 31] What we mainly use in this work are the concepts of polynomial reduction and the class PSPACE.The model checking problem is also PSPACE-complete problem, and is also intractable. On the other hand, as said in the introduction, it makes sense to pre-process only part of the problem (either the model or formula) if this reduces the remaining running time. However, the analysis of how much can be gained by such pre-processing cannot be done with the standard tools of polynomial classes and reductions. The compilation capability classes [15] must be instead.The way in which the complexity of the problem is identified in the theory of NP complexity is that giving a number of increasing classes of problems is given. If a problem lies in a class C, but not in an inner class C, then we can say that this problem is more complex to solve this problem in C."}, {"heading": "3 Results", "text": "The problem with the simultaneous transition phase is PSPACEcomplete [37]. In Section 3.1 we prove that the following problems have been solved; PSPACEhard, which means that they remain PSPACE-hard even if pre-processing is allowed; 2. the same problem where the LTL formula is the fixed part; 3. a set of transition systems and a formula as a fixed part of the problem, a state like the variable part, which checks whether the state is a legal initial state; 3. the problem where the LTL formula is the variable part; 4. a set of transition systems and a formula like the fixed part, which checks whether the state is a legal initial state. 4. we can conclude that pre-processing of the model or formula does not result in a polynomial algorithm for verification."}, {"heading": "3.1 Preprocessing Model Checking", "text": "We now identify the complexity of the model verification problem when the pre-processing of the model (represented as a composition of transition systems) is allowed, both in the synchronous and in the interleaved case.Theorem 1: The model verification problem for k synchronous simultaneous process MCsyn = < (M1), as well as in the interleaved case.Theorem 1: (PSPACE-hard, and remains), poses the problem for k synchronous simultaneous process MCsyn = < (M1, X).Proof. It is similar to the proof of theorem 2. We perform a reduction from the PLANSAT-1 problem that meets the conditions of representative equivalence; the main difference is via the LTL formulas. We now consider the model verification problem for constant processes composed in an interleaved way when the model preprocessed.Theorem & The model verification problem for current MTL formulas."}, {"heading": "3.2 The Size of BDDs", "text": "This year, it will be able to reactivate the aforementioned hreeisrcW."}, {"heading": "4 Related Works", "text": "Some papers in the literature refer to the results in this article: 1. the exponential growth of the BDD size in relation to a particular problem (e.g. integer multiplication [10]); some results concern the size growth of other decision diagrams [25] in relation to certain problems. While these results are not tied to the breakdown of the polynomial hierarchy as described in this paper, they are also more specific, since they concern only certain types of data structures (e.g. OBDDs) in relation to certain problems (e.g. integer multiplication); 2. the complexity of model verification: (a) the parameterized complexity [24] of a wide variety of model verification problems [23], analyzing the state explosion problem; (b) it has been shown that [28] the complexity of model verification does not decrease under the ipotheses of some structural limitations (e.g. tree width)."}], "references": [{"title": "Symbolic reachability analisys based on SAT-solvers", "author": ["P.A. Abdullah", "P. Bjesse", "N. Een"], "venue": "Proceedings of the 6th International Conference on Tools and Algorithms for the Construction and Analisys of Systems (TACAS\u201900),", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2000}, {"title": "Algebraic decision diagrams and their applications", "author": ["R.I. Bahar", "E.A. Frohm", "C.M. Gaona", "C.M. Hachtel", "G.D. Macii", "F. Somenzi"], "venue": "Proceedings of the International Conference CAD, pages 188\u2013191,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1993}, {"title": "The complexity of searching implicit graphs", "author": ["Jos\u00e9 L. Balc\u00e1zar"], "venue": "Artif. Intell.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1996}, {"title": "The complexity of algorithmic problems on succinct instances, pages 351\u2013377", "author": ["Jos\u00e9 L. Balc\u00e1zar", "Antoni Lozano", "Jacobo Tor\u00e1n"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1992}, {"title": "Methodology and system for pratical formal verification of reactive hardware", "author": ["I. Beer", "S. Ben David", "D. Geist", "R. Gewirtzman", "M. Yoeli"], "venue": "Proceedings of the 6th International Conference on Computer-Aided Verification (CAV\u201994), volume 818 of LNCS, pages 182\u2013193. Springer,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1994}, {"title": "On the fly model checking for rctl formulas", "author": ["I. Beer", "S. Ben David", "A. Landver"], "venue": "Proceedings of the 10th International Conference on Computer-Aided Verification (CAV\u201998), volume 1427 of LNCS, pages 184\u2013 194. Springer,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1998}, {"title": "Symbolic model checking without BDDs", "author": ["A. Biere", "A. Cimatti", "E.M. Clarke", "Yunshan Zhu"], "venue": "In Proceedings of the 5th Int. Conf. Tools and Algorithms for the Construction and Analisys of Systems (TACAS\u20191999),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1999}, {"title": "VIS: a system for verification and syntesis", "author": ["R.K. Brayton", "G.D. Hachtel", "A. Sangiovanni Vincetelli", "F. Somenzi", "A. Aziz", "S.T. Cheng", "S. Edwards", "S. Khatri", "T. Kukimoto", "A. Pardo", "S. Qadeer", "R.K. Ranjan", "S. Sarwary", "T.R. Shiple", "G. Swamy", "T. Villa"], "venue": "Proceedings of the 8th International Conference on Computer-Aided Verification (CAV\u201996), volume 1102 of LNCS, pages 428\u2013432. Springer,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1996}, {"title": "Verification of arithmetic circuits using binary moment diagrams", "author": ["Randal E. Bryant", "Yirng-An Chen"], "venue": "STTT, 3(2):137\u2013155,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "On the complexity of vlsi implementations and graph representations of boolean functions with application to integer multiplication", "author": ["R.E. Bryant"], "venue": "IEEE Transactions on Computers, 40:205\u2013213,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1991}, {"title": "Symbolic model checking: 100 states and beyond", "author": ["Jerry R. Burch", "Edmund M. Clarke", "Kenneth L. McMillan", "David L. Dill", "L.J. Hwang"], "venue": "Inf. Comput.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1992}, {"title": "Complexity results for planning", "author": ["T. Bylander"], "venue": "Proceedings of the 12th International Joint Conference on Artificial Intelligence, LNCS, pages 274\u2013 279, San Mateo, CA,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1991}, {"title": "Space efficency of propositional knowledge representation formalisms", "author": ["M. Cadoli", "F.M. Donini", "P. Liberatore", "M. Schaerf"], "venue": "Journal of Artificial Intelligence Research, 13:25\u201364,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1999}, {"title": "The size of a revised knowledge base", "author": ["M. Cadoli", "F.M. Donini", "P. Liberatore", "M. Schaerf"], "venue": "Artificial Intelligence, 115:1\u201331,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2000}, {"title": "Preprocessing of intractable problems", "author": ["M. Cadoli", "F.M. Donini", "P. Liberatore", "M. Schaerf"], "venue": "Information and Computation, 176:89\u2013120,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "NuSMV 2.4 User\u2019s Manual", "author": ["R. Cavada", "A. Cimatti", "E. Olivetti", "M. Pistore", "M. Roveri"], "venue": "IRST, http://nusmv.irst.itc.it,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2007}, {"title": "NuSMV 2: An opensource tool for symbolic model checking", "author": ["A. Cimatti", "E.M. Clarke", "E. Giunchiglia", "F. Giunchiglia", "M. Pistore", "M. Roveri", "R. Sebastiani", "A. Tacchella"], "venue": "Proceedings of the 14th International Conference on Computer-Aided Verification (CAV\u201902),", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "Multi terminal binary decision diagrams: An efficient data structure for matrix representation", "author": ["E. Clarke", "M. Fujita", "P. McGeer", "K.L. McMillan", "J. Yang", "X. Zhao"], "venue": "Proceedings of the International Workshop on Logic and Synthesis, pages 1\u201315,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1993}, {"title": "Progress on the state explosion problem in model checking", "author": ["Edmund M. Clarke", "Orna Grumberg", "Somesh Jha", "Yuan Lu", "Helmut Veith"], "venue": "In Informatics,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2001}, {"title": "Model Checking", "author": ["E.M. Clarke", "O. Grumberg", "D.A. Peled"], "venue": "MIT Press,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2000}, {"title": "Expressive power and succinctness of propositional languages for preference representation", "author": ["Sylvie Coste-Marquis", "J\u00e9r\u00f4me Lang", "Paolo Liberatore", "Pierre Marquis"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}, {"title": "A knowledge compilation", "author": ["Adnan Darwiche", "Pierre Marquis"], "venue": "map. J. Artif. Intell. Res. (JAIR),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2002}, {"title": "A parametric analysis of the state explosion problem in model checking", "author": ["St\u00e9phane Demri", "Fran\u00e7ois Laroussinie", "Ph. Schnoebelen"], "venue": "In STACS,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2002}, {"title": "Parametrized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": "Springer,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1999}, {"title": "Binary decision diagrams in theory and practice", "author": ["R. Drechsler", "D. Sieling"], "venue": "International Journal on Software Tools for Technology Transfer (STTT), 3(2):112\u2013136, May", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2001}, {"title": "The complexity of problems on graphs represented as obdds", "author": ["Joan Feigenbaum", "Sampath Kannan", "Moshe Y. Vardi", "Mahesh Viswanathan"], "venue": "Chicago J. Theor. Comput. Sci.,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1999}, {"title": "Model checking and preprocessing", "author": ["Andrea Ferrara", "Paolo Liberatore", "Marco Schaerf"], "venue": "In AI*IA,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2007}, {"title": "Treewidth in verification: Local vs. global", "author": ["Andrea Ferrara", "Guoqiang Pan", "Moshe Y. Vardi"], "venue": "In LPAR,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2005}, {"title": "Strips: a new approach to the application of theorem proving to problem solving", "author": ["R. Fikes", "N. Nilson"], "venue": "Artificial Intelligence, 2:189\u2013209,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1971}, {"title": "Succinct representations of graphs", "author": ["Hana Galperin", "Avi Wigderson"], "venue": "Information and Control,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1983}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "D.S. Johnson"], "venue": "W.H. Freeman and Company, San Francisco, Ca,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1979}, {"title": "Simple on-the-fly automatic verification of linear temporal logic", "author": ["R. Gerth", "D. Peled", "M.Y. Vardi", "P.Wolper"], "venue": "In Proceedings of the 13th Symposium on Protocol Specification, Testing and Verification,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 1995}, {"title": "Succinctness as a source of complexity in logical formalisms", "author": ["Georg Gottlob", "Nicola Leone", "Helmut Veith"], "venue": "Ann. Pure Appl. Logic,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1999}, {"title": "The model checker spin", "author": ["G.J. Holzmann"], "venue": "IEEE Transactions on Software Engineering, 23(5):279\u2013295,", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1997}, {"title": "An automata theoretic approach to branching-time model checking", "author": ["O. Kupferman", "M.Y. Vardi", "P. Wolper"], "venue": "Journal of ACM, 47(2):312\u2013360,", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2000}, {"title": "An Introduction to Kolmogorov Complexity and Its Applications", "author": ["M. Li", "P. Vitanyi"], "venue": "Springer Verlag,", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1997}, {"title": "Monotonic reductions, representative equivalence, and compilation of intractable problems", "author": ["P. Liberatore"], "venue": "Journal of ACM, 48(6):1091\u20131125,", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2001}, {"title": "On the complexity of case-based planning", "author": ["Paolo Liberatore"], "venue": "Technical Report cs.AI/0407034, Computing Research Repository (CoRR),", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2004}, {"title": "The complexity of graph problems fore succinctly represented graphs", "author": ["Antoni Lozano", "Jos\u00e9 L. Balc\u00e1zar"], "venue": "In WG,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 1989}, {"title": "Temporal Verification of Reactive Systems - Safety", "author": ["Z. Manna", "A. Pnueli"], "venue": "Springer Verlag,", "citeRegEx": "42", "shortCiteRegEx": null, "year": 1995}, {"title": "Symbolic Model Checking", "author": ["K.L. McMillan"], "venue": "Kluwer Academic,", "citeRegEx": "43", "shortCiteRegEx": null, "year": 1993}, {"title": "A note on succinct representations of graphs", "author": ["Christos H. Papadimitriou", "Mihalis Yannakakis"], "venue": "Information and Control,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 1986}, {"title": "The temporal logic of programs", "author": ["A. Pnueli"], "venue": "Proceeding of the 18th IEEE Symposium on Foundations of Computer Science (FOCS\u201977), pages 46\u201357,", "citeRegEx": "45", "shortCiteRegEx": null, "year": 1977}, {"title": "The complexity of temporal logic model checking", "author": ["Ph. Schnoebelen"], "venue": "In Proceedings of the 4th Internationa Workshop in Advances in Modal Logic (AiML\u201902),", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2002}, {"title": "The complexity of propositional linear temporal logics", "author": ["A.P. Sistla", "E.M. Clarke"], "venue": "Journal of ACM, 32(3):733\u2013749,", "citeRegEx": "47", "shortCiteRegEx": null, "year": 1985}, {"title": "The polynomial-time hierarchy", "author": ["L.J. Stockmeyer"], "venue": "Theoretical Computer Science, 3:1\u201322,", "citeRegEx": "48", "shortCiteRegEx": null, "year": 1976}, {"title": "Succinct representations of counting problems", "author": ["Jacobo Tor\u00e1n"], "venue": "In AAECC, pages 415\u2013426,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 1988}, {"title": "Succinct representation and leaf languages", "author": ["Helmut Veith"], "venue": "Electronic Colloquium on Computational Complexity (ECCC),", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 1995}, {"title": "Languages represented by boolean formulas", "author": ["Helmut Veith"], "venue": "Inf. Process. Lett.,", "citeRegEx": "51", "shortCiteRegEx": "51", "year": 1997}, {"title": "Succinct representation, leaf languages, and projection reductions", "author": ["Helmut Veith"], "venue": "Inf. Comput.,", "citeRegEx": "52", "shortCiteRegEx": "52", "year": 1998}, {"title": "VIS User\u2019s Manual", "author": ["T. Villa", "G. Swarny", "T. Shiple"], "venue": "VIS Group, http://vlsi.colorado.edu/\u223cvis/usrDoc.html,", "citeRegEx": "53", "shortCiteRegEx": null, "year": 2003}, {"title": "Combining decision diagrams and SAT procedures for efficient symbolic model checking", "author": ["P.F. Williams", "A. Biere", "E.M. Clarke", "A. Gupta"], "venue": "Proceedings of the 14th International Conference on Computer-Aided Verification (CAV 2000), volume 1855 of LNCS, pages 124\u2013138. Springer,", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2000}], "referenceMentions": [{"referenceID": 19, "context": "Temporal Logic Model Checking [20] is a verification method for discrete systems.", "startOffset": 30, "endOffset": 34}, {"referenceID": 4, "context": "It is used, for example, for the verification of protocols and hardware circuits [5].", "startOffset": 81, "endOffset": 84}, {"referenceID": 33, "context": "The most famous ones are SPIN [35] and SMV [43] (with its many incarnations: NuSMV [17], RuleBase [6]), VIS [8], and FormalCheck [34].", "startOffset": 30, "endOffset": 34}, {"referenceID": 40, "context": "The most famous ones are SPIN [35] and SMV [43] (with its many incarnations: NuSMV [17], RuleBase [6]), VIS [8], and FormalCheck [34].", "startOffset": 43, "endOffset": 47}, {"referenceID": 16, "context": "The most famous ones are SPIN [35] and SMV [43] (with its many incarnations: NuSMV [17], RuleBase [6]), VIS [8], and FormalCheck [34].", "startOffset": 83, "endOffset": 87}, {"referenceID": 5, "context": "The most famous ones are SPIN [35] and SMV [43] (with its many incarnations: NuSMV [17], RuleBase [6]), VIS [8], and FormalCheck [34].", "startOffset": 98, "endOffset": 101}, {"referenceID": 7, "context": "The most famous ones are SPIN [35] and SMV [43] (with its many incarnations: NuSMV [17], RuleBase [6]), VIS [8], and FormalCheck [34].", "startOffset": 108, "endOffset": 111}, {"referenceID": 19, "context": "Two temporal logics are mainly used to define the specification: CTL [20] and LTL [45].", "startOffset": 69, "endOffset": 73}, {"referenceID": 42, "context": "Two temporal logics are mainly used to define the specification: CTL [20] and LTL [45].", "startOffset": 82, "endOffset": 86}, {"referenceID": 15, "context": "Many tools allow to build the model separately from checking the formula [16, 53, 36].", "startOffset": 73, "endOffset": 85}, {"referenceID": 50, "context": "Many tools allow to build the model separately from checking the formula [16, 53, 36].", "startOffset": 73, "endOffset": 85}, {"referenceID": 15, "context": "Many tools allow populating a property database [16, 53, 36], i.", "startOffset": 48, "endOffset": 60}, {"referenceID": 50, "context": "Many tools allow populating a property database [16, 53, 36], i.", "startOffset": 48, "endOffset": 60}, {"referenceID": 14, "context": "The technical tool we use is the compilability theory [15, 39].", "startOffset": 54, "endOffset": 62}, {"referenceID": 36, "context": "The technical tool we use is the compilability theory [15, 39].", "startOffset": 54, "endOffset": 62}, {"referenceID": 40, "context": "Finally, we answer to a long-time standing question in Symbolic Model Checking [43, 11].", "startOffset": 79, "endOffset": 87}, {"referenceID": 10, "context": "Finally, we answer to a long-time standing question in Symbolic Model Checking [43, 11].", "startOffset": 79, "endOffset": 87}, {"referenceID": 51, "context": "It also holds for all decision diagrams representing integer-value functions whose evaluation problem is in the polynomial hierarchy, such as BEDs [54], BMD and *BMD [9], RBCs [1], MTBDDs [18], and ADDs [2].", "startOffset": 147, "endOffset": 151}, {"referenceID": 8, "context": "It also holds for all decision diagrams representing integer-value functions whose evaluation problem is in the polynomial hierarchy, such as BEDs [54], BMD and *BMD [9], RBCs [1], MTBDDs [18], and ADDs [2].", "startOffset": 166, "endOffset": 169}, {"referenceID": 0, "context": "It also holds for all decision diagrams representing integer-value functions whose evaluation problem is in the polynomial hierarchy, such as BEDs [54], BMD and *BMD [9], RBCs [1], MTBDDs [18], and ADDs [2].", "startOffset": 176, "endOffset": 179}, {"referenceID": 17, "context": "It also holds for all decision diagrams representing integer-value functions whose evaluation problem is in the polynomial hierarchy, such as BEDs [54], BMD and *BMD [9], RBCs [1], MTBDDs [18], and ADDs [2].", "startOffset": 188, "endOffset": 192}, {"referenceID": 1, "context": "It also holds for all decision diagrams representing integer-value functions whose evaluation problem is in the polynomial hierarchy, such as BEDs [54], BMD and *BMD [9], RBCs [1], MTBDDs [18], and ADDs [2].", "startOffset": 203, "endOffset": 206}, {"referenceID": 44, "context": "We follow the notation of [47, 46].", "startOffset": 26, "endOffset": 34}, {"referenceID": 43, "context": "We follow the notation of [47, 46].", "startOffset": 26, "endOffset": 34}, {"referenceID": 19, "context": "A Kripke structure can be seen as a transition system [20].", "startOffset": 54, "endOffset": 58}, {"referenceID": 39, "context": "Thus the global system is obtained by parallel composition of the transition systems representing its components and sharing some variables [42, 20]; using this approach, we can give results valid for all model checkers.", "startOffset": 140, "endOffset": 148}, {"referenceID": 19, "context": "Thus the global system is obtained by parallel composition of the transition systems representing its components and sharing some variables [42, 20]; using this approach, we can give results valid for all model checkers.", "startOffset": 140, "endOffset": 148}, {"referenceID": 39, "context": "The formal definition is as follows [42, 20].", "startOffset": 36, "endOffset": 44}, {"referenceID": 19, "context": "The formal definition is as follows [42, 20].", "startOffset": 36, "endOffset": 44}, {"referenceID": 45, "context": "3 Complexity and Compilability We assume that the reader knows the basic concepts of complexity theory [48, 31].", "startOffset": 103, "endOffset": 111}, {"referenceID": 30, "context": "3 Complexity and Compilability We assume that the reader knows the basic concepts of complexity theory [48, 31].", "startOffset": 103, "endOffset": 111}, {"referenceID": 14, "context": "The compilability classes [15] have to be used instead.", "startOffset": 26, "endOffset": 30}, {"referenceID": 14, "context": "More details can be found in [15].", "startOffset": 29, "endOffset": 33}, {"referenceID": 14, "context": "Since the regular polynomial reductions are not appropriate when preprocessing is allowed, ad-hoc reductions (called nu-comp reductions in [15]) have been defined.", "startOffset": 139, "endOffset": 143}, {"referenceID": 36, "context": "Can we use this reduction to prove the \u2016;C-hardness of B ? Liberatore [39] shows sufficient conditions that should hold on A as well as on the reduction.", "startOffset": 70, "endOffset": 74}, {"referenceID": 36, "context": "The condition of representative equivalence can be proved to imply that the problem B is \u2016;C-hard, if A is C-hard [39].", "startOffset": 114, "endOffset": 118}, {"referenceID": 28, "context": "PLANSAT \u2217 1 is the following problem of planning: giving a STRIPS [29] instance y = \u3008P,O, I,G\u3009 in which the operators have an arbitrary number of preconditions and only one postcondition, is there a plan for y? PLANSAT \u2217 1 is PSPACE-Complete [12].", "startOffset": 66, "endOffset": 70}, {"referenceID": 11, "context": "PLANSAT \u2217 1 is the following problem of planning: giving a STRIPS [29] instance y = \u3008P,O, I,G\u3009 in which the operators have an arbitrary number of preconditions and only one postcondition, is there a plan for y? PLANSAT \u2217 1 is PSPACE-Complete [12].", "startOffset": 242, "endOffset": 246}, {"referenceID": 14, "context": "Given the limitation of space we cannot give the full definitions for compilability, for which the reader should refer to [15] for an introduction, to [14, 13] for an application to the succinctness of some formalisms, to [39] for further applications and technical advances.", "startOffset": 122, "endOffset": 126}, {"referenceID": 13, "context": "Given the limitation of space we cannot give the full definitions for compilability, for which the reader should refer to [15] for an introduction, to [14, 13] for an application to the succinctness of some formalisms, to [39] for further applications and technical advances.", "startOffset": 151, "endOffset": 159}, {"referenceID": 12, "context": "Given the limitation of space we cannot give the full definitions for compilability, for which the reader should refer to [15] for an introduction, to [14, 13] for an application to the succinctness of some formalisms, to [39] for further applications and technical advances.", "startOffset": 151, "endOffset": 159}, {"referenceID": 36, "context": "Given the limitation of space we cannot give the full definitions for compilability, for which the reader should refer to [15] for an introduction, to [14, 13] for an application to the succinctness of some formalisms, to [39] for further applications and technical advances.", "startOffset": 222, "endOffset": 226}, {"referenceID": 34, "context": "The Model Checking problem for concurrent transition systems is PSPACEcomplete [37].", "startOffset": 79, "endOffset": 83}, {"referenceID": 40, "context": "OBDDs) currently used in model checkers based on the Symbolic Model Checking algorithms [43] (such as SMV and NuSMV) cannot be avoided in general.", "startOffset": 88, "endOffset": 92}, {"referenceID": 19, "context": "We point out that most of Temporal Logic Model Checking algorithms [20] fall in one of three classes: Symbolic Model Checking algorithms, which work on symbolic representation of M ; algorithms based on Bounded Model Checking [7] (i.", "startOffset": 67, "endOffset": 71}, {"referenceID": 6, "context": "We point out that most of Temporal Logic Model Checking algorithms [20] fall in one of three classes: Symbolic Model Checking algorithms, which work on symbolic representation of M ; algorithms based on Bounded Model Checking [7] (i.", "startOffset": 226, "endOffset": 229}, {"referenceID": 31, "context": "[32]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "PLANSAT \u2217 1 is the following problem of planning: giving a STRIPS [29] instance y = \u3008P,O, I,G\u3009 in which the operators have an arbitrary number of preconditions and only one postcondition, is there a plan for y? PLANSAT \u2217 1 is PSPACE-complete [12].", "startOffset": 66, "endOffset": 70}, {"referenceID": 11, "context": "PLANSAT \u2217 1 is the following problem of planning: giving a STRIPS [29] instance y = \u3008P,O, I,G\u3009 in which the operators have an arbitrary number of preconditions and only one postcondition, is there a plan for y? PLANSAT \u2217 1 is PSPACE-complete [12].", "startOffset": 242, "endOffset": 246}, {"referenceID": 37, "context": "The hardness follows from a polynomial time reduction from the problem \u3008(P,O,G), I\u3009, that can be easily shown \u2016;PSPACE-complete on the basis of the results in [40].", "startOffset": 159, "endOffset": 163}, {"referenceID": 14, "context": "12 in [15], we conclude that there is no poly-size reduction from MCs0 to the evaluation problem for a BDD, if PSPACE 6\u2286 \u03a0p2 \u2229 \u03a3 p 2.", "startOffset": 6, "endOffset": 10}, {"referenceID": 51, "context": "Instances of such data structures, currently used in Symbolic Model Checking tools, are BDDs, Boolean Expression Diagrams (BEDs) [54] and Reduced Boolean Circuits (RBCs) [1].", "startOffset": 129, "endOffset": 133}, {"referenceID": 0, "context": "Instances of such data structures, currently used in Symbolic Model Checking tools, are BDDs, Boolean Expression Diagrams (BEDs) [54] and Reduced Boolean Circuits (RBCs) [1].", "startOffset": 170, "endOffset": 173}, {"referenceID": 17, "context": "Our results hold also for data structures used to represent integer-value functions, like Multi terminal binary decision diagrams (MTBDDs) [18], Algebraic Decision Diagrams (ADDs) [2]; see for details the survey [25].", "startOffset": 139, "endOffset": 143}, {"referenceID": 1, "context": "Our results hold also for data structures used to represent integer-value functions, like Multi terminal binary decision diagrams (MTBDDs) [18], Algebraic Decision Diagrams (ADDs) [2]; see for details the survey [25].", "startOffset": 180, "endOffset": 183}, {"referenceID": 24, "context": "Our results hold also for data structures used to represent integer-value functions, like Multi terminal binary decision diagrams (MTBDDs) [18], Algebraic Decision Diagrams (ADDs) [2]; see for details the survey [25].", "startOffset": 212, "endOffset": 216}, {"referenceID": 9, "context": "integer multiplication [10]); some results concern the size growth of other decision diagrams [25] respect to particular problems.", "startOffset": 23, "endOffset": 27}, {"referenceID": 24, "context": "integer multiplication [10]); some results concern the size growth of other decision diagrams [25] respect to particular problems.", "startOffset": 94, "endOffset": 98}, {"referenceID": 23, "context": "(a) the parametrized complexity [24] of a wide variety of model checking problems [23], analyzing the state explosion problem; (b) it has been shown that [28]: i.", "startOffset": 32, "endOffset": 36}, {"referenceID": 22, "context": "(a) the parametrized complexity [24] of a wide variety of model checking problems [23], analyzing the state explosion problem; (b) it has been shown that [28]: i.", "startOffset": 82, "endOffset": 86}, {"referenceID": 27, "context": "(a) the parametrized complexity [24] of a wide variety of model checking problems [23], analyzing the state explosion problem; (b) it has been shown that [28]: i.", "startOffset": 154, "endOffset": 158}, {"referenceID": 26, "context": "(c) the compilability of the model checking problem [27]: it remains PSPACE-complete even if a part of the input, either the implicit model or the formula, is preprocessed using any amount of time and storing the result of this prerpocesing step in a polynomial-sized data structure.", "startOffset": 52, "endOffset": 56}, {"referenceID": 18, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 87, "endOffset": 91}, {"referenceID": 25, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 29, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 41, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 2, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 38, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 3, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 46, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 47, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 48, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 49, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 32, "context": "The state explosion problem can be partially explained by complexity theoretic results [19] ; in fact, problems (also whose inputs are graphs), usually increase their worst case complexity when the input is represented by BDD or other Boolean formalisms [26, 30, 44, 3, 41, 4, 49, 50, 51, 52, 33].", "startOffset": 254, "endOffset": 296}, {"referenceID": 35, "context": "classic information theoretic argument shows that only a small fraction of all finite Kripke structures can be exponentially compressed [38].", "startOffset": 136, "endOffset": 140}, {"referenceID": 20, "context": "succinctness of languages; for instance [21], in which succinctness of language for preferences are discussed, and [22] that presents results on the succinctness of several formalism, including BDDs and CNF.", "startOffset": 40, "endOffset": 44}, {"referenceID": 21, "context": "succinctness of languages; for instance [21], in which succinctness of language for preferences are discussed, and [22] that presents results on the succinctness of several formalism, including BDDs and CNF.", "startOffset": 115, "endOffset": 119}], "year": 2010, "abstractText": "Temporal Logic Model Checking is a verification method in which we describe a system, the model, and then we verify whether some properties, expressed in a temporal logic formula, hold in the system. It has many industrial applications. In order to improve performance, some tools allow preprocessing of the model, verifying on-line a set of properties reusing the same compiled model; we prove that the complexity of the Model Checking problem, without any preprocessing or preprocessing the model or the formula in a polynomial data structure, is the same. As a result preprocessing does not always exponentially improve performance. Symbolic Model Checking algorithms work by manipulating sets of states, and these sets are often represented by BDDs. It has been observed that the size of BDDs may grow exponentially as the model and formula increase in size. As a side result, we formally prove that a superpolynomial increase of the size of these BDDs is unavoidable in the worst case. While this exponential growth has been empirically observed, to the best of our knowledge it has never been proved so far in general terms. This result not only holds for all types of BDDs regardless of the variable ordering, but also for more powerful data structures, such as BEDs, RBCs, MTBDDs, and ADDs.", "creator": "LaTeX with hyperref package"}}}