{"id": "1012.5847", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Dec-2010", "title": "On Elementary Loops of Logic Programs", "abstract": "Using the notion of an elementary loop, Gebser and Schaub refined the theorem on loop formulas due to Lin and Zhao by considering loop formulas of elementary loops only. In this article, we reformulate their definition of an elementary loop, extend it to disjunctive programs, and study several properties of elementary loops, including how maximal elementary loops are related to minimal unfounded sets. The results provide useful insights into the stable model semantics in terms of elementary loops. For a nondisjunctive program, using a graph-theoretic characterization of an elementary loop, we show that the problem of recognizing an elementary loop is tractable. On the other hand, we show that the corresponding problem is {\\sf coNP}-complete for a disjunctive program. Based on the notion of an elementary loop, we present the class of Head-Elementary-loop-Free (HEF) programs, which strictly generalizes the class of Head-Cycle-Free (HCF) programs due to Ben-Eliyahu and Dechter. Like an HCF program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body.", "histories": [["v1", "Tue, 28 Dec 2010 21:49:11 GMT  (49kb)", "https://arxiv.org/abs/1012.5847v1", "36 pages, 2 figures"], ["v2", "Sun, 2 Jan 2011 15:34:01 GMT  (49kb)", "http://arxiv.org/abs/1012.5847v2", "36 pages, 2 figures"]], "COMMENTS": "36 pages, 2 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["martin gebser", "joohyung lee", "yuliya lierler"], "accepted": false, "id": "1012.5847"}, "pdf": {"name": "1012.5847.pdf", "metadata": {"source": "CRF", "title": "On Elementary Loops of Logic Programs", "authors": ["Martin Gebser", "Joohyung Lee", "Yuliya Lierler"], "emails": ["gebser@cs.uni-potsdam.de)", "joolee@asu.edu)", "yuliya@cs.uky.edu)"], "sections": [{"heading": null, "text": "ar Xiv: 101 2.58 47KEYWORDS: stable model semantics, loop formulas, unfounded propositions"}, {"heading": "1 Introduction", "text": "Unlike other translations that modify the vocabulary of a logical program (Ben-Eliyahu and Dechter 1994; Lin and Zhao 2003; Janhunen 2006), the original theorem on loop formulas is the stable model of a nondisjunctive program in terms of the models of its completion that fulfill the loop formulas of all loops in the program. This allows us to calculate stable models using SAT solvers that have led to the conception of assat1 (Lin and Zhao 2004) and cmodels2 (Giunchiglia et al) response sets. Due to its importance in semantic understanding and stable model formulas, the theorem has been extended to more general classes of logical programs, such as Lee and Junctive programs."}, {"heading": "2 Nondisjunctive Programs", "text": "After explaining the relevant background of nondisjunctive programs, this section introduces elementary loops of nondisjunctive programs, refines elementary loops to elementary unsubstantiated sets, creating a syntactical characterization of minimal unsubstantiated sets, and demonstrates that elementary loops of nondisjunctive programs can be detected in polynomial time. (The statements of the theorems and propositions in this section, which apply to nondisjunctive programs, are generalized to disjunctive programs or HEF programs in later sections, and the evidence is provided there.) Finally, we compare our reformulation of elementary loops with the definition of Gebser and Schaub (2005)."}, {"heading": "2.1 Background", "text": "\"We are not dependent.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"\" We. \"\" \"We.\" \"\" We. \"\" \"We.\" \"\" \"We.\" \"\" \"\" We. \"\" \"\" \"\" \"\" We. \"\" \"\" \"\" \"\" We. \"\" \"\" \"We.\" \"\" \"\" We. \"\" \"\" We. \"\" \"\" \"\" \"We.\". \"\" \"\" \"\" We. \"\" \"\" \"\" \"We.\" \"\" \"\" \"We.\" \"\" \"\" \"We.\" \"\" \"\" \"We.\". \"\" \"\" \"\" We.. \"\" \"\". \"\" \"\" \"\" We. \".\" \"\". \"\" \"\" \"\" \"We.\". \"\" \"\" \".\" \"\" \"\" We. \".\" \"\" \"\" \".\" \"\" \"\" \"We.\". \"\" \".\" \"\" \".\" \"\" \".\" \"\" \"We.\". \".\". \"\" \".\" \"\". \"\" \"\". \"\" \"\" We. \".\". \".\". \".\". \"\". \"\". \"\" \".\" \"\". \"\" \"We.\". \".\". \".\". \".\". \"\". \"\". \"\" \"\". \".\" \"\" We. \".\". \".\". \".\". \".\". \".\". \".\" \".\". \".\". \"\". \".\". \".\" \".\". \".\" \".\". \".\". \"\". \".\". \".\". \".\". \".\" \"\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\" We. \".\". \".\"."}, {"heading": "2.2 Elementary Loops of Nondisjunctive Programs", "text": "In this section we present a reformulation of its definition of an elementary loop and examine its properties. We compare our reformulation with the original definition of Y, which occurs in section 2.5.To begin with the following sentence, the following sentence tells us that a loop can be defined with the definition of a dependency without naming the dependencies of Y and other loops, which occur in section 2.5.It is a loop of Y, which occurs in section 2.5.2, which does not occur in sequence of X, but in sequence of X, in sequence of X, in sequence of X, in sequence of X and in sequence of X, in sequeer, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel, in sequel in, in sequel, in sequel in, in sequel in, in sequel in, in sequel in, in sequel in sequel, in sequel in, in sequel in, in sequel in sequel, in sequel in, in sequel in, in sequel in sequel in"}, {"heading": "2.3 Elementarily Unfounded Sets for Nondisjunctive Programs", "text": "If we modify the condition (c) in theorem 1 by replacing \"loops\" in their statement with \"maximum loops,\" then the condition of \"maximum loops\" in their statement is. \"(c) The condition of\" maximum loops \"is not even an elementary loop of\" elementary loops. \"(c) The condition of\" elementary loops \"is not sufficient to consider the maximum elementary loops of\" elementary loops. \"(c) The condition of\" elementary loops \"is not sufficient to consider the maximum elementary loops only.\" (c) The condition of \"elementary loops\" is not sufficient to consider the maximum elementary loops in the statement of theorem 1, the \"maximum elementary loops\" is not even an elementary loop of \"elementary loops.\" (c) The condition of \"elementary loops\" is not sufficient to consider the maximum elementary loops in the statement of theorem (c)."}, {"heading": "2.4 Recognizing Elementary Loops of Nondisjunctive Programs", "text": "The definition of an elementary loop given in Section 2.2 involves considering all of its nonempty independent subsets (or at least all of the elementary loops that are subsets), which could imply that deciding whether a particular group of atoms is an elementary loop is a mathematically difficult problem. Gebser and Schaub (2005), however, showed that this is not the case with nondisjunctive programs, and pointed out that the notion of a positive dependency graph is not sufficiently meaningful to distinguish between elementary loops and non-elementary loops (program 0.01 and the program in (6) have the same dependency graph, but their elementary loops are different), and instead used the rather complicated notion of a body-head dependency graph to identify elementary loops. In this section, we simplify their result by still referring to a positive dependency graph, but showing that just a few dependencies are more necessary to distinguish one from another."}, {"heading": "2.5 Comparison with Gebser-Schaub Definition", "text": "In this section we compare our reformulation of elementary loops with the original definition of Gebser and Schaub (2005) for non-disjunctive programs."}, {"heading": "3 Disjunctive Programs", "text": "After explaining the relevant background to disjunctive programs, in this section we generalize the notions of an elementary loop and a fundamentally unfounded set of disjunctive programs. We also provide evidence for the generalizations of the statements from the previous section; such generalized results also apply to the class of non-disjunctive programs as a fragment of disjunctive programs. Furthermore, we show that, unlike non-disjunctive programs, detecting an elementary loop is insoluble in the case of arbitrary disjunctive programs, but remains comprehensible under a certain syntactic condition."}, {"heading": "3.1 Background", "text": "A disjunctive rule is an expression of forma1;. ak, ak, ak, ak, q, q,.., al, not al + 1,.., not am, not am + 1,.., not an (11), where n, m, k, 0 and a1,.., take the place of the propositive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11), disjunctive (11)."}, {"heading": "3.2 Elementary Loops of Disjunctive Programs", "text": "In this section, we generalize the definition of an elementary loop to disjunctive programs. (A) A loop of a disjunctive program can be defined without reference to a definition, as in Proposition 1.Proposition 1.Propositiond 1 for each disjunctive program and each nonempty set of X atoms occurring in \"X,\" X is a loop of \"X,\" and \"X is a loop of\" X, \"for each nonempty own subset of Y.\" From left to right: Assume that X is a loop of \"X.\" If X is a singleton, it is clear that X is not a singleton, let's take any nonempty own subset of Y of X. \"Since both Y and X\\ Y are not empty, there is a path from any atom in\" Y to any atom in the graph dependency, which includes all the links in the path to \"X.\" This implies that there is an edge of an atom in \"Y.\""}, {"heading": "3.3 Elementarily Unfounded Sets for Disjunctive Programs", "text": "That is, the definition of Y is reduced to the definition of Y for non-disjunctive programs given earlier. Also, if Y is not disjunctive and Y is not a singleton, then Y is an elementary loop of X, Y iff Y is an elementary loop of X, Y iff Y. We expand the definition of an elementary unfounded Y to disjunctive programs by replacing \"X X X\" with a disjunctive program: for a disjunctive program X, Y iff Y."}, {"heading": "3.4 Recognizing Elementary Loops of Disjunctive Programs", "text": "Although deciding whether a particular set of atoms is an elementary loop of a nondisjunctive program can be done efficiently, the corresponding problem turns out to be insoluble in the case of arbitrary disjunctive programs, since it is easy to verify whether a given nonempty subset of Y has not been absorbed into Y for a particular group of atoms. For coNP hardness, we reduce the coNP-hard problem of deciding whether a finite set of atoms is \"groundless\" for a disjunctive program (Leone et al. 1997), i.e., X does not contain nonempty unfounded sentences for coNP hardness, X. Using a new atom that does not occur in the U.S. or in X, we construct a program like this."}, {"heading": "4 Head-Elementary-Loop-Free Programs", "text": "In general, the calculation of stable models of a disjunctive program is more difficult than the calculation of stable models of a non-disjunctive program (pus and thank God, 1995). On the other hand, HCF programs are \"simple\" disjunctive programs that can be converted into equivalent nondisjunctive programs. By referring to elementary loops instead of loops in the definition of an HCF program, we define a class of programs that is more general than HCF programs: We say that a disjunctive program is a head-elementary-loop-free (HEF) if for each rule (12) there is an elementary loop Y of the respective loop. Since every HCF program is also a loop, it is clear that every HCF program is a program."}, {"heading": "5 HEF Programs and Inherent Tightness", "text": "If we add more rules to a program, then a stable model of the original program remains a stable model of the extended program if it meets the new rules. Proposition 9For each disjunctive program, there is a stable model of \"X.\" Then there is a subset of \"X\" that X is a stable model of \"X.\" Proposition 9From left to right, it is clear that Y is a model of \"X\" and \"X\" that is not a stable model of \"X.\" With respect to Theoremd 1, Proposition 9 tells us that X is a model of \"X,\" provided that X is a model of \"X\" to verify that X is a stable model of \"X.\""}, {"heading": "6 HEF Programs and Stability Checking", "text": "In order to verify the stability of a model in polynomial time, Leone et al. (1997) have presented an operational framework that makes it possible to decide for HCF programs whether a model is stable. To verify the stability of a model in polynomial time, they define a sequence in the X (Y), R 1 (Y), X (Y), X (Y), X (Z) that leads to a limit in the X (Y), X (Y), X (Y), X (Y), X (Y), X (Y), X (Y), X (Y), X (Y), X (Y), X (Y)."}, {"heading": "7 Conclusion", "text": "In fact, most of them are able to play by the rules that they have imposed on themselves, and they are able to play by the rules that they have imposed on themselves."}, {"heading": "Acknowledgments", "text": "We would like to thank Selim Erdog, Tomi Janhunen, Dan Lessin, Vladimir Lifschitz, Torsten Schaub, Jicheng Zhao and the anonymous arbitrators of (Gebser et al. 2006; Gebser et al. 2007) and this work for their useful comments. Martin Gebser was partially supported by the German Research Foundation under the auspices of SCHA 550 / 8-1. Joohyung Lee was partially supported by the National Science Foundation under the auspices of IIS-0916116 and the Office of the Director of National Intelligence (ODNI) Intelligence, Advanced Research Projects Activity (IARPA), by the US Army. Yuliya Lierler was partially supported by the National Science Foundation under the auspices of IIS-0712113 and by a 2010 Computing Innovation Fellowship."}], "references": [{"title": "Towards a theory of declarative knowledge", "author": ["K. Apt", "H. Blair", "A. Walker"], "venue": "Foundations of Deductive Databases and Logic Programming, J. Minker, Ed. Morgan Kaufmann, 89\u2013148.", "citeRegEx": "Apt et al\\.,? 1988", "shortCiteRegEx": "Apt et al\\.", "year": 1988}, {"title": "Logic programming and knowledge representation", "author": ["C. Baral", "M. Gelfond"], "venue": "Journal of Logic Programming 19,20, 73\u2013148.", "citeRegEx": "Baral and Gelfond,? 1994", "shortCiteRegEx": "Baral and Gelfond", "year": 1994}, {"title": "Propositional semantics for disjunctive logic programs", "author": ["R. Ben-Eliyahu", "R. Dechter"], "venue": "Annals of Mathematics and Artificial Intelligence 12, 53\u201387.", "citeRegEx": "Ben.Eliyahu and Dechter,? 1994", "shortCiteRegEx": "Ben.Eliyahu and Dechter", "year": 1994}, {"title": "First-order loop formulas for normal logic programs", "author": ["Y. Chen", "F. Lin", "Y. Wang", "M. Zhang"], "venue": "Proceedings of the Tenth International Conference on Principles of Knowledge Representation and Reasoning (KR\u201906), P. Doherty, J. Mylopoulos, and C. Welty, Eds. AAAI Press, 298\u2013307.", "citeRegEx": "Chen et al\\.,? 2006", "shortCiteRegEx": "Chen et al\\.", "year": 2006}, {"title": "Negation as failure", "author": ["K. Clark"], "venue": "Logic and Data Bases, H. Gallaire and J. Minker, Eds. Plenum Press, New York, 293\u2013322.", "citeRegEx": "Clark,? 1978", "shortCiteRegEx": "Clark", "year": 1978}, {"title": "Conflict-driven disjunctive answer set solving", "author": ["C. Drescher", "M. Gebser", "T. Grote", "B. Kaufmann", "A. K\u00f6nig", "M. Ostrowski", "T. Schaub"], "venue": "Proceedings of the Eleventh International Conference on Principles of Knowledge Representation and Reasoning (KR\u201908), G. Brewka and J. Lang, Eds. AAAI Press, 422\u2013432.", "citeRegEx": "Drescher et al\\.,? 2008", "shortCiteRegEx": "Drescher et al\\.", "year": 2008}, {"title": "Uniform equivalence of logic programs under the stable model semantics", "author": ["T. Eiter", "M. Fink"], "venue": "Proceedings of the Nineteenth International Conference on Logic Programming (ICLP\u201903), C. Palamidessi, Ed. Springer-Verlag, 224\u2013238.", "citeRegEx": "Eiter and Fink,? 2003", "shortCiteRegEx": "Eiter and Fink", "year": 2003}, {"title": "On the computational cost of disjunctive logic programming: Propositional case", "author": ["T. Eiter", "G. Gottlob"], "venue": "Annals of Mathematics and Artificial Intelligence 15, 3-4, 289\u2013323.", "citeRegEx": "Eiter and Gottlob,? 1995", "shortCiteRegEx": "Eiter and Gottlob", "year": 1995}, {"title": "Tight logic programs", "author": ["E. Erdem", "V. Lifschitz"], "venue": "Theory and Practice of Logic Programming 3, 499\u2013518.", "citeRegEx": "Erdem and Lifschitz,? 2003", "shortCiteRegEx": "Erdem and Lifschitz", "year": 2003}, {"title": "Consistency of Clark\u2019s completion and existence of stable models", "author": ["F. Fages"], "venue": "Journal of Methods of Logic in Computer Science 1, 51\u201360.", "citeRegEx": "Fages,? 1994", "shortCiteRegEx": "Fages", "year": 1994}, {"title": "On the complexity of identifying head elementary set free programs", "author": ["F. Fassetti", "L. Palopoli"], "venue": "Theory and Practice of Logic Programming 10(1), 113\u2013123.", "citeRegEx": "Fassetti and Palopoli,? 2010", "shortCiteRegEx": "Fassetti and Palopoli", "year": 2010}, {"title": "A new perspective on stable models", "author": ["P. Ferraris", "J. Lee", "V. Lifschitz"], "venue": "Proceedings of the Twentieth International Joint Conference on Artificial Intelligence (IJCAI\u201907). 372\u2013379.", "citeRegEx": "Ferraris et al\\.,? 2007", "shortCiteRegEx": "Ferraris et al\\.", "year": 2007}, {"title": "Stable models and circumscription", "author": ["P. Ferraris", "J. Lee", "V. Lifschitz"], "venue": "Artificial Intelligence 175, 236\u2013263.", "citeRegEx": "Ferraris et al\\.,? 2011", "shortCiteRegEx": "Ferraris et al\\.", "year": 2011}, {"title": "Elementary sets for logic programs", "author": ["M. Gebser", "J. Lee", "Y. Lierler"], "venue": "Proceedings of the Twenty-first AAAI Conference on Artificial Intelligence (AAAI\u201906).", "citeRegEx": "Gebser et al\\.,? 2006", "shortCiteRegEx": "Gebser et al\\.", "year": 2006}, {"title": "Head-elementary-set-free logic programs", "author": ["M. Gebser", "J. Lee", "Y. Lierler"], "venue": "Procedings of the Ninth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201907). 149\u2013161.", "citeRegEx": "Gebser et al\\.,? 2007", "shortCiteRegEx": "Gebser et al\\.", "year": 2007}, {"title": "Loops: Relevant or redundant? In Proceedings of the Eighth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201905)", "author": ["M. Gebser", "T. Schaub"], "venue": "53\u201365.", "citeRegEx": "Gebser and Schaub,? 2005", "shortCiteRegEx": "Gebser and Schaub", "year": 2005}, {"title": "Alternative characterizations for program equivalence under answer-set semantics based on unfounded sets", "author": ["M. Gebser", "T. Schaub", "H. Tompits", "S. Woltran"], "venue": "Proceedings of the Fifth International Symposium on Foundations of Information and Knowledge Systems (FoIKS\u201908), S. Hartmann and G. Kern-Isberner, Eds. Springer-Verlag, 24\u201341.", "citeRegEx": "Gebser et al\\.,? 2008", "shortCiteRegEx": "Gebser et al\\.", "year": 2008}, {"title": "Disjunctive defaults", "author": ["M. Gelfond", "V. Lifschitz", "H. Przymusi\u0144ska", "M. Truszczy\u0144ski"], "venue": "Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning (KR\u201991), J. Allen, R. Fikes, and E. Sandewall, Eds. 230\u2013237.", "citeRegEx": "Gelfond et al\\.,? 1991", "shortCiteRegEx": "Gelfond et al\\.", "year": 1991}, {"title": "SAT-based answer set programming", "author": ["E. Giunchiglia", "Y. Lierler", "M. Maratea"], "venue": "Proceedings of the Nineteenth AAAI Conference on Artificial Intelligence (AAAI). 61\u201366.", "citeRegEx": "Giunchiglia et al\\.,? 2004", "shortCiteRegEx": "Giunchiglia et al\\.", "year": 2004}, {"title": "Negation as failure in the head", "author": ["K. Inoue", "C. Sakama"], "venue": "Journal of Logic Programming 35, 39\u201378.", "citeRegEx": "Inoue and Sakama,? 1998", "shortCiteRegEx": "Inoue and Sakama", "year": 1998}, {"title": "Some (in)translatability results for normal logic programs and propositional theories", "author": ["T. Janhunen"], "venue": "Journal of Applied Non-Classical Logics 16, 1-2, 35\u201386.", "citeRegEx": "Janhunen,? 2006", "shortCiteRegEx": "Janhunen", "year": 2006}, {"title": "Unfolding partiality and disjunctions in stable model semantics", "author": ["T. Janhunen", "I. Niemel\u00e4", "D. Seipel", "P. Simons", "You", "J.-H."], "venue": "ACM Transactions on Computational Logic 7, 1, 1\u201337.", "citeRegEx": "Janhunen et al\\.,? 2006", "shortCiteRegEx": "Janhunen et al\\.", "year": 2006}, {"title": "Modularity aspects of disjunctive stable models", "author": ["T. Janhunen", "E. Oikarinen", "H. Tompits", "S. Woltran"], "venue": "Journal of Artificial Intelligence Research 35, 813\u2013 857.", "citeRegEx": "Janhunen et al\\.,? 2009", "shortCiteRegEx": "Janhunen et al\\.", "year": 2009}, {"title": "Enhancing disjunctive logic programming systems by SAT checkers", "author": ["C. Koch", "N. Leone", "G. Pfeifer"], "venue": "Artificial Intelligence 151, 177\u2013212.", "citeRegEx": "Koch et al\\.,? 2003", "shortCiteRegEx": "Koch et al\\.", "year": 2003}, {"title": "Nondefinite vs", "author": ["J. Lee"], "venue": "definite causal theories. In Proceedings of the Seventh International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201904). 141\u2013153.", "citeRegEx": "Lee,? 2004", "shortCiteRegEx": "Lee", "year": 2004}, {"title": "A model-theoretic counterpart of loop formulas", "author": ["J. Lee"], "venue": "Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI\u201905). Professional Book Center, 503\u2013508.", "citeRegEx": "Lee,? 2005", "shortCiteRegEx": "Lee", "year": 2005}, {"title": "Loop formulas for disjunctive logic programs", "author": ["J. Lee", "V. Lifschitz"], "venue": "Proceedings of Nineteenth International Conference on Logic Programming (ICLP\u201903). 451\u2013465.", "citeRegEx": "Lee and Lifschitz,? 2003", "shortCiteRegEx": "Lee and Lifschitz", "year": 2003}, {"title": "Loop formulas for circumscription", "author": ["J. Lee", "F. Lin"], "venue": "Artificial Intelligence 170, 2, 160\u2013185.", "citeRegEx": "Lee and Lin,? 2006", "shortCiteRegEx": "Lee and Lin", "year": 2006}, {"title": "On loop formulas with variables", "author": ["J. Lee", "Y. Meng"], "venue": "Proceedings of the Eleventh International Conference on Knowledge Representation and Reasoning (KR\u201908). 444\u2013453.", "citeRegEx": "Lee and Meng,? 2008", "shortCiteRegEx": "Lee and Meng", "year": 2008}, {"title": "On reductive semantics of aggregates in answer set programming", "author": ["J. Lee", "Y. Meng"], "venue": "Procedings of the Tenth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201909). 182\u2013195.", "citeRegEx": "Lee and Meng,? 2009", "shortCiteRegEx": "Lee and Meng", "year": 2009}, {"title": "The dlv system for knowledge representation and reasoning", "author": ["N. Leone", "G. Pfeifer", "W. Faber", "T. Eiter", "G. Gottlob", "S. Perri", "F. Scarcello"], "venue": "ACM Transactions on Computational Logic 7, 3.", "citeRegEx": "Leone et al\\.,? 2006", "shortCiteRegEx": "Leone et al\\.", "year": 2006}, {"title": "Disjunctive stable models: Unfounded sets, fixpoint semantics, and computation", "author": ["N. Leone", "P. Rullo", "F. Scarcello"], "venue": "Information and Computation 135(2), 69\u2013 112.", "citeRegEx": "Leone et al\\.,? 1997", "shortCiteRegEx": "Leone et al\\.", "year": 1997}, {"title": "cmodels: SAT-based disjunctive answer set solver", "author": ["Y. Lierler"], "venue": "Proceedings of the Eighth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201905). 447\u2013452.", "citeRegEx": "Lierler,? 2005", "shortCiteRegEx": "Lierler", "year": 2005}, {"title": "Nested expressions in logic programs", "author": ["V. Lifschitz", "L.R. Tang", "H. Turner"], "venue": "Annals of Mathematics and Artificial Intelligence 25, 369\u2013389.", "citeRegEx": "Lifschitz et al\\.,? 1999", "shortCiteRegEx": "Lifschitz et al\\.", "year": 1999}, {"title": "Why are there so many loop formulas", "author": ["V. Lifschitz", "A. Razborov"], "venue": "ACM Transactions on Computational Logic 7,", "citeRegEx": "Lifschitz and Razborov,? \\Q2006\\E", "shortCiteRegEx": "Lifschitz and Razborov", "year": 2006}, {"title": "On tight logic programs and yet another translation from normal logic programs to propositional logic", "author": ["F. Lin", "J. Zhao"], "venue": "Proceedings of the Eighteenth International Joint Conference on Artificial Intelligence (IJCAI\u201903). 853\u2013858.", "citeRegEx": "Lin and Zhao,? 2003", "shortCiteRegEx": "Lin and Zhao", "year": 2003}, {"title": "ASSAT: Computing answer sets of a logic program by SAT solvers", "author": ["F. Lin", "Y. Zhao"], "venue": "Artificial Intelligence 157, 115\u2013137.", "citeRegEx": "Lin and Zhao,? 2004", "shortCiteRegEx": "Lin and Zhao", "year": 2004}, {"title": "Properties and applications of programs with monotone and convex constraints", "author": ["L. Liu", "M. Truszczynski"], "venue": "Journal of Artificial Intelligence Research 27, 299\u2013 334.", "citeRegEx": "Liu and Truszczynski,? 2006", "shortCiteRegEx": "Liu and Truszczynski", "year": 2006}, {"title": "Stable models and non-determinism in logic programs with negation", "author": ["D. Sacc\u00e1", "C. Zaniolo"], "venue": "Proceedings of the Ninth ACM Symposium on Principles of Database Systems (PODS). 205\u2013217.", "citeRegEx": "Sacc\u00e1 and Zaniolo,? 1990", "shortCiteRegEx": "Sacc\u00e1 and Zaniolo", "year": 1990}, {"title": "Loop formulas for logic programs with arbitrary constraint atoms", "author": ["You", "J.-H.", "G. Liu"], "venue": "Proceedings of the Twenty-third AAAI Conference on Artificial Intelligence (AAAI\u201908). 584\u2013589.", "citeRegEx": "You et al\\.,? 2008", "shortCiteRegEx": "You et al\\.", "year": 2008}, {"title": "On the equivalence between answer sets and models of completion for nested logic programs", "author": ["You", "J.-H.", "Yuan", "L.-Y.", "M. Zhang"], "venue": "Proceedings of the Eighteenth International Joint Conference on Artificial Intelligence (IJCAI\u201903). 859\u2013866.", "citeRegEx": "You et al\\.,? 2003", "shortCiteRegEx": "You et al\\.", "year": 2003}], "referenceMentions": [{"referenceID": 2, "context": "Unlike other translations that modify the vocabulary of a logic program (Ben-Eliyahu and Dechter 1994; Lin and Zhao 2003; Janhunen 2006), the original", "startOffset": 72, "endOffset": 136}, {"referenceID": 35, "context": "Unlike other translations that modify the vocabulary of a logic program (Ben-Eliyahu and Dechter 1994; Lin and Zhao 2003; Janhunen 2006), the original", "startOffset": 72, "endOffset": 136}, {"referenceID": 20, "context": "Unlike other translations that modify the vocabulary of a logic program (Ben-Eliyahu and Dechter 1994; Lin and Zhao 2003; Janhunen 2006), the original", "startOffset": 72, "endOffset": 136}, {"referenceID": 33, "context": "The theorem on loop formulas due to Lin and Zhao (2004) has contributed to understanding the relationship between the stable model semantics and classical logic.", "startOffset": 36, "endOffset": 56}, {"referenceID": 36, "context": "This allows us to compute stable models using SAT solvers, which led to the design of answer set solvers assat (Lin and Zhao 2004) and cmodels (Giunchiglia et al.", "startOffset": 111, "endOffset": 130}, {"referenceID": 18, "context": "This allows us to compute stable models using SAT solvers, which led to the design of answer set solvers assat (Lin and Zhao 2004) and cmodels (Giunchiglia et al. 2004).", "startOffset": 143, "endOffset": 168}, {"referenceID": 26, "context": "Due to its importance in semantic understanding as well as in stable model computation, the theorem on loop formulas has been extended to more general classes of logic programs, such as disjunctive programs (Lee and Lifschitz 2003), infinite programs and programs containing classical negation (Lee 2005), and programs containing aggregates (Liu and Truszczynski 2006; You and Liu 2008; Lee and Meng 2009).", "startOffset": 207, "endOffset": 231}, {"referenceID": 25, "context": "Due to its importance in semantic understanding as well as in stable model computation, the theorem on loop formulas has been extended to more general classes of logic programs, such as disjunctive programs (Lee and Lifschitz 2003), infinite programs and programs containing classical negation (Lee 2005), and programs containing aggregates (Liu and Truszczynski 2006; You and Liu 2008; Lee and Meng 2009).", "startOffset": 294, "endOffset": 304}, {"referenceID": 37, "context": "Due to its importance in semantic understanding as well as in stable model computation, the theorem on loop formulas has been extended to more general classes of logic programs, such as disjunctive programs (Lee and Lifschitz 2003), infinite programs and programs containing classical negation (Lee 2005), and programs containing aggregates (Liu and Truszczynski 2006; You and Liu 2008; Lee and Meng 2009).", "startOffset": 341, "endOffset": 405}, {"referenceID": 29, "context": "Due to its importance in semantic understanding as well as in stable model computation, the theorem on loop formulas has been extended to more general classes of logic programs, such as disjunctive programs (Lee and Lifschitz 2003), infinite programs and programs containing classical negation (Lee 2005), and programs containing aggregates (Liu and Truszczynski 2006; You and Liu 2008; Lee and Meng 2009).", "startOffset": 341, "endOffset": 405}, {"referenceID": 27, "context": "Moreover, it has been applied to other nonmonotonic logics, such as circumscription (Lee and Lin 2006) and nonmonotonic causal logic (Lee 2004).", "startOffset": 84, "endOffset": 102}, {"referenceID": 24, "context": "Moreover, it has been applied to other nonmonotonic logics, such as circumscription (Lee and Lin 2006) and nonmonotonic causal logic (Lee 2004).", "startOffset": 133, "endOffset": 143}, {"referenceID": 11, "context": "The stable model semantics for first-order formulas given in (Ferraris et al. 2007; Ferraris et al. 2011) is also closely related to the idea of loop formulas, as described in (Lee and Meng 2008).", "startOffset": 61, "endOffset": 105}, {"referenceID": 12, "context": "The stable model semantics for first-order formulas given in (Ferraris et al. 2007; Ferraris et al. 2011) is also closely related to the idea of loop formulas, as described in (Lee and Meng 2008).", "startOffset": 61, "endOffset": 105}, {"referenceID": 28, "context": "2011) is also closely related to the idea of loop formulas, as described in (Lee and Meng 2008).", "startOffset": 76, "endOffset": 95}, {"referenceID": 4, "context": "By slightly modifying the definition of a loop, Lee (2005) showed that loop formulas can be viewed as a generalization of completion (Clark 1978).", "startOffset": 133, "endOffset": 145}, {"referenceID": 25, "context": "The modeltheoretic account of loop formulas give in (Lee 2005) also tells us that the idea of loop formulas is closely related to assumption sets (Sacc\u00e1 and Zaniolo 1990) or unfounded sets (Leone et al.", "startOffset": 52, "endOffset": 62}, {"referenceID": 38, "context": "The modeltheoretic account of loop formulas give in (Lee 2005) also tells us that the idea of loop formulas is closely related to assumption sets (Sacc\u00e1 and Zaniolo 1990) or unfounded sets (Leone et al.", "startOffset": 146, "endOffset": 170}, {"referenceID": 31, "context": "The modeltheoretic account of loop formulas give in (Lee 2005) also tells us that the idea of loop formulas is closely related to assumption sets (Sacc\u00e1 and Zaniolo 1990) or unfounded sets (Leone et al. 1997).", "startOffset": 189, "endOffset": 208}, {"referenceID": 38, "context": "In a sense, the theorem by Lin and Zhao is an enhancement of the unfounded set based characterization of stable models given in (Sacc\u00e1 and Zaniolo 1990; Leone et al. 1997).", "startOffset": 128, "endOffset": 171}, {"referenceID": 31, "context": "In a sense, the theorem by Lin and Zhao is an enhancement of the unfounded set based characterization of stable models given in (Sacc\u00e1 and Zaniolo 1990; Leone et al. 1997).", "startOffset": 128, "endOffset": 171}, {"referenceID": 17, "context": "Like an HCF program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body\u2014a simple transformation defined in (Gelfond et al. 1991).", "startOffset": 183, "endOffset": 204}, {"referenceID": 35, "context": "The main results from (Lin and Zhao 2003) and (You et al.", "startOffset": 22, "endOffset": 41}, {"referenceID": 40, "context": "The main results from (Lin and Zhao 2003) and (You et al. 2003), characterizing stable models in terms of inherent tightness and weak tightness, respectively, can be extended to HEF programs, and likewise the operational characterization of stable models of HCF programs due to Leone et al.", "startOffset": 46, "endOffset": 63}, {"referenceID": 9, "context": "The stable model semantics for first-order formulas given in (Ferraris et al. 2007; Ferraris et al. 2011) is also closely related to the idea of loop formulas, as described in (Lee and Meng 2008). By slightly modifying the definition of a loop, Lee (2005) showed that loop formulas can be viewed as a generalization of completion (Clark 1978).", "startOffset": 62, "endOffset": 256}, {"referenceID": 3, "context": "By slightly modifying the definition of a loop, Lee (2005) showed that loop formulas can be viewed as a generalization of completion (Clark 1978). The modeltheoretic account of loop formulas give in (Lee 2005) also tells us that the idea of loop formulas is closely related to assumption sets (Sacc\u00e1 and Zaniolo 1990) or unfounded sets (Leone et al. 1997). In a sense, the theorem by Lin and Zhao is an enhancement of the unfounded set based characterization of stable models given in (Sacc\u00e1 and Zaniolo 1990; Leone et al. 1997). The unfounded set based characterization takes into account the loop formulas of all sets of atoms, while the theorem by Lin and Zhao considers the loop formulas of loops only. Gebser and Schaub (2005) improved this enhancement even further.", "startOffset": 134, "endOffset": 732}, {"referenceID": 2, "context": "Based on the notion of an elementary loop, we present the class of Head-Elementary-loop-Free (HEF) program, which strictly generalizes the class of Head-Cycle-Free (HCF) programs due to Ben-Eliyahu and Dechter (1994). Like an HCF program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body\u2014a simple transformation defined in (Gelfond et al.", "startOffset": 186, "endOffset": 217}, {"referenceID": 2, "context": "Based on the notion of an elementary loop, we present the class of Head-Elementary-loop-Free (HEF) program, which strictly generalizes the class of Head-Cycle-Free (HCF) programs due to Ben-Eliyahu and Dechter (1994). Like an HCF program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body\u2014a simple transformation defined in (Gelfond et al. 1991). This tells us that an HEF program is an \u201ceasy\u201d disjunctive program, which is merely a syntactic variant of a nondisjunctive program. We also observe that several other properties of nondisjunctive and HCF programs can be generalized to HEF programs. The main results from (Lin and Zhao 2003) and (You et al. 2003), characterizing stable models in terms of inherent tightness and weak tightness, respectively, can be extended to HEF programs, and likewise the operational characterization of stable models of HCF programs due to Leone et al. (1997) can be extended to HEF pro-", "startOffset": 186, "endOffset": 972}, {"referenceID": 5, "context": "The properties of elementary loops and HEF programs studied here may be useful in improving the computation of disjunctive answer set solvers, such as claspd (Drescher et al. 2008), cmodels (Lierler 2005), dlv (Leone et al.", "startOffset": 158, "endOffset": 180}, {"referenceID": 32, "context": "2008), cmodels (Lierler 2005), dlv (Leone et al.", "startOffset": 15, "endOffset": 29}, {"referenceID": 30, "context": "2008), cmodels (Lierler 2005), dlv (Leone et al. 2006), and gnt (Janhunen et al.", "startOffset": 35, "endOffset": 54}, {"referenceID": 21, "context": "2006), and gnt (Janhunen et al. 2006).", "startOffset": 15, "endOffset": 37}, {"referenceID": 13, "context": "This paper is an extended version of the conference papers (Gebser et al. 2006) and (Gebser et al.", "startOffset": 59, "endOffset": 79}, {"referenceID": 14, "context": "2006) and (Gebser et al. 2007).", "startOffset": 10, "endOffset": 30}, {"referenceID": 15, "context": ") Finally, we compare our reformulation of elementary loops with the definition by Gebser and Schaub (2005).", "startOffset": 83, "endOffset": 108}, {"referenceID": 13, "context": "fi/Software/gnt/ 6 In (Gebser et al. 2006; Gebser et al. 2007), the term \u201celementary set\u201d was used in place of \u201celementary loop.", "startOffset": 22, "endOffset": 62}, {"referenceID": 14, "context": "fi/Software/gnt/ 6 In (Gebser et al. 2006; Gebser et al. 2007), the term \u201celementary set\u201d was used in place of \u201celementary loop.", "startOffset": 22, "endOffset": 62}, {"referenceID": 25, "context": "stability of a model by loop formulas, is a part of the main theorem from (Lee 2005) for the nondisjunctive case.", "startOffset": 74, "endOffset": 84}, {"referenceID": 25, "context": "Theorem 1 ((Lee 2005)) For any nondisjunctive program \u03a0 and any set X of atoms that occur in \u03a0, if X is a model of \u03a0, then the following conditions are equivalent:", "startOffset": 11, "endOffset": 21}, {"referenceID": 25, "context": "As noted in (Lee 2005), the equivalence between conditions (a) and (c) is a reformulation of the theorem by Lin and Zhao; the equivalence between conditions (a) and (b) is a reformulation of Corollary 2 from (Sacc\u00e1 and Zaniolo 1990) and Theorem 4.", "startOffset": 12, "endOffset": 22}, {"referenceID": 38, "context": "As noted in (Lee 2005), the equivalence between conditions (a) and (c) is a reformulation of the theorem by Lin and Zhao; the equivalence between conditions (a) and (b) is a reformulation of Corollary 2 from (Sacc\u00e1 and Zaniolo 1990) and Theorem 4.", "startOffset": 208, "endOffset": 232}, {"referenceID": 31, "context": "6 from (Leone et al. 1997) (in the nondisjunctive case), which characterizes the stability of a model in terms of unfounded sets.", "startOffset": 7, "endOffset": 26}, {"referenceID": 15, "context": "This yields the following theorem, which is a reformulation of Theorem 3 from (Gebser and Schaub 2005).", "startOffset": 78, "endOffset": 102}, {"referenceID": 15, "context": "It is essentially a reformulation of Theorem 5 from (Gebser and Schaub 2005).", "startOffset": 52, "endOffset": 76}, {"referenceID": 15, "context": "7 Elementarily unfounded sets are closely related to \u201cactive elementary loops\u201d defined in (Gebser and Schaub 2005).", "startOffset": 90, "endOffset": 114}, {"referenceID": 16, "context": "Notably, the correspondence between elementarily unfounded sets and minimal nonempty unfounded sets has also led to an alternative characterization of UEmodels (Gebser et al. 2008), which characterizes uniform equivalence (Eiter and Fink 2003) of nondisjunctive programs as well as disjunctive programs.", "startOffset": 160, "endOffset": 180}, {"referenceID": 6, "context": "2008), which characterizes uniform equivalence (Eiter and Fink 2003) of nondisjunctive programs as well as disjunctive programs.", "startOffset": 47, "endOffset": 68}, {"referenceID": 34, "context": "Since there are exponentially many \u201crelevant\u201d loops in the worst case (Lifschitz and Razborov 2006), SAT-based answer set solvers do not add all loop formulas at once.", "startOffset": 70, "endOffset": 99}, {"referenceID": 15, "context": "However, Gebser and Schaub (2005) showed that this is not the case for nondisjunctive programs.", "startOffset": 9, "endOffset": 34}, {"referenceID": 15, "context": "The following theorem is similar to Theorem 10 from (Gebser and Schaub 2005), but instead of referring to the notion of a body-head dependency graph, it refers to the notion of an elementary subgraph.", "startOffset": 52, "endOffset": 76}, {"referenceID": 15, "context": "In this section, we compare our reformulation of elementary loops with the original definition by Gebser and Schaub (2005) for nondisjunctive programs.", "startOffset": 98, "endOffset": 123}, {"referenceID": 15, "context": "Definition 1 ((Gebser and Schaub 2005)) A nontrivial loop L of a nondisjunctive program \u03a0 is called a GS-elementary loop of \u03a0 if R \u03a0(L ) \u2229R \u03a0(L) 6= \u2205 for all proper subsets L \u2032 of L that are nontrivial loops of \u03a0.", "startOffset": 14, "endOffset": 38}, {"referenceID": 36, "context": "8 In (Lin and Zhao 2004) and (Gebser and Schaub 2005), loops were defined to be nontrivial.", "startOffset": 5, "endOffset": 24}, {"referenceID": 15, "context": "8 In (Lin and Zhao 2004) and (Gebser and Schaub 2005), loops were defined to be nontrivial.", "startOffset": 29, "endOffset": 53}, {"referenceID": 15, "context": "Thus an active elementary loop of \u03a0 according to (Gebser and Schaub 2005) is a nontrivial elementary loop of \u03a0X that is unfounded by \u03a0 w.", "startOffset": 49, "endOffset": 73}, {"referenceID": 36, "context": "This originates from the difference between the definition of a loop in (Lin and Zhao 2004) and its reformulation given in (Lee 2005).", "startOffset": 72, "endOffset": 91}, {"referenceID": 25, "context": "This originates from the difference between the definition of a loop in (Lin and Zhao 2004) and its reformulation given in (Lee 2005).", "startOffset": 123, "endOffset": 133}, {"referenceID": 25, "context": "As shown in the main theorem from (Lee 2005), identifying a trivial loop as a loop admits a simpler reformulation of the Lin-Zhao theorem by allowing us to view completion formulas (Clark 1978) as a special case of loop formulas.", "startOffset": 34, "endOffset": 44}, {"referenceID": 4, "context": "As shown in the main theorem from (Lee 2005), identifying a trivial loop as a loop admits a simpler reformulation of the Lin-Zhao theorem by allowing us to view completion formulas (Clark 1978) as a special case of loop formulas.", "startOffset": 181, "endOffset": 193}, {"referenceID": 33, "context": "Note that any program with nested expressions can be turned into an equivalent program whose rules are of the form (11) (Lifschitz et al. 1999).", "startOffset": 120, "endOffset": 143}, {"referenceID": 25, "context": "As shown in (Lee 2005), Theorem 1 remains correct after replacing \u201cnondisjunctive program\u201d in its statement with \u201cdisjunctive program.", "startOffset": 12, "endOffset": 22}, {"referenceID": 25, "context": "Theorem 1 ((Lee 2005)) For any disjunctive program \u03a0 and any set X of atoms that occur in \u03a0, if X is a model of \u03a0, then the following conditions are equivalent: 9", "startOffset": 11, "endOffset": 21}, {"referenceID": 31, "context": "For coNP-hardness, we reduce the coNP-hard problem of deciding whether a finite set X of atoms is \u201cunfounded-free\u201d for a disjunctive program \u03a0 (Leone et al. 1997), i.", "startOffset": 143, "endOffset": 162}, {"referenceID": 2, "context": "However, for the class of disjunctive programs called \u201cHead-Cycle-Free\u201d (Ben-Eliyahu and Dechter 1994), deciding whether a set of atoms is an elementary loop is tractable.", "startOffset": 72, "endOffset": 102}, {"referenceID": 7, "context": "In general, computing stable models of a disjunctive program is harder than computing stable models of a nondisjunctive program (Eiter and Gottlob 1995).", "startOffset": 128, "endOffset": 152}, {"referenceID": 2, "context": "On the other hand, HCF programs are \u201ceasy\u201d disjunctive programs that can be turned into equivalent nondisjunctive programs in polynomial time (Ben-Eliyahu and Dechter 1994).", "startOffset": 142, "endOffset": 172}, {"referenceID": 2, "context": "Although the converse does not hold in general, Ben-Eliyahu and Dechter (1994) showed that the converse holds if \u03a0 is HCF.", "startOffset": 48, "endOffset": 79}, {"referenceID": 7, "context": "(In the case of arbitrary disjunctive programs, it is coNP-complete (Eiter and Gottlob 1995).", "startOffset": 68, "endOffset": 92}, {"referenceID": 10, "context": "While an HCF program can be recognized in polynomial time (by computing the strongly connected components of its dependency graph), Fassetti and Palopoli (2010) showed that deciding whether a disjunctive program is HEF is coNP-complete.", "startOffset": 132, "endOffset": 161}, {"referenceID": 14, "context": "10 The problem was left open in (Gebser et al. 2007), one of our conference papers that this paper extends.", "startOffset": 32, "endOffset": 52}, {"referenceID": 10, "context": "As noted in (Fassetti and Palopoli 2010), identifying subclasses of (not necessarily HCF) disjunctive programs for which verifying the HEF property is tractable may be an interesting line of future research.", "startOffset": 12, "endOffset": 40}, {"referenceID": 9, "context": "In fact, if \u03a0 is nondisjunctive, it is known that the subset \u03a0 can be further restricted to a \u201ctight\u201d program (Fages 1994; Erdem and Lifschitz 2003)\u2014the result known as \u201cinherently tight\u201d (Lin and Zhao 2003) or \u201cweakly tight\u201d (You et al.", "startOffset": 110, "endOffset": 148}, {"referenceID": 8, "context": "In fact, if \u03a0 is nondisjunctive, it is known that the subset \u03a0 can be further restricted to a \u201ctight\u201d program (Fages 1994; Erdem and Lifschitz 2003)\u2014the result known as \u201cinherently tight\u201d (Lin and Zhao 2003) or \u201cweakly tight\u201d (You et al.", "startOffset": 110, "endOffset": 148}, {"referenceID": 35, "context": "In fact, if \u03a0 is nondisjunctive, it is known that the subset \u03a0 can be further restricted to a \u201ctight\u201d program (Fages 1994; Erdem and Lifschitz 2003)\u2014the result known as \u201cinherently tight\u201d (Lin and Zhao 2003) or \u201cweakly tight\u201d (You et al.", "startOffset": 188, "endOffset": 207}, {"referenceID": 40, "context": "In fact, if \u03a0 is nondisjunctive, it is known that the subset \u03a0 can be further restricted to a \u201ctight\u201d program (Fages 1994; Erdem and Lifschitz 2003)\u2014the result known as \u201cinherently tight\u201d (Lin and Zhao 2003) or \u201cweakly tight\u201d (You et al. 2003) program.", "startOffset": 226, "endOffset": 243}, {"referenceID": 25, "context": "Definition 2 ((Lee 2005)) A disjunctive program \u03a0 is called tight if every loop of \u03a0 is trivial.", "startOffset": 14, "endOffset": 24}, {"referenceID": 0, "context": "As defined previously (Apt et al. 1988; Baral and Gelfond 1994; Inoue and Sakama 1998; Lee 2005), we call a set X of atoms supported by a disjunctive program \u03a0 if, for every a \u2208 X , there is a rule (12) in \u03a0X such that A \u2229X = {a}.", "startOffset": 22, "endOffset": 96}, {"referenceID": 1, "context": "As defined previously (Apt et al. 1988; Baral and Gelfond 1994; Inoue and Sakama 1998; Lee 2005), we call a set X of atoms supported by a disjunctive program \u03a0 if, for every a \u2208 X , there is a rule (12) in \u03a0X such that A \u2229X = {a}.", "startOffset": 22, "endOffset": 96}, {"referenceID": 19, "context": "As defined previously (Apt et al. 1988; Baral and Gelfond 1994; Inoue and Sakama 1998; Lee 2005), we call a set X of atoms supported by a disjunctive program \u03a0 if, for every a \u2208 X , there is a rule (12) in \u03a0X such that A \u2229X = {a}.", "startOffset": 22, "endOffset": 96}, {"referenceID": 25, "context": "As defined previously (Apt et al. 1988; Baral and Gelfond 1994; Inoue and Sakama 1998; Lee 2005), we call a set X of atoms supported by a disjunctive program \u03a0 if, for every a \u2208 X , there is a rule (12) in \u03a0X such that A \u2229X = {a}.", "startOffset": 22, "endOffset": 96}, {"referenceID": 0, "context": "As defined previously (Apt et al. 1988; Baral and Gelfond 1994; Inoue and Sakama 1998; Lee 2005), we call a set X of atoms supported by a disjunctive program \u03a0 if, for every a \u2208 X , there is a rule (12) in \u03a0X such that A \u2229X = {a}. Note that Definition 2 and the notion of support also apply to nondisjunctive programs as a special case. The property of inherent tightness, introduced by Lin and Zhao (2003) for the case of nondisjunctive programs, can now be reformulated and generalized as follows.", "startOffset": 23, "endOffset": 407}, {"referenceID": 9, "context": "In the case of nondisjunctive programs, this reformulation of inherent tightness is similar to \u201cwell-supportedness\u201d (Fages 1994).", "startOffset": 116, "endOffset": 128}, {"referenceID": 40, "context": "Furthermore, weak tightness, introduced in (You et al. 2003), is closely related to the notion of inherent tightness.", "startOffset": 43, "endOffset": 60}, {"referenceID": 9, "context": "Proposition 10 ((Fages 1994; Lin and Zhao 2003; You et al. 2003)) For any nondisjunctive program \u03a0 and any model X of \u03a0, X is a stable model of \u03a0 iff \u03a0 is inherently tight on X .", "startOffset": 16, "endOffset": 64}, {"referenceID": 35, "context": "Proposition 10 ((Fages 1994; Lin and Zhao 2003; You et al. 2003)) For any nondisjunctive program \u03a0 and any model X of \u03a0, X is a stable model of \u03a0 iff \u03a0 is inherently tight on X .", "startOffset": 16, "endOffset": 64}, {"referenceID": 40, "context": "Proposition 10 ((Fages 1994; Lin and Zhao 2003; You et al. 2003)) For any nondisjunctive program \u03a0 and any model X of \u03a0, X is a stable model of \u03a0 iff \u03a0 is inherently tight on X .", "startOffset": 16, "endOffset": 64}, {"referenceID": 26, "context": "By Proposition 2 from (Lee and Lifschitz 2003), X is a stable model of \u03a0, and, by Proposition 9, X is a stable model of \u03a0.", "startOffset": 22, "endOffset": 46}, {"referenceID": 9, "context": "But is the class of e-tight programs more general than the class of tight programs? One reason why this is an interesting question to consider is because, if so, it would lead to a generalization of Fages\u2019 theorem (Fages 1994), which would yield a more general class of programs for which the stable model semantics coincides with the completion semantics.", "startOffset": 214, "endOffset": 226}, {"referenceID": 7, "context": "For a disjunctive program, the problem of deciding whether a given model is stable is coNP-complete (Eiter and Gottlob 1995).", "startOffset": 100, "endOffset": 124}, {"referenceID": 7, "context": "For a disjunctive program, the problem of deciding whether a given model is stable is coNP-complete (Eiter and Gottlob 1995). On the other hand, in view of Theorem 5, the same problem is tractable for HEF programs. In order to check the stability of a model in polynomial time, Leone et al. (1997) presented an operational framework, which, for HCF programs, allows for deciding whether a model is stable.", "startOffset": 101, "endOffset": 298}, {"referenceID": 31, "context": "12 The disjunctive rules considered in (Leone et al. 1997) do not admit double negations in rule bodies, but its (dis)use merely affects conditions like X |= B,F (or X 6|= B,F ) determining \u03a0X , while it is inconsequential otherwise.", "startOffset": 39, "endOffset": 58}, {"referenceID": 29, "context": "The idea of using maximal loops for partitioning a program and confining stability checking to subprograms was already exploited by Leone et al. (1997) and Koch et al.", "startOffset": 132, "endOffset": 152}, {"referenceID": 23, "context": "(1997) and Koch et al. (2003). In fact, for a disjunctive program \u03a0 and a set X of atoms, Leone et al.", "startOffset": 11, "endOffset": 30}, {"referenceID": 23, "context": "(1997) and Koch et al. (2003). In fact, for a disjunctive program \u03a0 and a set X of atoms, Leone et al. (1997) showed how stability can be checked separately for maximal loops of \u03a0, and Koch et al.", "startOffset": 11, "endOffset": 110}, {"referenceID": 23, "context": "(1997) and Koch et al. (2003). In fact, for a disjunctive program \u03a0 and a set X of atoms, Leone et al. (1997) showed how stability can be checked separately for maximal loops of \u03a0, and Koch et al. (2003) developed this idea further by considering maximal loops of the smaller program \u03a0X,R\u03c9 \u03a0,X (X).", "startOffset": 11, "endOffset": 204}, {"referenceID": 31, "context": "The following two propositions describe properties of bounding loops that are similar to those of maximal loops, as used in (Leone et al. 1997; Koch et al. 2003).", "startOffset": 124, "endOffset": 161}, {"referenceID": 23, "context": "The following two propositions describe properties of bounding loops that are similar to those of maximal loops, as used in (Leone et al. 1997; Koch et al. 2003).", "startOffset": 124, "endOffset": 161}, {"referenceID": 31, "context": "Since the approach described in (Leone et al. 1997) considers maximal loops of the original program and X = {p, q, r, s, t, u} is a (maximal) loop of \u03a04, it cannot be used to decompose X , and the only applicable simplification is to remove u by means of R, that is, Y = R \u03a04,X(X) = {p, q, r, s, t}.", "startOffset": 32, "endOffset": 51}, {"referenceID": 23, "context": "The approach in (Koch et al. 2003) considers the maximal loops of \u03a0X,R\u03c9 \u03a0,X (X), which, for (\u03a04)X,Y , gives Z = {p, q, r} and Z \u2032 = {s, t}.", "startOffset": 16, "endOffset": 34}, {"referenceID": 23, "context": "As described in (Koch et al. 2003), since the subprograms (\u03a04)X,Z and (\u03a04)X,Z\u2032 are not HCF, they are not simplified any further and used to separately check for a nonempty unfounded subset of Z or Z , respectively.", "startOffset": 16, "endOffset": 34}, {"referenceID": 26, "context": "By turning to the notion of an elementary loop in place of a loop, we could strengthen the theorem by Lin and Zhao (2004), its generalization to disjunctive programs (Lee and Lifschitz 2003), and the main theorem (for programs in canonical form) from (Lee 2005).", "startOffset": 166, "endOffset": 190}, {"referenceID": 25, "context": "By turning to the notion of an elementary loop in place of a loop, we could strengthen the theorem by Lin and Zhao (2004), its generalization to disjunctive programs (Lee and Lifschitz 2003), and the main theorem (for programs in canonical form) from (Lee 2005).", "startOffset": 251, "endOffset": 261}, {"referenceID": 14, "context": "A method to identify an elementarily unfounded set for an HEF program was presented in (Gebser et al. 2007).", "startOffset": 87, "endOffset": 107}, {"referenceID": 20, "context": "Regarding nondisjunctive programs, elementary loops can be distinct from loops of programs called \u201cbinary\u201d (Janhunen 2006).", "startOffset": 107, "endOffset": 122}, {"referenceID": 22, "context": "Moreover, modularity aspects of disjunctive stable models (Janhunen et al. 2009), which are closely related to loop formulas (Lemma 5.", "startOffset": 58, "endOffset": 80}, {"referenceID": 22, "context": "4 from (Janhunen et al. 2009)), can be refined by referring to elementary loops in", "startOffset": 7, "endOffset": 29}, {"referenceID": 26, "context": "By turning to the notion of an elementary loop in place of a loop, we could strengthen the theorem by Lin and Zhao (2004), its generalization to disjunctive programs (Lee and Lifschitz 2003), and the main theorem (for programs in canonical form) from (Lee 2005).", "startOffset": 102, "endOffset": 122}, {"referenceID": 3, "context": "Lifting elementary loops to first-order programs, as already done for loops (Chen et al. 2006; Lee and Meng 2008), may also be a direction to explore.", "startOffset": 76, "endOffset": 113}, {"referenceID": 28, "context": "Lifting elementary loops to first-order programs, as already done for loops (Chen et al. 2006; Lee and Meng 2008), may also be a direction to explore.", "startOffset": 76, "endOffset": 113}, {"referenceID": 7, "context": "This parallels the complexity of stability checking (Eiter and Gottlob 1995), and it also tells us that the inherent complexities of computational tasks dealing with elementary loops tightly correlate to the fragment of disjunctive programs under consideration.", "startOffset": 52, "endOffset": 76}, {"referenceID": 13, "context": "We are grateful to Selim Erdo\u011fan, Tomi Janhunen, Dan Lessin, Vladimir Lifschitz, Torsten Schaub, Jicheng Zhao, and the anonymous referees of (Gebser et al. 2006; Gebser et al. 2007) and this paper for their useful comments.", "startOffset": 141, "endOffset": 181}, {"referenceID": 14, "context": "We are grateful to Selim Erdo\u011fan, Tomi Janhunen, Dan Lessin, Vladimir Lifschitz, Torsten Schaub, Jicheng Zhao, and the anonymous referees of (Gebser et al. 2006; Gebser et al. 2007) and this paper for their useful comments.", "startOffset": 141, "endOffset": 181}], "year": 2011, "abstractText": "Using the notion of an elementary loop, Gebser and Schaub refined the theorem on loop formulas due to Lin and Zhao by considering loop formulas of elementary loops only. In this article, we reformulate their definition of an elementary loop, extend it to disjunctive programs, and study several properties of elementary loops, including how maximal elementary loops are related to minimal unfounded sets. The results provide useful insights into the stable model semantics in terms of elementary loops. For a nondisjunctive program, using a graph-theoretic characterization of an elementary loop, we show that the problem of recognizing an elementary loop is tractable. On the other hand, we show that the corresponding problem is coNP-complete for a disjunctive program. Based on the notion of an elementary loop, we present the class of Head-Elementary-loop-Free (HEF) programs, which strictly generalizes the class of Head-Cycle-Free (HCF) programs due to Ben-Eliyahu and Dechter. Like an HCF program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body.", "creator": "LaTeX with hyperref package"}}}