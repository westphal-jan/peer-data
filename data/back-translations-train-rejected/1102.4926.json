{"id": "1102.4926", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Feb-2011", "title": "New Worst-Case Upper Bound for X3SAT", "abstract": "The rigorous theoretical analyses of algorithms for exact 3-satisfiability (X3SAT) have been proposed in the literature. As we know, previous algorithms for solving X3SAT have been analyzed only regarding the number of variables as the parameter. However, the time complexity for solving X3SAT instances depends not only on the number of variables, but also on the number of clauses. Therefore, it is significant to exploit the time complexity from the other point of view, i.e. the number of clauses. In this paper, we present algorithms for solving X3SAT with rigorous complexity analyses using the number of clauses as the parameter. By analyzing the algorithms, we obtain the new worst-case upper bounds O(1.15855m), where m is the number of clauses.", "histories": [["v1", "Thu, 24 Feb 2011 08:26:15 GMT  (514kb)", "http://arxiv.org/abs/1102.4926v1", "submitted to SAT-11"], ["v2", "Sat, 26 Mar 2011 03:19:01 GMT  (514kb)", "http://arxiv.org/abs/1102.4926v2", null]], "COMMENTS": "submitted to SAT-11", "reviews": [], "SUBJECTS": "cs.AI cs.CC", "authors": ["junping zhou", "minghao yin"], "accepted": false, "id": "1102.4926"}, "pdf": {"name": "1102.4926.pdf", "metadata": {"source": "CRF", "title": "New Worst-Case Upper Bound for X3SAT", "authors": ["Junping Zhou", "Minghao Yin"], "emails": ["ymh@nenu.edu.cn"], "sections": [{"heading": null, "text": "As we know, the time complexity of solving X3SAT instances depends not only on the number of variables, but also on the number of clauses. Therefore, it is important to exploit the time complexity from the other point of view, i.e. the number of clauses. In this paper, we present algorithms for solving X3SAT with rigorous complexity analyses using the number of clauses as parameters. By analyzing the algorithms, we obtain the new worst-case upper limit O (1,15855m), where m is the number of clauses. Keywords: X3SAT; upper limit; the worst-case; connected-clauses principle."}, {"heading": "1 Introduction", "text": "This year it will be able to erenie.n the mentioned hsci-eaJnlhsrteeSrdcnlhsrteeaeSn rf\u00fc ide eerwdnei rf\u00fc ide eSrteeu."}, {"heading": "2 Problem Definitions", "text": "We describe some of the definitions used in this work. A variable may perceive the values to be true or false. A letter of a variable is either the non-negated letter x, with the same truth value as the variable, or the negated formula x, with the opposite truth value as a variable. A proposition is a separation of letters called the k clause, if the proposition is a disjunction to k letters. A k-SAT formula F in conjunction to normal formula (CNF) is a conjunction of clauses, each of which contains at least k letters. A truth assignment for F is a map that assigns each variable to a value. If a truth assignment makes the F-letter formula true, say that the truth assignment is a satisfactory formula. The exact satisfaction clause (XSAT) is to find a truth assignment, so that exactly one letter F is true in each sentence."}, {"heading": "2.1 Estimating the Running Time", "text": "In this subsection, we will explain how to calculate an upper limit on the runtime of a DPLL-style algorithm. First, we will present an idea called the Branch Tree. The Branch Tree is a hierarchical tree structure with a series of formulas, each of which is labeled with a formula [10]. Suppose there is a node with a formula F, then its sons labeled with a formula F, then Fk is branched to one or more variables in formula F, i.e., the assignment of values to the variable (s), so that formula F gets to two or more sub-formulas F1, F2,..., Fk with fewer variables. In fact, the construction of a Branch Tree can be considered an execution of a DPLL algorithm. Therefore, we will use the Branch Tree to estimate the runtime of our algorithm."}, {"heading": "3 Algorithm for Solving X3SAT", "text": "In this section, we present the X3SAT algorithm and prove an upper limit O = x = x x x (then x x), where m is the number of clauses. First, we address some transformation rules used in the algorithm. 3.1 Transformation rules are applied to one or more variables of formula F. You can reduce the formula so that the simplified formula x x x x x contains a lower number of clauses. In the following, we introduce the transformation rules (TR14), which are also used by [7]. If F contains a variable x, so that the number of negated clauses is greater than the number of negated occurrences. xxx. Literally, F = F = x x x). If F contains a clause, then F = x, then F = x."}, {"heading": "3.2 Helper Principle", "text": "In this subsection, we will focus on the introduction of the principle of connected clauses. Before we introduce the details, we will specify some terms that will be used in this part. In view of a simplified X3SAT formula F in CNF, F can be expressed as an undirected graph associated with formula 1. In the connection graph, the vertexes are actually the clauses of F1 and the edges between two vertexes, if the corresponding clauses contain the same dictionary. We say that clause C is associated with C if there is an edge that connects the corresponding texts in the connection graph. We call such two clauses the connected clauses. The character of the connected clauses is shown in the following theorems. Theorem 5. For all connected clauses C1 and C2, there is only one edge that connects the corresponding texts in the link graph. To prove that there is only one edge that connects the corresponding texts, there is only one that connects the corresponding verses."}, {"heading": "3.3 Algorithm X3SAT for Solving Exact 3SAT", "text": "The basic idea of the algorithm is to select a variable and recursively determine whether the formula is satisfactory at all or not if it contains a formula that is true or false. Before introducing the X3SAT algorithm, we have a function (F, l) in Fig. 2 that recursively executes all the letters that occur with x from the other clauses. (3) The detailed processes of the function are presented as follows: (1) Remove all clauses that contain literally x from F. (2) All clauses that occur literally x from the other clauses will be deleted. (3) Delete all operations of negating the literal x from F; (4) we perform the process as far as possible."}, {"heading": "5 Conclusion", "text": "This article deals with the least favorable upper limit for the X3SAT problem with the number of clauses as parameters. The presented algorithm is a DPLL-style algorithm. To improve the algorithms, we have developed a new connectedclauses principle to simplify the formulas, which, after a skillful analysis of these algorithms, yields the least favorable upper limit O (1,15855 m) for X3SAT."}, {"heading": "Acknowledgments", "text": "This research is fully supported by the National Natural Science Foundation of China under grant number 60803102 and is also funded by the NSFC Major Research Program 60496321: Basic Theory and Core Techniques of Non Canonical Knowledge."}], "references": [{"title": "The Complexity of Satisfiability Problems", "author": ["T.J. Schaefer"], "venue": "10th annual ACM symposium on Theory of computing, pp. 216\u2013226,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1978}, {"title": "Faster Exact Solutions for Some NP-hard Problems", "author": ["L. Drori", "D. Peleg"], "venue": "Theoretical Computer Science 287(2), 473\u2013499", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "X3SAT is Decidable in time O(2)", "author": ["S. Porschen", "B. Randerath", "E. Speckenmeyer"], "venue": "Fifth International Symposium on the Theory and Applications of Satisfiability Testing, pp. 231-235, Springer, Heidelberg", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2002}, {"title": "Exact 3-Satisfiability is Decidable in time O(2)", "author": ["S. Porschen", "B. Randerath", "E. Speckenmeyer"], "venue": "Manuscript, June 2002. Annals of Mathematics and Artificial Intelligence 43(1) 173\u2013193", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "An Upper Bound O(2) for Exact 3-Satisfiability: a Simpler Proof", "author": ["A.S. Kulikov"], "venue": "Zapiski nauchnyh seminarov POMI 293, 118\u2013128", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2002}, {"title": "Algorithms for Four Variants of the Exact Satisfiability Problem", "author": ["V. Dahll\u00f6f", "P. Jonsson", "R. Beigel"], "venue": "Theoretical Computer Science", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2004}, {"title": "New Algorithms for Exact Satisfiability", "author": ["J.M. Byskov", "B.A. Madsen", "B. Skjernaa"], "venue": "Theoretical Computer Science 332(1-3), 515-541", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2005}, {"title": "Exact Algorithms for Variants of Satisfiability and Colouring Problems", "author": ["B. Skjernaa"], "venue": "PhD thesis, Department of Computer Science, Aarhus University", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2004}, {"title": "An Algorithm for Exact Satisfiability Analysed with the Number of Clauses as Parameter", "author": ["A.M. Bolette"], "venue": "Information Processing Letters 97(1), 28-30", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2006}, {"title": "New Worst-Case Upper Bounds for SAT", "author": ["E.A. Hirsch"], "venue": "J. Auto. Reasoning 24(4), 397-420", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2000}, {"title": "Upper Bounds for Covering Problems", "author": ["B. Monien", "E. Speckenmeyer", "O. Vornberger"], "venue": "Methods Oper. Res", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1981}, {"title": "New Worst-Case Upper Bound for #2-SAT and #3-SAT with the Number of Clauses as the Parameter", "author": ["Junping Zhou", "Minghao Yin", "Chunguang Zhou"], "venue": "Proceedings of AAAI,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "In fact, X3SAT is also a NPcomplete problem even when restricted to all variables occurring only unnegated [1].", "startOffset": 107, "endOffset": 110}, {"referenceID": 1, "context": "1545 n ) for X3SAT, where n is the number of the variables [2].", "startOffset": 59, "endOffset": 62}, {"referenceID": 2, "context": "1487 n ) [3].", "startOffset": 9, "endOffset": 12}, {"referenceID": 3, "context": "1926 n )) [4].", "startOffset": 10, "endOffset": 13}, {"referenceID": 4, "context": "By providing a new transformation rule, Kulikov [5] simplified the proof of the bound for X3SAT (O(1.", "startOffset": 48, "endOffset": 51}, {"referenceID": 3, "context": "[4].", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "1120 n ) for X3SAT [6].", "startOffset": 19, "endOffset": 22}, {"referenceID": 6, "context": "Further improved algorithms in [7] presented a new upper time bound for the X3SAT (O(1.", "startOffset": 31, "endOffset": 34}, {"referenceID": 7, "context": "Different from complexity analyses regarding the number of variables as the parameter, Skjernaa presented an algorithm for XSAT with a time bound O(2 m ) but using exponential space, where m is the number of clauses of a formula [8].", "startOffset": 229, "endOffset": 232}, {"referenceID": 8, "context": "Bolette addressed an algorithm for XSAT with polynomial space usage and a time bound O(m!) [9].", "startOffset": 91, "endOffset": 94}, {"referenceID": 9, "context": "The branching tree is a hierarchical tree structure with a set of nodes, each of which is labeled with a formula [10].", "startOffset": 113, "endOffset": 117}, {"referenceID": 6, "context": "In the following, we present the transformation rules (TR1) (TR14) which are also used by [7].", "startOffset": 90, "endOffset": 93}, {"referenceID": 6, "context": "Theorem 1[7].", "startOffset": 9, "endOffset": 12}, {"referenceID": 10, "context": "polynomial time [11].", "startOffset": 16, "endOffset": 20}], "year": 2011, "abstractText": "The rigorous theoretical analyses of algorithms for exact 3satisfiability (X3SAT) have been proposed in the literature. As we know, previous algorithms for solving X3SAT have been analyzed only regarding the number of variables as the parameter. However, the time complexity for solving X3SAT instances depends not only on the number of variables, but also on the number of clauses. Therefore, it is significant to exploit the time complexity from the other point of view, i.e. the number of clauses. In this paper, we present algorithms for solving X3SAT with rigorous complexity analyses using the number of clauses as the parameter. By analyzing the algorithms, we obtain the new worst-case upper bounds O(1.15855), where m is the number of clauses.", "creator": "Microsoft\u00ae Office Word 2007"}}}