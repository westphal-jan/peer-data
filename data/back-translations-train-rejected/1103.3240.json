{"id": "1103.3240", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Mar-2011", "title": "Decentralized Constraint Satisfaction", "abstract": "Constraint satisfaction problems (CSPs) lie at the heart of many modern industrial and commercial tasks. An important new collection of CSPs has recently been emerging that differ from classical problems in that they impose constraints on the class of algorithms that can be used to solve them. In computer network applications, these constraints arise as the variables within the CSP are located at physically distinct devices that cannot communicate. At each instant, every variable only knows if all its constraints are met or at least one is not. Consequently, the CSP's solution must be found using a decentralized approach. Existing algorithms for solving CSPs are either centralized or distributed, both of which violate these algorithmic constraints. In this article we present the first algorithm for solving CSPs that fulfills these new requirements. It is fully decentralized, making no use of a centralized controller or message-passing between variables. We prove that this algorithm converges with probability one to a satisfying assignment whenever one exists. Surprisingly, we experimentally demonstrate that the time the algorithm takes to find a satisfying assignment is competitive with both WalkSat and Survey Propagation, two popular and efficient CSP solvers. That is, despite its decentralized nature the algorithm is remarkably fast. This raises new questions about the relationship between information sharing and algorithm performance.", "histories": [["v1", "Wed, 2 Mar 2011 15:00:09 GMT  (434kb)", "https://arxiv.org/abs/1103.3240v1", null], ["v2", "Mon, 25 Jul 2011 14:44:16 GMT  (122kb,D)", "http://arxiv.org/abs/1103.3240v2", null], ["v3", "Wed, 7 Sep 2011 11:00:47 GMT  (103kb,D)", "http://arxiv.org/abs/1103.3240v3", null], ["v4", "Tue, 9 Oct 2012 07:46:22 GMT  (105kb,D)", "http://arxiv.org/abs/1103.3240v4", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["k r duffy", "c bordenave", "d j leith"], "accepted": false, "id": "1103.3240"}, "pdf": {"name": "1103.3240.pdf", "metadata": {"source": "CRF", "title": "Decentralized Constraint Satisfaction", "authors": ["K. R. Duffy"], "emails": [], "sections": [{"heading": null, "text": "I. INTRODUCTIONA Constraint Satisfaction Problem (CSP) consists of N variables, ~ x: = (x1,.., xN), and M clauses, i.e. {0, 1} - rated functions, (\u03a61 (~ x),.., \u03a6M (~ x). An assignment ~ x is a solution if all clauses are evaluated at the same time to 1. In the context of wireless networks, we show that CSPs provide a unified framework that includes many important resource allocation tasks. Examples are: the assignment of radio channels so that transmissions from adjacent WLANs (Wireless Local Area Networks) or mobile phone boxes do not interfere; the selection of packets to be XORed on each link in the network encoding; and the search for a non-conflicting schedule of timeframes in a WLAN. Unlike conventional CSPs, each restricted variable P usually violates a physically distinct unit."}, {"heading": "A. Motivating example: channel allocation", "text": "In this band, an 802.11 wireless LAN can choose one of several channels we are considering here. Coordinated selection is hampered by the fact that the interference range of a typical 802.11 device is much larger than its communication range. Consequently, wireless LAN can interfere, but it is not possible to decrypt every other message."}, {"heading": "B. Contribution", "text": "The primary contributions of this paper are quadruple: First, we show that CSPs provide a unifying framework that encompasses several important issues in wireless networks, including channel selection, intersession network encoding, and decentralized planning in a WLAN. Second, we define a new class of CSP algorithms that we call decentralized CSP solvers, and expand on our earlier approach to graph coloring [5] [6] by introducing a novel stochastic decentralized CSP solver that proves that it will find a solution in almost certainly finite time, should it exist, and show that it has many practically desirable properties. Third, we point the algorithm's performance to a well-studied class of application-agnostic CSPs, random SAT SAT."}, {"heading": "II. DECENTRALIZED CSP SOLVERS", "text": "We start by formalizing the criteria that CSP solvers must meet simultaneously to be useful for problems with communication restrictions such as those outlined above. We call algorithms that meet these criteria. Definition 1 (CSP): A CSP with N variables, {x1,., xN}, and M clauses are defined as follows: The variables are each defined by a function: D = {1,., D} and ~ x: (x1,., xN). Each clause m: M = {1,.,., M} is defined by a function called m: DN 7 \u2192 {1}, where for an assignment of variables, ~ x (~ x) = 1 if the clause m is met and x = 0 if the clause m (~ x) is not met."}, {"heading": "A. Formulating Wireless Network Tasks As CSPs", "text": "Before proceeding, we will show that several important resource mapping tasks in wireless networks fall within this CSP framework, which therefore provides a unifying framework for analyzing these tasks. (This means that the network is described by an undirected interference graph.) As briefly described in Section I-A, the channel mapping problem exists between two wireless networks when they interfere with each other when they interfere on the same channel. (Define N =) and M = | E | and let D determine the amount of available colors (channels V and edges E. Each vertex represents a wireless network and an edge when they interfere with each other when on the same channel. (Define N =) and M = E | and leave the number of available colors (channels V) and let xi be a variable with the value selected by an intelligence that is coded with each vertex. (Each clause, = 1)."}, {"heading": "B. Related work - existing algorithms are not decentralized", "text": "The literature for general purposes CSP Solvers is huge, typically focused on solving k-SAT problems in cyclically normal form, but it can be generally classified into those based on: (i) the Davis-Putnam-Logemann-Loveland algorithm (16], (ii) survey propagation [8] and (ii) stochastic local search (SLS) [7]. Each of these approaches has undergone substantial development and has its own merits, but none has been motivated by problems where variables have a geographical sense of localization. Algorithms developed from the DPLL approach have proven to be the fastest at SAT races and SAT competition."}, {"heading": "III. A DECENTRALIZED CSP SOLVER", "text": "We are now introducing an algorithm that meets the decentralized CSP solution criteria."}, {"heading": "A. Communication-Free Learning Algorithm", "text": "An instance of the following Communication-Free Learning (CFL) algorithm runs in parallel for each variable. For each variable, the CFL algorithm maintains a probability distribution, pi, j via j, D as well as the current variable value xi. in the pseudocode, the CFL algorithm is as follows: ALGORITHM 1: Communication-Free Learning 1: Initialize pi, j = 1 / d, j, j {1,..., D}. 2: Loop 3: Realize a random variable, select xi = j with probabilityi, j, 4: Rate minm, Mi \u03a6m (~ x), returns satisfied when its value is1, because this shows that all variable i clauses are satisfied considering the current assignment, and unsatisfied other variables that participate with probabilityi. 5: If satisfied, pi, j, j, j = 0 otherwise.If its value is1, this shows that all variable i clauses are satisfied with respect to the current assignment are met, and c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, j, j, j, c, c, j, c, c, j, c, c, c, c, j, c, c, c, j, c, c, c, c, c, c, c, c, b, c, c, c, c, c, c, c, c, c, c, c, c, c, c, b, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, b, c, c, c, c, c, c, c, c, c, c, c, c, c, c,"}, {"heading": "B. CFL is a decentralized CSP solver", "text": "The CFL algorithm also fulfils the (D2) criterion that it adheres to a solution from the first time. To see this, it should be noted that the influence of step 5 surely consists in the fact that if a variable succeeds with certainty in all clauses in which it participates, it continues to select the same value with probability 1. Thus, if all variables are satisfied with a solution at the same time from the first time, i.e. if Mini-Minm-Mi-x) = 1, then the same assignment in all clauses in which it participates is likely to be executed with probability 1. To determine that the CFL algorithm is a decentralized CSP solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver solver."}, {"heading": "C. Parameterization", "text": "Theorem 1 specifies that the CFL algorithm has been shown to have satisfactory assignments for all values of its two design parameters a and b. The value of a determines the algorithm's aversion to variable values for which a sentence failure has been detected. The value of b affects the speed of convergence of the algorithm. Optimal values of a and b depend on each problem and a performance metric. So, for fast convergence across a wide range of CSPs with different structures, we have found that small values of a and b, which correspond to a strong aversion to an unsatisfactory variable value and relatively long memory, work well. So, for simplicity, we use a = b in all experimental examples. We use b = 0.2 for random 3-SAT, b = 0.1 for random 4-SAT and b = 0.05 for random 5-SAT. We use b = 0.1 for our wireless value, we have found a good example of SAT performance in a good example."}, {"heading": "IV. APPLICATION-AGNOSTIC BENCHMARKING", "text": "Before considering practically motivated applications in Section V, how the CFL algorithm can solve any CSP, but its design is subject to limitations that are not normally considered. A k-SAT problem is a CSP problem in which all variables are randomly evaluated and clauses consist exclusively of logical disjunctions that do not exist more than k variables. In random k-SAT variables, such clauses are randomly generated [22]. Our study surprisingly shows that the CFL algorithm is competitive with centralized and distributed solvers on problems of reasonable size (order 1000 variables)."}, {"heading": "V. CASE STUDY: CHANNEL ALLOCATION IN 802.11", "text": "WLANSHaving established general properties of CFL and determining its performance on random instances of k-SAT is all select to the channel = = 81, we return to a problem of the sort that motivated its introduction. We consider the performance of the CFL algorithm in a realistic wireless network case study. From the online database WIGLE [35] we get the locations of WiFi access points (APs) in an approximately 150m2 area at the intersection of 5th Avenue and 59th Street in Manhattan1. This room contains 81 APs using the IEEE 802.11 wireless standard. It can be seen from Figure 4, which plots the mean number of APs in the distance d of an AP, which is within a 15m radius of 3 neighbors and within an average of 10 neighbors. Of the 11 available channels in the 802.11 protocol, only 3 are orthogonal."}, {"heading": "VI. CONCLUSIONS", "text": "We have shown that seemingly different problems in networking can be located within the framework of CSPs, where - unlike traditional motivational examples - variables are related to devices that may not be able to communicate with each other. We define the criteria that practical solvers must have to be able to cope with these problems and call them decentralized CSP solutions. However, since existing approaches do not meet one or more of these criteria, we present a decentralized algorithm for solving CSPs. We prove that it will almost certainly find a satisfactory solution if one exists, creating limits on the speed of algorithm conversion. However, we suspect that our boundaries are not narrow for a general CSP and that the real boundary should be closer to the specific case of CSPs that corresponds to graphs."}], "references": [{"title": "Distributed channel assignment and routing in multiradio multichannel multihop wireless networks", "author": ["H. Wu", "Fan Y. Yang", "K. Tan", "J. Chen", "Q. Zhang", "Z. Zhang"], "venue": "IEEE Trans. Wireless Commun., vol. 9, no. 10, pp. 1972\u20131983, 2006.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1972}, {"title": "Self organization of interfering 802.11 wireless access networks", "author": ["B. Kauffmann", "F. Baccelli", "A. Chaintreau", "V. Mhatre", "K. Papagiannaki", "C. Diot"], "venue": "IEEE INFOCOM, 2007.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Protocols and architectures for channel assignment in wireless mesh networks", "author": ["J. Crichigno", "M.-Y. Wu", "W. Shu"], "venue": "Ad Hoc Netw., vol. 6, no. 7, pp. 1051\u20131077, Sept. 2008.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2008}, {"title": "Minimum interference channel assignment in multiradio wireless mesh networks", "author": ["A.P. Subramanian", "H. Gupta", "S.R. Das", "J. Cao"], "venue": "IEEE Trans. Mobile Comput., vol. 7, no. 12, pp. 1459\u20131473, Dec. 2008.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "A self-managed distributed channel selection algorithm for WLANs", "author": ["D.J. Leith", "P. Clifford"], "venue": "Procedings of RAWNET, Boston, MA, 2006.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2006}, {"title": "Complexity analysis of a decentralised graph colouring algorithm", "author": ["K. Duffy", "N. O\u2019Connell", "A. Sapozhnikov"], "venue": "Inform. Process. Lett., vol. 107, no. 2, pp. 60\u201363, 2008.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Local search strategies for satisfiability testing", "author": ["B. Selman", "H. Kautz", "B. Cohen"], "venue": "DIMACS SERIES IN DISCRETE MATHEMATICS AND THEORETICAL COMPUTER SCIENCE, 1995, pp. 521\u2013532.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1995}, {"title": "Survey propagation: An algorithm for satisfiability", "author": ["A. Braunstein", "M. Mezard", "R. Zecchina"], "venue": "Rand. Struct. Algorithms, vol. 27, no. 2, pp. 201\u2013226, 2005.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2005}, {"title": "An algebraic approach to network coding", "author": ["R. Koetter", "M. M\u00e9dard"], "venue": "IEEE/ACM Trans. Network., vol. 11, pp. 782\u2013795, 2003.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2003}, {"title": "Network coding for wireless applications: A brief tutorial", "author": ["S. Deb", "M. Effros", "T. Ho", "D.R. Karger", "R. Koetter", "D.S. Lun", "M. M\u00e9dard", "N. Ratnakar"], "venue": "IWWAN, 2005.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2005}, {"title": "XORs in the air: practical wireless network coding", "author": ["S. Katti", "H. Rahul", "W. Hu", "D. Katabi", "M. M\u00e9dard", "J. Crowcroft"], "venue": "SIGCOMM Comput. Commun. Rev., vol. 36, no. 4, pp. 243\u2013254, Aug. 2006.  11", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "Network coding-aware routing in wireless networks", "author": ["S. Sengupta", "S. Rayanchu", "S. Banerjee"], "venue": "IEEE/ACM Trans. Netw., vol. 18, no. 4, pp. 1158\u20131170, Aug. 2010.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "An evolutionary approach to inter-session network coding", "author": ["M. Kim", "M. M\u00e9dard", "U.-M. O\u2019Reilly", "D. Traskov"], "venue": "INFOCOM, 2009, pp. 450\u2013458.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Towards a collision-free WLAN: Dynamic parameter adjustment in CSMA/E2CA", "author": ["J. Barcelo", "B. Bellalta", "C. Cano", "A. Sfairopoulou", "M. Oliver", "K. Verma"], "venue": "EURASIP Journal on Wireless Communications and Networking, 2011.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Decentralised learning MACs for collision-free access in WLANs", "author": ["M. Fang", "D. Malone", "K.R. Duffy", "D.J. Leith"], "venue": "Wirel. Netw., vol. To appear, 2012.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "A computing procedure for quantification theory", "author": ["M. Davis", "H. Putnam"], "venue": "J. ACM, vol. 7, pp. 201\u2013215, July 1960.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1960}, {"title": "A machine program for theorem-proving", "author": ["M. Davis", "G. Logemann", "D. Loveland"], "venue": "Commun. ACM, vol. 5, pp. 394\u2013397, July 1962.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1962}, {"title": "ManySAT: a parallel SAT solver", "author": ["Y. Hamadi", "S. Jabbour"], "venue": "JSAT, vol. 6, no. 4, pp. 245\u2013262, 2009.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2009}, {"title": "How good are branching rules in DPLL", "author": ["Ming Ouyang"], "venue": "Discrete Appl. Math., vol. 89, pp. 281\u2013286, December 1998.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1998}, {"title": "Reverend Bayes on inference engines: a distributed hierarchical approach", "author": ["J. Pearl"], "venue": "Procedings of American Association for Artificial Intelligence National Conference on AI, 1982, pp. 133\u2013136.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1982}, {"title": "Random k-satisfiability problem: From an analytic solution to an efficient algorithm", "author": ["M. M\u00e9zard", "R. Zecchina"], "venue": "Phys. Rev. E, vol. 66, no. 5, pp. 056126, Nov 2002.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2002}, {"title": "On selecting a satisfying truth assignment", "author": ["C.H. Papadimitriou"], "venue": "IEEE Symposium on Foundations of Computer Science (FOCS ). 1991, pp. 162\u2013169, IEEE Computer Society, New York.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1991}, {"title": "A probabilistic algorithm for k-SAT and constraint satisfaction problems", "author": ["U. Schoning"], "venue": "IEEE Symposium on Foundations of Computer Science (FOCS ). 1999, pp. 410\u2013414, IEEE Computer Society, New York.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}, {"title": "Rigorous location of phase transitions in hard optimization problems", "author": ["D. Achlioptas", "A. Naor", "Y. Peres"], "venue": "Nature, vol. 435, no. 9, pp. 759\u2013764, 2005.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2005}, {"title": "The threshold for random k-SAT is 2k log 2-O(k)", "author": ["D. Achlioptas", "Y. Peres"], "venue": "J. Amer. Math. Soc., vol. 17, no. 4, pp. 947\u2013973, 2004.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2004}, {"title": "The probabilistic analysis of a greedy satisfiability algorithm", "author": ["A.C. Kaporis", "L.M. Kirousis", "E.G. Lalas"], "venue": "Rand. Struct. Algorithms, vol. 28, no. 4, pp. 444\u2013480, 2006.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2006}, {"title": "Analysis of two simple heuristics on a random instance of k-SAT", "author": ["A.M. Frieze", "S. Suen"], "venue": "J. Algorithms, vol. 20, no. 2, pp. 312?355, 1996.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1996}, {"title": "Threshold values of random k-SAT from the cavity method", "author": ["S. Mertens", "M. Mezard", "R. Zecchina"], "venue": "Rand. Struct. Algorithms, vol. 28, no. 3, pp. 340\u201337, 2005.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2005}, {"title": "Gibbs states and the set of solutions of random constraint satisfaction problems", "author": ["F Krzakala", "A. Montarani", "Ricci-Tersenghi F.", "G. Semerijan", "L. Zdeborova"], "venue": "Proc. Natl. Acad. Sci. USA, vol. 104, no. 25, pp. 10318\u201310323, 2007.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2007}, {"title": "Comparing beliefs, surveys and random walks", "author": ["E. Aurell", "U. Gordon", "S. Kirkpatrick"], "venue": "Advances in Neural Information Processing Systems (NIPS). 2004, vol. 17, pp. 49\u201356, MIT Press, Boston.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2004}, {"title": "Analytic and algorithmic solution of random satisfiability problems", "author": ["M. Mezard", "G. Parisi", "R. Zecchina"], "venue": "Science, vol. 297, pp. 812\u2013 815, 2002.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2002}, {"title": "Clustering of solutions in the random satisfiability problem", "author": ["M. Mezard", "T. Mora", "R. Zecchina"], "venue": "Phys. Rev. Lett., vol. 94, pp. 197\u2013205, 2005.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2005}, {"title": "Circumspect descent prevails in solving random constraint satisfaction problems", "author": ["M. Alava", "J. Ardeliu", "E. Aurell", "P. Kaski", "S. Krishnamurthy", "P. Orponen"], "venue": "Proc. Natl. Acad. Sci. USA, vol. 105, no. 4, pp. 15253\u201315257, 2008.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2008}, {"title": "Linear upper bounds for random walk on small density 3-CNFs", "author": ["M. Alekhnovich", "E. Ben-Sasson"], "venue": "SIAM J. Comput., vol. 36, no. 5, pp. 1248\u20131263, 2006.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2006}, {"title": "Invariant measures for Markov processes arising from iterated function systems  with place-dependent probabilities", "author": ["M.F. Barnsley", "S.G. Demko", "J.H. Elton", "J.S. Geronimo"], "venue": "Ann. Inst. H. Poincar\u00e9 Probab. Statist., vol. 24, no. 3, pp. 367\u2013394, 1988.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1988}], "referenceMentions": [{"referenceID": 0, "context": "[1], [2], [3], [4] and references therein.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[1], [2], [3], [4] and references therein.", "startOffset": 5, "endOffset": 8}, {"referenceID": 2, "context": "[1], [2], [3], [4] and references therein.", "startOffset": 10, "endOffset": 13}, {"referenceID": 3, "context": "[1], [2], [3], [4] and references therein.", "startOffset": 15, "endOffset": 18}, {"referenceID": 4, "context": "Secondly, we define a new class of CSP algorithms which we term decentralized CSP solvers and, extending our earlier approach to graph colouring [5][6], introduce a novel stochastic decentralized CSP solver proving that it will find a solution in almost surely finite", "startOffset": 145, "endOffset": 148}, {"referenceID": 5, "context": "Secondly, we define a new class of CSP algorithms which we term decentralized CSP solvers and, extending our earlier approach to graph colouring [5][6], introduce a novel stochastic decentralized CSP solver proving that it will find a solution in almost surely finite", "startOffset": 148, "endOffset": 151}, {"referenceID": 6, "context": "find that the time the algorithm takes to find a satisfying assignment is close to that of WalkSAT [7], a well regarded, efficient centralized CSP solver, while also possessing desirable features of Survey Propagation [8].", "startOffset": 99, "endOffset": 102}, {"referenceID": 7, "context": "find that the time the algorithm takes to find a satisfying assignment is close to that of WalkSAT [7], a well regarded, efficient centralized CSP solver, while also possessing desirable features of Survey Propagation [8].", "startOffset": 218, "endOffset": 221}, {"referenceID": 8, "context": "Network coding has been the subject of considerable interest in recent years as it offers the potential for significant increases in network capacity [9], [10], [11].", "startOffset": 150, "endOffset": 153}, {"referenceID": 9, "context": "Network coding has been the subject of considerable interest in recent years as it offers the potential for significant increases in network capacity [9], [10], [11].", "startOffset": 155, "endOffset": 159}, {"referenceID": 10, "context": "Network coding has been the subject of considerable interest in recent years as it offers the potential for significant increases in network capacity [9], [10], [11].", "startOffset": 161, "endOffset": 165}, {"referenceID": 11, "context": "Inter-flow coding is known to be challenging [12].", "startOffset": 45, "endOffset": 49}, {"referenceID": 12, "context": "The task of a network finding a feasible linear network code in a distributed fashion, but with some global sharing of calculations, is investigated in [13] through the use of a genetic algorithm.", "startOffset": 152, "endOffset": 156}, {"referenceID": 13, "context": "Recently, there has been interest in decentralized approaches for finding collisionfree schedules, see [14], [15].", "startOffset": 103, "endOffset": 107}, {"referenceID": 14, "context": "Recently, there has been interest in decentralized approaches for finding collisionfree schedules, see [14], [15].", "startOffset": 109, "endOffset": 113}, {"referenceID": 15, "context": "algorithm [16], [17]; (ii) Survey Propagation [8]; and (iii) on Stochastic Local Search (SLS) [7].", "startOffset": 10, "endOffset": 14}, {"referenceID": 16, "context": "algorithm [16], [17]; (ii) Survey Propagation [8]; and (iii) on Stochastic Local Search (SLS) [7].", "startOffset": 16, "endOffset": 20}, {"referenceID": 7, "context": "algorithm [16], [17]; (ii) Survey Propagation [8]; and (iii) on Stochastic Local Search (SLS) [7].", "startOffset": 46, "endOffset": 49}, {"referenceID": 6, "context": "algorithm [16], [17]; (ii) Survey Propagation [8]; and (iii) on Stochastic Local Search (SLS) [7].", "startOffset": 94, "endOffset": 97}, {"referenceID": 17, "context": "ManySAT [18].", "startOffset": 8, "endOffset": 12}, {"referenceID": 18, "context": "[19], that assumes the existence of a centralized intelligence that employs a backtracking search.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "Survey propagation, a development of belief propagation [20] from trees to general graphs, has proved effective in graphs that do not contain small loops [21].", "startOffset": 56, "endOffset": 60}, {"referenceID": 20, "context": "Survey propagation, a development of belief propagation [20] from trees to general graphs, has proved effective in graphs that do not contain small loops [21].", "startOffset": 154, "endOffset": 158}, {"referenceID": 21, "context": "To see this implicit requirement, consider the following algorithm for binary valued variables originally proposed by Papadimitriou [22] and developed further by Sch\u00f6ning [23].", "startOffset": 132, "endOffset": 136}, {"referenceID": 22, "context": "To see this implicit requirement, consider the following algorithm for binary valued variables originally proposed by Papadimitriou [22] and developed further by Sch\u00f6ning [23].", "startOffset": 171, "endOffset": 175}, {"referenceID": 6, "context": "Although simple, this forms the basic building block for all SLS algorithms, including the well-studied WalkSAT algorithm [7].", "startOffset": 122, "endOffset": 125}, {"referenceID": 22, "context": "It is important that a single unsatisfied clause is selected at each step and that a single variable within the clause is adjusted as it is this that leads to the algorithm behaving as a random walk [23].", "startOffset": 199, "endOffset": 203}, {"referenceID": 21, "context": "In random k-SAT, an instance of k-SAT is generated by drawing M such clauses uniformly at random [22].", "startOffset": 97, "endOffset": 101}, {"referenceID": 24, "context": "Evidently, rexist,k \u2264 r\u00acexist,k and it is conjectured that rexist,k = r\u00acexist,k [25].", "startOffset": 80, "endOffset": 84}, {"referenceID": 29, "context": "[30], although there are fewer experimental studies for k > 3.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "Recent mathematical results have established that rexist,k \u2265 2 log 2\u2212k [24] and this lower bound can be tightened to obtain the theoretical values shown", "startOffset": 71, "endOffset": 75}, {"referenceID": 30, "context": "Statistical physics considerations have led to the conjecture that rpoly,k is equal to the value r1RSB,k at which the one-step replica symmetry breaking (1RSB) instability occurs [31].", "startOffset": 179, "endOffset": 183}, {"referenceID": 31, "context": "For k \u2265 8, it has been proven analytically that the set of satisfying assignments is grouped into widely separated clusters, which lends support to this conjecture [32].", "startOffset": 164, "endOffset": 168}, {"referenceID": 32, "context": "For values of k < 8 the situation is less clear, with experimental evidence indicating that rpoly,k lies above r1RSB,k for k = 3, 4 and 5 [33].", "startOffset": 138, "endOffset": 142}, {"referenceID": 23, "context": "78 726,817 r\u00acexist,k[24] 4.", "startOffset": 20, "endOffset": 24}, {"referenceID": 24, "context": "94 726,817 rexist,k[25], [26] 3.", "startOffset": 19, "endOffset": 23}, {"referenceID": 25, "context": "94 726,817 rexist,k[25], [26] 3.", "startOffset": 25, "endOffset": 29}, {"referenceID": 26, "context": "78 706,817 rpoly,k [27], [26] 3.", "startOffset": 19, "endOffset": 23}, {"referenceID": 25, "context": "78 706,817 rpoly,k [27], [26] 3.", "startOffset": 25, "endOffset": 29}, {"referenceID": 27, "context": "65 95,263 Estimates r\u00acexist,k[28] 4.", "startOffset": 29, "endOffset": 33}, {"referenceID": 27, "context": "91 r1RSB,k[28], [29] 4.", "startOffset": 10, "endOffset": 14}, {"referenceID": 28, "context": "91 r1RSB,k[28], [29] 4.", "startOffset": 16, "endOffset": 20}, {"referenceID": 29, "context": "Comparing the performance of the CFL algorithm with the popular WalkSAT algorithm, we note that the WalkSAT algorithm also exhibits an exponential-like dependence of stopping time on r and linearity in N [30], [34], [33].", "startOffset": 204, "endOffset": 208}, {"referenceID": 33, "context": "Comparing the performance of the CFL algorithm with the popular WalkSAT algorithm, we note that the WalkSAT algorithm also exhibits an exponential-like dependence of stopping time on r and linearity in N [30], [34], [33].", "startOffset": 210, "endOffset": 214}, {"referenceID": 32, "context": "Comparing the performance of the CFL algorithm with the popular WalkSAT algorithm, we note that the WalkSAT algorithm also exhibits an exponential-like dependence of stopping time on r and linearity in N [30], [34], [33].", "startOffset": 216, "endOffset": 220}, {"referenceID": 32, "context": "ChainSat [33].", "startOffset": 9, "endOffset": 13}, {"referenceID": 29, "context": "It is not exhibited by the Survey Propagation algorithm [30], [8], which has been the subject of considerable interest as it creates the ability to operate close to the rexist,k threshold.", "startOffset": 56, "endOffset": 60}, {"referenceID": 7, "context": "It is not exhibited by the Survey Propagation algorithm [30], [8], which has been the subject of considerable interest as it creates the ability to operate close to the rexist,k threshold.", "startOffset": 62, "endOffset": 65}, {"referenceID": 0, "context": ", N} let ~ pi(t) \u2208 [0, 1], t \u2208 N, be the CFL probability vector for variable i at time t and xi(t) be the variable\u2019s value selected stochastically from ~ pi(t).", "startOffset": 19, "endOffset": 25}, {"referenceID": 34, "context": "The state of the probability vectors {P (t)} forms a Markov Chain, or Iterated Function System, with place dependent probabilities [38].", "startOffset": 131, "endOffset": 135}, {"referenceID": 5, "context": "In a sequence of events analogous to those in the proof of [6][Theorem 3], these two variables select their final values, ~ai and (~a)j , at the next round, causing their initial clause to be satisfied as ~a \u2208 A.", "startOffset": 59, "endOffset": 62}], "year": 2012, "abstractText": "We show that several important resource allocation problems in wireless networks fit within the common framework of Constraint Satisfaction Problems (CSPs). Inspired by the requirements of these applications, where variables are located at distinct network devices that may not be able to communicate but may interfere, we define natural criteria that a CSP solver must possess in order to be practical. We term these algorithms decentralized CSP solvers. The best known CSP solvers were designed for centralized problems and do not meet these criteria. We introduce a stochastic decentralized CSP solver, proving that it will find a solution in almost surely finite time, should one exist, and also showing it has many practically desirable properties. We benchmark the algorithm\u2019s performance on a well-studied class of CSPs, random k-SAT, illustrating that the time the algorithm takes to find a satisfying assignment is competitive with stochastic centralized solvers on problems with order a thousand variables despite its decentralized nature. We demonstrate the solver\u2019s practical utility for the problems that motivated its introduction by using it to find a non-interfering channel allocation for a network formed from data from downtown Manhattan.", "creator": "LaTeX with hyperref package"}}}