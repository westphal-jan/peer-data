{"id": "1104.0843", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Apr-2011", "title": "Phase Transitions in Knowledge Compilation: an Experimental Study", "abstract": "Phase transitions in many complex combinational problems have been widely studied in the past decade. In this paper, we investigate phase transitions in the knowledge compilation empirically, where DFA, OBDD and d-DNNF are chosen as the target languages to compile random k-SAT instances and industrial-like SAT instances. We perform intensive experiments to analyze the sizes of compilation results and draw the following conclusions: there exists an easy-hard-easy pattern in compilations; the peak point of sizes in the pattern is only related to the ratio of the number of clauses to that of variables when k is fixed, regardless of target languages; most sizes of compilation results increase exponentially with the number of variables growing, but there also exists a phase transition that separates a polynomial-increment region from the exponential-increment region; Moreover, we explain why the phase transition in compilations occurs by analyzing microstructures of DFAs, and conclude that a kind of solution interchangeability with more than 2 variables has a sharp transition near the peak point of the easy-hard-easy pattern, and thus it has great impact on the sizes of DFAs.", "histories": [["v1", "Tue, 5 Apr 2011 13:25:43 GMT  (582kb)", "http://arxiv.org/abs/1104.0843v1", null], ["v2", "Sun, 17 Apr 2011 12:41:23 GMT  (582kb)", "http://arxiv.org/abs/1104.0843v2", null], ["v3", "Fri, 3 Jun 2011 07:05:11 GMT  (201kb)", "http://arxiv.org/abs/1104.0843v3", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jian gao", "minghao yin", "ke xu"], "accepted": false, "id": "1104.0843"}, "pdf": {"name": "1104.0843.pdf", "metadata": {"source": "CRF", "title": "Phase Transitions in Knowledge Compilation: an Experimental Study", "authors": ["Jian Gao", "Minghao Yin", "Ke Xu"], "emails": ["jiangao.cn@hotmail.com;", "ymh@nenu.edu.cn", "kexu@nlsde.buaa.edu.cn"], "sections": [{"heading": null, "text": "In this paper, we examine phase transitions in the knowledge composition empirically, selecting DFA, OBDD, and d-DNNF as target languages to compile k-SAT instances and industry-like SAT instances. We conduct intensive experiments to analyze the size of the compilation results and draw the following conclusions: There is a slightly difficult-simple pattern in the compilation; the peak of the size of the pattern is only related to the theratio of the number of clauses to the number of variables when k is specified, regardless of the target languages; most sizes of the compilation results increase exponentially with the number of variables, but there is also a phase transition that separates a polynomic-incremental region from the exponential-incremental region; furthermore, we explain why the phase transition occurs in the composition by analyzing microstructures of DFAs and conclude that a type of 2 consists of more solvability than solvability."}, {"heading": "Introduction", "text": "They claimed that all NP-complete problems have a critical point that separates overwhelmed and underchallenged regions, and that the phase transition phases occur at this point. Successive studies have shown that phase transitions are widespread in complex combinatorial (optimization) problems. Some representative problems are random k-SAT, whose phase transition point is measured by the ratio of the number of clauses to the variables, and random Constraint Satisfaction Problems (CSPs), where the RB model has demonstrated exact transition phase transitions whose instances are difficult to resolve. Recent studies on more complex problems have shown that there are phase transitions in QBF [5,6] and planning that are PSPACE-complete."}, {"heading": "Basic Conjecture", "text": "Definition 9. Let KP be a random k-SAT definition generated with n variables and n clauses, and let L kX P be the size of the composition where L is the target language to which nr kP is compiled (we consider the number of nodes to be the size if L is the number of DNDD or DNNF). Definition 1. Definition 1. Definition 1. Definition 1. Definition 2. Definition 2. Definition 2. Definition 2. Definition 2. Definition 3. Definition 2. Definition 2. Definition 3. Definition 3. Definition 2. Definition 2. Definition 3. Definition 3. Definition 3. Definition 3. Definition 3."}, {"heading": "Experiments on Random 3-SAT", "text": "This year, it is as far as ever in the history of the city, where it is as far as never before."}, {"heading": "Experimental Results on Industrial-Like SAT", "text": "In order to evaluate a target language, industrial instances are usually used, such as configuration problems and instances in SATLIB. In this section, we examine the phase transition of knowledge formation in industrial instances. The easy-hard-easy pattern in these instances is shown and a comparison is made between random instances and industrial instances."}, {"heading": "Experiments on Industrial-like SAT", "text": "This subsection shows phase transitions and localizes the phase transition point in instances generated by the powerlaw model when k is 3. To get a more precise transition point of knowledge compilation, larger instances are compiled, with n set to 100, 110, and 120, because it seems that instances above the soluble to insoluble transition point are usually soluble when n is too small. We compile these instances only to d-DNNFs, since the results of the OBDDs exhibit the same behavior. As shown in Fig. 6, the compilation results of industrial 3-SAT are also subject to the easy-difficult-simple pattern, where the ratio at the peaks is about 1.4. Thus, it is slightly smaller than the position of random 3-SAT instances. Therefore, the position of the peaks is that \u03b2 increases from 0, as reported in [21]."}, {"heading": "Comparison of Random SAT and Industrial-like SAT", "text": "We compare the compilation results of 3 SAT instances generated by the standard random model and the Powerlaw model. For each model, 9 groups of instances are generated, each of which has a fixed n with r, varying from 0 to 4.3 in steps of 0.1, and then compiled into d-DNNFs. Next, we select the peak values of each group. Results are shown in Fig. 7, where the logarithmic axis is also used. There are two curves that represent the peak values of the default random model or Powerlaw model, respectively. From this, we can see that the quantities representing industry-like instances grow more slowly than those representing random instances. Although both grow exponentially, it is easier to compile an industry-like instance generated by the Powerlaw model than to compile a random instance with the same number of variables and clauses."}, {"heading": "Phase Transition Analysis on DFAs", "text": "In this section, we will focus on the structure of the DFA to explain why the simple-hard-simple pattern occurs. < DFA can also be used as the target language. In the early study, DFA was used to solve Vempary CSPs [24]. Amilhastre et al. [17] compiled configuration problems in DFAs. Such DFA is a directed graph whose edges (the transitions of the automaton) are labeled by an assignment < xi, ai >, meaning that ai mappings of DFAs are called states; the root of the graph is called the initial state. States in the graph are divided into subsets (levels) in which the initial state is composed 0; names of transitions from states in the same subset, however, have different values. Paths of DFAs are called states; the root of the graph is called the initial state."}, {"heading": "Microstructure Analysis", "text": "In fact, it is in such a way that most of them are able to embark on a search for a solution that is able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they exist, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able to be able, in which they are able, in which they are able, in which they are able to live, in which they live, in which they exist, in which they exist, in which they live, in which they exist, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they exist, in which they live, in which they live, in which they live, in which they live, in which they live in which they exist, in which they live, in which they live, in which they live in which they exist, in which they live, and in which they are able to change the world, in which they are able to be in which they live, in which they live, in which they live, in which they live in which they are able to live, in which they live in which they are able to live, in which they live, in which they live in which they are able to live, in which they live, in which they live in which they are able to live, in which they live, in which they live, in which they live in which they are able to live, in which they exist, in which they exist, in which they exist, in which they exist, in which they exist, in which they are able to live, in which they live, in which they live, in which they live in which they live, in which they are able to live, in which they live, in which they live, in which they are able to change the world, in which they are able to change the world, in which they are able to change, in which they are able to live, in which they live in which they are able"}, {"heading": "Conclusions", "text": "Our work concerns the phase transition in the knowledge compilation of k-SAT, which is accompanied by a light-heavy-simple pattern in space and not in runtime. Initially, we suspected that the ratios of clauses to variables in the random SAT model have a large impact on the size of compilation results, where a simple-heavy-simple pattern similar to many phase transition phenomena exists. DFAs, OBDDs, and d-DNNFs, which are often used to compile real problems offline, were selected as target languages for the compilation. Experimental results on randomly generated k-SAT were shown in a series of numbers that supported the conjecture. Interestingly, we also suggested that curves of the average can be inferred from the fact that the sizes for 3-SAT increase exponentially as n grows when r > 0.3, while the sizes increase polynomically when r < 0.3."}], "references": [{"title": "Where the Really Hard Problems Are", "author": ["P. Cheeseman", "B. Kanefsky", "M. Taylor W."], "venue": "proc. IJCAI\u201991, pp. 331--340. Morgan Kaufmann Publishers, Inc.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1991}, {"title": "Exact Phase Transitions in Random Constraint Satisfaction Problems", "author": ["K. Xu", "W. Li"], "venue": "J. Artif. Intell. Res. 12, 93--103", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2000}, {"title": "Rigorous location of phase transitions in hard optimization problems", "author": ["D. Achlioptas", "A. Naor", "Y. Peres"], "venue": "Nature 435, 759--764", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2005}, {"title": "Phase Transition Behavior: from Decision to Optimization, In: proc", "author": ["J. Slaney", "T. Walsh"], "venue": "SAT\u201902,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2002}, {"title": "Beyond NP: the QSAT phase transition", "author": ["P. Gent I.", "T. Walsh"], "venue": "proc. AAAI/IAAI\u201999, pp. 648--653. AAAI Press", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1999}, {"title": "New Results on the Phase Transition for Random Quantified Boolean Formulas", "author": ["N. Creignou", "H. Daud\u00e9", "U. Egly", "R. Rossignol"], "venue": "proc. SAT\u201908, LNCS, vol. 4996, pp.34--47. Springer, Heidelberg", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Phase Transitions in Classical Planning: An Experimental Study", "author": ["J Rintanen"], "venue": "In proc. ICAPS\u201904, pp. 101--110", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "Phase Transitions of EXPSPACE-Complete Problems", "author": ["J. Zhou", "P. Huang", "C. Yin M.: Zhou"], "venue": "Int. J. Found. Comput. Sci", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "The TSP Phase Transition", "author": ["P. Gent I.", "T. Walsh"], "venue": "Artif. Intell. 88, 349--358", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1996}, {"title": "Where Are the Really Hard Manipulation Problems? The Phase Transition in Manipulating the Veto Rule", "author": ["T. Walsh"], "venue": "proc. IJCAI\u201909, pp. 324--329. Morgan Kaufmann Publishers, Inc.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2009}, {"title": "Phase Transitions of PP-Complete Satisfiability Problems", "author": ["D. Bailey D.", "V. Dalmau", "G. Kolaitis P."], "venue": "proc. IJCAI\u201901, pp. 183--192. Morgan Kaufmann Publishers, Inc.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2001}, {"title": "Exact phase transition of backtrack-free search with implications on the power of greedy algorithms", "author": ["L. Li", "T. Liu", "K. Xu"], "venue": "arXiv:0811.3055", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "A survey on knowledge compilation", "author": ["M. Cadoli", "F. Donini"], "venue": "AI Communications 10, 137--150", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1998}, {"title": "Constraint and Variable Ordering Heuristics for Compiling Configuration Problems", "author": ["N. Narodytska", "T. Walsh"], "venue": "proc. IJCAI\u201907, pp. 149--154. Morgan Kaufmann Publishers, Inc.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Knowledge Compilation and Theory Approximation", "author": ["B. Selman", "A. Kautz H."], "venue": "J. ACM 43, 193--224", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1996}, {"title": "A Compiler for Deterministic, Decomposable Negation Normal Form", "author": ["A. Darwiche"], "venue": "proc. AAAI/IAAI\u201902: pp. 627--634. AAAI Press", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2002}, {"title": "Consistency restoration and explanations in dynamic CSPs Application to configuration", "author": ["J. Amilhastre", "H. Fargier", "P. Marquis"], "venue": "Artif. Intell. 135, 199--234", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "AND/OR Multi-Valued Decision Diagrams (AOMDDs) for Graphical Models", "author": ["R. Mateescu", "R. Dechter", "R. Marinescu"], "venue": "J. Artif. Intell. Res. 33, 465--519", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2008}, {"title": "A Knowledge Compilation Map", "author": ["A. Darwiche", "P. Marquis"], "venue": "J. Artif. Intell. Res. 17, 229--264", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2002}, {"title": "Hard and Easy Distributions of SAT Problems", "author": ["D.G. Mitchell", "B. Selman", "H.J. Levesque"], "venue": "proc. AAAI\u201992, pp. 459--465. AAAI Press", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1992}, {"title": "Towards Industrial-Like Random SAT Instances.In", "author": ["C. Ans\u00f3tegui", "L. Bonet M", "J. Levy"], "venue": "proc. IJCAI\u201909,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "The Good Old Davis-Putnam Procedure Helps Counting Models", "author": ["E. Birnbaum", "L. Lozinskii E."], "venue": "J. Artif. Intell. Res. 10, 457--477", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1999}, {"title": "Counting Models Using Connected Components", "author": ["Roberto J. Bayardo Jr.", "Pehoushek J. D"], "venue": "proc. AAAI\u201900, pp. 157--162. AAAI Press", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2000}, {"title": "proc", "author": ["Vempary N.R. Solving constraint satisfaction problems using finite state automata. In"], "venue": "AAAI\u201992, pp. 453--458. AAAI Press", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1992}, {"title": "Eliminating Interchangeable Values in Constraint Satisfaction Problems", "author": ["E.C. Freuder"], "venue": "In proc", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1991}], "referenceMentions": [{"referenceID": 0, "context": "Phase transitions, as a kind of well-known phenomenon in artificial intelligence, have attracted a great mount of attention since the paper [1].", "startOffset": 140, "endOffset": 143}, {"referenceID": 1, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 2, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 3, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 4, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 5, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 6, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 7, "context": "Successive studies have shown that phase transitions widely exist in complex combinational (optimization) problems [2-8].", "startOffset": 115, "endOffset": 120}, {"referenceID": 1, "context": "Some representative problems are random k-SAT, whose phase transition point is measured by the ratio of the number of clauses to that of variables, and random Constraint Satisfaction Problems (CSPs), where in the RB model [2] an exact transition point was proved whose instances are hard to solve.", "startOffset": 222, "endOffset": 225}, {"referenceID": 4, "context": "Furthermore, recent investigations on more complex problems have demonstrated that there are phase transitions in QBF [5,6] and planning [7] which are PSPACE-complete, and even in problems that are EXPSPACE-complete [8].", "startOffset": 118, "endOffset": 123}, {"referenceID": 5, "context": "Furthermore, recent investigations on more complex problems have demonstrated that there are phase transitions in QBF [5,6] and planning [7] which are PSPACE-complete, and even in problems that are EXPSPACE-complete [8].", "startOffset": 118, "endOffset": 123}, {"referenceID": 6, "context": "Furthermore, recent investigations on more complex problems have demonstrated that there are phase transitions in QBF [5,6] and planning [7] which are PSPACE-complete, and even in problems that are EXPSPACE-complete [8].", "startOffset": 137, "endOffset": 140}, {"referenceID": 7, "context": "Furthermore, recent investigations on more complex problems have demonstrated that there are phase transitions in QBF [5,6] and planning [7] which are PSPACE-complete, and even in problems that are EXPSPACE-complete [8].", "startOffset": 216, "endOffset": 219}, {"referenceID": 8, "context": "In addition, some real-world problems, such as TSP [9] and manipulation problem [10], have been shown to have phase transition phenomena.", "startOffset": 51, "endOffset": 54}, {"referenceID": 9, "context": "In addition, some real-world problems, such as TSP [9] and manipulation problem [10], have been shown to have phase transition phenomena.", "startOffset": 80, "endOffset": 84}, {"referenceID": 10, "context": "[11] have addressed phase transitions in #SAT, of which the decision problem is PP-complete.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "As second example phase transitions of backtrack-free instances have been studied [12].", "startOffset": 82, "endOffset": 86}, {"referenceID": 12, "context": "Knowledge compilation [13] is used to compile all (or a part of) the solutions of a problem into a tractable language, and has been employed in many areas ranging from planning, diagnosis to formal verification and production configuration.", "startOffset": 22, "endOffset": 26}, {"referenceID": 13, "context": "In the past decades, many target languages of knowledge compilation have been proposed for compiling SAT instances and CSPs, such as Ordered Binary Decision Diagram (OBDD), prime implicates, horn approximation, deterministic, Decomposable Negation Normal Form (d-DNNF), Deterministic Finite-state Automaton (DFA) and AND/OR MDD [14-18].", "startOffset": 328, "endOffset": 335}, {"referenceID": 14, "context": "In the past decades, many target languages of knowledge compilation have been proposed for compiling SAT instances and CSPs, such as Ordered Binary Decision Diagram (OBDD), prime implicates, horn approximation, deterministic, Decomposable Negation Normal Form (d-DNNF), Deterministic Finite-state Automaton (DFA) and AND/OR MDD [14-18].", "startOffset": 328, "endOffset": 335}, {"referenceID": 15, "context": "In the past decades, many target languages of knowledge compilation have been proposed for compiling SAT instances and CSPs, such as Ordered Binary Decision Diagram (OBDD), prime implicates, horn approximation, deterministic, Decomposable Negation Normal Form (d-DNNF), Deterministic Finite-state Automaton (DFA) and AND/OR MDD [14-18].", "startOffset": 328, "endOffset": 335}, {"referenceID": 16, "context": "In the past decades, many target languages of knowledge compilation have been proposed for compiling SAT instances and CSPs, such as Ordered Binary Decision Diagram (OBDD), prime implicates, horn approximation, deterministic, Decomposable Negation Normal Form (d-DNNF), Deterministic Finite-state Automaton (DFA) and AND/OR MDD [14-18].", "startOffset": 328, "endOffset": 335}, {"referenceID": 17, "context": "In the past decades, many target languages of knowledge compilation have been proposed for compiling SAT instances and CSPs, such as Ordered Binary Decision Diagram (OBDD), prime implicates, horn approximation, deterministic, Decomposable Negation Normal Form (d-DNNF), Deterministic Finite-state Automaton (DFA) and AND/OR MDD [14-18].", "startOffset": 328, "endOffset": 335}, {"referenceID": 18, "context": "A knowledge compilation map [19] has been presented to analyze the succinctness of the target compilation languages, as well as identify tractable queries of them.", "startOffset": 28, "endOffset": 32}, {"referenceID": 19, "context": "[20] introduced a model for generating random SAT instances, which can produce hard instances as it was claimed.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "Meanwhile, theoretical analyses on the random k-SAT model have been made [3], for example, the properties of phase transitions have been identified that are widely used to analyze average computational complexity.", "startOffset": 73, "endOffset": 76}, {"referenceID": 19, "context": "In the model discussed in [20], there are 3 parameters k, n, m that are employed to generate SAT instances, where k is the length of clauses, n is the number of variables, and m is the number of clauses.", "startOffset": 26, "endOffset": 30}, {"referenceID": 20, "context": "[21] proposed some models that can produce random instances similar to industrial instances.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "82, instances generated are similar to industrial instances (For more details, we refer to [21]).", "startOffset": 91, "endOffset": 95}, {"referenceID": 19, "context": "3 in 3-SAT [20], and mean runtimes for finding a solution by SAT algorithms are often extremely high for solving instances in the phase transition region.", "startOffset": 11, "endOffset": 15}, {"referenceID": 2, "context": "However, it seems to be difficult to locate transition points of k-SAT by theoretical proof, as only lower and upper bounds have been found for the points [3].", "startOffset": 155, "endOffset": 158}, {"referenceID": 20, "context": "For the powerlaw model, phase transition phenomenon was also observed, where its point may occur with a smaller r compared with standard random k-SAT model as reported in [21], the soluble-to-insoluble transition point is about 2.", "startOffset": 171, "endOffset": 175}, {"referenceID": 10, "context": "Similar phenomenon also exists in #SAT [11], which is a counting problem.", "startOffset": 39, "endOffset": 43}, {"referenceID": 21, "context": "For instance, it was reported that an algorithm, called Counting Davis-Putnam [22], reaches its peak runtime when r=1.", "startOffset": 78, "endOffset": 82}, {"referenceID": 22, "context": "2 on the experiments of #3-SAT, while the peak point of another algorithm, called Decomposing Davis-Putnam [23], occurs when r=1.", "startOffset": 107, "endOffset": 111}, {"referenceID": 13, "context": "edu/c2d/) and the OBDD compiler based on CUDD package was developed by Narodytska and Walsh for their work of constraint and variable ordering heuristics for compiling configuration problems [14].", "startOffset": 191, "endOffset": 195}, {"referenceID": 11, "context": "It is quite similar to the classical phase transition, where the phase transition in structures of solutions separates the tractable and intractable regions [12].", "startOffset": 157, "endOffset": 161}, {"referenceID": 15, "context": "We close this section by arguing that not only the size of compilation results undergoes the easy-hard-easy pattern, but also the runtime cost in compilations does, In [16], similar experimental results on d-DNNF for compiling 3-SAT instances have been depicted, where the peak point of runtimes is also fixed at r=1.", "startOffset": 168, "endOffset": 172}, {"referenceID": 20, "context": "with the fact that soluble-to-insoluble transition point of industrial-like SAT will become smaller with \u03b2 increasing from 0, reported in [21].", "startOffset": 138, "endOffset": 142}, {"referenceID": 23, "context": "In the early study, DFA was used to solve CSPs by Vempary [24].", "startOffset": 58, "endOffset": 62}, {"referenceID": 16, "context": "[17] compiled configuration problems into DFAs.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "Freuder [25] investigated the interchangeability deeply, where various forms of interchangeability were proposed.", "startOffset": 8, "endOffset": 12}], "year": 2011, "abstractText": "Phase transitions in many complex combinational problems have been widely studied in the past decade. In this paper, we investigate phase transitions in the knowledge compilation empirically, where DFA, OBDD and d-DNNF are chosen as the target languages to compile random k-SAT instances and industrial-like SAT instances. We perform intensive experiments to analyze the sizes of compilation results and draw the following conclusions: there exists an easy-hard-easy pattern in compilations; the peak point of sizes in the pattern is only related to the ratio of the number of clauses to that of variables when k is fixed, regardless of target languages; most sizes of compilation results increase exponentially with the number of variables growing, but there also exists a phase transition that separates a polynomial-increment region from the exponential-increment region; Moreover, we explain why the phase transition in compilations occurs by analyzing microstructures of DFAs, and conclude that a kind of solution interchangeability with more than 2 variables has a sharp transition near the peak point of the easy-hard-easy pattern, and thus it has great impact on the sizes of DFAs.", "creator": "Microsoft\u00ae Office Word 2007"}}}