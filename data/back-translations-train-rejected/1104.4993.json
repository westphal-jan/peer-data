{"id": "1104.4993", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Apr-2011", "title": "Arc Consistency and Friends", "abstract": "A natural and established way to restrict the constraint satisfaction problem is to fix the relations that can be used to pose constraints; such a family of relations is called a constraint language. In this article, we study arc consistency, a heavily investigated inference method, and three extensions thereof from the perspective of constraint languages. We conduct a comparison of the studied methods on the basis of which constraint languages they solve, and we present new polynomial-time tractability results for singleton arc consistency, the most powerful method studied.", "histories": [["v1", "Tue, 26 Apr 2011 18:52:57 GMT  (44kb)", "http://arxiv.org/abs/1104.4993v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.LO", "authors": ["hubie chen", "victor dalmau", "berit gru{\\ss}ien"], "accepted": false, "id": "1104.4993"}, "pdf": {"name": "1104.4993.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Hubie Chen", "Victor Dalmau", "Berit Gru\u00dfien"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 110 4.49 93v1 [cs.AI] 26 Apr 201 1"}, {"heading": "1 Introduction", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "1.1 Background", "text": "In fact, it is the case that you are able to follow the rules that you apply in practice in order to integrate them into practice."}, {"heading": "1.2 Contributions", "text": "In this paper we examine the consistency of the arc and the three natural extensions of it from the perspective of limited languages. The extensions of the AC that we are examining are the consistency of the arc (LAAC) [12]; the consistency of the arc (PAC) and the consistency of the arc (SAC) [16, 7]. Each of these algorithms is natural, conceptually simple, and easy to implement by applying the consistency of the arc as a black box. Traceability of languages was presented by feather and vardi (for example)."}, {"heading": "2 Preliminaries", "text": "Our definitions and notation are fairly standard. For an integer k \u2265 1, we use the notation [k] to denote the set that contains the first k positive integer, i.e., the set {1,.,., k}. Structures A over a set B is an element of Bk for a value k \u2265 1, which is called the nature of the tuple; if t is a tuple, we often use the notation t = (t1,., tk) to denote its entries. A relationship over a set B is a subset of Bk for a value k, which is called the nature of the relationship. We use the operator that is projected onto the ith coordinate. (t) denotes the ith signature ti of a tuple t = (t1,., tk), and for a relationship R we define."}, {"heading": "3 Algorithms", "text": "In this section, we give a uniform representation of the four algorithms examined in this paper: arc consistency, predictive arc consistency, peek-arc consistency, and singleton consistency, presented in sections 3.1, 3.2, 3.3, and 3.4. Results for the first three algorithms come from previous work as we discuss them in the presentation of each of these algorithms; for singleton-arc consistency, we develop results similar to those for the other algorithms. Our treatment of arc consistency, peek-arc consistency, and singleton-arc consistency is uniform: for each of these algorithms, we present a homomorphism-based consistency condition, we show that the algorithm checks precisely this consistency condition, and we give an algebraic condition that describes structures B so that the algorithm solves CSP (B)."}, {"heading": "3.1 Arc Consistency", "text": "The main idea of the algorithm is to assign to each element a set of Sa values, which throughout the execution of the algorithm have the property that for each solution h must exist, and the algorithm rejects the instance. Arc Consistency Input: a pair (A, B) of similar structures until they stabilize; at this point, if a set Sa is the empty set, then no solution can exist, and the algorithm rejects the instance. Arc Consistency Input: a pair (A, B) of similar structures until they stabilize. A do set Sa: = B; repeat forall relationships RA doforall tuples (a1,.) ak).RA do forall i doset Sai: a pair (K) doset Sai: = \u03c0i (R B) mado set Sa: = B; repeat forall relationships RA doforall tuples (a1,."}, {"heading": "3.2 Look-Ahead Arc Consistency", "text": "We now introduce the predictive arc consistency algorithm. It tries to construct a satisfactory mapping by specifying one variable at a time, using the arc consistency as a filter to find a suitable value for each variable.Look-Ahead Arc Consistency Input: a pair (A, B) of similar structures for all A do set Sa: = B; for i = 1 to | A | do pick arbitrary ai-A with ai 6,.., ai-1}; forall b-B doif Arc Consistency ([A, {a1},.., {ai-1}, {b1},.., {bi-1}, {b-1}) then rejects b-structures; forall b-B doif Arc Consistency ([A, {a1}, B-1) {if, A-1, A-docy B, A-1."}, {"heading": "3.3 Peek Arc Consistency", "text": "We introduce the Peek Arc Consistency Algorithm. It tries to find an A structure for each variable, a value b-B, so that when a is set to b, the consistency of the arc is checked. (Peek Arc Consistency Input: a pair (A, B) of similar structures for all a-A sentences Sa: = B; forall a-A, b-B do if Arc Consistency (A, {a}], [B, {b}]) then rejects b from Sa; if there is such an instance that Sa-A then rejects; otherwise the consistency returns \"?\"; Peek Arc Consistency was introduced and examined by Bodirsky and Chen [8]; the terms and results that follow from them come. In their work, the algorithm is shown to solve certain consistency languages, including some languages that have infinitely large universes."}, {"heading": "3.4 Singleton Arc Consistency", "text": "As with arc consistency, this algorithm associates each element with a set of possible values."}, {"heading": "4 Strength Comparison", "text": "In this section, we examine relationships between the groups of structures that are solvable by the various presented algorithms. We show that for the structures that have all constants, AC (B) exists a strictly smaller group of structures than LAAC (B), that the structures that are solvable by AC but are not solvable by LAAC. We also show that the structures that are solvable by AC or LAAC are not solvable by any of the investigated algorithms, all fall into the class of structures that is a well-studied condition that allows multiple characterizations [18, 22, 6].Proposition 15 Assuming that B is a structure with all constants. If CSP (B) is a structure, then it is solvable by ProLA.position is then solvable by LA.position."}, {"heading": "5 Tractability via singleton arc consistency", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1 Majority operations", "text": "An operation m: B3 \u2192 B is a majority operation if it has the identity m (x, y) = m (y, y) = m (y, y) = m (y, x) = y for all x, y, b)."}, {"heading": "5.2 2-semilattice operations", "text": "It is not only a matter of time, but also a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time before a solution is found. (...) It is a matter of time. \"(...) It is a matter of time. (...)\" It is a matter of time. \"(...)\" It is a matter of time. \"(...)\" It is a matter of time. \""}, {"heading": "6 Discussion", "text": "In this paper, we conducted a systematic study of arc consistency and three simple, natural extensions of it. We compared the examined consistency terms based on constraint languages and demonstrated positive traceability results for singleton arc consistency. Atserias and Weyer [5] treated AC, PAC, SAC and general consistency consistently, showing, among other things, that for a constraint language and any pair of the previous consistency methods, it can be decided [6] whether it is true that the group of instances that pass one of the constraint tests matches the group of instances that overtake the other. Combining their results with the fact that general constraint / bounded width methods are decidable [6], it can be decided whether a given constraint language can be solved by one of the other methods or not."}], "references": [{"title": "On the power of k-consistency", "author": ["A. Atserias", "A. Bulatov", "V. Dalmau"], "venue": "In Proceedings of 34th International Colloquium on Automata, Languages and Programming (ICALP),", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Affine systems of equations and counting infinitary logic", "author": ["A. Atserias", "A. Bulatov", "A. Dawar"], "venue": "Theoretical Computer Science,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Clause-learning algorithms with many restarts and bounded-width resolution", "author": ["A. Atserias", "J.K. Fichte", "M. Thurley"], "venue": "In Proceedings of 12th International Conference on Theory and Applications of Satisfiability Testing (SAT),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Constraint propagation as a proof system", "author": ["A. Atserias", "P.G. Kolaitis", "M.Y. Vardi"], "venue": "In Proceedings of 10th International Conference on Principles and Practice of Constraint Programming (CP),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2004}, {"title": "Decidable relationships between consistency notions for constraint satisfaction problems", "author": ["A. Atserias", "M. Weyer"], "venue": "In Proceedings of 18th Annual Conference of the European Association for Computer Science Logic (CSL),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Constraint satisfaction problems of bounded width", "author": ["L. Barto", "M. Kozik"], "venue": "In Proceedings of the 50th Annual IEEE Symposium on Foundations of Computer Science,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Theoretical analysis of singleton arc consistency and its extensions", "author": ["C. Bessiere", "R. Debruyne"], "venue": "Artificial Intelligence,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Peek arc consistency", "author": ["M. Bodirsky", "H. Chen"], "venue": "Theoretical Computer Science,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Results on the algebraic approach to the csp", "author": ["A. Bulatov", "M. Valeriote"], "venue": "In Complexity of Constraints: An Overview of Current Research Themes,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Combinatorial problems raised from 2-semilattices", "author": ["A.A. Bulatov"], "venue": "Journal of Algebra,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}, {"title": "Optimal implementation of conjunctive queries in relational data bases", "author": ["A.K. Chandra", "P.M. Merlin"], "venue": "In Proceddings of STOC\u201977,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1977}, {"title": "Smart) look-ahead arc consistency and the pursuit of CSP tractability", "author": ["H. Chen", "V. Dalmau"], "venue": "In Proceedings of CP\u201904,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2004}, {"title": "Linear datalog and bounded path duality of relational structures", "author": ["V. Dalmau"], "venue": "Logical Methods in Computer Science,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2005}, {"title": "Majority constraints have bounded pathwidth duality", "author": ["V. Dalmau", "A. Krokhin"], "venue": "European Journal on Combinatorics,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "Closure functions and width 1 problems", "author": ["V. Dalmau", "J. Pearson"], "venue": "Proceedings of CP\u201999,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1999}, {"title": "Some practicable filtering techniques for the constraint satisfaction problem", "author": ["R. Debruyne", "C. Bessiere"], "venue": "In Proceedings IJCAI\u201997,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1997}, {"title": "On 2-sat and renamable horn", "author": ["A. del Val"], "venue": "AAAI/IAAI", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2000}, {"title": "The computational structure of monotone monadic SNP and constraint satisfaction: A study through Datalog and group theory", "author": ["T. Feder", "M. Vardi"], "venue": "SIAM Journal on Computing,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1999}, {"title": "Tractability and learnability arising from algebras with few subpowers", "author": ["P.M. Idziak", "P. Markovic", "R. McKenzie", "M. Valeriote", "R. Willard"], "venue": "In Proceedings of LICS\u201907,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2007}, {"title": "Constraints, consistency and closure", "author": ["P. Jeavons", "D. Cohen", "M. Cooper"], "venue": "AI, 101(1-2):251\u2013265,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1998}, {"title": "Universal algebra and hardness results for constraint satisfaction problems", "author": ["B. Larose", "P. Tesson"], "venue": "Theoret. Comput. Sci.,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "Bounded width problems and algebras", "author": ["B. Larose", "L. Z\u00e1dori"], "venue": "Algebra Universalis,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2007}, {"title": "Clones in Universal Algebra, volume 99 of Seminaires de Mathematiques Superieures", "author": ["A. Szendrei"], "venue": "University of Montreal,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1986}], "referenceMentions": [{"referenceID": 17, "context": "In this paper, we work with the formulation as the relational homomorphism problem: given two similar relational structures A and B, does there exist a homomorphism from A to B? In this formulation, one can view each relation of A as containing variable tuples that are constrained together, and the corresponding relation of B as containing the permissible values for the variable tuples [18].", "startOffset": 389, "endOffset": 393}, {"referenceID": 8, "context": "One of the primary current research threads involving such problems is to understand for which finite-universe constraint languages B the problem CSP(B) is polynomial-time tractable [9]; there is also work on characterizing the languages B for which the problem CSP(B) is contained in lower complexity classes such as L (logarithmic space) and NL (non-deterministic logarithmic space) [13, 21].", "startOffset": 182, "endOffset": 185}, {"referenceID": 12, "context": "One of the primary current research threads involving such problems is to understand for which finite-universe constraint languages B the problem CSP(B) is polynomial-time tractable [9]; there is also work on characterizing the languages B for which the problem CSP(B) is contained in lower complexity classes such as L (logarithmic space) and NL (non-deterministic logarithmic space) [13, 21].", "startOffset": 385, "endOffset": 393}, {"referenceID": 20, "context": "One of the primary current research threads involving such problems is to understand for which finite-universe constraint languages B the problem CSP(B) is polynomial-time tractable [9]; there is also work on characterizing the languages B for which the problem CSP(B) is contained in lower complexity classes such as L (logarithmic space) and NL (non-deterministic logarithmic space) [13, 21].", "startOffset": 385, "endOffset": 393}, {"referenceID": 18, "context": "With such aims providing motivation, there have been efforts to characterize the languages amenable to solution by certain algorithmic techniques, notably, representing solution spaces by generating sets [19] and consistency methods [22, 2, 6], which we now turn to discuss.", "startOffset": 204, "endOffset": 208}, {"referenceID": 21, "context": "With such aims providing motivation, there have been efforts to characterize the languages amenable to solution by certain algorithmic techniques, notably, representing solution spaces by generating sets [19] and consistency methods [22, 2, 6], which we now turn to discuss.", "startOffset": 233, "endOffset": 243}, {"referenceID": 1, "context": "With such aims providing motivation, there have been efforts to characterize the languages amenable to solution by certain algorithmic techniques, notably, representing solution spaces by generating sets [19] and consistency methods [22, 2, 6], which we now turn to discuss.", "startOffset": 233, "endOffset": 243}, {"referenceID": 5, "context": "With such aims providing motivation, there have been efforts to characterize the languages amenable to solution by certain algorithmic techniques, notably, representing solution spaces by generating sets [19] and consistency methods [22, 2, 6], which we now turn to discuss.", "startOffset": 233, "endOffset": 243}, {"referenceID": 21, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 1, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 3, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 0, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 2, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 5, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 4, "context": "Checking for consistency is a primary reasoning technique for the practical solution of the CSP, and has been studied theoretically from many viewpoints [22, 2, 4, 1, 3, 6, 5].", "startOffset": 153, "endOffset": 175}, {"referenceID": 11, "context": "The extensions of AC that we study are look-ahead arc consistency (LAAC) [12]; peek arc consistency (PAC) [8], and singleton arc consistency (SAC) [16, 7].", "startOffset": 73, "endOffset": 77}, {"referenceID": 7, "context": "The extensions of AC that we study are look-ahead arc consistency (LAAC) [12]; peek arc consistency (PAC) [8], and singleton arc consistency (SAC) [16, 7].", "startOffset": 106, "endOffset": 109}, {"referenceID": 15, "context": "The extensions of AC that we study are look-ahead arc consistency (LAAC) [12]; peek arc consistency (PAC) [8], and singleton arc consistency (SAC) [16, 7].", "startOffset": 147, "endOffset": 154}, {"referenceID": 6, "context": "The extensions of AC that we study are look-ahead arc consistency (LAAC) [12]; peek arc consistency (PAC) [8], and singleton arc consistency (SAC) [16, 7].", "startOffset": 147, "endOffset": 154}, {"referenceID": 17, "context": "Tractability results for constraint languages have been presented for AC by Feder and Vardi [18] (for instance); and for LAAC and PAC in the previously cited work.", "startOffset": 92, "endOffset": 96}, {"referenceID": 19, "context": "The presence of a majority polymorphism is a robust and well-studied condition: majority polymorphisms were used to give some of the initial language tractability results, are known to exactly characterize the languages such that 3-consistency implies global consistency (we refer to [20] for definitions and more details), and gave one of the first large classes of languages whose constraint satisfaction problem could be placed in non-deterministic logarithmic space [14].", "startOffset": 284, "endOffset": 288}, {"referenceID": 13, "context": "The presence of a majority polymorphism is a robust and well-studied condition: majority polymorphisms were used to give some of the initial language tractability results, are known to exactly characterize the languages such that 3-consistency implies global consistency (we refer to [20] for definitions and more details), and gave one of the first large classes of languages whose constraint satisfaction problem could be placed in non-deterministic logarithmic space [14].", "startOffset": 470, "endOffset": 474}, {"referenceID": 19, "context": "While the languages that we study are already known to be polynomial-time tractable [20, 10], from the standpoint of understanding the complexity and algorithmic properties of constraint languages, we believe our tractability results to be particularly attractive for a couple of reasons.", "startOffset": 84, "endOffset": 92}, {"referenceID": 9, "context": "While the languages that we study are already known to be polynomial-time tractable [20, 10], from the standpoint of understanding the complexity and algorithmic properties of constraint languages, we believe our tractability results to be particularly attractive for a couple of reasons.", "startOffset": 84, "endOffset": 92}, {"referenceID": 6, "context": "First, relative to a fixed language, singleton arc consistency runs in quadratic time [7], constituting a highly non-trivial running time improvement over the cubic time bound that was previously known for the studied languages.", "startOffset": 86, "endOffset": 89}, {"referenceID": 10, "context": "For instance, in logic, the constraint satisfaction problem can be formulated as the model checking problem for primitive positive sentences over relational structures, and in database theory, it can be formulated as the containment problem for conjunctive queries [11].", "startOffset": 265, "endOffset": 269}, {"referenceID": 17, "context": "Throughout this section and in later sections, we will make use of a structure\u2118(B) that is defined for every structure B, as follows [18, 15].", "startOffset": 133, "endOffset": 141}, {"referenceID": 14, "context": "Throughout this section and in later sections, we will make use of a structure\u2118(B) that is defined for every structure B, as follows [18, 15].", "startOffset": 133, "endOffset": 141}, {"referenceID": 17, "context": "Feder and Vardi [18] have studied arc consistency, under an equivalent formulation in terms of Datalog Programs, for constraint languages.", "startOffset": 16, "endOffset": 20}, {"referenceID": 14, "context": "The connection of the results in Feder and Vardi with arc consistency was made explicit in Dalmau and Pearson [15].", "startOffset": 110, "endOffset": 114}, {"referenceID": 11, "context": "Look-ahead arc consistency was introduced and studied by Chen and Dalmau [12], and the theorem that follows is due to them.", "startOffset": 73, "endOffset": 77}, {"referenceID": 16, "context": "This algorithm can be viewed as a generalization of an algorithm for SAT studied by Del Val [17].", "startOffset": 92, "endOffset": 96}, {"referenceID": 7, "context": "Peek arc consistency was introduced and studied by Bodirsky and Chen [8]; the notions and results that follow come from them.", "startOffset": 69, "endOffset": 72}, {"referenceID": 15, "context": "Singleton arc consistency was introduced by Debruyne and Bessiere [16].", "startOffset": 66, "endOffset": 70}, {"referenceID": 17, "context": "We also show that the structures solvable by SAC (and hence, those solvable by any of the studied algorithms) all fall into the class of structures having bounded width; bounded width is a well-studied condition admitting multiple characterizations [18, 22, 6].", "startOffset": 249, "endOffset": 260}, {"referenceID": 21, "context": "We also show that the structures solvable by SAC (and hence, those solvable by any of the studied algorithms) all fall into the class of structures having bounded width; bounded width is a well-studied condition admitting multiple characterizations [18, 22, 6].", "startOffset": 249, "endOffset": 260}, {"referenceID": 5, "context": "We also show that the structures solvable by SAC (and hence, those solvable by any of the studied algorithms) all fall into the class of structures having bounded width; bounded width is a well-studied condition admitting multiple characterizations [18, 22, 6].", "startOffset": 249, "endOffset": 260}, {"referenceID": 5, "context": "The proof is obtained by using a strengthened version of the Prague strategy defined by Barto and Kozik [6].", "startOffset": 104, "endOffset": 107}, {"referenceID": 19, "context": "Since R is necessarily 2-decomposable [20], h is a homomorphism.", "startOffset": 38, "endOffset": 42}, {"referenceID": 9, "context": "Our treatment of 2-semilattices is inspired and influenced by the study conducted by Bulatov [10], who proved that they are polynomial-time tractable.", "startOffset": 93, "endOffset": 97}, {"referenceID": 22, "context": ", bk \u2208 s(a)}; the containment \u2287 is clear by definition of subalgebra, and the containment \u2286 follows from the fact that the right hand side is a subalgebra, which in turn follows from the fact that the set of polymorphisms of B forms a clone and is closed under composition [23].", "startOffset": 273, "endOffset": 277}, {"referenceID": 4, "context": "Atserias and Weyer [5] gave a uniform treatment of AC, PAC, SAC, and general consistency.", "startOffset": 19, "endOffset": 22}, {"referenceID": 5, "context": "Their results combined with the fact that general consistency/bounded width is decidable [6] implies that it can be decided whether or not a given constraint language is solvable by any of the other methods.", "startOffset": 89, "endOffset": 92}, {"referenceID": 5, "context": "Barto and Kozik [6] have recently characterized all languages solvable by bounded width.", "startOffset": 16, "endOffset": 19}], "year": 2011, "abstractText": "A natural and established way to restrict the constraint satisfaction problem is to fix the relations that can be used to pose constraints; such a family of relations is called a constraint language. In this article, we study arc consistency, a heavily investigated inference method, and three extensions thereof from the perspective of constraint languages. We conduct a comparison of the studied methods on the basis of which constraint languages they solve, and we present new polynomial-time tractability results for singleton arc consistency, the most powerful method studied.", "creator": "LaTeX with hyperref package"}}}