{"id": "1104.5150", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Apr-2011", "title": "File Transfer Application For Sharing Femto Access", "abstract": "In wireless access network optimization, today's main challenges reside in traffic offload and in the improvement of both capacity and coverage networks. The operators are interested in solving their localized coverage and capacity problems in areas where the macro network signal is not able to serve the demand for mobile data. Thus, the major issue for operators is to find the best solution at reasonable expanses. The femto cell seems to be the answer to this problematic. In this work (This work is supported by the COMET project AWARE.", "histories": [["v1", "Wed, 27 Apr 2011 14:04:27 GMT  (213kb,D)", "http://arxiv.org/abs/1104.5150v1", "15 pages, 9 figures; extended version from Conference ISCIS 2011"]], "COMMENTS": "15 pages, 9 figures; extended version from Conference ISCIS 2011", "reviews": [], "SUBJECTS": "cs.NI cs.LG", "authors": ["mariem krichen", "johanne cohen", "dominique barth"], "accepted": false, "id": "1104.5150"}, "pdf": {"name": "1104.5150.pdf", "metadata": {"source": "CRF", "title": "File Transfer Application For Sharing Femto Access", "authors": ["Mariem Krichen", "Johanne Cohen"], "emails": ["mariem.krichenjohanne.cohendominique.barth@prism.uvsq.fr"], "sections": [{"heading": null, "text": "We assume that SRCs are static and have a similar and regular connection behavior. We also note that the SRC and each SRC each have software embedded in the SRCs (User Equipment, UE) software, and that after each connection requested by an SRC, their software learns the strategy that increases its profit, knowing that there is no information about the other SRCs strategies. The following article presents a distributed learning algorithm with incomplete information running in the SRCs software. We then answer the following questions for a game with SRCs and an SPC: How many connections are needed for each SRC to learn the strategy that maximizes its profit? Does this algorithm converge to a stable state? If so, this represents a Nash equilibrium and is there any way to optimize the learning process duration triggered by SRCs software femo-splitting algorithm?"}, {"heading": "1 Introduction", "text": "In fact, most of them are able to survive on their own if they do not play by the rules."}, {"heading": "2 Model for sharing femto access", "text": "We assume that there is a Token Based Accounting Protocol to exchange services between SRCs and SPCs for tokens [3]. On the one hand, however, the frequency sharing paradigm should guarantee a certain access speed and data transmission speed. On the other hand, the model should suggest a type of connection (which would be more expansive than others) that guarantees QoS to SRCs: connections belonging to this type are never used by the SPC. Our work considers a unique SPC designated by X and multiple SRCs. We assume that the resources of the SPC reserved for sharing is a set of bandwidth designated by BS (X). Then we consider that each SRRC connection requests X. In fact, the bandwidth BS (X) of SPC is divided into two parts (BS = SG)."}, {"heading": "2.1 Actors Description", "text": "In the following section, we will describe the actors involved in the model we have just presented."}, {"heading": "2.1.1 SPC Actor", "text": "An SPC is a customer of the MO. SPC proposes to share part of its bandwidth with KRCs at a price per bandwidth unit, depending on the type of connection (green, yellow).The bandwidth divided into green and yellow parts is determined by its sensitivity to gain, which is indicated by \u00b5 [0, 1], and its sensitivity to its own compound QoS, which is indicated by \u044b [0, 1].These two parameters are dual: \u00b5 + price = 1. The gain sensitivity parameter indicates its sensitivity to the price of the split compound, while the QoS sensitivity parameter indicates the tolerance of the SPC to preventive risks. The more sensitive an SPC is to profit, the greater its green subbandwidth is due to its expansive selling price. The more sensitive an SPC is to QoS, the greater its yellow part bandwidth is because it does not want to be anticipated by CRs."}, {"heading": "2.1.2 SRC Actor", "text": "The SRC wants to use the resources of the SRC. The QoS sensitivity parameter indicates the degree of tolerance of the SRC to the QoS degradation, while the price sensitivity parameter indicates the degree of tolerance of the SRC to the cost of the connection. These two parameters are dual: \u03b1 + \u03b2 = 1. The more a SRC is sensitive to QoS, the lower its degree of tolerance to the QoS degradation will be. The more a SRC is sensitive to the price, the less it is able to pay for the connection. If \u03b1 > 1 / 2 the SRC is considered sensitive to QoS. Otherwise, the SRC is sensitive to the price."}, {"heading": "2.1.3 Interaction between the SPC actor and SRCs actors", "text": "In the general context, the SRCs will require a certain bandwidth from the SPC depending on their profiles, and the SPC will process the SRCs \"requests for a fixed bandwidth split. 1. in the case of the SRCs, the utility depends on their requests, the other SRCs requests, and the SPC's decision (allocated bandwidth and type of connection) for the bandwidth split of a fixed SPC. Therefore, the SRC utility mainly depends on its competition with other SRCs for some bandwidth from the same SPC.2. For the SPC, the utility depends on its bandwidth split for fixed SRCs requests. Since we only consider one SPC, no competition is necessary for the SPC to increase its usage.In our work, we will only focus on competition between the SRCs when the bandwidth distribution of the SPC is set."}, {"heading": "3 Game presentation", "text": "Consequently, since only competition between SRCs is considered, the problem of sharing femto access could be modeled as a game in which the SRCs are the players. We also consider that the bandwidth distribution of the SRCs is fixed. This could be motivated by the fact that learning methods are only reliable if the environment is invariant. We do not take into account the mobility of the SRCs. However, we assume that SRCs have a regular and similar connection behavior: each SRC requests the connection of the SPC almost simultaneously with almost invariant needs in relation to QoS. This means that the requirement of femto access of the SRCs is almost becoming routine for SRCs. This could be considered a repetitive game. In addition to requested connections, each SRC will learn, thanks to an algorithm running in a software embedded in its user equipment, the best strategy that must be played to maximize the game's profit is limited to sharing the SRCs in this article."}, {"heading": "3.1 Game restricted to SRCs", "text": "As mentioned in the previous section, the game limited to KRCs assumes that the bandwidth distribution of the SPC is fixed. Let BS be the total bandwidth that the SPC is willing to share, and let LS be the SPA's share of BS."}, {"heading": "3.1.1 SRCs QoS needs", "text": "The answer to this question depends on the following parameters: the type of application (real-time, elastic), the QoS parameter that the applications need (delay, time transfer file,.), the type of connection (green or yellow) and the profile of the SRC (QoS-sensitive SRC or price-sensitive SRC). Our work takes into account the File Transfer Application. QoS is defined as the transfer file that we call t. QoS satisfaction refers to t. The time transfer file should be between T1 and T2 and is defined as follows: \u2022 Case t = T1: BWMax corresponds to the bandwidth needed to download a file in t = T1."}, {"heading": "3.1.2 SPC\u2019s bandwidth allocation", "text": "Each SRC sends a request to the SRCi. Upon receipt, the SRCi decides how its bandwidth is allocated to the SRCs. The request of each SRCi is represented by an element in SSRCi. According to a series of SRCs, the SRCi responds to each SRCi represented by a triple (Gi, Yi, bwi) definition: \u2022 bwi represents the range of bandwidth given by the SRCi to the SRCi. \u2022 Gi = 1 \u2264 i \u2264 N, SPC means that the SRCi has received a green (or yellow) connection from the SPC. Note that the case where Gi = 1 and Yi = 1 is not possible. \u2022 If Gi = 0 and if Yi = 0, then SRCi."}, {"heading": "3.1.3 SRC Game Definition", "text": "Game theory models the interactions between players competing for a common resource. In our system, the formulation of this uncooperative game G = < N, S, Uk > follows as follows: \u2022 The number of players is N. Each player is an SRCi. There are N SRCs. \u2022 The space of pure strategies S (formed by the Cartesian product of each set of pure strategies S = SSRC1 \u00b7... \u00b7 SSRCNNote that for each SRCi the amount of integrators is defined. \u2022 The space of pure strategies si (formed by the Cartesian product of each set of pure strategies S = SSRC1 \u00b7 SSRCi \u00b7... \u00b7 SSRCNNote that for each SRCi is defined the set of integrators. \u2022 A series of utility functions {U1, U2,..., UN} that quantifies the preferences of the players about the possible outcomes of the game."}, {"heading": "3.2 SRC game equilibrium", "text": "In the following, we will examine the existence of a pure Nash equilibrium in the Sharing Femto Access game using the properties of potential games. The definition of the potential game could be found in [8].Theorem 1. Each instance of the game limited to SRCs permits at least one pure Nash equilibrium. The proof for this theorem is in [4].Sketch of the proof: The main idea of this proof is to show that the best reaction dynamics in this game converges to a pure Nash equilibrium."}, {"heading": "4 Learning the Game restricted to SRCs\u2019 Nash equilibrium", "text": "In Section 3, we proved that the game limited to KRCs allows at least a pure Nash equilibrium. Now, we want to know if a distributed algorithm (each player knows only his local information) could converge to a pure Nash equilibrium."}, {"heading": "4.1 Algorithm Principle", "text": "In the following section, we assume that we are in a distributed context, so each SRC player, based only on their local information, will learn the strategy that maximizes their profit. For a fixed SRC, we will apply steps 2 to 5 of the algorithm depicted in Figure 42. Each SRC will send a request using a specific distributed algorithm originating from Adist.3. The SPC will define its decision sol ().4. The SPC will send its decision to all SRCs.5. Each SRC will calculate its usability according to SRC (final).We will repeat all these steps until the Adist algorithm converges. We will denote its learning ability according to the SRC strategy profile for which Adist converts. Now, we will present the Adist algorithm. [3] It has been proven that the game under consideration has at least a pure equilibrium value and if there is a sufficiently small value of the learning speed."}, {"heading": "4.3 Simulations", "text": "In our simulations, we will consider N SRCs: Each SRCi is identified by \u03b1i (the QoS sensitivity parameter of SRCi) and prompts the connection of the SPC, which is identified by \u00b5, to download a file. We will focus only on the cases of the same category of SRCs and more precisely QoS-sensitive SRCs. In fact, this case is the most difficult to achieve stability because the requirements of the SRCs are contradictory. In the other possible cases, we will consider T2 = 300sec, \u00b5 = 1, \u043c = 0.1, \u03b5 = 0.1, \u0432 = 0.1, and N QoS-sensitive SRCs. Since femto access could only support 8 communication strategies, we will conduct simulations where the results of the SRCi simulation are extremely high."}, {"heading": "4.3.1 Scenario 1 with 5 SRCs", "text": "3An extremely QoS-sensitive SRC is an SRC with \u03b1 = 1For this scenario, as a first step, we will analytically calculate the SRC balances using the same steps as shown in Figure 4, except that the SRC strategy profile is not created using AlgorithmAdist: We will analyze all possible SRC strategy profiles and therefore fill the SRCs payout matrix with tools that correspond to each SRC strategy profile. Figure 5 highlights 10 pure SRC balances that are circled in red. These Nash balances are analytically detected by the SRCs payout matrix, as SRCs payout matrix cannot rise by a one-sided deviation. Now, we will execute the Adist algorithm. First, we will check whether there is convergence, and then we will check whether the point of the SRC-CRC convergence, if any, is calculated to NRash equilibrium at all."}, {"heading": "4.3.2 Scenario 2 with 4 SRCs", "text": "In the following, we will check whether the fact of having more than two possible strategies per SRC could produce the results =. To this end, we will consider 4 SRCs defined as follows: \u03b11 = 0.9, \u03b12 = 0.7, \u03b13 = 1 and \u03b14 = 0.9,6 pure Nash balances are found analytically in the SRCs utility matrix and are the following: \u043a = {1, 1, 0.9, 1, 0.9); (0.9, 0.9, 1, 1, 1, 1, 1); (0.9, 1, 1, 0.9, 1); (1, 0.9, 0.9, 1, 1, 0.9); (1, 0.9, 1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)."}, {"heading": "4.4 Simulation results", "text": "Simulation results have shown that the game, which is limited to KRCs and uses a distributed learning algorithm, converges to a pure Nash equilibrium. We have verified that this result is available for a number of KRCs that vary from 2 to 8 for KRCs with exactly 2 strategies or more than 2 strategies. The distributed algorithm converges in a finite number of iterations. Two solutions have been proposed to reduce the number of connections required for this convergence."}, {"heading": "5 Conclusion and perspectives", "text": "In this article, we will examine the problem of sharing femto access using the example of a file transfer application. Only the competition between SRCs is modeled as a game taking into account the bandwidth distribution of a fixed SPC. Our simulations focus on examples where SRC's objectives are at odds with each other: SRCs belonging to the same category of QoS-sensitive SRCs. Simulations have proven the efficiency of the distributed learning algorithm: even if each SRC player only has local information, the algorithm always converges to a pure Nash equilibrium. As a perspective, we will consider the sharing femto access game with multiple SRCs and multiple SPCs. Therefore, the sharing femto access problem will be divided into two levels: a first level represents a game limited to SRCs, and a second level a game limited to SPCs. We will examine the properties of the second level to see if they match with the SRCs."}], "references": [{"title": "Congestion games with resource reuse and applications in spectrum", "author": ["Sahand Haji Ali Ahmad", "Mingyan Liu", "Yunnan Wu"], "venue": "sharing. CoRR,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Microeconomic Models for Dynamic Spectrum Management in Cognitive Radio Networks, chapter 14, pages 391\u2013423", "author": ["Niyaton Dusit", "Ekram Hossain"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2007}, {"title": "Tokenbased accounting and distributed pricing to introduce market mechanisms in a peer-to-peer file sharing scenario", "author": ["David Hausheer", "Nicolas C. Liebau", "Andreas Mauthe", "Ralf Steinmetz", "Burkhard Stiller"], "venue": "In Proceedings of the 3rd International Conference on Peer-to-Peer Computing,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "File transfer application for sharing femto access : Game properties", "author": ["Mariem Krichen", "Johanne Cohen", "Dominique Barth"], "venue": "Technical report, Universite\u0301 de Versailles,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Equilibrium points in n-person games", "author": ["John F. Nash"], "venue": "Proceedings of the National Academy of Sciences of the United States of America,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1950}, {"title": "Algorithmic Game Theory", "author": ["Nissan Nisan", "Tim Roughgarden", "\u00c9va Tardos", "Vijay V. Vazirani"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Decentralized learning of Nash equilibria in multiperson stochastic games with incomplete information", "author": ["M.A.L. Thathachar P.S. Sastry", "V.V. Phansalkar"], "venue": "IEEE transactions on system, man, and cybernetics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1994}, {"title": "A class of games possessing pure-strategy Nash equilibria", "author": ["R.W. Rosenthal"], "venue": "International Journal of Game Theory,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1973}, {"title": "A shapley value representation of potential games", "author": ["Takashi Ui"], "venue": "Games and Economic Behavior,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2000}, {"title": "Real-time secondary spectrum sharing with qos provisioning", "author": ["Yiping Xing", "Chetan N .Mathur", "M. A Haleem", "R. Chandramouli", "K. P Subbalakshmi"], "venue": "In Consumer Communications and Networking Conference (CCNC),", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}], "referenceMentions": [{"referenceID": 1, "context": "Related works The problem of sharing bandwidth and pricing has been already addressed by Dusit Niyato et al [2], then modeled as a game.", "startOffset": 108, "endOffset": 111}, {"referenceID": 7, "context": "The potential games introduced by Rosenthal [8] are classical games having at least one pure Nash equilibrium.", "startOffset": 44, "endOffset": 47}, {"referenceID": 5, "context": "This property has been used for congestion game in general (see [6] for a survey), with Resource Reuse in a wireless context (see [1]) and for a real-time spectrum sharing problem with QoS provisioning [10].", "startOffset": 64, "endOffset": 67}, {"referenceID": 0, "context": "This property has been used for congestion game in general (see [6] for a survey), with Resource Reuse in a wireless context (see [1]) and for a real-time spectrum sharing problem with QoS provisioning [10].", "startOffset": 130, "endOffset": 133}, {"referenceID": 9, "context": "This property has been used for congestion game in general (see [6] for a survey), with Resource Reuse in a wireless context (see [1]) and for a real-time spectrum sharing problem with QoS provisioning [10].", "startOffset": 202, "endOffset": 206}, {"referenceID": 6, "context": "It is proved that all stable stationary points of the algorithm are Nash equilibrium for the game [7].", "startOffset": 98, "endOffset": 101}, {"referenceID": 2, "context": "We assume that there exists a Token Based Accounting Protocol to exchange services between SRCs and SPCs against tokens [3].", "startOffset": 120, "endOffset": 123}, {"referenceID": 2, "context": "We assume that there exists a Token Based Accounting Protocol to exchange services between SRCs and SPCs against tokens (representing money) [3].", "startOffset": 141, "endOffset": 144}, {"referenceID": 0, "context": "The bandwidth split into Green and Yellow parts is determined following its sensitivity to Gain denoted by \u03bc \u2208 [0, 1] and its sensitivity to its own connection QoS denoted by \u0393 \u2208 [0, 1].", "startOffset": 111, "endOffset": 117}, {"referenceID": 0, "context": "The bandwidth split into Green and Yellow parts is determined following its sensitivity to Gain denoted by \u03bc \u2208 [0, 1] and its sensitivity to its own connection QoS denoted by \u0393 \u2208 [0, 1].", "startOffset": 179, "endOffset": 185}, {"referenceID": 4, "context": "Recall that a pure Nash equilibrium of a game is a situation where, for each player, there is no unilateral strategy deviation that increases its utility [5].", "startOffset": 154, "endOffset": 157}, {"referenceID": 0, "context": "Note that the parameters caracterizing a SRC\u2019s profile are real in [0, 1].", "startOffset": 67, "endOffset": 73}, {"referenceID": 0, "context": "Rev Thi = \u03b1i \u2212 \u03ba where \u03ba \u2208 [0, 1] is the allowed variation from the QoS degradation tolerance fixed according to the SRC\u2019s profile (more specifically \u03b1i).", "startOffset": 27, "endOffset": 33}, {"referenceID": 0, "context": "\u2013 Revi(c) \u2208 [0, 1] represents the SRC\u2019s QoS satisfaction from the connection c provided by the SPC and is expressed as follows:", "startOffset": 12, "endOffset": 18}, {"referenceID": 0, "context": "Revi(c) = Rev(bwi)Gi\u03b1i +Rev(bwi)Yi(1\u2212 \u03b4)\u03b1i where Rev(bwi) \u2208 [0, 1] \u2013 Costi(c) \u2208 [0, 1] represents the cost of the connection c provided by the SPC and is expressed as follows:", "startOffset": 60, "endOffset": 66}, {"referenceID": 0, "context": "Revi(c) = Rev(bwi)Gi\u03b1i +Rev(bwi)Yi(1\u2212 \u03b4)\u03b1i where Rev(bwi) \u2208 [0, 1] \u2013 Costi(c) \u2208 [0, 1] represents the cost of the connection c provided by the SPC and is expressed as follows:", "startOffset": 80, "endOffset": 86}, {"referenceID": 0, "context": "Costi(c) = Cost(bwi)Gi\u03b2i + Cost(bwi)Yi(1\u2212 \u03b4)\u03b2i where Cost(bwi) \u2208 [0, 1] We normalize the utility of SRCi in order to have Ui(\u03a0) \u2208 [0, 1].", "startOffset": 65, "endOffset": 71}, {"referenceID": 0, "context": "Costi(c) = Cost(bwi)Gi\u03b2i + Cost(bwi)Yi(1\u2212 \u03b4)\u03b2i where Cost(bwi) \u2208 [0, 1] We normalize the utility of SRCi in order to have Ui(\u03a0) \u2208 [0, 1].", "startOffset": 130, "endOffset": 136}, {"referenceID": 4, "context": "2 SRC game equilibrium Since each SRCi has a finite set of strategies, this game has a mixed Nash equilibrium [5].", "startOffset": 110, "endOffset": 113}, {"referenceID": 7, "context": "The definition of potential game could be found in [8].", "startOffset": 51, "endOffset": 54}, {"referenceID": 3, "context": "The proof of this theorem is detailed in [4].", "startOffset": 41, "endOffset": 44}, {"referenceID": 2, "context": "In [3], it has been proved that if the considered game has at least one pure Nash equilibrium and if there exists a sufficiently small value of the learning speed parameter for which the distributed learning algorithm converges, then the point of convergence of this algorithm is a pure Nash equilibrium.", "startOffset": 3, "endOffset": 6}, {"referenceID": 0, "context": "Each SRCi will thus compute its new probability vector s i using only a set of local information (s t i, margin t i, gain t i) where gain t i represents the gain from the SPC\u2019s allocation decision and margini is the pure strategy in SSRCi \u2022 At each step t, each SRC chooses randomly one strategy (margini) and increases its probability of choosing this strategy(si) according to its gain (gain t i) and a learning parameter b \u2208 [0, 1] which modulates the learning speed of the different SRCs players.", "startOffset": 428, "endOffset": 434}, {"referenceID": 0, "context": "This means that for a connection of duration D, the SRC\u2019s software will choose a new strategy following the updated strategy probability vector each d=q*D slot time (q \u2208 [0, 1]).", "startOffset": 170, "endOffset": 176}], "year": 2011, "abstractText": "In wireless access network optimization, today\u2019s main challenges reside in traffic offload and in the improvement of both capacity and coverage networks. The operators are interested in solving their localized coverage and capacity problems in areas where the macro network signal is not able to serve the demand for mobile data. Thus, the major issue for operators is to find the best solution at reasonable expanses. The femto cell seems to be the answer to this problematic. In this work1, we focus on the problem of sharing femto access between a same mobile operator\u2019s customers. This problem can be modeled as a game where service requesters customers (SRCs) and service providers customers (SPCs) are the players. This work addresses the sharing femto access problem considering only one SPC using game theory tools. We consider that SRCs are static and have some similar and regular connection behavior. We also note that the SPC and each SRC have a software embedded respectively on its femto access, user equipment (UE). After each connection requested by a SRC, its software will learn the strategy increasing its gain knowing that no information about the other SRCs strategies is given. The following article presents a distributed learning algorithm with incomplete information running in SRCs software. We will then answer the following questions for a game with N SRCs and one SPC: how many connections are necessary for each SRC in order to learn the strategy maximizing its gain? Does this algorithm converge to a stable state? If yes, does this state a Nash Equilibrium and is there any way to optimize the learning process duration time triggered by SRCs software? Keywords-component: game theory, sharing femto access, Nash Equilibrium, distributed learning algorithm, stable state.", "creator": "LaTeX with hyperref package"}}}