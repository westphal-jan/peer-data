{"id": "1105.5452", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2011", "title": "Unifying Class-Based Representation Formalisms", "abstract": "The notion of class is ubiquitous in computer science and is central in many formalisms for the representation of structured knowledge used both in knowledge representation and in databases. In this paper we study the basic issues underlying such representation formalisms and single out both their common characteristics and their distinguishing features. Such investigation leads us to propose a unifying framework in which we are able to capture the fundamental aspects of several representation languages used in different contexts. The proposed formalism is expressed in the style of description logics, which have been introduced in knowledge representation as a means to provide a semantically well-founded basis for the structural aspects of knowledge representation systems. The description logic considered in this paper is a subset of first order logic with nice computational characteristics. It is quite expressive and features a novel combination of constructs that has not been studied before. The distinguishing constructs are number restrictions, which generalize existence and functional dependencies, inverse roles, which allow one to refer to the inverse of a relationship, and possibly cyclic assertions, which are necessary for capturing real world domains. We are able to show that it is precisely such combination of constructs that makes our logic powerful enough to model the essential set of features for defining class structures that are common to frame systems, object-oriented database languages, and semantic data models. As a consequence of the established correspondences, several significant extensions of each of the above formalisms become available. The high expressiveness of the logic we propose and the need for capturing the reasoning in different contexts forces us to distinguish between unrestricted and finite model reasoning. A notable feature of our proposal is that reasoning in both cases is decidable. We argue that, by virtue of the high expressive power and of the associated reasoning capabilities on both unrestricted and finite models, our logic provides a common core for class-based representation formalisms.", "histories": [["v1", "Fri, 27 May 2011 01:49:59 GMT  (175kb)", "http://arxiv.org/abs/1105.5452v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["d calvanese", "m lenzerini", "d nardi"], "accepted": false, "id": "1105.5452"}, "pdf": {"name": "1105.5452.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Diego Calvanese", "alvanese dis.uniroma1.it", "Maurizio Lenzerini", "lenzerini dis.uniroma1.it", "Daniele Nardi"], "emails": [], "sections": [{"heading": null, "text": "It's not just a matter of time until the world is in order, but also of time until the world is in order again. It's a matter of time until the world will be in order. It's a matter of time until the world will be in order. It's a matter of time until the world will be in order. It's a matter of time until the world will be in order. It's a matter of time until the world will be in order. It's a matter of time until the world will be in order. It's a matter of time until the world is in order. It's a matter of time until the world is in order."}, {"heading": "1. Introdu tion", "text": "In many areas of the omputer Foundation and the Morgan Kaufmann Foundation, we have formalisms for the representation of obje ts andlasses (Mots hnig-Pitrik & Mylopoulous, 1992).An obje t denotes an element of interest, and a lass denotes a set of objective terms that are significant in a number of applications.In addition, we use the term \"let-based formalisms\" to express different types of relationships and onstraints (e.g., sub lass onstraints) that are significant in a number of applications.In addition, let-based formalisms aim at exploiting the lassstru ture in order of providing different information.There is at least one obje t whether a sub-let is a sub-let of another, and more generally, whether a given onstraint1999 AI Foundation and Morgan Kaufmann Publishers."}, {"heading": "2. A Unifying Class-Based Representation Language", "text": "In this se we imagine ourselves as we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave we behave in the way we behave in the way we behave in the way we behave in the way we behave and we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave in the way we behave and we behave in the way and we behave in the way we behave in the way we behave in the way we behave and we behave in the way we behave in the way and we behave and we behave in the way we behave in the way, how we behave in the way and we behave in the way and we behave and we behave"}, {"heading": "3. Frame Based Systems", "text": "Frame languages are based on the idea of expressing knowledge through frames, which are structures that represent the elements of a frame de nition. In the 1970s, a large number of frame systems were developed, with the aforementioned objectives and characteristics. Frame systems are loosely related to the kl-one family of frame systems (Woods & S hmolze, 1992). However, here we would like to look at frame systems from a more general perspective, such as that used by Karp (1992), Karp, Myers and Gruber (1995), and establish the aluni knowledge base responses in this text. We point out that we are drawing attention to those frame systems that are related to the Taxonomi structure."}, {"heading": "3.1 Syntax of Frame Based Systems", "text": "To make the corresponding e pre ise, we need x syntax and semanti s for the frame systems we onsider. Unfortunately, there is no epted standard and we have pants to use here basi ally the notation of fices and throat (1985), whi h is also used in the KEE 2 system.De frame knowledge base, referred to by F, is formed by a set of frame and slot names, and is constituted by a series of frame de nitions of the following form: Frame: F in KB F E; 2. KEE is a trademark of Intelli orp. Note that a KEE user does not dire spe ify their knowledge basin this notation, but is allowed to de ne frame intera-e. where E is a frame expression of the intelli orp."}, {"heading": "3.2 Semanti s of Frame Based Systems", "text": "There are a number of frames that we base on in terms of their interpretation. (D) A frame expression E is interpreted as a predi ate logi formula E (x), which has a free variable, and onsists of onjun tion of senten it, obtained from the super lass spe i ation and ea h slot spe i ation. In the debate about the super-las formula F1:::; Fhwe have: F1 (x) ^ Fh (x) and for a slot i ationMemberSlot: SValueClass: H Cardinality.Min: m Cardinality.Max: nwe have8y. (S; y) H: (S)) ^."}, {"heading": "4. Semanti Data Models", "text": "The semantic data models were primarily used as formalities for database hema design. They provide a means of modeling databases in a more advanced manner than traditional data models supported by database management systems, and are therefore increasingly important because they are used in most ER database design methods and Computer Aided Software Engineering Tools.The most common semantic data model is the entity relationship (ER) model introduced by Chen (1976), which is now a standard widely used in the design phase of summer-related applications. In ommonic ER notation, the models of entity-relationship (ER) systems are presented as boxes, while relationships between entities are presented as diamonds. Arrows between entities, as ISA relationships, we represent in accounting systems that we represent in accounting accessory claims, the relationships between entities we delegate and the entities we delegate to."}, {"heading": "4.1 Syntax of the Entity-Relationship Model", "text": "In fact, it is as if it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way and a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way and a way in which it is about a way in which it is about"}, {"heading": "4.2 Semanti s of the Entity-Relationship Model", "text": "S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S; S"}, {"heading": "5. Obje t-Oriented Data Models", "text": "Obje t-oriented data models were proposed with the aim of developing database formalisms that could be integrated with obje t-oriented programming systems (Kim, 1990). They are the substance of an active area of the resear h in the database field and are based on the following characteristics: They are based on the notion of obje t-oriented data models at the extensive level (as opposed to traditional data models that are value-oriented) and on the notion of glass at the intensive level. The structure of the glasses is mirrored by typing and inheritance. As in the previous study, we present the ommonic basis of obje t-oriented data models with other laser-based formalisms by introducing a language for obje t-oriented hematas and showing that these hematas orre are presented as uni-knowledge bases."}, {"heading": "5.1 Syntax of an Obje t-Oriented Model", "text": "Below we find a simple obje t-oriented language in the style of the most popular models with omplex obje ts and obje t identity. Although we do not refer to a spe i formalism, our model is inspired by the models Abiteboul and Kanellakis (1989), Hull and King (1987). De nition 5.1 An obje t-oriented s hema is a tuple S = (CS; AS; DS), where: CSis is a nite series of glass names denoted by the letter C.ASis is is a nite series of attribute names denoted by the letter A.DSis. It is a nite series of lasde larations of the form class C is-a C1;:; Cktype-is T; in which h T denotes a type expression that has a record of the following syntax: T! C jUnion T1;:; TkEnd jRe jord A1; T1; Ak: Tlass."}, {"heading": "5.2 Semanti s of an Obje t-Oriented Model", "text": "The meaning of a YES YES YES; YES YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES; YES"}, {"heading": "6. Related Work", "text": "In this study, we put the results to the question of how to react between let-based formalisms and ways of thinking in aluni and let-based formalisms of representation."}, {"heading": "6.1 Relationships among Class-Based Formalisms", "text": "Bl asius, Hedst u k, and Rollinger (1990), Lenzerini, Nardi, and Simi (1991) arry out an omparative analysis of lass-based languages and try to provide a uni ed view. It emerges from the analysis that several dimensions arise in the determination of an ommonial framework for the formalisms developed in the areas concerned. Some of the present work deals with this problem. Thus, for example, an analysis of the relationships between frame-based languages and types in programming languages was carried out by Borgida (1992), while Bergamas hi and Sartori e (1992), Piza, S hewe, and S hmidt (1992) frame-based languages to enri h the dedu tive apabilities of semanti and obje t-oriented data models.Artale, Cesarini, and Soda (1996) study reasoning in obje t-oriented data models by an enri h the dedu tive apabilities of semanti and je-oriented data models.Artale, Cesarini, and Soda (1996) study reasoning in obje t-oriented data models by an enri h the dedu tive apabilities of semanti and je-oriented data models."}, {"heading": "6.2.1 Unrestri ted Model Reasoning", "text": "We recall that the reasoning on a knowledge basis with Respect t on unrestrated models boils down to determining either on ept onsisten y, i.e., whether the knowledge base permits a (possibly in nite) model in which a given on ept has an empty extension, or on ept subsumption, i.e., determines whether the extension of one on ept is contained in the extension of another on ept in each model (alluding to the in nite one) of the knowledge base. The method of reason in alunrestri to unrestri ted models uses a well-known corresponding e between DLs and Propositional Dynami Logi s (PDLs & Tiuryn, 1990), whi h is a reason of logi s spe i ally designed to reason about programs. Theorists e, whi h has been shown rst by S hild (1991)."}, {"heading": "6.2.2 Finite Model Reasoning", "text": "It is not only a question of time, but also of the time, in which we must grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to grapple with the question, how we are to gr"}, {"heading": "7. Con lusions", "text": "We have pursued this goal by looking at the different types of formalism-based systems used in databases, and reformulating them. (The resulting types of formalism-based systems are based on a combination of information used in knowledge representation, and semanti and obje t-oriented data models used in databases, and rephrasing them in the context of ription logi s. \"The resulting types of formalism-based systems used in a combination of onstru ts that had not been onsidered before, though all the onstru ts had previously been onsidered, have separated. (The vast majority of the types described in the papers is the demonstration that let-based formalisms are considered an essential part of let-based representation formalisms to a pre ise hara terization by means of a powerful fragment of rst-order logi, whi h)."}], "references": [], "referenceMentions": [], "year": 2013, "abstractText": "The notion of lass is ubiquitous in omputer s ien e and is entral in many formalisms for the representation of stru tured knowledge used both in knowledge representation and in databases. In this paper we study the basi issues underlying su h representation formalisms and single out both their ommon hara teristi s and their distinguishing features. Su h investigation leads us to propose a unifying framework in whi h we are able to apture the fundamental aspe ts of several representation languages used in di erent ontexts. The proposed formalism is expressed in the style of des ription logi s, whi h have been introdu ed in knowledge representation as a means to provide a semanti ally well-founded basis for the stru tural aspe ts of knowledge representation systems. The des ription logi onsidered in this paper is a subset of rst order logi with ni e omputational hara teristi s. It is quite expressive and features a novel ombination of onstru ts that has not been studied before. The distinguishing onstru ts are number restri tions, whi h generalize existen e and fun tional dependen ies, inverse roles, whi h allow one to refer to the inverse of a relationship, and possibly y li assertions, whi h are ne essary for apturing real world domains. We are able to show that it is pre isely su h ombination of onstru ts that makes our logi powerful enough to model the essential set of features for de ning lass stru tures that are ommon to frame systems, obje t-oriented database languages, and semanti data models. As a onsequen e of the established orresponden es, several signi ant extensions of ea h of the above formalisms be ome available. The high expressiveness of the logi we propose and the need for apturing the reasoning in di erent ontexts for es us to distinguish between unrestri ted and nite model reasoning. A notable feature of our proposal is that reasoning in both ases is de idable. We argue that, by virtue of the high expressive power and of the asso iated reasoning apabilities on both unrestri ted and nite models, our logi provides a ommon ore for lass-based representation formalisms.", "creator": "dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)"}}}