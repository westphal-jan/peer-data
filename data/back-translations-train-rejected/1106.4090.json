{"id": "1106.4090", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Jun-2011", "title": "Discovery of Invariants through Automated Theory Formation", "abstract": "Refinement is a powerful mechanism for mastering the complexities that arise when formally modelling systems. Refinement also brings with it additional proof obligations -- requiring a developer to discover properties relating to their design decisions. With the goal of reducing this burden, we have investigated how a general purpose theory formation tool, HR, can be used to automate the discovery of such properties within the context of Event-B. Here we develop a heuristic approach to the automatic discovery of invariants and report upon a series of experiments that we undertook in order to evaluate our approach. The set of heuristics developed provides systematic guidance in tailoring HR for a given Event-B development. These heuristics are based upon proof-failure analysis, and have given rise to some promising results.", "histories": [["v1", "Tue, 21 Jun 2011 05:24:01 GMT  (136kb,D)", "http://arxiv.org/abs/1106.4090v1", "In Proceedings Refine 2011,arXiv:1106.3488"]], "COMMENTS": "In Proceedings Refine 2011,arXiv:1106.3488", "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.SE", "authors": ["maria teresa llano", "rew ireland", "alison pease"], "accepted": false, "id": "1106.4090"}, "pdf": {"name": "1106.4090.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Maria Teresa Llano", "Andrew Ireland", "Alison Pease"], "emails": [], "sections": [{"heading": null, "text": "J. Derrick, E.A. Boiten, S. Reeves (ed.): Refinement Workshop 2011. EPTCS 55, 2011, pp. 1-19, doi: 10.4204 / EPTCS.55.1c \u00a9 M.T. Llano, A. Ireland & A. Pease This work is licensed under the Creative Commons Attribution License.Discovery of Invariants through Automated Theory Formation * Maria Teresa Llano \u2020 Andrew Ireland Heriot-Watt UniversitySchool of Mathematical and Computer SciencesAlison Pease University of Edinburgh School of InformaticsRefinement is a powerful mechanism for mastering the complexity of formal modeling of systems. Refinement also entails additional evidential obligations - a developer is required to discover characteristics related to their design decisions. With the aim of reducing this burden, we have studied how a general purpose theory building tool, HR, can be used to automate the discovery of the characteristics of the B event."}, {"heading": "1 Introduction", "text": "In fact, we are able to go in search of a solution that meets the needs of the individual."}, {"heading": "2 Background", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Event-B", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "2.2 Automated theory formation and HR", "text": "The following 1Rodin methodological approaches provide an Eclipse-based platform for Event-B, with a range of models and arguments for plug-ins, e.g. UML-B [23], ProB Model Checker and Animators [14], B4free Theorem Prover (http: / / www.b4free.com). Lenat's work has shown us that it is possible to formalize heuristics for discovery in mathematics. Colton developed this intuition in his HR Learning System [4]. HR performs descriptive induction to form a set of objects of interest that are described by a set of core concepts (as opposed to predictive learning systems used to solve a particular problem). Based on Colon Colon's observation, it is possible to gain a complex understanding of a complex understanding."}, {"heading": "3 Automated theory formation for Event-B models with HR", "text": "In this section we show how the adhesive invariant (1) introduced in the example of \u00a7 2.1 can be generated by theory formation and in particular by the HR system."}, {"heading": "3.1 Construction of conjectures in the domain of the Mondex system", "text": "HR's input consists of a series of core concepts that describe the domain. In relation to Event B models, these core concepts are represented by the state of the system, i.e. variables, and by the static information given in the context of the model, i.e. constants and sets. In addition, a concept is composed of a series of examples. In Figure 5, we will present some of the core concepts with their respective data tables - generated by animating the model with the ProB model. As mentioned above, we use ProB [14] to animate the models. For the purpose of the example, we will present some of the core concepts with their respective data tables, which were generated by animating the model with the ProB system. Then, HR applies all possible combinations of concepts and production rules to generate new concepts and form conjectures."}, {"heading": "3.2 Challenges in applying HR", "text": "For the domain of the Mondex system, a total of 4545 guesses were generated after 1000 formation steps. As can be seen, this is a considerable number of guesses that need to be analyzed. In general, the use of the HR for the discovery of invariants presented us with three major challenges: 1. The HR theory-building mechanism consists of an iterative application of production rules that go beyond existing and new concepts. In order for the HR to perform an exhaustive search, all possible combinations of production rules and concepts need to be carried out. However, there is no fixed number of theory-building steps for this process, as they vary according to the domain, i.e. some domains require more theory-building steps than others. This posed a challenge for the use of the HR in the discovery of invariants, as it was possible that an invariant was not formed just because not enough formation steps were performed. 2. Some production rules are more effective in certain areas than others."}, {"heading": "4 Proof failure analysis and HR", "text": "In order to use HR, the user must first configure the system for its scope, which involves the user selecting production rules and conjecture techniques and deciding how many steps to perform HR. In the example introduced in \u00a7 3.1, the application of the split-production rule with respect to concept statusF, for the value IDLEF, is an informed decision based on the user's knowledge of the model. HR alone does not have the ability to apply this type of reasoning. Often, certain combinations of these parameters prove useful for different areas. Finding the right combination is largely a process of trial and error. Here, we have developed a heuristic approach with the aim of automating this trial-and-error process. Our heuristics utilizes the strong interplay between modeling and reasoning in event B. In the context of discovering inventors through theory formation, we use the feedback of failed POR to make decisions about how to configure the HR in the rules."}, {"heading": "4.1 Heuristics", "text": "Our heuristics limit the search for invariants by focusing the HR on concepts that occur within failed POs. We use two classes of heuristics - those used in the configuration of the HR, i.e. pre-heuristics (PH), and those used in the selection of assumptions from the output of the HR, i.e. selection euristics (SH). In the following, we explain each class of heuristics successively:"}, {"heading": "4.1.1 HR configuration heuristics", "text": "We use two general heuristics when configuring HR for a particular event B refinement: PH1. Prioritize core and non-core concepts that occur within the failed POs as follows:. Target concepts: concepts that appear within the goals of the failed POs. Hypotheses concepts: concepts that appear within the hypotheses of the failed POs. Other concepts: concepts that do not appear within the failed POs.PH2. Selective production rules that lead to guesses about the concepts that occur within the failed POs, i.e. Split rule: is selected when members of the limited sentences occur. Arithmetic rule: is selected when there are occurrences of the arithmetic operators, e.g. +, Numbering rule rule: is selected when there are occurrences."}, {"heading": "4.1.2 Conjecture selection heuristics", "text": "In fact, the fact is that most of them will be able to be in a position, without being able to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in a position, to put themselves in the position they are in, in the position they are in."}, {"heading": "4.2 Worked example", "text": "iSe rf\u00fc ide r\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc die f\u00fc"}, {"heading": "4 equivalences, 2 implications and 79 non-exists conjectures", "text": "Applying SH2 eliminates conjectures whose left and right sides are not disjointed with respect to variable occurrences. Applying SH2 leads to the following results:"}, {"heading": "1 equivalence, 2 implications and 79 non-exists conjectures", "text": "Using SH3 eliminates less general assumptions, and applying this heuristic results in: 1 equivalence, 2 implications, and 46 non-existent assumptions. SH4 selects only assumptions that trigger the failed PO. Results of this step are:"}, {"heading": "1 equivalence, 0 implications and 0 non-exists conjectures", "text": "Furthermore, this assumption does not introduce additional errors; therefore, it is an invariant. Within HR, the invariant takes the form that translates into the missing adhesive invariant (1). It should be noted that this conjecture was formed by HR after a theory-building step. This shows that in this example, our heuristics led HR to discover interesting conjectures early in the theory-building process."}, {"heading": "5 Experimental results", "text": "The experiments we conducted were divided into two phases: the first stage involved the development of our heuristics and was based on four relatively simple Event B models, as described below: 1. Traffic light system: This model represents a traffic light circuit that controls the sequencing of lights. It consists of an abstract model and includes a single refinement. The abstract model controls the red and green lights, while refinement introduces a third light into the sequence, i.e. an amber light. 2. Two representations of a vending machine: \u2022 Set-like representation: This model of a vending machine controls the stock of products through the use of states. It consists of an abstract and a concrete model. The abstract model represents the states of products using state sets, while refinement introduces a status function that maps products in their states. \u2022 Arithmetic-like representation: This model of the vending machine uses natural numbers to represent the stock and money within the machine."}, {"heading": "5.1 The Mondex system", "text": "In fact, it is the case that most people are able to survive themselves, and that they see themselves as being able to survive themselves, and that they are able to survive themselves. (...) In fact, it is the case that they are able to survive themselves. (...) It is not that they are able to survive themselves. (...) It is not that they are able to survive themselves. (...) It is the case that they are not able to survive themselves. (...) It is not that they are able to survive themselves. \"(...)"}, {"heading": "5.2 Summary of results", "text": "Table 2 summarizes the results of applying our approach in each of the Event B models used during the development and evaluation phases. Note that all experiments were conducted using models with only basic typing invariants, which means that neither adhesives nor system invariants were present in the models when we used our technique. The table shows for each finishing step the number of failed POs that occurred, as well as the number of adhesives and system invariants detected by our approach. We also record the number of iterations that were involved in the invariant discovery process. Table 3 compares our results with the actual inventors stated in the literature for the models of cars on a bridge [1] and the Mondex system [3]; the other developments are not compared because they are by our own authorship (note that the grafting inventors from stages four to five of the Mondex system are not included in the literature)."}, {"heading": "6 Related and future work", "text": "iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii"}, {"heading": "7 Conclusions", "text": "The most important contribution of our work is the development of a number of heuristics. Using proof-failure analyses to circumvent the plethora of assumptions that HR discovers, these heuristics have proven to be extremely effective in identifying missing invariants. Although further experiments are needed, we believe that our heuristics provide a solid foundation on which to further explore techniques that support formal refinement - techniques that propose design alternatives while relieving developers of the burden of evidence-failure analysis. Recognition: We would like to thank Alan Bundy, Gudmund Grov and Julian Gutierrez for their feedback and encouragement in this work. We would also like to thank Jens Bendisposto and the ProB development team for their support, and Simon Colton and John Charnley for their help in using the HR system."}], "references": [{"title": "Modeling in Event-B - System and Software Engineering", "author": ["J-R. Abrial"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Rodin: an open toolset for modelling and reasoning in Event-B", "author": ["J-R. Abrial", "M. Butler", "S. Hallerstede", "T. Hoang", "F. Mehta", "L. Voisin"], "venue": "STTT 12(6),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "An incremental development of the Mondex system in Event-B", "author": ["M. Butler", "D. Yadav"], "venue": "Formal Aspects of Computing", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "Automated Theory Formation in Pure Mathematics", "author": ["S. Colton"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "Constraint Generation via Automated Theory Formation", "author": ["S. Colton", "I. Miguel"], "venue": "International Conference on the Principles and Practice of Constraint Programming,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2001}, {"title": "The Daikon system for dynamic detection of likely invariants", "author": ["M. Ernst", "J. Perkins", "P. Guo", "S. McCamant", "C. Pacheco", "M. Tschantz", "C. Xiao"], "venue": "Science of Computer Programming", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Reasoned Modelling Critics: Turning Failed Proofs into Modelling Guidance", "author": ["A. Ireland", "G. Grov", "M. Llano", "M. Butler"], "venue": "Science of Computer Programming", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Case-Analysis for Rippling and Inductive Proof", "author": ["M. Johansson", "L. Dixon", "A. Bundy"], "venue": "1st International Conference on Interactive Theorem Proving,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2010}, {"title": "AM: An Artificial Intelligence approach to discovery in mathematics", "author": ["D. Lenat"], "venue": "Ph.D. thesis,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1976}, {"title": "Eurisko: A program which learns new heuristics and domain concepts", "author": ["D. Lenat"], "venue": "Artificial Intelligence", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1983}, {"title": "ProB: A Model Checker for B", "author": ["M. Leuschel", "M. Butler"], "venue": "In: International Symposium of Formal Methods Europe, LNCS 2805,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2003}, {"title": "Automatic Guidance for Refinement Based Formal Methods. 5th workshop on Automated Formal Methods (AFM\u201810), a satellite workshop of the 22nd International Conference on Computer Aided Verification (CAV\u201810)", "author": ["M. Llano", "G. Grov", "A. Ireland"], "venue": "Also available via: School of Mathematical and Computer Sciences,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "Refinement and Term Synthesis in Loop Invariant Generation. In: 2nd International Workshop on Invariant Generation (WING\u201909), a satellite workshop of ETAPS\u201909", "author": ["E. Maclean", "A. Ireland", "L. Dixon", "R. Atkey"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2009}, {"title": "Automated Discovery of Inductive Theorems. In: From Insight to Proof: Festschrift in Honour of Andrzej Trybulec, Studies in Logic, Grammar and Rhetoric", "author": ["R. McCasland", "A. Bundy", "S. Autexier"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2007}, {"title": "Employing Theory Formation to Guide Proof Planning. In: AISC/Calculemus\u201902", "author": ["A. Meier", "V. Sorge", "S. Colton"], "venue": "LNAI 2385, Springer,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2002}, {"title": "Scheme-Based Synthesis of Inductive Theories", "author": ["O. Montano-Rivas", "R. McCasland", "L. Dixon", "A. Bundy"], "venue": "In: MICAI,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}, {"title": "Applying Lakatos-style reasoning to AI problems. In: Thinking Machines and the philosophy of computer science: Concepts and principles", "author": ["A. Pease", "A. Smaill", "S. Colton", "A. Ireland", "M. Llano", "R. Ramezani", "G. Grov", "M. Guhe"], "venue": "IGI Global, PA,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "AM: a case study in methodology", "author": ["G. Ritchie", "F. Hanna"], "venue": "editors: The foundations of AI: a sourcebook, CUP, Cambridge,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1990}, {"title": "UML-B: Formal modeling and design aided by UML", "author": ["C. Snook", "M. Butler"], "venue": "ACM Transactions on Software Engineering and Methodology", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "From a modelling perspective we have focused on Event-B [1] and the Rodin tool-set [2], in particular we have used the ProB animator plug-in [14] for the simulation component.", "startOffset": 56, "endOffset": 59}, {"referenceID": 1, "context": "From a modelling perspective we have focused on Event-B [1] and the Rodin tool-set [2], in particular we have used the ProB animator plug-in [14] for the simulation component.", "startOffset": 83, "endOffset": 86}, {"referenceID": 10, "context": "From a modelling perspective we have focused on Event-B [1] and the Rodin tool-set [2], in particular we have used the ProB animator plug-in [14] for the simulation component.", "startOffset": 141, "endOffset": 145}, {"referenceID": 3, "context": "In terms of ATF, we have used a general-purpose system called HR [4].", "startOffset": 65, "endOffset": 68}, {"referenceID": 5, "context": "Generating invariants from the analysis of ProB animation traces is an approach analogous to that of the Daikon system [9]; however, while Daikon is tailored for programming languages here we focus on formal models.", "startOffset": 119, "endOffset": 122}, {"referenceID": 0, "context": "Our investigation involved a series of experiments, drawing upon examples which include Abrial\u2019s \u201cCars on a Bridge\u201d [1] and the Mondex case study by Butler et al.", "startOffset": 116, "endOffset": 119}, {"referenceID": 2, "context": "[3] .", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "To illustrate the basic features of a refinement consider the two events shown in Figure 2, which are part of the Mondex development [3].", "startOffset": 133, "endOffset": 136}, {"referenceID": 8, "context": "Lenat developed one of the earliest examples of a discovery system in mathematics; Automated Mathematician (AM) [12] and its successor Eurisko [13].", "startOffset": 112, "endOffset": 116}, {"referenceID": 9, "context": "Lenat developed one of the earliest examples of a discovery system in mathematics; Automated Mathematician (AM) [12] and its successor Eurisko [13].", "startOffset": 143, "endOffset": 147}, {"referenceID": 18, "context": "UML-B [23], ProB model checker and animator [14], B4free theorem prover (http://www.", "startOffset": 6, "endOffset": 10}, {"referenceID": 10, "context": "UML-B [23], ProB model checker and animator [14], B4free theorem prover (http://www.", "startOffset": 44, "endOffset": 48}, {"referenceID": 17, "context": "Lenat\u2019s work [22], he did show us that it is possible to formalise heuristics for discovery in mathematics.", "startOffset": 13, "endOffset": 17}, {"referenceID": 3, "context": "Colton has developed this intuition in his HR machine learning system2 [4].", "startOffset": 71, "endOffset": 74}, {"referenceID": 14, "context": "HR has been used for a variety of discovery projects, including mathematics and scientific domains (it has been particularly successful in number theory [6] and algebraic domains [19]) and constraint solvers [8, 21].", "startOffset": 179, "endOffset": 183}, {"referenceID": 4, "context": "HR has been used for a variety of discovery projects, including mathematics and scientific domains (it has been particularly successful in number theory [6] and algebraic domains [19]) and constraint solvers [8, 21].", "startOffset": 208, "endOffset": 215}, {"referenceID": 16, "context": "HR has been used for a variety of discovery projects, including mathematics and scientific domains (it has been particularly successful in number theory [6] and algebraic domains [19]) and constraint solvers [8, 21].", "startOffset": 208, "endOffset": 215}, {"referenceID": 10, "context": "As mentioned before, we use ProB [14] to animate the models.", "startOffset": 33, "endOffset": 37}, {"referenceID": 2, "context": "This iterative approach to discovering all the missing invariants is typical of Event-B developments, as described in Section 5 of [3], where invariant discovery is manual.", "startOffset": 131, "endOffset": 134}, {"referenceID": 0, "context": "Refinements 1 and 2 of Abrial\u2019s cars on a bridge system [1]: Models a system that controls the flow of cars on a bridge that connects a mainland to an island.", "startOffset": 56, "endOffset": 59}, {"referenceID": 0, "context": "Refinement 3 of Abrial\u2019s cars on a bridge system [1]: The third refinement of this system models the introduction of sensors that detect the physical presence of cars.", "startOffset": 49, "endOffset": 52}, {"referenceID": 2, "context": "The Mondex system [3]: Models an electronic purse that allows the transfer of money between purses.", "startOffset": 18, "endOffset": 21}, {"referenceID": 2, "context": "In the work reported in [3], it was highlighted that the manual analysis of failed POs was used to guide the construction of gluing invariants.", "startOffset": 24, "endOffset": 27}, {"referenceID": 2, "context": "As part of our experiments we attempted the re-construction of the Mondex system in Event-B based on the development presented in [3].", "startOffset": 130, "endOffset": 133}, {"referenceID": 2, "context": "In the following section we present the results obtained by the application of our approach to the refinement between levels three and four of the Mondex system, and we show that these results are similar to the ones obtained through the interactive development [3].", "startOffset": 262, "endOffset": 265}, {"referenceID": 2, "context": "This is because some experiments, for instance the development of the Mondex system carried out in [3], have shown that the automatic provers do better with quantifier-free predicates.", "startOffset": 99, "endOffset": 102}, {"referenceID": 2, "context": "The invariants shown in Figure 10 are a subset of the invariants suggested in [3] for this step of the refinement.", "startOffset": 78, "endOffset": 81}, {"referenceID": 2, "context": "In total we obtained 11 invariants from the 17 used in [3].", "startOffset": 55, "endOffset": 58}, {"referenceID": 2, "context": "Our hypothesis, is that the extra invariants used in [3] represent new requirements of the system, which are out of the scope of our technique since we only target invariants needed to prove the refinement steps.", "startOffset": 53, "endOffset": 56}, {"referenceID": 0, "context": "In Table 3 we compare our results with the actual invariants given in the literature for the models of the cars on a bridge [1] and the Mondex system [3]; the other developments are not compared because they are of our own authorship (note that the invariants of the refinement from levels four to five of the Mondex system are not given in the literature).", "startOffset": 124, "endOffset": 127}, {"referenceID": 2, "context": "In Table 3 we compare our results with the actual invariants given in the literature for the models of the cars on a bridge [1] and the Mondex system [3]; the other developments are not compared because they are of our own authorship (note that the invariants of the refinement from levels four to five of the Mondex system are not given in the literature).", "startOffset": 150, "endOffset": 153}, {"referenceID": 5, "context": "The closest work we know of is Daikon [9], a system which uses templates to detect likely program invariants by analysing program execution traces.", "startOffset": 38, "endOffset": 41}, {"referenceID": 7, "context": "For instance, IsaCoSy [11], IsaScheme [20], the CORE system [16] and MathsAid [17].", "startOffset": 22, "endOffset": 26}, {"referenceID": 15, "context": "For instance, IsaCoSy [11], IsaScheme [20], the CORE system [16] and MathsAid [17].", "startOffset": 38, "endOffset": 42}, {"referenceID": 12, "context": "For instance, IsaCoSy [11], IsaScheme [20], the CORE system [16] and MathsAid [17].", "startOffset": 60, "endOffset": 64}, {"referenceID": 13, "context": "For instance, IsaCoSy [11], IsaScheme [20], the CORE system [16] and MathsAid [17].", "startOffset": 78, "endOffset": 82}, {"referenceID": 6, "context": "Longer-term, we are looking to use theory formation within our REMO [10] formal modelling planning system.", "startOffset": 68, "endOffset": 72}, {"referenceID": 11, "context": "That is, when faced with a refinement failure, we aim to use theory formation, automatically tailored by refinement plans [15], to suggest modelling alternatives.", "startOffset": 122, "endOffset": 126}], "year": 2013, "abstractText": "event StartFrom =\u0302 any t, p1 where p1 \u2208 idleFP ... then eprP := eprP \u222a {p1} idleFP := idleFP \\ {p1} ... end Concrete event StartFrom =\u0302 refines StartFrom any t, p1 where p1 7\u2192 IDLEF \u2208 statusF ... then statusF(p1) := EPR ... end Figure 2: Abstract and concrete views of event StartFrom. Note that the keyword refines specifies the event being refined, while the keywords any, where and then delimit event parameters, guards and actions respectively. Note also that the concrete event on the right represents a refinement of the abstract event on the left. In order to verify this refinement an invariant is required that relates the concrete and abstract states \u2013 these are known as gluing invariants. In the case of the events given above, the required gluing invariant takes the form: idleFP = statusF\u22121[{IDLEF}] (1) This invariant states that the abstract set idleFP can be obtained from the inverse of the function statusF evaluated over the enumerated set IDLEF. A similar gluing invariant would be required for the abstract set eprP and the function statusF. Within the Rodin toolset1, the user is required to supply such gluing invariants. Likewise, invariants relating to state variables within a single model must also be supplied by the user \u2013 what we refer to here as system invariants. To illustrate, the following disjointness property represents an invariant of the abstract event above:", "creator": "LaTeX with hyperref package"}}}