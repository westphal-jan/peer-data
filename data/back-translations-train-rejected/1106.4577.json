{"id": "1106.4577", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Jun-2011", "title": "Interactive Execution Monitoring of Agent Teams", "abstract": "There is an increasing need for automated support for humans monitoring the activity of distributed teams of cooperating agents, both human and machine. We characterize the domain-independent challenges posed by this problem, and describe how properties of domains influence the challenges and their solutions. We will concentrate on dynamic, data-rich domains where humans are ultimately responsible for team behavior. Thus, the automated aid should interactively support effective and timely decision making by the human. We present a domain-independent categorization of the types of alerts a plan-based monitoring system might issue to a user, where each type generally requires different monitoring techniques. We describe a monitoring framework for integrating many domain-specific and task-specific monitoring techniques and then using the concept of value of an alert to avoid operator overload. We use this framework to describe an execution monitoring approach we have used to implement Execution Assistants (EAs) in two different dynamic, data-rich, real-world domains to assist a human in monitoring team behavior. One domain (Army small unit operations) has hundreds of mobile, geographically distributed agents, a combination of humans, robots, and vehicles. The other domain (teams of unmanned ground and air vehicles) has a handful of cooperating robots. Both domains involve unpredictable adversaries in the vicinity. Our approach customizes monitoring behavior for each specific task, plan, and situation, as well as for user preferences. Our EAs alert the human controller when reported events threaten plan execution or physically threaten team members. Alerts were generated in a timely manner without inundating the user with too many alerts (less than 10 percent of alerts are unwanted, as judged by domain experts).", "histories": [["v1", "Wed, 22 Jun 2011 21:00:28 GMT  (2012kb)", "http://arxiv.org/abs/1106.4577v1", null]], "reviews": [], "SUBJECTS": "cs.MA cs.AI", "authors": ["p berry", "t j lee", "d e wilkins"], "accepted": false, "id": "1106.4577"}, "pdf": {"name": "1106.4577.pdf", "metadata": {"source": "CRF", "title": "Interactive Execution Monitoring of Agent Teams", "authors": ["David E. Wilkins", "Thomas J. Lee", "Pauline Berry"], "emails": ["WILKINS@AI.SRI.COM", "TOMLEE@AI.SRI.COM", "BERRY@AI.SRI.COM"], "sections": [{"heading": null, "text": "We describe the domain-independent challenges posed by this problem, and describe how domain characteristics affect the challenges and their solutions. We focus on dynamic, data-rich areas where people are ultimately responsible for team behavior, so automated help should interactively support effective and timely human decision-making. We present a domain-independent categorization of the types of warnings that a plan-based monitoring system could issue to a user, where each type generally requires different monitoring techniques. We describe a monitoring framework that integrates many domain-specific and task-specific monitoring techniques, and then use the concept of the value of notification to avoid operator overloading. We use this framework to describe an execution monitoring approach that we have used to implement execution assistants (EAs) in two different dynamic, data-rich, real-world domains."}, {"heading": "1. Introduction", "text": "In this year it has come to the point where we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in a time, in which we are in which we are in a time, in which we are in a time, in which we are in which we are in a time, in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we are in which we in which we are in which we in which we are in which we in which we are in which we in which we in which we are in which we in which we are in which we in which we in which we in which we are in which we in which we in which we in which we are in which we in which we in which we are in which we in which we in which we are in which we in which we in which we in which we in which we in which we are in which we in which we in which we are in which we in which we in which we are in which we in which we in which we are in which we in which we in which we in which we are in which we in which we in which we in which we are in which we in which we are in which we in which we are in which we are in which we in which we in which we in which we are in which we in which we are in which we are in which we in which we in which we are in which we in which we are in which we in which we are in which we are in which we in which we are in which we are in which we in which we in which we are in which we in which we are in which we are in which we in which we are in which we in which we are in which we in which we in which we in which we in which we are in which we are in which we in which we in which we are in which we in which"}, {"heading": "2. Interactive Monitoring Challenges", "text": "In fact, it is the case that one is able to find a solution that is capable of finding a solution that is capable of bringing about a solution, and that is able to find a solution that is capable of finding a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, and that is able to find a solution that is capable of finding a solution."}, {"heading": "3. Monitoring Approach Determined by Domain Features", "text": "In fact, it is as if most of them are able to play by the rules they have imposed on themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...)"}, {"heading": "4. Types of Alerts", "text": "This year, as never before in the history of a country in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is not a country, but in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which is a country, in which is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which is a country, in which is a country, in which is a"}, {"heading": "5. Value of Information and Alerts", "text": "In this context, it is worth mentioning that this is a very complex issue."}, {"heading": "5.1 Estimating VOI and VOA", "text": "In fact, most of them will be able to move to another world in which they are able to live, in which they want to live."}, {"heading": "5.2 Properties of VOI and VOA", "text": "VOI and VOA in our dynamic domain depend primarily on whether the information influences decisions / reactions. Execution tools must also ensure that human awareness of high-quality data can only be made by the human user. Thus, the system must estimate or model what the human needs to know (e.g. by specifying reporting requirements), even if the system cannot predict how the information might influence a decision. For example, an emerging adversary or friendly pattern could be decisive. If the system does not have a human-level ability to recognize plans and patterns, it should ensure that the human decision-maker is aware of the relevant data. An obvious but important characteristic of VOI is that it is null if the user is already aware of the information. Another characteristic is that the execution of the plan can be valuable because it influences the decision to proceed as planned."}, {"heading": "5.3 VOI and VOA Criteria", "text": "In fact, we will be able to change the world without destroying it, \"he said in an interview with the German Press Agency.\" We have never achieved so much as this year, \"he said."}, {"heading": "6. Implementing Execution Monitors \u2013 Small Unit Operations", "text": "To support this claim, we describe two dynamic, data-rich, real-world domains and the Execution Wizards (EAs) that we have implemented with our Frame.Our first domain, Army Small Unit Operations (SUO), comprises hundreds of mobile, geographically distributed agents that are a combination of humans, robots and vehicles; the other domain, UV Robotics (Ortiz, Agno, Berry, & Vincent, 2002), is described in Section 7 and consists of teams consisting of a handful of cooperating, unmanned ground and aerial vehicles (UGVs and UAVs) and a human controller, both domains involving unpredictable adversaries close to team members."}, {"heading": "6.1 SUO Problem Description", "text": "In fact, most people are able to decide for themselves what they want and what they want."}, {"heading": "6.2 SUO Approach", "text": "The plan defines how the events will unfold so that the EA can compare the actual events with the foreseen situations. We had two tasks, which included the acquisition of knowledge and the modeling of domains: (1) we had to model SUO plans and the actions they compose, and (2) we had to model the value of the information and the different types of alerts for users. We interacted with several domain experts to develop these models, which were supported by the centuries of analysis and modeling that have already been done in this area."}, {"heading": "6.3 SUO Architecture", "text": "In fact, most of them are able to survive themselves, and they are able to survive themselves, \"he said in an interview with The New York Times, in which he focused on the roles of The New York Times and The New York Times."}, {"heading": "6.4 SUO Alert Types", "text": "While there is extensive accumulated experience regarding the execution of SUO plans, selecting what types of warnings to detect involves trading several factors, such as whether the warning can be detected on the basis of available data, the benefit of the warning to the user, the cost of implementation and the ability to maintain reactivity given the computational effort involved in detecting the warning. We have already given the example of weighing the usefulness of fine-grained terrain reasoning for the motion projection and its computational impact on reactivity. Thus, modeling the value of information and types of warnings that should be detected included an interaction between domain experts and system developers. Here, we describe the types of warnings we have decided to detect. Further details about how we implement them and model the value of information and warnings are given in Sections 6.6 and 6.7. Figure 4 describes the 13 types of alerts that are detected by this section, the most of which are detected by EA and the Site Categories."}, {"heading": "6.5 SUO Plans and Mission Model", "text": "This year, as never before in the history of a country in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is not a country, in which it is not a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country,"}, {"heading": "6.6 SUO Execution Monitoring", "text": "The EA Manager continually responds to new goals and facts posted in its database. The Watchman Agent is asynchronous by entering facts into the EA Manager's database while receiving news from SAIM. Facts posted in this way include confirmations of mission starts and completions (from subordinate EAs), orders to cancel the current plan or execute a new plan (from a superior EA Manager), sensor tracks, and location reports (from the SAIM network). Mission Model methods provide facts to the EA Manager to call mission-specific monitoring. Examples of such facts provided by the EA Manager include monitoring multiple types of time constraints and monitoring a specific location for activities (with options for friendly or hostile targets and expected or unexpected developments). EA Manager's behavior is determined by the goals and facts posted, their relative timing, and the response used."}, {"heading": "6.6.1 PLAN MONITORING", "text": "To monitor a plan, a request target is posted to the database, resulting in an Initialize Plan Act that calculates the conditions that should be globally monitored for that plan, and enters facts into the EA Manager database that state that there is an up-to-date plan with monitors, which in turn results in EA Manager executing actions that load and execute the plan. EA Manager traverses the parallel branches of that plan as completed missions, calculating the global monitors using the Calculation Plan Monitoring Data API function that can specify domain-specific monitors, as well as domain-independent capabilities, such as the system determining all predictions in plan preconditions that must be originally true (as opposed to predictions that are achieved through prior planning actions), and in the SUO domain, calculation plan monitoring data includes all decision points and \"designated areas of interest\" that are specified in and directed to the monitors."}, {"heading": "6.6.2 LOCATION REPORTS", "text": "The Blue Report Act in Figure 5 is called every time a location report is posted to the EA Manager database, which can happen several times per second. However, the Watchman Agent filters location reports that are not of interest to the EA Manager (e.g., for companies that are irrelevant to the EA Owner's plan or because there is no change from the last report) and updates the representation of the current situation in the EA. The Blue Report Act is specific to the SUO domain, but our framework requires that a similar law be written for every type of input that is actively monitored. For example, there is a similar UV Robotics Act that responds to government updates (see Section 7.4). These laws are written using the Act Editor (Wilkins & Myers, 1995), a tool for graphically editing procedural knowledge (Acts) that compares procedural knowledge (Acts) with an intuitive user interface. This Act starts by calling a domain-specific risk plan to the specialized Rating expectations."}, {"heading": "6.6.3 MISSION MONITORING", "text": "To explain mission monitoring, we give an example of how a mission is monitored in a plan. A mission that is ready to execute has the following parameters: (Mission Unit Start-Time-Restriction Start-Time-Endtime-Restriction End-Time-Destination-Destination-Engineering meets contingencies).The EA Manager starts the execution by calling three methods defined in the mission model: Start-Time Restrictions, End-Time Restrictions and Location Restrictions. Each of these elements inserts facts into the EA Manager database to call up mission-specific monitoring capabilities. For example, under LocationConstraints (which specialize in the class movement mission) facts are published about locations that this mission expects friendly units to occupy and at what time (derived from the target and route arguments), and possibly also facts about locations where this mission expects adversarial activities and where adversarial activities should be monitored / alerted."}, {"heading": "6.6.4 TEMPORAL MONITORING", "text": "The mission model includes start and end time limitations for each mission. Each time restriction consists of a time constraint type and an absolute time. The time constraints in the EA are shown in Figure 6. These constraints require two types of monitoring tasks: detection when time constraints have elapsed in the schedule, and detection of events that occur before the specified time. We extend the PRS with a domain-independent time monitoring mechanism that provides a general capability that covers all of our time monitoring requirements. This capability has been implemented in the form of acts, some of which support the LISP code. Four special types of time-controlled monitors are provided by implementing facts predicated Check-Not-Later-Than, Check-Not-EarlierThan, Check-In-Window, and Check-Near-Time."}, {"heading": "6.6.5 DESIGN TRADEOFFS", "text": "As described in Section 2, a balance must be struck between the capabilities provided and the resources used. Trade-offs are different in each application and usually represent a critical aspect in designing an execution wizard. In the SUO area, terrain reasoning is a key factor in this trade-off. Using fine-grained terrain data to analyze progress or future failures can overload computation resources. Therefore, the EA uses rough terrain reasoning, but our design allows advocates of greater fidelity to respond to a defined set of terrain analysis requirements, allowing the system to adjust its analysis to the pace of operations. Other key features to consider when compromising reactivity and capabilities are the amount of processing required by the mission monitoring methods, the report monitoring laws, and any specialized argumentators (such as terrain reasoners) invoked by the methods or acts."}, {"heading": "6.6.6 OTHER FEATURES AND IMPLEMENTATION", "text": "We have implemented a graphical user interface that is not intended for military users, but rather to facilitate the evaluation and understanding of the EA. The graphical user interface displays all warnings in different scrollable windows for each priority level, the current time and mission of each EA owner's subordinate. The user can confirm that the mission starts and ends locally, although this can be done with language or another modality in a field system. If a confirmation arrives from a subordinate EA, the confirmation window for that mission is destroyed, allowing acknowledgements and prompts to be given locally or received in messages, with a seamless linking of these two types of confirmation. EA, PA, mission model, PRS and SIPE-2 are implemented in COMON LISP, CLIM and CLOS."}, {"heading": "6.7 Alert Detection and VOI/VOA", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "6.7.1 PROXIMITY ALERTS", "text": "Before and during combat, there may be a large amount of sensor tracks near friendly units; it would overwhelm the user to see a warning every time each track is changed. We keep a threat envelope for each friendly unit consisting of tracks close enough to pose a threat to them. Tracks are placed in zeros or more threat wrappers when they appear or move. Only significant changes in the strength of the total force in an envelope or the proximity of the next track cause an alarm."}, {"heading": "6.7.2 FRATRICIDE RISKS", "text": "Increased range increases the risk because there is a wider area where each team member needs to be correctly identified. Increased accuracy increases the risk because a wrongly targeted team member is more likely to suffer damage. Hopefully, tools such as EA and SAIM will increase situational awareness and significantly reduce the frequency of false target attacks. Normally, a large number of friendly units are in close proximity, so there are so many potential fratricide situations. In the first case, EA recognizes two types of fratricide risks: (1) by firing other team members (appearing in SAIM messages) and (2) friendly units in close proximity to each other (detected from the geolocation data); in the second case, the user issuing a firecry is alerted and asked for confirmation when team members are alerted within a certain threshold of the target."}, {"heading": "6.8 SUO Evaluation", "text": "EA was evaluated against realistic data streams for the usefulness of its results, frequency of adverse alerts and real-time performance. SAIM and EA were tested against data produced by a high-resolution military simulator in two scenarios, with detailed models of each type of vehicle and sensor. One scenario lasted 13.5 hours, but only the last 90 minutes were simulated with high accuracy. (The first 12 hours had a file of scripted events, with a few dozen tracks and reports.) The second scenario, on the same terrain, was simulated for 20 minutes. The 90-minute simulation had more than 45,000 events passed on to the SAIM Watchman, of which 13,000 were passed on to the EA Manager, who only monitors the squad level (8 to 10 units)."}, {"heading": "6.8.1 QUALITY OF ALERTS", "text": "It is indeed the case that we will be able to go in search of a solution that will enable us, will enable us to find a solution that will enable us, will enable us to put ourselves in a position, will enable us to put ourselves in a position, will enable us to put ourselves in a position, will enable us to put ourselves in a position, will enable us to put ourselves in a position, will enable us to put ourselves in a position, will enable us to put ourselves in a position. \""}, {"heading": "6.8.2 PERFORMANCE", "text": "Our EA Manager has to deal with more than 100 simultaneous intentions while determining the import of a dozen or more new facts per second and checking the alarm history for redundancy. It was not clear if our system could do all of this while still warning the user of a new fact needed by our users within 5 seconds. We tested the EA on both scenarios to see if it met these requirements. In real-time, the EA generated alerts in less than 2 seconds after receiving a new fact. We found that the EA not only can keep up, but can run at 10 to 20 times real-time. (There may be abnormal terminal alerts because granularity problems occur at high time expansion rates.) Therefore, current data rates are not nearly high enough to strain the system - in 10 times real-time, we process an average of 24 events per second in our 90-minute simulation, which is our design requirement of a dozen events per second."}, {"heading": "6.8.3 LIMITATIONS", "text": "EA is limited by what has been modeled, by the low accuracy of some models and heuristics, and by the scenario-specific population of the knowledge base. There are many aspects of plan execution that we do not currently monitor, although our monitoring framework can be easily expanded if other aspects of the plans are modeled. Our selected capabilities are largely a function of the available input data and resources for modeling. EA can monitor a much broader range of plans than in our scenarios. In fact, it can monitor any plan that consists of a partial sequence of defined missions for team members. 2. All performance data comes from a Sun Ultra 60 under Solaris. All product and company names mentioned in this document are the trademarks of their respective owners."}, {"heading": "7. Monitoring Robot Teams", "text": "Unmanned aerial vehicles (UAVs) and unmanned combat robots (UCAVs) are a growing area of research interest (Musliner, Durfee, & Shin, 1993), led by the availability of cheaper platforms that are easier to use. SRI UV Robotics Project focuses on building a system to achieve a mission goal with a team of UGVs and UAVs. Each UGV or UAV is an autonomous agent with its own view of the world, its own reasoning capabilities, and its own resources (such as power, computing, and a unique set of sensors).During a mission, there may be limited opportunities to communicate with the human controller, so agents must rely on each other to complete the mission."}, {"heading": "7.1 UV-Robotics: Problem Description", "text": "Our long-term goal is to build, test, and validate an agent architecture that can support multiple objectives in a dynamic environment of cooperative mobile agents. Our teams \"first tasks include surveillance and reconnaissance, search and destruction, tracking and evasion, and a robot team would be expected to perform these tasks with minimal monitoring. Key components of this architecture are negotiation, strategic planning, execution and task control, execution monitoring, and recovery from failure. The challenge is not only that multiple robots work together, but that they understand the impact of their actions on common team goals. A challenge is that an agent can work toward multiple, possibly conflicting goals. Therefore, the agent must constantly evaluate his commitment to actions or tasks that contribute to the satisfaction of those goals. The inaccuracy of each action or sensory input must be taken into account, and his contribution to the satisfaction of current goals or plans must be evaluated."}, {"heading": "7.2 UV-Robotics: Architecture", "text": "The SRI robot architecture, based on several years of research at SRI on the intelligent control, planning, negotiation and motion control of the robot (Wilkins & Myers, 1995; Myers, 1996; Wilkins & Myers, 1998; Cheyer & Myers, 1998), is similar to systems such as SAFER (Holness, Karuppiah, & Ravela, 2001) and SRTA (Vincent, Horling, Lesser, & Wagner, 2001) in its ability to achieve multiple goals simultaneously and reject targets."}, {"heading": "7.3 UV-Robotics: Execution Monitoring Issues", "text": "The initial monitoring problems within the UV robotics domain can be divided into the following four categories: \u2022 Monitoring the accomplishment or progress towards a basic action (e.g. reaching a waypoint) \u2022 Monitoring the satisfaction or fulfillment of the multiple tasks the robot is currently performing (e.g. tracking evasive manoeuvres, patrolling, photographing a target every 2 hours) \u2022 Monitoring the activity of unknown or enemy units \u2022 Monitoring the state of the communication network, the robot and other team members (e.g. quality or integrity of the communication network, robotic mobility or battery level). Comparing these with our ontology in Section 4, the first two categories include the general alarm types that plan the violation of restrictions and the projected violation of restrictions. However, they exist at different levels of abstraction and often have different temporal effects and related monitoring requirements. The third category fits neatly with both alarm reporting and autonomous alarm reporting."}, {"heading": "7.4 The UV-Robotics Execution Assistant", "text": "In fact, it is in such a way that we will be able to maneuver ourselves into a situation in which we are able to survive ourselves, in which we see ourselves in a position in which we are in, and in which we are able to change the world, in which we are able to change the world in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we, in which we live, in which we live, in which we live, in which we, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, we live, in which we live, in which we live, in which we live, in which we live, we, in which we live, in which we, we live, we, in which we live, in which we, we, in which we, in which we live, in which we live, in which we live, we, we, in which we, in which we live, we, we, in which we, in which we live, in which we, in which we live, we, in which we live, we, in which we, in which we, in which we live, in which we, in which we live, we, in which we, we, we, we are able to"}, {"heading": "7.5 UV-Robotics: Evaluation", "text": "This year, it has come to the point where there is only one occasion when there is a scandal, and that is when there is a scandal."}, {"heading": "8. Related Work", "text": "In fact, most actions are carried out by external actors, and the monitor does not have access to the state of its executing agents. Such indirect execution requires different monitoring techniques, such as the use of incoming messages, to determine the status of agents and activities."}, {"heading": "9. Conclusions", "text": "In fact, it is the case that one is able to find a solution that is capable of finding a solution that is capable of finding a solution and that is able to find a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution, that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution."}, {"heading": "ACKNOWLEDGMENTS", "text": "SUO research was supported by the contract F30602-95-C-0235 with the Defense Advanced Research Projects Agency (DARPA Planning and Decision AIDS Program and DARPA Small Unit Operations Program), under the supervision of the Air Force Research Laboratory - Rome. UCAV research was supported by the Office of Naval Research Unmanned Combat Air Vehicles Program (contract N00014-00-C-0304). SRI International Artificial Intelligence Center supported the drafting of this paper. We thank the experts who supported us. Our primary collaborators and evaluators were Kenneth Sharpe of SAIC and Richard Diehl of the Institute for Defense Analyses. We also utilized the expertise of Andy Fowles, Chris Kearns and David Miller of the U.S. Army Dismounted Battlespace Battle Laboratory (DBBL) at Fort Benning and CPT Dan Ray of the Mounted Maneuver Battlespace Laboratory (MBL) at Fort Knox."}], "references": [], "referenceMentions": [], "year": 2011, "abstractText": "There is an increasing need for automated support for humans monitoring the activity of distributed teams of cooperating agents, both human and machine. We characterize the domainindependent challenges posed by this problem, and describe how properties of domains influence the challenges and their solutions. We will concentrate on dynamic, data-rich domains where humans are ultimately responsible for team behavior. Thus, the automated aid should interactively support effective and timely decision making by the human. We present a domain-independent categorization of the types of alerts a plan-based monitoring system might issue to a user, where each type generally requires different monitoring techniques. We describe a monitoring framework for integrating many domain-specific and task-specific monitoring techniques and then using the concept of value of an alert to avoid operator overload. We use this framework to describe an execution monitoring approach we have used to implement Execution Assistants (EAs) in two different dynamic, data-rich, real-world domains to assist a human in monitoring team behavior. One domain (Army small unit operations) has hundreds of mobile, geographically distributed agents, a combination of humans, robots, and vehicles. The other domain (teams of unmanned ground and air vehicles) has a handful of cooperating robots. Both domains involve unpredictable adversaries in the vicinity. Our approach customizes monitoring behavior for each specific task, plan, and situation, as well as for user preferences. Our EAs alert the human controller when reported events threaten plan execution or physically threaten team members. Alerts were generated in a timely manner without inundating the user with too many alerts (less than 10% of alerts are unwanted, as judged by domain experts).", "creator": "dvips(k) 5.86 Copyright 1999 Radical Eye Software"}}}