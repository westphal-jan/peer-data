{"id": "1112.6384", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Dec-2011", "title": "Proof nets for the Lambek-Grishin calculus", "abstract": "Grishin's generalization of Lambek's Syntactic Calculus combines a non-commutative multiplicative conjunction and its residuals (product, left and right division) with a dual family: multiplicative disjunction, right and left difference. Interaction between these two families takes the form of linear distributivity principles. We study proof nets for the Lambek-Grishin calculus and the correspondence between these nets and unfocused and focused versions of its sequent calculus.", "histories": [["v1", "Thu, 29 Dec 2011 19:16:20 GMT  (70kb)", "http://arxiv.org/abs/1112.6384v1", "Revised version to appear as a chapter in E. Grefenstette, C. Heunen, and M. Sadrzadeh (eds.) 'Compositional Methods in Physics and Linguistics', Oxford University Press"]], "COMMENTS": "Revised version to appear as a chapter in E. Grefenstette, C. Heunen, and M. Sadrzadeh (eds.) 'Compositional Methods in Physics and Linguistics', Oxford University Press", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["michael moortgat", "richard moot"], "accepted": false, "id": "1112.6384"}, "pdf": {"name": "1112.6384.pdf", "metadata": {"source": "CRF", "title": "Proof nets for the Lambek-Grishin calculus", "authors": ["Michael Moortgat", "Richard Moot"], "emails": ["M.J.Moortgat@uu.nl,", "moot@labri.fr"], "sections": [{"heading": null, "text": "ar Xiv: 111 2.63 84v1 [cs.CL] 2 9"}, {"heading": "1 Background, motivation", "text": "In fact, most of them are able to play by the rules."}, {"heading": "1.1 Dual residuation principles, linear distributivities", "text": "In LG, the inventory of type-building operations is doubled: in addition to the familiar operators, we refer to the principles (product, left and right division) to which we find a dual family structure (product, left and left distinguishing features). (product, left and left distinguishing features). (product, left and left distinguishing features. (product, left and right distinguishing features.) We read B / A as \"A over B,\" B over B, \"A as\" B over B \"and A as\" B less B. \"3 For difference operations, the quantity that is subtracted, just as we read the denomator under A.\" (A less B \"and A B\" over B. \""}, {"heading": "1.2 Arrows: LG as a deductive system", "text": "In his (Lambek 1988) Lambek examines the syntactic calculation from a categorical perspective. (A) Types are considered objects of a category and a study. (A) Types are considered objects of a category. (B) Types are labeled as identity protocols. (A) Types (A) Types (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A) Types. (B) Types. (A) Types. (B) Types. (A) Types. (B) Types. (A) Types. (B) (A) Types. (B) Types. (A) Types. (B) Types. (A) Types. (A) B. (A) Types. (B) Types. (A) Types. (B) Types. (A) Types. (A) Types. (B) Types. (A) Types. (A) Types. (A) Types. (A) Types. (B) Types. (A) Types. (A) Types. (A) Types. (A) Types. (A). (A) Types. (B) Types. (B) Types. (A) Types. (A. (A) Types. (B) Types. (A. (A) Types. (A). (B) Types. (B. (A) Types. (A) Types. (B. (A). (A. (A. (A) Types. (A). (A). (B) Types. (A. (A) Types. (B). (A. (A). (A) Types. (A). (A). (A.) Types."}, {"heading": "2 Display sequent calculus and proof nets", "text": "Is there a decision-making process to determine whether A \u2192 B holds? In view of expanding patterns such as we have seen in (8), this is not immediately clear. For 6, the key result of Lambek's original work was the determination of decision-making ability by applying Gentzen's method: the syntactical calculus is recast as a consequence calculation; for the subsequent presentation, it is then shown that the cut rule (the subsequent form of transitivity) is permissible; backward-chained, cut-free evidence search then yields the desired decision-making process. In the following section 2.1, we elaborate a similar agenda for LG. We introduce sLG, a sequence system for the Lambek Grishin calculation in the style of display logic (Gore '1997), and show that it is equivalent to aLG. The subsequent presentation enjoys cut elimination; decision-making ability follows."}, {"heading": "2.1 sLG: display sequent calculus", "text": "The aLG arrows are morphisms between types. In the subsequent calculation, derivability is a relationship between structures composed of types. We present the following calculation for LG in the format of a display logic (see (Gore \u0301 1997) for a comprehensive representational logical view of the substructural landscape).The characteristic feature of display logic is that there is a corresponding structural connecting feature for each logical link. We use the same symbols for the logical operations and their structural equivalents; structural operations are characterized by centers. Below the grammar for input (consecutive left-hand side) and output structures (consecutive rhs)."}, {"heading": "I ::= F | I \u00b7 \u2297 \u00b7 I | I \u00b7 \u2298 \u00b7 O | O \u00b7 ; \u00b7 I", "text": "The rules of the sLG are divided into three groups: the identity group (axiom, cut), the structural group (display postulates, distributive postulates, postulates), and the logical group (left and right introductory rules for logical connectives).The variables X, Y, Z in these rules range across structures, input, or output, depending on whether they appear to the left or right of the following arrogance."}, {"heading": "2.2 Proof nets", "text": "In fact, it is in such a way that most of us are able to surpass ourselves, both in terms of the way in which they move and in terms of the way in which they move, as well as in terms of the way in which they move, as well as in terms of the way in which they move, in the way in which they move, in the way in which they move, in the way in which they move, in the way in which they move, in the way in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they live, in which they, in which they live, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are,"}, {"heading": "H represents the result of the function h for the indicated node (relevant only in case this node is a hypothesis of the abstract proof structure). Similarly, C represent the formula assigned by the function c to the indicated node.", "text": "This year it is more than ever before."}, {"heading": "3 Proof nets and focused display calculus", "text": "The false non-determinism of the na\u00efve, backward-linked search for evidence can also be addressed within the subsequent calculation itself by introducing an appropriate notion of \"normal\" derivatives. In \u00a7 3.1 we introduce fLG, a focused version of the subsequent calculation for LG. In \u00a7 3.2 we then examine how focused derivatives are to be interpreted from the perspective of the evidence network."}, {"heading": "3.1 fLG: focused display calculus", "text": "It is based on the distinction between asynchronous and synchronous, non-atomic formulas that begin in an asynchronous phase in which invertible rules are applied in a deterrent manner until no more candidate formulas are left. At this point, a non-deterministic choice is necessary for a synchronous formula: this formula is \"put in focus\" and decomposes in its subformullae until no non-invertible rules are applicable at which point one enters an asynchronous phase. The main result of (Andreoli 2001) is that focused proofs are used entirely for linear logic."}, {"heading": "3.2 Proof nets and focusing", "text": "In this section, we present the components of synchronous evidentiary surveys and show how a concept of proof can be read from the composition diagram linked to a mesh. Our approach is similar to that of (de Groote and Retore) 1996, which includes an algorithm for calculating a linear lambda term, if a dynamic graph is associated with a proof mesh for a derivative in the Lambek calculation, the term associated with a given proof mesh is unique, in the case of multiple conclusions, there will be the possibility that the term computational algorithm associates more than one term with a proof. These multiple results are then shown to correspond to the derivative ambiguity of focused evidence search. Reduction Tree If P is a mesh of evidence (and is therefore a network of evidence), it converts a sequence of conversions and contractions, the components of conversions and contractions can be considered the components of chronic representations of P."}, {"heading": "4 Conclusions", "text": "This means that they can concentrate on underpinning the principles of the interaction with the principles of the interaction by supporting the principles of the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction, the interaction,"}], "references": [{"title": "Focussing and proof construction", "author": ["Andreoli", "J.-M."], "venue": "Annals of Pure and Applied Logic 107 (1-3), 131\u2013163.", "citeRegEx": "Andreoli and J..M.,? 2001", "shortCiteRegEx": "Andreoli and J..M.", "year": 2001}, {"title": "Focusing and proof-nets in linear and non-commutative logic", "author": ["Andreoli", "J.-M.", "R. Maieli"], "venue": "International Conference on Logic for Programming and Automated Reasoning (LPAR), Volume 1581 of LNAI. Springer.", "citeRegEx": "Andreoli et al\\.,? 1999", "shortCiteRegEx": "Andreoli et al\\.", "year": 1999}, {"title": "Polarized Montagovian semantics for the LambekGrishin calculus", "author": ["A. Bastenhof"], "venue": "CoRR abs/1101.5757. To appear in the Proceedings of the 15th Conference on Formal Grammar (Copenhagen, 2010), Springer LNCS.", "citeRegEx": "Bastenhof,? 2011", "shortCiteRegEx": "Bastenhof", "year": 2011}, {"title": "Continuation semantics for symmetric categorial grammar", "author": ["R. Bernardi", "M. Moortgat"], "venue": "D. Leivant and R. de Queiros (Eds.), Proceedings 14th Workshop on Logic, Language, Information and Computation (WoLLIC\u201907), LNCS 4576. Springer.", "citeRegEx": "Bernardi and Moortgat,? 2007", "shortCiteRegEx": "Bernardi and Moortgat", "year": 2007}, {"title": "Continuation semantics for the LambekGrishin calculus", "author": ["Bernardi", "R. andM. Moortgat"], "venue": "Information and Computation 208 (5), 397\u2013416.", "citeRegEx": "Bernardi and Moortgat,? 2010", "shortCiteRegEx": "Bernardi and Moortgat", "year": 2010}, {"title": "Proof theory for full intuitionistic linear logic, bilinear logic and mix categories", "author": ["J. Cockett", "R. Seely"], "venue": "Theory and Applications of Categories 3, pp. 85\u2013131.", "citeRegEx": "Cockett and Seely,? 1996", "shortCiteRegEx": "Cockett and Seely", "year": 1996}, {"title": "Duality of computation", "author": ["P. Curien", "H. Herbelin"], "venue": "International Conference on Functional Programming (ICFP\u201900), pp. 233\u2013243. [2005: corrected version].", "citeRegEx": "Curien and Herbelin,? 2000", "shortCiteRegEx": "Curien and Herbelin", "year": 2000}, {"title": "Semantic readings of proof nets", "author": ["P. de Groote", "C. Retor\u00e9"], "venue": "Formal Grammar,", "citeRegEx": "Groote and Retor\u00e9,? \\Q1996\\E", "shortCiteRegEx": "Groote and Retor\u00e9", "year": 1996}, {"title": "Linear logic", "author": ["Girard", "J.-Y."], "venue": "Theoretical Computer Science 50, 1\u2013102.", "citeRegEx": "Girard and J..Y.,? 1987", "shortCiteRegEx": "Girard and J..Y.", "year": 1987}, {"title": "A new constructive logic: classical logic", "author": ["Girard", "J.-Y."], "venue": "Mathematical Structures in Computer Science 1 (3), 255\u2013296.", "citeRegEx": "Girard and J..Y.,? 1991", "shortCiteRegEx": "Girard and J..Y.", "year": 1991}, {"title": "Substructural logics on display", "author": ["R. Gor\u00e9"], "venue": "Logic Journal of IGPL 6 (3), 451\u2013504.", "citeRegEx": "Gor\u00e9,? 1997", "shortCiteRegEx": "Gor\u00e9", "year": 1997}, {"title": "On a generalization of the Ajdukiewicz-Lambek system", "author": ["V. Grishin"], "venue": "A. Mikhailov (Ed.), Studies in Nonclassical Logics and Formal Systems, pp. 315\u2013334. Moscow: Nauka. [English translation in Abrusci and Casadio (eds.) Proceedings 5th Roma Workshop, Bulzoni Editore, Roma, 2002].", "citeRegEx": "Grishin,? 1983", "shortCiteRegEx": "Grishin", "year": 1983}, {"title": "Parsing Beyond Context-Free Grammars", "author": ["L. Kallmeyer"], "venue": "Cognitive Technologies. Springer.", "citeRegEx": "Kallmeyer,? 2010", "shortCiteRegEx": "Kallmeyer", "year": 2010}, {"title": "The mathematics of sentence structure", "author": ["J. Lambek"], "venue": "American Mathematical Monthly 65, 154\u2013170.", "citeRegEx": "Lambek,? 1958", "shortCiteRegEx": "Lambek", "year": 1958}, {"title": "On the calculus of syntactic types", "author": ["J. Lambek"], "venue": "R. Jacobson (Ed.), Structure of Language and its Mathematical Aspects, Proceedings of the Symposia in Applied Mathematics, Volume XII, pp. 166\u2013178. American Mathematical Society.", "citeRegEx": "Lambek,? 1961", "shortCiteRegEx": "Lambek", "year": 1961}, {"title": "Categorial and categorical grammars", "author": ["J. Lambek"], "venue": "E. B. R. Oehrle and D. Wheeler (Eds.), Categorial Grammars and Natural Language Structures, pp. 297\u2013317. Dordrecht: Reidel Publishing Company.", "citeRegEx": "Lambek,? 1988", "shortCiteRegEx": "Lambek", "year": 1988}, {"title": "From categorial to bilinear logic", "author": ["J. Lambek"], "venue": "K. D. P. Schr\u00f6derHeister (Ed.), Substructural Logics, pp. 207\u2013237. Oxford University Press.", "citeRegEx": "Lambek,? 1993", "shortCiteRegEx": "Lambek", "year": 1993}, {"title": "Multimodal linguistic inference", "author": ["M. Moortgat"], "venue": "Journal of Logic, Language and Information 5 (3,4), 349\u2013385.", "citeRegEx": "Moortgat,? 1996", "shortCiteRegEx": "Moortgat", "year": 1996}, {"title": "Symmetries in natural language syntax and semantics: the Lambek-Grishin calculus", "author": ["M. Moortgat"], "venue": "Proceedings of WoLLIC 2007, Volume 4567 of LNCS, pp. 264\u2013284. Springer.", "citeRegEx": "Moortgat,? 2007", "shortCiteRegEx": "Moortgat", "year": 2007}, {"title": "Symmetric categorial grammar", "author": ["M. Moortgat"], "venue": "Journal of Philosophical Logic 38 (6), 681\u2013710.", "citeRegEx": "Moortgat,? 2009", "shortCiteRegEx": "Moortgat", "year": 2009}, {"title": "Proof nets for display logic", "author": ["R. Moot"], "venue": "Technical report, CNRS and INRIA Futurs.", "citeRegEx": "Moot,? 2007", "shortCiteRegEx": "Moot", "year": 2007}, {"title": "Proof nets for the multimodal Lambek calculus", "author": ["R. Moot", "Q. Puite"], "venue": "Studia Logica 71 (3), 415\u2013442.", "citeRegEx": "Moot and Puite,? 2002", "shortCiteRegEx": "Moot and Puite", "year": 2002}, {"title": "Type Logical Grammar", "author": ["G. Morrill"], "venue": "Dordrecht:Kluwer.", "citeRegEx": "Morrill,? 1994", "shortCiteRegEx": "Morrill", "year": 1994}, {"title": "Nondeterministic discontinuous Lambek calculus", "author": ["G. Morrill", "M. Fadda", "O. Valentin"], "venue": "Proceedings of the Seventh International Workshop on Computational Semantics (IWCS7), Tilburg.", "citeRegEx": "Morrill et al\\.,? 2007", "shortCiteRegEx": "Morrill et al\\.", "year": 2007}], "referenceMentions": [{"referenceID": 13, "context": "In his two seminal papers (Lambek 1958; Lambek 1961), Jim Lambek introduced the \u2018parsing as deduction\u2019 method in linguistics: the traditional parts of speech (noun, verb, adverb, determiner, etc) are replaced by logical formulas \u2014 types if one takes the computational view; the judgement whether an expression is wellformed is the outcome of a process of logical deduction, or, reading formulas as types, a computation in the type calculus.", "startOffset": 26, "endOffset": 52}, {"referenceID": 14, "context": "In his two seminal papers (Lambek 1958; Lambek 1961), Jim Lambek introduced the \u2018parsing as deduction\u2019 method in linguistics: the traditional parts of speech (noun, verb, adverb, determiner, etc) are replaced by logical formulas \u2014 types if one takes the computational view; the judgement whether an expression is wellformed is the outcome of a process of logical deduction, or, reading formulas as types, a computation in the type calculus.", "startOffset": 26, "endOffset": 52}, {"referenceID": 12, "context": "(Kallmeyer 2010).", "startOffset": 0, "endOffset": 16}, {"referenceID": 22, "context": "Also in the Lambek tradition, extended type-logical systems have been proposed with expressive power beyond context-free: multimodal grammars (Morrill 1994; Moortgat 1996), discontinuous calculi (Morrill, Fadda, and Valentin 2007), etc.", "startOffset": 142, "endOffset": 171}, {"referenceID": 17, "context": "Also in the Lambek tradition, extended type-logical systems have been proposed with expressive power beyond context-free: multimodal grammars (Morrill 1994; Moortgat 1996), discontinuous calculi (Morrill, Fadda, and Valentin 2007), etc.", "startOffset": 142, "endOffset": 171}, {"referenceID": 19, "context": "In the present paper, we study the system presented in (Moortgat 2009), which we\u2019ll refer to as LG.", "startOffset": 55, "endOffset": 70}, {"referenceID": 11, "context": "In a paper antedating Linear Logic by a couple of years, Grishin (1983) proposes a generalization of the Lambek calculus which removes this intuitionistic restriction.", "startOffset": 57, "endOffset": 72}, {"referenceID": 16, "context": "Some clarification about the notation: we follow (Lambek 1993) in writing \u2295 for the coproduct, which is a multiplicative operation, like \u2297.", "startOffset": 49, "endOffset": 62}, {"referenceID": 5, "context": "(Cockett and Seely 1996)): linear, because they respect resources (no material gets copied).", "startOffset": 0, "endOffset": 24}, {"referenceID": 5, "context": "(Cockett and Seely 1996)): linear, because they respect resources (no material gets copied). Moot (2007) models the adjunction operation of Tree Adjoining Grammars using the interaction principles of (11) and shows how through this modeling the mildly context-sensitive patterns of (5) can be obtained within LG.", "startOffset": 1, "endOffset": 105}, {"referenceID": 15, "context": "In his (Lambek 1988), Lambek studies the Syntactic Calculus from a categorical perspective.", "startOffset": 7, "endOffset": 20}, {"referenceID": 10, "context": "We introduce sLG, a sequent system for the Lambek-Grishin calculus in the style of Display Logic (Gor\u00e9 1997), and show that it is equivalent to aLG.", "startOffset": 97, "endOffset": 108}, {"referenceID": 10, "context": "We will present the sequent calculus for LG in the format of a Display Logic (see (Gor\u00e9 1997) for a comprehensive display logical view on the substructural landscape).", "startOffset": 82, "endOffset": 93}, {"referenceID": 18, "context": "Cut Elimination, decidability (Moortgat 2007) In sLG, Cut is an admissible rule: every theorem has a cut-free derivation.", "startOffset": 30, "endOffset": 45}, {"referenceID": 21, "context": "The proof nets for the Lambek-Grishin calculus we present in this section are a simple extension of the proof nets for the multimodal Lambek calculus of (Moot and Puite 2002).", "startOffset": 153, "endOffset": 174}, {"referenceID": 21, "context": "The proof is an easy adaptation of the proof of (Moot and Puite 2002).", "startOffset": 48, "endOffset": 69}, {"referenceID": 20, "context": "A detailed proof can be found in (Moot 2007).", "startOffset": 33, "endOffset": 44}, {"referenceID": 4, "context": "In this section, we implement his focusing regime in the context of the two-sided sequent format of (Bernardi and Moortgat 2010).", "startOffset": 100, "endOffset": 128}, {"referenceID": 6, "context": "This term language is a directional refinement of the \u03bb\u03bc\u03bc\u0303 language of (Curien and Herbelin 2000).", "startOffset": 71, "endOffset": 97}, {"referenceID": 2, "context": "For the translation of (Bastenhof 2011) that we follow here, the target fragment has linear products and negation A, i.", "startOffset": 23, "endOffset": 39}, {"referenceID": 2, "context": "22 Focused proof search for the Lambek-Grishin calculus has been studied by Bastenhof (2011) who uses a one-sided presentation of the calculus.", "startOffset": 76, "endOffset": 93}, {"referenceID": 3, "context": "CPS translations for LG were introduced in (Bernardi and Moortgat 2007; Bernardi and Moortgat 2010), who adapt the call-by-value and call-by-name regimes of (Curien and Herbelin 2000) to a directional environment.", "startOffset": 43, "endOffset": 99}, {"referenceID": 4, "context": "CPS translations for LG were introduced in (Bernardi and Moortgat 2007; Bernardi and Moortgat 2010), who adapt the call-by-value and call-by-name regimes of (Curien and Herbelin 2000) to a directional environment.", "startOffset": 43, "endOffset": 99}, {"referenceID": 6, "context": "CPS translations for LG were introduced in (Bernardi and Moortgat 2007; Bernardi and Moortgat 2010), who adapt the call-by-value and call-by-name regimes of (Curien and Herbelin 2000) to a directional environment.", "startOffset": 157, "endOffset": 183}, {"referenceID": 2, "context": "The translation of (Bastenhof 2011) (following (Girard 1991)) is an improvement in that it avoids the \u2018administrative redexes\u2019 of the earlier approaches: the image of LG source derivations, under the mapping from (Bastenhof 2011) that we present below, are normal LP terms.", "startOffset": 19, "endOffset": 35}, {"referenceID": 2, "context": "The translation of (Bastenhof 2011) (following (Girard 1991)) is an improvement in that it avoids the \u2018administrative redexes\u2019 of the earlier approaches: the image of LG source derivations, under the mapping from (Bastenhof 2011) that we present below, are normal LP terms.", "startOffset": 213, "endOffset": 229}], "year": 2011, "abstractText": "Grishin\u2019s generalization of Lambek\u2019s Syntactic Calculus combines a non-commutative multiplicative conjunction and its residuals (product, left and right division) with a dual family: multiplicative disjunction, right and left difference. Interaction between these two families takes the form of linear distributivity principles. We study proof nets for LG and the correspondence between these nets and unfocused and focused versions of its sequent calculus. 1 Background, motivation In his two seminal papers (Lambek 1958; Lambek 1961), Jim Lambek introduced the \u2018parsing as deduction\u2019 method in linguistics: the traditional parts of speech (noun, verb, adverb, determiner, etc) are replaced by logical formulas \u2014 types if one takes the computational view; the judgement whether an expression is wellformed is the outcome of a process of logical deduction, or, reading formulas as types, a computation in the type calculus. np \u2297 (np\\s) \u2297 (((np\\s)\\(np\\s))/np) \u2297 (np/n) \u2297 n \u2192 s time flies like an arrow (1) What is the precise nature of grammatical composition, the \u2297 operation in the example above? The \u201958 and \u201961 papers present two views on this: in the \u201958 paper, types are assigned to strings of words, in the \u201961 paper, they are assigned to phrases, bracketed strings, with a grouping into constituents. The Syntactic Calculus, under the latter view, is extremely simple. The derivability relation between types is given by the preorder laws (2) and the residuation principles of (3). A \u2192 A ; from A \u2192 B and B \u2192 C infer A \u2192 C (2) \u22c6 Draft of a chapter in E. Grefenstette, C. Heunen, and M. Sadrzadeh (eds.) \u2018Compositional methods in Physics and Linguistics\u2019, OUP, to appear. We thank Arno Bastenhof for helpful comments on an earlier version. 2 A \u2192 C/B iff A\u2297B \u2192 C iff B \u2192 A\\C (3) To obtain the \u201958 view, one adds the non-logical axioms of (4), attributing associativity properties to the \u2297 operation. (A\u2297B)\u2297 C \u2192 A\u2297 (B \u2297 C) ; A\u2297 (B \u2297 C) \u2192 (A\u2297B)\u2297 C (4) The Syntactic Calculus in its two incarnations \u2014 the basic system NL given by (2) and (3) and the associative variant L which adds the postulates of (4) \u2014 recognizes only context-free languages. It is well known that to capture the dependencies that occur in natural languages, one needs expressivity beyond context-free. Here are some characteristic patterns from formal language theory that can be seen as suitable idealizations of phenomena that occur in the wild. copying: {w | w \u2208 {a, b}} counting dependencies: {abc | n > 0} crossed dependencies: {abcd | n,m > 0} (5) In the tradition of extended rewriting systems, there is a large group of grammar formalisms that handle these and related patterns gracefully: Tree Adjoining Grammars, Linear Indexed Grammars, Combinatory Categorial Grammars, Minimalist Grammars, Multiple Context Free Grammars, . . . (Kallmeyer 2010). Also in the Lambek tradition, extended type-logical systems have been proposed with expressive power beyond context-free: multimodal grammars (Morrill 1994; Moortgat 1996), discontinuous calculi (Morrill, Fadda, and Valentin 2007), etc. These extensions, as well as the original Lambek systems, respect an \u201cintuitionistic\u201d restriction: in a sequent presentation, derivability is seen as a relation between (a structured configuration of) hypotheses A1, . . . , An and a single conclusionB. In a paper antedating Linear Logic by a couple of years, Grishin (1983) proposes a generalization of the Lambek calculus which removes this intuitionistic restriction. Linguistic application of Grishin\u2019s ideas is fairly recent. In the present paper, we study the system presented in (Moortgat 2009), which we\u2019ll refer to as LG. 1.1 Dual residuation principles, linear distributivities In LG the inventory of type-forming operations is doubled: in addition to the familiar operators \u2297, \\, / (product, left and right division), we find a dual family \u2295,\u2298,;: coproduct, right and left difference. A,B ::= p | atoms: s, np, . . . A\u2297B | B\\A | A/B | product, left vs right division A\u2295B | A\u2298B | B ; A coproduct, right vs left difference (6) Some clarification about the notation: we follow (Lambek 1993) in writing \u2295 for the coproduct, which is a multiplicative operation, like \u2297. We read B\\A as \u2018B under A\u2019, A/B as \u2018A over B\u2019, B ; A as \u2018B from A\u2019 and A \u2298 B as \u2018A less B\u2019. 3 For the difference operations, then, the quantity that is subtracted is under the circled (back)slash, just as we have the denominator under the (back)slash in the case of left and right division types. In a formulas-as-types spirit, we will feel free to refer to the division operations as implications, and to the difference operations as co-implications. Dual residuation principles The most basic version of LG is the symmetric generalization of NL, which means that to (2) and (3) we add the dual residuation principles of (7). B ; C \u2192 A iff C \u2192 B \u2295A iff C \u2298A \u2192 B (7) To get a feeling for the consequences of the preorder laws (2) and the (dual) residuation principles (3) and (7), here are some characteristic theorems and derived rules of inference. First, the compositions of the product and division operations, and of the co-product and difference operation give rise to the expanding and contracting patterns of (8). The rows here are related by a left-right symmetry; the columns by arrow reversal. A\u2297 (A\\B) \u2192 B \u2192 A\\(A\u2297B) (B/A)\u2297A \u2192 B \u2192 (B \u2297A)/A (B \u2295A)\u2298A \u2192 B \u2192 (B \u2298A)\u2295A A ; (A\u2295B) \u2192 B \u2192 A\u2295 (A ; B) (8) Secondly, one can show that the type-forming operations have the monotonicity properties summarized in the following schema, where \u2191 (\u2193) is an isotone (antitone) position: (\u2191 \u2297 \u2191), (\u2191 / \u2193), (\u2193 \\ \u2191), (\u2191 \u2295 \u2191), (\u2191 \u2298 \u2193), (\u2193 ; \u2191) In other words, the following inference rules are valid. A \u2192 A B \u2192 B A \u2297B \u2192 A\u2297B A \u2192 A B \u2192 B A\u2295B \u2192 A \u2295B (9) A \u2192 A B \u2192 B A\\B \u2192 A\\B A \u2192 A B \u2192 B A \u2298B \u2192 A\u2298B A \u2192 A B \u2192 B B/A \u2192 B/A A \u2192 A B \u2192 B B ; A \u2192 B ; A (10) Interaction: distributivity principles As we saw above, one could extend the inferential capabilities of this minimal system by adding postulates of associativity and/or commutativity for \u2297 and \u2295. From a substructural perspective, each of these options destroys structure-sensitivity for a particular dimension of grammatical organization: word order in the case of commutativity, constituent structure in the case of associativity. In LG there is an alternative which leaves the sensitivity for linear order and phrasal structure intact: instead of considering structural options for the individual \u2297 and \u2295 families, one can consider 4 interaction principles for the communication between them. We will consider the following group. (A ; B)\u2297 C \u2192 A ; (B \u2297 C) C \u2297 (B \u2298A) \u2192 (C \u2297B)\u2298A C \u2297 (A ; B) \u2192 A ; (C \u2297B) (B \u2298A)\u2297 C \u2192 (B \u2297 C)\u2298A (11) These postulates have come to be called linear distributivity principles (e.g. (Cockett and Seely 1996)): linear, because they respect resources (no material gets copied). Moot (2007) models the adjunction operation of Tree Adjoining Grammars using the interaction principles of (11) and shows how through this modeling the mildly context-sensitive patterns of (5) can be obtained within LG. 1.2 Arrows: LG as a deductive system In his (Lambek 1988), Lambek studies the Syntactic Calculus from a categorical perspective. Types are seen as the objects of a category and one studies morphisms between these objects, arrows f : A \u2212\u2192 B. For each A, there is an identity arrow 1A. Then there are inference rules to produce new arrows from arrows already obtained. Among these is the composition g \u25e6 f , defined when dom(g) = cod(f). Composition is associative, i.e. one has the equation f \u25e6 (g \u25e6 h) = (f \u25e6 g) \u25e6 h. Also, f \u25e6 1A = f = 1B \u25e6 f , where f : A \u2212\u2192 B. 1A : A \u2212\u2192 A f : A \u2212\u2192 B g : B \u2212\u2192 C g \u25e6 f : A \u2212\u2192 C (12) In this paper, we will not pursue the categorical interpretation of LG: our emphasis in the following sections is on the sequent calculus for this logic, the term language coding sequent proofs, and the correspondence between these proofs and proof nets. Our aim in this section is simply to have a handy language for naming proofs in the deductive presentation, and to use this in \u00a72.1 to establish the equivalence between the deductive and the sequent presentations. To obtain aLG, one adds to (12) further rules of inference for the residuation principles and their duals. (Omitting type subscripts \u22b2A,B,Cf for legibility. . . ) f : A\u2297B \u2212\u2192 C \u22b2f : A \u2212\u2192 C/B f : A\u2297 B \u2212\u2192 C \u22b3f : B \u2212\u2192 A\\C (13) g : A \u2212\u2192 C/B \u22b2g : A\u2297B \u2212\u2192 C g : B \u2212\u2192 A\\C \u22b3g : A\u2297B \u2212\u2192 C (14) f : C \u2212\u2192 B \u2295A \u25ed f : B ; C \u2212\u2192 A f : C \u2212\u2192 B \u2295A \u25ee f : C \u2298A \u2212\u2192 B (15) g : B ; C \u2212\u2192 A \u25ed g : C \u2212\u2192 B \u2295A g : C \u2298A \u2212\u2192 B \u25ee g : C \u2212\u2192 B \u2295A (16) 5 As remarked above, the Lambek-Grishin calculus exhibits two involutive symmetries, at the level of types and proofs: a left-right symmetry \u00b7 and an arrow reversing symmetry \u00b7 such that f \u266e : A \u2212\u2192 B iff f : A \u2212\u2192 B iff f \u2020 : B \u2212\u2192 A (17) with, on the type level, the translation tables below (abbreviating a long list of defining equations (A\u2297B) . = B \u2297A, (B \u2297A) . = A \u2297B, . . . ) A\u2297B A/B A\u2295B A\u2298B B \u2297A B\\A B \u2295A B ; A \u266e A/B A\u2297B B\\A B ; A B \u2295A A\u2298B \u2020 and on the level of proofs (1A) \u266e = 1A\u266e , (g \u25e6 f) \u266e = g \u25e6 f , (1A) \u2020 = 1A\u2020 , (g \u25e6 f) = f \u2020 \u25e6 g, and the list of defining equations (\u22b3f) . = \u22b2f , (\u22b3f) . =\u25ee f , . . . corresponding to the translation tables above. The distributivity principles, in aLG, take the form of extra axioms (primitive arrows). Below arrows d, b for the interaction between ; and \u2297. For the leftright symmetric pair d, q we write b, p dA,B,C : (A ; B)\u2297 C \u2212\u2192 A ; (B \u2297 C) qA,B,C : C \u2297 (A ; B) \u2212\u2192 A ; (C \u2297B) (18) To establish the equivalence between aLG and the sequent calculus sLG, to be discussed in the next section, we will use the fact that the monotonicity rules are derived rules of inference of aLG. For example, f/g can be defined as in (19) below. f : A \u2212\u2192 A g : B \u2212\u2192 B f/g : A/B \u2212\u2192 A/B f/g . = (\u22b2(f \u25e6 (\u22b21A/B)))) \u25e6 (\u22b2 \u22b3 \u22121 ((\u22b3 \u22b2 1A/B\u2032) \u25e6 g)) (19) Similarly, for the distributivity postulates, we will rely on a rule form, which for d would be B \u2297 C \u2192 A\u2295D A ; B \u2192 D/C (20) The inference rule (20) is derived as shown in (21). dA,B,C : (A ; B)\u2297 C \u2212\u2192 A ; (B \u2297 C) f : B \u2297 C \u2212\u2192 A\u2295D \u25ed f : A ; (B \u2297 C) \u2212\u2192 D (\u25ed f) \u25e6 dA,B,C : (A ; B)\u2297 C \u2212\u2192 D \u22b2((\u25ed f) \u25e6 dA,B,C) : A ; B \u2212\u2192 D/C (21) 2 Display sequent calculus and proof nets Is there a decision procedure to determine whether A \u2192 B holds? In the presence of expanding patterns as we saw them in (8), this is not immediately clear. For 6 the language with /,\u2297, \\, the key result of Lambek\u2019s original papers was to establish decidability by applying Gentzen\u2019s method: the Syntactic Calculus is recast as a sequent calculus; for the sequent presentation one then shows that the Cut rule (the sequent form of transitivity) is admissible; backward-chaining, cut-free proof search then yields the desired decision procedure. In \u00a72.1 below, we work through a similar agenda for LG. We introduce sLG, a sequent system for the Lambek-Grishin calculus in the style of Display Logic (Gor\u00e9 1997), and show that it is equivalent to aLG. The sequent presentation enjoys Cut Elimination; decidability follows. Sequent proof search, though decidable, remains suboptimal in that it allows a great many derivations for what in effect one would like to consider as \u2018the same\u2019 proof. In \u00a72.2, we introduce proof nets for LG, and show how these nets remove the spurious forms of nondeterminism of sequent proof search. 2.1 sLG: display sequent calculus The arrows of aLG are morphisms between types. In the sequent calculus, derivability is a relation between structures built from types. We will present the sequent calculus for LG in the format of a Display Logic (see (Gor\u00e9 1997) for a comprehensive display logical view on the substructural landscape). The characteristic feature of Display Logic is that for every logical connective, there is a corresponding structural connective. We use the same symbols for the logical operations and their structural counterparts; structural operations are marked off by centerdots. Below the grammar for input (sequent left hand side), and output structures (sequent rhs). I ::= F | I \u00b7 \u2297 \u00b7 I | I \u00b7 \u2298 \u00b7 O | O \u00b7 ; \u00b7 I O ::= F | O \u00b7 \u2295 \u00b7 O | I \u00b7 \\ \u00b7 O | O \u00b7 / \u00b7 I The rules of sLG come in three groups: the identity group (Axiom, Cut), the structural group (Display Postulates, Distributivity Postulates), and the logical group (left and right introduction rules for the logical connectives). Variables X,Y, Z in these rules range over structures, input or output, depending on whether they appear left or right of the sequent arrow. Axiom, Cut A \u21d2 A Ax X \u21d2 A A \u21d2 Y X \u21d2 Y Cut (22) Display postulates The (dual) residuation principles are formulated at the structural level. These rules ensure that any formula constituent of a sequent can be displayed as the single occupant of the sequent lhs or rhs\u2014hence the name.", "creator": "LaTeX with hyperref package"}}}