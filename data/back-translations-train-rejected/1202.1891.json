{"id": "1202.1891", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Feb-2012", "title": "Hyper heuristic based on great deluge and its variants for exam timetabling problem", "abstract": "Today, University Timetabling problems are occurred annually and they are often hard and time consuming to solve. This paper describes Hyper Heuristics (HH) method based on Great Deluge (GD) and its variants for solving large, highly constrained timetabling problems from different domains. Generally, in hyper heuristic framework, there are two main stages: heuristic selection and move acceptance. This paper emphasizes on the latter stage to develop Hyper Heuristic (HH) framework. The main contribution of this paper is that Great Deluge (GD) and its variants: Flex Deluge(FD), Non-linear(NLGD), Extended Great Deluge(EGD) are used as move acceptance method in HH by combining Reinforcement learning (RL).These HH methods are tested on exam benchmark timetabling problem and best results and comparison analysis are reported.", "histories": [["v1", "Thu, 9 Feb 2012 05:51:18 GMT  (567kb)", "http://arxiv.org/abs/1202.1891v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ei shwe sin", "nang saing moon kham"], "accepted": false, "id": "1202.1891"}, "pdf": {"name": "1202.1891.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["GREAT DELUGE", "Ei Shwe Sin", "Saing Moon Kham"], "emails": ["eishwe.ucsy@gmail.com", "moonkhamucsy@gmail.com"], "sections": [{"heading": null, "text": "This paper describes the Hyper Heuristic Method (HH) based on the Great Flood (GD) and its variants for solving large, severely restricted timetables in different areas. In general, there are two main steps within the Hyper Heuristic Method (HH): heuristic selection and acceptance of steps. This paper emphasizes the latter step towards developing a Hyper Heuristic (HH) framework. The main contribution of this paper is that Great Flood (GD) and its variants: Flex Flood (FD), Nonlinear (NLGD), Extended Great Sintuge (EGD) are used as a method for accepting steps in the Great Flood by combining Reinforcement Learning (RL). These HH methods are tested against test benchmarks for the timetabling problem and the best results and comparative analyses are report.KEYWORDSHyper Heuristic, Great Timetling Problems (RL)."}, {"heading": "1. INTRODUCTION", "text": "Today, when they are critical in educational sectors, most university administrators try to get more information about the problem, and they have to be very careful to increase the stratifications of students. As a result, they are very careful to solve the university problem. In fact, it represents the difficult optimization problem. However, as the difficulty of the problem, its importance in practice and the inherent scientific challenge increases, they have been extensively investigated both in operational research and in the artificial intelligence community. It can be classified into exam problems, the timetable problem and the timetable problem of the course. In this essay, the timetable problem (ETP) is used as a test bed for the proposed three HA methods, which are able to perform the proposed three HA methods. The exam timetable problem is to assign a number of exam times to a number of potential timescales or slots, taking into account the various limitations. Several approaches were used to create better methods for performing the exam."}, {"heading": "2. RELATED WORKS", "text": "There are two main phases in a single iteration of a hyper-heuristic method. They are heuristic selection and motion acceptance. In this paper, the second stage of the problem is highlighted. In general, the acceptance of motion can be deterministic or non-deterministic. There are many methods, such as the Great Flood (GD), the ACO algorithm and the simulated annealing methods are also used as motion acceptance criteria in hyper-heuristic procedures due to their popularity. Therefore, a brief review of the GD and its variants is proposed in this paper.Bykov Y., the time-predefined Great Flood Algorithm and Trajectory Base Search after testing timetabling in 2003 [19] and Edmund K. Burke and Yuri Bykov made an extension of the Great Flood algorithm (which they called \"Flex Flood\"), where acceptance depends on upheavals."}, {"heading": "3. DESCRIPTION OF THE EXAM TIMETABLING PROBLEM", "text": "The basic way to represent it is graph model. Mathematical model can also be used. In a more formal way, the curriculum literature defines two types of constraints. Hard constraints are the constraints that must be met at all times. Soft constraints are not decisive, but their satisfaction is beneficial for students and / or the institution. Typically, one cannot satisfy all soft constraints, therefore there is a need for a performance function that measures the degree of satisfaction of these constraints [3]. The primary hard and soft constraints in exam time can be found in [2]. Among them, the following table shows the hard and soft constraints used in this paper. In addition, the problem can be defined with the terms that are shown in the table 2.C = (cij) n The conflict matrix."}, {"heading": "4. PROPOSED GD AND ITS VARIANTS FOR MOVE ACCEPTANCE IN HH METHODS", "text": "Through the use of reinforcement learning in the first phase of the HH and the use of the variants of the GD as a motion acceptance method, the three hyperheuristic systems such as: RL _ EGD, RL _ NLGD and RL _ FD are discussed in this section. Firstly, how to create an initial solution and its representation and the low heuristics used in these proposed systems are described, and secondly, the analysis and comparison of these three HH systems is described."}, {"heading": "4.1. Low Level Heuristic and Initial Solution", "text": "It is as if we were dealing with an infinite time, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in which time is at stake, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time, in time,"}, {"heading": "4.2. Reinforcement Learning", "text": "For the heuristic selection process in hyperheuristics, machine learning techniques are critical to making the right decisions. Learning can be done offline or online. Online learning hyperheuristics learns from the feedback received during the search process in solving a particular problem. Furthermore, it is better than the offline method. Most of the existing online learning involves reinforcement learning (RL). It is a sub-area of machine learning that represents an important direction for research in the field of artificial intelligence [9]. RL is a framework for learning an optimal strategy for a task from experiments. It requires less a priori knowledge. It is also successfully applied to planning, control, game theory, etc. However, the quality of the solution achieved through the use of RL is in many cases unsatisfactory. However, the EGD can control whether it is an optimal approach for a task from experiments or is accepted after the initial hay solution has been applied."}, {"heading": "4.3. Great Deluge (GD) and its variant", "text": "The Great Flood Algorithm (GD) is a genetic algorithm applied to optimization problems. It is similar in many respects to the uphill and simulated glow algorithms. In GD, the water level is set at the beginning of the search to a value higher than the expected penalty for the best solution. Subsequently, the water level is lowered linearly during the search until it reaches a value of zero [19]. It is a well-known acceptance method proposed by (Dueck; 1993, Burke et al., 2003). In the literature there are many variants of GD such as NLGD, EGD and FD. They will be discussed in detail in the next section."}, {"heading": "4.3.1. Extended Great Deluge", "text": "In fact, the concept of the EGD algorithm is quite similar to the hyper-heuristic method. As far as the author knows, it was first considered as motion acceptance for hyper-heuristics. It has advantages in requiring the matching of a few input parameters that can represent the search time. It can provide a broader test with the hidden data sets for consistency in the approaches. Furthermore, it may be interesting to perform all techniques at a later stage with more hidden data sets. It is also proving to be both robust and general. Due to these advantages, it has been successfully applied to many optimization problems, such as buffer assignment problems, redundancy assignment problems and so on. Therefore, this paper examines whether or not to make a further improvement in hyper-heuristics. The standard GDA has been expanded by adding warm-up mechanisms, step 13 in Figure 1, similar to the one applied with simulated annealing in the time tracing."}, {"heading": "4.3.2. Flex-Deluge", "text": "An extension of the Great Flood algorithm is \"Flex Flood,\" where the acceptance of uphill movements depends on a \"flexibility coefficient\" kf (0 < = kf < = 1). Acceptance rules are outlined in Expression (2): P \u2032 = P + kf (B - P) if P < B P \u2032 = P if P \u2265 B. (2) by varying the kf, it is possible to obtain an algorithm that exhibits features of both the original Great Flood (kf = 1) and greedy mountaineering (kf = 0). This method allows the search process to evolve with an adaptive rigor of acceptance for each move [8]."}, {"heading": "4.3.3. Non-Linear Great Deluge", "text": "Another extension of the DG is the non-linear large flood algorithm (NLGD), in which the acceptance criterion refers to the acceptance of an improving and non-improving low heuristics, depending on the performance of the heuristic and current water level B. The improvement of heuristics is always accepted, while non-improving heuristics are only accepted if the quality disadvantage is lower or equal to B. The initial water level is normally determined by the quality of the initial solution and then reduced by a non-linear function proposed in [17]: B = B \u00b7 (exp \u2212 \u03b4 (rnd [min, max]) + \u03b2 (3) The various parameters in Equation (3) control the speed and shape of the drop rate of the water level. Parameter \u03b2 influences the shape of the waste rate and it represents the minimum penalty to be expected, which corresponds to the best solution. Thus, the role of the parameters min and max is to control the speed of the drop rate."}, {"heading": "4.4. Three HH Methods for Exam Timetabling Problem", "text": "The first HA method, RL-EGD, has already been proposed and published as our previous task [10] and is capable of producing workable solutions for all problem cases and comparable results in the literature. Now, other two HA methods, such as RL-FD and RL-NLGD, are being implemented and compared for audit scheduling problems. The main differences between these three HA methods can be seen in step 10 of Figures 3, 4 and 5."}, {"heading": "5. RESULTS AND DISCUSSION", "text": "Our experimental analysis does on the computer Pentium IV, Dell with the RAM 2GB. We tested the three HH methods on 31 instances. These are 13 instances proposed by Carter et al. and 18 instances created by instance generator. All of these data instances and most random instance generator can be provided by the link: \"http: / / www.asap.cs.nott.ac.uk / resources / data.shtml.Each data instance executed is 10 times as shown in the following table. Each run is run from the same initial configuration at the lowest. HH methods are implemented in Java and the parameters and environmental settings are as shown in the following table. In the parameter setting, Coefficient _ Kf is used in the RL-FD, while \u03b2, Bmax, Bmax, the data is used in RL-NLGD. For the values of these parameters we follow the reference [16], because this paper Rterixis uses the better result memo of 40% for max 000,000,000.5 * 0,000,000.5."}, {"heading": "6. CONCLUSION", "text": "Hyperheuristics has begun to prove itself as a fast and effective method for solving complex optimization problems in the real world. Therefore, the RL-EGD HH method is also proposed as our first task and also achieves better solutions for the problem area. Now, as a next step, we have compared it with two other HH methods. From the experiments it can be concluded that the RL-EGD method offers the lowest cost for most data instances and can be compared with other methods in the literature. In order to be able to plan supervisors such as professors, doctors and lecturers for the execution of the planned examinations, a further improvement would be to integrate this system into the timeframe system of supervision."}, {"heading": "Acknowledgements", "text": "I would like to thank my Rector Dr. Ni Lar Thein and all my honorable teachers who check my grammar mistakes and give valuable suggestions and advice."}], "references": [{"title": "An experimental study on hyper heuristic and exam timetabling", "author": ["B. Bilgin", "E. Ozcan", "Korkmaz E. E"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "An Examination Scheduling Model to Maximize Students\u2019 Study Time", "author": ["B. Bullnheimer"], "venue": "Practice And Theory of Automated Timetabling (PATAT\u2019s", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1997}, {"title": "An Extended Great Deluge Approach to the Examination Timetabling Problem", "author": ["B. McCollum", "P.J. McMullan", "A.J. Parkes", "E.K. Burke", "S. Abdullah"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": " Modified Great Deluge Algorithm based Auto Associated Neural Network for Bankruptcy Prediction in Banks\", International Journal of Computer Intelligence Reserach", "author": ["C. Pramodh", "V. Ravi"], "venue": "ISSN 097-1873", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2007}, {"title": "A tabu-search hyper heuristic for timetabling and roistering", "author": ["E. Burke", "G. Kendall", "E. Soubeiga"], "venue": "Journal of Heuristic,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "Solving Exam Timetabling Problems with Flex-Deluge Algorithm", "author": ["E.K. Burke", "Y. Bykov"], "venue": "PATAT", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2006}, {"title": "Reinforcement Learning with EGD based Hyper Heuristic System for Exam Timetabling Problem", "author": ["ES Sin"], "venue": "Proceedings of the IEEE-CCIS", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Development and application of hyper heuristic to personnel scheduling.", "author": ["E. Soubeiga"], "venue": "PhD thesis, School of Computer Science,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "A new reinforcement learning algorithm\u201d, STUDIA UNIV. BABES-BOLYAI, INFOMATICA, Volume XLVIII, Nubmer 1,2003", "author": ["Gabriela Serban"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2003}, {"title": "Non-Linear Great Deluge with learning Mechanism for Solving the Course Timetabling Problem\u201d, MIC-2009: The VIII Meta-heuristic International Conference", "author": ["H.J. Obit", "D. Landa-Silva", "D. Quelhadj", "M. Sevaux"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Reinforcement learning: A Survey", "author": ["K. Leslie", "Michael L. Littman"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1996}, {"title": "Great Deluge with Nonlinear Decay Rate for Solving Course Timetabling Problem", "author": ["Landa-Silva", "Obit", "H.H"], "venue": "Proceedings of the 2008 IEEE Conference on Intelligent System (IS", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "Recent Developments in Practical Exam Timetabling", "author": ["M. Carter", "G. Laporte"], "venue": "Lectures Notes in Computer Science 1153,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1996}, {"title": "Iterated Great Deluge for the Dynamic Facility Layout Problem", "author": ["Nabil Nahas", "Mustapha Nourelfath", "Daoud Ait-Kadi"], "venue": "in May,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}], "referenceMentions": [{"referenceID": 2, "context": "Early research works on hyper heuristic focused on the development of advanced strategies for choosing the heuristics to be applied at different points of the search [3].", "startOffset": 166, "endOffset": 169}, {"referenceID": 4, "context": "For instance, a Monte Carlo acceptance criterion is used by Ayob and Kendall in [6] while the great deluge acceptance criterion is used by Kendall and Mohamad in [7].", "startOffset": 80, "endOffset": 83}, {"referenceID": 5, "context": "Good results were presented and they suggested that the flex deluge method is relatively higher effective in the large-scale problems [8].", "startOffset": 134, "endOffset": 137}, {"referenceID": 3, "context": "Ravi also proposed four variants of Modified Great Deluge Algorithm based Auto Associative Neural Network (MGDAAANN) and worked on three different banks data sets [4].", "startOffset": 163, "endOffset": 166}, {"referenceID": 0, "context": "also reported that a simple random-great deluge based hyper heuristic was the second best after choice function-simulated annealing, considering the average performance of all hyper heuristic over a set of examination timetabling problem[1].", "startOffset": 237, "endOffset": 240}, {"referenceID": 2, "context": "And it seems that EGD is comparable to existing state of the art techniques, and form previous application to other data sets and a different problem domain (course timetabling)[3].", "startOffset": 177, "endOffset": 180}, {"referenceID": 13, "context": "The objective of the first step is to find a local optimum solution by EGD and the second step is a loop that allows the search process to alternate between diversification and intensification [18].", "startOffset": 193, "endOffset": 197}, {"referenceID": 2, "context": "Typically one cannot satisfy all soft constraints thus there is a need for a performance function measuring the degree of satisfaction of these constraints [3].", "startOffset": 156, "endOffset": 159}, {"referenceID": 1, "context": "The primary hard and soft constraints in exam timetabling problem can be found in [2].", "startOffset": 82, "endOffset": 85}, {"referenceID": 1, "context": "These heuristics are also called the slot move in [2].", "startOffset": 50, "endOffset": 53}, {"referenceID": 2, "context": "It can be specified in terms of percentage or number of total moves in the process [3].", "startOffset": 83, "endOffset": 86}, {"referenceID": 5, "context": "This method enables the search procedure to develop with an adaptive level of strictness of acceptance for each particular move [8].", "startOffset": 128, "endOffset": 131}, {"referenceID": 12, "context": "The initial water level is usually set to the quality of the initial solution and then decreased by a non-linear function proposed in [17] as follows:", "startOffset": 134, "endOffset": 138}, {"referenceID": 6, "context": "The first HH method, RL-EGD has already been proposed and published as our previous job [10].", "startOffset": 88, "endOffset": 92}, {"referenceID": 3, "context": "Input: UtilityValue[ 4], noOfHeuristic=4, maxIteration=1000, iterationCount=1, LLHs; 2.", "startOffset": 19, "endOffset": 23}, {"referenceID": 3, "context": "Input: UtilityValue[ 4], noOfHeuristic=4, maxIteration=1000, iterationCount=1, LLHs; CurrentCost=0.", "startOffset": 19, "endOffset": 23}, {"referenceID": 11, "context": "For the values of these parameters, we follow the reference [16] because that paper provided the better results.", "startOffset": 60, "endOffset": 64}, {"referenceID": 3, "context": "Input: utilityValue[4],noOfHeuristic=4,maxIteration=1000, iterationCount=1, LLHs; CurrentCost, OldCost, \u03b2 =0.", "startOffset": 19, "endOffset": 22}], "year": 2012, "abstractText": "Today, University Timetabling problems are occurred annually and they are often hard and time consuming to solve. This paper describes Hyper Heuristics (HH) method based on Great Deluge (GD) and its variants for solving large, highly constrained timetabling problems from different domains. Generally, in hyper heuristic framework, there are two main stages: heuristic selection and move acceptance. This paper emphasizes on the latter stage to develop Hyper Heuristic (HH) framework. The main contribution of this paper is that Great Deluge (GD) and its variants: Flex Deluge(FD), Nonlinear(NLGD), Extended Great Deluge(EGD) are used as move acceptance method in HH by combining Reinforcement learning (RL).These HH methods are tested on exam benchmark timetabling problem and best results and comparison analysis are reported.", "creator": "Microsoft\u00ae Word 2010"}}}