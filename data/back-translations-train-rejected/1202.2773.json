{"id": "1202.2773", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Feb-2012", "title": "Decentralized Multi-agent Plan Repair in Dynamic Environments", "abstract": "Achieving joint objectives by teams of cooperative planning agents requires significant coordination and communication efforts. For a single-agent system facing a plan failure in a dynamic environment, arguably, attempts to repair the failed plan in general do not straightforwardly bring any benefit in terms of time complexity. However, in multi-agent settings the communication complexity might be of a much higher importance, possibly a high communication overhead might be even prohibitive in certain domains. We hypothesize that in decentralized systems, where coordination is enforced to achieve joint objectives, attempts to repair failed multi-agent plans should lead to lower communication overhead than replanning from scratch.", "histories": [["v1", "Mon, 13 Feb 2012 15:57:51 GMT  (78kb,D)", "http://arxiv.org/abs/1202.2773v1", "21 pages, 5 algorithms, 3 figures. This is the full version of an extended abstract published in Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2012), Conitzer, Winikoff, Padgham, and van der Hoek (eds.), June, 4--8, 2012, Valencia, Spain"]], "COMMENTS": "21 pages, 5 algorithms, 3 figures. This is the full version of an extended abstract published in Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2012), Conitzer, Winikoff, Padgham, and van der Hoek (eds.), June, 4--8, 2012, Valencia, Spain", "reviews": [], "SUBJECTS": "cs.AI cs.MA", "authors": ["anton\\'in komenda", "peter nov\\'ak", "michal p\\v{e}chou\\v{c}ek"], "accepted": false, "id": "1202.2773"}, "pdf": {"name": "1202.2773.pdf", "metadata": {"source": "CRF", "title": "Decentralized Multi-agent Plan Repair in Dynamic Environments\u2217", "authors": ["Anto\u0144\u0131n Komenda", "Peter Nov\u00e1k", "Michal P\u011bchou\u010dek"], "emails": [], "sections": [{"heading": null, "text": "The contribution of the paper presented is threefold: First, we formally present the problem of repairing multi-agent plans and formally present the core hypothesis underlying our work. Second, we propose three algorithms for repairing multi-agent plans that reduce the problem to specific cases of the problem of multi-agent planning. Finally, we present results of experimental validation that confirm the core hypothesis of the paper."}, {"heading": "1 Motivation", "text": "This year, it is as far as ever in the history of the city, where it is as far as never before."}, {"heading": "2 Multi-agent planning", "text": "The classic one-agent planning problem is characterized by a series of states with a unique initial state, a final state (a series of final states), and a series of measures that represent the transitions between these states that the system performs during the execution of the measures. We define the multi-agent planning problem as an extension of the classic one-agent planning. We consider a number of cooperative and coordinated actors with possibly different capabilities (measures) that simultaneously plan and then execute their local plans so that they achieve a common objective.An example of a multi-agent planning problem is defined by: i) an environment characterized by a state space, ii) an infinite number of actors, each characterized by a set of primitive measures (or capabilities) that it can execute in the environment, iii) an initial state in which the actors begin their activities, and iv) a characterization of the desired target states, we present the problem to the advanced planning algorithm and present the initial solution to the problem."}, {"heading": "2.1 Preliminaries", "text": "Consider a set of atoms {p1,., pn}. A state is a set of terms from a language L = {p1,.., pn,..,.., where \u00ac p denotes a negation of p. However, we also assume that the standard tautology p \u00b2 p need not be complete for each p \u00b2 l, i.e., we demand that all states be consistent, i.e. that for one state s \u00b2 l we have these p \u00b2 s, if and only if \u00ac p / s. Note in general that the states need not be complete, i.e., it could be that there is a p \u00b2 L, so that {p, \u00ac p} 6 s denotes the set of all states, and we assume that there is a differentiated state in which we denote an undefined state in which the overall system can be. To simplify the notation, we extend the negation to states as follows."}, {"heading": "2.2 The Problem of Multi-agent Planning", "text": "A multi-agent planning problem is a tuple planning problem = (A, s0, Sg), where A is a series of agent planning problems. (A, s0, Sg) Before formally defining the concept of a solution to a multi-agent planning problem, we first present a sequence of auxiliary agent schedules. (P) In the face of an agent plan, a single agent plan P is a sequence of actions-a1,..., ak, s.t., ai, [i] denotes the i-th action in P, or P [i] = in case i is greater than the length of P, which in turn is denoted as action sequence. A team of agents-A = 1,."}, {"heading": "2.3 Planning Algorithm", "text": "The above formulation of the multi-agent scheduling problem is well consistent with the original formulation of the MA Strips scheduling due to Brafman and Domshlak [3]. The authors there additionally distinguish between the public and private actions of each actor. An action is always public if its requirements or effects involve atoms that occur in the preconditions or effects of an action associated with another actor of the team. Formally considered, there is a multi-agent team that performs a multi-agent team of individual actions. The series of public actions is defined as Actpub = [a], j = c), a), a), c, b), c), c), c), c), c), c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c,"}, {"heading": "3 Multi-agent plan repair", "text": "Consider a multi-agent planning problem (A, s0, Sg) and a plan P (A, s0, sg) that is unable to solve a problem (A, s0, sg) and a plan P (A, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s2, s"}, {"heading": "3.1 Back-on-track Repair", "text": "The result is that the general state of the system is not what the undisturbed execution of the plan expects in the particular time step. A simple idea to fix the problem is to employ a multi-agent planner to create a plan from the failed state to the originally expected state and then follow the rest of the original multi-agent plan from the step in which the failure occurred. The following approach to repair the multi-agent plan, which was shaped back-on-track (BoT) repair, is inspired by this idea, in fact a slight generalization of Plan 5 (back-on-track repair). Let it be, P, sf, k) a multi-agent plan repair problem and vice versa (BoT) repair repair plan inspired by this idea, in fact a slight generalization of Plan 5 (back-on-track repair)."}, {"heading": "3.2 Simple Lazy Repair", "text": "The back-on-track multi-agent plan repair approach seeks to compute a new prefix to a suffix of the original plan and repair the failure by concatenating it. An alternative approach, characterized by laziness, seeks to preserve the remainder of the original multi-agent plan and to close the gap between the state resulting from the failed plan execution and a target state of the original planning problem.Be sf the state resulting from a failure to execute a multi-agent plan P in a step k.We say that a sequence of joint actions P is an executable remainder of P from step k and the state sf iff there is a sequence of states sk,.., s | P |, seek that sk = sf, si + 1 = si, P \u2032 and for each step i and each agent j, we have that P \u2032 [i \u2212 k + 1, j] that the sequence of states sk exists, j] that the sequence of states, sk, and for each step i and each agent j."}, {"heading": "3.3 Repeated Lazy Repair", "text": "Dynamic Environmental Plan failures occur repeatedly, i.e., even after repairing a failed plan, the repair agent may fail again (msgorithm = 7). In this situation, both the back-on-track and the lazy multi-agent plan repair algorithms result in an extension of the plan that is actually executed. In the case of the back-on-track approach, this is unavoidable because after the repair, the subsequent plan execution process processes the newly added plan fragment immediately. However, in the case of a rotten repair, if another failure occurs during the execution of the repaired plan, an extension of the entire multiagent plan is not always necessary. The intuition behind the repeated lazy plan repair approach is that failure during the execution of an already repaired plan is irrelevant and its result can be discarded unless the failure already occurred in the plan fragment of the previous repair. The following definition formally extends the rotten plan repair approach."}, {"heading": "4 Experimental validation", "text": "In order to verify Hypothesis 1, we conducted a series of experiments with implementations of the multi-agent plan repair algorithms described in Section 3. In the following, we first describe the experimental setup used for the experiments, then interpret the collected data and return to Hypothesis 1."}, {"heading": "4.1 Experimental Setup", "text": "In the first phase of the process, where the question is whether it is a \"business as usual\" as it has been in the second phase of the process, the question is whether there will be a \"business as usual?\" - The second phase of the process, where there will be a \"business as usual?\" is not yet over. - The third phase of the process, where there will be a \"business as usual?\" is far from over. - The third phase, where there will be a \"business as usual?\" is as in the second phase, where there will be a \"business as usual.\""}, {"heading": "4.2 Test Problems, Algorithms and Metrics", "text": "The experiments were conducted on three planning domains, the domains coming from the standard benchmark single-agent ICP Planning Domains, which are limited to [1]. Similar to [11], we chose domains that are easily modifiable to multi-agent planning problems: logistics (3 agents), rovers (3 agents) and satellites (2-5 agents). The logistics domain is a tightly coordinated one, as it requires relatively frequent coordination between the stakeholders involved: planes and trucks have to wait for each other to load or unload the transported packets. The rover domain is loosely coordinated by requiring coordination only at the end of the plans: there is a single common communication channel between one of the rovers and the receiving station. Finally, the satellite domain is uncoordinated as it does not require coordination of the transported packets."}, {"heading": "4.3 Results and Discussion", "text": "The mentioned hsci-eaJnlhsrdcnlhsrcnUeahuc nvo nlrhee\u00fccnlhsrcnlhsrc\u00fciuiuiuiueaeBnln in the eeirlrgVnlrteeaeaeegnln rfnde nlrlrlrlrlhteeaeaeaeFngn in the eeirg\u00dfeaeBnn nvo nlrfnde nlrlrlrlrrrrrteeaeaeaeaeBnn in the eeirg\u00dfeaeeaeBnn, ndne sdsa sdsa sdsas the nlrf\u00fc ide nllrf\u00fc nlrrf\u00fc nlrrrrrrrrdne nlteeaeaeaeaeaeaeaef\u00fc \"for the eeirg\u00fc, ndne sdsa sdsa sdsa sdsa sdsas the nlrf\u00fc nlrf\u00fc nlrf\u00fc nlrf\u00fc nlrf\u00fc nlrdr the errrdne nlrdr nr nlrrrdr nr nr nlrrrrrnr nr nr nr nr nlrrrrrnr nr nr nr nr nr nr nr nr nr nr nrrrrr nr nr nr nr nrrrrrrr nr nr nr nr nrr nr nr nrrr nr nrr nr nr nr nr nr nr nr nr nr nr nr nr nr nrr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr nr n"}, {"heading": "5 Final remarks", "text": "In the presented paper, we formally introduced the problem of repairing multi-agents, proposed three algorithms to solve this problem, and experimentally confirmed the hypothesis that the approach of repairing multi-agents under certain conditions tends to be more efficient in terms of the communication effort it generates compared to the replanning approach. Our results support the paper's core hypothesis, and we have additionally conducted a series of experiments validating its boundary conditions. The research line underlying this paper correlates well with recent work on the subdomains of classical single agents, such as partial monitoring and repair of tarpaulins [9], compliant and contingent planning, reuse of tarpaulins, and plan adaptation are also handled by approaches based on Markov's decision-making processes. The main difference to our approach is that the state perturbations used in our experiments have a priority unknown probability."}], "references": [{"title": "On the complexity of plan adaptation by derivational analogy in a universal classical planning framework", "author": ["T.C. Au", "H. Munoz-Avila"], "venue": "Advances in Case-Based Reasoning,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "From one to many: Planning for loosely coupled multi-agent systems", "author": ["Ronen I. Brafman", "Carmel Domshlak"], "venue": "In Proc. of ICAPS,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "STRIPS: A new approach to the application of theorem proving to problem solving", "author": ["R. Fikes", "N. Nilsson"], "venue": "In Proc. of the 2nd International Joint Conference on Artificial Intelligence,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1971}, {"title": "Plan stability: Replanning versus plan repair", "author": ["Maria Fox", "Alfonso Gerevini", "Derek Long", "Ivan Serina"], "venue": "In Proc. of ICAPS,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "The FF planning system: Fast plan generation through heuristic search", "author": ["J\u00f6rg Hoffmann", "Bernhard Nebel"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2001}, {"title": "Multi-agent plan repairing", "author": ["Anto\u0144\u0131n Komenda", "Peter Nov\u00e1k"], "venue": "Proceedings of Decision Making in Partially Observable, Uncertain Worlds: Exploring Insights from Multiple Communities,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2011}, {"title": "Self-interested planning agents using plan repair", "author": ["Roman van der Krogt", "Mathijs de Weerdt"], "venue": "In Proceedings of the ICAPS 2005 Workshop on Multiagent Planning and Scheduling,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2005}, {"title": "Monitoring the execution of partial-order plans via regression", "author": ["Christian Muise", "Sheila A McIlraith", "J Christopher Beck"], "venue": "In Proc. of 22nd International Joint Conference on Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Plan reuse versus plan generation: a theoretical and empirical analysis", "author": ["B. Nebel", "Koehler J"], "venue": "Artificial Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1995}, {"title": "A general, fully distributed multi-agent planning algorithm", "author": ["Raz Nissim", "Ronen I. Brafman", "Carmel Domshlak"], "venue": "In Proc. of AAMAS,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2010}], "referenceMentions": [{"referenceID": 6, "context": ", [8, 2, 5]).", "startOffset": 2, "endOffset": 11}, {"referenceID": 0, "context": ", [8, 2, 5]).", "startOffset": 2, "endOffset": 11}, {"referenceID": 3, "context": ", [8, 2, 5]).", "startOffset": 2, "endOffset": 11}, {"referenceID": 8, "context": "However, in [10], Nebel and Koehler theoretically analyzed plan re-use (plan repair), and conclude that in general it does not bring any benefit over replanning in terms of computational time complexity.", "startOffset": 12, "endOffset": 16}, {"referenceID": 5, "context": "Besides our preliminary approach in [7], this aspect of multi-agent planning and plan repair, while obviously important with arrival of truly distributed algorithms for multi-agent planning, such as the one by Nissim et al.", "startOffset": 36, "endOffset": 39}, {"referenceID": 9, "context": "[11] did not witness considerable attention of the community yet.", "startOffset": 0, "endOffset": 4}, {"referenceID": 1, "context": "Firstly, after introducing the general problem of multi-agent planning stemming from the formulation due to Brafman and Domshlak [3] in Section 2, in subsequent Section 3 we formally introduce the multi-agent plan repair problem and formally state", "startOffset": 129, "endOffset": 132}, {"referenceID": 1, "context": "The above formulation of the multi-agent planning problem is well in line with the original formulation of MA-Strips planning due to Brafman and Domshlak [3].", "startOffset": 154, "endOffset": 157}, {"referenceID": 1, "context": "Algorithm 1 lists the original multi-agent planning algorithm MA-Plan by Brafman and Domshlak in [3].", "startOffset": 97, "endOffset": 100}, {"referenceID": 9, "context": "in [11] adapted the original blueprint algorithm described above to a distributed setting.", "startOffset": 3, "endOffset": 7}, {"referenceID": 9, "context": "[11].", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "In the first phase, for a given domain a multi-agent plan was computed using the MA-Plan algorithm based on a distributed constraint satisfaction solver for computing the candidate coordination plans and implementation of a best-first-search action planning algorithm as part of FF [6] for computing the local, single-agent plans.", "startOffset": 282, "endOffset": 285}, {"referenceID": 9, "context": "also used for the experiments conducted in their paper [11].", "startOffset": 55, "endOffset": 59}, {"referenceID": 9, "context": "Similarly to [11], we chose domains, which are straightforwardly modifiable to multi-agent planning problems: logistics (3 agents), rovers (3 agents), and satellites (2\u20135 agents).", "startOffset": 13, "endOffset": 17}, {"referenceID": 7, "context": "The line of research underlying this paper well correlates with recent works on classical single-agent planning sub-domains, such as partial ordered plan monitoring and repairing [9], conformant and contingency planning, plan reuse and plan adaptation.", "startOffset": 179, "endOffset": 182}, {"referenceID": 5, "context": "Our own recent approach to the problem of multi-agent plan repair in [7] can be seen only as a precursor to the formal and rigorous treatment of the problem in this paper.", "startOffset": 69, "endOffset": 72}, {"referenceID": 2, "context": "Secondly, the framework is not able to describe concurrent resource consumption, which is not an issue in single-agent Strips [4] planning, but in the multi-agent extension two individual concurrently executed actions might \u201cconsume\u201d the same precondition, even though it is undesirable in the domain.", "startOffset": 126, "endOffset": 129}], "year": 2013, "abstractText": "Achieving joint objectives by teams of cooperative planning agents requires significant coordination and communication efforts. For a singleagent system facing a plan failure in a dynamic environment, arguably, attempts to repair the failed plan in general do not straightforwardly bring any benefit in terms of time complexity. However, in multi-agent settings the communication complexity might be of a much higher importance, possibly a high communication overhead might be even prohibitive in certain domains. We hypothesize that in decentralized systems, where coordination is enforced to achieve joint objectives, attempts to repair failed multi-agent plans should lead to lower communication overhead than replanning from scratch. The contribution of the presented paper is threefold. Firstly, we formally introduce the multi-agent plan repair problem and formally present the core hypothesis underlying our work. Secondly, we propose three algorithms for multi-agent plan repair reducing the problem to specialized instances of the multi-agent planning problem. Finally, we present results of experimental validation confirming the core hypothesis of the paper.", "creator": "LaTeX with hyperref package"}}}