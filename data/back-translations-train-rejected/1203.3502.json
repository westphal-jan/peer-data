{"id": "1203.3502", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Mar-2012", "title": "The Cost of Troubleshooting Cost Clusters with Inside Information", "abstract": "Decision theoretical troubleshooting is about minimizing the expected cost of solving a certain problem like repairing a complicated man-made device. In this paper we consider situations where you have to take apart some of the device to get access to certain clusters and actions. Specifically, we investigate troubleshooting with independent actions in a tree of clusters where actions inside a cluster cannot be performed before the cluster is opened. The problem is non-trivial because there is a cost associated with opening and closing a cluster. Troubleshooting with independent actions and no clusters can be solved in O(n lg n) time (n being the number of actions) by the well-known \"P-over-C\" algorithm due to Kadane and Simon, but an efficient and optimal algorithm for a tree cluster model has not yet been found. In this paper we describe a \"bottom-up P-over-C\" O(n lg n) time algorithm and show that it is optimal when the clusters do not need to be closed to test whether the actions solved the problem.", "histories": [["v1", "Thu, 15 Mar 2012 11:17:56 GMT  (292kb)", "http://arxiv.org/abs/1203.3502v1", "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)"]], "COMMENTS": "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)", "reviews": [], "SUBJECTS": "cs.AI cs.DS", "authors": ["thorsten j ottosen", "finn verner jensen"], "accepted": false, "id": "1203.3502"}, "pdf": {"name": "1203.3502.pdf", "metadata": {"source": "CRF", "title": "The Cost of Troubleshooting Cost Clusters with Inside Information", "authors": ["Thorsten J. Ottosen", "Finn V. Jensen"], "emails": ["nesotto@cs.aau.dk,", "fvj@cs.aau.dk"], "sections": [{"heading": null, "text": "Decision Theory Troubleshooting is about minimizing the expected cost of solving a specific problem, such as repairing a complicated artificial device. In this article, we look at situations where you have to disassemble a part of the device in order to gain access to specific clusters and actions. In particular, we examine troubleshooting with independent actions in a cluster tree, where actions within a cluster cannot be performed before opening the cluster. The problem is not trivial because there are costs associated with opening and closing a cluster. Troubleshooting with independent actions and without clusters can be solved in O (n \u00b7 lg n) time (n is the number of actions) by the well-known \"P-over-C\" algorithm due to Kadane and Simon, but an efficient and optimal algorithm for a tree cluster model has not yet been found. In this post, we describe a \"bottom-up P-over-C (n \u00b7 n) time (n \u00b7 n) algorithm that needs to be solved, and if the cluster is not optimal to show that it is a problem to be solved."}, {"heading": "1 INTRODUCTION", "text": "The premise is that after each action we can observe for free whether the problem has been solved. The domain is assumed to be insecure, i.e., solutions may be imperfect and information may not be conclusive. In the face of a model that describes the uncertainty and cost of actions and questions, the goal is to calculate a strategy for solving the problem with the lowest expected costs. If the model has the following assumptions: (a) The problem is due to a single error, (b) Different actions address different errors, (c) Costs do not depend on the previous story, and (d) there are no questions, then the problem is solvable in O (n \u00b7 lg n) time in which n is the number of actions, (b) different actions address different errors, (c) Costs depend on the previous story."}, {"heading": "2 PRELIMINARIES", "text": "F = {f1,., fm} is a series of errors that describe the possible causes of the problem. < p) Each action has two possible outcomes, namely \"\u03b1 = yes\" (the problem has been fixed) and \"\u03b1 = no\" (the action failed to fix the problem). Each action has a series of measures necessary to perform the action. Finally, each action has two possible outcomes, namely \"\u03b1 = yes\" (the problem has been fixed) and \"\u03b1 = no\" (the action failed to fix the problem). Each action has a positive cost description required to perform the action."}, {"heading": "3 THE EXTENDED P-OVER-C ALGORITHM", "text": "The standard \"P-over-C\" algorithm works by calculating the actions based on \u03b2-\u03b2 efficiency (\u03b2 efficiency). The advanced algorithm works in a similar way, but it also takes into account the efficiency of a cluster: If a cluster is more efficient than all remaining actions and clusters, we should perform some actions from that cluster. Definition 2: The efficiency of a cluster K is defined by sorting the actions of the maximizing measures set by decreasing efficiency. It turns out that it is quite easy to calculate the efficiency of a cluster. The following result is a slightly more informative version of the one of (Langseth and Jensen, 2001): Lemma 3. Let K be a cluster."}, {"heading": "4 CORRECTNESS OF THE ALGORITHM", "text": "Let us begin with a proof for Lemma 3: Proof. We will use the fact that we are not using c + d'a c + d'a cfor any weak order (e.g. and \u2264) for positive realities. Let us make M consist of actions in K that look like ef (M) is maximized. Then ef (M) is considered equal as if f + a (P) is chosen as independent. Let us continue to say that p + x x x as a consequence of K = \u2212 sequence. Let us further say that p + p's as a consequence of K\\ {s. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it happen. Let it. Let it happen. Let it happen. Let it. Let it happen. Let it happen. Let it. Let it happen. Let it happen. Let it happen. Let it happen. Let it. Let it happen. Let it happen."}, {"heading": "5 THE TREE CLUSTER MODEL", "text": "In this section, we will examine an extension of the flat cluster model, in which the clusters can be arranged as a tree. We will call such a model for a tree cluster model, and an example is given in Figure 2. In the tree cluster model, the ECR will not allow the simple decomposition of Equation 1. The complication is that several clusters must be opened before they perform an action in a deeply nested cluster. Therefore, we will present a new algorithm model that solves the tree cluster model in O. (n \u00b7 lg) time.First, we need some additional definitions. The conditional costs we apply, we will now depend on how many clusters were opened on the path from the root K to Ki."}, {"heading": "6 CONCLUSION", "text": "We have presented an algorithm that provides an optimal troubleshooting sequence in O (n \u00b7 lg n) time (n is the number of actions) for scenarios in which the cost clusters form a tree and have inside information. This is a useful result in itself, but there is more to it. When evaluating troubleshooting algorithms, you need to distinguish between offline and online activities. If your task is offline, the time complexity of your algorithm need not be particularly important as long as the result can be easily stored (such as an optimal action sequence). However, if the decision support system is flexible, it must allow the user to interact with the recommendations and let the system calculate an optimal next action based on alternative information.In addition, for many scenarios, you will request the online calculation of an optimal action sequence; for example, if the model includes questions and tests. For this type of scenarios, a direct representation of an optimal strategy may require too much space."}, {"heading": "7 ACKNOWLEDGEMENTS", "text": "We thank the three anonymous reviewers for their excellent feedback and Sven Skyum for the help with Lemma 3."}], "references": [{"title": "Decision-theoretic troubleshooting", "author": ["D. Heckerman", "J.S. Breese", "K. Rommelse"], "venue": "Communications of the ACM,", "citeRegEx": "Heckerman et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Heckerman et al\\.", "year": 1995}, {"title": "The SACSO methodology for troubleshooting complex systems", "author": ["F.V. Jensen", "U. Kj\u00e6rulff", "B. Kristiansen", "C. Skaanning", "J. Vomlel", "M. Vomlelov\u00e1"], "venue": "Artificial Intelligence for Engineering Design, Analysis and Manufacturing,", "citeRegEx": "Jensen et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Jensen et al\\.", "year": 2001}, {"title": "Optimal strategies for a class of constrained sequential problems", "author": ["J. Kadane", "H. Simon"], "venue": "The Annals of Statistics,", "citeRegEx": "Kadane and Simon.,? \\Q1977\\E", "shortCiteRegEx": "Kadane and Simon.", "year": 1977}, {"title": "A comparison of decision analysis and expert rules for sequential diagnosis", "author": ["J. Kalagnanam", "M. Henrion"], "venue": "In UAI \u201988: Proceedings of the Fourth Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "Kalagnanam and Henrion.,? \\Q1990\\E", "shortCiteRegEx": "Kalagnanam and Henrion.", "year": 1990}, {"title": "A troubleshooting approach with dependent actions", "author": ["E. Koca", "T. Bilgic"], "venue": "ECAI 2004: 16th European Conference on Artificial Intelligence,", "citeRegEx": "Koca and Bilgic.,? \\Q2004\\E", "shortCiteRegEx": "Koca and Bilgic.", "year": 2004}, {"title": "Heuristics for two extensions of basic troubleshooting", "author": ["H. Langseth", "F.V. Jensen"], "venue": "In Proceedings of the Seventh Scandinavian Conference on Artificial Intelligence,", "citeRegEx": "Langseth and Jensen.,? \\Q2001\\E", "shortCiteRegEx": "Langseth and Jensen.", "year": 2001}, {"title": "Complexity of decision-theoretic troubleshooting", "author": ["M. Vomlelov\u00e1"], "venue": "Int. J. Intell. Syst.,", "citeRegEx": "Vomlelov\u00e1.,? \\Q2003\\E", "shortCiteRegEx": "Vomlelov\u00e1.", "year": 2003}, {"title": "Troubleshooting when action costs are dependent with application to a truck engine", "author": ["H. Warnquist", "M. Nyberg", "P. S\u00e4by"], "venue": "In Proceeding of the Tenth Scandinavian Conference on Artificial Intelligence,", "citeRegEx": "Warnquist et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Warnquist et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 2, "context": "This algorithm is the wellknown \u201dP-over-C\u201d algorithm by (Kadane and Simon, 1977) which was first brought into a troubleshooting context by (Kalagnanam and Henrion, 1990).", "startOffset": 56, "endOffset": 80}, {"referenceID": 3, "context": "This algorithm is the wellknown \u201dP-over-C\u201d algorithm by (Kadane and Simon, 1977) which was first brought into a troubleshooting context by (Kalagnanam and Henrion, 1990).", "startOffset": 139, "endOffset": 169}, {"referenceID": 6, "context": "Furthermore, if any of the above assumptions are relaxed without restrictions, the problem becomes NP-hard (Vomlelov\u00e1, 2003).", "startOffset": 107, "endOffset": 124}, {"referenceID": 4, "context": "Troubleshooting without assumption (b) can also be somewhat simplified due to the dependency set algorithm of (Koca and Bilgic, 2004).", "startOffset": 110, "endOffset": 133}, {"referenceID": 5, "context": "(Langseth and Jensen, 2001) proposed to relax assumption (c) slightly by considering a model where the actions can be partitioned into a flat set of socalled cost clusters (see Figure 1).", "startOffset": 0, "endOffset": 27}, {"referenceID": 7, "context": "(Warnquist et al., 2008) describe a slightly more general cost cluster framework, but they do not address the issue of finding an efficient algorithm.", "startOffset": 0, "endOffset": 24}, {"referenceID": 2, "context": "Theorem 1 (Kadane and Simon (1977)).", "startOffset": 11, "endOffset": 35}, {"referenceID": 1, "context": "Lemma 1 (Jensen et al. (2001)).", "startOffset": 9, "endOffset": 30}, {"referenceID": 3, "context": "This easy computation of the probabilities can be dated back to (Kalagnanam and Henrion, 1990) and (Heckerman et al.", "startOffset": 64, "endOffset": 94}, {"referenceID": 0, "context": "This easy computation of the probabilities can be dated back to (Kalagnanam and Henrion, 1990) and (Heckerman et al., 1995).", "startOffset": 99, "endOffset": 123}, {"referenceID": 5, "context": "The following result is a slightly more informative version of the one from (Langseth and Jensen, 2001): Lemma 3.", "startOffset": 76, "endOffset": 103}, {"referenceID": 5, "context": "Algorithm 1 The extended P-over-C algorithm (Langseth and Jensen, 2001)", "startOffset": 44, "endOffset": 71}], "year": 2010, "abstractText": "Decision theoretical troubleshooting is about minimizing the expected cost of solving a certain problem like repairing a complicated man-made device. In this paper we consider situations where you have to take apart some of the device to get access to certain clusters and actions. Specifically, we investigate troubleshooting with independent actions in a tree of clusters where actions inside a cluster cannot be performed before the cluster is opened. The problem is non-trivial because there is a cost associated with opening and closing a cluster. Troubleshooting with independent actions and no clusters can be solved in O(n \u00b7 lg n) time (n being the number of actions) by the well-known \u201dP-over-C\u201d algorithm due to Kadane and Simon, but an efficient and optimal algorithm for a tree cluster model has not yet been found. In this paper we describe a \u201dbottom-up P-over-C\u201d O(n \u00b7 lg n) time algorithm and show that it is optimal when the clusters do not need to be closed to test whether the actions solved the problem.", "creator": "TeX"}}}