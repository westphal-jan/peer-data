{"id": "1203.3531", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Mar-2012", "title": "Solving Multistage Influence Diagrams using Branch-and-Bound Search", "abstract": "A branch-and-bound approach to solving influ- ence diagrams has been previously proposed in the literature, but appears to have never been implemented and evaluated - apparently due to the difficulties of computing effective bounds for the branch-and-bound search. In this paper, we describe how to efficiently compute effective bounds, and we develop a practical implementa- tion of depth-first branch-and-bound search for influence diagram evaluation that outperforms existing methods for solving influence diagrams with multiple stages.", "histories": [["v1", "Thu, 15 Mar 2012 11:17:56 GMT  (287kb)", "http://arxiv.org/abs/1203.3531v1", "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)"]], "COMMENTS": "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["changhe yuan", "xiaojian wu", "eric a hansen"], "accepted": false, "id": "1203.3531"}, "pdf": {"name": "1203.3531.pdf", "metadata": {"source": "CRF", "title": "Solving Multistage Influence Diagrams using Branch-and-Bound Search", "authors": ["Changhe Yuan", "Xiaojian Wu", "Eric A. Hansen"], "emails": ["cyuan@cse.msstate.edu,", "hansen@cse.msstate.edu,", "xw83@msstate.edu"], "sections": [{"heading": null, "text": "A branch-and-bound approach to solving influence charts has been suggested in the literature, but seems never to have been implemented and evaluated - apparently due to the difficulties in calculating effective boundaries for cross-industry and cross-border search. In this paper, we describe how effective boundaries can be efficiently calculated, and we develop a practical implementation of depth-oriented search for influence charts that surpasses existing methods for solving influence charts in multiple stages."}, {"heading": "1 Introduction", "text": "An influence diagram [7] is a concise representation of the relationships between random variables, decisions and preferences in an area that provides a framework for decision-making under uncertainty. Many algorithms are designed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21]. Most of these algorithms, whether they build a secondary structure or not, are based on the dynamic programming approach proposed from the bottom up. They start by solving small, low decision problems and gradually build on these results to solve major problems until the solution to the global decision problem is found. The disadvantage of these methods is that they can waste computation in solving decision scenarios that have zero probability or that they are unattainable by following an optimal decision policy. This disadvantage can be overcome by adopting a two-band approach to solving an influence diagram that uses all possible decision-making scenarios."}, {"heading": "2 Background", "text": "We start with a brief overview of influence diagrams and algorithms for their solution. We also present an example of multi-level decision-making that will serve to illustrate the paper's results."}, {"heading": "2.1 Influence Diagrams", "text": "In fact, it is as if people are able to survive themselves. (...) It is as if people are able to survive themselves. (...) It is as if people were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves."}, {"heading": "2.2 Example", "text": "To illustrate decision-making using multi-level influence diagrams, consider a simple maze navigation problem [6,14]. Figure 1 shows four examples of the problem. Shaded tiles represent walls, white tiles represent moving space, and white tiles with an asterisk represent target states. An agent is randomly placed in a non-target state. He has five available actions that he can use to move toward the target: he can move one step in one of the four compass directions, or he can stay in place. The effect of a motion action is stochastical. The agent successfully moves in the intended direction with probability 0.89. He does not move with probability 0.089, he moves sideways with probability 0.02 (0.01 for each side), and he moves backwards with probability 0.001. If motion in any direction would lead him into a wall, this motion has zero probability, and the remaining probabilities are normalized."}, {"heading": "2.3 Evaluation algorithms", "text": "In this case, it is a purely reactionary project, capable of achieving the aforementioned objectives."}, {"heading": "3 Computing bounds", "text": "In fact, the fact is that most of them will be able to move to another world, in which they are able, in which they are able to integrate, and in which they are able, in which they are able to change and change the world."}, {"heading": "4 Branch-and-bound search", "text": "In this section, we will describe how to use the top influence chart to calculate the boundaries for a deepest bifurcated search algorithm that solves the original influence chart. We will begin by showing how to present the search space as an AND / OR tree. A naive approach to calculating boundaries requires evaluating the entire top influence chart at each OR node of the search tree, which is mathematically prohibitive. To make an industry and boundary-based search feasible, we will rely on a step-by-step approach to calculating boundaries proposed by Yuan and Hansen [20] to solve the MAP problem in Bayesian networks using industry and bound search. We will show how to adapt this approach to solve influence charts efficiently."}, {"heading": "4.1 AND/OR tree search", "text": "In fact, it is a matter of a way in which people are able to live, to live, to live and to live, to live and to live. (...) It is as if people are able to change the world. (...) It is as if they were able to change the world. (...) It is as if they were able to change the world. (...) It is as if they were able to change the world. (...) It is as if they are able to change the world. (...) It is as if they are able to change the world}, {"heading": "4.2 Incremental join tree evaluation", "text": "It is clear that repeated join-tree evaluations need to be performed in calculating the upper limits and conditional probabilities. A naive approach is to determine the states of instantiated variables as evidence and to perform a full join-tree evaluation, but this is too costly. We can use an efficient incremental join-tree evaluation method to calculate the probabilities and upper limit-specific tools based on the incremental join-tree evaluation method proposed by Yuan and Hansen to solve the MAP problem. The key idea is that we can choose a specific order of variables that meets the limitations of Equation (5) so that an incremental join-tree evaluation scheme can be used to calculate the information. Given such an order, we know exactly which variables were searched for and which variable will be searched next at each search step. We just need messages from the join parts of the tree are connected to the ones already searched in the next one."}, {"heading": "4.3 Efficient backtracking", "text": "We use depth-first branch-and-bound (DFBnB) to take advantage of the efficient incrementally bound computation. Depth-first search ensures that the search does not have to jump to another search branch before tracing is required. In other words, the join tree only needs to work with one search history at a time. We need to return to a previous search node once we have completed a search branch or realize that a search branch is not promising and should be trimmed. We need to withdraw all newly created evidence since generating that search node and return the join tree to its previous state. One way to achieve this is to reinitialize the join tree with correct evidence and perform a full join tree evaluation, which we have already pointed out is too costly. Instead, we store the potentials and delimiters along the message propagation path before changing them, either by rewriting them with backtracking or simply rewriting them to the evidence last."}, {"heading": "5 Empirical Evaluation", "text": "This year it is so far that it will only take a few days until it is so far, until it is so far."}, {"heading": "6 Conclusion", "text": "We described the first implementation of a two-part search algorithm to make the approach mathematically feasible. Specifically, we described an efficient approach to using the join-tree algorithm to calculate upper limits for truncating the search tree. The idea is to create a superficial influence chart by conditioning each decision variable on additional information that does not require the remaining history, thus simplifying the impact chart. Then, a join tree of the superficial influence chart is used to gradually calculate upper limits for the deepest first two- and bound search. We also described a new approach to constructing the search tree based on the structure of the strong join-tree shape of the superficial influence chart. Experiments show that the resulting two- and bound search algorithm exceeds the boundaries of NASA. This search tree is based on the structure of the strong Join tree shape influence chart of the superficial influence chart."}], "references": [{"title": "An algorithm for finding minimum d-separating sets in belief networks", "author": ["S. Acid", "L. de Campos"], "venue": "In Proceedings of the 12th Annual Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1996}, {"title": "Evaluating influence diagrams with decision circuits", "author": ["D. Bhattacharjya", "R. Shachter"], "venue": "In Proceedings of the Twenty- Third Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2007}, {"title": "A method for using belief networks as influence diagrams", "author": ["G. Cooper"], "venue": "In Proceedings of the Fourth Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1988}, {"title": "An anytime approximation for optimizing policies under uncertainty", "author": ["R. Dechter"], "venue": "In Workshop on Decision Theoretic Planning, at the 5th International Conference on Artificial  Intelligence Planning Systems", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2000}, {"title": "Maximal flow through a network", "author": ["L.R. Ford", "D.R. Fulkerson"], "venue": "Canadian Journal of Mathematics,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1956}, {"title": "An anytime algorithm for decision making under uncertainty", "author": ["M.C. Horsch", "D. Poole"], "venue": "In Proceedings of the 14th Annual Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1998}, {"title": "Influence diagrams", "author": ["R.A. Howard", "J.E. Matheson"], "venue": "The Principles and Applications of Decision Analysis,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1981}, {"title": "From influence diagrams to junction trees", "author": ["F. Jensen", "F.V. Jensen", "S.L. Dittmer"], "venue": "In Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1994}, {"title": "Unconstrained influence diagrams", "author": ["F.V. Jensen"], "venue": "In Proc. of the 18th International Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2002}, {"title": "Representing and solving decision problems with limited information", "author": ["S.L. Lauritzen", "D. Nilsson"], "venue": "Management Science,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Local computations with probabilities on graphical structures and their application to expert systems", "author": ["S.L. Lauritzen", "D.J. Spiegelhalter"], "venue": "Journal of the Royal Statistical Society, Series B (Methodological),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1988}, {"title": "A new approach to influence diagram evaluation", "author": ["R. Marinescu"], "venue": "In Proceedings of the 29th SGAI International Conference on Innovative Techniques and Applications of Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2009}, {"title": "Welldefined decision scenarios", "author": ["T.D. Nielsen", "F.V. Jensen"], "venue": "In Proceedings of the 15th Annual Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1999}, {"title": "Computing bounds on expected utilities for optimal policies based on limited information", "author": ["D. Nilsson", "M. Hohle"], "venue": "Technical Report", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2001}, {"title": "On representing and solving decision problems", "author": ["S.M. Olmsted"], "venue": "PhD thesis,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1983}, {"title": "Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference", "author": ["J. Pearl"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1988}, {"title": "A new method for influence diagram evaluation", "author": ["R. Qi", "D. Poole"], "venue": "Computational Intelligence,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1995}, {"title": "Evaluating influence diagrams", "author": ["R.D. Shachter"], "venue": "Oper. Res.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1986}, {"title": "Valuation based systems for Bayesian decision analysis", "author": ["P. Shenoy"], "venue": "Operations Research,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1992}, {"title": "Efficient computation of jointree bounds for systematic MAP search", "author": ["C. Yuan", "E.A. Hansen"], "venue": "In Proceedings of 21st International Joint Conference on Artificial Intelligence", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "Probabilistic inference in influence diagrams", "author": ["N.L. Zhang"], "venue": "In Computational Intelligence,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1998}], "referenceMentions": [{"referenceID": 6, "context": "An influence diagram [7] is a compact representation of the relations among random variables, decisions, and preferences in a domain that provides a framework for decision making under uncertainty.", "startOffset": 21, "endOffset": 24}, {"referenceID": 1, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 2, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 7, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 14, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 16, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 17, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 18, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 20, "context": "Many algorithms have been developed to solve influence diagrams [2, 3, 8, 15, 17, 18, 19, 21].", "startOffset": 64, "endOffset": 93}, {"referenceID": 15, "context": "A branch-and-bound approach to influence diagram evaluation appears to have been first suggested by Pearl [16].", "startOffset": 106, "endOffset": 110}, {"referenceID": 6, "context": "He proposed it as an improvement over the classic method of unfolding an influence diagram into a decision tree and solving it using the rollback method, which itself is a form of dynamic programming [7].", "startOffset": 200, "endOffset": 203}, {"referenceID": 16, "context": "Qi and Poole [17] proposed a similar search-based method for solving influence diagrams, but with no method for computing bounds; in fact, their implementation relied on the trivial infinity upper bound to guide the search.", "startOffset": 13, "endOffset": 17}, {"referenceID": 11, "context": "Recently, Marinescu [12] proposed a related search-based approach to influence diagram evaluation.", "startOffset": 20, "endOffset": 24}, {"referenceID": 13, "context": "First, we adapt the work of Nilsson and H\u00f6hle [14] on computing an upper bound on the maximum expected utility of an influence diagram.", "startOffset": 46, "endOffset": 50}, {"referenceID": 19, "context": "Second, we adapt the recent work of Yuan and Hansen [20] on solving the MAP problem for Bayesian networks using branch-and-bound search.", "startOffset": 52, "endOffset": 56}, {"referenceID": 8, "context": "In particular, Jensen proposes the framework of unconstrained influence diagrams to allow a partial ordering among the decisions [9].", "startOffset": 129, "endOffset": 132}, {"referenceID": 9, "context": "Other research relaxes the no-forgetting assumption, in particular, the framework of limited-memory influence diagrams [10].", "startOffset": 119, "endOffset": 123}, {"referenceID": 6, "context": "The simplest is to unfold an influence diagram into an equivalent decision tree and solve it in that form [7].", "startOffset": 106, "endOffset": 109}, {"referenceID": 14, "context": "Another approach called arc reversal solves an influence diagram directly using techniques such as arcreversal and node-removal [15, 18]; when a decision variable is removed, we obtain the optimal decision rule for the decision.", "startOffset": 128, "endOffset": 136}, {"referenceID": 17, "context": "Another approach called arc reversal solves an influence diagram directly using techniques such as arcreversal and node-removal [15, 18]; when a decision variable is removed, we obtain the optimal decision rule for the decision.", "startOffset": 128, "endOffset": 136}, {"referenceID": 2, "context": "Bayesian networks by converting decision nodes into random variables such that the solution of an inference problem in the Bayesian network correspond to the optimal decision policy for the influence diagram [3, 21].", "startOffset": 208, "endOffset": 215}, {"referenceID": 20, "context": "Bayesian networks by converting decision nodes into random variables such that the solution of an inference problem in the Bayesian network correspond to the optimal decision policy for the influence diagram [3, 21].", "startOffset": 208, "endOffset": 215}, {"referenceID": 18, "context": "Another method [19] transforms an influence diagram into a valuation network and applies variable elimination to solve the valuation network.", "startOffset": 15, "endOffset": 19}, {"referenceID": 1, "context": "Recent work compiles influence diagrams into decision circuits and uses the decision circuits to compute optimal policies [2]; this approach takes advantage of local structure present in an influence diagram, such as deterministic relations.", "startOffset": 122, "endOffset": 125}, {"referenceID": 7, "context": "In the following, we describe a state-of-the-art method for solving an influence diagram using a strong join tree [8].", "startOffset": 114, "endOffset": 117}, {"referenceID": 7, "context": "For clique C2 to send a message to clique C1, \u03c6C1 and \u03c8C1 should be updated as follows [8]:", "startOffset": 87, "endOffset": 90}, {"referenceID": 10, "context": "In contrast to the join tree algorithm for Bayesian networks [11], only the collection phase of the algorithm is needed to solve an influence diagram.", "startOffset": 61, "endOffset": 65}, {"referenceID": 13, "context": "Nilsson and H\u00f6hle [14] develop an approach to bounding the suboptimality of policies for limited-memory influence diagrams that are found by an approximation algorithm.", "startOffset": 18, "endOffset": 22}, {"referenceID": 3, "context": "Dechter [4] describes an approach to computing upper bounds in an influence diagram that is based on mini-bucket partitioning.", "startOffset": 8, "endOffset": 11}, {"referenceID": 13, "context": "The approach we develop in the rest of this paper is based on the work of Nilsson and H\u00f6hle [14], which we extend by showing how it can be used to compute bounds for branchand-bound search.", "startOffset": 92, "endOffset": 96}, {"referenceID": 9, "context": "An information variable Ii is said to be non-requisite [10, 13] for a decision node D if", "startOffset": 55, "endOffset": 63}, {"referenceID": 12, "context": "An information variable Ii is said to be non-requisite [10, 13] for a decision node D if", "startOffset": 55, "endOffset": 63}, {"referenceID": 13, "context": "A reduction of an influence diagram is obtained by deleting all the nonrequisite information arcs [14].", "startOffset": 98, "endOffset": 102}, {"referenceID": 13, "context": "We adopt the strategy proposed by Nilsson and H\u00f6hle [14].", "startOffset": 52, "endOffset": 56}, {"referenceID": 13, "context": "The following theorem is proved by Nilsson and H\u00f6hle [14].", "startOffset": 53, "endOffset": 57}, {"referenceID": 20, "context": "The concept of a sufficient information set is related to the concept of extremality, as defined in [21], and the concept of blocking, as defined in [13].", "startOffset": 100, "endOffset": 104}, {"referenceID": 12, "context": "The concept of a sufficient information set is related to the concept of extremality, as defined in [21], and the concept of blocking, as defined in [13].", "startOffset": 149, "endOffset": 153}, {"referenceID": 13, "context": "Finding the sufficient information set (SIS) for a decision variable in an influence diagram is equivalent to finding a minimum separating set in the moralized graph of the influence diagram [14].", "startOffset": 191, "endOffset": 195}, {"referenceID": 0, "context": "Acid and de Campos [1] propose an algorithm based on the Max-flow Min-cut algorithm [5] for finding a minimum separating set between two sets of nodes in a Bayesian network with some of the separating variables being fixed.", "startOffset": 19, "endOffset": 22}, {"referenceID": 4, "context": "Acid and de Campos [1] propose an algorithm based on the Max-flow Min-cut algorithm [5] for finding a minimum separating set between two sets of nodes in a Bayesian network with some of the separating variables being fixed.", "startOffset": 84, "endOffset": 87}, {"referenceID": 13, "context": "We briefly mention some issues that are not described by Nilsson and H\u00f6hle [14], but that need to be considered in an implementation.", "startOffset": 75, "endOffset": 79}, {"referenceID": 19, "context": "To make branch-and-bound search feasible, we rely on an incremental approach to computing bounds proposed by Yuan and Hansen [20] for solving the MAP problem in Bayesian networks using branch-and-bound search.", "startOffset": 125, "endOffset": 129}, {"referenceID": 16, "context": "Qi and Poole [17] create an AND/OR tree in which each layer of AND nodes alternates with a layer of OR nodes.", "startOffset": 13, "endOffset": 17}, {"referenceID": 19, "context": "We can use an efficient incremental join tree evaluation method to compute the probabilities and upper-bound utilities, based on the incremental join tree evaluation method proposed by Yuan and Hansen [20] for solving the MAP problem.", "startOffset": 201, "endOffset": 205}, {"referenceID": 19, "context": "For solving the MAP problem for Bayesian networks, Yuan and Hansen [20] show that the incremental method is more than ten times faster than full join tree evaluation in depth-first branchand-bound search.", "startOffset": 67, "endOffset": 71}, {"referenceID": 7, "context": "We compared the performance of our algorithm against both the join tree algorithm [8] and exhaustive search of the AND/OR tree (i.", "startOffset": 82, "endOffset": 85}, {"referenceID": 11, "context": "Previous work has argued that one of the advantages of search algorithms for influence diagram evaluation is that they can prune branches of the search tree that have zero probability, even without bounds [12, 17].", "startOffset": 205, "endOffset": 213}, {"referenceID": 16, "context": "Previous work has argued that one of the advantages of search algorithms for influence diagram evaluation is that they can prune branches of the search tree that have zero probability, even without bounds [12, 17].", "startOffset": 205, "endOffset": 213}, {"referenceID": 9, "context": "We are currently considering how to extend this approach to solve limited-memory influence diagrams [10], which typically have many more stages.", "startOffset": 100, "endOffset": 104}], "year": 2010, "abstractText": "A branch-and-bound approach to solving influence diagrams has been previously proposed in the literature, but appears to have never been implemented and evaluated \u2013 apparently due to the difficulties of computing effective bounds for the branch-and-bound search. In this paper, we describe how to efficiently compute effective bounds, and we develop a practical implementation of depth-first branch-and-bound search for influence diagram evaluation that outperforms existing methods for solving influence diagrams with multiple stages.", "creator": " TeX output 2010.06.12:2215"}}}