{"id": "1205.4655", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-May-2012", "title": "The View-Update Problem for Indefinite Databases", "abstract": "This paper introduces and studies a declarative framework for updating views over indefinite databases. An indefinite database is a database with null values that are represented, following the standard database approach, by a single null constant. The paper formalizes views over such databases as indefinite deductive databases, and defines for them several classes of database repairs that realize view-update requests. Most notable is the class of constrained repairs. Constrained repairs change the database \"minimally\" and avoid making arbitrary commitments. They narrow down the space of alternative ways to fulfill the view-update request to those that are grounded, in a certain strong sense, in the database, the view and the view-update request.", "histories": [["v1", "Mon, 21 May 2012 16:42:06 GMT  (41kb)", "http://arxiv.org/abs/1205.4655v1", "24 pages (includes proofs)"]], "COMMENTS": "24 pages (includes proofs)", "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["luciano caroprese", "irina trubitsyna", "miroslaw truszczynski", "ester zumpano"], "accepted": false, "id": "1205.4655"}, "pdf": {"name": "1205.4655.pdf", "metadata": {"source": "CRF", "title": "The View-Update Problem for Indefinite Databases", "authors": ["Luciano Caroprese", "Irina Trubitsyna", "Miros\u0142aw Truszczy\u0144ski", "Ester Zumpano"], "emails": ["caroprese@deis.unical.it", "irina@deis.unical.it", "zumpano@deis.unical.it", "mirek@cs.uky.edu"], "sections": [{"heading": null, "text": "ar Xiv: 120 5.46 55v1 [cs.DB] 2 1M ay"}, {"heading": "1 Introduction", "text": "A typical database system is large and complex. Users and applications rarely have direct access to the entire system. Instead, it is more common for access to be granted in relation to a view, a virtual database consisting of relationships defined by a query to the stored and maintained database. (Considering that several q pairs are a multiple q problem.) In contrast, another key task, updating the database, presents major challenges. Example 1. Let D = {q (a, b)} be a database using the relation symbols q and r, where the relation r has three and is currently empty. Consider the view of D given by the database program P = {p). (X, Y)."}, {"heading": "2 Indefinite Databases", "text": "We consider a finite set of ratio symbols and a set of constants that encompass a particular element (q = 1.2 q = 1.2 q = 1). We define Domd = Dom (1 = 1.2 q = 1.2 q = 1). We usually assume that Dom is an infinitely countable set. For the sake of simplicity, a term is a constant of Dom or a variable. An atom is an expression of the form p (t1,., tk), where p) predicates and all other predicates are understood as derived (or more intense) predicates. An atom is an expression of the form p (t1,.,., tk), where p) is a predicate symbol of identity k and ti \"s.\" An atom is not a variable. We refer to soil atoms as facts. We consider the set of all facts defined by At."}, {"heading": "3 Indefinite Deductive Databases", "text": "A database with integrity limitations is a pair < I, \u03b7 >, where I am a database, and \u03b7 is a set of ICs. Possible worlds can be considered as interpretations of language. A possible world is a possible world for a database < I, \u03b7 >, where I am a database with ICs. Definition 5. Let < I, \u03b7 > be a database with ICs. A possible world with ICs. W (I) is a possible world for a database < I >, if W suggests a definition of the semantics of databases with ICs. We denote the set of possible worlds of < I, \u03b7 > of W (I, \u03b7). A database with ICs, < I) is consistent if W."}, {"heading": "4 View Updating", "text": "In the view update problem, the user specifies a request, a list of facts the user learned (observed) to be true or false, and wants the stored database to be updated to be it.3Definition 9. A request about a deductive database D is a pair of S = (S t, S f), where S t and S f are disjoint sets of facts to be requested to be true and false, respressor.To fulfill a request, we need an update, which, when executed, results in a database that the view it fulfills the request. We call such updates weak repairs.Definition 10. Let D = < I > be a deductive database and S a request. An update U for I is a weak database for (D, S) when U meets S, which is when for each a-S, that is weak repairs.Definition 10. Let D = true and for each a-S database."}, {"heading": "5 Complexity", "text": "The question is whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether the question is about the question, whether it is about the question, whether it is about the question, whether it is about the answer, whether it is about the question, whether it is about the question, whether it is about the question, whether it is about the question, whether it is about the question, whether it is about the question about the question, whether it is about the question about the answer, whether it is about the question, whether it is about the question about the answer, whether it is about the question, whether it is about the question about the answer, whether it is about the question, whether it is about the question about the question, whether it is about the question about the answer, whether it is about the question about the question, whether it is about the question about the answer, whether it is about the question is about the question, whether it is about the question about the question is about the answer, whether it is about the question, whether it is about the question about the question is about the question is about the answer, whether it is about the question is about the question is about the question, whether it is about the question is about the question, whether it is about the question is about the question is about the question, whether it is about the question is about the question is about the question is about the question, whether it is about the question about the question is about the answer, whether it is about the question is about the question, whether it is about the question is about the question, whether it is about the answer to the question is about the question is about the question is about the question, whether it is about the question is about the question, whether it is about the question is about the question, whether it is about the question is about the question is about the question, whether it is about the question is about the question is about the question is about the"}, {"heading": "6 Discussion and conclusion", "text": "In fact, it is the case that most of them are able to abide by the rules that they have set themselves in order to abide by the rules that they have bound by the rules. In fact, it is the case that they are able to abide by the rules that they have bound by the rules. In fact, it is the case that they are able to abide by the rules that they have bound by the rules. In fact, it is the case that they are able to abide by the rules that they have bound by the rules."}, {"heading": "Acknowledgments", "text": "The third author was supported by the NSF grant IIS-0913459. We thank Sergio Greco and Leopoldo Bertossi for helpful discussions."}], "references": [{"title": "Intensional updates: Abduction via deduction", "author": ["Fran\u00e7ois Bry"], "venue": "In Proceedings of ICLP", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1990}, {"title": "The role of abduction in database view updating", "author": ["Luca Console", "Maria Luisa Sapino", "Daniele Theseider Dupr\u00e9"], "venue": "J. Intell. Inf. Syst.,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1995}, {"title": "Abduction from logic programs: Semantics and complexity", "author": ["Thomas Eiter", "Georg Gottlob", "Nicola Leone"], "venue": "Theor. Comput. Sci.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1997}, {"title": "Abduction compared with negation by failure", "author": ["K. Eshghi", "R.A. Kowalski"], "venue": "In Proceedings of ICLP", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1989}, {"title": "Handling existential derived predicates in view updating", "author": ["Carles Farr\u00e9", "Ernest Teniente", "Toni Urp\u0131"], "venue": "In Proceedings of ICLP 2003,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2003}, {"title": "The stable model semantics for logic programming", "author": ["Michael Gelfond", "Vladimir Lifschitz"], "venue": "In Proceedings of ICLP/SLP", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1988}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["Michael Gelfond", "Vladimir Lifschitz"], "venue": "New Generation Comput.,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1991}, {"title": "Stratification criteria and rewriting techniques for checking chase termination", "author": ["Sergio Greco", "Francesca Spezzano", "Irina Trubitsyna"], "venue": "PVLDB, 4(11):1158\u20131168,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Database updates through abduction", "author": ["A.C. Kakas", "P. Mancarella"], "venue": "In Proceedings of the sixteenth international conference on Very large databases,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1990}, {"title": "A semantics-based approach to design of query languages for partial information", "author": ["Leonid Libkin"], "venue": "In Semantics in Databases,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1995}, {"title": "Consistency preserving updates in deductive databases", "author": ["Enric Mayol", "Ernest Teniente"], "venue": "IEEE TDKE,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "On closed world data bases", "author": ["R. Reiter"], "venue": "Logic and data bases,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1978}, {"title": "Updating knowledge bases while maintaining their consistency", "author": ["Ernest Teniente", "Antoni Oliv\u00e9"], "venue": "VLDB J.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1995}, {"title": "Automatic constraint maintenance and updating defined relations", "author": ["Stephen Todd"], "venue": "In IFIP Congress,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1977}, {"title": "Semantic integrity support in sql: 1999 and commercial (object-)relational database management systems", "author": ["Can T\u00fcrker", "Michael Gertz"], "venue": "VLDB J.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2001}, {"title": "Principles of Database and Knowledge-Base Systems, Volume I", "author": ["Jeffrey D. Ullman"], "venue": "Computer Science Press,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1988}], "referenceMentions": [{"referenceID": 8, "context": "Thus, developing methods to automate the selection process or, at least, aid the user in making the choice is essential and has been one of the central problems of view updating [9, 2, 13, 11].", "startOffset": 178, "endOffset": 192}, {"referenceID": 1, "context": "Thus, developing methods to automate the selection process or, at least, aid the user in making the choice is essential and has been one of the central problems of view updating [9, 2, 13, 11].", "startOffset": 178, "endOffset": 192}, {"referenceID": 12, "context": "Thus, developing methods to automate the selection process or, at least, aid the user in making the choice is essential and has been one of the central problems of view updating [9, 2, 13, 11].", "startOffset": 178, "endOffset": 192}, {"referenceID": 10, "context": "Thus, developing methods to automate the selection process or, at least, aid the user in making the choice is essential and has been one of the central problems of view updating [9, 2, 13, 11].", "startOffset": 178, "endOffset": 192}, {"referenceID": 4, "context": "[5], where the terminology of Skolem constants rather than null values was used.", "startOffset": 0, "endOffset": 3}, {"referenceID": 14, "context": "First, the use of multiple Skolem constants (essentially, multiple null values) violates the SQL standard [15].", "startOffset": 106, "endOffset": 110}, {"referenceID": 9, "context": "We denote it by \u22a5 and interpret it as expressing the existence of unknown values for each attribute it is used for [10].", "startOffset": 115, "endOffset": 119}, {"referenceID": 11, "context": "The semantics of such databases is given by the closed-world assumption or CWA [12]: a definite fact q is true in a database D if q \u2208 D.", "startOffset": 79, "endOffset": 83}, {"referenceID": 9, "context": "By CWA adapted for the setting of indefinite databases [10], facts that are not in D\u21d3 are not true in D, as D contains no evidence to support their truth.", "startOffset": 55, "endOffset": 59}, {"referenceID": 15, "context": "Following Ullman [16], views are safe Datalog\u00ac programs.", "startOffset": 17, "endOffset": 21}, {"referenceID": 5, "context": "The semantics of Datalogprograms is given in terms of answer sets [6, 7].", "startOffset": 66, "endOffset": 72}, {"referenceID": 6, "context": "The semantics of Datalogprograms is given in terms of answer sets [6, 7].", "startOffset": 66, "endOffset": 72}, {"referenceID": 13, "context": "More generally, a weak repair is \u201cnon-drastic\u201d if it minimizes the change it incurs [14].", "startOffset": 84, "endOffset": 88}, {"referenceID": 4, "context": "While introducing indefiniteness to narrow down the class of potential repairs was considered before [5], the assumption there was that the initial extensional database was complete.", "startOffset": 101, "endOffset": 104}, {"referenceID": 0, "context": "Perhaps the first explicit connection between the two was made by Bry [1] who proposed to use deductive tools as a means for implementing the type of abductive reasoning required in updating views.", "startOffset": 70, "endOffset": 73}, {"referenceID": 8, "context": "For instance, Kakas and Mancarella [9] exploited in their work on view updates the abductive framework by Eshghi and Kowalski [4] and were the first to consider the stable-model semantics for views.", "startOffset": 35, "endOffset": 38}, {"referenceID": 3, "context": "For instance, Kakas and Mancarella [9] exploited in their work on view updates the abductive framework by Eshghi and Kowalski [4] and were the first to consider the stable-model semantics for views.", "startOffset": 126, "endOffset": 129}, {"referenceID": 1, "context": "[2] studied the case in which requests can involve variables.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "Some results on the complexity of abduction for logic programs were obtained by Eiter, Gottlob and Leone [3].", "startOffset": 105, "endOffset": 108}, {"referenceID": 7, "context": "A common solution in the database research is to impose syntactic restrictions on the constraints [8].", "startOffset": 98, "endOffset": 101}], "year": 2013, "abstractText": "This paper introduces and studies a declarative framework for updating views over indefinite databases. An indefinite database is a database with null values that are represented, following the standard database approach, by a single null constant. The paper formalizes views over such databases as indefinite deductive databases, and defines for them several classes of database repairs that realize view-update requests. Most notable is the class of constrained repairs. Constrained repairs change the database \u201cminimally\u201d and avoid making arbitrary commitments. They narrow down the space of alternative ways to fulfill the view-update request to those that are grounded, in a certain strong sense, in the database, the view and the view-update request.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}