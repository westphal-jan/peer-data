{"id": "1206.1534", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jun-2012", "title": "Software Aging Analysis of Web Server Using Neural Networks", "abstract": "Software aging is a phenomenon that refers to progressive performance degradation or transient failures or even crashes in long running software systems such as web servers. It mainly occurs due to the deterioration of operating system resource, fragmentation and numerical error accumulation. A primitive method to fight against software aging is software rejuvenation. Software rejuvenation is a proactive fault management technique aimed at cleaning up the system internal state to prevent the occurrence of more severe crash failures in the future. It involves occasionally stopping the running software, cleaning its internal state and restarting it. An optimized schedule for performing the software rejuvenation has to be derived in advance because a long running application could not be put down now and then as it may lead to waste of cost. This paper proposes a method to derive an accurate and optimized schedule for rejuvenation of a web server (Apache) by using Radial Basis Function (RBF) based Feed Forward Neural Network, a variant of Artificial Neural Networks (ANN). Aging indicators are obtained through experimental setup involving Apache web server and clients, which acts as input to the neural network model. This method is better than existing ones because usage of RBF leads to better accuracy and speed in convergence.", "histories": [["v1", "Thu, 7 Jun 2012 15:52:46 GMT  (252kb)", "http://arxiv.org/abs/1206.1534v1", "11 pages, 8 figures, 1 table; International Journal of Artificial Intelligence &amp; Applications (IJAIA), Vol.3, No.3, May 2012"]], "COMMENTS": "11 pages, 8 figures, 1 table; International Journal of Artificial Intelligence &amp; Applications (IJAIA), Vol.3, No.3, May 2012", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["g sumathi", "r raju"], "accepted": false, "id": "1206.1534"}, "pdf": {"name": "1206.1534.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["R. Raju"], "emails": ["swasthik36@gmail.com", "rajupdy@gmail.com"], "sections": [{"heading": null, "text": "DOI: 10.5121 / ijaia.2012.3302 11Software aging is a phenomenon that refers to progressive performance deterioration or temporary failures or even crashes in long-running software systems such as web servers. It occurs mainly due to the deterioration of operating system resources, fragmentation and numerical error accumulation. A primitive method of combating software aging is software rejuvenation. Software rejuvenation is a proactive error management technique that aims to clean up the system's internal state to prevent the occurrence of more serious crash errors in the future. Occasionally, the running software is stopped, its internal state cleaned up and restarted. An optimized schedule for performing software rejuvenation must be derived in advance, because a long-running application cannot be filed every now and then, as it can lead to wasted costs. This paper proposes a method to achieve a precise and optimized web rejuvenation schedule (the use of a server) by using RF."}, {"heading": "1. INTRODUCTION", "text": "Software aging is a phenomenon that refers to progressive performance deterioration or temporary failures or even crashes in long-lasting software systems such as web servers. It occurs mainly due to the deterioration of operating system resources, fragmentation and numerical error accumulation. Unexpected downtime costs due to software aging are particularly high in e-commerce websites and security / business critical applications. Software aging harms the usability of the software system and causes inconvenience for users. It mostly occurs due to the accumulation of runtime errors. Runtime errors are the result of residual software effects such as memory leaks and unpublished file locks. These residual defects are difficult to detect during the testing phase because there are few observable errors during the internal testing phase. Even when they are detected, practical experience shows that most of these errors are temporary [6] and difficult to locate and remedy."}, {"heading": "2. OBJECTIVE OF THE PAPER", "text": "Since aging cannot be avoided, the only means available to keep the system from failing and return it to a robust state is software rejuvenation. The important goal to be taken into account is the appropriate time when the rejuvenation must be performed, since regular rejuvenation leads to waste of money, since a long-term application like a web server sometimes cannot be stored. The goal of this paper is to obtain a precise and optimized timetable for rejuvenation of a web server, namely Apache. To achieve this, the status of the aging indicators, the parameters that characterize the aging process, must be forecasted using Radial Basis Function based Feed Forward Neural Network. The proposed model results in better accuracy and speed of convergence rate than the existing analytical and statistical models, as these models assume the underlying probability of poor planning."}, {"heading": "3. RELATED WORKS", "text": "Existing work on software aging is subject to either a model-based approach or a measurement-based approach. In the model-based approach, certain assumptions such as origin and outcome of software aging are made and a mathematical model is built on these assumptions. This model is either analytical or stochastic. Existing research on model-based studies includes the suggestion of a three-step stochastic model to determine the best time to restart a telecommunications system switch [7] and Garg et al. analyzed software aging in a transaction system and proposed an analytical model to estimate the likelihood of loss of an incoming transaction and the expected reaction time of a transaction. Dohi et al. built semi-Markov process models for software aging to solve the same problem [9, 10]. All of the above models suffer from the disadvantage that the mathematical assumptions cannot be easily validated in practice and the mathematical properties derived from them are not useful for software maintenance."}, {"heading": "4. EXPERIMENTAL SETUP", "text": "In order to obtain an optimized schedule for the rejuvenation, the indicators necessary for the prediction must be obtained. Many aging indicators are available, namely three aging indicators, response time of the web server, swap space and free physical memory are taken into account. To obtain the values of these aging indicators, an experimental configuration in the form of an Apache server, two clients and a 100M switch is installed."}, {"heading": "5. ARTIFICIAL NEURAL NETWORK", "text": "Artificial neural network is a machine learning technique inspired by the organization and functioning of biological neurons. ANN has several advantages over statistical methods. Artificial neural network can be universal approximators for functions even for nonlinear functions. It can also estimate piecemeal approximations of functions and has the ability to detect patterns adaptively from data. If an appropriate number of nonlinear processing units is given as input, neural networks can learn from experience and estimate each complex functional relationship with high accuracy [11]. Numerous successful ANN applications in a variety of areas such as pattern recognition and prediction have been reported in the literature [12]."}, {"heading": "5.1. ANN for Time Series Forecasting", "text": "The use of ANN to analyze time series is based entirely on the observed data and is powerful enough to represent any form of time series. ANN can learn even on noisy data and display nonlinear time series. For example, given a set of values of the variable x in time step t and in past time steps x (t), x (t-1), x (t-2),..., x (t-m), we look for an unknown function F, so that; x (t + n) = F [x (t), x (t-1), x (t-2),..., x (t-m)], giving an n-step predictor of order m for size x."}, {"heading": "6. RBFNN FOR SOFTWARE AGING FORECASTING", "text": "Radial base functions emerged as a variant of ANN in the late 1980s. RBFs are embedded in a two-layer neural network, in which each hidden unit implements a radial activated function. The output units implement a weighted sum of hidden output functions. [18] Unlike MLP network models, RBFNN has no weight adjustment in the connection between input layer and hidden layer. RBF networks have excellent approximation capabilities [18]. Due to their nonlinear approximation properties, RBF networks are able to model complex mappings that can only model neural perceptron networks using multiple intermediate layers. Figure 2 shows the radial base function of neural network. The bell-shaped curves in the hidden nodes show that each hidden layer node represents a radial node."}, {"heading": "6.1 Training the RBFNN", "text": "In order to predict the status of ageing indicators, in order to get an optimized schedule for rejuvenation, the RBFNN must be trained in such a way that the average square error is minimized to the maximum extent. The average square error function, which is to be minimized by adjusting the parameters {\u00b5mj}, resembles that for BPNN, except that this is much easier to minimize. There is only one set of parameters instead of two, as was the case for BPNNs. After suppressing the index q we have E = (1 / J) \u2211 (j-1, J) (tj - Zj) 2E = (1 / J) \u2211 (j-1, J) (tj - 1 / M) (tj - (1 / M) \u2211 (m-1, M) \u00b5mj Ym) 2 (3) so that the radii Ym - 2 (3) radii Ym - Jump - Jump (1 / 6 \u00b5M) 2 (1 / 6 \u00b5M (Up- Jump) (Up- Jump) (Up- Jump - Jump - Jump - Jump - Jump - Jump - (m - Jump -) (m - Jump - Jump -) (m - (m - Jump -))."}, {"heading": "7. PARAMETERS FOR PERFORMANCE EVALUATION", "text": "Accuracy in predicting resource depletion to obtain an optimized Web server rejuvenation schedule is measured by Root Mean Square Error (RMSE) and Mean Absolute Percent Error (MAPE)."}, {"heading": "7.1 Root Mean Square Error", "text": "The root of the mean square error, egg of an individual program i, is evaluated by the equation: where P (ij) is the value predicted by the individual program i for the example case j (from n examples); and Tj is the target value for the example case j. For a perfect fit P (ij) = Tj and egg = 0. Thus, the egg index ranges from 0 to infinity, where 0 corresponds to the ideal."}, {"heading": "7.2 Mean Absolute Percent Error", "text": "MAPE is calculated by averaging the percentage difference between the adjusted (forecast) line and the original data: MAPE = 1 / n [\u2211 t | et / yt | * 100], with y representing the original series and e representing the original series minus the forecast and n representing the number of observations."}, {"heading": "8. RESULTS", "text": "The results of the neural network model of the RBF to predict an optimized schedule for the rejuvenation of the Apache web server are presented below."}, {"heading": "8.1 Response Time", "text": "Figure 3 shows the graph of the Apache web server's pre-processed response time, collected over a period of about a week. The vertical line in the graph divides the data into the set used for training and the set used for testing. Figure 4 shows the predicted response time obtained from the RBFNN model, and the predicted results are compared with the observed data segment. Figure 4 shows that the convergence is faster and more accurate."}, {"heading": "8.2 Swap Space Used", "text": "Figure 5 shows the swap memory usage of the Apache web server, which was collected over a period of approximately 15 days. Graph shows a significant increase in swap space used at fixed intervals. Figure 6 shows the predicted swap memory usage of the RBFNN model. Predicted results are compared with the last segment of observed data used for testing and show the accuracy of the prediction."}, {"heading": "8.3 Free Physical Memory", "text": "Figure 7 shows the graph of the Apache web server's free physical memory, collected for a period of about a week. Data is pre-processed by scaling, because when the physical memory approaches its lower limit, the system frees up memory by scrolling through it. The vertical solid line in the graph segments the data into the set used for training and the set used for testing. Figure 8 shows the free physical space predicted by the RBFNN model. Predicted results are compared with the last segment of the observed data set. Figure 8 shows that convergence is faster and more accurate."}, {"heading": "9. EVALUATION OF PREDICTED RESULTS", "text": "The results of ageing indicators, which were predicted using an RBF-based neural network feed model, are evaluated using the RMSE and MAPE parameters as shown in Table.1 and the results are compared with the existing MLP model."}, {"heading": "10. CONCLUSION", "text": "This work worked on creating an accurate and optimized schedule for the rejuvenation of a web server (Apache web server for example) to prevent crashes due to the phenomenon called software aging. To obtain the schedule for the rejuvenation, the aging indicators are selected and real-time values are obtained through experimental setup. A segment of the obtained values is used to form the RBFNN model, which further predicts the expected results of the aging indicators. Predicted results are evaluated using accuracy parameters such as RMSE and MAPE. Also, the obtained results are graphed to illustrate convergence rate and accuracy."}, {"heading": "11. REFERENCES", "text": "[1] Michael Grottke, Lei Li, Kalyanaraman Vaidyanathan, and Kishor S. Trivedi, \"Analysis of SoftwareAging in a Web Server,\" IEEE Transactions on Reliability, vol. 55, no. 3, September 2006 [2] Yun-Fei Jia, Lei Zhao and Kai-Yuan Cai, \"A Nonlinear Approach to Modeling of Software Aging in aWeb Server, 15th Asia-Pacific Software Engineering Conference, 2008 [3] Yun-Fei Jia, Jing-Ya Su, and Kai-Yuan Cai,\" A Nonlinear Control Approach to Modeling of Software Aging in aWeb Server. \""}], "references": [{"title": "Analysis of Software Aging in a Web Server", "author": ["Michael Grottke", "Lei Li", "Kalyanaraman Vaidyanathan", "Kishor S. Trivedi"], "venue": "IEEE Transactions on Reliability,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "A Nonlinear Approach to Modeling of Software Aging in a Web Server", "author": ["Yun-Fei Jia", "Lei Zhao", "Kai-Yuan Cai"], "venue": "15th Asia-Pacific Software Engineering Conference,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2008}, {"title": "A Feedback Control Approach for Software Rejuvenation in a Web Server", "author": ["Yun-Fei Jia", "Jing-Ya Su", "Kai-Yuan Cai"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "A Threshold Autoregressive Model for Software Aging", "author": ["Xiu-E Chen", "Quan Quan", "Yun-Fei Jia", "Kai-Yuan Cai"], "venue": "Proceedings of the Second IEEE International Symposium on Service-Oriented System Engineering", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2006}, {"title": "An Approach for Estimation of Software Aging in a Web Server", "author": ["Lei Li", "Kalyanaraman Vaidyanathan", "Kishor S. Trivedi"], "venue": "Proceedings of the 2002 International Symposium on Empirical Software Engineering", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "On-board preventive maintenance: a design-oriented analytic study for long-life applications", "author": ["A.T. Tai", "L. Alkalaj", "S.N. Chau"], "venue": "Performance Evaluation,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1998}, {"title": "Software Rejuvenation: Analysis, Module and Applications", "author": ["Y. Huang", "C. Kintala", "N. Kolettis", "N. Fulton"], "venue": "Proceedings of the 25th IEEE International Symposium on Fault-Tolerant Computing,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1995}, {"title": "Analysis of Software Rejuvenation Using Markov Regenerative Stochastic Petri Net", "author": ["S. Garg", "A. Puliafito", "M. Telek", "K.S. Trivedi"], "venue": "Proceedings of the Sixth International Symposium on Software Reliability Engineering,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1995}, {"title": "Analysis of software cost models with rejuvenation", "author": ["T. Dohi", "K. Goseva-Popstojanova", "K.S. Trivedi"], "venue": "Proceedings of the International Symposium on High Assurance Systems Engineering,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2000}, {"title": "Estimating software rejuvenation schedules in high assurance systems", "author": ["T. Dohi", "K. Goseva-Popstojanova", "K.S. Trivedi"], "venue": "Computer Journal,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Multilayer feedforward networks are universal approximators", "author": ["K. Hornik", "M. Stinchcombe", "H. White"], "venue": "Neural Networks", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1989}, {"title": "Neural network forecasting for seasonal and trend time series", "author": ["Zhang", "G. Peter", "Qi", "Min"], "venue": "European Journal of Operational Research", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2005}, {"title": "Fundamentals of Artificial Neural Networks", "author": ["M.H. Hassoun"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1995}, {"title": "A Neural-Wavelet based Methodology for software Aging Forecasting", "author": ["J. Xu", "J. You", "K. Zhang"], "venue": "IEEE International Conference on Systems, Man and Cybernetics,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2005}, {"title": "Httperf - A Tool for Measuring Web Server Performance", "author": ["D. Mosberger", "T. Jin"], "venue": "in the First Workshop on Internet Server Performance,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1998}, {"title": "Application of an Uncertain Reasoning Approach to Software Aging Detection", "author": ["QingE WU", "ZhenYu Han", "TianSong Guo"], "venue": "Fifth International Joint Conference onINC, IMS and IDC,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}], "referenceMentions": [{"referenceID": 0, "context": "It mainly occurs due to the deterioration of operating system resource, fragmentation and numerical error accumulation [1].", "startOffset": 119, "endOffset": 122}, {"referenceID": 5, "context": "Even if they are unveiled, practical experience shows that most of corresponding errors are transient in nature [6],", "startOffset": 112, "endOffset": 115}, {"referenceID": 6, "context": "This method is called software rejuvenation [7].", "startOffset": 44, "endOffset": 47}, {"referenceID": 6, "context": "The existing researches on model-based studies involve the proposal of a three state stochastic model to determine the best time to restart a telecommunication system switch [7] and Garg et al.", "startOffset": 174, "endOffset": 177}, {"referenceID": 7, "context": "analysed software aging in a transaction system and proposed an analytical model to estimated the probability of losing an arriving transaction and the expected response time of a transaction [8].", "startOffset": 192, "endOffset": 195}, {"referenceID": 8, "context": "built semi-Markov reward process models of software aging to solve the same problem [9, 10].", "startOffset": 84, "endOffset": 91}, {"referenceID": 9, "context": "built semi-Markov reward process models of software aging to solve the same problem [9, 10].", "startOffset": 84, "endOffset": 91}, {"referenceID": 2, "context": "All these above mentioned models suffer from a drawback that the mathematical assumptions cannot be easily validated in practice and the derived mathematical properties are not useful for software maintenance [3].", "startOffset": 209, "endOffset": 212}, {"referenceID": 0, "context": "In measurement-based approach, the aging indicators are monitored and based on the collected data the robustness of the system is assessed by applying statistical regression techniques such as auto regression [1], threshold auto regression [4] and autoregressive moving average model [5], to the monitored data.", "startOffset": 209, "endOffset": 212}, {"referenceID": 3, "context": "In measurement-based approach, the aging indicators are monitored and based on the collected data the robustness of the system is assessed by applying statistical regression techniques such as auto regression [1], threshold auto regression [4] and autoregressive moving average model [5], to the monitored data.", "startOffset": 240, "endOffset": 243}, {"referenceID": 4, "context": "In measurement-based approach, the aging indicators are monitored and based on the collected data the robustness of the system is assessed by applying statistical regression techniques such as auto regression [1], threshold auto regression [4] and autoregressive moving average model [5], to the monitored data.", "startOffset": 284, "endOffset": 287}, {"referenceID": 13, "context": "Wavelet Network is also used to solve the same problem [15].", "startOffset": 55, "endOffset": 59}, {"referenceID": 14, "context": "Experimental Setup Httperf [17], a Web server test tool, is deployed on the clients to generate artificial concurrent requests with exponential time intervals to access the static html files on the Apache server.", "startOffset": 27, "endOffset": 31}, {"referenceID": 1, "context": "14 MaxRequestPerChild and MaxSpareServers [2].", "startOffset": 42, "endOffset": 45}, {"referenceID": 10, "context": "Numerous successful ANN applications have been reported in the literature in a variety of fields including pattern recognition and forecasting [12].", "startOffset": 143, "endOffset": 147}], "year": 2012, "abstractText": "Software aging is a phenomenon that refers to progressive performance degradation or transient failures or even crashes in long running software systems such as web servers. It mainly occurs due to the deterioration of operating system resource, fragmentation and numerical error accumulation. A primitive method to fight against software aging is software rejuvenation. Software rejuvenation is a proactive fault management technique aimed at cleaning up the system internal state to prevent the occurrence of more severe crash failures in the future. It involves occasionally stopping the running software, cleaning its internal state and restarting it. An optimized schedule for performing the software rejuvenation has to be derived in advance because a long running application could not be put down now and then as it may lead to waste of cost. This paper proposes a method to derive an accurate and optimized schedule for rejuvenation of a web server (Apache) by using Radial Basis Function (RBF) based Feed Forward Neural Network, a variant of Artificial Neural Networks (ANN). Aging indicators are obtained through experimental setup involving Apache web server and clients, which acts as input to the neural network model. This method is better than existing ones because usage of RBF leads to better accuracy and speed in convergence.", "creator": "PScript5.dll Version 5.2.2"}}}