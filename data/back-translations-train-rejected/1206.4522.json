{"id": "1206.4522", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Jun-2012", "title": "BADREX: In situ expansion and coreference of biomedical abbreviations using dynamic regular expressions", "abstract": "BADREX uses dynamically generated regular expressions to annotate term definition-term abbreviation pairs, and corefers unpaired acronyms and abbreviations back to their initial definition in the text. Against the Medstract corpus BADREX achieves precision and recall of 98% and 97%, and against a much larger corpus, 90% and 85%, respectively. BADREX yields improved performance over previous approaches, requires no training data and allows runtime customisation of its input parameters. BADREX is freely available from", "histories": [["v1", "Wed, 20 Jun 2012 15:06:48 GMT  (429kb)", "http://arxiv.org/abs/1206.4522v1", "6 pages, 2 figures"]], "COMMENTS": "6 pages, 2 figures", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["phil gooch"], "accepted": false, "id": "1206.4522"}, "pdf": {"name": "1206.4522.pdf", "metadata": {"source": "CRF", "title": "BADREX: In situ expansion and coreference of biomedical abbreviations using dynamic regular expressions", "authors": ["Phil Gooch"], "emails": ["Philip.Gooch.1@city.ac.uk"], "sections": [{"heading": null, "text": "BADREX is freely available at https: / / github.com / philgooch / BADREX-Biomedical-AbbreviationExpander as a plugin for the General Architecture for Text Engineering (GATE) Framework and licensed under the GPLv3."}, {"heading": "1 INTRODUCTION", "text": "Identifying abbreviations and acronyms or abbreviations (SF) for predefined term definitions or long forms (LF) is a well-researched topic in the field of natural language biomedical processing (see Torii et al. 2007 for a review). Existing tools such as Schwartz & Hearst (2003) and Ao & Takagi (2005) extract LF-SF pairs for creating dictionaries, but do not provide automatic extension of SFs within the text at the point they occur, which is a necessary precursor for semantic type mapping and correlation resolution. BADREX identifies, extends and comments on LF-SF pairs, and Korean subsequent SF mentions back to their most recent definition in the text, which could facilitate the disambiguity of unpaired abbreviations that are not possible with dictionary searches alone (Stevenson et al. 2009)."}, {"heading": "2 METHODS", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 BADREX development", "text": "This year it is as far as never before in the history of the Federal Republic of Germany."}, {"heading": "2.2 Correction of BioText and Medstract data", "text": "(http: / / biotext.berkeley.edu / data.html; Schwartz & Hearst 2003) contains 1000 MedLine abstracts in a simple text file with 954 LF-SF pairs tagged with XML-like tags, e.g. < Long id = 1 > endoplasmic reticulum < / Long > (< Short id = 1 > ER < / Short >) where the \"id\" attribute on the < Long > element matches the corresponding < Short > element < Short EBL parser we identified and corrected with a standard XML parser Errors in malformed \"id\" attributes and malformed < Long > and < Start > tags."}, {"heading": "3 RESULTS", "text": "In the BioText corpus, we found 13 mismatched or malformed \"id\" attributes and 21 mismatched or malformed < Long > and < Start > tags. The corrected flagged corpus is available at http: / / soi.city.ac.uk / ~ abdy181 / software / # badrex (reproduced with permission). Table 1 shows the Medstract corpus analysis results; compared to the Medstract Gold Standard Marks: We added an additional 43 badges, which we classified as correct short-form long-form pairs, and amended 17 pairs, which we deemed incorrect. The corrected Markables file is also available at the URL.Evaluation of the BADREX performance of both companies compared to that of S-H, ALICE, and MBA is shown in Table 2."}, {"heading": "4 DISCUSSION", "text": "Our goal was to develop an adaptable tool for identifying, extending, and annotating biomedical abbreviations in situ in free text, while simultaneously matching or surpassing existing approaches. By running \"head\" and \"tail\" candidate matches that allow for a variable threshold and only take alpha characters into account when matching, we can identify pairs such as \"topoisomerase I (Top1p)\" and \"two-dimensional polyacrylamide gel electrophoresis (2D-PAGE)\" that are overlooked by the other approaches, but without undue compromise in precision. By using regular expressions in steps 1 and 3, we simplify the creation of the finite state machine hard coded in Schwartz & Hearst (2003) and allow simple parameterization so that optimal parameter values for a particular corpus can be determined. While we currently have used default values for these (detailed illustrations) in this assessment, X may be used for the minimum values for the evaluation."}, {"heading": "5 CONCLUSION", "text": "The use of regular expressions dynamically generated from the contents of a document results in slightly improved performance compared to previous approaches to identifying term-definition-term abbreviation pairs, with the advantage that annotations, extensions and co-references can be delivered on the spot in a single pass. BADREX does not require training data and allows its input parameters to be adjusted at runtime. The GATE plugin is available free of charge at https: / / github.com / philgooch / BADREX-Biomedical-AbbreviationExpander and licensed under the GPLv3."}, {"heading": "ACKNOWLEDGEMENTS", "text": "We thank Prof. Marti Hearst for permission to provide the corrected BioText yeast corpus in XML format. The author thanks the Engineering and Physical Sciences Research Council (EPSRC) for conducting this research within the framework of the doctoral fellowship EP / P504872 / 1."}], "references": [{"title": "ALICE: an algorithm to extract abbreviations from MEDLINE", "author": ["H Ao", "T Takagi"], "venue": "J. Am. Med. Inform. Assoc.,", "citeRegEx": "Ao and Takagi,? \\Q2005\\E", "shortCiteRegEx": "Ao and Takagi", "year": 2005}, {"title": "GATE: A framework and graphical development environment for robust NLP tools and applications", "author": ["H Cunningham"], "venue": "Proceedings of the 40th Anniversary Meeting of the Association for Computational Linguistics (ACL\u201902),", "citeRegEx": "Cunningham,? \\Q2002\\E", "shortCiteRegEx": "Cunningham", "year": 2002}, {"title": "Medstract: natural language tools for mining the biobibliome", "author": ["J Pustejovsky"], "venue": "Available from: http://www.medstract.org/ [Accessed", "citeRegEx": "Pustejovsky,? \\Q2002\\E", "shortCiteRegEx": "Pustejovsky", "year": 2002}, {"title": "A simple algorithm for identifying abbreviation definitions in biomedical text", "author": ["AS Schwartz", "MA Hearst"], "venue": "Proceedings of the Pacific Symposium on Biocomputing,", "citeRegEx": "Schwartz and Hearst,? \\Q2003\\E", "shortCiteRegEx": "Schwartz and Hearst", "year": 2003}, {"title": "Disambiguation of biomedical abbreviations. Proceeding BioNLP '09", "author": ["M Stevenson"], "venue": "Proceedings of the Workshop on Current Trends in Biomedical Natural Language Processing", "citeRegEx": "Stevenson,? \\Q2009\\E", "shortCiteRegEx": "Stevenson", "year": 2009}, {"title": "A comparison study on algorithms of detecting long forms for short forms in biomedical text", "author": ["M Torii"], "venue": "BMC Bioinformatics,", "citeRegEx": "Torii,? \\Q2007\\E", "shortCiteRegEx": "Torii", "year": 2007}, {"title": "MBA: a literature mining system for extracting biomedical abbreviations", "author": ["Y Xu"], "venue": "BMC Bioinformatics,", "citeRegEx": "Xu,? \\Q2009\\E", "shortCiteRegEx": "Xu", "year": 2009}], "referenceMentions": [{"referenceID": 4, "context": "Identification of abbreviations and acronyms, or short forms (SF), for given term definitions, or long forms (LF), is a well researched topic in the biomedical natural language processing domain (see Torii et al. 2007 for a review). Existing tools such as Schwartz & Hearst (2003) and Ao & Takagi (2005) extract LF-SF pairs for dictionary creation, but do not provide automatic expansion of SFs within the text at the point at which they occur, which is a necessary precursor for semantic type assignment and coreference resolution.", "startOffset": 200, "endOffset": 281}, {"referenceID": 4, "context": "Identification of abbreviations and acronyms, or short forms (SF), for given term definitions, or long forms (LF), is a well researched topic in the biomedical natural language processing domain (see Torii et al. 2007 for a review). Existing tools such as Schwartz & Hearst (2003) and Ao & Takagi (2005) extract LF-SF pairs for dictionary creation, but do not provide automatic expansion of SFs within the text at the point at which they occur, which is a necessary precursor for semantic type assignment and coreference resolution.", "startOffset": 200, "endOffset": 304}, {"referenceID": 1, "context": "BADREX is implemented in Java as a plugin for the General Architecture for Text Engineering (GATE) framework (Cunningham et al. 2002). It takes a Set of sentences from GATE\u2019s sentence splitter, over which it iterates once. For each sentence, five processing steps are performed, where Step 1 is similar to the first stage outlined in Schwartz & Hearst (2003) and Step 2 to the third phase of Ao & Takagi (2005):", "startOffset": 110, "endOffset": 359}, {"referenceID": 1, "context": "BADREX is implemented in Java as a plugin for the General Architecture for Text Engineering (GATE) framework (Cunningham et al. 2002). It takes a Set of sentences from GATE\u2019s sentence splitter, over which it iterates once. For each sentence, five processing steps are performed, where Step 1 is similar to the first stage outlined in Schwartz & Hearst (2003) and Step 2 to the third phase of Ao & Takagi (2005):", "startOffset": 110, "endOffset": 411}], "year": 2012, "abstractText": "BADREX uses dynamically generated regular expressions to annotate term definition\u2013term abbreviation pairs, and corefers unpaired acronyms and abbreviations back to their initial definition in the text. Against the Medstract corpus BADREX achieves precision and recall of 98% and 97%, and against a much larger corpus, 90% and 85%, respectively. BADREX yields improved performance over previous approaches, requires no training data and allows runtime customisation of its input parameters. BADREX is freely available from https://github.com/philgooch/BADREX-Biomedical-AbbreviationExpander as a plugin for the General Architecture for Text Engineering (GATE) framework and is licensed under the GPLv3.", "creator": "Microsoft Word"}}}