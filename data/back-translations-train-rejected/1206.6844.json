{"id": "1206.6844", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jun-2012", "title": "From influence diagrams to multi-operator cluster DAGs", "abstract": "There exist several architectures to solve influence diagrams using local computations, such as the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures. They all extend usual variable elimination algorithms thanks to the use of so-called 'potentials'. In this paper, we introduce a new architecture, called the Multi-operator Cluster DAG architecture, which can produce decompositions with an improved constrained induced-width, and therefore induce potentially exponential gains. Its principle is to benefit from the composite nature of influence diagrams, instead of using uniform potentials, in order to better analyze the problem structure.", "histories": [["v1", "Wed, 27 Jun 2012 16:21:20 GMT  (169kb)", "http://arxiv.org/abs/1206.6844v1", "Appears in Proceedings of the Twenty-Second Conference on Uncertainty in Artificial Intelligence (UAI2006)"]], "COMMENTS": "Appears in Proceedings of the Twenty-Second Conference on Uncertainty in Artificial Intelligence (UAI2006)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["cedric pralet", "thomas schiex", "gerard verfaillie"], "accepted": false, "id": "1206.6844"}, "pdf": {"name": "1206.6844.pdf", "metadata": {"source": "CRF", "title": "From influence diagrams to multi-operator cluster DAGs", "authors": ["C\u00e9dric Pralet", "Thomas Schiex"], "emails": [], "sections": [{"heading": null, "text": "There are several architectures for solving influence diagrams using local calculations, such as the Shenoy Shafer, the HUGIN, or the Lazy Propagation architectures, all of which extend the usual variable elimination algorithms by using so-called \"potentials.\" In this article, we present a new architecture called the Multi-Operator Cluster DAG Architecture. It can produce decompositions with an improved induced width, potentially generating exponential gains. Its principle is to benefit from the composition of the influence diagrams, rather than using uniform potentials to better analyze the problem structure."}, {"heading": "1 INTRODUCTION", "text": "Since the first algorithms based on decision trees or arc inversion operations [Shachter, 1986], several exact methods have been proposed to solve influence diagrams using local calculations, such as those based on the Shenoy shafer, HUGIN, or Lazy Propagation Architectures [Shenoy, 1992; Jensen et al., 1994; Madsen and Jensen, 1999]. These methods have successfully adapted the classic techniques of variable elimination (sum and maximum) (which are essentially designed to calculate a type of marginalization based on a combination of local functions with only one type of combination operators) to calculate the multiple information types (probabilities and utilities), the multiple types of marginalization (sum and maximum), and the multiple combination types (for probabilities, + for utilities) involved in an influence diagram."}, {"heading": "2 MOTIVATIONS", "text": "Notations and Definitions An influence chart [Howard and Matheson, 1984] is a composite graphical model q (defined on three groups of variables organized in a Directed Acyclic Graph (DAG) G: (1) a set of C random variables x-C. (indices represent the order in which decisions are made) of decision variables x-D. (For each of these variables pa (x) is the set of variables observed before decision x is made; (3) a set of variables u-D. (indices represent the order in which decisions are made) of decision variables x-D. (For each of these variables pa (x) is the set of variables observed before decision x is made; (3) a set of utility variables u-D. (indices, each of which is associated with a utility function Upa (u)) on pa (u) on pa (and are left in use mode)."}, {"heading": "2.1 THE \u201cPOTENTIAL\u201d APPROACH", "text": "In this approach, equation 1 is reformulated using so-called potentials to use only one combination and one marginalization operator. A potential on a set of variables W is a pair \u03c0W = (pW, uW), where pW and uW are each a nonnegative real function and a real function whose scope is contained in W. The initial conditional probability distributions Pi-P are converted into potentials (Pi, 0), while the initial utility functions Ui-U are converted into potentials (1, Ui). On these potentials, a combination operation and a marginalization (or elimination) operation are defined: \u2022 the combination of \u03c0W1 = (pW1, uW1) and \u03c0W2 = (pW2, uW2) is the potential on W1, W2 (W1, WWW2) and the marginalization operation (pW2, uW2)."}, {"heading": "2.2 QUANTIFYING THE COMPLEXITY", "text": "In the case of influence diagrams, the alternation of sum and maximum marginalizations uses q, which is not of Gen-1The LP architecture actually uses potentials defined as pairs of functions (instead of function pairs).ally oscillating, preventing the elimination of variables in any order. The complexity of VE can then be quantified using restricted induced width [Jensen et al., 1994; Park and Darwiche, 2004] (instead of induced width [Dechter and Fattah, 2001]).Definition 1. Let G = (VG, HG) be a hypergraph 2 and let a partial order be on VG. The restricted induced width of G with limitations on the elimination order of (\"x-y\" stands for \"y must be eliminated before x\") is a parameter called wG ()."}, {"heading": "2.3 DECREASING THE CONSTRAINED INDUCED-WIDTH", "text": "The limited width is a guideline to show how the complexity can be reduced. In this direction, one can work on the two parameters on which it depends: the partial order and the hypergraph G. The weakening of the partial order 1. Let G = (VG, HG) be a hypergraph and let 1, 2 be two partial orders on VG in such a way that one reveals some additional freedoms in the elimination order (e.g. by proving that some marginalizations can oscillate with sum and max), then the theoretical complexity can decrease. Although such a technique is known as the Maximum A posteriori hypothesis as useless."}, {"heading": "3 THE MCDAG ARCHITECTURE", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 MACROSTRUCTURING AN INFLUENCE DIAGRAM", "text": "The first step in building the MCDAG architecture is to analyze the macrostructure of the influence diagram by determining the possible reordering freedoms in the elimination order, while applying the duplication techniques and normalization conditions to conditional probability distributions. This macrostructure is represented by a DAG of the computation node.Definition 2. An atomic computation node is either an atomic computation node or a triple n = (Sov, ~, N), where Sov is a sequence of operator-variable pairs, ~ is an associative and commutative operator with an identity, and where N is a sequence of compression nodes. \u2212 In the latter, the value of n = Sov (~ n \u00b2 n) or a commutative operator with an identity, and where N is an illustration of x node compression node."}, {"heading": "3.1.1 From influence diagrams to computation nodes", "text": "Suggestion 3. Let Sov0 be the initial sequence \u2211 I0 maxD1... \u2211 Iq \u2212 1 maxDq \u2211 Iq of the operator variable pairs defined by the influence diagram. Equation 1 is equal to the value of the calculation node n0 = (Sov0, +, {(\u2205, \u00d7, P variable pairs {Ui}, Ui-U}).For the influence diagram associated with the calculation of maxd \u2211 r2, r1 Pr1 \u00b7 Pr2 | r1 \u00b7 (Ud, r1 + Ud, r2 + Ud), n0 corresponds to the first calculation node in Figure 2."}, {"heading": "3.1.2 Macrostructuring the initial node", "text": "To illustrate the macro structure of the influence chart, we analyze the order of calculations performed by n0. To do this, we gradually look at the selection results in practice and use three types of reformulation rules to make the macro structure explicit: (1) reformulation rules that decompose the structure using standardization conditions; (2) reformulation rules that reveal freedoms in the elimination order; (3) simplification rules that remove useless compilations from the architecture by applying standardization conditions. Reformulation rules are presented first in the case of sum marginalization, and then in the case of marginalization. A reformulation rule can be limited by preconditions that limit its applicability."}, {"heading": "3.2 TOWARDS MCDAGS", "text": "The rewritten rules allow us to turn the initial multi-operator arithmetic node n0 into a DAG of the mono-operator arithmetic nodes (maxS, +, N), (\u2211 S, \u00b7, N), (\u2205, \u00b7, N), (R, max, +) and (R, +,) are commutative semirings, and there, on the other hand, are no constraints in the elimination order of these nodes. (R, max, +) and (R, +, \u00d7) are commutative semirings, and there are no constraints in the elimination order within these nodes. (The only slight difference with ordinary linkage trees is that only a subset of variables is involved in a computation."}, {"heading": "3.3 MERGING SOME COMPUTATIONS", "text": "There may be MCDAG clusters that perform exactly the same calculations, even if the arithmetic nodes from which they originate are different. For example, a arithmetic node n1 = (\u2211 x, y, \u00d7, {Px, Py | x, Uy, z) can be split into clusters c1 = ({x}, {Px, Py | x}, \u2205, (+, \u00d7) and c \u2032 1 = ({y}, {Uy, z}, {c \u2032 1}, (+, \u00d7). A arithmetic node n2 = ({x, y, \u00d7, {Px, Py, Uy, t) can be compiled in clusters c2 = ({x}, {Py, Py | x}), better (+, \u00d7) and c \u2032 2 = (x, x)."}, {"heading": "4 VE ALGORITHM ON MCDAGs", "text": "The definition of a VE algorithm on an MCDAG is simple. The only difference to existing VE algorithms is the aspect of multiple operators for both the marginalization and the combination operators used. As in common architectures, nodes send messages to their parents. Whenever a node c has received all messages val (s) from its children, c can calculate its own value val (c) = \u0442 cV (c) \u2212 V (pa (c)) (((c), c (cs) sons (c) val (s)) and send it to its parents. As a result, messages go from the leaves to the root, and the value calculated from the root is the maximum expected benefit."}, {"heading": "5 COMPARISON WITH EXISTING ARCHITECTURES", "text": "Compared to existing architectures on influence diagrams, MCDAGs can be exponentially more efficient by greatly reducing the restricted induced width (see section 2.3), thanks to (1) duplication technology, (2) the analysis of additional reordering freedoms, and (3) the use of normalization conditions. These three points can be compared with existing work: \u2022 The idea behind duplication is to use all the decompositions (independencies) available in influence diagrams. Indeed, an influence diagram presses independence tendencies on one hand on the global probability distribution PC | D, and on the other hand on the global utility function. MCDAGs separately use these two types of independencies, whereas a potentially-based approach uses a kind of weaker \"mixed\" independence relationship. The use of duplication mechanisms during MCDAG buildings is better than the use of \"CDAG on the fly decision\" of CDAG [4] as in the usual 1.1."}, {"heading": "6 POSSIBLE EXTENSIONS", "text": "In fact, the MCDAG architecture has been developed in a generic algebraic framework that subsumes influence diagrams. This framework, called the plausibility, feasibility and benefit network (PFUs) [Pralet et et al., 2006a], is a general framework for sequential decision-making with possible uncertainties (plausibility part), asymmetries in the decision-making process (feasibility part), and utilities. PFUs subsume formalisms ranging from quantified Boolean formulas or Bayesian networks to stochastic satisfaction problems, and even define new frameworks such as possible influence diagrams. This subsumption is possible because the questions raised in many existing formalities are often reduced to a sequence of marginalizations to a combination of selected functions. Such sequences, one of which is Eq.1, can be actively rewritten by restructuring previously introduced rules like the operandals."}, {"heading": "7 CONCLUSION", "text": "The key point is that using the composition of graphical models such as influence diagrams, and in particular the algebraic properties of the elimination and combination operators involved, is crucial in order to obtain an efficient architecture for local computation.The direct handling of multiple elimination and combination operators in a kind of composite architecture is the key mechanism that enables MCDAGs to always generate the best induced width compared to potential-based schemas.The authors are currently working on obtaining experimental results on MCDAGs in the context of the PFU framework (the construction of MCDAG architectures is currently being implemented)."}, {"heading": "Acknowledgments", "text": "We would like to thank the reviewers of this article for their helpful comments on related work, which was carried out in part within the framework of the EU IP COGNIRON (\"The Cognitive Companion\"), which was funded by the FP6-IST Future and Emerging Technologies Division of the European Commission under the FP6-002020 contract."}], "references": [{"title": "Topological Parameters for Time-Space Tradeoff", "author": ["R. Dechter", "Y. El Fattah"], "venue": "Artificial Intelligence, 125(1-2):93\u2013118", "citeRegEx": "Dechter and Fattah. 2001", "shortCiteRegEx": null, "year": 2001}, {"title": "Possibility Theory as a Basis for Qualitative Decision Theory", "author": ["D. Dubois", "H. Prade"], "venue": "Proc. of the 14th International Joint Conference on Artificial Intelligence (IJCAI-95), pages 1925\u20131930", "citeRegEx": "Dubois and Prade. 1995", "shortCiteRegEx": null, "year": 1995}, {"title": "Influence Diagrams", "author": ["R. Howard", "J. Matheson"], "venue": "Readings on the Principles and Applications of Decision Analysis, pages 721\u2013762", "citeRegEx": "Howard and Matheson. 1984", "shortCiteRegEx": null, "year": 1984}, {"title": "From Influence Diagrams to Junction Trees", "author": ["F. Jensen", "F.V. Jensen", "S. Dittmer"], "venue": "Proc. of the 10th International Conference on Uncertainty in Artificial Intelligence (UAI-94), pages 367\u2013373", "citeRegEx": "Jensen et al.. 1994", "shortCiteRegEx": null, "year": 1994}, {"title": "Representing and Solving Decision Problems with Limited Information", "author": ["S. Lauritzen", "D. Nilsson"], "venue": "Management Science, 47(9):1235\u20131251", "citeRegEx": "Lauritzen and Nilsson. 2001", "shortCiteRegEx": null, "year": 2001}, {"title": "Lazy Evaluation of Symmetric Bayesian Decision Problems", "author": ["A. Madsen", "F.V. Jensen"], "venue": "Proc. of the 15th International Conference on Uncertainty in Artificial Intelligence (UAI-99), pages 382\u2013390", "citeRegEx": "Madsen and Jensen. 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "Potential Influence Diagrams", "author": ["P. Ndilikilikesha"], "venue": "International Journal of Approximated Reasoning, 10:251\u2013285", "citeRegEx": "Ndilikilikesha. 1994", "shortCiteRegEx": null, "year": 1994}, {"title": "Complexity Results and Approximation Strategies for MAP Explanations", "author": ["J. Park", "A. Darwiche"], "venue": "Journal of Artificial Intelligence Research, 21:101\u2013133", "citeRegEx": "Park and Darwiche. 2004", "shortCiteRegEx": null, "year": 2004}, {"title": "Decision with Uncertainties", "author": ["C. Pralet", "G. Verfaillie", "T. Schiex"], "venue": "Feasibilities, and Utilities: Towards a Unified Algebraic Framework. In Proc. of the 17th European Conference on Artificial Intelligence (ECAI-06)", "citeRegEx": "Pralet et al.. 2006a", "shortCiteRegEx": null, "year": 2006}, {"title": "From Influence Diagrams to MCDAGs: Extended version", "author": ["C. Pralet", "G. Verfaillie", "T. Schiex"], "venue": "Technical report, LAAS-CNRS,", "citeRegEx": "Pralet et al.. 2006b", "shortCiteRegEx": null, "year": 2006}, {"title": "Evaluating Influence Diagrams", "author": ["R. Shachter"], "venue": "Operations Research, 34(6):871\u2013882", "citeRegEx": "Shachter. 1986", "shortCiteRegEx": null, "year": 1986}, {"title": "Valuation-based Systems for Discrete Optimization", "author": ["P. Shenoy"], "venue": "Proc. of the 6th International Conference on Uncertainty in Artificial Intelligence (UAI-90), pages 385\u2013400", "citeRegEx": "Shenoy. 1990", "shortCiteRegEx": null, "year": 1990}, {"title": "Valuation-based Systems for Bayesian Decision Analysis", "author": ["P. Shenoy"], "venue": "Operations Research, 40(3):463\u2013484", "citeRegEx": "Shenoy. 1992", "shortCiteRegEx": null, "year": 1992}], "referenceMentions": [{"referenceID": 10, "context": "Since the first algorithms based on decision trees or arc-reversal operations [Shachter, 1986], several exact methods have been proposed to solve influence diagrams using local computations, such as the ones based on the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures [Shenoy, 1992; Jensen et al.", "startOffset": 78, "endOffset": 94}, {"referenceID": 12, "context": "Since the first algorithms based on decision trees or arc-reversal operations [Shachter, 1986], several exact methods have been proposed to solve influence diagrams using local computations, such as the ones based on the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures [Shenoy, 1992; Jensen et al., 1994; Madsen and Jensen, 1999].", "startOffset": 285, "endOffset": 345}, {"referenceID": 3, "context": "Since the first algorithms based on decision trees or arc-reversal operations [Shachter, 1986], several exact methods have been proposed to solve influence diagrams using local computations, such as the ones based on the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures [Shenoy, 1992; Jensen et al., 1994; Madsen and Jensen, 1999].", "startOffset": 285, "endOffset": 345}, {"referenceID": 5, "context": "Since the first algorithms based on decision trees or arc-reversal operations [Shachter, 1986], several exact methods have been proposed to solve influence diagrams using local computations, such as the ones based on the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures [Shenoy, 1992; Jensen et al., 1994; Madsen and Jensen, 1999].", "startOffset": 285, "endOffset": 345}, {"referenceID": 6, "context": "The key mechanism used for such an extension consists in using elements known as potentials [Ndilikilikesha, 1994].", "startOffset": 92, "endOffset": 114}, {"referenceID": 9, "context": "All proofs are available in [Pralet et al., 2006b].", "startOffset": 28, "endOffset": 50}, {"referenceID": 2, "context": "Notations and definitions An influence diagram [Howard and Matheson, 1984] is a composite graphical model defined on three sets of variables organized in a Directed Acyclic Graph (DAG) G: (1) a set C of chance variables x \u2208 C, for each of which a conditional probability distribution Px | pa(x) on x given its parents in G is specified; (2) a set D = {D1, .", "startOffset": 47, "endOffset": 74}, {"referenceID": 3, "context": "The usual problem associated with an influence diagram is to find decision rules maximizing the expected utility (a decision rule for a decision Dk is a function associating a value in dom(Dk) with any assignment of the variables observed before making decision Dk) As shown in [Jensen et al., 1994], this is equivalent to computing optimal decision rules for the quantity", "startOffset": 278, "endOffset": 299}, {"referenceID": 11, "context": "As \u2297 and \u2191 satisfy the ShenoyShafer axioms defined in [Shenoy, 1990], \u03b2 can be computed using usual VE algorithms [Jensen et al.", "startOffset": 54, "endOffset": 68}, {"referenceID": 3, "context": "As \u2297 and \u2191 satisfy the ShenoyShafer axioms defined in [Shenoy, 1990], \u03b2 can be computed using usual VE algorithms [Jensen et al., 1994].", "startOffset": 114, "endOffset": 135}, {"referenceID": 3, "context": "The complexity of VE can then be quantified using constrained induced-width [Jensen et al., 1994; Park and Darwiche, 2004] (instead of inducedwidth [Dechter and Fattah, 2001]).", "startOffset": 76, "endOffset": 122}, {"referenceID": 7, "context": "The complexity of VE can then be quantified using constrained induced-width [Jensen et al., 1994; Park and Darwiche, 2004] (instead of inducedwidth [Dechter and Fattah, 2001]).", "startOffset": 76, "endOffset": 122}, {"referenceID": 0, "context": ", 1994; Park and Darwiche, 2004] (instead of inducedwidth [Dechter and Fattah, 2001]).", "startOffset": 58, "endOffset": 84}, {"referenceID": 3, "context": "Then, with classical approaches based on potentials and strong junction trees [Jensen et al., 1994], which are junction trees with constraints on the marginalization order, the theoretical complexity is O(|P \u222aU | \u00b7 dGp ( p) (the number of elements of a finite set E is denoted |E|).", "startOffset": 78, "endOffset": 99}, {"referenceID": 7, "context": "Though such a technique is known to be useless in contexts like Maximum A Posteriori hypothesis [Park and Darwiche, 2004], where there is only one alternation of max and sum marginalizations, This means that VG is the set of variables (or vertices), and HG is a set of hyperedges on VG, i.", "startOffset": 96, "endOffset": 121}, {"referenceID": 5, "context": "This is stronger than Lazy Propagation architectures [Madsen and Jensen, 1999], which use the first point only, during the message passing phase.", "startOffset": 53, "endOffset": 78}, {"referenceID": 8, "context": "This framework, called the Plausibility-Feasibility-Utility networks (PFUs) framework [Pralet et al., 2006a], is a generic framework for sequential decision making with possibly uncertainties (plausibility part), asymmetries in the decision process (feasibility part), and utilities.", "startOffset": 86, "endOffset": 108}, {"referenceID": 1, "context": "pessimistic expected utility [Dubois and Prade, 1995], the optimal utility can be defined by (the probability distributions Pi become possibility distributions, and the utilities Ui become preference degrees in [0, 1]): min I0 max D1 .", "startOffset": 29, "endOffset": 53}, {"referenceID": 4, "context": "Future directions could be first to adapt the MCDAG architecture to the case of Limited Memory Influence Diagrams (LIMIDs) [Lauritzen and Nilsson, 2001], and then to use the MCDAG architecture in the context of approximate resolution.", "startOffset": 123, "endOffset": 152}], "year": 0, "abstractText": "There exist several architectures to solve influence diagrams using local computations, such as the Shenoy-Shafer, the HUGIN, or the Lazy Propagation architectures. They all extend usual variable elimination algorithms thanks to the use of so-called \u201cpotentials\u201d. In this paper, we introduce a new architecture, called the Multi-operator Cluster DAG architecture, which can produce decompositions with an improved constrained inducedwidth, and therefore induce potentially exponential gains. Its principle is to benefit from the composite nature of influence diagrams, instead of using uniform potentials, in order to better analyze the problem structure.", "creator": null}}}