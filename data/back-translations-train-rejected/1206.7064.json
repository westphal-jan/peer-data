{"id": "1206.7064", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Jun-2012", "title": "Software Verification and Graph Similarity for Automated Evaluation of Students' Assignments", "abstract": "In this paper we promote introducing software verification and control flow graph similarity measurement in automated evaluation of students' programs. We present a new grading framework that merges results obtained by combination of these two approaches with results obtained by automated testing, leading to improved quality and precision of automated grading. These two approaches are also useful in providing a comprehensible feedback that can help students to improve the quality of their programs We also present our corresponding tools that are publicly available and open source. The tools are based on LLVM low-level intermediate code representation, so they could be applied to a number of programming languages. Experimental evaluation of the proposed grading framework is performed on a corpus of university students' programs written in programming language C. Results of the experiments show that automatically generated grades are highly correlated with manually determined grades suggesting that the presented tools can find real-world applications in studying and grading.", "histories": [["v1", "Fri, 29 Jun 2012 16:10:20 GMT  (45kb)", "http://arxiv.org/abs/1206.7064v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["milena vujosevic-janicic", "mladen nikolic", "dusan tosic", "viktor kuncak"], "accepted": false, "id": "1206.7064"}, "pdf": {"name": "1206.7064.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Viktor Kuncak"], "emails": ["milena@matf.bg.ac.rs", "nikolic@matf.bg.ac.rs", "dtosic@matf.bg.ac.rs", "viktor.kuncak@epfl.ch"], "sections": [{"heading": null, "text": "ar Xiv: 120 6,70 64v1 [cs.AI] 2Keywords automated grading, software verification, similarity of graphs, computer-aided educationThis work was partially supported by the Serbian Ministry of Science 174021 and by the Swiss National Foundation SCOPES IZ73Z0 127979 / 1.Milena Vujos evic \"-Janic ic\" \u00b7 Mladen Nikolic \"\u00b7 Dus an Tos ic\" Faculty of Mathematics, University of Belgrade, Belgrade, Serbia E-Mail: milena @ matf.bg.ac.rs E-Mail: nikolic @ matf.bg.ac.rs E-Mail: dtosic @ matf.bg.ac.rsViktor Kuncak, School of Computer and Communication Sciences, EPFL, Station 14, CH-1015 Lausanne, Switzerland E-Mail: viktor.kuncak @ epfl.ch"}, {"heading": "1 Introduction", "text": "The number of students taking such courses is measured in the online courses, the teaching process is carried out on the computer, the contact with the teachers is already minimal and the contact with the teachers is minimal (Pears, Seidman, Malmi, Mannila, Adams, Bennedsen, Devlin, & Paterson, 2007), the automated evaluation is also helpful for teachers in assessing assignments and it allows more time for other activities with students, it provides immediate feedback, which is very important in the process of studying, especially in computer science, where students take on the challenge of letting the computer follow their intentions (Nipkow, 2012), and immediate feedback is particularly helpful for first programming students in courses where the students have frequent and deep misunderstandings (Vujos), and the number of students taking such courses in millions of fast-growing courses (Allen Seaman, 2010)."}, {"heading": "2 Background", "text": "This chapter provides an overview of the intermediate languages, the LLVM tool, the software verification tool, the LAV tool, the control flow diagrams, and the graph similarity metrics. (Itself) This chapter provides an overview of the intermediate languages and the LLVM language. (Itself) It is an open source, widely used, rich compiler framework that is well suited for developing new medium-language independent analyses and optimizations of all kinds (Lattner & Adve, 2002). (LLVM-like language with simple RISC-like instructions. It provides easy construction of control flow graphs of program functions and entire programs. There are a number of tools that use LLVM for various purposes, including software verification."}, {"heading": "3 The Need for Synergy of Testing, Verification, and Similarity Measurement", "text": "It is not enough for test cases to cover all important paths by the program. It is also important to choose the values of variables for each path carefully - for some values along the same path a different value can be detected. Also, manually generated test cases are not detected, while other values cannot be detected. It is also important to choose the values of variables for each path carefully - for some values along the same path another value cannot be detected. Also, manually generated test cases cover all important paths by the program."}, {"heading": "4 Grading Setting", "text": "The setting used in an introductory course for programming in C (at the University of Belgrade) is the taking of computer exams and the expectation for students to write work programs. In order to help students achieve this goal, each task is provided with several test cases illustrating the desired behavior of the solution. Students are also given sufficient (but limited) time for the development and testing of programs. If a student does not provide a work program that delivers correct results for certain test cases, his / her solution will not be further investigated. Otherwise, the program will be tested by additional test cases (which are unknown to students) and a certain number of points will be given according to the successfully passed test cases. Only if all of these test cases are successfully passed, the program will be manually examined and may receive additional points related to other features of the program (efficiency, modularity, simplicity, lack of errors, etc.). All the experiments described in this work were created using a corpus of tests, with the following 15 students writing the following problems on the tests."}, {"heading": "5 Assignment Evaluation and Software Verification", "text": "In this section we will show the advantages of using software verification tools in the assignment, i.e. that it is a real problem that can encompass all the techniques in a program, but does not take into account the indecision of the users. False alarms (i.e., different techniques are used to handle loops) result from the approximations that are necessary in the modeling of programs. The most important approximation concerns the handling of loops. Different approaches to verification use different techniques to handle loops. These techniques range from the approximation of loops to the approximation of loops."}, {"heading": "6 Assignment Evaluation and Structural Similarity of Programs", "text": "In this section, we propose a similarity measurement for programs based on their control flow graphs, perform their experimental similarity, and point out ways they can be used to provide feedback to students and faculty.6.1 Similarity of CFGs for program mapping is considered good if it is similar to some of the teacher's programs (Wang et al., 2007). To perform a comparison, appropriate program presentation and similarity measurement are required. As noted in Section 2, there is a control flow graph (CFG) that matches each program, and there is a linear code sequence attributed to each node of the CFG. We assume that the code is LLLVM in the intermediate language."}, {"heading": "7 Automated Grading", "text": "We believe that automated grading can always be done by calculating a linear combination of different values measured for the student's learning success. We propose a linear model for predicting the grades provided by teachers in the following form: y = \u03b11 \u00b7 x2 \u00b7 x3where- y is the automatically predicted grade, - x1 is a result obtained by automated tests expressed in the interval [0,1], - x2 is 1 if the student's solution is correct, as reported by the software verification tool, and 0 otherwise - x3 is the maximum value of similarity between the student and the teacher providing solutions (his range is [0,1]). It should be noted that we do not use the number of errors as parameters as discussed in Section 5.2. Different decisions for coefficients, for i = 1, 2, 3 could be proposed."}, {"heading": "8 Related work", "text": "Test cases are usually provided by a teacher and / or randomly generated programs (Mandal et al., 2007) Many systems use this approach, for example PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, 2001), HoGG (Morris, 2002), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004)."}, {"heading": "9 Conclusions and Further Work", "text": "We presented two techniques that can be used to improve the automatic evaluation of student programs. First, based on software verification and second, CFG similarity measurement. Both techniques can be used to provide useful and helpful feedback to students and to improve automatic grading. This shows that our approach can be adapted to the teacher grading style and then applied to other problems, using only a few model solutions. An important advantage of our approach is the independence of the specific programming language for a new set of tasks. This shows that our approach can be geared towards teacher grading."}], "references": [{"title": "A Survey of Automated Assessment Approaches for Programming Assignments", "author": ["K.M. Ala-Mutka"], "venue": "Computer Science Education, 15, 83\u2013102.", "citeRegEx": "Ala.Mutka,? 2005", "shortCiteRegEx": "Ala.Mutka", "year": 2005}, {"title": "Learning on demand: Online education", "author": ["I.E. Allen", "J. Seaman"], "venue": "in the united states,", "citeRegEx": "Allen and Seaman,? \\Q2010\\E", "shortCiteRegEx": "Allen and Seaman", "year": 2010}, {"title": "Webtoteach: an interactive focused programming exercise system", "author": ["D. Arnow", "O. Barshay"], "venue": "Frontiers in Education, Annual,", "citeRegEx": "Arnow and Barshay,? \\Q1999\\E", "shortCiteRegEx": "Arnow and Barshay", "year": 1999}, {"title": "Satisfiability modulo theories", "author": ["C. Barrett", "R. Sebastiani", "S.A. Seshia", "C. Tinelli"], "venue": "In Handbook of Satisfiability,", "citeRegEx": "Barrett et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Barrett et al\\.", "year": 2009}, {"title": "A measure of similarity between graph vertices: Applications to synonym extraction and web searching", "author": ["V.D. Blondel", "A. Gajardo", "M. Heymans", "P. Snellart", "P. van Dooren"], "venue": "SIAM Review,", "citeRegEx": "Blondel et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Blondel et al\\.", "year": 2004}, {"title": "Klee: Unassisted and automatic generation of high-coverage tests for complex systems programs", "author": ["C. Cadar", "D. Dunbar", "D. Engler"], "venue": "In Proceeding OSDI\u201908 Proceedings of the 8th USENIX conference on Operating systems design and implementation. USENIX Association Berkeley", "citeRegEx": "Cadar et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Cadar et al\\.", "year": 2008}, {"title": "On automated grading", "author": ["B. Cheang", "A. Kurnia", "A. Lim", "Oon", "W.-C"], "venue": null, "citeRegEx": "Cheang et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Cheang et al\\.", "year": 2003}, {"title": "S2e: a platform for in-vivo", "author": ["V. Chipounov", "V. Kuznetsov", "G. Candea"], "venue": null, "citeRegEx": "Chipounov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Chipounov et al\\.", "year": 2011}, {"title": "A tool for checking ansi-c programs", "author": ["E. Clarke", "D. Kroening", "F. Lerda"], "venue": null, "citeRegEx": "Clarke et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Clarke et al\\.", "year": 2004}, {"title": "Smt-based bounded model", "author": ["L. Cordeiro", "B. Fischer", "J. Marques-Silva"], "venue": null, "citeRegEx": "Cordeiro et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Cordeiro et al\\.", "year": 2009}, {"title": "Abstract interpretation: A unified lattice model", "author": ["P. Cousot", "R. Cousot"], "venue": null, "citeRegEx": "Cousot and Cousot,? \\Q1977\\E", "shortCiteRegEx": "Cousot and Cousot", "year": 1977}, {"title": "Automatic test-based assessment", "author": ["C. Douce", "D. Livingstone", "J. Orwell"], "venue": null, "citeRegEx": "Douce et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Douce et al\\.", "year": 2005}, {"title": "The quiver system", "author": ["C.C. Ellsworth", "Fenwick", "J.B. Jr.", "B.L. Kurtz"], "venue": null, "citeRegEx": "Ellsworth et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Ellsworth et al\\.", "year": 2004}, {"title": "Automated assessment of gui programs using jewl", "author": ["J. English"], "venue": "SIGCSE", "citeRegEx": "English,? 2004", "shortCiteRegEx": "English", "year": 2004}, {"title": "Open/c\u00e6sar: An open software architecture for verification", "author": ["H. Garavel"], "venue": null, "citeRegEx": "Garavel,? \\Q1998\\E", "shortCiteRegEx": "Garavel", "year": 1998}, {"title": "Sage: Whitebox fuzzing", "author": ["P. Godefroid", "M.Y. Levin", "D.A. Molnar"], "venue": null, "citeRegEx": "Godefroid et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Godefroid et al\\.", "year": 2012}, {"title": "Linear Regression", "author": ["J. Gross"], "venue": "Springer.", "citeRegEx": "Gross,? 2003", "shortCiteRegEx": "Gross", "year": 2003}, {"title": "An automatic grading scheme for simple", "author": ["J.B. Hext", "J.W. Winings"], "venue": null, "citeRegEx": "Hext and Winings,? \\Q1969\\E", "shortCiteRegEx": "Hext and Winings", "year": 1969}, {"title": "Deriving phylogenetic trees from the similarity", "author": ["M. Heymans", "A. Singh"], "venue": null, "citeRegEx": "Heymans and Singh,? \\Q2003\\E", "shortCiteRegEx": "Heymans and Singh", "year": 2003}, {"title": "The use of program dependence graphs in software", "author": ["S. Horwitz", "T. Reps"], "venue": null, "citeRegEx": "Horwitz and Reps,? \\Q1992\\E", "shortCiteRegEx": "Horwitz and Reps", "year": 1992}, {"title": "Creating and visualizing test data from programming exercises", "author": ["P. Ihantola"], "venue": null, "citeRegEx": "Ihantola,? \\Q2007\\E", "shortCiteRegEx": "Ihantola", "year": 2007}, {"title": "Grading student programs - a software testing approach", "author": ["E.L. Jones"], "venue": null, "citeRegEx": "Jones,? \\Q2001\\E", "shortCiteRegEx": "Jones", "year": 2001}, {"title": "The boss online submission", "author": ["M. Joy", "N. Griffiths", "R. Boyatt"], "venue": null, "citeRegEx": "Joy et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Joy et al\\.", "year": 2005}, {"title": "Symbolic execution and program testing", "author": ["J.C. King"], "venue": "Communications of the ACM, 19 (7), 385\u2013394.", "citeRegEx": "King,? 1976", "shortCiteRegEx": "King", "year": 1976}, {"title": "Authoritative sources in a hyperlinked environment", "author": ["J.M. Kleinberg"], "venue": "Journal of the ACM, 46, 604 \u2014 632.", "citeRegEx": "Kleinberg,? 1999", "shortCiteRegEx": "Kleinberg", "year": 1999}, {"title": "Use of machine learning techniques for educational proposes: a decision support system for forecasting students\u2019 grades", "author": ["S.B. Kotsiantis"], "venue": "Artificial Intelligence Review, 34 (4), 331\u2013344.", "citeRegEx": "Kotsiantis,? 2012", "shortCiteRegEx": "Kotsiantis", "year": 2012}, {"title": "The hungarian method for the assignment problem", "author": ["H.W. Kuhn"], "venue": "Naval Research Logistics Quarterly, 2 (1-2), 83\u201397.", "citeRegEx": "Kuhn,? 1955", "shortCiteRegEx": "Kuhn", "year": 1955}, {"title": "The LLVM Instruction Set and Compilation Strategy", "author": ["C. Lattner", "V. Adve"], "venue": null, "citeRegEx": "Lattner and Adve,? \\Q2002\\E", "shortCiteRegEx": "Lattner and Adve", "year": 2002}, {"title": "Binary codes capable of correcting deletions, insertions, and reversals", "author": ["V.I. Levenshtein"], "venue": "Soviet Physics Doklady, 10 (8), 707\u2013710.", "citeRegEx": "Levenshtein,? 1966", "shortCiteRegEx": "Levenshtein", "year": 1966}, {"title": "Design and implementation of semantic matching based automatic scoring system for c programming language", "author": ["J. Li", "W. Pan", "R. Zhang", "F. Chen", "S. Nie", "X. He"], "venue": "In Proceedings of the Entertainment for education, and 5th international conference on E-learning and games,", "citeRegEx": "Li et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Li et al\\.", "year": 2010}, {"title": "Mining lms data to develop an \u201dearly warning system\u201d for educators: a proof of concept", "author": ["L.P. Macfadyen", "S. Dawson"], "venue": "Computers and Education,", "citeRegEx": "Macfadyen and Dawson,? \\Q2010\\E", "shortCiteRegEx": "Macfadyen and Dawson", "year": 2010}, {"title": "A system for automatic evaluation of c programs", "author": ["A.K. Mandal", "C.A. Mandal", "C. Reade"], "venue": "Features and interfaces. IJWLTT,", "citeRegEx": "Mandal et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Mandal et al\\.", "year": 2007}, {"title": "Kassandra: The automatic grading system", "author": ["U.V. Matt"], "venue": "SIGCUE Outlook, 22, 22\u201326.", "citeRegEx": "Matt,? 1994", "shortCiteRegEx": "Matt", "year": 1994}, {"title": "Automatically grading java programming assignments via reflection, inheritance, and regular expressions", "author": ["D.S. Morris"], "venue": "Frontiers in Education Conference 1, 1, T3G\u201322.", "citeRegEx": "Morris,? 2002", "shortCiteRegEx": "Morris", "year": 2002}, {"title": "Automatic grading of student\u2019s programming assignments: an interactive process and suit of programs", "author": ["D. Morris"], "venue": "Proceedings of the Frontiers in Education Conference 3, Vol. 3, pp. 1\u20136.", "citeRegEx": "Morris,? 2003", "shortCiteRegEx": "Morris", "year": 2003}, {"title": "Marking student programs using graph similarity", "author": ["K.A. Naud\u00e9", "J.H. Greyling", "D. Vogts"], "venue": "Computers and Education,", "citeRegEx": "Naud\u00e9 et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Naud\u00e9 et al\\.", "year": 2010}, {"title": "Measuring similarity of graph nodes by neighbor matching", "author": ["M. Nikoli\u0107"], "venue": "Intelligent Data Analysis, Accepted for publication.", "citeRegEx": "Nikoli\u0107,? 2013", "shortCiteRegEx": "Nikoli\u0107", "year": 2013}, {"title": "Teaching semantics with a proof assistant: No more lsd trip proofs", "author": ["T. Nipkow"], "venue": "VMCAI, pp. 24\u201338.", "citeRegEx": "Nipkow,? 2012", "shortCiteRegEx": "Nipkow", "year": 2012}, {"title": "A survey of literature on the teaching of introductory programming", "author": ["A. Pears", "S. Seidman", "L. Malmi", "L. Mannila", "E. Adams", "J. Bennedsen", "M. Devlin", "J. Paterson"], "venue": "In Working group reports on ITiCSE on Innovation and technology in computer science education,", "citeRegEx": "Pears et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Pears et al\\.", "year": 2007}, {"title": "Fully automatic assessment of programming exercises", "author": ["R. Saikkonen", "L. Malmi", "A. Korhonen"], "venue": "ACM Sigcse Bulletin,", "citeRegEx": "Saikkonen et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Saikkonen et al\\.", "year": 2001}, {"title": "The economic impacts of inadequate infrastructure for software testing", "author": ["G. Tassey"], "venue": "Tech. rep., National Institute of Standards and Technology.", "citeRegEx": "Tassey,? 2002", "shortCiteRegEx": "Tassey", "year": 2002}, {"title": "Pex white box test generation for .net", "author": ["N. Tillmann", "J. Halleux"], "venue": "In Proc. of TAP 2008, the 2nd International Conference on Tests and Proofs,", "citeRegEx": "Tillmann and Halleux,? \\Q2008\\E", "shortCiteRegEx": "Tillmann and Halleux", "year": 2008}, {"title": "Development and evaluation of LAV: an SMT-based error finding platform. In Verified Software: Theories, Tools and Experiments (VSTTE), LNCS", "author": ["M. Vujo\u0161evi\u0107-Jani\u010di\u0107", "V. Kuncak"], "venue": null, "citeRegEx": "Vujo\u0161evi\u0107.Jani\u010di\u0107 and Kuncak,? \\Q2012\\E", "shortCiteRegEx": "Vujo\u0161evi\u0107.Jani\u010di\u0107 and Kuncak", "year": 2012}, {"title": "The role of programming paradigms in the first programming courses", "author": ["M. Vujo\u0161evi\u0107-Jani\u010di\u0107", "D. To\u0161i\u0107"], "venue": "The Teaching of Mathematics,", "citeRegEx": "Vujo\u0161evi\u0107.Jani\u010di\u0107 and To\u0161i\u0107,? \\Q2008\\E", "shortCiteRegEx": "Vujo\u0161evi\u0107.Jani\u010di\u0107 and To\u0161i\u0107", "year": 2008}, {"title": "Semantic similarity-based grading of student programs", "author": ["T. Wang", "X. Su", "Y. Wang", "P. Ma"], "venue": "Information and Software Technology,", "citeRegEx": "Wang et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2007}, {"title": "Using testing and junit across the curriculum", "author": ["M. Wick", "D. Stevenson", "P. Wagner"], "venue": "SIGCSE Bull.,", "citeRegEx": "Wick et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Wick et al\\.", "year": 2005}], "referenceMentions": [{"referenceID": 37, "context": "For students, it provides immediate feedback which is very important in process of studying, especially in computer science where students take a challenge of making the computer follow their intentions (Nipkow, 2012).", "startOffset": 203, "endOffset": 217}, {"referenceID": 0, "context": "Recent surveys of related approaches are given elsewhere (Ala-Mutka, 2005; Ihantola, Ahoniemi, Karavirta, & Sepp\u00e4l\u00e4, 2010).", "startOffset": 57, "endOffset": 122}, {"referenceID": 36, "context": "We also briefly discuss tools for software verification (Vujo\u0161evi\u0107-Jani\u010di\u0107 & Kuncak, 2012) and CFG similarity (Nikoli\u0107, 2013), that we use for assignment evaluation.", "startOffset": 110, "endOffset": 125}, {"referenceID": 40, "context": "Software bugs cost the world economy billions of dollars annually (Tassey, 2002).", "startOffset": 66, "endOffset": 80}, {"referenceID": 23, "context": "Different approaches to automated checking of software properties exist, such as symbolic execution (King, 1976), model checking (Clarke, 2008) and abstract interpretation (Cousot & Cousot, 1977).", "startOffset": 100, "endOffset": 112}, {"referenceID": 24, "context": "There are many similarity measures for graphs and their nodes (Kleinberg, 1999; Heymans & Singh, 2003; Blondel, Gajardo, Heymans, Snellart, & van Dooren, 2004; Nikoli\u0107, 2013).", "startOffset": 62, "endOffset": 174}, {"referenceID": 36, "context": "There are many similarity measures for graphs and their nodes (Kleinberg, 1999; Heymans & Singh, 2003; Blondel, Gajardo, Heymans, Snellart, & van Dooren, 2004; Nikoli\u0107, 2013).", "startOffset": 62, "endOffset": 174}, {"referenceID": 36, "context": "A short overview of similarity measures for graphs can be found in the literature (Nikoli\u0107, 2013).", "startOffset": 82, "endOffset": 97}, {"referenceID": 36, "context": "A specific similaritymeasure for graph nodes called neighbor matching, possesses properties relevant for our purpose that other similar measures lack (Nikoli\u0107, 2013).", "startOffset": 150, "endOffset": 165}, {"referenceID": 26, "context": "The assignment problem is usually solved by the well-known Hungarian algorithm of complexity O(mn) where m = max(|A|, |B|) and n = min(|A|, |B|) (Kuhn, 1955), but there are also more efficient algorithms.", "startOffset": 145, "endOffset": 157}, {"referenceID": 36, "context": "The termination condition is maxij |x k ij \u2212 x k\u22121 ij | < \u03b5 for some chosen precision \u03b5 and the iterative algorithm is proved to converge (Nikoli\u0107, 2013).", "startOffset": 138, "endOffset": 153}, {"referenceID": 36, "context": "The similarity of the graphs can be defined as the weight of the optimal matching of nodes from A and B divided by the number of matched nodes (Nikoli\u0107, 2013).", "startOffset": 143, "endOffset": 158}, {"referenceID": 44, "context": "CFGs) (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013).", "startOffset": 6, "endOffset": 60}, {"referenceID": 35, "context": "CFGs) (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013).", "startOffset": 6, "endOffset": 60}, {"referenceID": 36, "context": "CFGs) (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013).", "startOffset": 6, "endOffset": 60}, {"referenceID": 44, "context": "Finally, using similarity only (like in (Wang et al., 2007; Naud\u00e9 et al., 2010)) or even with support of a bug finding tool, would miss to penalize incorrectness of program\u2019s behavior.", "startOffset": 40, "endOffset": 79}, {"referenceID": 35, "context": "Finally, using similarity only (like in (Wang et al., 2007; Naud\u00e9 et al., 2010)) or even with support of a bug finding tool, would miss to penalize incorrectness of program\u2019s behavior.", "startOffset": 40, "endOffset": 79}, {"referenceID": 44, "context": "Student\u2019s program is considered to be good if it is similar to some of the programs provided by the teacher (Wang et al., 2007).", "startOffset": 108, "endOffset": 127}, {"referenceID": 28, "context": "A simple way of measuring the similarity of two sequences of instructions s1 and s2 is using the edit distance between them d(s1, s2) \u2014 the minimal number of insertion, deletion and substitution operations over the elements of the sequence by which one sequence can be transformed into another (Levenshtein, 1966).", "startOffset": 294, "endOffset": 313}, {"referenceID": 44, "context": "In introductory programming courses, most often a student\u2019s solution can be considered as better if it is more similar to one of the teacher\u2019s solutions (Wang et al., 2007).", "startOffset": 153, "endOffset": 172}, {"referenceID": 44, "context": "For instance, the behavior of any of the proposed similarity measures including ours (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013) is not clear from their definitions only.", "startOffset": 85, "endOffset": 139}, {"referenceID": 35, "context": "For instance, the behavior of any of the proposed similarity measures including ours (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013) is not clear from their definitions only.", "startOffset": 85, "endOffset": 139}, {"referenceID": 36, "context": "For instance, the behavior of any of the proposed similarity measures including ours (Wang et al., 2007; Naud\u00e9 et al., 2010; Nikoli\u0107, 2013) is not clear from their definitions only.", "startOffset": 85, "endOffset": 139}, {"referenceID": 16, "context": "For that purpose, coefficients can be determined automatically using least squares linear regression (Gross, 2003) if a manually graded corpus of students\u2019 programs is provided by the teacher.", "startOffset": 101, "endOffset": 114}, {"referenceID": 11, "context": "Automated testing is the most common way of evaluating students\u2019 programs (Douce et al., 2005).", "startOffset": 74, "endOffset": 94}, {"referenceID": 31, "context": "Test cases are usually supplied by a teacher and/or randomly generated (Mandal et al., 2007).", "startOffset": 71, "endOffset": 92}, {"referenceID": 32, "context": "example, PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, Griffiths, & Boyatt, 2005), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), TRY (Jones, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004), and JUnit (Wick, Stevenson, & Wagner, 2005).", "startOffset": 48, "endOffset": 60}, {"referenceID": 21, "context": "example, PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, Griffiths, & Boyatt, 2005), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), TRY (Jones, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004), and JUnit (Wick, Stevenson, & Wagner, 2005).", "startOffset": 190, "endOffset": 203}, {"referenceID": 33, "context": "example, PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, Griffiths, & Boyatt, 2005), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), TRY (Jones, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004), and JUnit (Wick, Stevenson, & Wagner, 2005).", "startOffset": 210, "endOffset": 224}, {"referenceID": 34, "context": "example, PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, Griffiths, & Boyatt, 2005), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), TRY (Jones, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004), and JUnit (Wick, Stevenson, & Wagner, 2005).", "startOffset": 231, "endOffset": 245}, {"referenceID": 13, "context": "example, PSGE (Hext & Winings, 1969), Kassandra (Matt, 1994), BOSS (Joy, Griffiths, & Boyatt, 2005), WebToTeach (Arnow & Barshay, 1999), Schemerobe (Saikkonen, Malmi, & Korhonen, 2001), TRY (Jones, 2001), HoGG (Morris, 2002), BAGS (Morris, 2003), on-line Judge (Cheang, Kurnia, Lim, & Oon, 2003), JEWL (English, 2004), Quiver (Ellsworth, Fenwick, & Kurtz, 2004), and JUnit (Wick, Stevenson, & Wagner, 2005).", "startOffset": 302, "endOffset": 317}, {"referenceID": 20, "context": "There are limited experiments on using Java PathFinder model checker for automated test case generation (Ihantola, 2007).", "startOffset": 104, "endOffset": 120}, {"referenceID": 14, "context": "Ceasar (Garavel, 1998), are usually too complex and not aimed for educational purposes.", "startOffset": 7, "endOffset": 22}, {"referenceID": 44, "context": "proposed a grading approach for assignments in C based only on program similarity (Wang et al., 2007).", "startOffset": 82, "endOffset": 101}, {"referenceID": 35, "context": "(Naud\u00e9 et al., 2010).", "startOffset": 0, "endOffset": 20}, {"referenceID": 36, "context": "convergence) are proven (Nikoli\u0107, 2013).", "startOffset": 24, "endOffset": 39}, {"referenceID": 25, "context": "Kotsiantis performed successful forecasting based on demographic characteristics of students, results of several written assignments, and class attendance (Kotsiantis, 2012).", "startOffset": 155, "endOffset": 173}, {"referenceID": 5, "context": "We are planning to integrate LLVM-based open source tool KLEE (Cadar et al., 2008) for automated test case generation and also to add support for teacher supplied test cases.", "startOffset": 62, "endOffset": 82}], "year": 2012, "abstractText": "In this paper we promote introducing software verification and control flow graph similarity measurement in automated evaluation of students\u2019 programs. We present a new grading framework that merges results obtained by combination of these two approaches with results obtained by automated testing, leading to improved quality and precision of automated grading. These two approaches are also useful in providing a comprehensible feedback that can help students to improve the quality of their programs We also present our corresponding tools that are publicly available and open source. The tools are based on LLVM low-level intermediate code representation, so they could be applied to a number of programming languages. Experimental evaluation of the proposed grading framework is performed on a corpus of university students\u2019 programs written in programming language C. Results of the experiments show that automatically generated grades are highly correlated with manually determined grades suggesting that the presented tools can find real-world applications in studying and grading.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}