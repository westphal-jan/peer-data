{"id": "1212.0692", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Dec-2012", "title": "An Empirical Evaluation of Portfolios Approaches for solving CSPs", "abstract": "Recent research in areas such as SAT solving and Integer Linear Programming has shown that the performances of a single arbitrarily efficient solver can be significantly outperformed by a portfolio of possibly slower on-average solvers. We report an empirical evaluation and comparison of portfolio approaches applied to Constraint Satisfaction Problems (CSPs). We compared models developed on top of off-the-shelf machine learning algorithms with respect to approaches used in the SAT field and adapted for CSPs, considering different portfolio sizes and using as evaluation metrics the number of solved problems and the time taken to solve them. Results indicate that the best SAT approaches have top performances also in the CSP field and are slightly more competitive than simple models built on top of classification algorithms.", "histories": [["v1", "Tue, 4 Dec 2012 12:00:54 GMT  (279kb,D)", "https://arxiv.org/abs/1212.0692v1", null], ["v2", "Sun, 5 Jan 2014 02:25:04 GMT  (291kb,D)", "http://arxiv.org/abs/1212.0692v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LG", "authors": ["roberto amadini", "maurizio gabbrielli", "jacopo mauro"], "accepted": false, "id": "1212.0692"}, "pdf": {"name": "1212.0692.pdf", "metadata": {"source": "CRF", "title": "An Empirical Evaluation of Portfolios Approaches for solving CSPs", "authors": ["Roberto Amadini", "Maurizio Gabbrielli", "Jacopo Mauro"], "emails": ["jmauro}@cs.unibo.it"], "sections": [{"heading": "1 Introduction", "text": "This year, it is more than ever before in the history of the city, where it has gone down in history as never before."}, {"heading": "2 Preliminaries", "text": "This year, it is at an all-time high in the history of the European Union."}, {"heading": "3 Solvers, Features and Dataset", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "4 Methodology", "text": "This year it is more than ever before in the history of the city."}, {"heading": "5 Results and Assessments", "text": "This year, it has reached the stage where it will be able to put itself at the forefront in order to pave the way for the future."}, {"heading": "6 Related work", "text": "In this section, we will briefly present other relevant work on portfolios. Gebruers et al. [5] use case-based thinking to select solution strategies for CSPs. They look at a portfolio of 12 strategies and apply a k-next-neighbor algorithm to predict the strategy that should speed up the search for solutions to the social golf problems. Streeter et al. [23] instead use optimization techniques to create a solution plan that should be executed in a specific order and for a specific period of time to maximize the likelihood of solving the given instance. [7] examines a classification-based algorithm selection for a particular CSP. Given an instance of the Bid Evaluation Problem (BEP), the goal is to a priori decide whether an Integrated Programming (IP) solver or a hybrid choice between IP and CP form an alternative solution for a particular portfolio. Such a selection is determined on the basis of the problem (based on the structure of the 25 characteristics)."}, {"heading": "7 Conclusions", "text": "In this paper, we have implemented various portfolio approaches to solving Constraint Satisfaction Problems (CSPs). Furthermore, these approaches have been proposed in the literature, especially in the SAT field, both through the use of machine learning techniques and through adaptation to CSPs. We have evaluated and compared the different approaches by considering a data set consisting of two different types of constraint competitions and a selection of 22 versions of different approaches to solving them. Portfolio approaches have been evaluated on the basis of the number of problems solved and the time it takes to solve them. Experimental results show that the approaches won the last two SAT competitions, namely SATzilla and 3S, are the best of the approaches considered in this paper, both for the instances needed to solve them and for the time we need to solve them. However, approaches with off-the-shelf classifiers are not as far from being the best selectors and can be used in this way."}], "references": [{"title": "A Gender-Based Genetic Algorithm for the Automatic Configuration of Algorithms", "author": ["Carlos Ans\u00f3tegui", "Meinolf Sellmann", "Kevin Tierney"], "venue": "In CP,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "A survey of cross-validation procedures for model selection", "author": ["Sylvain Arlot", "Alain Celisse"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "SMOTE: Synthetic Minority Over-sampling Technique", "author": ["Nitesh V. Chawla", "Kevin W. Bowyer", "Lawrence O. Hall", "W. Philip Kegelmeyer"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2002}, {"title": "A short introduction to computational social choice", "author": ["Yann Chevaleyre", "Ulle Endriss", "J\u00e9r\u00f4me Lang", "Nicolas Maudet"], "venue": "In SOFSEM 2007: Theory and Practice of Computer Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2007}, {"title": "Using CBR to Select Solution Strategies in Constraint Programming", "author": ["Cormac Gebruers", "Brahim Hnich", "Derek G. Bridge", "Eugene C. Freuder"], "venue": "In ICCBR,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "Learning Techniques for Automatic Algorithm Portfolio Selection", "author": ["Alessio Guerri", "Michela Milano"], "venue": "In ECAI,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2004}, {"title": "The WEKA data mining software: an update", "author": ["Mark Hall", "Eibe Frank", "Geoffrey Holmes", "Bernhard Pfahringer", "Peter Reutemann", "Ian H. Witten"], "venue": "SIGKDD Explor. Newsl.,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Learning the k in k-means", "author": ["Greg Hamerly", "Charles Elkan"], "venue": "In NIPS,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Algorithm Selection and Scheduling", "author": ["Serdar Kadioglu", "Yuri Malitsky", "Ashish Sabharwal", "Horst Samulowitz", "Meinolf Sellmann"], "venue": "In CP,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "ISAC Instance-Specific Algorithm Configuration", "author": ["Serdar Kadioglu", "Yuri Malitsky", "Meinolf Sellmann", "Kevin Tierney"], "venue": "In ECAI,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "A classification-based approach to managing a solver portfolio for CSPs", "author": ["Zeynep Kiziltan", "Luca Mandrioli", "Jacopo Mauro", "Barry O\u2019Sullivan"], "venue": "AICS,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2011}, {"title": "Learning the Empirical Hardness of Optimization Problems: The Case of Combinatorial Auctions", "author": ["Kevin Leyton-Brown", "Eugene Nudelman", "Yoav Shoham"], "venue": "In CP,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2002}, {"title": "Consistency in Networks of Relations", "author": ["Alan K. Mackworth"], "venue": "Artif. Intell.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1977}, {"title": "Instance-Specific Algorithm Configuration as a Method for Non-Model-Based Portfolio Generation", "author": ["Yuri Malitsky", "Meinolf Sellmann"], "venue": "In CPAIOR,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Machine learning. McGraw Hill series in computer science", "author": ["Tom M. Mitchell"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1997}, {"title": "Solving XCSP problems by using Gecode", "author": ["Massimo Morara", "Jacopo Mauro", "Maurizio Gabbrielli"], "venue": "In CILC,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2011}, {"title": "Minizinc: Towards a standard cp modelling language", "author": ["Nicholas Nethercote", "Peter J. Stuckey", "Ralph Becket", "Sebastian Brand", "Gregory J. Duck", "Guido Tack"], "venue": "In CP,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2007}, {"title": "Using case-based reasoning in an algorithm portfolio for constraint solving", "author": ["Eoin O\u2019Mahony", "Emmanuel Hebrard", "Alan Holland", "Conor Nugent", "Barry O\u2019Sullivan"], "venue": "AICS 08,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "XML Representation of Constraint Networks: Format", "author": ["Olivier Roussel", "Christophe Lecoutre"], "venue": "XCSP 2.1. CoRR,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "Latent class models for algorithm portfolio methods", "author": ["Bryan Silverthorn", "Risto Miikkulainen"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2010}, {"title": "Combining Multiple Heuristics Online", "author": ["Matthew J. Streeter", "Daniel Golovin", "Stephen F. Smith"], "venue": "In AAAI,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2007}, {"title": "Algorithmic Learning in a Random World", "author": ["Vladimir Vovk", "Alex Gammerman", "Glenn Shafer"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2005}, {"title": "A practical guide to support vector classification", "author": ["Chih wei Hsu", "Chih chung Chang", "Chih jen Lin"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2010}, {"title": "Hydra: Automatically Configuring Algorithms for Portfolio-Based Selection", "author": ["Lin Xu", "Holger Hoos", "Kevin Leyton-Brown"], "venue": "In AAAI,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2010}, {"title": "Evaluating Component Solver Contributions to Portfolio-Based Algorithm Selectors", "author": ["Lin Xu", "Frank Hutter", "Holger Hoos", "Kevin Leyton-Brown"], "venue": "In SAT,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "SATzilla-07: The Design and Analysis of an Algorithm Portfolio for SAT", "author": ["Lin Xu", "Frank Hutter", "Holger H. Hoos", "Kevin Leyton-Brown"], "venue": "In CP,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2007}], "referenceMentions": [{"referenceID": 25, "context": "It has also been shown in other areas, such as satisfiability testing [28] and integer linear programming [14], that the best on-average solver can be out performed by a portfolio of possibly slower on-average solvers.", "startOffset": 70, "endOffset": 74}, {"referenceID": 11, "context": "It has also been shown in other areas, such as satisfiability testing [28] and integer linear programming [14], that the best on-average solver can be out performed by a portfolio of possibly slower on-average solvers.", "startOffset": 106, "endOffset": 110}, {"referenceID": 17, "context": "On the other hand, to the best of our knowledge in the CSP field there exists only one solver that uses a portfolio approach, namely CPhydra[20].", "startOffset": 140, "endOffset": 144}, {"referenceID": 18, "context": "To overcome these limitations we tried to collect a dataset of CSP instances as extensive as possible and encoded them into XCSP [21], an XML-based language used to express constraints.", "startOffset": 129, "endOffset": 133}, {"referenceID": 12, "context": "Background A Constraint Satisfaction Problem (CSP) consists of a finite set of variables, each of which associated with a domain of possible values that the variable could take, and a set of constraints that define the set of allowed assignments of values to the variables [15].", "startOffset": 273, "endOffset": 277}, {"referenceID": 14, "context": "Machine Learning (ML) is a broad field that uses concepts from computer science, mathematics, statistics, information theory, complexity theory, biology and cognitive science [17] to \u201cconstruct computer programs that automatically improve with experience\u201d.", "startOffset": 175, "endOffset": 179}, {"referenceID": 14, "context": "A classifier is therefore a function that maps a new instance characterized by one or more discrete or continuous features - to one of a finite number of classes [17] on the basis of a training set of instances whose class is already known, trying to exploit such knowledge to properly classify each new instance.", "startOffset": 162, "endOffset": 166}, {"referenceID": 6, "context": "Our simplest models are built on top of the most common classifiers provided by the WEKA [9] tool, an open source software written in JAVA that implements a collection of ML algorithms for data mining tasks.", "startOffset": 89, "endOffset": 92}, {"referenceID": 17, "context": "CPhydra To our knowledge CPhydra [20] is the only CSP solver which uses a portfolio approach.", "startOffset": 33, "endOffset": 37}, {"referenceID": 8, "context": "SAT Solver Selector (3S) 3S [11] is a SAT solver that conjugates a fixed-time static solver schedule with the dynamic selection of one long-running component solver.", "startOffset": 28, "endOffset": 32}, {"referenceID": 25, "context": "SATzilla SATzilla [28] is a SAT solver that relies on runtime prediction models to select the solver that (hopefully) has the fastest running time on a given problem instance.", "startOffset": 18, "endOffset": 22}, {"referenceID": 24, "context": "More recently a new powerful version of SATzilla has been proposed [27].", "startOffset": 67, "endOffset": 71}, {"referenceID": 13, "context": "ISAC In [16] the Instance-Specific Algorithm Configuration tool ISAC [12] has been used as solver selector.", "startOffset": 8, "endOffset": 12}, {"referenceID": 9, "context": "ISAC In [16] the Instance-Specific Algorithm Configuration tool ISAC [12] has been used as solver selector.", "startOffset": 69, "endOffset": 73}, {"referenceID": 7, "context": "ISAC statically clusters every training instance by the g-means algorithm [10] according to its normalized feature vector and then identifies the best tuning of parameters for the instances of each cluster employing the GGA algorithm [1].", "startOffset": 74, "endOffset": 78}, {"referenceID": 0, "context": "ISAC statically clusters every training instance by the g-means algorithm [10] according to its normalized feature vector and then identifies the best tuning of parameters for the instances of each cluster employing the GGA algorithm [1].", "startOffset": 234, "endOffset": 237}, {"referenceID": 15, "context": "Moreover, by using a specific plug-in described in [18], we were able to use also 15 different versions of the constraint solver Gecode (these different versions were obtained by tuning the search parameters and the variable selection criteria of the solver; the plug-in, that some of these authors developed, allowed Gecode to receive XCSP format in input).", "startOffset": 51, "endOffset": 55}, {"referenceID": 18, "context": "Thus we had the possibility of using, in our portfolio, up to 22 specific solvers which were all able to process CSP instances defined in the XCSP format [21].", "startOffset": 154, "endOffset": 158}, {"referenceID": 10, "context": "An extensive description of the features can be retrieved in [13].", "startOffset": 61, "endOffset": 65}, {"referenceID": 17, "context": "We used the 36 features of CPhydra [20] plus some features derived from the variable graph and variable-constraint graph of the XCSP instances.", "startOffset": 35, "endOffset": 39}, {"referenceID": 16, "context": "These instances written in FlatZinc [19] were first compiled to XCSP (by using a FlatZinc to XCSP converter provided by the MiniZinc suite) and then normalized following the CSP competition conventions.", "startOffset": 36, "endOffset": 40}, {"referenceID": 24, "context": "In Figure 1b following [27] we show instead the marginal contributions of each solver, that is how many times a solver is able to solve instances that no other solver can solve.", "startOffset": 23, "endOffset": 27}, {"referenceID": 1, "context": "Data Validation In order to evaluate and compare different portfolio approaches we tested every approach using a 5-repeated 5-fold cross-validation [2].", "startOffset": 148, "endOffset": 151}, {"referenceID": 3, "context": "To decide the best backup solver we exploited the Computational Social Choice theory [4] mapping the selection problem into a voting scenario.", "startOffset": 85, "endOffset": 88}, {"referenceID": 6, "context": "To train the models we used the WEKA tool [9] which implements some of the most well known and widely used classification algorithms.", "startOffset": 42, "endOffset": 45}, {"referenceID": 22, "context": "For instance, for the support vector machine we used a Radial Basis Function kernel performing a grid search over the C and \u03b3 parameters following [25], while for Random Forest we simply manually tried different sizes of decision forests.", "startOffset": 147, "endOffset": 151}, {"referenceID": 24, "context": "We simulated the SATzilla approach by developing a MATLAB implementation of the cost-sensitive classification model described in [27], with the only exception that ties during solvers comparison are broken by selecting the solver that in general solves the largest number of instances.", "startOffset": 129, "endOffset": 133}, {"referenceID": 8, "context": "To compute the schedule of solvers we used instead the mixed integer programming solver Gurobi [8] to solve the problem described in [11].", "startOffset": 133, "endOffset": 137}, {"referenceID": 6, "context": "7 For more details related to these algorithms we defer to the documentation of [9].", "startOffset": 80, "endOffset": 83}, {"referenceID": 13, "context": "Thanks to the code kindly provided by Yuri Malitsky, we were able to adapt ISAC cluster-based techniques to create a solver selector using the \u201cPure Solver Portfolio\u201d approach as done for SAT problems in [16].", "startOffset": 204, "endOffset": 208}, {"referenceID": 2, "context": "the class of instances where Mistral was the best solver was far greater than the class of instances of other solvers) we have tried to apply oversampling techniques (Synthetic Minority Over-sampling Technique [3] to be precise) to boost the accuracy of the classifiers.", "startOffset": 210, "endOffset": 213}, {"referenceID": 21, "context": "So even though SATzilla and 3S were clearly the winners of the comparison between the different portfolio approaches for CSPs, it could be the case that for dynamic scenarios other approaches like Random Forest or online machine learning classification algorithms [24] could be more useful.", "startOffset": 264, "endOffset": 268}, {"referenceID": 4, "context": "[5] use case-based reasoning to select solution strategies for CSPs.", "startOffset": 0, "endOffset": 3}, {"referenceID": 20, "context": "[23] use instead optimization techniques to produce a schedule of solvers that should be executed in a specific order, for specific amounts of time, in order to maximize the probability of solving the given instance.", "startOffset": 0, "endOffset": 4}, {"referenceID": 5, "context": "In [7], a classification-based algorithm selection for a specific CSP is studied.", "startOffset": 3, "endOffset": 6}, {"referenceID": 11, "context": "Such a selection is done on the basis of the instance structure which is determined via (a subset of) 25 static features derived from the constraint graph [14].", "startOffset": 155, "endOffset": 159}, {"referenceID": 19, "context": "An alternative model-based portfolio approach presented in [22] addresses the problem of predicting the solver performances on a given instance using a Dirichlet Compound Multinomial (DCM) distribution to create a schedule of solvers (for such an instance).", "startOffset": 59, "endOffset": 63}, {"referenceID": 8, "context": "As a future work we plan to extend the number of protfolio approaches by considering also the dynamic schedule approach of 3S [11], the regression based approach of the previous version of SATzilla and other approaches which are not based on feature extraction like [22].", "startOffset": 126, "endOffset": 130}, {"referenceID": 19, "context": "As a future work we plan to extend the number of protfolio approaches by considering also the dynamic schedule approach of 3S [11], the regression based approach of the previous version of SATzilla and other approaches which are not based on feature extraction like [22].", "startOffset": 266, "endOffset": 270}, {"referenceID": 23, "context": "Moreover we are also interested in studying the impact of instancespecific algorithm configuration tools like ISAC or HYDRA [26] in the CSP field by allowing the automatic tuning of search and other solver parameters to boost the solver performances.", "startOffset": 124, "endOffset": 128}], "year": 2014, "abstractText": "Recent research in areas such as SAT solving and Integer Linear Programming has shown that the performances of a single arbitrarily efficient solver can be significantly outperformed by a portfolio of possibly slower on-average solvers. We report an empirical evaluation and comparison of portfolio approaches applied to Constraint Satisfaction Problems (CSPs). We compared models developed on top of off-theshelf machine learning algorithms with respect to approaches used in the SAT field and adapted for CSPs, considering different portfolio sizes and using as evaluation metrics the number of solved problems and the time taken to solve them. Results indicate that the best SAT approaches have top performances also in the CSP field and are slightly more competitive than simple models built on top of classification algorithms.", "creator": "LaTeX with hyperref package"}}}