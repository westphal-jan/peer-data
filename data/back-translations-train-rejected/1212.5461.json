{"id": "1212.5461", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Dec-2012", "title": "Interactive Ant Colony Optimisation (iACO) for Early Lifecycle Software Design", "abstract": "Software design is crucial to successful software development, yet is a demanding multi-objective problem for software engineers. In an attempt to assist the software designer, interactive (i.e. human in-the-loop) meta-heuristic search techniques such as evolutionary computing have been applied and show promising results. Recent investigations have also shown that Ant Colony Optimization (ACO) can outperform evolutionary computing as a potential search engine for interactive software design. With a limited computational budget, ACO produces superior candidate design solutions in a smaller number of iterations. Building on these findings, we propose a novel interactive ACO (iACO) approach to assist the designer in early lifecycle software design, in which the search is steered jointly by subjective designer evaluation as well as machine fitness functions relating the structural integrity and surrogate elegance of software designs. Results show that iACO is speedy, responsive and highly effective in enabling interactive, dynamic multi-objective search in early lifecycle software design. Study participants rate the iACO search experience as compelling. Results of machine learning of fitness measure weightings indicate that software design elegance does indeed play a significant role in designer evaluation of candidate software design. We conclude that the evenness of the number of attributes and methods among classes (NAC) is a significant surrogate elegance measure, which in turn suggests that this evenness of distribution, when combined with structural integrity, is an implicit but crucial component of effective early lifecycle software design.", "histories": [["v1", "Fri, 21 Dec 2012 14:31:42 GMT  (530kb)", "http://arxiv.org/abs/1212.5461v1", "31 pages including appendices"], ["v2", "Mon, 23 Jun 2014 10:52:48 GMT  (532kb)", "http://arxiv.org/abs/1212.5461v2", "31 pages including appendices"]], "COMMENTS": "31 pages including appendices", "reviews": [], "SUBJECTS": "cs.SE cs.AI", "authors": ["christopher l simons", "jim smith", "paul white"], "accepted": false, "id": "1212.5461"}, "pdf": {"name": "1212.5461.pdf", "metadata": {"source": "CRF", "title": "Interactive Ant Colony Optimization (iACO) for Early Lifecycle Software Design", "authors": ["Christopher L. Simons", "Jim Smith"], "emails": ["paul.white}@uwe.ac.uk"], "sections": [{"heading": null, "text": "In an attempt to assist the software developer, interactive (i.e. human in-the-loop) meta-heuristic search techniques such as evolutionary computing have been used and are showing promising results. Recent research has also shown that Ant Colony Optimization (ACO) can surpass evolutionary computation as a potential search engine for interactive software design. ACO, with a limited computing budget, produces superior design solutions for candidates in a smaller number of iterations. Building on these insights, we propose a novel interactive ACO approach (iACO) to assist the designer in early life cycle software design, where search is jointly driven by subjective designer evaluation and machine fitness capabilities."}, {"heading": "1 INTRODUCTION", "text": "Software design is both fundamental to the successful development of software-intensive systems and cognitively demanding for software developers. In fact, designers wrestle with numerous trade-offs in the early life cycle while formulating candidate design solutions as the basis for subsequent downstream development activities. In an attempt to help designers in their search, interactive meta-heuristic search techniques such as evolutionary algorithms (EAs) were recently studied with the software designer \"in-the-loop\" and showed promising results. Following early empirical studies that took into account designer preferences [1], subsequent studies have combined quantitative machine-calculated fitness functions with qualitative designer evaluation of design elegance in a dynamic, multi-objective, interactive search. These studies show that the exact balance of factors influencing the subjective judgments of the human software designer is highly significant, but the art we are often looking for is poorly understood - therefore the art belongs to."}, {"heading": "2 BACKGROUND", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Search-Based Early-Cycle Software Design", "text": "The term \"Search Based Software Engineering\" (SBSE) was coined in most cases around the turn of the millennium by Harman and Jones to show discontinuity and multiple optimism motivating the use of meta-heuristics to perform the search. \"Search Based Software Engineering\" (SBSE) was coined around the turn of the millennium by Harman and Jones. [8] Over the last decade, applications of SBSE have been found across the entire spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [10], software testing [11], automated troubleshooting [12] and software maintenance [13]."}, {"heading": "2.2 Interactive Meta-Heuristic Optimization", "text": "Basically, the goal of interactive meta-heuristic search in early lifecycle software development is to support, rather than replace, the designer. In fact, interactive EAs have been successfully applied in a wide range of applications to facilitate the personalization of the user. Typically, a range of solutions are presented and evaluated to the user depending on how well he / she fulfills his / her desires, a process that implicitly captures the user's multi-objective decision-making processes without the need for a time-consuming explicit knowledge acquisition process [19]. Well-known early applications include face recognition [20], the development of computer graphics [21] and the customization of cochlea implants [22]. Interactive multi-objective search techniques have also been widely used in Multi-Criteria Decision Making (MCDM) to gain insights into combinatorial optimization problems."}, {"heading": "2.3 Reducing the Cognitive Burden of Interactive Search", "text": "The reliance on human orientation and judgment to guide and control the search presents both potential weaknesses and strengths. On the other hand, the ability to maneuver the search interactively can be used as a powerful strategy to adapt an otherwise na\u00efve search process. There have been a number of studies looking at minimizing fatigue symptoms, both physical and psychological, resulting from prolonged interaction times and the possible stress of the assessment process. Discrediting continuous fitness scores in five or seven levels facilitates decision-making without affecting convergence."}, {"heading": "2.4 Choice of Meta-Heuristics for Interactive Search", "text": "Evolutionary computing is well understood and has a long history of success in interactive search, but the history per se is not necessarily a good scientific motivation for the study. Against this background, the multi-objective performance of evolutionary algorithms (EAs, e.g. [34]) and ant colony optimization (SimpleACO or S-ACO [35], [36]) were compared by Simons and Smith for software design, both in terms of structural integrity and surrogate elegance metrics [4], [5]. The results are summarized as follows: Given a large computer budget (in terms of searches), an evolutionary algorithm with a holistic representation appears to be superior; the evolutionary algorithm is also more robust for very large design problems where the number of classes in a software design is interactive."}, {"heading": "3 PROPOSED APPROACH", "text": "This section describes the software design problem and the solutions of the proposed approach, followed by a specification of the fitness measures used. Next, the iACO search engine is described. Finally, the proposed approach to interaction between software developers is outlined to show how the qualitative ratings of the designer are integrated into the iACO search engine."}, {"heading": "3.1 Representation", "text": "The software design problem is specified on the basis of UML use cases, i.e. application scenarios of the software system to be described are analyzed on the basis of human (as an actor) interactions with the automated system [18]. The natural-language text of the use case descriptions is analyzed as follows: nouns are identified as data; verbs as actions. If a date is influenced by the action, as is typical when the date and action are adjacent to each other in a single use case scenario, the action should \"use\" the date. Thus, in the language of UML, a software design problem is defined by a series of \"methods\" (actions), a series of \"attributes\" (data) and their corresponding \"applications.\" This mapping ensures traceability from the design problem to the design solution. A complete description of this software design problem can be found at [2].The software design solution representation used is inspired by modelling for the problem-vendor-element (TSK)."}, {"heading": "3.2 Fitness Measures", "text": "To reflect the multi-objective nature of the ACO search, a combination of fitness benchmarks is used; the first fitness measure provides an assessment of the structural integrity of a software design. Designers typically aim for high cohesion in classes (to reflect a clear purpose) and low coupling between objects (to ensure that the design is robust but flexible to change); hence, the first fitness measurement is inspired by the Coupling Between Objects (CBO) measure [43]. For each solution, a candidate's CBO is calculated as the proportion of all \"uses\" of attributes by methods that occur across class boundaries. Conveniently, a completely decoupled design (all uses take place within classes) receives a CBO of 1.0, while a fully coupled design achieves a CBO of zero. The second and third fitness measure provides an assessment of the elegance of software design by methods that examine across class boundaries We have previously proposed ATB values and ATM values across class boundaries."}, {"heading": "3.3 iACO Search Engine", "text": "The design of the proposed iACO search engine has been influenced by the results of previous recent studies [44], [45], [46] and is also based on the MAX-MIN Ant System (MMAS) [47]. In fact, three aspects of the elite MMAS have been included in the proposed iACO search engine: First, only the ant with the best iteration, i.e. the ant that produced the best candidate solution path in the current iteration, deposits pheromone. Second, the possible range of pheromone trail values is limited to an interval [tmin, tmax], and third, pheromone trails are initialized to the upper trail limit, i.e. tmax. However, the variant of the MMAS used in this study differs from the original MMAS in two ways to meet the needs of the software design area. Firstly, the local search is not performed at every iteration, and secondly, the MAS parameter is controlled by an additional MMAS influence."}, {"heading": "3.4 Software Designer Interaction", "text": "The effective interactive search for the software designer requires us to address the following questions: 3.4.1 What are the implicit factors underlying the value judgments of the user? The underlying value judgement of the software designer relates to the trade-off between structural integrity in terms of class cohesion and design coupling and design elegance. After being presented with a visualization of a software design solution, the software designer is asked to give an overall assessment on a scale of 1 to 100, with 1 bad and 100 good. With the twin goals of (i) reducing the number of interactions and (ii) improving our understanding of this value assessment process, the iACO uses a surrogate fitness model whose parameters are adjusted in response to periodic user ratings. Historically interactive EAs range from the presentation of an individual to the evaluation to the presentation of the entire population for the ranking [19], [23] clearly leading to the continuity of the ranking, in particular."}, {"heading": "3.4.2 How are candidate solutions presented to the designer?", "text": "Since color has been shown to play an important role in design visualization [2], [3] it is used to reflect an aspect of the relative fitness of the classes presented. It is proposed to test the use of two color metaphors in this study: \"traffic lights\" and \"taps.\" Classes with high, medium, or low cohesion are each colored in green / amber / red (traffic light) or red / amber / blue (taps). Pairs between classes are graphically represented as a continuous line, with an arrowhead indicating the direction of the pair. The stronger the coupling between classes, the thicker the line used. Examples of visualizations of software design solutions are available at [48]."}, {"heading": "3.4.3 When does the designer interact with search?", "text": "The starting point of the entire search process is the first iteration of MMAS, where design solutions are randomly created. However, previous work has shown that the multi-objective ACO search engine may need 50 iterations to achieve adequate suitability for the three actions [5]. Furthermore, the use of replacement models eliminates the designer's interaction with each ACO iteration. Therefore, a better approach is to promote a sense of positive progress in ACO search and allow the designer to interact after an interval of multiple ACO iterations. Building on promising previous work [3], we use an adaptive, fitness-proportional iteration interval. When poor fitness scores are observed, the scheme results in a high iteration interval (corresponding to 10 to 15 ACO iterations) as iteration is improved."}, {"heading": "3.4.4 What means are provided to promote designer learning?", "text": "Several mechanisms are provided to promote design learning, focusing on the idea that the designer has the ability to give \"hints\" to the iACO search engine. For example, it is possible for the designer to focus on individual classes of the design solution considered interesting and useful, and to \"freeze\" classes related to the ongoing search. In terms of the evolving search, the designer is also mentally \"anchored,\" i.e. he fixes his thinking on a particular bias or part of a \"block\" of the solution [49]. It is also possible for the designer to \"thaw\" the class (s) during each interaction. This \"freeze\" mechanism also provides the designer with an effective mechanism for dealing with larger designs - smaller \"blocks\" of the solution can be controlled before moving on further design blocks. An additional design learning mechanism is the ability to update interesting and useful software solutions into an archive as an iO search criterion."}, {"heading": "4 EXPERIMENTAL METHODOLOGY", "text": "In this section, we first describe our selection of problem areas in the area of software design for use in our experiments, then specify the algorithm parameters used. Finally, we describe our methodology for empirical investigation to evaluate the performance of iACO when used by software developers with diverse backgrounds and experience."}, {"heading": "4.1 Software Design Problems", "text": "A useful discussion on the choice of test problems for experimental comparison in the meta-heuristic search is offered by Eiben and Smith ([50], pp.252-258), who compare and contrast the use of predefined problem cases (e.g. benchmark problems), problem case generators, and \"real world\" problems. Sure, the use of predefined benchmark problems is preferable. Unfortunately, we are not aware of the existence of recognized benchmark software design problems, either in research literature or in industrial practice. It would be possible to generate instances of design problems, for example, with randomly defined attributes and methods. However, this presents the problem of semantics and understanding for the designer - it is likely that the generated design problem would be meaningless. Therefore, we have selected three real software design problems from a variety of domains, with a number of domains, with a number of scales.The first problem is an abstraction of an industry book problem (CBS) dealing with a booking system problem."}, {"heading": "4.2 Algorithm Parameters", "text": "The values in Table 2 for the parameters N, \u03b1, \u00b5, \u03c3 are derived from the promising performances mentioned in [5], while the values for MMAS-specific tmin and tmax are based on [47] and empirical evaluations with regard to the chosen representation."}, {"heading": "4.3 Empirical Methodology", "text": "Eleven early-life software developers with experience in early-life software design have been invited to participate in studies using the proposed iACO approach. Relevant background information can be found in Appendix 1. Participants \"overall experience with software development amounts to 228 years in both academic and industrial practice. Participants 4 and 9 are authors of this paper. Details of the research ethics process can be found in [55]. In short, the iACO approach is explained to participants and the use of the iACO environment is illustrated by a dummy design problem. Each of the three software design problems is then described. Once it is underway, each interactive design episode can continue until the participant decides to pause. However, to prevent user fatigue, each participant session is shortened after one hour, whether or not the scheduled schedule for five episodes of each period has been completed."}, {"heading": "5 RESULTS", "text": "All experimental data are available at [56]; next, we report on the most important results."}, {"heading": "5.1 Number of Interactions", "text": "Table 3 shows the number of interactions during the design phases for each participant and each design problem. Where a participant did not perform design phases due to time constraints, this is shown as -. Participants rated the designs of the candidate software based on a total of 962 interactions. Immediately recognizable is the wide variation in interactions between participants, which reflects a variety of individual approaches. CBS and GDP figures are higher than SC, as the experimental design meant that most participants performed two design phases for these design problems. To analyze these numbers, the interactions for each design problem were further investigated, and the results are summarized in Table 4, where standard deviations are shown in brackets. Table 4 highlights two things: First, there is a large variation in the interactions for the design problems of CBS and BIP compared to SC, and second, we find the mean number of interactions for CBS and BIP similar and much higher than CBS."}, {"heading": "5.2 Example Fitness Values", "text": "A typical example of fitness curves achieved in an interactive iACO design episode is in Figure 2. An average design problem, i.e. the GDP was selected to illustrate a design episode for participant 2. Figure 2 shows that the iACO search engine appears to be very effective in achieving superior fitness scores for all three design measures within 35 iterations. Afterwards, at the end of the design episode, all three fitness measures are superior to the values for the corresponding manual design. Although this is a typical example, a degree of variation was also observed in the design episodes, not least in the number of iterations achieved before holding."}, {"heading": "5.3 Variation in Fitness Values at End of Episodes", "text": "Table 5 shows the best values achieved for the three fitness metrics at the last interaction of each participant's BO problem, even though BO problem is superior. In Table 5, \"N\" indicates the number of participant episodes at the end of which fitness values were recorded; the \"Best\" series shows the best single value achieved in all episodes for each design problem, while the \"Mean\" series indicates the mean of all the best values at the end of episodes for each design problem, with the standard deviation shown in brackets. Fitness values for the manually produced software designs are presented in italic font for comparison; Bold font is used to indicate that the fitness values achieved with iACO are better than the values of the manually produced design. To determine whether the differences between the averages are statistically significant, the single sample t test was used to compare the sample media (i.e. the manual designs) with the averages for the target design."}, {"heading": "5.4 Effect of Designer Hints", "text": "To investigate the effects of freezing and color scheme, we performed a 2 x 2 mixed analysis of the variance with freezing (in, out) as a 2 level between the subjects variable and color scheme (traffic light, faucet) as a 2 level repeated measurement factor with the results of CBO and NAC at the last designer interaction. However, there are two important considerations in our analysis. First, because the sample size is limited, it seems to make little sense to choose the largest design problem CBS (N = 22) as an analytical factor. Therefore, GDP and SC, with sample sizes of 17 and 6 respectively, were not analyzed. (Of the 22 data values for ATMR at the end of the iACO design episodes for CBS interaction, it seems to make little sense to analyze the GDP and SC.) Second, we find that the ATMR data represent a strange distribution. Of the 22 data values for ATMR at the end of the iACO design episodes for CBS interaction, further inspections indicate that the statistical value 044 indicates that the freezing is lower than the MBO."}, {"heading": "5.5 Learning of Fitness Weights", "text": "The mean weights for CBO, NAC and ATMR (WCBO, WNAC, WATMR respectively) determined by the iACO environment during the final interaction at the end of the episodes are shown with standard deviations in brackets in Table 6. Table 6 shows the general equilibrium between the learned weights and also the influence of the design problem. First, it is obvious that WCBO turns out to be the highest learned weight for all three design problems. It is also obvious that WNAC overall appears to be the lowest learned weight, although not for SC. This strongly indicates that the balance between the three learned weights is problem-dependent."}, {"heading": "SC (N=6) 0.817 (0.073) 0.096 (0.073) 0.086 (0.063)", "text": "Secondly, we see that WNAC is similar on all scales of the design problem, while WCBO increases and WATMR decreases with the scale. We suspect that the cognitive burden of the design problem increases, the iACO environment learns that participants place less emphasis on qualitative design elegance and rely more on quantitative measurement of objects (CBO). To further explain the above features, we refer to the ATMR measure discussed in the previous sections, with the data suggesting that ATMR is not as sensitive as a measurement at CBO or NAC. Interestingly, during the design phases, participants were observed to be confronted with visualizations of software design solutions that show the \"God Class\" anti-patterns [57]."}, {"heading": "5.6 Human Experience", "text": "Ten of the eleven participants responded to the questionnaire [55] and the results are as follows: When asked how convincingly they rated the interactive ACO design experience on a scale of 1 (\"not at all convincing\") to 5 (\"very convincing\"), five participants rated the interactive design experience as 5, while the other five participants rated the experience of reaching useful and relevant software design paths (scale as before with \"effective\" substitutions \"mandatory\"). Three participants rated the effectiveness as 4, and another three participants rated the effectiveness of the iACO design solutions as useful and relevant."}, {"heading": "6 THREATS TO VALIDITY", "text": "In terms of the interval validity of the results, the iACO design experience is highly dependent on the design context, and every attempt was made to create a uniform design context for all participants, all participants received the same briefing and all studies were conducted in the same iACO environment. An additional threat to the internal validity is the Hawthorn effect, where participants \"behavior can be changed by the particular situation and social treatment they received during the experiment. To counteract this, participation was conducted as uniformly as possible; furthermore, participants were told that the persistence of interactive design episodes was entirely at their discretion and that there were no expectations regarding the respective designs. Two other threats to internal validity include the learning effect and the fatigue effect effect; the learning effect threatens the validity in the sense that the ability of participants to experience during the episodes of learning is improved through repetition; two other threats to internal validity include the learning effect and the fatigue effect effect; and the validity in the sense that the ability of participants to use the design phases during the episodes of learning is enhanced through repetition; and to counteract the phase 79, which involves experimenting with a set-up that includes three phases of the ACO."}, {"heading": "7 CONCLUSIONS", "text": "Based on the quantitative results and feedback from the participants, we conclude that ACO is highly effective as a search engine for interactive, dynamic, multi-objective interactive search in early-life software design. In fact, the study participants rated the interactive ACO search experience as compelling. Nevertheless, the results proved statistically inconclusive in terms of the influence of color scheme and design cues on such freezing, the sample size is relatively small and the large variation in participants \"behavior during interaction is evident. Nevertheless, the study participants have given positive ratings and comments for both\" indicative capacities, \"and we plan to include them in future studies.\" The results of machine learning of weighting of fitness yardsticks are interesting and suggest that software design elegance actually plays a significant role in evaluating the software design of the candidates. Furthermore, we conclude that the surrounding element ratio of the MR to the MR is less likely to predict the effectiveness of the search criteria."}, {"heading": "In the following participant schedule, TL refers to the \u2019Traffic Lights\u2019 color", "text": "color scheme, while WT refers to the \"Water Tap\" color scheme. Episode participants 1 2 3 4 5Problem CBS GDP SC1 Freeze off on onColor TL WT each TL2 Freeze off off off off offColor WT TL each TL3 Freeze off off off off on OnColor TL WT each WT4 Freeze off off off off off offColor WT TL each WT5 Freeze off off off off on onColor TL WT each TL6 Freeze off on off on off on off on offColor TL WT each WT7 Freeze on on on on off offColor WT T8 Freeze on on on off on off on off on Color TL WT each TL9 Freeze on on on on on on off offColor TL WT each TL10 Freeze on on on on on on on on on on on on on on on on on on on on on onColor TK WT each WT11 Freeze on on on on on on on off off off Color TL WT each WT any WT"}], "references": [{"title": "An Empirical Investigation of Search-based Computational Support for Conceptual Software Engineering Design", "author": ["C.L. Simons", "I.C. Parmee"], "venue": "Proceedings of the 2009 IEEE International Conference on Systems, Man, and Cybernetics,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Interactive, Evolutionary Search in Upstream Object-oriented Software Design", "author": ["C.L. Simons", "I.C. Parmee", "R. Gwynllyw"], "venue": "IEEE Transactions on Software Engineering,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Elegant, Object-Oriented Software Design via Interactive Evolutionary Computation", "author": ["C.L. Simons", "I.C. Parmee"], "venue": "IEEE Trans. Systems, Man, and Cybernetics: Part C \u2013 Applications and Reviews", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "A Comparison of Evolutionary Algorithms and Ant Colony Optimisation for Interactive Software Design", "author": ["C.L. Simons", "J.E. Smith"], "venue": "Fast Abstract Collection of the 4th Symposium of Search-Based Software Engineering,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "A Comparison of Meta-heuristic Search for Interactive Software Design", "author": ["C.L. Simons", "J.E. Smith"], "venue": "Soft Computing", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "Application of Genetic Algorithms to Software Testing", "author": ["S Xanthakis"], "venue": "Proceedings of the 5  th International Conference on Software Engineering,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1992}, {"title": "Evolving Software Test Data - GAs Learn Self-expression", "author": ["J.E. Smith", "T.C. Fogarty"], "venue": "Evolutionary Computing,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1996}, {"title": "Search-Based Software Engineering", "author": ["M. Harman", "B.J. Jones"], "venue": "Information and Software Technology, vol. 43,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2001}, {"title": "Cooperative Co-evolutionary Optimisation of Software Project Assignments and Job Scheduling", "author": ["J. Ren", "M. Harman", "M. Di Penta"], "venue": "Proceedings of the 3  rd International Symposium of Search Based Software Engineering (SSBSE", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Solving the Class Responsibility Assignment Problem in Object-Oriented Analysis with Multi-objective Genetic Algorithms", "author": ["M. Bowman", "L.C. Briand", "Y. Labiche"], "venue": "IEEE Transactions in Software Engineering,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2010}, {"title": "Search-Based Software Test Data Generation: a Survey", "author": ["P. McMinn"], "venue": "Software Testing, Verification and Reliability,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2004}, {"title": "Automatic Program Repair with Evolutionary Computing", "author": ["W. Weimer", "S. Forrest", "C. Le Goues", "T. Nguyen"], "venue": "Communications of the ACM,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "Search-Based Refactoring for Software Maintenance", "author": ["M. O\u2019Keeffe", "M.O. Cinneide"], "venue": "Journal of Systems and Software,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "Repository of Publications on Search-based Software Engineering", "author": ["Y. Zhang"], "venue": "http://crestweb.cs.ucl.ac.uk/resources/sbse_repository/ Accessed", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Agile Software Development: Principles, Patterns and Practices", "author": ["R.C. Martin"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2003}, {"title": "Requirements and Aesthetics", "author": ["N. Maiden"], "venue": "IEEE Software,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2011}, {"title": "Interactive Evolutionary Computation: Fusion of the Capabilities of EC Optimization and Human Evaluation", "author": ["H. Takagi"], "venue": "Proceedings of the IEEE,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2001}, {"title": "Tracking a Criminal Suspect through \"Face-Space\" with a Genetic Algorithm", "author": ["C. Caldwell", "V.S. Johnston"], "venue": "Proceedings of the 4th International Conference on Genetic Algorithms,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1991}, {"title": "Artificial Evolution for Computer Graphics", "author": ["K. Sims"], "venue": "Computer Graphics,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1991}, {"title": "Interactive Evolution for Cochlear Implants Fitting", "author": ["P. Legrand", "C. Bourgeois-Republique", "V. Pean", "E. Harboun-Cohen", "J. Levy-Vehel", "B. Frachet", "E. Lutton", "P. Collet"], "venue": "Genetic Programming and Evolvable Machines,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2007}, {"title": "Nonlinear Multiobjective Optimization", "author": ["K.M. Miettinen"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1998}, {"title": "Interactive Multiobjective Optimization from a Learning Perspective", "author": ["V. Belton", "J. Branke", "P. Eskelinen", "S. Greco", "J. Molina", "F. Ruiz", "R. Slowinski"], "venue": "Multiobjective Optimization: Interactive and Evolutionary Approaches,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2008}, {"title": "Advances in Evolutionary Multi-Objective Optimization", "author": ["K. Deb"], "venue": "Proceedings of the 4  th International Symposium on Search-Based Software Engineering (SSBSE),", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2012}, {"title": "Adaptive Surface Inspection via Interactive Evolution", "author": ["P. Caleb-Solly", "J.E. Smith"], "venue": "Image and Vision Computing,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2007}, {"title": "An Input Method using Discrete Fitness Values for Interactive Genetic Algorithms", "author": ["M. Ohsaki", "H. Takagi", "K. Ohya"], "venue": "Journal of Intelligent and Fuzzy Systems,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1998}, {"title": "The Magical Number Seven, Plus or Minus Two: Some Limits on our Capacity for Processing Information", "author": ["G. Miller"], "venue": "Psychology Review, vol. 63,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1956}, {"title": "Interactive Genetic Algorithm with Wavelet Coefficients for Emotional Image Retrieval", "author": ["Lee", "J.-Y", "Cho", "S.-B"], "venue": "Proceedings of the 5th International Conference on Soft Computing and Information /Intelligent Systems,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1999}, {"title": "Visual Interactive Evolutionary Algorithm for High Dimensional Data Clustering and Outlier Detection", "author": ["L. Boudjeloud", "F. Poulet"], "venue": "Proceedings of the 9  th Pacific-Asia Conference on Advances in Knowledge Discovery and Design,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2005}, {"title": "Multiple Fuzzy State-value Functions for Human Evaluation through Interactive Trajectory Planning of a Partner Robot", "author": ["N. Kubota", "Y. Nojima", "F. Kojima", "T. Fukuda"], "venue": "Soft Computing,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2006}, {"title": "Interactive Concept-based Search using MOEA: the Hierarchical Preference Case", "author": ["G. Avigad", "A. Moshaiov", "N. Brauner"], "venue": "International Journal of Computational Intelligence,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2005}, {"title": "Ergonomic Chair Design by Fusing Qualitative and Quantitative Criteria using Interactive Genetic Algorithms", "author": ["A. Brintrup", "J. Ramsden", "H. Takagi", "A. Tiwari"], "venue": "IEEE Transactions on Evolutionary Computation,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2008}, {"title": "Introduction to Evolutionary Computing, Springer", "author": ["A.E. Eiben", "J.E. Smith"], "venue": null, "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2003}, {"title": "Ant Algorithms for Discrete Optimization", "author": ["M. Dorigo", "G. Di Caro"], "venue": "Artificial Life,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 1999}, {"title": "Ant Colony Optimization", "author": ["M. Dorigo", "T. Stutzle"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2004}, {"title": "The Ant Colony Metaphor for Search Continuous Design Spaces", "author": ["G. Bilchev", "I.C. Parmee"], "venue": "Evolutionary Computing: Lecture Notes in Computer Science", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 1995}, {"title": "Interactive Particle Swarm Optimisation", "author": ["J. Madar", "J. Abonyi", "F. Szeifert"], "venue": "Proceedings of the 5  th International Conference on Intelligent Systems Design and Applications (ISDA", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2005}, {"title": "Interactive Fuzzy Multi-Objective Ant Colony Optimisation with Linguistically Quantified Decision Functions for Flexible Job Shop Scheduling Problems", "author": ["Xing", "L.-N", "Chen", "Y.-W", "Yang", "K.-W"], "venue": "Proceedings of Frontiers in the Convergence of Bioscience and Information (FBIT", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2007}, {"title": "An Interactive Simulation and Analysis Software for Solving TSP using Ant Colony Optimization Algorithms", "author": ["A. U\u011fur", "D. Aydin"], "venue": "Advances in Engineering Software,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2009}, {"title": "Exploring Ant Colony Optimisation for Adaptive Interactive Search", "author": ["Albakour", "M.-D", "U. Kruschwitz", "N. Nanas", "D. Song", "M. Fasli", "A. De Roeck"], "venue": "Proceedings of Advances in Information Retrieval Theory,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2011}, {"title": "The Vehicle Routing Problem", "author": ["P. Toth", "D. Vigo"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2001}, {"title": "An Investigation into the Applicability and Validity of Object-oriented Design Metrics", "author": ["R. Harrison", "S. Councell", "R. Nithi"], "venue": "Empirical Software Engineering,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 1998}, {"title": "Ant Colony for Multi-Objective Optimisation Problems", "author": ["I. Alaya", "Solnon", "K.C. Ghedira"], "venue": "Proceedings of the 19  th IEEE International Conference on Tools with Artificial Intelligence,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2007}, {"title": "Ant Colony Optimisation: Overview and Recent Advances", "author": ["M. Dorigo", "T. Stutzle"], "venue": "Handbook of Metaheuristics: International Series in Operations Research and Management Science,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2010}, {"title": "An Experimental Analysis of Design Choices for Multi- Objectives Ant Colony Optimisation Algorithms", "author": ["M. Lopez-Ibanez", "T. Stutzle"], "venue": "Swarm Intelligence,", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2012}, {"title": "MAX-MIN Ant System", "author": ["T. Stutzle", "H. Hoos"], "venue": "Future Generation Computer Systems,", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2000}, {"title": "The Effects of Anchoring in Interactive MCDM Solution Methods", "author": ["J.T. Buchanan", "H.G. Daellenbach"], "venue": "Computers and Operations Research,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 1997}, {"title": "An Introduction to Evolutionary Computing, Springer", "author": ["A.E. Eiben", "J.E. Smith"], "venue": null, "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2003}, {"title": "Use Case Specifications for Cinema Booking System", "author": ["C.L. Simons"], "venue": "http://www.cems.uwe.ac.uk/~clsimons/CaseStudies/CinemaBookingSystem.htm Accessed", "citeRegEx": "51", "shortCiteRegEx": "51", "year": 2012}, {"title": "Use Case Specifications for Graduate Development Program", "author": ["C.L. Simons"], "venue": "http://www.cems.uwe.ac.uk/~clsimons/CaseStudies/GraduateDevelopmentProgram.htm Accessed", "citeRegEx": "52", "shortCiteRegEx": "52", "year": 2012}, {"title": "Use Case Specifications for Select Cruises", "author": ["C.L. Simons"], "venue": "http://www.cems.uwe.ac.uk/~clsimons/CaseStudies/SelectCruises.htm Accessed", "citeRegEx": "53", "shortCiteRegEx": "53", "year": 2012}, {"title": "Manual Software Designs for Problem Domains", "author": ["C.L. Simons"], "venue": "http://www.cems.uwe.ac.uk/~clsimons/CaseStudies/ManualDesigns.pdf Accessed", "citeRegEx": "54", "shortCiteRegEx": "54", "year": 2012}, {"title": "Ethical Approval Documents", "author": ["C.L. Simons"], "venue": "http://www.cems.uwe.ac.uk/~clsimons/Ethics/ Acessed", "citeRegEx": "55", "shortCiteRegEx": "55", "year": 2012}, {"title": "Anti-Patterns: Refactoring Software, Architectures, and Projects in Crisis, Wiley", "author": ["W.J. Brown", "R.C. Malveau", "H.W. McCormick III", "T.J. Mowbray"], "venue": "Freeze on on off on On Color TL WT any any WT 7 Freeze on on on off off Color WT TL any any WT 8 Freeze on on off on on Color TL WT any any TL 9 Freeze on on on off off Color TL WT any any TL 10 Freeze on on off on on Color TK WT any any WT 11 Freeze on on on off off Color WT TL any any WT", "citeRegEx": "57", "shortCiteRegEx": "57", "year": 1998}], "referenceMentions": [{"referenceID": 0, "context": "After early empirical investigations incorporating designer preferences in search [1], [2], subsequent studies have combined quantitative machine-calculated fitness functions with qualitative designer evaluation of design elegance in a dynamic, multi-objective, interactive search [3].", "startOffset": 82, "endOffset": 85}, {"referenceID": 1, "context": "After early empirical investigations incorporating designer preferences in search [1], [2], subsequent studies have combined quantitative machine-calculated fitness functions with qualitative designer evaluation of design elegance in a dynamic, multi-objective, interactive search [3].", "startOffset": 87, "endOffset": 90}, {"referenceID": 2, "context": "After early empirical investigations incorporating designer preferences in search [1], [2], subsequent studies have combined quantitative machine-calculated fitness functions with qualitative designer evaluation of design elegance in a dynamic, multi-objective, interactive search [3].", "startOffset": 281, "endOffset": 284}, {"referenceID": 3, "context": "Interestingly, however, recent investigations comparing different metaheuristic search approaches have shown that ant colony optimization (ACO) can outperform evolutionary computation in quantitative search with respect to arriving at design solution candidates of superior fitness at earlier iterations / generations [4], [5].", "startOffset": 318, "endOffset": 321}, {"referenceID": 4, "context": "Interestingly, however, recent investigations comparing different metaheuristic search approaches have shown that ant colony optimization (ACO) can outperform evolutionary computation in quantitative search with respect to arriving at design solution candidates of superior fitness at earlier iterations / generations [4], [5].", "startOffset": 323, "endOffset": 326}, {"referenceID": 5, "context": "From its early roots using genetic algorithms to evolve software test sequences [6], [7], the idea that many aspects of software development are essentially optimization problems, and as such are amenable to automated search, has rapidly gained currency.", "startOffset": 80, "endOffset": 83}, {"referenceID": 6, "context": "From its early roots using genetic algorithms to evolve software test sequences [6], [7], the idea that many aspects of software development are essentially optimization problems, and as such are amenable to automated search, has rapidly gained currency.", "startOffset": 85, "endOffset": 88}, {"referenceID": 7, "context": "3 millennium by Harman and Jones [8].", "startOffset": 33, "endOffset": 36}, {"referenceID": 8, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 159, "endOffset": 162}, {"referenceID": 1, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 192, "endOffset": 195}, {"referenceID": 9, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 197, "endOffset": 201}, {"referenceID": 10, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 220, "endOffset": 224}, {"referenceID": 11, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 247, "endOffset": 251}, {"referenceID": 12, "context": "In the last decade applications of SBSE can be found across the spectrum of the software development lifecycle, including requirements analysis and scheduling [9], design tools and techniques [2], [10], software testing [11], automated bug fixing [12], and software maintenance [13].", "startOffset": 278, "endOffset": 282}, {"referenceID": 13, "context": "A comprehensive repository of publications in SBSE is maintained by Zhang [14].", "startOffset": 74, "endOffset": 78}, {"referenceID": 14, "context": "This is an intensely people-centric activity, and typically involves multi-objective trade-offs using competing criteria [15], [16], [17].", "startOffset": 127, "endOffset": 131}, {"referenceID": 15, "context": "This is an intensely people-centric activity, and typically involves multi-objective trade-offs using competing criteria [15], [16], [17].", "startOffset": 133, "endOffset": 137}, {"referenceID": 16, "context": "This process implicitly captures the user's multi-objective decision making processes without the need for time consuming explicit knowledge-acquisition process [19].", "startOffset": 161, "endOffset": 165}, {"referenceID": 17, "context": "Well known early applications include face-recognition [20], the evolution of computer graphics [21], and fitting Cochlear Implants [22].", "startOffset": 55, "endOffset": 59}, {"referenceID": 18, "context": "Well known early applications include face-recognition [20], the evolution of computer graphics [21], and fitting Cochlear Implants [22].", "startOffset": 96, "endOffset": 100}, {"referenceID": 19, "context": "Well known early applications include face-recognition [20], the evolution of computer graphics [21], and fitting Cochlear Implants [22].", "startOffset": 132, "endOffset": 136}, {"referenceID": 20, "context": "Miettinen [23] provides a comprehensive survey of interactive search methods and distinguishes various methods of decision-maker involvement in multi-objective search, such as a priori methods: \u201cwhere the decision maker must specify their preferences, hopes and opinions\u201d before the automated search, as opposed to a posteriori methods, which perform automated search to proceed without human guidance, then provide the decision maker with a selection of alternative solutions.", "startOffset": 10, "endOffset": 14}, {"referenceID": 21, "context": "[24] examine interactive multi-objective optimization from a learning perspective, and speculate on ways to enable mutual learning between decision makers and search processes while emphasizing the role of interactive decision making software tools and environments.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "Deb attempts to consolidate knowledge of the MCDM and SBSE communities to assess the state-of-the-art in evolutionary multi-objective optimization [25].", "startOffset": 147, "endOffset": 151}, {"referenceID": 23, "context": "On one hand, human subjective assessment tends to have a component of inconsistency and non-linearity of focus over time [26], which creates a need for rapid convergence.", "startOffset": 121, "endOffset": 125}, {"referenceID": 24, "context": "Discretizing continuous fitness values into five or seven levels was shown to facilitate decision making, without significantly compromising convergence [27].", "startOffset": 153, "endOffset": 157}, {"referenceID": 25, "context": "This limit on capacity for processing information has been comprehensively discussed in Miller [28] where", "startOffset": 95, "endOffset": 99}, {"referenceID": 26, "context": "Several methods have been proposed as \u201csurrogate models\u201d of user-provided fitness by, for example, clustering individuals [29], [30] or using multiple fuzzy state-value functions to approximate the trajectory of human scoring [31].", "startOffset": 122, "endOffset": 126}, {"referenceID": 27, "context": "Several methods have been proposed as \u201csurrogate models\u201d of user-provided fitness by, for example, clustering individuals [29], [30] or using multiple fuzzy state-value functions to approximate the trajectory of human scoring [31].", "startOffset": 128, "endOffset": 132}, {"referenceID": 28, "context": "Several methods have been proposed as \u201csurrogate models\u201d of user-provided fitness by, for example, clustering individuals [29], [30] or using multiple fuzzy state-value functions to approximate the trajectory of human scoring [31].", "startOffset": 226, "endOffset": 230}, {"referenceID": 29, "context": "[32], propose a multi-objective EA in which a model-based fitness of sub-concept solutions (using a sorting and ranking procedure) is combined with human evaluation.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[33].", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "Previously [3] we have used periodic qualitative (user-provided) evaluations of software designs to dynamically update a surrogate model that combined quantitative measurements of structural integrity and metrics relating to design symmetry to drive the evolution of elegant software designs with reduced need for human evaluations.", "startOffset": 11, "endOffset": 14}, {"referenceID": 16, "context": "[19], [23]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[19], [23]).", "startOffset": 6, "endOffset": 10}, {"referenceID": 31, "context": "[34]) and ant colony optimization (SimpleACO or S-ACO [35], [36]) have been compared by Simons and Smith for software design, with respect to both structural integrity and surrogate elegance", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[34]) and ant colony optimization (SimpleACO or S-ACO [35], [36]) have been compared by Simons and Smith for software design, with respect to both structural integrity and surrogate elegance", "startOffset": 54, "endOffset": 58}, {"referenceID": 33, "context": "[34]) and ant colony optimization (SimpleACO or S-ACO [35], [36]) have been compared by Simons and Smith for software design, with respect to both structural integrity and surrogate elegance", "startOffset": 60, "endOffset": 64}, {"referenceID": 3, "context": "6 metrics [4], [5].", "startOffset": 10, "endOffset": 13}, {"referenceID": 4, "context": "6 metrics [4], [5].", "startOffset": 15, "endOffset": 18}, {"referenceID": 34, "context": "An early attempt to apply ACO to the design of constrained engineering design problems is reported in [37].", "startOffset": 102, "endOffset": 106}, {"referenceID": 35, "context": "Some years pass before there is a report of interactive search with Particle Swarm Optimization used to design temperature profiles for a batch beer fermenter in 2005 [38].", "startOffset": 167, "endOffset": 171}, {"referenceID": 36, "context": "[39] report the use of interactive fuzzy ACO for Job Shop Problems in 2007, while Ugur and Aydin describe an interactive simulation for solving the TSP using ACO in 2009 [40].", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "[39] report the use of interactive fuzzy ACO for Job Shop Problems in 2007, while Ugur and Aydin describe an interactive simulation for solving the TSP using ACO in 2009 [40].", "startOffset": 170, "endOffset": 174}, {"referenceID": 38, "context": "report the use of ACO to simulate and interact with user query logs to learn knowledge about user behavior in a collection of documents [41].", "startOffset": 136, "endOffset": 140}, {"referenceID": 1, "context": "A full description of this software design problem specification can be found at [2].", "startOffset": 81, "endOffset": 84}, {"referenceID": 39, "context": "The software design solution representation used is inspired by models for the Travelling Salesman Problem (TSP) and Vehicle Routing Problem (VRP) [42].", "startOffset": 147, "endOffset": 151}, {"referenceID": 40, "context": "Thus, the first fitness measure is inspired by the \u201cCoupling Between Objects\u201d (CBO) measure [43].", "startOffset": 92, "endOffset": 96}, {"referenceID": 2, "context": "We have previously proposed and investigated four novel quantitative elegance metrics relating to the evenness of distribution of attributes and methods among classes within the design [3].", "startOffset": 185, "endOffset": 188}, {"referenceID": 41, "context": "The design of the proposed iACO search engine has been influenced by the results of previous recent studies [44], [45], [46] and also draws inspiration from the MAX-MIN Ant System (MMAS) [47].", "startOffset": 108, "endOffset": 112}, {"referenceID": 42, "context": "The design of the proposed iACO search engine has been influenced by the results of previous recent studies [44], [45], [46] and also draws inspiration from the MAX-MIN Ant System (MMAS) [47].", "startOffset": 114, "endOffset": 118}, {"referenceID": 43, "context": "The design of the proposed iACO search engine has been influenced by the results of previous recent studies [44], [45], [46] and also draws inspiration from the MAX-MIN Ant System (MMAS) [47].", "startOffset": 120, "endOffset": 124}, {"referenceID": 44, "context": "The design of the proposed iACO search engine has been influenced by the results of previous recent studies [44], [45], [46] and also draws inspiration from the MAX-MIN Ant System (MMAS) [47].", "startOffset": 187, "endOffset": 191}, {"referenceID": 16, "context": "Historically interactive EAs have ranged between presenting a single individual for evaluation, to presenting the entire population for ranking [19], [23].", "startOffset": 144, "endOffset": 148}, {"referenceID": 20, "context": "Historically interactive EAs have ranged between presenting a single individual for evaluation, to presenting the entire population for ranking [19], [23].", "startOffset": 150, "endOffset": 154}, {"referenceID": 1, "context": "Since color has been found to play an important role in design visualization [2], [3] it is used to reflect one aspect of the relative fitness of classes presented.", "startOffset": 77, "endOffset": 80}, {"referenceID": 2, "context": "Since color has been found to play an important role in design visualization [2], [3] it is used to reflect one aspect of the relative fitness of classes presented.", "startOffset": 82, "endOffset": 85}, {"referenceID": 4, "context": "However, previous work has shown that the multi-objective ACO search engine requires possibly 50 iterations to achieve reasonable fitness with respect to the three measures [5].", "startOffset": 173, "endOffset": 176}, {"referenceID": 2, "context": "Building on promising previous work [3], we employ an adaptive, fitness proportionate iteration interval.", "startOffset": 36, "endOffset": 39}, {"referenceID": 20, "context": "Miettinen ([23] p.", "startOffset": 11, "endOffset": 15}, {"referenceID": 45, "context": "fixing their thinking on some bias or partial \u2018chunk\u2019 of the solution [49].", "startOffset": 70, "endOffset": 74}, {"referenceID": 41, "context": "With respect to multi-objective ACO, a number of possibilities have been considered and evaluated for pheromone update, including weighted sum, weighted product pheromone update, multiple ant colonies and/or multiple pheromone matrices [44], [46].", "startOffset": 236, "endOffset": 240}, {"referenceID": 43, "context": "With respect to multi-objective ACO, a number of possibilities have been considered and evaluated for pheromone update, including weighted sum, weighted product pheromone update, multiple ant colonies and/or multiple pheromone matrices [44], [46].", "startOffset": 242, "endOffset": 246}, {"referenceID": 43, "context": "(This finding is interesting insofar as it differs from the findings of Lopez-Ibanez and Stutzle on bi-objective TSP problem [46] with respect to approximation of the center of the Pareto front.", "startOffset": 125, "endOffset": 129}, {"referenceID": 46, "context": "A useful discussion on the choice of test problems for experimental comparison in meta-heuristic search is provided by Eiben and Smith ([50], pp.", "startOffset": 136, "endOffset": 140}, {"referenceID": 47, "context": "A specification of the use cases of is available at [51].", "startOffset": 52, "endOffset": 56}, {"referenceID": 48, "context": "A specification of the use cases used in the development is available from [52].", "startOffset": 75, "endOffset": 79}, {"referenceID": 49, "context": "A specification of the use cases is available at [53].", "startOffset": 49, "endOffset": 53}, {"referenceID": 50, "context": "Manual software designs have been performed by appropriate experienced software designers from the three industrial problem domains and are available from [54].", "startOffset": 155, "endOffset": 159}, {"referenceID": 4, "context": "Values in Table 2 for the parameters N, \u03b1, \u03bc, \u03c3, are derived from the promising performances reported in [5], while those for MMAS-specific tmin and tmax are based on [47] and empirical evaluation with respect to the chosen representation.", "startOffset": 105, "endOffset": 108}, {"referenceID": 44, "context": "Values in Table 2 for the parameters N, \u03b1, \u03bc, \u03c3, are derived from the promising performances reported in [5], while those for MMAS-specific tmin and tmax are based on [47] and empirical evaluation with respect to the chosen representation.", "startOffset": 167, "endOffset": 171}, {"referenceID": 51, "context": "Details of the Research Ethics process can be found at [55].", "startOffset": 55, "endOffset": 59}, {"referenceID": 52, "context": "Interestingly, it was observed during design episodes that from time-to-time, the participants were presented with visualizations of candidate software design solution paths that show the \u201cGod Class\u201d anti-pattern [57].", "startOffset": 213, "endOffset": 217}, {"referenceID": 51, "context": "Ten of the eleven participants responded to the questionnaire [55] and the results are as follows.", "startOffset": 62, "endOffset": 66}], "year": 2012, "abstractText": "Software design is crucial to successful software development, yet is a demanding multi-objective problem for software engineers. In an attempt to assist the software designer, interactive (i.e. human in-the-loop) meta-heuristic search techniques such as evolutionary computing have been applied and show promising results. Recent investigations have also shown that Ant Colony Optimization (ACO) can outperform evolutionary computing as a potential search engine for interactive software design. With a limited computational budget, ACO produces superior candidate design solutions in a smaller number of iterations. Building on these findings, we propose a novel interactive ACO (iACO) approach to assist the designer in early lifecycle software design, in which the search is steered jointly by subjective designer evaluation as well as machine fitness functions relating the structural integrity and surrogate elegance of software designs. Results show that iACO is speedy, responsive and highly effective in enabling interactive, dynamic multi-objective search in early lifecycle software design. Study participants rate the iACO search experience as compelling. Results of machine learning of fitness measure weightings indicate that software design elegance does indeed play a significant role in designer evaluation of candidate software design. We conclude that the evenness of the number of attributes and methods among classes (NAC) is a significant surrogate elegance measure, which in turn suggests that this evenness of distribution, when combined with structural integrity, is an implicit but crucial component of effective early lifecycle software design.", "creator": "Microsoft\u00ae Word 2010"}}}