{"id": "1212.6216", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Dec-2012", "title": "Generating Motion Patterns Using Evolutionary Computation in Digital Soccer", "abstract": "Dribbling an opponent player in digital soccer environment is an important practical problem in motion planning. It has special complexities which can be generalized to most important problems in other similar Multi Agent Systems. In this paper, we propose a hybrid computational geometry and evolutionary computation approach for generating motion trajectories to avoid a mobile obstacle. In this case an opponent agent is not only an obstacle but also one who tries to harden dribbling procedure. One characteristic of this approach is reducing process cost of online stage by transferring it to offline stage which causes increment in agents' performance. This approach breaks the problem into two offline and online stages. During offline stage the goal is to find desired trajectory using evolutionary computation and saving it as a trajectory plan. A trajectory plan consists of nodes which approximate information of each trajectory plan. In online stage, a linear interpolation along with Delaunay triangulation in xy-plan is applied to trajectory plan to retrieve desired action.", "histories": [["v1", "Wed, 26 Dec 2012 17:14:32 GMT  (506kb)", "http://arxiv.org/abs/1212.6216v1", null], ["v2", "Sun, 6 Jan 2013 11:48:03 GMT  (663kb)", "http://arxiv.org/abs/1212.6216v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.RO", "authors": ["masoud amoozgar", "daniel khashabi", "milad heydarian", "mohammad nokhbeh", "saeed bagheri shouraki"], "accepted": false, "id": "1212.6216"}, "pdf": {"name": "1212.6216.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Masood Amoozgar"], "emails": ["masood.moozgar@cs.sharif.ir.", "heydariaan@cs.sharif.ir.", "nokhbeh100}@gmail.com.", "bagheri-s@sharif.edu"], "sections": [{"heading": null, "text": "One focus of machine learning research is to learn and mimic complex patterns and make intelligent decisions based on sampled data. However, some machine learning systems attempt to eliminate the need for human intuition in data analysis, while others adopt a collaborative approach between human intuition and machine. However, human intuition cannot be completely eliminated, as the systems designer must specify how the data is represented and what mechanisms are used to search for a characterization of the data. Another reason for the collaborative human machine approach is due to the complexity and difficulty of pure machine analysis. In this study, we will use a collaborative human-machine approach to design a trajectory."}, {"heading": "II. DRIBBLING A MOBILE AGENT", "text": "Dribbling is a sequence of several decisions that together determine the position of an agent on a plan. Therefore, each decision by changing the relative position of the agent vis-\u00e0-vis other agents would cause a significant change in the next performance of the agent. Therefore, it is a complicated task. As already mentioned, the focus is on a specific case of dribbling a mobile agent / obstacle. In some cases, the position of an obstacle changes dynamically and algorithms must be as adaptable as possible to the surroundings in real time. But the way that obstacles behave is so important. In fact, if the intelligence of an obstacle agent is low, the obstacle agent will not fulfill his task of grabbing the ball, so it is a conventional obstacle avoidance problem and with less time and energy costs the goal of the dribbling will be achieved. If it is high, the dribbler will try to grab the ball, so that the ball defender with little distance to the ball defender is most likely."}, {"heading": "III. OFFLINE STAGE", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A. Trajectory plan Generation", "text": "In fact, this structure is a function that provides information about dribbling in any position of the field, and the optimization process that is discussed in further parts is applied to this structure. In defining such a structure, we have used Delaunay triangulation and linear interpolation, which is described in the next part. 1) Delaunay triangulation: Delaunay triangulation is one of the most promising methods for triangulation of the plate region based on a particular point set. Delaunay triangulation for a point set P is DT (P), so there is no point element of P, within the circle of a triangle of DT (P). For each set of points greater than 3, there is a unique Delaunay triangulation."}, {"heading": "B. Designing trajectory plans", "text": "You can design your desired trajectory (Fig. 4). In defining each pattern, you can define the following specifications: --Position of an agent relative to the position of the opponent. --Direction of the agent's movement relative to the global zero direction of the field. --Direction of the ball relative to the global zero direction of the field. --Acceleration of the agent in a certain direction. Position of the ball depends only on its relative direction. After inserting each new node into a flight plan, DEdit triangulates the plan. It is possible to edit the specifications of all predefined nodes. To test a flight plan, a simulation engine is designed that simulates the agent's movement when it starts from a certain starting position and at a certain initial speed specified by the user. An example of a user-generated trajectory is shown in Fig. 2."}, {"heading": "C. Optimizing strategy of trajectory plan", "text": "For the use of genetic algorithms, the problem must be defined as one generation and then it is possible to use the evolution over that generation. The first stage is the definition of individuals. Each trajectory plan is defined as an individual. In practice, there is a complex structure of individuals, each comprising 5 parameters: x, y, acceleration, ball alignment and body alignment. The second generation of individuals is used only for the specification of each point and not for the development of individuals. A process of generating individuals on the basis of human-generated trajectory plans is carried out, which is done until a population is reached in the number of population sizes that are used as initial population."}, {"heading": "D. Fitness function", "text": "It is assumed that the positions of the nodes in all flight plans are the same. Thus, the fitness function of a flight plan tp is the sum of the fitness function of the nodes. # 1 () (.) nodesi i i planFitness tp fitnessFunction tp node = = \u2211 (5) And fitness function for each node in the flight plan is: 2 () exp ()) fitnessFunction node = (6) 2 22 2 (.) (.) (.) (.) desirable node bodyDir node bodyDir ballRlObs \u03b2 = \u2212 \u2212 \u2212 (7) () () () 0.1 50 exp (2) User is directly involved \u03b2 \u03b2 \u03b2 = \u2212 (\u2212) (8)."}, {"heading": "IV. ONLINE STAGE", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A. Using calculated values", "text": "Depending on the position, a flight plan is discussed in each cycle, which determines the acceleration, body direction and ball direction of the agent by means of linear interpolation. Reasons for proposing linear interpolation as the standard algorithm for calculating the values of the agent's flight movements are local approach and low computational costs. Other interpolating methods can be used, in particular non-linear approximators (e.g. Neural Networks) or fuzzy approaches according to the desired complexity. Trajectory plans are obstacle-centric, which means that the position and direction of each flight plan in the digital football field depends on obstacles (Fig. 3). Therefore, in order to acquire an algorithm for selecting the best flight plan for the agent's movement, Delaunay triangulation is reused, assuming nodes as obstacles in this layer of processing. In fact, the trajectory plan in each position of the flight field is calculated on the basis of this plan, which is based on another fact that different positions are safe during the flight action."}, {"heading": "V. RESULTS & FUTURE WORKS", "text": "In this study, we proposed a method for developing movement patterns, where the goal is to dribble a moving agent. As mentioned above, one particular case that is most affected is where a ball carrier wants to dribble a deflecting agent. The proposed method is a genetic algorithm that is applied to solutions stored by Delaunay triangulation. Although there is no strong evidence for the optimality of this trajectory generation, the results presented in earlier parts show that by adjusting fitness function and using offline dribble data it is possible to achieve trustworthy solutions. There are some other points in this work: - Delaunay triangulation can be an approximation tool where there is a need for approximation. Here, we showed its u-motion patterns. - Although dribbling is a follow-up method free from sequential analysis, defining final results for dribbling is too difficult to apply methods to solve the type of pattern desired."}, {"heading": "ACKNOWLEDGMENT", "text": "The authors thank Mojtaba Khalidji for his illuminating comments and discussions, and Pooya Abedi and Iman Esmaili and Seyed Hossein Khasteh for their reviews and helpful comments."}], "references": [{"title": "Multi-agent Positioning Mechanism in the Dynamic Environment", "author": ["H. Akiyama", "I. Noda"], "venue": "Robocup2007,LNA 5001, vol. 5001/2008, pp. 377-384, 2008.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2007}, {"title": "Training of Agent Positioning Using Human\u2019s Instruction", "author": ["H.Akiyama", "D.Katagami", "K.Nitta"], "venue": "Journal of Advanced Computational Intelligence and Intelligant Informatics, vol. 11, no. 8, pp. 998-1006, 2007.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "Handbook of Genetic Algorithms.", "author": ["L.D. Davis", "Melanie Mitchell"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}], "referenceMentions": [{"referenceID": 0, "context": "This kind of function approximation using Delaunay triangulation has following advantages [1]: --High approximation accuracy: It is claimed that this method of approximation is more accurate than other methods.", "startOffset": 90, "endOffset": 93}, {"referenceID": 0, "context": "In [1] and [3] a method is proposed to approximate positioning of a multi-agent system based on combination of Delaunay triangulation and linear interpolation.", "startOffset": 3, "endOffset": 6}, {"referenceID": 1, "context": "In [1] and [3] a method is proposed to approximate positioning of a multi-agent system based on combination of Delaunay triangulation and linear interpolation.", "startOffset": 11, "endOffset": 14}], "year": 2010, "abstractText": "Dribbling an opponent player in digital soccer environment is an important practical problem in motion planning. It has special complexities which can be generalized to most important problems in other similar Multi Agent Systems. In this paper, we propose a hybrid computational geometry and evolutionary computation approach for generating motion trajectories to avoid a mobile obstacle. In this case an opponent agent is not only an obstacle but also one who tries to harden dribbling procedure. One characteristic of this approach is reducing process cost of online stage by transferring it to offline stage which causes increment in agents\u2019 performance. This approach breaks the problem into two offline and online stages. During offline stage the goal is to find desired trajectory using evolutionary computation and saving it as a trajectory plan. A trajectory plan consists of nodes which approximate information of each trajectory plan. In online stage, a linear interpolation along with Delaunay triangulation in xy-plan is applied to trajectory plan to retrieve desired action.", "creator": "'Certified by IEEE PDFeXpress at 12/07/2010 4:21:00 PM'"}}}