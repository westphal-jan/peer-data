{"id": "1301.2302", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Jan-2013", "title": "Toward General Analysis of Recursive Probability Models", "abstract": "There is increasing interest within the research community in the design and use of recursive probability models. Although there still remains concern about computational complexity costs and the fact that computing exact solutions can be intractable for many nonrecursive models and impossible in the general case for recursive problems, several research groups are actively developing computational techniques for recursive stochastic languages. We have developed an extension to the traditional lambda-calculus as a framework for families of Turing complete stochastic languages. We have also developed a class of exact inference algorithms based on the traditional reductions of the lambda-calculus. We further propose that using the deBruijn notation (a lambda-calculus notation with nameless dummies) supports effective caching in such systems (caching being an essential component of efficient computation). Finally, our extension to the lambda-calculus offers a foundation and general theory for the construction of recursive stochastic modeling languages as well as promise for effective caching and efficient approximation algorithms for inference.", "histories": [["v1", "Thu, 10 Jan 2013 16:25:55 GMT  (598kb)", "http://arxiv.org/abs/1301.2302v1", "Appears in Proceedings of the Seventeenth Conference on Uncertainty in Artificial Intelligence (UAI2001)"]], "COMMENTS": "Appears in Proceedings of the Seventeenth Conference on Uncertainty in Artificial Intelligence (UAI2001)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["daniel pless", "george luger"], "accepted": false, "id": "1301.2302"}, "pdf": {"name": "1301.2302.pdf", "metadata": {"source": "CRF", "title": "Toward General Analysis of Recursive Probability Models", "authors": ["George Luger"], "emails": ["@cs."], "sections": [{"heading": null, "text": "The limitations of flat Bayesian Networks (BNs) in terms of the use of simple random variables are widely accepted by researchers [Xiang et al., 1993; Laskey and Mahoney, I 997]. These limitations have resulted in a variety of recent research projects in hierarchical and composed Bayesian models based on an object-oriented approach. Although these approaches offer more expressive and / or successively representative frameworks, few of these models have the class of models that can be represented. Recent research has dealt with this issue. An example is the functional stochastic modeling of language proposed by Koller. [1997] Their language, turing, is complete that allows the representation of a much more inclusive one."}], "references": [{"title": "Object-oriented Bayesian Networks", "author": ["Koller", "Pfeffer", "1997] D. Koller", "A. Pfeffer"], "venue": null, "citeRegEx": "Koller et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Koller et al\\.", "year": 1997}, {"title": "Probabilistic Frame-Based Systems", "author": ["Koller", "Pfeffer", "1998] D. Koller", "A. Pfeffer"], "venue": null, "citeRegEx": "Koller et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Koller et al\\.", "year": 1998}, {"title": "Logic Programming, Abduction and Probability: a top-down anytime algorithm for estimating prior and posterior", "author": ["D. Poole"], "venue": "[Poole,", "citeRegEx": "Poole.,? \\Q1993\\E", "shortCiteRegEx": "Poole.", "year": 1993}, {"title": "Practical Issues in Modeling Large Diagnostic Systems with Multiply Sectioned", "author": ["Xiang et al", "2000] Y. Xiang", "K.G. Olesen", "F.V. Jensen"], "venue": "Bayesian Networks,", "citeRegEx": "al. et al\\.,? \\Q2000\\E", "shortCiteRegEx": "al. et al\\.", "year": 2000}, {"title": "Multiply Sectioned Bayesian Networks and Junction Forests for Large Knowledge-Based Systems. Computationallntelligence", "author": ["Xiang et al", "1993] Y. Xiang", "D. Poole", "M. Beddoes"], "venue": null, "citeRegEx": "al. et al\\.,? \\Q1993\\E", "shortCiteRegEx": "al. et al\\.", "year": 1993}], "referenceMentions": [{"referenceID": 0, "context": "One example is the functional stochastic modeling language proposed by Koller et al. [ 1997]. Their language is Turing complete, allowing the representation of a much broader class of models. Pless et al. [2000] extends and refines this proposed framework to one which is more object-oriented and which allows hierarchical encapsulation of models.", "startOffset": 71, "endOffset": 212}, {"referenceID": 0, "context": "One example is the functional stochastic modeling language proposed by Koller et al. [ 1997]. Their language is Turing complete, allowing the representation of a much broader class of models. Pless et al. [2000] extends and refines this proposed framework to one which is more object-oriented and which allows hierarchical encapsulation of models. Both languages provide the ability to use functions to represent general stochastic relationships. They both also use lazy evaluation to allow computation over potentially infinite distributions. Pfeffer [2000] and Pfeffer and Koller [2000] have also proposed a Turing complete framework based on approximate inference.", "startOffset": 71, "endOffset": 559}, {"referenceID": 0, "context": "One example is the functional stochastic modeling language proposed by Koller et al. [ 1997]. Their language is Turing complete, allowing the representation of a much broader class of models. Pless et al. [2000] extends and refines this proposed framework to one which is more object-oriented and which allows hierarchical encapsulation of models. Both languages provide the ability to use functions to represent general stochastic relationships. They both also use lazy evaluation to allow computation over potentially infinite distributions. Pfeffer [2000] and Pfeffer and Koller [2000] have also proposed a Turing complete framework based on approximate inference.", "startOffset": 71, "endOffset": 589}, {"referenceID": 2, "context": "Poole [1993] gives an earlier approach which develops an approximate algorithm for another Turing complete probabilistic logic language.", "startOffset": 0, "endOffset": 13}, {"referenceID": 0, "context": "It is capable of expressing the same set of stochastic models as the earlier Turing complete modeling languages as proposed [Koller et al., 1997; Pless et al., 2000; Pfeffer, 2000; Pfeffer and Koller, 2000].", "startOffset": 124, "endOffset": 206}, {"referenceID": 0, "context": "It is capable of expressing the same set of stochastic models as the earlier Turing complete modeling languages as proposed [Koller et al., 1997; Pless et al., 2000; Pfeffer, 2000; Pfeffer and Koller, 2000]. Any of those languages could be implemented as a layer on top of our stochastic A.\u00ad calculus. In Pless et al. [2000] the modeling language is presented in tenns of an outer language for the user which is then transformed into an inner language appropriate for inference.", "startOffset": 125, "endOffset": 325}], "year": 2011, "abstractText": "There is increasing interest within the research community in the design and use of recursive probability models. There remains concern about computational complexity costs and the fact that computing exact solutions can be intractable for many nonrecursive models. Although inference is undecidable in the general case for recursive problems, several research groups are actively developing computational techniques for recursive stochastic languages. We have developed an extension to the traditional A.\u00ad calculus as a framework for families of Turing complete stochastic languages. We have also developed a class of exact inference algorithms based on the traditional reductions of the A.\u00ad calculus. We further propose that using the deBruijn notation (a A.-calculus notation with nameless dummies) supports effective caching in such systems, as the reuse of partial solutions is an essential component of efficient computation. Finally, our extension to the A.-calculus offers a foundation and general theory for the construction of recursive stochastic modeling languages as well as promise for effective caching and efficient approximation algorithms for inference.", "creator": "pdftk 1.41 - www.pdftk.com"}}}