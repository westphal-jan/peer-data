{"id": "1301.5160", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Jan-2013", "title": "See the Tree Through the Lines: The Shazoo Algorithm -- Full Version --", "abstract": "Predicting the nodes of a given graph is a fascinating theoretical problem with applications in several domains. Since graph sparsification via spanning trees retains enough information while making the task much easier, trees are an important special case of this problem. Although it is known how to predict the nodes of an unweighted tree in a nearly optimal way, in the weighted case a fully satisfactory algorithm is not available yet. We fill this hole and introduce an efficient node predictor, Shazoo, which is nearly optimal on any weighted tree. Moreover, we show that Shazoo can be viewed as a common nontrivial generalization of both previous approaches for unweighted trees and weighted lines. Experiments on real-world datasets confirm that Shazoo performs well in that it fully exploits the structure of the input tree, and gets very close to (and sometimes better than) less scalable energy minimization methods.", "histories": [["v1", "Tue, 22 Jan 2013 11:59:04 GMT  (240kb,D)", "http://arxiv.org/abs/1301.5160v1", null], ["v2", "Thu, 28 Feb 2013 17:31:08 GMT  (240kb,D)", "http://arxiv.org/abs/1301.5160v2", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["fabio vitale", "nicolo cesa-bianchi", "claudio gentile", "giovanni zappella"], "accepted": false, "id": "1301.5160"}, "pdf": {"name": "1301.5160.pdf", "metadata": {"source": "CRF", "title": "See the Tree Through the Lines: The Shazoo Algorithm", "authors": ["Fabio Vitale"], "emails": ["fabio.vitale@unimi.it", "nicolo.cesa-bianchi@unimi.it", "claudio.gentile@uninsubria.it", "giovanni.zappella@unimi.it"], "sections": [{"heading": "1 Introduction", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "2 Preliminaries and basic notation", "text": "Let us present T = (V, j, W) as an undirected and weighted tree with | V | = n nodes, positive edge weights Wi, j > 0 for (i, j).E and Wi, j = 0 for (i, j) /.E. A binary label of T is any assignment = (y1,.., yn).1, + 1} n of the binary label of its nodes. We use (T, y) to mark the resulting labeled edge. The online learning protocol for the prediction (T, y) is defined as follows. The learner is given T while y remains hidden. The nodes of T are presented to the learner one by one, according to an unknown and arbitrary permutation i1,.. in V. At each time step t = 1,... n node of T is presented and the learner must make a prediction."}, {"heading": "3 A lower bound for weighted trees", "text": "In this section we show that the weighted cut size can be used as the lower limit for the number of online errors made by any algorithm on any tree. To do this (and unlike previous work on this particular topic - see e.g. [6]), we need to introduce a more refined concept of the opposing \"budget.\" Since T = (V, E, W) is supposed to be the maximum number of edges of T, so that the sum of their weights does not potentially exceed M, we need (M) = max. (E) |: E \"E, \u2211 (i, j) E\" wi, j \u2264 M. \"We have the following simple lower limit (all the evidence is omitted in this extended abstraction).Theorem 1 For each weighted tree T = (V, E, W) there is a randomized designation for the lower weighting of V, so that each algorithm can be forced to make at least (M) / 2 online errors in anticipation."}, {"heading": "4 The Shazoo algorithm", "text": "In this section we introduce the SHAZOO algorithms associated with at least three different nodes, and refer them to previously proposed methods for online prediction of unweighted trees (TREEOPT). In this section we introduce the SHAZOO algorithms (TREEOPT). (SO algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms algorithms"}, {"heading": "5 Mistake bound analysis and implementation", "text": "We now show that SHAZOO is almost optimal on each weighted tree T. We get an upper limit in terms of \u03a6W and the structure of T, which has almost the lower limit of theorem 1. We now give some auxiliary quantities that are exclusively required for specifying the error limit. In the face of a marked tree (T, y) is a cluster any maximum subtree whose nodes have the same designation. An in-cluster line diagram is any line that is completely contained in a single cluster. Finally, a line diagram L, we set RWL = (i, j).L 1 Wi, i.e., the (resistance) distance between its terminal nodes.Theorem 2 For all marked and weighted trees, there is a row of LT (T, y)."}, {"heading": "6 Experiments", "text": "This year it is more than ever before in the history of the city."}, {"heading": "SHAZOO WTA OMV LABPROP 3*WTA 3*SHAZOO 7*WTA 7*SHAZOO", "text": "0.954 0.947 0.706 0.931 0.967 0.964 0.968 0.9683 We do not compare our results with those obtained within the challenge, since we only evaluate the (weighted) topology of the chart, regardless of content characteristics. Our empirical results can be summarized briefly as follows: 1. Without the use of committees, SHAZOO performs better than WTA in all data sets, regardless of the type of tree used. SHAZOO almost always performs better than WTA with committees, although the gap between the two reductions exists. 2. The predictive performance of SHAZOO + MST appears to be comparable and sometimes better than that of LABPROP, although the latter algorithm is slower. 3. k * SHAZOO with k = 11 (or k = 7 on WEBSPAM) seems to be particularly effective and to outperform LABPROP with a small (e.g. 5%) training set."}, {"heading": "Proof of Theorem 1", "text": "Select any E'E in such a way that for each of the components of F (M) = | E \"| the forest F is the forest obtained by removing all the edges in E.\" Draw an independent random label for each of the components of F and assign it to all nodes of that component. Then, in expectation, each online algorithm makes at least half of the errors per component, implying that the total number of online errors is as expected (| E '| + 1) / 2 > (M) / 2. On the other hand, \u03a6W \u2264 M clearly holds by construction."}, {"heading": "Proof of Theorem 2", "text": "We first give additional definitions used in the analysis, then we present the main ideas, and finally we provide a complete line. (We remember that a cluster is a maximum subtree whose nodes have the same designation.) Let C be the set of all nodes connected to a node of C. Note that all edges connecting a node of C are tied to a node of C. (Let us get the number of edges of C as a subtree of T by adding all nodes connected to a node of C. Note that all edges connecting a node of C are to a node of C.) Let's be the number of edges of C in C and let's be the number of edges of E in C. (Let's be the totality of edges of C) it."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Predicting the nodes of a given graph is a fascinating theoretical problem with applications in several<lb>domains. Since graph sparsification via spanning trees retains enough information while making the task<lb>much easier, trees are an important special case of this problem. Although it is known how to predict the<lb>nodes of an unweighted tree in a nearly optimal way, in the weighted case a fully satisfactory algorithm<lb>is not available yet. We fill this hole and introduce an efficient node predictor, SHAZOO, which is nearly<lb>optimal on any weighted tree. Moreover, we show that SHAZOO can be viewed as a common nontrivial<lb>generalization of both previous approaches for unweighted trees and weighted lines. Experiments on<lb>real-world datasets confirm that SHAZOO performs well in that it fully exploits the structure of the input<lb>tree, and gets very close to (and sometimes better than) less scalable energy minimization methods.", "creator": "LaTeX with hyperref package"}}}