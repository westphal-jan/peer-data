{"id": "1301.6691", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jan-2013", "title": "Hybrid Probabilistic Programs: Algorithms and Complexity", "abstract": "Hybrid Probabilistic Programs (HPPs) are logic programs that allow the programmer to explicitly encode his knowledge of the dependencies between events being described in the program. In this paper, we classify HPPs into three classes called HPP_1,HPP_2 and HPP_r,r&gt;= 3. For these classes, we provide three types of results for HPPs. First, we develop algorithms to compute the set of all ground consequences of an HPP. Then we provide algorithms and complexity results for the problems of entailment (\"Given an HPP P and a query Q as input, is Q a logical consequence of P?\") and consistency (\"Given an HPP P as input, is P consistent?\"). Our results provide a fine characterization of when polynomial algorithms exist for the above problems, and when these problems become intractable.", "histories": [["v1", "Wed, 23 Jan 2013 15:57:43 GMT  (569kb)", "http://arxiv.org/abs/1301.6691v1", "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)"]], "COMMENTS": "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["michael i dekhtyar", "alex dekhtyar", "v s subrahmanian"], "accepted": false, "id": "1301.6691"}, "pdf": {"name": "1301.6691.pdf", "metadata": {"source": "CRF", "title": "Hybrid Probabilistic Programs: Algorithms and Complexity", "authors": ["Michael I. Dekhtyar", "Alex Dekhtyar", "V.S. Subrahmanian"], "emails": ["Michael.Dekhtyar@tversu.ru", "dekhtyar@cs.umd.edu", "vs@cs.umd.edu"], "sections": [{"heading": null, "text": "This year, the time has come for us to be able to look for a solution that is capable, in which we are able to find a solution."}], "references": [{"title": "Hybrid Probabilistic Logic Programs, accepted to Journal of Logic Programming, Jan. 1998, preliminary version available as University of Maryland Tech Report CS-TR-3883, from http:/  jwww.cs.umd.edu/TRsjauthorsj Alex_Dekhtyar.html", "author": ["A. Dekhtyar", "V.S. Subrahmanian"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "The aim of this section is to describe the syntax and semantics of HPPs - the content of this section is not new and overviews results in [2].", "startOffset": 138, "endOffset": 141}, {"referenceID": 0, "context": "For the discussion on why we specify max-interval functions as above see [2].", "startOffset": 73, "endOffset": 76}, {"referenceID": 0, "context": "For a more complete discussion of the axioms we refer the reader to [2].", "startOffset": 68, "endOffset": 71}, {"referenceID": 0, "context": "[2] contains a more comprehensive description.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "The first proof procedure for probabilistic programs, introduced in [2] and [17] is based upon expanding the program P to a larger set of clauses (a closure of the program) and then re\u00ad solving queries against that set.", "startOffset": 68, "endOffset": 71}, {"referenceID": 0, "context": "Hybrid Probabilistic Programs (HPPs) [2] represent one of the first frame\u00ad works that allow a logic program to explicitly encode a variety of different probability assumptions explicitly into the program, for use in inferencing.", "startOffset": 37, "endOffset": 40}, {"referenceID": 0, "context": "Our proof system HGRp is new (and is also different from the proof system in [2]), and to our knowledge none of the existing proof systems for annotated logic have been shown to have polynomially bounded proofs (and hence succinct ex\u00ad planations).", "startOffset": 77, "endOffset": 80}], "year": 2011, "abstractText": "Hybrid Probabilistic Programs (HPPs) are logic programs that allow the programmer to explicitly encode his knowledge of the de\u00ad pendencies between events being described in the program. In this paper, we classify HPPs into three classes called H P P1, H P P2 and H P Pr, r 2: 3. For these classes, we pro\u00ad vide three types of results for HPPs. First, we develop algorithms to compute the set of all ground consequences of an HPP. Then we provide algorithms and complexity results for the problems of entailment (\"Given an HPP P and a query Q as input, is Q a logical con\u00ad sequence of P?\") and consistency (\"Given an HPP Pas input, is P consistent?\"). Our re\u00ad sults provide a fine characterization of when polynomial algorithms exist for the above problems, and when these problems become intractable.", "creator": "pdftk 1.41 - www.pdftk.com"}}}