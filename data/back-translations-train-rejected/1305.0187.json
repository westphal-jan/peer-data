{"id": "1305.0187", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-May-2013", "title": "A Community Based Algorithm for Large Scale Web Service Composition", "abstract": "Web service composition is the process of synthesizing a new composite service using a set of available Web services in order to satisfy a client request that cannot be treated by any available Web services. The Web services space is a dynamic environment characterized by a huge number of elements. Furthermore, many Web services are offering similar functionalities. In this paper we propose a model for Web service composition designed to address the scale effect and the redundancy issue. The Web services space is represented by a two-layered network architecture. A concrete similarity network layer organizes the Web services operations into communities of functionally similar operations. An abstract interaction network layer represents the composition relationships between the sets of communities. Composition synthesis is performed by a two-phased graph search algorithm. First, the interaction network is mined in order to discover abstract solutions to the request goal. Then, the abstract compositions are instantiated with concrete operations selected from the similarity network. This strategy allows an efficient exploration of the Web services space. Furthermore, operations grouped in a community can be easily substituted if necessary during the composition's synthesis's process.", "histories": [["v1", "Wed, 1 May 2013 14:44:22 GMT  (500kb)", "http://arxiv.org/abs/1305.0187v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.SE", "authors": ["chantal cherifi", "yvan rivierre", "jean-francois santucci"], "accepted": false, "id": "1305.0187"}, "pdf": {"name": "1305.0187.pdf", "metadata": {"source": "CRF", "title": "A Community Based Algorithm for Large Scale Web Service Composition", "authors": ["Chantal Cherifi", "Yvan Rivierre", "Jean-Fran\u00e7ois Santucci"], "emails": ["chantalbonner@gmail.com", "Yvan.Rivierre@imag.fr", "santucci@univ-corse.fr"], "sections": [{"heading": null, "text": "The Web service space is a dynamic environment characterized by a large number of elements. In addition, many Web services offer similar functionalities. In this article, we propose a model for the composition of Web services that takes into account the economies of scale and redundancy issues. Web service space is represented by a two-layer network architecture. A concrete network layer organizes Web service operations in communities of functionally similar operations. An abstract network layer represents the composition relationships between groups of communities. Composition synthesis is performed by a two-phase graph search algorithm. First, the interaction network is designed to find abstract solutions to the requirement target. Subsequently, the abstract compositions are instantiated with concrete operations selected from the similarity network. This strategy allows efficient exploration of the Web service space. Furthermore, operations grouped in a community, if necessary, during the composition, can be synthesized:"}, {"heading": "1. Introduction", "text": "In fact, web services are designed so that they can be used by business partners or clients to achieve new and more useful functionalities that they have linked together over the web."}, {"heading": "2. The two-layered architecture", "text": "Our approach to the composition of web services is based on a structure of two networks. An abstract interaction network is used to discover a set of meta-operations that can potentially fulfil a goal. A concrete similarity network allows to instantiate them with actual and available web service operations. Groups of similar operations are already existing structures that are stored in a network of similar concrete operations. Composition of meta-operations is an already existing structure stored in a network of interacting meta-operations. They can be easily updated when new web services appear."}, {"heading": "2.1. Instance layer", "text": "The instance level represents all the concrete operations of the published web services. They can potentially be called to fulfill a request. They are organized in a similarity network. A similarity network of operations is a graph whose nodes correspond to the web service operations and links that indicate that two operations provide similar functionalities. Since our main concern is to deal with the substitution of web services, we consider that two operations are similar when they enable the achievement of more or less the same goal. To determine the similarity, we consider input and output parameters. We consider four similarity levels as Full Similarity, Partial Similarity, Excess Similarity, and Relation Similarity Similarity Similarity parameters [15]. They are defined as input and output parameter sets of the comparable operations as input parameters Oput parameters. We want to compare two operations o1 and putputo2, let us compare the input parameters I, input parameters I, and input parameters I."}, {"heading": "2.2. Meta-layer", "text": "The meta layer enables the search for compositions in a reduced space of an interaction network of meta-operations. A meta-operation is the representative of a community at the instance level. We define a set of input parameters and a set of output parameters for each meta-operation. The set of input parameters of a meta-operation is defined as the union of the inputs of all operations of the corresponding community. Likewise, the output parameter set of a meta-operation is the union of the output parameter sets of the operations of the underlying community. Meta-operations are linked together to form an interaction network of meta-operations. An interaction network of meta-operations is a directed graph N (V, E), where V is the set of nodes that represent the meta-operations and E the linkages that represent their interactions."}, {"heading": "3. Composition algorithm", "text": "The composition process consists of two steps. In the first step, the meta-operations network is explored to search for a meta-composition that fits a user request. It is performed using a graph-based approach, starting from the target of the service request and composed backwards towards the input of the service request. This meta-composition includes all possible compositions. If no meta-composition is found, it implies that no composition could be found anyway. In the second step, the meta-composition is instantiated in compositions of operations. By instantiation, we mean the replacement of the abstract meta-operations by concrete operations of the similarity network of the instance layer. A composition of operations is a sequence of operations sorted by rest order. It does not contain the functional relationships between these operations, but they can be easily derived. Note that the sequence is used only to simplify formalism."}, {"heading": "3.1. Environment", "text": "This environment is defined for formalizing both steps of the general composition algorithm. K is the set of parameters known by the user, i.e. the input part of the request. G is the set of desired parameters, i.e. the target part of the request. N = (V, E) is the operational similarity network. N = (V, E) is the meta-operation interaction network based on N. The following primitives are used to explore a network. Label (m, m ') returns the label of the edge (m, m') in N. Input (m) returns the input parameters of m. Output (m) returns the output parameters of m. Pred (m, network) returns the initial parameters of m in the network. Since a meta composition is a subnetwork of N, it can also be considered a network. Finally, the two types of results provided by the general composition algorithm are constructed in metals as the following step C of this second composition."}, {"heading": "3.2. Find Meta-composition", "text": "The target G must be supplied by meta-operations of C. Only K, which contains the parameters known by the user, can be used. This step is called exactly once per user request. If there is no meta-composition that can fulfill the whole target, it is returned incorrectly. The first step of the general composition algorithm is formalized in method 1. First, meta-operations that provide at least part of target G. They serve as entry points to start N network exploration (line 4: Building initial candidate paths). Then, a backward search is performed from each of these starting points as follows. When visiting a meta operation m from a specific path, there are two ways to add path-meta-operations to C. Either an input parameter of the meta-meta-meta-meta-meta-meta-meta."}, {"heading": "3.3. Instantiate Meta-composition", "text": "The second step of the general composition algorithm consists of the instantiation of the meta-composition C selected in the first step, which can be called several times. At each call of the instantiation step, a different composition of the same meta-composition is built up until no more instance can be found. The second step of the general composition algorithm is formalized in procedure 2. The sets of meta-operations covering the target are processed one after the other. These meta-operations are the starting points for similarity network exploration. after this initialization (lines 1 and 2: at the first use), the sets of meta-operations are used to achieve the target. Meta-operations are investigated successively. (line 4), either by instantiating a meta operation or by using another set of input-covering meta-operations."}, {"heading": "3.4 Example", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.4.1 Find a meta-composition", "text": "Faced with a user requirement with knowledge of K = {a}, target G = {x, y, z}, and N, the interaction network of meta-operations in Figure 2, method 1 is used to find a meta-composition C within N.First, m1, m2, and m3 are the only meta-operations to provide at least part of the target. They provide initial nodes to explore N. The path with zero length {m1} is initially ignored because a is already known and m1 is not b. Finally, {m4, m1} is selected for meta-composition because no input parameters of m4 are known. Then, the path {m4, m1} is held for further exploration."}, {"heading": "3.4.2 Refined the meta-composition", "text": "Considering the meta-composition C, in Figure 3 (left), which results from the previous step, will be two types of meta-compositions with the aim {1}, {1}, {1}, {2}, {2}, {2}, {2, \"{2,\" {2, \"{3,\"}, {4, \"{4,\" {4, \"}, {4,\"}, \"{4,\" {4, \"}, {4,\" {4, \"{4,\"}, \"{4,\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" \",\" \",\" \",\" \",\" \",\" \",\", \",\" \",\", \",\", \",\", \",\", \",\", \"\", \",\" \",\", \"\", \",\" \",\" \",\", \"\" \",\", \"\", \"\", \"\", \"\", \"\" \",\", \"\" \"\", \",\" \"\" \",\", \"\" \",\" \",\" \"\", \",\""}, {"heading": "4. Conclusion", "text": "In this paper, we have proposed a two-layer architecture to address the problem of spaciousness and redundancy arising in the synthesis of web service compositions, which is based on network representations of web service space; a concrete layer consists of communities of similar web service operations; it is realized through a similarity network of operations; an abstract layer consists of interacting meta-operations, with each meta-operation being the representative of a community; it is realized through an interaction network of meta-operations; a graph-based search algorithm acts in two phases to explore the network architecture; in the first phase, it starts from the desired goal of exploring the interaction network and retrieving a meta-composition; in the second phase, it starts from the meta-composition found during the first phase, and examines the similarity network in order to replace the meta-based operations with the corresponding search space proposed in the previous one."}, {"heading": "5. References", "text": "[1] G. Vadivelou, E. IIavarasan, S. Prasanna, \"Algorithm for Web Service Compositionusing Multi-Agents,\" International Journal of Computer Applications, Foundation of Computer Science, Vol. 13, No. 8, pp. Web Technology Journal, Simiyal H. Web-45, 2011. [2] W. Liu, Y. Du, B. Q. Guo, Yan. C, Q. Xu, A Fast Algorithm for Web Service CompositionBased on Dynamic Web-Logic, Asian Network for Scientific Information, Vol. 9, pp. International IEP. 1150-1157, 2010. [3] H. Talantikite, D. Aissani, N. Boudjlida, \"Semantic annotations for Web Services Discovery and Composition,\" Computer Standards Interfaces, Elsevier B.V., Vol., Vol. 31, No. 6, pp. 1108-1117, 2009."}], "references": [{"title": "Algorithm for Web Service Composition using Multi-Agents", "author": ["G. Vadivelou", "E. IIavarasan", "S. Prasanna"], "venue": "International Journal of Computer Applications, Foundation of Computer Science, Vol. 13, No. 8, pp. 40-45, 2011.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "A Fast Algorithm for Web Service Composition Based on Dynamic Description Logic", "author": ["W. Liu", "Y.Y. Du", "B.Q. Guo", "Yan. C", "Q. Xu"], "venue": "Information Technology Journal, Asian Network for Scientific Information, Vol. 9, No. 6, pp. 1150-1157, 2010.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2010}, {"title": "Semantic annotations for web services discovery and composition", "author": ["H. Talantikite", "D. Aissani", "N. Boudjlida"], "venue": "Computer Standards Interfaces, Elsevier B.V., Vol. 31, No. 6, pp. 1108-1117, 2009.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2009}, {"title": "Web Services as a Graph and Its Application for Service Discovery", "author": ["J. Liu", "L. Chao"], "venue": "proceedings of International Conference on Grid and Cooperative Computing, IEEE, pp. 293- 300, 2006.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "PSR : Pre-computing Solutions in RDBMS for Fast Web Services Composition Search", "author": ["J. Kwon", "K. Park", "D. Lee", "S. Lee"], "venue": "proceedings of International Conference on Web Services, IEEE, pp. 808-815, 2007.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "A Graph-Based Approach to Web Services Composition", "author": ["S.V. Hashemian", "F. Mavaddat"], "venue": "proceedings of Symposium on Applications and the Internet, IEEE, pp. 183-189, 2005.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2005}, {"title": "Employing Graph Network Analysis for Web Service Composition", "author": ["J. Gekas", "M. Fasli"], "venue": "International Journal of Information Technology and Web Engineering, IGI Global, Vol. 2, No. 4, 2008.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Automatic Web Service Composition with a Heuristic-Based Search Algorithm", "author": ["P. Rodriguez-Mier", "M. Mucientes", "M. Lama"], "venue": "proceedings of International Conference on Web Services, IEEE, pp. 81-88, 2011.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2011}, {"title": "Ontology-driven web services composition platform", "author": ["I. Arpinar", "B. Aleman-Meza", "R. Zhang", "A. Maduko"], "venue": "Inf. Syst. E-Business Management, Vol. 3, No. 2, pp. 175-199, 2005.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "A Dynamic Web Services Composition Algorithm Based on the Combination of Ant Colony Algorithm and Genetic Algorithm", "author": ["Z. Yang", "C. Chang", "Q. Liu", "C. Zhao"], "venue": "Journal of Computational Information Systems, Springer, Vol. 6, No. 8, pp. 2617-2622, 2010.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2010}, {"title": "QoS-Aware Web service composition using genetic algorithms", "author": ["L. Ai"], "venue": "Queensland University of Technology, pp. 250, 2011.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "QoS Based Dynamic Web Services Composition & Execution", "author": ["F.H. Khan", "F.Y. Javed", "S. Bashir", "A. Khan", "M.S. Khiyal"], "venue": "International Journal of Computer Science and Information Security, IJCSIS Publication, Vol. 7, No. 2, 2010.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "A Framework for the Model Driven Development of Secure Web Services Composition", "author": ["M.Q. Saleem", "J.B. Jaafar", "M.F. Hassan"], "venue": "International Journal of Advances in Information Sciences and Service Sciences, AICIT, Vol.4, No 9, pp. 67-78, 2012", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "A Survey on Web Service Composition: from service description, automatic process generation to process evaluation", "author": ["X. Wu", "C. Chen", "H. Huang"], "venue": "International Journal of Digital Content Technology and its Applications, AICIT, Vol. 6, No. 17, pp. 483-495, 2012.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Topological Properties of Web Services Similarity Networks", "author": ["C. Cherifi", "V. Labatut", "J.F. Santucci"], "venue": "Strategic Advantage of Computing Information Systems in Enterprise Management, ATINER, pp. 105-117, 2010.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "Many proposals address Web service composition as a planning problem [1], [2].", "startOffset": 69, "endOffset": 72}, {"referenceID": 1, "context": "Many proposals address Web service composition as a planning problem [1], [2].", "startOffset": 74, "endOffset": 77}, {"referenceID": 2, "context": "In [3], compositions are discovered within a semantic Web service network by a forward chaining algorithm.", "startOffset": 3, "endOffset": 6}, {"referenceID": 3, "context": "In [4],", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "In [5], a semantic Web service network is stored in a relational database.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "In [6], a breadth first search algorithm is used", "startOffset": 3, "endOffset": 6}, {"referenceID": 6, "context": "In [7], the information on link", "startOffset": 3, "endOffset": 6}, {"referenceID": 7, "context": "The authors in [8], use the A* search algorithm to find a minimal composition within a subset of semantic Web services represented as a graph.", "startOffset": 15, "endOffset": 18}, {"referenceID": 8, "context": "The approach in [9] proposed the use of a semantic interaction network enriched with an organization of the Web services in communities.", "startOffset": 16, "endOffset": 19}, {"referenceID": 9, "context": "In [10], the authors propose a dynamic Web service composition algorithm based on the combination of ant colony algorithm and genetic algorithm, to address the efficiency issue in a large solution space.", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "In [11], genetic algorithms allow quality of service-aware Web service composition.", "startOffset": 3, "endOffset": 7}, {"referenceID": 11, "context": "The authors in [12] propose a framework to deal with data distribution and quality of service issues by solving problems of unavailability of updated information and inaccessibility of Web services.", "startOffset": 15, "endOffset": 19}, {"referenceID": 12, "context": "Note that there is a great deal of work addressing the composition issue not only according to the Web services functional requirements, but also to their transactional properties their QoS characteristics or the security problems [13], [14].", "startOffset": 231, "endOffset": 235}, {"referenceID": 13, "context": "Note that there is a great deal of work addressing the composition issue not only according to the Web services functional requirements, but also to their transactional properties their QoS characteristics or the security problems [13], [14].", "startOffset": 237, "endOffset": 241}, {"referenceID": 14, "context": "We consider four similarity levels called Full Similarity, Partial Similarity, Excess Similarity and Relation Similarity [15].", "startOffset": 121, "endOffset": 125}, {"referenceID": 14, "context": "All the similarity networks exhibit a component structure [15].", "startOffset": 58, "endOffset": 62}], "year": 2013, "abstractText": "Web service composition is the process of synthesizing a new composite service using a set of available Web services in order to satisfy a client request that cannot be treated by any available Web services. The Web services space is a dynamic environment characterized by a huge number of elements. Furthermore, many Web services are offering similar functionalities. In this paper we propose a model for Web service composition designed to address the scale effect and the redundancy issue. The Web services space is represented by a two-layered network architecture. A concrete similarity network layer organizes the Web services operations into communities of functionally similar operations. An abstract interaction network layer represents the composition relationships between the sets of communities. Composition synthesis is performed by a two-phased graph search algorithm. First, the interaction network is mined in order to discover abstract solutions to the request goal. Then, the abstract compositions are instantiated with concrete operations selected from the similarity network. This strategy allows an efficient exploration of the Web services space. Furthermore, operations grouped in a community can be easily substituted if necessary during the composition's synthesis's process.", "creator": "Microsoft\u00ae Office Word 2007"}}}