{"id": "1305.0194", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-May-2013", "title": "MATAWS: A Multimodal Approach for Automatic WS Semantic Annotation", "abstract": "Many recent works aim at developing methods and tools for the processing of semantic Web services. In order to be properly tested, these tools must be applied to an appropriate benchmark, taking the form of a collection of semantic WS descriptions. However, all of the existing publicly available collections are limited by their size or their realism (use of randomly generated or resampled descriptions). Larger and realistic syntactic (WSDL) collections exist, but their semantic annotation requires a certain level of automation, due to the number of operations to be processed. In this article, we propose a fully automatic method to semantically annotate such large WS collections. Our approach is multimodal, in the sense it takes advantage of the latent semantics present not only in the parameter names, but also in the type names and structures. Concept-to-word association is performed by using Sigma, a mapping of WordNet to the SUMO ontology. After having described in details our annotation method, we apply it to the larger collection of real-world syntactic WS descriptions we could find, and assess its efficiency.", "histories": [["v1", "Wed, 1 May 2013 15:07:18 GMT  (272kb)", "http://arxiv.org/abs/1305.0194v1", null]], "reviews": [], "SUBJECTS": "cs.SE cs.CL cs.IR", "authors": ["cihan aksoy", "vincent labatut", "chantal cherifi", "jean-fran\\c{c}ois santucci"], "accepted": false, "id": "1305.0194"}, "pdf": {"name": "1305.0194.pdf", "metadata": {"source": "CRF", "title": "MATAWS: A Multimodal Approach for Automatic WS Semantic Annotation", "authors": ["Cihan Aksoy", "Vincent Labatut", "Chantal Cherifi", "Jean-Fran\u00e7ois Santucci"], "emails": ["caksoy@uekae.tubitak.gov.tr"], "sections": [{"heading": null, "text": "In order to be properly tested, these tools must be applied to a suitable benchmark that takes the form of a collection of semantic WS descriptions. However, all existing publicly accessible collections are limited by their size or realism (use of randomly generated or newly sampled descriptions).Larger and realistic syntactic (WSDL) collections exist, but their semantic commenting requires a certain amount of automation due to the number of operations to be processed. In this article, we propose a fully automated method for semantic commenting of such large WS collections. Our approach is multimodal in the sense that it utilizes latent semantics, which is present not only in the parameter names, but also in the type designations and structures. Concept-to-word association occurs by using Sigma, an association of WordNet with SUMO ontology. After we have described our commenting method in detail, we apply it to the WDL-Larger Collection, Wrecyclic-Inscriptions and WDL-Inscriptions."}, {"heading": "1 Introduction", "text": "This year, it has come to the point where there is such a process, in which there is such a process, in which there is such a process."}, {"heading": "2 Solutions to Access an Annotated Collection", "text": "When searching for a collection of semantic WS descriptions, two options can be considered: Either you use a predefined collection or you create your own. In this section, we will first review the most important existing collections and their properties. The creation of a collection can be done either by using a random model to generate artificial descriptions, or by semantic annotations of a collection of syntactic descriptions from the real world. The usual goal when searching for a semantic collection is the most complete WS-related tool on realistic data. In our opinion, the properties of the WS collections are not well known enough to allow the definition of a realistic generative model, which is why we prefer the second solution. Therefore, in the second part of this section, we will also review the most important tools that make it possible to comment on WS descriptions."}, {"heading": "2.1 Collections of Semantic Descriptions", "text": "The most important publicly available collections of semantic WS are those provided by the ASSAM WSDL Annotator Project, SemWebCentral and OPOSSum. Their most important features are gathered in Table 1.The ASSAM WSDL Annotator Project (Automated Semantic Service Annotation with Machine learning). [12] includes two collections of WS descriptions called Full Dataset and Dataset2. Full Dataset is a collection of categorized WSDL files describing 816 WSDL files that contain the real world WS. Dataset2 is a collection of OWLS files that are accessed by annotating a subset of WSDL files using the ASSAM Annotator. Section 2.2). 164 descriptions have been fully labeled, providing ontology references to the WS itself, its operations and its inputs and outputs. SemWebCentral SLS is a community whose purpose is to support the efforts of people to work the semantic web domain."}, {"heading": "2.2 Annotation Tools", "text": "This year it has come to the point that it will be able to erenie.n the aforementioned lcihsrteeSe rf\u00fc eid eerwtlrteeSe"}, {"heading": "3 Proposed Annotation Method", "text": "The lack of an existing solution to meet our needs forced us to develop our own semantic annotation tool for WS descriptions. The main differences to the other annotation tools are the use of multiple sources of information and the automation of the annotation process. In this section, we will first describe the general architecture of our tool, which consists of several independent components, and then focus separately on the interesting components and explain their design and functionality."}, {"heading": "3.1 General Architecture", "text": "MATAWS takes a collection of WSDL files as input and generates a collection of OWL-S files as output. Fig. 1 gives an insight into its modular structure, which includes five different components. Among these components use two external APIs (Associator and Output Component), while the three remaining ones were developed by us in Java. The input and output components are not of great interest in terms of the topic of this article, which is why we describe them briefly here. The other components are described in detail in the following subsections. The Input Component is responsible for extracting all operating parameters defined in the considered collection of WSDL files. We have a parser capable (among other things) to retrieve the parameter names, type names and type structures (in the case of complex types)."}, {"heading": "3.2 Preprocessor", "text": "In fact, most of them will be able to play by the rules they have set themselves, and they will not be able to play by the rules they have set."}, {"heading": "3.3 Associator", "text": "As already mentioned, we use an existing tool called Sigma to assign a concept to a word. It is written in Java and enables the creation, testing, modification and derivation of ontologies [23]. It is equipped with the Suggested Upper Merged Ontology (SUMO), which (contrary to the name suggests) also includes mid-level and domain ontologies [24]. SUMO is free, covers a wide range of fields and has been assigned to the entire WordNet lexicon [25]. It was originally defined using the SUO-KIF language [26] and is currently being converted into OWL [27]. Although its main purpose is to edit ontologies, Sigma also provides programmatic access to this mapping in the form of a method that uses an English word as an input and output of a SUMO concept. Table 4 gives some examples of such associations."}, {"heading": "3.4 Type Explorer", "text": "Although our focus is primarily on parameter names, we describe the previous two components in general terms, as they can be applied to complex types of names. In fact, various difficulties can arise, making it impossible to associate a concept with a parameter name. First, the preprocessor may not be able to process the name of the associate, so it cannot resort to appropriate concepts. Second, the preprocessor could filter all words resulting from the name decomposition, meaning that it cannot contribute a word to the process, which can be the case if a name consists of a single stop word or contains multiple linked entries."}, {"heading": "4 Application to Real-World Descriptions", "text": "To evaluate their performance, we applied MATAWS to a collection of syntactical WS descriptions. We wanted to use a large collection of real descriptions to avoid specific cases and achieve consistent results. In view of these criteria, the best collection we could find is the Full Data Collection from the ASSAM project [12], which was previously mentioned in our review of WS Description Collections (Section 2.1). It includes 7877 operations distributed among 816 real WS descriptions. In this section, we present the results we received on this collection. First, we take a quantitative standpoint and distinguish parameters only in terms of commented or uncommented descriptions. Second, we qualitatively analyze the results and discuss the relevance of the concept associated with the parameters."}, {"heading": "4.1 Quantitative Aspect", "text": "In this section, we consider a parameter to be successfully commented when our tool has been able to associate it with at least one concept. Table 5 shows several values that correspond to the progressive use of the various components described in Section 3. The only transformation is to put parameter names in lowercase letters, which are absolutely necessary to apply Sigma. Under these conditions, MATAWS can suggest a concept for 39.63% of the parameters, which means that almost 40% of the parameter names are single words that can be retrieved directly from WordNet."}, {"heading": "4.2 Qualitative Aspect", "text": "The quantitative analysis reflects the fact that a large proportion of the parameters could be assigned to a concept, and the question now is whether these associations, which were automatically retrieved, are relevant relative to the context. To this end, we isolated all the words that were recognized in the totality of the parameters, thanks to our preprocessor and type explorer. Table 6 shows the first most common words with their associated concept. Overall, most of the annotated words are assigned to relevant concepts, resulting in an approximate success rate of 83%. Words such as computer, month, numeric, password, customer are perfectly recognized, but this is not the case of several widely used words such as name, user, address or value.Irrelevant concepts are due to the fact that some words have multiple meanings and can therefore be assigned to several concepts. Such ambiguity can be directly raised if the word under consideration has a clear meaning in connection with WS."}, {"heading": "5 Conclusion", "text": "In this article, we introduced our tool MATAWS, which implements a new method for semantic annotation of WS descriptions. It focuses on WS parameters, i.e. on data semantics [4], and implements most of the requirements defined by Uren and al. [3] It processes WSDL files and produces OWL-S files (R1 & R4), and it is fully automated (R7). This level of automation is forced by the use of both an ontological mapping of the WordNet lexicon, and a multimodal approach consisting not only of parameter names and structures to identify suitable ontological concepts. In comparison, the annotation tools such as ASSAM [12] and MWordNet lexicon, but also consist of the use of parameters."}], "references": [{"title": "The Semantic Web", "author": ["T. Berners-Lee", "J. Hendler", "O. Lassila"], "venue": "Scientific American", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2001}, {"title": "Semantic Annotations in Web Services", "author": ["M. Nagarajan"], "venue": "Semantic Web Services, Processes and Applications, Vol. 3, 35-61. Springer", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Semantic Annotation for Knowledge Management: Requirements and a Survey of the State of the Art", "author": ["V. Uren", "P. Cimiano", "J. Iria", "S. Handschuh", "M. Vargas-Vera", "E. Motta", "F. Ciravegna"], "venue": "Journal of Web Semantics 4, 14-28", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2006}, {"title": "Semantic Web Process Lifecycle: Role of Semantics in Annotation, Discovery, Composition and Orchestration", "author": ["A.P. Sheth"], "venue": "Workshop on E-Services and the Semantic Web,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "Opossum - an Online Portal to Collect and Share Sws Descriptions", "author": ["U. K\u00fcster", "B. K\u00f6nig-Ries", "A. Krug"], "venue": "International Conference on Semantic Computing, 480-481", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Assam: A Tool for Semi-Automatically Annotating Semantic Web Services", "author": ["A. Hess", "E. Johnston", "N. Kushmerick"], "venue": "International Semantic Web Conference,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2004}, {"title": "Meteor-S Web Service Annotation Framework", "author": ["A. Patil", "S. Oundhakar", "A. Sheth", "K. Verma"], "venue": "International Conference on the World Wide Web", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2004}, {"title": "Efficient Semantic Web Service Discovery in Centralized and P2p Environments", "author": ["D. Skoutas", "D. Sacharidis", "V. Kantere", "T.K. Sellis"], "venue": "ISWC,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2008}, {"title": "Web Services Discovery Based on Latent Semantic Approach", "author": ["J. Ma", "Y. Zhang", "J. He"], "venue": "ICWS,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2008}, {"title": "Radiant: A Tool for Semantic Annotation of Web Services", "author": ["K. Gomadam", "K. Verma", "D. Brewer", "A. Sheth", "J. Miller"], "venue": "International Semantic Web Conference,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2005}, {"title": "Wsmo Studio - a Semantic Web Services Modelling Environment for Wsmo", "author": ["M. Dimitrov", "A. Simov", "V. Momtchev", "M. Konstantinov"], "venue": "European Semantic Web Conference,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2007}, {"title": "Visual Modelling of Owl-S Services", "author": ["J. Scicluna", "C. Abela", "M. Montebello"], "venue": "IADIS International Conference WWW/Internet, Madrid, ES", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2004}, {"title": "Ws-Next, a Web Services Network Extractor Toolkit", "author": ["C. Cherifi", "Y. Rivierre", "Santucci", "J.-F."], "venue": "5th International Conference on Information Technology,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "Towards a Standard Upper Ontology", "author": ["I. Niles", "A. Pease"], "venue": "International Conference on Formal Ontology in Information Systems, Ogunquit, US-ME", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2001}, {"title": "Linking Lexicons and Ontologies: Mapping Wordnet to the Suggested Upper Merged Ontology", "author": ["A. Pease", "I. Niles"], "venue": "IEEE International Conference on Information and Knowledge Engineering, 412-416", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "of the kind of intelligent documents imagined ten years ago [1].", "startOffset": 60, "endOffset": 63}, {"referenceID": 1, "context": ", in order to properly treat documents, annotating systems must follow a generic process [2] and meet seven different requirements [3].", "startOffset": 89, "endOffset": 92}, {"referenceID": 2, "context": ", in order to properly treat documents, annotating systems must follow a generic process [2] and meet seven different requirements [3].", "startOffset": 131, "endOffset": 134}, {"referenceID": 1, "context": "[2].", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "Sheth presents four types of semantics for the complete life cycle of a Web process: data, functional, nonfunctional and execution [4].", "startOffset": 131, "endOffset": 134}, {"referenceID": 4, "context": "a large collection of annotated WS [9].", "startOffset": 35, "endOffset": 38}, {"referenceID": 5, "context": "It consequently requires to perform a particular form of text mining, leading to dedicated tools such as ASSAM [10] or MWSAF [11].", "startOffset": 111, "endOffset": 115}, {"referenceID": 6, "context": "It consequently requires to perform a particular form of text mining, leading to dedicated tools such as ASSAM [10] or MWSAF [11].", "startOffset": 125, "endOffset": 129}, {"referenceID": 7, "context": "These collections have been widely used in semantic WS-related works [15, 16].", "startOffset": 69, "endOffset": 77}, {"referenceID": 8, "context": "These collections have been widely used in semantic WS-related works [15, 16].", "startOffset": 69, "endOffset": 77}, {"referenceID": 2, "context": "[3] for general annotation tools.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "Radiant is an open source tool created at the Georgia University [17].", "startOffset": 65, "endOffset": 69}, {"referenceID": 6, "context": "MWSAF is another open source Java tool created at the Georgia University [11].", "startOffset": 73, "endOffset": 77}, {"referenceID": 10, "context": "An extension allows annotating WS parameters and operations, and outputting the result under the form of SAWSDL files [18].", "startOffset": 118, "endOffset": 122}, {"referenceID": 11, "context": "Another software performing the same task is also called OWL-S Editor, but was developed at Malta University [21].", "startOffset": 109, "endOffset": 113}, {"referenceID": 12, "context": "We designed a parser able (among other things) to retrieve the parameter names, type names and type structures (in the case of complex types) [22].", "startOffset": 142, "endOffset": 146}, {"referenceID": 13, "context": "It is provided with the Suggested Upper Merged Ontology (SUMO), which (unlike its name suggests) contains also mid-level and domain ontologies [24].", "startOffset": 143, "endOffset": 147}, {"referenceID": 14, "context": "SUMO is free, covers a wide range of fields, and it has been mapped to the whole WordNet lexicon [25].", "startOffset": 97, "endOffset": 101}, {"referenceID": 3, "context": "on the Data semantics [4], and implements most of the requirements defined by Uren et al.", "startOffset": 22, "endOffset": 25}, {"referenceID": 2, "context": "[3] and relevant to our context: it processes WSDL files and produces OWL-S files (R1 & R4), and is fully automated (R7).", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "When compared to existing annotation tools such as ASSAM [12] and MWSAF [11], it is important to notice that MATAWS is much less flexible, because it does not include any machine learning abilities.", "startOffset": 72, "endOffset": 76}], "year": 2011, "abstractText": "Many recent works aim at developing methods and tools for the processing of semantic Web services. In order to be properly tested, these tools must be applied to an appropriate benchmark, taking the form of a collection of semantic WS descriptions. However, all of the existing publicly available collections are limited by their size or their realism (use of randomly generated or resampled descriptions). Larger and realistic syntactic (WSDL) collections exist, but their semantic annotation requires a certain level of automation, due to the number of operations to be processed. In this article, we propose a fully automatic method to semantically annotate such large WS collections. Our approach is multimodal, in the sense it takes advantage of the latent semantics present not only in the parameter names, but also in the type names and structures. Concept-to-word association is performed by using Sigma, a mapping of WordNet to the SUMO ontology. After having described in details our annotation method, we apply it to the larger collection of real-world syntactic WS descriptions we could find, and assess its efficiency.", "creator": "Microsoft\u00ae Office Word 2007"}}}