{"id": "1305.3384", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-May-2013", "title": "Transfer Learning for Content-Based Recommender Systems using Tree Matching", "abstract": "In this paper we present a new approach to content-based transfer learning for solving the data sparsity problem in cases when the users' preferences in the target domain are either scarce or unavailable, but the necessary information on the preferences exists in another domain. We show that training a system to use such information across domains can produce better performance. Specifically, we represent users' behavior patterns based on topological graph structures. Each behavior pattern represents the behavior of a set of users, when the users' behavior is defined as the items they rated and the items' rating values. In the next step we find a correlation between behavior patterns in the source domain and behavior patterns in the target domain. This mapping is considered a bridge between the two domains. Based on the correlation and content-attributes of the items, we train a machine learning model to predict users' ratings in the target domain. When we compare our approach to the popularity approach and KNN-cross-domain on a real world dataset, the results show that on an average of 83$%$ of the cases our approach outperforms both methods.", "histories": [["v1", "Wed, 15 May 2013 08:00:54 GMT  (46kb,D)", "http://arxiv.org/abs/1305.3384v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.IR", "authors": ["naseem biadsy", "lior rokach", "armin shmilovici"], "accepted": false, "id": "1305.3384"}, "pdf": {"name": "1305.3384.pdf", "metadata": {"source": "CRF", "title": "Transfer Learning for Content-Based Recommender Systems using Tree Matching", "authors": ["Naseem Biadsy", "Lior Rokach", "Armin Shmilovici"], "emails": ["naseem@cs.bgu.ac.il", "liorrk@bgu.ac.il", "armin@bgu.ac.il"], "sections": [{"heading": null, "text": "Categories and Theme Descriptions H.4 [Applications of Information Systems]: Miscellaneous General Terms and Conditions Recommendations, ExperimentationKeywords Recommendation Systems, Transfer Learning, Content-based, Behavior Patterns"}, {"heading": "1. INTRODUCTION", "text": "There are two approaches to cross-domain: 1) those that use an intermediary to construct and initialize an empty user model, or that enrich the existing user model by using provided data or a partial user model in another domain; 2) those that do not use an intermediary. In this paper, we propose a substantive cross-domain RS that suggests elements for a new user in a target domain that are evaluated only in the source domain. We assume that the target domain has very high economy; and 3) the new user has already evaluated some elements in the source domain, based on these assumptions that traditional recommendation algorithms do not work well in the target domain."}, {"heading": "2. THE RECOMMENDATION FRAMEWORK", "text": "Our framework treats the problem mentioned above in three phases: the first is described in (2.1) and aims to pre-process the data of users in the source and target domains. Pre-processing consists of three steps: 1) build behavior trees for each domain; 2) graph matching; 3) build training samples; the second phase (2.2) is to train a model on the training set; and the third phase, described in (2.3), is to recommend articles to a new user based on their behavior in the source domain."}, {"heading": "2.1 Preparing Training Data", "text": "In fact, the fact is that most of them are able to put themselves at the top of society in the way that they have put themselves at the top of the society in which they find themselves."}, {"heading": "2.2 Model Training", "text": "Here we build a model of a multi-class classifier based on the training samples, combining characteristics of elements in the source, ratings in the source, characteristics of elements in the target and ratings in the target domain. Since our goal is to predict the rating of an element in the target domain by the user, the classifier class is the last attribute in the feature vector in which all other attributes in the vector represent the characteristics. We expect this model to predict the rating of an element t in the target domain for a new user u who has rated only elements in the source domain. The number of classes corresponds to the number of possible ratings in the target domain."}, {"heading": "2.3 Recommendation", "text": "The recommendation task is based on the model we described in the previous task (2,2). When the system is asked to recommend the uppermost N elements in the target domain to a new user u, the system classifies each element tr in the target domain on the basis of elements that the user has rated in the source domain. \u2022 The number of columns in the matrix corresponds to n + m + 2, where n is the number of attributes of the element in the source, m is the number of attributes of the element in the target domain and + 2 is the number of elements in the target domain (rating in the target domain). \u2022 The value in the row i and column j is equal to n + 2, where n is the number of attributes of the element in the source, m is the number of attributes of the element in the target domain and + 2 is the number of elements in the target domain (rating in the target domain). \u2022 The value in the row i and column j is equal to n + 2, where n is the number of attributes of the element in the source, m is the number of attributes of the element in the target domain and + 2 for the rating in the target domain."}, {"heading": "3. EXPERIMENT", "text": "In this chapter, we examine whether additional knowledge from the source domain and the content of items can improve recommendation in the target domain. We compare our approach to popularity, which is a single domain approach and is usually used for recommendations to new users, and to KNN's cross-domain approach, which uses both domains but does not dose the content data."}, {"heading": "3.1 Dataset", "text": "We used the Loads dataset in our experiments. Loads data is a real content dataset that includes various areas such as videos, music, games (shared users among the domains). We chose Music Loads as the source domain and Gameloads as the target domain and extracted 600 common users from both domains, 817 items from the music domain with 18,552 ratings and 1264 items from the games domain with 17,640 ratings. This dataset is event-based, so we manipulated it and converted the events into ratings by weighting the events by their type. For example, the event user buys an article that was converted to the maximum value. For this experiment, we used a binary rating."}, {"heading": "3.2 Evaluation and Metrics", "text": "Our goal is to recommend a set of n items that might attract the interest of the new user in the target domain. This type of recommendation refers to the recommendation of some good items [2] or Top-N items. In this case, the correct method to evaluate the recommender is to measure accuracy at N (or Top-N precision), i.e. the number of interesting items from the recommended items [2]. Since we have content data, we consider a recommended item to be really positive if it resembles 80% of the positively rated items."}, {"heading": "3.3 Baseline", "text": "We compare our BGM (Behavior Graph Matching) method with two baseline recommendations: KNN-cross-domain: This recommendation is a cross-domain recommendation based on collaborative filtering using Pearson's correlation coefficient method. The basic idea behind the method is to find the K-next neighbors of the active user in the source domain, who also rate objects in the target domain, and to consider them as the K-next neighbors of the active user who is also in the target domain, and then predict the ratings of the user in the target domain based on the ratings in the target domain. Popularity: This is a naive method that recommends the popular objects to the new users. This method is easiest to implement and sometimes outperforms other algorithms [3], especially in a domain where most users have similar preferences."}, {"heading": "3.4 BGM versus Popularity", "text": "We evaluated the two methods by 10-fold cross-validation based on the Loads dataset, with each fold containing 60 users for the test and 540 users for the turn. The test set was considered as a set of new users in the target domain who only have ratings in the source domain. Behavioral patterns were based on all users in the source domain, and users belonged to the training set in the target domain. For each user in the test set, we asked the recommender to recommend the top N items if N = 5, 10, 15, 20, 50 and 100, and for each set of recommended items we measured the top N precision per user. The popularity algorithm used the training set in the target domain to find the popular item recommended for each test user, then we calculated the top N precision for each N, and for each N we found the average of the top precision in the target domain to find the popular item recommended for each test user, then we calculated the top N precision for each N, and for each N we found the top precision showing the top value in the target domain to find the popular item recommended for each test user, then we calculated the top N precision for each set of recommended items."}, {"heading": "3.5 BGM Vs. KNN cross-domain", "text": "The experiment was conducted to compare the performance of our approach with the collaborative filtering crossdomain approach, which also uses the knowledge in the source domain to return recommendations to the target domain. The main objective was to determine whether the BGM method makes maximum use of the content data of the items, and to verify whether the proposed behavior patterns work well for displaying user behavior and knowledge transfer. As in the first experiment, this experiment was also performed with a 10-fold cross-validation on load datasets. We can compare the results in Figure (3), where the third column in each group represents the value of the top-N precision of the KNN cross domain. Note: BGM outperforms the KNNcross domain in 83% of cases."}, {"heading": "3.6 Statistical Analysis", "text": "We performed paired t-tests with the same results we obtained by performing 10-fold cross-validation with BGM, Popularity, and KNNcross-domain on Loads, and we verified whether they were statistically significant. Thus, each user was considered a participant, and each of the referrers was considered a different test methods.We obtained a table of 600 users (rows), and for each user we obtained the Top-N precision value if TopN = 5, 10, 15, and 20 with each of the methods (12 columns per user).Then the t-test was performed for all two relevant columns (with the same N).All results are statistically significant, meaning that our methodological performance is significantly better than the other two methods if the number of recommended items is 5, 10, 15, and 20, and the sample size is 600 participants."}, {"heading": "4. CONCLUSIONS", "text": "In this paper, we presented and evaluated a novel method of transfer learning for content-based referrers, using a new topological structure we called behavioral graphs, the core idea of which is its ability to present rich data on user behavior and the relationship between elements in a structure. By using tree comparison methods, we discovered a correlation between elements in the source and elements in the target. We compared our method with the popularity approach generally used for recommendations to new users, and with the KNN cross-domain method. Our comparison was based on a real data set called the Loads dataset. We evaluated the Top-N precision measurement size by 10-fold cross-validation. Results show that our method (referred to as BGM) outperforms the popularity and KNN cross-domain methods in most cases. Our conclusion: It is preferable to use the data in the quell domain and the content management of this content."}, {"heading": "5. REFERENCES", "text": "[1] S. Berkovsky, T. Kuflik, and F. Ricci. Cross-domainmediation in collaborative filtering. User Modeling 2007, pp. 355-359, 2007. [2] J. L. Herlocker, J. A. Konstan, L. G. Terveen, John, and T. Riedl. Evaluating Collaborative Filtering Recommender Systems. ACM Transactions on Information Systems, 22: 5-53, 2004. [3] A. I. Schein, A. Popescul, L. H. Ungar, and D. M. Pennock. CROC: A New Evaluation Criterion for Recommender Systems."}], "references": [{"title": "Cross-domain mediation in collaborative filtering", "author": ["S. Berkovsky", "T. Kuflik", "F. Ricci"], "venue": "User Modeling", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Evaluating collaborative filtering recommender systems", "author": ["J.L. Herlocker", "J.A. Konstan", "L.G. Terveen", "John", "T. Riedl"], "venue": "ACM Transactions on Information Systems,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2004}], "referenceMentions": [{"referenceID": 0, "context": "Cross domain recommenders [1] aim to improve recommendation in one domain (hereafter: the target) based on knowledge in another domain (hereafter: the source).", "startOffset": 26, "endOffset": 29}, {"referenceID": 0, "context": "Table 1: Rating matrix, possible ratings [1, 2, 3] (k=3).", "startOffset": 41, "endOffset": 50}, {"referenceID": 1, "context": "Table 1: Rating matrix, possible ratings [1, 2, 3] (k=3).", "startOffset": 41, "endOffset": 50}, {"referenceID": 1, "context": "This kind of recommendation refers to recommending some good items [2] or top-N items.", "startOffset": 67, "endOffset": 70}, {"referenceID": 1, "context": "The correct method of evaluating the recommender in this case is by measuring the precision at N (or Top-N precision) which is the number of interesting items from the recommended items [2].", "startOffset": 186, "endOffset": 189}], "year": 2013, "abstractText": "In this paper we present a new approach to content-based transfer learning for solving the data sparsity problem in cases when the users\u2019 preferences in the target domain are either scarce or unavailable, but the necessary information on the preferences exists in another domain. We show that training a system to use such information across domains can produce better performance. Specifically, we represent users\u2019 behavior patterns based on topological graph structures. Each behavior pattern represents the behavior of a set of users, when the users\u2019 behavior is defined as the items they rated and the items\u2019 rating values. In the next step we find a correlation between behavior patterns in the source domain and behavior patterns in the target domain. This mapping is considered a bridge between the two domains. Based on the correlation and content-attributes of the items, we train a machine learning model to predict users\u2019 ratings in the target domain. When we compare our approach to the popularity approach and KNN-cross-domain on a real world dataset, the results show that on an average of 83% of the cases our approach outperforms both methods.", "creator": "LaTeX with hyperref package"}}}