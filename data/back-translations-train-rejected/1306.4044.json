{"id": "1306.4044", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2013", "title": "Attack Planning in the Real World", "abstract": "Assessing network security is a complex and difficult task. Attack graphs have been proposed as a tool to help network administrators understand the potential weaknesses of their network. However, a problem has not yet been addressed by previous work on this subject; namely, how to actually execute and validate the attack paths resulting from the analysis of the attack graph. In this paper we present a complete PDDL representation of an attack model, and an implementation that integrates a planner into a penetration testing tool. This allows to automatically generate attack paths for penetration testing scenarios, and to validate these attacks by executing the corresponding actions -including exploits- against the real target network. We present an algorithm for transforming the information present in the penetration testing tool to the planning domain, and show how the scalability issues of attack graphs can be solved using current planners. We include an analysis of the performance of our solution, showing how our model scales to medium-sized networks and the number of actions available in current penetration testing tools.", "histories": [["v1", "Tue, 18 Jun 2013 00:06:52 GMT  (131kb,D)", "https://arxiv.org/abs/1306.4044v1", "SecArt'2010 at AAAI 2010, Atlanta, USA. July 12, 2010"], ["v2", "Wed, 19 Jun 2013 22:43:15 GMT  (131kb,D)", "http://arxiv.org/abs/1306.4044v2", "SecArt'2010 at AAAI 2010, Atlanta, USA. July 12, 2010"]], "COMMENTS": "SecArt'2010 at AAAI 2010, Atlanta, USA. July 12, 2010", "reviews": [], "SUBJECTS": "cs.CR cs.AI", "authors": ["jorge lucangeli obes", "carlos sarraute", "gerardo richarte core security technologies", "itba )"], "accepted": false, "id": "1306.4044"}, "pdf": {"name": "1306.4044.pdf", "metadata": {"source": "CRF", "title": "Attack Planning in the Real World", "authors": ["Jorge Lucangeli Obes", "Carlos Sarraute", "Gerardo Richarte"], "emails": ["jlucangelio@coresecurity.com", "gera}@coresecurity.com"], "sections": [{"heading": "1 Introduction", "text": "The last ten years have been marked by the development of a new type of security tool: these tools facilitate the work of network testers and make the assessment of network security tangible for non-experts."}, {"heading": "2 Architecture of our Solution", "text": "In this section we describe the components of our solution and how they fit together to automate an attack. Figure 1 shows the relationship between these different components. The penetration test system is a tool that allows the user / attacker to execute exploits and other pre / post exploitation modules against the target network.Our implementation is based on Core Impact2. The planner is a tool that uses as input the description of a domain and a scenario in PDDL3. The domain contains the definition of availability2As mentioned in the previous paragraph, Metasploit is an opensource alternative.3See (Fox and Long 2003) for a description of the PDDL planning language.Actions in the model, and the scenario contains the definition of the objects (networks, hosts and their properties) and the target that needs to be solved. The attack workspace contains the information about the current attack or penetration test. Specifically, the discovered networks and hosts, information about the operating systems, the ports we need, and the features of that are available in this version and the P6."}, {"heading": "Transform algorithm", "text": "The transformation algorithm generates the PDDL representation of the problem of attack planning, including the initial conditions, the operators (PDDL actions) and the target. From the pentesting framework, we extract the description of the operators, in particular the requirements and results of the exploits that will make up most of the available actions in the PDDL representation, which is encoded in the domain.pddl file, along with the predicates and types (which depend only on the details of our model).From the attack workstation, we extract the information that represents the initial conditions for the planner: networks, machines, operating systems, ports and ongoing services. These are encoded in the problem.pddl file, along with the target of the attack, which is usually the compromise of a particular machine.A common feature of pentesting frameworks is that they provide an incomplete overview of the attacked network. The pentester must derive the structure of the network using the information that each machine sees from the compromised one."}, {"heading": "Planner", "text": "The advantage of using the PDDL language is that we can experiment with different planners and determine which model best fits our particular problem. We have evaluated our model using both SGPlan (Chen, Wah and Hsu 2006) and Metric-FF (Hoffmann 2002). The planner is executed within the Pentesting framework, as a plug-in module of the framework we call Plan-nerRunner. The result of the planner is a plan, a sequence of actions that lead to the accomplishment of the goal if all measures are successful. We make this distinction because even with proven exploit code not all started exploits are successful. The plan is given as feedback to the Pentesting framework and executed against the actual target network."}, {"heading": "3 The PDDL Representation in Detail", "text": "The PDDL description language serves as a bridge between the pentesting tool and the planner. Because exploits impose stringent platform and connectivity requirements, failure to accurately express these requirements in the PDDL model would result in plans that cannot be executed against real networks. This forces our PDDL representation of the attack planning problem to be fairly verbose. In addition, we will use the optimization capabilities of planners who understand numerical effects4 and have the PDDL actions that affect various metrics commonly associated with penetration testing, such as runtime, probability of success, or stealth. We will focus on the description of the Domain.pddl file that contains the PDDL representation of the attack model. We will not go into the details of the problem. pddl file, as it consists of a list of networks and machines described in this section."}, {"heading": "Types", "text": "Table 1 shows a list of the types we use. Half of the object types are dedicated to the detailed description of the host operating systems, since the successful execution of an exploit depends on the specifics of the OS.4Numerical effects allow actions in the PDDL representation to increase the value of various metrics defined in the PDDL scenario. Afterwards, the planner can be told to find a plan that minimizes a linear function of these metrics."}, {"heading": "Predicates", "text": "Since exploits also do not have trivial connectivity requirements, we have opted for a detailed representation of network connectivity in PDDL. We need to be able to express how hosts are connected to networks, and the fact that exploits require both IP and TCP or UDP connectivity between the source and the destination host, usually on a specific TCP or UDP port. These predicates express the different forms of connectivity: (connected _ with _ network? s - host? n - network) (IP _ connectivity? s - host? t - host) (TCP _ connectivity? s - host? t - host? p - port) (TCP _ listen _ port? h - host? p - port) (UDP _ listen _ h - host? h - host? p - port? p - host? t - host) (TOS _ s - OS? p? h - host? p? h - h - (TOS _ OS _ s -? p? h) (h? p? h h) (h) (h? p? p? h) (h) (h)"}, {"heading": "Actions", "text": "We need some \"model-related\" actions that make the above predicates true in the right cases. (: action IP _ connect: parameters (? s - host? t - host): precondition (and (compromised? s) (exists (? n - network) (and (connected _ to _ network? s? n) (connected _ to _ network? t))): effect (IP _ connectivity? s? t? t)) (: action TCP _ connect? s: parameters (? s - host? p - port): precondition (and (compromised? s) (IP _ connectivity? s? s s s? t) (TCP _ listen _ ports _ t? t? t? p)): effect (TCP _ connectivity _ connectivity _ connectivity? s? s? s? s? t) s? t effect: (? host? t - host? s - host? s - host? t - port): precondition (and (compiled? s) its: precondition (IP _ s? s? s? t? s exploit? t). \""}, {"heading": "An attack plan", "text": "The objective of the scenario is to compromise host 10.0.5.12 in the target network. This network is similar to the test network that we will describe in detail in Section 4. The plan requires four pivoting steps and performs a total of five different exploits, although due to space constraints we only show the first 6 and last ones. The exploits shown are real _ exploits that are currently in the pentesting _ framework.5Depending on the exploit used, the agent _ could _ _ have _ regular _ user _ privileges or _ superuser _ privileges _.6The localagent _ object _ represents the pentesting _ framework _ running in the user _ machine 10.10 _.10 _.10 _.10 _.10 _.10 _.10 _.10 _.Mark 10.10.10.Mark 10.10.10.Mark 10.10.010.010.Mark 10.Mark 10.10.Mark 10.10.Localhost1 _ 03 1.10.003.Mark 10.10.010.010.Mark 10.Mark 10.10.Mark 10.10.Mark 10.10.10.Mark 10.10.10.Mark 10.10.10.10.Mark 10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.Localhost1.10.10.10.10.10.Mark 10.10.10.10.10.Mark 10.10.10.10.10.Mark 10.10.10.Mark 10.10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.Mark 10.10.10.Mark 10.10.10.10.Mark 10.10.10.10.10.10.Mark 10.10.10.10.10.Mark 10.Mark 10.10.10.Mark 10.10.10.Mark 10.10.10.10.10.10.10.Mark 10.10.10.Mark 10.10.10.Mark 10.10.10.10.10"}, {"heading": "4 Performance and Scalability Evaluation", "text": "This model, and its representation in the PDDL, are intended to be used to plan attacks on real networks, and execute them with a pentesting framework. To ensure that our proposed solution scales up to the domains and scenarios we need to address in the real world, we have conducted extensive performance and scalability tests - to see how far we can take the attack model and the PDDL representation with current planners. We focused on our performance assessment on four metrics: \u2022 Number of machines in the attacked network \u2022 Number of explosions available in the pentesting suite \u2022 Number of individual predicates that need to be met in order to achieve the goal. The rationality behind these metrics is that we can scale our solution sensibly in relation to all of them."}, {"heading": "Generating the test scenarios", "text": "We tested both real and simulated networks and generated the test scenarios using the same pentesting framework that we would later use to attack them. For the large-scale tests, we used a network simulator (Futoransky et al. 2009).This simulator allows us to build large network11, but still view each machine independently and, for example, execute different system calls in each of them. The simulator integrates tightly into the pentesting framework, to the point where the framework disregards the fact that the attacked network is simulating and not real. This allowed us to use the pentesting tool to perform all the steps of the test, including the information gathering during the attack. Once the information gathering was complete, we converted the attack workspace into PDDL by generating the tools.We generated two types of networks for evaluating the performance of computers and computers to create all network scalability based on the number of networkers connected to one network and the number of networkers."}, {"heading": "Results", "text": "As expected, the two planners produced the same plans in all cases where the objectives were set and the same measures could be carried out in different areas, given that SGPlan uses Metric-FF as the basis for the planning. We believe that the performance and scalability of the individual measures has a satisfactory outcome."}, {"heading": "5 Related work", "text": "The work on attack models applied to penetration testing originated in the ability to programmatically control pentesting tools such as Metasploit or Core Im Pact. This model led to the use of attack graphs. Previous work on attack graphs such as (Phillips and Swiler 1998; Ritchey and Ammann 2000; Sheyner et al. 2002) was based on the complete enumeration of attack states, which increases exponentially with the number of actions and machines. As we mentioned in Section 1 of the survey by (Lippmann and Ingols 2005), the greatest limitations of past studies on attack graphs are their lack of scalability for medium-sized networks. A noteworthy exception is the Topological Vulnerability Analysis (TVA) project described in George Mason University (Jajodia, Noel, and OBerry 2005; Noel and Jajodia 2005; Vannity al. 2009) and other papers designed so that they are redistributed between our main networks."}, {"heading": "6 Summary and Future Work", "text": "(Futoransky et al. 2003) proposed a model of attacks on computer networks that should be realistic from an attacker's point of view. We have shown in this paper that this model scales up to medium-sized networks: It can be used to automate attacks (and penetration tests) against networks with hundreds of machines. The solution presented shows that it is not necessary to create the full attack graph (one of the biggest limitations of previous attack graph studies). Instead, we rely on planners like Metric-FF and SGPlan to selectively explore the state space to find attack pathways. We have successfully integrated these planners with a pentesting framework that enabled us to execute and validate the resulting plans against a test set of scenarios. We presented the details of how to transform the information contained in the pentesting tool into the planning tool in order to find the planning hypothesis that remains an important issue to address as the future work on this goal."}], "references": [{"title": "Scalable, graph-based network vulnerability analysis", "author": ["P. Ammann", "D. Wijesekera", "S. Kaushik"], "venue": "Proceedings of the 9th ACM Conference on Computer and Communications Security, 217\u2013224. ACM New York, NY, USA.", "citeRegEx": "Ammann et al\\.,? 2002", "shortCiteRegEx": "Ammann et al\\.", "year": 2002}, {"title": "Why attacking systems is a good idea", "author": ["I. Arce", "G. McGraw"], "venue": "IEEE Computer Society - Security & Privacy Magazine 2(4).", "citeRegEx": "Arce and McGraw,? 2004", "shortCiteRegEx": "Arce and McGraw", "year": 2004}, {"title": "State of the art security from an attacker\u2019s viewpoint", "author": ["I. Arce", "G. Richarte"], "venue": "PacSec Conference, Tokyo, Japan.", "citeRegEx": "Arce and Richarte,? 2003", "shortCiteRegEx": "Arce and Richarte", "year": 2003}, {"title": "Fast planning through planning graph analysis", "author": ["A.L. Blum", "M.L. Furst"], "venue": "Artificial Intelligence 90(1-2):281 \u2013 300.", "citeRegEx": "Blum and Furst,? 1997", "shortCiteRegEx": "Blum and Furst", "year": 1997}, {"title": "Security Power Tools", "author": ["B. Burns", "D. Killion", "N. Beauchesne", "E. Moret", "J. Sobrier", "M. Lynn", "E. Markham", "C. Iezzoni", "P. Biondi", "J.S. Granick", "S. Manzuik", "P. Guersch"], "venue": "O\u2019Reilly Media.", "citeRegEx": "Burns et al\\.,? 2007", "shortCiteRegEx": "Burns et al\\.", "year": 2007}, {"title": "Temporal planning using subgoal partitioning and resolution in SGPlan", "author": ["Y. Chen", "B.W. Wah", "C. Hsu"], "venue": "J. of Artificial Intelligence Research 26:369.", "citeRegEx": "Chen et al\\.,? 2006", "shortCiteRegEx": "Chen et al\\.", "year": 2006}, {"title": "PDDL2", "author": ["M. Fox", "D. Long"], "venue": "1: An extension to PDDL for expressing temporal planning domains. Journal of Artificial Intelligence Research 20(2003):61\u2013124.", "citeRegEx": "Fox and Long,? 2003", "shortCiteRegEx": "Fox and Long", "year": 2003}, {"title": "Building computer network attacks", "author": ["A. Futoransky", "L. Notarfrancesco", "G. Richarte", "C. Sarraute"], "venue": "Technical report, CoreLabs.", "citeRegEx": "Futoransky et al\\.,? 2003", "shortCiteRegEx": "Futoransky et al\\.", "year": 2003}, {"title": "Simulating cyber-attacks for fun and profit", "author": ["A. Futoransky", "F. Miranda", "J. Orlicki", "C. Sarraute"], "venue": "2nd Internation Conference on Simulation Tools and Techniques (SIMUTools \u201909).", "citeRegEx": "Futoransky et al\\.,? 2009", "shortCiteRegEx": "Futoransky et al\\.", "year": 2009}, {"title": "An intelligent technique for generating minimal attack graph", "author": ["N. Ghosh", "S.K. Ghosh"], "venue": "First Workshop on Intelligent Security (Security and Artificial Intelligence) (SecArt \u201909).", "citeRegEx": "Ghosh and Ghosh,? 2009", "shortCiteRegEx": "Ghosh and Ghosh", "year": 2009}, {"title": "FF: The fast-forward planning system", "author": ["J. Hoffmann"], "venue": "AI magazine 22(3):57.", "citeRegEx": "Hoffmann,? 2001", "shortCiteRegEx": "Hoffmann", "year": 2001}, {"title": "Extending FF to numerical state variables", "author": ["J. Hoffmann"], "venue": "Proceedings of the 15th European Conference on Artificial Intelligence (ECAI-02), 571\u2013575.", "citeRegEx": "Hoffmann,? 2002", "shortCiteRegEx": "Hoffmann", "year": 2002}, {"title": "Topological analysis of network attack vulnerability", "author": ["S. Jajodia", "S. Noel", "B. OBerry"], "venue": "Managing Cyber Threats: Issues, Approaches and Challenges 248\u2013266.", "citeRegEx": "Jajodia et al\\.,? 2005", "shortCiteRegEx": "Jajodia et al\\.", "year": 2005}, {"title": "An annotated review of past papers on attack graphs", "author": ["R. Lippmann", "K. Ingols"], "venue": "Technical report, MIT Lincoln Laboratory.", "citeRegEx": "Lippmann and Ingols,? 2005", "shortCiteRegEx": "Lippmann and Ingols", "year": 2005}, {"title": "Understanding complex network attack graphs through clustered adjacency matrices", "author": ["S. Noel", "S. Jajodia"], "venue": "Proceedings of the 21st Annual Computer Security Applications Conference, 160\u2013169.", "citeRegEx": "Noel and Jajodia,? 2005", "shortCiteRegEx": "Noel and Jajodia", "year": 2005}, {"title": "Advances in Topological Vulnerability Analysis", "author": ["S. Noel", "M. Elder", "S. Jajodia", "P. Kalapa", "S. OHare", "K. Prole"], "venue": "Proceedings of the 2009 Cybersecurity Applications & Technology Conference for Homeland Security, 124\u2013129. IEEE Computer Society.", "citeRegEx": "Noel et al\\.,? 2009", "shortCiteRegEx": "Noel et al\\.", "year": 2009}, {"title": "A graph-based system for network-vulnerability analysis", "author": ["C.A. Phillips", "L.P. Swiler"], "venue": "Workshop on New Security Paradigms, 71\u201379.", "citeRegEx": "Phillips and Swiler,? 1998", "shortCiteRegEx": "Phillips and Swiler", "year": 1998}, {"title": "Modern intrusion practices", "author": ["G. Richarte"], "venue": "Black Hat Briefings.", "citeRegEx": "Richarte,? 2003", "shortCiteRegEx": "Richarte", "year": 2003}, {"title": "Using model checking to analyze network vulnerabilities", "author": ["R. Ritchey", "P. Ammann"], "venue": "IEEE Symposium on Security and Privacy, 156\u2013165. IEEE Computer Society.", "citeRegEx": "Ritchey and Ammann,? 2000", "shortCiteRegEx": "Ritchey and Ammann", "year": 2000}, {"title": "Advances in automated attack planning", "author": ["C. Sarraute", "A. Weil"], "venue": "PacSec Conference, Tokyo, Japan.", "citeRegEx": "Sarraute and Weil,? 2008", "shortCiteRegEx": "Sarraute and Weil", "year": 2008}, {"title": "New algorithms for attack planning", "author": ["C. Sarraute"], "venue": "FRHACK Conference, Besan\u00e7on, France.", "citeRegEx": "Sarraute,? 2009", "shortCiteRegEx": "Sarraute", "year": 2009}, {"title": "Automated generation and analysis of attack graphs", "author": ["O. Sheyner", "J. Haines", "S. Jha", "R. Lippmann", "J. Wing"], "venue": "IEEE Symposium on Security and Privacy, 273\u2013 284. IEEE Computer Society.", "citeRegEx": "Sheyner et al\\.,? 2002", "shortCiteRegEx": "Sheyner et al\\.", "year": 2002}], "referenceMentions": [{"referenceID": 4, "context": "The main tools available are the open source project Metasploit, and the commercial products Immunity Canvas and Core Impact (Burns et al. 2007).", "startOffset": 125, "endOffset": 144}, {"referenceID": 1, "context": "The main difference between these tools and network security scanners such as Nessus or Retina is that pentesting frameworks have the ability to launch real exploits for vulnerabilities, helping to expose risk by conducting an attack in the same way a real external attacker would (Arce and McGraw 2004).", "startOffset": 281, "endOffset": 303}, {"referenceID": 7, "context": "Our work on the attack planning problem applied to pentesting began in 2003 with the construction of a conceptual model of an attack, distinguishing assets, actions and goals (Futoransky et al. 2003; Richarte 2003; Arce and Richarte 2003).", "startOffset": 175, "endOffset": 238}, {"referenceID": 17, "context": "Our work on the attack planning problem applied to pentesting began in 2003 with the construction of a conceptual model of an attack, distinguishing assets, actions and goals (Futoransky et al. 2003; Richarte 2003; Arce and Richarte 2003).", "startOffset": 175, "endOffset": 238}, {"referenceID": 2, "context": "Our work on the attack planning problem applied to pentesting began in 2003 with the construction of a conceptual model of an attack, distinguishing assets, actions and goals (Futoransky et al. 2003; Richarte 2003; Arce and Richarte 2003).", "startOffset": 175, "endOffset": 238}, {"referenceID": 16, "context": "This graph is related to the attack graphs1 studied in (Phillips and Swiler 1998; Jajodia, Noel, and OBerry 2005; Noel et al. 2009) and many", "startOffset": 55, "endOffset": 131}, {"referenceID": 15, "context": "This graph is related to the attack graphs1 studied in (Phillips and Swiler 1998; Jajodia, Noel, and OBerry 2005; Noel et al. 2009) and many", "startOffset": 55, "endOffset": 131}, {"referenceID": 13, "context": "In (Lippmann and Ingols 2005) the authors reviewed past papers on attack graphs, and observed that the \u201cfirst major limitation of these studies is that most attack graph algorithms have only been able to generate attack graphs on small networks with fewer than 20 hosts\u201d.", "startOffset": 3, "endOffset": 29}, {"referenceID": 19, "context": "To deal with the attack planning problem, a proposed approach (Sarraute and Weil 2008; Sarraute 2009) is to translate the model into a PDDL representation and use classical planning algorithms to find attack paths.", "startOffset": 62, "endOffset": 101}, {"referenceID": 20, "context": "To deal with the attack planning problem, a proposed approach (Sarraute and Weil 2008; Sarraute 2009) is to translate the model into a PDDL representation and use classical planning algorithms to find attack paths.", "startOffset": 62, "endOffset": 101}, {"referenceID": 3, "context": "Planning algorithms manage to find paths in the attack graph without constructing it completely, thus helping to avoid the combinatorial explosion (Blum and Furst 1997).", "startOffset": 147, "endOffset": 168}, {"referenceID": 9, "context": "A similar approach was presented at SecArt\u201909 (Ghosh and Ghosh 2009), but the authors\u2019 model is less expressive than the one used in this work, as their objective was to use the attack paths to build a minimal attack graph, and not to carry out these attacks against real networks.", "startOffset": 46, "endOffset": 68}, {"referenceID": 6, "context": "Refer to (Fox and Long 2003) for a description of the PDDL planning language.", "startOffset": 9, "endOffset": 28}, {"referenceID": 11, "context": "We have evaluated our model using both SGPlan (Chen, Wah, and Hsu 2006) and Metric-FF (Hoffmann 2002).", "startOffset": 86, "endOffset": 101}, {"referenceID": 11, "context": "We decided to use the planners Metric-FF8 (Hoffmann 2002) and SGPlan9 (Chen, Wah, and Hsu 2006) since we consider them to be representative of the state of the art in classical planners.", "startOffset": 42, "endOffset": 57}, {"referenceID": 9, "context": "It was successfully used in (Ghosh and Ghosh 2009).", "startOffset": 28, "endOffset": 50}, {"referenceID": 8, "context": "For the large-scale testing, we made use of a network simulator (Futoransky et al. 2009).", "startOffset": 64, "endOffset": 88}, {"referenceID": 16, "context": "Earlier work on attack graphs such as (Phillips and Swiler 1998; Ritchey and Ammann 2000; Sheyner et al. 2002) were based on the complete enumeration of attack states, which grows exponentially with the number of actions and machines.", "startOffset": 38, "endOffset": 110}, {"referenceID": 18, "context": "Earlier work on attack graphs such as (Phillips and Swiler 1998; Ritchey and Ammann 2000; Sheyner et al. 2002) were based on the complete enumeration of attack states, which grows exponentially with the number of actions and machines.", "startOffset": 38, "endOffset": 110}, {"referenceID": 21, "context": "Earlier work on attack graphs such as (Phillips and Swiler 1998; Ritchey and Ammann 2000; Sheyner et al. 2002) were based on the complete enumeration of attack states, which grows exponentially with the number of actions and machines.", "startOffset": 38, "endOffset": 110}, {"referenceID": 13, "context": "As we mentioned in Section 1 the survey of (Lippmann and Ingols 2005) shows that the major limitations of past studies of attack graphs is their lack of scalability to medium-sized networks.", "startOffset": 43, "endOffset": 69}, {"referenceID": 14, "context": "One notable exception is the Topological Vulnerability Analysis (TVA) project conducted in George Mason University described in (Jajodia, Noel, and OBerry 2005; Noel and Jajodia 2005; Noel et al. 2009) and other papers, which has been designed to work in real-size networks.", "startOffset": 128, "endOffset": 201}, {"referenceID": 15, "context": "One notable exception is the Topological Vulnerability Analysis (TVA) project conducted in George Mason University described in (Jajodia, Noel, and OBerry 2005; Noel and Jajodia 2005; Noel et al. 2009) and other papers, which has been designed to work in real-size networks.", "startOffset": 128, "endOffset": 201}, {"referenceID": 10, "context": "It is interesting to remark that the monotonicity assumption is the same used by FF (Hoffmann 2001) to create a relaxed version of the planning problem, and use it as a heuristic to guide the search through the attack graph.", "startOffset": 84, "endOffset": 99}, {"referenceID": 7, "context": "(Futoransky et al. 2003) proposed a model of computer network attacks which was designed to be realistic from an attacker\u2019s point of view.", "startOffset": 0, "endOffset": 24}], "year": 2013, "abstractText": "Assessing network security is a complex and difficult task. Attack graphs have been proposed as a tool to help network administrators understand the potential weaknesses of their networks. However, a problem has not yet been addressed by previous work on this subject; namely, how to actually execute and validate the attack paths resulting from the analysis of the attack graph. In this paper we present a complete PDDL representation of an attack model, and an implementation that integrates a planner into a penetration testing tool. This allows to automatically generate attack paths for penetration testing scenarios, and to validate these attacks by executing the corresponding actions -including exploitsagainst the real target network. We present an algorithm for transforming the information present in the penetration testing tool to the planning domain, and we show how the scalability issues of attack graphs can be solved using current planners. We include an analysis of the performance of our solution, showing how our model scales to medium-sized networks and the number of actions available in current penetration testing tools.", "creator": "TeX"}}}