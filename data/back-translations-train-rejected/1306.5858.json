{"id": "1306.5858", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Jun-2013", "title": "Distributed Heuristic Forward Search for Multi-Agent Systems", "abstract": "This paper describes a number of distributed forward search algorithms for solving multi-agent planning problems. We introduce a distributed formulation of non-optimal forward search, as well as an optimal version, MAD-A*. Our algorithms exploit the structure of multi-agent problems to not only distribute the work efficiently among different agents, but also to remove symmetries and reduce the overall workload. The algorithms ensure that private information is not shared among agents, yet computation is still efficient -- outperforming current state-of-the-art distributed planners, and in some cases even centralized search -- despite the fact that each agent has access only to partial information.", "histories": [["v1", "Tue, 25 Jun 2013 06:58:31 GMT  (232kb,D)", "http://arxiv.org/abs/1306.5858v1", "26 pages"]], "COMMENTS": "26 pages", "reviews": [], "SUBJECTS": "cs.AI cs.DC", "authors": ["raz nissim", "ronen brafman"], "accepted": false, "id": "1306.5858"}, "pdf": {"name": "1306.5858.pdf", "metadata": {"source": "CRF", "title": "Distributed Heuristic Forward Search for Multi-Agent Systems", "authors": ["Raz Nissim", "Ronen Brafman"], "emails": ["raznis@cs.bgu.ac.il", "brafman@cs.bgu.ac.il"], "sections": [{"heading": "1. Introduction", "text": "Interest in multi-agent systems is growing all the time, and examples of virtual and real systems abound, with virtual social communities that do not provide such instances. Ability to plan for such systems and the ability of such systems to plan autonomously for themselves is an important challenge for AI, especially as the size of these systems can be quite large. In this context, a fundamental question is how to efficiently perform distributed planning for a distributed multi-agent system, and in many cases, how to do it while respecting privacy. Distributed planning is interesting for a number of reasons. Scientifically and intellectually, it is interesting to look for distributed algorithms for basic computational tasks, such as classical planning. Likewise, it is interesting (and probably very useful in the long term) to look for distributed versions of basic tools in computer science, and search is definitely such a tool. In addition, there are pragmatic reasons for searching for distributed algorithms."}, {"heading": "2. Background", "text": "This year, it is more than ever before in the history of the city."}, {"heading": "3. Multi-Agent Forward Search", "text": "This section describes our distributed variant of the \"Forward Best First Search,\" which we call mafs. We start with the algorithm itself, including an overview and a pseudo-code. Next, we provide an example of the flow of mafs and a discussion of its subtleties."}, {"heading": "3.1 The MAFS Algorithm", "text": "In this case, a separate search space is maintained for each agent. Each agent maintains an open list of states that have expansion candidates and a closed list of already expanded states. Since no agent expands all relevant search nodes, messages must be sent between agents that include a relevant search node that is expanded by another agent. This means that two agents will expand the same state to generate different successor states. Since no agent expands all relevant search nodes, messages must be sent between agents that are relevant to him."}, {"heading": "3.2 Discussion", "text": "We now discuss some of the more subtle points of mafs."}, {"heading": "3.2.1 Preserving Agent Privacy", "text": "If our goal is to maintain privacy, it may look as if mafia agents are disclosing their private data because they are transmitting their private state in their messages. However, in fact, this information is not used by any of the other agents, nor is it altered. It is simply copied to future states to be used only by the agent. Because private government data is used only as an ID, agents can encrypt this data and maintain a local table in which the IDs are passed to private states. If this encryption can generate multiple possible IDs for each private state, other agents cannot identify the private statutes of other agents. The privacy issue will continue in Section 8.3. In order to calculate heuristic estimates of the states they receive, an agent must evaluate the effort required to achieve their goal. To do so, he needs some information about the effort that other agents need to construct their part of the plan. In a fully cooperative setting, an agent can have access to the full description of other agents \"actions."}, {"heading": "3.2.2 Relevancy and Timing of the Messages", "text": "The state s is considered relevant to Agent j if it has a public action for which all public prerequisites are met, and the last action that leads to s was public (line 7 of the algorithm 3), which means that all states that are products of private actions are considered irrelevant to other agents. Since private actions do not affect the ability of other agents to execute actions, an agent only needs to send states where the last action executed was public in order to obtain completeness (and optimism, as shown in the next section). In states that are products of private actions as irrelevant, communication decreases, while large, symmetrical portions of the search space are effectively curtailed. In fact, in section 7 we will show how this property can be used by mafia to obtain state circumcision in centralized planning algorithms, using a method called partition-based pruning.As has already been suggested, there is some flexibility regarding these relevant states when these relevant states are sent."}, {"heading": "3.2.3 Robustness", "text": "In the case of mafs, the algorithm can still find solutions even if a group of agents does not perform its calculation. To do this, the agents simply have to ignore all states in which the failing agent was involved in the plan that led to them. If this is done, the algorithm will find a solution that excludes the failed agent. To do this, the agents must additionally identify each state with the group of agents participating in plans that lead to s. If s can be reached via two ways in which different participating agents are set, s is duplicated to maintain completeness."}, {"heading": "3.2.4 Search Using Complex Actions", "text": "In Section 1, we mentioned a scenario in which real-world search operators are implemented using complex simulation software, for example, with a team of heterogeneous robot agents, each of whom has their own simulator for their actions. There are natural cases in which such agents are unlikely to want to share such generative models. Imagine a robot team in which different robots are provided by different manufacturers, for example, some are autonomous heavy equipment, while others are humanoid robots, and again other drones. Simulation software for such robots is usually complex and proprietary, and agents are unlikely to want to share it, although they most likely have no problems promoting their skills."}, {"heading": "4. Optimal MAFS", "text": "mafs, as shown, is not an optimal planning algorithm, but it can be easily modified to achieve optimality. We will now describe these modifications, which result in an MA variation of a *, which we call multi-agent distributed a * (mad-a *).As with a *, the state chosen by each agent for expansion must be the one with the lowest f = g + h value in its open list, where heuristic estimates are permissible. Therefore, in mad-a *, extract-min (line 4 in algorithm 1) must return this state."}, {"heading": "4.1 Termination Detection", "text": "Unlike in a *, extending a target state in mafs does not necessarily mean that an optimal solution has been found. In our case, a solution is optimal only if all agents prove it. Intuitively, a solution state is known as optimal if there is no state s in the open list or in the input channel of any agent, so f (s) < f *. In other words, solution state s is known as optimal if f (s) \u2264 flower \u2212 bound, where flower \u2212 bound is a lower limit on the f value of the entire system (which includes all states in all open lists, as well as states in messages that have not yet been processed). To detect this situation, we use Chandy and Lamport's snapshot algorithm (Chandy & Lamport, 1985), which is a global property when a process is used to generate approximation of the global state of the system without \"freezing\" the distributed computation. Although there is no guarantee that a fixed system is global, the system is actually stable enough to be a global one."}, {"heading": "4.2 Proof of Optimality", "text": "We must note that, as it is presented, completeness (and optimism) will only be maintained if all measures that achieve a certain target condition are considered public. This property is accepted in this section, but the algorithm is slightly modified to remove it. We start by maintaining the following lemas regarding the solution structure of an MA planning, at least one of which is private. Then, P \u00b2 (a1,.) is a legal plan for an MA planning problem. Let's let ai + 1 take two successive measures, at least one of which is private. Then, P \u00b2 (a1,..), ai + 1, ai,. ak) is a legal plan for an MA planning problem and P (I).Proof. By definition, private and public measures, and because ai, ai + 1 measures belong to different agents."}, {"heading": "5. MA Planning Framework", "text": "One of the main objectives of this work is to provide a general and scalable framework for solving the MA planning problem. We believe that such a framework provides researchers with a fertile ground for developing new search techniques and heuristics for MA planning and extending to more comprehensive planning formalisms.We chose Fast Downward (Helmert, 2006) (FD) as the basis for our MA framework - MA-FD. FD is currently the leading framework for planning, both in terms of the number of algorithms and heuristics it offers and in terms of performance - the winners of the last three international planning competitions have been implemented over it. FD is also well documented and supported, making the implementation and testing of new ideas relatively easy. ma-fd uses the translator and the preprocessor of FD, with minor changes to support the distribution of operators to agents. In addition to the PDDL files describing the domain and the address, the number of agents, the mines of the file and their IP number."}, {"heading": "6. Empirical Results", "text": "It's not just a matter of time, it's a matter of time when we have to face the question of what the future is like. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. It's a matter of time when we have to focus on the future. \""}, {"heading": "7. Partition-Based Path Pruning", "text": "The empirical results presented in Table 2 raise an interesting question: How does mada * > 1 achieve efficiency in weakly coupled environments? It is well known that when using consistent heuristics \u2032 a * is optimal in the number of nodes it expands in order to detect an optimal solution. However, in principle, it seems that mad-a * should expand at least the same search tree, so it is not clear why we achieve superlinear acceleration when comparing with a *. The main reason for this is the inherent exploitation of symmetry, which results in the truncation of effectively equivalent paths. Symmetry exploitation utilizes the notion of public and private actions. As we have noted in Corollary 1, the existence of private actions implies the existence of multiple effective permutations of certain actions that do not apply to specific actions. a * recognizes or does not utilize this fact, and mafs does."}, {"heading": "7.1 Path Pruning A*", "text": "The path that intersects a * (referred to as pp-a *) is a search algorithm that receives as input a planning problem and a cutting method \u03c1 and creates a plan \u03c0 that is guaranteed to be optimal, provided \u03c1 respects the following properties: (i) \u03c1 is optimal, and (ii) \u03c1 intersects only after the last action. For example, it is easy to see that PB intersects respects the second condition because it burns only after the last action."}, {"heading": "7.1.1 pp-a* versus a*", "text": "pp-a * is identical to a *, except for the following three changes. Firstly, a different data type is used to record an open node. In pp-a *, an open list node is a pair (A, s), where s is the state and A is a series of actions that record various possible ways to reach s from a previous state. Secondly, the node expansion is subject to the truncation rules of method \u03c1. Namely ppa * performs an applicable action a \u2032 in the state (A, s) only if there is at least one action a s.t. that is allowed to execute a \u2032 according to the truncation rules of a \u00b2. Thirdly, duplicate states are handled differently. In a *, when a state s that is already open is reached by a different search path, the open list node is updated with the action of the lower g value, and in the case of equality - the competing path falls. In contrast, bindings in pp-a, the paths that are updated by each of the last actions are led to a *."}, {"heading": "7.1.2 Proof of Correctness and Optimality", "text": "The next problem relates to pp-a *, and assumes that it is an optimum conservation method that is closed according to the last action. We say that the node (A, s) on path P is optimal if A contains an action a that leads to a state s on path P, and g (s) = g (s). The notation s \u00b2 P denotes the fact that the state s competes in the optimal path P. Lemma 4. in pp-a *, for each unclosed state sk and for each optimal, untruncated path P from I to sk, there is an open list node (A, s) that competes on P.Proof. Let P be an optimal, untruncated path from I to sk. If I am in the open list, leave s \u00b2 = I and the problem is trivially true, since g (I) = g \u00b2."}, {"heading": "7.2 Empirical Analysis of PB-Pruning", "text": "The hypothesis that this is the main advantage of mad-a * over a * is supported by the results in Table 3, which shows a comparison between mad-a * and centralized a * using PB intersection. In all cases where mad-a * achieves superlinear acceleration, the application of partition-based pruning is sublinear. Of course, this is also because mad-a * solves a more difficult problem - having incomplete information has a negative impact on the quality of the heuristics calculated by the agents. Finally, we note that the MA structure is evident in some benchmark planning areas (e.g. logistics, general problems, satellites, etc.)."}, {"heading": "8. Discussion", "text": "We introduced a formulation of heuristic forward search for distributed systems that respects the natural distributed structure of the system. mafs dominates the state-of-the-art WRT runtime and communication, and in most cases also the quality of the solution. In this class of privacy preserving algorithms, mad-a * is the first cost optimized distributed planning algorithm and competitive with its centralized counterpart, although it has only partial information. Our work raises a number of research challenges and opportunities that we are now discussing."}, {"heading": "8.1 Accurate Heuristics Given Incomplete Information", "text": "The empirical results presented take us to perhaps the biggest practical challenge proposed by mafs and mad-a * - calculating accurate heuristics in a distributed (private) system. In some areas, the existence of private information that is not shared leads to a serious deterioration in the quality of heuristic function, which significantly increases the number of extended nodes and / or the quality of solutions. We believe that there are techniques that can be used to alleviate this problem. Let's take a simple example of a public action pub that can only be applied after a private action in April. Another way to improve heuristic estimates is to use an additive heurist that is needed to collect data. If the costs of the other actor known as Apub would also reflect the costs of April, the heuristic estimates would be more accurate than the costs of that actor. Another way to improve heuristic estimates is to use an additive heuristic in order to calculate the cost of 2008, rather than to calculate the maximum of the acristic year, where the actual acristic problem could be very much."}, {"heading": "8.2 Secure Multi-Party Computation", "text": "Secure Multi-Party Calculators (Yao, 1982, 1986) is a subset of cryptography that is closely related to distributed planning and distributed problem solving in general. Therefore, the goal of secure multi-party calculation methods is to allow multiple agents to calculate a function on their inputs while keeping those inputs private. Specifically, Agent 1,.., n, who have private data x1,..., xn, would like to jointly calculate a function f (x1,., xn) without disclosing information about their private information, except what can reasonably be derived from the value of f (x1,., xn). While in principle these techniques can be extended to our distributed planning setting, their complexity quickly becomes unmanageable. For example, a common approach to secure multi-party calculations that uses cryptographic circuits."}, {"heading": "8.3 Privacy", "text": "In fact, it is so that most people who are able to recognize and understand their identity and identity, that they are able to recognize and understand their identity and identity, and that they are able to get rid of their identity. In fact, it is so that they are able to get rid of their identity. In fact, each individual actor has a single variable, and there are both binary and non-specific constraints that represent an equality between the values of two variables belonging to different actions, while non-uniform constraints are considered as private information. In scheduling, a single actor has a possible time span, the values of which are possible for meetings. In the search, whenever one actor sends his variable agents to other agents, they can represent an equality between the values of two variables belonging to different agents, whose meetings are possible for meetings. In the search, whenever one agent sends his variable agents to other agents, whenever a meeting can take place in which one cannot take place."}], "references": [{"title": "The complexity of decentralized control of markov decision processes", "author": ["D.S. Bernstein", "R. Givan", "N. Immerman", "S. Zilberstein"], "venue": "Math. Oper. Res.,", "citeRegEx": "Bernstein et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Bernstein et al\\.", "year": 2002}, {"title": "From one to many: Planning for loosely coupled multi-agent systems", "author": ["R.I. Brafman", "C. Domshlak"], "venue": "In ICAPS,", "citeRegEx": "Brafman and Domshlak,? \\Q2008\\E", "shortCiteRegEx": "Brafman and Domshlak", "year": 2008}, {"title": "Transferable utility planning games", "author": ["R.I. Brafman", "C. Domshlak", "Y. Engel", "M. Tennenholtz"], "venue": null, "citeRegEx": "Brafman et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Brafman et al\\.", "year": 2010}, {"title": "Best-first heuristic search for multicore machines", "author": ["E. Burns", "S. Lemons", "W. Ruml", "R. Zhou"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "Burns et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Burns et al\\.", "year": 2010}, {"title": "Distributed snapshots: Determining global states of distributed systems", "author": ["K.M. Chandy", "L. Lamport"], "venue": "ACM Trans. Comput. Syst.,", "citeRegEx": "Chandy and Lamport,? \\Q1985\\E", "shortCiteRegEx": "Chandy and Lamport", "year": 1985}, {"title": "An efficient algorithm for multiagent plan coordination", "author": ["J.S. Cox", "E.H. Durfee"], "venue": "In AAMAS,", "citeRegEx": "Cox and Durfee,? \\Q2005\\E", "shortCiteRegEx": "Cox and Durfee", "year": 2005}, {"title": "Differential privacy", "author": ["C. Dwork"], "venue": "In ICALP", "citeRegEx": "Dwork,? \\Q2006\\E", "shortCiteRegEx": "Dwork", "year": 2006}, {"title": "Multi-agent constraint systems with preferences: Efficiency, solution quality, and privacy loss", "author": ["M.S. Franzin", "F. Rossi", "E.C. Freuder", "R.J. Wallace"], "venue": "Computational Intelligence,", "citeRegEx": "Franzin et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Franzin et al\\.", "year": 2004}, {"title": "Ssdpop: improving the privacy of dcop with secret sharing", "author": ["R. Greenstadt", "B.J. Grosz", "M.D. Smith"], "venue": "In AAMAS,", "citeRegEx": "Greenstadt et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Greenstadt et al\\.", "year": 2007}, {"title": "Analysis of privacy loss in distributed constraint optimization", "author": ["R. Greenstadt", "J.P. Pearce", "M. Tambe"], "venue": "In AAAI,", "citeRegEx": "Greenstadt et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Greenstadt et al\\.", "year": 2006}, {"title": "A new approach to interdomain routing based on secure multiparty computation", "author": ["D. Gupta", "A. Segal", "A. Panda", "G. Segev", "M. Schapira", "J. Feigenbaum", "J. Rexford", "S. Shenker"], "venue": "In HotNets,", "citeRegEx": "Gupta et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Gupta et al\\.", "year": 2012}, {"title": "The fast downward planning system", "author": ["M. Helmert"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "Helmert,? \\Q2006\\E", "shortCiteRegEx": "Helmert", "year": 2006}, {"title": "Unifying the causal graph and additive heuristics", "author": ["M. Helmert", "H. Geffner"], "venue": "In ICAPS,", "citeRegEx": "Helmert and Geffner,? \\Q2008\\E", "shortCiteRegEx": "Helmert and Geffner", "year": 2008}, {"title": "Flexible abstraction heuristics for optimal sequential planning", "author": ["M. Helmert", "P. Haslum", "J. Hoffmann"], "venue": "In ICAPS,", "citeRegEx": "Helmert et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Helmert et al\\.", "year": 2007}, {"title": "The FF planning system: fast plan generation through heuristic search", "author": ["J. Hoffmann", "B. Nebel"], "venue": "J. Artif. Int. Res.,", "citeRegEx": "Hoffmann and Nebel,? \\Q2001\\E", "shortCiteRegEx": "Hoffmann and Nebel", "year": 2001}, {"title": "Common misconceptions concerning heuristic search. In SOCS", "author": ["R.C. Holte"], "venue": null, "citeRegEx": "Holte,? \\Q2010\\E", "shortCiteRegEx": "Holte", "year": 2010}, {"title": "Optimal additive composition of abstraction-based admissible heuristics", "author": ["M. Katz", "C. Domshlak"], "venue": "In ICAPS,", "citeRegEx": "Katz and Domshlak,? \\Q2008\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2008}, {"title": "Scalable, parallel best-first search for optimal sequential planning", "author": ["A. Kishimoto", "A.S. Fukunaga", "A. Botea"], "venue": "In ICAPS", "citeRegEx": "Kishimoto et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kishimoto et al\\.", "year": 2009}, {"title": "Privacy-preserving multi-agent constraint satisfaction", "author": ["T. L\u00e9aut\u00e9", "B. Faltings"], "venue": "In CSE", "citeRegEx": "L\u00e9aut\u00e9 and Faltings,? \\Q2009\\E", "shortCiteRegEx": "L\u00e9aut\u00e9 and Faltings", "year": 2009}, {"title": "Privacy loss in distributed constraint reasoning: A quantitative framework for analysis and its applications", "author": ["R.T. Maheswaran", "J.P. Pearce", "E. Bowring", "P. Varakantham", "M. Tambe"], "venue": "Autonomous Agents and Multi-Agent Systems,", "citeRegEx": "Maheswaran et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Maheswaran et al\\.", "year": 2006}, {"title": "Distributed Search by Constrained Agents: Algorithms, Performance, Communication (Advanced Information and Knowledge Processing)", "author": ["A. Meisels"], "venue": null, "citeRegEx": "Meisels,? \\Q2007\\E", "shortCiteRegEx": "Meisels", "year": 2007}, {"title": "A heuristic search algorithm with modifiable estimate", "author": ["L. M\u00e9ro"], "venue": "Artif. Intell.,", "citeRegEx": "M\u00e9ro,? \\Q1984\\E", "shortCiteRegEx": "M\u00e9ro", "year": 1984}, {"title": "Principles of artificial intelligence", "author": ["N.J. Nilsson"], "venue": null, "citeRegEx": "Nilsson,? \\Q1980\\E", "shortCiteRegEx": "Nilsson", "year": 1980}, {"title": "Tunneling and decomposition-based state reduction for optimal planning", "author": ["R. Nissim", "U. Apsel", "R.I. Brafman"], "venue": "In ECAI,", "citeRegEx": "Nissim et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Nissim et al\\.", "year": 2012}, {"title": "A general, fully distributed multi-agent planning algorithm", "author": ["R. Nissim", "R.I. Brafman", "C. Domshlak"], "venue": "In AAMAS,", "citeRegEx": "Nissim et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Nissim et al\\.", "year": 2010}, {"title": "Computing perfect heuristics in polynomial time: On bisimulation and merge-and-shrink abstraction in optimal planning", "author": ["R. Nissim", "J. Hoffmann", "M. Helmert"], "venue": "In IJCAI,", "citeRegEx": "Nissim et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Nissim et al\\.", "year": 2011}, {"title": "A scalable method for multiagent constraint optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In IJCAI,", "citeRegEx": "Petcu and Faltings,? \\Q2005\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2005}, {"title": "M-DPOP: Faithful distributed implementation of efficient social choice problems", "author": ["A. Petcu", "B. Faltings", "D.C. Parkes"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "Petcu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Petcu et al\\.", "year": 2008}, {"title": "Distributed constraint satisfaction and optimization with privacy enforcement", "author": ["Silaghi", "M.-C", "D. Mitra"], "venue": "In IAT,", "citeRegEx": "Silaghi et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Silaghi et al\\.", "year": 2004}, {"title": "Framework and complexity results for coordinating non-cooperative planning agents", "author": ["J.R. Steenhuisen", "C. Witteveen", "A. ter Mors", "J. Valk"], "venue": "In MATES,", "citeRegEx": "Steenhuisen et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Steenhuisen et al\\.", "year": 2006}, {"title": "Maa*: A heuristic search algorithm for solving decentralized pomdps", "author": ["D. Szer", "F. Charpillet", "S. Zilberstein"], "venue": "In UAI,", "citeRegEx": "Szer et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Szer et al\\.", "year": 2005}, {"title": "Coordinating autonomous planners", "author": ["A. ter Mors", "J. Valk", "C. Witteveen"], "venue": "In IC-AI,", "citeRegEx": "Mors et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Mors et al\\.", "year": 2004}, {"title": "Coordinating self interested autonomous planning agents", "author": ["A. ter Mors", "C. Witteveen"], "venue": "In BNAIC,", "citeRegEx": "Mors and Witteveen,? \\Q2005\\E", "shortCiteRegEx": "Mors and Witteveen", "year": 2005}, {"title": "An approach to multi-agent planning with incomplete information", "author": ["A. Torre\u00f1o", "E. Onaindia", "O. Sapena"], "venue": "In ECAI,", "citeRegEx": "Torre\u00f1o et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Torre\u00f1o et al\\.", "year": 2012}, {"title": "Parallel planning via the distribution of operators", "author": ["D. Vrakas", "I. Refanidis", "I.P. Vlahavas"], "venue": "J. Exp. Theor. Artif. Intell.,", "citeRegEx": "Vrakas et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Vrakas et al\\.", "year": 2001}, {"title": "Learning action models from plan examples using weighted max-sat", "author": ["Q. Yang", "K. Wu", "Y. Jiang"], "venue": "Artif. Intell.,", "citeRegEx": "Yang et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2007}, {"title": "Protocols for secure computations (extended abstract)", "author": ["Yao", "A.C.-C"], "venue": "In FOCS,", "citeRegEx": "Yao and C..C.,? \\Q1982\\E", "shortCiteRegEx": "Yao and C..C.", "year": 1982}, {"title": "How to generate and exchange secrets (extended abstract)", "author": ["Yao", "A.C.-C"], "venue": "In FOCS,", "citeRegEx": "Yao and C..C.,? \\Q1986\\E", "shortCiteRegEx": "Yao and C..C.", "year": 1986}, {"title": "The distributed constraint satisfaction problem: Formalization and algorithms", "author": ["M. Yokoo", "E.H. Durfee", "T. Ishida", "K. Kuwabara"], "venue": "IEEE Trans. Knowl. Data Eng.,", "citeRegEx": "Yokoo et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Yokoo et al\\.", "year": 1998}, {"title": "Secure distributed constraint satisfaction: Reaching agreement without revealing private information", "author": ["M. Yokoo", "K. Suzuki", "K. Hirayama"], "venue": "In CP,", "citeRegEx": "Yokoo et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Yokoo et al\\.", "year": 2002}], "referenceMentions": [{"referenceID": 20, "context": "Indeed, this is the main motivation for the field of distributed algorithms, and in particular, the work on distributed constraint satisfaction problems (CSP) (Yokoo, Durfee, Ishida, & Kuwabara, 1998; Meisels, 2007).", "startOffset": 159, "endOffset": 215}, {"referenceID": 22, "context": "There is a long tradition of work on multi-agent planning for cooperative and noncooperative agent teams involving centralized and distributed algorithms, often using involved models that model uncertainty, resources, and more (Nilsson, 1980; Hansen & Zilberstein, 2001; Bernstein, Givan, Immerman, & Zilberstein, 2002; Szer, Charpillet, & Zilberstein, 2005), and much work on how to coordinate the local plans of agents or to allow agents to plan locally under certain constraints (Cox & Durfee, 2005; Steenhuisen, Witteveen, ter Mors, & Valk, 2006; ter Mors, Valk, & Witteveen, 2004; ter Mors & Witteveen, 2005).", "startOffset": 227, "endOffset": 358}, {"referenceID": 38, "context": "The best known example of distributed search is that of distributed CSPs (Yokoo et al., 1998), and various search techniques and heuristics have been developed for it (Meisels, 2007).", "startOffset": 73, "endOffset": 93}, {"referenceID": 20, "context": ", 1998), and various search techniques and heuristics have been developed for it (Meisels, 2007).", "startOffset": 81, "endOffset": 96}, {"referenceID": 24, "context": "This methodology was later extended to the first fully distributed MA algorithm for ma-strips planning, PlanningFirst (Nissim et al., 2010).", "startOffset": 118, "endOffset": 139}, {"referenceID": 33, "context": "Recently, a distributed planner based on partial order planning was introduced (Torre\u00f1o et al., 2012), which outperforms Planning First, effectively solving more tightly coupled problems.", "startOffset": 79, "endOffset": 101}, {"referenceID": 15, "context": "Although recent work (Holte, 2010) shows that pathmax does not necessarily make a bona-fide consistent heuristic, pathmax does ensure that f -values along a path are non-decreasing.", "startOffset": 21, "endOffset": 34}, {"referenceID": 21, "context": "We assume global consistency of all heuristic functions, since all admissible heuristics can be made consistent by locally using the pathmax equation (M\u00e9ro, 1984), and by using the max operator as in line 4 of Algorithm 2 on heuristic values of different agents.", "startOffset": 150, "endOffset": 162}, {"referenceID": 11, "context": "We chose Fast Downward (Helmert, 2006) (FD) as the basis for our MA framework \u2013 MA-FD.", "startOffset": 23, "endOffset": 38}, {"referenceID": 33, "context": "To evaluate mafs in its non-optimal setting, we compare it to the state-of-the-art distributed planner map-pop (Torre\u00f1o et al., 2012), and to the Planning-First algorithm (Nissim et al.", "startOffset": 111, "endOffset": 133}, {"referenceID": 24, "context": ", 2012), and to the Planning-First algorithm (Nissim et al., 2010).", "startOffset": 45, "endOffset": 66}, {"referenceID": 6, "context": "A similar tradeoff is explored in the area of differential privacy (Dwork, 2006).", "startOffset": 67, "endOffset": 80}], "year": 2013, "abstractText": "This paper describes a number of distributed forward search algorithms for solving multi-agent planning problems. We introduce a distributed formulation of non-optimal forward search, as well as an optimal version, mad-a*. Our algorithms exploit the structure of multi-agent problems to not only distribute the work efficiently among different agents, but also to remove symmetries and reduce the overall workload. The algorithms ensure that private information is not shared among agents, yet computation is still efficient \u2013 outperforming current state-of-the-art distributed planners, and in some cases even centralized search \u2013 despite the fact that each agent has access only to partial information.", "creator": "TeX"}}}