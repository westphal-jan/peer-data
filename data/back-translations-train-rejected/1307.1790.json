{"id": "1307.1790", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jul-2013", "title": "Lifting Structural Tractability to CSP with Global Constraints", "abstract": "A wide range of problems can be modelled as constraint satisfaction problems (CSPs), that is, a set of constraints that must be satisfied simultaneously. Constraints can either be represented extensionally, by explicitly listing allowed combinations of values, or implicitly, by special-purpose algorithms provided by a solver. Such implicitly represented constraints, known as global constraints, are widely used; indeed, they are one of the key reasons for the success of constraint programming in solving real-world problems.", "histories": [["v1", "Sat, 6 Jul 2013 14:54:18 GMT  (73kb,D)", "http://arxiv.org/abs/1307.1790v1", "To appear in proceedings of CP'13, LNCS 8124"]], "COMMENTS": "To appear in proceedings of CP'13, LNCS 8124", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["evgenij thorstensen"], "accepted": false, "id": "1307.1790"}, "pdf": {"name": "1307.1790.pdf", "metadata": {"source": "CRF", "title": "Lifting Structural Tractability to CSP with Global Constraints", "authors": ["Evgenij Thorstensen"], "emails": ["evgenij.thorstensen@cs.ox.ac.uk"], "sections": [{"heading": "1 Introduction", "text": "These constraints can be represented either explicitly, by a table of allowed assignments, or implicitly, by specialized algorithms provided by the constraint solver. These algorithms can take as parameters a description that specifies exactly what types of mappings a particular instance of a constraint should allow. However, such implicit problems are known as global constraints, and a lot of the success of CP in practice has been attributed to solvers that provide them [15,28,31]. The theoretical properties of constraint problems, especially the computational complexity of different types of problems, have been extensively studied, and quite a few constraints on general constraints are sufficient to make them tractable."}, {"heading": "2 Global Constraints", "text": "In this section, we define the basic concepts that we use throughout the work. In particular, we give a precise definition of global constraints, and illustrate them with a few examples. We expand this notation to include a set of variables, each associated with an associated set of domain elements. An association of a set of variables V is a function of variables V (V), which makes each v-V element an arbitrary subset of variables. We refer to the constraint of variables W (v). We also allow the special mappings of empty variables."}, {"heading": "3 Structural Restrictions", "text}, {"heading": "4 Properties of Extensional Representation", "text": "The following definition formalizes what we mean by \"parts,\" and is required to specify the algorithms that Grohe and Marx use in their papers. Definition 18 (condition): Let e [condition] be a constraint. Projecting e [condition] onto a set of variables X (condition) is required to specify the algorithms that Grohe and Marx use in their papers. Definition 18 (condition): Let e [condition] be a constraint. Projecting e [condition] onto a set of variables X (condition) is the condition pjX (condition)."}, {"heading": "5 CSP Instances with Few Solutions in Key Places", "text": "In other words, we have shown that with these two conditions we should be able to reduce the instances with global constraints to classical instances, even if there is no reason why we should need a few solutions for each projection. Instead, we consider the following Reduction.Definition 19 (Partial assign checks).A global constraint catalog checks whether for each constraint e [...] we can decide whether a given mapping to a set of variables W V is contained in an mapping that is satisfactory."}, {"heading": "5.1 Applying Corollary 1 to the CGP", "text": "Let us recall the related graph partition problem (problem 1): Given a connected graph G, as well as \u03b2 \u03b2 = \u03b2 = \u03b2, the vertices of G can be divided into sacks of size, so that no more than \u03b2 edges are broken. If we use the CSP encoding we have given in Example 3, as well as corollary 1, we will show a new result that this problem is traceable when \u03b2 \u03b2 1 is fixed. To simplify the analysis, let us assume that without loss of generality, \u03b1 < V |, which means that each solution has at least one broken edge. We assert that if \u03b2 is specified, then the constraint C\u03b2 = e\u03b2 [\u03b2] is allowed for a partial mapping check, and has only a polynomial number of satisfactory assignments. The latter implies that for each instance P of the CGP, sol (pjiv \u03b2) (\u03b2) is polynoal in size P (P)."}, {"heading": "6 Back Doors", "text": "If a class of CSP instances includes such constraints that are not known to allow a partial solution, we can still solve the instance in some cases by applying the concept of a backdoor. (D) If a backdoor is closed for a backdoor, we can introduce a global constraint on an instance that contains a set of variables. (D) A back door for an instance that contains a set of variables. (D) A back door for an instance that contains a set of variables. (D) A back door for an instance that contains a set of variables. (D) A back door for an instance that contains a set of variables. (D) A back door that contains a set of variables. (D) A back door, the so-called back door, can be decided so that we decide whether a particular mapping to a set of variables exists. (D) W is contained in an assignment that contains e [C], i.e. whether there is some kind of variable that exists (D)."}, {"heading": "7 Summary and Future Work", "text": "In this paper, we have examined properties that many structural constraints rely on to obtain traceable classes of CSP instances with explicit constraints. In particular, we identify a relationship between the number of solutions and the size of a CSP instance as such a property. On the basis of this insight, we show that known structural constraints are traceable for each class of CSP instances with global constraints that meet this property. In particular, this implies that the structural constraints that we consider traceable apply to classes of instances in which each global constraint has unsatisfactory mappings relative to its size. To illustrate our result, we apply them to a known problem, the associated graph distribution problem, and use them to identify a new traceable case of this problem. We also show how the concept of backdoors, subsets of variables that can make a problem easy to solve once our problem is used in some cases."}], "references": [{"title": "Width Functions for Hypertree Decompositions", "author": ["I. Adler"], "venue": "Doctoral dissertation, Albert-Ludwigs-Universit\u00e4t Freiburg", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Optimization methods for the partner units problem", "author": ["M. Aschinger", "C. Drescher", "G. Friedrich", "G. Gottlob", "P. Jeavons", "A. Ryabokon", "E. Thorstensen"], "venue": "Proc. CPAIOR\u201911. LNCS, vol. 6697, pp. 4\u201319. Springer", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Structural decomposition methods and what they are good for", "author": ["M. Aschinger", "C. Drescher", "G. Gottlob", "P. Jeavons", "E. Thorstensen"], "venue": "Schwentick, T., D\u00fcrr, C. (eds.) Proc. STACS\u201911. LIPIcs, vol. 9, pp. 12\u201328", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "The complexity of reasoning with global constraints", "author": ["C. Bessiere", "E. Hebrard", "B. Hnich", "T. Walsh"], "venue": "Constraints 12(2), 239\u2013259", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2007}, {"title": "Decomposition of the NValue constraint", "author": ["C. Bessiere", "G. Katsirelos", "N. Narodytska", "C.G. Quimper", "T. Walsh"], "venue": "Proc. CP\u201910. LNCS, vol. 6308, pp. 114\u2013128. Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Classifying the complexity of constraints using finite algebras", "author": ["A. Bulatov", "P. Jeavons", "A. Krokhin"], "venue": "SIAM Journal on Computing 34(3), 720\u2013742", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2005}, {"title": "Constraint satisfaction with succinctly specified relations", "author": ["H. Chen", "M. Grohe"], "venue": "Journal of Computer and System Sciences 76(8), 847\u2013860", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "A unified theory of structural tractability for constraint satisfaction problems", "author": ["D. Cohen", "P. Jeavons", "M. Gyssens"], "venue": "Journal of Computer and System Sciences 74(5), 721\u2013743", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Constraint representations and structural tractability", "author": ["D.A. Cohen", "M.J. Green", "C. Houghton"], "venue": "Proc. CP\u201909. LNCS, vol. 5732, pp. 289\u2013303. Springer", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2009}, {"title": "Constraint satisfaction, bounded treewidth, and finite-variable logics", "author": ["V. Dalmau", "P.G. Kolaitis", "M.Y. Vardi"], "venue": "Proc. CP\u201902. LNCS, vol. 2470, pp. 223\u2013254. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2002}, {"title": "Parameterized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": "Monographs in Computer Science, Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1999}, {"title": "Parameterized Complexity Theory", "author": ["J. Flum", "M. Grohe"], "venue": "Texts in Theoretical Computer Science, Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2006}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "D.S. Johnson"], "venue": "W. H. Freeman", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1979}, {"title": "Backdoors to satisfaction", "author": ["S. Gaspers", "S. Szeider"], "venue": "Bodlaender, H.L., Downey, R., Fomin, F.V., Marx, D. (eds.) The Multivariate Algorithmic Revolution and Beyond, LNCS, vol. 7370, pp. 287\u2013317. Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "MINION: A fast, scalable constraint solver", "author": ["I.P. Gent", "C. Jefferson", "I. Miguel"], "venue": "Proc. ECAI\u201906, pp. 98\u2013102. IOS Press", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "A comparison of structural CSP decomposition methods", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Artificial Intelligence 124(2), 243\u2013282", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2000}, {"title": "Hypertree decompositions and tractable queries", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Journal of Computer and System Sciences 64(3), 579\u2013627", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "Structural tractability of propagated constraints", "author": ["M.J. Green", "C. Jefferson"], "venue": "Proc. CP\u201908. LNCS, vol. 5202, pp. 372\u2013386. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2008}, {"title": "The complexity of homomorphism and constraint satisfaction problems seen from the other side", "author": ["M. Grohe"], "venue": "Journal of the ACM 54(1), 1\u201324", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2007}, {"title": "Constraint solving via fractional edge covers", "author": ["M. Grohe", "D. Marx"], "venue": "Proc. SODA\u201906, pp. 289\u2013298. ACM", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2006}, {"title": "Bin repacking scheduling in virtualized datacenters", "author": ["F. Hermenier", "S. Demassey", "X. Lorca"], "venue": "Lee, J. (ed.) Proc. CP\u201911. LNCS, vol. 6876, pp. 27\u201341. Springer", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Global constraints", "author": ["W.J. van Hoeve", "I. Katriel"], "venue": "Rossi, F., van Beek, P., Walsh, T. (eds.) Handbook of Constraint Programming, Foundations of Artificial Intelligence, vol. 2, pp. 169\u2013208. Elsevier", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2006}, {"title": "Simultaneous matchings: Hardness and approximation", "author": ["M. Kutz", "K. Elbassioni", "I. Katriel", "M. Mahajan"], "venue": "Journal of Computer and System Sciences 74(5), 884\u2013897", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2008}, {"title": "Tractable hypergraph properties for constraint satisfaction and conjunctive queries", "author": ["D. Marx"], "venue": "CoRR abs/0911.0801", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2009}, {"title": "Tractable hypergraph properties for constraint satisfaction and conjunctive queries", "author": ["D. Marx"], "venue": "Proc. STOC\u201910, pp. 735\u2013744. ACM", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "Improved algorithms for the global cardinality constraint", "author": ["C.G. Quimper", "A. L\u00f3pez-Ortiz", "P. van Beek", "A. Golynski"], "venue": "Proc. CP\u201904. LNCS, vol. 3258, pp. 542\u2013556. Springer", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2004}, {"title": "Generalized Arc Consistency for Global Cardinality Constraint", "author": ["J.C. R\u00e9gin"], "venue": "Proc. AAAI\u201996, pp. 209\u2013215. AAAI Press", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1996}, {"title": "The Handbook of Constraint Programming", "author": ["F. Rossi", "P. van Beek", "Walsh", "T. (eds."], "venue": "Elsevier", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2006}, {"title": "Tractable cases of the extended global cardinality constraint", "author": ["M. Samer", "S. Szeider"], "venue": "Constraints 16(1), 1\u201324", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2011}, {"title": "Practical applications of constraint programming", "author": ["M. Wallace"], "venue": "Constraints 1, 139\u2013 168", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1996}, {"title": "ECLiPSe: A platform for constraint logic programming", "author": ["M. Wallace", "S. Novello", "J. Schimpf"], "venue": "ICL Systems Journal 12(1), 137\u2013158", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1997}, {"title": "Backdoors to typical case complexity", "author": ["R. Williams", "C.P. Gomes", "B. Selman"], "venue": "Proc. IJCAI\u201903, pp. 1173\u20131178", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 21, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [22,30], and industrial configuration [2,21].", "startOffset": 116, "endOffset": 123}, {"referenceID": 29, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [22,30], and industrial configuration [2,21].", "startOffset": 116, "endOffset": 123}, {"referenceID": 1, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [22,30], and industrial configuration [2,21].", "startOffset": 154, "endOffset": 160}, {"referenceID": 20, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [22,30], and industrial configuration [2,21].", "startOffset": 154, "endOffset": 160}, {"referenceID": 14, "context": "Such implicitly represented constraints are known as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing them [15,28,31].", "startOffset": 162, "endOffset": 172}, {"referenceID": 27, "context": "Such implicitly represented constraints are known as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing them [15,28,31].", "startOffset": 162, "endOffset": 172}, {"referenceID": 30, "context": "Such implicitly represented constraints are known as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing them [15,28,31].", "startOffset": 162, "endOffset": 172}, {"referenceID": 2, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 5, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 7, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 15, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 18, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 24, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [3, 6, 8, 16, 19, 25].", "startOffset": 287, "endOffset": 308}, {"referenceID": 16, "context": "CSP instances [17, 20, 25].", "startOffset": 14, "endOffset": 26}, {"referenceID": 19, "context": "CSP instances [17, 20, 25].", "startOffset": 14, "endOffset": 26}, {"referenceID": 24, "context": "CSP instances [17, 20, 25].", "startOffset": 14, "endOffset": 26}, {"referenceID": 22, "context": "However, much of this theoretical work has focused on problems where each constraint is explicitly represented, and most known structural restrictions fail to yield tractable classes for problems with global constraints, even when the global constraints are fairly simple [23].", "startOffset": 272, "endOffset": 276}, {"referenceID": 3, "context": "This is generally done by pruning from the domains of variables those values that cannot lead to a satisfying assignment [4,29].", "startOffset": 121, "endOffset": 127}, {"referenceID": 28, "context": "This is generally done by pruning from the domains of variables those values that cannot lead to a satisfying assignment [4,29].", "startOffset": 121, "endOffset": 127}, {"referenceID": 4, "context": "Another strand of research has explored conditions that allow global constraints to be replaced by collections of explicitly represented constraints [5].", "startOffset": 149, "endOffset": 152}, {"referenceID": 6, "context": "As discussed in [7], when the constraints in a family of problems have unbounded arity, the way that the constraints are represented can significantly affect the complexity.", "startOffset": 16, "endOffset": 19}, {"referenceID": 17, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [18], negative constraints [9], or GDNF/decision diagrams [7], and exploited properties particular to that representation.", "startOffset": 118, "endOffset": 122}, {"referenceID": 8, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [18], negative constraints [9], or GDNF/decision diagrams [7], and exploited properties particular to that representation.", "startOffset": 145, "endOffset": 148}, {"referenceID": 6, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [18], negative constraints [9], or GDNF/decision diagrams [7], and exploited properties particular to that representation.", "startOffset": 176, "endOffset": 179}, {"referenceID": 21, "context": "For example, in [22] a global constraint is defined as \u201ca constraint that captures a relation between a non-fixed number of variables\u201d.", "startOffset": 16, "endOffset": 20}, {"referenceID": 3, "context": "Below, we offer a precise definition similar to the one in [4], where the authors define global constraints for a domain D over a list of variables \u03c3 as being given intensionally by a function D|\u03c3| \u2192 {0, 1} computable in polynomial time.", "startOffset": 59, "endOffset": 62}, {"referenceID": 28, "context": "A very general global constraint type is the extended global cardinality constraint type [29].", "startOffset": 89, "endOffset": 93}, {"referenceID": 0, "context": "To present the various structural restrictions, we will use the framework of width functions, introduced by Adler [1].", "startOffset": 114, "endOffset": 117}, {"referenceID": 19, "context": "Next, we define a relaxation of hypertree width known as fractional hypertree width, introduced by Grohe and Marx [20].", "startOffset": 114, "endOffset": 118}, {"referenceID": 0, "context": "A fractional edge cover for X is a function \u03b3 : H \u2192 [0, 1] such that \u2211", "startOffset": 52, "endOffset": 58}, {"referenceID": 19, "context": "It is known that this minimum is always rational [20].", "startOffset": 49, "endOffset": 53}, {"referenceID": 9, "context": "Theorem 1 ( [10, 17, 20]).", "startOffset": 12, "endOffset": 24}, {"referenceID": 16, "context": "Theorem 1 ( [10, 17, 20]).", "startOffset": 12, "endOffset": 24}, {"referenceID": 19, "context": "Theorem 1 ( [10, 17, 20]).", "startOffset": 12, "endOffset": 24}, {"referenceID": 23, "context": "To go beyond fractional hypertree width, Marx [24, 25] recently introduced the concept of submodular width.", "startOffset": 46, "endOffset": 54}, {"referenceID": 24, "context": "To go beyond fractional hypertree width, Marx [24, 25] recently introduced the concept of submodular width.", "startOffset": 46, "endOffset": 54}, {"referenceID": 10, "context": "However, this class is what is called fixed-parameter tractable [11,12].", "startOffset": 64, "endOffset": 71}, {"referenceID": 11, "context": "However, this class is what is called fixed-parameter tractable [11,12].", "startOffset": 64, "endOffset": 71}, {"referenceID": 23, "context": "Theorem 2 ( [24]).", "startOffset": 12, "endOffset": 16}, {"referenceID": 19, "context": "The three structural restrictions that we have just presented form a hierarchy [20,24]: For every hypergraph G, subw(G) \u2264 fhw(G) \u2264 hw(G).", "startOffset": 79, "endOffset": 86}, {"referenceID": 23, "context": "The three structural restrictions that we have just presented form a hierarchy [20,24]: For every hypergraph G, subw(G) \u2264 fhw(G) \u2264 hw(G).", "startOffset": 79, "endOffset": 86}, {"referenceID": 12, "context": "The NP-complete problem of 3-colourability [13] is to decide, given a graph \u3008V,E\u3009, whether the vertices V can be coloured with three colours such that no two adjacent vertices have the same colour.", "startOffset": 43, "endOffset": 47}, {"referenceID": 19, "context": "To obtain tractability for classic CSP instances of bounded fractional hypertree width, Grohe and Marx [20] use a bound on the number of solutions to a classic CSP instance, and show that this bound is preserved when we consider parts of a CSP instance.", "startOffset": 103, "endOffset": 107}, {"referenceID": 19, "context": "Lemma 2 ( [20]).", "startOffset": 10, "endOffset": 14}, {"referenceID": 25, "context": "Example 1) does not satisfy Definition 19, since checking whether an arbitrary EGC constraint has a satisfying assignment is NP-hard [26].", "startOffset": 133, "endOffset": 137}, {"referenceID": 26, "context": "On the other hand, a catalogue that contains only EGC constraints whose cardinality sets are intervals does satisfy Definition 19 [27].", "startOffset": 130, "endOffset": 134}, {"referenceID": 26, "context": "That C allows partial assignment checking follows from a result by R\u00e9gin [27], since the cardinality sets of C are intervals.", "startOffset": 73, "endOffset": 77}, {"referenceID": 13, "context": "A (strong) back door set [14,32] is a set of variables in a CSP instance that, when assigned, make the instance easy to solve.", "startOffset": 25, "endOffset": 32}, {"referenceID": 31, "context": "A (strong) back door set [14,32] is a set of variables in a CSP instance that, when assigned, make the instance easy to solve.", "startOffset": 25, "endOffset": 32}], "year": 2013, "abstractText": "A wide range of problems can be modelled as constraint satisfaction problems (CSPs), that is, a set of constraints that must be satisfied simultaneously. Constraints can either be represented extensionally, by explicitly listing allowed combinations of values, or implicitly, by special-purpose algorithms provided by a solver. Such implicitly represented constraints, known as global constraints, are widely used; indeed, they are one of the key reasons for the success of constraint programming in solving real-world problems. In recent years, a variety of restrictions on the structure of CSP instances that yield tractable classes have been identified. However, many such restrictions fail to guarantee tractability for CSPs with global constraints. In this paper, we investigate the properties of extensionally represented constraints that these restrictions exploit to achieve tractability, and show that there are large classes of global constraints that also possess these properties. This allows us to lift these restrictions to the global case, and identify new tractable classes of CSPs with global constraints.", "creator": "LaTeX with hyperref package"}}}