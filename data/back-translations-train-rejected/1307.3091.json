{"id": "1307.3091", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Jul-2013", "title": "Artificial Intelligence MArkup Language: A Brief Tutorial", "abstract": "The purpose of this paper is to serve as a reference guide for the development of chatterbots implemented with the AIML language. In order to achieve this, the main concepts in Pattern Recognition area are described because the AIML uses such theoretical framework in their syntactic and semantic structures. After that, AIML language is described and each AIML command/tag is followed by an application example. Also, the usage of AIML embedded tags for the handling of sequence dialogue limitations between humans and machines is shown. Finally, computer systems that assist in the design of chatterbots with the AIML language are classified and described.", "histories": [["v1", "Thu, 11 Jul 2013 12:49:43 GMT  (410kb)", "http://arxiv.org/abs/1307.3091v1", "International Journal of Computer science and engineering Survey (IJCSES) - 2013"]], "COMMENTS": "International Journal of Computer science and engineering Survey (IJCSES) - 2013", "reviews": [], "SUBJECTS": "cs.AI cs.SE", "authors": ["maria das gra\\c{c}as bruno marietto", "rafael varago de aguiar", "gislene de oliveira barbosa", "wagner tanaka botelho", "edson pimentel", "robson dos santos fran\\c{c}a", "vera l\\'ucia da silva"], "accepted": false, "id": "1307.3091"}, "pdf": {"name": "1307.3091.pdf", "metadata": {"source": "CRF", "title": "ARTIFICIAL INTELLIGENCE MARKUP LANGUAGE: A BRIEF TUTORIAL", "authors": ["Maria das Gra\u00e7as", "Bruno Marietto", "Rafael Varago de Aguiar", "Gislene de Oliveira Barbosa", "Wagner Tanaka Botelho", "Edson Pimentel", "Robson dos Santos Fran\u00e7a", "Vera L\u00facia da Silva"], "emails": ["@ufabc.edu.br", "rafael.varago@aluno.ufabc.edu.br", "robson@robsonfranca.eti.br", "verals@ifsp.edu.br"], "sections": [{"heading": null, "text": "KEYWORDS Artificial intelligence, Chatterbot, Pattern recognition, Artificial intelligence markup language (AIML), tutorial."}, {"heading": "1. INTRODUCTION", "text": "In today's globalized society, the increasing development and prevalence of forms of interaction such as natural, natural systems that have led to the creation of different types of communication between users in virtual environments. In this context, the cognitive interfaces have been designed for new forms of interaction between humans and machines. The Graphical User Interface (GUI) is based on navigation systems that use (i) hypertext and / or (ii) option of selecting with buttons / menus. These approaches require additional cognitive effort of users, since natural language is the usual type of communication between humans. Thus, more appropriate cognitive interfaces allow the establishment of dialogues in natural language, and also make the human-machine interaction more attractive and powerful in terms of empathy.In the context of ubiquitous computing, whose goal is to effectively integrate people and technology, the research has been made in relation to the development of \"natural interfaces.\" Such interactions make the user interaction more intuitive because the idea of the use of the usual idea of the interaction is."}, {"heading": "2. CHATTERBOTS AND PATTERN RECOGNITION", "text": "The proposal to have dialogues with computers dates back to the 1950s, when the British mathematician Alan Turing posed the question \"Can machines think?\" in the article \"Computing Machinery and Intelligence.\" [9] Turing proposed a test called the Imitation Game, now known as the Turing Test. The test consists in not distinguishing the interlocutor whether he is talking to a person or a machine. To reach him, the test is performed as follows: \u2022 A digital computer, a human and a judge (also human) are in other and isolated rooms; \u2022 The judge establishes a dialogue with the computer and the human being, through a terminal that uses a keyboard and a video monitor. \u2022 The computer passes the test if the judge is unable to tell whether the answers come from the human or from the computer."}, {"heading": "2.1. Pattern Recognition for Chatterbots Modeling", "text": "Among the theories and technologies used to develop chatterbots, Pattern Recognition is an example that aims to model computer systems based on the format of human dialogs.Pattern Recognition is based on representative stimulus-response blocks that the user enters into a sentence (stimulus) and the software produces an output (response) according to the user's input.And in this order, the dialog continues [6].The AIML language is used to develop chatterbots' KB when the chatterbot uses pattern recognition technology.The ALICE was the first chatterbot with an AIML language that KB implements. Its operation is divided into three steps. The first step is the question input by the user. In the second step, the system (i) executes word processing actions to adapt the user's input to a format specified by the designer and then presents the user's answer in the third step [iKB]."}, {"heading": "3. AIML LANGUAGE: SYNTAX AND SEMANTIC", "text": "The AIML language is used to simplify the task of dialog modeling according to the stimulus response approach. In addition, it is an XML-based markup language and a tag-based language. Tags are identifiers that are responsible for creating snippets of code and inserting commands into the chatterbot. AIML defines a data object class called AIML objects that is responsible for modeling conversation patterns [6]. Technically, AIML objects are language tags, and each tag corresponds to a language command. The general form of an AIML object / command / tag has the following structure: < command > ListOfParameter < / command > An AIML command consists of a start tag (< command >), a closing tag (< / command >) and a text (ListOfParameter / tag) that contains the parameters list of the AIML command."}, {"heading": "3.1. Language\u00b4s Vocabulary", "text": "In fact, it is such that most of them will be able to move to another world, in which they are able to change the world, in which they are able to change the world, in which they are able to change the world, in which they are able to change the world, in which they are able to change the world, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, that they live, in which they live, that they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they"}, {"heading": "4. USE OF AIML TAGS IN TREATMENT OF LIMITATIONS IN SEQUENCE OF CONVERSATION WITH CHATTERBOTS", "text": "This section presents the integrated use of AIML tags for the treatment of ambiguities. The aim is to show how AIML tags, in Section 3, can be used to model and implement efficient and robust chatterbots. Computer systems that work with natural languages should be able to deal with problems such as ambiguity, that is, more than a possible understanding of the intention that depends on the context (pragmatics), and so on."}, {"heading": "5. COMPUTER SYSTEMS FOR CHATTERBOTS IMPLEMENTATION", "text": "The AIML is an interpreted language. Interpretation is one of the processes in which the source code of a program is translated into the machine code in order to be executed on a computer. In the interpretation process, the interpreter program repeatedly executes the following sequence for each line of source code: (1) it captures the source code line of the program; (2) it checks and analyzes the line both syntactically and semantically; (3) if there are no errors, it translates into a binary language for further execution. The computer systems that support the implementation of the chat ban based on the AIML language have an interpreter in their structure. However, these systems differ and can be classified into the following categories: AIML editors and Chatterbots development platforms. In the following subsections, some examples of such software are presented and described."}, {"heading": "5.1. AIML Editors", "text": "AIML editors serve as test environments for AIML commands and the logic of the conversation sequence. AIML editors can be used to debug and improve the code during creation by the Chatterbot developers. These test environments reduce development time and save effort through software installation and configuration. Among the editors available in literature, it is worth mentioning: \u2022 GaitoBot [14]: This is an offline tool. In other words, it must be installed in a computer to be used. It is implemented in C # and is best suited for testing AIML code snippets. It also provides a set of graphical components (buttons, labels, etc.) that help with code writing. Instead of writing every AIML command, GaitoBot provides the chatterbot developer with a set of graphical components that contain AIML commands that represent the end of this Gaitterbot file."}, {"heading": "5.2. Development Platforms", "text": "A chatterbot development platform provides the AIML interpreter as well as a number of built-in technologies to reduce the cost and complexity of developing, deploying and managing such systems. Technologies that can be highlighted include database integration, web services for an online chatterbot, and recording conversations with users. Some development platforms are presented below: \u2022 ProgramD [16] consists of an Application Programming Interface (API) implemented in Java. \u2022 Program # [17] is an.NET platform AIML that allows the use of programming languages targeted at the.NET platform, such as # NEC, which is distributed as a DLL file, etc."}, {"heading": "6. CONCLUSIONS", "text": "This work underlined the importance of conversation software development, or more precisely chatterbots as computer agents for establishing dialogues in natural language between man and machine. Among chatterbot development theories, pattern recognition was outlined, based on representative stimulus response blocks. AIML language is one of the most widely used technologies for implementing chatterbots, combining the infrastructure of technical and theoretical pattern recognition in their development. In order to provide developers with a reference guide to guide them in the development of chatterbots, this work introduced the most important tags (commands) of AIML, so that the reader could develop chatterbots, build his own KB, and integrate them with the programming language of his / her choice, such as Java or C #."}], "references": [{"title": "The Simon Lave Page", "author": ["S. Laven"], "venue": "Available at: http://www.simonlaven.com, Accessed on", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "The Elements of AIML Style", "author": ["R. Wallace"], "venue": "ALICE A.I Foundation,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "One-Match and All-Match for Keywords in Chatbot", "author": ["A.S. Lokman", "J.M. Zain"], "venue": "American Journal of Applied Sciences,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Eliza \u2013 a Computer Program for Study of Natural Communication Between Man and Machine", "author": ["J. Weizenbaum"], "venue": "Communications of the Association for Computing Machinery,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1966}, {"title": "Chatterbots, Tinymuds, and Turing Test: Entering the Loebner Prize Competition", "author": ["M.L. Mauldin"], "venue": "National Conference of the American Association for Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1994}, {"title": "Conversation Analysis and Communication Disorders", "author": ["A. E"], "venue": "Schegloff", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2003}, {"title": "Program D, Available at: http://aitools.org/Program_D", "author": ["N. Bush"], "venue": "Accessed on", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Among the possible forms of natural user interfaces, this paper highlights the usage of chatterbots or computer systems that are designed to simulate a conversation with humans [1].", "startOffset": 177, "endOffset": 180}, {"referenceID": 1, "context": "Among these technologies, Wallace [6] in collaboration with free software developers\u2019 communities can be noticed.", "startOffset": 34, "endOffset": 37}, {"referenceID": 1, "context": "In the literature that presents the AIML concepts, there are tutorials that superficially introduce such concepts ([7]), or present the language concepts in detail ([6]).", "startOffset": 165, "endOffset": 168}, {"referenceID": 2, "context": "Additionally, another works focus on the usage of Pattern Recognition techniques [8], and the AIML language itself is addressed as a secondary topic.", "startOffset": 81, "endOffset": 84}, {"referenceID": 0, "context": "Laven [1] defines chatterbots as \u201c.", "startOffset": 6, "endOffset": 9}, {"referenceID": 3, "context": "In 1966 the ELIZA [10] chatterbot was developed by Joseph Weizenbaum and it poses as an early example of chatterbot design.", "startOffset": 18, "endOffset": 22}, {"referenceID": 4, "context": "JULIA chatterbot is an example of a second generation chatterbot developed by Michael Mauldin in 1994 [11].", "startOffset": 102, "endOffset": 106}, {"referenceID": 1, "context": "The forerunner of this generation was the ALICE [6], developed in 2000 by Richard Wallace in partnership with the AliceBot community.", "startOffset": 48, "endOffset": 51}, {"referenceID": 1, "context": "And in this sequence the dialogue carries on [6].", "startOffset": 45, "endOffset": 48}, {"referenceID": 1, "context": "Finally, one answer is presented to the user in the third step [6].", "startOffset": 63, "endOffset": 66}, {"referenceID": 1, "context": "AIML defines a data object class called AIML objects, which is responsible for modeling patterns of conversation [6].", "startOffset": 113, "endOffset": 116}, {"referenceID": 1, "context": "The following is presented a description of some <srai> tag applications as described in [6]: symbolic reduction, divide and conquer, synonyms resolution and keywords detection.", "startOffset": 89, "endOffset": 92}, {"referenceID": 1, "context": "According to [6], \u201cmany individual sentences may be reduced to two or more sub sentences, and the reply formed by combining the replies to each\u201d.", "startOffset": 13, "endOffset": 16}, {"referenceID": 5, "context": "Linguistic defines ambiguity as the characteristic of some terms or expressions to have a double meaning, that is, more than a possible understanding [13].", "startOffset": 150, "endOffset": 154}, {"referenceID": 6, "context": "Some development platforms are presented below: \u2022 ProgramD [16] consists of an API (Application Programming Interface) implemented in Java.", "startOffset": 59, "endOffset": 63}], "year": 2013, "abstractText": "The purpose of this paper is to serve as a reference guide for the development of chatterbots implemented with the AIML language. In order to achieve this, the main concepts in Pattern Recognition area are described because the AIML uses such theoretical framework in their syntactic and semantic structures. After that, AIML language is described and each AIML command/tag is followed by an application example. Also, the usage of AIML embedded tags for the handling of sequence dialogue limitations between humans and machines is shown. Finally, computer systems that assist in the design of chatterbots with the AIML language are classified and described.", "creator": "PDFCreator Version 1.6.2"}}}