{"id": "1307.3585", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Jul-2013", "title": "Improving MUC extraction thanks to local search", "abstract": "ExtractingMUCs(MinimalUnsatisfiableCores)fromanunsatisfiable constraint network is a useful process when causes of unsatisfiability must be understood so that the network can be re-engineered and relaxed to become sat- isfiable. Despite bad worst-case computational complexity results, various MUC- finding approaches that appear tractable for many real-life instances have been proposed. Many of them are based on the successive identification of so-called transition constraints. In this respect, we show how local search can be used to possibly extract additional transition constraints at each main iteration step. The approach is shown to outperform a technique based on a form of model rotation imported from the SAT-related technology and that also exhibits additional transi- tion constraints. Our extensive computational experimentations show that this en- hancement also boosts the performance of state-of-the-art DC(WCORE)-like MUC extractors.", "histories": [["v1", "Fri, 12 Jul 2013 21:28:05 GMT  (66kb)", "http://arxiv.org/abs/1307.3585v1", "17 pages, 5 figures, 1 table, 3 algorithms, 33 references"]], "COMMENTS": "17 pages, 5 figures, 1 table, 3 algorithms, 33 references", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["\\'eric gr\\'egoire", "jean-marie lagniez", "bertrand mazure"], "accepted": false, "id": "1307.3585"}, "pdf": {"name": "1307.3585.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["\u00c9ric Gr\u00e9goire", "Jean-Marie Lagniez"], "emails": ["gregoire@cril.fr", "lagniez@cril.fr", "mazure@cril.fr"], "sections": [{"heading": null, "text": "ar Xiv: 130 7.35 85v1 [cs.AI] 12 Ju"}, {"heading": "1 Introduction", "text": "In this paper, the focus is on unsatisfactory limitation networks. Specifically, a new approach for obtaining minimum cores (or, MUCs for minimum dissatisfaction) of limitation networks is proposed. A MUCs can be a cornerstone that cannot be satisfied all together. If the causes of dissatisfaction need to be understood, the network needs to be reconstructed and defused in order to become satisfactory. MUCs can be a cornerstone of dissatisfaction."}, {"heading": "2 Definitions and Notations", "text": "Restriction networks are defined as follows: Definition 1 (Restriction Network). A Restriction Network (CN) is a pair < X, C >, where 1. x is a finite set of variables. Each variable has a related finite instance domain, referred to as dom (x); 2. c is a finite set of constraints s.t. Each constraint c * C comprises a subset of variables of X, called scope, and designates scp (c). c translates an associated relationship that contains all values for the variables of scp (c) that meet c.A constraint network, in which the extent of all constraints is binary, can be represented by a non-oriented graph, where each variable is a node and each constraint is an edge. Example 1. Leave X = {lti, j, l, l, m} where each variable has the same domain."}, {"heading": "P = \u3008X , C\u3009 is an assignment of values to all variables of X . A solution to P is any assignment that satisfies all constraints of C.", "text": "One form of constraint satisfaction problem (CSP) is to check whether a constraint network P allows at least one solution. This decision problem is an NPcomplete problem. If P allows at least one solution, then P is called satisfiable else P, is called unsatisfactory. Definition 3 (Core and MUC) is unsatisfactory. If P = < X > be a constraint network, there is at least one minimum (w.r.t.) unsatisfactory core (short, MUC).Definition 3 (Core and MUC) is unsatisfactory."}, {"heading": "3 MUC Extraction", "text": "Most recent approaches to extracting an MUC from an unsatisfactory constraint network P start with calculating a core (which need not be minimal) of P. This step can be optional, as an unsatisfactory constraint network is already a core. However, during this step some information can be gathered to help guide the further minimization step. In this paper we will focus on this minimization step and use the WCORE Core Extractor introduced in [17] as a pre-processing step, which we will briefly describe below."}, {"heading": "3.1 WCORE as a pre-processing step", "text": "If the inadequacy of a constraint network P is demonstrated by a filter search algorithm, WCORE [17] provides a core of P consisting of all the constraints that were involved in proving the inadequacy, namely all the constraints used during the search to remove at least one value from the domain of a variable by propagation. Such constraints are referred to as active. Thus, if P is presented as unsatisfactory, active constraints form a core, since the other constraints are not actually part of this evidence of inconsistency. [17] \"s approach continues this process until a smaller set of active constraints is found. Consequently, at the end of this first step, constraints that are not active can be safely removed, while a remaining constraint network that is unsatisfactory remains."}, {"heading": "3.2 Minimization step", "text": "To achieve this, it might be necessary to verify whether or not a constraint belongs in the series of MUCs that are enclosed within a core, which is clearly a task in a network. In practice, this step is often based on identifying forms of transition barriers. Definition 4 (Transition Barriers). Let P = < X > an unsatisfactory constraint of transition barriers is a transition barrier of P iff exists an assignment of P such that a model of < X\\ {c}. Example 1 (cont'd) Consider again Fig 1 (a). c4 is a transition obstacle. In fact, P is unsatisfactory and A = {i = 2, j = 4} is a solution of. < < C > C is a transition obstacle."}, {"heading": "3.3 Recursive Model Rotation", "text": "Definition 5 (Transition Assignment) Let P = < X, C > be a core. Assignment A of P is a transitional assignment of P iff A that falsifies only one constraint in P.Property 2. Let P = < X, C > be a core and c > P. c is a transitional constraint of P iff, there is a transitional constraint of P that c. The proof is simple because c is a transitional constraint of P = < X, C > iff P is unsatisfactory and there is a solution A of < X, C\\ {c} > iff A only falsifies the constraint c of < X, C >. If a transitional constraint is found, the model rotation constraint of P."}, {"heading": "4 Local Search for Transition Constraints", "text": "In the following, we present a new approach to calculating an MUC, although the transition phase is very narrow, relying on stochastic local search (in short, SLS) as the core method. Whenever SLS achieves an assignment that meets exactly one condition, it is a transition barrier and belongs to the last MUC. Obviously, such assignment is a local minimum for SLS, which can then explore neighborhood mappings, including other possible transition processes that would need to be detected by recursive model rotation. Therefore, we have explored a generic approach based on SLS, which we call Local Search for Transition Controls. Local Search in the SAT and CSP domains is usually implemented as a tool to search for a model. On the contrary, we make use of SLS to form the neighborhood of a transition control in the search for further transition controls."}, {"heading": "5 Dichotomy Core Extraction with Local Search", "text}, {"heading": "6 Experimental Results", "text": "In order to evaluate and compare the actual efficiency of the local search approach with other methods (especially with the DC model), we have considered all benchmarks from recent CSP competitions [6,7], 2 which consider a binary and non-binary method, whereas other CSP instances are considered. Of these instances, only the 772 benchmarks that were achieved in less than 300 seconds using our own C + + RCLCSP3 CSP solution are used. RCLCSP implements MAC Embedding AC3 and makes use of the variable order heuristic. Three approaches to MUC extraction have been implemented and compared experimentally: (1) DC (WCORE), namely a destructive strategy with WCORE."}, {"heading": "7 Perspectives and conclusion", "text": "The local search scheme proposed in this paper clearly improves the recovery of a MUC through destructive strategies and opens up many perspectives. Although dichotomy strategies as examined in this paper are known to be the most efficient, it might be interesting to switch this local search scheme to constructive or QuickXplainlike methods. Also, note that we have not tried to refine the various parameters of this local search scheme. In this respect, it would be interesting to develop forms of dynamic settings for these parameters that better take into account the recorded information about the previous search steps, as examined in [14]. In the future, we plan to explore more advanced concepts related to transitional constraints in order to better steer the local search towards promising parts of the search space. In particular, so-called critical clauses [12] in the Boolean framework could be generalized in different ways in the complete network environment."}, {"heading": "Acknowledgements", "text": "This work has been supported in part by grants from the Nord / Pas-de-Calais region and by grants from the European Federation."}], "references": [{"title": "Boosting local search thanks to CDCL", "author": ["Gilles Audemard", "Jean-Marie Lagniez", "Bertrand Mazure", "Lakhdar Sa\u0131\u0308s"], "venue": "In 17th International Conference on Logic for Programming, Artificial Intelligence and Reasoning", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Diagnosing and solving over-determined constraint satisfaction problems", "author": ["Ren\u00e9 R. Bakker", "F. Dikker", "Frank Tempelman", "Petronella Maria Wognum"], "venue": "In Proceedings of the 13th International Joint Conference on Artificial Intelligence (IJCAI\u201993),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1993}, {"title": "Towards efficient MUS extraction", "author": ["Anton Belov", "In\u00eas Lynce", "Jo\u00e3o Marques Silva"], "venue": "AI Communications,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "MUSer2: An efficient MUS extractor, system description", "author": ["Anton Belov", "Jo\u00e3o Marques Silva"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation JSAT,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Accelerating MUS extraction with recursive model rotation", "author": ["Anton Belov", "Jo\u00e3o P. Marques Silva"], "venue": "In Proceedings of the International Conference on Formal Methods in ComputerAided Design", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Explanation-based generalization of failures", "author": ["J.L. de Siqueira N", "Jean-Fran\u00e7ois Puget"], "venue": "In Proceedings of the Eighth European Conference on Artificial Intelligence", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1988}, {"title": "On the complexity of propositional knowledge base revision, updates and counterfactual", "author": ["Thomas Eiter", "Georg Gottlob"], "venue": "Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1992}, {"title": "Extracting MUSes", "author": ["\u00c9. Gr\u00e9goire", "B. Mazure", "C. Piette"], "venue": "In Proceedings of the 17th European Conference on Artificial Intelligence", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}, {"title": "A CSP solver focusing on FAC variables", "author": ["\u00c9ric Gr\u00e9goire", "Jean-Marie Lagniez", "Bertrand Mazure"], "venue": "In 17th International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "Extracting MUSes", "author": ["\u00c9ric Gr\u00e9goire", "Bertrand Mazure", "C\u00e9dric Piette"], "venue": "European Conference on Artificial Intelligence", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2006}, {"title": "On finding minimally unsatisfiable cores of CSPs", "author": ["\u00c9ric Gr\u00e9goire", "Bertrand Mazure", "C\u00e9dric Piette"], "venue": "International Journal on Artificial Intelligence Tools (IJAIT),", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "A new heuristic-based albeit complete method to extract MUCs from unsatisfiable CSPs", "author": ["\u00c9ric Gr\u00e9goire", "Bertrand Mazure", "C\u00e9dric Piette", "Lakhdar Sa\u0131\u0308s"], "venue": "In Proceedings of the IEEE International Conference on Information Reuse and Integration", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2006}, {"title": "Boosting systematic search by weighting constraints", "author": ["Fred H\u00e9mery", "Christophe Lecoutre", "Lakhdar Sa\u0131\u0308s", "Fr\u00e9d\u00e9ric Boussemart"], "venue": "In Proceedings of the 16th European Conference on Artificial Intelligence", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2004}, {"title": "Extracting MUCs from constraint networks", "author": ["Fred H\u00e9mery", "Christophe Lecoutre", "Lakhdar Sa\u0131\u0308s", "Fr\u00e9d\u00e9ric Boussemart"], "venue": "In 17th European Conference on Artificial Intelligence", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "QuickXplain: Conflict detection for arbitrary constraint propagation algorithms. In IJCAI\u201901 Workshop on Modelling and Solving Problems with Constraints", "author": ["Ulrich Junker"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2001}, {"title": "QuickXplain: Preferred explanations and relaxations for over-constrained problems", "author": ["Ulrich Junker"], "venue": "In Proceedings of the 19th National Conference on Artificial Intelligence", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2004}, {"title": "The PaLM system: explanation-based constraint programming. In Proceedings of TRICS: Techniques foR Implementing Constraint programming Systems, a post-conference workshop of CP\u201900", "author": ["Narendra Jussien", "Vincent Barichard"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2000}, {"title": "A data structure boosting the performance of local search for CSP solving", "author": ["Jean-Marie Lagniez", "\u00c9ric Gr\u00e9goire", "Bertrand Mazure"], "venue": "In International Conference on Metaheuristics and Nature Inspired Computing (META\u201912),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "On computing minimum unsatisfiable cores", "author": ["In\u00eas Lynce", "Jo\u00e3o P. Marques Silva"], "venue": "In Proceedings of the 7th International Conference on Theory and Applications of Satisfiability Testing (SAT\u201904),", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2004}, {"title": "Minimal sets over monotone predicates in boolean formulae", "author": ["Jo\u00e3o Marques-Silva", "Mikol\u00e1\u0161", "Anton Belov"], "venue": "In Proceedings of the 25th International Conference on Computer-Aided Verification (CAV\u20192013),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2013}, {"title": "Evidence for invariants in local search", "author": ["David McAllester", "Bart Selman", "Henry A. Kautz"], "venue": "In Fourteenth National Conference on Artificial Intelligence", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1997}, {"title": "The breakout method for escaping from local minima", "author": ["Paul Morris"], "venue": "In Proceedings of the Eleventh National Conference on Artificial Intelligence", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1993}, {"title": "The complexity of facets resolved", "author": ["Christos H. Papadimitriou", "David Wolfe"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1988}, {"title": "Faster extraction of high-level minimal unsatisfiable cores", "author": ["Vadim Ryvchin", "Ofer Strichman"], "venue": "In Proceedings of the 14th International Conference on Theory and Applications of Satisfiability Testing", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2011}, {"title": "Noise strategies for improving local search", "author": ["Bart Selman", "Henry A. Kautz", "Bram Cohen"], "venue": "In Twelfth National Conference on Artificial Intelligence", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1994}, {"title": "Understanding, improving and parallelizing MUS finding using model rotation", "author": ["Wieringa Siert"], "venue": "In 18th International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2012}, {"title": "On improving MUS extraction algorithms. In Theory and Applications of Satisfiability Testing (SAT\u201911)", "author": ["Jo\u00e3o P. Marques Silva", "In\u00eas Lynce"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2011}, {"title": "On improving MUS extraction algorithms", "author": ["Jo\u00e3o P. Marques Silva", "In\u00eas Lynce"], "venue": "In Proceedings of the 14th International Conference on Theory and Applications of Satisfiability Testing", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2011}, {"title": "Finding guaranteed MUSes fast", "author": ["Hans Van Maaren", "Siert Wieringa"], "venue": "In Proceedings of the 11th International Conference on Theory and Applications of Satisfiability Testing", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2008}], "referenceMentions": [{"referenceID": 5, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 1, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 16, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 14, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 15, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 13, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 11, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 10, "context": "Despite bad worst-case computational complexity results, various approaches for extracting one MUC have been proposed that appear tractable for many instances [8,2,21,20,18,19,17,15,14].", "startOffset": 159, "endOffset": 185}, {"referenceID": 13, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 93, "endOffset": 100}, {"referenceID": 10, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 93, "endOffset": 100}, {"referenceID": 18, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 9, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 28, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 18, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 23, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 3, "context": "Powerful approaches to MUC extraction are founded on transition constraints, both in the CSP [17,14] and the SAT [23,12,13,33,23,28,4] domains.", "startOffset": 113, "endOffset": 134}, {"referenceID": 27, "context": "In this last area, a recent approach [32,5] focuses on the following intuition.", "startOffset": 37, "endOffset": 43}, {"referenceID": 4, "context": "In this last area, a recent approach [32,5] focuses on the following intuition.", "startOffset": 37, "endOffset": 43}, {"referenceID": 13, "context": "The technique is put in work in a so-called dichotomy destructive strategy \u00e0 la DC(WCORE) [17] to extract one MUC.", "startOffset": 90, "endOffset": 94}, {"referenceID": 4, "context": "Extensive computational experimentations show that this approach outperforms both the model rotation technique from [5] and the performance of state-of-the-art MUC extractors.", "startOffset": 116, "endOffset": 119}, {"referenceID": 22, "context": "Indeed, checking whether a constraint network is a MUC is DP-complete [27].", "startOffset": 70, "endOffset": 74}, {"referenceID": 13, "context": "In this paper, we focus on this minimization step and make use of the WCORE core extractor introduced in [17] as a preprocessing step, that we briefly describe hereafter.", "startOffset": 105, "endOffset": 109}, {"referenceID": 13, "context": "When the unsatisfiability of a constraint network P is proved thanks to a filtering search algorithm, WCORE [17] delivers a core of P that is formed of all the constraints that have been involved in the proof of unsatisfiability, namely all the constraints that have been used during the search to remove by propagation at least one value from the domain of any variable.", "startOffset": 108, "endOffset": 112}, {"referenceID": 13, "context": "The approach from [17] iterates this process until no smaller set of active constraints is found.", "startOffset": 18, "endOffset": 22}, {"referenceID": 12, "context": "WCORE takes advantage of the powerful dom/wdeg heuristic [16] (see also variants in e.", "startOffset": 57, "endOffset": 61}, {"referenceID": 10, "context": "[14]), which consists in attaching to each constraint a counter initialized to 1 and that is incremented each time the corresponding constraint is involved in a conflict.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "Accordingly, it is proposed in [17] to weigh the constraints via the dom/deg", "startOffset": 31, "endOffset": 35}, {"referenceID": 6, "context": "To this end, it might be necessary to check whether a constraint belongs or not to the set of MUCs included within a core, which is a task in \u03a3 2 [9].", "startOffset": 146, "endOffset": 149}, {"referenceID": 5, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 1, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 16, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 14, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 13, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 10, "context": "either so-called destructive or constructive approaches [8,2,20,18,17,14].", "startOffset": 56, "endOffset": 73}, {"referenceID": 5, "context": "For example, the constructive approaches (as in [8]) successively insert constraints taken from the core into a set of constraints until this latter set becomes unsatisfiable.", "startOffset": 48, "endOffset": 51}, {"referenceID": 1, "context": "At the opposite, destructive approaches [2] successively remove constraints from the initial core until the current network becomes satisfiable.", "startOffset": 40, "endOffset": 43}, {"referenceID": 13, "context": "It is also possible to use a dichotomy strategy in order to find out transition constraints [17].", "startOffset": 92, "endOffset": 96}, {"referenceID": 15, "context": "QuickXplain [19,24] and the combined approach [14].", "startOffset": 12, "endOffset": 19}, {"referenceID": 19, "context": "QuickXplain [19,24] and the combined approach [14].", "startOffset": 12, "endOffset": 19}, {"referenceID": 10, "context": "QuickXplain [19,24] and the combined approach [14].", "startOffset": 46, "endOffset": 50}, {"referenceID": 26, "context": "The model rotation approach (MR) has been introduced in [31].", "startOffset": 56, "endOffset": 60}, {"referenceID": 4, "context": "In [5], it is proposed to recursively perform model rotation.", "startOffset": 3, "endOffset": 6}, {"referenceID": 3, "context": ", [4] [3] and [30] for more on the use of model rotation to extract MUSes.", "startOffset": 2, "endOffset": 5}, {"referenceID": 2, "context": ", [4] [3] and [30] for more on the use of model rotation to extract MUSes.", "startOffset": 6, "endOffset": 9}, {"referenceID": 25, "context": ", [4] [3] and [30] for more on the use of model rotation to extract MUSes.", "startOffset": 14, "endOffset": 18}, {"referenceID": 21, "context": "Although its escape strategy is close to the so-called breakout method [26], the end criterion was modified in order to allow SLS to focus and stress on parts of the search space that are expectedly very informative, as proposed in [11,1].", "startOffset": 71, "endOffset": 75}, {"referenceID": 8, "context": "Although its escape strategy is close to the so-called breakout method [26], the end criterion was modified in order to allow SLS to focus and stress on parts of the search space that are expectedly very informative, as proposed in [11,1].", "startOffset": 232, "endOffset": 238}, {"referenceID": 0, "context": "Although its escape strategy is close to the so-called breakout method [26], the end criterion was modified in order to allow SLS to focus and stress on parts of the search space that are expectedly very informative, as proposed in [11,1].", "startOffset": 232, "endOffset": 238}, {"referenceID": 24, "context": "The local search is a standard basic random-walk procedure [29] where the objective function has thus been modified in order to take a specific weigh on each constraint into account.", "startOffset": 59, "endOffset": 63}, {"referenceID": 7, "context": "Noticeably, this approach differs from [10,13] where a different form of SLS was used to extract MUSes.", "startOffset": 39, "endOffset": 46}, {"referenceID": 7, "context": "First, [10,13] was dedicated to the Boolean case using specific features of the clausal Boolean framework: extending it to the general constraint networks setting while still obtaining acceptable running times for many real-life instances remains an open challenge.", "startOffset": 7, "endOffset": 14}, {"referenceID": 7, "context": "Finally, [10] and [13] were based on the so-called critical clause concept", "startOffset": 9, "endOffset": 13}, {"referenceID": 13, "context": "Let us stress that this algorithm differs from the dichotomy destructive strategy DC(WCORE) in [17] according to the colorized lines (namely lines 3, 11 and 12), only.", "startOffset": 95, "endOffset": 99}, {"referenceID": 13, "context": "Three approaches to the MUC extraction problem have been implemented with RCLCSP as kernel and experimentally compared: (1) DC(WCORE) [17], namely a dichotomy destructive strategy with WCORE as a preprocessing step, without any form of model rotation or local search to find out additional transition constraints, (2) DC(WCORE) + Rec-MR and (3) DC(WCORE)+LSTC.", "startOffset": 134, "endOffset": 138}, {"referenceID": 20, "context": "Furthermore, rnovelty [25] was used as local-search escape criterion and the advanced data structures proposed in", "startOffset": 22, "endOffset": 26}, {"referenceID": 17, "context": "[22] have been implemented.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "First, similarly to the SAT setting for model rotation [5], recursive model rotation improves performance in the sense that DC(WCORE)+RecMR found a MUC for 632 instances whereas DC(WCORE) solved 609 instances, only.", "startOffset": 55, "endOffset": 58}, {"referenceID": 10, "context": "In this respect, it would be interesting to devise forms of dynamical settings for these parameters that better take the recorded information about the previous search steps into account, as explored in [14].", "startOffset": 203, "endOffset": 207}, {"referenceID": 9, "context": "Especially, so-called critical clauses [12] in the Boolean framework could be generalized in various ways in the full constraint networks setting.", "startOffset": 39, "endOffset": 43}], "year": 2013, "abstractText": "Extracting MUCs (Minimal Unsatisfiable Cores) from an unsatisfiable constraint network is a useful process when causes of unsatisfiability must be understood so that the network can be re-engineered and relaxed to become satisfiable. Despite bad worst-case computational complexity results, various MUCfinding approaches that appear tractable for many real-life instances have been proposed. Many of them are based on the successive identification of so-called transition constraints. In this respect, we show how local search can be used to possibly extract additional transition constraints at each main iteration step. The approach is shown to outperform a technique based on a form of model rotation imported from the SAT-related technology and that also exhibits additional transition constraints. Our extensive computational experimentations show that this enhancement also boosts the performance of state-of-the-art DC(WCORE)-like MUC extractors.", "creator": "gnuplot 4.4 patchlevel 3"}}}