{"id": "1308.0183", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Aug-2013", "title": "An n-ary Constraint for the Stable Marriage Problem", "abstract": "We present an n-ary constraint for the stable marriage problem. This constraint acts between two sets of integer variables where the domains of those variables represent preferences. Our constraint enforces stability and disallows bigamy. For a stable marriage instance with $n$ men and $n$ women we require only one of these constraints, and the complexity of enforcing arc-consistency is $O(n^2)$ which is optimal in the size of input. Our computational studies show that our n-ary constraint is significantly faster and more space efficient than the encodings presented in \\cite{cp01}. We also introduce a new problem to the constraint community, the sex-equal stable marriage problem.", "histories": [["v1", "Thu, 1 Aug 2013 12:56:47 GMT  (27kb)", "http://arxiv.org/abs/1308.0183v1", "7 pages. The Fifth Workshop on Modelling and Solving Problems with Constraints, held at the 19th International Joint Conference on Artificial Intelligence (IJCAI 2005)"]], "COMMENTS": "7 pages. The Fifth Workshop on Modelling and Solving Problems with Constraints, held at the 19th International Joint Conference on Artificial Intelligence (IJCAI 2005)", "reviews": [], "SUBJECTS": "cs.DS cs.AI", "authors": ["chris unsworth", "patrick prosser"], "accepted": false, "id": "1308.0183"}, "pdf": {"name": "1308.0183.pdf", "metadata": {"source": "CRF", "title": "An n-ary Constraint for the Stable Marriage Problem", "authors": ["Chris Unsworth", "Patrick Prosser"], "emails": ["chrisu@dcs.gla.ac.uk", "pat@dcs.gla.ac.uk"], "sections": [{"heading": null, "text": "ar Xiv: 130 8.01 83v1 [cs.DS] 1A ug2 01"}, {"heading": "1 Introduction", "text": "The problem then is that there is an assignment of men to women who are so stable that they prefer their current partners, and that there is no incentive for them to divorce. It is an assignment that is unstable if there are two couples (mi, wj, wl), so that they prefer their current partners, and she prefers mi to their current partner mk. Figure 1 is an instance of the stable marriage problem and has 6 men and 6 women. Figure 1 shows the problem first with each man and woman listing their preferences. Figure 2 shows the intersection of the male and female genders."}, {"heading": "2 The Extended Gale-Shapley Algorithm (EGS)", "text": "We describe the male-oriented Gale-Shapley (EGS) algorithm (shown in Figure 3). In particular, we explain what is meant by a proposal, an obligation, and for a man to become free. We will use this later to show that this algorithm and our limitations are equivalent. The EGS algorithm [5] produces a stable agreement between men m1 to mn and women w1 to wn, where each man (woman) puts each of the women (men) in a preferred order. Via process of proposals from men to women provides the reduced preference lists, known as GS lists."}, {"heading": "3 Preliminaries", "text": "In fact, it is a kind of conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy theory, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy, a conspiracy."}, {"heading": "4 An n-ary Stable Marriage Constraint (SM2N)", "text": "We will now give a description of our n-ary stable marriage restriction, in which the arc consistency on such a coding is equivalent to an application of the male-oriented EGS algorithm. 2The inversion of the preference lists can be generated when reading the preference lists in such a way that mPw [i] [mpl [i] [j]] = j, and this does not affect the overall complexity of the construction of our model. Note that the restriction, as it is minimally described, cannot be used within a search process, but we will show later how this can be done. Our limitation is that it restricts n men and n women in such a way that stability is maintained and bigamy is forbidden, even though it only achieves 2 consistency. 3 In a stable marriage problem with n men and n women, we then need only one of these restrictions. We will now begin with the description of the attributes of the restriction and the three methods that affect it."}, {"heading": "4.1 The attributes", "text": "An n-ary stable marriage condition (SM2N) is an object that acts between n men and n women and has the following attributes: \u2022 x and y are restricted integer variable arrays that represent the men and women who are restricted, so that x [i] is the restricted integer variable that corresponds to mi and y [j] wj. \u2022 xpl and ypl are two-dimensional integer arrays that each contain the male and female preference lists, so that xpl [i] is equal to PL (mi) and xpl [i] [j] contains the preference of man i for the jte woman of mi. \u2022 yub is a set of integer variables that contain the previous upper limits of all y variables, all set to n at the beginning of the search and updated by the method given below (deli)."}, {"heading": "4.2 The propagation methods", "text": "We now describe three methods that a male oriented arc consistency.deltaj min (i) This method is called when the lower limit of dom (x [i]) increases. Increasing the lower limit of dom (x [i]) means that mi was rejected from his preferred partner choice and therefore had to make a proposal to his new preferred available partner. To do this, we first find mi's preferred available partner wj (line 2), then we remove all men from the list of wj who dislike her less than mi (line 3).1. deltaMin (i) 2. j = xPy [i] [getMin (x [i]] 3. setMax (y [j], yPx [j] [i]) [j] deltaMax indom (y [j])), this method is called when the upper limit of dom (y [j] is decreased. To get consistency wj wj wj [n], the consistency must be removed from each of the lower limit (dey), once the consistency is removed from all men."}, {"heading": "5 Comparison to EGS", "text": "We compare the behavior of our n-restriction model (SM2N) with the male-oriented EGS algorithm. In our comparison, we will describe steps in the EGS algorithm in italics and the SM2N constraint in such a way that the preferred encoding is in normal font. Sometimes, we will use m and w as a specific person (instead of mi and wj) and remove x and y as certain variables (instead of x [i] and y [j]) that are least preferred for brevity reasons. Additionally, we will assume that we have the function fiance (y [i]) and that it delivers the integer k, where k = wpl [i] [max.] [max.] [dom [i]]], i.e. x [k] is the least preferred partner of y [i]. \u2022 First, the EGS algorithm sets all men free by adding them to the free list (line 1)."}, {"heading": "6 Arc-consistency in the Model", "text": "When completing the arc consistency processing, the variable domains can be considered GS domains, that is, a \"dom\" (x [i]) \"wj\" GS (mi) \"mpl\" (i] [a]. In addition, the \"GS domains\" are so consistent that if the man is married to a woman, wj (i) \"a\" dom \"(x [i])\" a \"dom\" (x [i]) \"(i)\" mpl \"(i)\" (a) then any woman \"wl\" can marry a man without forming a blocking couple or a bigamous relationship. \"That is, for an arbitrary woman\" wl \"there is a value b\" dom \"(y [l]), so that k = wpl is\" stiff \"(l)."}, {"heading": "7 Complexity of the model", "text": "In [5] Section 1.2.3 it is shown that in the worst-case scenario there are at most n (n \u2212 1) + 1 suggestions that the EGS algorithm can make, and that the complexity is then O (n2). We argue that the complexity of our SM2N encoding is also O (n2). First, we claim that the call of our method deltaMin () corresponds to the complexity O (1). The deltaMax () method is the complexity O (r), where r is the number of values that have been removed from the tail of the variable since the last call of deltaMax () for this variable. Since there are n values in the range of the variable y, the complexity of all possible calls to deltaMax (j) O (n). Likewise, there are n values in the range of the variable x, and thus the worse complexity for all possible calls to deltaMin (i) O (n)."}, {"heading": "8 Enhancing the model", "text": "This year, it has come to the point where it can only take a few days to get a result."}, {"heading": "No enhancements to deltaMax(j)", "text": "We consider the situation in which a process, unlike a proposal, removes the values from the tail of the dome (y [j]), i.e., when the maximum value of the dome (y [j]) changes. The deltaMax method is called, and the instance remains stable, since all values that remain in dom (y [j]) correspond to the removed values. However, we must prevent bigamy by removing the incomplete preference lists (x) from the tail of the dome, and that is exactly what deltaMax does. Therefore, no improvement is needed. Incomplete lists (SMI) The encoding can also deal with incomplete preference lists, i.e. the instances of stable marriage problems with incomplete lists (SMI)."}, {"heading": "9 Computational Experience", "text": "This year, it has come to the point that it will only be a matter of time before it is ready, until it is ready."}, {"heading": "10 Sex equal optimisation", "text": "In fact, the fact is that most of them will be able to demonstrate that they are able, that they are able to assert themselves, and that they are able to achieve their goals."}, {"heading": "11 Implementation", "text": "The SM2N constraint was originally developed using the Choco constraints toolkit, and the way in which the constraint was introduced reflects this. To implement a custom constraint, the abstractLargeIntConstraint class is extended, which contains the methods awake, awakeOnInf, awakeOnSup, awakeOnRem, and awakeOnInst. These methods are the same as those used to introduce the constraint. awake is the same as init, awakeOnInf, and awakeOnSup are the same as deltaMin, and deltaMax, and awakeOnInst is the same as inst. To implement a constraint in Ilog JSolver, we first specify when the constraint needs to be propagated, i.e. when a domain value is removed when the range changes (i.e. the upper or lower limit changes), or only when a variable becomes inconstant."}, {"heading": "12 Conclusion", "text": "Our experience has shown that this constraint can be implemented in a variety of constraint programming toolkits, such as JSolver, JChoco, and Koalog. The complexity of the constraint is O (n2). Although this theoretically corresponds to the optimal O (n2) complexity of the Boolean encoding in [3], our constraint is more practical and can usually solve larger problems faster. For example, we could list all solutions for cases of size 2000 in seconds, while in [4] the biggest problems investigated were size 60. We also presented the first study of SESMP that used a constraint, i.e. where stable constraints are part of a broader problem."}, {"heading": "Acknowledgements", "text": "We would like to thank ILOG SA for providing the JSolver toolkit through an Academic Grant license and our four reviewers."}], "references": [{"title": "College admissions and the stability of marriage", "author": ["D. Gale", "L.S. Shapley"], "venue": "American Mathematical Monthly,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1962}, {"title": "A constraint programming approach to the stable marriage problem", "author": ["I.P. Gent", "R.W. Irving", "D.F. Manlove", "P. Prosser", "B.M. Smith"], "venue": "In CP\u201901,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2001}, {"title": "An empirical study of the stable marriage problem with ties and incomplete lists", "author": ["I.P. Gent", "P. Prosser"], "venue": "In ECAI\u201902,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "The Stable Marriage Problem: Structure and Algorithms", "author": ["D. Gusfield", "R.W. Irving"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1989}, {"title": "Complexity of the sex-equal stable marriage problem", "author": ["Akiko Kato"], "venue": "Japan Journal of Industrial and Applied Mathematics (JJIAM),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1993}, {"title": "Consistency in networks of relations", "author": ["A.K. Mackworth"], "venue": "Artificial Intelligence,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1977}, {"title": "A specialised binary constraint for the stable marriage problem", "author": ["C. Unsworth", "P. Prosser"], "venue": "In SARA05,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2005}, {"title": "A generic arc-consistency algorithm and its specializations", "author": ["Pascal van Hentenryck", "Yves Deville", "Choh-Man Teng"], "venue": "Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1992}], "referenceMentions": [{"referenceID": 1, "context": "Our computational studies show that our n-ary constraint is significantly faster and more space efficient than the encodings presented in [3].", "startOffset": 138, "endOffset": 141}, {"referenceID": 3, "context": "Figure 2 shows the intersection of the male and female-oriented GaleShapley lists (GS-lists) [5], where the GS-lists are reduced preference lists.", "startOffset": 93, "endOffset": 96}, {"referenceID": 1, "context": "Our empirical results suggest, that although our encodings has O(n) time complexity, the same as the optimal encoding proposed in [3], our constraint significantly outperforms this encoding in both space and time.", "startOffset": 130, "endOffset": 133}, {"referenceID": 3, "context": "The EGS algorithm [5] produces a stable matching between men m1 to mn and women w1 to wn, where each man (woman) ranks each of the women (men) into preference order.", "startOffset": 18, "endOffset": 21}, {"referenceID": 1, "context": "Using our problem in Figure 1, if we consider our 3 man he will have a preference list mpl[3] = (1, 4, 5, 3, 6, 2).", "startOffset": 90, "endOffset": 93}, {"referenceID": 1, "context": "Again, considering the 3 man in Figure 1, his inverse preference list will be mPw[3] = (1, 6, 4, 2, 3, 5), mPw[3][2] is his preference for the 2 woman, and that is 6, i.", "startOffset": 81, "endOffset": 84}, {"referenceID": 1, "context": "Again, considering the 3 man in Figure 1, his inverse preference list will be mPw[3] = (1, 6, 4, 2, 3, 5), mPw[3][2] is his preference for the 2 woman, and that is 6, i.", "startOffset": 110, "endOffset": 113}, {"referenceID": 0, "context": "Again, considering the 3 man in Figure 1, his inverse preference list will be mPw[3] = (1, 6, 4, 2, 3, 5), mPw[3][2] is his preference for the 2 woman, and that is 6, i.", "startOffset": 113, "endOffset": 116}, {"referenceID": 0, "context": "For example, if x[2] (in Figure 1) is set to 3 then this corresponds to m2 marrying his 3 choice, w1 (and conversely y[1] would then have to be assigned the value 5).", "startOffset": 17, "endOffset": 20}, {"referenceID": 4, "context": "Again referring to Figure 1 our 6 man\u2019s domain is dom(x[6]) = (1, 2, 3, 4, 5, 6), as is everyone else\u2019s, and in Figure 2 dom(x[6]) = (1, 4, 5).", "startOffset": 55, "endOffset": 58}, {"referenceID": 4, "context": "Again referring to Figure 1 our 6 man\u2019s domain is dom(x[6]) = (1, 2, 3, 4, 5, 6), as is everyone else\u2019s, and in Figure 2 dom(x[6]) = (1, 4, 5).", "startOffset": 126, "endOffset": 129}, {"referenceID": 7, "context": "We assume that constraints are processed by an arcconsistency algorithm such as AC5 [9] or AC3 [7].", "startOffset": 84, "endOffset": 87}, {"referenceID": 5, "context": "We assume that constraints are processed by an arcconsistency algorithm such as AC5 [9] or AC3 [7].", "startOffset": 95, "endOffset": 98}, {"referenceID": 1, "context": "This is so because by maintaining 2-consistency, and using a suitable value ordering heuristic in the model during search we are guaranteed failure-free enumeration of all solutions [3].", "startOffset": 182, "endOffset": 185}, {"referenceID": 3, "context": "In [5] Theorem 1.", "startOffset": 3, "endOffset": 6}, {"referenceID": 3, "context": "In [5] section 1.", "startOffset": 3, "endOffset": 6}, {"referenceID": 3, "context": "It has been proven that the same lists can be produced by running the female orientated version of EGS on the male-oriented GS-lists [5].", "startOffset": 133, "endOffset": 136}, {"referenceID": 6, "context": "In a previous paper [8] we presented a specialised binary constraint (SM2) for the stable marriage problem, and presented some results comparing the SM2 constraint with the two constraint encoding in [3].", "startOffset": 20, "endOffset": 23}, {"referenceID": 1, "context": "In a previous paper [8] we presented a specialised binary constraint (SM2) for the stable marriage problem, and presented some results comparing the SM2 constraint with the two constraint encoding in [3].", "startOffset": 200, "endOffset": 203}, {"referenceID": 1, "context": "The other model shown in the results table is the optimal boolean encoding (Bool) as presented in [3].", "startOffset": 98, "endOffset": 101}, {"referenceID": 3, "context": "The sex equal stable marriage problem (SESMP) as posed in [5] as an open problem, is essentially an optimisation problem.", "startOffset": 58, "endOffset": 61}, {"referenceID": 4, "context": "This problem has been proven to be NP-Hard [6].", "startOffset": 43, "endOffset": 46}, {"referenceID": 6, "context": "These results can be compared to those in Figure 6 of [8], where the Bool encoding failed to model problems with 300 or more men and women, and at n = 1000 the SM2 model was more than 15 times slower than the SM2N model.", "startOffset": 54, "endOffset": 57}, {"referenceID": 1, "context": "Although this is theoretically equal to the optimal O(n) complexity of the Boolean encoding in [3], our constraint is more practical, typically being able to solve larger problems faster.", "startOffset": 95, "endOffset": 98}, {"referenceID": 2, "context": "For example, we have been able to enumerate all solutions to instances of size 2000 in seconds, whereas in [4] the largest problems investigated were of size 60.", "startOffset": 107, "endOffset": 110}], "year": 2013, "abstractText": "We present an n-ary constraint for the stable marriage problem. This constraint acts between two sets of integer variables where the domains of those variables represent preferences. Our constraint enforces stability and disallows bigamy. For a stable marriage instance with n men and n women we require only one of these constraints, and the complexity of enforcing arc-consistency is O(n) which is optimal in the size of input. Our computational studies show that our n-ary constraint is significantly faster and more space efficient than the encodings presented in [3]. We also introduce a new problem to the constraint community, the sexequal stable marriage problem.", "creator": "LaTeX with hyperref package"}}}