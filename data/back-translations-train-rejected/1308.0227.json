{"id": "1308.0227", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Aug-2013", "title": "An Enhanced Features Extractor for a Portfolio of Constraint Solvers", "abstract": "Recent research has shown that the performances of a single arbitrarily efficient solver can be significantly outperformed by a portfolio of possibly slower on-average solvers. The solver selection is usually done by using machine learning techniques which exploit features extracted from the problem specification. In this paper we present a tool that is able to extract an extensive set of features from a Constraint Satisfaction Problem (CSP) defined either in the MiniZinc format or in the XCSP format. We also report some empirical results showing that the performances that can be obtained using these features are competitive with state of the art CSP portfolio techniques.", "histories": [["v1", "Thu, 1 Aug 2013 14:40:14 GMT  (208kb,D)", "http://arxiv.org/abs/1308.0227v1", null], ["v2", "Thu, 19 Sep 2013 14:53:58 GMT  (112kb,D)", "http://arxiv.org/abs/1308.0227v2", null], ["v3", "Wed, 2 Oct 2013 07:33:15 GMT  (112kb,D)", "http://arxiv.org/abs/1308.0227v3", null], ["v4", "Fri, 22 Nov 2013 00:53:57 GMT  (186kb,D)", "http://arxiv.org/abs/1308.0227v4", null], ["v5", "Thu, 19 Dec 2013 23:57:50 GMT  (133kb,D)", "http://arxiv.org/abs/1308.0227v5", null], ["v6", "Sat, 29 Mar 2014 07:54:42 GMT  (134kb,D)", "http://arxiv.org/abs/1308.0227v6", null], ["v7", "Wed, 2 Apr 2014 03:02:51 GMT  (135kb,D)", "http://arxiv.org/abs/1308.0227v7", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LG", "authors": ["roberto amadini", "maurizio gabbrielli", "jacopo mauro"], "accepted": false, "id": "1308.0227"}, "pdf": {"name": "1308.0227.pdf", "metadata": {"source": "CRF", "title": "Features for Building CSP Portfolio Solvers", "authors": ["Roberto Amadini", "Maurizio Gabbrielli", "Jacopo Mauro"], "emails": ["amadini@cs.unibo.it", "gabbri@cs.unibo.it", "jmauro@cs.unibo.it"], "sections": [{"heading": null, "text": "This year it is more than ever before in the history of the city."}, {"heading": "II. BACKGROUND", "text": "In this section, we present some preliminary ideas that we will need later in the paper, and then discuss the work involved."}, {"heading": "A. Preliminaries", "text": "A Constraint Satisfaction Problem (CSP) P = (X, D, C) consists of a finite set of variables X, each of which is associated with a domain Dx, D of possible values that a variable x could assume, and a set of constraints C that define the set of allowed values to the variables. [23] In the face of a CSP, the goal is usually to find a solution, that is, an assignment to the variables that fulfills all the limitations of the problem, by a suitable constraint solver.Machine Learning (ML) is a broad field that uses concepts from computer science, mathematics, statistics, information theory, complexity theory, biology, and cognitive science to \"construct computer programs that automatically improve with experience.\" In particular, classification is a known ML problem that results from identifying which classes (or categories) belong to a new class."}, {"heading": "B. Related Work", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "III. TOOLS", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "B. Features description", "text": "In this case, we are dealing with a detailed listing of all the common terms that we attach to the flags. (...) We are dealing with a series of different terms that we attach to the flags. (...) We are dealing with a multitude of terms. (...) We are dealing with a multitude of terms that refer to the flat rate. (...) We are dealing with a multitude of terms that refer to the flat rate. (...) We are dealing with a multitude of terms that refer to the flat rate. (...) We are dealing with a multitude of terms that refer to the flat rate. (...) We are dealing with a multitude of terms. \"(...) We are dealing with the flat rate.\" (...) We have not understood it. (...) We have not understood it. \"(...) We have not understood it.\" (...) We have not understood it. \"(...) We have not understood it. (...) We have not understood it."}, {"heading": "A. Test Results", "text": "This year it is so far that it will only take one year to move on to the next round."}, {"heading": "V. CONCLUSIONS AND EXTENSIONS", "text": "In fact, it's not that we're going to be able to do what we need to do to do it."}], "references": [{"title": "An Empirical Evaluation of Portfolios Approaches for Solving CSPs", "author": ["R. Amadini", "M. Gabbrielli", "J. Mauro"], "venue": "CPAIOR", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Online heuristic selection in constraint programming", "author": ["A. Arbelaez", "Y. Hamadi", "M. Sebag"], "venue": "SoCS", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Continuous Search in Constraint Programming", "author": ["A. Arbelaez", "Y. Hamadi", "M. Sebag"], "venue": "ICTAI", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2010}, {"title": "A survey of cross-validation procedures for model selection", "author": ["S. Arlot", "A. Celisse"], "venue": "Statistics Surveys, 4:40\u201379", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Specification of FlatZinc - Version 1.6", "author": ["R. Becket"], "venue": "http://www.minizinc. org/downloads/doc-1.6/flatzinc-spec.pdf. Retrieved July", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2013}, {"title": "Global constraint catalogue", "author": ["N. Beldiceanu", "M. Carlsson", "S. Demassey", "T. Petit"], "venue": "Past, present and future. Constraints,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}, {"title": "A short introduction to computational social choice", "author": ["Y. Chevaleyre", "U. Endriss", "J. Lang", "N. Maudet"], "venue": "In SOFSEM", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "SNNAP: Solver-based Nearest Neighbor for Algorithm Portfolios. http://4c.ucc.ie/\u223cymalitsky/ Papers/ECML-13.pdf", "author": ["M. Collautti", "Y. Malitsky", "B. O\u2019Sullivan"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Algorithm portfolios", "author": ["C.P. Gomes", "B. Selman"], "venue": "Artif. Intell., 126(1- 2):43\u201362", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2001}, {"title": "The WEKA data mining software: an update", "author": ["M. Hall", "E. Frank", "G. Holmes", "B. Pfahringer", "P. Reutemann", "I.H. Witten"], "venue": "SIGKDD Explor. Newsl.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "Algorithm Runtime Prediction: The State of the Art", "author": ["F. Hutter", "L. Xu", "H.H. Hoos", "K. Leyton-Brown"], "venue": "CoRR, abs/1211.0906", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}, {"title": "Algorithm Selection and Scheduling", "author": ["S. Kadioglu", "Y. Malitsky", "A. Sabharwal", "H. Samulowitz", "M. Sellmann"], "venue": "CP", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2011}, {"title": "ISAC - Instance- Specific Algorithm Configuration", "author": ["S. Kadioglu", "Y. Malitsky", "M. Sellmann", "K. Tierney"], "venue": "ECAI", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2010}, {"title": "and B", "author": ["Z. Kiziltan", "L. Mandrioli", "J. Mauro"], "venue": "O\u2019Sullivan. A classificationbased approach to managing a solver portfolio for CSPs. In AICS", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "LLAMA: leveraging learning to automatically manage algorithms", "author": ["L. Kotthoff"], "venue": "Technical Report arXiv:1306.1031,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2013}, {"title": "Feature filtering for instance-specific algorithm configuration", "author": ["C. Kroer", "Y. Malitsky"], "venue": "ICTAI", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Learning the Empirical Hardness of Optimization Problems: The Case of Combinatorial Auctions", "author": ["K. Leyton-Brown", "E. Nudelman", "Y. Shoham"], "venue": "CP", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2002}, {"title": "Consistency in Networks of Relations", "author": ["A.K. Mackworth"], "venue": "Artif. Intell., 8(1):99\u2013118", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1977}, {"title": "Instance-Specific Algorithm Configuration as a Method for Non-Model-Based Portfolio Generation", "author": ["Y. Malitsky", "M. Sellmann"], "venue": "CPAIOR", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2012}, {"title": "Machine learning", "author": ["T.M. Mitchell"], "venue": "McGraw Hill series in computer science. McGraw-Hill", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1997}, {"title": "Solving XCSP problems by using Gecode", "author": ["M. Morara", "J. Mauro", "M. Gabbrielli"], "venue": "CILC", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2011}, {"title": "Converting MiniZinc to FlatZinc - Version 1.6", "author": ["N. Nethercote"], "venue": "http: //www.minizinc.org/downloads/doc-1.6/mzn2fzn.pdf. Retrieved July", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "MiniZinc: Towards a Standard CP Modelling Language", "author": ["N. Nethercote", "P.J. Stuckey", "R. Becket", "S. Brand", "G.J. Duck", "G. Tack"], "venue": "CP", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2007}, {"title": "Using case-based reasoning in an algorithm portfolio for constraint solving", "author": ["E. O\u2019Mahony", "E. Hebrard", "A. Holland", "C. Nugent", "B. O\u2019Sullivan"], "venue": "AICS 08,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2009}, {"title": "XML Representation of Constraint Networks: Format", "author": ["O. Roussel", "C. Lecoutre"], "venue": "XCSP 2.1. CoRR,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2009}, {"title": "Snappy: A simple algorithm portfolio", "author": ["H. Samulowitz", "C. Reddy", "A. Sabharwal", "M. Sellmann"], "venue": "SAT, pages 422\u2013428", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2013}, {"title": "Philosophy of the minizinc challenge", "author": ["P.J. Stuckey", "R. Becket", "J. Fischer"], "venue": "Constraints, 15(3):307\u2013316", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "Evaluating Component Solver Contributions to Portfolio-Based Algorithm Selectors", "author": ["L. Xu", "F. Hutter", "H. Hoos", "K. Leyton-Brown"], "venue": "SAT", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2012}, {"title": "SATzilla-07: The Design and Analysis of an Algorithm Portfolio for SAT", "author": ["L. Xu", "F. Hutter", "H.H. Hoos", "K. Leyton-Brown"], "venue": "CP", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 8, "context": "It is well recognized within the field of constraint programming that different solvers are better when solving different problem instances, even within the same problem class [14].", "startOffset": 176, "endOffset": 180}, {"referenceID": 28, "context": "It has also been shown in other areas, such as satisfiability testing [34] and integer linear programming [22], that the best on-average solver can be out performed by a portfolio of possibly slower on-average solvers.", "startOffset": 70, "endOffset": 74}, {"referenceID": 16, "context": "It has also been shown in other areas, such as satisfiability testing [34] and integer linear programming [22], that the best on-average solver can be out performed by a portfolio of possibly slower on-average solvers.", "startOffset": 106, "endOffset": 110}, {"referenceID": 8, "context": "Thus, in general, a Portfolio Approach [14] can be seen as a methodology that exploits the significant variety in performances observed in different algorithms and combines these algorithms in order", "startOffset": 39, "endOffset": 43}, {"referenceID": 23, "context": "On the other hand, no such a growth exists in the CSP field, where the only portfolio solver existing so far is CPHydra [29] that exploits a (rather small) set of 36 features extracted by Mistral [4].", "startOffset": 120, "endOffset": 124}, {"referenceID": 23, "context": "These limitations affect also the CPHydra portfolio solver: indeed it can treat only problems expressed in the XCSP format [29] and it can extract only a limited number of features from a CSP model.", "startOffset": 123, "endOffset": 127}, {"referenceID": 22, "context": "We first present a compiler xcsp2mzn that we developed for converting problem instances from the XCSP format to MiniZinc [28] that is nowadays the most used and supported language to model CSP instances.", "startOffset": 121, "endOffset": 125}, {"referenceID": 26, "context": "MiniZinc supports also optimization problems and is the source format used in MiniZinc challenge [32], the only surviving international competition to evaluate the performances of (also) CSP solvers.", "startOffset": 97, "endOffset": 101}, {"referenceID": 24, "context": "On the other hand, XCSP [30] is the format used in the International Constraint Solver Competition (ICSC) [5] that was held till 2009.", "startOffset": 24, "endOffset": 28}, {"referenceID": 0, "context": "Finally, in order to evaluate the performances of our tool, following the approach presented in [6] we built portfolio solvers consisting of up to 11 solvers taken from those used in the last MiniZinc challenge.", "startOffset": 96, "endOffset": 99}, {"referenceID": 17, "context": "A Constraint Satisfaction Problem (CSP) P = (X ,D, C) consists of a finite set of variables X , each of which associated with a domain Dx \u2208 D of possible values that a variable x could take, and a set of constraints C that define the set of allowed assignments of values to the variables [23].", "startOffset": 288, "endOffset": 292}, {"referenceID": 19, "context": "Machine Learning (ML) is a broad field that uses concepts from computer science, mathematics, statistics, information theory, complexity theory, biology and cognitive science [25] to \u201cconstruct computer programs that automatically improve with experience\u201d.", "startOffset": 175, "endOffset": 179}, {"referenceID": 19, "context": "This problem is solved by using an appropriate classifier which is essentially a function mapping a new instance - characterized by one or more discrete or continuous features - to one class [25].", "startOffset": 191, "endOffset": 195}, {"referenceID": 8, "context": "As previously mentioned a portfolio approach [14] is a", "startOffset": 45, "endOffset": 49}, {"referenceID": 23, "context": "To the best of our knowledge, CPHydra [29] is currently the only CSP solver which uses a portfolio approach.", "startOffset": 38, "endOffset": 42}, {"referenceID": 13, "context": "In [19] the feature extraction code was improved allowing the extraction of few additional features.", "startOffset": 3, "endOffset": 7}, {"referenceID": 11, "context": "3S [17] is a SAT solver that conjugates a fixed-time static solver schedule with the dynamic selection of one longrunning component solver.", "startOffset": 3, "endOffset": 7}, {"referenceID": 28, "context": "SATzilla [34] is a SAT solver that relies on runtime prediction models to select the solver that (hopefully) has the fastest running time on a given problem instance.", "startOffset": 9, "endOffset": 13}, {"referenceID": 27, "context": "Its last version [33], which consistently outperforms the previous ones, uses a weighted random forest approach provided with an explicit cost-sensitive loss function punishing misclassifications in direct proportion to their impact on portfolio performance.", "startOffset": 17, "endOffset": 21}, {"referenceID": 18, "context": "In [24] the Instance-Specific Algorithm Configuration tool ISAC [18] has been used as solver selector.", "startOffset": 3, "endOffset": 7}, {"referenceID": 12, "context": "In [24] the Instance-Specific Algorithm Configuration tool ISAC [18] has been used as solver selector.", "startOffset": 64, "endOffset": 68}, {"referenceID": 0, "context": "In [6] we did an empirical evaluation and comparison of these three portfolio approaches together with CPHydra approach and some other models developed on top of offthe-shelf machine learning algorithms.", "startOffset": 3, "endOffset": 6}, {"referenceID": 10, "context": "A detailed overview of the state of the art in this context is provided in [16] that also describes new features for predicting algorithm runtime for SAT, MIP (Mixed Integer Programming), and TSP (Traveling Salesperson) problems.", "startOffset": 75, "endOffset": 79}, {"referenceID": 1, "context": "In [7], [8] ML techniques are used to enhance the performances of a single CSP solver by dynamically adapting its search heuristics.", "startOffset": 3, "endOffset": 6}, {"referenceID": 2, "context": "In [7], [8] ML techniques are used to enhance the performances of a single CSP solver by dynamically adapting its search heuristics.", "startOffset": 8, "endOffset": 11}, {"referenceID": 15, "context": "Feature filtering techniques for ISAC tool are described in [21]: instead of using traditional approaches, the authors introduce three new evaluation functions that use precomputed runtimes of a collection of untuned solvers to quickly evaluate subsets of features.", "startOffset": 60, "endOffset": 64}, {"referenceID": 7, "context": "Moreover, in [13] the authors introduce SNNAP (Solver-based Nearest Neighbors for Algorithm Portfolios), an alternative view of ISAC which uses the existing features to predict the best three solvers for a particular instance.", "startOffset": 13, "endOffset": 17}, {"referenceID": 25, "context": "snappy (Simple Neighborhood-based Algorithm Portfolio in PYthon) [31] is a simple and training-less algorithm portfolio which relies on a nearest neighbors prediction mechanism.", "startOffset": 65, "endOffset": 69}, {"referenceID": 14, "context": "LLAMA (Leveraging Learning to Automatically Manage Algorithm) [20] is a framework that facilitates the exploration of different portfolio techniques on any problem domain.", "startOffset": 62, "endOffset": 66}, {"referenceID": 20, "context": "xcsp2mzn was developed by adapting x4g [26], a converter from XCSP to Gecode [1] used in particular to support the XCSP abridged notation.", "startOffset": 39, "endOffset": 43}, {"referenceID": 5, "context": "As far as global constraints are concerned, XCSP supports the majority of the global constraints defined in the Global Constraint Catalog [11].", "startOffset": 138, "endOffset": 142}, {"referenceID": 21, "context": "We instead compile them to FlatZinc [27], a lower level language having a syntax that is mostly a subset of MiniZinc and that can be obtained from MiniZinc by using the mzn2fzn tool provided by the MiniZinc suite.", "startOffset": 36, "endOffset": 40}, {"referenceID": 10, "context": "We tried to collect a set of features as exhaustive as possible, taking inspiration from and adapting those presented in [16], [8].", "startOffset": 121, "endOffset": 125}, {"referenceID": 2, "context": "We tried to collect a set of features as exhaustive as possible, taking inspiration from and adapting those presented in [16], [8].", "startOffset": 127, "endOffset": 130}, {"referenceID": 21, "context": "For more details about these technical details we defer the interested reader to [27], [10], [1].", "startOffset": 81, "endOffset": 85}, {"referenceID": 4, "context": "For more details about these technical details we defer the interested reader to [27], [10], [1].", "startOffset": 87, "endOffset": 91}, {"referenceID": 10, "context": "Then, starting from the graphs and following [16], we", "startOffset": 45, "endOffset": 49}, {"referenceID": 13, "context": "The only possibility was then to compare mzn2feat with the features extractor developed by Mistral and extended in [19], by using the ICSC dataset.", "startOffset": 115, "endOffset": 119}, {"referenceID": 0, "context": "Taking as reference the methodology and the results of [6] we considered the most promising portfolio techniques and we evaluated their performances using a time limit of 1800 seconds, which is the same threshold used in ICSC.", "startOffset": 55, "endOffset": 58}, {"referenceID": 0, "context": "For building portfolios we considered the best performing SAT approaches of [6], namely, SATzilla [34] and 3S [33], and the best off-the-shelf approaches, viz.", "startOffset": 76, "endOffset": 79}, {"referenceID": 28, "context": "For building portfolios we considered the best performing SAT approaches of [6], namely, SATzilla [34] and 3S [33], and the best off-the-shelf approaches, viz.", "startOffset": 98, "endOffset": 102}, {"referenceID": 27, "context": "For building portfolios we considered the best performing SAT approaches of [6], namely, SATzilla [34] and 3S [33], and the best off-the-shelf approaches, viz.", "startOffset": 110, "endOffset": 114}, {"referenceID": 9, "context": "IBk, J48, PART, Random Forest, and SMO, by using the corresponding WEKA [15] classifiers with default parameters.", "startOffset": 72, "endOffset": 76}, {"referenceID": 3, "context": "Every approach was tested by using a 5-repeated 5-fold cross-validation [9].", "startOffset": 72, "endOffset": 75}, {"referenceID": 0, "context": "Following [6] we elected MinisatID [2] as backup solver, since it is the one that solves the greatest number of instances within the time limit of 1800 seconds.", "startOffset": 10, "endOffset": 13}, {"referenceID": 6, "context": "MinisatID was the elections winner by using Approval and Plurality rules, while instead Fzn2smt solver was elected by using Borda [12].", "startOffset": 130, "endOffset": 134}, {"referenceID": 5, "context": "For each different portfolio technique, the x-axis is sorted in ascending order according to the number of constituent solvers n \u2208 [2, 11].", "startOffset": 131, "endOffset": 138}, {"referenceID": 0, "context": "The results are similar to those presented in [6].", "startOffset": 46, "endOffset": 49}, {"referenceID": 0, "context": "Differently from [6], where the peak performances were reached by relatively small portfolios (about 6-8 solvers on a total of 16 solvers), here the addition of a solver almost always increases the percentage of solved instances.", "startOffset": 17, "endOffset": 20}, {"referenceID": 15, "context": "In [21] the authors show that by using suitable evaluation functions it is possible to perform a feature filtering that, on one hand, drastically reduces the feature number and, on the other hand, also provides performances gains.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "We have also tried to apply the filtering techniques of [21] exploiting ISAC code; unfortunately, this proved to be too time consuming (filtering of a single fold takes more than a day of computation).", "startOffset": 56, "endOffset": 60}, {"referenceID": 0, "context": "The set of features we proposed was tested using the best performing portfolio techniques evaluated in [6].", "startOffset": 103, "endOffset": 106}], "year": 2017, "abstractText": "Recent research has shown that the performances of a single arbitrarily efficient solver can be significantly outperformed by a portfolio of possibly slower on-average solvers. The solver selection is usually done by using machine learning techniques which exploit features extracted from the problem specification. In this paper we present a tool that is able to extract an extensive set of features from a Constraint Satisfaction Problem (CSP) defined either in the MiniZinc format or in the XCSP format. We also report some empirical results showing that the performances that can be obtained using these features are competitive with state of the art CSP portfolio techniques.", "creator": "LaTeX with hyperref package"}}}