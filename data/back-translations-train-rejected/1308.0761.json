{"id": "1308.0761", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Aug-2013", "title": "On estimating total time to solve SAT in distributed computing environments: Application to the SAT@home project", "abstract": "This paper proposes a method to estimate the total time required to solve SAT in distributed environments via partitioning approach. It is based on the observation that for some simple forms of problem partitioning one can use the Monte Carlo approach to estimate the time required to solve an original problem. The method proposed is based on an algorithm for searching for partitioning with an optimal solving time estimation. We applied this method to estimate the time required to perform logical cryptanalysis of the widely known stream ciphers A5/1 and Bivium. The paper also describes a volunteer computing project SAT@home aimed at solving hard combinatorial problems reduced to SAT. In this project during several months there were solved 10 problems of logical cryptanalysis of the A5/1 cipher thatcould not be solved using known rainbow tables.", "histories": [["v1", "Sun, 4 Aug 2013 00:30:09 GMT  (100kb)", "http://arxiv.org/abs/1308.0761v1", "This paper was submitted to SAT-2013 conference. Its materials were reported in a poster session (the paper in its full variant was not accepted). 16 pages"]], "COMMENTS": "This paper was submitted to SAT-2013 conference. Its materials were reported in a poster session (the paper in its full variant was not accepted). 16 pages", "reviews": [], "SUBJECTS": "cs.AI cs.CR cs.DC cs.DS", "authors": ["alexander semenov", "oleg zaikin"], "accepted": false, "id": "1308.0761"}, "pdf": {"name": "1308.0761.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["SAT@home", "biclop.rambler@yandex.ru,", "zaikin.icc@gmail.com", "SAT@home", "SAT@home", "Einstein@home,"], "sections": [{"heading": null, "text": "ar Xiv: 130 8.07 61v1 [cs.AI] 4A ug2 01Keywords: Volunteer Computing, BOINC, Partitioning, Monte Carlo Method, Prediction Function, Taboo Search, A5 / 1, Bivium, SAT @ home"}, {"heading": "1 Introduction", "text": "In recent years, the number of those able to reform has multiplied; in recent years, the number of those able to reform and reform has multiplied."}, {"heading": "2 Monte Carlo method for estimating time of solving of SAT problem via partitioning approach", "text": "Consider any SAT problem for CNF C via a set of Boolean variables X. The partitioning of C is a set of formulas C \u00b7 Fi, i \u00b2 1. If you have a partitioning of the original SAT problem, satisfaction problems for C \u00b7 Fj \u00b2, j \u00b2, formula C \u00b7 Fi \u00b7 FJ \u00b2 can be solved independently. Different partitioning techniques exist. For example, you can partition the original SAT problem, satisfaction problems for C \u00b7 Fj \u00b2, j \u00b2, j \u00b2, {1,., S}, in a distributed computing environment, different partitioning techniques. You can construct {Fj} Sj \u00b2 SJ = 1 using a scattering method [16], a guiding path solver [34], or a lookahead solver [13], [17]."}, {"heading": "2.1 Monte Carlo approach to statistical estimation of quality of partitioning of SAT problem", "text": "Consider a SAT problem for any CNF formula C = C (X) over the set of Boolean variables X = {x1,.., xn}. We refer to an arbitrary formula that is considered a decomposition for the SAT problem as a result of the substitution of a truth assignment xi1 = 1,.., xid = 1,., id = 1,.., n}. Other CNF qualities get as a result of the substitution of a truth assignment xi1 = 1,..., xid = \u03b1d to C is referred to as C. / (\u03b1d,., \u03b1d) A number of CNFs get as a result of the substitution of a truth assignment xi1 = \u03b11,....,., (\u03b11,.) We (\u03b1d to C,.)."}, {"heading": "2.2 Algorithm for predictive function minimization", "text": "It is not possible that we can refer to the time it takes to solve the problem. (...) The value of FA, C (...) is not applicable to the problem of minimizing FA, C (...).Because these characteristics are the most natural minimization strategy for FA, C (...) is a strategy of \"successive improvements.\" It implies that in the first step weshould should be constructed an initial decomposition for which the value FA, C (...) should be calculated. (...) The value of FA, C (...) should be calculated in a short time."}, {"heading": "2.3 Additional improvements of the predictive function minimization algorithm", "text": "Here we present a technique that makes it possible to significantly accelerate the proposed algorithm. < A (A) = 2dN \u00b7 1, J (X) = 1,.., n. However, the calculation of FA, C (X) + 2dN \u00b7 2, j = 2,.., N. (7) Thus FA, C (X) = FNA, C (X).1, F jA, C (X) = F j \u2212 1A, C (X) + 2dN \u00b7 2, J = 2, N. (X) = 1, X (X).It should be noted that the order of the summation in (7) is irrelevant."}, {"heading": "3 Implementation and computational experiments", "text": "The algorithms described in Section 2 were referred to as the parallel program pdsat, which describes the MPI library. An MPI process of pdsat is referred to as the master process, which refers to itself as the master process. (Look at that scripta analysis of the scripta ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio ratio"}, {"heading": "4 Solving hard SAT instances in the volunteer computing project SAT@home", "text": "We use the pdsat program described in Section 3 to plan computing experiments in the volunteer computing project SAT @ home. SAT @ home was launched on September 29, 2011 [31]. It uses computing resources provided by volunteer PCs to solve hard combinatorial problems that can be effectively reduced to SAT. The project was implemented using the BOINC Platform. An experiment that consisted of solving 10 inversion problems of generator A5 / 1 was successfully completed in SAT @ home on May 7, 2012. It should be noted that we only consider instances that cannot be solved with the known rainbow tables [26]. In this experiment, we used the decomposition set from [28]. The computing application was based on a modified version of MiniSat-C 1.14.1 (see [28])."}, {"heading": "5 Related Work", "text": "In many papers, topics related to the organization of the SAT solution in distributed environments were considered, for example, in [5], [8], [15], [16], [34]. Various approaches to partitioning SAT problems were examined in [15,16,17,18]. Detailed analyses of a number of problems related to the partitioning approach were presented in [15]. Special efficiency functions were also introduced in [15] to evaluate the quality of SAT problem partitioning. In our paper, we used predictive functions based on different principles. [17] \"s authors suggested using lookahead heuristics [14] to construct SAT problem partitioning. This idea (with significant additions) was implemented in [13]. During the process of the initial problem solving, the distributed solver from [13] was processed."}, {"heading": "6 Conclusions", "text": "In this paper, we proposed a method for estimating the time it takes to solve SAT in distributed computer environments, using the Monte Carlo method to statistically estimate the quality of partitioning of the original SAT problem. In order to search for a good-quality partitioning, a special taboo search algorithm was used, and the proposed method was used to obtain an approximate time required for the logical cryptanalysis of the well-known cipheres A5 / 1 and Bivium. Ten problems of logical cryptanalysis of the A5 / 1 generator, which could not be solved with the known rainbow tables [26], were successfully solved in the volunteer calculation project SAT @ home [31], which is being developed and maintained by the authors. The authors thank Stepan Kochemazov for numerous valuable comments, which allowed us to significantly improve the quality of the paper, Alexey Ignatiev for constructive feedback and helpful discussions, Poshaypkin for developing the project and Nikolai @ for their help in managing SAT @ 7."}], "references": [{"title": "BOINC: A System for Public-Resource Computing and Storage", "author": ["D.P. Anderson"], "venue": "Buyya, R. (ed.) GRID. pp. 4\u201310. IEEE Computer Society", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2004}, {"title": "Handbook of Satisfiability, Frontiers in Artificial Intelligence and Applications, vol", "author": ["A. Biere", "M. Heule", "H. van Maaren", "Walsh", "T. (eds."], "venue": "185. IOS Press", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "Real Time Cryptanalysis of A5/1 on a PC", "author": ["A. Biryukov", "A. Shamir", "D. Wagner"], "venue": "Schneier, B. (ed.) FSE. LNCS, vol. 1978, pp. 1\u201318. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2000}, {"title": "SAT Over BOINC: An Application-Independent Volunteer Grid Project", "author": ["M. Black", "G. Bard"], "venue": "Jha, S., gentschen Felde, N., Buyya, R., Fedak, G. (eds.) GRID. pp. 226\u2013227. IEEE", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2011}, {"title": "Parallel propositional satisfiability checking with distributed dynamic learning", "author": ["W. Blochinger", "C. Sinz", "W. K\u00fcchlin"], "venue": "Parallel Computing 29(7), 969\u2013994", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2003}, {"title": "Completion of the spectrum of orthogonal diagonal latin squares", "author": ["J.W. Brown", "F. Cherry", "L. Most", "M. Most", "E. Parker", "W. Wallis"], "venue": "Lect. Notes Pure Appl. Math. 139, 43\u201349", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1993}, {"title": "Trivium: A stream cipher construction inspired by block cipher design principles", "author": ["C.D. Canni\u00e8re"], "venue": "Katsikas, S.K., Lopez, J., Backes, M., Gritzalis, S., Preneel, B. (eds.) ISC. LNCS, vol. 4176, pp. 171\u2013186. Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "GridSAT: a system for solving satisfiability problems using a computational grid", "author": ["W. Chrabakh", "R. Wolski"], "venue": "Parallel Computing 32(9), 660\u2013687", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "An Extensible SAT-solver", "author": ["N. E\u00e9n", "N. S\u00f6rensson"], "venue": "Giunchiglia, E., Tacchella, A. (eds.) SAT. LNCS, vol. 2919, pp. 502\u2013518. Springer", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2003}, {"title": "Attacking Bivium Using SAT Solvers", "author": ["T. Eibach", "E. Pilz", "G. V\u00f6lkel"], "venue": "B\u00fcning, H.K., Zhao, X. (eds.) SAT. LNCS, vol. 4996, pp. 63\u201376. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2008}, {"title": "An introduction to probability theory and its applications", "author": ["W. Feller"], "venue": "Vol. II. Second edition, John Wiley & Sons Inc., New York", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1971}, {"title": "Tabu Search", "author": ["F. Glover", "M. Laguna"], "venue": "Kluwer Academic Publishers, Norwell, MA, USA", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1997}, {"title": "Cube and Conquer: Guiding CDCL SAT Solvers by Lookaheads", "author": ["M. Heule", "O. Kullmann", "S. Wieringa", "A. Biere"], "venue": "Eder, K., Louren\u00e7o, J., Shehory, O. (eds.) Haifa Verification Conference. LNCS, vol. 7261, pp. 50\u201365. Springer", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2011}, {"title": "Grid Based Propositional Satisfiability Solving", "author": ["A.E.J. Hyv\u00e4rinen"], "venue": "Ph.D. thesis, Aalto University", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "A Distribution Method for Solving SAT in Grids", "author": ["A.E.J. Hyv\u00e4rinen", "T.A. Junttila", "I. Niemel\u00e4"], "venue": "Biere, A., Gomes, C.P. (eds.) SAT. LNCS, vol. 4121, pp. 430\u2013435. Springer", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Partitioning SAT Instances for Distributed Solving", "author": ["A.E.J. Hyv\u00e4rinen", "T.A. Junttila", "I. Niemel\u00e4"], "venue": "Ferm\u00fcller, C.G., Voronkov, A. (eds.) LPAR (Yogyakarta). LNCS, vol. 6397, pp. 372\u2013386. Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2010}, {"title": "Grid-Based SAT Solving with Iterative Partitioning and Clause Learning", "author": ["A.E.J. Hyv\u00e4rinen", "T.A. Junttila", "I. Niemel\u00e4"], "venue": "Lee, J.H.M. (ed.) CP. LNCS, vol. 6876, pp. 385\u2013399. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2011}, {"title": "Limitations of restricted branching in clause learning", "author": ["M. J\u00e4rvisalo", "T.A. Junttila"], "venue": "Constraints 14(3), 325\u2013356", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2009}, {"title": "Monte Carlo methods", "author": ["M.H. Kalos", "P.A. Whitlock"], "venue": "Wiley, New York, NY", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1986}, {"title": "Logical Cryptanalysis as a SAT Problem", "author": ["F. Massacci", "L. Marraro"], "venue": "J. Autom. Reasoning 24(1/2), 165\u2013203", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2000}, {"title": "Attacking Bivium with MiniSat", "author": ["C. Mcdonald", "C. Charnes", "J. Pieprzyk"], "venue": "Tech. Rep. 2007/040, ECRYPT Stream Cipher Project", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "Handbook of Applied Cryptography", "author": ["A. Menezes", "P.C. van Oorschot", "S.A. Vanstone"], "venue": "CRC Press", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1996}, {"title": "The Monte Carlo Method", "author": ["N. Metropolis", "S. Ulam"], "venue": "J. Amer. statistical assoc. 44(247), 335\u2013341", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1949}, {"title": "Combinatorial Optimization: Algorithms and Complexity", "author": ["C.H. Papadimitriou", "K. Steiglitz"], "venue": "Prentice-Hall", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1982}, {"title": "Parallel SAT Solving on Peer-to-Peer Desktop Grids", "author": ["S. Schulz", "W. Blochinger"], "venue": "J. Grid Comput. 8(3), 443\u2013471", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2010}, {"title": "Parallel Logical Cryptanalysis of the Generator A5/1 in BNB-Grid System", "author": ["A. Semenov", "O. Zaikin", "D. Bespalov", "M. Posypkin"], "venue": "Malyshkin, V. (ed.) PaCT. LNCS, vol. 6873, pp. 473\u2013483. Springer", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "Grain of salt \u2013 an automated way to test stream ciphers through sat solvers", "author": ["M. Soos"], "venue": "Tools\u201910: Proceedings of the Workshop on Tools for Cryptanalysis 2010. pp. 131\u2013144. Ecrypt II", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2010}, {"title": "Extending SAT Solvers to Cryptographic Problems", "author": ["M. Soos", "K. Nohl", "C. Castelluccia"], "venue": "Kullmann, O. (ed.) SAT. LNCS, vol. 5584, pp. 244\u2013257. Springer", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Mathematical Statistics", "author": ["S.S. Wilks"], "venue": "J. Wiley and Sons", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1962}, {"title": "PSATO: a Distributed Propositional Prover and its Application to Quasigroup Problems", "author": ["H. Zhang", "M.P. Bonacina", "J. Hsiang"], "venue": "J. Symb. Comput. 21(4), 543\u2013560", "citeRegEx": "34", "shortCiteRegEx": null, "year": 1996}], "referenceMentions": [{"referenceID": 0, "context": "Nowadays there are about 70 active projects, the majority of them are based on the BOINC platform [1].", "startOffset": 98, "endOffset": 101}, {"referenceID": 1, "context": "It is well-known that a lot of important combinatorial problems (for example from areas of formal verification, planning or bioinformatics) can be effectively reduced to SAT [2].", "startOffset": 174, "endOffset": 177}, {"referenceID": 13, "context": "2 Monte Carlo method for estimating time of solving of SAT problem via partitioning approach In [15,16,17,18] various approaches to partitioning SAT problems were studied.", "startOffset": 96, "endOffset": 109}, {"referenceID": 14, "context": "2 Monte Carlo method for estimating time of solving of SAT problem via partitioning approach In [15,16,17,18] various approaches to partitioning SAT problems were studied.", "startOffset": 96, "endOffset": 109}, {"referenceID": 15, "context": "2 Monte Carlo method for estimating time of solving of SAT problem via partitioning approach In [15,16,17,18] various approaches to partitioning SAT problems were studied.", "startOffset": 96, "endOffset": 109}, {"referenceID": 16, "context": "2 Monte Carlo method for estimating time of solving of SAT problem via partitioning approach In [15,16,17,18] various approaches to partitioning SAT problems were studied.", "startOffset": 96, "endOffset": 109}, {"referenceID": 13, "context": "Further we will use the notation of [15].", "startOffset": 36, "endOffset": 40}, {"referenceID": 14, "context": "For example, one can construct {Fj}Sj=1 using a scattering procedure [16], a guiding path solver [34] or a lookahead solver [13], [17].", "startOffset": 69, "endOffset": 73}, {"referenceID": 29, "context": "For example, one can construct {Fj}Sj=1 using a scattering procedure [16], a guiding path solver [34] or a lookahead solver [13], [17].", "startOffset": 97, "endOffset": 101}, {"referenceID": 12, "context": "For example, one can construct {Fj}Sj=1 using a scattering procedure [16], a guiding path solver [34] or a lookahead solver [13], [17].", "startOffset": 124, "endOffset": 128}, {"referenceID": 15, "context": "For example, one can construct {Fj}Sj=1 using a scattering procedure [16], a guiding path solver [34] or a lookahead solver [13], [17].", "startOffset": 130, "endOffset": 134}, {"referenceID": 9, "context": "However, a partitioning method that makes it possible to construct such estimations was used in a number of papers about solving cryptanalysis problems via SAT approach [10], [22], [29], [30].", "startOffset": 169, "endOffset": 173}, {"referenceID": 20, "context": "However, a partitioning method that makes it possible to construct such estimations was used in a number of papers about solving cryptanalysis problems via SAT approach [10], [22], [29], [30].", "startOffset": 175, "endOffset": 179}, {"referenceID": 26, "context": "However, a partitioning method that makes it possible to construct such estimations was used in a number of papers about solving cryptanalysis problems via SAT approach [10], [22], [29], [30].", "startOffset": 181, "endOffset": 185}, {"referenceID": 27, "context": "However, a partitioning method that makes it possible to construct such estimations was used in a number of papers about solving cryptanalysis problems via SAT approach [10], [22], [29], [30].", "startOffset": 187, "endOffset": 191}, {"referenceID": 18, "context": "we will use the Monte Carlo method [20], [24].", "startOffset": 35, "endOffset": 39}, {"referenceID": 22, "context": "we will use the Monte Carlo method [20], [24].", "startOffset": 41, "endOffset": 45}, {"referenceID": 10, "context": "If E[\u03be] and Var(\u03be) are both finite then from Central Limit Theorem [11] we have the main formula of the Monte Carlo method Pr \uf8f1", "startOffset": 67, "endOffset": 71}, {"referenceID": 28, "context": "In this case instead of (2) a following formula is applied [32] Pr \uf8f1", "startOffset": 59, "endOffset": 63}, {"referenceID": 11, "context": "It naturally corresponds to the basic idea of tabu search (TS) [12].", "startOffset": 63, "endOffset": 67}, {"referenceID": 23, "context": "A simple local search [25] stops after finding a local extremum.", "startOffset": 22, "endOffset": 26}, {"referenceID": 17, "context": "In particular for a SAT problem that encodes the inversion problem of a cryptographic function we can choose X\u03030 as a corresponding Strong Unit Propagation Backdoor Set (SUPBS, [19]).", "startOffset": 177, "endOffset": 181}, {"referenceID": 8, "context": "2 [9].", "startOffset": 2, "endOffset": 5}, {"referenceID": 21, "context": "The A5/1 keystream generator consists of 3 LFSRs (linear feedback shift register [23]) that are shifted asynchronously.", "startOffset": 81, "endOffset": 85}, {"referenceID": 2, "context": "This generator was described in details in [3].", "startOffset": 43, "endOffset": 46}, {"referenceID": 19, "context": "Usually if the cryptanalysis is considered as a SAT problem then it is called a logical cryptanalysis [21].", "startOffset": 102, "endOffset": 106}, {"referenceID": 25, "context": "Logical cryptanalysis of the A5/1 generator with first 144 bits of the keystream known was described in [28] where a decomposition set", "startOffset": 104, "endOffset": 108}, {"referenceID": 25, "context": "Decomposition sets for logical cryptanalysis of A5/1: the one from [28] (lefthand side) and the one found by pdsat (right-hand side)", "startOffset": 67, "endOffset": 71}, {"referenceID": 25, "context": "Description of these modifications was presented in [28].", "startOffset": 52, "endOffset": 56}, {"referenceID": 25, "context": "time s F (\u00b7) from [28] 0.", "startOffset": 18, "endOffset": 22}, {"referenceID": 6, "context": "Further we consider the logical cryptanalysis of the Bivium cipher [7].", "startOffset": 67, "endOffset": 70}, {"referenceID": 9, "context": "Logical cryptanalysis of Bivium is considered in the following formulation (that was earlier studied in [10], [22], [30]): based on the known fragment of the keystream one should find 177 bits that correspond to the internal state of the Bivium registers at the start of the keystream generation.", "startOffset": 104, "endOffset": 108}, {"referenceID": 20, "context": "Logical cryptanalysis of Bivium is considered in the following formulation (that was earlier studied in [10], [22], [30]): based on the known fragment of the keystream one should find 177 bits that correspond to the internal state of the Bivium registers at the start of the keystream generation.", "startOffset": 110, "endOffset": 114}, {"referenceID": 27, "context": "Logical cryptanalysis of Bivium is considered in the following formulation (that was earlier studied in [10], [22], [30]): based on the known fragment of the keystream one should find 177 bits that correspond to the internal state of the Bivium registers at the start of the keystream generation.", "startOffset": 116, "endOffset": 120}, {"referenceID": 9, "context": "In the experiments presented below we considered first 200 bits of the keystream (similar to [10]).", "startOffset": 93, "endOffset": 97}, {"referenceID": 9, "context": "The authors of [10], [22], [30] presented several variants of decomposition sets.", "startOffset": 15, "endOffset": 19}, {"referenceID": 20, "context": "The authors of [10], [22], [30] presented several variants of decomposition sets.", "startOffset": 21, "endOffset": 25}, {"referenceID": 27, "context": "The authors of [10], [22], [30] presented several variants of decomposition sets.", "startOffset": 27, "endOffset": 31}, {"referenceID": 9, "context": "We compared the decomposition set found by pdsat with the results of [10] since in that work decomposition sets are presented explicitly and those experiments are easy to reproduce.", "startOffset": 69, "endOffset": 73}, {"referenceID": 9, "context": "The best decomposition set among the ones presented in [10] consists of 45 variables and is shown in Fig.", "startOffset": 55, "endOffset": 59}, {"referenceID": 9, "context": "Decomposition set of 45 variables for logical cryptanalysis of Bivium from [10]", "startOffset": 75, "endOffset": 79}, {"referenceID": 9, "context": "time s F (\u00b7) from [10] 0.", "startOffset": 18, "endOffset": 22}, {"referenceID": 25, "context": "In that experiment we used the decomposition set from [28].", "startOffset": 54, "endOffset": 58}, {"referenceID": 25, "context": "1 (see [28]).", "startOffset": 7, "endOffset": 11}], "year": 2013, "abstractText": "This paper proposes a method to estimate the total time required to solve SAT in distributed environments via partitioning approach. It is based on the observation that for some simple forms of problem partitioning one can use the Monte Carlo approach to estimate the time required to solve an original problem. The method proposed is based on an algorithm for searching for partitioning with an optimal solving time estimation. We applied this method to estimate the time required to perform logical cryptanalysis of the widely known stream ciphers A5/1 and Bivium. The paper also describes a volunteer computing project SAT@home aimed at solving hard combinatorial problems reduced to SAT. In this project during several months there were solved 10 problems of logical cryptanalysis of the A5/1 cipher that could not be solved using known rainbow tables.", "creator": "LaTeX with hyperref package"}}}