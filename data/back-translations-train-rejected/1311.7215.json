{"id": "1311.7215", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Nov-2013", "title": "Solving Minimum Vertex Cover Problem Using Learning Automata", "abstract": "Minimum vertex cover problem is an NP-Hard problem with the aim of finding minimum number of vertices to cover graph. In this paper, a learning automaton based algorithm is proposed to find minimum vertex cover in graph. In the proposed algorithm, each vertex of graph is equipped with a learning automaton that has two actions in the candidate or non-candidate of the corresponding vertex cover set. Due to characteristics of learning automata, this algorithm significantly reduces the number of covering vertices of graph. The proposed algorithm based on learning automata iteratively minimize the candidate vertex cover through the update its action probability. As the proposed algorithm proceeds, a candidate solution nears to optimal solution of the minimum vertex cover problem. In order to evaluate the proposed algorithm, several experiments conducted on DIMACS dataset which compared to conventional methods. Experimental results show the major superiority of the proposed algorithm over the other methods.", "histories": [["v1", "Thu, 28 Nov 2013 05:49:34 GMT  (492kb)", "http://arxiv.org/abs/1311.7215v1", "5 pages, 5 figures, conference"]], "COMMENTS": "5 pages, 5 figures, conference", "reviews": [], "SUBJECTS": "cs.AI cs.DM", "authors": ["aylin mousavian", "alireza rezvanian", "mohammad reza meybodi"], "accepted": false, "id": "1311.7215"}, "pdf": {"name": "1311.7215.pdf", "metadata": {"source": "CRF", "title": "Solving Minimum Vertex Cover Problem Using Learning Automata", "authors": ["Aylin Mousavian", "Alireza Rezvanian", "Mohammad Reza Meybodi"], "emails": ["a.mousavian@qiau.ac.ir", "a.rezvanian@aut.ac.ir", "mmeybodi@aut.ac.ir"], "sections": [{"heading": null, "text": "The idea behind this is that people who are in a position to give themselves and others a chance to put themselves in the world in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they, in which they, in which they live, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they live, in which they, in which they, in which they, in which they, in which they, in which they live, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, live, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which they, in which, in which they, in which they, in which they, in which they, in which they, in which, in which, in which they, in which they, in which they, in which they, in which they, in which they, in which, live, live, in which they, in which, in which they, in which they, in which they, in which they, live, in which, in which"}, {"heading": "A. Distributed Learning Automata", "text": "A distributed learning machine (DLA) is a network of learning machines that work together to solve a particular problem. In this network, only one machine is active each time. The number of actions performed by one machine corresponds to the number of connected learning machines. By selecting one action from machines in this network, the connected machines are activated on the other side. A model of the DLA network designates a graph in each vertex as an automaton [10]."}, {"heading": "III. THE PROPOSED ALGORITHM", "text": "In this section, a proposed algorithm based on learning processes to solve the problem of minimal vertex coverage is presented. Unregulated graph G = (V, E) is used as input of the algorithm and output, which means that the number of machines connected to it is the same. It is assumed that all machines are deactivated to activate the edges of each channel, which means that the number of machines connected to it is the same. It is assumed that all machines are deactivated."}, {"heading": "IV. SIMULATION RESULTS", "text": "This year it has come to the point that it has never come as far as this year."}], "references": [{"title": "Viana,\u201dExperimental analysis of approximation algorithms for the vertex cover and set covering problems,", "author": ["F.C. Gomes", "C.N. Meneses", "P.M. Pardalos", "R.G. Valdisio"], "venue": "Computers & Operations Research,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Efficient algorithms for influence maximization in social networks", "author": ["Y. Cheng Chen", "W. Chih Peng", "S.Yin Lee"], "venue": "Knowledge and Information Systems, vol. 33, pp. 577-601, 2012.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "A population-based iterated greedy algorithm for the minimum weight vertex cover problem", "author": ["S. Bouamama", "C. Blum", "A. Boukerram"], "venue": "Applied Soft Computing, vol. 12, pp. 1632-1639, 2012.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Analysis of an iterated local search algorithm for vertex cover in sparse random graphs", "author": ["C. Witt"], "venue": "Theoretical Computer Science, vol. 425, pp. 117- 125, 2012.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Approximating subdense instances of covering problems", "author": ["J.Cardinal", "M. Karpinski"], "venue": "Electronic Notes in Discrete Mathematics, vol. 37, pp. 297- 302, 2011.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Solving maximum clique problem in stochastic graphs using learning automata", "author": ["M. Soleimani-Pouri", "A. Rezvanian", "M.R. Meybodi"], "venue": "Proceedings of 2012 Fourth International Conference on Computational Aspects of Social Networks (CASoN), 2012, pp. 115-119.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2012}, {"title": "On covering vertices of a graph by trees", "author": ["P. Horak", "K. McAvaney"], "venue": "Discrete Mathematics, vol. 308, pp. 4414-4418, 2008.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Covering vertices by a specified number of disjoint cycles, edges and isolated vertices", "author": ["S. Chiba", "S. Fujita"], "venue": "Discrete Mathematics, vol. 313, pp. 269-277, 2013.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "A stochastic local search approach to vertex cover", "author": ["S. Richter", "M. Helmert", "C. Gretton"], "venue": "Advances in Artificial Intelligence, vol. 4667, J. Hertzberg, Ed. Springer Berlin Heidelberg, 2007, pp. 412-426.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2007}, {"title": "Utilizing distributed learning automata to solve stochastic shortest path problem", "author": ["H. Beigy", "M.R. Meybodi"], "venue": "International Journal of Uncertainty, Fuzziness and Knowledge-based Systems, vol. 14, no. 5, pp. 591-617, 2006.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2006}, {"title": "Evolutionary algorithms for vertex cover", "author": ["I.K. Evans"], "venue": "Evolutionary Programming VII,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1998}, {"title": "Tracking extrema in dynamic environments using a learning automata-based immune algorithm", "author": ["A. Rezvanian", "M.R. Meybodi"], "venue": "Grid and Distributed Computing, Control and Automation, vol. 121, T. Kim, Ed. Springer Berlin Heidelberg, 2010, pp. 216\u2013225.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Finding a maximum clique using ant colony optimization and particle swarm optimization in social networks", "author": ["M. Soleimani-Pouri", "A. Rezvanian", "M.R. Meybodi"], "venue": "Proceedings of the 2012 International Conference on Advances in Social Networks Analysis and Mining (ASONAM 2012), 2012, pp. 58-61.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "An adaptive mutation operator for artificial immune network using learning automata in dynamic environments", "author": ["A. Rezvanian", "M.R. Meybodi"], "venue": "Proceedings of the 2010 Second World Congress on Nature and Biologically Inspired Computing", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "An ant colony optimization algorithm with improved pheromone correction strategy for the minimum weight vertex cover problem", "author": ["R. Jovanovic", "M. Tuba"], "venue": "Applied Soft Computing, vol. 11, pp 5360-5366, 2011.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "A novel community detection algorithm for privacy preservation in social networks", "author": ["F. Amiri", "N. Yazdani", "H. Faili", "A. Rezvanian"], "venue": "Intelligent Informatics, vol. 18, A. Abraham, Ed. Springer Berlin Heidelberg, 2013, pp. 443\u2013450.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2013}, {"title": "An efficient simulated annealing algorithm for the minimum vertex cover", "author": ["X. Xu", "J. Ma"], "venue": "problem, Neurocomputing,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "Improved approximation algorithms for the vertex cover problem in graphs and hypergraphs", "author": ["E. Halperin"], "venue": "SIAM Journal on Computing, vol. 31, pp. 1608\u20131623, 2012.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Complexity and approximation results for the connected vertex cover problem in graphs and hypergraphs", "author": ["B. Escoffier", "L. Gourves", "J. Monnot"], "venue": "Journal of Discrete Algorithms, vol. 8, pp. 36-49, 2010.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2010}, {"title": "Local search with edge weighting and configuration checking heuristics for minimum vertex cover", "author": ["S. Cai", "K. Su", "A .Sattar"], "venue": "Artificial Intelligence, Volume 175, pp.1672-1696, 2011.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Algorithms for connected set cover problem and fault-tolerant connected set cover problem", "author": ["Z. Zhang", "X. Gao", "W. Wu"], "venue": "Theoretical Computer Science, vol. 410, pp. 812-817, 2009.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "A constructive genetic algorithm for the maximal covering location problem, Proceedings of 4 Metaheuristics International Conference (MIC", "author": ["R. Arakaki", "L. Lorena"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2001}, {"title": "speeding up learning automata based multi agent systems using the concepts of stigmergy and entropy", "author": ["B. Masoumi", "M.R. Meybodi"], "venue": "Journal of Expert Systems with Applications, vol. 38, no. 7, pp. 8105- 8118, 2011.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2011}, {"title": "Learning automata based algorithms for solving stochastic minimum spanning tree problem", "author": ["J.A. Torkestani", "M.R. Meybodi"], "venue": "Journal of Applied Soft Computing, vol. 11, no. 16, pp. 4064-4077, 2011.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2011}, {"title": "Finding minimum weight connected dominating set in stochastic graph based on learning automata", "author": ["J.A. Torkestani", "M.R. Meybodi"], "venue": "Information Sciences, no. 200, pp.57-77, 2012.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2012}, {"title": "A cellular learning automata based algorithm for solving the vertex coloring problem", "author": ["J.A. Torkestani", "M.R. Meybodi"], "venue": "Expert Systems with Applications, vol. 38, no. 8, pp. 9237-9247, 2011.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 6, "context": "Minimum vertex cover problem (MVCP) is a NP-Complete problem [7, 8] which has exponential time complexity.", "startOffset": 61, "endOffset": 67}, {"referenceID": 7, "context": "Minimum vertex cover problem (MVCP) is a NP-Complete problem [7, 8] which has exponential time complexity.", "startOffset": 61, "endOffset": 67}, {"referenceID": 15, "context": "Several practical applications of this problem include communication networks, social network [16], computer network and bioinformatics [1, 2].", "startOffset": 94, "endOffset": 98}, {"referenceID": 0, "context": "Several practical applications of this problem include communication networks, social network [16], computer network and bioinformatics [1, 2].", "startOffset": 136, "endOffset": 142}, {"referenceID": 1, "context": "Several practical applications of this problem include communication networks, social network [16], computer network and bioinformatics [1, 2].", "startOffset": 136, "endOffset": 142}, {"referenceID": 8, "context": "Thus many researchers have attracted to solve minimum vertex cover problem [9, 18].", "startOffset": 75, "endOffset": 82}, {"referenceID": 17, "context": "Thus many researchers have attracted to solve minimum vertex cover problem [9, 18].", "startOffset": 75, "endOffset": 82}, {"referenceID": 2, "context": "Theoretical studied were carried out on the set cover by Cerderia and Pinto as focusing on the inequality conditions of vertices and edges in graphs [3, 19, 21].", "startOffset": 149, "endOffset": 160}, {"referenceID": 18, "context": "Theoretical studied were carried out on the set cover by Cerderia and Pinto as focusing on the inequality conditions of vertices and edges in graphs [3, 19, 21].", "startOffset": 149, "endOffset": 160}, {"referenceID": 20, "context": "Theoretical studied were carried out on the set cover by Cerderia and Pinto as focusing on the inequality conditions of vertices and edges in graphs [3, 19, 21].", "startOffset": 149, "endOffset": 160}, {"referenceID": 14, "context": "In general, proposed solutions for MVCP are classified in two categories as heuristic and approximation algorithms [15].", "startOffset": 115, "endOffset": 119}, {"referenceID": 3, "context": "Although, exact solution as branch and bound technique has been proposed for this problem, the time complexity is very high [4].", "startOffset": 124, "endOffset": 127}, {"referenceID": 2, "context": "For example, a greedy algorithm starts with an empty set, then, at each step, selects the best candidate with maximum degree and continues to reach the stop condition [3].", "startOffset": 167, "endOffset": 170}, {"referenceID": 4, "context": "In this algorithm, the obtained result is always lower than twice the optimum solution, although this approximate method does not optimum solution but can be provided near optimal solution [5].", "startOffset": 189, "endOffset": 192}, {"referenceID": 20, "context": "In [21], two approximation algorithms have been suggested for MVCP.", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "Second algorithm uses greedy technique similar to former method while the optimal number of nodes must be determined before as input of algorithm [21].", "startOffset": 146, "endOffset": 150}, {"referenceID": 3, "context": "Another successful heuristic method for solving minimum vertex cover is genetic algorithm which finds a local optimum solution [4].", "startOffset": 127, "endOffset": 130}, {"referenceID": 3, "context": "According to local optimality, the previous methods may provide better solution for MVC, but it is shown that genetic algorithm obtains answers in less time [4, 22].", "startOffset": 157, "endOffset": 164}, {"referenceID": 21, "context": "According to local optimality, the previous methods may provide better solution for MVC, but it is shown that genetic algorithm obtains answers in less time [4, 22].", "startOffset": 157, "endOffset": 164}, {"referenceID": 10, "context": "Other successful method that can be referred here is parallel dynamic interaction (PDI), this method works much better than genetic and greedy methods in terms of convergence percentage of solution in consecutive iterations but has a higher running time and it does not provide a good result in large graphs [11].", "startOffset": 308, "endOffset": 312}, {"referenceID": 9, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 185, "endOffset": 189}, {"referenceID": 23, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 221, "endOffset": 225}, {"referenceID": 24, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 258, "endOffset": 262}, {"referenceID": 12, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 287, "endOffset": 294}, {"referenceID": 5, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 287, "endOffset": 294}, {"referenceID": 25, "context": "In recent years, several learning automata based algorithms are presented to solve graph problems and successful results have been reported in literatures such as shortest path problem [10], minimum spanning tree problem [24], minimum dominating set problem [25], maximum clique problem [13, 6] and graph coloring problem [26].", "startOffset": 322, "endOffset": 326}, {"referenceID": 11, "context": "Learning automaton (LA) [12, 14] is an abstract model of finite state machine so that it can perform finite actions which randomly chosen and evaluated by a stochastic environment and response is given as reward or penalty to LA.", "startOffset": 24, "endOffset": 32}, {"referenceID": 13, "context": "Learning automaton (LA) [12, 14] is an abstract model of finite state machine so that it can perform finite actions which randomly chosen and evaluated by a stochastic environment and response is given as reward or penalty to LA.", "startOffset": 24, "endOffset": 32}, {"referenceID": 23, "context": "If a=b learning algorithm is called linear reward penalty (LRP), if b<<a given learning algorithm is called linear reward-\u03b5 penalty (LR-\u03b5P), and finally if b=0 it is called linear reward inaction (LR-I) [24-26].", "startOffset": 203, "endOffset": 210}, {"referenceID": 24, "context": "If a=b learning algorithm is called linear reward penalty (LRP), if b<<a given learning algorithm is called linear reward-\u03b5 penalty (LR-\u03b5P), and finally if b=0 it is called linear reward inaction (LR-I) [24-26].", "startOffset": 203, "endOffset": 210}, {"referenceID": 25, "context": "If a=b learning algorithm is called linear reward penalty (LRP), if b<<a given learning algorithm is called linear reward-\u03b5 penalty (LR-\u03b5P), and finally if b=0 it is called linear reward inaction (LR-I) [24-26].", "startOffset": 203, "endOffset": 210}, {"referenceID": 9, "context": "The model of DLA network denotes a graph in each of vertex is an automaton [10].", "startOffset": 75, "endOffset": 79}, {"referenceID": 9, "context": "cause activation of LAj by LAi [10, 13].", "startOffset": 31, "endOffset": 39}, {"referenceID": 12, "context": "cause activation of LAj by LAi [10, 13].", "startOffset": 31, "endOffset": 39}, {"referenceID": 22, "context": "At successive iterations entropy value will be came down [23].", "startOffset": 57, "endOffset": 61}, {"referenceID": 19, "context": "Results of proposed algorithm (VCLA) are compared with results of state of the art techniques such as EWLS [20] and EWCC [9] in table 1.", "startOffset": 107, "endOffset": 111}, {"referenceID": 8, "context": "Results of proposed algorithm (VCLA) are compared with results of state of the art techniques such as EWLS [20] and EWCC [9] in table 1.", "startOffset": 121, "endOffset": 124}, {"referenceID": 16, "context": "Comparison of coverage in SA and ESA [17] methods for proposed algorithm is also shown in figure 5 as a bar chart", "startOffset": 37, "endOffset": 41}], "year": 2013, "abstractText": "Minimum vertex cover problem is an NP-Hard problem with the aim of finding minimum number of vertices to cover graph. In this paper, a learning automaton based algorithm is proposed to find minimum vertex cover in graph. In the proposed algorithm, each vertex of graph is equipped with a learning automaton that has two actions in the candidate or noncandidate of the corresponding vertex cover set. Due to characteristics of learning automata, this algorithm significantly reduces the number of covering vertices of graph. The proposed algorithm based on learning automata iteratively minimize the candidate vertex cover through the update its action probability. As the proposed algorithm proceeds, a candidate solution nears to optimal solution of the minimum vertex cover problem. In order to evaluate the proposed algorithm, several experiments conducted on DIMACS dataset which compared to conventional methods. Experimental results show the major superiority of the proposed algorithm over the other methods. Keywords\u2014 Minimum Vertex Cover; NP-Hard problems; Learning Automata; Distributed learning automata.", "creator": "Microsoft\u00ae Word 2010"}}}