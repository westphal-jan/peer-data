{"id": "1312.0841", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Dec-2013", "title": "Combining Simulated Annealing and Monte Carlo Tree Search for Expression Simplification", "abstract": "In many applications of computer algebra large expressions must be simplified to make repeated numerical evaluations tractable. Previous works presented heuristically guided improvements, e.g., for Horner schemes. The remaining expression is then further reduced by common subexpression elimination. A recent approach successfully applied a relatively new algorithm, Monte Carlo Tree Search (MCTS) with UCT as the selection criterion, to find better variable orderings. Yet, this approach is fit for further improvements since it is sensitive to the so-called exploration-exploitation constant $C_p$ and the number of tree updates $N$. In this paper we propose a new selection criterion called Simulated Annealing UCT (SA-UCT) that has a dynamic exploration-exploitation parameter, which decreases with the iteration number $i$ and thus reduces the importance of exploration over time. First, we provide an intuitive explanation in terms of the exploration-exploitation behavior of the algorithm. Then, we test our algorithm on three large expressions of different origins. We observe that SA-UCT widens the interval of good initial values $C_p$ where best results are achieved. The improvement is large (more than a tenfold) and facilitates the selection of an appropriate $C_p$.", "histories": [["v1", "Tue, 3 Dec 2013 14:56:28 GMT  (2131kb,D)", "http://arxiv.org/abs/1312.0841v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ben ruijl", "jos vermaseren", "aske plaat", "jaap van den herik"], "accepted": false, "id": "1312.0841"}, "pdf": {"name": "1312.0841.pdf", "metadata": {"source": "CRF", "title": "Combining Simulated Annealing and Monte Carlo Tree Search for Expression Simplification", "authors": ["Ben Ruijl", "Jos Vermaseren", "Aske Plaat", "Jaap van den Herik"], "emails": [], "sections": [{"heading": "1 INTRODUCTION", "text": "In fact, most of us are able to play by the rules that we have set ourselves to play by, \"he said in an interview with The New York Times, in which he spoke out against the New York Times."}, {"heading": "2 BACKGROUND", "text": "Numerous methods for simplifying expressions have been proposed: Horner schemes (Knuth, 1997), the elimination of general suppression (Aho et al., 1988), Breuer's growth algorithm for expression systems (Breuer, 1969), and partial syntactic factorization (Leiserson et al., 2010). In this paper, we focus on two of these schemes: Horner schemes and the common suppression animation."}, {"heading": "2.1 Horner schemes", "text": "An elementary method of reducing the number of multiplications of an expression is based on Horner's rule (Horner, 1819; Knuth, 1997; Ceberio and Kreinovich, 2004). Horner's rule is to simply cancel a variable outside of parentheses. Horner's rule can be applied to multivariate expressions several times, once for each variable, and the order of the extracted variables is called the Horner scheme. For example: x3y2 + x2y + x3z \u21d2 x2 (y + x (y2 + z)) (1) By extracting the variable x (i.e. x2 and x) twice, the number of multiplications is reduced from 9 to 4. The number of additions remains the same, which is a general property of Horner schemes. In multivariate expressions with n variables, there are n! methods to extract variables. For example, the above expression could also be converted from Toxeriz + x (see the good scheme + 2) (see first for a good example)."}, {"heading": "2.2 Common subexpression elimination", "text": "One way to reduce the number of operations even further is to eliminate a common subexpression (CSEE), a strategy well known in the compiler construction area (Aho et al., 1988). CSEE creates new symbols for each subexpression that appears twice or more, so the subexpression must be calculated only once. Figure 1 shows an example of a subexpression in a tree representation. We note that there is an interaction between Horner and CSEE in the following example: sin (x) + cos (x) + sin (x) + cos (x) x = sin (x) + cos (x) + x (sin (x) + cos (x) + cos (x) + cos (x)) = T + xTMost practical methods for detecting common subexpressions will not find sin (x) + cos (x) as subexpression in the first line, while it is detected in the second line."}, {"heading": "2.3 Monte Carlo Tree Search", "text": "Since there is an interplay between Horner systems and CSEE, there is a trade-off between (1) selecting the optimal Horner scheme, which reduces the greatest number of multiplications, and (2) selecting the Horner scheme, which suspends the maximum number of CSEs. The contrast is between (1) a Horner scheme, which reduces many multiplications, and (2) an average Horner scheme, which suspends many CSEs. Category (2) would probably reduce the number of operations more than category (1). To find the best option, an optimization method is needed to minimize the total number of operations under the Horner scheme and the CSEE scheme applied to the expression. Motivated by the successes in (Kuipers et al), we apply Monte Carlo Tree Search (MCTS) to our series of large expressions."}, {"heading": "3 OUR ALGORITHM: SA-UCT", "text": "In many MCTS implementations UCT (eq. (3)) is chosen as selection criterion q (Browne et al., 2012; Kocsis and Szepesva \u0301 ri, 2006a): argmax children c of s x (c) + 2Cp \u221a 2lnn (s) n (c) (3), where c is a child node s, x (c) the average score of the node c, n (c) the number of times the node c has been visited, and Cp the exploration exploitation constant. This constant determines the probability that a child is selected who does not have a good average score but has not been visited often. If this constant is high, more iterations are output for exploration and if this constant is low, the iterations are used in our application, the average score of operations is divided without optimizations."}, {"heading": "4 RESULTS", "text": "In (Kuipers et al., 2013a), a sensitivity analysis of the various parameters of MCTS is presented, which shows that there is a small interval of Cp for which the number of operations is close to the global best. We call this the region of interest, while we study how this region changes when we use SA-UCT as the selection criterion. (3) Our experimental setup is as follows: We compare the number of operations according to the Horner scheme and CSEE have for fixed N and different Cp structures (5) with those for the original UCT (3). In the SA-UCT, Cp is the starting value (initial temperature) T (0). We have 4000 points for each diagram (not to be confused with the number of operations on the y-axis starting with 4000).We will perform a sensitivity analysis of Cp on the number of operations for three expressions from mathematics and physics, namely HEP."}, {"heading": "5 CONCLUSION", "text": "In this work, we proposed a new UCT formula called SA-UCT, which has a decreasing exploration parameter T, similar to the temperature of simulated annealing. We compared the performance of SA-UCT with the performance of UCT using three major expressions from physics and mathematics. From our experimental results, we can preliminary conclude that SA-UCT significantly increases the range of initial temperatures Cp for which good results are obtained, making it easier to select a suitable Cp. During our research, we have identified several areas for future research."}, {"heading": "6 DISCUSSION / FUTURE WORK", "text": "In fact, the differences between the two constructions are important for MCTS because they naturally make the tree of the MCTS asymmetrical: the children of the root are all explored, but most of the nodes at the bottom are not studied. As we are interested in the entire path, this means that the end of the path can be explored too little compared to the beginnings of the path. If the major improvements are made by carefully selecting the variables at the end of the scheme, these optimizations are unlikely to be found. Figure 6 illustrates the effect that a forward and a backward scheme has on the bottom."}], "references": [{"title": "Compilers: Principles, Techniques and Tools", "author": ["A.V. Aho", "R. Sethi", "J.D. Ullman"], "venue": null, "citeRegEx": "Aho et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Aho et al\\.", "year": 1988}, {"title": "Generation of Optimal Code for Expressions via Factorization", "author": ["M.A. Breuer"], "venue": "Commun. ACM,", "citeRegEx": "Breuer,? \\Q1969\\E", "shortCiteRegEx": "Breuer", "year": 1969}, {"title": "A Survey of Monte Carlo Tree Search Methods", "author": ["C. Browne", "E. Powley", "D. Whitehouse", "S. Lucas", "P. Cowling", "P. Rohlfshagen", "S. Tavener", "D. Perez", "S. Samothrakis", "S. Colton"], "venue": null, "citeRegEx": "Browne et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Browne et al\\.", "year": 2012}, {"title": "Greedy Algorithms for Optimizing Multivariate Horner Schemes", "author": ["M. Ceberio", "V. Kreinovich"], "venue": null, "citeRegEx": "Ceberio and Kreinovich,? \\Q2004\\E", "shortCiteRegEx": "Ceberio and Kreinovich", "year": 2004}, {"title": "Efficient Selectivity and Backup Operators in Monte-Carlo Tree Search", "author": ["R. Coulom"], "venue": "In Proceedings of the 5th International Conference on Computers and Games,", "citeRegEx": "Coulom,? \\Q2007\\E", "shortCiteRegEx": "Coulom", "year": 2007}, {"title": "Accelerated UCT and Its Application to TwoPlayer Games", "author": ["J. Hashimoto", "A. Kishimoto", "K. Yoshizoe", "K. Ikeda"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "Hashimoto et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Hashimoto et al\\.", "year": 2012}, {"title": "A New Method of Solving Numerical Equations of All Orders by Continuous Approximation", "author": ["W. Horner"], "venue": "W. Bulmer & Co. Dover reprint,", "citeRegEx": "Horner,? \\Q1959\\E", "shortCiteRegEx": "Horner", "year": 1959}, {"title": "Optimization by simulated annealing", "author": ["S. Kirkpatrick", "C.D. Gelatt", "M.P. Vecchi"], "venue": null, "citeRegEx": "Kirkpatrick et al\\.,? \\Q1983\\E", "shortCiteRegEx": "Kirkpatrick et al\\.", "year": 1983}, {"title": "The Art of Computer Programming, Volume 2 (3rd Ed.)", "author": ["D.E. Knuth"], "venue": null, "citeRegEx": "Knuth,? \\Q1997\\E", "shortCiteRegEx": "Knuth", "year": 1997}, {"title": "Bandit based MonteCarlo Planning", "author": ["L. Kocsis", "C. Szepesv\u00e1ri"], "venue": "In In: ECML-06", "citeRegEx": "Kocsis and Szepesv\u00e1ri,? \\Q2006\\E", "shortCiteRegEx": "Kocsis and Szepesv\u00e1ri", "year": 2006}, {"title": "Discounted UCB. Video Lecture", "author": ["L. Kocsis", "C. Szepesv\u00e1ri"], "venue": "In the lectures of PASCAL Second Challenges Workshop", "citeRegEx": "Kocsis and Szepesv\u00e1ri,? \\Q2006\\E", "shortCiteRegEx": "Kocsis and Szepesv\u00e1ri", "year": 2006}, {"title": "Improving multivariate Horner schemes with Monte Carlo Tree Search", "author": ["J. Kuipers", "A. Plaat", "J. Vermaseren", "J. van den Herik"], "venue": "Computer Physics Communications", "citeRegEx": "Kuipers et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kuipers et al\\.", "year": 2013}, {"title": "Code Optimization in FORM", "author": ["J. Kuipers", "T. Ueda", "J. Vermaseren"], "venue": null, "citeRegEx": "Kuipers et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kuipers et al\\.", "year": 2013}, {"title": "The Computational Intelligence of MoGo Revealed in Taiwan\u2019s Computer Go Tournaments", "author": ["Lee", "C.-S", "Wang", "M.-H", "G. Chaslot", "Hoock", "J.-B", "A. Rimmel", "O. Teytaud", "Tsai", "S.-R", "Hsu", "S.-C", "Hong", "T.-P"], "venue": "IEEE Trans. Comput. Intellig. and AI", "citeRegEx": "Lee et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lee et al\\.", "year": 2009}, {"title": "Efficient Evaluation of Large Polynomials", "author": ["C.E. Leiserson", "L. Li", "M.M. Maza", "Y. Xie"], "venue": "In In Proc. International Congress of Mathematical Software ICMS", "citeRegEx": "Leiserson et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Leiserson et al\\.", "year": 2010}, {"title": "An Introduction To Quantum Field Theory (Frontiers in Physics)", "author": ["M.E. Peskin", "D.V. Schroeder"], "venue": null, "citeRegEx": "Peskin and Schroeder,? \\Q1995\\E", "shortCiteRegEx": "Peskin and Schroeder", "year": 1995}, {"title": "Investigations with Monte Carlo Tree Search for finding better multivariate Horner schemes", "author": ["J. van den Herik", "J. Kuipers", "J. Vermaseren", "A. Plaat"], "venue": "Communications in Computer and Information Science", "citeRegEx": "Herik et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Herik et al\\.", "year": 2013}, {"title": "Connecting Sciences", "author": ["J. van den Herik", "A. Plaat", "J. Kuipers", "J. Vermaseren"], "venue": "In ICAART 2013 - Proceedings of the 5th International Conference on Agents and Artificial Intelligence,", "citeRegEx": "Herik et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Herik et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 15, "context": "In order to predict the effects of currently undiscovered particles and to improve the accuracy of current HEP models, higher-order loop corrections are needed, causing the size of the expressions to grow exponentially (Peskin and Schroeder, 1995).", "startOffset": 219, "endOffset": 247}, {"referenceID": 0, "context": "CSEE is commonly used in compiler construction (Aho et al., 1988).", "startOffset": 47, "endOffset": 65}, {"referenceID": 8, "context": "Here we mention Horner schemes (Knuth, 1997), common subexpression elimination (Aho et al.", "startOffset": 31, "endOffset": 44}, {"referenceID": 0, "context": "Here we mention Horner schemes (Knuth, 1997), common subexpression elimination (Aho et al., 1988), Breuer\u2019s growth algorithm for systems of expressions (Breuer, 1969), and partial syntactic factorization (Leiserson et al.", "startOffset": 79, "endOffset": 97}, {"referenceID": 1, "context": ", 1988), Breuer\u2019s growth algorithm for systems of expressions (Breuer, 1969), and partial syntactic factorization (Leiserson et al.", "startOffset": 62, "endOffset": 76}, {"referenceID": 14, "context": ", 1988), Breuer\u2019s growth algorithm for systems of expressions (Breuer, 1969), and partial syntactic factorization (Leiserson et al., 2010).", "startOffset": 114, "endOffset": 138}, {"referenceID": 8, "context": "One elementary method of reducing the number of multiplications in an expression is based on Horner\u2019s rule (Horner, 1819; Knuth, 1997; Ceberio and Kreinovich, 2004).", "startOffset": 107, "endOffset": 164}, {"referenceID": 3, "context": "One elementary method of reducing the number of multiplications in an expression is based on Horner\u2019s rule (Horner, 1819; Knuth, 1997; Ceberio and Kreinovich, 2004).", "startOffset": 107, "endOffset": 164}, {"referenceID": 3, "context": "The problem of selecting an optimal ordering is NP-hard (Ceberio and Kreinovich, 2004).", "startOffset": 56, "endOffset": 86}, {"referenceID": 0, "context": "This strategy is well known in the field of compiler construction (Aho et al., 1988).", "startOffset": 66, "endOffset": 84}, {"referenceID": 2, "context": "See also (Browne et al., 2012).", "startOffset": 9, "endOffset": 30}, {"referenceID": 4, "context": "cessfully applied in the game of Go (Coulom, 2007).", "startOffset": 36, "endOffset": 50}, {"referenceID": 2, "context": ", (Browne et al., 2012).", "startOffset": 2, "endOffset": 23}, {"referenceID": 2, "context": "For a more detailed explanation of MCTS, see (Browne et al., 2012).", "startOffset": 45, "endOffset": 66}, {"referenceID": 5, "context": "For example, Discounted UCB (Kocsis and Szepesv\u00e1ri, 2006b) and Accelerated UCT (Hashimoto et al., 2012) both modify the average score of a node (see below) to discount old wins over new ones.", "startOffset": 79, "endOffset": 103}, {"referenceID": 2, "context": "(3)) is chosen as the selection criterion (Browne et al., 2012; Kocsis and Szepesv\u00e1ri, 2006a):", "startOffset": 42, "endOffset": 93}, {"referenceID": 7, "context": "This process can be thought of as a variant of simulated annealing (Kirkpatrick et al., 1983), where a temperature determines the probability of exploring energetically unfavorable states.", "startOffset": 67, "endOffset": 93}, {"referenceID": 14, "context": "In figure 4 we have tested our method on an expression from the field of mathematics, namely a resultant res(7,5), where res(m,n) = resx(\u2211i=0 aix,\u2211 n i=0 bix i), as described in (Leiserson et al., 2010).", "startOffset": 178, "endOffset": 202}, {"referenceID": 13, "context": "Many Go implementations currently set Cp = 0, effectively disabling UCT, but perhaps a small value for Cp is fruitful if SA-UCT is applied (Lee et al., 2009).", "startOffset": 139, "endOffset": 157}], "year": 2013, "abstractText": "In many applications of computer algebra large expressions must be simplified to make repeated numerical evaluations tractable. Previous works presented heuristically guided improvements, e.g., for Horner schemes. The remaining expression is then further reduced by common subexpression elimination. A recent approach successfully applied a relatively new algorithm, Monte Carlo Tree Search (MCTS) with UCT as the selection criterion, to find better variable orderings. Yet, this approach is fit for further improvements since it is sensitive to the so-called \u201cexploration-exploitation\u201d constant Cp and the number of tree updates N. In this paper we propose a new selection criterion called Simulated Annealing UCT (SA-UCT) that has a dynamic explorationexploitation parameter, which decreases with the iteration number i and thus reduces the importance of exploration over time. First, we provide an intuitive explanation in terms of the exploration-exploitation behavior of the algorithm. Then, we test our algorithm on three large expressions of different origins. We observe that SA-UCT widens the interval of good initial values Cp where best results are achieved. The improvement is large (more than a tenfold) and facilitates the selection of an appropriate Cp.", "creator": "TeX"}}}