{"id": "1312.5097", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Dec-2013", "title": "A Cellular Automaton Based Controller for a Ms. Pac-Man Agent", "abstract": "Video games can be used as an excellent test bed for Artificial Intelligence (AI) techniques. They are challenging and non-deterministic, this makes it very difficult to write strong AI players. An example of such a video game is Ms. Pac-Man. In this paper we will outline some of the previous techniques used to build AI controllers for Ms. Pac-Man as well as presenting a new and novel solution. My technique utilises a Cellular Automaton (CA) to build a representation of the environment at each time step of the game. The basis of the representation is a 2-D grid of cells. Each cell has a state and a set of rules which determine whether or not that cell will dominate (i.e. pass its state value onto) adjacent cells at each update. Once a certain number of update iterations have been completed, the CA represents the state of the environment in the game, the goals and the dangers. At this point, Ms. Pac-Man will decide her next move based only on her adjacent cells, that is to say, she has no knowledge of the state of the environment as a whole, she will simply follow the strongest path. This technique shows promise and allows the controller to achieve high scores in a live game, the behaviour it exhibits is interesting and complex. Moreover, this behaviour is produced by using very simple rules which are applied many times to each cell in the grid. Simple local interactions with complex global results are truly achieved.", "histories": [["v1", "Wed, 18 Dec 2013 11:08:05 GMT  (186kb,D)", "http://arxiv.org/abs/1312.5097v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["alexander darer", "peter lewis"], "accepted": false, "id": "1312.5097"}, "pdf": {"name": "1312.5097.pdf", "metadata": {"source": "CRF", "title": "Mini Project 1: A Cellular Automaton Based Controller for a Ms. Pac-Man Agent", "authors": ["Alexander Darer"], "emails": [], "sections": [{"heading": null, "text": "Video games can be used as an excellent test bed for Artificial Intelligence (AI) techniques. They are challenging and non-deterministic, which makes it very difficult to write strong AI players. An example of such a video game is Ms. Pac-Man.In this post, I outline some of the previous techniques used to build AI controllers for Ms. Pac-Man, as well as a new and novel solution. My technique uses a Cellular Automaton (CA) to create a representation of the environment at each step of the game.The basis of the representation is a 2-D grid of cells. Each cell has a state and a set of rules that determine whether that cell will dominate adjacent cells at each update (i.e. pass on its state value to them) or not. Once a certain number of updates are completed, the cell represents the state of the environment in the game, the objectives and the dangers. At this point, Ms. Pac-Man will decide her next step solely on the basis of her adjacent cells, which are really complex, these are the rules to tell the whole of the cells that they are very complex."}, {"heading": "Acknowledgements", "text": "I would like to thank my supervisor, Dr Peter Lewis, whose knowledge, guidance and experience throughout the project have been invaluable."}, {"heading": "1 Introduction to the Project 5", "text": "1.1 Novel Approach to Video Game AI............ 5 1.2 Proposed Questions and Contributions................. 61.2.1 What knowledge will I gain from this research?.... 61.3 Recent conferences and research............. 7 1.4 How will the approach be evaluated?......... 7"}, {"heading": "2 Literary Review 8", "text": "2.1 The game.................................... 92.1.1 Rules of Mrs. Pac-Man...................... 9 2.1.2 Mrs. Pac-Man vs. Ghosts......................... 92.2 Cellular Automata}, {"heading": "3 Cellular Automaton Based Approach 19", "text": "3.1. Introduction......................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................"}, {"heading": "4 Conclusion 33", "text": "4.1 A successful approach?............................................................................."}, {"heading": "5 Future Work 35", "text": "......................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................"}, {"heading": "1.1 Novel Approaches to Video Game AI", "text": "This project will present some previous research approaches and approaches to the AI of games (specific examples that apply to Ms. Pac-Man) and describe a novel technique that has not generally been applied to the AI of video games to date; the technique will be tested in a live game situation and the behavior of the player will be tested for interesting and unusual characteristics; the idea behind this research is to find out whether certain novel AI techniques that are not widely used in video games can be as effective as conventional 5 CHAPTER 1. INTRODUCTION TO PROJECT ALgorithms; there will be discussions about various examples of AI that have been used to build Ms. Pac-Man controllers, some of which are more traditional in the AI of video games and others not widely used in this context."}, {"heading": "1.2 Proposed Questions and Contributions", "text": "In this project, I will try to show why it is necessary to spend time researching the benefits of applying new techniques to the AI of games. I will compare my approach with others in the same context and hopefully show that it is promising for future research. This idea of applying a new technique to the AI of games will provide a new perspective for the field, similar to what other researchers have begun to evaluate.Formally, the questions I hope to answer are: \u2022 Why apply new techniques to the AI of games? \u2022 Why use Ms. Pac-Man as a test bed for AI? \u2022 How successful has a cellular, automaton-based approach to the problem been?"}, {"heading": "1.2.1 What Knowledge will I Gain from this Research?", "text": "During this project, I will develop several skills required to complete the research: first, I will need to critically analyze scientific work so that I have an understanding of the current research being done in this area; second, I will need to learn what different techniques are being tried, their advantages and disadvantages, so that I can decide where to conduct my own research on a novel technique; third, I will need to spend time learning the API for the simulator that will run and test my approach (as it was developed by a third party); second, I will improve my programming knowledge as my AI technique is being written from the ground up, and I will also need to implement a software interface so that it can be integrated into the simulator program; finally, I will analyze my own approach, conduct a number of different experiments to determine its performance, and then examine its behavior to see if it is promising for future research.6 CAPITER 1. INTRODUCTION THE ECT All of these research results will be published in this research report."}, {"heading": "1.3 Current Conferences and Research", "text": "Many researchers build AI controllers for Ms. Pac-Man and participate in various contests (some of which are held at conferences); the most active conferences at the moment are the IEEE Conference on Computational Intelligence and Games and the IEEE Congress on Evolutionary Computation. Competitions have been held at both conferences. Overall, many approaches have yielded good results, some very strong AI players have been produced using different techniques, but they are still relatively weak compared to the best human players."}, {"heading": "1.4 How will the Approach will be Evaluated?", "text": "My approach will be used to drive a woman Pac-Man agent in live game situations. There will be many different ways of evaluating his performance. First, there will be the results it achieves, which will allow us to compare it with other forms of Ms. Pac-Man controllers in a simple comparison. Second, the behavior it shows will be explained and analyzed for desirable traits that could be promising. On the other hand, all undesirable behavioral traits will be discussed. There will be various control cases used to compare results and behavior, which will be explained in later sections. 7Chapter 2Literary ReviewGame AI has been a very active field of research for many, many years. An enormous amount of time and money has been invested in developing \"intelligent\" AI players for a broad genre of games."}, {"heading": "2.1 The Game", "text": "Pac-Man [1] is a single-player video game developed by Namco in the 1980s. It was originally released on the Namco Pac-Man Arcade System. Since then, Pac-Man has been one of the most popular and best-known video games of all time, a true arcade classic. Ms. Pac-Man is a variant of the original game that was released in 1982 and has the same rules and goals as the original Pac-Man. The only difference between Pac-Man and Ms. Pac-Man (with the exception of the bow) is that the ghosts in Ms. Pac-Man are not deterministic in contrast to the deterministic ghosts in Pac-Man. This is a very important distinction because a player could simply remember the path the ghosts would take, and thus beat the original game. By introducing non-determinism, Ms. Pac-Man will be much more difficult, players will have to adapt to the ghosts and be reactive."}, {"heading": "2.1.1 Rules of Ms. Pac-Man", "text": "Ms. Pac-Man is a very simple game. You (as a player) have to move the Pac-Man (yellow figure) through the maze and collect all the pills (small white dots) and power pills (big white dots) while avoiding the ghosts (red, white, blue and pink figures) at all times. Once all the pills have been collected, you would advance to the next level or maze, but if you come into contact with a ghost at any time, you lose a life. If you lose all your life, the game is over. If you consume a pill, your score increases, if a power pill is consumed, the ghosts become edible, so that you can consume them and earn extra points once a ghost is consumed, it returns to the ghost cave and becomes unedible (until another power pill is consumed)."}, {"heading": "2.1.2 Ms. Pac-Man vs Ghosts", "text": "The contest Ms. Pac-Man vs. Ghosts League [7] is a competition held at the aforementioned conferences. The researchers behind the contest provide a simulator for Ms. Pac-Man, so that participants only have to program their 9CHAPTER 2. LITERARY REVIEWAI controllers (either for Pac-Man or the ghosts).The simulator provides all the other functions behind the game, including the game engine, the game state, visual effects (unfortunately no sound), etc. At each step of a running game, the controllers receive a copy of the current game state and they return a turn, which is then executed by the game engine.The program is written in Java. This simulator is a relatively new addition to the competition, in which a close-up method was used to extract game state data. In this method, a game by Ms. Pac-Man with the competing AI controller was considered to be running its entire game state from a large screen before it could even call up the next game state."}, {"heading": "2.2 Cellular Automata", "text": "Cellular automata (CA's) are nature-inspired systems that can induce incredibly complex behavior through simple, localized interactions between cells. Cells are components of a larger system - a cell lattice (or array). Each cell contains a discrete value that can be manipulated by a set of rules, which usually take into account the neighbors of the cell. Stephen Wolfram explains that cellular automata are \"mathematical idealizations of physical systems in which space and time are discrete and physical quantities assume a finite set of discrete values.\" [9] A cell can be used to model many different systems in any number of dimensions - although normally only 1-D, 2-D, or 3-D. An update to CA means that the cells in the CA have updated their values according to a set of rules. The values that a cell can take on, and the rules associated with it, depend entirely on application or implementation. What is true, however, is that any simple global CA that can only produce complex, self-organic behavior."}, {"heading": "2.3 Previous Approaches", "text": "There have been numerous different approaches to designing Ms. Pac-Man agents, some very successful, some less so. Various techniques used are varied, from nature-inspired evolutionary calculations to agents and rules-based approaches. In fact, there has been a lot of research focused on experimenting with completely different approaches, each of which has led to strange but interesting conclusions."}, {"heading": "2.3.1 Rule-Based Approaches", "text": "This year, more than ever before in the history of the city, in which it is more than ever before, it is a place, a place, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country"}, {"heading": "2.3.2 Evolutionary Computation", "text": "There have been many examples in recent years of Ms. Pac-Man agents that were based on Evolutionary Computation, his first book was [15, 17, 18, 19]. Evolutionary algorithms can be used to develop individual agents or optimize parameters that control the behavior of agents - such as a significant number of examples discussed here. However, previous research has shown that the promise of using evolutionary Tech-13CHAPTER 2 can be used to conduct experiments. LITERARY REVIEWniques, they can deliver successful results and be applied to a huge range of combinatorial and multi-objective problems. One of these is Ms. Pac-Manetic, who programmed the experiment (GP), a branch of evolutionary computing that was widely used in the development of Ms. Pac-Man agents. Since its introduction [10], GP has been featured in many machine intelligence applications, there has been a tremendous amount of research and development in the field."}, {"heading": "2.3.3 Agents", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "3.1 Introduction", "text": "Most of the techniques used for the AI of video games are quite old and traditional, approaches such as Bayesian programming, heuristic search, planning, etc. are widely used to build AI components. The reason these techniques are so popular is that they are applied to difficult problems that have existed in the real world and a virtual game world for decades. An example of such a problem is route planning, which can be solved with the help of a suitable heuristic search algorithm."}, {"heading": "3.1.1 Why use a Cellular Automaton?", "text": "The goal of this project was to design, build, test and document an approach to video game AI that has not yet been tried out or popularized. As previously explained, the game used to test the approach will be Ms. Pac-Man and the technique applied to the AI player will be a Cellular Automaton (CA).There are many reasons why a CA has been chosen as the basis for the Pac-Man controller. First, there has been very little research activity in the field of Ms. Pac-Man's multi-AI system or the game AI as a whole. Second, we believe that CA holds much promise in this area as the 19CHAPTER 3. CELLULARY AUTOMATON BASED APPROACHThey are very reactive in terms of their environment and very efficient in executing it. They also produce distinctive and complex behaviors that do not simply replicate with traditional algorithms, and most of the controllers have focused on the Pac-Man's previous approaches to the intelligence.c"}, {"heading": "3.2 Design", "text": "This year, it has reached the point where it will be able to leave the country without being a place where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, a place, a place, a place and a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, a place, a place, a place, a place, a place and a place, a place and a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place."}, {"heading": "3.2.1 Detailed Algorithm", "text": "The different values that a cell can take are: \u2022 Pac-Man \u2192 @ \u2022 Pill \u2192 p \u2022 Power Pill \u2192 P \u2022 Spirit \u2192 G \u2022 Edible Spirit \u2192 E \u2022 Empty \u2192 eThe dominance rules for each cell value are: \u2022 @ dominates [p, P, G, e] \u2022 p dominates [e] \u2022 P dominates [p, G, e] \u2022 G dominates [p, G, e] \u2022 e dominates [] The best neighborhood decision for Pac-Man (first highest priority, takes decay into account): 1. e2. p3. p4. e5. g 1Note that Pac-Man does not dominate any other cell. 3. CELLULAR AUTOMATION BASED APPROACHThe decay rule (applies to each cell value except Pac-Man and empty): D = PD 10 + (R, PD 1000), where: \u2022 D = cell decay \u2022 PD = previous cell, APPROCHMan c = previous PD = empty (except for 1000 PD PD = PD)."}, {"heading": "CA will be updated N times at each game step", "text": "1. WHILE (N! = 0): 2. FOREACH NON-EMPTY cell: 3. DO cell.dominate (cell.neighbor) 4. END FOREACH5. N = N - 16. END WHILE7. RETURN PACMAN.bestMove (PACMAN.neighbor), where: \u2022 dominate (cell.neighbor) is a function that follows the dominance rules according to cell.value. It will pass its cell.value to all the dominated cells. \u2022 bestMove (PACMAN.neighbor is a function that returns the best direction Pac-Man can move in - based on its neighbors. 2Cells initial decay value = 1.24 CHAPTEL 3. CELLUlar AUTOMATON BASED APPROACH"}, {"heading": "3.3 Implementation", "text": "Since the simulator contains the code needed to run a game by Ms. Pac-Man, the only part that needed to be implemented on my behalf was the controller. The controller is implemented in Java (since this is the language in which the simulator is encoded) and contains the CA algorithm discussed in Section 3.2.1. The software was developed using agile development methods."}, {"heading": "3.3.1 From Design to Code", "text": "The cells themselves are of type Cell, these objects contain all the necessary data that the algorithm needs - cell value, decay value, and information about the position of the cell in the grid. The cell values are converted into an enumeration - because they and the dominance rules are constant. Each cell value contains the associated dominance rule plus the decay rule. The simulator provides an abstract class that must be implemented to build a Ms. Pac-Man controller. This class contains a method that must be overridden - getMove (game in which the game has the current game state. This method is called by the game engine at every game step."}, {"heading": "3.3.2 Classes", "text": "\u2022 CApMan - contains the CA network, CA algorithm and other auxiliary functions. \u2022 CApManController - implements the controller abstract class provided by the simulator. This class initializes the CA and executes it at every step of the game. \u2022 CApManDecay - contains the decay function. \u2022 CApManConstants - contains the cell values, dominance rules and the neighbor25CHAPTER 3. CELLULAR AUTOMATON BASED APPROACH"}, {"heading": "3.4 Implementation Testing", "text": "Implementation of the CA controller has been tested formally and informally. Unit tests have been used to ensure that certain important but trivial functions produce the correct output (such as a function that returns neighbors of a given cell, or a function that updates a cell with preset parameters). Informal tests have been used to monitor CA behavior in certain scenarios (such as moving away from an adjacent cell that contains a ghost) by checking a formatted output of the CA state at a given time, essentially a large 2-D array. This was an important test because it provided us with an easy way to determine whether the controller responded to certain situations in the way we wanted."}, {"heading": "3.5 Results", "text": "Due to the noisy nature of non-deterministic video games, it is very difficult to get good results for AI controllers that accurately represent their performance, especially for Ms. Pac-Man, as there is a very large amount of randomness in each game. This means that a \"good score\" could be attributed to the luck of the player. To counteract this, each controller will play 100 full games against the same opponent. Average, minimum and maximum scores will be recorded along with the standard deviation for each controller. By playing this number of games, hopefully the gamble will be reduced and an accurate representation of the performance of the controller will be achieved. In addition to the scores for each controller, there will also be an evaluation of their behavior, which will allow a deeper analysis of each controller's performance and will allow us to isolate the desired behavioral characteristics that the controllers exhibit."}, {"heading": "3.5.1 Comparison with Baseline Controllers", "text": "The main factor that is compared between the controllers is the score scored by each of them. However, the actual behavior of the controllers is also taken into account as we want to evaluate the various behavioral characteristics and decide which (applicable) controller is more promising for future development. The first controller we use for comparison is a simple rules-based controller called StarterPacMan (included in the simulation package).This controller follows a series of static, hand-coded rules with decreasing priority: 1. If a non-editable ghost is in the immediate vicinity (20 nodes), run it away.2. Chase with the nearest edible ghost (if there is one).3. Go to the next Pill / Power PillThe second controller that is used is a human controller. There will be 10 participants with varying skill levels (from beginner to advanced), and each of them will also be played against the human player."}, {"heading": "3.5.2 Controller Performance", "text": "In this section, there are charts showing how the performance of CAp-Man changes when the number of updates is changed. It will show the initial rating of the controller (using large differences between the number of updates to 27CHAPTER 3. CELLULAR AUTOMATON BASED APPROACHFind the optimal range) and the second, more in-depth rating (testing each number of updates within the discovered optimal range).Figure 3.4 shows the results from the first rating of CAp-Man. In this experiment, the differences between the number of updates from CA are quite large. We are trying to find out in which range the global optimal number of updates lies. Figure 3.4 shows the results for the second rating. Here, we look at an infinite number of details within the optimal range - between 11 and 31. You can see how the results obtained by the controller increase by a large amount (see Figure 3.6)."}, {"heading": "3.5.3 Controller Behaviour", "text": "It has been shown that the controller acts very greedily and pursues goals that go far beyond its reach and put itself in unnecessary danger. He has shown very reactive behavior and will quickly change the direction in which he gets out of danger. He completes many levels in a game and seems to prioritize the collection of pills. Overall, this controller has played the game in a safe manner and has been incredibly good at getting out of danger in tight situations. He has shown very reactive behavior and will quickly change direction to get out of danger. He completes many levels in a game and seems to prioritize the collection of pills. Overall, this controller has played the game in a safe manner and would not haunt a ghost nearby, making it possible to achieve the highest score in the game."}, {"heading": "4.1 A Successful Approach?", "text": "Our CA-based Pac-Man controller has proven to be reactive and effective, achieving very high scores that surpass the simple Pac-Man controller and the human controller. It behaves very interestingly and shows many desired characteristics - such as the way it escapes from ghosts. It also shows promising prospects for future research and development, but it does have some weaknesses. It can be very naive when it comes into contact with ghosts and can get into inevitable situations. This problem shows that more work needs to be done, but I believe that with additional functionality and optimization, the performance of CAp-Man could be greatly improved."}, {"heading": "4.2 Contributions to the Field", "text": "This project has shown that the application of unconventional and novel techniques to game AI holds great promise for future research. It shows that the use of games like Pac-Man as a testing ground for AI techniques can be a very effective method for measuring performance and behavioural analysis. In addition, games can be used as part of a benchmarking process for various AI technologies.33 CHAPTER 4."}, {"heading": "4.3 Evaluation of the Mini Project", "text": "I believe this project has been a success, I asked questions at the beginning and answered them in the course of this report. Given the increased time, I would have liked to develop and compare several different variants of the CA-based controller with different rules and complexities, which would give a deeper understanding of how CA's can be used in the AI of games, and could provide more reasons to pursue further research in this context.34Chapter 5Future WorkThis project is open to a large amount of potential future research. As the model we have applied in this particular approach uses simple rules and interactions, there are many different ways to expand and potentially improve it."}, {"heading": "5.1 Extension 1", "text": "The number of updates made to the CA is static throughout the game. We have conducted experiments to try to find the global optimum for this, but there is uncertainty as to whether or not there is an optimum for this parameter, as we do not know how the use of different updates in the middle of a game impacts. A potential improvement in the static update parameter could be to introduce a dynamic one, and the number of CA updates performed at each game step could be changed to improve efficiency and effectiveness. For example, if we achieve a stable state in the CA, there is no point in continuing to try to update the cells."}, {"heading": "5.2 Extension 2", "text": "The rules we have applied to CAp-Man are very simple, but result in very complicated behavior. If we increase the complexity of our rules - by adding additional functionality to make cell control more effective - we could increase the global consciousness of the cell and potentially increase the performance of the controller. For example, we could use neural networks that use a cell, its neighbor, and part of the game state as input and return a Boolean value to determine whether a cell should dominate. The rules could also be dynamic and perhaps evolve over time to improve their effectiveness, which would be a good improvement if the controller faced many different types of ghost opponents over the course of a game."}, {"heading": "5.3 Extension 3", "text": "This would attempt to minimize the number of bad / wrong moves made by Pac-Man by examining possible future states that would arise when Pac-Man makes a particular move. Future states would be analyzed for undesirable results that could diminish performance. It could also be used to check whether a potential move is good or not. Of course, this would be very expensive in mathematical terms - since it means expanding into many different game states (one would also have to take into account the moves any ghost could make), but could prove to be a very good improvement in controller effectiveness. 36"}], "references": [{"title": "Statistical mechanics of cellular", "author": ["S Wolfram"], "venue": "automata. reviewers of Modern Physics,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1983}, {"title": "A Representation for the adaptive generation of simple sequential programs", "author": ["N A Cramer"], "venue": "Proc. of an Intl. Conf. on Genetic Algorithms and their Applications, Pg:", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1985}, {"title": "Genetic Programming: On the Programming of Computers by Means of Natural Selection", "author": ["J Koza"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1992}, {"title": "Automatic Controller of Ms. Pac-Man and Its Performance: Winner of the IEEE CEC 2009 Software Agent Ms. Pac-Man Competition", "author": ["Ruck Thawonmas", "Hiroshi Matsumoto"], "venue": "Graduate School of Science and Engineering,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2009}, {"title": "Ant Colony Optimization: Overview and Recent Advances", "author": ["Marco K Dorigo", "Thomas Strutzel"], "venue": "IRIDIA Technical Report Series,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Maez; PacmAnt: Optimization Based on Ant Colonies Applied to Developing an Agent for Ms. Pac-Man", "author": ["Martin Emilio", "Martinez Moises", "Recio Gustavo", "Yago"], "venue": "IEEE Conference on Computational Intelligence and Games, Pg:", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Evolving a Ms. Pac-Man Agent Controller Using Grammatical Evolution", "author": ["Edgar Galvan-Lopex", "John M Swafford", "Micael O\u2019Neill", "Anthony Brabazon"], "venue": "Applications of Evolutionary Computation,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "Evolution Strategy for Optimizing Parameters in Ms. Pac-Man Controller ICE", "author": ["Ruck Thawonmas", "Takashi Ashida"], "venue": "Pambush 3. IEEE Conference on Computational Intelligence and Games, Pg:", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Using a Training Camp with Genetic Programming to Evolve Ms Pac-Man Agents", "author": ["Atif M Alhejali", "Simon M Lucas"], "venue": "IEEE Conference on Computational Intelligence and Games, Pg:", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2011}, {"title": "Reactive Control of Ms. Pac-Man using Information Retrieval based on Genetic Programming", "author": ["Matthias F Brandstetter", "Samad Ahmadi"], "venue": "IEEE Conference on Computational Intelligence and Games, Pg:", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "[9] A CA can be used to model many different systems in any number of dimensions - though usually only 1-D, 2-D or 3-D.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "ICE Pambush 2 [12], designed by Ruck Thawonmas and Hiroshi Matsumoto, won the IEEE CEC 2009 Software Agent Ms.", "startOffset": 14, "endOffset": 18}, {"referenceID": 3, "context": "Pac-Man Competition [12], their approach used only hand-coded rules and parameters.", "startOffset": 20, "endOffset": 24}, {"referenceID": 7, "context": "The parameters used for the rules in Pambush 2 are also hand-picked and optimised, for example, in the first rule, there is the following condition: distance(nearest ghost) >= 4 The given parameter for this rule was hand-picked to try to give the greatest payout, but how do the authors know if this is the most optimum parameter for this condition? This is something they considered in the next generation of their agent, called ICE Pambush 3 [16].", "startOffset": 444, "endOffset": 448}, {"referenceID": 6, "context": "Pac-Man agents based on Evolutionary Computation [15, 17, 18, 19].", "startOffset": 49, "endOffset": 65}, {"referenceID": 8, "context": "Pac-Man agents based on Evolutionary Computation [15, 17, 18, 19].", "startOffset": 49, "endOffset": 65}, {"referenceID": 9, "context": "Pac-Man agents based on Evolutionary Computation [15, 17, 18, 19].", "startOffset": 49, "endOffset": 65}, {"referenceID": 1, "context": "Since it\u2019s introduction [10], GP has been featured in many machine intelligence applications, there has been a huge amount of research and development into the field.", "startOffset": 24, "endOffset": 28}, {"referenceID": 2, "context": "One of the first uses of GP as an automated controller for Pac-Man was described by Koza, in his first GP book[11].", "startOffset": 110, "endOffset": 114}, {"referenceID": 2, "context": "Atif Alhejali and Simon Lucas, of the Game Intelligence Group at the University of Essex, have developed a diverse and successful controller[17], using GP, based on Koza\u2019s original experiment[11].", "startOffset": 191, "endOffset": 195}, {"referenceID": 8, "context": "Alhejali and Lucas extended their original GP approach with this idea of training camps[18].", "startOffset": 87, "endOffset": 91}, {"referenceID": 8, "context": "The function set used in this GP experiment[18] is very similar to that in the previous system, except that the action terminals will now be produced using a training camp which will use GP to solve given scenarios to produce sub-agents.", "startOffset": 43, "endOffset": 47}, {"referenceID": 4, "context": "ACO has traditionally been used in route planning applications, such as solving the Travelling Salesman Problem [13], moreover, the goals in Ms.", "startOffset": 112, "endOffset": 116}, {"referenceID": 5, "context": "Pac-mAnt [14] is an implementation of ACO applied to Ms.", "startOffset": 9, "endOffset": 13}], "year": 2013, "abstractText": "Video games can be used as an excellent test bed for Artificial Intelligence (AI) techniques. They are challenging and non-deterministic, this makes it very difficult to write strong AI players. An example of such a video game is Ms. Pac-Man. In this paper I will outline some of the previous techniques used to build AI controllers for Ms. Pac-Man as well as presenting a new and novel solution. My technique utilises a Cellular Automaton (CA) to build a representation of the environment at each time step of the game. The basis of the representation is a 2-D grid of cells. Each cell has a state and a set of rules which determine whether or not that cell will dominate (i.e. pass its state value onto) adjacent cells at each update. Once a certain number of update iterations have been completed, the CA represents the state of the environment in the game, the goals and the dangers. At this point, Ms. Pac-Man will decide her next move based only on her adjacent cells, that is to say, she has no knowledge of the state of the environment as a whole, she will simply follow the strongest path. This technique shows promise and allows the controller to achieve high scores in a live game, the behaviour it exhibits is interesting and complex. Moreover, this behaviour is produced by using very simple rules which are applied many times to each cell in the grid. Simple local interactions with complex global results are truly achieved.", "creator": "LaTeX with hyperref package"}}}