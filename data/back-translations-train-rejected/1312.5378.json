{"id": "1312.5378", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Dec-2013", "title": "Skolemization for Weighted First-Order Model Counting", "abstract": "First-order model counting emerged recently as a novel reasoning task, at the core of efficient algorithms for probabilistic logics. We present a Skolemization algorithm for model counting problems that eliminates existential quantifiers from a first-order logic theory without changing its weighted model count. For certain subsets of first-order logic, lifted model counters were shown to run in time polynomial in the number of objects in the domain of discourse, where propositional model counters require exponential time. However, these guarantees apply only to Skolem normal form theories (i.e., no existential quantifiers) as the presence of existential quantifiers reduces lifted model counters to propositional ones. Since textbook Skolemization is not sound for model counting, these restrictions precluded efficient model counting for directed models, such as probabilistic logic programs, which rely on existential quantification. Our Skolemization procedure extends the applicability of first-order model counters to these representations. Moreover, it simplifies the design of lifted model counting algorithms.", "histories": [["v1", "Thu, 19 Dec 2013 00:40:56 GMT  (35kb)", "https://arxiv.org/abs/1312.5378v1", null], ["v2", "Wed, 5 Mar 2014 13:50:15 GMT  (33kb)", "http://arxiv.org/abs/1312.5378v2", "To appear in Proceedings of the 14th International Conference on Principles of Knowledge Representation and Reasoning (KR), Vienna, Austria, July 2014"]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["guy van den broeck", "wannes meert", "adnan darwiche"], "accepted": false, "id": "1312.5378"}, "pdf": {"name": "1312.5378.pdf", "metadata": {"source": "CRF", "title": "Skolemization for Weighted First-Order Model Counting", "authors": ["Guy Van den Broeck", "Wannes Meert", "Adnan Darwiche"], "emails": ["guyvdb@cs.ucla.edu", "wannes.meert@cs.kuleuven.be", "darwiche@cs.ucla.edu"], "sections": [{"heading": null, "text": "ar Xiv: 131 2.53 78v2 [cs.AI] 5M ar2 01"}, {"heading": "1 Introduction", "text": "This year is the highest in the history of the country."}, {"heading": "2 Weighted First-Order Model Counting", "text": "We start with the formal definition of the task of the first-order weighted model counting, compare it with the propositional weighted model counting and discuss existing algorithms."}, {"heading": "Background", "text": "During this work, we will work with the non-functional fragment of the finite domain of first-order logic (FOL), which we will now briefly examine. An atom P (t1,..., tn) consists of predicate P / n of unity n followed by n arguments containing either constants of a finite domain D = {A, B,...} or logical variables {x, y,...}. We use y to denote a sequence of logical variables. A letter is an atom or its negation. A formula combines atoms with logical connectors and quantifiers. A logical variable x is quantified when enclosed by an x or x. A free variable is one that cannot be quantified. A sentence is a formula without free variables. A formula is grounded if it contains no logical connections. A clause is a disjunction of words and a CNF is a connection of clauses."}, {"heading": "Definitions", "text": "We first check the propositional weighted model counting. Definition 1 (WMC). Given - a sentence in the statement logic via the dictionaries L and - a weight function w: L \u2192 R \u2265 0, the weighted model counting (WMC) isWMC (\u2206, w) =. Given - a sentence containing the predicates P, - a set of constants D, including the constants in, and - a pair of weight functions w, w: P \u2192 R, the weighted model counting first order (WFOMC) isWFOMC (\u0445, w, w) = D = constants D, including the constants in, and - a pair of weight functions w, w: P \u2192 R, the weighted model counting first order (WFOMC) isWFOMC (\u0445, w, w) = D = constants D, l = constants D (WMC, w), and - a set of weights, FOW - a pair, FOW and FOP functions in the first order."}, {"heading": "Motivation", "text": "A WFOMC problem can always be turned into a WMC problem, which we can include in a WMC problem. We can only solve this problem if it is a specific requirement, which is based on a specific requirement of the individual approaches. (WFOMC) The only underlying requirement for the exact approaches is that we can ask ourselves why we define this task at the level of the first order. (WFOMC) The motivation is calculated, how a single step of the first order resolution can perform a large number of propositional resolution steps, a WFOMC solution step can often provide exponential speedups via WMC solution ans.Firststorder quantifiers make statements about symmetrical objects, which we can lead to a large number of propositional resolution steps, a WFOMC solution step can often provide exponential answers."}, {"heading": "Algorithms", "text": "Exact solutions are based either on an exhaustive DPLL search (Sang, Beame and Kautz 2005) or on the knowledge compilation to a circuit language that supports efficient model counting, such as d-DNNF (Darwiche 2002; Chavira and Darwiche 2008) or SDD (Choi, Kisa and Darwiche 2013). Approximate WMC algorithms use local search (Wei and Selman 2005) or random samples (Gogate and Dechter 2011). More recently, algorithms have been introduced that directly solve the WFOMC task. They take a WFOMC problem and automatically generate and evaluate the expression types shown in the previous section. Their elementary operations include exponentiation, summation and binomical coefficients. They are referred to as cancelled inference algorithms. Specifically, two cancelled algorithms for exact WFOMC have been proposed, one based on primary knowledge compilation (Van den first Datgate 2011 and Van den Datgate 2011)."}, {"heading": "Normal Forms", "text": "We distinguish the following normal forms of the first order. - A theory in the Prenex clause form consists of formulas Q1x1,..., Qnxn, \u03c6, where each Qi is either a universal or existential quantifier and \u03c6 is quantifiable-free. - A theory of the first order in the Prenex clause form is a theory in the Prenex normal form, where \u03c6 is a clause. - A theory in the Skolem normal form is a theory in the Prenex normal form, in which all Qi are universal quantifiers. - A theory of the first order in the Scolem clause form is a theory in the Prenex normal form, in which \u03c6 is a clause."}, {"heading": "3 Skolemization for WFOMC", "text": "It is known that you can take any formula and convert it into prenex clausal form. This includes pushing negations inwards, pushing quantifiers forward and distributing disjunctions via conjunctions."}, {"heading": "Motivation", "text": "Not every formula can be converted into an equivalent Skolem normal form. This problem is typically solved by scolemization, which eliminates existential quantifiers from a prenex normal form by replacing existentially quantified variables with Skolem constants and functions; the result is not logically equivalent to the original formula, but only equivalent (i.e., satisfactory precisely when the original formula is satisfactory); the standard scolemization algorithm is specific to the satisfaction task and may not be suitable for other tasks; it is particularly unsuitable for the WFOMC, as it could produce a result with functions that are not permitted in the WFOMC task. For example, standard scolemization would override the formula \"x,\" \"y,\" \"WorksFor\" (x, y), \"Boss\" (x), \"Boss\" (x), \"Boss\" (x) (function) (5) with the following formula of the Solem."}, {"heading": "Algorithm", "text}, {"heading": "Intuition", "text": "Our scolemization algorithm implicitly tries to impose an equivalence between the eliminated partial expression and the Tseitin prediction4, which is explicitly represented in the three formulas of Definition 3. This equivalence contains an existential quantifier so that it cannot be explicitly represented. Instead, the algorithms force a relaxed equivalence represented by the three formulas of Definition 3. The intuition is that by loosening equivalence we introduce additional models into theory, but for every additional model weighing W there is exactly one additional model weighing weight. If Z (y) is wrong, it implies that x, x, y) is wrong, which is what is intended."}, {"heading": "Examples", "text": "We will now illustrate our skolemization algorithm with concrete examples. Suppose this model is formula 5, which means that it is x, y, WorksFor (x, y), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x, x, x), x (x, x), x (x, x), x, x (x, x), x (x), x (x, x, x, x, x, x (x), x, x, x (x, x, x), x (x, x), x (x, x, x, x, x (x), x, x, x (x), x (x, x, x, x, x (x), x, x, x (x, x, x, x, x, x, x, x (x), x, x (x, x, x, x, x, x, x, x (x), x (x, x, x, x, x, x, x, x, x (x), x, x (x), x, x, x, x, x (x, x, x, x, x, x, x, x, x, x (x), x, x, x, x (x, x, x, x, x, x, x, x (x), x (x, x, x, x, x (x), x, x, x, x (x, x, x (x), x, x (x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x"}, {"heading": "Properties", "text": "Theorem 3 proposes the repeated use of definition 3 as long as the sentence contains an existential quantifier, or a universal quantifier that is not in Prenex form. This approach has a caveat: The elimination of x, \u03c6 (x, y) adds an additional expression to the expression \u00ac \u03c6 (x, y). If we eliminate quantifiers from left to right, \u03c6 (x, y) itself may contain quantifiers, which introduces new quantifiers in \u00ac \u03c6 (x, y) and causes an explosion due to duplication in the newly added formulas. This can be avoided by eliminating quantifiers from right to left, that is, from the innermost to the outermost margin. We can show the following sentence, the proof of which is in the Appendix. Theorem 4 (Termination and Complexity) is a repetition of the application of definition 3 terminated with a sentence in Skenform."}, {"heading": "4 WFOMC Encodings", "text": "In this section, we will show how the proposed scolemization technique can expand the scope of first-order models to new situations. In particular, we will consider an undirected first-order probabilistic language (Markov logic) and a directed language (Probabilistic Logic Programs). First-order model counters currently apply to a subset of the first representation and not to the second representation. With scolemization, these model counters can now be applied to both. Our treatment is based on the provision of WFOMC encodings of these representations to which our scolemization technique is then applied. 6Consider a first-order probabilistic model that induces the distribution PrD (.) for domain D. A WFOMC coding of this model is a triple coding (\u0432, w, w, w, w, w, w, w) which guarantees that for each sentence \u03c6 (usually a connection of literature) and domain D that we have PrFOD = FOMC."}, {"heading": "Markov Logic Networks", "text": "We will now introduce a WFOMC coding for Markov logic networks (MLN) (Richardson and Domingos 2006).Representation An MLN is a series of tuples (w, \u043d), where w is a real number representing a weight and vice versa is a formula of first order (Richardson and Domingos 2006).Representation An MLN is a series of tuples (w, \u043d), where w is a real number representing a weight and vice versa is a formula of first order. (6) This statement mitigates the logical proposition we have seen before. Instead of saying that every person either has a boss or is a boss, it is stated that worlds with many employees are more likely. That is, it is now possible to have a world of unemployed, but the more unemployed there is, the less probability of this world."}, {"heading": "Encoding a Markov Logic Network", "text": "Definition 4. The WFOMC encoding (\", w, w\") of an MLN is constructed as follows: For each MLN formula (\"wi,\" \"xi\") in which \"xi\" denotes the free logical variables in \"hi,\" we introduce a parameter predicate \"Pi\" / \"xi.\" For each MLN formula, \"xi\" contains the sentence \"xi,\" \"xi\" or \"i.\" The weight function sets \"w\" (\"Pi\") = 1 and \"w\" (\"Q\") = 1 for all other predicates. \"Q. Each Pi grasps the truth value of\" i \"and carries its weight.\" Hard formulas can be encoded directly as \"Boss.\" The encoding of formula 6 is \"x,\" \"x,\" \"x,\" \"x,\" x, \"\" x, \"x,\" x, \"x.\" x, \"x.\""}, {"heading": "Probabilistic Logic Programs", "text": "The encryption is for the ProbLog language (De Raedt, Kimmig, and Toivonen 2007; Fierens et al. 2013).ProbLog representation ProbLog extends to logical programs with facts that are commented with probabilities. A ProbLog program is a set of probable facts F and a regular logic program. A logical program is a set of rules that use the form Head: - Body, where the head is an atom and the body is a compound of words. For example: Attends (x).03::: ToSeries (x).Series: - Attends (x), ToSeries (x).This program expresses that if more people participate in a workshop, it is more likely to turn into a series of workshops."}, {"heading": "5 Liftability Implications", "text": "These complexity enhancements have inspired a particular notion of upscale inference, called domain-upscale inference, which states that a WFOMC algorithm may be overridden if it runs polynomially in time in the size of D (Van den Broeck 2011).While this notion of upscale inference may not capture the perception of upscale inference for everyone, it provides a clear formal framework. In particular, we can now talk about set classes for which an algorithm is overridden in the size of D domain. We say that the algorithm for these classes is complete. We can also talk about classes of sentences for which there exists, or for which there can be no domain-upscale algorithm. We call the earlier classes liable (Jaeger and Van den Broeck 2012).All existing complexity and lift theories require that they are in the first order WFOC."}, {"heading": "6 Related Work", "text": "In coding for MLNs and probabilistic logic, the weight functions represent probabilities (indirectly) and are therefore always positive. Our scolemization algorithm introduces negative weights, which may seem strange when interpreted as negative probabilities, a problem that has been discussed before. For example, Feynman (1987) writes: \"Negative probabilities allow for an abstract calculation that allows the freedom to perform mathematical calculations in any order that greatly simplifies analysis.\" However, the potential of negative probabilities has already been observed by Jha and Suciu (2012) to answer queries in probability databases and serve as inspiration for our approach. Probabilistic databases (Suciu et al. 2011) are basically a type of first-order probability models. It can be considered a special type of weighted models that count a problem (\u0430, w), with the weight function encoding the probability w (t) with which a multiple can be found in the database."}, {"heading": "7 Conclusions", "text": "In this thesis, we have introduced a scolemization method suitable for weighted model counting of the first order. It extends the applicability of models of the first order to encodings that require an existential quantifier, such as Markov logic models with quantifiers and probabilistic logic programs. It also extends the class of first order propositions, whose models we can count efficiently."}, {"heading": "Acknowledgments", "text": "This work was supported by the ONR grant # N00014-12-10423, the NSF grant # IIS-1118122, the NSF grant # IIS-0916161 and the Research Foundation Flanders (FWO-Vlaanderen)."}, {"heading": "Appendix", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A Proof of Theorem 3", "text": "We will demonstrate the sequence of steps leading to the elimination of an existential quantifier. (This) We will demonstrate the sequence of steps leading to the elimination of an existential quantifier. (This) We will perform the following steps. (This) We will establish a new Tseitin predicate (Z / n) whose arc n is the number of y variables. (Set w) We will replace the expression w (Z) = 1 and for all other predicates P, sentence w (P) and w (P), predicate Z / n whose arc n (P) is the number of y variables by replacing the expression x, x, y) in the atom Z (y) and applying the equivalence. In each step, this step performs a Tseitin encoding of all principles. (X, y) We will play the role of the Tseitin variables."}, {"heading": "B Proof of Theorem 4", "text": "Imagine a sentence having an internal quantifier number of m. You can select any subexpression that starts with a quantifier and apply scolemization to it (potentially by converting it into a first one), reducing the internal quantifier number by a maximum of m \u2212 1. Imagine that the sentences have an internal quantifier number of m \u2212 1 at most. However, new sentences are added that contain the Tseitin and scolem predicates and expressions (x, y). These sentences also have an internal quantifier number of m \u2212 1. Imagine that the sentences have an internal quantifier number of mmax at most. Applying scolemization to a quantifier in each sentence reduces the maximum internal quantifier number to a maximum of mmax \u2212 1. Thus, reducing the quantifier number is a quantifier. By repeating this procedure, a number of steps will result."}], "references": [{"title": "Context-specific independence in Bayesian networks", "author": ["C. Boutilier", "N. Friedman", "M. Goldszmidt", "D. Koller"], "venue": "Proceedings of UAI, 115\u2013123. Morgan Kaufmann Publishers Inc.", "citeRegEx": "Boutilier et al\\.,? 1996", "shortCiteRegEx": "Boutilier et al\\.", "year": 1996}, {"title": "Compiling Bayesian networks with local structure", "author": ["M. Chavira", "A. Darwiche"], "venue": "Proceedings of IJCAI, volume 19, 1306.", "citeRegEx": "Chavira and Darwiche,? 2005", "shortCiteRegEx": "Chavira and Darwiche", "year": 2005}, {"title": "On probabilistic inference by weighted model counting", "author": ["M. Chavira", "A. Darwiche"], "venue": "Artificial Intelligence 172(6-7):772\u2013 799.", "citeRegEx": "Chavira and Darwiche,? 2008", "shortCiteRegEx": "Chavira and Darwiche", "year": 2008}, {"title": "Compiling relational Bayesian networks for exact inference", "author": ["M. Chavira", "A. Darwiche", "M. Jaeger"], "venue": "International Journal of Approximate Reasoning 42(1-2):4\u201320.", "citeRegEx": "Chavira et al\\.,? 2006", "shortCiteRegEx": "Chavira et al\\.", "year": 2006}, {"title": "Compiling probabilistic graphical models using sentential decision diagrams", "author": ["A. Choi", "D. Kisa", "A. Darwiche"], "venue": "Proceedings of the 12th European Conference on Symbolic and Quantitative Approaches to Reasoning with Uncertainty (ECSQARU).", "citeRegEx": "Choi et al\\.,? 2013", "shortCiteRegEx": "Choi et al\\.", "year": 2013}, {"title": "Negation as failure", "author": ["K. Clark"], "venue": "Readings in nonmonotonic reasoning, 311\u2013325. Morgan Kaufmann Publishers.", "citeRegEx": "Clark,? 1978", "shortCiteRegEx": "Clark", "year": 1978}, {"title": "Axiomatizing noisy-or", "author": ["F.G. Cozman"], "venue": "Proceedings of European Conference on Artificial Intelligence (ECAI), 979\u2013980.", "citeRegEx": "Cozman,? 2004", "shortCiteRegEx": "Cozman", "year": 2004}, {"title": "A logical approach to factoring belief networks", "author": ["A. Darwiche"], "venue": "Proceedings of KR 409\u2013420.", "citeRegEx": "Darwiche,? 2002", "shortCiteRegEx": "Darwiche", "year": 2002}, {"title": "Probabilistic inductive logic programming: theory and applications", "author": ["L. De Raedt", "P. Frasconi", "K. Kersting", "Muggleton", "eds"], "venue": null, "citeRegEx": "Raedt et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Raedt et al\\.", "year": 2008}, {"title": "Problog: A probabilistic prolog and its application in link discovery", "author": ["L. De Raedt", "A. Kimmig", "H. Toivonen"], "venue": "Proceedings of IJCAI, volume 7, 2462\u20132467.", "citeRegEx": "Raedt et al\\.,? 2007", "shortCiteRegEx": "Raedt et al\\.", "year": 2007}, {"title": "Efficient computation for the noisy max", "author": ["F.J. D\u0131\u0301ez", "S.F. Gal\u00e1n"], "venue": "International Journal of Intelligent Systems", "citeRegEx": "D\u0131\u0301ez and Gal\u00e1n,? \\Q2003\\E", "shortCiteRegEx": "D\u0131\u0301ez and Gal\u00e1n", "year": 2003}, {"title": "Consistency of Clark\u2019s completion and existence of stable models", "author": ["F. Fages"], "venue": "Journal of Methods of Logic in Computer Science 1:51\u201360.", "citeRegEx": "Fages,? 1994", "shortCiteRegEx": "Fages", "year": 1994}, {"title": "Negative probability", "author": ["R.P. Feynman"], "venue": "Quantum implications: essays in honour of David Bohm 235\u2013248.", "citeRegEx": "Feynman,? 1987", "shortCiteRegEx": "Feynman", "year": 1987}, {"title": "Inference in probabilistic logic programs using weighted CNF\u2019s", "author": ["D. Fierens", "G. Van den Broeck", "I. Thon", "B. Gutmann", "L. De Raedt"], "venue": "Proceedings of UAI, 211\u2013220.", "citeRegEx": "Fierens et al\\.,? 2011", "shortCiteRegEx": "Fierens et al\\.", "year": 2011}, {"title": "Inference and learning in probabilistic logic programs using weighted Boolean formulas", "author": ["D. Fierens", "G. Van den Broeck", "J. Renkens", "D. Shterionov", "B. Gutmann", "I. Thon", "G. Janssens", "L. De Raedt"], "venue": "Theory and Practice of Logic Programming.", "citeRegEx": "Fierens et al\\.,? 2013", "shortCiteRegEx": "Fierens et al\\.", "year": 2013}, {"title": "An Introduction to Statistical Relational Learning", "author": ["L. Getoor", "B. Taskar", "eds"], "venue": null, "citeRegEx": "Getoor et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Getoor et al\\.", "year": 2007}, {"title": "Samplesearch: Importance sampling in presence of determinism", "author": ["V. Gogate", "R. Dechter"], "venue": "Artificial Intelligence 175(2):694\u2013729.", "citeRegEx": "Gogate and Dechter,? 2011", "shortCiteRegEx": "Gogate and Dechter", "year": 2011}, {"title": "Probabilistic theorem proving", "author": ["V. Gogate", "P. Domingos"], "venue": "Proceedings of UAI, 256\u2013265.", "citeRegEx": "Gogate and Domingos,? 2011", "shortCiteRegEx": "Gogate and Domingos", "year": 2011}, {"title": "Advances in lifted importance sampling", "author": ["V. Gogate", "A.K. Jha", "D. Venugopal"], "venue": "Proceedings of AAAI, 1910\u20131916.", "citeRegEx": "Gogate et al\\.,? 2012", "shortCiteRegEx": "Gogate et al\\.", "year": 2012}, {"title": "Model counting", "author": ["C.P. Gomes", "A. Sabharwal", "B. Selman"], "venue": "Handbook of Satisfiability 185:633\u2013654.", "citeRegEx": "Gomes et al\\.,? 2009", "shortCiteRegEx": "Gomes et al\\.", "year": 2009}, {"title": "Herbrand logic", "author": ["T. Hinrichs", "M. Genesereth"], "venue": "Technical Report LG-2006-02, Stanford University, Stanford, CA. http://logic.stanford.edu/reports/LG-2006-02.pdf.", "citeRegEx": "Hinrichs and Genesereth,? 2006", "shortCiteRegEx": "Hinrichs and Genesereth", "year": 2006}, {"title": "Liftability of probabilistic inference: Upper and lower bounds", "author": ["M. Jaeger", "G. Van den Broeck"], "venue": "Proceedings of StarAI.", "citeRegEx": "Jaeger and Broeck,? 2012", "shortCiteRegEx": "Jaeger and Broeck", "year": 2012}, {"title": "Lower complexity bounds for lifted inference", "author": ["M. Jaeger"], "venue": "arXiv preprint arXiv:1204.3255.", "citeRegEx": "Jaeger,? 2012", "shortCiteRegEx": "Jaeger", "year": 2012}, {"title": "Representing normal programs with clauses", "author": ["T. Janhunen"], "venue": "Proceedings of European Conference on Artificial Intelligence (ECAI), volume 16, 358.", "citeRegEx": "Janhunen,? 2004", "shortCiteRegEx": "Janhunen", "year": 2004}, {"title": "Probabilistic databases with MarkoViews", "author": ["A. Jha", "D. Suciu"], "venue": "Proceedings of the VLDB Endowment 5(11):1160\u2013 1171.", "citeRegEx": "Jha and Suciu,? 2012", "shortCiteRegEx": "Jha and Suciu", "year": 2012}, {"title": "Lifted probabilistic inference", "author": ["K. Kersting"], "venue": "Proceedings of European Conference on Artificial Intelligence (ECAI).", "citeRegEx": "Kersting,? 2012", "shortCiteRegEx": "Kersting", "year": 2012}, {"title": "Algebraic model counting", "author": ["A. Kimmig", "G. Van den Broeck", "L. De Raedt"], "venue": "arXiv preprint arXiv:1211.4475.", "citeRegEx": "Kimmig et al\\.,? 2012", "shortCiteRegEx": "Kimmig et al\\.", "year": 2012}, {"title": "Lifted aggregation in directed first-order probabilistic models", "author": ["J. Kisynski", "D. Poole"], "venue": "Proceedings of IJCAI, 1922\u2013 1929.", "citeRegEx": "Kisynski and Poole,? 2011", "shortCiteRegEx": "Kisynski and Poole", "year": 2011}, {"title": "First-order probabilistic inference", "author": ["D. Poole"], "venue": "Proceedings of IJCAI, 985\u2013991.", "citeRegEx": "Poole,? 2003", "shortCiteRegEx": "Poole", "year": 2003}, {"title": "Markov logic networks", "author": ["M. Richardson", "P. Domingos"], "venue": "Machine learning 62(1-2):107\u2013136.", "citeRegEx": "Richardson and Domingos,? 2006", "shortCiteRegEx": "Richardson and Domingos", "year": 2006}, {"title": "Solving Bayesian networks by weighted model counting", "author": ["T. Sang", "P. Beame", "H. Kautz"], "venue": "Proceedings of AAAI, volume 1, 475\u2013482.", "citeRegEx": "Sang et al\\.,? 2005", "shortCiteRegEx": "Sang et al\\.", "year": 2005}, {"title": "A statistical learning method for logic programs with distribution semantics", "author": ["T. Sato"], "venue": "Proceedings of the 12th International Conference on Logic Programming (ICLP), 715\u2013729.", "citeRegEx": "Sato,? 1995", "shortCiteRegEx": "Sato", "year": 1995}, {"title": "Probabilistic databases", "author": ["D. Suciu", "D. Olteanu", "C. R\u00e9", "C. Koch"], "venue": "Synthesis Lectures on Data Management 3(2):1\u2013180.", "citeRegEx": "Suciu et al\\.,? 2011", "shortCiteRegEx": "Suciu et al\\.", "year": 2011}, {"title": "On the complexity of derivation in propositional calculus", "author": ["G.S. Tseitin"], "venue": "Automation of Reasoning. Springer. 466\u2013483.", "citeRegEx": "Tseitin,? 1983", "shortCiteRegEx": "Tseitin", "year": 1983}, {"title": "On the complexity and approximation of binary evidence in lifted inference", "author": ["G. Van den Broeck", "A. Darwiche"], "venue": "Advances in Neural Information Processing Systems 26 (NIPS).", "citeRegEx": "Broeck and Darwiche,? 2013", "shortCiteRegEx": "Broeck and Darwiche", "year": 2013}, {"title": "Conditioning in firstorder knowledge compilation and lifted probabilistic inference", "author": ["G. Van den Broeck", "J. Davis"], "venue": "Proceedings of AAAI.", "citeRegEx": "Broeck and Davis,? 2012", "shortCiteRegEx": "Broeck and Davis", "year": 2012}, {"title": "Lifted Probabilistic Inference by First-Order Knowledge Compilation", "author": ["G. Van den Broeck", "N. Taghipour", "W. Meert", "J. Davis", "L. De Raedt"], "venue": "Proceedings of IJCAI, 2178\u20132185.", "citeRegEx": "Broeck et al\\.,? 2011", "shortCiteRegEx": "Broeck et al\\.", "year": 2011}, {"title": "On the completeness of firstorder knowledge compilation for lifted probabilistic inference", "author": ["G. Van den Broeck"], "venue": "Advances in Neural Information Processing Systems 24 (NIPS), 1386\u20131394.", "citeRegEx": "Broeck,? 2011", "shortCiteRegEx": "Broeck", "year": 2011}, {"title": "Lifted Inference and Learning in Statistical Relational Models", "author": ["G. Van den Broeck"], "venue": "Ph.D. Dissertation, KU Leuven.", "citeRegEx": "Broeck,? 2013", "shortCiteRegEx": "Broeck", "year": 2013}, {"title": "The wellfounded semantics for general logic programs", "author": ["A. Van Gelder", "K.A. Ross", "J.S. Schlipf"], "venue": "Journal of the ACM (JACM) 38(3):619\u2013649.", "citeRegEx": "Gelder et al\\.,? 1991", "shortCiteRegEx": "Gelder et al\\.", "year": 1991}, {"title": "A new approach to model counting", "author": ["W. Wei", "B. Selman"], "venue": "Theory and Applications of Satisfiability Testing, 96\u201397. Springer.", "citeRegEx": "Wei and Selman,? 2005", "shortCiteRegEx": "Wei and Selman", "year": 2005}], "referenceMentions": [{"referenceID": 7, "context": "For example, exact inference algorithms for Bayesian networks encode probabilistic inference as a WMC task, which can then be solved by knowledge compilation (Darwiche 2002) or exhaustive DPLL search (Sang, Beame, and Kautz 2005).", "startOffset": 158, "endOffset": 173}, {"referenceID": 13, "context": "Efficient algorithms again reduce exact probabilistic inference to a WMC problem on a propositional knowledge base (Chavira, Darwiche, and Jaeger 2006; Fierens et al. 2011; 2013).", "startOffset": 115, "endOffset": 178}, {"referenceID": 0, "context": "Encoding first-order probabilistic models into propositional logic retains a key advantage of the Bayesian network algorithms: WMC naturally exploits determinism and local structure in the probabilistic model (Boutilier et al. 1996; Chavira and Darwiche 2005).", "startOffset": 209, "endOffset": 259}, {"referenceID": 1, "context": "Encoding first-order probabilistic models into propositional logic retains a key advantage of the Bayesian network algorithms: WMC naturally exploits determinism and local structure in the probabilistic model (Boutilier et al. 1996; Chavira and Darwiche 2005).", "startOffset": 209, "endOffset": 259}, {"referenceID": 0, "context": "Encoding first-order probabilistic models into propositional logic retains a key advantage of the Bayesian network algorithms: WMC naturally exploits determinism and local structure in the probabilistic model (Boutilier et al. 1996; Chavira and Darwiche 2005). A disadvantage is that the high-level first-order structure is lost. Poole (2003) observed that knowing the symmetries that are abundant in first-order structure can speed up probabilistic inference.", "startOffset": 210, "endOffset": 343}, {"referenceID": 0, "context": "Encoding first-order probabilistic models into propositional logic retains a key advantage of the Bayesian network algorithms: WMC naturally exploits determinism and local structure in the probabilistic model (Boutilier et al. 1996; Chavira and Darwiche 2005). A disadvantage is that the high-level first-order structure is lost. Poole (2003) observed that knowing the symmetries that are abundant in first-order structure can speed up probabilistic inference. Lifted inference algorithms reason about groups of objects as a whole, similar to the high-level reasoning of first-order resolution. This has lead Van den Broeck et al. (2011) and Gogate and Domingos (2011) to propose weighted first-order model counting (WFOMC) as the core reasoning task underlying lifted inference algorithms.", "startOffset": 210, "endOffset": 638}, {"referenceID": 0, "context": "Encoding first-order probabilistic models into propositional logic retains a key advantage of the Bayesian network algorithms: WMC naturally exploits determinism and local structure in the probabilistic model (Boutilier et al. 1996; Chavira and Darwiche 2005). A disadvantage is that the high-level first-order structure is lost. Poole (2003) observed that knowing the symmetries that are abundant in first-order structure can speed up probabilistic inference. Lifted inference algorithms reason about groups of objects as a whole, similar to the high-level reasoning of first-order resolution. This has lead Van den Broeck et al. (2011) and Gogate and Domingos (2011) to propose weighted first-order model counting (WFOMC) as the core reasoning task underlying lifted inference algorithms.", "startOffset": 210, "endOffset": 669}, {"referenceID": 29, "context": "For example, on Markov Logic Networks with quantifiers (Richardson and Domingos 2006), and various forms of Probabilistic Logic Programs (e.", "startOffset": 55, "endOffset": 85}, {"referenceID": 28, "context": "For example, on Markov Logic Networks with quantifiers (Richardson and Domingos 2006), and various forms of Probabilistic Logic Programs (e.g., De Raedt, Kimmig, and Toivonen (2007)), lifted algorithms currently provide little or no benefit over propositional ones.", "startOffset": 56, "endOffset": 182}, {"referenceID": 20, "context": "We will make use of Herbrand semantics (Hinrichs and Genesereth 2006), as is customary in statistical relational learning and probabilistic logic learning.", "startOffset": 39, "endOffset": 69}, {"referenceID": 40, "context": "2 It appears that the positive weight assumption is more intrinsic to approximate weighted model counters (Wei and Selman 2005; Gogate and Dechter 2011).", "startOffset": 106, "endOffset": 152}, {"referenceID": 16, "context": "2 It appears that the positive weight assumption is more intrinsic to approximate weighted model counters (Wei and Selman 2005; Gogate and Dechter 2011).", "startOffset": 106, "endOffset": 152}, {"referenceID": 35, "context": "This definition is based on Van den Broeck et al. (2011). WFOMC is called Lifted WMC in Gogate and Domingos (2011).", "startOffset": 36, "endOffset": 57}, {"referenceID": 17, "context": "WFOMC is called Lifted WMC in Gogate and Domingos (2011). In fact, the only underlying requirement of exact model counting approaches is that literal weights are elements from a commutative semiring (Kimmig, Van den Broeck, and De Raedt 2012).", "startOffset": 30, "endOffset": 57}, {"referenceID": 7, "context": "Exact solvers are based on either exhaustive DPLL search (Sang, Beame, and Kautz 2005), or knowledge compilation to a circuit language that supports efficient model counting, such as d-DNNF (Darwiche 2002; Chavira and Darwiche 2008) or SDD (Choi, Kisa, and Darwiche 2013).", "startOffset": 190, "endOffset": 232}, {"referenceID": 2, "context": "Exact solvers are based on either exhaustive DPLL search (Sang, Beame, and Kautz 2005), or knowledge compilation to a circuit language that supports efficient model counting, such as d-DNNF (Darwiche 2002; Chavira and Darwiche 2008) or SDD (Choi, Kisa, and Darwiche 2013).", "startOffset": 190, "endOffset": 232}, {"referenceID": 40, "context": "Approximate WMC algorithms use local search (Wei and Selman 2005) or sampling (Gogate and Dechter 2011).", "startOffset": 44, "endOffset": 65}, {"referenceID": 16, "context": "Approximate WMC algorithms use local search (Wei and Selman 2005) or sampling (Gogate and Dechter 2011).", "startOffset": 78, "endOffset": 103}, {"referenceID": 17, "context": "2011; Van den Broeck 2011; Van den Broeck 2013), and the other based on first-order DPLL search (Gogate and Domingos 2011).", "startOffset": 96, "endOffset": 122}, {"referenceID": 17, "context": "algorithms were also proposed, including lifted importance sampling (Gogate and Domingos 2011; Gogate, Jha, and Venugopal 2012).", "startOffset": 68, "endOffset": 127}, {"referenceID": 17, "context": "algorithms were also proposed, including lifted importance sampling (Gogate and Domingos 2011; Gogate, Jha, and Venugopal 2012). More generally, there is a large literature on exact and approximate lifted probabilistic inference in statistical relational models, which can be adapted to solve certain WFOMC tasks. See Kersting (2012) for an overview.", "startOffset": 69, "endOffset": 334}, {"referenceID": 33, "context": "This equivalence represents a set of propositional Tseitin encodings, in which each Z atom is a Tseitin variable (Tseitin 1983).", "startOffset": 113, "endOffset": 127}, {"referenceID": 33, "context": "When using Tseitin\u2019s transformation (Tseitin 1983), this can even be done in polynomial time.", "startOffset": 36, "endOffset": 50}, {"referenceID": 29, "context": "Markov Logic Networks We will now introduce a WFOMC encoding for Markov logic networks (MLN) (Richardson and Domingos 2006).", "startOffset": 93, "endOffset": 123}, {"referenceID": 35, "context": "Therefore, Van den Broeck et al. (2011) and Gogate and Domingos (2011) resort to grounding all quantifiers in the MLN formulas so as to obtain a CNF.", "startOffset": 19, "endOffset": 40}, {"referenceID": 17, "context": "(2011) and Gogate and Domingos (2011) resort to grounding all quantifiers in the MLN formulas so as to obtain a CNF.", "startOffset": 11, "endOffset": 38}, {"referenceID": 28, "context": "While these encodings are specific to MLNs, it is straightforward to generalize them to other undirected languages, such as parfactor graphs (Poole 2003).", "startOffset": 141, "endOffset": 153}, {"referenceID": 34, "context": "Our discussion is based on Van den Broeck et al. (2011). It is similar to the encoding of Gogate and Domingos (2011), whose parameter predicates have more arguments.", "startOffset": 35, "endOffset": 56}, {"referenceID": 17, "context": "It is similar to the encoding of Gogate and Domingos (2011), whose parameter predicates have more arguments.", "startOffset": 33, "endOffset": 60}, {"referenceID": 14, "context": "The encoding is explained for the ProbLog language (De Raedt, Kimmig, and Toivonen 2007; Fierens et al. 2013).", "startOffset": 51, "endOffset": 109}, {"referenceID": 31, "context": "The semantics of a ProbLog program \u03a6 are defined by a distribution over the groundings of the probabilistic facts for a given domain of constants D (Sato 1995).", "startOffset": 148, "endOffset": 159}, {"referenceID": 5, "context": "Encoding a ProbLog Program The transformation from a ProbLog program to a first-order logic theory is based on Clark\u2019s completion (Clark 1978).", "startOffset": 130, "endOffset": 142}, {"referenceID": 11, "context": "For certain classes of programs, called tight logic programs (Fages 1994), it is correct, in the sense that every model of the logic program is a model of the completion, and vice versa.", "startOffset": 61, "endOffset": 73}, {"referenceID": 23, "context": "If the program contains cyclic rules, the completion is not sound, and, it is necessary to first apply a conversion to remove positive loops (Janhunen 2004).", "startOffset": 141, "endOffset": 156}, {"referenceID": 6, "context": "A simple ProbLog program as the one above is identical to a noisy-or structure (Cozman 2004), popular in Bayesian network modeling.", "startOffset": 79, "endOffset": 92}, {"referenceID": 22, "context": "We call the former classes liftable (Jaeger and Van den Broeck 2012). All existing completeness and liftability theorems require that \u2206 is in first-order CNF. This requirement carries over from the existing WFOMC algorithms. Given our Skolemization algorithm, we can now restate these theorems to apply more generally. For example, the positive liftability result of Van den Broeck (2011) becomes the following", "startOffset": 37, "endOffset": 389}, {"referenceID": 33, "context": "Based on Van den Broeck and Davis (2012), and Van den Broeck and Darwiche (2013), we can now claim the following.", "startOffset": 17, "endOffset": 41}, {"referenceID": 7, "context": "Based on Van den Broeck and Davis (2012), and Van den Broeck and Darwiche (2013), we can now claim the following.", "startOffset": 65, "endOffset": 81}, {"referenceID": 32, "context": "Probabilistic databases (Suciu et al. 2011) are fundamentally a type of first-order probabilistic model.", "startOffset": 24, "endOffset": 43}, {"referenceID": 10, "context": "The use of negative probabilities has also come up for optimizing calculations for specific structures in probabilistic graphical models like noisy-or (D\u0131\u0301ez and Gal\u00e1n 2003).", "startOffset": 151, "endOffset": 173}, {"referenceID": 11, "context": "For example, Feynman (1987) writes \u201cNegative probabilities allow an abstract calculation which permits freedom to do mathematical calculations in any order simplifying the analysis enormously\u201d.", "startOffset": 13, "endOffset": 28}, {"referenceID": 11, "context": "For example, Feynman (1987) writes \u201cNegative probabilities allow an abstract calculation which permits freedom to do mathematical calculations in any order simplifying the analysis enormously\u201d. The potential of negative probabilities was already observed by Jha and Suciu (2012) for answering queries in probabilistic databases and served as inspiration for our approach.", "startOffset": 13, "endOffset": 279}, {"referenceID": 11, "context": "For example, Feynman (1987) writes \u201cNegative probabilities allow an abstract calculation which permits freedom to do mathematical calculations in any order simplifying the analysis enormously\u201d. The potential of negative probabilities was already observed by Jha and Suciu (2012) for answering queries in probabilistic databases and served as inspiration for our approach. Probabilistic databases (Suciu et al. 2011) are fundamentally a type of first-order probabilistic model. It can be viewed as a special type of weighted model counting problem (\u2206, w), where the weight function encodes the probability w(t) with which a tuple t can be found in the database. A query on such a database is typically a union of conjunctive queries (UCQ), which corresponds to a monotone DNF sentence \u2206. A noticeable difference with most WMC solvers (and WFOMC) is that the solvers for probabilistic databases expect the theory \u2206 to be in DNF instead of CNF. Different from WFOMC is that although the query (i.e., \u2206) is firstorder, the weight function is defined on the propositional level like in WMC. Weights are thus assigned to ground literals (the tuples) whereas for WFOMC weights are assigned to predicates (the tables). This allows WFOMC to exploit more types of symmetries. Jha and Suciu (2012) propose to extend probabilistic databases with MarkoViews, a representation similar to MLNs, in which each weighted formula is again a UCQ query, that is, a monotone DNF.", "startOffset": 13, "endOffset": 1287}, {"referenceID": 10, "context": "The use of negative probabilities has also come up for optimizing calculations for specific structures in probabilistic graphical models like noisy-or (D\u0131\u0301ez and Gal\u00e1n 2003). This particular case has been translated to the first-order case by Kisynski and Poole (2011) and resulted in an approach to lift noisy-or structures.", "startOffset": 152, "endOffset": 269}, {"referenceID": 10, "context": "The use of negative probabilities has also come up for optimizing calculations for specific structures in probabilistic graphical models like noisy-or (D\u0131\u0301ez and Gal\u00e1n 2003). This particular case has been translated to the first-order case by Kisynski and Poole (2011) and resulted in an approach to lift noisy-or structures. In Section 4 we showed how the application of Skolemization leads to lifting noisy-or and both methods turn out to output a similar encoding for this particular case. Therefore, the approach followed by Kisynski and Poole (2011) can be considered a special case of the Skolemization algorithm applied to a noisy-or model.", "startOffset": 152, "endOffset": 555}, {"referenceID": 10, "context": "The use of negative probabilities has also come up for optimizing calculations for specific structures in probabilistic graphical models like noisy-or (D\u0131\u0301ez and Gal\u00e1n 2003). This particular case has been translated to the first-order case by Kisynski and Poole (2011) and resulted in an approach to lift noisy-or structures. In Section 4 we showed how the application of Skolemization leads to lifting noisy-or and both methods turn out to output a similar encoding for this particular case. Therefore, the approach followed by Kisynski and Poole (2011) can be considered a special case of the Skolemization algorithm applied to a noisy-or model. Jaeger (2012) shows a negative liftability proof that uses relational Skolemization.", "startOffset": 152, "endOffset": 662}], "year": 2014, "abstractText": "First-order model counting emerged recently as a novel reasoning task, at the core of efficient algorithms for probabilistic logics. We present a Skolemization algorithm for model counting problems that eliminates existential quantifiers from a first-order logic theory without changing its weighted model count. For certain subsets of first-order logic, lifted model counters were shown to run in time polynomial in the number of objects in the domain of discourse, where propositional model counters require exponential time. However, these guarantees apply only to Skolem normal form theories (i.e., no existential quantifiers) as the presence of existential quantifiers reduces lifted model counters to propositional ones. Since textbook Skolemization is not sound for model counting, these restrictions precluded efficient model counting for directed models, such as probabilistic logic programs, which rely on existential quantification. Our Skolemization procedure extends the applicability of first-order model counters to these representations. Moreover, it simplifies the design of lifted model counting algorithms.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}