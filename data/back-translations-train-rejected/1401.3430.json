{"id": "1401.3430", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2014", "title": "A Unifying Framework for Structural Properties of CSPs: Definitions, Complexity, Tractability", "abstract": "Literature on Constraint Satisfaction exhibits the definition of several structural properties that can be possessed by CSPs, like (in)consistency, substitutability or interchangeability. Current tools for constraint solving typically detect such properties efficiently by means of incomplete yet effective algorithms, and use them to reduce the search space and boost search.", "histories": [["v1", "Wed, 15 Jan 2014 04:47:30 GMT  (257kb)", "http://arxiv.org/abs/1401.3430v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["lucas bordeaux", "marco cadoli", "toni mancini"], "accepted": false, "id": "1401.3430"}, "pdf": {"name": "1401.3430.pdf", "metadata": {"source": "CRF", "title": "A Unifying Framework for Structural Properties of CSPs: Definitions, Complexity, Tractability", "authors": ["Lucas Bordeaux", "Marco Cadoli", "Toni Mancini"], "emails": ["lucasb@microsoft.com", "cadoli@dis.uniroma1.it", "tmancini@dis.uniroma1.it"], "sections": [{"heading": "1. Introduction", "text": "In fact, it is so that most of them are able to survive themselves, and that they are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...)"}, {"heading": "2. A Hierarchy of Properties", "text": "In this section, we will formally define several structural properties of CSPs, discuss the semantic relationships that exist between them, and show how they can be exploited in solving constraints."}, {"heading": "2.1 An Intuitive Example", "text": "In order to allow a gentle introduction of the main properties examined in the next sections, we must first present the following clues: 1), 1), 2), 3), 4), 4), 5), 5 (), 5 (), 6 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\"), 7 (\") (\"(\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\") (\" (\") (\") (\") (\" (\") (\") (\") (\" (\") (\") (\") (\") (\") (\" (\") (\") (\") (\" (\") (\") (\") (\" (\") (\") (\") (\" (\") (\") (\"(\") (\") (\") (\") (\" (\") (\") (\"(\") (\") (\" (\") (\") (\"(\") (\") (\") (\"(\") (\"(\") (\") (\" (\") (\") (\"(\")) (\"(\") (\"(\" (\"(\" (\"))) (\" (\") (\" (\"(\" (\"(\" (\")))) (\" (\"(\" (\"(\" (\")) (\" (\"(\")) \"(\" (\"(\" (\")))\" (\"(\" (\"(\")) \"(\" (\"(\" (\")))\" (\"(\" (\"(\")) \"(\")"}, {"heading": "2.2 Preliminaries", "text": "Definition 1 (Constraint Satisfaction Problem (CSP), Dechter, 1992).A constraint satissfaction problem is a triple < X, D, C > where: \u2022 X is a finite set of variables; \u2022 D is a finite set of values representing the domain for each variable; \u2022 C is a finite set of constraints {c1,.. c | C |}, each of which has the form ci = ri (Vi), where Vi is a list of k \u2264 | X | variables in X (the scope of the constraint), and ri Dk is a k-like relationship over D (the constraint relationship).We will sometimes call the set Vi of constraint ci variables by var (ci)."}, {"heading": "2.3 Definitions", "text": "In this section we formally present the properties already presented in Section 2.1 and show their applicability to some examples (1991 x).The following properties are defined for a search space S, variables x and y, values a and b, and for a series of variables V: Fixable (S, x, a).The following properties are defined for a search space S (S, x, a)."}, {"heading": "2.4 Semantical Relationships", "text": "In fact, most of them are able to infiltrate themselves. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have. (...) Infiltrating themselves is the only way they have."}, {"heading": "2.5 Exploiting Properties in Constraint Solving", "text": "An important reason why the properties mentioned above are satisfactory only when detected, they allow us to reduce the search space by removing values from the active ranges of the variables. < < < < < < < < < < < < < < <"}, {"heading": "3. Complexity of reasoning", "text": "In this section, we will show that the problem of checking whether the properties of definition 2 are valid is coNP-complete. Therefore, in Section 3.2, we will try to identify specific cases where a check can be performed efficiently (i.e. in polynomial time)."}, {"heading": "3.1 Intractability Results", "text": "We also assume that the problem of verifying whether the properties of definition 2 are actually kept in coNP, because it is possible for each of them to find a counterexample by checking a tuple in S (two, in the case of dependence) in non-deterministic polynomial properties in S (two, in the case of dependence) in the non-deterministic polynomial time and checking whether the negation of the subformula holds between parentheses (as for the interchangeability, which we note that the logical \"and\" two properties in coNP are still in coNP)."}, {"heading": "3.2 Tractability Results", "text": "Since the detection of one of the properties we are interested in is a mathematically difficult problem, it is a natural question to identify specific cases where efficient verification is possible. To this end, we are examining two approaches: We have syntactic constraints that make the problem comprehensible, and we are examining local loosening of definitions that are polynomial-time checkable and therefore provide incomplete algorithms for detecting the different properties."}, {"heading": "3.2.1 Tractability for Restricted Constraint Languages", "text": "A number of syntactical constraints to satisfy the constraints are known to make it tractable. Thus, for example, in the case of Boolean constraints, i.e., the satisfaction problems become tractable if the instance is expressed only with horn clauses (i.e., clauses with at most one negative letter), only clauses of size 2 or only affine constraints (i.e., formulations created using XOR), which are known as Sch\u00e4fers (1978) classes. It is natural to wonder whether all the properties identified in Definition 2 are also easy to determine for these classes of formulations, and we give a more general condition under which tractable classes for consistency properties are also tractable."}, {"heading": "3.2.2 Tractability Through Locality", "text": "In fact, the fact is that most people who have chosen such a policy are not able to play by the rules, \"he said.\" It's the way it is, \"he added.\" It's as if people are able to choose such a policy, \"he said.\" It's the way it is, \"he added,\" but it's not as if. \""}, {"heading": "4. Conclusions and Perspectives", "text": "These characteristics can, of course, also be applied in other areas, such as those in which new concepts are being developed."}, {"heading": "Acknowledgments", "text": "This essay is an extended and revised version of Bordeaux, Cadoli and Mancini (2004)."}], "references": [{"title": "Exploiting fixable, substitutable and determined values in constraint satisfaction problems", "author": ["L. Bordeaux", "M. Cadoli", "T. Mancini"], "venue": "Proceedings of the Eleventh International Conference on Logic for Programming and Automated Reasoning (LPAR 2004),", "citeRegEx": "Bordeaux et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Bordeaux et al\\.", "year": 2004}, {"title": "Generalizing consistency and other constraint properties to quantified constraints", "author": ["L. Bordeaux", "M. Cadoli", "T. Mancini"], "venue": "ACM Transactions on Computational Logic. To appear", "citeRegEx": "Bordeaux et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bordeaux et al\\.", "year": 2008}, {"title": "Using a theorem prover for reasoning on constraint problems", "author": ["M. Cadoli", "T. Mancini"], "venue": "Applied Artificial Intelligence,", "citeRegEx": "Cadoli and Mancini,? \\Q2007\\E", "shortCiteRegEx": "Cadoli and Mancini", "year": 2007}, {"title": "The complexity of Unique k-SAT: An isolation lemma for k-CNFs", "author": ["C. Calabro", "R. Impagliazzo", "V. Kabanets", "R. Paturi"], "venue": "In Proceedings of the Eighteenth IEEE Conference on Computational Complexity (CCC 2003),", "citeRegEx": "Calabro et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Calabro et al\\.", "year": 2003}, {"title": "On the computation of local interchangeability in Discrete Constraint Satisfaction Problems", "author": ["B.Y. Choueiry", "G. Noubir"], "venue": "In Proceedings of the Fifteenth National Conference on Artificial Intelligence", "citeRegEx": "Choueiry and Noubir,? \\Q1998\\E", "shortCiteRegEx": "Choueiry and Noubir", "year": 1998}, {"title": "A theoretical analysis of reasoning by symmetry in first-order logic (extended abstract)", "author": ["J.M. Crawford"], "venue": "Proceedings of Workshop on Tractable Reasoning, in conjunction with the Tenth National Conference on Artificial Intelligence (AAAI\u201992), San Jose, CA, USA.", "citeRegEx": "Crawford,? 1992", "shortCiteRegEx": "Crawford", "year": 1992}, {"title": "Symmetry-breaking predicates for search problems", "author": ["J.M. Crawford", "M.L. Ginsberg", "E.M. Luks", "A. Roy"], "venue": "In Proceedings of the Fifth International Conference on the Principles of Knowledge Representation and Reasoning", "citeRegEx": "Crawford et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Crawford et al\\.", "year": 1996}, {"title": "A computing procedure for Quantification Theory", "author": ["M. Davis", "H. Putnam"], "venue": "Journal of the ACM,", "citeRegEx": "Davis and Putnam,? \\Q1960\\E", "shortCiteRegEx": "Davis and Putnam", "year": 1960}, {"title": "Constraint networks (survey)", "author": ["R. Dechter"], "venue": "Encyclopedia of Artificial Intelligence, 2nd edition, pp. 276\u2013285. John Wiley & Sons.", "citeRegEx": "Dechter,? 1992", "shortCiteRegEx": "Dechter", "year": 1992}, {"title": "The complexity of promise problems with applications to public-key cryptography", "author": ["S. Even", "A. Selman", "Y. Yacobi"], "venue": "Information and Control,", "citeRegEx": "Even et al\\.,? \\Q1984\\E", "shortCiteRegEx": "Even et al\\.", "year": 1984}, {"title": "Synthesizing constraint expressions", "author": ["E.C. Freuder"], "venue": "Communications of the ACM, 21 (11), 958\u2013966.", "citeRegEx": "Freuder,? 1978", "shortCiteRegEx": "Freuder", "year": 1978}, {"title": "Eliminating interchangeable values in Constraint Satisfaction Problems", "author": ["E.C. Freuder"], "venue": "Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI\u201991), pp. 227\u2013233, Anaheim, CA, USA. AAAI Press/The MIT Press.", "citeRegEx": "Freuder,? 1991", "shortCiteRegEx": "Freuder", "year": 1991}, {"title": "Symmetry breaking during search in constraint programming", "author": ["I.P. Gent", "B. Smith"], "venue": "In Proceedings of the Fourteenth European Conference on Artificial Intelligence (ECAI", "citeRegEx": "Gent and Smith,? \\Q2000\\E", "shortCiteRegEx": "Gent and Smith", "year": 2000}, {"title": "QCSP-Solve: A solver for Quantified Constraint Satisfaction Problems", "author": ["I. Gent", "P. Nightingale", "K. Stergiou"], "venue": "In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI", "citeRegEx": "Gent et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Gent et al\\.", "year": 2005}, {"title": "Act, and the rest will follow: Exploiting determinism in planning as satisfiability", "author": ["E. Giunchiglia", "A. Massarotto", "R. Sebastiani"], "venue": "In Proceedings of the Fifteenth National Conference on Artificial Intelligence", "citeRegEx": "Giunchiglia et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Giunchiglia et al\\.", "year": 1998}, {"title": "Recognizing frozen variables in constraint satisfaction problems", "author": ["P. Jonsson", "A. Krokhin"], "venue": "Theoretical Computer Science,", "citeRegEx": "Jonsson and Krokhin,? \\Q2004\\E", "shortCiteRegEx": "Jonsson and Krokhin", "year": 2004}, {"title": "Computational complexity of auditing discrete attributes in statistical databases", "author": ["P. Jonsson", "A. Krokhin"], "venue": "Journal of Computer and System Sciences", "citeRegEx": "Jonsson and Krokhin,? \\Q2008\\E", "shortCiteRegEx": "Jonsson and Krokhin", "year": 2008}, {"title": "The graph isomorphism problem: its computational complexity", "author": ["J. K\u00f6bler", "U. Sch\u00f6ning", "J. Tor\u00e1n"], "venue": null, "citeRegEx": "K\u00f6bler et al\\.,? \\Q1993\\E", "shortCiteRegEx": "K\u00f6bler et al\\.", "year": 1993}, {"title": "Interchangeability and dynamic bundling for non-binary finite CSPs", "author": ["A. Lal", "B. Choueiry", "E.C. Freuder"], "venue": "In Proceedings of the Twentieth National Conference on Artificial Intelligence (AAAI", "citeRegEx": "Lal et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Lal et al\\.", "year": 2005}, {"title": "Algorithms in number theory", "author": ["A. Lenstra", "H.W. Lenstra"], "venue": "The Handbook of Theoretical Computer Science,", "citeRegEx": "Lenstra and Lenstra,? \\Q1990\\E", "shortCiteRegEx": "Lenstra and Lenstra", "year": 1990}, {"title": "Integrating equivalency reasoning into Davis-Putnam procedure", "author": ["C.M. Li"], "venue": "Proceedings of the Seventeenth National Conference on Artificial Intelligence (AAAI 2000), pp. 291\u2013296, Austin, TX, USA. AAAI Press/The MIT Press.", "citeRegEx": "Li,? 2000", "shortCiteRegEx": "Li", "year": 2000}, {"title": "Consistency in networks of relations", "author": ["A.K. Mackworth"], "venue": "Artificial Intelligence, 8, 99\u2013118.", "citeRegEx": "Mackworth,? 1977", "shortCiteRegEx": "Mackworth", "year": 1977}, {"title": "Detecting and breaking symmetries by reasoning on problem specifications", "author": ["T. Mancini", "M. Cadoli"], "venue": "In Proceedings of the Sixth International Symposium on Abstraction, Reformulation and Approximation (SARA 2005),", "citeRegEx": "Mancini and Cadoli,? \\Q2005\\E", "shortCiteRegEx": "Mancini and Cadoli", "year": 2005}, {"title": "Exploiting functional dependencies in declarative problem specifications", "author": ["T. Mancini", "M. Cadoli"], "venue": "Artificial Intelligence,", "citeRegEx": "Mancini and Cadoli,? \\Q2007\\E", "shortCiteRegEx": "Mancini and Cadoli", "year": 2007}, {"title": "Evaluating ASP and commercial solvers on the CSPLib", "author": ["T. Mancini", "M. Cadoli", "D. Micaletto", "F. Patrizi"], "venue": null, "citeRegEx": "Mancini et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Mancini et al\\.", "year": 2008}, {"title": "Determining computational complexity from characteristic phase transitions", "author": ["R. Monasson", "R. Zecchina", "S. Kirkpatrick", "B. Selman", "L. Troyansky"], "venue": null, "citeRegEx": "Monasson et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Monasson et al\\.", "year": 1999}, {"title": "Networks of constraints: Fundamental properties and applications to picture processing", "author": ["U. Montanari"], "venue": "Information Sciences, 7 (2), 85\u2013132.", "citeRegEx": "Montanari,? 1974", "shortCiteRegEx": "Montanari", "year": 1974}, {"title": "Computational Complexity", "author": ["C.H. Papadimitriou"], "venue": "Addison Wesley Publishing Company, Reading, Massachussetts, Reading, MA.", "citeRegEx": "Papadimitriou,? 1994", "shortCiteRegEx": "Papadimitriou", "year": 1994}, {"title": "Factoring benchmarks for SAT solvers", "author": ["T. Pyh\u00e4l\u00e4"], "venue": "Tech. rep., Helsinki university of technology.", "citeRegEx": "Pyh\u00e4l\u00e4,? 2004", "shortCiteRegEx": "Pyh\u00e4l\u00e4", "year": 2004}, {"title": "Managing don\u2019t cares in Boolean Satisfiability", "author": ["S. Safarpour", "A. Veneris", "R. Drechsler", "J. Lee"], "venue": "In Proceedings of Design Automation and Test Conference in Europe (DATE", "citeRegEx": "Safarpour et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Safarpour et al\\.", "year": 2004}, {"title": "The complexity of satisfiability problems", "author": ["T.J. Schaefer"], "venue": "Proceedings of the Tenth ACM Symposium on Theory of Computing (STOC\u201978), pp. 216\u2013226, San Diego, CA, USA. ACM Press.", "citeRegEx": "Schaefer,? 1978", "shortCiteRegEx": "Schaefer", "year": 1978}, {"title": "Solving non-clausal formulas with DPLL search", "author": ["C. Thiffault", "F. Bacchus", "T. Walsh"], "venue": "In Proceedings of the Tenth International Conference on Principles and Practice of Constraint Programming (CP 2004),", "citeRegEx": "Thiffault et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Thiffault et al\\.", "year": 2004}, {"title": "NP is as easy as detecting unique solutions", "author": ["L.G. Valiant", "V.V. Vijay V. Vazirani"], "venue": "Theoretical Computer Science,", "citeRegEx": "Valiant and Vazirani,? \\Q1986\\E", "shortCiteRegEx": "Valiant and Vazirani", "year": 1986}], "referenceMentions": [{"referenceID": 20, "context": "Journal of Artificial Intelligence Research 32 (2008) 607\u2013629 Submitted 01/08; published 06/08", "startOffset": 27, "endOffset": 54}, {"referenceID": 21, "context": "Good examples are value inconsistency (Mackworth, 1977; Montanari, 1974), substitutability and interchangeability (Freuder, 1991), more general", "startOffset": 38, "endOffset": 72}, {"referenceID": 26, "context": "Good examples are value inconsistency (Mackworth, 1977; Montanari, 1974), substitutability and interchangeability (Freuder, 1991), more general", "startOffset": 38, "endOffset": 72}, {"referenceID": 11, "context": "Good examples are value inconsistency (Mackworth, 1977; Montanari, 1974), substitutability and interchangeability (Freuder, 1991), more general", "startOffset": 114, "endOffset": 129}, {"referenceID": 20, "context": "forms of symmetries (Crawford, Ginsberg, Luks, & Roy, 1996; Gent & Smith, 2000), and functional dependencies among variables (Li, 2000; Mancini & Cadoli, 2007).", "startOffset": 125, "endOffset": 159}, {"referenceID": 11, "context": "Value a is said to be interchangeable with value b for variable x if every solution which assigns a to x remains a solution if x is changed to b, and vice versa (Freuder, 1991).", "startOffset": 161, "endOffset": 176}, {"referenceID": 5, "context": "Analogously, detecting some other forms of symmetry reduces to the graph automorphism problem (Crawford, 1992) (for which there is no known polynomial time algorithm, even if there is evidence that it is not NP-complete, K\u00f6bler, Sch\u00f6ning, & Tor\u00e1n, 1993).", "startOffset": 94, "endOffset": 110}, {"referenceID": 5, "context": "forms of symmetries (Crawford, Ginsberg, Luks, & Roy, 1996; Gent & Smith, 2000), and functional dependencies among variables (Li, 2000; Mancini & Cadoli, 2007). Unfortunately, checking whether such properties hold, is (or is thought to be) often computationally hard. As an example, let us consider interchangeability. Value a is said to be interchangeable with value b for variable x if every solution which assigns a to x remains a solution if x is changed to b, and vice versa (Freuder, 1991). The problem of checking interchangeability is coNP-complete (cf. Proposition 4). Analogously, detecting some other forms of symmetry reduces to the graph automorphism problem (Crawford, 1992) (for which there is no known polynomial time algorithm, even if there is evidence that it is not NP-complete, K\u00f6bler, Sch\u00f6ning, & Tor\u00e1n, 1993). To this end, in order to allow general algorithms to exploit such properties efficiently, different approaches can be followed. First of all, syntactic restrictions on the constraint languages can be enforced, in order to allow the efficient verification of the properties of interest. Alternatively, \u201clocal\u201d versions of such properties can be defined, that can be used to infer their global counterparts, and that can be verified in polynomial time. As an instance of this \u201clocal reasoning\u201d approach, instead of checking whether a value is fully interchangeable for a variable, Freuder (1991) proposes to check whether that value is neighbourhood, or k-interchangeable.", "startOffset": 21, "endOffset": 1427}, {"referenceID": 28, "context": "Example 1 (Factoring, Lenstra & Lenstra, 1990; Pyh\u00e4l\u00e4, 2004).", "startOffset": 10, "endOffset": 60}, {"referenceID": 11, "context": "As for interchangeability, it is well-known (Freuder, 1991) that it can be defined in terms of substitutability: interchangeable(S, x, a, b) \u2261 substitutable(S, x, a, b) \u2227 substitutable(S, x, b, a)", "startOffset": 44, "endOffset": 59}, {"referenceID": 22, "context": "In particular, the notion of consistency was proposed by Montanari (1974) and Mackworth (1977), and is one of the best-studied notions in CSP.", "startOffset": 57, "endOffset": 74}, {"referenceID": 18, "context": "In particular, the notion of consistency was proposed by Montanari (1974) and Mackworth (1977), and is one of the best-studied notions in CSP.", "startOffset": 78, "endOffset": 95}, {"referenceID": 10, "context": "Substitutability and interchangeability were introduced by Freuder (1991). Implied values, which are also known in the literature as backbones, were seemingly first studied explicitly by Monasson, Zecchina, Kirkpatrick, Selman, and Troyansky (1999).", "startOffset": 59, "endOffset": 74}, {"referenceID": 10, "context": "Substitutability and interchangeability were introduced by Freuder (1991). Implied values, which are also known in the literature as backbones, were seemingly first studied explicitly by Monasson, Zecchina, Kirkpatrick, Selman, and Troyansky (1999). To the best of our knowledge, the notions of removable and fixable values (which, as we show in Section 2.", "startOffset": 59, "endOffset": 249}, {"referenceID": 20, "context": "Solution-preserving transformations are interesting because they allow us to remove values from the search space while preserving the satisfiability of the problem. Moreover, the correspondence between some properties and the existence of particular solution-preserving mappings shows that interesting connections hold among these properties and other concepts, like symmetries. As an example, Mancini and Cadoli (2005) give a logical characterisation of symmetries in problem specifications, which is very similar to, and in fact stronger than, that of Definition 3.", "startOffset": 144, "endOffset": 420}, {"referenceID": 26, "context": "In particular, several properties have successfully been exploited for this purpose, like inconsistency (Montanari, 1974; Mackworth, 1977), substitutability (Freuder, 1991), irrelevance (Thiffault et al.", "startOffset": 104, "endOffset": 138}, {"referenceID": 21, "context": "In particular, several properties have successfully been exploited for this purpose, like inconsistency (Montanari, 1974; Mackworth, 1977), substitutability (Freuder, 1991), irrelevance (Thiffault et al.", "startOffset": 104, "endOffset": 138}, {"referenceID": 11, "context": "In particular, several properties have successfully been exploited for this purpose, like inconsistency (Montanari, 1974; Mackworth, 1977), substitutability (Freuder, 1991), irrelevance (Thiffault et al.", "startOffset": 157, "endOffset": 172}, {"referenceID": 31, "context": "In particular, several properties have successfully been exploited for this purpose, like inconsistency (Montanari, 1974; Mackworth, 1977), substitutability (Freuder, 1991), irrelevance (Thiffault et al., 2004; Safarpour et al., 2004), implication (Monasson et al.", "startOffset": 186, "endOffset": 234}, {"referenceID": 29, "context": "In particular, several properties have successfully been exploited for this purpose, like inconsistency (Montanari, 1974; Mackworth, 1977), substitutability (Freuder, 1991), irrelevance (Thiffault et al., 2004; Safarpour et al., 2004), implication (Monasson et al.", "startOffset": 186, "endOffset": 234}, {"referenceID": 25, "context": ", 2004), implication (Monasson et al., 1999), dependence (Mancini & Cadoli, 2007).", "startOffset": 21, "endOffset": 44}, {"referenceID": 20, "context": "guarantees that all solutions (and not only the satisfiability of the problem) are preserved. Hence removability plays exactly the same role of inconsistency in case we do not want to find all solutions of a problem but simply want to find one. In such situations removability is the ideal property to use. As for the other properties, it is worth noting that, although they may appear very strong and unlikely at a first sight, they can still play a precious role when detected dynamically during search. As an example, Thiffault et al. (2004) show that dynamically detecting variables that become irrelevant during search (called don\u2019t care variables in the paper) can greatly speed-up non-CNF SAT solvers, by actually separating problems into independent components.", "startOffset": 58, "endOffset": 545}, {"referenceID": 8, "context": "Such properties hold for propositional logic and for CSPs, in the sense of Dechter (1992). We note that the problem of checking whether properties of Definition 2 hold is in coNP, because, for each of them it is possible to find a counter-example by guessing a tuple in S (two, in case of dependency) in non-deterministic polynomial time, and checking, in polynomial time, whether the negation of the subformula between parentheses holds (as for interchangeability, we note that the logical \u201cand\u201d of two properties in coNP is still in coNP).", "startOffset": 75, "endOffset": 90}, {"referenceID": 20, "context": ", propositional formulae, the satisfiability problem becomes tractable if the instance is expressed using only Horn clauses, only dual Horn clauses (i.e., clauses with at most one negative literal), only clauses of size at most 2, or only affine constraints (i.e., formulae built using XOR). These are known as the Schaefer\u2019s (1978) classes.", "startOffset": 40, "endOffset": 333}, {"referenceID": 21, "context": "This approach has proved extremely successful for consistency (Mackworth, 1977) and interchangeability (Freuder, 1991) (cf.", "startOffset": 62, "endOffset": 79}, {"referenceID": 11, "context": "This approach has proved extremely successful for consistency (Mackworth, 1977) and interchangeability (Freuder, 1991) (cf.", "startOffset": 103, "endOffset": 118}, {"referenceID": 21, "context": "The result is well-known for consistency (Mackworth, 1977), substitutability and interchangeability (Freuder, 1991).", "startOffset": 41, "endOffset": 58}, {"referenceID": 11, "context": "The result is well-known for consistency (Mackworth, 1977), substitutability and interchangeability (Freuder, 1991).", "startOffset": 100, "endOffset": 115}, {"referenceID": 20, "context": "This paper is an extended and revised version of Bordeaux, Cadoli, and Mancini (2004).", "startOffset": 63, "endOffset": 86}], "year": 2008, "abstractText": "Literature on Constraint Satisfaction exhibits the definition of several \u201cstructural\u201d properties that can be possessed by CSPs, like (in)consistency, substitutability or interchangeability. Current tools for constraint solving typically detect such properties efficiently by means of incomplete yet effective algorithms, and use them to reduce the search space and boost search. In this paper, we provide a unifying framework encompassing most of the properties known so far, both in CSP and other fields\u2019 literature, and shed light on the semantical relationships among them. This gives a unified and comprehensive view of the topic, allows new, unknown, properties to emerge, and clarifies the computational complexity of the various detection problems. In particular, among the others, two new concepts, fixability and removability emerge, that come out to be the ideal characterisations of values that may be safely assigned or removed from a variable\u2019s domain, while preserving problem satisfiability. These two notions subsume a large number of known properties, including inconsistency, substitutability and others. Because of the computational intractability of all the property-detection problems, by following the CSP approach we then determine a number of relaxations which provide sufficient conditions for their tractability. In particular, we exploit forms of language restrictions and local reasoning.", "creator": "TeX"}}}