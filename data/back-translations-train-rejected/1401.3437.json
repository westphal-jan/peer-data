{"id": "1401.3437", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2014", "title": "Learning Partially Observable Deterministic Action Models", "abstract": "We present exact algorithms for identifying deterministic-actions effects and preconditions in dynamic partially observable domains. They apply when one does not know the action model(the way actions affect the world) of a domain and must learn it from partial observations over time. Such scenarios are common in real world applications. They are challenging for AI tasks because traditional domain structures that underly tractability (e.g., conditional independence) fail there (e.g., world features become correlated). Our work departs from traditional assumptions about partial observations and action models. In particular, it focuses on problems in which actions are deterministic of simple logical structure and observation models have all features observed with some frequency. We yield tractable algorithms for the modified problem for such domains.", "histories": [["v1", "Wed, 15 Jan 2014 04:52:56 GMT  (469kb)", "http://arxiv.org/abs/1401.3437v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["eyal amir", "allen chang"], "accepted": false, "id": "1401.3437"}, "pdf": {"name": "1401.3437.pdf", "metadata": {"source": "CRF", "title": "Learning Partially Observable Deterministic Action Models", "authors": ["Eyal Amir", "Allen Chang"], "emails": ["EYAL@ILLINOIS.EDU", "ALLENC256@YAHOO.COM"], "sections": [{"heading": null, "text": "Our algorithms output all or one of these models (depending on our choice) and are accurate in that no model is misclassified based on the observations. By contrast, our algorithms take polynomial time in the number of time steps and state characteristics of some of the traditional action classes studied in the AI planning literature, such as STRIPS actions. By contrast, traditional approaches to HMMs and Reinforcement Learning are inaccurate and exponentially intractable in such areas. Our experiments verify the theoretical traceability guarantees and show that we accurately identify action models. Multiple applications in planning, autonomous exploration and adventure games are already taking advantage of these results, promising for probable settings, partially observable reinforcement learning and diagnosis."}, {"heading": "1. Introduction", "text": "There are many examples of such situations available in all areas of life, such as the physical worlds (we do not observe the position of things in other spaces), the Internet (we do not observe more than a few websites at once), and interpersonal communication (we do not observe the state of mind of our partners). When agents explore a new domain (for example, you go into a building or meet a new person), they have limited knowledge of their action models and effects. These action models do not change with time, but they can depend on state characteristics. Such agents can act intelligently if they learn how their actions affect the world and use that knowledge to respond to their objections.c All rights are reserved."}, {"heading": "2. Simultaneous Learning and Filtering (SLAF)", "text": "Simultaneous Learning and Filtering (SLAF) is the problem of tracking a dynamic system from a sequence of time steps and partial observations when we do not have the complete dynamics of the system. A solution for SLAF is a representation of all combinations of action models that may have led to the observations in the input, and a representation of all the corresponding states in which the system can now be (according to the sequence of time steps given in the input). Computing (the solution for) SLAF can be carried out recursively through the dynamic programming in which we determine SLAF for the time step t + 1 from our solution of SLAF for the time t. In this section we formally define SLAF in such a recursive mode. Ignoring stochastic information or assumptions, SLAF involves determining the possible ways in which actions can change the world."}, {"heading": "In its possession are three different keys, and suppose the agent cannot tell from observation only which key opens the door. The goal of the agent is to unlock the door.", "text": "This state is represented as follows: < a set of variables defining the state space is considered to be consistent with our beliefs. < < < a set of variables defining the state space is considered to be P = > locked, where the door is locked when and only when the door is locked. < a set of states is represented as S = {s1, s2} in which the agent tries to unlock the door with each of the three keys. Let R1 = {< s1, s2 >, s1, < s1, s1 >, s1 >, s1 >, s1 represent a transitional relationship in which key 1 does not unlock the door and the other keys. Define R2 and R3 similarly (e.g., with keys 2 and 3)."}, {"heading": "3. Learning by Logical Inference", "text": "The reason for this is the explicit representation of the very large number of possible transition state pairs. Instead, in this section and the rest of this paper, we represent transition states more compactly using propositional logic. However, in many scenarios, we are motivated by the success of propositional (logical) approaches to logical filtering (Amir & Russell, 2003; Shahaf & Amir, 2007) and logical database-based regression (Reiter, 1991, 2001) and find that propositional logic compactly represents some natural sets of exponential size. In this section, we redefine SLAF as an operation to propositional logical formulas with a general formula as the starting formula for the transition from a SLAF formula to a costly transition action."}, {"heading": "3.1 Representing Transition Relations in Logic", "text": "We assume that this logical encoding of transition beliefs takes place first and define a deduction-based algorithm in the next section. We use the following general terminology for propositional logical languages (all terminological conventions apply with or without subscriptions and superscripts). L denotes a vocabulary, that is, a set of propositional variables that we use in the current context. L denotes a language, that is, a set of propositional sentences, and other script letters denote propositional formulas in the language of the current context. F, G also denotes such formulas, but in a limited context (see below) denotes the vocabularies of the language. L (L) denotes the language that is built from propositions in L."}, {"heading": "3.2 Transition-Formula Filtering", "text": "In this section we show that the transition philosophy for SLAF [a}, {"heading": "4. Factored Formula Update", "text": "So it is important to find a decomposition that enables such independent parts and calculations, and then we examine a kind of decomposition, one that follows logical connectivity models. Learning world models are easier when SLAF distributes logical connectivity."}, {"heading": "5. Compact Model Representation", "text": "In previous sections, algorithms have been presented that are potentially insoluble for long action sequences and observations. In Theorem 4.5, m could be as high as 2 | P |, the number of complete terms in G. Consequently, clauses may have an exponential length (in n = | P |), and there may be a superexponential number of clauses in this result.In this section, we focus on efficient learning action models in the presence of action preconditions and failures. This is important for actors who have only partial knowledge and are therefore likely to attempt some unexecutable actions. We limit our attention to deterministic actions without conditional effects and provide a general polynomic limit to the growth of our representation, its size after many steps, and the time needed to calculate the resulting model. This action class generalizes STRIPS (Fikes, Hart, & Nilsson, 1972), so that our results are applicable to a large part of the AI."}, {"heading": "5.1 Actions of Limited Effect", "text": "In many cases, it can be assumed that this is an unforeseen situation in which most of them are in. (...) Most of them are able to move. (...) Most of them are able to move. (...) Most of them are able to move. (...) Most of them are not able to move. (...) Most of them are not able to move. (...) Most of them are not able to move. (...) Most of them are able to move. (...) Most of them are not able to move. (...) Most of them are not able to move. (...) Most of them are not able to move. (...) Most of them are not able to move. (...)"}, {"heading": "5.2 Actions of No Conditional Effects: Revised Language", "text": "In this section, we will reformulate the presentation we outlined above in Section 3.1. Let us leave L0f = a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective) a transition perspective (a transition perspective)."}, {"heading": "5.3 Always-Successful Non-Conditional Actions", "text": "The fact is that we are able to assert ourselves, that we are able, that we are able, to move into another world, in which we are able, in which we live."}, {"heading": "5.4 Learning Actions Which May Fail", "text": "In fact, it is the case that most of them are able to move into another world, in which they are able to move, in which they are able to move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they are able to be able to"}, {"heading": "6. Building on Our Results", "text": "In this section, we briefly describe how to extend our approach to a sophisticated observation model, bias, and parameterized actions."}, {"heading": "6.1 Expressive Observation Model", "text": "It is. (It is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.). (it. (it.) It. (it.) is. (it.) It. (it.) It. (is. (it.) It. (it.) It. (is. (it.) It. (it. (it.) It. (it.) is. (it. (it.) It. (it.) is. (it. (it.) It. (it.) It. (it. (it.) is. (it. (it.) It. (it.) is. (it. (it.) is. (it. (it. (it.) It. (it.) It. (it. (it. (it.) is. (it.) It. (it. (it.) is. (it. (it. (it. (it.) It.) It. (it. It. (it. It.) is. It. It. (it. (it.) is. (it.) It. (it. (it.) is. (it. (it.) It. (it. (it. It. (it.) It. (it.) is. It. (it. (it.) It. (it.) It. It. (it. It. It. It.) is. (it. It. It.) is. (it. It.. It. It. It... It. It. It.... It. It... It. It. It... It."}, {"heading": "7. Experimental Evaluation", "text": "This year, it is as far as ever in the history of the city, where it is as far as never before in the history of the city."}, {"heading": "8. Comparison with Related Work", "text": "In fact, it is so that most of them are able to survive themselves, and that they are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...)"}, {"heading": "9. Conclusions", "text": "This approach differs from previous methods in that it focuses on determining the exact set of consistent action models (previous methods did not); we have shown that in several common situations, this can happen precisely at a time that is polynomic (sometimes linear) in the number of time steps and characteristics; we can add bias and in many cases calculate an exact solution for large areas (hundreds of characteristics); in addition, we show that the number of action observation tracks that need to be seen before convergence is polynomic in the number of characteristics of the domain; these positive results are in contrast to the difficulties many approaches have in learning dynamic models and enhanced learning in partially observable areas; and the results we have presented are promising for many applications, including enhancing learning, agents in virtual domains and HMMs. Already, this work is being applied to autonomous actors in adventure games, and the research is being guided through the transition criteria that we apply and the transition criteria."}, {"heading": "Acknowledgments", "text": "We would like to thank Megan Nance for providing the code and samples for the sequence generator, and also Dafna Shahaf for the encouraging collaboration that has improved our development and understanding of these results; the first author would also like to acknowledge the stimulating discussion with Brian Hlubocky on related topics; we would like to acknowledge the support provided by the DAF Air Force Research Laboratory Award FA8750-04-2-0222 (DARPA REAL Program); the second author would like to acknowledge the support of a scholarship from the University of Illinois at Urbana-Champaign, College of Engineering; and finally, the first author appreciates the support provided by a joint fellowship (2007-2008) with the Center for Advanced Studies and the Beckman Institute at the University of Illinois Urbana-Champaign.Previous versions of the results in this manuscript appeared in conference papers (Amir, 2005; Shahaf et al., 2006)."}, {"heading": "Appendix A. Our Representation and Domain Descriptions", "text": "The question of whether and to what extent it is indeed a problem arises not only in the United States itself, but also in other countries. (...) The question is whether it is a problem that cannot be solved. (...) The question is to what extent it is a problem that cannot be solved. (...) The question is to what extent it is a problem that cannot be solved. (...) The question is to what extent it is a problem that cannot be solved. (...) The question is to what extent it is a problem that cannot be solved. (...) The question is to what extent it is a problem that cannot be solved. (...) The question is to what extent it is a solution. \"(...) The question is to what extent it is a solution. (...) The question is to what extent it is a solution."}, {"heading": "Appendix B. Proofs", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "B.1 Proof of Lemma 3.1: Consequence Finding and Existential Quantification", "text": "Suppose the clauses that contain the literal x are an x x x x x x x x x x x x x x. Suppose the clauses that contain the literal x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x"}, {"heading": "B.2 Proof of Theorem 3.3", "text": "S < S < S < S, S < S, S, S, S, S. < S, S, S, S, S, S, S, S, S, S, S, S. < s, R > >, SLAF [a] (< s, R >, S, S, S >). < s}, {"heading": "B.3 Proof of Theorem 4.1: Distribution of SLAF Over Connectives", "text": "For the first part, we will show that the models of SLAF [a] (a) (a) (a) (a) (a) (a) (a) (a) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) \"c\" c \"(c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c)) (c) (c) (c) (c) (c) (c) (c) (c)) (c) (c) (c) (c) (c)) (c) (c)) (c) (c) (c)) (c) (c)) (c) (c)) (c) (c) (c) (c) (c)) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) () () (c) (c) (c) (c) (c) () (c) () () ()) () () () () () () () ()) () () ()) () () () ()) () () ()) () ("}, {"heading": "B.6 Proof of Theorem 5.3: Equivalent Restricted Definition of Action Axioms", "text": "To see this, we look at any model of \"A.\" The rating on streams in \"P\" defines a transition relationship between \"R\" and \"P.\" The rating on streams in \"P\" defines a transition relationship between \"R\" and \"P.\" The rating on streams in \"P\" defines a state of \"S\" so that < s, \"\" R. \"According to the definition of\" P \"< s,\" \"R\" if and only if there is \"S,\" \"R\" so that \"ff\" (a) is satisfied. Finally, we conclude that \"B\" and \"are only fulfilled if the prerequisites of action\" a \"and\" s \"agree with the effects of action\" a. \"That is,\" ff \"a\" is satisfied if and only if < s, \"a\" and \"R.\" Taken together, these observations and episode 3,2 yield the theory."}, {"heading": "B.7 Proof of Theorem 5.4: AS-STRIPS-SLAF is Correct", "text": "PROOF Let the shorthand notation C (alization) denote C (servation). () This is a. (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\" (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\" (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\"). (\"This.\" (\"This.\"). (\"This.\"). (\"This.\" (\"This.\"). (\"This.\"). (\"This.\" (\"This.\"). \"(\" This. \"). (\" This. \"(\" This. \").\" (\"(\" This. \").\" (\"This.\" (. \").\" (\"This.\" (\").\" (\"(\" This. \").\" (\"(\" This. \").\" (\"(\"). \"(\" (\"This.\" (\").\" (\"(\" This. \"(\"). \"(\" (\"This.\"). \"(\" (\"(\" This. \").\" (\"(\" (\"This.).\" (. \"(.). (\" (\"(\" This.). (. (\"This.\"). (\"This. (.\"). (. (.). (\"(\"). (\"(\" This. (.). (. (.). (\"). (\" (\"This.). (. (.). (\" This. (. (.). (.). (\"(.). (\"). (\"(\" This.). (. (.). (. (. (.). (. (.). (.). (\"This.). (. (. (.). (.).). (. ("}, {"heading": "B.8 Proof of Theorem 5.5: AS-STRIPS-SLAF Complexity", "text": "PROOF Consider the size of the formula returned by AS-STRIPS-SLAF. Overview: If a formula is in i-CNF, then the filtered formula is in (i + 1) -CNF after one step. Then, we find that any observation of the flowing f resets the f part of the faith formula to 1-CNF (i.e., to i = 1). Further details: For the first part, this is because each call of the procedure appends at most one letter to existing clauses of the formula and no new clauses with a length greater than k + 1 are generated. Furthermore, the transitional formula remains compact in k-CNF (i.e., indefinitely compact) because existing clauses may only grow in length (1 letter per time step) if augmented in steps 1. (a) - (c), but if the corresponding flowing faith is (finally) adhered to in steps 1."}, {"heading": "B.9 Proof of Theorem 5.7: PRE-STRIPS-SLAF is Correct", "text": "PROOF Consider the semantics of SLAF when filtering a STRIPS action with a known precondition. In the case of an action error, a world is in the filtered transition state of faith, if and only if the world does not fulfill the precondition of the action (and fulfils the observation). In the case of an action success, the algorithm clearly performs this filtering by linking the faith formula with the negation of the precondition of the action (i.e. by converting it into a logically equivalent separation of fluid factored formulas). In the case of an action success, the filtration can be performed by first removing worlds that do not fulfill the precondition of the action (so that the action is executable in all remaining worlds), and then filtering the remaining worlds by means of the algorithm AS-STRIPS-SLAF. Furthermore, it follows from Theorem 4.1 and from the following 4.3 that the filtration of the formula [STRIF] of the STRIF-SLAF-SLAER-Conditions (1 STLASTLAER-1)."}, {"heading": "B.10 Proof of Theorem 5.8: PRE-STRIPS-SLAF Complexity", "text": "PROOF Note that every call to AS-STRIPS-SLAF on a subformula of the size of the subformula requires a linear time, and the steps that do not include AS-STRIPS-SLAF can be performed in linear time. Thus, the total complexity of time is linear. Also, note that if every fluid sequence is observed in most k steps, each fluid-factored subformula i, j the belief formula is contained in k-CNF, according to an Amir theorem (2005). If the prerequisites for action contain at most m literals, then each disjunction of the form \u0441j i, j contains at most m disks. Therefore, the entire belief formula remains in m \u00b7 k-CNF indefinitely. 2"}, {"heading": "Appendix C. Experiments And Their Outputs", "text": "Our experiments (Section 7) examine the characteristics of our algorithms for learning action models. They show that learning is comprehensible and accurate. In this appendix, we bring the generating models and the learned models for a more detailed comparison by the reader. Remember that our algorithms provide a representation for the amount of models that is possible due to the input. Below, we bring only one satisfactory model from the learned formulas. Our experiments cover the following areas of the International Planning Competition (IPC): Drivelog, Zenotravel, Blocksworld and Depots."}, {"heading": "C.1 Driverlog Domain", "text": "The driver has the following generating PDDL: (define (domain?? loc) empty truck (?? lown) (: requirements: type location locatable - object driver obj - locatable) (: predicates (at? obj - location) (in? obj? truck - location) (in? obj1 - obj? truck) (driving? d - driver? v - truck) (path? x? y - location) (empty? v - truck))) (: action LOAD-TRUCK: parameters (? obj - obj? truck - truck - truck? location: precondition (at? truck)."}, {"heading": "C.2 Zeno-Travel Domain", "text}, {"heading": "C.3 Blocks-World Domain", "text": "Do you see how the situation has developed in recent years? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed? Do you see how the world has changed."}, {"heading": "C.4 Depot Domain", "text": "The depot domain has the following generating PDDL: (define (domain depot) y (?? effect) ING (?? effect) unavailable (: types place locatable - objektdepot distributor - place truck hoist surface) (: predicates (at? x - locatable? y - place) (on? x - crate) NEX - surface) (in? x - crate (in? x - crate) LOY (clear? x - surface)) (: action Drive: parameters (? x - truck? y - surface) S - place? z - place? z - precondition (at? x? y) DS: effect (at? x? y) (at? x - surface)) (: action Drive: parameters (? x - truck? y - place? z - place): precondition (and? x? y) DS: effect (at? x? y)"}], "references": [], "referenceMentions": [], "year": 0, "abstractText": "We present exact algorithms for identifying deterministic-actions\u2019 effects and preconditions in<lb>dynamic partially observable domains. They apply when one does not know the action model (the<lb>way actions affect the world) of a domain and must learn it from partial observations over time.<lb>Such scenarios are common in real world applications. They are challenging for AI tasks because<lb>traditional domain structures that underly tractability (e.g., conditional independence) fail there<lb>(e.g., world features become correlated). Our work departs from traditional assumptions about<lb>partial observations and action models. In particular, it focuses on problems in which actions are<lb>deterministic of simple logical structure and observation models have all features observed with<lb>some frequency. We yield tractable algorithms for the modified problem for such domains.<lb>Our algorithms take sequences of partial observations over time as input, and output determin-<lb>istic action models that could have lead to those observations. The algorithms output all or one of<lb>those models (depending on our choice), and are exact in that no model is misclassified given the<lb>observations. Our algorithms take polynomial time in the number of time steps and state features<lb>for some traditional action classes examined in the AI-planning literature, e.g., STRIPS actions. In<lb>contrast, traditional approaches for HMMs and Reinforcement Learning are inexact and exponen-<lb>tially intractable for such domains. Our experiments verify the theoretical tractability guarantees,<lb>and show that we identify action models exactly. Several applications in planning, autonomous<lb>exploration, and adventure-game playing already use these results. They are also promising for<lb>probabilistic settings, partially observable reinforcement learning, and diagnosis.", "creator": null}}}