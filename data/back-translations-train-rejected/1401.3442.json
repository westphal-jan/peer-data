{"id": "1401.3442", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2014", "title": "Asynchronous Forward Bounding for Distributed COPs", "abstract": "A new search algorithm for solving distributed constraint optimization problems (DisCOPs) is presented. Agents assign variables sequentially and compute bounds on partial assignments asynchronously. The asynchronous bounds computation is based on the propagation of partial assignments. The asynchronous forward-bounding algorithm (AFB) is a distributed optimization search algorithm that keeps one consistent partial assignment at all times. The algorithm is described in detail and its correctness proven. Experimental evaluation shows that AFB outperforms synchronous branch and bound by many orders of magnitude, and produces a phase transition as the tightness of the problem increases. This is an analogous effect to the phase transition that has been observed when local consistency maintenance is applied to MaxCSPs. The AFB algorithm is further enhanced by the addition of a backjumping mechanism, resulting in the AFB-BJ algorithm. Distributed backjumping is based on accumulated information on bounds of all values and on processing concurrently a queue of candidate goals for the next move back. The AFB-BJ algorithm is compared experimentally to other DisCOP algorithms (ADOPT, DPOP, OptAPO) and is shown to be a very efficient algorithm for DisCOPs.", "histories": [["v1", "Wed, 15 Jan 2014 04:54:38 GMT  (337kb)", "http://arxiv.org/abs/1401.3442v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["amir gershman", "amnon meisels", "roie zivan"], "accepted": false, "id": "1401.3442"}, "pdf": {"name": "1401.3442.pdf", "metadata": {"source": "CRF", "title": "Asynchronous Forward Bounding for Distributed COPs", "authors": ["Amir Gershman", "Amnon Meisels", "Roie Zivan"], "emails": ["AMIRGER@CS.BGU.AC.IL", "AM@CS.BGU.AC.IL", "ZIVANR@CS.BGU.AC.IL"], "sections": [{"heading": "1. Introduction", "text": "In fact, most of them are able to survive on their own."}, {"heading": "2. Distributed Constraint Optimization", "text": "In fact, it is so that it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way in which it is about a way in which it is about a way and in which it is about a way in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way in which it is about a way and in which it is about which it is about a way in which it is about a way and in which it is about which it is about a way and in which it is about which it is about which it is about a way and in which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about a way and in which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it"}, {"heading": "3. Asynchronous Forward Bounding", "text": "In the AFB algorithm, a single most recent sub-assignment is passed to the agents. Agents only assign their variables if they hold the current CPA. The CPA is a unique message that is passed between the agents and carries the sub-assignment that the agents attempt to expand into a complete and optimal solution by assigning their variables to it. The CPA also bears the cumulative cost of assignment between all assignments contained therein, as well as a unique time stamp. Due to the asynchronous nature of the algorithm, multiple CPAs can be present at any time, but only a single CPA contains the most recent sub-assignments. This CPA has the highest time stamp. Only one agent performs an assignment to a single CPA at any time. Copies of the CPA are forwarded to the individual agents and processed by multiple agents CPA at the same time."}, {"heading": "3.1 AFB - Computing the Lower Bound Estimation On Cost Increment", "text": "This year it is so far that it will be able to reete.n the aforementioned lrVo"}, {"heading": "3.2 AFB - Algorithm Description", "text": "This year, it has reached the point where it will be able to leave the country without being able to leave it."}, {"heading": "3.3 The Time-Stamp Mechanism", "text": "As already mentioned, AFB uses a timestamp mechanism (Nguyen et al., 2004; Meisels & Zivan, 2007) to determine the relevance of the CPA. Requirements for this mechanism are that for two messages with two different subassignments, it is necessary to determine which of them is obsolete. An obsolete subassignment is one that has been abandoned by the search process because one of the assigned agents has changed its assignment. This requirement is fulfilled by the timestamp mechanism in the following way: Each agent holds a local assignment counter; whenever he executes an assignment, he increases his local counter; whenever he sends a message with his assignment, the agent copies his current counter to the message; each message contains a vector containing the counters of the agents he has traversed; the i-th element of the vector corresponds to the counter; this vector is indeed the timestamp; an lexicographic comparison of two such vectors shows a timestamp that is identical to a timestamp."}, {"heading": "3.4 AFB - Example Run", "text": "Suppose we run toward the DisCOP in Figure 1. X1 creates an empty CPA, assigns its first value to R, and leads the CPA to X2. These costs are passed on to all agents (line 27 in Figure 3.1), while the new upper limit is reached (line 29). This call will result in a new mapping of X4, since the full mapping occurs in Figure 3.1."}, {"heading": "3.5 Discussion - Concurrency, Robustness, Privacy and Asynchronicity", "text": "This year it is so far that it is only a matter of time before it will be so far, until it is so far, until it is so far."}, {"heading": "4. AFB with CBJ", "text": "In both centralized and distributed CSPs, backjumping can sometimes be accomplished by maintaining data structures that allow an agent to deduce who is the newest agent (in the order in which assignments were made), whose modified mapping could potentially lead to a solution. Once such an agent is found, the assignments of all subsequent agents are not made and the search process is extended \"backwards\" to that agent (Prosser, 1993).A similar process can be designed for full mapping and bound solutions for COPs and DisCOPs. Consider a sequence of assignments by agents A1, A2, A3, A5, where none of its possible value assignments can lead to a complete mapping that can be lower than the cost of the complete mapping previously found. In chronological tracing, the search process simply has to return to the previous agent, namely A5, and its mapping."}, {"heading": "4.1 A Backjumping Example", "text": "Suppose the search begins with A1 assigning \"a\" as a value and passing the CPA on to A2. A2, A3, A4, and A5 all assign the value \"a,\" and we get a complete assignment with cost 12. The search continues, and after complete exploration of the sub-space in which A1 = a, A2 = a, the best assignment found is A1 = a, A2 = a, A3 = b, A4 = a, A5 = b with total cost of B = 6. Suppose that A3 now holds the CPA after it has been obtained by a future agent (A4 or A5). A3 has exhausted its value range and must be traced. It is calculated: FALB (a) [1] = PC [1] + LC (a) [1] + (FC4 (a) [1] + a sub (ALB) = 1 (ALB) = 1 (ALB) = 1)."}, {"heading": "4.2 The AFB-BJ Algorithm", "text": "The AFB-BJ algorithm is executed on each of the agents in the DisCOP. Each agent first invokes the init method and then responds to messages until it receives a TERMINATE message. The algorithm is used in Figures 5 and 6. As in pure AFB, a timestamp mechanism is used on all messages. The same timestamp mechanism used by AFB is used in AFB-BJ to determine which messages are relevant and which are obsolete. To simplify, we select the pseudo code for detailing the calculation of LC, PC, FC and FALB as in Section 4.1. The algorithm starts with each agent calling init and then waits for termination. Each agent updates B to determine the cost of the best complete assignment, and since no such assignment was found, it is set to infinity (line 1)."}, {"heading": "5. Correctness of AFB", "text": "To prove the correctness of the procedure in line 14, we need to know that the procedure is not performed in this procedure and that, secondly, if the algorithm terminates its global upper limit, the cost of the optimal solution is not higher. To prove that the AFB algorithm never enters an infinite loop, the last statement must be sufficient to show that the same partial mapping cannot be generated more than a second time. AFB algorithms can never generate two identical CPAs. Assume by negating that Ai is the highest priority agent (first, in the order of the assignments) that a CPA is generated for the second time. Now, let us consider all possible events that occurred immediately before this creation. Case 1 - Ai received a CPA message from a lower priority agent. Let us note that the agent received this message as Aj > i when Ai received this message, he executed this message (see line 7)."}, {"heading": "6. Experimental Evaluation", "text": "This year, it has reached the point where it will be able to put itself at the top of the list."}, {"heading": "7. Conclusions", "text": "This year, it is more than ever before in the history of the city."}], "references": [{"title": "Preprocessing techniques for accelerating the DCOP algorithm ADOPT", "author": ["S.M. Ali", "S. Koenig", "M. Tambe"], "venue": "In AAMAS,", "citeRegEx": "Ali et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Ali et al\\.", "year": 2005}, {"title": "Asynchronous Backtracking without adding links: a new member in the ABT Family", "author": ["C. Bessiere", "A. Maestre", "I. Brito", "P. Meseguer"], "venue": "Artificial Intelligence,", "citeRegEx": "Bessiere et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2005}, {"title": "Distributed Constraint Satisfaction with Partially Known Constraints", "author": ["I. Brito", "A. Meisels", "P. Meseguer", "R. Zivan"], "venue": null, "citeRegEx": "Brito et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Brito et al\\.", "year": 2008}, {"title": "Distributed Log-based Reconciliation", "author": ["Y. Chong", "Y. Hamadi"], "venue": "In Proc. ECAI-06,", "citeRegEx": "Chong and Hamadi,? \\Q2006\\E", "shortCiteRegEx": "Chong and Hamadi", "year": 2006}, {"title": "Self-Stabilizing Distributed Constraint Satisfaction", "author": ["Z. Collin", "R. Dechter", "S. Katz"], "venue": "Chicago Journal of Theoretical Computer Science,", "citeRegEx": "Collin et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Collin et al\\.", "year": 1999}, {"title": "Self-stabilizing systems in spite of distributed control", "author": ["E.W. Dijkstra"], "venue": "Commun. ACM, 17(11), 643\u2013644.", "citeRegEx": "Dijkstra,? 1974", "shortCiteRegEx": "Dijkstra", "year": 1974}, {"title": "Asynchronous Forward-Bounding with Backjumping", "author": ["A. Gershman", "A. Meisels", "R. Zivan"], "venue": "In Distributed Constraints Reasonning workshop,", "citeRegEx": "Gershman et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Gershman et al\\.", "year": 2007}, {"title": "SSDPOP: improving the privacy of DCOP with secret sharing", "author": ["R. Greenstadt", "B. Grosz", "M.D. Smith"], "venue": "Proceedings of the 6th international joint conference on Autonomous agents and multiagent systems,", "citeRegEx": "Greenstadt et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Greenstadt et al\\.", "year": 2007}, {"title": "Distributed Partial Constraint Satisfaction Problem", "author": ["K. Hirayama", "M. Yokoo"], "venue": "In CP,", "citeRegEx": "Hirayama and Yokoo,? \\Q1997\\E", "shortCiteRegEx": "Hirayama and Yokoo", "year": 1997}, {"title": "Phase transition in MAX-CSP", "author": ["J. Larrosa", "P. Meseguer"], "venue": "In Proc. ECAI-96 Budapest", "citeRegEx": "Larrosa and Meseguer,? \\Q1996\\E", "shortCiteRegEx": "Larrosa and Meseguer", "year": 1996}, {"title": "Solving Weighted CSP by Maintaining Arc Consistency", "author": ["J. Larrosa", "T. Schiex"], "venue": "Artificial Intelligence,", "citeRegEx": "Larrosa and Schiex,? \\Q2004\\E", "shortCiteRegEx": "Larrosa and Schiex", "year": 2004}, {"title": "Distributed Algorithms", "author": ["N.A. Lynch"], "venue": "Morgan Kaufmann Series.", "citeRegEx": "Lynch,? 1997", "shortCiteRegEx": "Lynch", "year": 1997}, {"title": "Solving Distributed Constraint Optimization Problems Using Cooperative Mediation", "author": ["R. Mailler", "V. Lesser"], "venue": "In Proceedings of the Third International Joint Conference on Autonomous Agents and MultiAgent Systems", "citeRegEx": "Mailler and Lesser,? \\Q2004\\E", "shortCiteRegEx": "Mailler and Lesser", "year": 2004}, {"title": "Asynchronous Forward-checking for", "author": ["A. Meisels", "R. Zivan"], "venue": "Distributed CSPs. Constraints,", "citeRegEx": "Meisels and Zivan,? \\Q2006\\E", "shortCiteRegEx": "Meisels and Zivan", "year": 2006}, {"title": "Asynchronous Forward-checking for Distributed CSPs", "author": ["A. Meisels", "R. Zivan"], "venue": null, "citeRegEx": "Meisels and Zivan,? \\Q2007\\E", "shortCiteRegEx": "Meisels and Zivan", "year": 2007}, {"title": "Distributed Forward Checking", "author": ["P. Meseguer", "M.A. Jimenez"], "venue": "In Proc. CP-2000 Workshop on Distributed Constraint Satisfaction Singapore", "citeRegEx": "Meseguer and Jimenez,? \\Q2000\\E", "shortCiteRegEx": "Meseguer and Jimenez", "year": 2000}, {"title": "ADOPT: asynchronous distributed constraints optimization with quality guarantees", "author": ["P.J. Modi", "W. Shen", "M. Tambe", "M. Yokoo"], "venue": "Artificial Intelligence,", "citeRegEx": "Modi et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Modi et al\\.", "year": 2005}, {"title": "Dynamic Distributed Backjumping", "author": ["T. Nguyen", "D. Sam-Hroud", "B. Faltings"], "venue": "In Proc. 5th workshop on distributed constraints reasoning DCR-04 Toronto", "citeRegEx": "Nguyen et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Nguyen et al\\.", "year": 2004}, {"title": "A value ordering heuristic for distributed resource allocation", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proc. CSCLP04,", "citeRegEx": "Petcu and Faltings,? \\Q2004\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2004}, {"title": "A Scalable Method for Multiagent Constraint Optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proc. IJCAI-05,", "citeRegEx": "Petcu and Faltings,? \\Q2005\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2005}, {"title": "S-DPOP: Superstabilizing, Fault-containing Multiagent Combinatorial Optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proceedings of the National Conference on Artificial Intelligence,", "citeRegEx": "Petcu and Faltings,? \\Q2005\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2005}, {"title": "Hybrid Algorithms for the Constraint Satisfaction Problem", "author": ["P. Prosser"], "venue": "Computational Intelligence, 9, 268\u2013299.", "citeRegEx": "Prosser,? 1993", "shortCiteRegEx": "Prosser", "year": 1993}, {"title": "An Empirical Study of Phase Transitions in Binary Constraint Satisfaction Problems", "author": ["P. Prosser"], "venue": "Artificial Intelligence, 81, 81\u2013109.", "citeRegEx": "Prosser,? 1996", "shortCiteRegEx": "Prosser", "year": 1996}, {"title": "Nogood based asynchronous distributed optimization (ADOPT-ng)", "author": ["M.C. Silaghi", "M. Yokoo"], "venue": "In Proc. AAMAS06,", "citeRegEx": "Silaghi and Yokoo,? \\Q2006\\E", "shortCiteRegEx": "Silaghi and Yokoo", "year": 2006}, {"title": "Modeling and Solving Distributed Constraint Satisfaction Problems (DCSPs)", "author": ["G. Solotorevsky", "E. Gudes", "A. Meisels"], "venue": "In Constraint", "citeRegEx": "Solotorevsky et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Solotorevsky et al\\.", "year": 1996}, {"title": "Algorithms for Distributed Constraint Satisfaction: A Review", "author": ["M. Yokoo"], "venue": "Autonomous Agents & Multi-Agent Sys., 3, 185\u2013207.", "citeRegEx": "Yokoo,? 2000a", "shortCiteRegEx": "Yokoo", "year": 2000}, {"title": "Distributed Constraint Satisfaction Problems", "author": ["M. Yokoo"], "venue": "Springer Verlag.", "citeRegEx": "Yokoo,? 2000b", "shortCiteRegEx": "Yokoo", "year": 2000}, {"title": "Distributed Constraint Satisfaction for Formalizing Distributed Problem Solving", "author": ["M. Yokoo", "T. Ishida", "E. Durfee", "K. Kuwabara"], "venue": "In IEEE Intern. Conf. Distrb. Comp. Sys., pp", "citeRegEx": "Yokoo et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Yokoo et al\\.", "year": 1992}, {"title": "An analysis and application of distributed constraint satisfaction and optimization algorithms in sensor networks", "author": ["W. Zhang", "Z. Xing", "G. Wang", "L. Wittenburg"], "venue": "In Proc. 2nd Intern. Joint Conf. on Autonomous Agents & Multi-Agent Systems", "citeRegEx": "Zhang et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2003}, {"title": "Distributed stochastic search and distributed breakout: properties, comparishon and applications to constraints optimization problems in sensor networks", "author": ["W. Zhang", "Z. Xing", "G. Wang", "L. Wittenburg"], "venue": "Artificial Intelligence,", "citeRegEx": "Zhang et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2005}, {"title": "Dynamic Ordering for Asynchronous Backtracking on", "author": ["R. Zivan", "A. Meisels"], "venue": "DisCSPs. Constraints,", "citeRegEx": "Zivan and Meisels,? \\Q2006\\E", "shortCiteRegEx": "Zivan and Meisels", "year": 2006}, {"title": "Conflict directed Backjumping for MaxCSPs", "author": ["R. Zivan", "A. Meisels"], "venue": null, "citeRegEx": "Zivan and Meisels,? \\Q2007\\E", "shortCiteRegEx": "Zivan and Meisels", "year": 2007}, {"title": "Concurrent search for distributed CSPs", "author": ["R. Zivan", "A. Meisels"], "venue": "Artif. Intell.,", "citeRegEx": "Zivan and Meisels,? \\Q2006\\E", "shortCiteRegEx": "Zivan and Meisels", "year": 2006}, {"title": "Message delay and DisCSP search algorithms", "author": ["R. Zivan", "A. Meisels"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "Zivan and Meisels,? \\Q2006\\E", "shortCiteRegEx": "Zivan and Meisels", "year": 2006}], "referenceMentions": [{"referenceID": 16, "context": "Agents assign values to their variables and communicate with each other, attempting to generate a solution that is globally optimal with respect to the costs of the constraints (Modi et al., 2005; Petcu & Faltings, 2004).", "startOffset": 177, "endOffset": 220}, {"referenceID": 29, "context": "Another example is the sensor networks tracking problem (Zhang, Xing, Wang, & Wittenburg, 2003; Zhang et al., 2005), in which the task is to assign sensors to tracking targets, such that the maximal number of the targets will be tracked by the sensor collection.", "startOffset": 56, "endOffset": 115}, {"referenceID": 13, "context": "stamp mechanism proposed by Nguyen, Sam-Hroud, and Faltings (2004) and used by Meisels and Zivan (2007) is used by agents to determine the most updated CPA and to discard obsolete CPAs.", "startOffset": 79, "endOffset": 104}, {"referenceID": 16, "context": "These include asynchronous branch and bound like ADOPT (Modi et al., 2005), as well as algorithms that are based on other principles - DPOP (Petcu & Faltings, 2005a) that uses two passes on a pseudo-tree and Opt APO,that divides the DisCOP into sub-problems (Mailler & Lesser, 2004).", "startOffset": 55, "endOffset": 74}, {"referenceID": 16, "context": "In this paper, we will assume each agent owns a single variable, and use the term \u201cagent\u201d and \u201cvariable\u201d interchangeably, and assume agent Ai holds variable Xi (Modi et al., 2005; Petcu & Faltings, 2005a; Mailler & Lesser, 2004).", "startOffset": 160, "endOffset": 228}, {"referenceID": 25, "context": "We will assume that constraints are at most binary and the delay in delivering a message is finite (Yokoo, 2000a; Modi et al., 2005).", "startOffset": 99, "endOffset": 132}, {"referenceID": 16, "context": "We will assume that constraints are at most binary and the delay in delivering a message is finite (Yokoo, 2000a; Modi et al., 2005).", "startOffset": 99, "endOffset": 132}, {"referenceID": 25, "context": "These assumptions are commonly used by DisCSP and DisCOP algorithms (Yokoo, 2000a; Modi et al., 2005).", "startOffset": 68, "endOffset": 101}, {"referenceID": 16, "context": "These assumptions are commonly used by DisCSP and DisCOP algorithms (Yokoo, 2000a; Modi et al., 2005).", "startOffset": 68, "endOffset": 101}, {"referenceID": 17, "context": "As mentioned previously, AFB uses a time-stamp mechanism (Nguyen et al., 2004; Meisels & Zivan, 2007) to determine the relevance of the CPA.", "startOffset": 57, "endOffset": 101}, {"referenceID": 16, "context": "AFB\u2019s approach is quite different from that used by asynchronous assignments algorithms such as ADOPT or ABT (Modi et al., 2005; Bessiere, Maestre, Brito, & Meseguer, 2005).", "startOffset": 109, "endOffset": 172}, {"referenceID": 26, "context": "The common model for distributed search algorithms on DisCSPs and DisCOPs enables assignments and Nogoods to be passed among agents (Yokoo, Ishida, Durfee, & Kuwabara, 1992; Yokoo, 2000b; Bessiere et al., 2005; Modi et al., 2005; Zivan & Meisels, 2006; Meisels & Zivan, 2007).", "startOffset": 132, "endOffset": 275}, {"referenceID": 1, "context": "The common model for distributed search algorithms on DisCSPs and DisCOPs enables assignments and Nogoods to be passed among agents (Yokoo, Ishida, Durfee, & Kuwabara, 1992; Yokoo, 2000b; Bessiere et al., 2005; Modi et al., 2005; Zivan & Meisels, 2006; Meisels & Zivan, 2007).", "startOffset": 132, "endOffset": 275}, {"referenceID": 16, "context": "The common model for distributed search algorithms on DisCSPs and DisCOPs enables assignments and Nogoods to be passed among agents (Yokoo, Ishida, Durfee, & Kuwabara, 1992; Yokoo, 2000b; Bessiere et al., 2005; Modi et al., 2005; Zivan & Meisels, 2006; Meisels & Zivan, 2007).", "startOffset": 132, "endOffset": 275}, {"referenceID": 5, "context": "Self stabilization in distributed systems (Dijkstra, 1974) is the ability of a system to respond to transient failures by eventually reaching and maintaining a legal state.", "startOffset": 42, "endOffset": 58}, {"referenceID": 21, "context": "Once such an agent is found, the assignments of all following agents are unmade and the search process \u201cbackjumps\u201d to that agent (Prosser, 1993).", "startOffset": 129, "endOffset": 144}, {"referenceID": 22, "context": "(Prosser, 1996)).", "startOffset": 0, "endOffset": 15}, {"referenceID": 16, "context": "Other experimental evaluations of DisCOPs include graph coloring problems (Modi et al., 2005; Zhang et al., 2005), which are a subclass of Max-DisCSP.", "startOffset": 74, "endOffset": 113}, {"referenceID": 29, "context": "Other experimental evaluations of DisCOPs include graph coloring problems (Modi et al., 2005; Zhang et al., 2005), which are a subclass of Max-DisCSP.", "startOffset": 74, "endOffset": 113}, {"referenceID": 11, "context": "In order to evaluate the performance of distributed algorithms, two independent measures of performance are used - run time, in the form of non-concurrent steps of computation (Zivan & Meisels, 2006b), and communication load, in the form of the total number of messages sent (Lynch, 1997; Yokoo, 2000a).", "startOffset": 275, "endOffset": 302}, {"referenceID": 25, "context": "In order to evaluate the performance of distributed algorithms, two independent measures of performance are used - run time, in the form of non-concurrent steps of computation (Zivan & Meisels, 2006b), and communication load, in the form of the total number of messages sent (Lynch, 1997; Yokoo, 2000a).", "startOffset": 275, "endOffset": 302}, {"referenceID": 16, "context": "The synchronous B&B algorithm (SBB) (Hirayama & Yokoo, 1997) and the asynchronous distributed optimization algorithm (ADOPT ) (Modi et al., 2005).", "startOffset": 126, "endOffset": 145}, {"referenceID": 16, "context": "From these figures it is clear that ADOPT outperforms the basic algorithm SBB, in accordance with the past experimental evaluation of these two algorithms (Modi et al., 2005).", "startOffset": 155, "endOffset": 174}, {"referenceID": 16, "context": "Following each message an agent receives in ADOPT, several VALUE messages are sent to lower priority agents, and a single COST message is sent to a higher priority agent (Modi et al., 2005).", "startOffset": 170, "endOffset": 189}, {"referenceID": 26, "context": "The AFB algorithm was compared to two algorithms that are based on the branch & bound mechanism in its distributed form - ADOPT and SBB (Yokoo, 2000b; Modi et al., 2005).", "startOffset": 136, "endOffset": 169}, {"referenceID": 16, "context": "The AFB algorithm was compared to two algorithms that are based on the branch & bound mechanism in its distributed form - ADOPT and SBB (Yokoo, 2000b; Modi et al., 2005).", "startOffset": 136, "endOffset": 169}], "year": 2009, "abstractText": "A new search algorithm for solving distributed constraint optimization problems (DisCOPs) is presented. Agents assign variables sequentially and compute bounds on partial assignments asynchronously. The asynchronous bounds computation is based on the propagation of partial assignments. The asynchronous forward-bounding algorithm (AFB) is a distributed optimization search algorithm that keeps one consistent partial assignment at all times. The algorithm is described in detail and its correctness proven. Experimental evaluation shows that AFB outperforms synchronous branch and bound by many orders of magnitude, and produces a phase transition as the tightness of the problem increases. This is an analogous effect to the phase transition that has been observed when local consistency maintenance is applied to MaxCSPs. The AFB algorithm is further enhanced by the addition of a backjumping mechanism, resulting in the AFB-BJ algorithm. Distributed backjumping is based on accumulated information on bounds of all values and on processing concurrently a queue of candidate goals for the next move back. The AFB-BJ algorithm is compared experimentally to other DisCOP algorithms (ADOPT, DPOP, OptAPO) and is shown to be a very efficient algorithm for DisCOPs.", "creator": "TeX"}}}