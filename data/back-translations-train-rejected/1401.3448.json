{"id": "1401.3448", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2014", "title": "AND/OR Multi-Valued Decision Diagrams (AOMDDs) for Graphical Models", "abstract": "Inspired by the recently introduced framework of AND/OR search spaces for graphical models, we propose to augment Multi-Valued Decision Diagrams (MDD) with AND nodes, in order to capture function decomposition structure and to extend these compiled data structures to general weighted graphical models (e.g., probabilistic models). We present the AND/OR Multi-Valued Decision Diagram (AOMDD) which compiles a graphical model into a canonical form that supports polynomial (e.g., solution counting, belief updating) or constant time (e.g. equivalence of graphical models) queries. We provide two algorithms for compiling the AOMDD of a graphical model. The first is search-based, and works by applying reduction rules to the trace of the memory intensive AND/OR search algorithm. The second is inference-based and uses a Bucket Elimination schedule to combine the AOMDDs of the input functions via the the APPLY operator. For both algorithms, the compilation time and the size of the AOMDD are, in the worst case, exponential in the treewidth of the graphical model, rather than pathwidth as is known for ordered binary decision diagrams (OBDDs). We introduce the concept of semantic treewidth, which helps explain why the size of a decision diagram is often much smaller than the worst case bound. We provide an experimental evaluation that demonstrates the potential of AOMDDs.", "histories": [["v1", "Wed, 15 Jan 2014 05:09:35 GMT  (804kb)", "http://arxiv.org/abs/1401.3448v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["robert mateescu", "rina dechter", "radu marinescu"], "accepted": false, "id": "1401.3448"}, "pdf": {"name": "1401.3448.pdf", "metadata": {"source": "CRF", "title": "AND/OR Multi-Valued Decision Diagrams (AOMDDs) for Graphical Models", "authors": ["Robert Mateescu", "Rina Dechter", "Radu Marinescu"], "emails": ["MATEESCU@PARADISE.CALTECH.EDU", "DECHTER@ICS.UCI.EDU", "R.MARINESCU@4C.UCC.IE"], "sections": [{"heading": null, "text": "To understand the structure of function decomposition and to extend these compiled data structures to general weighted graphical models (e.g. probabilistic models), we present the AND / OR Multi-Valued Decision Diagram (AOMDD), which compiles a graphical model into a canonical form that supports polynomial (e.g. solution counting, faith actualization) or constant time (e.g. equivalence of graphical models) queries. We provide two algorithms for compiling the AOMDD of a graphical model, the first being search-based and working by applying reduction rules to track the memory-intensive AND / OR search algorithm. The second is inference-based and uses a bucket elimination plan to combine the AOMDD of input functions via the APPLY operator. For both algorithms, compiling the time and deciding the size of the DOMD diagram is the most common explanation that MD is a DOMD."}, {"heading": "1. Introduction", "text": "The paper extends decision diagrams in AND / OR multi-value decision diagrams (AOMDDs) and shows how graphical models can be compiled into these data structures. The work presented in this paper is based on two existing frameworks: (1) AND / OR search spaces for graphical models and (2) decision diagrams."}, {"heading": "1.1 AND/OR Search Spaces", "text": "AND / OR search spaces (Dechter & Mateescu, 2004a, 2004b, 2007) have recently proved to be a unifying framework for various classes of search algorithms for graphical models, the main feature of which is the exploitation of dependencies between variables during the search, which can provide exponential accelerations over traditional search methods, which can be regarded as exceeding an OR structure. Thec \u00a9 2008 AI Access Foundation. All rights reserved. AND nodes capture problem decomposition into independent sub-problems, and the OR nodes represent branching according to variable values. AND / OR spaces can accommodate dynamic variable order, but most of the current work focuses on static decomposition. Examples of AND / OR search trees and graphics will appear later, for example in Figures 6 and 7. The AND / OR search space idea was originally developed for heuristic search (Nilsson, 1980)."}, {"heading": "1.2 Decision Diagrams", "text": "Decision diagrams are widely used in many areas of research, particularly in software and hardware verification (Clarke, Grumberg, & Peled, 1999; McMillan, 1993).A BDD represents a Boolean function by a guided acyclic graph with two terminal nodes (labeled 0 and 1), and each internal node is labeled with a variable and has exactly two children: low for 0 and high for 1. If isomorphic nodes were not fused, we would have the full search tree, also called the Shannon tree, which is usually examined with a backtracking algorithm.The tree is ordered when variables occur in the same order on each branch. It can then be compressed by merging isomorphic nodes (i.e., with the same label and identical children), and by eliminating redundant nodes (i.e., whose low and high children are identical) when we have a ragged search (i.e., the result is a redundant search or an annotated D)."}, {"heading": "1.3 Knowledge Compilation for Graphical Models", "text": "This year it will be so far that it will be able to use the mentionlcihsrcnlrVo rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rfro the rf"}, {"heading": "2. Preliminaries", "text": "Notations An argumentation problem is defined in the form of a set of variables containing values from finite domains and a set of functions defined by these variables. We call variables or subsets of variables in uppercase letters (e.g. X, Y,..) and values of variables in lowercase letters (e.g. x, y,...). Sentences are usually denoted by bold letters, e.g. X = {X1,.., Xn} is a set of variables. An assignment (X1 = x1,..., Xn) can be abbreviated as x = (< X1, x1 >,., < Xn, xn >) or x = (x1,.., xn). For a subset of variables Y, DY denotes the cartesian product of the variables in Y. The projection of an assignment x = (x1,.,.,., xy, etc.) also denotes the range of variables Y (xy)."}, {"heading": "2.1 Graphical Models", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "2.2 Binary Decision Diagrams Review", "text": "In fact, it is so that it is a species that will be able to realize that it is able, that it is able, that it is able to hide, and that it is able, is able to be able to be in a position, \"he said."}, {"heading": "2.3 Bucket Elimination Review", "text": "Consider a boundary network R = < X, D, C > and an order d = (X1, X2,., Xn). The order d dictates an elimination sequence for BE, from the last to the first. Each variable is associated with a bucket. Each condition of C is placed in the bucket of its newest variable in d. Buckets are processed from Xn to X1 by merging the boundary variable from the bucket. Each condition of C is placed in the bucket of its newest variable."}, {"heading": "2.4 Orderings and Pseudo Trees", "text": "For an order d, the structural information gathered in the primordial graph by the scopes of the functions F = {f1,.., fr} can be used to generate the unique pseudo-tree corresponding to d (Mateescu & Dechter, 2005), which is exactly the bucket tree (or elimination tree) created by BE (if variables are processed in reverse d), the same pseudo-tree can be created by conditioning on the primordial graph and processing variables in order d, as described in procedure GeneratePseudoTree. Hereinafter, d | Gi is the restriction of the order d to the nodes of the graph Gi."}, {"heading": "3. Overview of AND/OR Search Space for Graphical Models", "text": "AND / OR search space is a recently introduced (Dechter & Mateescu, 2004a, 2004b, 2007) unified framework for advanced algorithmic schemes for graphical models. Its main advantage is to take advantage of independence between variables during the search, which can provide exponential acceleration over traditional search methods without knowledge of the problem structure. As AND / OR MDDs are based on AND / OR search spaces, we need to provide a comprehensive overview for completeness."}, {"heading": "3.1 AND/OR Search Trees", "text": "The AND / OR search tree is guided by a pseudo-tree of the origin diagram. < The idea is to exploit the problem splitting into independent sub-problems during the search. Therefore, assigning a value to a variable (also known as conditioning) is tantamount to removing these variables (and their occurring edges) from the origin diagram. Therefore, partial mapping can result in the decomposition of the remaining origin diagram into independent components, each of which can be searched (or solved) individually. The pseudo-tree covers exactly all of these compositions in the order of the variable instanciation.DEFINITION 11 (AND / OR search tree of a graphic model) Given a graphical model M = < X, D >, its origin diagram G and a pseudo-tree T of the associated instantiation.DEFINITION 11 (AND / OR search tree has alternating levels of a graphical model)."}, {"heading": "3.2 AND/OR Search Graph", "text": "These nodes are referred to as unifiable. If unifiable nodes are merged, the search space becomes a graph, its size shrinking at the expense of using additional memory by the search algorithm. Therefore, the depth of the first search algorithm can be modified to store and retrieve previously calculated results when the same nodes are encountered again. The notion of unifiable nodes is formally next.DEFINITION 13 (minimal AND / OR graph, isomorphism) Two AND / OR searches G and G are isomorphic when there is a one-to-one mapping of G."}, {"heading": "3.3 Weighted AND/OR Graphs", "text": "In the previous sections, we described the structure of the AND / OR trees and diagrams. To use them to solve an argumentation problem, we need to find a way to define the input function values while exceeding an AND / OR diagram. This is accomplished by putting weights (or costs) on the OR-to-AND slurs dictated by the function values. Only those functions that are relevant contribute to an OR-to-AND slur weight, and this is captured by the buckets relative to the pseudo-tree: DEFINITION 17 (bucket relative to a pseudo-tree) In the face of a graphical model M = < X, D, F, > and a pseudo-tree T, the bucket of Xi is relative to the T, called BT (Xi), is the set of functions contained in Xi and contained in pathT."}, {"heading": "4. AND/OR Multi-Valued Decision Diagrams (AOMDDs)", "text": "The minimal context AND / OR graph (definition 16) provides an effective way to identify some unifiable nodes during the execution of the search algorithm. Namely, context unifiable nodes are only discovered on their paths from the root without actually solving their corresponding sub-problems. However, the merge based on context is not complete, which means that there are still unifiable nodes in the search engine that do not have identical contexts. In addition, some of the nodes in the context ADB CE (a) Belief networkADBCE (b) Pseudo trei. \"2.5.4E = 0.8mm301.600E = 1BA.1.4B = 1A.7.2C = 0.31.80C we (A) 10A.4.6P (A) 10A.3.1.2D = 0.51.2D"}, {"heading": "4.1 From AND/OR Search Graphs to Decision Diagrams", "text": "In this sense, it is also possible to find a solution which is based on the function and the manner in which the various types of terms and concepts in the various areas of the world are interwoven with each other. (D) In this sense, it is also possible that the way in which the individual terms and concepts of the individual concepts and concepts of the individual concepts and concepts of the individual concepts of the individual concepts and concepts of the individual concepts are interwoven with each other is inconsistent. (D) The way in which the concepts and concepts of the individual concepts and concepts of the individual concepts of the individual concepts and concepts of the individual concepts of the individual concepts and concepts of the individual concepts of the individual concepts and concepts of the individual concepts of the individual concepts, the concepts of the individual concepts of the individual concepts of the individual concepts, the individual concepts of the individual concepts of the individual concepts and the individual concepts of the individual concepts, and the individual concepts of the concepts of the"}, {"heading": "5. Using AND/OR Search to Generate AOMDDs", "text": "In Section 4.1, we describe how to convert an AND / OR graph to an AOMDD by applying reduction rules. In Section 5.1, we describe the explicit algorithm that uses a graphical model as input, conducts AND / OR searches with context-based caching to obtain the context-dependent minimum AND / OR graph, and in Section 5.2, we describe the procedure that applies the reduction rules from bottom to top to obtain the AOMDD."}, {"heading": "5.1 Algorithm AND/OR-SEARCH-AOMDD", "text": "The algorithms 1, called AND / OR-SEARCH-AOMDD, compile a graphical model into an AOMDD. A memory-intensive (with context-based caching function) AND / OR search is used to generate the context that is minimal AND / OR graph (see definition 16). Input to AND / OR-SEARCH-AOMDD is a graphical model M and a pseudo-graph that also defines the OR context of each variable. Each variable Xi has an associated cache table whose scope is the context of Xi in T. This ensures that the track of the search is the context minimal AND / OR graph designated by LXi (see line 35), for each variable Xi used to store meta node labeled with Xi. These lists are used by the process that performs the AND / OR reduction that is performed by the one of the REDUCED that performs an OR layer."}, {"heading": "5.2 Reducing the Context Minimal AND/OR Graph to an AOMDD", "text": "We use the depth first traversal order of T (line 1), but any other bottom up order is just as good; the outer one for loop (starting with line 2) goes through each level of the context minimum AND / OR diagram (where one level contains all OR and AND nodes with the same variable, in other words, it contains all meta nodes of that variable); to ensure complexity, a hash table that is initially empty is used for each level; the inner one for loop (starting with line 4) goes through all the metanodes of a level that are also stored (or pointers to them are stored) in the LXi list; for each new meta node n in the LXi list, in row 5 the hash table H is checked to see if a node isomorphic with n exists."}, {"heading": "6. Using Bucket Elimination to Generate AOMDDs", "text": "The idea is to express the graphical model functions as AOMDDs and then combine them with APPLY operations based on the same pseudo-tree, and present the combination of the initial functions, also represented as AOMDD, on the same pseudo-tree. We will start with an example based on constraint networks in detail in Section 6.2.This is easier to understand because the weights on the arcs are all 1 or 0 and are therefore represented in the numbers by solid and dashed lines."}, {"heading": "6.1 Algorithm BE-AOMDD", "text": "This year, it has reached the stage where it will be able to take the lead."}, {"heading": "6.3 Complexity of APPLY and BE-AOMDD", "text": "The following suggestions are inspired by the results, which are limited to a full path from the root to a leaf in the pseudo-tree. Let Xi be such a path in T. Based on the definition of strictly compatible pseudo-trees, one can consider a union of regular MDDs, each limited to a full path from the root to a leaf in the pseudo-tree. Let it come to such a path in T. This process can be repeated for each path. The resulting MDDs, one for each path in T, must be synchronized on their common parts (at the intersection of paths)."}, {"heading": "7. AOMDDs Are Canonical Representations", "text": "It is well known that OBDDs are canonical representations of Boolean functions which, due to an arrangement of variables (Bryant, 1986), result in an identical OBDD, and this property extends to MDDs (Srinivasan et al., 1990).The linear arrangement of variables defines a chain pseudo-tree which covers the structure of OBDD or MDD. In the case of AOBDDs and AOMDDs, the canonicity is in relation to a pseudo-tree which passes from an overall order (corresponding to a linear arrangement) to suborders (corresponding to a pseudo-tree arrangement).On the one hand, we gain the ability to have a more compact compiled structure, but on the other hand, the canonicity is no longer present in relation to all equivalent graphic models, but only relative to those OMD models which are partially compatible with density."}, {"heading": "7.1 AOMDDs for Constraint Networks Are Canonical Representations", "text": "The case of constraint networks is simpler because the weights on the OR-to-AND slurs can only be 0 or 1. We will show that all equivalent constraint networks that allow the same pseudo-tree T have the same AOMDD value that is based on T. We will start with a sentence that will help us prove the main propositions. Proposition 6 Let f be a function, not always zero, defined by a constraint network over X. Given a partition {X1,..., Xm} of the set of variables X (namely Xi, Xj = \u03c6, and X = mi = 1X), if f = f1. fm and f = g1. gm, so that the circumference (fi) = circumference (gi) = Xi for all i,."}, {"heading": "8. Canonical AOMDDs for Weighted Graphical Models", "text": "This year is the highest in the history of the country."}, {"heading": "9. Semantic Treewidth", "text": "rE \"s tis the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green.\" rE \"s tis the green for the green for the green for the green for the green"}, {"heading": "10. Experimental Evaluation", "text": "Our experimental evaluation is in the preliminary stages, but the results we have are already encouraging. We executed the search-based compilation algorithm by recording the tracks of the AND / OR search and then reducing the resulting AND / OR graph from bottom to top. In these results, we applied only reduction by isomorphism, while still maintaining the redundant meta-notes. We implemented our algorithms in C + + and conducted all the experiments on a 2.2GHz Intel Core 2 Duo with 2GB RAM under Windows."}, {"heading": "10.1 Benchmarks", "text": "We tested the performance of the search-based compilation algorithm on random Bayesian networks by using instances from the Bayesian network repository and a subset of networks from the Inference Evaluation Dataset.Random bayesian networks Random Bayesian networks were generated using parameters (n, k, c, p), where n is the number of variables, k is the domain size, c is the number of conditional probability tables (CPTs), and p is the number of parents in each CPT. The structure of the network was generated by randomly selecting c variables from n and for each random selection of p parents from their previous variables, relative to a certain order. The remaining n \u2212 c variables are called root nodes. The entries in each probability table were randomly generated using a uniform distribution of c variables from n, and the table was then randomly used as an instability indicator."}, {"heading": "10.2 Algorithms", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "10.3 Evaluation on Bayesian Networks", "text": "Table 1 shows the results of experiments with 50 Bayesian networks. Both the AOMDD compilers and the ACE used min-fill heuristics (Kj\u00e6aerulff, 1990) to construct the guiding pseudo-tree or dtree."}, {"heading": "10.3.1 BAYESIAN NETWORKS REPOSITORY", "text": "We see that ACE is overall the fastest compiler in this field, outperforming both AOMDD-BCP and AOMDD-SAT by several orders of magnitude (e.g. mildew, pigs). However, the diagrams created by ACE and AOMDD-BCP (or AOMDD-SAT) are comparable in size. In some cases, AOMDD-BCP and AOMDD-SAT are able to compile much smaller diagrams than ACE. For example, the diagram created by AOMDD-BCP for the mildew network is 13 times smaller than the one created by ACE. In principle, the output generated by ACE and AOMDD should be similar if both are derived from the same pseudo tree / dtree. Our scheme should be considered as a compilation alternative that (1) expands decision diagrams and (2) mimics traces of search properties that make them accessible."}, {"heading": "10.3.2 UAI\u201906 DATASET", "text": "AOMDD-SAT is able to compile the smallest diagrams for only 6 networks (e.g. BN 47, BN 49, BN 55, BN 57, BN 61, BN 67). Still, the size difference between the data structures created by MDD-BCP and AOMDD-BCP is up to 2 orders of magnitude in favor of the latter."}, {"heading": "10.3.3 RANDOM NETWORKS", "text": "The problem cases labeled r75-1 to r75-10 were generated from a class of random faith networks with parameters (n = 75, k = 2, p = 2, c = 65), and the instances labeled r100d25-1 to r100d25-10 belong to a class of parameters (n = 100, k = 2, p = 2, c = 90). In the latter case, det = 25% of the CPTs are deterministic, i.e. they contain only 0 and 1 probability levels. These test instances were compiled without evidence. We see that in this range AOMDD-BCP / AOMDD-SAT were able to compile the smallest diagrams, which were on average about 2 times smaller than the diagrams produced by ACE. However, ACE was again the fastest compiler."}, {"heading": "10.4 The Impact of Variable Ordering", "text": "As theory dictates, AOMDD size is influenced by the quality of the leading pseudo-tree. Darwiche (2001) also explored this idea for the construction of dtrees guiding ACE. Because both mind-fill heuristics and hypergraph partitioning are randomized (i.e. bonds are randomly broken), the size of the AOMDD guided by the resulting pseudo-tree can vary significantly from run to run. Figure 25 shows the AOMDD size using hypergraph and min-fill based pseudo-trees for 6 networks selected from Table 1, over 20 independent runs. We also capture the average induced width and depth of the obtained pseudo-trees (see header of each chart in Figure 25)."}, {"heading": "10.5 Memory Usage", "text": "Table 2 shows the memory usage (in MBytes) of AOMDD-BCP or AOMDD-SAT in Bayesian networks from Table 1. We see that in some cases, the AOMDD-based compilers require significantly less memory than ACE. For example, both AOMDBCP and AOMDD-SAT in the \"mildew\" network require about 22 MB of memory to compile the AND / OR decision diagram, while ACE requires up to 218 MB of memory. Furthermore, in this case, the compiled AOMDD has about an order of magnitude fewer nodes than the one constructed by ACE. If we compare the two AND / OR search-based compilers, we find that in networks with a considerable degree of determinism, such as those from the UAI '06 evaluation dataset, AOMDD-SAT consumes on average two times less memory than AOMDD-CD-2. Comparison of the OMDD-BCD memory stipulations to OMD-SD-SD requires the savings in OMD."}, {"heading": "11. Related Work", "text": "The work on this subject was expanded by Bayardo and Miranker (1996) and more recently applied by Larardo Schrag (2001), and was considered along two lines: (1) the work related to the AND / OR search idea for graphic models, and (2) the work related to the compilation of graphic models that structurally exploit the problem. A detailed discussion for (1) was therefore provided in the previous work by Dechter and Mateescu (2007). However, since this is not the focus of the paper, we only mention that the AND / OR idea was a fundamental restructuring of Freuder and Quinn (1985, 1987). The idea was adapted for distributed constraint satisfaction by Collin et al. (1991, 1999) and more recently by Modi et al. (2005) and was also shown to be related to graphic systems. (Dechter, 1992) This work was expanded by Bayardo and Miranker."}, {"heading": "12. Conclusion", "text": "We propose the AND / OR Value-Added Decision Graph (AOMDD) resulting from the investigation of AND / OR search fields for graphical models (Dechter & Mateescu, 2004a, 2004b; Mateescu & Dechter, 2005; Dechter & Mateescu, 2007) and ordered binary decision diagrams (OBDDs) This data structure can be used to compile any available graphical model. Graphical model algorithms based on search and compiling data structures such as BDDs differ primarily in their choice of time vs. memory. As we move from a regular OR search space to an AND / OR search space, the range of available algorithms is improved for all times vs. storage decisions. We believe that the AND / OR search space clarifies the available options and helps the user make an informed choice of the algorithm that best reduces the specific OMDD resource available (OMD)."}, {"heading": "Acknowledgments", "text": "The authors would like to thank the anonymous reviewers for their constructive suggestions to improve the paper, and they can therefore have a useful discussion on complexity issues, and Lars Otten and Natasha Flerova for comments on the final version of the manuscript. This work was supported by NSF grants IIS-0412854 and IIS-0713118, and the initial part of the Radcliffe Fellowship 2005-2006 (through the partner program), with Harvard undergraduate student John Cobb. AppendixProof Proposition 1 Consider the level of variable Xi, and the meta-nodes in the meta-nodes in LXi (the inner for loop), there can be no two meta nodes at the Xi level in the AND / OR graphics that are isomorphic because they would have been in line 6."}], "references": [{"title": "Binary decision diagrams", "author": ["S. Akers"], "venue": "IEEE Transactions on Computers, C-27(6), 509\u2013516.", "citeRegEx": "Akers,? 1978", "shortCiteRegEx": "Akers", "year": 1978}, {"title": "New advances in inference by recursive conditioning", "author": ["D. Allen", "A. Darwiche"], "venue": "In Proceedings of the Nineteenth Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Allen and Darwiche,? \\Q2003\\E", "shortCiteRegEx": "Allen and Darwiche", "year": 2003}, {"title": "Algorithms and complexity results for #SAT and Bayesian inference", "author": ["F. Bacchus", "S. Dalmao", "T. Pitassi"], "venue": "In Proceedings of the 44th Annual IEEE Symposium on Foundations of Computer Science", "citeRegEx": "Bacchus et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Bacchus et al\\.", "year": 2003}, {"title": "Value elimination: Bayesian inference via backtracking search", "author": ["F. Bacchus", "S. Dalmao", "T. Pitassi"], "venue": "In Proceedings of the Nineteenth Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Bacchus et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Bacchus et al\\.", "year": 2003}, {"title": "Algebraic decision diagrams and their applications", "author": ["R. Bahar", "E. Frohm", "C. Gaona", "G. Hachtel", "E. Macii", "A. Pardo", "F. Somenzi"], "venue": "In IEEE/ACM International Conference on Computer-Aided Design (ICCAD\u201993),", "citeRegEx": "Bahar et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Bahar et al\\.", "year": 1993}, {"title": "A complexity analysis of space-bound learning algorithms for the constraint satisfaction problem", "author": ["R. Bayardo", "D. Miranker"], "venue": "In Proceedings of the Thirteenth National Conference on Artificial Intelligence", "citeRegEx": "Bayardo and Miranker,? \\Q1996\\E", "shortCiteRegEx": "Bayardo and Miranker", "year": 1996}, {"title": "Using CSP look-back techniques to solve real world SAT instances", "author": ["R.J. Bayardo", "R.C. Schrag"], "venue": "In Proceedings of the Fourteenth National Conference on Artificial Intelligence", "citeRegEx": "Bayardo and Schrag,? \\Q1997\\E", "shortCiteRegEx": "Bayardo and Schrag", "year": 1997}, {"title": "The disjunctive decomposition of logic functions", "author": ["V. Bertacco", "M. Damiani"], "venue": "In IEEE/ACM International Conference on Computer-Aided Design (ICCAD\u201997),", "citeRegEx": "Bertacco and Damiani,? \\Q1997\\E", "shortCiteRegEx": "Bertacco and Damiani", "year": 1997}, {"title": "Approximating treewidth, pathwidth and minimum elimination tree height", "author": ["H.L. Bodlaender", "J.R. Gilbert"], "venue": null, "citeRegEx": "Bodlaender and Gilbert,? \\Q1991\\E", "shortCiteRegEx": "Bodlaender and Gilbert", "year": 1991}, {"title": "Graph-based algorithms for Boolean function manipulation", "author": ["R.E. Bryant"], "venue": "IEEE Transactions on Computers, 35, 677\u2013691.", "citeRegEx": "Bryant,? 1986", "shortCiteRegEx": "Bryant", "year": 1986}, {"title": "A survey on knowledge compilation", "author": ["M. Cadoli", "F.M. Donini"], "venue": "AI Communications,", "citeRegEx": "Cadoli and Donini,? \\Q1997\\E", "shortCiteRegEx": "Cadoli and Donini", "year": 1997}, {"title": "Compiling Bayesian networks with local structure", "author": ["M. Chavira", "A. Darwiche"], "venue": "In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence", "citeRegEx": "Chavira and Darwiche,? \\Q2005\\E", "shortCiteRegEx": "Chavira and Darwiche", "year": 2005}, {"title": "Compiling Bayesian networks using variable elimination", "author": ["M. Chavira", "A. Darwiche"], "venue": "In Proceedings of the Twentieth International Joint Conference on Artificial Intelligence", "citeRegEx": "Chavira and Darwiche,? \\Q2007\\E", "shortCiteRegEx": "Chavira and Darwiche", "year": 2007}, {"title": "Compiling relational Bayesian networks for exact inference", "author": ["M. Chavira", "A. Darwiche", "M. Jaeger"], "venue": "International Journal of Approximate Reasoning,", "citeRegEx": "Chavira et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Chavira et al\\.", "year": 2006}, {"title": "On the feasibility of distributed constraint satisfaction", "author": ["Z. Collin", "R. Dechter", "S. Katz"], "venue": "In Proceedings of the Twelfth International Conference of Artificial Intelligence", "citeRegEx": "Collin et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Collin et al\\.", "year": 1991}, {"title": "Self-stabilizing distributed constraint satisfaction", "author": ["Z. Collin", "R. Dechter", "S. Katz"], "venue": "The Chicago Journal of Theoretical Computer Science,", "citeRegEx": "Collin et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Collin et al\\.", "year": 1999}, {"title": "Recursive conditioning", "author": ["A. Darwiche"], "venue": "Artificial Intelligence, 125(1-2), 5\u201341.", "citeRegEx": "Darwiche,? 2001", "shortCiteRegEx": "Darwiche", "year": 2001}, {"title": "A logical approach to factoring belief networks", "author": ["A. Darwiche"], "venue": "Proceedings of the Eighth International Conference on Principles of Knowledge Representation and Reasoning (KR\u201902), pp. 409\u2013420.", "citeRegEx": "Darwiche,? 2002", "shortCiteRegEx": "Darwiche", "year": 2002}, {"title": "A knowledge compilation map", "author": ["A. Darwiche", "P. Marquis"], "venue": "Journal of Artificial Intelligence Research (JAIR),", "citeRegEx": "Darwiche and Marquis,? \\Q2002\\E", "shortCiteRegEx": "Darwiche and Marquis", "year": 2002}, {"title": "Constraint networks", "author": ["R. Dechter"], "venue": "Encyclopedia of Artificial Intelligence, 276\u2013285.", "citeRegEx": "Dechter,? 1992", "shortCiteRegEx": "Dechter", "year": 1992}, {"title": "Bucket elimination: A unifying framework for reasoning", "author": ["R. Dechter"], "venue": "Artificial Intelligence, 113, 41\u201385.", "citeRegEx": "Dechter,? 1999", "shortCiteRegEx": "Dechter", "year": 1999}, {"title": "AND/OR search spaces for graphical models", "author": ["R. Dechter", "R. Mateescu"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter and Mateescu,? \\Q2007\\E", "shortCiteRegEx": "Dechter and Mateescu", "year": 2007}, {"title": "Mixtures of deterministic-probabilistic networks and their AND/OR search space", "author": ["R. Dechter", "R. Mateescu"], "venue": "In Proceedings of the Twentieth Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Dechter and Mateescu,? \\Q2004\\E", "shortCiteRegEx": "Dechter and Mateescu", "year": 2004}, {"title": "The impact of AND/OR search spaces on constraint satisfaction and counting", "author": ["R. Dechter", "R. Mateescu"], "venue": "In Proceedings of the Tenth International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "Dechter and Mateescu,? \\Q2004\\E", "shortCiteRegEx": "Dechter and Mateescu", "year": 2004}, {"title": "Tree clustering for constraint networks", "author": ["R. Dechter", "J. Pearl"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter and Pearl,? \\Q1989\\E", "shortCiteRegEx": "Dechter and Pearl", "year": 1989}, {"title": "K*BMDs: A new data structure for verification", "author": ["R. Drechsler", "B. Becker", "S. Ruppertz"], "venue": "In Proceedings of the 1996 European conference on Design and Test (ED&TC\u201996),", "citeRegEx": "Drechsler et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Drechsler et al\\.", "year": 1996}, {"title": "Binary decision diagrams in theory and practice", "author": ["R. Drechsler", "D. Sieling"], "venue": "International Journal on Software Tools for Technology Transfer (STTT),", "citeRegEx": "Drechsler and Sieling,? \\Q2001\\E", "shortCiteRegEx": "Drechsler and Sieling", "year": 2001}, {"title": "On the use of partially ordered decision graphs in knowledge compilation and quantified boolean formulae", "author": ["H. Fargier", "P. Marquis"], "venue": "In Proceedings of The Twenty-First National Conference on Artificial Intelligence", "citeRegEx": "Fargier and Marquis,? \\Q2006\\E", "shortCiteRegEx": "Fargier and Marquis", "year": 2006}, {"title": "On valued negation normal form formulas", "author": ["H. Fargier", "P. Marquis"], "venue": "In Proceedings of the Twentieth International Joint Conference on Artificial Intelligence", "citeRegEx": "Fargier and Marquis,? \\Q2007\\E", "shortCiteRegEx": "Fargier and Marquis", "year": 2007}, {"title": "Compiling CSPs into tree-driven automata for interactive", "author": ["H. Fargier", "M. Vilarem"], "venue": "solving. Constraints,", "citeRegEx": "Fargier and Vilarem,? \\Q2004\\E", "shortCiteRegEx": "Fargier and Vilarem", "year": 2004}, {"title": "Utility Theory for Decision Making", "author": ["P.C. Fishburn"], "venue": "Wiley, NewYork.", "citeRegEx": "Fishburn,? 1970", "shortCiteRegEx": "Fishburn", "year": 1970}, {"title": "Taking advantage of stable sets of variables in constraint satisfaction problems", "author": ["E.C. Freuder", "M.J. Quinn"], "venue": "In Proceedings of the Ninth International Joint Conference on Artificial Intelligence", "citeRegEx": "Freuder and Quinn,? \\Q1985\\E", "shortCiteRegEx": "Freuder and Quinn", "year": 1985}, {"title": "The use of lineal spanning trees to represent constraint satisfaction problems", "author": ["E.C. Freuder", "M.J. Quinn"], "venue": "Tech. rep. 87-41,", "citeRegEx": "Freuder and Quinn,? \\Q1987\\E", "shortCiteRegEx": "Freuder and Quinn", "year": 1987}, {"title": "On compiling system models for faster and more scalable diagnosis", "author": ["J. Huang", "A. Darwiche"], "venue": "In Proceedings of the 20th National Conference on Artificial Intelligence", "citeRegEx": "Huang and Darwiche,? \\Q2005\\E", "shortCiteRegEx": "Huang and Darwiche", "year": 2005}, {"title": "DPLL with a trace: From SAT to knowledge compilation", "author": ["J. Huang", "A. Darwiche"], "venue": "In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence", "citeRegEx": "Huang and Darwiche,? \\Q2005\\E", "shortCiteRegEx": "Huang and Darwiche", "year": 2005}, {"title": "Probabilistic decision graphs - combining verification and AI techniques for probabilistic inference", "author": ["M. Jaeger"], "venue": "International Journal of Uncertainty, Fuzziness and KnowledgeBased Systems, 12, 19\u201342.", "citeRegEx": "Jaeger,? 2004", "shortCiteRegEx": "Jaeger", "year": 2004}, {"title": "Unifying cluster-tree decompositions for reasoning in graphical models", "author": ["K. Kask", "R. Dechter", "J. Larrosa", "A. Dechter"], "venue": "Artificial Intelligence,", "citeRegEx": "Kask et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Kask et al\\.", "year": 2005}, {"title": "Triangulation of graph-based algorithms giving small total state space", "author": ["U. Kj\u00e6aerulff"], "venue": "Tech. rep., University of Aalborg, Denmark.", "citeRegEx": "Kj\u00e6aerulff,? 1990", "shortCiteRegEx": "Kj\u00e6aerulff", "year": 1990}, {"title": "Disjoint pattern database heuristics", "author": ["R. Korf", "A. Felner"], "venue": "Artificial Intelligence,", "citeRegEx": "Korf and Felner,? \\Q2002\\E", "shortCiteRegEx": "Korf and Felner", "year": 2002}, {"title": "Edge-valued binary decision for multi-level hierarchical verification", "author": ["Lai", "Y.-T", "S. Sastry"], "venue": "In Proceedings of the Twenty Nineth Design Automation Conference,", "citeRegEx": "Lai et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Lai et al\\.", "year": 1992}, {"title": "Pseudo-tree search with soft constraints", "author": ["J. Larrosa", "P. Meseguer", "M. Sanchez"], "venue": "In Proceedings of the European Conference on Artificial Intelligence", "citeRegEx": "Larrosa et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Larrosa et al\\.", "year": 2002}, {"title": "Representation of switching circuits by binary-decision programs", "author": ["C. Lee"], "venue": "Bell System Technical Journal, 38, 985\u2013999.", "citeRegEx": "Lee,? 1959", "shortCiteRegEx": "Lee", "year": 1959}, {"title": "The relationship between AND/OR search and variable elimination", "author": ["R. Mateescu", "R. Dechter"], "venue": "In Proceedings of the Twenty First Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Mateescu and Dechter,? \\Q2005\\E", "shortCiteRegEx": "Mateescu and Dechter", "year": 2005}, {"title": "AND/OR multi-valued decision diagrams (AOMDDs) for weighted graphical models", "author": ["R. Mateescu", "R. Dechter"], "venue": "In Proceedings of the Twenty Third Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Mateescu and Dechter,? \\Q2007\\E", "shortCiteRegEx": "Mateescu and Dechter", "year": 2007}, {"title": "Case-factor diagrams for structured probabilistic modeling", "author": ["D. McAllester", "M. Collins", "F. Pereira"], "venue": "In Proceedings of the Twentieth Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "McAllester et al\\.,? \\Q2004\\E", "shortCiteRegEx": "McAllester et al\\.", "year": 2004}, {"title": "Symbolic Model Checking", "author": ["K.L. McMillan"], "venue": "Kluwer Academic.", "citeRegEx": "McMillan,? 1993", "shortCiteRegEx": "McMillan", "year": 1993}, {"title": "Hierarchical representation of discrete functions with application to model checking", "author": ["K.L. McMillan"], "venue": "Computer Aided Verification, pp. 41\u201354.", "citeRegEx": "McMillan,? 1994", "shortCiteRegEx": "McMillan", "year": 1994}, {"title": "ADOPT: asynchronous distributed constraint optimization with quality guarantees", "author": ["P.J. Modi", "W. Shen", "M. Tambe", "M. Yokoo"], "venue": "Artificial Intelligence,", "citeRegEx": "Modi et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Modi et al\\.", "year": 2005}, {"title": "Chaff: Engineering an efficient SAT solver", "author": ["M. Moskewicz", "C. Madigan", "Y. Zhao", "L. Zhang", "S. Malik"], "venue": "In Proceedings of the Thirty Eighth Design Automation Conference,", "citeRegEx": "Moskewicz et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Moskewicz et al\\.", "year": 2001}, {"title": "Principles of Artificial Intelligence", "author": ["N.J. Nilsson"], "venue": "Tioga, Palo Alto, CA.", "citeRegEx": "Nilsson,? 1980", "shortCiteRegEx": "Nilsson", "year": 1980}, {"title": "Pruning conformant plans by counting models on compiled d-DNNF representations", "author": ["H. Palacios", "B. Bonet", "A. Darwiche", "H. Geffner"], "venue": "In Proceedings of the 15th International Conference on Planning and Scheduling", "citeRegEx": "Palacios et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Palacios et al\\.", "year": 2005}, {"title": "Probabilistic Reasoning in Intelligent Systems", "author": ["J. Pearl"], "venue": "Morgan Kaufmann.", "citeRegEx": "Pearl,? 1988", "shortCiteRegEx": "Pearl", "year": 1988}, {"title": "Combining component caching and clause learning for effective model counting", "author": ["T. Sang", "F. Bacchus", "P. Beame", "H. Kautz", "T. Pitassi"], "venue": "In Proceedings of the Seventh International Conference on Theory and Applications of Satisfiability Testing (SAT\u201904)", "citeRegEx": "Sang et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Sang et al\\.", "year": 2004}, {"title": "Affine algebraic decision diagrams (AADDs) and their application to structured probabilistic inference", "author": ["S. Sanner", "D. McAllester"], "venue": "In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence", "citeRegEx": "Sanner and McAllester,? \\Q2005\\E", "shortCiteRegEx": "Sanner and McAllester", "year": 2005}, {"title": "Knowledge compilation and theory approximation", "author": ["B. Selman", "H. Kautz"], "venue": "Journal of the ACM,", "citeRegEx": "Selman and Kautz,? \\Q1996\\E", "shortCiteRegEx": "Selman and Kautz", "year": 1996}, {"title": "Valuation-based systems for Bayesian decision analysis", "author": ["P. Shenoy"], "venue": "Operations Research, 40, 463\u2013484.", "citeRegEx": "Shenoy,? 1992", "shortCiteRegEx": "Shenoy", "year": 1992}, {"title": "Algorithms for discrete function manipulation", "author": ["A. Srinivasan", "T. Kam", "S. Malik", "R.K. Brayton"], "venue": "In International conference on CAD,", "citeRegEx": "Srinivasan et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Srinivasan et al\\.", "year": 1990}, {"title": "Factored edge-valued binary decision diagrams", "author": ["P. Tafertshofer", "M. Pedram"], "venue": "Formal Methods in System Design,", "citeRegEx": "Tafertshofer and Pedram,? \\Q1997\\E", "shortCiteRegEx": "Tafertshofer and Pedram", "year": 1997}, {"title": "Bounded backtracking for the valued constraint satisfaction problems", "author": ["C. Terrioux", "P. J\u00e9gou"], "venue": "In Proceedings of the Ninth International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "Terrioux and J\u00e9gou,? \\Q2003\\E", "shortCiteRegEx": "Terrioux and J\u00e9gou", "year": 2003}, {"title": "Hybrid backtracking bounded by tree-decomposition of constraint networks", "author": ["C. Terrioux", "P. J\u00e9gou"], "venue": "Artificial Intelligence,", "citeRegEx": "Terrioux and J\u00e9gou,? \\Q2003\\E", "shortCiteRegEx": "Terrioux and J\u00e9gou", "year": 2003}, {"title": "Decision diagrams for the computation of semiring valuations", "author": ["N. Wilson"], "venue": "Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI\u201905), pp. 331\u2013336.", "citeRegEx": "Wilson,? 2005", "shortCiteRegEx": "Wilson", "year": 2005}, {"title": "Boolean function representation and spectral characterization using AND/OR graphs. Integration", "author": ["A. Zuzek", "R. Drechsler", "M. Thornton"], "venue": "The VLSI journal,", "citeRegEx": "Zuzek et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Zuzek et al\\.", "year": 2000}], "referenceMentions": [{"referenceID": 49, "context": "The AND/OR search space idea was originally developed for heuristic search (Nilsson, 1980).", "startOffset": 75, "endOffset": 90}, {"referenceID": 19, "context": "Specifically, it resembles the pseudo tree rearrangement (Freuder & Quinn, 1985, 1987), that was adapted subsequently for distributed constraint satisfaction by Collin, Dechter, and Katz (1991, 1999) and more recently by Modi, Shen, Tambe, and Yokoo (2005), and was also shown to be related to graph-based backjumping (Dechter, 1992).", "startOffset": 318, "endOffset": 333}, {"referenceID": 16, "context": "Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus, Dalmao, & Pitassi, 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang, Bacchus, Beame, Kautz, & Pitassi, 2004).", "startOffset": 109, "endOffset": 125}, {"referenceID": 45, "context": "2 Decision Diagrams Decision diagrams are widely used in many areas of research, especially in software and hardware verification (Clarke, Grumberg, & Peled, 1999; McMillan, 1993).", "startOffset": 130, "endOffset": 179}, {"referenceID": 14, "context": "In the context of graphical models, AND/OR search (Dechter & Mateescu, 2007) was also inspired by search advances introduced sporadically in the past three decades for constraint satisfaction and more recently for probabilistic inference and for optimization tasks. Specifically, it resembles the pseudo tree rearrangement (Freuder & Quinn, 1985, 1987), that was adapted subsequently for distributed constraint satisfaction by Collin, Dechter, and Katz (1991, 1999) and more recently by Modi, Shen, Tambe, and Yokoo (2005), and was also shown to be related to graph-based backjumping (Dechter, 1992).", "startOffset": 51, "endOffset": 523}, {"referenceID": 5, "context": "This work was extended by Bayardo and Miranker (1996) and Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa, Meseguer, and Sanchez (2002).", "startOffset": 26, "endOffset": 54}, {"referenceID": 5, "context": "This work was extended by Bayardo and Miranker (1996) and Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa, Meseguer, and Sanchez (2002).", "startOffset": 26, "endOffset": 84}, {"referenceID": 5, "context": "This work was extended by Bayardo and Miranker (1996) and Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa, Meseguer, and Sanchez (2002). Another version that can be viewed as exploring the AND/OR graphs was presented recently for constraint satisfaction (Terrioux & J\u00e9gou, 2003b) and for optimization (Terrioux & J\u00e9gou, 2003a).", "startOffset": 26, "endOffset": 173}, {"referenceID": 5, "context": "This work was extended by Bayardo and Miranker (1996) and Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa, Meseguer, and Sanchez (2002). Another version that can be viewed as exploring the AND/OR graphs was presented recently for constraint satisfaction (Terrioux & J\u00e9gou, 2003b) and for optimization (Terrioux & J\u00e9gou, 2003a). Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus, Dalmao, & Pitassi, 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang, Bacchus, Beame, Kautz, & Pitassi, 2004). 1.2 Decision Diagrams Decision diagrams are widely used in many areas of research, especially in software and hardware verification (Clarke, Grumberg, & Peled, 1999; McMillan, 1993). A BDD represents a Boolean function by a directed acyclic graph with two terminal nodes (labeled 0 and 1), and every internal node is labeled with a variable and has exactly two children: low for 0 and high for 1. If isomorphic nodes were not merged, we would have the full search tree, also called Shannon tree, which is the usual full tree explored by a backtracking algorithm. The tree is ordered if variables are encountered in the same order along every branch. It can then be compressed by merging isomorphic nodes (i.e., with the same label and identical children), and by eliminating redundant nodes (i.e., whose low and high children are identical). The result is the celebrated reduced ordered binary decision diagram, or OBDD for short, introduced by Bryant (1986). However, the underlying structure is OR, because the initial Shannon tree is an OR tree.", "startOffset": 26, "endOffset": 1637}, {"referenceID": 9, "context": "Binary Decision Diagram (BDD) (Bryant, 1986) is arguably the most widely known and used compiled structure.", "startOffset": 30, "endOffset": 44}, {"referenceID": 55, "context": "The combination operator can also be defined axiomatically (Shenoy, 1992).", "startOffset": 59, "endOffset": 73}, {"referenceID": 31, "context": "We will use the concept of pseudo tree, which resembles the tree rearrangements introduced by Freuder and Quinn (1985): 1.", "startOffset": 94, "endOffset": 119}, {"referenceID": 20, "context": "The induced width of a graphical model governs the complexity of solving it by Bucket Elimination (Dechter, 1999), and was also shown to bound the AND/OR search graph when memory is used to cache solved subproblems (Dechter & Mateescu, 2007).", "startOffset": 98, "endOffset": 113}, {"referenceID": 19, "context": "The induced width of a graphical model governs the complexity of solving it by Bucket Elimination (Dechter, 1999), and was also shown to bound the AND/OR search graph when memory is used to cache solved subproblems (Dechter & Mateescu, 2007). DEFINITION 7 (induced graph, induced width, treewidth, pathwidth) An ordered graph is a pair (G, d), where G = ({X1, . . . , Xn}, E) is an undirected graph, and d = (X1, . . . , Xn) is an ordering of the nodes. The width of a node in an ordered graph is the number of neighbors that precede it in the ordering. The width of an ordering d, denoted w(d), is the maximum width over all nodes. The induced width of an ordered graph, w\u2217(d), is the width of the induced ordered graph obtained as follows: for each node, from last to first in d, its preceding neighbors are connected in a clique. The induced width of a graph, w\u2217, is the minimal induced width over all orderings. The induced width is also equal to the treewidth of a graph. The pathwidth pw\u2217 of a graph is the treewidth over the restricted class of orderings that correspond to chain decompositions. Various reasoning tasks, or queries can be defined over graphical models. Those can be defined formally using marginalization operators such as projection, summation and minimization. However, since our goal is to present a compilation of a graphical model which is independent of the queries that can be posed on it, we will discuss tasks in an informal manner only. For more information see the work of Kask, Dechter, Larrosa, and Dechter (2005). Throughout the paper, we will use two examples of graphical models: constraint networks and belief networks.", "startOffset": 99, "endOffset": 1551}, {"referenceID": 51, "context": "Belief Networks (Pearl, 1988) provide a formalism for reasoning about partial beliefs under conditions of uncertainty.", "startOffset": 16, "endOffset": 29}, {"referenceID": 45, "context": "Due to the fundamental importance of Boolean functions, a lot of effort has been dedicated to the study of Binary Decision Diagrams (BDDs), which are extensively used in software and hardware verification (Clarke et al., 1999; McMillan, 1993).", "startOffset": 205, "endOffset": 242}, {"referenceID": 40, "context": "The earliest work on BDDs is due to Lee (1959), who introduced the binary-decision program, that can be understood as a linear representation of a BDD (e.", "startOffset": 36, "endOffset": 47}, {"referenceID": 0, "context": "Akers (1978) presented the actual graphical", "startOffset": 0, "endOffset": 13}, {"referenceID": 20, "context": "3 Bucket Elimination Review Bucket Elimination (BE) (Dechter, 1999) is a well known variable elimination algorithm for inference in graphical models.", "startOffset": 52, "endOffset": 67}, {"referenceID": 9, "context": "However, it was Bryant (1986) that introduced what is now called the Ordered Binary Decision Diagram (OBDD).", "startOffset": 16, "endOffset": 30}, {"referenceID": 20, "context": "The representation in Figure 5 reverses the top down bucket processing described in earlier papers (Dechter, 1999).", "startOffset": 99, "endOffset": 114}, {"referenceID": 16, "context": "It was already shown (Freuder & Quinn, 1985; Bayardo & Miranker, 1996; Darwiche, 2001; Dechter & Mateescu, 2004a, 2007) that: THEOREM 1 Given a graphical model M over n variables, and a pseudo tree T of depth m, the size of the AND/OR search tree based on T is O(n k), where k bounds the domains of variables.", "startOffset": 21, "endOffset": 119}, {"referenceID": 19, "context": "It was shown by Dechter and Mateescu (2007) that: THEOREM 2 A graphical model M has a unique minimal AND/OR search graph relative to a pseudo-tree T .", "startOffset": 16, "endOffset": 44}, {"referenceID": 19, "context": "It was shown by Dechter and Mateescu (2007) that: THEOREM 2 A graphical model M has a unique minimal AND/OR search graph relative to a pseudo-tree T . The minimal AND/OR graph of a graphical model G relative to a pseudo tree T is denoted by MT (G). Note that the definition of minimality used in the work of Dechter and Mateescu (2007) is based only on isomorphism reduction.", "startOffset": 16, "endOffset": 336}, {"referenceID": 16, "context": "Incidentally, the caches that are not useful (namely OR nodes with only one incoming arc), are called dead caches (Darwiche, 2001), and can be determined based only on the pseudo", "startOffset": 114, "endOffset": 130}, {"referenceID": 19, "context": "For more details on the relationship between AND/OR search and BE see the work of Mateescu and Dechter (2005). 3.", "startOffset": 95, "endOffset": 110}, {"referenceID": 19, "context": "As overviewed earlier, Dechter and Mateescu (2007, 2004a) defined the complete minimal AND/OR graph which is an AND/OR graph whose unifiable nodes are all merged, and Dechter and Mateescu (2007) also proved the canonicity for non-weighted graphical models.", "startOffset": 23, "endOffset": 195}, {"referenceID": 9, "context": "The APPLY is very similar to that from OBDDs (Bryant, 1986), but it is adapted to AND/OR search graphs.", "startOffset": 45, "endOffset": 59}, {"referenceID": 9, "context": "AOMDDs Are Canonical Representations It is well known that OBDDs are canonical representations of Boolean functions given an ordering of the variables (Bryant, 1986), namely a strict ordering of any CNF specification of the same Boolean function will yield an identical OBDD, and this property extends to MDDs (Srinivasan et al.", "startOffset": 151, "endOffset": 165}, {"referenceID": 56, "context": "AOMDDs Are Canonical Representations It is well known that OBDDs are canonical representations of Boolean functions given an ordering of the variables (Bryant, 1986), namely a strict ordering of any CNF specification of the same Boolean function will yield an identical OBDD, and this property extends to MDDs (Srinivasan et al., 1990).", "startOffset": 310, "endOffset": 335}, {"referenceID": 1, "context": "The idea of using unit resolution during search for Bayesian networks was first explored by Allen and Darwiche (2003). AOMDD-BCP is conservative and applies only unit resolution at each node in the search graph, whereas AOMDD-SAT is more aggressive and detects inconsistency by running a full SAT solver.", "startOffset": 92, "endOffset": 118}, {"referenceID": 37, "context": "The AOMDD compilers as well as ACE used the min-fill heuristic (Kj\u00e6aerulff, 1990) to construct the guiding pseudo tree and dtree, respectively.", "startOffset": 63, "endOffset": 81}, {"referenceID": 11, "context": "This algorithm is similar to the one discussed by Chavira and Darwiche (2007), but uses tables to represent factors rather than ADDs.", "startOffset": 50, "endOffset": 78}, {"referenceID": 16, "context": "This idea was also explored by Darwiche (2001) for constructing dtrees that guide ACE.", "startOffset": 31, "endOffset": 47}, {"referenceID": 16, "context": "This idea was also explored by Darwiche (2001) for constructing dtrees that guide ACE. Since both the min-fill and hypergraph partitioning heuristics are randomized (namely ties are broken randomly), the size of the AOMDD guided by the resulting pseudo tree may vary significantly from one run to the next. Figure 25 displays the AOMDD size using hypergraph and min-fill based pseudo trees for 6 networks selected from Table 1, over 20 independent runs. We also record the average induced width and depth obtained for the pseudo trees (see the header of each plot in Figure 25). We see that the two heuristics do not dominate each other, namely the variance in output size is quite significant in both cases. 10.5 Memory Usage Table 2 shows the memory usage (in MBytes) of ACE, AOMDD-BCP and AOMDD-SAT, respectively, on the Bayesian networks from Table 1. We see that in some cases the AOMDD based compilers require far less memory than ACE. For example, on the \u201cmildew\u201d network, both AOMDDBCP and AOMDD-SAT use about 22 MB of memory to compile the AND/OR decision diagram, while ACE requires as much as 218 MB of memory. Moreover, the compiled AOMDD has in this case about one order of magnitude fewer nodes than that constructed by ACE. When comparing the two AND/OR search-based compilers, we observe that on networks with a significant amount of determinism, such as those from the UAI\u201906 Evaluation dataset, AOMDD-SAT uses on average two times less memory than AOMDD-BCP. The most dramatic savings in memory usage due to the aggressive constraint propagation employed by AOMDD-SAT compared with AOMDD-BCP can be seen on the \u201cBN 67\u201d network. In this case, the difference in memory usage between AOMDD-SAT and AOMDD-BCP is about 2 orders of magnitude in favor of the former. 11. Related Work The related work can be viewed along two directions: (1) the work related to the AND/OR search idea for graphical models and (2) the work related to compilation for graphical models that exploits problem structure. An extensive discussion for (1) was provided in the previous work of Dechter and Mateescu (2007). Since this is not the focus of the paper, we just mention that the AND/OR idea was origi-", "startOffset": 31, "endOffset": 2107}, {"referenceID": 49, "context": "nally developed for heuristic search (Nilsson, 1980).", "startOffset": 37, "endOffset": 52}, {"referenceID": 19, "context": "(2005), and was also shown to be related to graph-based backjumping (Dechter, 1992).", "startOffset": 68, "endOffset": 83}, {"referenceID": 16, "context": "Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus et al.", "startOffset": 109, "endOffset": 125}, {"referenceID": 52, "context": ", 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang et al., 2004).", "startOffset": 80, "endOffset": 99}, {"referenceID": 8, "context": "The idea was adapted for distributed constraint satisfaction by Collin et al. (1991, 1999) and more recently by Modi et al. (2005), and was also shown to be related to graph-based backjumping (Dechter, 1992).", "startOffset": 64, "endOffset": 131}, {"referenceID": 3, "context": "This work was extended by Bayardo and Miranker (1996), Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa et al.", "startOffset": 26, "endOffset": 54}, {"referenceID": 3, "context": "This work was extended by Bayardo and Miranker (1996), Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa et al.", "startOffset": 26, "endOffset": 81}, {"referenceID": 3, "context": "This work was extended by Bayardo and Miranker (1996), Bayardo and Schrag (1997) and more recently applied to optimization tasks by Larrosa et al. (2002). Another version that can be viewed as exploring the AND/OR graphs was presented recently for constraint satisfaction (Terrioux & J\u00e9gou, 2003b) and for optimization (Terrioux & J\u00e9gou, 2003a).", "startOffset": 26, "endOffset": 154}, {"referenceID": 2, "context": "Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus et al., 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang et al., 2004). For direction (2), there are various lines of related research. The formal verification literature, beginning with the work of Bryant (1986) contains a very large number of papers dedicated to the study of BDDs.", "startOffset": 159, "endOffset": 415}, {"referenceID": 2, "context": "Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus et al., 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang et al., 2004). For direction (2), there are various lines of related research. The formal verification literature, beginning with the work of Bryant (1986) contains a very large number of papers dedicated to the study of BDDs. However, BDDs are in fact OR structures (the underlying pseudo tree is a chain) and do not take advantage of the problem decomposition in an explicit way. The complexity bounds for OBDDs are based on pathwidth rather than treewidth. As noted earlier, the work of Bertacco and Damiani (1997) on Disjoint Support Decomposition (DSD) is related to AND/OR BDDs in various ways.", "startOffset": 159, "endOffset": 777}, {"referenceID": 2, "context": "Similar principles were introduced recently for probabilistic inference, in algorithm Recursive Conditioning (Darwiche, 2001) as well as in Value Elimination (Bacchus et al., 2003b, 2003a), and are currently at the core of the most advanced SAT solvers (Sang et al., 2004). For direction (2), there are various lines of related research. The formal verification literature, beginning with the work of Bryant (1986) contains a very large number of papers dedicated to the study of BDDs. However, BDDs are in fact OR structures (the underlying pseudo tree is a chain) and do not take advantage of the problem decomposition in an explicit way. The complexity bounds for OBDDs are based on pathwidth rather than treewidth. As noted earlier, the work of Bertacco and Damiani (1997) on Disjoint Support Decomposition (DSD) is related to AND/OR BDDs in various ways. The main common aspect is that both approaches show how structure decomposition can be exploited in a BDD-like representation. DSD is focused on Boolean functions and can exploit more refined structural information that is inherent to Boolean functions. In contrast, AND/OR BDDs assume only the structure conveyed in the constraint graph, and are therefore more broadly applicable to any constraint expression and also to graphical models in general. They allow a simpler and higher level exposition that yields graphbased bounds on the overall size of the generated AOMDD. The full relationship between these two formalisms should be studied further. McMillan (1994) introduced the BDD trees, along with the operations for combining them.", "startOffset": 159, "endOffset": 1528}, {"referenceID": 17, "context": "The AND/OR structure restricted to propositional theories is very similar to deterministic decomposable negation normal form (d-DNNF) (Darwiche & Marquis, 2002; Darwiche, 2002).", "startOffset": 134, "endOffset": 176}, {"referenceID": 4, "context": "Algebraic decision diagrams (ADDs) (Bahar et al., 1993) provide a compilation for general real-valued rather than Boolean functions.", "startOffset": 35, "endOffset": 55}, {"referenceID": 15, "context": "The AND/OR structure restricted to propositional theories is very similar to deterministic decomposable negation normal form (d-DNNF) (Darwiche & Marquis, 2002; Darwiche, 2002). More recently, Huang and Darwiche (2005b) used the trace of the DPLL algorithm to generate an OBDD, and compared with the typical formal verification approach of combining the OBDDs of the input function according to some schedule.", "startOffset": 135, "endOffset": 220}, {"referenceID": 15, "context": "The AND/OR structure restricted to propositional theories is very similar to deterministic decomposable negation normal form (d-DNNF) (Darwiche & Marquis, 2002; Darwiche, 2002). More recently, Huang and Darwiche (2005b) used the trace of the DPLL algorithm to generate an OBDD, and compared with the typical formal verification approach of combining the OBDDs of the input function according to some schedule. The structures that were investigated in that case are still OR. This idea is extended in our present work by the AND/OR search compilation algorithm. McAllester, Collins, and Pereira (2004) introduced the case factor diagrams (CFD), which subsume Markov random fields of bounded tree width and probabilistic context free grammars (PCFG).", "startOffset": 135, "endOffset": 601}, {"referenceID": 15, "context": "The AND/OR structure restricted to propositional theories is very similar to deterministic decomposable negation normal form (d-DNNF) (Darwiche & Marquis, 2002; Darwiche, 2002). More recently, Huang and Darwiche (2005b) used the trace of the DPLL algorithm to generate an OBDD, and compared with the typical formal verification approach of combining the OBDDs of the input function according to some schedule. The structures that were investigated in that case are still OR. This idea is extended in our present work by the AND/OR search compilation algorithm. McAllester, Collins, and Pereira (2004) introduced the case factor diagrams (CFD), which subsume Markov random fields of bounded tree width and probabilistic context free grammars (PCFG). CFDs are very much related to the AND/OR graphs. The CFDs target the minimal representation, by exploiting decomposition (similar to AND nodes) but also by exploiting context sensitive information and allowing dynamic ordering of variables based on context. CFDs do not eliminate the redundant nodes, and part of the cause is that they use zero suppression. There is no claim about CFDs being canonical forms, and also no description of how to combine two CFDs. There are numerous variants of decision diagrams that are designed to represent integer-valued or real-valued functions. For a comprehensive view we refer the reader to the survey of Drechsler and Sieling (2001). Algebraic decision diagrams (ADDs) (Bahar et al.", "startOffset": 135, "endOffset": 1423}, {"referenceID": 4, "context": "Algebraic decision diagrams (ADDs) (Bahar et al., 1993) provide a compilation for general real-valued rather than Boolean functions. Their main drawback is that their size increases very fast if the number of terminals becomes large. There are several approaches that try to alleviate this problem. However the structure that they capture is still OR, and they do not exploit decomposition. Some alternatives introduce edge values (or weights) that enable more subgraph sharing. Edge-valued binary decision diagrams (EVBDDs) (Lai & Sastry, 1992) use additive weights, and when multiplicative weights are also allowed they are called factored EVBDDs (FEVBDDs) (Tafertshofer & Pedram, 1997). Another type of BDDs called K*BMDs (Drechsler, Becker, & Ruppertz, 1996) also use integer weights, both additive and multiplicative in parallel. ADDs have also been extended to affine ADDs (Sanner & McAllester, 2005), through affine transformations that can achieve more compression. The result was shown to be beneficial for probabilistic inference algorithms, such as tree clustering, but they still do not exploit the AND structure. More recently, independently and in parallel to our work on AND/OR graphs (Dechter & Mateescu, 2004a, 2004b), Fargier and Vilarem (2004) and Fargier and Marquis (2006, 2007) proposed the compilation of CSPs into tree-driven automata, which have many similarities to our work.", "startOffset": 36, "endOffset": 1263}, {"referenceID": 4, "context": "Algebraic decision diagrams (ADDs) (Bahar et al., 1993) provide a compilation for general real-valued rather than Boolean functions. Their main drawback is that their size increases very fast if the number of terminals becomes large. There are several approaches that try to alleviate this problem. However the structure that they capture is still OR, and they do not exploit decomposition. Some alternatives introduce edge values (or weights) that enable more subgraph sharing. Edge-valued binary decision diagrams (EVBDDs) (Lai & Sastry, 1992) use additive weights, and when multiplicative weights are also allowed they are called factored EVBDDs (FEVBDDs) (Tafertshofer & Pedram, 1997). Another type of BDDs called K*BMDs (Drechsler, Becker, & Ruppertz, 1996) also use integer weights, both additive and multiplicative in parallel. ADDs have also been extended to affine ADDs (Sanner & McAllester, 2005), through affine transformations that can achieve more compression. The result was shown to be beneficial for probabilistic inference algorithms, such as tree clustering, but they still do not exploit the AND structure. More recently, independently and in parallel to our work on AND/OR graphs (Dechter & Mateescu, 2004a, 2004b), Fargier and Vilarem (2004) and Fargier and Marquis (2006, 2007) proposed the compilation of CSPs into tree-driven automata, which have many similarities to our work. Their main focus is the transition from linear automata to tree automata (similar to that from OR to AND/OR), and the possible savings for tree-structured networks and hyper-trees of constraints due to decomposition. Their compilation approach is guided by a tree-decomposition while ours is guided by a variable-elimination based algorithms. And it is well known that Bucket Elimination and cluster-tree decomposition are in principle the same (Dechter & Pearl, 1989). Wilson (2005) extended OBDDs to semi-ring BDDs.", "startOffset": 36, "endOffset": 1886}, {"referenceID": 4, "context": "Algebraic decision diagrams (ADDs) (Bahar et al., 1993) provide a compilation for general real-valued rather than Boolean functions. Their main drawback is that their size increases very fast if the number of terminals becomes large. There are several approaches that try to alleviate this problem. However the structure that they capture is still OR, and they do not exploit decomposition. Some alternatives introduce edge values (or weights) that enable more subgraph sharing. Edge-valued binary decision diagrams (EVBDDs) (Lai & Sastry, 1992) use additive weights, and when multiplicative weights are also allowed they are called factored EVBDDs (FEVBDDs) (Tafertshofer & Pedram, 1997). Another type of BDDs called K*BMDs (Drechsler, Becker, & Ruppertz, 1996) also use integer weights, both additive and multiplicative in parallel. ADDs have also been extended to affine ADDs (Sanner & McAllester, 2005), through affine transformations that can achieve more compression. The result was shown to be beneficial for probabilistic inference algorithms, such as tree clustering, but they still do not exploit the AND structure. More recently, independently and in parallel to our work on AND/OR graphs (Dechter & Mateescu, 2004a, 2004b), Fargier and Vilarem (2004) and Fargier and Marquis (2006, 2007) proposed the compilation of CSPs into tree-driven automata, which have many similarities to our work. Their main focus is the transition from linear automata to tree automata (similar to that from OR to AND/OR), and the possible savings for tree-structured networks and hyper-trees of constraints due to decomposition. Their compilation approach is guided by a tree-decomposition while ours is guided by a variable-elimination based algorithms. And it is well known that Bucket Elimination and cluster-tree decomposition are in principle the same (Dechter & Pearl, 1989). Wilson (2005) extended OBDDs to semi-ring BDDs. The semi-ring treatment is restricted to the OR search spaces, but allows dynamic variable ordering. It is otherwise very similar in aim and scope to our AOMDD. When restricting the AOMDD to OR graphs only, the two are closely related, except that we express BDDs using the Shenoy-Shafer axiomatization that is centered on the two operation of combination and marginalization rather then on the semi-ring formulation. Minimality in the formulation of Wilson (2005) is more general allowing merging nodes having different values and therefore it can capture symmetries (called interchangeability).", "startOffset": 36, "endOffset": 2385}, {"referenceID": 4, "context": "Algebraic decision diagrams (ADDs) (Bahar et al., 1993) provide a compilation for general real-valued rather than Boolean functions. Their main drawback is that their size increases very fast if the number of terminals becomes large. There are several approaches that try to alleviate this problem. However the structure that they capture is still OR, and they do not exploit decomposition. Some alternatives introduce edge values (or weights) that enable more subgraph sharing. Edge-valued binary decision diagrams (EVBDDs) (Lai & Sastry, 1992) use additive weights, and when multiplicative weights are also allowed they are called factored EVBDDs (FEVBDDs) (Tafertshofer & Pedram, 1997). Another type of BDDs called K*BMDs (Drechsler, Becker, & Ruppertz, 1996) also use integer weights, both additive and multiplicative in parallel. ADDs have also been extended to affine ADDs (Sanner & McAllester, 2005), through affine transformations that can achieve more compression. The result was shown to be beneficial for probabilistic inference algorithms, such as tree clustering, but they still do not exploit the AND structure. More recently, independently and in parallel to our work on AND/OR graphs (Dechter & Mateescu, 2004a, 2004b), Fargier and Vilarem (2004) and Fargier and Marquis (2006, 2007) proposed the compilation of CSPs into tree-driven automata, which have many similarities to our work. Their main focus is the transition from linear automata to tree automata (similar to that from OR to AND/OR), and the possible savings for tree-structured networks and hyper-trees of constraints due to decomposition. Their compilation approach is guided by a tree-decomposition while ours is guided by a variable-elimination based algorithms. And it is well known that Bucket Elimination and cluster-tree decomposition are in principle the same (Dechter & Pearl, 1989). Wilson (2005) extended OBDDs to semi-ring BDDs. The semi-ring treatment is restricted to the OR search spaces, but allows dynamic variable ordering. It is otherwise very similar in aim and scope to our AOMDD. When restricting the AOMDD to OR graphs only, the two are closely related, except that we express BDDs using the Shenoy-Shafer axiomatization that is centered on the two operation of combination and marginalization rather then on the semi-ring formulation. Minimality in the formulation of Wilson (2005) is more general allowing merging nodes having different values and therefore it can capture symmetries (called interchangeability). Another framework very similar to AOMDDs, that we became aware of only recently, is Probabilistic Decision Graphs (PDG) of Jaeger (2004). This work preceded most of the relevant work", "startOffset": 36, "endOffset": 2654}, {"referenceID": 60, "context": "we discussed above (Fargier & Vilarem, 2004; Wilson, 2005) and went somewhat unnoticed, perhaps due to notational and cultural differences.", "startOffset": 19, "endOffset": 58}, {"referenceID": 9, "context": "Conclusion We propose the AND/OR multi-valued decision diagram (AOMDD), which emerges from the study of AND/OR search spaces for graphical models (Dechter & Mateescu, 2004a, 2004b; Mateescu & Dechter, 2005; Dechter & Mateescu, 2007) and ordered binary decision diagrams (OBDDs) (Bryant, 1986).", "startOffset": 278, "endOffset": 292}, {"referenceID": 57, "context": "we discussed above (Fargier & Vilarem, 2004; Wilson, 2005) and went somewhat unnoticed, perhaps due to notational and cultural differences. It is however similar in motivation, framework and proposed algorithms. We believe our AND/OR framework is more accessible. We define the framework over multi-valued domains, provide greater details in algorithms and complexity analysis, make an explicit connection with search frameworks, fully address the issues of canonicity as well as provide an empirical demonstration. In particular, the claim of canonicity for PDGs is similar to the one we make for AOMDDs of weighted models, in that it is relative to the trees (or forests) that can represent the given probability distribution. There is another line of research by Drechsler and his group (e.g. Zuzek, Drechsler, & Thornton, 2000), who use AND/OR graphs for Boolean function representation, that may seem similar to our approach. However, the semantics and purpose of their AND/OR graphs are different. They are constructed based on the technique of recursive learning and are used to perform Boolean reasoning, i.e. to explore the logic consequences of a given assumption based on the structure of the circuit, especially to derive sets of implicants. The meaning of AND and OR in their case is related to the meaning of the gates/functions, while in our case the meaning is not related to the semantic of the functions. The AND/OR enumeration tree that results from a circuit according to Zuzek et al. (2000) is not related to the AND/OR decomposition that we discuss.", "startOffset": 45, "endOffset": 1512}, {"referenceID": 9, "context": "It follows the canonicity proofs for OBDDs (Bryant, 1986) and MDDs (Srinivasan et al.", "startOffset": 43, "endOffset": 57}, {"referenceID": 56, "context": "It follows the canonicity proofs for OBDDs (Bryant, 1986) and MDDs (Srinivasan et al., 1990), but extends them from linear orderings to tree orderings that capture function decomposition according to the pseudo tree T .", "startOffset": 67, "endOffset": 92}], "year": 2008, "abstractText": "Inspired by the recently introduced framework of AND/OR search spaces for graphical models, we propose to augment Multi-Valued Decision Diagrams (MDD) with AND nodes, in order to capture function decomposition structure and to extend these compiled data structures to general weighted graphical models (e.g., probabilistic models). We present the AND/OR Multi-Valued Decision Diagram (AOMDD) which compiles a graphical model into a canonical form that supports polynomial (e.g., solution counting, belief updating) or constant time (e.g. equivalence of graphical models) queries. We provide two algorithms for compiling the AOMDD of a graphical model. The first is search-based, and works by applying reduction rules to the trace of the memory intensive AND/OR search algorithm. The second is inference-based and uses a Bucket Elimination schedule to combine the AOMDDs of the input functions via the the APPLY operator. For both algorithms, the compilation time and the size of the AOMDD are, in the worst case, exponential in the treewidth of the graphical model, rather than pathwidth as is known for ordered binary decision diagrams (OBDDs). We introduce the concept of semantic treewidth, which helps explain why the size of a decision diagram is often much smaller than the worst case bound. We provide an experimental evaluation that demonstrates the potential of AOMDDs.", "creator": "dvips(k) 5.96dev Copyright 2007 Radical Eye Software"}}}