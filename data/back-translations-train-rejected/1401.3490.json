{"id": "1401.3490", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2014", "title": "BnB-ADOPT: An Asynchronous Branch-and-Bound DCOP Algorithm", "abstract": "Distributed constraint optimization (DCOP) problems are a popular way of formulating and solving agent-coordination problems. A DCOP problem is a problem where several agents coordinate their values such that the sum of the resulting constraint costs is minimal. It is often desirable to solve DCOP problems with memory-bounded and asynchronous algorithms. We introduce Branch-and-Bound ADOPT (BnB-ADOPT), a memory-bounded asynchronous DCOP search algorithm that uses the message-passing and communication framework of ADOPT (Modi, Shen, Tambe, and Yokoo, 2005), a well known memory-bounded asynchronous DCOP search algorithm, but changes the search strategy of ADOPT from best-first search to depth-first branch-and-bound search. Our experimental results show that BnB-ADOPT finds cost-minimal solutions up to one order of magnitude faster than ADOPT for a variety of large DCOP problems and is as fast as NCBB, a memory-bounded synchronous DCOP search algorithm, for most of these DCOP problems. Additionally, it is often desirable to find bounded-error solutions for DCOP problems within a reasonable amount of time since finding cost-minimal solutions is NP-hard. The existing bounded-error approximation mechanism allows users only to specify an absolute error bound on the solution cost but a relative error bound is often more intuitive. Thus, we present two new bounded-error approximation mechanisms that allow for relative error bounds and implement them on top of BnB-ADOPT.", "histories": [["v1", "Wed, 15 Jan 2014 05:39:26 GMT  (1093kb)", "http://arxiv.org/abs/1401.3490v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["william yeoh", "ariel felner", "sven koenig"], "accepted": false, "id": "1401.3490"}, "pdf": {"name": "1401.3490.pdf", "metadata": {"source": "CRF", "title": "An Asynchronous Branch-and-Bound DCOP Algorithm", "authors": ["William Yeoh", "Ariel Felner", "Sven Koenig"], "emails": ["wyeoh@usc.edu", "felner@bgu.ac.il", "skoenig@usc.edu"], "sections": [{"heading": null, "text": "A DCOP problem is a problem where multiple agents coordinate their values in such a way that the sum of the resulting constraint costs is minimal. It is often desirable to solve DCOP problems using memory-bound and asynchronous algorithms. We introduce Branch-and-Bound ADOPT (BnB-ADOPT), a memory-bound asynchronous DCOP search algorithm that uses ADOPT's message forwarding and communication framework (Modes, Shen, Tambe, & Yokoo, 2005), a well-known memory-bound asynchronous DCOP search algorithm, but which changes ADOPT's search strategy from the best initial search to deep-bound search for branches and boundaries. Our experimental results show that BnB-ADOPT finds cost-effective solutions up to an order of magnitude faster than ADOPT for a variety of large DCOP problems, and as fast as NCBB, a storage-synchronous solution to COP-bound problems, we often find ADOPT only within a COP time-bound problem."}, {"heading": "1. Introduction", "text": "In fact, it is so that most of them are able to survive themselves, and that they do not. (...) In fact, it is so that they are able to survive themselves. (...) It is not so that they can survive themselves. (...) It is so that they are able to survive themselves. (...) It is so that they are able to survive themselves. (...) It is so that they do not survive themselves. (...) It is so that they are able to survive themselves. (...) \"(...) It is as if they would survive themselves. (...).\" (...) It is as if they would survive themselves. (...). \"(...) It is as if they would survive themselves. (...).\" (...) It is as if they would survive themselves. (...). (...) It is. (...). (...) It is. (...). (...) It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. (...). It is. It is. (...). It is. (...). It is. It is. It is. (. It is. (...). (...). It is. It is. (. It is. It is. It is. (). It is. (. (). (. (). It is."}, {"heading": "1.1 DCOP Algorithms", "text": "Figure 2 shows the taxonomy. DCOP algorithms are divided into two groups: complete and incomplete DCOP algorithms. Complete DCOP algorithms find cost-effective solutions, while incomplete DCOP algorithms are often faster, but typically find suboptimal solutions."}, {"heading": "1.1.1 Incomplete DCOP Algorithms", "text": "Incomplete DCOP algorithms typically use local search to find locally optimal solutions, and can potentially get trapped in local minimums. As the optimal solution to DCOP problems is NP-hard, such DCOP algorithms are desirable for large DCOP problems where low-cost minimal solutions may be slow. DBA (Yokoo & Hirayama, 1996), DSA (Fitzpatrick & Meertens, 2003), MGM (Maheswaran, Pearce, & Tambe, 2004a), and the newer class of k-optimal DCOP algorithms (Pearce & Tambe, 2007; Bowring, Pearce, Portway, Jain, & Tambe, 2008; Greenstadt, 2009) are examples of incomplete DCOP algorithms."}, {"heading": "1.1.2 Complete DCOP Algorithms", "text": "Complete DCOP algorithms are usually divided into two groups: partially centralized and fully decentralized DCOP algorithms. Partially centralized DCOP algorithms allow some agents to transfer their constraint information (= information about the constraints they are involved in) to a central agent for processing. OptAPO (Mailler & Lesser, 2004) is an example of a partially centralized DCOP algorithm that uses cooperative switching, with certain agents acting as intermediaries to centrally resolve overlapping DCOP sub-problems.Fully decentralized DCOP algorithms generally use fully decentralized DCOP algorithms not central agents that collect constraint information from other agents that are not limited to them. Rather, each agent has access to their own configuration information. Fully decentralized DCOP algorithms are generally divided into two groups, namely CODP detection and disruption algorithms."}, {"heading": "1.2 Motivation", "text": "We now describe the motivation behind our work."}, {"heading": "1.2.1 BnB-ADOPT", "text": "This year it is so far that it is only a matter of time until it is so far, until it is so far, until it is so far, until it is so far, until it is so far."}, {"heading": "1.2.2 Bounded-Error Approximations", "text": "To our knowledge, ADOPT is the only DCOP search algorithm with this feature. Its Absolute Error Mechanism allows its users to specify an absolute error linked to the cost of the solution, for example, that the cost of the solution should not exceed 10 times the minimum cost of the solution. However, it is often much more desirable to specify a relative error linked to the cost of the solution, for example that the cost of the solution should not exceed 10 percent of the minimum cost of the solution. This cannot be done with the Absolute Error Mechanism without a priori knowing the minimum cost of the solution. Therefore, we propose two approximation mechanisms that allow the user to specify a relative error linked to the cost of the solution, namely the minimal error mechanism, the minimal error mechanism based on ADT, and the OPT mechanisms for faster implementation of OPT errors."}, {"heading": "1.3 Experimental Results", "text": "Experimentally, we compare ADOPT, BnB-ADOPT, and NCBB to three different DCOP problem types, namely chart coloring problems, sensor network problems, and scheduling problems. Our results show that BnB-ADOPT is up to an order of magnitude faster than ADOPT for a variety of large DCOP problems (measured by the number of non-simultaneous constraint checks and the number of cycles). BnB-ADOPT can also be interpreted as faster than SBB because ADOPT is faster than SBB (Modi et al., 2005). BnB-ADOPT is also as fast as NCBB for most of these DCOP problems. Our results for the suboptimal variants of BnB-ADOPT show that the Weighted Heuristics Mechanism dominates both the Absolute Error Mechanism and the Relative Error Mechanism."}, {"heading": "1.4 Article Structure", "text": "This article is structured as follows: We formalize DCOP problems in Section 2 and describe our DCOP search algorithm, BnB-ADOPT, in Section 3. We describe approximation mechanisms that enable BnB-ADOPT to find solutions with limited errors in Section 4. We outline proofs of correctness and completeness of BnB-ADOPT in Section 5. Finally, we present our experimental evaluations in Section 6 and our conclusions in Section 7."}, {"heading": "2. DCOP Problems", "text": "In this section we formally define problems of distributed constraint optimization (DCOP) and describe their scope for solution."}, {"heading": "2.1 Definition of DCOP Problems", "text": "A DCOP problem is defined by the following elements: \u2022 a finite group of agents A = {a1, a2,..., an}; \u2022 a group of finite domains D = {Dom (a1), Dom (a2),..., Dom (an), where Dom (ai) is the domain of possible floating-point values of the agent ai-A; and \u2022 a set of binary constraints F = {f1, f2,..., fm}, where each constraint fi: Dom (ai1) \u00d7 Dom (ai2) \u2192 R + \u221e specifies its non-negative constraints as a function of the values of the different agents ai1 and ai2 that share the constraint. The above definition assumes that each agent assumes one value and not several values, for example, a different value for each constraint in which it is involved. These DCOP problems are more commonly formulated as each agent is responsible for assigning values to several variables. However, there are problems between our COP and DDP agents that can alleviate."}, {"heading": "2.2 Search Trees", "text": "The solution to the problem is first and foremost that we are dealing with an infinite history, in which we are dealing with a history, in which we are dealing with a history, which is nothing other than a history, in which we are dealing with a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history, a history."}, {"heading": "3. BnB-ADOPT", "text": "In this section, we introduce branch-and-Bound ADOPT (BnB-ADOPT). We do not describe BnBADOPT as a modification of ADOPT, as this approach requires readers to have a deep understanding of ADOPT. Instead, we provide a standalone description of BnB-ADOPT that does not require knowledge of ADOPT, with the intention of creating a coherent and hopefully easy-to-read description."}, {"heading": "3.1 Search Strategies of ADOPT and BnB-ADOPT", "text": "We will first describe centralized versions of the search strategies of ADOPT and BnB-ADOPT, leaving out technical details, which will be described in more detail in later sections."}, {"heading": "3.1.1 Search Strategy of ADOPT", "text": "The fact is that most of us will be able to play by the rules they have set in the past and will be able to play by the rules they have set in the past."}, {"heading": "3.1.2 Search Strategy of BnB-ADOPT", "text": "The full version can be found in (Marinescu & Dechter, 2009). We use the same definitions of LBrXr and UB r Xr as previously described in Figure 4. The deepest branch and tied search maintains a stack that initially contains only the child and root nodes. It expands the AND node on the stack by removing that node from the stack and performing the following check. If the solving cost of this node is not smaller than the upper tied UBrXr, it cuts that node off and repeats the operation. Otherwise, it adds the grandson and node of that node to the top of the stack and repeats the operation. It ends when the upper tied UBrXr node is not larger than the upper tied UBrXr node (UBrXr) and the lower tied node of the first node."}, {"heading": "3.2 Description of BnB-ADOPT", "text": "We will now present an incremental description of BnB-ADOPT. First, we will provide the notations and key terms of BnB-ADOPT. Then, we will describe how BnB-ADOPT updates its boundaries, complies with memory restrictions, performs depth searches and does branch-and-Bound. Finally, we will present our enhanced final version of BnB-ADOPT and show both its pseudo-code and its trace for our example DCOP problem."}, {"heading": "3.2.1 Notation and Key Terms", "text": "The cost (A) is the cost (A) and the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost (A). The cost (A) is the cost of the means (A). The cost (A) is the cost of the means (A). The cost (A) is the cost of the means (A). The cost (A) is the cost (A) of the means (A). The cost (A) is the cost of the means (A)."}, {"heading": "3.2.2 Updating the Bounds", "text": "Each agent a of the BnB-ADOPT stores and updates several boundaries to the gamma costs, namely lba, cXa (d), LB a Xa (d), LB a Xa, ub a, c Xa (d), UB a Xa (d) and UB a Xa (for all values d, all child agents c and all contexts Xa) (1) (1) (all child agents c and all contexts Xa) (1) (all child agents c and all contexts Xa) (1) (4) lba, cXa (d). (Xa). (Xa) Xa. (5) In the search tree, \u2022 LBaXa and UBaXa."}, {"heading": "3.2.3 Adhering to Memory Limitations", "text": "Our description of BnB-ADOPT so far does not assume any memory restrictions. However, BnB-ADOPT is a memory-bound DCOP search algorithm with memory requirements per agent that are linear in the number of agents. We will now describe how BnB-ADOPT complies with these memory restrictions using techniques that were introduced for ADOPT, but also apply to BnB-ADOPT. The simplified trace in Figure 6 assumes that each agent a maintains its limits for all values d, all child agents c, and all contexts Xa. The number of contexts can be exponentially in the depth of the agent in the pseudo-tree. For our example, Agent a3 has four different contexts for the four different value combinations of its ancestor agents a1 and a2. An agent cannot maintain an exponential number of boundaries in the agent depth of the agent. For example, Agent-Agent-Agent-Agent-Agent-3 has four different contexts for the four different value combinations of its ancestor agents a1 and a2. Agent-Agent-Agent-Agent-Agent-Agent-Agent-Context is an arbitrary number of constraints in the context of the context of the number of the"}, {"heading": "3.2.4 Performing Depth-First Search", "text": "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"}, {"heading": "3.2.5 Performing Branch-and-Bound", "text": "We refine our description of BnB-ADOPT by explaining how the agents implement the industry-bound search to make BnB-ADOPT faster. Each other agent a of BnB-ADOPT now also maintains the variable threshold THaXa, which he initializes to infinity. The threshold of the root agent always remains infinite. Every other agent uses its threshold for circumcision, which means that he can change its value earlier than before. \u2022 First change: If an agent a has not changed his contextXa, he previously executed the following statements: If UBaXa has not changed a threshold, he has previously executed the following statements: If UBaXa verified LBaXa (da) for its value, then the agent has assumed its best value. \u2022 Then the agent has sent VALUE messages to all child agents and a COST message to his parent agent. If THaXa has not changed a threshold, he has previously executed the following statements: If BaXa verified its value, then BaXa will take its best value."}, {"heading": "3.2.6 Further Enhancements", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "3.2.7 Pseudocode", "text": "Figure 9 shows the BnB ADOPT pseudo-code of each agent. The pseudo-code does not index variables with the context because this context is given implicitly by the variable Xa. It uses the predicate Compatible (X, X) = \"(a, d, ID)\" X, \"(a, d, ID)\" X \"(a = a\" d = d \"), which determines whether two contextsX and X are compatible, that is, if no agent takes two different values in the two contexts\" X, \"(\" a, \"d,\" and 51]. \"The pseudo-code also uses the procedure Priority Merge (X), which exects Agent X,\" i.e., if no agent takes two different values in the two contexts [lines 35, 46, 48 and 51]. The pseudo-code also uses the procedure PriorityMerge (X), which exectet Agent (X, \"(a),\" (ID, ID, ID, ID, ID, ID, ID, ID, ID (a), ID (ID, ID, ID, ID, ID, ID, ID (a), ID (X, ID, ID, ID, ID (a), ID (extet (a, \"(a)."}, {"heading": "3.2.8 Trace", "text": "It is the first time that a country in which a country is able to govern such a country, it is able to govern it, \"he said in an interview with the\" New York Times. \"(afu)\" It is the first time that a country is able to govern such a country. \"(afu)\" It is the second time that a country is able to govern such a country. \"(afu)\" It is the second time that a country is able to govern such a country. \"(afu)"}, {"heading": "4. Bounded-Error Approximations", "text": "In this section, we present three approximation mechanisms that allow BnB-ADOPT to exchange the solution costs for a shorter runtime. They tie the error to the solution costs through a custom error limit. Firstly, we modify ADOPT's Absolute Error Mechanism (Modi et al., 2005) to work with BnB-ADOPT. This approximation mechanism allows the user to specify an absolute error linked to the solution costs (for example, that the solution costs should be no more than 10 times higher than the minimum solution costs), which cannot be done with the Absolute Error Mechanism without knowing the minimum solution costs a priori. Therefore, we introduce two approximation mechanisms that allow the user to specify a relative error linked to the solution costs, namely the termination code 1.1 times higher than the minimum solution costs."}, {"heading": "4.1 Absolute Error Mechanism", "text": "ADOPT's Absolute Error Mechanism requires a user-defined absolute error limit of 0 \u2264 b < \u221e, which specifies that the solution cost should not exceed b above the minimum solution cost. This approximation mechanism can be easily changed for BnB-ADOPT by setting the limit as follows: limr: = b + LBrXr (20) BnB-ADOPTAEM is the resulting variant of BnB-ADOPT with the absolute error mechanism. BnB-ADOPTAEM ends as soon as the upper limit of the root node (which corresponds to the solution cost of the solution with the lowest solution cost found so far) is no greater than the limit (which corresponds to the absolute error limit b plus the lower limit of the root node, which represents a lower limit for the minimum solution cost). BnB-ADOPTAEM ends with a solution sum equal to the upper limit of the root node cost, although the solution cost may be minimal as the OPT = B is small."}, {"heading": "4.2 Relative Error Mechanism", "text": "Fortunately, the BnB-ADOPT Absolute Error Mechanism can easily be changed to the Relative Error Mechanism by setting the limit as follows: The Relative ErrorMechanism requires a custom relative error limit of 1 \u2264 p < \u221e, which specifies that the solution costs should be at most p times higher than the minimum solution costs: limr: = p \u00b7 LBrXr (21) BnB-ADOPTREM is the resulting variant of BnB-ADOPT with the Relative Error Mechanism. BnB-ADOPTREM terminates the upper limit of the root node (which corresponds to the solution costs with the lowest solution costs to date) no higher than the limit of BnB-ADOPT (which is equal to the relative error limit p-times the lower limit of the root node, which corresponds to a lower limit of the solution costs). So BnB-ADOPTKOM costs are the lowest cost of the KOPTOPM."}, {"heading": "4.3 Weighted Heuristics Mechanism", "text": "There is a second way to implement a relative error tied to BnB-ADOPT, since BnB-ADOPT uses permissible heuristic values. It is common practice in the context of A * to weigh the solution costs for a shorter runtime by using weighted heuristic values (Pohl, 1973) derived from permissible heuristic values by multiplying them by a custom weight 1 \u2264 w < \u221e The resulting heuristic mechanism can be easily modified for BnB-ADOPT by setting the limit as follows: limr: = LBrXr (22) and by initiating the lower limits lba, cXa (d), where BXXa (d): \u00b7 ADADOPB = a major problem with the same costs (Heud)."}, {"heading": "5. Correctness and Completeness", "text": "In this section we prove the correctness and completeness of the BnB-ADOPT and its suboptimal variants. All definitions, lemmas, theorems and correspondences consider BnB-ADOPT and its suboptimal variants, unless otherwise mentioned. Therefore, each agent a uses the following update equation for all values d, all child agents c and all contexts Xa to initialize its boundaries lba, cXa (d) are the agent agents a, cXa (d) (24), where the weight w is a floating point number, the 1 \u2264 w < and the heuristic values ha, cXa (d) are floating point numbers, which are satisfactory ha, cXa (d)."}, {"heading": "6. Experimental Evaluations", "text": "In this section, we compare BnB-ADOPT with two other memory-bound DCOP search algorithms that also restrict communication to agents that share constraints, namely ADOPT and NCBB. We also compare the three suboptimal variants of BnB-ADOPT with each other: We use the distributed DFS algorithm with the maximum heuristics (Hamadi, Bessie re, & Quinqueton, 1998) used by ADOPT to construct the pseudo-trees. We use DP2 (Ali et al., 2005) used by ADOPT to pre-calculate the heuristic values for ADOPT and BnB-ADOPT. DP2 solves a relaxed version of the given DCOP problem (where bacteria are ignored) with a dynamic programming-based approach. NCBB calculates its own heuristic values during the search and not in a pre-processing step."}, {"heading": "6.1 Runtime Metrics", "text": "We use two common runtime metrics, namely non-concurrent constraint checks (Meisels, Kaplansky, Razgon, & Zivan, 2002) and cycles (Modi et al., 2005). \u2022 Non-concurrent constraint checks (NCCCs): NCCCs are a weighted sum of processing and communication time. Each agent maintains a counter NCCCa, which is initialized to 0. The agent assigns NCCCa: = NCCCa + 1 each time he performs a constraint check to account for the time it takes for the agent to perform the constraint checks. It assigns NCCCa: = max {NCCCa, NCCCa \u2032 + t} each time he receives a message from an agent to take into account the time it takes for the agent a \u2032 to send the message (NCCCa \u2032) and the transmission time of the message (t)."}, {"heading": "6.2 DCOP Problem Types", "text": "In fact, the fact is that most of them will be able to demonstrate that they are able, that they are able to achieve their goals, and that they are able to achieve their goals."}, {"heading": "6.3 Experimental Results: Optimal DCOP Search Algorithms", "text": "The question is whether and to what extent people are able to survive themselves, and the question is to what extent they feel they are able to survive themselves. (...) The question is to what extent people are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves. (...) The question is to what extent they are able to survive themselves."}, {"heading": "6.4 Experimental Results: Suboptimal Variants of BnB-ADOPT", "text": "We now compare the three sub-optimal variants of BnB-ADOPT to each other; the experimental setup is identical to that for the optimal DCOP search algorithms except as follows: For graph coloring problems, the number of wells is 10; the error cost range is 0 to 10,000 and the constraint density is 2; for sensor network problems, the number of targets is 9; and to address scheduling problems, the number of conferences is 10. We measure error runtimes in cycles. (The results for NCCCs are similar.) However, we report on normalized runtimes, which is runtimes divided by runtime, to find a cost-minimal solution with BnB-ADOPT. Normalized runtime 0.25 refers to a quarter of the number of cycles it takes to find a cost-minimal solution with BnB-ADOPT. Likewise, we report on normalized solution costs, which is the cost divided by the minimum solution by the minimum solution."}, {"heading": "7. Conclusions", "text": "This year, we will be able to put ourselves in a position to take the lead."}, {"heading": "Acknowledgments", "text": "This article is an extension of two previous publications (Yeoh, Felner, & Koenig, 2008a; Yeoh et al., 2008b) and includes additional exposures, examples, and evidence. We thank Anton Chechetka for providing his implementation of NCBB and the anonymous reviewers for their helpful comments, which were carried out while Ariel Felner was on sabbatical at the University of Southern California and visited Sven Koenig. This research was supported in part by a prize from the U.S. ArmyResearch Laboratory (ARL) and the U.S. Army Research Office (ARO) to Sven Koenig under the W911NF-08-1-0468 scholarship, by a prize from the Office of Naval Research (ONR) to Sven Koenig under the N00014-09-1-1031 scholarship, by a prize from the National Science Foundation (NSF) to Sven Koenig under the W911NF-08-1-0468 scholarship, and by a prize from the Naval Science Foundation (NISF) to a prize from the National Science Foundation (NISF) and a prize from the Naval Science Foundation (NISF) to a prize from the Office (NISF 10001 0431)."}], "references": [{"title": "Preprocessing techniques for accelerating the DCOP algorithm ADOPT", "author": ["S. Ali", "S. Koenig", "M. Tambe"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Ali et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Ali et al\\.", "year": 2005}, {"title": "A complete distributed constraint optimization method for nontraditional pseudotree arrangements", "author": ["J. Atlas", "K. Decker"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Atlas and Decker,? \\Q2007\\E", "shortCiteRegEx": "Atlas and Decker", "year": 2007}, {"title": "On the space-time trade-off in solving constraint satisfaction problems", "author": ["R. Bayardo", "D. Miranker"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Bayardo and Miranker,? \\Q1995\\E", "shortCiteRegEx": "Bayardo and Miranker", "year": 1995}, {"title": "Semiring-based CSPs and valued CSPs", "author": ["S. Bistarelli", "U. Montanari", "F. Rossi", "T. Schiex", "G. Verfaillie", "H. Fargier"], "venue": "Basic properties and comparison. Constraints,", "citeRegEx": "Bistarelli et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Bistarelli et al\\.", "year": 1999}, {"title": "On k-optimal distributed constraint optimization algorithms: New bounds and algorithms", "author": ["E. Bowring", "J. Pearce", "C. Portway", "M. Jain", "M. Tambe"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Bowring et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bowring et al\\.", "year": 2008}, {"title": "Multiply-constrained distributed constraint optimization", "author": ["E. Bowring", "M. Tambe", "M. Yokoo"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Bowring et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Bowring et al\\.", "year": 2006}, {"title": "Efficiently handling complex local problems in distributed constraint optimisation", "author": ["D. Burke", "K. Brown"], "venue": "In Proceedings of the European Conference on Artificial Intelligence (ECAI),", "citeRegEx": "Burke and Brown,? \\Q2006\\E", "shortCiteRegEx": "Burke and Brown", "year": 2006}, {"title": "No-commitment branch and bound search for distributed constraint optimization", "author": ["A. Chechetka", "K. Sycara"], "venue": "In Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Chechetka and Sycara,? \\Q2006\\E", "shortCiteRegEx": "Chechetka and Sycara", "year": 2006}, {"title": "A distributed constraint optimization approach to wireless network optimization", "author": ["H. Choxi", "P. Modi"], "venue": "In Proceedings of the AAAI-07 Workshop on Configuration,", "citeRegEx": "Choxi and Modi,? \\Q2007\\E", "shortCiteRegEx": "Choxi and Modi", "year": 2007}, {"title": "Hierarchical variable ordering for multiagent agreement problems", "author": ["J. Davin", "P. Modi"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Davin and Modi,? \\Q2006\\E", "shortCiteRegEx": "Davin and Modi", "year": 2006}, {"title": "Constraint Processing", "author": ["R. Dechter"], "venue": null, "citeRegEx": "Dechter,? \\Q2003\\E", "shortCiteRegEx": "Dechter", "year": 2003}, {"title": "Distributed coordination through anarchic optimization", "author": ["S. Fitzpatrick", "L. Meertens"], "venue": "Distributed Sensor Networks: A Multiagent Perspective,", "citeRegEx": "Fitzpatrick and Meertens,? \\Q2003\\E", "shortCiteRegEx": "Fitzpatrick and Meertens", "year": 2003}, {"title": "Taking advantage of stable sets of variables in constraint satisfaction problems", "author": ["E. Freuder", "M. Quinn"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Freuder and Quinn,? \\Q1985\\E", "shortCiteRegEx": "Freuder and Quinn", "year": 1985}, {"title": "Asynchronous Forward-Bounding for distributed COPs", "author": ["A. Gershman", "A. Meisels", "R. Zivan"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Gershman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Gershman et al\\.", "year": 2009}, {"title": "An overview of privacy improvements to k-optimal DCOP algorithms (extended abstract)", "author": ["R. Greenstadt"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Greenstadt,? \\Q2009\\E", "shortCiteRegEx": "Greenstadt", "year": 2009}, {"title": "SSDPOP: Improving the privacy of DCOP with secret sharing", "author": ["R. Greenstadt", "B. Grosz", "M. Smith"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Greenstadt et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Greenstadt et al\\.", "year": 2007}, {"title": "Distributed intelligent backtracking", "author": ["Y. Hamadi", "C. Bessi\u00e8re", "J. Quinqueton"], "venue": "In Proceedings of the European Conference on Artificial Intelligence (ECAI),", "citeRegEx": "Hamadi et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Hamadi et al\\.", "year": 1998}, {"title": "Distributed partial constraint satisfaction problem", "author": ["K. Hirayama", "M. Yokoo"], "venue": "In Proceedings of the International Conference on Principles and Practice of Constraint Programming (CP),", "citeRegEx": "Hirayama and Yokoo,? \\Q1997\\E", "shortCiteRegEx": "Hirayama and Yokoo", "year": 1997}, {"title": "DCOPs meet the real world: Exploring unknown reward matrices with applications to mobile sensor networks", "author": ["M. Jain", "M. Taylor", "M. Tambe", "M. Yokoo"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Jain et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Jain et al\\.", "year": 2009}, {"title": "Evaluating the performance of DCOP algorithms in a real world, dynamic problem", "author": ["R. Junges", "A. Bazzan"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Junges and Bazzan,? \\Q2008\\E", "shortCiteRegEx": "Junges and Bazzan", "year": 2008}, {"title": "Linear-space best-first search", "author": ["R. Korf"], "venue": "Artificial Intelligence,", "citeRegEx": "Korf,? \\Q1993\\E", "shortCiteRegEx": "Korf", "year": 1993}, {"title": "Distributed constraint optimization with structured resource constraints", "author": ["A. Kumar", "B. Faltings", "A. Petcu"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Kumar et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kumar et al\\.", "year": 2009}, {"title": "Distributed Sensor Networks: A Multiagent Perspective", "author": ["V. Lesser", "C. Ortiz", "M. Tambe"], "venue": null, "citeRegEx": "Lesser et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Lesser et al\\.", "year": 2003}, {"title": "Distributed algorithms for DCOP: A graphical game-based approach", "author": ["R. Maheswaran", "J. Pearce", "M. Tambe"], "venue": "In Proceedings of the International Conference on Parallel and Distributed Computing Systems (PDCS),", "citeRegEx": "Maheswaran et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Maheswaran et al\\.", "year": 2004}, {"title": "Taking DCOP to the real world: Efficient complete solutions for distributed event scheduling", "author": ["R. Maheswaran", "M. Tambe", "E. Bowring", "J. Pearce", "P. Varakantham"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Maheswaran et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Maheswaran et al\\.", "year": 2004}, {"title": "Solving distributed constraint optimization problems using cooperative mediation", "author": ["R. Mailler", "V. Lesser"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Mailler and Lesser,? \\Q2004\\E", "shortCiteRegEx": "Mailler and Lesser", "year": 2004}, {"title": "Best-first AND/OR search for graphical models", "author": ["R. Marinescu", "R. Dechter"], "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Marinescu and Dechter,? \\Q2007\\E", "shortCiteRegEx": "Marinescu and Dechter", "year": 2007}, {"title": "AND/OR branch-and-bound search for combinatorial optimization in graphical models", "author": ["R. Marinescu", "R. Dechter"], "venue": "Artificial Intelligence,", "citeRegEx": "Marinescu and Dechter,? \\Q2009\\E", "shortCiteRegEx": "Marinescu and Dechter", "year": 2009}, {"title": "Directed soft arc consistency in pseudo trees", "author": ["T. Matsui", "M. Silaghi", "K. Hirayama", "M. Yokoo", "H. Matsuo"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Matsui et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Matsui et al\\.", "year": 2009}, {"title": "Comparing performance of distributed constraints processing algorithms", "author": ["A. Meisels", "E. Kaplansky", "I. Razgon", "R. Zivan"], "venue": "In Proceedings of the Distributed Constraint Reasoning Workshop,", "citeRegEx": "Meisels et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Meisels et al\\.", "year": 2002}, {"title": "Distributed constraint reasoning under unreliable communication", "author": ["P. Modi", "S. Ali"], "venue": "Frontiers in Artificial Intelligence and Applications,", "citeRegEx": "Modi and Ali,? \\Q2004\\E", "shortCiteRegEx": "Modi and Ali", "year": 2004}, {"title": "ADOPT: Asynchronous distributed constraint optimization with quality guarantees", "author": ["P. Modi", "Shen", "W.-M", "M. Tambe", "M. Yokoo"], "venue": "Artificial Intelligence,", "citeRegEx": "Modi et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Modi et al\\.", "year": 2005}, {"title": "Coordinating agent plans through distributed constraint optimization", "author": ["B. Ottens", "B. Faltings"], "venue": "In Proceedings of the ICAPS-08 Workshop on Multiagent Planning", "citeRegEx": "Ottens and Faltings,? \\Q2008\\E", "shortCiteRegEx": "Ottens and Faltings", "year": 2008}, {"title": "Quality guarantees on k-optimal solutions for distributed constraint optimization problems", "author": ["J. Pearce", "M. Tambe"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Pearce and Tambe,? \\Q2007\\E", "shortCiteRegEx": "Pearce and Tambe", "year": 2007}, {"title": "Reasoning about and dynamically posting n-ary constraints in ADOPT", "author": ["F. Pecora", "P. Modi", "P. Scerri"], "venue": "In Proceedings of the Distributed Constraint Reasoning Workshop,", "citeRegEx": "Pecora et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Pecora et al\\.", "year": 2006}, {"title": "Approximations in distributed optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proceedings of the International Conference on Principles and Practice of Constraint Programming (CP),", "citeRegEx": "Petcu and Faltings,? \\Q2005\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2005}, {"title": "A scalable method for multiagent constraint optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Petcu and Faltings,? \\Q2005\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2005}, {"title": "ODPOP: An algorithm for open/distributed constraint optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In Proceedings of the National Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Petcu and Faltings,? \\Q2006\\E", "shortCiteRegEx": "Petcu and Faltings", "year": 2006}, {"title": "First results on the effect of error in heuristic search", "author": ["I. Pohl"], "venue": "Machine Intelligence,", "citeRegEx": "Pohl,? \\Q1970\\E", "shortCiteRegEx": "Pohl", "year": 1970}, {"title": "The avoidance of (relative) catastrophe, heuristic competence, genuine dynamic weighting and computational issues in heuristic problem solving", "author": ["I. Pohl"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Pohl,? \\Q1973\\E", "shortCiteRegEx": "Pohl", "year": 1973}, {"title": "Valued constraint satisfaction problems: Hard and easy problems", "author": ["T. Schiex", "H. Fargier", "G. Verfaillie"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Schiex et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Schiex et al\\.", "year": 1995}, {"title": "Evolution of a teamwork model", "author": ["N. Schurr", "S. Okamoto", "R. Maheswaran", "P. Scerri", "M. Tambe"], "venue": null, "citeRegEx": "Schurr et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Schurr et al\\.", "year": 2005}, {"title": "Asynchronous branch & bound and A* for disWCSPs with heuristic function based on consistency-maintenance", "author": ["M. Silaghi", "J. Landwehr", "J. Larrosa"], "venue": "Frontiers in Artificial Intelligence and Applications,", "citeRegEx": "Silaghi et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Silaghi et al\\.", "year": 2004}, {"title": "The operation point units of distributed constraint solvers", "author": ["M. Silaghi", "R. Lass", "E. Sultanik", "W. Regli", "T. Matsui", "M. Yokoo"], "venue": "In Proceedings of the Distributed Constraint Reasoning Workshop,", "citeRegEx": "Silaghi et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Silaghi et al\\.", "year": 2008}, {"title": "ADOPT-ing: Unifying asynchronous distributed optimization with asynchronous backtracking", "author": ["M. Silaghi", "M. Yokoo"], "venue": "Autonomous Agents and Multi-Agent Systems,", "citeRegEx": "Silaghi and Yokoo,? \\Q2009\\E", "shortCiteRegEx": "Silaghi and Yokoo", "year": 2009}, {"title": "Decentralised coordination of mobile sensors using the Max-Sum algorithm", "author": ["R. Stranders", "A. Farinelli", "A. Rogers", "N. Jennings"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Stranders et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Stranders et al\\.", "year": 2009}, {"title": "Dynamic configuration of agent organizations", "author": ["E. Sultanik", "R. Lass", "W. Regli"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Sultanik et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Sultanik et al\\.", "year": 2009}, {"title": "BnB-ADOPT: An asynchronous branch-and-bound DCOP algorithm", "author": ["W. Yeoh", "A. Felner", "S. Koenig"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Yeoh et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Yeoh et al\\.", "year": 2008}, {"title": "Trading off solution cost for smaller runtime in DCOP search algorithms (short paper)", "author": ["W. Yeoh", "S. Koenig", "X. Sun"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Yeoh et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Yeoh et al\\.", "year": 2008}, {"title": "Caching schemes for DCOP search algorithms", "author": ["W. Yeoh", "P. Varakantham", "S. Koenig"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Yeoh et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Yeoh et al\\.", "year": 2009}, {"title": "Distributed breakout algorithm for solving distributed constraint satisfaction problems", "author": ["M. Yokoo", "K. Hirayama"], "venue": "In Proceedings of the International Conference on Multiagent Systems (ICMAS),", "citeRegEx": "Yokoo and Hirayama,? \\Q1996\\E", "shortCiteRegEx": "Yokoo and Hirayama", "year": 1996}, {"title": "Performance of linear-space search algorithms", "author": ["W. Zhang", "R. Korf"], "venue": "Artificial Intelligence,", "citeRegEx": "Zhang and Korf,? \\Q1995\\E", "shortCiteRegEx": "Zhang and Korf", "year": 1995}, {"title": "An analysis and application of distributed constraint satisfaction and optimization algorithms in sensor networks", "author": ["W. Zhang", "Z. Xing", "G. Wang", "L. Wittenburg"], "venue": "In Proceedings of the International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Zhang et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2003}, {"title": "Anytime local search for distributed constraint optimization", "author": ["R. Zivan"], "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Zivan,? \\Q2008\\E", "shortCiteRegEx": "Zivan", "year": 2008}, {"title": "Distributed constraint optimization for large teams of mobile sensing agents", "author": ["R. Zivan", "R. Glinton", "K. Sycara"], "venue": "In Proceedings of the International Conference on Intelligent Agent Technology (IAT),", "citeRegEx": "Zivan et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Zivan et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 31, "context": "Solving a DCOP problem optimally means finding a solution with minimal solution cost and is NP-hard (Modi et al., 2005).", "startOffset": 100, "endOffset": 119}, {"referenceID": 10, "context": "Montanari, Rossi, Schiex, Verfaillie, & Fargier, 1999), is more general than formulating them as the more common constraint satisfaction problems (Dechter, 2003).", "startOffset": 146, "endOffset": 161}, {"referenceID": 53, "context": "As a result, DCOP algorithms have been applied to coordinating unmanned aerial vehicles (Schurr, Okamoto, Maheswaran, Scerri, & Tambe, 2005), scheduling meetings (Maheswaran, Tambe, Bowring, Pearce, & Varakantham, 2004b; Petcu & Faltings, 2005b; Greenstadt, Grosz, & Smith, 2007; Zivan, 2008; Yeoh, Varakantham, & Koenig, 2009), coordinating sensor networks (Lesser, Ortiz, & Tambe, 2003; Zhang, Xing, Wang, & Wittenburg, 2003; Modi et al.", "startOffset": 162, "endOffset": 327}, {"referenceID": 31, "context": "As a result, DCOP algorithms have been applied to coordinating unmanned aerial vehicles (Schurr, Okamoto, Maheswaran, Scerri, & Tambe, 2005), scheduling meetings (Maheswaran, Tambe, Bowring, Pearce, & Varakantham, 2004b; Petcu & Faltings, 2005b; Greenstadt, Grosz, & Smith, 2007; Zivan, 2008; Yeoh, Varakantham, & Koenig, 2009), coordinating sensor networks (Lesser, Ortiz, & Tambe, 2003; Zhang, Xing, Wang, & Wittenburg, 2003; Modi et al., 2005; Jain, Taylor, Tambe, & Yokoo, 2009; Stranders, Farinelli, Rogers, & Jennings, 2009; Zivan, Glinton, & Sycara, 2009), synchronizing traffic lights (Junges & Bazzan, 2008), planning truck routes (Ottens & Faltings, 2008) and managing power distribution networks (Kumar, Faltings, & Petcu, 2009).", "startOffset": 358, "endOffset": 562}, {"referenceID": 14, "context": "DBA (Yokoo & Hirayama, 1996), DSA (Fitzpatrick & Meertens, 2003), MGM (Maheswaran, Pearce, & Tambe, 2004a) and the more recent class of k-optimal DCOP algorithms (Pearce & Tambe, 2007; Bowring, Pearce, Portway, Jain, & Tambe, 2008; Greenstadt, 2009) are examples of incomplete DCOP algorithms.", "startOffset": 162, "endOffset": 249}, {"referenceID": 31, "context": "ADOPT (Modi et al., 2005) uses best-first search, and SBB (Hirayama & Yokoo, 1997), NCBB (Chechetka & Sycara, 2006), AFB (Gershman, Meisels, & Zivan, 2009) and our new DCOP search algorithm, BnB-ADOPT, use depth-first branch-and-bound search.", "startOffset": 6, "endOffset": 25}, {"referenceID": 20, "context": "For centralized search, it is known that search problems with depth-bounded search trees can often be solved faster with depth-first branch-and-bound search than with memory-bounded best-first search because memory-bounded best-first search algorithms, such as RBFS (Korf, 1993), need to repeatedly reconstruct partial solutions that they purged from memory.", "startOffset": 266, "endOffset": 278}, {"referenceID": 31, "context": "Synchronous agents operate in cycles (Modi et al., 2005).", "startOffset": 37, "endOffset": 56}, {"referenceID": 31, "context": "BnB-ADOPT can also be inferred to be faster than SBB since ADOPT is faster than SBB (Modi et al., 2005).", "startOffset": 84, "endOffset": 103}, {"referenceID": 31, "context": "One should be able to extend BnB-ADOPT to solve DCOP problems with nary constraints by using the same techniques that were proposed to extend ADOPT to solve DCOP problems with n-ary constraints (Modi et al., 2005).", "startOffset": 194, "endOffset": 213}, {"referenceID": 31, "context": "1 Search Strategy of ADOPT ADOPT (Modi et al., 2005) is a popular DCOP search algorithm (Modi & Ali, 2004; Ali, Koenig, & Tambe, 2005; Bowring, Tambe, & Yokoo, 2006; Davin & Modi, 2006; Pecora, Modi, & Scerri, 2006; Choxi & Modi, 2007; Silaghi & Yokoo, 2009; Matsui, Silaghi, Hirayama, Yokoo, & Matsuo, 2009) that traverses the search tree in a best-first search order.", "startOffset": 33, "endOffset": 52}, {"referenceID": 31, "context": "First, we modify the Absolute Error Mechanism of ADOPT (Modi et al., 2005) to work with BnB-ADOPT.", "startOffset": 55, "endOffset": 74}, {"referenceID": 39, "context": "It is common practice in the context of A* to trade off solution cost for a smaller runtime by using weighted heuristic values (Pohl, 1973), which are derived from admissible heuristic values by multiplying them with a user-defined weight 1 \u2264 w < \u221e.", "startOffset": 127, "endOffset": 139}, {"referenceID": 38, "context": "A* is then no longer guaranteed to find cost-minimal solutions but it is guaranteed to terminate with a solution cost that is at most w times larger than the minimal solution cost (Pohl, 1970).", "startOffset": 180, "endOffset": 192}, {"referenceID": 0, "context": "We use DP2 (Ali et al., 2005) that is used by ADOPT to pre-calculate the heuristic values for ADOPT and BnB-ADOPT.", "startOffset": 11, "endOffset": 29}, {"referenceID": 31, "context": "1 Runtime Metrics We use two common runtime metrics, namely non-concurrent constraint checks (Meisels, Kaplansky, Razgon, & Zivan, 2002) and cycles (Modi et al., 2005).", "startOffset": 148, "endOffset": 167}, {"referenceID": 28, "context": "Second, we would like to study how different pseudo-tree arrangements (Atlas & Decker, 2007; Sultanik, Lass, & Regli, 2009) and pre-processing techniques (Matsui et al., 2009) affect the efficiency of BnB-ADOPT.", "startOffset": 154, "endOffset": 175}], "year": 2010, "abstractText": "Distributed constraint optimization (DCOP) problems are a popular way of formulating and solving agent-coordination problems. A DCOP problem is a problem where several agents coordinate their values such that the sum of the resulting constraint costs is minimal. It is often desirable to solve DCOP problems with memory-bounded and asynchronous algorithms. We introduce Branch-and-Bound ADOPT (BnB-ADOPT), a memory-bounded asynchronous DCOP search algorithm that uses the message-passing and communication framework of ADOPT (Modi, Shen, Tambe, & Yokoo, 2005), a well known memory-bounded asynchronous DCOP search algorithm, but changes the search strategy of ADOPT from best-first search to depth-first branch-and-bound search. Our experimental results show that BnB-ADOPT finds cost-minimal solutions up to one order of magnitude faster than ADOPT for a variety of large DCOP problems and is as fast as NCBB, a memory-bounded synchronous DCOP search algorithm, for most of these DCOP problems. Additionally, it is often desirable to find bounded-error solutions for DCOP problems within a reasonable amount of time since finding cost-minimal solutions is NP-hard. The existing bounded-error approximation mechanism allows users only to specify an absolute error bound on the solution cost but a relative error bound is often more intuitive. Thus, we present two new bounded-error approximation mechanisms that allow for relative error bounds and implement them on top of BnB-ADOPT.", "creator": null}}}