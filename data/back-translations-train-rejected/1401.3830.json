{"id": "1401.3830", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2014", "title": "Interactive Cost Configuration Over Decision Diagrams", "abstract": "In many AI domains such as product configuration, a user should interactively specify a solution that must satisfy a set of constraints. In such scenarios, offline compilation of feasible solutions into a tractable representation is an important approach to delivering efficient backtrack-free user interaction online. In particular,binary decision diagrams (BDDs) have been successfully used as a compilation target for product and service configuration. In this paper we discuss how to extend BDD-based configuration to scenarios involving cost functions which express user preferences.", "histories": [["v1", "Thu, 16 Jan 2014 04:48:15 GMT  (426kb)", "http://arxiv.org/abs/1401.3830v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["henrik reif", "ersen", "tarik hadzic", "david pisinger"], "accepted": false, "id": "1401.3830"}, "pdf": {"name": "1401.3830.pdf", "metadata": {"source": "CRF", "title": "Interactive Cost Configuration Over Decision Diagrams", "authors": ["Henrik Reif Andersen", "Tarik Hadzic", "David Pisinger"], "emails": ["hra@configit.com", "t.hadzic@4c.ucc.ie", "pisinger@man.dtu.dk"], "sections": [{"heading": null, "text": "First, we show that an efficient, robust and easy-to-implement extension is possible if the cost function is additive and viable solutions are represented by multi-value decision diagrams (MDDs). We also discuss the impact on the MDD size if the cost function is not additive or if it is explicitly encoded in MDD. Then, we discuss the interactive configuration when multiple cost functions are available. We demonstrate that even in its simplest form, extra-cost configuration is NP-hard in the input MDD. However, to solve the two-cost configuration, we develop a pseudo-polynomic scheme and a fully polynomic approximation scheme. The applicability of our approach is demonstrated by experiments with real configuration models and product catalog data sets. Response times are usually in a fraction of a second, even in very large instances."}, {"heading": "1. Introduction", "text": "This year it is more than ever before."}, {"heading": "2. Preliminaries", "text": "We will briefly discuss the most important concepts and backgrounds."}, {"heading": "2.1 Constraint Satisfaction Problems", "text": "Constraint Satisfaction Problems (CSPs) provide a framework for modeling and solving combinatorial problems, where a solution to a problem can be formulated as assigning variables that meet certain constraints. In its standard form, CSP comprises only a finite number of variables defined by finite domains. Definition 1 (CSP) A constraint satissfaction problem (CSP) is a triple (X, D, F) in which X is a set of variables {x1,..., xn}, D = D1 \u00b7. \u00b7 Dn is the cartesian product of its finite domains D1,..., Dn and F = {f1,...,..., fm} is a set of constraints defined by variables X. Each constraint f is a function defined by a subset of variables. Xf X refers to the scope of valid."}, {"heading": "2.2 Interactive Configuration", "text": "Interactive configuration is an important application domain in which a user is assisted in specifying a valid configuration (of a product, service, or anything else) by interactively providing feedback on valid options for unspecified attributes. Such a problem occurs in a number of areas. For example, when you purchase a product, you are forced to specify a number of product features that can seriously reduce the satisfaction of the user. In many cases, valid configurations can be described implicitly by specifying constraints on product properties. We use a CSP model to represent such constraints, and each CSP solution corresponds to a valid configuration. Each configurable attribute is presented with a variable option, so that each attribute corresponds to a value in the variable domain."}, {"heading": "2.3 Decision Diagrams", "text": "\"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"We.\" \"\" We. \"\" \"We.\" \"\" \"We}, {"heading": "3. Interactive Cost Processing over MDDs", "text": "The main motivation for this work is to extend the interactive configuration approach of M\u00f8ller et al. (2002), Hadzic et al. (2004), Subbarayan et al. (2004) to situations where, in addition to a CSP model (X, D, F), which contains only hard constraints, there is also a cost function: c: D1 \u00b7. \u00b7 Dn \u2192 R. In any configuration setting, this could be a product price. In the uncertainty setting, the cost function could indicate the likelihood of an event represented by a solution (failure of a hardware component, withdrawal of a bid in an auction, etc.). In any decision support context, the cost function could indicate user preferences. There are a number of cost-related queries that a user might be interested in, for example, finding an optimal solution or calculating the most likely explanation. However, we assume that a user is interested in strict control of both variable values and the cost of the solutions chosen."}, {"heading": "3.1 Handling Costs Explicitly", "text": "An immediate approach to the interactive handling of a cost function is to treat the costs as any other solution attribute, i.e. to add a variable y to the X variables and add the delimitations (x1,.). \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7"}, {"heading": "3.2 Processing Additive Cost Functions", "text": "One of the most important contributions in this paper is a practical and efficient approach to providing wCVD queries when the cost function is additive. An additive cost function is the formc (x1,.., xn) = n \u2211 i = 1ci (xi), with each variable xi and each value in its range assigned a cost ci (ai) \u0192R. Additive functions are one of the most important and commonly used modeling constructs. A number of important combinatorial problems are modeled as holistic linear programs, in which often both the limitations and the objective function are linear, i.e. special cases of additive cost functions. In the theory of multi-attribute utilities, user preferences are aggregated into a single additive function under certain assumptions by weighted summing up the benefits of individual attributes. In a product configuration context, many properties are additive, such as the storage capacity of a computer or the overall weight, which can be weighted by our experience of using the component components."}, {"heading": "3.2.1 The Labeling Approach", "text": "Assuming that we get an MDD representation of the solution space (u) or are repeatable, our approach to answering wCVD requests will be based on three steps: 1) restricting MDD wr. the latest user mapping, 2) labeling remaining nodes by executing shortest path algorithms, and 3) filtering expensive values by using node labels. We initialize MDD pruning by removing any edges e (u) that do not match the newest mapping, i.e. where var (u) = i and a 6 = ai. This could cause a number of other edges and nodes to become unreachable from the terminal or root if we remove the last edge in the children group Ch."}, {"heading": "3.3 Processing Additive Costs Over Long Edges", "text": "Our scheme can be extended to MDDs that contain long edges. While, for multivalued CSP models with large domains, space savings due to long edges may be required, for binary models and binary decision diagrams (BDDs), further significant savings could be possible. In addition, our scheme could similarly be applied to other versions of decision diagrams that contain long edges (with different semantics), such as a long edge that implies that all skipped variables are mapped. Note that in reduced MDDs, redundant nodes u Vi that have outgoing edges pointing to the same node u are eliminated. An edge e (u) with var (u) = k and var (u r) = l is long if k + 1 < l, and in this case e encodes a number of solutions: {a}."}, {"heading": "3.4 Handling Non-Additive Cost Functions", "text": "In certain interaction settings, the cost function is not additive. For example, user preferences may depend on a whole package of features rather than a selection of each individual feature. Likewise, the price of a product may not simply be the sum of the cost of individual parts, but may depend on combinations of the selected parts. In general, our cost function c (x1,.., xn) could be a sum of non-uniform cost functions ci, i = 1,..., k, c (x1,.., xn) = k \u2211 i = 1ci (Xi), with each cost function ci expressing a unique contribution of feature combinations within a subset of variables Xi X, ci: Hj, XiDj \u2192 R."}, {"heading": "3.4.1 Non-Unary Labeling", "text": "Our approach can be expanded to handle non-uniary costs by applying labeling techniques used with other graphics (e.g. Wilson, 2005; Mateescu et al., 2008). Suppose we get a cost function c (x1,.., xn) = \u2211 k i = 1 ci (Xi). Suppose A (i) denotes the set of all cost functions cj so that xi is the last variable within the scope of cj: A (i) = {cj | xi | xi | Xj and xi \u00b2 6 \u0432Xj,. i \u2032 > i}. Given the assignment of a (a1,., ai) to the variables x1,... xi, we can evaluate each function cj \u00b2 Ai. If the scope of cj \u00b2 Xj is a strict subset of {x1,.,., xi}, we set cj (a) so that the value of cj (a) is where Xj (a) is a projection of cj \u00b2 Ai now, for example, we do not include any cost (Xi)."}, {"heading": "3.4.2 Impact on the Size", "text": "The increase in the size of Mc relative to the cost-conscious version M depends on the \"additivity\" of the cost function c. However, if the total cost function c is a single non-additive component c1 (X1) with global circumference (X1 = X), then only the edges in the last MDD layer are labeled, as in the case of explicit encoding into the MDD in Section 3.1. There must be at least C (Sol) edges in the last layer, one for each feasible layer. Thus, if the bandwidth of the cost C (Sol) is exponential, so is the size of Mc. Moreover, even if an increase in the Mc edges could occur due to the resolution of nodal isomorphisms in previous layers, the size of Mc (SDD encoding) is not comparable."}, {"heading": "3.4.3 Semiring Costs and Probabilistic Queries", "text": "Note that our approach can be further generalized to reflect the more general aggregation of costs as discussed by Wilson (2005). Cost functions ci must map the allocation of Xi variables not to the set of real numbers R, but to each set A, which is equipped with operators, so that A = (A, 0.1,,) is a semicircle. The calculated MDD property is p: r 1 e p c (e). The operator aggregates the marginal costs, while the operator aggregates the travel costs. In a semicircle, the global calculation can be efficiently performed by local node-based aggregations, much like a shortest path is calculated. Our framework is based on considerations of minimum cost paths that correspond to the use of A = (R +, 0, 1, min, +), but different mappings could be used. In particular, by adopting A = (R +, 0, 1, +, \u00d7) we can deal with a probability calculation."}, {"heading": "4. Compiling MDDs", "text": "In this section, we will discuss how to create such MDDs from a CSP model description (X, D, F). Our goal is to develop an efficient and easy-to-implement approach that can handle all instances previously handled by BDD-based configuration (Hadzic et al., 2004). Variable Ordering. The first step is to select an order for CSP variables X. This is critical, as different variable orders could lead to exponential differences in MDD size. This is a well-studied problem, especially for binary decision diagrams. A fixed formula that determines whether there is an order for CSP variables X. The resulting BDD model would have been at most T nodes (for some thresholds T) is a NP-Hard problem (Bollig & Wegener, 1996)."}, {"heading": "4.1 BDD Encoding", "text": "There are several standard Boolean encodings of multivalent variables (in the log encoding we are both encoded.) In the log encoding of each value, we get different vectors enci (a). There are several standard Boolean encodings of multivalent variables (a). In the log encoding of each value, each value will get a different value scheme. In the log encoding of each value scheme, each individual value scheme is encoded with ki. There are several standard Boolean encodings of multivalent variables (a)."}, {"heading": "4.2 MDD Extraction", "text": "Once the BDD is generated using clusters of variable orders, we can extract a corresponding MDD using a method originally proposed by Hadzic and Andersen (2006) and subsequently expanded by Hadzic and al. (2008). In the following considerations, we will use a mapping method to designate the CSP variable xi of an encoding variable xi (1) and, with a slight misuse of notation, we will also apply the Cvar method to BDD nodes u with xij. For terminal nodes, we will define cvar (0) = cvar (1) = n + 1 (remember that BDD has two terminal nodes 0 and 1 that indicate false and true). Similarly, we will use a mapping method (xij) = j to specify the position of a bit that encodes the variable. Our method is based on the detection of a subset of DD nodes that can be used directly by the DD-core structure."}, {"heading": "4.3 Input Model and Implementation Details", "text": "BDD packages are callable libraries with no standard support for CSP-like input language. To our knowledge, CLab (Jensen, 2007) is the only open source BDD compilation tool that accepts a CSP-like input model. It is a configuration interface based on a BuDDy BDD package (Lind-Nielsen, 2001). CLab constructs a BDD for each input restriction and merges it to obtain the final BDD. In addition, CLab generates a BDD through log encoding with clustered order that fits well with our extraction approach. Therefore, our compilation approach relies on CLab to specify the input model and generate a BDD index used by our extraction algorithm."}, {"heading": "5. Interactive Configuration With Multiple Costs", "text": "We therefore assume that in addition to the CSP model (X, F), whose solution space is represented by a combined MDD M, we will receive additional cost functions (x1,., xn) = n. \"We assume that in addition to the CSP model (X, F), the solution scenarios of which are often considered within the multicultural optimization framework (Figueira et al., 2005; Ehrgott & Gandibleux, 2000), it is commonly assumed that there is an optimal (but unknown) way to achieve a single target function that would lead to a solution."}, {"heading": "5.2.1 Overall Approach", "text": "Our algorithm is analogous to the single cost approach developed in Section 3.2. After restricting the MDD to a current mapping, we calculate the upstream and downstream costs U, D (which are no longer constants, but lists of tuples) and use them to check for each edge e whether v (e) is within a valid range. For a given edge e: u \u2192 u \u2032, which is labeled with costs c1 (e), c2 (e), c2 (e), it follows v (e). V Di iff there are paths p: r u and p \u2032 1, so that c1 (p) + c1 (e) + c1 (p \u2032) \u2264 K1 and c2 (p) + c2 (e) + c2 (p \u2032) \u2264 K2 (2), costs (1) (2) (K \u00b2), 2 (K \u00b2), 2 (K \u00b2), 2 (K), 2 (K \u00b2) (K), 2 (K), 2 (K), 2 (K), 2 (K), 2 (K), 2 (K)."}, {"heading": "5.2.2 Exploiting Pareto Optimality", "text": "Whereas in individual cost cases it was sufficient to store only the minimum value (the cost of the shortest way to the root / terminal) in U [u], D [u], we have to store several tuples (a1, a2) and (a \u2032 1, a \u2032 2) in the same list in case of additional costs, as this is the case with 1 \u2264 a \u2032 1 and a2 \u2264 a \u00b2 2 then we can delete (a \u2032 1, a \u2032 2) tuples (a1, a \u2032 2) in the same list as if test (9) for (a \u2264 1, a \u2032 2) will also be successful for (a1, a2). The remaining entries are the costs of pareto-optimal solutions. A solution is pareto-optimal wrt. p and cost functions c1, c2 when it is not possible to find a more cost-effective solution in relation to S without increasing the other costs."}, {"heading": "5.2.3 Computing U and D Sets", "text": "We will now discuss how to calculate the U and D sets efficiently using advanced techniques to solve the Knapsack problems (Kellerer et al., 2004). We will recursively update the U and D sets so that all dominated tuples are detected and eliminated. To do this efficiently, it is crucial to keep both U and D lists sorted, with the first coordinate, i.e. (a1, a2) (a \u2032 1, a \u2032 2) a1 < a2. When U and D are sorted, they can be merged in O (K) time using the List Merging algorithm for Knapsack Optimization (Kellerer et al., 2004, Section 3.4) a2."}, {"heading": "5.2.4 Valid Domains Computation", "text": "Once the U, D sets are updated, we can easily filter out valid domains (see above).For each edge e: u \u00b2 u \u00b2 the algorithm evaluates whether v (e), V \u00b2, V \u00b2, O (u), D (u), B (K2), O (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K1), K2 (K2), K1 (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K2), K2 (K2), 2 (K2), 2 (2), 2, 2, 2 (2), 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2, 2 (2), 2 (2), 2, 2 (2), 2, 2 (2), 2 (2), 2, 2 (2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2), 2 (K2 (K2), 2 (K2), 2 (K2), 2 (K2 (K2), 2 (K2), 2 (K2), 2), 2 (K2 ("}, {"heading": "5.2.5 Further Extensions", "text": "In practice, however, we might expect the number of non-dominated tuples to be much smaller, especially for the cost functions of smaller coefficients."}, {"heading": "6. Experimental Evaluation", "text": "We implemented our compilation scheme and algorithms for wCVD and 2-wCVD queries. We conducted a series of experiments to evaluate the applicability of our approach and confirm various hypotheses made during the essay. We used two sets of instances whose properties are shown in Table 1. The first set corresponds to real-world configuration problems available in the CLib2 configuration benchmark library. These are CSP models with configuration constraints. They correspond to highly structured configuration problems with a variety of similar solutions. The second set of instances represents product catalog datasets used by Nicholson, Bridge and Wilson (2006). These catalogs are explicitly defined as solution tables. They represent a much smaller and more economical set of solutions.2. http: / / www.itu.dk / research / exclterna / exclib"}, {"heading": "6.1 MDD Size", "text": "In the first experiments, we created a protocol-coded BDD B for each instance using CLab (Jensen, 2007), then extracted a corresponding MDD M from B. Finally, we extended long edges into M and fused isomorphic nodes to create a fused MDD M. We compare the sizes of B, M and M in Table 2. For each structure, we provide the number of V and edge E. In addition, we provide the size of BDD B. We conclude from the table that both BDDs and MDDs are exponentially smaller than the size of the solution space for configuration instances, while they are not so significantly smaller for more diverse product configuration catalogs. Furthermore, we can see that the number of edges in fused MDDs M \u00b2 is not significantly larger than the number of extracted MDDs M \u00b2 compared to the number of extracted MDDs M. Therefore, due to simpler algorithms online, it appears suitable to calculate the MDDs online."}, {"heading": "6.1.1 Encoding Cost Explicitly", "text": "In fact, we are able to go in search of a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution and that enables us to find a solution that enables us to find a solution that enables us to find a solution, that enables us to find a solution that enables us to find a solution and that enables us to find a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution."}, {"heading": "7. Related Work", "text": "In the area of knowledge aggregation, there are a variety of presentations that may be suitable to support interactive decision-making with cost constraints. There are also a number of approaches to handle multiple cost functions in multi-criterion optimization."}, {"heading": "7.1 Compiled Knowledge Representation Forms", "text": "In fact, most of us are able to reform ourselves."}, {"heading": "7.2 Multi-Objective Cost Processing", "text": "In fact, it is as if most of them are able to surpass themselves by taking themselves to task. (...) It is not as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...) It is as if they were able to survive themselves. (...). \"\" It is as if they were able to survive themselves}, {"heading": "8. Conclusions and Future Work", "text": "We guarantee polynomial time cost configuration when the cost function is additive and workable solutions are represented by multi-value decision diagrams. We process cost constraints via an MDD extracted from an underlying BDD. Therefore, we extend the BDD-based configuration by Hadzic et al. (2004) to support cost constraint of additive cost functions without causing exponential increases in complexity. Our implementation delivers runtimes that easily meet the interactive response time requirements. In addition, our approach can be extended to support for non-additive and semiring-based costs. We extend our approach by considering cost constraints. Multiple costs. We have proven that this is a NP-hard problem in the input of MDD quantities, even if we only process two linear inequalities with positive coefficients and Boolean variables."}, {"heading": "Acknowledgments", "text": "We would like to thank the anonymous reviewers for their detailed comments that have helped us improve the work. We would also like to thank Erik van der Meer for providing the T-shirt sample, the first version of which was created during Tarik Hadzic's time at the IT University of Copenhagen, while the updated version was created at the Cork Constraint Computation Centre with the support of an IRCSET / Embark Initiative Postdoctoral Fellowship Scheme."}], "references": [{"title": "Consistency Restoration and Explanations in Dynamic CSPs-Application to Configuration", "author": ["J. Amilhastre", "H. Fargier", "P. Marquis"], "venue": "Artificial Intelligence,", "citeRegEx": "Amilhastre et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Amilhastre et al\\.", "year": 2002}, {"title": "Algebraic decision diagrams and their applications", "author": ["R. Bahar", "E. Frohm", "C. Gaona", "E. Hachtel", "A. Macii", "A. Pardo", "F. Somenzi"], "venue": "In IEEE/ACM International Conference on CAD,", "citeRegEx": "Bahar et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Bahar et al\\.", "year": 1993}, {"title": "Construction of efficient BDDs for bounded arithmetic constraints", "author": ["C. Bartzis", "T. Bultan"], "venue": "TACAS, Vol. 2619 of Lecture Notes in Computer Science,", "citeRegEx": "Bartzis and Bultan,? \\Q2003\\E", "shortCiteRegEx": "Bartzis and Bultan", "year": 2003}, {"title": "A tourist guide through treewidth", "author": ["H.L. Bodlaender"], "venue": "Acta Cybernetica,", "citeRegEx": "Bodlaender,? \\Q1993\\E", "shortCiteRegEx": "Bodlaender", "year": 1993}, {"title": "Improving the variable ordering of OBDDs is NP-complete", "author": ["B. Bollig", "I. Wegener"], "venue": "Computers, IEEE Transactions on,", "citeRegEx": "Bollig and Wegener,? \\Q1996\\E", "shortCiteRegEx": "Bollig and Wegener", "year": 1996}, {"title": "Graph-Based Algorithms for Boolean Function Manipulation", "author": ["R.E. Bryant"], "venue": "IEEE Transactions on Computers,", "citeRegEx": "Bryant,? \\Q1986\\E", "shortCiteRegEx": "Bryant", "year": 1986}, {"title": "Verification of Arithmetic Circuits with Binary Moment Diagrams", "author": ["R.E. Bryant", "Chen", "Y.-A"], "venue": "Proceedings of the 32nd ACM/IEEE Design Automation Conference,", "citeRegEx": "Bryant et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Bryant et al\\.", "year": 1995}, {"title": "A Knowledge Compilation Map", "author": ["A. Darwiche", "P. Marquis"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Darwiche and Marquis,? \\Q2002\\E", "shortCiteRegEx": "Darwiche and Marquis", "year": 2002}, {"title": "A Logical Approach to Factoring Belief Networks", "author": ["A. Darwiche"], "venue": "KR2002: Principles of Knowledge Representation and Reasoning,", "citeRegEx": "Darwiche,? \\Q2002\\E", "shortCiteRegEx": "Darwiche", "year": 2002}, {"title": "A differential approach to inference in Bayesian networks", "author": ["A. Darwiche"], "venue": "Journal of the ACM,", "citeRegEx": "Darwiche,? \\Q2003\\E", "shortCiteRegEx": "Darwiche", "year": 2003}, {"title": "Bucket Elimination: A Unifying Framework for Reasoning", "author": ["R. Dechter"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter,? \\Q1999\\E", "shortCiteRegEx": "Dechter", "year": 1999}, {"title": "Tree-Clustering for Constraint Networks", "author": ["R. Dechter", "J. Pearl"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter and Pearl,? \\Q1989\\E", "shortCiteRegEx": "Dechter and Pearl", "year": 1989}, {"title": "Efficient representation and manipulation of switching functions based on ordered Kronecker functional decision diagrams", "author": ["R. Drechsler", "A. Sarabi", "M. Theobald", "B. Becker", "M.A. Perkowski"], "venue": "In DAC \u201994: Proceedings of the 31st annual conference on Design automation,", "citeRegEx": "Drechsler et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Drechsler et al\\.", "year": 1994}, {"title": "Binary decision diagrams in theory and practice", "author": ["R. Drechsler"], "venue": "International Journal on Software Tools for Technology Transfer (STTT),", "citeRegEx": "Drechsler,? \\Q2001\\E", "shortCiteRegEx": "Drechsler", "year": 2001}, {"title": "K*BMDs: A New Data Structure for Verification", "author": ["R. Drechsler", "B. Becker", "S. Ruppertz"], "venue": "EDTC", "citeRegEx": "Drechsler et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Drechsler et al\\.", "year": 1996}, {"title": "Multiobjective Optimization using GAI Models", "author": ["Dubus", "J.-P", "C. Gonzales", "P. Perny"], "venue": null, "citeRegEx": "Dubus et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Dubus et al\\.", "year": 2009}, {"title": "A Survey and Annotated Bibliography of Multiobjective Combinatorial Optimization", "author": ["M. Ehrgott", "X. Gandibleux"], "venue": "OR Spektrum,", "citeRegEx": "Ehrgott and Gandibleux,? \\Q2000\\E", "shortCiteRegEx": "Ehrgott and Gandibleux", "year": 2000}, {"title": "Cost Based Filtering for the Constrained Knapsack Problem", "author": ["T. Fahle", "M. Sellmann"], "venue": "Annals of Operations Research,", "citeRegEx": "Fahle and Sellmann,? \\Q2002\\E", "shortCiteRegEx": "Fahle and Sellmann", "year": 2002}, {"title": "On the Use of Partially Ordered Decision Graphs in Knowledge Compilation and Quantified Boolean Formulae", "author": ["H. Fargier", "P. Marquis"], "venue": "In Proceedings of AAAI", "citeRegEx": "Fargier and Marquis,? \\Q2006\\E", "shortCiteRegEx": "Fargier and Marquis", "year": 2006}, {"title": "On Valued Negation Normal Form Formulas", "author": ["H. Fargier", "P. Marquis"], "venue": "In Proceedings of IJCAI", "citeRegEx": "Fargier and Marquis,? \\Q2007\\E", "shortCiteRegEx": "Fargier and Marquis", "year": 2007}, {"title": "Compiling CSPs into Tree-Driven Automata for", "author": ["H. Fargier", "Vilarem", "M.-C"], "venue": "Interactive Solving. Constraints,", "citeRegEx": "Fargier et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Fargier et al\\.", "year": 2004}, {"title": "Multiple Criteria Decision Analysis: State of the Art Surveys", "author": ["J.R. Figueira", "S. Greco", "M. Ehrgott"], "venue": null, "citeRegEx": "Figueira et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Figueira et al\\.", "year": 2005}, {"title": "Computers and Intractability-A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "D.S. Johnson"], "venue": null, "citeRegEx": "Garey and Johnson,? \\Q1979\\E", "shortCiteRegEx": "Garey and Johnson", "year": 1979}, {"title": "Fast Backtrack-Free Product Configuration using a Precompiled Solution Space Representation", "author": ["T. Hadzic", "S. Subbarayan", "R.M. Jensen", "H.R. Andersen", "J. M\u00f8ller", "H. Hulgaard"], "venue": "Proceedings of PETO Conference,", "citeRegEx": "Hadzic et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Hadzic et al\\.", "year": 2004}, {"title": "A BDD-based Polytime Algorithm for Cost-Bounded Interactive Configuration", "author": ["T. Hadzic", "H.R. Andersen"], "venue": "In Proceedings of AAAI", "citeRegEx": "Hadzic and Andersen,? \\Q2006\\E", "shortCiteRegEx": "Hadzic and Andersen", "year": 2006}, {"title": "On Automata, MDDs and BDDs in Constraint Satisfaction", "author": ["T. Hadzic", "E.R. Hansen", "B. O\u2019Sullivan"], "venue": "In Proceedings of the ECAI 2008 Workshop on Inference Methods based on Graphical Structures of Knowledge", "citeRegEx": "Hadzic et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hadzic et al\\.", "year": 2008}, {"title": "Using DPLL for efficient OBDD construction", "author": ["J. Huang", "A. Darwiche"], "venue": "In Proceedings of SAT", "citeRegEx": "Huang and Darwiche,? \\Q2004\\E", "shortCiteRegEx": "Huang and Darwiche", "year": 2004}, {"title": "DPLL with a trace: From SAT to knowledge compilation", "author": ["J. Huang", "A. Darwiche"], "venue": null, "citeRegEx": "Huang and Darwiche,? \\Q2005\\E", "shortCiteRegEx": "Huang and Darwiche", "year": 2005}, {"title": "Fast approximation algorithms for the knapsack and sum of subset problem", "author": ["O. Ibarra", "C. Kim"], "venue": "Journal of the ACM,", "citeRegEx": "Ibarra and Kim,? \\Q1975\\E", "shortCiteRegEx": "Ibarra and Kim", "year": 1975}, {"title": "CLab: A C++ library for fast backtrack-free interactive product configuration. http://www.itu.dk/people/rmj/clab", "author": ["R.M. Jensen"], "venue": null, "citeRegEx": "Jensen,? \\Q2007\\E", "shortCiteRegEx": "Jensen", "year": 2007}, {"title": "Efficient graph-based computation and manipulation of functional decision diagrams. Design Automation, 1993, with the European Event in ASIC Design. Proceedings", "author": ["U. Kebschull", "W. Rosenstiel"], "venue": "European Conference", "citeRegEx": "Kebschull and Rosenstiel,? \\Q1993\\E", "shortCiteRegEx": "Kebschull and Rosenstiel", "year": 1993}, {"title": "Edge-valued binary decision diagrams for multi-level hierarchical verification", "author": ["Lai", "Y.-T", "S. Sastry"], "venue": "Proceedings of the 29th ACM/IEEE conference on Design automation,", "citeRegEx": "Lai et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Lai et al\\.", "year": 1992}, {"title": "Method of configuring a product. US Patent No: 7,584,079", "author": ["J. Lichtenberg", "H.R. Andersen", "H. Hulgaard", "J. M\u00f8ller", "A.S. Rasmussen"], "venue": null, "citeRegEx": "Lichtenberg et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Lichtenberg et al\\.", "year": 2001}, {"title": "BuDDy - A Binary Decision Diagram Package. http://sourceforge.net/projects/buddy", "author": ["J. Lind-Nielsen"], "venue": null, "citeRegEx": "Lind.Nielsen,? \\Q2001\\E", "shortCiteRegEx": "Lind.Nielsen", "year": 2001}, {"title": "AND/OR Multi-Valued Decision Diagrams (AOMDDs) for Graphical Models", "author": ["R. Mateescu", "R. Dechter", "R. Marinescu"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Mateescu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Mateescu et al\\.", "year": 2008}, {"title": "Algorithms and Data Structures in VLSI", "author": ["C. Meinel", "T. Theobald"], "venue": null, "citeRegEx": "Meinel and Theobald,? \\Q1998\\E", "shortCiteRegEx": "Meinel and Theobald", "year": 1998}, {"title": "On the Construction of Multiple-Valued Decision Diagrams", "author": ["D.M. Miller", "R. Drechsler"], "venue": "In Proceedings of the 32nd International Symposium on Multiple-Valued Logic (ISMVL\u201902),", "citeRegEx": "Miller and Drechsler,? \\Q2002\\E", "shortCiteRegEx": "Miller and Drechsler", "year": 2002}, {"title": "Product configuration over the internet", "author": ["J. M\u00f8ller", "H.R. Andersen", "H. Hulgaard"], "venue": "In INFORMS Conference on Information Systems and Technology", "citeRegEx": "M\u00f8ller et al\\.,? \\Q2002\\E", "shortCiteRegEx": "M\u00f8ller et al\\.", "year": 2002}, {"title": "Pareto Shortest Paths is Often Feasible in Practice", "author": ["M. M\u00fcller-Hannemann", "K. Weihe"], "venue": "In WAE \u201901: Proceedings of the 5th International Workshop on Algorithm Engineering,", "citeRegEx": "M\u00fcller.Hannemann and Weihe,? \\Q2001\\E", "shortCiteRegEx": "M\u00fcller.Hannemann and Weihe", "year": 2001}, {"title": "Decision Diagrams: Fast and Flexible Support for Case Retrieval and Recommendation", "author": ["R. Nicholson", "D.G. Bridge", "N. Wilson"], "venue": "In Proceedings of ECCBR", "citeRegEx": "Nicholson et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Nicholson et al\\.", "year": 2006}, {"title": "Extending Cluster Tree Compilation with non-Boolean variables in Product Configuration: a Tractable Approach to Preference-based Configuration", "author": ["B. Pargamin"], "venue": "In IJCAI\u201903 Workshop on Configuration", "citeRegEx": "Pargamin,? \\Q2003\\E", "shortCiteRegEx": "Pargamin", "year": 2003}, {"title": "Multi-Objective and Multi-Constrained NonAdditive Shortest Path Problems", "author": ["L.B. Reinhardt", "D. Pisinger"], "venue": "Computers and Operations Research", "citeRegEx": "Reinhardt and Pisinger,? \\Q2009\\E", "shortCiteRegEx": "Reinhardt and Pisinger", "year": 2009}, {"title": "Bucket elimination for multiobjective optimization problems", "author": ["E. Roll\u00f3n", "J. Larrosa"], "venue": "Journal of Heuristics,", "citeRegEx": "Roll\u00f3n and Larrosa,? \\Q2006\\E", "shortCiteRegEx": "Roll\u00f3n and Larrosa", "year": 2006}, {"title": "Affine Algebraic Decision Diagrams (AADDs) and their Application to Structured Probabilistic Inference", "author": ["S. Sanner", "D.A. McAllester"], "venue": "In Proceedings of IJCAI", "citeRegEx": "Sanner and McAllester,? \\Q2005\\E", "shortCiteRegEx": "Sanner and McAllester", "year": 2005}, {"title": "Approximation schemes \u2014 a tutorial", "author": ["P. Schuurman", "G.J. Woeginger"], "venue": "Lectures on Scheduling. Forthcoming", "citeRegEx": "Schuurman and Woeginger,? \\Q2005\\E", "shortCiteRegEx": "Schuurman and Woeginger", "year": 2005}, {"title": "The Practice of Approximated Consistency for Knapsack Constraints", "author": ["M. Sellmann"], "venue": null, "citeRegEx": "Sellmann,? \\Q2004\\E", "shortCiteRegEx": "Sellmann", "year": 2004}, {"title": "CUDD: Colorado university decision diagram package. ftp://vlsi .colorado.edu/pub", "author": ["F. Somenzi"], "venue": null, "citeRegEx": "Somenzi,? \\Q1996\\E", "shortCiteRegEx": "Somenzi", "year": 1996}, {"title": "Algorithms for discrete function manipulation", "author": ["A. Srinivasan", "T. Kam", "S. Malik", "R.K. Brayton"], "venue": "In International Conference on CAD,", "citeRegEx": "Srinivasan et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Srinivasan et al\\.", "year": 1990}, {"title": "Comparing two implementations of a complete and backtrack-free interactive configurator", "author": ["S. Subbarayan", "R.M. Jensen", "T. Hadzic", "H.R. Andersen", "H. Hulgaard", "J. M\u00f8ller"], "venue": "In Proceedings of CP\u201904 CSPIA Workshop,", "citeRegEx": "Subbarayan et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Subbarayan et al\\.", "year": 2004}, {"title": "On Exploiting Structures for Constraint Solving", "author": ["S.M. Subbarayan"], "venue": "Ph.D. thesis,", "citeRegEx": "Subbarayan,? \\Q2008\\E", "shortCiteRegEx": "Subbarayan", "year": 2008}, {"title": "Factored edge-valued binary decision diagrams", "author": ["P. Tafertshofer", "M. Pedram"], "venue": "In Formal Methods in System Design,", "citeRegEx": "Tafertshofer and Pedram,? \\Q1997\\E", "shortCiteRegEx": "Tafertshofer and Pedram", "year": 1997}, {"title": "Selected multicriteria shortest path problems: An analysis of complexity, models and adaptation of standard algorithms", "author": ["Z. Tarapata"], "venue": "International Journal of Applied Mathematics and Computer Science,", "citeRegEx": "Tarapata,? \\Q2007\\E", "shortCiteRegEx": "Tarapata", "year": 2007}, {"title": "A dynamic programming approach for consistency and propagation for knapsack constraints. In 3rd international workshop on integration of AI and OR techniques in constraint programming for combinatorial optimization problems CPAI-OR", "author": ["M. Trick"], "venue": null, "citeRegEx": "Trick,? \\Q2001\\E", "shortCiteRegEx": "Trick", "year": 2001}, {"title": "Solving constraint satisfaction problems using finite state automata", "author": ["N.R. Vempaty"], "venue": "In Proceedings of the Tenth National Conference on Artificial Intelligence,", "citeRegEx": "Vempaty,? \\Q1992\\E", "shortCiteRegEx": "Vempaty", "year": 1992}, {"title": "SAT v CSP", "author": ["T. Walsh"], "venue": "Proceedings of CP", "citeRegEx": "Walsh,? \\Q2000\\E", "shortCiteRegEx": "Walsh", "year": 2000}, {"title": "Branching Programs and Binary Decision Diagrams. Society for Industrial and Applied Mathematics (SIAM)", "author": ["I. Wegener"], "venue": null, "citeRegEx": "Wegener,? \\Q2000\\E", "shortCiteRegEx": "Wegener", "year": 2000}, {"title": "Decision diagrams for the computation of semiring valuations", "author": ["N. Wilson"], "venue": "In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI-05),", "citeRegEx": "Wilson,? \\Q2005\\E", "shortCiteRegEx": "Wilson", "year": 2005}], "referenceMentions": [{"referenceID": 53, "context": "Beside BDDs, a number of other structures, such as various sublanguages of negation normal forms (NNFs) (Darwiche & Marquis, 2002), AND/OR diagrams (Mateescu, Dechter, & Marinescu, 2008), finite state automata (Vempaty, 1992; Amilhastre, Fargier, & Marquis, 2002) and various extensions of decision diagrams (Drechsler, 2001; Wegener, 2000; Meinel & Theobald, 1998) are used as compilation targets.", "startOffset": 210, "endOffset": 263}, {"referenceID": 13, "context": "Beside BDDs, a number of other structures, such as various sublanguages of negation normal forms (NNFs) (Darwiche & Marquis, 2002), AND/OR diagrams (Mateescu, Dechter, & Marinescu, 2008), finite state automata (Vempaty, 1992; Amilhastre, Fargier, & Marquis, 2002) and various extensions of decision diagrams (Drechsler, 2001; Wegener, 2000; Meinel & Theobald, 1998) are used as compilation targets.", "startOffset": 308, "endOffset": 365}, {"referenceID": 55, "context": "Beside BDDs, a number of other structures, such as various sublanguages of negation normal forms (NNFs) (Darwiche & Marquis, 2002), AND/OR diagrams (Mateescu, Dechter, & Marinescu, 2008), finite state automata (Vempaty, 1992; Amilhastre, Fargier, & Marquis, 2002) and various extensions of decision diagrams (Drechsler, 2001; Wegener, 2000; Meinel & Theobald, 1998) are used as compilation targets.", "startOffset": 308, "endOffset": 365}, {"referenceID": 33, "context": "There are many highly optimized open-source BDD packages (e.g., Somenzi, 1996; Lind-Nielsen, 2001) that allow easy and efficient manipulation of BDDs.", "startOffset": 57, "endOffset": 98}, {"referenceID": 56, "context": "In its most generic interpretation (Wilson, 2005), edges of a decision diagram can be labeled with elements of a semiring to support algebraic computations relevant for probabilistic rea-", "startOffset": 35, "endOffset": 49}, {"referenceID": 25, "context": "M\u00f8ller, Andersen, and Hulgaard (2002) and Hadzic, Subbarayan, Jensen, Andersen, M\u00f8ller, and Hulgaard (2004) investigated such an approach by using binary decision diagrams (BDDs) as a compilation target.", "startOffset": 62, "endOffset": 108}, {"referenceID": 8, "context": "Beside BDDs, a number of other structures, such as various sublanguages of negation normal forms (NNFs) (Darwiche & Marquis, 2002), AND/OR diagrams (Mateescu, Dechter, & Marinescu, 2008), finite state automata (Vempaty, 1992; Amilhastre, Fargier, & Marquis, 2002) and various extensions of decision diagrams (Drechsler, 2001; Wegener, 2000; Meinel & Theobald, 1998) are used as compilation targets. Some of them are suitable for interactive configuration as well. In particular, Vempaty (1992) suggested compiling constraints into an automaton.", "startOffset": 105, "endOffset": 494}, {"referenceID": 21, "context": "This constitutes a novel addition to both existing product-configuration approaches as well as to approaches within multi-criteria decision making (Figueira et al., 2005).", "startOffset": 147, "endOffset": 170}, {"referenceID": 0, "context": "Amilhastre et al. (2002) suggest labeling edges of an automaton to reason abut optimal restorations and explanations.", "startOffset": 0, "endOffset": 25}, {"referenceID": 23, "context": "This task is of main interest since it delivers important interaction requirements: backtrackfreeness (user should never be forced to backtrack) and completeness (all valid configurations should be reachable) (Hadzic et al., 2004).", "startOffset": 209, "endOffset": 230}, {"referenceID": 5, "context": "The most well known member of this family are binary decision diagrams (BDDs) (Bryant, 1986) which are used for manipulating Boolean functions in many areas, such as verification, model checking, VLSI design (Meinel & Theobald, 1998; Wegener, 2000; Drechsler, 2001) etc.", "startOffset": 78, "endOffset": 92}, {"referenceID": 55, "context": "The most well known member of this family are binary decision diagrams (BDDs) (Bryant, 1986) which are used for manipulating Boolean functions in many areas, such as verification, model checking, VLSI design (Meinel & Theobald, 1998; Wegener, 2000; Drechsler, 2001) etc.", "startOffset": 208, "endOffset": 265}, {"referenceID": 13, "context": "The most well known member of this family are binary decision diagrams (BDDs) (Bryant, 1986) which are used for manipulating Boolean functions in many areas, such as verification, model checking, VLSI design (Meinel & Theobald, 1998; Wegener, 2000; Drechsler, 2001) etc.", "startOffset": 208, "endOffset": 265}, {"referenceID": 48, "context": "In fact, the unacceptably long worst-case response times have been empirically observed in a purely search-based approach to computing valid domains (Subbarayan et al., 2004).", "startOffset": 149, "endOffset": 174}, {"referenceID": 23, "context": "In our previous work we utilized Binary Decision Diagrams (BDDs) to represent all valid configurations so that CVD queries can be executed efficiently (Hadzic et al., 2004).", "startOffset": 151, "endOffset": 172}, {"referenceID": 35, "context": "The main motivation for this work is extending the interactive configuration approach of M\u00f8ller et al. (2002), Hadzic et al.", "startOffset": 89, "endOffset": 110}, {"referenceID": 23, "context": "(2002), Hadzic et al. (2004), Subbarayan et al.", "startOffset": 8, "endOffset": 29}, {"referenceID": 23, "context": "(2002), Hadzic et al. (2004), Subbarayan et al. (2004) to situations where in addition to a CSP model (X,D,F ) involving only hard constraints, there is also a cost function: c : D1 \u00d7 .", "startOffset": 8, "endOffset": 55}, {"referenceID": 34, "context": "Our approach can be extended to handle non-unary costs by adopting labeling techniques that are used with other graphical representations (e.g., Wilson, 2005; Mateescu et al., 2008).", "startOffset": 138, "endOffset": 181}, {"referenceID": 55, "context": "Such an MDD, denoted as Mc, can be generated using for example search with caching isomorphic nodes as suggested by Wilson (2005), or by extending the standard apply operator to handle weights as suggested by Mateescu et al.", "startOffset": 116, "endOffset": 130}, {"referenceID": 34, "context": "Such an MDD, denoted as Mc, can be generated using for example search with caching isomorphic nodes as suggested by Wilson (2005), or by extending the standard apply operator to handle weights as suggested by Mateescu et al. (2008).", "startOffset": 209, "endOffset": 232}, {"referenceID": 40, "context": "For example, in representations exploiting global CSP structure - such as weighted cluster trees (Pargamin, 2003) - adding non-additive cost functions increases the size of the clusters, as it is required that for each non-additive component ci(Xi) at least one cluster contains the entire scope Xi.", "startOffset": 97, "endOffset": 113}, {"referenceID": 39, "context": "For example, in representations exploiting global CSP structure - such as weighted cluster trees (Pargamin, 2003) - adding non-additive cost functions increases the size of the clusters, as it is required that for each non-additive component ci(Xi) at least one cluster contains the entire scope Xi. Furthermore, criteria for node merging of Wilson (2005) and Mateescu et al.", "startOffset": 98, "endOffset": 356}, {"referenceID": 34, "context": "Furthermore, criteria for node merging of Wilson (2005) and Mateescu et al. (2008) are more refined, since nodes are no longer isomorphic if they root the same set of feasible paths, but the paths must be of the same cost as well.", "startOffset": 60, "endOffset": 83}, {"referenceID": 56, "context": "Note that our approach can be further generalized to accommodate more general aggregation of costs as discussed by Wilson (2005). Cost functions ci need not map assignments of Xi variables into the set of real numbers R but to any set A equipped with operators \u2295,\u2297 such that A = (A,0,1,\u2295,\u2297) is a semiring.", "startOffset": 115, "endOffset": 129}, {"referenceID": 23, "context": "Our goal is to develop an efficient and easy to implement approach that can handle all instances handled previously through BDD-based configuration (Hadzic et al., 2004).", "startOffset": 148, "endOffset": 169}, {"referenceID": 3, "context": "as an MDD is in worst case exponential in the path-width (Bodlaender, 1993; Wilson, 2005; Mateescu et al., 2008).", "startOffset": 57, "endOffset": 112}, {"referenceID": 56, "context": "as an MDD is in worst case exponential in the path-width (Bodlaender, 1993; Wilson, 2005; Mateescu et al., 2008).", "startOffset": 57, "endOffset": 112}, {"referenceID": 34, "context": "as an MDD is in worst case exponential in the path-width (Bodlaender, 1993; Wilson, 2005; Mateescu et al., 2008).", "startOffset": 57, "endOffset": 112}, {"referenceID": 8, "context": "Such an approach was suggested by Huang and Darwiche (2004) to compile BDDs from CNF formulas, and it proved to be a valuable addition to standard compilation based on pairwise BDD conjunctions.", "startOffset": 44, "endOffset": 60}, {"referenceID": 54, "context": "There are several standard Boolean encodings of multi-valued variables (Walsh, 2000).", "startOffset": 71, "endOffset": 84}, {"referenceID": 54, "context": "There are several standard Boolean encodings of multi-valued variables (Walsh, 2000). In the log encoding scheme each xi is encoded with ki = dlog|Di|e Boolean variables, each representing a digit in binary notation. A multivalued assignment xi = a is translated into a set of assignments x i j = aj such that a = \u2211ki j=1 2 aj . Additionally, a domain constraint \u2211ki j=1 2 xj < |Di| is added to forbid those bit assignments (a1, . . . , a i ki ) that encode values outside domain Di. The direct encoding (or 1-hot encoding) is also common, and especially well suited for efficient propagation when searching for a single solution. In this scheme, each multi-valued variable xi is encoded with |Di| Boolean variables {x1, . . . , xki}, where each variable x i j indicates whether the j-th value in domain aj \u2208 Di is assigned. For each variable xi, exactly one value fromDi has to be assigned. Therefore, we enforce a domain constraint x i 1+. . .+x i ki = 1 for each i = 1, . . . , n. Hadzic, Hansen, and O\u2019Sullivan (2008) have empirically demonstrated that using log encoding rather than direct encoding yields smaller BDDs.", "startOffset": 72, "endOffset": 1022}, {"referenceID": 2, "context": "Bartzis and Bultan (2003) have shown that linear arithmetic constraints can be represented", "startOffset": 0, "endOffset": 26}, {"referenceID": 2, "context": "However, configuration constraints involve not only linear arithmetic constraints, and space savings reported by Bartzis and Bultan (2003) are significant only when all the variable domains have a size that is a power of two.", "startOffset": 113, "endOffset": 139}, {"referenceID": 23, "context": "2 MDD Extraction Once the BDD is generated using clustered variable ordering we can extract a corresponding MDD using a method which was originally suggested by Hadzic and Andersen (2006) and that was subsequently expanded by Hadzic et al.", "startOffset": 161, "endOffset": 188}, {"referenceID": 23, "context": "2 MDD Extraction Once the BDD is generated using clustered variable ordering we can extract a corresponding MDD using a method which was originally suggested by Hadzic and Andersen (2006) and that was subsequently expanded by Hadzic et al. (2008). In the following considerations, we will use a mapping cvar(xj) = i to denote the CSP variable xi of an encoding variable xj and, with a slight abuse of notation, we will apply cvar also to BDD nodes u labeled with xj .", "startOffset": 226, "endOffset": 247}, {"referenceID": 29, "context": "accepts as an input a CSP-like model is CLab (Jensen, 2007).", "startOffset": 45, "endOffset": 59}, {"referenceID": 33, "context": "It is a configuration interface on top of a BDD package BuDDy (Lind-Nielsen, 2001).", "startOffset": 62, "endOffset": 82}, {"referenceID": 21, "context": "Multi-cost scenarios are often considered within the multicriteria optimization framework (Figueira et al., 2005; Ehrgott & Gandibleux, 2000).", "startOffset": 90, "endOffset": 141}, {"referenceID": 28, "context": "In order to develop the FPTAS we use a standard scaling technique (Schuurman & Woeginger, 2005) originally presented by Ibarra and Kim (1975). Given an , let n be the number of decision variables.", "startOffset": 120, "endOffset": 142}, {"referenceID": 56, "context": "The second set of instances represents product-catalogue datasets used by Nicholson, Bridge, and Wilson (2006). These catalogues are defined explicitly, as tables of solutions.", "startOffset": 97, "endOffset": 111}, {"referenceID": 39, "context": "Remaining four instances are product catalogues used by Nicholson et al. (2006). For each instance we provide the number of solutions Sol, number of variables X, the minimal, maximal and average domain size.", "startOffset": 56, "endOffset": 80}, {"referenceID": 29, "context": "In the first set of experiments, for each instance we generated a log-encoded BDD B using CLab (Jensen, 2007).", "startOffset": 95, "endOffset": 109}, {"referenceID": 7, "context": "A comprehensive overview of such representations is presented by Darwiche and Marquis (2002). The critical restriction that makes NNF languages more tractable is decomposability.", "startOffset": 65, "endOffset": 93}, {"referenceID": 25, "context": "These weighted extensions correspond closely to our weighted MDDs since the variant of automata used by Vempaty (1992) is equivalent to merged MDDs (Hadzic et al., 2008).", "startOffset": 148, "endOffset": 169}, {"referenceID": 56, "context": "Semiring labeled decision diagrams (SLDDs) (Wilson, 2005) label edges of an (unordered) MDD with values from a semiring and allow computation of a number of queries relevant for reasoning under uncertainty.", "startOffset": 43, "endOffset": 57}, {"referenceID": 8, "context": "Arithmetic circuits are directed acyclic graphs where internal nodes are labeled with summation and multiplication operators while leaf nodes are labeled with constants or variables (Darwiche, 2002).", "startOffset": 182, "endOffset": 198}, {"referenceID": 7, "context": "In fact, the d-DNNF compiler of Huang and Darwiche (2005) can be specialized to compile OBDDs, which proved to be a valuable alternative way to BDD compilation.", "startOffset": 42, "endOffset": 58}, {"referenceID": 7, "context": "In fact, the d-DNNF compiler of Huang and Darwiche (2005) can be specialized to compile OBDDs, which proved to be a valuable alternative way to BDD compilation. Weighted and Multi-Valued Knowledge Compilation Structures. Most of the compiled representations for propositional theories have valued counterparts. Many of them can be seen as special cases of valued NNFs (VNNF) (Fargier & Marquis, 2007). Roughly, every valued counterpart is obtained by changing the semantics of nodes, from logical operators (such as \u2227, \u2228) to general operators \u2297 (that could be arithmetic, such as + and \u2217). Values of functions represented by these structures are no longer in {0, 1} but in R. Furthermore, functions need not be defined over Boolean domains, but could take finite-domain values. In general, subsets of VNNF that satisfy decomposability and operator distributivity support efficient optimization (Fargier & Marquis, 2007) and could, in principle, be used to support cost configuration. Construction of MDDs based on encoding into BDDs has been discussed by Srinivasan, Kam, Malik, and Brayton (1990). Amilhastre et al.", "startOffset": 42, "endOffset": 1098}, {"referenceID": 0, "context": "Amilhastre et al. (2002) augmented automata of Vempaty (1992) with edge weights to reason about optimal restorations and explanations.", "startOffset": 0, "endOffset": 25}, {"referenceID": 0, "context": "Amilhastre et al. (2002) augmented automata of Vempaty (1992) with edge weights to reason about optimal restorations and explanations.", "startOffset": 0, "endOffset": 62}, {"referenceID": 0, "context": "Amilhastre et al. (2002) augmented automata of Vempaty (1992) with edge weights to reason about optimal restorations and explanations. These weighted extensions correspond closely to our weighted MDDs since the variant of automata used by Vempaty (1992) is equivalent to merged MDDs (Hadzic et al.", "startOffset": 0, "endOffset": 254}, {"referenceID": 0, "context": "Amilhastre et al. (2002) augmented automata of Vempaty (1992) with edge weights to reason about optimal restorations and explanations. These weighted extensions correspond closely to our weighted MDDs since the variant of automata used by Vempaty (1992) is equivalent to merged MDDs (Hadzic et al., 2008). However, the weights are used to compute different queries and while we generate MDDs based on widely available BDD-packages, Vempaty (1992) does not report compilation tools used.", "startOffset": 0, "endOffset": 447}, {"referenceID": 10, "context": "A number of techniques based on tree-clustering (Dechter & Pearl, 1989) and variable-elimination (Dechter, 1999) exploit variable independencies that are present globally in a CSP model.", "startOffset": 97, "endOffset": 112}, {"referenceID": 3, "context": "Both time and space complexity of these techniques turn out to be bounded exponentially in the size of an important graph-connectivity notion of tree-width (Bodlaender, 1993).", "startOffset": 156, "endOffset": 174}, {"referenceID": 34, "context": "AND/OR MDDs (Mateescu et al., 2008) when restricted to Boolean variables are a subset of d-DNNF formulas, where variable labeling respects a pseudo-tree obtained by a variable elimination order.", "startOffset": 12, "endOffset": 35}, {"referenceID": 49, "context": "Tree-of-BDDs (ToB) (Subbarayan, 2008) directly exploit tree clustering by representing each cluster as a BDD.", "startOffset": 19, "endOffset": 37}, {"referenceID": 3, "context": "Both time and space complexity of these techniques turn out to be bounded exponentially in the size of an important graph-connectivity notion of tree-width (Bodlaender, 1993). While most of these techniques are geared towards enhancing search for a single (optimal) solution (adaptive consistency, bucket elimination etc), the same concepts can be utilized for compiling representations of all solutions. AND/OR MDDs (Mateescu et al., 2008) when restricted to Boolean variables are a subset of d-DNNF formulas, where variable labeling respects a pseudo-tree obtained by a variable elimination order. Due to utilization of variable independencies through \u2227-nodes, they are more succinct than MDDs and are therefore an attractive compilation target for cost-configuration. Furthermore, they are already extended to handle weighted graphical models to support Bayesian reasoning. However, publicly available tool support is limited and does not allow processing weighted CVD queries. Tree-driven-automata (Fargier & Vilarem, 2004) utilize tree clustering (Dechter & Pearl, 1989), to generate a partial variable ordering that is used to generate an automaton. Tree-driven-automata are equivalent to AND/OR MDDs and when restricted to the Boolean case they represent a subset of d-DNNF languages called strongly ordered decomposable decision graphs (SO-DDG) (Fargier & Marquis, 2006). Like AND/OR MDDs they are more succinct than MDDs and therefore are an interesting target for cost-configuration. However, tools for compiling tree-driven-automata are yet to become publicly available, and so far they have not been extended to handle costs. Weighted cluster trees of Pargamin (2003) are a weighted extension of cluster trees used to support interactive configuration with preferences.", "startOffset": 157, "endOffset": 1680}, {"referenceID": 3, "context": "Both time and space complexity of these techniques turn out to be bounded exponentially in the size of an important graph-connectivity notion of tree-width (Bodlaender, 1993). While most of these techniques are geared towards enhancing search for a single (optimal) solution (adaptive consistency, bucket elimination etc), the same concepts can be utilized for compiling representations of all solutions. AND/OR MDDs (Mateescu et al., 2008) when restricted to Boolean variables are a subset of d-DNNF formulas, where variable labeling respects a pseudo-tree obtained by a variable elimination order. Due to utilization of variable independencies through \u2227-nodes, they are more succinct than MDDs and are therefore an attractive compilation target for cost-configuration. Furthermore, they are already extended to handle weighted graphical models to support Bayesian reasoning. However, publicly available tool support is limited and does not allow processing weighted CVD queries. Tree-driven-automata (Fargier & Vilarem, 2004) utilize tree clustering (Dechter & Pearl, 1989), to generate a partial variable ordering that is used to generate an automaton. Tree-driven-automata are equivalent to AND/OR MDDs and when restricted to the Boolean case they represent a subset of d-DNNF languages called strongly ordered decomposable decision graphs (SO-DDG) (Fargier & Marquis, 2006). Like AND/OR MDDs they are more succinct than MDDs and therefore are an interesting target for cost-configuration. However, tools for compiling tree-driven-automata are yet to become publicly available, and so far they have not been extended to handle costs. Weighted cluster trees of Pargamin (2003) are a weighted extension of cluster trees used to support interactive configuration with preferences. However, there is no publicly available compilation tool (an internal company-based implementation was presented), and the clusters are represented explicitly without utilizing compressions based on local structure through decision diagrams or other compiled representations. Tree-of-BDDs (ToB) (Subbarayan, 2008) directly exploit tree clustering by representing each cluster as a BDD. However, they do not support conditioning in polytime which is a fundamental transformation in supporting user interaction (assigning variables). However, they can be compiled for instances for which d-DNNF compilation fails, and empirical evaluation shows that on average conditioning times are short. BDD Extensions. There is a large variety of weighted extensions of binary decision diagrams, that represent real-valued functions f : {0, 1}n \u2192 R rather than Boolean functions f : {0, 1}n \u2192 {0, 1}. These extensions are limited to Boolean variables and their adoption in future would have to consider encoding techniques of multi-valued variables that avoid explosion in size and support cost processing. Comprehensive overviews of these extensions are presented by Drechsler (2001), Wegener (2000), and Meinel and Theobald (1998).", "startOffset": 157, "endOffset": 2953}, {"referenceID": 3, "context": "Both time and space complexity of these techniques turn out to be bounded exponentially in the size of an important graph-connectivity notion of tree-width (Bodlaender, 1993). While most of these techniques are geared towards enhancing search for a single (optimal) solution (adaptive consistency, bucket elimination etc), the same concepts can be utilized for compiling representations of all solutions. AND/OR MDDs (Mateescu et al., 2008) when restricted to Boolean variables are a subset of d-DNNF formulas, where variable labeling respects a pseudo-tree obtained by a variable elimination order. Due to utilization of variable independencies through \u2227-nodes, they are more succinct than MDDs and are therefore an attractive compilation target for cost-configuration. Furthermore, they are already extended to handle weighted graphical models to support Bayesian reasoning. However, publicly available tool support is limited and does not allow processing weighted CVD queries. Tree-driven-automata (Fargier & Vilarem, 2004) utilize tree clustering (Dechter & Pearl, 1989), to generate a partial variable ordering that is used to generate an automaton. Tree-driven-automata are equivalent to AND/OR MDDs and when restricted to the Boolean case they represent a subset of d-DNNF languages called strongly ordered decomposable decision graphs (SO-DDG) (Fargier & Marquis, 2006). Like AND/OR MDDs they are more succinct than MDDs and therefore are an interesting target for cost-configuration. However, tools for compiling tree-driven-automata are yet to become publicly available, and so far they have not been extended to handle costs. Weighted cluster trees of Pargamin (2003) are a weighted extension of cluster trees used to support interactive configuration with preferences. However, there is no publicly available compilation tool (an internal company-based implementation was presented), and the clusters are represented explicitly without utilizing compressions based on local structure through decision diagrams or other compiled representations. Tree-of-BDDs (ToB) (Subbarayan, 2008) directly exploit tree clustering by representing each cluster as a BDD. However, they do not support conditioning in polytime which is a fundamental transformation in supporting user interaction (assigning variables). However, they can be compiled for instances for which d-DNNF compilation fails, and empirical evaluation shows that on average conditioning times are short. BDD Extensions. There is a large variety of weighted extensions of binary decision diagrams, that represent real-valued functions f : {0, 1}n \u2192 R rather than Boolean functions f : {0, 1}n \u2192 {0, 1}. These extensions are limited to Boolean variables and their adoption in future would have to consider encoding techniques of multi-valued variables that avoid explosion in size and support cost processing. Comprehensive overviews of these extensions are presented by Drechsler (2001), Wegener (2000), and Meinel and Theobald (1998).", "startOffset": 157, "endOffset": 2969}, {"referenceID": 3, "context": "Both time and space complexity of these techniques turn out to be bounded exponentially in the size of an important graph-connectivity notion of tree-width (Bodlaender, 1993). While most of these techniques are geared towards enhancing search for a single (optimal) solution (adaptive consistency, bucket elimination etc), the same concepts can be utilized for compiling representations of all solutions. AND/OR MDDs (Mateescu et al., 2008) when restricted to Boolean variables are a subset of d-DNNF formulas, where variable labeling respects a pseudo-tree obtained by a variable elimination order. Due to utilization of variable independencies through \u2227-nodes, they are more succinct than MDDs and are therefore an attractive compilation target for cost-configuration. Furthermore, they are already extended to handle weighted graphical models to support Bayesian reasoning. However, publicly available tool support is limited and does not allow processing weighted CVD queries. Tree-driven-automata (Fargier & Vilarem, 2004) utilize tree clustering (Dechter & Pearl, 1989), to generate a partial variable ordering that is used to generate an automaton. Tree-driven-automata are equivalent to AND/OR MDDs and when restricted to the Boolean case they represent a subset of d-DNNF languages called strongly ordered decomposable decision graphs (SO-DDG) (Fargier & Marquis, 2006). Like AND/OR MDDs they are more succinct than MDDs and therefore are an interesting target for cost-configuration. However, tools for compiling tree-driven-automata are yet to become publicly available, and so far they have not been extended to handle costs. Weighted cluster trees of Pargamin (2003) are a weighted extension of cluster trees used to support interactive configuration with preferences. However, there is no publicly available compilation tool (an internal company-based implementation was presented), and the clusters are represented explicitly without utilizing compressions based on local structure through decision diagrams or other compiled representations. Tree-of-BDDs (ToB) (Subbarayan, 2008) directly exploit tree clustering by representing each cluster as a BDD. However, they do not support conditioning in polytime which is a fundamental transformation in supporting user interaction (assigning variables). However, they can be compiled for instances for which d-DNNF compilation fails, and empirical evaluation shows that on average conditioning times are short. BDD Extensions. There is a large variety of weighted extensions of binary decision diagrams, that represent real-valued functions f : {0, 1}n \u2192 R rather than Boolean functions f : {0, 1}n \u2192 {0, 1}. These extensions are limited to Boolean variables and their adoption in future would have to consider encoding techniques of multi-valued variables that avoid explosion in size and support cost processing. Comprehensive overviews of these extensions are presented by Drechsler (2001), Wegener (2000), and Meinel and Theobald (1998). An immediate extension is in the form of algebraic decision diagrams (ADDs) (Bahar, Frohm, Gaona,", "startOffset": 157, "endOffset": 3001}, {"referenceID": 41, "context": "Affine ADDs (AADDs) of Sanner and McAllester (2005) further introduce additive and multiplicative edge weights for any edge (regardless of v(e)).", "startOffset": 23, "endOffset": 52}, {"referenceID": 21, "context": "Our multiple-cost configuration is close to approaches within a framework of multi-criteria optimization where a decision maker should find a solution subject to multiple (often conflicting) objectives (Figueira et al., 2005; Ehrgott & Gandibleux, 2000).", "startOffset": 202, "endOffset": 253}, {"referenceID": 51, "context": "In particular, our MDD-based algorithms are very close to the approaches for solving multiobjective shortest path problem, where for a given graph (V,E) each arc is labeled with multiple costs, and the goal is typically to compute the set of Pareto-optimal (efficient, non-dominated) solutions (Ehrgott & Gandibleux, 2000; M\u00fcller-Hannemann & Weihe, 2001; Tarapata, 2007; Reinhardt & Pisinger, 2009).", "startOffset": 294, "endOffset": 398}, {"referenceID": 21, "context": "Our multiple-cost configuration is close to approaches within a framework of multi-criteria optimization where a decision maker should find a solution subject to multiple (often conflicting) objectives (Figueira et al., 2005; Ehrgott & Gandibleux, 2000). In particular, our MDD-based algorithms are very close to the approaches for solving multiobjective shortest path problem, where for a given graph (V,E) each arc is labeled with multiple costs, and the goal is typically to compute the set of Pareto-optimal (efficient, non-dominated) solutions (Ehrgott & Gandibleux, 2000; M\u00fcller-Hannemann & Weihe, 2001; Tarapata, 2007; Reinhardt & Pisinger, 2009). It has been shown that the multi-objective shortest path problem is intractable. In particular, the number of Pareto-optimal solutions can grow exponentially with the number of vertices |V |, but a FPTAS (fully polynomial time approximation scheme) has been developed for approximating the set of Pareto-optimal solutions. However, the way in which the solution space of multi-criteria optimization problems is explored is significantly different from our approach. Typically, in each interaction step a subset of Pareto-optimal solutions is computed and afterwards a decision maker interactively navigates through the set in order to reach the satisfying compromising solution. Interactive methods in multi-criteria optimization usually compute a subset of solutions on the efficient frontier, suggest it to the user for evaluation, and based on his input compute a new set of solutions (Figueira et al., 2005, Chapter 16). These techniques would use the user input to better estimate the way to aggregate multiple objectives, and some of them would require the user to explicitly assign weights of importance to objectives. In contrast, instead of being primarily driven by the costs of solutions, our interactive approach supports reasoning about the variable assignments in the solutions themselves through valid domains computation. It is an inherently different way of exploring the solution space which is more adequate for users that want explicit control over variable assignments and not just indicating the importance of cost functions. Most of the approaches in the CSP community model preferences as soft constraints (Meseguer, Rossi, & Shiex, 2006) that can be partially satisfied or violated, with a goal to find the most satisfying or the least violating solution. This usually presupposes that preferences can be aggregated via algebraic operators, and as such is more related to single-cost optimization problems. However, the approach by Roll\u00f3n and Larrosa (2006) deals with multiple costs explicitly.", "startOffset": 203, "endOffset": 2638}, {"referenceID": 21, "context": "Our multiple-cost configuration is close to approaches within a framework of multi-criteria optimization where a decision maker should find a solution subject to multiple (often conflicting) objectives (Figueira et al., 2005; Ehrgott & Gandibleux, 2000). In particular, our MDD-based algorithms are very close to the approaches for solving multiobjective shortest path problem, where for a given graph (V,E) each arc is labeled with multiple costs, and the goal is typically to compute the set of Pareto-optimal (efficient, non-dominated) solutions (Ehrgott & Gandibleux, 2000; M\u00fcller-Hannemann & Weihe, 2001; Tarapata, 2007; Reinhardt & Pisinger, 2009). It has been shown that the multi-objective shortest path problem is intractable. In particular, the number of Pareto-optimal solutions can grow exponentially with the number of vertices |V |, but a FPTAS (fully polynomial time approximation scheme) has been developed for approximating the set of Pareto-optimal solutions. However, the way in which the solution space of multi-criteria optimization problems is explored is significantly different from our approach. Typically, in each interaction step a subset of Pareto-optimal solutions is computed and afterwards a decision maker interactively navigates through the set in order to reach the satisfying compromising solution. Interactive methods in multi-criteria optimization usually compute a subset of solutions on the efficient frontier, suggest it to the user for evaluation, and based on his input compute a new set of solutions (Figueira et al., 2005, Chapter 16). These techniques would use the user input to better estimate the way to aggregate multiple objectives, and some of them would require the user to explicitly assign weights of importance to objectives. In contrast, instead of being primarily driven by the costs of solutions, our interactive approach supports reasoning about the variable assignments in the solutions themselves through valid domains computation. It is an inherently different way of exploring the solution space which is more adequate for users that want explicit control over variable assignments and not just indicating the importance of cost functions. Most of the approaches in the CSP community model preferences as soft constraints (Meseguer, Rossi, & Shiex, 2006) that can be partially satisfied or violated, with a goal to find the most satisfying or the least violating solution. This usually presupposes that preferences can be aggregated via algebraic operators, and as such is more related to single-cost optimization problems. However, the approach by Roll\u00f3n and Larrosa (2006) deals with multiple costs explicitly. It utilizes global structure (i.e. variable independencies) of the weighted CSP model to compute an efficient frontier through bucket-based variable elimination. A highly related approach that utilizes global structure of the generalized additive independence (GAI) network is presented by Dubus, Gonzales, and Perny (2009). In order to compute the efficient frontier, the authors use a message passing computation mechanism which is analogous to computing buckets.", "startOffset": 203, "endOffset": 3000}, {"referenceID": 50, "context": "Trick (2001) used dynamic programming to propagate Knapsack constraints during CSP search.", "startOffset": 0, "endOffset": 13}, {"referenceID": 17, "context": "Fahle and Sellmann (2002) presented an approximated filtering algorithm, based on various integer programming bounds for the Knapsack problem.", "startOffset": 0, "endOffset": 26}, {"referenceID": 17, "context": "Fahle and Sellmann (2002) presented an approximated filtering algorithm, based on various integer programming bounds for the Knapsack problem. Sellmann (2004) presented a fully polynomial time approximation algorithm for approximated filtering.", "startOffset": 0, "endOffset": 159}, {"referenceID": 21, "context": "multiple cost restrictions is a novel addition to interaction modes within multiple-criteria decision making (Figueira et al., 2005).", "startOffset": 109, "endOffset": 132}, {"referenceID": 22, "context": "We therefore strictly extend BDD-based configuration of Hadzic et al. (2004) to support cost-bounding of additive cost functions without incurring exponential increase in complexity.", "startOffset": 56, "endOffset": 77}, {"referenceID": 15, "context": "multiobjective non-unary optimization (e.g., Roll\u00f3n & Larrosa, 2006; Dubus et al., 2009) can be adopted to operate over MDD representation of a solution space.", "startOffset": 38, "endOffset": 88}], "year": 2010, "abstractText": "In many AI domains such as product configuration, a user should interactively specify a solution that must satisfy a set of constraints. In such scenarios, offline compilation of feasible solutions into a tractable representation is an important approach to delivering efficient backtrack-free user interaction online. In particular, binary decision diagrams (BDDs) have been successfully used as a compilation target for product and service configuration. In this paper we discuss how to extend BDD-based configuration to scenarios involving cost functions which express user preferences. We first show that an efficient, robust and easy to implement extension is possible if the cost function is additive, and feasible solutions are represented using multi-valued decision diagrams (MDDs). We also discuss the effect on MDD size if the cost function is non-additive or if it is encoded explicitly into MDD. We then discuss interactive configuration in the presence of multiple cost functions. We prove that even in its simplest form, multiple-cost configuration is NP-hard in the input MDD. However, for solving two-cost configuration we develop a pseudo-polynomial scheme and a fully polynomial approximation scheme. The applicability of our approach is demonstrated through experiments over real-world configuration models and product-catalogue datasets. Response times are generally within a fraction of a second even for very large instances.", "creator": "dvips(k) 5.96dev Copyright 2007 Radical Eye Software"}}}