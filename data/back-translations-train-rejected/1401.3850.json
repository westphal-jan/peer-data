{"id": "1401.3850", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2014", "title": "A Model-Based Active Testing Approach to Sequential Diagnosis", "abstract": "Model-based diagnostic reasoning often leads to a large number of diagnostic hypotheses. The set of diagnoses can be reduced by taking into account extra observations (passive monitoring), measuring additional variables (probing) or executing additional tests (sequential diagnosis/test sequencing). In this paper we combine the above approaches with techniques from Automated Test Pattern Generation (ATPG) and Model-Based Diagnosis (MBD) into a framework called FRACTAL (FRamework for ACtive Testing ALgorithms). Apart from the inputs and outputs that connect a system to its environment, in active testing we consider additional input variables to which a sequence of test vectors can be supplied. We address the computationally hard problem of computing optimal control assignments (as defined in FRACTAL) in terms of a greedy approximation algorithm called FRACTAL-G. We compare the decrease in the number of remaining minimal cardinality diagnoses of FRACTAL-G to that of two more FRACTAL algorithms: FRACTAL-ATPG and FRACTAL-P. FRACTAL-ATPG is based on ATPG and sequential diagnosis while FRACTAL-P is based on probing and, although not an active testing algorithm, provides a baseline for comparing the lower bound on the number of reachable diagnoses for the FRACTAL algorithms. We empirically evaluate the trade-offs of the three FRACTAL algorithms by performing extensive experimentation on the ISCAS85/74XXX benchmark of combinational circuits.", "histories": [["v1", "Thu, 16 Jan 2014 04:58:46 GMT  (585kb)", "http://arxiv.org/abs/1401.3850v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["alexander feldman", "gregory provan", "arjan van gemund"], "accepted": false, "id": "1401.3850"}, "pdf": {"name": "1401.3850.pdf", "metadata": {"source": "CRF", "title": "A Model-Based Active Testing Approach to Sequential Diagnosis", "authors": ["Alexander Feldman", "Gregory Provan", "Arjan van Gemund"], "emails": ["a.b.feldman@tudelft.nl", "g.provan@cs.ucc.ie", "a.j.c.vangemund@tudelft.nl"], "sections": [{"heading": "1. Introduction", "text": "This year, it has come to the point that it has never come as far as it has this year."}, {"heading": "2. Related Work", "text": "In fact, it is such that most of them will be able to move into another world, in which they are able to move, in which they are able to move, in which they move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they live, in which they live, in"}, {"heading": "3. Concepts and Definitions", "text": "Our discussion begins with the introduction of relevant MBD terms. Central to MBD, a model of an artifact is presented as a propositional Wff over a set of variables V. We define four subsets of these variables: Adoption, Observable2, Control and Internal Variables. This gives us our original definition: Definition 1 (Active Testing System). An active test system ATS is defined as ATS = < SD, COMPS, CTL, OBS >, where SD is a propositional Wff over a set of variables V, COMPS, OBS, CTL V and COMPS, OBS and CTL are subsets of V containing acceptable, observable and control variables, respectively. The set of internal variables is referred to as INT, INT = OMPS, OBS, OBS and CTL."}, {"heading": "3.1 Running Example", "text": "The demultiplexer of lines 2 to 4 consists of four Boolean inverters and four and one gate. The expression h (o) models an inverter where the variables i, o and h represent input, output and health. Similarly, a gate and a gate are modeled as h (o). In the MBD literature, the acceptable variables are also copied as \"component,\" \"failure mode\" or \"health variables\" in Fig. 2 and renamed to ensure proper disambiguation2. In the MBD literature, the acceptable variables are also referred to as \"component,\" \"failure mode\" or \"health variables.\""}, {"heading": "3.2 Diagnosis", "text": "The traditional query in MBD calculates the terms of acceptable variables that provide explanations for the system description and an observation. Definition 2 (Diagnostics): There is a system ATS, an observation of some variables in OBS and an assignment to all variables in COMPS. Definition 2 (Diagnostics) is a diagnosis iff SD (Diagnostics). Definition of all diagnoses of SD and an observation. Definition of all diagnoses of SD and an observation. Definition of a diagnosis called SD is defined as the number of negative letters in the SD. Definition of our running example, let us consider an observation vector. Definition of SD = an observation. There are a total of 256 possible assignments to all variables in COMPS and SD."}, {"heading": "4. Computing the Expected Number of MC Diagnoses", "text": "Active tests aim to minimize the expected number of diagnoses resulting from the possible set of results that can come from a given control vector. In this section, we present an algorithm to approximate this expectation. We calculate the expected number of diagnoses for a set of observable variables M (M'OBS). The (non-normalized) initial probability of an observation D = \u2264 \u2264 (SD, \u03b1) modifies the probability density function of subsequent results (observations), i.e., a subsequent observation \u03b1 changes its probability. The (non-normalized) initial probability of an observation \u03b1 (SD), given initial probability of an observation \u03b1 \u2032, which calculates the set of MC diagnoses and an initial observation \u03b1 (SD), is: Pr (SD, \u03b1) = SD = Minimum probability (SD)."}, {"heading": "4.1 Computing the Expectation Using Importance Sampling", "text": "The key finding that allows us to develop a quick method of calculating the expected number of remaining diagnoses is that the previous observation (or set of MC diagnoses) shifts the probability of the results. Therefore, an algorithm that checks the possible number of input mappings at random (remember that it is a basic modeling that inputs are equally likely) and the number of different observations that are calculated based on the number of previous diagnoses can produce a good approximation. Next, we introduce an algorithm to approximate the expected number of remaining diagnoses. Algorithm 1 Approximate Expectation of Inputs (S) 1: Functional Expectation (ATS, \u03b3, D) returns a real estimate: ATS (active test system): control vector D (set of diagnoses): previous diagnoses."}, {"heading": "5. Algorithms for Reducing the Diagnostic Uncertainty", "text": "In this section we present three algorithms: FractalATPG, FractalG and FractalP."}, {"heading": "5.1 Problem Definition and Exhaustive Search", "text": "Our AT problem is defined as follows: Problem 1 (Optimal Control Sequence): Problem 1 (Optimal Control Sequence): Problem 1 (Optimal Control Sequence): Problem 1 (Optimal Control Sequence): In view of a system ATS: Costs (from past observations and controls) S = < Answer 2 (Prior verified costs) S = < Answer 2 (Prior verified costs and controls) S2 (Prior verified costs) S3 (Prior verified costs) CTL assignments, Calculation of a new CTL assignment (Prior verified assignments + 1), as follows: Problem 1 (Prior verified assignments) CTL assignments (Prior verified assignments) E \u2264 3 (Prior verified assignments), Calculation of a new CTL assignment (Prior verified assignments).1 Problem is different from the general test certificate problem formulated in 1996, as different from the Shaenzi problem where there are shafts."}, {"heading": "6. Experimental Results", "text": "All experiments were conducted on a 64-node dual CPU cluster (each node is configured with two 2.4 GHz AMD Opteron DP 250 processors and 4 GB RAM)."}, {"heading": "6.1 Experimental Setup", "text": "In fact, it is that we are able to assert ourselves, that we are able, that we are able to put ourselves at the top of society, \"he said in an interview with the\" New York Times. \""}, {"heading": "6.2 Expected Number of MC Diagnoses", "text": "We have observed that the error of Alg. 1 is insensitive to the number or composition of the input variables. It can be seen that the value of the expected number of diagnoses E approaches the exact value E if the number of samples is increased. In particular, E corresponds to the exact value of the expected number of MC diagnoses E if all possible input values are taken into account. Figure 6 shows examples of E approaching the exact value E for three of our benchmark models E. Let us terminate the intermediate value of E by calculating the sequence E = < E-1, E-2,..., E-n >. The default error of the mean of E is defined as: SEME = s-n, (9) where s is the standard deviation of E. We have determined to terminate Alg. 1 if n > 15 and SEME < Celsius if it is a circuit-dependent threshold constant."}, {"heading": "6.3 Comparison of Algorithms", "text": "It can also be shown that halving the expected number of remaining MC diagnoses is a theoretical limit of each step of the prediction strategy. In this case, N0 is the initial number of diagnoses to which the value of the geometric decay curve (S) is reduced, and p is the decay rate constant. In all our experiments, we will adjust both the expected number of remaining MC diagnoses E and the actual number of remaining MC diagnoses E and the remaining MC diagnoses E (S) to Eqn. FractalATPGFigure 7 shows the reduction of the expected number of MC diagnoses E and the actual number of remaining MC diagnoses."}, {"heading": "6.4 Experimental Summary", "text": "This year it is more than ever before."}, {"heading": "7. Conclusions", "text": "This year, it is more than ever before in the history of the city."}], "references": [{"title": "Distinguishing tests for nondeterministic and probabilistic machines", "author": ["R. Alur", "C. Courcoubetis", "M. Yannakakis"], "venue": "In Proc. ACM Symposium on Theory of Computing,", "citeRegEx": "Alur et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Alur et al\\.", "year": 1995}, {"title": "A neutral netlist of 10 combinational benchmark circuits and a target translator in Fortran", "author": ["F. Brglez", "H. Fujiwara"], "venue": "In Proc. ISCAS\u201985,", "citeRegEx": "Brglez and Fujiwara,? \\Q1985\\E", "shortCiteRegEx": "Brglez and Fujiwara", "year": 1985}, {"title": "Active probing strategies for problem diagnosis in distributed systems", "author": ["M. Brodie", "I. Rish", "S. Ma", "N. Odintsova"], "venue": "In Proc. IJCAI\u201903,", "citeRegEx": "Brodie et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Brodie et al\\.", "year": 2003}, {"title": "Essentials of Electronic Testing for Digital, Memory and Mixed-Signal VLSI Circuits", "author": ["M.L. Bushnell", "V.D. Agrawal"], "venue": null, "citeRegEx": "Bushnell and Agrawal,? \\Q2000\\E", "shortCiteRegEx": "Bushnell and Agrawal", "year": 2000}, {"title": "Problem solving with the ATMS", "author": ["J. de Kleer"], "venue": "Artificial Intelligence,", "citeRegEx": "Kleer,? \\Q1986\\E", "shortCiteRegEx": "Kleer", "year": 1986}, {"title": "An improved approach for generating Max-Fault Min-Cardinality diagnoses", "author": ["J. de Kleer"], "venue": "In Proc", "citeRegEx": "Kleer,? \\Q2008\\E", "shortCiteRegEx": "Kleer", "year": 2008}, {"title": "One step lookahead is pretty good. In Readings in Model-Based Diagnosis, pp. 138\u2013142", "author": ["J. de Kleer", "O. Raiman", "M. Shirley"], "venue": null, "citeRegEx": "Kleer et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Kleer et al\\.", "year": 1992}, {"title": "Diagnosing multiple faults", "author": ["J. de Kleer", "B. Williams"], "venue": "Artificial Intelligence,", "citeRegEx": "Kleer and Williams,? \\Q1987\\E", "shortCiteRegEx": "Kleer and Williams", "year": 1987}, {"title": "Tele-diagnosis: Remote monitoring of large-scale systems", "author": ["S. Deb", "S. Ghoshal", "V.N. Malepati", "D.L. Kleinman"], "venue": "In Proc. AEROCONF\u201900,", "citeRegEx": "Deb et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Deb et al\\.", "year": 2000}, {"title": "Fault-model-based test generation for embedded software", "author": ["M. Esser", "P. Struss"], "venue": "In Proc. IJCAI\u201907,", "citeRegEx": "Esser and Struss,? \\Q2007\\E", "shortCiteRegEx": "Esser and Struss", "year": 2007}, {"title": "Approximation Algorithms for Model-Based Diagnosis", "author": ["A. Feldman"], "venue": "Ph.D. thesis, Delft University of Technology", "citeRegEx": "Feldman,? \\Q2010\\E", "shortCiteRegEx": "Feldman", "year": 2010}, {"title": "Computing observation vectors for Max-Fault Min-Cardinality diagnoses", "author": ["A. Feldman", "G. Provan", "A. van Gemund"], "venue": "In Proc. AAAI\u201908,", "citeRegEx": "Feldman et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2008}, {"title": "FRACTAL: Efficient fault isolation using active testing", "author": ["A. Feldman", "G. Provan", "A. van Gemund"], "venue": "In Proc. IJCAI\u201909,", "citeRegEx": "Feldman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2009}, {"title": "Solving strong-fault diagnostic models by model relaxation", "author": ["A. Feldman", "G. Provan", "A. van Gemund"], "venue": "In Proc. IJCAI\u201909,", "citeRegEx": "Feldman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Feldman et al\\.", "year": 2009}, {"title": "Building Problem Solvers", "author": ["K. Forbus", "J. de Kleer"], "venue": null, "citeRegEx": "Forbus and Kleer,? \\Q1993\\E", "shortCiteRegEx": "Forbus and Kleer", "year": 1993}, {"title": "Unveiling the ISCAS-85 benchmarks: A case study in reverse engineering", "author": ["M. Hansen", "H. Yalcin", "J. Hayes"], "venue": "IEEE Design & Test,", "citeRegEx": "Hansen et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Hansen et al\\.", "year": 1999}, {"title": "Using model counting to find optimal distinguishing tests", "author": ["S. Heinz", "M. Sachenbacher"], "venue": "In Proc. of COUNTING\u201908,", "citeRegEx": "Heinz and Sachenbacher,? \\Q2008\\E", "shortCiteRegEx": "Heinz and Sachenbacher", "year": 2008}, {"title": "Polynomially complete fault detection problems", "author": ["O.H. Ibarra", "S.K. Sahni"], "venue": "IEEE Trans. on Computers,", "citeRegEx": "Ibarra and Sahni,? \\Q1975\\E", "shortCiteRegEx": "Ibarra and Sahni", "year": 1975}, {"title": "Pervasive diagnosis: Integration of active diagnosis into production plans", "author": ["L. Kuhn", "B. Price", "J. de Kleer", "M. Do", "R. Zhou"], "venue": "In Proc", "citeRegEx": "Kuhn et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Kuhn et al\\.", "year": 2008}, {"title": "Bottom-up construction of minimum-cost and/or trees for sequential fault diagnosis", "author": ["O.E. Kundakcioglu", "T. \u00dcnl\u00fcyurt"], "venue": "IEEE Trans. on SMC,", "citeRegEx": "Kundakcioglu and \u00dcnl\u00fcyurt,? \\Q2007\\E", "shortCiteRegEx": "Kundakcioglu and \u00dcnl\u00fcyurt", "year": 2007}, {"title": "Application of heuristic search and information theory to sequential fault diagnosis", "author": ["K. Pattipati", "M. Alexandridis"], "venue": "IEEE Trans. on SMC,", "citeRegEx": "Pattipati and Alexandridis,? \\Q1990\\E", "shortCiteRegEx": "Pattipati and Alexandridis", "year": 1990}, {"title": "Temporal versus spatial observability in modelbased diagnosis", "author": ["J. Pietersma", "A. van Gemund"], "venue": "Systems, Man and Cybernetics,", "citeRegEx": "Pietersma and Gemund,? \\Q2006\\E", "shortCiteRegEx": "Pietersma and Gemund", "year": 2006}, {"title": "Why is ATPG easy", "author": ["M.R. Prasad", "P. Chong", "K. Keutzer"], "venue": "In Proc. DAC\u201999,", "citeRegEx": "Prasad et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Prasad et al\\.", "year": 1999}, {"title": "Optimal and near-optimal test sequencing algorithms with realistic test models", "author": ["V. Raghavan", "M. Shakeri", "K. Pattipati"], "venue": "IEEE Trans. on SMC,", "citeRegEx": "Raghavan et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Raghavan et al\\.", "year": 1999}, {"title": "Accuracy vs. efficiency trade-offs in probabilistic diagnosis", "author": ["I. Rish", "M. Brodie", "S. Ma"], "venue": "In Proc. AAAI\u201902,", "citeRegEx": "Rish et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Rish et al\\.", "year": 2002}, {"title": "Advances in System Fault Modeling and Diagnosis", "author": ["M. Shakeri"], "venue": "Ph.D. thesis, University of Connecticut", "citeRegEx": "Shakeri,? \\Q1996\\E", "shortCiteRegEx": "Shakeri", "year": 1996}, {"title": "Sequential testing algorithms for multiple fault diagnosis", "author": ["M. Shakeri", "V. Raghavan", "K.R. Pattipati", "A. Patterson-Hine"], "venue": "IEEE Trans. on SMC,", "citeRegEx": "Shakeri et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Shakeri et al\\.", "year": 2000}, {"title": "Hierarchical diagnosis of multiple faults", "author": ["S. Siddiqi", "J. Huang"], "venue": "In Proc. IJCAI\u201907,", "citeRegEx": "Siddiqi and Huang,? \\Q2007\\E", "shortCiteRegEx": "Siddiqi and Huang", "year": 2007}, {"title": "Combinational test generation using satisfiability", "author": ["P. Stephan", "R. Brayton", "A. Sangiovanni-Vincentelli"], "venue": "IEEE Trans. on CAD of Integrated Circuits and Systems,", "citeRegEx": "Stephan et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Stephan et al\\.", "year": 1996}, {"title": "Testing physical systems", "author": ["P. Struss"], "venue": "In Proc. AAAI\u201994,", "citeRegEx": "Struss,? \\Q1994\\E", "shortCiteRegEx": "Struss", "year": 1994}, {"title": "Rollout strategies for sequential fault diagnosis", "author": ["F. Tu", "K. Pattipati"], "venue": "IEEE Trans. on SMC,", "citeRegEx": "Tu and Pattipati,? \\Q2003\\E", "shortCiteRegEx": "Tu and Pattipati", "year": 2003}], "referenceMentions": [{"referenceID": 25, "context": "Sequential diagnosis algorithms (Shakeri, 1996) can be used as an alternative to the above passive approach, with better decay of the number of diagnostic hypotheses.", "startOffset": 32, "endOffset": 47}, {"referenceID": 18, "context": "Pattipati and Alexandridis (1990) have shown that under certain conditions (e.", "startOffset": 0, "endOffset": 34}, {"referenceID": 4, "context": ", unit test costs and equal prior fault probabilities) a onestep look-ahead policy leads to an optimal average depth of the test tree; de Kleer, Raiman, and Shirley (1992) have shown that one-step look-ahead delivers good practical results for a range of combinational circuits.", "startOffset": 138, "endOffset": 172}, {"referenceID": 4, "context": ", as used by de Kleer and Williams (1987), can be computed directly from the number of MC diagnoses.", "startOffset": 16, "endOffset": 42}, {"referenceID": 4, "context": "Early work aimed at diagnostic convergence by de Kleer and Williams (1987) compute a probe sequence for reducing diagnostic entropy using a myopic search strategy.", "startOffset": 49, "endOffset": 75}, {"referenceID": 29, "context": "Model-Based Testing (MBT) (Struss, 1994) is a generalization of sequential diagnosis.", "startOffset": 26, "endOffset": 40}, {"referenceID": 22, "context": "Our task is harder than that of Raghavan et al. (1999), since the diagnosis task is NPhard, even though the diagnosis lookup uses a fault dictionary; in our case we compute a new diagnosis after every test.", "startOffset": 32, "endOffset": 55}, {"referenceID": 22, "context": "Our task is harder than that of Raghavan et al. (1999), since the diagnosis task is NPhard, even though the diagnosis lookup uses a fault dictionary; in our case we compute a new diagnosis after every test. Hence we have an NP-hard sequential problem interleaved with the complexity of diagnostic inference at each step (in our case the complexity of diagnosis is \u03a3p2-hard). Apart from the above-mentioned differences, we note that optimal test sequencing is infeasible for the size of problems in which we are interested. Model-Based Testing (MBT) (Struss, 1994) is a generalization of sequential diagnosis. The purpose of MBT is to compute inputs manifesting a certain (faulty) behavior. The main differences from our active testing approach are that MBT (1) assumes that all inputs are controllable and (2) MBT aims at confirming single-fault behavior as opposed to maximally decreasing the diagnostic uncertainty. Brodie, Rish, Ma, and Odintsova (2003) cast their models in terms of Bayesian networks.", "startOffset": 32, "endOffset": 957}, {"referenceID": 2, "context": "Our notion of entropy is the size of the diagnosis space, whereas Brodie et al. use decisiontheoretic notions of entropy to guide test selection. Brodie et al. extend their past Bayesian diagnostic approach (Rish, Brodie, & Ma, 2002) with sequential construction of probe sets (probe sets are collections of, for example, pings to a subset of the nodes in a computer network). The approach of Brodie et al. is limited to networks although it can be extended by modifying the type of Bayesian network shown by Rish et al.; such a modification, however, would necessitate more computationally expensive Bayesian reasoning for achieving good approximation results for the most probable explanations. The approach of Brodie et al. (2003) does not compute modifications in the target network topology and does not propose control actions (for example, a network server that fails to respond can be dialed-up through a modem or checked by a technician at a higher cost).", "startOffset": 66, "endOffset": 734}, {"referenceID": 11, "context": "We solve a different problem than that of Heinz and Sachenbacher (2008), Alur, Courcoubetis, and Yannakakis (1995).", "startOffset": 42, "endOffset": 72}, {"referenceID": 11, "context": "We solve a different problem than that of Heinz and Sachenbacher (2008), Alur, Courcoubetis, and Yannakakis (1995). Both of these approaches assume a non-deterministic model defined as an automaton.", "startOffset": 42, "endOffset": 115}, {"referenceID": 6, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al.", "startOffset": 0, "endOffset": 24}, {"referenceID": 6, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al.", "startOffset": 0, "endOffset": 129}, {"referenceID": 0, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al. (1995), they transform this automaton to a relational specification, and apply their framework to software diagnosis.", "startOffset": 132, "endOffset": 151}, {"referenceID": 0, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al. (1995), they transform this automaton to a relational specification, and apply their framework to software diagnosis. This automaton-based framework accommodates more general situations than does ours, such as the possibility that the system\u2019s state after a transition may not be uniquely determined by the state before the transition and the input, and/or the system\u2019s state may be associated with several possible observations. In our MBD framework, a test consists of an instantiation of several variables, which corresponds to the notion of test sequence within the automaton framework of Heinz and Sachenbacher. The framework of Esser and Struss requires modeling of the possible faults, whereas Fractal works both with weak and strong-fault models1. Interestingly, as shown by Esser and Struss, modeling of abnormal software behavior can be derived to some extent from software functional requirements. This makes their framework suitable for software systems. A recent approach to active diagnosis is described by Kuhn, Price, de Kleer, Do, and Zhou (2008), where additional test vectors are computed to optimize the diagnosis while the system (a copier) remains operational.", "startOffset": 132, "endOffset": 1208}, {"referenceID": 0, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al. (1995), they transform this automaton to a relational specification, and apply their framework to software diagnosis. This automaton-based framework accommodates more general situations than does ours, such as the possibility that the system\u2019s state after a transition may not be uniquely determined by the state before the transition and the input, and/or the system\u2019s state may be associated with several possible observations. In our MBD framework, a test consists of an instantiation of several variables, which corresponds to the notion of test sequence within the automaton framework of Heinz and Sachenbacher. The framework of Esser and Struss requires modeling of the possible faults, whereas Fractal works both with weak and strong-fault models1. Interestingly, as shown by Esser and Struss, modeling of abnormal software behavior can be derived to some extent from software functional requirements. This makes their framework suitable for software systems. A recent approach to active diagnosis is described by Kuhn, Price, de Kleer, Do, and Zhou (2008), where additional test vectors are computed to optimize the diagnosis while the system (a copier) remains operational. Their work differs from ours in that plans (roughly analogous to test sequences) with a probability of failure T are computed statically, and a plan remains unmodified even if it fails to achieve its desired goal (a manifestation of a failure with probability close to T ). Conversely, Fractal dynamically computes next-best control settings in a game-like manner. The biggest difference between Fractal and the approach of Kuhn et al. is in the use of models. Fractal is compatible with traditional MBD (de Kleer & Williams, 1987) and can reuse existing models from first principles while the pervasive approach of Kuhn et al. uses an automaton and a set of possible actions. The approach of Kuhn et al. (2008) uses existing MBD and planning algorithms, and as such integrates existing approaches; in contrast, Fractal introduces new control algorithms and reuses an external diagnostic oracle.", "startOffset": 132, "endOffset": 2039}, {"referenceID": 0, "context": "Esser and Struss (2007) also adopt an automaton framework for test generation, except that, unlike Heinz and Sachenbacher (2008) or Alur et al. (1995), they transform this automaton to a relational specification, and apply their framework to software diagnosis. This automaton-based framework accommodates more general situations than does ours, such as the possibility that the system\u2019s state after a transition may not be uniquely determined by the state before the transition and the input, and/or the system\u2019s state may be associated with several possible observations. In our MBD framework, a test consists of an instantiation of several variables, which corresponds to the notion of test sequence within the automaton framework of Heinz and Sachenbacher. The framework of Esser and Struss requires modeling of the possible faults, whereas Fractal works both with weak and strong-fault models1. Interestingly, as shown by Esser and Struss, modeling of abnormal software behavior can be derived to some extent from software functional requirements. This makes their framework suitable for software systems. A recent approach to active diagnosis is described by Kuhn, Price, de Kleer, Do, and Zhou (2008), where additional test vectors are computed to optimize the diagnosis while the system (a copier) remains operational. Their work differs from ours in that plans (roughly analogous to test sequences) with a probability of failure T are computed statically, and a plan remains unmodified even if it fails to achieve its desired goal (a manifestation of a failure with probability close to T ). Conversely, Fractal dynamically computes next-best control settings in a game-like manner. The biggest difference between Fractal and the approach of Kuhn et al. is in the use of models. Fractal is compatible with traditional MBD (de Kleer & Williams, 1987) and can reuse existing models from first principles while the pervasive approach of Kuhn et al. uses an automaton and a set of possible actions. The approach of Kuhn et al. (2008) uses existing MBD and planning algorithms, and as such integrates existing approaches; in contrast, Fractal introduces new control algorithms and reuses an external diagnostic oracle. An advantage of the pervasive diagnosis approach is that the use of a planning engine generates a complete sequence of actions, as opposed to the one-step lookahead of Fractal. Depending on the planning formalism, the complexity of pervasive diagnosis can be dominated by the planning module, while the most complex computational task in Fractal is that of diagnosis. Both pervasive diagnosis and this paper, however, report good average-case computational efficiency for benchmark problems. Last, the paper of Kuhn et al. is limited to single-fault diagnoses, although the pervasive diagnosis framework can be generalized to multiple faults. Feldman, Provan, and van Gemund (2009a) introduce an early version of Fractal.", "startOffset": 132, "endOffset": 2906}, {"referenceID": 10, "context": "Weak-fault models (also known as models with ignorance of abnormal behavior) and strong-fault models are discussed by Feldman, Provan, and van Gemund (2009b).", "startOffset": 118, "endOffset": 158}, {"referenceID": 4, "context": "We use |\u03a9(S)| instead of the more precise diagnostic entropy as defined by de Kleer and Williams (1987) and subsequent works, as this allows low-complexity estimations (discussed in Sec.", "startOffset": 78, "endOffset": 104}, {"referenceID": 24, "context": "Problem 1 is different from the general sequential testing problem, as formulated by Shakeri (1996). In the Shakeri formulation, there are different test costs and different prior failure probabilities, where Problem 1 assumes equal costs and equal small prior probabilities of failure.", "startOffset": 85, "endOffset": 100}, {"referenceID": 20, "context": "Pattipati and Alexandridis (1990) show that under those assumptions, minimizing the test cost at each step constitutes an optimal policy for minimizing the expected test cost.", "startOffset": 0, "endOffset": 34}, {"referenceID": 4, "context": "We next show the probing algorithm as introduced by de Kleer and Williams (1987) and adapted for the Fractal framework.", "startOffset": 55, "endOffset": 81}, {"referenceID": 25, "context": "In addition to the original 74XXX/ISCAS85 models, we have performed cone reductions as described by Siddiqi and Huang (2007) and de Kleer (2008).", "startOffset": 100, "endOffset": 125}, {"referenceID": 4, "context": "In addition to the original 74XXX/ISCAS85 models, we have performed cone reductions as described by Siddiqi and Huang (2007) and de Kleer (2008). Recall that from the perspective of the MBD diagnostic engine, faults inside a cone (where a cone is a set of components) cannot be distinguished, hence it is enough to provide a single health variable per cone.", "startOffset": 132, "endOffset": 145}, {"referenceID": 10, "context": "We have applied Fractal to the real-world problem of reducing the diagnostic uncertainty of a heavy-duty printer (Feldman, 2010).", "startOffset": 113, "endOffset": 128}], "year": 2010, "abstractText": "Model-based diagnostic reasoning often leads to a large number of diagnostic hypotheses. The set of diagnoses can be reduced by taking into account extra observations (passive monitoring), measuring additional variables (probing) or executing additional tests (sequential diagnosis/test sequencing). In this paper we combine the above approaches with techniques from Automated Test Pattern Generation (ATPG) and Model-Based Diagnosis (MBD) into a framework called Fractal (FRamework for ACtive Testing ALgorithms). Apart from the inputs and outputs that connect a system to its environment, in active testing we consider additional input variables to which a sequence of test vectors can be supplied. We address the computationally hard problem of computing optimal control assignments (as defined in Fractal) in terms of a greedy approximation algorithm called Fractal. We compare the decrease in the number of remaining minimal cardinality diagnoses of Fractal to that of two more Fractal algorithms: Fractal and Fractal. Fractal is based on ATPG and sequential diagnosis while Fractal is based on probing and, although not an active testing algorithm, provides a baseline for comparing the lower bound on the number of reachable diagnoses for the Fractal algorithms. We empirically evaluate the trade-offs of the three Fractal algorithms by performing extensive experimentation on the ISCAS85/74XXX benchmark of combinational circuits.", "creator": "dvips(k) 5.95a Copyright 2005 Radical Eye Software"}}}