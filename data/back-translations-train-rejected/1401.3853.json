{"id": "1401.3853", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2014", "title": "Implicit Abstraction Heuristics", "abstract": "State-space search with explicit abstraction heuristics is at the state of the art of cost-optimal planning. These heuristics are inherently limited, nonetheless, because the size of the abstract space must be bounded by some, even if a very large, constant. Targeting this shortcoming, we introduce the notion of (additive) implicit abstractions, in which the planning task is abstracted by instances of tractable fragments of optimal planning. We then introduce a concrete setting of this framework, called fork-decomposition, that is based on two novel fragments of tractable cost-optimal planning. The induced admissible heuristics are then studied formally and empirically. This study testifies for the accuracy of the fork decomposition heuristics, yet our empirical evaluation also stresses the tradeoff between their accuracy and the runtime complexity of computing them. Indeed, some of the power of the explicit abstraction heuristics comes from precomputing the heuristic function offline and then determining h(s) for each evaluated state s by a very fast lookup in a database. By contrast, while fork-decomposition heuristics can be calculated in polynomial time, computing them is far from being fast. To address this problem, we show that the time-per-node complexity bottleneck of the fork-decomposition heuristics can be successfully overcome. We demonstrate that an equivalent of the explicit abstraction notion of a database exists for the fork-decomposition abstractions as well, despite their exponential-size abstract spaces. We then verify empirically that heuristic search with the databased\" fork-decomposition heuristics favorably competes with the state of the art of cost-optimal planning.", "histories": [["v1", "Thu, 16 Jan 2014 04:59:55 GMT  (1431kb)", "http://arxiv.org/abs/1401.3853v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["michael katz", "carmel domshlak"], "accepted": false, "id": "1401.3853"}, "pdf": {"name": "1401.3853.pdf", "metadata": {"source": "CRF", "title": "Implicit Abstraction Heuristics", "authors": ["Michael Katz", "Carmel Domshlak"], "emails": ["dugi@tx.technion.ac.il", "dcarmel@ie.technion.ac.il"], "sections": [{"heading": "1. Introduction", "text": "Heuristic search, either by progression in the space of world states or by regression in the space of partial goals (LA 2001), is a common and successful approach to classical planning. It is probably the most popular approach to cost-optimal planning, that is, the search for a plan with minimal total cost of its actions. The difference between different heuristic search algorithms for optimal planning lies mainly in the permissible heuristic functions they use. In state-space search, such heuristic estimation is the cost of achieving the goal of a given state and guarantees that the costs are not overestimated. A useful heuristic function must be as precise as it is efficient at calculating. Improving the accuracy of a heuristic function without substantially worsening the temporal complexity of the calculation usually translates into faster search for optimal solutions. Over the past decade, numerous computational ideas have been developed that are suitable for classical planning, including delete-relaxing 2001-max heuristic planning (max-het)."}, {"heading": "2. Preliminaries", "text}, {"heading": "3. Abstractions and Abstraction Heuristics", "text": "The semantics of each planning task is given by its induced state-transition model, often referred to as transition diagram. (Definition 1 A transition diagram is a tuple of T = (S, L, Tr, s0, S?, $) in which S is a finite series of states, L is a finite series of transition costs, Tr S \u00b7 L \u00b7 S is a set of (designated) transitions, s0 \u00b2 S is an initial state, S? S is a set of target states, and $: L \u2192 R0 + is a finite series of transition cost functions. For a state, S \u00b2 is S \u00b2 s in T, and a subset of states S \u00b2 s in S?, cost (s, S \u2032 s) is the cost of a cheapest state in S \u00b2 to a state in S \u00b2 along the transitions of T; if no state is attainable in S \u00b2, then we have cost (s, S \u00b2) = a path from s0 to S? is a plan, T and plans for the cheapest states."}, {"heading": "4. Implicit Abstractions", "text": "The first observation is that explicit abstractions are not necessarily the only way to proceed with abstraction euristics. Faced with an implicit task that we set above the states S. We assume that we can transform it into another planning task. Transformation induces an abstraction capacity in which each abstraction capacity is assigned, and we define what we call (additive) implicit abstraction.Definition 4 An additive implicit abstraction of a planning task in S. can be polynomial in time in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomies in abstraction polynomies.Definition 4 An implicit abstraction polynomic in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomics in abstraction polynomics."}, {"heading": "5. Fork Decompositions", "text": "We now proceed with two specific acyclic causal compositions, which, when combined with certain variable abstractions, provide us with implicit abstraction illustrations. < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < &"}, {"heading": "6. Experimental Evaluation: Take I", "text": "To evaluate the practical appeal of fork-decomposition heuristics with complete elimination, we conducted an empirical study of a broad sample of planning areas from the International Planning Competitions (IPC) 1998-2006. < The domains were selected to allow comparative evaluation with other, both basic and state-of-the-art tasks that did not support all the PDDL characteristics at the time of our evaluation. Later, we formally demonstrated that among ad hoc action costs partitions as our uniform partition, none of the three fork decompositions as defined in Definition 9 is dominated. Hence, we have implemented three additive fork-decomposition heuristics, hF, hI, and hFI, within the standard heuristic search framework of the Fast Downward planner (Helmert, 2006)."}, {"heading": "8. Experimental Evaluation: Take II", "text": "The first is the number of tasks to be solved by some planners. \"The last three lines sum up the performance of planners over three measures. The first is the number of tasks to be solved in all 23 areas; the second is the number of tasks to be solved in all areas.\" The first is the number of tasks to be solved in all areas. \"The second is the number of tasks to be solved in all areas.\" The first is the number of tasks to be solved in all areas. \"The last three lines sum up the performance of planners over three measures.\" The first is the number of tasks to be solved in all 23 areas; this is essentially the performance assessment used in optimizing the IPC. \""}, {"heading": "9. Formal Analysis: Asymptotic Performance Ratios", "text": "The empirical analysis of the effectiveness of heuristic methods cited by Helmert and Mattmu M\u00fcller (2008) allows us to investigate the trade-off between the accuracy of heuristics and the complexity of the calculation, but only relative statements of the type \"heuristic h expands less nodes than heuristic h\" on benchmark suite X. Furthermore, formal evidence for the effectiveness of a heuristic approach would probably be obtained, especially for very complicated heuristic procedures such as those that provide the proofs of theorems 7 and 8. Our formal analysis of the effectiveness of fork-decomposition heuristics using the methodology."}, {"heading": "9.1 Gripper", "text": "The domain consists of a robot with two arms Arms = {right, left}, two rooms Rooms = {r1, r2}, and a set of Balls of n Balls. The robot can pick up a ball with one arm. Arms if arm is empty, release a ball b'Balls from the arm if arm currently hold b, and move from one room to another. \u2022 Variables V = {robot} Arms Balls with domains D (robot) = RoomsD (left) = D (right) = Balls. \u2022 A natural description of this planning task in sas + is as follows. \u2022 Variables V = {robot} Arms Balls with domains D (robot) = RoomsD (right) = Balls: Empty b'Balls: D (b) = Rooms {robot: {robot}, Initial state I = {ltr: {right: arm, b'Balls}, pick up: {ltr: (arm), pick up: (rrobot: 1)."}, {"heading": "9.1.1 Fork Decomposition", "text": "Since the number of mandatories in every abstract task, as well as the costs in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task, in every abstract task."}, {"heading": "9.2 Logistics", "text": "Each logistics task consists of some k-cities, x-planes, y-trucks and n-parcels. Each city i is connected with a series of li = {l1i., l\u03b1ii} of locations within this city; the union of the locations of all cities is called L = k i = 1 Li. Besides, exactly one location in each city is an airport, and the number of airports is LA = {l11.,.., l1k} L. Each truck can only move within the city in which it is located, and planes can fly between the airports. Planes are equipped with U = {u1,., ux}, trucks with T = {t1,., ty} and parcels with P = {p1,., pn}. Let Ti = [t-T] from one airport to another."}, {"heading": "9.2.1 Fork Decomposition", "text": "Since the \"u\" and \"t\" variables have no target value, the capture of the \"v\" forks and \"viforks\" is as shown in Figure 11b, while the \"domains\" of the \"fork roots\" represent an abstract task as well as the division of the \"action costs\" between these representatives; tables (a) and (b) capture the train and loading / unloading actions according to the \"leave-one-out\" actions in Figure 16 (\"leave-one-out\"). Therefore, we have \"F\" u \"l\" l \"l\" l \"i\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\""}, {"heading": "9.2.2 Lower Bound", "text": "In fact, most of them will be able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move,"}, {"heading": "9.2.3 Upper Bound", "text": "An example where all three heuristics are exactly 1 / 2 consisting of two trucks t1, t2, no planes, one city and n parcels, so that the origin and destination locations of all parcels are all different in pairs, and both trucks are initially located at a different location. < pn} 2ni = 0, and T = {t1, t2}, then the sas + encoding for this logistics task is as follows. < pn} T: D (t) = L, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p."}, {"heading": "9.3 Blocksworld", "text": "\"Each block is either on the table, or on a different block, or on a different block. Let's now consider a block world task as follows: The blocks first form a block b1,., bn + 1 with another block on the table,., bn + 1 with another block on the table,., bn + 1 with another block on the table,. bn, bn + 1 with another block on the table, and the goal is to move them to form a tower b1., bn \u2212 1, bn + 1 with another block on the table. This is the goal to swap the lowest two blocks of the tower."}, {"heading": "9.4 Miconic", "text": "Each Miconic task consists of an elevator e, a series of floors F = >, and the passengers P = >. The elevator can move between the floors and in each floor it can load and / or unload passengers. A natural sas + description of a Miconic task is as follows. \u2022 Variables V = [e] \"P\" with the ranges D (e) = F \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p\" p \"p.\""}, {"heading": "9.4.1 Lower Bounds", "text": "First, since Miconic is a special case of the logistics domain, Lemma 1 applies to any optimal task. [f] f [f] f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \"f\" f \""}, {"heading": "9.4.2 Upper Bounds", "text}, {"heading": "9.5 Satellite", "text": "The satellite domain is quite complex."}, {"heading": "9.5.1 Fork Decomposition", "text": "The causal diagram of a satellite task and a representative subset of the collection of V-forks and V-forks are shown in Figure 16. Since the variables [[Oni, Ci | i] and V-forks have no target value, the collection of V-forks and V-forks will generally look like this. \u2022 For each satellite object o = (d, m), an O-fork with the leaves os.Collection of V-forks and V-forks \u2022 For each instrument i-I, a Ci-fork with the leaves Oi. \u2022 For each image object o = (d, m), an o-ifork with the parents [Ci | i] Im] Sm.The root areas of all forks rooted in instruments i-I and all inverted forks are shown in Figure I and the root domain of the forks shown in Figure L:"}, {"heading": "9.5.2 Lower Bounds", "text": "First, note that each optimal plan for a satellite task has a maximum of 6 actions per image object and one action per satellite object and one action per satellite object (cost per satellite object and one action per satellite object), which will show us the lower limit of 1 / 6 for each action per satellite object and each action per satellite object (cost per satellite object and one action per satellite object). (For one image object o = (d, m), some actions TakeIn (o, d, i) = < {o: 0, Ci: 1, s: 1, s: 1, s: 1) > we will appear in optimal plans for satellite objects o = (d, m), some actions TakeIn (o, s, i) = < [o: 0, Ci: 1, s: d} >."}, {"heading": "9.5.3 Upper Bound", "text": "A satellite project, on which all three heuristics achieve the ratio of exactly 1: 6, consists of two identical satellites, each with two different modalities: 1: 1 and 1: 1, 2: 1, 2: 2: 1, 2: 1, 2: 1, 3: 1, 3: 1, 3: 1, 3: 3: 1, 3: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 4: 1, 5: 1, 5: 1, 5: 5: 5: 5, 5: 1, 5: 1, 5: 5: 1, 5: 5: 1, 5: 1, 5: 5: 1, 5: 5: 5: 5, 5: 5: 6: 5, 6: 5: 6, 5: 6, 5: 6: 6, 5: 5: 6, 5: 6: 6, 5: 6: 6, 5: 6: 6, 5: 5: 5, 5: 5: 5: 5, 5: 5: 5: 5: 5, 5: 5: 5: 6: 6: 6, 5: 6: 6: 5: 6, 6: 6: 6: 5: 5: 5: 6, 6: 6: 6: 5: 5: 6, 6: 6: 6: 5: 5: 6, 6: 5: 6: 5: 5: 5: 6, 6: 6: 6: 6: 5: 5: 5: 6, 6: 5: 5: 6: 5: 5: 6, 6: 6: 6: 6: 6: 5: 5: 6, 6: 6: 5: 5: 5: 5: 5: 5: 5: 5: 5: 6, 6: 5: 5: 5: 5: 5: 6, 6: 5: 5: 5: 5: 5: 5: 5: 5: 6, 6: 5: 5: 5: 6, 6: 5: 5: 6: 6: 5: 5: 5: 5: 6: 5: 5: 5: 5: 6, 6: 6: 6: 5: 5: 6: 5: 5: 5: 6: 5: 6: 6, 6: 5: 6: 5:"}, {"heading": "10. Summary", "text": "We considered the heuristic search for cost-optimal planning and introduced a domain-independent framework for the development of permissible heuristics using additive implicit abstractions, each of which corresponds to the abstraction of the present planning task by an example of a tractable fragment of optimal planning. The main motivation for our investigation was to avoid the limitation of explicit abstractions, such as pattern databases and merge and shrink abstractions based on abstract spaces with a fixed size. We presented a concrete scheme for additive implicit abstractions by dividing the planning task along its causal graphics and proposed a concrete realization of this idea called fork decomposition, which was based on two novel fragments of tractable cost-optimal planning. We then examined the resulting permissible heuristics both formally and empirically and demonstrated that they compete with the state-of-the-informative database."}, {"heading": "Acknowledgments", "text": "The work of both authors was supported in part by grants from the Israel Science Foundation 670 / 07 and 1101 / 07."}, {"heading": "Appendix A. Detailed Results of Empirical Evaluation", "text": "Blocksworld, Depots and Grid-Domains. The description of the planners is contained in Section 6; here the fork decomposition heuristics are calculated completely online. Column task denotes problem instance, column h * denotes optimal solution length. Other columns capture runtime and number of extended nodes. Logistics-ipc2 and Mprime domains. Pipesworld-Tankage, TPP and truck domains. Blocksworld, Depots and Driverlog-Domains. The description of the planners takes place in Section 6; here the fork decomposition heuristics takes place via structural sample databases. Column task denotes problem, column h * denotes optimal solution length. Other columns capture runtime and number of extended nodes. Logistics-ipc2 and Mprime-Domains. NoTankage, Pipesworld-Tankage, and satellite domains. Openstacks-Planstrips-Domains-Parts-Domains-6 are described."}], "references": [{"title": "Complexity results for SAS+ planning", "author": ["C. B\u00e4ckstr\u00f6m", "B. Nebel"], "venue": "Computational Intelligence,", "citeRegEx": "B\u00e4ckstr\u00f6m and Nebel,? \\Q1995\\E", "shortCiteRegEx": "B\u00e4ckstr\u00f6m and Nebel", "year": 1995}, {"title": "Planning as heuristic search", "author": ["B. Bonet", "H. Geffner"], "venue": "Artificial Intelligence,", "citeRegEx": "Bonet and Geffner,? \\Q2001\\E", "shortCiteRegEx": "Bonet and Geffner", "year": 2001}, {"title": "The computational complexity of propositional STRIPS planning", "author": ["T. Bylander"], "venue": "Artificial Intelligence,", "citeRegEx": "Bylander,? \\Q1994\\E", "shortCiteRegEx": "Bylander", "year": 1994}, {"title": "Causal graphs and structurally restricted planning", "author": ["H. Chen", "O. Gimenez"], "venue": "In Proceedings of the 18th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Chen and Gimenez,? \\Q2008\\E", "shortCiteRegEx": "Chen and Gimenez", "year": 2008}, {"title": "Additive-disjunctive heuristics for optimal planning", "author": ["A.I. Coles", "M. Fox", "D. Long", "A.J. Smith"], "venue": "In Proceedings of the 18th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Coles et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Coles et al\\.", "year": 2008}, {"title": "Multi-agent off-line coordination: Structure and complexity", "author": ["C. Domshlak", "Y. Dinitz"], "venue": "In Proceedings of Sixth European Conference on Planning (ECP),", "citeRegEx": "Domshlak and Dinitz,? \\Q2001\\E", "shortCiteRegEx": "Domshlak and Dinitz", "year": 2001}, {"title": "Friends or foes? On planning as satisfiability and abstract CNF encodings", "author": ["C. Domshlak", "J. Hoffmann", "A. Sabharwal"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Domshlak et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Domshlak et al\\.", "year": 2009}, {"title": "When abstractions met landmarks", "author": ["C. Domshlak", "M. Katz", "S. Lefler"], "venue": "In Proceedings of the 20th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Domshlak et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Domshlak et al\\.", "year": 2010}, {"title": "Directed model checking with distancepreserving abstractions", "author": ["K. Dr\u00e4ger", "B. Finkbeiner", "A. Podelski"], "venue": "Proceedings of the 13th International SPIN Workshop on Model Checking Software,", "citeRegEx": "Dr\u00e4ger et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Dr\u00e4ger et al\\.", "year": 2006}, {"title": "Planning with pattern databases", "author": ["S. Edelkamp"], "venue": "In Proceedings of the European Conference on Planning (ECP),", "citeRegEx": "Edelkamp,? \\Q2001\\E", "shortCiteRegEx": "Edelkamp", "year": 2001}, {"title": "Symbolic pattern databases in heuristic search planning", "author": ["S. Edelkamp"], "venue": "In Proceedings of the International Conference on AI Planning and Scheduling (AIPS),", "citeRegEx": "Edelkamp,? \\Q2002\\E", "shortCiteRegEx": "Edelkamp", "year": 2002}, {"title": "Automated creation of pattern database search heuristics", "author": ["S. Edelkamp"], "venue": "In Proceedings of the 4th Workshop on Model Checking and Artificial Intelligence (MoChArt)", "citeRegEx": "Edelkamp,? \\Q2006\\E", "shortCiteRegEx": "Edelkamp", "year": 2006}, {"title": "Optimal symbolic planning with action costs and preferences", "author": ["S. Edelkamp", "P. Kissmann"], "venue": "In Proceedings of the 21st International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Edelkamp and Kissmann,? \\Q2009\\E", "shortCiteRegEx": "Edelkamp and Kissmann", "year": 2009}, {"title": "Additive pattern database heuristics", "author": ["A. Felner", "R.E. Korf", "S. Hanan"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Felner et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Felner et al\\.", "year": 2004}, {"title": "Additive and reversed relaxed reachability heuristics revisited", "author": ["P. Haslum"], "venue": "In Proceedings of the 6th International Planning Competition", "citeRegEx": "Haslum,? \\Q2008\\E", "shortCiteRegEx": "Haslum", "year": 2008}, {"title": "New admissible heuristics for domainindependent planning", "author": ["P. Haslum", "B. Bonet", "H. Geffner"], "venue": "In Proceedings of the Twentieth National Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Haslum et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Haslum et al\\.", "year": 2005}, {"title": "Domain-independent construction of pattern database heuristics for cost-optimal planning", "author": ["P. Haslum", "A. Botea", "M. Helmert", "B. Bonet", "S. Koenig"], "venue": "In Proceedings of the 19th National Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Haslum et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Haslum et al\\.", "year": 2007}, {"title": "Admissible heuristics for optimal planning", "author": ["P. Haslum", "H. Geffner"], "venue": "In Proceedings of the Fifth International Conference on Artificial Intelligence Planning Systems (ICAPS),", "citeRegEx": "Haslum and Geffner,? \\Q2000\\E", "shortCiteRegEx": "Haslum and Geffner", "year": 2000}, {"title": "Complexity results for standard benchmark domains in planning", "author": ["M. Helmert"], "venue": "Artificial Intelligence,", "citeRegEx": "Helmert,? \\Q2003\\E", "shortCiteRegEx": "Helmert", "year": 2003}, {"title": "A planning heuristic based on causal graph analysis", "author": ["M. Helmert"], "venue": "In Proceedings of the 14th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Helmert,? \\Q2004\\E", "shortCiteRegEx": "Helmert", "year": 2004}, {"title": "The Fast Downward planning system", "author": ["M. Helmert"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Helmert,? \\Q2006\\E", "shortCiteRegEx": "Helmert", "year": 2006}, {"title": "Landmarks, critical paths and abstractions: What\u2019s the difference anyway", "author": ["M. Helmert", "C. Domshlak"], "venue": "In Proceedings of the 19th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Helmert and Domshlak,? \\Q2009\\E", "shortCiteRegEx": "Helmert and Domshlak", "year": 2009}, {"title": "Flexible abstraction heuristics for optimal sequential planning", "author": ["M. Helmert", "P. Haslum", "J. Hoffmann"], "venue": "In Proceedings of the 17th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Helmert et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Helmert et al\\.", "year": 2007}, {"title": "Accuracy of admissible heuristic functions in selected planning domains", "author": ["M. Helmert", "R. Mattm\u00fcller"], "venue": "In Proceedings of the 23rd AAAI Conference on Artificial Intelligence,", "citeRegEx": "Helmert and Mattm\u00fcller,? \\Q2008\\E", "shortCiteRegEx": "Helmert and Mattm\u00fcller", "year": 2008}, {"title": "Understanding Planning Tasks: Domain Complexity and Heuristic Decomposition, Vol. 4929 of Lecture Notes in Computer", "author": ["M. Helmert"], "venue": null, "citeRegEx": "Helmert,? \\Q2008\\E", "shortCiteRegEx": "Helmert", "year": 2008}, {"title": "PSVN: A vector representation for production systems", "author": ["I. Hernadv\u00f6lgyi", "R. Holte"], "venue": "Tech. rep. 1999-07,", "citeRegEx": "Hernadv\u00f6lgyi and Holte,? \\Q1999\\E", "shortCiteRegEx": "Hernadv\u00f6lgyi and Holte", "year": 1999}, {"title": "The role of macros in tractable planning over causal graphs", "author": ["A. Jonsson"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence", "citeRegEx": "Jonsson,? \\Q2007\\E", "shortCiteRegEx": "Jonsson", "year": 2007}, {"title": "State-variable planning under structural restrictions: Algorithms and complexity", "author": ["P. Jonsson", "C. B\u00e4ckstr\u00f6m"], "venue": "Artificial Intelligence,", "citeRegEx": "Jonsson and B\u00e4ckstr\u00f6m,? \\Q1998\\E", "shortCiteRegEx": "Jonsson and B\u00e4ckstr\u00f6m", "year": 1998}, {"title": "Cost-optimal planning with landmarks", "author": ["E. Karpas", "C. Domshlak"], "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence", "citeRegEx": "Karpas and Domshlak,? \\Q2009\\E", "shortCiteRegEx": "Karpas and Domshlak", "year": 2009}, {"title": "Structural patterns heuristics. In ICAPS-07 Workshop on Heuristics for Domain-independent Planning: Progress, Ideas, Limitations", "author": ["M. Katz", "C. Domshlak"], "venue": null, "citeRegEx": "Katz and Domshlak,? \\Q2007\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2007}, {"title": "Structural patterns of tractable sequentially-optimal planning", "author": ["M. Katz", "C. Domshlak"], "venue": "In Proceedings of the 17th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Katz and Domshlak,? \\Q2007\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2007}, {"title": "Structural patterns heuristics via fork decomposition", "author": ["M. Katz", "C. Domshlak"], "venue": "In Proceedings of the 18th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Katz and Domshlak,? \\Q2008\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2008}, {"title": "Structural-pattern databases", "author": ["M. Katz", "C. Domshlak"], "venue": "In Proceedings of the 19th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Katz and Domshlak,? \\Q2009\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2009}, {"title": "Optimal admissible composition of abstraction heuristics", "author": ["M. Katz", "C. Domshlak"], "venue": "Artificial Intelligence,", "citeRegEx": "Katz and Domshlak,? \\Q2010\\E", "shortCiteRegEx": "Katz and Domshlak", "year": 2010}, {"title": "Heuristics - Intelligent Search Strategies for Computer Problem Solving", "author": ["J. Pearl"], "venue": null, "citeRegEx": "Pearl,? \\Q1984\\E", "shortCiteRegEx": "Pearl", "year": 1984}, {"title": "Machine discovery of effective admissible heuristics", "author": ["A. Prieditis"], "venue": "Machine Learning,", "citeRegEx": "Prieditis,? \\Q1993\\E", "shortCiteRegEx": "Prieditis", "year": 1993}, {"title": "Landmarks revisited", "author": ["S. Richter", "M. Helmert", "M. Westphal"], "venue": "In Proceedings of the Twenty-Third National Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Richter et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Richter et al\\.", "year": 2008}, {"title": "A general additive search abstraction", "author": ["F. Yang", "J. Culberson", "R. Holte"], "venue": "Tech. rep. TR07-06,", "citeRegEx": "Yang et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2007}, {"title": "A general theory of additive state space abstractions", "author": ["F. Yang", "J. Culberson", "R. Holte", "U. Zahavi", "A. Felner"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Yang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 9, "context": "as pattern database heuristics (Edelkamp, 2001) and merge-and-shrink heuristics (Helmert, Haslum, & Hoffmann, 2007).", "startOffset": 31, "endOffset": 47}, {"referenceID": 9, "context": "Over the years, PDB heuristics have been shown to be very effective in several hard search problems, including cost-optimal planning (Culberson & Schaeffer, 1998; Edelkamp, 2001; Felner, Korf, & Hanan, 2004; Haslum, Botea, Helmert, Bonet, & Koenig, 2007).", "startOffset": 133, "endOffset": 254}, {"referenceID": 22, "context": "1 The more recent merge-andshrink abstractions generalize PDB heuristics to overcome the latter limitation (Helmert et al., 2007).", "startOffset": 107, "endOffset": 129}, {"referenceID": 18, "context": "Following the type of analysis suggested by Helmert and Mattm\u00fcller (2008), we formally analyze the asymptotic performance ratio of the fork-decomposition heuristics and prove that their worst-case accuracy on selected domains is comparable with that of (even parametric) state-of-the-art admissible heuristics.", "startOffset": 44, "endOffset": 74}, {"referenceID": 10, "context": "This does not necessarily apply to symbolic PDBs which, on some tasks, may exponentially reduce the PDB\u2019s representation (Edelkamp, 2002).", "startOffset": 121, "endOffset": 137}, {"referenceID": 29, "context": "This work is a revision and extension of the formulation and results presented by Katz and Domshlak (2008, 2009), which in turn is based on ideas first sketched also by Katz and Domshlak (2007a).", "startOffset": 82, "endOffset": 195}, {"referenceID": 18, "context": "Figure 1: Logistics-style example adapted from Helmert (2006) and illustrated in (a).", "startOffset": 47, "endOffset": 62}, {"referenceID": 18, "context": "To illustrate various constructs, we use a slight variation of a Logistics-style example from Helmert (2006). This example is depicted in Figure 1a, and in sas+ it has", "startOffset": 94, "endOffset": 109}, {"referenceID": 9, "context": "Many recent works on cost-optimal planning are based on additive ensembles of admissible heuristics, and this includes critical-path heuristics (Haslum, Bonet, & Geffner, 2005; Coles, Fox, Long, & Smith, 2008), pattern database heuristics (Edelkamp, 2001; Haslum et al., 2007), and landmark heuristics (Karpas & Domshlak, 2009; Helmert & Domshlak, 2009).", "startOffset": 239, "endOffset": 276}, {"referenceID": 16, "context": "Many recent works on cost-optimal planning are based on additive ensembles of admissible heuristics, and this includes critical-path heuristics (Haslum, Bonet, & Geffner, 2005; Coles, Fox, Long, & Smith, 2008), pattern database heuristics (Edelkamp, 2001; Haslum et al., 2007), and landmark heuristics (Karpas & Domshlak, 2009; Helmert & Domshlak, 2009).", "startOffset": 239, "endOffset": 276}, {"referenceID": 35, "context": "Our definition of abstraction resembles that of Prieditis (1993), and right from the beginning we specify a more general notion of additive abstraction.", "startOffset": 48, "endOffset": 65}, {"referenceID": 18, "context": "Hence, in particular, Definition 2 generalizes the notion of abstraction by Helmert et al. (2007) by replacing the condition of preserving individual transitions and their labels, that is, (\u03b1(s), l, \u03b1(s\u2032)) if (s, l, s\u2032), with a weaker condition stated in Eq.", "startOffset": 76, "endOffset": 98}, {"referenceID": 18, "context": "Hence, in particular, Definition 2 generalizes the notion of abstraction by Helmert et al. (2007) by replacing the condition of preserving individual transitions and their labels, that is, (\u03b1(s), l, \u03b1(s\u2032)) if (s, l, s\u2032), with a weaker condition stated in Eq. 1. The reader, of course, may well ask whether the generality of the condition in Eq. 1 beyond the condition of Helmert et al. (2007) really delivers any practical gain, and later we show that the answer to this question is affirmative.", "startOffset": 76, "endOffset": 393}, {"referenceID": 9, "context": "To further illustrate the connection between abstractions and admissible heuristics, consider three well-known mechanisms for devising admissible planning heuristics: delete relaxation (Bonet & Geffner, 2001), critical-path relaxation (Haslum & Geffner, 2000),2 and pattern database heuristics (Edelkamp, 2001).", "startOffset": 294, "endOffset": 310}, {"referenceID": 2, "context": "In any event, however, the abstraction \u3008T+, \u03b1+\u3009 does not induce a heuristic in terms of Definition 3 because computing h+(s) is known to be NP-hard (Bylander, 1994).", "startOffset": 148, "endOffset": 164}, {"referenceID": 13, "context": "Inspired by the (similarly named) domain-specific heuristics for search problems such as (n2 \u2212 1)-puzzles or Rubik\u2019s Cube (Culberson & Schaeffer, 1998; Hernadv\u00f6lgyi & Holte, 1999; Felner et al., 2004), PDB heuristics have been successfully exploited in domain-independent planning as well (Edelkamp, 2001, 2002; Haslum et al.", "startOffset": 122, "endOffset": 200}, {"referenceID": 16, "context": ", 2004), PDB heuristics have been successfully exploited in domain-independent planning as well (Edelkamp, 2001, 2002; Haslum et al., 2007).", "startOffset": 96, "endOffset": 139}, {"referenceID": 11, "context": "The key decision in constructing PDBs is what sets of variables the problem is projected to (Edelkamp, 2006; Haslum et al., 2007).", "startOffset": 92, "endOffset": 129}, {"referenceID": 16, "context": "The key decision in constructing PDBs is what sets of variables the problem is projected to (Edelkamp, 2006; Haslum et al., 2007).", "startOffset": 92, "endOffset": 129}, {"referenceID": 9, "context": ", 2004), PDB heuristics have been successfully exploited in domain-independent planning as well (Edelkamp, 2001, 2002; Haslum et al., 2007). The key decision in constructing PDBs is what sets of variables the problem is projected to (Edelkamp, 2006; Haslum et al., 2007). However, apart from that need to automatically select good projections, the two limitations of PDB heuristics are the size of the abstract space S\u03b1 and its dimensionality. First, the number of abstract states should be small enough to allow reachability analysis in S\u03b1 by exhaustive search. Moreover, an O(1) bound on |S\u03b1| is typically set explicitly to fit the time and memory limitations of the system. Second, since PDB abstractions are projections, the explicit constraint on |S\u03b1| implies a fixed-dimensionality constraint |V \u03b1| = O(1). In planning tasks with, informally, many alternative resources, this limitation is a pitfall. For instance, suppose {\u03a0i}i=1 is a sequence of Logistics problems of growing size with |Vi| = i. If each package in \u03a0i can be transported by some \u0398(i) vehicles, then starting from some i, h\u03b1 will not account at all for movements of vehicles essential for solving \u03a0i (Helmert & Mattm\u00fcller, 2008). Aiming at preserving the attractiveness of the PDB heuristic while eliminating the bottleneck of fixed dimensionality, Helmert et al. (2007) have generalized the methodology of Dr\u00e4ger, Finkbeiner, and Podelski (2006) and introduced the so called merge-and-shrink (MS) abstractions for planning.", "startOffset": 97, "endOffset": 1344}, {"referenceID": 9, "context": ", 2004), PDB heuristics have been successfully exploited in domain-independent planning as well (Edelkamp, 2001, 2002; Haslum et al., 2007). The key decision in constructing PDBs is what sets of variables the problem is projected to (Edelkamp, 2006; Haslum et al., 2007). However, apart from that need to automatically select good projections, the two limitations of PDB heuristics are the size of the abstract space S\u03b1 and its dimensionality. First, the number of abstract states should be small enough to allow reachability analysis in S\u03b1 by exhaustive search. Moreover, an O(1) bound on |S\u03b1| is typically set explicitly to fit the time and memory limitations of the system. Second, since PDB abstractions are projections, the explicit constraint on |S\u03b1| implies a fixed-dimensionality constraint |V \u03b1| = O(1). In planning tasks with, informally, many alternative resources, this limitation is a pitfall. For instance, suppose {\u03a0i}i=1 is a sequence of Logistics problems of growing size with |Vi| = i. If each package in \u03a0i can be transported by some \u0398(i) vehicles, then starting from some i, h\u03b1 will not account at all for movements of vehicles essential for solving \u03a0i (Helmert & Mattm\u00fcller, 2008). Aiming at preserving the attractiveness of the PDB heuristic while eliminating the bottleneck of fixed dimensionality, Helmert et al. (2007) have generalized the methodology of Dr\u00e4ger, Finkbeiner, and Podelski (2006) and introduced the so called merge-and-shrink (MS) abstractions for planning.", "startOffset": 97, "endOffset": 1420}, {"referenceID": 9, "context": ", 2004), PDB heuristics have been successfully exploited in domain-independent planning as well (Edelkamp, 2001, 2002; Haslum et al., 2007). The key decision in constructing PDBs is what sets of variables the problem is projected to (Edelkamp, 2006; Haslum et al., 2007). However, apart from that need to automatically select good projections, the two limitations of PDB heuristics are the size of the abstract space S\u03b1 and its dimensionality. First, the number of abstract states should be small enough to allow reachability analysis in S\u03b1 by exhaustive search. Moreover, an O(1) bound on |S\u03b1| is typically set explicitly to fit the time and memory limitations of the system. Second, since PDB abstractions are projections, the explicit constraint on |S\u03b1| implies a fixed-dimensionality constraint |V \u03b1| = O(1). In planning tasks with, informally, many alternative resources, this limitation is a pitfall. For instance, suppose {\u03a0i}i=1 is a sequence of Logistics problems of growing size with |Vi| = i. If each package in \u03a0i can be transported by some \u0398(i) vehicles, then starting from some i, h\u03b1 will not account at all for movements of vehicles essential for solving \u03a0i (Helmert & Mattm\u00fcller, 2008). Aiming at preserving the attractiveness of the PDB heuristic while eliminating the bottleneck of fixed dimensionality, Helmert et al. (2007) have generalized the methodology of Dr\u00e4ger, Finkbeiner, and Podelski (2006) and introduced the so called merge-and-shrink (MS) abstractions for planning. MS abstractions are homomorphisms that generalize PDB abstractions by allowing for more flexibility in selection of pairs of states to be contracted. The problem\u2019s state space is viewed as the synchronized product of its projections onto the single state variables. Starting with all such \u201catomic\u201d abstractions, this product can be computed by iteratively composing two abstract spaces, replacing them with their product. While in a PDB the size of the abstract space S\u03b1 is controlled by limiting the number of product compositions, in MS abstractions it is controlled by interleaving the iterative composition of projections with abstraction of the partial composites. Helmert et al. (2007) have proposed a concrete strategy for this interleaved abstraction/refinement scheme and empirically demonstrated the power of the merge-and-shrink abstraction heuristics.", "startOffset": 97, "endOffset": 2190}, {"referenceID": 2, "context": "The pitfall, however, is that implicit abstraction heuristics correspond to tractable fragments of optimal planning, and the palette of such known fragments is extremely limited (B\u00e4ckstr\u00f6m & Nebel, 1995; Bylander, 1994; Jonsson & B\u00e4ckstr\u00f6m, 1998; Jonsson, 2007; Katz & Domshlak, 2007b).", "startOffset": 178, "endOffset": 285}, {"referenceID": 26, "context": "The pitfall, however, is that implicit abstraction heuristics correspond to tractable fragments of optimal planning, and the palette of such known fragments is extremely limited (B\u00e4ckstr\u00f6m & Nebel, 1995; Bylander, 1994; Jonsson & B\u00e4ckstr\u00f6m, 1998; Jonsson, 2007; Katz & Domshlak, 2007b).", "startOffset": 178, "endOffset": 285}, {"referenceID": 34, "context": "Informally, this decomposition can be seen as a sequential application of two kinds of task transformations: dropping preconditions (Pearl, 1984) and (certain form of) breaking actions with conjunctive effects into single-effect actions.", "startOffset": 132, "endOffset": 145}, {"referenceID": 3, "context": "In fact, recent results by Chen and Gimenez (2008) show that planning for any sas+ fragment characterized by any nontrivial form of causal graph is NP-hard.", "startOffset": 27, "endOffset": 51}, {"referenceID": 5, "context": "While the hardness of optimal planning for problems with fork and inverted fork causal graphs casts a shadow on the relevance of fork decompositions, a closer look at the proofs of the corresponding hardness results of Domshlak and Dinitz (2001) and Helmert (2003, 2004) reveals that they in particular rely on root variables having large domains.", "startOffset": 219, "endOffset": 246}, {"referenceID": 22, "context": "In fact, the shrinking step of the algorithm for building the merge-and-shrink abstractions is precisely a variable domain abstraction for meta-variables constructed in the merging steps (Helmert et al., 2007).", "startOffset": 187, "endOffset": 209}, {"referenceID": 20, "context": "Hence, we have implemented three additive fork-decomposition heuristics, h, h, and h, within the standard heuristic forward search framework of the Fast Downward planner (Helmert, 2006) using the A\u2217 algorithm with full duplicate elimination.", "startOffset": 170, "endOffset": 185}, {"referenceID": 18, "context": "\u201d We make a comparison with two baseline approaches, namely \u201cblind A\u2217\u201d with heuristic value 0 for goal states and 1 otherwise, and A\u2217 with the hmax heuristic (Bonet & Geffner, 2001), as well as with state-of-the-art abstraction heuristics, represented by the mergeand-shrink abstractions of Helmert et al. (2007). The latter were constructed under the", "startOffset": 291, "endOffset": 313}, {"referenceID": 14, "context": "We also compare to the Gamer (Edelkamp & Kissmann, 2009) and HSPF (Haslum, 2008) planners, the winner and the runner-up at the sequential optimization track of IPC-2008.", "startOffset": 66, "endOffset": 80}, {"referenceID": 14, "context": "These four (baseline and merge-and-shrink) heuristics were implemented by Helmert et al. (2007) within the same planning system as our fork-decomposition heuristics, allowing for a fairly unbiased comparison.", "startOffset": 74, "endOffset": 96}, {"referenceID": 15, "context": "These days h-partitions are being adopted by various optimal planners using criticalpath heuristics hm for m > 1 (Haslum et al., 2005), landmark heuristics hL and hLA (Karpas & Domshlak, 2009), and PDB and merge-and-shrink abstraction heuristics (Edelkamp, 2001; Helmert et al.", "startOffset": 113, "endOffset": 134}, {"referenceID": 9, "context": ", 2005), landmark heuristics hL and hLA (Karpas & Domshlak, 2009), and PDB and merge-and-shrink abstraction heuristics (Edelkamp, 2001; Helmert et al., 2007).", "startOffset": 119, "endOffset": 157}, {"referenceID": 22, "context": ", 2005), landmark heuristics hL and hLA (Karpas & Domshlak, 2009), and PDB and merge-and-shrink abstraction heuristics (Edelkamp, 2001; Helmert et al., 2007).", "startOffset": 119, "endOffset": 157}, {"referenceID": 22, "context": "This per-node efficiency provides the merge-and-shrink heuristics with impressive practical effectiveness on numerous IPC domains (Helmert et al., 2007).", "startOffset": 130, "endOffset": 152}, {"referenceID": 18, "context": "However, as rightfully noted by Helmert and Mattm\u00fcller (2008), such evaluations almost never lead to absolute statements of the type \u201cHeuristic h is well-suited for solving problems from benchmark suite X,\u201d but only to relative statements of the type \u201cHeuristic h expands fewer nodes than heuristic h\u2032 on benchmark suite X.", "startOffset": 32, "endOffset": 62}, {"referenceID": 18, "context": "However, as rightfully noted by Helmert and Mattm\u00fcller (2008), such evaluations almost never lead to absolute statements of the type \u201cHeuristic h is well-suited for solving problems from benchmark suite X,\u201d but only to relative statements of the type \u201cHeuristic h expands fewer nodes than heuristic h\u2032 on benchmark suite X.\u201d Moreover, one would probably like to obtain formal evidence of the effectiveness of a heuristic before proceeding with its implementation, especially for very complicated heuristic procedures such as those underlying the proofs of Theorems 7 and 8. Our formal analysis of the effectiveness of the fork-decomposition heuristics using the methodology suggested and exploited by Helmert and Mattm\u00fcller was motivated primarily by this desire for formal evidence. Given a planning domain D and heuristic h, Helmert and Mattm\u00fcller (2008) consider the asymptotic performance ratio of h in D.", "startOffset": 32, "endOffset": 857}, {"referenceID": 18, "context": "Table 4: Performance ratios of multiple heuristics in selected planning domains; ratios for h+, hk, hPDB, hPDB add are by Helmert and Mattm\u00fcller (2008).", "startOffset": 122, "endOffset": 152}, {"referenceID": 18, "context": "Helmert and Mattm\u00fcller (2008) study the asymptotic performance ratio of some standard admissible heuristics on a set of well-known benchmark domains from the first four IPCs.", "startOffset": 0, "endOffset": 30}, {"referenceID": 2, "context": "\u2022 The h+ estimate corresponds to the optimal cost of solving the well-known \u201cdelete relaxation\u201d of the original planning task, which is generally NP-hard to compute (Bylander, 1994).", "startOffset": 165, "endOffset": 181}, {"referenceID": 18, "context": "Blocksworld Arguments similar to those of Helmert and Mattm\u00fcller (2008) for hPDB add .", "startOffset": 42, "endOffset": 72}, {"referenceID": 18, "context": "3 of Helmert (2008) we have", "startOffset": 5, "endOffset": 20}], "year": 2010, "abstractText": "State-space search with explicit abstraction heuristics is at the state of the art of costoptimal planning. These heuristics are inherently limited, nonetheless, because the size of the abstract space must be bounded by some, even if a very large, constant. Targeting this shortcoming, we introduce the notion of (additive) implicit abstractions, in which the planning task is abstracted by instances of tractable fragments of optimal planning. We then introduce a concrete setting of this framework, called fork-decomposition, that is based on two novel fragments of tractable cost-optimal planning. The induced admissible heuristics are then studied formally and empirically. This study testifies for the accuracy of the fork decomposition heuristics, yet our empirical evaluation also stresses the tradeoff between their accuracy and the runtime complexity of computing them. Indeed, some of the power of the explicit abstraction heuristics comes from precomputing the heuristic function offline and then determining h(s) for each evaluated state s by a very fast lookup in a \u201cdatabase.\u201d By contrast, while fork-decomposition heuristics can be calculated in polynomial time, computing them is far from being fast. To address this problem, we show that the time-per-node complexity bottleneck of the fork-decomposition heuristics can be successfully overcome. We demonstrate that an equivalent of the explicit abstraction notion of a \u201cdatabase\u201d exists for the fork-decomposition abstractions as well, despite their exponential-size abstract spaces. We then verify empirically that heuristic search with the \u201cdatabased\u201d fork-decomposition heuristics favorably competes with the state of the art of cost-optimal planning.", "creator": "TeX"}}}