{"id": "1401.3872", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2014", "title": "Second-Order Consistencies", "abstract": "In this paper, we propose a comprehensive study of second-order consistencies (i.e., consistencies identifying inconsistent pairs of values) for constraint satisfaction. We build a full picture of the relationships existing between four basic second-order consistencies, namely path consistency (PC), 3-consistency (3C), dual consistency (DC) and 2-singleton arc consistency (2SAC), as well as their conservative and strong variants. Interestingly, dual consistency is an original property that can be established by using the outcome of the enforcement of generalized arc consistency (GAC), which makes it rather easy to obtain since constraint solvers typically maintain GAC during search. On binary constraint networks, DC is equivalent to PC, but its restriction to existing constraints, called conservative dual consistency (CDC), is strictly stronger than traditional conservative consistencies derived from path consistency, namely partial path consistency (PPC) and conservative path consistency (CPC). After introducing a general algorithm to enforce strong (C)DC, we present the results of an experimentation over a wide range of benchmarks that demonstrate the interest of (conservative) dual consistency. In particular, we show that enforcing (C)DC before search clearly improves the performance of MAC (the algorithm that maintains GAC during search) on several binary and non-binary structured problems.", "histories": [["v1", "Thu, 16 Jan 2014 05:09:30 GMT  (920kb)", "http://arxiv.org/abs/1401.3872v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["christophe lecoutre", "stephane cardon", "julien vion"], "accepted": false, "id": "1401.3872"}, "pdf": {"name": "1401.3872.pdf", "metadata": {"source": "CRF", "title": "Second-Order Consistencies", "authors": ["Christophe Lecoutre", "St\u00e9phane Cardon", "Julien Vion"], "emails": ["lecoutre@cril.fr", "cardon@cril.fr", "julien.vion@univ-valenciennes.fr"], "sections": [{"heading": null, "text": "We provide a complete picture of the relationships between four basic second-order consistencies, namely path consistency (PC), 3-consistency (3C), dual consistency (DC) and 2-singleton arc consistency (2SAC), as well as their conservative and strong variants. Interestingly, dual consistency is an original property that can be obtained by applying the result of enforcing general arc consistency (GAC), which makes it fairly easy, since constraint solvers typically maintain GAC during the search. In binary constraint networks, DC is equivalent to PC, but its limitation to existing constraints, called conservative dual consistency (CDC), is strictly stronger than traditional conservative consistencies derived from path consistency (PPC) and conservative path consistency (CPC)."}, {"heading": "1. Introduction", "text": "In fact, most people who have lived and worked in the United States for the past three decades are not able to play by the rules. (...) Most of them are able to play by the rules. (...) Most of them are able to play by the rules. (...) Most of them are able to play by the rules. (...) Most of them are not able to play by the rules. (...) Most of them are not able to play by the rules. (...) Most of them are able to play by the rules. (...) Most of them are not able to play by the rules. (...) Most of them are not able to play by the rules. (...) Most of them are not able to play by the rules. (...)"}, {"heading": "2. Technical Background", "text": "This section provides technical background information on constraint networks and consistency."}, {"heading": "2.1 Constraint Networks", "text": "This year it is more than ever before."}, {"heading": "2.2 Consistencies", "text": "It is a general property of a CN consistency. If a consistency of that consistency leads to a CN-P, we say that P is more consistent than the CN consistency. If a consistency of that consistency is not consistent, then a consistency of that consistency is nogood-identifying iff, the reason why a CN consistency is not consistent is that some consistency that is not consistent in P is identified as globally inconsistent. Such consistency corresponds to (newly identified) nogoods and is referred to as consistent (on P). A kth consistency is a nogood-identifying consistency that allows the identification of nogoods of size k, where k-1 is an integer. kth-order consistency should not be confused with k-consistency (Freuder, 1978, 1982)."}, {"heading": "3. Second-Order Consistencies", "text": "In this section, we present second-order consistencies. First, we start with the most famous: path consistency. Then, we clarify some aspects of path consistency that are sometimes misrepresented in the literature, and introduce their well-known restricted forms. Finally, we introduce 3-consistency, double consistency, and 2-sheet consistency, as well as their conservative and strong variations."}, {"heading": "3.1 Path Consistency", "text}, {"heading": "3.2 Deep in Path Consistency", "text": "A first natural question is: Can we limit our attention to graph paths (see definition 1)? The answer is given by the following observation: 1. For some CNs, the following properties are not equivalent: (a) every graph is consistent (b), (b) every graph is consistent (b), every graph is consistent (b), every graph is consistent (b), every graph is consistent (b), every graph is consistent (b). Now, if we limit our attention to graph paths, they consist only of the variables x and y (for example < x, y, y >, y)."}, {"heading": "3.3 Additional Second-Order Consistencies", "text": "In this section we introduce second-order consistencies that are defined independently of path consistency. First, we remember two consistent consistencies (3C, Freuder, 1978).Definition 7 (3-consistency).Definition P is a consistent consistency (x, a), (y, b), (y, b), (y, c), is locally consistent. \u2022 P is 3-consistent iff any locally consistent consistency iff, iff there is a value c in the domain of every third variable z of P that {(x, a), (z, c)} is locally consistent."}, {"heading": "4. Relationships between Second-Order Consistencies", "text": "This section examines the qualitative relationships between the second-order consistencies that we have presented, namely path consistency, 3-consistency, dual consistency, 2-singleton arc consistency and their conservative and strong variants. This section consists of three parts (subsections). We start with relationships between second-order fundamental consistencies (PC, 3C, DC, 2SAC) and then focus on relationships, including conservative constraints (PPC, CPC, C3C, CDC, C2SAC). Finally, we conclude with strong second-order consistencies (sPC, s3C, sDC, s2SAC, sPPC, sCPC, sC3C, sCDC, sC2SAC). In our previous work (Lecoutre et al., 2007a, 2007b), our study was limited to binary CNs. In this essay, we generalize our results to CNs of any consistency, although some results are specific to CNs (if no CNs are specified)."}, {"heading": "4.1 Results on Basic Second-Order Consistencies", "text": "We start with the strongest (basic) second order consistency of this paper, namely 2SAC = DC (DC = DC).Proposition 6. 2SAC is strictly stronger than DC and strictly stronger than 3C.Proof. Let P be a CN and I = {(x, a), (y, b)} be a local consistent consistency on P | tre, if I am DC inconsistent, then either (y, b) or (x, a) GAC (P | y = b), which necessarily implies a GAC consistency on P (P = a, y = b). Consequently, I am 2SAC inconsistent, and it follows that 2SAC is stronger than DC. On the other hand, if I am 3CAC consistent then we are GAC (P)."}, {"heading": "4.2 Results on Conservative Second-Order Consistencies", "text": "A first immediate result is that conservative consistencies are strictly made weaker than their unrestricted forms. However, it is worth noting that (strong) PPC is correspondingly stronger than (strong) PC on binary convex CNs with triangulated constraints (Bliek & Sam-Haroud, 1999). Proposition 10. 2SAC, DC, 3C and PC are each strictly stronger than C2SAC, CDC, C3C and PPC + CPC.Proof. By definition, conservative consistencies are weaker. Strict consistency is demonstrated by Figure 8, which shows a binary CN that is C2SAC consistent (and CDC consistent, C3C consistent, PPC consistent) but not PC consistent (and not 3C consistent, not 2SAC consistent).Proposition 11. PC, DC and 3C are not comparable to C2C."}, {"heading": "4.3 Results on Strong Second-Order Consistencies", "text": "Before examining the existing relationships between strong variants of second-order consistency, we note that, in the binary case, asserting AC on a path-consistent CN is sufficient to obtain a strong path-consistent CN. This well-known fact is also generally true for DC, CDC, 2SAC, and C2SAC. We define any local-consistent instantiation as consistent (P). We consider any local-consistent instantiation to be consistent (P)."}, {"heading": "5. An Algorithm to Enforce s(C)DC", "text": "These algorithms apply to both binary and non-binary CNs. These algorithms are referred to as sCDC1 when used to enforce sCDC. This additional strength is used to exploit the CDC checks used to enforce CDC.Algorithm 1: sCDC1 / sDC1 (P): Boolean Input / Output: a CN P; sCDC + CDC) or sDC Result: true iff P is strong (conservative) dual-consistent P GAC (P) / / GAC is initially enforced."}, {"heading": "6. Experimental Results", "text": "In order to show the practical interest in strong second order consistencies, especially s (C) DC, we conducted several extensive experiments with Oracle Java 6 VMs running on a cluster of Intel Xeon 3,0GHz with 1GiB RAM under Linux. To do this, we implemented sCPC, sCDC and sDC algorithms in our Constraint Solver AbsCon. These implementations are sCPC8, directly derived from PC8 (Chmeiss & J\u00e9gou, 1998), sCDC1 and sDC1, which correspond with algorithm 1 with Learnpart and Learnpart respectively. Some refinements of the algorithm sDC1, as suggested by Lecoutre et al. (2007b) Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Script, Scri"}, {"heading": "6.1 Preprocessing Performance on Random Problems", "text": "Random CNs are generated using Model B (Gent, MacIntyre, Prosser, Smith, & Walsh, 2001) to meet five parameters: the number of variables n, the size of domains d, the consistency of constraints r (r = 2 in our experiment), the density \u03b4, 7, and the density t (proportion of tuples prohibited by any constraint).Figure 14 provides some quantitative information about the relative strength of the CNC, sCPC, sCDC, and sDC (= sPC) consistency to random binary CNs with n = 50 variables and d {10, 50} values per domain. Each plot in the numbers represents the position of the phase transition of a given consistency for the instances generated; there are 50 instances that CDs are generated, and remember that the phase transition occurs of a consistency."}, {"heading": "6.2 Impact of Second-Order Consistency Preprocessing on MAC", "text": "It is about the question of whether and to what extent it is actually about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, and in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way and in which it is about a way, in which it is about a way and in which it is about a way, in which it is about a way, in which it is about a way and in which it is about a way in which it is about a way and in which it is about a way, in which it is about a way and in which it is about which it is about a way and in which it is about a way and in which it is about which it is about a way and in which it is about which it is about a way, and in which it is about which it is about which it is about which it is about which it is about a way and in which it is about which it is about which it is about a way and in which it is about which it is about which it is about which it is about a way and in which it is about which it is about which it is about a way and in which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about a way and which it is about which it is about which it is about which it is about which is about which it is about which it is about which it is about which it is about which is about which"}, {"heading": "7. Conclusion", "text": "To this end, we have studied the theoretical relationships that exist between four basic second-order consistencies (and their variants), and we have shown that some of them can be reasonably enforced prior to the search. However, since in the next generation of constraint solvers, several theoretical outcomes correlate global consistency with second-order consistency (e.g. strong 3-consistency), this should increase the importance of second-order consistency. In practice, there are some advantages of using (conservative) dual consistency. Algorithms to enforce strong (C) DC are relatively easy to implement and efficient, as highly optimized underlying GAC algorithms increase consistency. In practice, there are some advantages of using (conservative) dual consistency. Algorithms to enforce strong (C) DC consistencies are relatively easy to implement and efficient because they are used in pre-processing."}, {"heading": "Acknowledgments", "text": "This essay is an extended revised version of previous work (Lecoutre et al., 2007a, 2007b). We would like to thank the anonymous reviewers for their constructive comments."}], "references": [{"title": "Maintaining knowledge about temporal intervals", "author": ["J. Allen"], "venue": "Communications of the ACM,", "citeRegEx": "Allen,? \\Q1983\\E", "shortCiteRegEx": "Allen", "year": 1983}, {"title": "The essence of constraint propagation", "author": ["K. Apt"], "venue": "Theoretical Computer Science,", "citeRegEx": "Apt,? \\Q1999\\E", "shortCiteRegEx": "Apt", "year": 1999}, {"title": "Principles of Constraint Programming", "author": ["K. Apt"], "venue": null, "citeRegEx": "Apt,? \\Q2003\\E", "shortCiteRegEx": "Apt", "year": 2003}, {"title": "Extending Forward Checking", "author": ["F. Bacchus"], "venue": "In Proceedings of CP\u201900,", "citeRegEx": "Bacchus,? \\Q2000\\E", "shortCiteRegEx": "Bacchus", "year": 2000}, {"title": "Improving domain filtering using restricted path consistency", "author": ["P. Berlandier"], "venue": "In Proceedings of IEEE-CAIA\u201995", "citeRegEx": "Berlandier,? \\Q1995\\E", "shortCiteRegEx": "Berlandier", "year": 1995}, {"title": "Constraint propagation", "author": ["C. Bessiere"], "venue": "In Handbook of Constraint Programming,", "citeRegEx": "Bessiere,? \\Q2006\\E", "shortCiteRegEx": "Bessiere", "year": 2006}, {"title": "Apprentissage de contraintes globales implicites", "author": ["C. Bessiere", "R. Coletta", "T. Petit"], "venue": "In Proceedings of JFPC\u201905,", "citeRegEx": "Bessiere et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2005}, {"title": "Optimal and suboptimal singleton arc consistency algorithms", "author": ["C. Bessiere", "R. Debruyne"], "venue": "In Proceedings of IJCAI\u201905,", "citeRegEx": "Bessiere and Debruyne,? \\Q2005\\E", "shortCiteRegEx": "Bessiere and Debruyne", "year": 2005}, {"title": "Theoretical analysis of singleton arc consistency and its extensions", "author": ["C. Bessiere", "R. Debruyne"], "venue": "Artificial Intelligence,", "citeRegEx": "Bessiere and Debruyne,? \\Q2008\\E", "shortCiteRegEx": "Bessiere and Debruyne", "year": 2008}, {"title": "On Forward Checking for non-binary constraint satisfaction", "author": ["C. Bessiere", "P. Meseguer", "E. Freuder", "J. Larrosa"], "venue": "Artificial Intelligence,", "citeRegEx": "Bessiere et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2002}, {"title": "MAC and combined heuristics: two reasons to forsake FC (and CBJ?) on hard problems", "author": ["C. Bessiere", "J. R\u00e9gin"], "venue": "In Proceedings of CP\u201996,", "citeRegEx": "Bessiere and R\u00e9gin,? \\Q1996\\E", "shortCiteRegEx": "Bessiere and R\u00e9gin", "year": 1996}, {"title": "Domain filtering consistencies for non-binary constraints", "author": ["C. Bessiere", "K. Stergiou", "T. Walsh"], "venue": "Artificial Intelligence,", "citeRegEx": "Bessiere et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2008}, {"title": "Path consistency on triangulated constraint graphs", "author": ["C. Bliek", "D. Sam-Haroud"], "venue": "In Proceedings of IJCAI\u201999,", "citeRegEx": "Bliek and Sam.Haroud,? \\Q1999\\E", "shortCiteRegEx": "Bliek and Sam.Haroud", "year": 1999}, {"title": "Boosting systematic search by weighting constraints", "author": ["F. Boussemart", "F. Hemery", "C. Lecoutre", "L. Sais"], "venue": "In Proceedings of ECAI\u201904,", "citeRegEx": "Boussemart et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Boussemart et al\\.", "year": 2004}, {"title": "Support inference for generic filtering", "author": ["F. Boussemart", "F. Hemery", "C. Lecoutre", "L. Sais"], "venue": "In Proceedings of CP\u201904,", "citeRegEx": "Boussemart et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Boussemart et al\\.", "year": 2004}, {"title": "Efficient path-consistency propagation", "author": ["A. Chmeiss", "P. J\u00e9gou"], "venue": "International Journal on Artificial Intelligence Tools,", "citeRegEx": "Chmeiss and J\u00e9gou,? \\Q1998\\E", "shortCiteRegEx": "Chmeiss and J\u00e9gou", "year": 1998}, {"title": "Characterising tractable constraints", "author": ["M. Cooper", "D. Cohen", "P. Jeavons"], "venue": "Artificial Intelligence,", "citeRegEx": "Cooper et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Cooper et al\\.", "year": 1994}, {"title": "Using pivot consistency to decompose and solve functional CSPs", "author": ["P. David"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "David,? \\Q1995\\E", "shortCiteRegEx": "David", "year": 1995}, {"title": "Consistances locales pour les probl\u00c3\u013ames de satisfaction de contraintes de grande taille", "author": ["R. Debruyne"], "venue": "Ph.D. thesis,", "citeRegEx": "Debruyne,? \\Q1998\\E", "shortCiteRegEx": "Debruyne", "year": 1998}, {"title": "A strong local consistency for constraint satisfaction", "author": ["R. Debruyne"], "venue": "In Proceedings of ICTAI\u201999,", "citeRegEx": "Debruyne,? \\Q1999\\E", "shortCiteRegEx": "Debruyne", "year": 1999}, {"title": "From restricted path consistency to max-restricted path consistency", "author": ["R. Debruyne", "C. Bessiere"], "venue": "In Proceedings of CP\u201997,", "citeRegEx": "Debruyne and Bessiere,? \\Q1997\\E", "shortCiteRegEx": "Debruyne and Bessiere", "year": 1997}, {"title": "Some practical filtering techniques for the constraint satisfaction problem", "author": ["R. Debruyne", "C. Bessiere"], "venue": "In Proceedings of IJCAI\u201997,", "citeRegEx": "Debruyne and Bessiere,? \\Q1997\\E", "shortCiteRegEx": "Debruyne and Bessiere", "year": 1997}, {"title": "Domain filtering consistencies", "author": ["R. Debruyne", "C. Bessiere"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Debruyne and Bessiere,? \\Q2001\\E", "shortCiteRegEx": "Debruyne and Bessiere", "year": 2001}, {"title": "From local to global consistency", "author": ["R. Dechter"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter,? \\Q1992\\E", "shortCiteRegEx": "Dechter", "year": 1992}, {"title": "Constraint processing", "author": ["R. Dechter"], "venue": null, "citeRegEx": "Dechter,? \\Q2003\\E", "shortCiteRegEx": "Dechter", "year": 2003}, {"title": "Network-based heuristics for constraint satisfaction problems", "author": ["R. Dechter", "J. Pearl"], "venue": "Artificial Intelligence,", "citeRegEx": "Dechter and Pearl,? \\Q1988\\E", "shortCiteRegEx": "Dechter and Pearl", "year": 1988}, {"title": "Synthesizing constraint expressions", "author": ["E. Freuder"], "venue": "Communication of the ACM,", "citeRegEx": "Freuder,? \\Q1978\\E", "shortCiteRegEx": "Freuder", "year": 1978}, {"title": "A sufficient condition for backtrack-free search", "author": ["E. Freuder"], "venue": "Journal of the ACM,", "citeRegEx": "Freuder,? \\Q1982\\E", "shortCiteRegEx": "Freuder", "year": 1982}, {"title": "Completing quasigroups or latin squares: a structured graph coloring problem", "author": ["C. Gomes", "D. Shmoys"], "venue": "In Proceedings of Computational Symposium on Graph Coloring and Generalization", "citeRegEx": "Gomes and Shmoys,? \\Q2002\\E", "shortCiteRegEx": "Gomes and Shmoys", "year": 2002}, {"title": "Domain permutation reduction for constraint satisfaction problems", "author": ["M. Green", "D. Cohen"], "venue": "Artificial Intelligence,", "citeRegEx": "Green and Cohen,? \\Q2008\\E", "shortCiteRegEx": "Green and Cohen", "year": 2008}, {"title": "Decomposition of domains based on the micro-structure of finite constraint-satisfaction problems", "author": ["P. J\u00e9gou"], "venue": "In Proceedings of AAAI\u201993,", "citeRegEx": "J\u00e9gou,? \\Q1993\\E", "shortCiteRegEx": "J\u00e9gou", "year": 1993}, {"title": "Unrestricted nogood recording in CSP search", "author": ["G. Katsirelos", "F. Bacchus"], "venue": "In Proceedings of CP\u201903,", "citeRegEx": "Katsirelos and Bacchus,? \\Q2003\\E", "shortCiteRegEx": "Katsirelos and Bacchus", "year": 2003}, {"title": "Optimization of simple tabular reduction for table constraints", "author": ["C. Lecoutre"], "venue": "In Proceedings of CP\u201908,", "citeRegEx": "Lecoutre,? \\Q2008\\E", "shortCiteRegEx": "Lecoutre", "year": 2008}, {"title": "Constraint networks: techniques and algorithms. ISTE/Wiley", "author": ["C. Lecoutre"], "venue": null, "citeRegEx": "Lecoutre,? \\Q2009\\E", "shortCiteRegEx": "Lecoutre", "year": 2009}, {"title": "Backjump-based techniques versus conflict-directed heuristics", "author": ["C. Lecoutre", "F. Boussemart", "F. Hemery"], "venue": "In Proceedings of ICTAI\u201904,", "citeRegEx": "Lecoutre et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Lecoutre et al\\.", "year": 2004}, {"title": "A greedy approach to establish singleton arc consistency", "author": ["C. Lecoutre", "S. Cardon"], "venue": "In Proceedings of IJCAI\u201905,", "citeRegEx": "Lecoutre and Cardon,? \\Q2005\\E", "shortCiteRegEx": "Lecoutre and Cardon", "year": 2005}, {"title": "Conservative dual consistency", "author": ["C. Lecoutre", "S. Cardon", "J. Vion"], "venue": "In Proceedings of AAAI\u201907,", "citeRegEx": "Lecoutre et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Lecoutre et al\\.", "year": 2007}, {"title": "Path consistency by dual consistency", "author": ["C. Lecoutre", "S. Cardon", "J. Vion"], "venue": "In Proceedings of CP\u201907,", "citeRegEx": "Lecoutre et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Lecoutre et al\\.", "year": 2007}, {"title": "A study of residual supports in arc consistency", "author": ["C. Lecoutre", "F. Hemery"], "venue": "In Proceedings of IJCAI\u201907,", "citeRegEx": "Lecoutre and Hemery,? \\Q2007\\E", "shortCiteRegEx": "Lecoutre and Hemery", "year": 2007}, {"title": "Lightweight detection of variable symmetries for constraint satisfaction", "author": ["C. Lecoutre", "S. Tabary"], "venue": "In Proceedings of ICTAI\u201909,", "citeRegEx": "Lecoutre and Tabary,? \\Q2009\\E", "shortCiteRegEx": "Lecoutre and Tabary", "year": 2009}, {"title": "Enforcing arc consistency using bitwise operations", "author": ["C. Lecoutre", "J. Vion"], "venue": "Constraint Programming Letters,", "citeRegEx": "Lecoutre and Vion,? \\Q2008\\E", "shortCiteRegEx": "Lecoutre and Vion", "year": 2008}, {"title": "Consistency in networks of relations", "author": ["A. Mackworth"], "venue": "Artificial Intelligence,", "citeRegEx": "Mackworth,? \\Q1977\\E", "shortCiteRegEx": "Mackworth", "year": 1977}, {"title": "Relational consistency algorithms and their application in finding subgraph and graph isomorphisms", "author": ["J. McGregor"], "venue": "Information Sciences,", "citeRegEx": "McGregor,? \\Q1979\\E", "shortCiteRegEx": "McGregor", "year": 1979}, {"title": "Good old discrete relaxation", "author": ["R. Mohr", "G. Masini"], "venue": "In Proceedings of ECAI\u201988,", "citeRegEx": "Mohr and Masini,? \\Q1988\\E", "shortCiteRegEx": "Mohr and Masini", "year": 1988}, {"title": "Network of constraints : Fundamental properties and applications to picture processing", "author": ["U. Montanari"], "venue": "Information Science,", "citeRegEx": "Montanari,? \\Q1974\\E", "shortCiteRegEx": "Montanari", "year": 1974}, {"title": "Constraint relaxation may be perfect", "author": ["U. Montanari", "F. Rossi"], "venue": "Artificial Intelligence,", "citeRegEx": "Montanari and Rossi,? \\Q1991\\E", "shortCiteRegEx": "Montanari and Rossi", "year": 1991}, {"title": "Contradicting conventional wisdom in constraint satisfaction", "author": ["D. Sabin", "E. Freuder"], "venue": "In Proceedings of CP\u201994,", "citeRegEx": "Sabin and Freuder,? \\Q1994\\E", "shortCiteRegEx": "Sabin and Freuder", "year": 1994}, {"title": "Variable and value ordering heuristics for the job shop scheduling constraint satisfaction problem", "author": ["N. Sadeh", "M. Fox"], "venue": "Artificial Intelligence,", "citeRegEx": "Sadeh and Fox,? \\Q1996\\E", "shortCiteRegEx": "Sadeh and Fox", "year": 1996}, {"title": "Nogood recording for static and dynamic constraint satisfaction problems", "author": ["T. Schiex", "G. Verfaillie"], "venue": "International Journal of Artificial Intelligence Tools,", "citeRegEx": "Schiex and Verfaillie,? \\Q1994\\E", "shortCiteRegEx": "Schiex and Verfaillie", "year": 1994}, {"title": "Inverse consistencies for non-binary constraints", "author": ["K. Stergiou", "T. Walsh"], "venue": "In Proceedings of ECAI\u201906,", "citeRegEx": "Stergiou and Walsh,? \\Q2006\\E", "shortCiteRegEx": "Stergiou and Walsh", "year": 2006}, {"title": "Benchmarks for basic scheduling problems", "author": ["E. Taillard"], "venue": "European journal of operations research,", "citeRegEx": "Taillard,? \\Q1993\\E", "shortCiteRegEx": "Taillard", "year": 1993}, {"title": "Foundations of constraint satisfaction", "author": ["E. Tsang"], "venue": null, "citeRegEx": "Tsang,? \\Q1993\\E", "shortCiteRegEx": "Tsang", "year": 1993}, {"title": "On the minimality and decomposability of constraint networks", "author": ["P. van Beek"], "venue": "In Proceedings of AAAI\u201992,", "citeRegEx": "Beek,? \\Q1992\\E", "shortCiteRegEx": "Beek", "year": 1992}, {"title": "Set intersection and consistency in constraint networks", "author": ["Y. Zhang", "R. Yap"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Zhang and Yap,? \\Q2006\\E", "shortCiteRegEx": "Zhang and Yap", "year": 2006}], "referenceMentions": [{"referenceID": 41, "context": "The most studied second-order consistency is path consistency (PC, Montanari, 1974; Mackworth, 1977).", "startOffset": 62, "endOffset": 100}, {"referenceID": 0, "context": "Indeed, for some classes of interval algebra, path consistency \u2013 adapted to temporal constraint networks (Allen, 1983) \u2013 is sufficient to decide satisfiability.", "startOffset": 105, "endOffset": 118}, {"referenceID": 0, "context": "Indeed, for some classes of interval algebra, path consistency \u2013 adapted to temporal constraint networks (Allen, 1983) \u2013 is sufficient to decide satisfiability. Another possible reason for the low practical interest for path consistency, in the discrete constraint satisfaction field, is that path consistency enforcement modifies constraint relations, and more importantly, modifies the structure of the constraint graph. When a pair of values (a, b) for the variables (x, y) is found to be path-inconsistent, this information is recorded within the constraint network; if there is no constraint binding x with y, a new one is inserted, thus changing the constraint graph. For example, the instance scen-11 of the radio link frequency assignment problem (Cabon, de Givry, Lobjois, Schiex, & Warners, 1999) involves 680 variables and 4,103 constraints. Enforcing a second-order consistency on this network could at worst create (680 2 ) \u2212 4,103 = 226,757 new constraints, which would be really counter-productive both in time and in space. The main apparent drawback of path consistency can be avoided by adopting a conservative approach, in which the search for inconsistent pairs of values is restricted to existing constraints. This is called conservative path consistency (CPC, Debruyne, 1999) when restricted to paths of length 2 in the constraint graph, and partial path consistency (PPC, Bliek & Sam-Haroud, 1999) when restricted to paths of arbitrary length in the constraint graph; CPC and PPC are equivalent when the constraint graph is triangulated. In this paper, we study path consistency as well as three other basic second-order consistencies that are 3-consistency (3C, Freuder, 1978), dual consistency (DC, Lecoutre, Cardon, & Vion, 2007a) and 2-singleton arc consistency (2SAC, Bessiere, Coletta, & Petit, 2005). On binary constraint networks, DC is equivalent to PC \u2013 McGregor (1979) proposed an DC-like algorithm to establish (strong) path consistency \u2013 but when considering weaker conservative variants, we show that conservative dual consistency (CDC) is strictly stronger than PPC and CPC: CDC can filter out more inconsistent pairs of values (from existing constraints) than PPC or CPC.", "startOffset": 106, "endOffset": 1903}, {"referenceID": 2, "context": "constraints of similar scope \u2013 CNs are normalized (Apt, 2003; Bessiere, 2006).", "startOffset": 50, "endOffset": 77}, {"referenceID": 5, "context": "constraints of similar scope \u2013 CNs are normalized (Apt, 2003; Bessiere, 2006).", "startOffset": 50, "endOffset": 77}, {"referenceID": 24, "context": "In many cases, a CSP instance can be solved by using a combination of search and inferential simplification (Dechter, 2003; Lecoutre, 2009).", "startOffset": 108, "endOffset": 139}, {"referenceID": 33, "context": "In many cases, a CSP instance can be solved by using a combination of search and inferential simplification (Dechter, 2003; Lecoutre, 2009).", "startOffset": 108, "endOffset": 139}, {"referenceID": 30, "context": "On the other hand, the compatibility (hyper)graph, also called micro-structure (J\u00e9gou, 1993), associated with a normalized CN P contains one vertex per value of P and one (hyper)edge per constraint support.", "startOffset": 79, "endOffset": 92}, {"referenceID": 5, "context": "11 in the work of Bessiere (2006) \u2013 when they have the same canonical form, i.", "startOffset": 18, "endOffset": 34}, {"referenceID": 5, "context": "This formalism is also related to previous works about local consistencies and rules iteration (e.g., see Montanari & Rossi, 1991; Apt, 1999, 2003; Bessiere, 2006).", "startOffset": 95, "endOffset": 163}, {"referenceID": 33, "context": "(Lecoutre, 2009) Any stable nogood-identifying consistency is well-behaved.", "startOffset": 0, "endOffset": 16}, {"referenceID": 5, "context": "Stability under union can also be proved for a domain-filtering consistency, thus guaranteeing a fixed point (Bessiere, 2006).", "startOffset": 109, "endOffset": 125}, {"referenceID": 1, "context": ", see Montanari & Rossi, 1991; Apt, 1999, 2003; Bessiere, 2006). It is usually possible to enforce \u03c6 on a CN P by computing the greatest \u03c6-consistent CN smaller than or equal to P , while preserving the set of solutions. A consistency is well-behaved when for any CN P \u2208P, the set {P \u2032 \u2208P | P \u2032 is \u03c6-consistent and P \u2032 P} admits a greatest element, denoted by \u03c6(P ), that is equivalent to P and called the \u03c6-closure of P . Enforcing \u03c6 on a CN P means computing \u03c6(P ), and an algorithm that enforces \u03c6 is called a \u03c6-algorithm. The property of stability is useful for proving that a nogood-identifying consistency is well-behaved. A nogood-identifying consistency \u03c6 is stable iff for every CN P \u2208P, every CN P \u2032 \u2208P such that P \u2032 P and every \u03c6-inconsistent instantiation I on P , we have either I \u2208 P\u0303 \u2032 or I is \u03c6-inconsistent on P \u2032; the second condition for stability given by Lecoutre (2009) holds necessarily because of the choice of the poset in this paper.", "startOffset": 31, "endOffset": 892}, {"referenceID": 40, "context": "Introduced by Montanari (1974), its definition has sometimes been misinterpreted.", "startOffset": 14, "endOffset": 31}, {"referenceID": 40, "context": "Introduced by Montanari (1974), its definition has sometimes been misinterpreted. The problem arises around the definition of a \u201cpath\u201d, which must be understood as any sequence of variables, and not as a sequence of variables that corresponds to a path in the constraint graph. This ambiguity probably comes from Montanari\u2019s original paper, in which reasoning from path consistency is achieved with respect to complete (or completion of) constraint graphs, although a footnote in the original paper indicates: \u201cA path in a network is any sequence of vertices. A vertex can occur more than once in a path even in consecutive positions.\u201d A precise definition of path is thus required. The definition of path below is used by Montanari (1974), Mackworth (1977) and Debruyne (1998), while the definition of graphpath is used, for example, by Tsang (1993) or Bessiere (2006).", "startOffset": 14, "endOffset": 740}, {"referenceID": 38, "context": "The definition of path below is used by Montanari (1974), Mackworth (1977) and Debruyne (1998), while the definition of graphpath is used, for example, by Tsang (1993) or Bessiere (2006).", "startOffset": 58, "endOffset": 75}, {"referenceID": 17, "context": "The definition of path below is used by Montanari (1974), Mackworth (1977) and Debruyne (1998), while the definition of graphpath is used, for example, by Tsang (1993) or Bessiere (2006).", "startOffset": 79, "endOffset": 95}, {"referenceID": 17, "context": "The definition of path below is used by Montanari (1974), Mackworth (1977) and Debruyne (1998), while the definition of graphpath is used, for example, by Tsang (1993) or Bessiere (2006).", "startOffset": 79, "endOffset": 168}, {"referenceID": 5, "context": "The definition of path below is used by Montanari (1974), Mackworth (1977) and Debruyne (1998), while the definition of graphpath is used, for example, by Tsang (1993) or Bessiere (2006). A path is an arbitrary sequence of variables, and a graph-path is defined to be a sequence of variables such that a binary constraint exists between any two variables adjacent in the sequence.", "startOffset": 171, "endOffset": 187}, {"referenceID": 41, "context": "We can now introduce the historical definition of path consistency (PC, Montanari, 1974; Mackworth, 1977).", "startOffset": 67, "endOffset": 105}, {"referenceID": 22, "context": "Simply, non-binary constraints are ignored, as Dechter (2003) or Bessiere (2006) do, since in Definition 2, only pairs of variables are considered.", "startOffset": 47, "endOffset": 62}, {"referenceID": 5, "context": "Simply, non-binary constraints are ignored, as Dechter (2003) or Bessiere (2006) do, since in Definition 2, only pairs of variables are considered.", "startOffset": 65, "endOffset": 81}, {"referenceID": 44, "context": "(Montanari, 1974) A CN P is path-consistent iff every 2-length path of P (i.", "startOffset": 0, "endOffset": 17}, {"referenceID": 47, "context": "For example, Definition 3-11 in a work of Tsang (1993) links PC to graph-paths, and Proposition 3.", "startOffset": 42, "endOffset": 55}, {"referenceID": 5, "context": "39 in a work of Bessiere (2006) links PC to 2-length graph-paths, but Observations 1 and 2 (with Figure 4) show that this is not equivalent to Montanari\u2019s definition.", "startOffset": 16, "endOffset": 32}, {"referenceID": 51, "context": "As additional weak forms of path consistency, we find directional path consistency (Dechter & Pearl, 1988; Tsang, 1993) and pivot consistency (David, 1995), but they will not be discussed in this paper.", "startOffset": 83, "endOffset": 119}, {"referenceID": 17, "context": "As additional weak forms of path consistency, we find directional path consistency (Dechter & Pearl, 1988; Tsang, 1993) and pivot consistency (David, 1995), but they will not be discussed in this paper.", "startOffset": 142, "endOffset": 155}, {"referenceID": 32, "context": "We now introduce dual consistency (Lecoutre et al., 2007a). Dual consistency, whose idea has initially been used by McGregor (1979), records inconsistent pairs of values identified by successive singleton checks.", "startOffset": 35, "endOffset": 132}, {"referenceID": 42, "context": "This could be predicted since McGregor proposed an AC-based algorithm to establish sPC (1979). We show this in 2 steps.", "startOffset": 30, "endOffset": 94}, {"referenceID": 33, "context": "Such a procedure is guaranteed to compute AC (P|x=a) (cf. Apt, 2003; Lecoutre, 2009).", "startOffset": 53, "endOffset": 84}, {"referenceID": 33, "context": "It has been shown that the schema of previous propositions does not hold for CPC and PPC (Lecoutre, 2009).", "startOffset": 89, "endOffset": 105}, {"referenceID": 5, "context": "This means that just after the last instruction of each iteration of the foreach loop starting at Line 2 of Algorithm 2, P is such that after assigning again a to x, applying forward checking (any non-binary version, Bessiere, Meseguer, Freuder, & Larrosa, 2002) is enough to enforce GAC: we only need to consider binary constraints involving x and delete values that are not consistent with (x, a). This is studied in a paper by Lecoutre et al. (2007b). Finally, it is worthwhile to mention that Algorithm 1 does not require specific data structure.", "startOffset": 217, "endOffset": 454}, {"referenceID": 32, "context": "In AbsCon, the algorithms used to enforce (G)AC are AC3bit+rm (Lecoutre & Vion, 2008) for binary constraints, GAC3rm (Lecoutre & Hemery, 2007) for non-binary constraints defined in intension, and STR2 (Lecoutre, 2008) for non-binary constraints in extension.", "startOffset": 201, "endOffset": 217}, {"referenceID": 29, "context": "algorithm sDC1, as proposed by Lecoutre et al. (2007b), are also possible but will not be considered in this paper, mainly because such optimizations are rather marginal (a speedup of 10% on some problems) with respect to our main concern: showing that enforcing s(C)DC before search may pay off.", "startOffset": 31, "endOffset": 55}, {"referenceID": 3, "context": "ehi: series of SAT instances converted into CSP using the dual method as described by Bacchus (2000); there are 7 values per domain and constraints are binary.", "startOffset": 86, "endOffset": 101}, {"referenceID": 3, "context": "ehi: series of SAT instances converted into CSP using the dual method as described by Bacchus (2000); there are 7 values per domain and constraints are binary. langford: series from the (generalized version of the) Langford problem; domains of variables are usually not small (up to 150 values) and constraints are binary. os-taillard: series of Open-Shop scheduling instances generated by J. Vion from Taillard\u2019s paper (1993); domains are large and constraints are binary.", "startOffset": 86, "endOffset": 427}, {"referenceID": 3, "context": "ehi: series of SAT instances converted into CSP using the dual method as described by Bacchus (2000); there are 7 values per domain and constraints are binary. langford: series from the (generalized version of the) Langford problem; domains of variables are usually not small (up to 150 values) and constraints are binary. os-taillard: series of Open-Shop scheduling instances generated by J. Vion from Taillard\u2019s paper (1993); domains are large and constraints are binary. primes: series of instances involving prime numbers generated by M. van Dongen; domains of variables are not small and some constraints are non-binary. qcp / qwh: series from the Quasi-group Completion Problem (QCP) and the Quasi-group With Holes problem (QWH); domains are not very large and constraints are binary. queensKnights: series of academic instances with queens and knights to be put on a chessboard (Boussemart et al., 2004a); some domains are large and constraints are binary. radar: realistic radar surveillance problems generated following the model of the Swedish institute of computer science (SICS); domains are small and constraints non-binary. renault-mod: series of instances generated by K. Stergiou from a Renault Megane configuration problem; domains are diverse and constraints are non-binary. sadeh: series containing the five sets of job-shop scheduling instances studied by Sadeh & Fox (1996); domains are large and constraints are binary.", "startOffset": 86, "endOffset": 1395}, {"referenceID": 13, "context": "Table 3 confirms that MAC equipped with the heuristic dom/wdeg is far more robust than dom/ddeg, as initially claimed by Boussemart et al. (2004a). As a result, on some series, enforcing a strong consistency (i.", "startOffset": 121, "endOffset": 147}], "year": 2011, "abstractText": "In this paper, we propose a comprehensive study of second-order consistencies (i.e., consistencies identifying inconsistent pairs of values) for constraint satisfaction. We build a full picture of the relationships existing between four basic second-order consistencies, namely path consistency (PC), 3-consistency (3C), dual consistency (DC) and 2-singleton arc consistency (2SAC), as well as their conservative and strong variants. Interestingly, dual consistency is an original property that can be established by using the outcome of the enforcement of generalized arc consistency (GAC), which makes it rather easy to obtain since constraint solvers typically maintain GAC during search. On binary constraint networks, DC is equivalent to PC, but its restriction to existing constraints, called conservative dual consistency (CDC), is strictly stronger than traditional conservative consistencies derived from path consistency, namely partial path consistency (PPC) and conservative path consistency (CPC). After introducing a general algorithm to enforce strong (C)DC, we present the results of an experimentation over a wide range of benchmarks that demonstrate the interest of (conservative) dual consistency. In particular, we show that enforcing (C)DC before search clearly improves the performance of MAC (the algorithm that maintains GAC during search) on several binary and non-binary structured problems.", "creator": "TeX"}}}