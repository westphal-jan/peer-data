{"id": "1401.4604", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2014", "title": "Completeness Guarantees for Incomplete Ontology Reasoners: Theory and Practice", "abstract": "To achieve scalability of query answering, the developers of Semantic Web applications are often forced to use incomplete OWL 2 reasoners, which fail to derive all answers for at least one query, ontology, and data set. The lack of completeness guarantees, however, may be unacceptable for applications in areas such as health care and defence, where missing answers can adversely affect the applications functionality. Furthermore, even if an application can tolerate some level of incompleteness, it is often advantageous to estimate how many and what kind of answers are being lost.", "histories": [["v1", "Sat, 18 Jan 2014 21:10:03 GMT  (775kb)", "http://arxiv.org/abs/1401.4604v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["bernardo cuenca grau", "boris motik", "giorgos stoilos", "ian horrocks"], "accepted": false, "id": "1401.4604"}, "pdf": {"name": "1401.4604.pdf", "metadata": {"source": "CRF", "title": "Completeness Guarantees for Incomplete Ontology Reasoners: Theory and Practice", "authors": ["Bernardo Cuenca Grau", "Boris Motik", "Giorgos Stoilos", "Ian Horrocks"], "emails": ["bernardo.cuenca.grau@cs.ox.ac.uk", "boris.motik@cs.ox.ac.uk", "giorgos.stoilos@cs.ox.ac.uk", "ian.horrocks@cs.ox.ac.uk"], "sections": [{"heading": null, "text": "In this paper, we present a novel logic-based framework that allows one to verify whether a reason term is complete for a given query Q and ontology T - that is, whether reason is guaranteed to calculate all answers to Q w.r.t. T and any data set A. Since ontologies and typical queries are often defined at the time of application design, our approach allows application developers to verify whether a reason term that is commonly known to be incomplete is actually complete for the types of input relevant to the application. We also present a technique that can be used in query Q, ontology T and reason terms R1 and R2 that meet certain assumptions to determine whether for each data set A of reason term R1 calculates more answers to Q w.r.t. T and A than the reason term R2. This allows application developers to select the reason term with the highest degree of completeness, and completeness for the application T."}, {"heading": "1. Introduction", "text": "Efficient management and retrieval of large amounts of data is a core problem for a growing range of applications in fields as diverse as biology (Sidhu, Dillon, Chang, & Sidhu, 2005), medicine (Golbreich, Zhang, & Bodenreider, 2006), geography (Goodwin, 2005), astronomy (Derriere, Richard, & Preite-Martinez, 2006), agriculture (Soergel, Lauser, Liang, Fisseha, Keizer, & Katz, 2004), and defense (Lacy, Aviles, Fraser, Gerber, Mulvehill, & Gaskill, 2005).To facilitate interoperability, such applications are often served by standard data models and query languages. RDF in particular (Hayes, 2004) provides a standard model for semistructured data, SPARQARQL (Prud'hommeaux & Seaborne, 2008) is a standard language for RDF, and ontology languages such as OWL."}, {"heading": "2. Preliminaries", "text": "In this section we briefly introduce Description Logics (DLs) (Baader, McGuinness, Nardi, & Patel-Schneider, 2002) - a family of knowledge representation formalisms underlying the ontological languages OWL and OWL 2. We describe descriptive logic in the broader context of first-order logic, as many of our results apply to any theory of first order. We then introduce the Datalog \u00b1, the Datalog and the Datalog Languages, and define the syntax and semantics of conjunctive query associations (UCQs). Finally, we introduce the terms UCQ, Datalog and Datalog \u00b1 that underlie many of our techniques."}, {"heading": "2.1 Description Logics and First-Order Logic", "text": "Most of the results in this essay are function-free. The atoms that are false (true) are all written (true), not all interpretations. However, our work is motivated by descriptive logic and ontologies, so we use DL terminology throughout the essay; for example, we often talk about TBoxes and ABoxes instead of first-order theories and fact sets. All definitions in this essay are implicitly parameterized by a signature. Any predicate of zero-kind is commonly referred to as propository symbols; the terms of variables, first-order terms are formulas and individuals (commonly referred to as first-order constants); any predicate is associated with a nonnegative action; predicate of zero-kind is commonly referred to as propository symbols; the terms, first-order formulas formulas are defined as formulas, and first-order sentences are defined as common (Fitting, 1996); we do not consider any symbols of function to be and proceed from this article."}, {"heading": "2.2 Datalog\u00b1,\u2228", "text": "Next, we present a fragment of first-order logic called Datalog \u00b1, an extension of the Datalog \u00b1 r of Cal, Gottlob, Lukasiewicz, Marnette, and Pieris (2010).A Datalog \u00b1, a rule (or generally just a rule) r is a formula of form (6) in which each Bj is an atom different from any other, whose free variables are contained in x, and whose free variables are contained in x. [B1, y1) = 1, and, for each 1 \u2264 i, formula i (x, yi) is a conjunction of atoms different from those whose free variables are contained in x. [B1, yi)."}, {"heading": "2.3 Queries", "text": "To achieve a high degree of general validity, we define a query Q = Finite set Q = Q Q = Q Q (Q = Q) Q (Q = Q) Q (Q = Q = Q) Q (Q = Q) Q (Q = Q) Q (Q) Q (Q) Q (Q = Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (A = Q = Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q, Q (Q) Q (Q) Q, Q (Q) Q (Q), Q (Q), Q (Q), Q (Q), Q (Q), Q (Q) Q (Q) Q, Q (Q) Q, Q (Q) Q (Q) Q, Q (Q) Q (Q), Q (Q) Q, Q (Q), Q (Q), Q (Q) Q (Q), Q (Q) Q (Q), Q (Q) Q (Q), Q (Q), Q (Q) Q (Q, Q (Q), Q (Q), Q (Q), Q (Q, Q (Q), Q (Q), Q (Q (Q), Q (Q), Q (Q (Q), Q (Q (Q), Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q (Q), Q (Q (Q), Q (Q (Q), Q (Q, Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q (Q), Q (Q), Q (Q (Q), Q (Q), Q (Q (Q), Q (Q (Q), Q (Q (Q), Q), Q (Q), Q (Q (Q), Q (Q (Q), Q (Q"}, {"heading": "2.4 Rewritings", "text": "The question that arises is to what extent it is actually a matter of a way in which it is a matter of a way in which it is a matter of a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about a way in which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is not only about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is about which it is not"}, {"heading": "3. Completeness Guarantees for Incomplete Reasoners", "text": "Our results are not limited to a particular description logic, but apply to all TBoxes that meet the following criterion. Definition 3.1. A TBox T is permitted if a description logic DL exists, so that T is a DL TBox, and both the checking of TBox satisfaction and the answering of Boolean UCQs w.r.t. of any ABox can be decided for DL."}, {"heading": "3.1 Concrete and Abstract Reasoners", "text": "In order to make our results general and independent of specific implementation techniques, we must embrace the notion of an abstract concept of reason as long as its observable behavior can be considered as abstract reason, which encompasses the intended behavior and salent characteristics of a class of concrete concepts of reason. An abstract concept of reason is a computable function that can be used as arbitrary DL-TBox algorithms as long as its observable behavior is considered as abstract concepts.Definition 3.2. An abstract concept of reason is a computable function used as arbitrary DL-TBox algorithms, and either the special dissatisfaction query or an arbitrary UCQ-Q."}, {"heading": "3.2 Completeness of Abstract Reasoners", "text": "Next, we define the central concept of abstract rationality for a given query Q and TBox T. Intuitively, a (Q, T) -complete abstract rationalist is indistinguishable from complete abstract rationalization when it is based on Q, T and an arbitrary ABox A. Definition 3.13 Let's be a description of logic, and let's recognize an abstract rationality for DL."}, {"heading": "3.3 Test Suites", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "3.4 Negative Results", "text": "In Section 3.5 (or Section 3.6, respectively), we identify constraints on a UCQ and a TBox T that guarantee the presence of T test suites for CQ, Tw (or CQ, Ts) and Q. Before presenting these positive results, we first outline the limits of the (Q, T) completeness tests, justifying the constraints we apply in the following sections."}, {"heading": "3.4.1 Monotonicity and Weak Faithfulness", "text": "The question of the causes and the causes of the crisis, which in recent years has repeatedly been placed at the centre of attention, is not only a question of reason, but also a question of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of reason, of"}, {"heading": "3.4.2 Monotonicity and Weak Faithfulness do not Suffice", "text": "Next, we show that (Q, T) -monotonicity and (Q, T) -faithful QQ = -faithful QQ = -faithful QQ = -faithful QQ = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs = -faithful Qs-faithful Qs-faithful and -faithful Qs-faithful-faithful-faithful-recursive-recursive-axiom, which is \"relevant\" to the given query. Example 3.22, however, shows that the concept of \"relevance\" is not reformative, even if it is rather difficult to answer this question:"}, {"heading": "3.5.1 Characterisation of Simple and Exhaustive Test Suites", "text": "Next, we prove that a Q-Test Suite S = S, SQ = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A, Q = A = A, Q = A = A, Q = A = A, A = A = A, A = A = A, Q = A = A, A = A (A = A, A = A, A = A), Q = (A = A, A = A, A = A, A = A, A = A, A = A, A = A, A = A, A = A, A = A (A, A = A, A = A), Q = (A = A, A = A = A, A = A =, A = A =, A = A =, A =, A = A =, A =, A =, A =, A = A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A = A =, A =, A =, A =, A = A =, A =, A =, A = A =, A =, A =, A =, A = A =, A =, A =, A =, A =, A =, A =, A = A = A =, A =, A =, A = A =, A = A = A =, A =, A =, A =, A =, A =, A = A = A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A =, A = A =, A =, A =, A =, A = A =, A =, A =, A =, A = A =, A =, A = A =, A =, A = A =,"}, {"heading": "T , let m be the maximum number of distinct variables occurring in a rule in R, and let I be a set containing all individuals occurring in R, Q, and T , as well as m fresh individuals.", "text": "The complete instantiation of R w.r.t. I is the pair ER, I = Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q (Q = Q) Q) Q (Q = Q) Q (Q = Q) Q (Q) Q = Q) Q (Q = Q) Q (Q) Q) Q (Q = Q) Q (Q) Q (Q) Q = Q) Q (Q) Q (Q) Q (Q) Q = Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q (Q) Q) Q (Q) Q) Q (Q (Q) Q (Q) Q) Q (Q) Q (Q) Q (Q) Q) Q (Q (Q) Q (Q) Q (Q) Q) Q (Q (Q) Q (Q) Q) Q (S (A) Q (A) Q (A) Q (A (A) Q (A) Q (A) Q (A) Q (A) Q (A) Q (A) Q (A) Q (A) Q (A) Q (Q (A) Q (A) Q (A) Q (A) Q ("}, {"heading": "3.5.3 Minimising Exhaustive Test Suites", "text": "In practice, it is clearly advantageous to calculate test suites that are as \"small as possible.\""}, {"heading": "3.7 Dealing with Recursive Axioms", "text": "The negative result in Theorem 3.21 (which applies to both CQ, Tw and CQ, Ts) depends on the presence of a recursive axiom in the TBox; therefore, the positive results in Sections 3.5 and 3.6 require that the input UCQ be rewritable. Entering TBox effectively prohibits recursion in the TBox axioms. Instead of prohibiting recursive axioms, in this section we overcome the limitation of Theorem 3.21 by placing additional demands on abstract argumentators by requiring that they must be first-class reproducible. The latter intuitively means that the behavior of the rationist can be regarded as a complete argumentation in an unknown first-order theory. Such abstract argumentators are unable to partially evaluate recursive axioms, which makes the approach used to prove Theorem 3.21 reproducible."}, {"heading": "3.7.1 First-Order Reproducible Abstract Reasoners", "text": "In fact, it is the case that most of us are able to keep to the rules that they have imposed on themselves. (...) In fact, it is the case that they are able to keep to the rules. (...) In fact, it is the case that they are able to keep to the rules. (...) In fact, it is the case that they are able to keep to the rules. (...) In fact, it is the case that they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. (...) It is as if they are able to outdo themselves. \""}, {"heading": "3.7.2 Simple vs. Non-Simple Test Suites", "text": "The question we have asked ourselves is whether there could be a \"relevant recursive axiom\" that can be easily adapted to other UCQs and TBoxes. Essentially, our result is that there is no T-test suite that is a necessary and sufficient condition for any abstract ratio in CTf; consequently, any T-test suite for CTf and Q is simple.3 We show that any abstract ratio in CTf; consequently, any T-test suite for CTf is exhaustive."}, {"heading": "3.7.3 Testing First-Order Reproducible Abstract Reasoners", "text": "In this section we show how to get a T -Test-Suite}, {"heading": "3.7.4 Testing Ground Queries", "text": "\"For the first time in the last few years, we have been able to create a system that allows us to create a system that allows us to create a system that allows us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that allows us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that enables us to create a system that encryption.\""}, {"heading": "4. Comparing Incomplete Abstract Reasoners", "text": "In this section we examine techniques that, in the face of a query Q and a TQ Box T, allow us to determine whether an abstract question (Q = Q = Q = Q) is answered, whether an abstract question}, {"heading": "4.1 Negative Result", "text": "The following strong result shows that for numerous TBoxes T there is no finite series of ABoxes that can clearly distinguish Q = Q = 2 from the class of all reproducible, monotonous, and highly faithful rationalists. Note, however, that this result is stronger than the negative result in Theorem 3.21, since it applies to a smaller class of abstract rationalists and to all TBoxes that imply at least one concept. Let T be an arbitrary TBox that addresses an atomic role R and atomic concepts A and B in such a way that T | = A B, and leave Q = {B (x) \u2192 Q (x)}. Then there is no finite series of ABoxes that (Q, T) is representative of the class of all sonic, monotonous, strong, and reproducible."}, {"heading": "4.2 Compact Abstract Reasoners", "text": "Theorem 4.7 suggests that we need to make additional assumptions to the abstract arguments 2. Q = Q = Q (Q = Q = Q), which we want to compare with a finite set of ABoxes. In this section we show that representative sets of ABoxes can be calculated in practice if we continue to restrict ourselves to abstract argumentators, which we call (Q, T) -compact. In other words, the behavior of compact argumentators can be simulated by the following process: Select the subset of axioms in the input box that can be edited, and then compress all specific responses w.r.t. The selected fragment of the TBox."}, {"heading": "4.3 Comparing Compact Abstract Reasoners", "text": "In this section we show that a series of AQ boxes, the (Q, T) -Q = Q-Q = Q-Q = Q-Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q = Q-Q-Q-Q = Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q = Q-Q-Q-Q = Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-Q-Q = Q-Q-Q-Q-Q-Q-"}, {"heading": "5. Evaluation", "text": "We implemented our techniques to calculate exhaustive test suites and to compare incomplete concrete argumentation patterns in a prototype tool called SyGENiA.1 Our tool uses REQUIEM to calculate UCQ and data repetitions. 2We considered two evaluation scenarios: The first uses the well-known Lehigh University benchmark (Guo et al., 2005), which consists of a relatively small TBox over an academic domain, 14 test queries and a data generator; the second uses a small version of GALEN (Rector & Rogers, 2006) - a complex ontology commonly used in medical applications.We evaluated the following concrete reasons: Sesame v2.3-prl, 3 DLE-Jena v2.0,4 OWLim v2.9.1,5 Minerva v1.5,6 and Jena v2.6.37 in all its three variants (Micro, Mini and Max)."}, {"heading": "5.1 Computing Exhaustive Test Suites", "text": "With a UCQ and a TBox T, our tool uses REQUIEM to calculate a data catalog that rewrites R for Q and T. If R is a UCQ rewrite, our tool computes a simple test suite either by complete or instantiated instances (see Sections 3.5 and 3.6, respectively); otherwise, the tool computes a non-simple test suite by starting R as described in Section 3.7.3."}, {"heading": "5.1.1 Simple Test Suites", "text": "In fact, most of them will be able to play by the rules they have established over the last five years."}, {"heading": "5.1.2 Non-Simple Test Suites", "text": "As already mentioned, all LUBM queries are rewritable, so we have manually added the following query, for which REQUIEM calculates a recursive rewriting.Q15: Organization (x) \u2192 Q (x) Due to the complex structure of the GALEN TBox, test queries that are not rewritable are easily identifiable.Q5: WestergrenESRProcedure (x) \u2192 Q (x) Q6: ArthroscopicProcedure (x) \u2192 Q (x) Q7: TrueCavity (x) \u2192 Q (x) Q8: BacterialCellWall (x) \u2192 Q (x) The times needed to calculate the test suites and the size of each test suite are shown in Table 5."}, {"heading": "5.2 Completeness Guarantees", "text": "As already discussed, existing concrete argumentation patterns are captured by abstract argumentation patterns that are strongly (Q, T) faithful. Thus, to ensure completeness guarantees for such concrete argumentation patterns, we limited our tests to test suites calculated with instance instances."}, {"heading": "5.2.1 Results for Simple Test Suites", "text": "The first column of the table shows that the questions for which we can all prove completeness are not only on one side, but also on the other. Our results clearly show that the data contained in the LUBM benchmark does not guarantee the completeness of the data. The second column of the table shows that the answers to the questions that are on the other side of the LUBM list are not on the other side. For example: OWLim, Minerva Mini / Micro are complete for all questions that have set LUBM data. (and some of these systems are even complete for the express UOBM benchmark benchmark); these systems were found for certain questions to be incomplete."}, {"heading": "5.2.2 Results for Non-Simple Test Suites", "text": "The results for non-rewritable test queries are summarized in Table 7. The symbol \"\" indicates that the specific founder for the specified query has been found completely. Furthermore, whenever a specific founder failed a series of tests, we tried to prove the incompleteness of the founder, as described in the examples in Section 3.7.2; in all cases we were successful, so that the symbol \"\u00d7\" indicates that the specific founder for a particular query was identified as incomplete. Finally, the symbol \"\u2212\" indicates that the specific founder ran out of memory. In the case of LUBM, we were able to provide completeness guarantees for the Q15 query for OWLim, Jena Micro, DLE-Jena and Jena Max. Note that all of these systems can handle recursive TBox statements, so the completeness for Q15 is not surprising."}, {"heading": "5.3 Comparing Incomplete Concrete Reasoners", "text": "We also implemented the techniques for comparing arguments from Section 4.3. To this end, we modified REQUIEM to calculate subset-closed rewritings, which are then instantiated to obtain a (Q, T) representative set of ABoxes R."}, {"heading": "5.3.1 Tests with LUBM", "text": "As shown in Table 8, representative sets of ABoxes could be calculated for most LUBM queries in only a few seconds. The only exception was Q9, for which REQUIEM did not terminate after deactivating the rule subsummation optimizations.The size of the representative sets ranged between 1 and 777 ABoxes. As expected, representative sets contain more ABoxes than the exhausting test suites for the same query and TBox (see Table 3).All system and query combinations, for which the tests in Section 5.2 identified the system as incomplete, are in Table 9. the table shows the proportion of certain answers that each system returned when applying to the LUBM dataset, the ABoxes in R and the ABoxes in the test suite S, which were used in Section 5.2 to check the complexity of the system.As shown in the table, OWLim and Jenaer Micro displayed the same behavior, and were \"almost complete.\" Sesame, on the other hand, was the least complete for all queries, the answers for certain QR, whereby the QR values indicated the least."}, {"heading": "5.3.2 Tests with GALEN", "text": "As shown in Table 10, representative sets of ABoxes for GALEN should be calculated to explain this sequence in times from 2 to 70 seconds, and each set contains only a small number of ABoxes. For each system and query, Table 11 shows the proportion of certain answers returned by the system to R and the test suite S from Section 5.2. Minerva was the most complete system. Jena Micro was better than DLE-Jena (apart from query Q4), while DLE-Jena and OWLim behaved in almost the same way (again apart from query Q4). As expected, Sesame was the least complete system. Discrepancies between OWLim, Jena Micro, DLE-Jena and Minerva are quite surprising. Theoretically, OWLim and Jena support the same features of OWL; moreover, DLE-Jena is an extension of Jena (Meditskos & Bassiliades, 2008), so DLE-Jena should be at least as complete as Jena, as in the case of UQUM."}, {"heading": "6. Conclusion", "text": "In this paper, we have proposed a theoretical framework and practical techniques for establishing formally provable and algorithmically verifiable completeness guarantees for incomplete ontological argumentation patterns. Our approach deviates radically from ad hoc evaluation based on known benchmarks and provides a solid foundation for establishing a balance between scalability and completeness in practical applications. Moreover, our approach opens numerous and exciting opportunities for future research. For example, our work opens the door to designing ontology-based information systems optimized for a particular class of ontologies, queries, and application-relevant data. Such information systems could maximize the scalability of thinking while ensuring the complexity of query responses, even for rich ontologies and sophisticated queries."}, {"heading": "Acknowledgments", "text": "This is an extended version of the paper \"How Incomplete is your Semantic Web Reasoner?\" by Giorgos Stoilos, Bernardo Cuenca Grau and Ian Horrocks, published at AAAI 2010, and the paper \"Completeness Guarantees for Incomplete Reasoners\" by the same authors, published at ISWC 2010. This research was supported by the EU project SEALS (FP7-ICT-238975) and the EPSRC projects ExODA (EP / H051511 / 1) and HermiT (EP / F065841 / 1). B. Cuenca Grau is supported by a Royal Society University Research Fellowship."}], "references": [{"title": "Quonto: Querying ontologies", "author": ["A. Acciarri", "D. Calvanese", "G. De Giacomo", "D. Lembo", "M. Lenzerini", "M. Palmieri", "R. Rosati"], "venue": "In Proceedings of the 20th National Conference on Artificial Intelligence", "citeRegEx": "Acciarri et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Acciarri et al\\.", "year": 2005}, {"title": "The DL-Lite family and relations", "author": ["A. Artale", "D. Calvanese", "R. Kontchakov", "M. Zakharyaschev"], "venue": "J. Artificial Intelligence Research (JAIR),", "citeRegEx": "Artale et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Artale et al\\.", "year": 2009}, {"title": "The Description Logic Handbook: Theory, implementation and applications", "author": ["F. Baader", "D. McGuinness", "D. Nardi", "P. Patel-Schneider"], "venue": "In Proceedings of the 19th International Joint Conference on AI (IJCAI-05),", "citeRegEx": "Baader et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Baader et al\\.", "year": 2002}, {"title": "OWLIM: A family of scalable semantic repositories", "author": ["B. Bishop", "A. Kiryakov", "D. Ognyanoff", "I. Peikov", "Z. Tashev", "R. Velkov"], "venue": "Semantic Web,", "citeRegEx": "Bishop et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Bishop et al\\.", "year": 2011}, {"title": "Sesame: A generic architecture for storing and querying RDF and RDF Schema", "author": ["J. Broekstra", "A. Kampman", "F. van Harmelen"], "venue": "In Proceedings of the 1st International Semantic Web Conference (ISWC", "citeRegEx": "Broekstra et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Broekstra et al\\.", "year": 2002}, {"title": "Datalog+/-: A family of logical knowledge representation and query languages for new applications", "author": ["A. Cal\u0300\u0131", "G. Gottlob", "T. Lukasiewicz", "B. Marnette", "A. Pieris"], "venue": "In Proc. of the 25th Annual IEEE Symposium on Logic in Computer Science (LICS),", "citeRegEx": "Cal\u0300\u0131 et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Cal\u0300\u0131 et al\\.", "year": 2010}, {"title": "Tractable reasoning and efficient query answering in description logics: The DL-Lite family", "author": ["D. Calvanese", "G. De Giacomo", "D. Lembo", "M. Lenzerini", "R. Rosati"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "Calvanese et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Calvanese et al\\.", "year": 2007}, {"title": "What you always wanted to know about datalog (and never dared to ask)", "author": ["S. Ceri", "G. Gottlob", "L. Tanca"], "venue": "IEEE Trans. Knowledge Data Engineering,", "citeRegEx": "Ceri et al\\.,? \\Q1989\\E", "shortCiteRegEx": "Ceri et al\\.", "year": 1989}, {"title": "Modular Reuse of Ontologies: Theory and Practice", "author": ["B. Cuenca Grau", "I. Horrocks", "Y. Kazakov", "U. Sattler"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Grau et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Grau et al\\.", "year": 2008}, {"title": "OWL 2: The next step for OWL", "author": ["B. Cuenca Grau", "I. Horrocks", "B. Motik", "B. Parsia", "P. Patel-Schneider", "U. Sattler"], "venue": "Journal of Web Semantics (JWS),", "citeRegEx": "Grau et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Grau et al\\.", "year": 2008}, {"title": "An Ontology of Astronomical Object Types for the Virtual Observatory", "author": ["S. Derriere", "A. Richard", "A. Preite-Martinez"], "venue": "In Proc. of the 26th meeting of the IAU: Virtual Observatory in Action: New Science, New Technology, and Next Generation Facilities,", "citeRegEx": "Derriere et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Derriere et al\\.", "year": 2006}, {"title": "RDF support in the virtuoso DBMS", "author": ["O. Erling", "I. Mikhailov"], "venue": "Networked Knowledge - Networked Media,", "citeRegEx": "Erling and Mikhailov,? \\Q2009\\E", "shortCiteRegEx": "Erling and Mikhailov", "year": 2009}, {"title": "First-Order Logic and Automated Theorem Proving, 2nd Edition", "author": ["M. Fitting"], "venue": "Texts in Computer Science. Springer.", "citeRegEx": "Fitting,? 1996", "shortCiteRegEx": "Fitting", "year": 1996}, {"title": "Conjunctive query answering for the description logic SHIQ", "author": ["B. Glimm", "I. Horrocks", "C. Lutz", "U. Sattler"], "venue": "In Proceedings of the International Joint Conference on AI (IJCAI),", "citeRegEx": "Glimm et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Glimm et al\\.", "year": 2007}, {"title": "The Foundational Model of Anatomy in OWL: Experience and Perspectives", "author": ["C. Golbreich", "S. Zhang", "O. Bodenreider"], "venue": "Journal of Web Semantics,", "citeRegEx": "Golbreich et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Golbreich et al\\.", "year": 2006}, {"title": "Experiences of using OWL at the Ordnance Survey", "author": ["J. Goodwin"], "venue": "Proc. of the OWL: Experiences and Directions Workshop (OWLED 2005), Galway, Ireland.", "citeRegEx": "Goodwin,? 2005", "shortCiteRegEx": "Goodwin", "year": 2005}, {"title": "LUBM: A Benchmark for OWL Knowledge Base Systems", "author": ["Y. Guo", "Z. Pan", "J. Heflin"], "venue": "Journal of Web Semantics,", "citeRegEx": "Guo et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Guo et al\\.", "year": 2005}, {"title": "RACER System Description", "author": ["V. Haarslev", "R. M\u00f6ller"], "venue": "Proc. of the 1st Int. Joint Conf. on Automated Reasoning (IJCAR", "citeRegEx": "Haarslev and M\u00f6ller,? \\Q2001\\E", "shortCiteRegEx": "Haarslev and M\u00f6ller", "year": 2001}, {"title": "RDF Semantics", "author": ["P. Hayes"], "venue": "World Wide Web Consortium (W3C) Recommendation.", "citeRegEx": "Hayes,? 2004", "shortCiteRegEx": "Hayes", "year": 2004}, {"title": "From SHIQ and RDF to OWL: the making of a web ontology language", "author": ["I. Horrocks", "P.F. Patel-Schneider", "F. van Harmelen"], "venue": "Journal Web Semantics,", "citeRegEx": "Horrocks et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Horrocks et al\\.", "year": 2003}, {"title": "Owlim-a pragmatic semantic repository for owl", "author": ["A. Kiryakov", "D. Ognyanov", "D. Manov"], "venue": "WISE Workshops,", "citeRegEx": "Kiryakov et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Kiryakov et al\\.", "year": 2005}, {"title": "Experiences Using OWL in Military Applications", "author": ["L. Lacy", "G. Aviles", "K. Fraser", "W. Gerber", "A. Mulvehill", "R. Gaskill"], "venue": "In Proc. of the OWL: Experiences and Directions Workshop (OWLED", "citeRegEx": "Lacy et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Lacy et al\\.", "year": 2005}, {"title": "Conjunctive query answering in the description logic EL using a relational database system", "author": ["C. Lutz", "D. Toman", "F. Wolter"], "venue": "In Proceedings of the 21st International Joint Conference on AI (IJCAI),", "citeRegEx": "Lutz et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lutz et al\\.", "year": 2009}, {"title": "Towards a complete OWL ontology benchmark", "author": ["L. Ma", "Y. Yang", "Z. Qiu", "G.T. Xie", "Y. Pan", "S. Liu"], "venue": "In Proceedings of the 3rd European Semantic Web Conference (ESWC", "citeRegEx": "Ma et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Ma et al\\.", "year": 2006}, {"title": "Jena: Implementing the RDF Model and Syntax Specification", "author": ["McBride", "Brian"], "venue": "International Workshop on the Semantic Web 2001.", "citeRegEx": "McBride and Brian,? 2001", "shortCiteRegEx": "McBride and Brian", "year": 2001}, {"title": "Combining a DL reasoner and a rule engine for improving entailment-based OWL reasoning", "author": ["G. Meditskos", "N. Bassiliades"], "venue": "In Proceedings of the 7th International Semantic Web Conference (ISWC", "citeRegEx": "Meditskos and Bassiliades,? \\Q2008\\E", "shortCiteRegEx": "Meditskos and Bassiliades", "year": 2008}, {"title": "OWL 2 Web Ontology Language Profiles", "author": ["B. Motik", "B. Cuenca Grau", "I. Horrocks", "Z. Wu", "A. Fokoue", "C. Lutz"], "venue": null, "citeRegEx": "Motik et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Motik et al\\.", "year": 2009}, {"title": "Hypertableau Reasoning for Description Logics", "author": ["B. Motik", "R. Shearer", "I. Horrocks"], "venue": "J. Artificial Intelligence Research (JAIR),", "citeRegEx": "Motik et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Motik et al\\.", "year": 2009}, {"title": "Data complexity of query answering in expressive description logics via tableaux", "author": ["M. Ortiz", "D. Calvanese", "T. Eiter"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "Ortiz et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Ortiz et al\\.", "year": 2008}, {"title": "Efficient Query Answering for OWL", "author": ["H. P\u00e9rez-Urbina", "I. Horrocks", "B. Motik"], "venue": "Proceedings of the 8th International Semantic Web Conference (ISWC 2009),", "citeRegEx": "P\u00e9rez.Urbina et al\\.,? \\Q2009\\E", "shortCiteRegEx": "P\u00e9rez.Urbina et al\\.", "year": 2009}, {"title": "Tractable query answering and rewriting under description logic constraints", "author": ["H. P\u00e9rez-Urbina", "B. Motik", "I. Horrocks"], "venue": "Journal of Applied Logic,", "citeRegEx": "P\u00e9rez.Urbina et al\\.,? \\Q2010\\E", "shortCiteRegEx": "P\u00e9rez.Urbina et al\\.", "year": 2010}, {"title": "SPARQL query language for RDF", "author": ["E. Prud\u2019hommeaux", "A. Seaborne"], "venue": "World Wide Web Consortium (W3C)", "citeRegEx": "Prud.hommeaux and Seaborne,? \\Q2008\\E", "shortCiteRegEx": "Prud.hommeaux and Seaborne", "year": 2008}, {"title": "Ontological and practical issues in using a description logic to represent medical concept systems: Experience from galen", "author": ["A.L. Rector", "J. Rogers"], "venue": "Reasoning Web, Second International Summer School", "citeRegEx": "Rector and Rogers,? \\Q2006\\E", "shortCiteRegEx": "Rector and Rogers", "year": 2006}, {"title": "Protein Ontology Development using OWL", "author": ["A. Sidhu", "T. Dillon", "E. Chang", "B.S. Sidhu"], "venue": "In Proc. of the OWL: Experiences and Directions Workshop (OWLED", "citeRegEx": "Sidhu et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Sidhu et al\\.", "year": 2005}, {"title": "Pellet: A practical OWL-DL reasoner", "author": ["E. Sirin", "B. Parsia", "B. Cuenca Grau", "A. Kalyanpur", "Y. Katz"], "venue": "Journal of Web Semantics,", "citeRegEx": "Sirin et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Sirin et al\\.", "year": 2007}, {"title": "Reengineering Thesauri for New Applications: The AGROVOC Example", "author": ["D. Soergel", "B. Lauser", "A. Liang", "F. Fisseha", "J. Keizer", "S. Katz"], "venue": "J. of Digital Information,", "citeRegEx": "Soergel et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Soergel et al\\.", "year": 2004}, {"title": "Implementing an inference engine for rdfs/owl constructs and user-defined rules in oracle", "author": ["Z. Wu", "G. Eadon", "S. Das", "E.I. Chong", "V. Kolovski", "M. Annamalai", "J. Srinivasan"], "venue": "In Proceedings of the 2008 IEEE 24th International Conference on Data Engineering (ICDE", "citeRegEx": "Wu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 15, "context": "Efficient management and querying of large amounts of data is a core problem for a growing range of applications in fields as diverse as biology (Sidhu, Dillon, Chang, & Sidhu, 2005), medicine (Golbreich, Zhang, & Bodenreider, 2006), geography (Goodwin, 2005), astronomy (Derriere, Richard, & Preite-Martinez, 2006), agriculture (Soergel, Lauser, Liang, Fisseha, Keizer, & Katz, 2004), and defence (Lacy, Aviles, Fraser, Gerber, Mulvehill, & Gaskill, 2005).", "startOffset": 244, "endOffset": 259}, {"referenceID": 18, "context": "In particular, RDF (Hayes, 2004) provides a standard model for semistructured data, SPARQL (Prud\u2019hommeaux & Seaborne, 2008) is a standard query language for RDF, and ontology languages such as OWL (Horrocks, Patel-Schneider, & van Harmelen, 2003) and OWL 2 (Cuenca Grau, Horrocks, Motik, Parsia, Patel-Schneider,", "startOffset": 19, "endOffset": 32}, {"referenceID": 23, "context": "University Benchmark (LUBM) (Guo, Pan, & Heflin, 2005) and the University Ontology Benchmark (UOBM) (Ma et al., 2006) have been used for such completeness testing.", "startOffset": 100, "endOffset": 117}, {"referenceID": 6, "context": "For T expressed in OWL 2 QL, a rewriting R can be computed using the algorithm by Calvanese et al. (2007); additionally, the algorithm by P\u00e9rez-Urbina, Motik, and Horrocks (2010) can sometimes compute R even if T is syntactically outside this fragment.", "startOffset": 82, "endOffset": 106}, {"referenceID": 6, "context": "For T expressed in OWL 2 QL, a rewriting R can be computed using the algorithm by Calvanese et al. (2007); additionally, the algorithm by P\u00e9rez-Urbina, Motik, and Horrocks (2010) can sometimes compute R even if T is syntactically outside this fragment.", "startOffset": 82, "endOffset": 179}, {"referenceID": 28, "context": "In many cases, T can be transformed into a datalog\u00b1,\u2228 program using equivalence-preserving transformations; furthermore, the algorithm by P\u00e9rez-Urbina et al. (2010) can in many cases produce a plain datalog rewriting.", "startOffset": 138, "endOffset": 165}, {"referenceID": 12, "context": "The notions of variables, terms, atoms, first-order formulae, and sentences are defined as usual (Fitting, 1996); we do not consider function symbols in this article and we assume all formulae to be function-free.", "startOffset": 97, "endOffset": 112}, {"referenceID": 6, "context": "a TBox T is another query that captures all the information from T that is relevant for answering Q over an arbitrary ABox A (Calvanese et al., 2007; Artale, Calvanese, Kontchakov, & Zakharyaschev, 2009; P\u00e9rez-Urbina et al., 2010).", "startOffset": 125, "endOffset": 230}, {"referenceID": 30, "context": "a TBox T is another query that captures all the information from T that is relevant for answering Q over an arbitrary ABox A (Calvanese et al., 2007; Artale, Calvanese, Kontchakov, & Zakharyaschev, 2009; P\u00e9rez-Urbina et al., 2010).", "startOffset": 125, "endOffset": 230}, {"referenceID": 6, "context": "In practice, UCQs (Calvanese et al., 2007) and datalog (P\u00e9rez-Urbina et al.", "startOffset": 18, "endOffset": 42}, {"referenceID": 30, "context": ", 2007) and datalog (P\u00e9rez-Urbina et al., 2010) are the most widely used target languages for query rewriting.", "startOffset": 20, "endOffset": 47}, {"referenceID": 6, "context": "For example, Calvanese et al. (2007) showed how to compute a UCQ rewriting in cases when T is expressed in a logic from the DL-Lite family, and this approach can be extended to the OWL 2 QL profile of OWL 2 (Motik et al.", "startOffset": 13, "endOffset": 37}, {"referenceID": 6, "context": "For example, Calvanese et al. (2007) showed how to compute a UCQ rewriting in cases when T is expressed in a logic from the DL-Lite family, and this approach can be extended to the OWL 2 QL profile of OWL 2 (Motik et al., 2009a). Similarly, P\u00e9rez-Urbina et al. (2010) proposed an algorithm for computing the simplest possible datalog rewriting when T is expressed in the description logic ELHIO.", "startOffset": 13, "endOffset": 268}, {"referenceID": 6, "context": "In particular, a UCQ rewriting is guaranteed to exist if T is expressed in the DLs underpinning the QL profile of OWL 2 (Motik et al., 2009a; Calvanese et al., 2007); furthermore, as illustrated in Example 3.", "startOffset": 120, "endOffset": 165}, {"referenceID": 0, "context": "In practice, such rewritings can be computed using systems such as QuOnto (Acciarri et al., 2005) and REQUIEM (P\u00e9rez-Urbina et al.", "startOffset": 74, "endOffset": 97}, {"referenceID": 30, "context": ", 2005) and REQUIEM (P\u00e9rez-Urbina et al., 2010).", "startOffset": 20, "endOffset": 47}, {"referenceID": 6, "context": "This goal can be achieved by applying known techniques for minimising UCQ rewritings (Calvanese et al., 2007; P\u00e9rez-Urbina, Horrocks, & Motik, 2009).", "startOffset": 85, "endOffset": 148}, {"referenceID": 16, "context": "The first one uses the well-known Lehigh University Benchmark (LUBM) (Guo et al., 2005), which consists of a relatively small TBox about an academic domain, 14 test queries, and a data generator.", "startOffset": 69, "endOffset": 87}], "year": 2012, "abstractText": "To achieve scalability of query answering, the developers of Semantic Web applications are often forced to use incomplete OWL 2 reasoners, which fail to derive all answers for at least one query, ontology, and data set. The lack of completeness guarantees, however, may be unacceptable for applications in areas such as health care and defence, where missing answers can adversely affect the application\u2019s functionality. Furthermore, even if an application can tolerate some level of incompleteness, it is often advantageous to estimate how many and what kind of answers are being lost. In this paper, we present a novel logic-based framework that allows one to check whether a reasoner is complete for a given query Q and ontology T \u2014that is, whether the reasoner is guaranteed to compute all answers to Q w.r.t. T and an arbitrary data set A. Since ontologies and typical queries are often fixed at application design time, our approach allows application developers to check whether a reasoner known to be incomplete in general is actually complete for the kinds of input relevant for the application. We also present a technique that, given a query Q, an ontology T , and reasoners R1 and R2 that satisfy certain assumptions, can be used to determine whether, for each data set A, reasoner R1 computes more answers to Q w.r.t. T and A than reasoner R2. This allows application developers to select the reasoner that provides the highest degree of completeness forQ and T that is compatible with the application\u2019s scalability requirements. Our results thus provide a theoretical and practical foundation for the design of future ontology-based information systems that maximise scalability while minimising or even eliminating incompleteness of query answers.", "creator": "TeX"}}}