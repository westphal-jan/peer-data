{"id": "1401.4607", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2014", "title": "Reformulating the Situation Calculus and the Event Calculus in the General Theory of Stable Models and in Answer Set Programming", "abstract": "Circumscription and logic programs under the stable model semantics are two well-known nonmonotonic formalisms. The former has served as a basis of classical logic based action formalisms, such as the situation calculus, the event calculus and temporal action logics; the latter has served as a basis of a family of action languages, such as language A and several of its descendants. Based on the discovery that circumscription and the stable model semantics coincide on a class of canonical formulas, we reformulate the situation calculus and the event calculus in the general theory of stable models. We also present a translation that turns the reformulations further into answer set programs, so that efficient answer set solvers can be applied to compute the situation calculus and the event calculus.", "histories": [["v1", "Sat, 18 Jan 2014 21:11:15 GMT  (495kb)", "http://arxiv.org/abs/1401.4607v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["joohyung lee", "ravi palla"], "accepted": false, "id": "1401.4607"}, "pdf": {"name": "1401.4607.pdf", "metadata": {"source": "CRF", "title": "Reformulating the Situation Calculus and the Event Calculus in the General Theory of Stable Models and in Answer Set Programming", "authors": ["Joohyung Lee", "Ravi Palla"], "emails": ["joolee@asu.edu", "Ravi.Palla@asu.edu"], "sections": [{"heading": "1. Introduction", "text": "In fact, most of them are able to determine for themselves what they want and what they want."}, {"heading": "2. Circumscription and First-Order Stable Model Semantics", "text": "We assume the following primitive sentence connectors and quantifiers: \"(falsehood),\" \",\", \",\". \"We understand\" F \"as an abbreviation of\" F, \"\" symbol \"> stands for\" A \"and\" F \"-\" G \"stands for\" F \"(G)."}, {"heading": "2.1 Review: Circumscription", "text": "Let p be a list of different predicate constants p1,.., pn, and let u be a list of different predicate variables u1,..., un. By u \u2264 p we denote the conjunction of the formulas \u0394x (ui (x) \u2192 pi (x)) for all i = 1... n, where x is a list of different object variables whose length corresponds to the nature of the pi expression form u < p stands for (u \u2264 p) (p \u2264 u). First: http: / / decreasoner.sourceforge.netinstance, if p and q are uniform predicate constants, then (u, v) < (p, q) is x (u (x) \u2192 p (x))."}, {"heading": "2.2 Review: First-Order Stable Model Semantics", "text": "This review follows the definition of Ferraris et al. (2011) The stable models are defined in relation to the SM operator (2011). (2011) The stable models are defined in relation to the SM operator (2011). (2011) The stable models of SM (2011) are defined. (2011) The formula SM [F; p] is defined. (2011) The formula SM (2011) is defined. (2011) The formula SM (2011) is defined. (2011) The formula SM (2011) is defined. (2011) The formula SM (2011) is defined. (2011) Formula F (including equality), which does not contain members of p. (F) The models of SM are defined. (F)."}, {"heading": "2.3 Equivalence of the Stable Model Semantics and Circumscription on Canonical Formulas", "text": "In this section, we show that the two semantic formulas we call \"canonical formulas\" do not coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas we call \"canonical formulas\" do not coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas coincide. (7) We show that the two semantic formulas coincide."}, {"heading": "3. Reformulating the Event Calculus in the General Theory of Stable", "text": "In this section we will discuss the syntax of circumscribed event calculation described in Chapter 2 of Mueller's book (2006). Starting from the observation that the syntax corresponds to the condition of canonicality, we will present some reformulations of event calculation in the general theory of stable models."}, {"heading": "3.1 Review: Circumscriptive Event Calculus", "text": "A fluent term is a term whose nature is a fluent term; an event and a time term are similarly defined when a condition is recursively defined as: \u2022 If there are terms, then it is unlikely that knowledge must be encrypted in a non-canonical formula such as (12), which cannot simply be converted into an equivalent canonical formula. \"Guide to Axiomatizing Domains in First-Order Logic\" (http: / / cs.nyu.edu / faculty / guide.html) It is no surprise that all the circumscribed actions find satisfaction in this paper. \""}, {"heading": "3.2 Reformulating the Event Calculus in the General Theory of Stable Models", "text": "Following Ferraris, Lee, Lifschitz and Palla (2009), on a formula F, we say that it is negative on a list p of predicate constants if members of p do not have strictly positive occurrences in F.4. We assume that formula (9) is negative on {p}, but not negative on {p, q}. A formula of the form \u00ac F (abbreviation for F \u2192) is negative on each list of predictors. We assume that formula (9) has already been rewritten to be negative on {p, terminates, releases, happens, Ab1,..., Abn}. This can be easily done by anticipating predictors on strictly positive occurrences of these predictors. The following theorem shows a few equivalent reformulations of the circumscription calculations of circumscription calculations that occur in the general theory of stable models.Theorem."}, {"heading": "4. Reformulating the Situation Calculus in the General Theory of Stable", "text": "In this section, we examine and formulate two versions of situational calculus - Lin's causal theories of action (1995) and Reiter's fundamental theories of action (2001)."}, {"heading": "4.1 Review: Lin\u2019s Causal Action Theories", "text": "We start from a multi-sorted language of the first order, which sorts a situation, sorts an action, sorts an action, sorts a truth and sorts an object. We understand the expression P (x, s), where P is a fluid name, as an abbreviation for holds (P (x), s). We do not consider functional fluents here for simplicity. We assume that a causal action theory D consists of a finite number of the following sets of axioms. We often identify D with the conjunction of the universal locks of all axioms in D. In the following, F, Fi are fluid names, A is an action name, V, Vi are truth values, s, s, s \u00b2 s \u00b2 is a situation variable formula."}, {"heading": "4.2 Reformulating Causal Action Theories in the General Theory of Stable Models", "text": "Instead of the second-order axiom (22), we consider the following first-order formula Dsit, which introduces a new intense predicate constant Sit, the sort of argumentation of which is situation.8Sit (Sit) and Sit (Sit (s) \u2192 Sit (a, s)). (24) Following, D \u2212 Rest is the theory obtained from Drest by dropping (22). Theorem 3 On the basis of a theory of causal effect (23), the following theories are equivalent if we disregard the auxiliary predicate Sit: (a) CIRC [Dcause; Caused] - Dposs - Drest; (b) SM \u2212 Dposs - Daused - Sit - Sit - Sit (Sit) - Sit (Sit) (Sit - Sit) (Sit) (Sit)."}, {"heading": "4.3 Review: Reiter\u2019s Basic Action Theories", "text": "As in the causal action theories, we understand P (x, s), where P is a fluid name, as an abbreviation for holds (P (x), s) and do not consider functional fluents. A basic action theory (BAT) is from the formalistic Dss-Dss-Dap-Duna-DS0, (25), where \u2022 \u03a3 is the conjunction of the founding axioms (Section 4.1); \u2022 Dss is a conjunction of the successor state axioms of formula F (x, do (a, s) \u2194 \u03a6F (x, a, s), where \u03a6F (x, a, s) is a formula uniform in s 9 and whose free variables are under x, a, s; \u2022 Dap is a conjunction of the action axioms of FormPoss (A (x), s), s), where \u03a6A (x, s) is a formula whose free variables are under x; Dap is a conjunction of the action axioms of FormPoss (A) ()."}, {"heading": "4.4 Reformulating Basic Action Theories in the General Theory of Stable Models", "text": "Given that any logical proposition of the first order (F) is equivalent to SM (F), it is trivial to consider a BAT as a theory of the first order if we do not need to provide explicit succession under the stable model Dss. Instead, the succession state axioms is conditioned by the effect axioms and the generic inertia axioms adopted in ASP, using both the positive predicate holds and the negative predicate formula holds. In the following, we assume that the underlying signature is both predicates.An ASP-style BAT is the formal definition of Dinertia."}, {"heading": "5. Translating Almost Universal Sentences into Logic Programs", "text": "Theorems 2-4 contain reformulations of situational calculus and event calculus in the general theory of stable models, which may contain nested formulas and connectives. On the other hand, the input languages of ASP solvers are limited to simple rule forms analogous to the clerical normal form in classical logic. Although any first-order formula can be rewritten in clerical normal form while maintaining satisfaction, such transformations do not necessarily preserve stable models. This is due to the fact that the concept of equivalence is \"stronger\" under stable model semantics (Lifschitz, Pearce, & Valverde, 2001). Definition 4 (Ferraris et al., 2011) A formula F is strongly equivalent to formula G if it contains F as a subformula (and possibly contains constants that are not in F, G)."}, {"heading": "5.1 Translating Quantifier-Free Formulas into Logic Programs", "text": "\u2022 Rules on the left side: > VP-F-G-7 \u2192 {F-G-7 (L1) \u2022 Rules on the right side: F-G-G-G-G-K-K-K (L4) (F-G-G-G-H-7 \u2192 {G-F-H-H-H} (L3) \u2022 Rules on the right side: F-G-G-G-G-G-K-K-K-K (F-G) (F-G). (F-G-G-G-G-H-H) \u2022 Rules on the right side: F-G-7-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G-G"}, {"heading": "5.2 Quantifier Elimination", "text": "We present a method of quantifying elimination that distinguishes between two types of quantifier events: \"singular\" and \"non-singular.\" Any \"non-singular\" occurrence of a quantifier is easy to eliminate, while a \"singular\" occurrence under a specific syntactic condition is eliminated. Definition 5 We say that an occurrence of QxG in F is singular if the occurrence of QxG is positive in F, and that the occurrence of QxG is negative in F."}, {"heading": "6. Computing the Event Calculus Using ASP Solvers", "text": "The question of the way in which she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the way she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner she has behaved in the manner and she has behaved in the manner in the manner she has behaved in the manner she has behaved in the manner and she has behaved in the manner in the manner she has behaved in the manner she has behaved in the manner and she has behaved in the manner in the manner she has behaved in the manner in the manner she has behaved in the manner and she has behaved in the manner in the manner she has behaved in the manner and she has behaved in the manner in the manner in the manner she has behaved in the manner and she has behaved in the manner she has behaved in the manner in the manner in the manner and she has behaved in the manner in the manner in the manner she has behaved in the manner in the manner and she has behaved in the manner in the manner in the manner she has behaved in the manner she has behaved in the manner and she has behaved"}, {"heading": "7. Computing the Situation Calculus Using ASP Solvers", "text": "With the help of Translation f2lp, we transform the reformulations of the situation calculation in sections 4.2 and 4.4 into response programs."}, {"heading": "7.1 Representing Causal Action Theories by Answer Set Programs", "text": "The following theory shows how to convert causal action theories into response programs. < < - > Space (1). < - > Space (1). & rr (1) Space (1). & rr (1) Space (1). & rr (1) Space (1) Space (1) Space (1). (1) Space (1) Space (1). < Space (1) Space (1). (2) Space (1). (2) Space (2). (2) Space (1). (2) Space (1). (2) Space (1). (2) Space (1). (2) Space (2). (2) Space (2). (2) Space (2). (2) (2). (2) (2) (2). (2) (2). (2). (2). (2)."}, {"heading": "7.2 Representing Basic Action Theories by Answer Set Programs", "text": "Since a BAT T (without the second-order axiom (22)) can be considered a first-order theory within the semantics of the stable model, with the list of intense predicates empty, it follows that f2lp can be used to turn T into a logic program. As before, we will focus on the ASP-like BAT theorem 10 Let T create an ASP-like BAT (26) with signatures that finally contain many predicate constants, and let F be the FOL representation of the program achieved by applying the translation f2lp to T with intense predicates. Then, SM [T; Hold, hold, hold, hold, hold, throw, throw] SM [F; Poss] is equivalent to SM [F; \u03c3 (F) {Poss}]. Figure 4 shows a coding of the \"broken object\" with intense predicates {Hold, hold, throw, explode) Consider the simple projection problem (we do not find out if the object is executable or not executable)."}, {"heading": "8. Related Work", "text": "It is known that this fact helps us to understand the relationship between the two semantic systems, and led to the design of the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the answer to the question after the question after the answer to the question after the question after the answer to the question after the answer to the question after the question after the question after the answer to the question after the question after the question after the answer to the question after the question after the question after the question after the question after the question after the answer of the answer of the answer of the question after the question after the question after the question after the question after the question after the question after the answer of the question after the question after the answer of the answer of the answer of the question after the answer of the question after the question after the question after the question after the answer of the answer of the question after the question after the question after the answer of the question after the answer of the question after the answer of the question after the answer of the answer of the question after the answer of the question after the question after the answer of the question after the question after the question after the answer of the answer of the question after the answer of the question after the question after the question after the question after the answer of the question after the answer of the"}, {"heading": "9. Conclusion", "text": "This paper uses this definition to identify a class of formulas where minimal model thinking and stable model thinking coincide, and uses this idea to reformulate situational calculation and event calculation in world-class stable model semantics. Along with the translation that turns an almost universal sentence into a logic program, we show that thinking in situational calculation and event calculation can be reduced to the calculation of response sentences. We have implemented System f2lp, a frontend for ASP solvers that allows us to calculate these circumscribing action theories. Mathematical tool sets and the system presented in this paper can also be useful to relate other circumscription theories with logic programs. Also, advances in ASP solvers can improve the calculation of circumscribing theories."}, {"heading": "Acknowledgments", "text": "< < < < < < < < < < < < (<) < (<) < (<) < (<) < (<) < (<)) (<) (<)) (<) (<) (<) (<) (<) (<) (<) (<) (<)) (& TFile \"dec\" (File \"dec\") # (File \"dec\") # (File \"dec\" #) # (File \"dec\".time \"(0.. maxltlt; Tree). # (F2). # domain event (T). # domain event (T). # domain time (T1) # time (Tain) (T1)."}, {"heading": "Appendix C. Proofs", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "C.1 Review of Some Useful Theorems", "text": "In fact, we will provide a version of the splitting theorem that is slightly more general than the formula used by Ferraris et al. (2009) to facilitate our dependence. (Lemma 1 formulation) The formula of Ferraris et al. (2009) The formula of Ferraris et al. (2009) The formula of Ferraris et al. (2009) The formula of Ferraris et al. (2009) The formula of Ferraris et al. (2009) by Ferraris et al. (2009) The formula of Ferraris et al. (2009) by Ferraris et al. (2009) The formula of Ferraris et al. (2009) by Ferraris et al. (2009)"}, {"heading": "C.2 Proof of Proposition 1", "text": "With theorem 12 and theorem 13, SM [F; p] \u21d4 SM [F; p-pr (F)] \u0445 SM [>; p-pr (F)] \u21d4 SM [F; p-pr (F)] \u0445 False (p-pr (F)) \u21d4 SM [F-Choice (pr (F)\\ p)] \u0438 False (p-pr (F)) \u2012 SM [F-Choice (pr (F)\\ p) \u0438 False (p-pr (F)]]."}, {"heading": "C.3 Proof of Theorem 1", "text": "Following F is a formula, p is a list of different predicate constants p1,..., pn, and u is a list of different predicate variables u1,.., and of the same length as p.Lemma 2 (Ferraris et al., 2011, Lemma 5) Formular \u2264 p (F) \u2192 F) is logically valid.Lemma 3 If each occurrence of each predicate constant of p is strictly positive in F, (u \u2264 p) \u2192 (F). (u) Lemma 5) Formulation \u2264 p (u). By induction. We will show only the case if F \u2192 H is. The other cases are simple. ConsidersF (u) = (u) \u2192 H (u)."}, {"heading": "C.4 Proof of Theorem 2", "text": "Proof. Between (a) and (b): Follows directly from theorem 1.Between (b) and (c): First of all, note that \u2022 any strongly related component in the dependence curve of \u03a3 \u2206 in relation to {I, T, R, H} belongs to either {I, T, R} or {H}, \u2022 \u03a3 to {H} is negative and \u2022 \u0445 to {I, T, R} is negative, it follows from theorem 13 that (b) is equivalent to SM [\u0440]; I, T, R, H] as well as SM [\u0432; Ab1,... Likewise, by repeating theorem 13, we can show that the formula above is equivalent to (c). Between (c) and (d): By sentence 1."}, {"heading": "C.5 Proof of Theorem 3", "text": "Between (a) and (b): Since Dcausation is canonical in relation to causation, theorem 1 (a) corresponds to either SM (Dcausation; causation) or SM (Sit). (41) Consequently, it is sufficient to prove the assertion that assuming that Sit (s), formula (22) SM (Dsit; Sit) is equivalent to Sit (s), s (p (s), s (p (s), p (a, s)) and p (s) is equivalent. (42) On the other hand, Sit (s), SM (Dsit; Sit) is equivalent to Sit (S0), s (s), s (s), Sit (s) and Sit (s) is equivalent to Sit (s)."}, {"heading": "C.6 Proof of Theorem 4", "text": "(D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) (D) s (D) s) (D) s (D) s) s (D (D) s) s (D) s) s (D (D) s) s) s (D (D (D) s) s) s) s (D (D) s) s (D (D) s) s) s (D (D) s) s (D (D) s) s) s (D (D) s) s (D (D) s) s) s (D (D (D) s) s) s (D (D) s) s) s (D (D (D (D) s) s) s) s (D (D (D) s) s) s) s (D (D (D) s) s) s (D (D (D) s) s) s) s) s (D (D (D (D) s) s) s) s (D (D (D (D) s) s) s) s) s (D (D (D (D (D) s) s) s"}, {"heading": "C.7 Proof of Proposition 2", "text": "Lemma 5 Let F be a formula, let p be a list of distinct predicate constants, let G'q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" \"q\" q \"q\" \"q\" q \"\" q \"\" q \"\" q \"\" q \"\" q \"\" q \"\" q \"\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" \"q\" q \"q\" \"q\" q \"\" q \"\" q \"q\" q \"\" q \"q\" q \"q\" \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q \"q\" q"}, {"heading": "C.8 Proof of Theorem 6", "text": "It is clear that the algorithm ends and yields a quantifier-free formula K."}, {"heading": "C.9 Proof of Theorem 7", "text": "We use the notations introduced in the proof for theorem 6. According to theorem 6, SM [F; p] is equivalent to (60) and according to theorem 12, (60) is equivalent to SM [VP] (61) (R0 is p), where Pred is the set of all predicate constants in the signature. From sentence 3 from (Cabalar et al., 2005) it follows that (61) is equivalent to SM [VP] (61), where \"Pred\" is the set of all predicate constants in the signature. From sentence 3 from (Cabalar et al., 2005) it follows that (61) is equivalent to SM [VP]."}, {"heading": "C.10 Proof of Theorem 8", "text": "Suppose that T isCIRC [\u0440; Initiates, Terminates, Releases], C; Happens], C; CIRC [\u0432; Ab1,..., Abn], C; which is equivalent to SM; Initiates, Terminates, Releases], C; SM; Happens], C; SM; Ab1,..., Abn], C (63), C; Theorem; Def; P (x), P; P;, where G; is described in step 1, and B; is the formula resulting from the application of step 1. According to theorem 15, it follows that each formula (35) in the formula def is equivalent to SM; p; p], where G; is described in step 1. Consequently, (63) the formula (63) is equivalent to theorem; Initiates, terminates, releases, C."}, {"heading": "C.11 Proof of Theorem 9", "text": "Since (37) is almost universal in relation to {Causes, Poss, Sit}, the result is derived from theorems 7 and 3."}, {"heading": "C.12 Proof of Theorem 10", "text": "From Dexogen0 it follows that SM [T; Hold, hold, throw] is equivalent to SM [T \u20ac; Hold, hold, throw], where T \u20acis gained from T by preceding all occurrences of hold in DS0. From the definition of a uniform formula (Tab, 2001) it follows that T \u20acis almost universal in relation to {Hold, hold, throw} The result follows from Theorem 7."}], "references": [{"title": "Representing the Zoo World and the Traffic World in the language of the Causal Calculator", "author": ["V. Akman", "S. Erdo\u011fan", "J. Lee", "V. Lifschitz", "H. Turner"], "venue": "Artificial Intelligence,", "citeRegEx": "Akman et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Akman et al\\.", "year": 2004}, {"title": "Combining situation calculus and event calculus", "author": ["K.V. Belleghem", "M. Denecker", "D.D. Schreye"], "venue": "In Proceedings of International Conference on Logic Programming (ICLP),", "citeRegEx": "Belleghem et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Belleghem et al\\.", "year": 1995}, {"title": "On the relation between situation calculus and event calculus", "author": ["K.V. Belleghem", "M. Denecker", "D.D. Schreye"], "venue": "Journal of Logic Programming,", "citeRegEx": "Belleghem et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Belleghem et al\\.", "year": 1997}, {"title": "Explanatory diagnoses and their characterization by circumscription", "author": ["P. Besnard", "Cordier", "M.-O"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "Besnard et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Besnard et al\\.", "year": 1994}, {"title": "Propositional theories are strongly equivalent to logic programs", "author": ["P. Cabalar", "P. Ferraris"], "venue": "Theory and Practice of Logic Programming,", "citeRegEx": "Cabalar and Ferraris,? \\Q2007\\E", "shortCiteRegEx": "Cabalar and Ferraris", "year": 2007}, {"title": "Reducing propositional theories in equilibrium logic to logic programs", "author": ["P. Cabalar", "D. Pearce", "A. Valverde"], "venue": "In Proceedings of Portuguese Conference on Artificial Intelligence (EPIA),", "citeRegEx": "Cabalar et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Cabalar et al\\.", "year": 2005}, {"title": "Computable functions in ASP: theory and implementation", "author": ["F. Calimeri", "S. Cozza", "G. Ianni", "N. Leone"], "venue": "In Proceedings of International Conference on Logic Programming (ICLP),", "citeRegEx": "Calimeri et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Calimeri et al\\.", "year": 2008}, {"title": "Inductive situation calculus", "author": ["M. Denecker", "E. Ternovska"], "venue": "Artificial Intelligence,", "citeRegEx": "Denecker and Ternovska,? \\Q2007\\E", "shortCiteRegEx": "Denecker and Ternovska", "year": 2007}, {"title": "A logic of nonmonotone inductive definitions", "author": ["M. Denecker", "E. Ternovska"], "venue": "ACM Transactions on Computational Logic,", "citeRegEx": "Denecker and Ternovska,? \\Q2008\\E", "shortCiteRegEx": "Denecker and Ternovska", "year": 2008}, {"title": "TAL: Temporal action logics language specification and tutorial. Link\u00f6ping Electronic Articles in Computer and Information", "author": ["P. Doherty", "J. Gustafsson", "L. Karlsson", "J. Kvarnstr\u00f6m"], "venue": "Science ISSN 1401-9841,", "citeRegEx": "Doherty et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Doherty et al\\.", "year": 1998}, {"title": "Almost definite causal theories", "author": ["S. Do\u011fanda\u011f", "P. Ferraris", "V. Lifschitz"], "venue": "In Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR),", "citeRegEx": "Do\u011fanda\u011f et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Do\u011fanda\u011f et al\\.", "year": 2004}, {"title": "Tight logic programs", "author": ["E. Erdem", "V. Lifschitz"], "venue": "Theory and Practice of Logic Programming,", "citeRegEx": "Erdem and Lifschitz,? \\Q2003\\E", "shortCiteRegEx": "Erdem and Lifschitz", "year": 2003}, {"title": "Consistency of Clark\u2019s completion and existence of stable models", "author": ["F. Fages"], "venue": "Journal of Methods of Logic in Computer Science, 1, 51\u201360.", "citeRegEx": "Fages,? 1994", "shortCiteRegEx": "Fages", "year": 1994}, {"title": "A new perspective on stable models", "author": ["P. Ferraris", "J. Lee", "V. Lifschitz"], "venue": "In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Ferraris et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ferraris et al\\.", "year": 2007}, {"title": "Stable models and circumscription", "author": ["P. Ferraris", "J. Lee", "V. Lifschitz"], "venue": "Artificial Intelligence,", "citeRegEx": "Ferraris et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ferraris et al\\.", "year": 2011}, {"title": "Symmetric splitting in the general theory of stable models", "author": ["P. Ferraris", "J. Lee", "V. Lifschitz", "R. Palla"], "venue": "In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Ferraris et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ferraris et al\\.", "year": 2009}, {"title": "Gringo : A new grounder for answer set programming", "author": ["M. Gebser", "T. Schaub", "S. Thiele"], "venue": "In Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR),", "citeRegEx": "Gebser et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Gebser et al\\.", "year": 2007}, {"title": "The stable model semantics for logic programming", "author": ["M. Gelfond", "V. Lifschitz"], "venue": "Proceedings of International Logic Programming Conference and Symposium,", "citeRegEx": "Gelfond and Lifschitz,? \\Q1988\\E", "shortCiteRegEx": "Gelfond and Lifschitz", "year": 1988}, {"title": "Nonmonotonic causal theories", "author": ["E. Giunchiglia", "J. Lee", "V. Lifschitz", "N. McCain", "H. Turner"], "venue": "Artificial Intelligence,", "citeRegEx": "Giunchiglia et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Giunchiglia et al\\.", "year": 2004}, {"title": "Die formalen Regeln der intuitionistischen Logik", "author": ["A. Heyting"], "venue": "Sitzungsberichte der Preussischen Akademie von Wissenschaften. Physikalisch-mathematische Klasse, 42\u201356.", "citeRegEx": "Heyting,? 1930", "shortCiteRegEx": "Heyting", "year": 1930}, {"title": "Capturing parallel circumscription with disjunctive logic programs", "author": ["T. Janhunen", "E. Oikarinen"], "venue": "In Proc. of 9th European Conference in Logics in Artificial Intelligence", "citeRegEx": "Janhunen and Oikarinen,? \\Q2004\\E", "shortCiteRegEx": "Janhunen and Oikarinen", "year": 2004}, {"title": "Planning as satisfiability", "author": ["H. Kautz", "B. Selman"], "venue": "In Proceedings of European Conference on Artificial Intelligence (ECAI),", "citeRegEx": "Kautz and Selman,? \\Q1992\\E", "shortCiteRegEx": "Kautz and Selman", "year": 1992}, {"title": "Circumscriptive event calculus as answer set programming", "author": ["Kim", "T.-W", "J. Lee", "R. Palla"], "venue": "In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Kim et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kim et al\\.", "year": 2009}, {"title": "A logic-based calculus of events", "author": ["R. Kowalski", "M. Sergot"], "venue": "New Generation Computing,", "citeRegEx": "Kowalski and Sergot,? \\Q1986\\E", "shortCiteRegEx": "Kowalski and Sergot", "year": 1986}, {"title": "Reconciling the event calculus with the situation calculus", "author": ["R.A. Kowalski", "F. Sadri"], "venue": "Journal of Logic Programming,", "citeRegEx": "Kowalski and Sadri,? \\Q1997\\E", "shortCiteRegEx": "Kowalski and Sadri", "year": 1997}, {"title": "A reductive semantics for counting and choice in answer set programming", "author": ["J. Lee", "V. Lifschitz", "R. Palla"], "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Lee et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Lee et al\\.", "year": 2008}, {"title": "Loop formulas for circumscription", "author": ["J. Lee", "F. Lin"], "venue": "Artificial Intelligence,", "citeRegEx": "Lee and Lin,? \\Q2006\\E", "shortCiteRegEx": "Lee and Lin", "year": 2006}, {"title": "First-order stable model semantics and first-order loop formulas", "author": ["J. Lee", "Y. Meng"], "venue": "Journal of Artificial Inteligence Research (JAIR),", "citeRegEx": "Lee and Meng,? \\Q2011\\E", "shortCiteRegEx": "Lee and Meng", "year": 2011}, {"title": "Yet another proof of the strong equivalence between propositional theories and logic programs", "author": ["J. Lee", "R. Palla"], "venue": "In Working Notes of the Workshop on Correspondence and Equivalence for Nonmonotonic Theories", "citeRegEx": "Lee and Palla,? \\Q2007\\E", "shortCiteRegEx": "Lee and Palla", "year": 2007}, {"title": "Situation calculus as answer set programming", "author": ["J. Lee", "R. Palla"], "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI),", "citeRegEx": "Lee and Palla,? \\Q2010\\E", "shortCiteRegEx": "Lee and Palla", "year": 2010}, {"title": "Circumscription", "author": ["V. Lifschitz"], "venue": "Gabbay, D., Hogger, C., & Robinson, J. (Eds.), Handbook of Logic in AI and Logic Programming, Vol. 3, pp. 298\u2013352. Oxford University Press.", "citeRegEx": "Lifschitz,? 1994", "shortCiteRegEx": "Lifschitz", "year": 1994}, {"title": "What is answer set programming", "author": ["V. Lifschitz"], "venue": "Proceedings of the AAAI Conference on Artificial Intelligence, pp. 1594\u20131597. MIT Press.", "citeRegEx": "Lifschitz,? 2008", "shortCiteRegEx": "Lifschitz", "year": 2008}, {"title": "Datalog programs and their stable models", "author": ["V. Lifschitz"], "venue": "de Moor, O., Gottlob, G., Furche, T., & Sellers, A. (Eds.), Datalog Reloaded: First International Workshop, Datalog 2010, Oxford, UK, March 16-19, 2010. Revised Selected Papers. Springer.", "citeRegEx": "Lifschitz,? 2011", "shortCiteRegEx": "Lifschitz", "year": 2011}, {"title": "Strongly equivalent logic programs", "author": ["V. Lifschitz", "D. Pearce", "A. Valverde"], "venue": "ACM Transactions on Computational Logic,", "citeRegEx": "Lifschitz et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Lifschitz et al\\.", "year": 2001}, {"title": "Nested expressions in logic programs", "author": ["V. Lifschitz", "L.R. Tang", "H. Turner"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "Lifschitz et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Lifschitz et al\\.", "year": 1999}, {"title": "Representing transition systems by logic programs", "author": ["V. Lifschitz", "H. Turner"], "venue": "In Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR),", "citeRegEx": "Lifschitz and Turner,? \\Q1999\\E", "shortCiteRegEx": "Lifschitz and Turner", "year": 1999}, {"title": "Embracing causality in specifying the indirect effects of actions", "author": ["F. Lin"], "venue": "Proceedings of International Joint Conference on Artificial Intelligence (IJCAI), pp. 1985\u2013 1991.", "citeRegEx": "Lin,? 1995", "shortCiteRegEx": "Lin", "year": 1995}, {"title": "Compiling causal theories to successor state axioms and STRIPS-like systems", "author": ["F. Lin"], "venue": "Journal of Artificial Intelligence Research, 19, 279\u2013314.", "citeRegEx": "Lin,? 2003", "shortCiteRegEx": "Lin", "year": 2003}, {"title": "A logic of knowledge and justified assumptions", "author": ["F. Lin", "Y. Shoham"], "venue": "Artificial Intelligence,", "citeRegEx": "Lin and Shoham,? \\Q1992\\E", "shortCiteRegEx": "Lin and Shoham", "year": 1992}, {"title": "From causal theories to logic programs (sometimes)", "author": ["F. Lin", "K. Wang"], "venue": "In Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR),", "citeRegEx": "Lin and Wang,? \\Q1999\\E", "shortCiteRegEx": "Lin and Wang", "year": 1999}, {"title": "From answer set logic programming to circumscription via logic of GK", "author": ["F. Lin", "Y. Zhou"], "venue": "Artificial Intelligence,", "citeRegEx": "Lin and Zhou,? \\Q2011\\E", "shortCiteRegEx": "Lin and Zhou", "year": 2011}, {"title": "Stable models and an alternative logic programming paradigm. In The Logic Programming Paradigm: a 25-Year Perspective, pp. 375\u2013398", "author": ["V. Marek", "M. Truszczy\u0144ski"], "venue": null, "citeRegEx": "Marek and Truszczy\u0144ski,? \\Q1999\\E", "shortCiteRegEx": "Marek and Truszczy\u0144ski", "year": 1999}, {"title": "Circumscription\u2014a form of non-monotonic reasoning", "author": ["J. McCarthy"], "venue": "Artificial Intelligence, 13, 27\u201339,171\u2013172.", "citeRegEx": "McCarthy,? 1980", "shortCiteRegEx": "McCarthy", "year": 1980}, {"title": "Applications of circumscription to formalizing common sense knowledge", "author": ["J. McCarthy"], "venue": "Artificial Intelligence, 26 (3), 89\u2013116.", "citeRegEx": "McCarthy,? 1986", "shortCiteRegEx": "McCarthy", "year": 1986}, {"title": "Some philosophical problems from the standpoint of artificial intelligence", "author": ["J. McCarthy", "P. Hayes"], "venue": "Machine Intelligence,", "citeRegEx": "McCarthy and Hayes,? \\Q1969\\E", "shortCiteRegEx": "McCarthy and Hayes", "year": 1969}, {"title": "The event calculus in classical logic - alternative axiomatisations", "author": ["R. Miller", "M. Shanahan"], "venue": "Electronic Transactions on Artificial Intelligence,", "citeRegEx": "Miller and Shanahan,? \\Q1999\\E", "shortCiteRegEx": "Miller and Shanahan", "year": 1999}, {"title": "Commonsense reasoning", "author": ["E. Mueller"], "venue": "Morgan Kaufmann.", "citeRegEx": "Mueller,? 2006", "shortCiteRegEx": "Mueller", "year": 2006}, {"title": "Event calculus reasoning through satisfiability", "author": ["E.T. Mueller"], "venue": "Journal of Logic and Computation, 14 (5), 703\u2013730.", "citeRegEx": "Mueller,? 2004", "shortCiteRegEx": "Mueller", "year": 2004}, {"title": "Logic programs with stable model semantics as a constraint programming paradigm", "author": ["I. Niemel\u00e4"], "venue": "Annals of Mathematics and Artificial Intelligence, 25, 241\u2013273.", "citeRegEx": "Niemel\u00e4,? 1999", "shortCiteRegEx": "Niemel\u00e4", "year": 1999}, {"title": "A first order nonmonotonic extension of constructive logic", "author": ["D. Pearce", "A. Valverde"], "venue": "Studia Logica,", "citeRegEx": "Pearce and Valverde,? \\Q2005\\E", "shortCiteRegEx": "Pearce and Valverde", "year": 2005}, {"title": "Hypothetical reasoning about actions: From situation calculus to event calculus", "author": ["A. Provetti"], "venue": "Computational Intelligence, 12, 478\u2013498.", "citeRegEx": "Provetti,? 1996", "shortCiteRegEx": "Provetti", "year": 1996}, {"title": "A logic for default reasoning", "author": ["R. Reiter"], "venue": "Artificial Intelligence, 13, 81\u2013132.", "citeRegEx": "Reiter,? 1980", "shortCiteRegEx": "Reiter", "year": 1980}, {"title": "The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression", "author": ["R. Reiter"], "venue": "Lifschitz, V. (Ed.), Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, pp. 359\u2013380. Academic Press.", "citeRegEx": "Reiter,? 1991", "shortCiteRegEx": "Reiter", "year": 1991}, {"title": "Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems", "author": ["R. Reiter"], "venue": "MIT Press.", "citeRegEx": "Reiter,? 2001", "shortCiteRegEx": "Reiter", "year": 2001}, {"title": "A circumscriptive calculus of events", "author": ["M. Shanahan"], "venue": "Artif. Intell., 77 (2), 249\u2013284.", "citeRegEx": "Shanahan,? 1995", "shortCiteRegEx": "Shanahan", "year": 1995}, {"title": "Solving the Frame Problem: A Mathematical Investigation of the Common Sense Law of Inertia", "author": ["M. Shanahan"], "venue": "MIT Press.", "citeRegEx": "Shanahan,? 1997", "shortCiteRegEx": "Shanahan", "year": 1997}, {"title": "The event calculus explained", "author": ["M. Shanahan"], "venue": "Artificial Intelligence Today, LNCS 1600, pp. 409\u2013430. Springer.", "citeRegEx": "Shanahan,? 1999", "shortCiteRegEx": "Shanahan", "year": 1999}, {"title": "Event calculus planning through satisfiability", "author": ["M. Shanahan", "M. Witkowski"], "venue": "Journal of Logic and Computation,", "citeRegEx": "Shanahan and Witkowski,? \\Q2004\\E", "shortCiteRegEx": "Shanahan and Witkowski", "year": 2004}, {"title": "Cardinality constraint programs", "author": ["T. Syrj\u00e4nen"], "venue": "In Proceedings of European Conference on Logics in Artificial Intelligence (JELIA),", "citeRegEx": "Syrj\u00e4nen,? \\Q2004\\E", "shortCiteRegEx": "Syrj\u00e4nen", "year": 2004}, {"title": "Translating first-order theories into logic programs", "author": ["H. Zhang", "Y. Zhang", "M. Ying", "Y. Zhou"], "venue": "In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "Zhang et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2011}], "referenceMentions": [{"referenceID": 54, "context": "As one of the oldest nonmonotonic formalisms, circumscription has found many applications in commonsense reasoning and model-based diagnoses (e.g., McCarthy, 1986; Shanahan, 1995; Besnard & Cordier, 1994).", "startOffset": 141, "endOffset": 204}, {"referenceID": 48, "context": "The stable model semantics is the mathematical basis of Answer Set Programming (ASP) (Marek & Truszczy\u0144ski, 1999; Niemel\u00e4, 1999; Lifschitz, 2008), which is being widely applied thanks to the availability of several efficient implementations, known as answer set solvers.", "startOffset": 85, "endOffset": 145}, {"referenceID": 31, "context": "The stable model semantics is the mathematical basis of Answer Set Programming (ASP) (Marek & Truszczy\u0144ski, 1999; Niemel\u00e4, 1999; Lifschitz, 2008), which is being widely applied thanks to the availability of several efficient implementations, known as answer set solvers.", "startOffset": 85, "endOffset": 145}, {"referenceID": 51, "context": "While circumscription is defined in terms of translation into classical (second-order) logic, stable models proposed by Gelfond and Lifschitz (1988) are defined in terms of grounding and fixpoints in the style of Reiter\u2019s default logic (Reiter, 1980).", "startOffset": 236, "endOffset": 250}, {"referenceID": 53, "context": "In particular, in the area of temporal reasoning, the former has served as a basis of classical logic based action calculi, such as the situation calculus (McCarthy & Hayes, 1969; Reiter, 2001), the event calculus (Shanahan, 1995) and temporal action logics (Doherty,", "startOffset": 155, "endOffset": 193}, {"referenceID": 54, "context": "In particular, in the area of temporal reasoning, the former has served as a basis of classical logic based action calculi, such as the situation calculus (McCarthy & Hayes, 1969; Reiter, 2001), the event calculus (Shanahan, 1995) and temporal action logics (Doherty,", "startOffset": 214, "endOffset": 230}, {"referenceID": 17, "context": "While circumscription is defined in terms of translation into classical (second-order) logic, stable models proposed by Gelfond and Lifschitz (1988) are defined in terms of grounding and fixpoints in the style of Reiter\u2019s default logic (Reiter, 1980).", "startOffset": 120, "endOffset": 149}, {"referenceID": 19, "context": "These definitions are also equivalent to the definition of Quantified Equilibrium Logic given by Pearce and Valverde (2005), which is defined in terms of the logic of Here-and-There (Heyting, 1930).", "startOffset": 182, "endOffset": 197}, {"referenceID": 47, "context": "More extensive developments have been later carried out on the classical logic foundation via circumscription (e.g., Shanahan, 1995, 1997, 1999; Miller & Shanahan, 1999; Mueller, 2004), but the relation to", "startOffset": 110, "endOffset": 184}, {"referenceID": 17, "context": "Since logic programs are viewed as a special class of first-order sentences under the stable model semantics, this definition extends the stable model semantics by Gelfond and Lifschitz (1988) to the full first-order level without limiting attention to Herbrand models.", "startOffset": 164, "endOffset": 193}, {"referenceID": 17, "context": "Since logic programs are viewed as a special class of first-order sentences under the stable model semantics, this definition extends the stable model semantics by Gelfond and Lifschitz (1988) to the full first-order level without limiting attention to Herbrand models. Essentially the same characterization was independently given by Lin and Zhou (2011), via logic of knowledge and justified assumption (Lin & Shoham, 1992).", "startOffset": 164, "endOffset": 355}, {"referenceID": 17, "context": "Since logic programs are viewed as a special class of first-order sentences under the stable model semantics, this definition extends the stable model semantics by Gelfond and Lifschitz (1988) to the full first-order level without limiting attention to Herbrand models. Essentially the same characterization was independently given by Lin and Zhou (2011), via logic of knowledge and justified assumption (Lin & Shoham, 1992). These definitions are also equivalent to the definition of Quantified Equilibrium Logic given by Pearce and Valverde (2005), which is defined in terms of the logic of Here-and-There (Heyting, 1930).", "startOffset": 164, "endOffset": 550}, {"referenceID": 53, "context": "Similar to the logic programming tradition of the event calculus, the situation calculus (McCarthy & Hayes, 1969; Reiter, 2001) can be implemented in Prolog, based on the fact that Clark\u2019s completion semantics accounts for definitional axioms.", "startOffset": 89, "endOffset": 127}, {"referenceID": 45, "context": "Based on the reduction of circumscription to completion, SAT-based event calculus systems were implemented, one by Shanahan and Witkowski (2004) and another by Mueller (2004).", "startOffset": 115, "endOffset": 145}, {"referenceID": 42, "context": "Based on the reduction of circumscription to completion, SAT-based event calculus systems were implemented, one by Shanahan and Witkowski (2004) and another by Mueller (2004). The latter system is called the dec reasoner,1 which outperforms the former thanks to a more efficient and general compilation method into propositional logic.", "startOffset": 160, "endOffset": 175}, {"referenceID": 36, "context": "In this paper, we reformulate Lin\u2019s causal action theories (1995) and Reiter\u2019s basic action theories (2001) in the first-order stable model semantics and in ASP.", "startOffset": 30, "endOffset": 66}, {"referenceID": 36, "context": "In this paper, we reformulate Lin\u2019s causal action theories (1995) and Reiter\u2019s basic action theories (2001) in the first-order stable model semantics and in ASP.", "startOffset": 30, "endOffset": 108}, {"referenceID": 36, "context": "In this paper, we reformulate Lin\u2019s causal action theories (1995) and Reiter\u2019s basic action theories (2001) in the first-order stable model semantics and in ASP. For basic action theories, we also provide an ASP-based encoding method that obtains Reiter\u2019s successor state axioms from the effect axioms and the generic inertia axioms adopted in ASP, the idea of which is close to Reiter\u2019s frame default (1980). The paper is organized as follows.", "startOffset": 30, "endOffset": 409}, {"referenceID": 13, "context": "2 Review: First-Order Stable Model Semantics This review follows the definition by Ferraris et al. (2011). There, the stable models are defined in terms of the SM operator, whose definition is similar to the CIRC operator in the previous section.", "startOffset": 83, "endOffset": 106}, {"referenceID": 32, "context": "Intensional predicates are analogous to output predicates in Datalog, and non-intensional predicates are analogous to input predicates in Datalog (Lifschitz, 2011).", "startOffset": 146, "endOffset": 163}, {"referenceID": 13, "context": "(Ferraris et al., 2007, Example 3). The stable models of F are any first-order models of (2). The only answer set of F is the Herbrand model {p(a), q(b), r(a)}. According to Ferraris et al. (2011), this definition of an answer set, when applied to the syntax of logic programs, is equivalent to the traditional definition of an answer set that is based on grounding and fixpoints (Gelfond & Lifschitz, 1988).", "startOffset": 1, "endOffset": 197}, {"referenceID": 46, "context": "Reformulating the Event Calculus in the General Theory of Stable Models In this section, we review the syntax of circumscriptive event calculus described in Chapter 2 of the book by Mueller (2006). Based on the observation that the syntax conforms to the condition of canonicality, we present a few reformulations of the event calculus in the general theory of stable models.", "startOffset": 182, "endOffset": 197}, {"referenceID": 30, "context": "2 Reformulating the Event Calculus in the General Theory of Stable Models Following Ferraris, Lee, Lifschitz, and Palla (2009), about a formula F we say that it is negative on a list p of predicate constants if members of p have no strictly positive occurrences in F .", "startOffset": 99, "endOffset": 127}, {"referenceID": 13, "context": "The equivalence between (b) and (c) can be shown using the splitting theorem by Ferraris et al. (2009). The assumption that \u039e is negative on the intensional predicates is essential in showing that", "startOffset": 80, "endOffset": 103}, {"referenceID": 36, "context": "Reformulating the Situation Calculus in the General Theory of Stable Models In this section, we review and reformulate two versions of the situation calculus\u2014Lin\u2019s causal action theories (1995) and Reiter\u2019s basic action theories (2001).", "startOffset": 158, "endOffset": 194}, {"referenceID": 36, "context": "Reformulating the Situation Calculus in the General Theory of Stable Models In this section, we review and reformulate two versions of the situation calculus\u2014Lin\u2019s causal action theories (1995) and Reiter\u2019s basic action theories (2001).", "startOffset": 158, "endOffset": 236}, {"referenceID": 36, "context": "1 Review: Lin\u2019s Causal Action Theories We assume a many-sorted first-order language which contains a situation sort, an action sort, a fluent sort, a truth value sort and an object sort. We understand expression P (x, s), where P is a fluent name, as shorthand for Holds(P (x), s). We do not consider functional fluents here for simplicity. According to Lin (1995), a formula \u03c6(s) is called a simple state formula about s if \u03c6(s) does not mention Poss, Caused or any situation term other than possibly the variable s.", "startOffset": 10, "endOffset": 365}, {"referenceID": 51, "context": "We refer the reader to the book by Reiter (2001) for the definition of a uniform formula.", "startOffset": 35, "endOffset": 49}, {"referenceID": 14, "context": "Definition 4 (Ferraris et al., 2011) A formula F is strongly equivalent to formula G if, for any formula H containing F as a subformula (and possibly containing object, function and predicate constants that do not occur in F , G), and for any list p of distinct predicate constants, SM[H; p] is equivalent to SM[H \u2032; p], where H \u2032 is obtained from H by replacing an occurrence of F by G.", "startOffset": 13, "endOffset": 36}, {"referenceID": 5, "context": "1 Translating Quantifier-Free Formulas into Logic Programs Cabalar et al. (2005) define the following transformation that turns any propositional formula under the stable model semantics into a logic program.", "startOffset": 59, "endOffset": 81}, {"referenceID": 5, "context": "According to Cabalar et al. (2005), successive application of the rewriting rules above turn any propositional formula into a disjunctive logic program.", "startOffset": 13, "endOffset": 35}, {"referenceID": 5, "context": "According to Cabalar et al. (2005), successive application of the rewriting rules above turn any propositional formula into a disjunctive logic program. This result can be simply extended to turn any quantifier-free formula into a logic program. As noted by Cabalar et al. (2005), this translation may involve an exponential blowup in size, and Theorem 1 from their paper shows that indeed there is no vocabulary-preserving polynomial time algorithm to convert general propositional theories under the stable model semantics into disjunctive logic programs.", "startOffset": 13, "endOffset": 280}, {"referenceID": 49, "context": "1 of Pearce and Valverde (2005) preserve strong equivalence, which leads to the following theorem.", "startOffset": 5, "endOffset": 32}, {"referenceID": 49, "context": "Pearce and Valverde (2005) show that a sentence in QNc5, the monotonic basis of Quantified Equilibrium Logic, can be turned into prenex form, from which the result follows.", "startOffset": 0, "endOffset": 27}, {"referenceID": 49, "context": "Pearce and Valverde (2005) show that Skolemization works with QNc5, the monotonic basis of Quantified Equilibrium Logic, but as our example shows, this does not imply that Skolemization works with Quantified Equilibrium Logic.", "startOffset": 0, "endOffset": 27}, {"referenceID": 5, "context": "Turn the resulting quantifier-free formula into a logic program by applying the translation from Section 3 of the paper by Cabalar et al. (2005), which was also reviewed in Section 5.", "startOffset": 123, "endOffset": 145}, {"referenceID": 30, "context": "We illustrate this using the example from the work of Do\u011fanda\u011f, Ferraris, and Lifschitz (2004). There are 9 rooms and 12 doors as shown in Figure 1.", "startOffset": 78, "endOffset": 95}, {"referenceID": 58, "context": "Though this program does not satisfy syntactic conditions, such as \u03bb-restricted (Gebser, Schaub, & Thiele, 2007), \u03c9-restricted (Syrj\u00e4nen, 2004), or finite domain programs (Calimeri, Cozza, Ianni, & Leone, 2008), that answer set solvers usually impose in order to ensure finite grounding, the rules can still be finitely grounded", "startOffset": 127, "endOffset": 143}, {"referenceID": 53, "context": "In addition to \u03a0situation, we use the following program \u03a0executable in order to represent the set of executable situations (Reiter, 2001): executable(s0).", "startOffset": 123, "endOffset": 137}, {"referenceID": 36, "context": "Figure 3 shows an encoding of Lin\u2019s suitcase example (1995) in the language of f2lp (h is used to represent Holds), which describes a suitcase that has two locks and a spring loaded mechanism which will open the suitcase when both locks are up.", "startOffset": 30, "endOffset": 60}, {"referenceID": 36, "context": "Figure 3 shows an encoding of Lin\u2019s suitcase example (1995) in the language of f2lp (h is used to represent Holds), which describes a suitcase that has two locks and a spring loaded mechanism which will open the suitcase when both locks are up. This example illustrates how the ramification problem is handled in causal action theories. Since we fix the domain of situations to be finite, we require that actions not be effective in the final situations. This is done by introducing atom final(S). Consider the simple temporal projection problem by Lin (1995). Initially the first lock is down and the second lock is up.", "startOffset": 30, "endOffset": 560}, {"referenceID": 51, "context": "Figure 4 shows an encoding of the \u201cbroken object\u201d example discussed by Reiter (1991). Consider the simple projection problem of determining if an object o, which is next to bomb b, is broken after the bomb explodes.", "startOffset": 71, "endOffset": 85}, {"referenceID": 12, "context": "It is known that, for tight logic programs and tight first-order formulas, the stable model semantics coincides with the completion semantics (Fages, 1994; Erdem & Lifschitz, 2003; Ferraris et al., 2011).", "startOffset": 142, "endOffset": 203}, {"referenceID": 14, "context": "It is known that, for tight logic programs and tight first-order formulas, the stable model semantics coincides with the completion semantics (Fages, 1994; Erdem & Lifschitz, 2003; Ferraris et al., 2011).", "startOffset": 142, "endOffset": 203}, {"referenceID": 25, "context": "Proposition 8 from the work of Lee and Lin (2006) shows an embedding of propositional circumscription in logic programs under the stable model semantics.", "startOffset": 31, "endOffset": 50}, {"referenceID": 20, "context": "Janhunen and Oikarinen (2004) showed another embedding of propositional circumscription in logic programs, and implemented the system circ2dlp,24 but their translation appears quite different from the one by Lee and Lin.", "startOffset": 0, "endOffset": 30}, {"referenceID": 20, "context": "Janhunen and Oikarinen (2004) showed another embedding of propositional circumscription in logic programs, and implemented the system circ2dlp,24 but their translation appears quite different from the one by Lee and Lin. Zhang, Zhang, Ying, and Zhou (2011) show an embedding of first-order circumscription in first-order stable model semantics.", "startOffset": 0, "endOffset": 257}, {"referenceID": 50, "context": "The situation calculus and the event calculus are widely studied action formalisms, and there are several papers that compare and relate them (e.g., Belleghem, Denecker, & Schreye, 1995; Provetti, 1996; Belleghem et al., 1997; Kowalski & Sadri, 1997).", "startOffset": 142, "endOffset": 250}, {"referenceID": 2, "context": "The situation calculus and the event calculus are widely studied action formalisms, and there are several papers that compare and relate them (e.g., Belleghem, Denecker, & Schreye, 1995; Provetti, 1996; Belleghem et al., 1997; Kowalski & Sadri, 1997).", "startOffset": 142, "endOffset": 250}, {"referenceID": 47, "context": "Zhang et al. (2011) also introduce a translation that turns arbitrary first-order formulas into logic programs, but this work is limited to finite structures only.", "startOffset": 0, "endOffset": 20}, {"referenceID": 1, "context": ", Belleghem, Denecker, & Schreye, 1995; Provetti, 1996; Belleghem et al., 1997; Kowalski & Sadri, 1997). Prolog provides a natural implementation for basic action theories since definitional axioms can be represented by Prolog rules according to the Clark\u2019s theorem (Reiter, 2001, Chapter 5). The Lloyd-Topor transformation that is used to turn formulas into Prolog rules is similar to translation f2lp, but the difference is that the former preserves the completion semantics and the latter preserves the stable model semantics. Lin and Wang (1999) describe a language that can be used to represent a syntactically restricted form of Lin\u2019s causal situation calculus, called \u201cclausal causal theories,\u201d which does not allow quantifiers.", "startOffset": 56, "endOffset": 550}, {"referenceID": 1, "context": ", Belleghem, Denecker, & Schreye, 1995; Provetti, 1996; Belleghem et al., 1997; Kowalski & Sadri, 1997). Prolog provides a natural implementation for basic action theories since definitional axioms can be represented by Prolog rules according to the Clark\u2019s theorem (Reiter, 2001, Chapter 5). The Lloyd-Topor transformation that is used to turn formulas into Prolog rules is similar to translation f2lp, but the difference is that the former preserves the completion semantics and the latter preserves the stable model semantics. Lin and Wang (1999) describe a language that can be used to represent a syntactically restricted form of Lin\u2019s causal situation calculus, called \u201cclausal causal theories,\u201d which does not allow quantifiers. They show how to translate that language into answer set programs with strong negation, the answer sets of which are then used to obtain fully instantiated successor state axioms and action precondition axioms. This is quite different from our approach, which computes the propositional models of the full situation calculus theories directly. Kautz and Selman (1992) introduce linear encodings that are similar to a propositionalized version of the situation calculus (McCarthy & Hayes, 1969).", "startOffset": 56, "endOffset": 1104}, {"referenceID": 1, "context": ", Belleghem, Denecker, & Schreye, 1995; Provetti, 1996; Belleghem et al., 1997; Kowalski & Sadri, 1997). Prolog provides a natural implementation for basic action theories since definitional axioms can be represented by Prolog rules according to the Clark\u2019s theorem (Reiter, 2001, Chapter 5). The Lloyd-Topor transformation that is used to turn formulas into Prolog rules is similar to translation f2lp, but the difference is that the former preserves the completion semantics and the latter preserves the stable model semantics. Lin and Wang (1999) describe a language that can be used to represent a syntactically restricted form of Lin\u2019s causal situation calculus, called \u201cclausal causal theories,\u201d which does not allow quantifiers. They show how to translate that language into answer set programs with strong negation, the answer sets of which are then used to obtain fully instantiated successor state axioms and action precondition axioms. This is quite different from our approach, which computes the propositional models of the full situation calculus theories directly. Kautz and Selman (1992) introduce linear encodings that are similar to a propositionalized version of the situation calculus (McCarthy & Hayes, 1969). Lin (2003) introduces", "startOffset": 56, "endOffset": 1242}, {"referenceID": 7, "context": "Denecker and Ternovska (2007) present an inductive variant of the situation calculus represented in ID-logic (Denecker & Ternovska, 2008)\u2014classical logic extended with inductive definitions.", "startOffset": 0, "endOffset": 30}, {"referenceID": 36, "context": "clingo is a system that combines gringo and clasp in a monolithic way. The first five examples in Figure 5 are part of the benchmark problems from the work of Shanahan (1997, 1999). The next four are by Mueller (2006). (We increased timepoints", "startOffset": 1, "endOffset": 218}, {"referenceID": 13, "context": "1 Review of Some Useful Theorems We review some theorems by Ferraris et al. (2011) and Ferraris et al.", "startOffset": 60, "endOffset": 83}, {"referenceID": 13, "context": "1 Review of Some Useful Theorems We review some theorems by Ferraris et al. (2011) and Ferraris et al. (2009) which will be used to prove our main results.", "startOffset": 60, "endOffset": 110}, {"referenceID": 13, "context": "1 Review of Some Useful Theorems We review some theorems by Ferraris et al. (2011) and Ferraris et al. (2009) which will be used to prove our main results. In fact, we will provide a version of the splitting theorem which is slightly more general than the one given by Ferraris et al. (2009), in order to facilitate our proof efforts.", "startOffset": 60, "endOffset": 292}, {"referenceID": 14, "context": "Theorem 15 (Ferraris et al., 2011) For any formula F in Clark normal form that is tight on p, formula SM[F ; p] is equivalent to the completion of F relative to p.", "startOffset": 11, "endOffset": 34}, {"referenceID": 13, "context": "The theorem is slightly more general than the one by Ferraris et al. (2009) in that the notion of a dependency graph above yields less edges than the one given by Ferraris et al.", "startOffset": 53, "endOffset": 76}, {"referenceID": 27, "context": "See Section 7 from the work of Lee and Meng (2011) for the definition.", "startOffset": 31, "endOffset": 51}, {"referenceID": 5, "context": "It follows from Proposition 3 from (Cabalar et al., 2005) that (61) is equivalent to SM[\u2200x\u2032\u2032 0H \u2032\u2032\u2032 0 \u2227 \u00b7 \u00b7 \u00b7 \u2227 \u2200x\u2032\u2032 mH \u2032\u2032\u2032 m \u2227 Choice(\u03c3 \\ p); \u03c3 \u222a r1 \u222a \u00b7 \u00b7 \u00b7 \u222a rm], (62) where H \u2032\u2032\u2032 i is obtained from H \u2032\u2032 i by applying the translation from (Cabalar et al.", "startOffset": 35, "endOffset": 57}, {"referenceID": 53, "context": "From the definition of a uniform formula (Reiter, 2001), it follows that T\u00ac\u00ac is almost universal relative to {Holds,\u223cHolds,Poss}.", "startOffset": 41, "endOffset": 55}], "year": 2012, "abstractText": "Circumscription and logic programs under the stable model semantics are two wellknown nonmonotonic formalisms. The former has served as a basis of classical logic based action formalisms, such as the situation calculus, the event calculus and temporal action logics; the latter has served as a basis of a family of action languages, such as language A and several of its descendants. Based on the discovery that circumscription and the stable model semantics coincide on a class of canonical formulas, we reformulate the situation calculus and the event calculus in the general theory of stable models. We also present a translation that turns the reformulations further into answer set programs, so that efficient answer set solvers can be applied to compute the situation calculus and the event calculus.", "creator": "TeX"}}}