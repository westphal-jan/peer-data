{"id": "1401.4613", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2014", "title": "Local Consistency and SAT-Solvers", "abstract": "Local consistency techniques such as k-consistency are a key component of specialised solvers for constraint satisfaction problems. In this paper we show that the power of using k-consistency techniques on a constraint satisfaction problem is precisely captured by using a particular inference rule, which we call negative-hyper-resolution, on the standard direct encoding of the problem into Boolean clauses. We also show that current clause-learning SAT-solvers will discover in expected polynomial time any inconsistency that can be deduced from a given set of clauses using negative-hyper-resolvents of a fixed size. We combine these two results to show that, without being explicitly designed to do so, current clause-learning SAT-solvers efficiently simulate k-consistency techniques, for all fixed values of k. We then give some experimental results to show that this feature allows clause-learning SAT-solvers to efficiently solve certain families of constraint problems which are challenging for conventional constraint-programming solvers.", "histories": [["v1", "Sat, 18 Jan 2014 21:39:00 GMT  (441kb)", "http://arxiv.org/abs/1401.4613v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["peter jeavons", "justyna petke"], "accepted": false, "id": "1401.4613"}, "pdf": {"name": "1401.4613.pdf", "metadata": {"source": "CRF", "title": "Local Consistency and SAT-Solvers", "authors": ["Peter Jeavons", "Justyna Petke"], "emails": ["Peter.Jeavons@cs.ox.ac.uk", "Justyna.Petke@cs.ox.ac.uk"], "sections": [{"heading": "1. Introduction", "text": "One of the oldest and most central ideas in the programming of constraints, going back to Montanari's original paper from 1974, is the idea of using local consistency techniques to circumvent the search space (Bessie re, 2006). The idea of arc consistency was introduced by Mackworth (1977) and generalized by Freud and Sorrow. Modern constraint solvers generally use specialized propagators to circumvent the domains of variables to achieve some form of arc consistency, but typically do not attempt to impose a higher level of consistency, such as path consistency. In contrast, the software tools designed to solve propositional satisfaction problems known as SAT solvers generally use logical inference techniques, such as unit propagation and exam learning, to paraphrase the search space. One of the most surprising results of the recent SAT-notable empirical results was the solving SAT."}, {"heading": "2. Preliminaries", "text": "In this section, we give some background information and definitions that are used for the rest of the world. (D, C) Each constraint in C is a pair of variables. (D) Each constraint in C is a pair of variables (Ri, Si), where there is an ordered list of mi variables, called dome, called the domain of v. (D, C) Each constraint in C is a pair of variables (Ri, Si), where there is an ordered list of mi variables, called the scope of the variable v, called dome, called the domain of v. (D, C) Each constraint in C is a pair of variables (Ri, Si), where - Si is called an ordered list of mi variables. - Ri is a relationship over D of arc mi, called the constraint of relationships. (D, C), a partial mapping f of some subsets W to Dv."}, {"heading": "2.2 Encoding a CSP Instance as a Propositional Formula", "text": "A possible approach to solving the problem is only possible if the formula of origin is elaborated in a way that addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what extent it addresses the question, to what is the question, to what extent to what is the question is the question, to what is the question, to what extent to what is the question is the question, to what is the question is the question to what is the question to what is the question to what is the question, to what is the question to what extent to what is the question, to what is the question to what is the question is the question to what is the question to what is the question to what is the question to what is the question, to what is the question to what is the question to what is the question to what is the question, to what is the question to what is the question to what extent, to what extent the question is the question is the question to what is the question to what extent, to what is the question to what is the question to what is the question, to what is the question is the question to what is the question, to what is the question to what is the question to what is the question is the question, to what is the question to what is the question to what is the"}, {"heading": "2.3 Inference Rules", "text": "and and. \"and and.\" and and. \"and and and and and.\" and and and and. \"and and and.\" and and and. \"and and.\" and and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and and. \"and.\" and. \"and.\" and. \"and.\" and. \"and.\" and. \"and and.\" and. \"and.\" and. \"and and.\" and. \"and and.\" and and. \"and and.\" and. \"and and.\" and. \"and..\" and. \"and.\" and and and and. \"and.\" and and and and and....... \"and and and and and and and and and and.\" and and and... \"and and and and.\" and and and and.. \"and and and and and and..\" and and and and and and and and... \"and and and\" and and and and and and and....... \"and and and\" and and and and and and and and and and and and and and and and and and and and and and and and and and and.. \"and and and and and.\" and and and. \"and and and\" and and and and and and and and and and and and.. \"and and and and and and and and and and and.\" and and and.. \"and and and.\" and... \"and and and and and and and and and and and and and and and..\" and and and and. \"and.\" and and and and and and and and and.. \"and and and and.\" and"}, {"heading": "4. Negative-Hyper-Resolution and SAT-Solvers", "text": "In this section, we adapt the mechanisms of Atserias et al. (2011), and Pipatsrisawat and Darwiche (2009) to show that the existence of a negative-hyper-resolution clause is probably an optimal bifurcation strategy (Beame, Kautz, & Sabharwal, 2004; Pipatsrisawat & Darwiche, 2009) - they have shown which approaches are potentially capable of achieving in practice, with one important exception being the paper by Atserias et al. (2011), which provides an analysis of probable behavior but relies on the existence of a standard resolution for limited width."}, {"heading": "6. Experimental Results", "text": "The polynomial limits we get in this paper are not asymptotic, they apply to all values of n, m and k. However, they are very conservative and are likely to be applied very easily in practice. To investigate how an existing SAT solver actually works, we have also measured the runtime of the MiniSAT solver (Ee \"n & So \ufffd rensson, 2003), version 2.2.0, on a family of CSP instances that can be decided by a fixed level of consistency. For comparison, we have also conducted our experiments on two state-of-the-art constraint solvers (Gent, Jefferson, & Miguel, 2006), version 0.12, and the G12 finite solver (Nethercet al., 2007), version 1.4.To better correspond to the simplified assumptions of our analysis, we have conducted another series of experiments on a core version of MiniSAT to obtain a solution that only propagates unit."}, {"heading": "7. Conclusions", "text": "We have shown that the concept of k consistency can be precisely grasped by a single inference rule about the direct coding of a CSP instance, which is limited to deriving clauses with no more than k-words. We have used this to show that an SAT solver learning a clause will simulate the effect of enforcing k consistency in the expected polynomial time with a purely random branching strategy, for all fixed k. this is sufficient to ensure that such solvers are able to solve certain problem families much more efficiently than conventional CP solvers relying on GAC multiplication. In principle, SAT solvers learning the clause can also do much more. It is known that with a suitable branching strategy and restart policy they are able to simulate general problem families much more efficiently than conventional CP solvers relying on GAC multiplication. (Beame et al., 2004; Piatswat, we can present general ripat approaches, 2009 & Darexpat, and Darexpat)."}, {"heading": "Acknowledgments", "text": "We thank Albert Atserias and Marc Thurley for their comments on the conference version of this paper as well as the anonymous speakers. Justyna Petke will also be honored with the EPSRC Doctoral Training Award. A preliminary version of this paper was published in the Proceedings of the 16th International Conference on Principles and Practice of Constraint Programming - CP2010."}], "references": [{"title": "On the power of k-consistency", "author": ["A. Atserias", "A.A. Bulatov", "V. Dalmau"], "venue": "In International Colloquium on Automata, Languages and Programming -", "citeRegEx": "Atserias et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Atserias et al\\.", "year": 2007}, {"title": "A combinatorial characterization of resolution width", "author": ["A. Atserias", "V. Dalmau"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "Atserias and Dalmau,? \\Q2008\\E", "shortCiteRegEx": "Atserias and Dalmau", "year": 2008}, {"title": "Clause-learning algorithms with many restarts and bounded-width resolution", "author": ["A. Atserias", "J.K. Fichte", "M. Thurley"], "venue": "Journal of Artificial Intelligence Research (JAIR),", "citeRegEx": "Atserias et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Atserias et al\\.", "year": 2011}, {"title": "GAC via unit propagation", "author": ["F. Bacchus"], "venue": "Principles and Practice of Constraint Programming - CP\u201907, pp. 133\u2013147.", "citeRegEx": "Bacchus,? 2007", "shortCiteRegEx": "Bacchus", "year": 2007}, {"title": "Constraint satisfaction problems of bounded width", "author": ["L. Barto", "M. Kozik"], "venue": "In Symposium on Foundations of Computer Science -", "citeRegEx": "Barto and Kozik,? \\Q2009\\E", "shortCiteRegEx": "Barto and Kozik", "year": 2009}, {"title": "Towards understanding and harnessing the potential of clause learning", "author": ["P. Beame", "H.A. Kautz", "A. Sabharwal"], "venue": "Journal of Artificial Intelligence Research (JAIR),", "citeRegEx": "Beame et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Beame et al\\.", "year": 2004}, {"title": "Constraint propagation", "author": ["C. Bessi\u00e8re"], "venue": "Rossi, F., van Beek, P., & Walsh, T. (Eds.), Handbook of Constraint Programming, chap. 3. Elsevier.", "citeRegEx": "Bessi\u00e8re,? 2006", "shortCiteRegEx": "Bessi\u00e8re", "year": 2006}, {"title": "Propositional logic: deduction and algorithms. Cambridge tracts in theoretical computer science", "author": ["H. B\u00fcning", "T. Lettmann"], "venue": null, "citeRegEx": "B\u00fcning and Lettmann,? \\Q1999\\E", "shortCiteRegEx": "B\u00fcning and Lettmann", "year": 1999}, {"title": "Arc consistency and friends", "author": ["H. Chen", "V. Dalmau", "B. Gru\u00dfien"], "venue": "Computing Research Repository - CoRR,", "citeRegEx": "Chen et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2011}, {"title": "An optimal k-consistency algorithm", "author": ["M.C. Cooper"], "venue": "Artificial Intelligence, 41 (1), 89\u201395.", "citeRegEx": "Cooper,? 1989", "shortCiteRegEx": "Cooper", "year": 1989}, {"title": "Characterising tractable constraints", "author": ["M.C. Cooper", "D.A. Cohen", "P. Jeavons"], "venue": "Artificial Intelligence,", "citeRegEx": "Cooper et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Cooper et al\\.", "year": 1994}, {"title": "A comparison of ATMS and CSP techniques", "author": ["J. de Kleer"], "venue": "In International Joint Conference on Artificial Intelligence -", "citeRegEx": "Kleer,? \\Q1989\\E", "shortCiteRegEx": "Kleer", "year": 1989}, {"title": "Constraint satisfaction over connected row convex constraints", "author": ["Y. Deville", "O. Barette", "P.V. Hentenryck"], "venue": "In International Joint Conference on Artificial Intelligence", "citeRegEx": "Deville et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Deville et al\\.", "year": 1997}, {"title": "An extensible SAT-solver", "author": ["N. E\u00e9n", "N. S\u00f6rensson"], "venue": "In Theory and Applications of Satisfiability Testing -", "citeRegEx": "E\u00e9n and S\u00f6rensson,? \\Q2003\\E", "shortCiteRegEx": "E\u00e9n and S\u00f6rensson", "year": 2003}, {"title": "Synthesizing constraint expressions", "author": ["E.C. Freuder"], "venue": "Communications of the ACM, 21 (11), 958\u2013966.", "citeRegEx": "Freuder,? 1978", "shortCiteRegEx": "Freuder", "year": 1978}, {"title": "Arc consistency in SAT", "author": ["I.P. Gent"], "venue": "European Conference on Artificial Intelligence - ECAI\u201902, pp. 121\u2013125.", "citeRegEx": "Gent,? 2002", "shortCiteRegEx": "Gent", "year": 2002}, {"title": "Minion: A fast scalable constraint solver", "author": ["I.P. Gent", "C. Jefferson", "I. Miguel"], "venue": "In European Conference on Artificial Intelligence -", "citeRegEx": "Gent et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Gent et al\\.", "year": 2006}, {"title": "Integrated Methods for Optimization (International Series in Operations Research & Management Science)", "author": ["J.N. Hooker"], "venue": "Springer-Verlag New York, Inc., Secaucus, NJ, USA.", "citeRegEx": "Hooker,? 2006", "shortCiteRegEx": "Hooker", "year": 2006}, {"title": "SAT-encodings, search space structure, and local search performance", "author": ["H.H. Hoos"], "venue": "International Joint Conference on Artificial Intelligence - IJCAI\u201999, pp. 296\u2013303.", "citeRegEx": "Hoos,? 1999", "shortCiteRegEx": "Hoos", "year": 1999}, {"title": "2-way vs. d-way branching for CSP", "author": ["J. Hwang", "D.G. Mitchell"], "venue": "In Principles and Practice of Constraint Programming -", "citeRegEx": "Hwang and Mitchell,? \\Q2005\\E", "shortCiteRegEx": "Hwang and Mitchell", "year": 2005}, {"title": "Hybrid backtracking bounded by tree-decomposition of constraint networks", "author": ["P. J\u00e9gou", "C. Terrioux"], "venue": "Artificial Intelligence,", "citeRegEx": "J\u00e9gou and Terrioux,? \\Q2003\\E", "shortCiteRegEx": "J\u00e9gou and Terrioux", "year": 2003}, {"title": "A game-theoretic approach to constraint satisfaction", "author": ["P.G. Kolaitis", "M.Y. Vardi"], "venue": "In Conference on Artificial Intelligence", "citeRegEx": "Kolaitis and Vardi,? \\Q2000\\E", "shortCiteRegEx": "Kolaitis and Vardi", "year": 2000}, {"title": "Consistency in networks of relations", "author": ["A.K. Mackworth"], "venue": "Artificial Intelligence, 8 (1), 99\u2013118.", "citeRegEx": "Mackworth,? 1977", "shortCiteRegEx": "Mackworth", "year": 1977}, {"title": "Networks of constraints: Fundamental properties and applications to picture processing", "author": ["U. Montanari"], "venue": "Information Sciences, 7, 95\u2013132.", "citeRegEx": "Montanari,? 1974", "shortCiteRegEx": "Montanari", "year": 1974}, {"title": "Chaff: Engineering an efficient SAT solver", "author": ["M.W. Moskewicz", "C.F. Madigan", "Y. Zhao", "L. Zhang", "S. Malik"], "venue": "In Design Automation Conference -", "citeRegEx": "Moskewicz et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Moskewicz et al\\.", "year": 2001}, {"title": "MiniZinc: Towards a standard CP modelling language", "author": ["N. Nethercote", "P.J. Stuckey", "R. Becket", "S. Brand", "G.J. Duck", "G. Tack"], "venue": "In Principles and Practice of Constraint Programming -", "citeRegEx": "Nethercote et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Nethercote et al\\.", "year": 2007}, {"title": "Tractable benchmarks for constraint programming", "author": ["J. Petke", "P. Jeavons"], "venue": "Technical Report RR-09-07,", "citeRegEx": "Petke and Jeavons,? \\Q2009\\E", "shortCiteRegEx": "Petke and Jeavons", "year": 2009}, {"title": "On the power of clause-learning SAT solvers with restarts", "author": ["K. Pipatsrisawat", "A. Darwiche"], "venue": "In Principles and Practice of Constraint Programming -", "citeRegEx": "Pipatsrisawat and Darwiche,? \\Q2009\\E", "shortCiteRegEx": "Pipatsrisawat and Darwiche", "year": 2009}, {"title": "CNF encodings", "author": ["S.D. Prestwich"], "venue": "Biere, A., Heule, M., van Maaren, H., & Walsh, T. (Eds.), Handbook of Satisfiability, pp. 75\u201397. IOS Press.", "citeRegEx": "Prestwich,? 2009", "shortCiteRegEx": "Prestwich", "year": 2009}, {"title": "Resolution versus search: Two strategies for SAT", "author": ["I. Rish", "R. Dechter"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "Rish and Dechter,? \\Q2000\\E", "shortCiteRegEx": "Rish and Dechter", "year": 2000}, {"title": "A machine-oriented logic based on the resolution principle", "author": ["J.A. Robinson"], "venue": "Journal of the ACM, 12 (1), 23\u201341.", "citeRegEx": "Robinson,? 1965", "shortCiteRegEx": "Robinson", "year": 1965}, {"title": "Max-CSP competition 2008: Toulbar2 solver description", "author": ["M. Sanchez", "S. Bouveret", "S. de Givry", "F. Heras", "P. J\u00e9gou", "J. Larrosa", "S. Ndiaye", "E. Rollon", "T. Schiex", "C. Terrioux", "G. Verfaillie", "M. Zytnicki"], "venue": "In Proceedings of the Third International CSP Solver Competition", "citeRegEx": "Sanchez et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Sanchez et al\\.", "year": 2008}, {"title": "Nogood recording for static and dynamic constraint satisfaction problems", "author": ["T. Schiex", "G. Verfaillie"], "venue": "In International Conference on Tools with Artificial Intelligence - ICTAI\u201993,", "citeRegEx": "Schiex and Verfaillie,? \\Q1993\\E", "shortCiteRegEx": "Schiex and Verfaillie", "year": 1993}, {"title": "Compiling finite linear CSP", "author": ["N. Tamura", "A. Taga", "S. Kitagawa", "M. Banbara"], "venue": "into SAT. Constraints,", "citeRegEx": "Tamura et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Tamura et al\\.", "year": 2009}, {"title": "3rd international CSP solver competition. Instances and results available at http://www.cril.univ-artois.fr/CPAI08", "author": ["M. van Dongen", "C. Lecoutre", "O. Roussel"], "venue": null, "citeRegEx": "Dongen et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Dongen et al\\.", "year": 2008}, {"title": "4th international CSP solver competition. Instances and results available at http://www.cril.univ-artois.fr/CPAI09", "author": ["M. van Dongen", "C. Lecoutre", "O. Roussel"], "venue": null, "citeRegEx": "Dongen et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Dongen et al\\.", "year": 2009}, {"title": "SAT v CSP", "author": ["T. Walsh"], "venue": "Principles and Practice of Constraint Programming CP\u201900, pp. 441\u2013456.", "citeRegEx": "Walsh,? 2000", "shortCiteRegEx": "Walsh", "year": 2000}, {"title": "Efficient conflict driven learning in Boolean satisfiability solver", "author": ["L. Zhang", "C.F. Madigan", "M.W. Moskewicz", "S. Malik"], "venue": "In International Conference on ComputerAided Design -", "citeRegEx": "Zhang et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2001}, {"title": "The quest for efficient Boolean satisfiability solvers", "author": ["L. Zhang", "S. Malik"], "venue": "In Computer Aided Verification -", "citeRegEx": "Zhang and Malik,? \\Q2002\\E", "shortCiteRegEx": "Zhang and Malik", "year": 2002}], "referenceMentions": [{"referenceID": 6, "context": "One of the oldest and most central ideas in constraint programming, going right back to Montanari\u2019s original paper in 1974, is the idea of using local consistency techniques to prune the search space (Bessi\u00e8re, 2006).", "startOffset": 200, "endOffset": 216}, {"referenceID": 6, "context": "One of the oldest and most central ideas in constraint programming, going right back to Montanari\u2019s original paper in 1974, is the idea of using local consistency techniques to prune the search space (Bessi\u00e8re, 2006). The idea of arc-consistency was introduced by Mackworth (1977), and generalised to k-consistency by Freuder (1978).", "startOffset": 201, "endOffset": 281}, {"referenceID": 6, "context": "One of the oldest and most central ideas in constraint programming, going right back to Montanari\u2019s original paper in 1974, is the idea of using local consistency techniques to prune the search space (Bessi\u00e8re, 2006). The idea of arc-consistency was introduced by Mackworth (1977), and generalised to k-consistency by Freuder (1978). Modern constraint solvers generally employ specialised propagators to prune the domains of variables to achieve some form of generalised arc-consistency, but typically do not attempt to enforce higher levels of consistency, such as path-consistency.", "startOffset": 201, "endOffset": 333}, {"referenceID": 36, "context": "To apply such tools to a constraint satisfaction problem one first has to translate the instance into a set of clauses using some form of Boolean encoding (Tamura, Taga, Kitagawa, & Banbara, 2009; Walsh, 2000).", "startOffset": 155, "endOffset": 209}, {"referenceID": 1, "context": "Building on the results of Atserias, Bulatov, and Dalmau (2007), Atserias and Dalmau (2008), and Hwang and Mitchell (2005), we show that the power of using k-consistency techniques in a constraint problem is precisely captured by using a single inference rule in a standard Boolean encoding of that problem.", "startOffset": 65, "endOffset": 92}, {"referenceID": 1, "context": "Building on the results of Atserias, Bulatov, and Dalmau (2007), Atserias and Dalmau (2008), and Hwang and Mitchell (2005), we show that the power of using k-consistency techniques in a constraint problem is precisely captured by using a single inference rule in a standard Boolean encoding of that problem.", "startOffset": 65, "endOffset": 123}, {"referenceID": 1, "context": "Building on the results of Atserias, Bulatov, and Dalmau (2007), Atserias and Dalmau (2008), and Hwang and Mitchell (2005), we show that the power of using k-consistency techniques in a constraint problem is precisely captured by using a single inference rule in a standard Boolean encoding of that problem. We refer to this inference rule as negativehyper-resolution, and show that any conclusions deduced by enforcing k-consistency can be deduced by a sequence of negative-hyper-resolution inferences involving Boolean clauses in the original instance and negative-hyper-resolvents with at most k literals. Furthermore, by using the approach of Atserias, Fichte, and Thurley (2011), and Pipatsrisawat and Darwiche (2009), we show that current clause-learning SAT-solvers will mimic the effect of such deductions in polynomial expected time, even with a random branching strategy.", "startOffset": 65, "endOffset": 684}, {"referenceID": 1, "context": "Building on the results of Atserias, Bulatov, and Dalmau (2007), Atserias and Dalmau (2008), and Hwang and Mitchell (2005), we show that the power of using k-consistency techniques in a constraint problem is precisely captured by using a single inference rule in a standard Boolean encoding of that problem. We refer to this inference rule as negativehyper-resolution, and show that any conclusions deduced by enforcing k-consistency can be deduced by a sequence of negative-hyper-resolution inferences involving Boolean clauses in the original instance and negative-hyper-resolvents with at most k literals. Furthermore, by using the approach of Atserias, Fichte, and Thurley (2011), and Pipatsrisawat and Darwiche (2009), we show that current clause-learning SAT-solvers will mimic the effect of such deductions in polynomial expected time, even with a random branching strategy.", "startOffset": 65, "endOffset": 723}, {"referenceID": 6, "context": "some level of local consistency (Bessi\u00e8re, 2006).", "startOffset": 32, "endOffset": 48}, {"referenceID": 6, "context": "We note that there are several different but equivalent ways to define and enforce k-consistency described in the literature (Bessi\u00e8re, 2006; Cooper, 1989; Freuder, 1978).", "startOffset": 125, "endOffset": 170}, {"referenceID": 9, "context": "We note that there are several different but equivalent ways to define and enforce k-consistency described in the literature (Bessi\u00e8re, 2006; Cooper, 1989; Freuder, 1978).", "startOffset": 125, "endOffset": 170}, {"referenceID": 14, "context": "We note that there are several different but equivalent ways to define and enforce k-consistency described in the literature (Bessi\u00e8re, 2006; Cooper, 1989; Freuder, 1978).", "startOffset": 125, "endOffset": 170}, {"referenceID": 0, "context": "Our presentation follows that of Atserias et al. (2007), which is inspired by the notion of existential k-pebble games introduced by Kolaitis and Vardi (2000).", "startOffset": 33, "endOffset": 56}, {"referenceID": 0, "context": "Our presentation follows that of Atserias et al. (2007), which is inspired by the notion of existential k-pebble games introduced by Kolaitis and Vardi (2000).", "startOffset": 33, "endOffset": 159}, {"referenceID": 0, "context": "Definition 2 (Atserias et al., 2007) For any CSP instance P , the k-consistency closure of P is the set H of partial assignments which is obtained by the following algorithm:", "startOffset": 13, "endOffset": 36}, {"referenceID": 0, "context": "It is straightforward to show that for any fixed k, and any fixed maximum domain size, the k-consistency closure of an instance P can be computed in polynomial time (Atserias et al., 2007; Cooper, 1989).", "startOffset": 165, "endOffset": 202}, {"referenceID": 9, "context": "It is straightforward to show that for any fixed k, and any fixed maximum domain size, the k-consistency closure of an instance P can be computed in polynomial time (Atserias et al., 2007; Cooper, 1989).", "startOffset": 165, "endOffset": 202}, {"referenceID": 0, "context": "The converse is not true in general, but it holds for certain special cases, such as the class of instances whose structure has tree-width bounded by k (Atserias et al., 2007), or the class of instances whose constraint relations are \u201c0/1/all\u201d relations, as defined in Cooper, Cohen, and Jeavons (1994), or \u201cconnected row-convex\u201d relations, as defined in Deville, Barette, and Hentenryck (1997).", "startOffset": 152, "endOffset": 175}, {"referenceID": 4, "context": "Note that computing the k-consistency closure according to this definition corresponds precisely to enforcing strong (k+1)-consistency according to the definitions given by Bessi\u00e8re (2006), Cooper (1989), and Freuder (1978).", "startOffset": 173, "endOffset": 189}, {"referenceID": 4, "context": "Note that computing the k-consistency closure according to this definition corresponds precisely to enforcing strong (k+1)-consistency according to the definitions given by Bessi\u00e8re (2006), Cooper (1989), and Freuder (1978).", "startOffset": 173, "endOffset": 204}, {"referenceID": 4, "context": "Note that computing the k-consistency closure according to this definition corresponds precisely to enforcing strong (k+1)-consistency according to the definitions given by Bessi\u00e8re (2006), Cooper (1989), and Freuder (1978). Throughout this paper, we shall assume that the domain of possible values for each variable in a CSP instance is finite.", "startOffset": 173, "endOffset": 224}, {"referenceID": 0, "context": "It is straightforward to show that for any fixed k, and any fixed maximum domain size, the k-consistency closure of an instance P can be computed in polynomial time (Atserias et al., 2007; Cooper, 1989). Note that any solution to P must extend some element of the k-consistency closure of P . Hence, if the k-consistency closure of P is empty, for some k, then P has no solutions. The converse is not true in general, but it holds for certain special cases, such as the class of instances whose structure has tree-width bounded by k (Atserias et al., 2007), or the class of instances whose constraint relations are \u201c0/1/all\u201d relations, as defined in Cooper, Cohen, and Jeavons (1994), or \u201cconnected row-convex\u201d relations, as defined in Deville, Barette, and Hentenryck (1997).", "startOffset": 166, "endOffset": 684}, {"referenceID": 0, "context": "It is straightforward to show that for any fixed k, and any fixed maximum domain size, the k-consistency closure of an instance P can be computed in polynomial time (Atserias et al., 2007; Cooper, 1989). Note that any solution to P must extend some element of the k-consistency closure of P . Hence, if the k-consistency closure of P is empty, for some k, then P has no solutions. The converse is not true in general, but it holds for certain special cases, such as the class of instances whose structure has tree-width bounded by k (Atserias et al., 2007), or the class of instances whose constraint relations are \u201c0/1/all\u201d relations, as defined in Cooper, Cohen, and Jeavons (1994), or \u201cconnected row-convex\u201d relations, as defined in Deville, Barette, and Hentenryck (1997). For these special kinds of instances it is possible to determine in polynomial time whether or not a solution exists simply by computing the k-consistency closure, for an appropriate choice of k.", "startOffset": 166, "endOffset": 776}, {"referenceID": 28, "context": "Several different ways of encoding a CSP instance as a propositional formula have been proposed (Prestwich, 2009; Tamura et al., 2009; Walsh, 2000).", "startOffset": 96, "endOffset": 147}, {"referenceID": 33, "context": "Several different ways of encoding a CSP instance as a propositional formula have been proposed (Prestwich, 2009; Tamura et al., 2009; Walsh, 2000).", "startOffset": 96, "endOffset": 147}, {"referenceID": 36, "context": "Several different ways of encoding a CSP instance as a propositional formula have been proposed (Prestwich, 2009; Tamura et al., 2009; Walsh, 2000).", "startOffset": 96, "endOffset": 147}, {"referenceID": 28, "context": "The direct encoding (Prestwich, 2009), for instance, generates a clause \u2228 v\u2208S \u00acxvf(v) for each partial assignment f that does not satisfy the constraint (R,S) \u2208 C.", "startOffset": 20, "endOffset": 37}, {"referenceID": 15, "context": "This has been used as the basis for an encoding of binary CSP instances, known as the support encoding (Gent, 2002), defined as follows.", "startOffset": 103, "endOffset": 115}, {"referenceID": 30, "context": "This form of inference is known as propositional resolution; the resultant clause is called the resolvent (Robinson, 1965).", "startOffset": 106, "endOffset": 122}, {"referenceID": 18, "context": "In the case where C0 is empty, the negative-hyper-resolution rule is equivalent to the nogood resolution rule described by Hwang and Mitchell (2005) as well as the H5-k rule introduced by de Kleer (1989) and the nogood recording scheme described by Schiex and Verfaillie (1993).", "startOffset": 123, "endOffset": 149}, {"referenceID": 11, "context": "In the case where C0 is empty, the negative-hyper-resolution rule is equivalent to the nogood resolution rule described by Hwang and Mitchell (2005) as well as the H5-k rule introduced by de Kleer (1989) and the nogood recording scheme described by Schiex and Verfaillie (1993).", "startOffset": 191, "endOffset": 204}, {"referenceID": 11, "context": "In the case where C0 is empty, the negative-hyper-resolution rule is equivalent to the nogood resolution rule described by Hwang and Mitchell (2005) as well as the H5-k rule introduced by de Kleer (1989) and the nogood recording scheme described by Schiex and Verfaillie (1993). Note that the inference obtained by negative-hyper-resolution can also be obtained by a sequence of standard resolution steps.", "startOffset": 191, "endOffset": 278}, {"referenceID": 3, "context": "It has been pointed out by many authors that enforcing local consistency is a form of inference on relations analogous to the use of the resolution rule on clauses (Bacchus, 2007; Bessi\u00e8re, 2006; Hwang & Mitchell, 2005; Rish & Dechter, 2000).", "startOffset": 164, "endOffset": 241}, {"referenceID": 6, "context": "It has been pointed out by many authors that enforcing local consistency is a form of inference on relations analogous to the use of the resolution rule on clauses (Bacchus, 2007; Bessi\u00e8re, 2006; Hwang & Mitchell, 2005; Rish & Dechter, 2000).", "startOffset": 164, "endOffset": 241}, {"referenceID": 2, "context": "It has been pointed out by many authors that enforcing local consistency is a form of inference on relations analogous to the use of the resolution rule on clauses (Bacchus, 2007; Bessi\u00e8re, 2006; Hwang & Mitchell, 2005; Rish & Dechter, 2000). The precise strength of the standard resolution inference rule on the direct encoding of a CSP instance was considered in the work of Walsh (2000), where it was shown that unit resolution (where one of the clauses being resolved consists of a single literal), corresponds to enforcing a weak form of local consistency known as forward checking.", "startOffset": 165, "endOffset": 390}, {"referenceID": 2, "context": "It has been pointed out by many authors that enforcing local consistency is a form of inference on relations analogous to the use of the resolution rule on clauses (Bacchus, 2007; Bessi\u00e8re, 2006; Hwang & Mitchell, 2005; Rish & Dechter, 2000). The precise strength of the standard resolution inference rule on the direct encoding of a CSP instance was considered in the work of Walsh (2000), where it was shown that unit resolution (where one of the clauses being resolved consists of a single literal), corresponds to enforcing a weak form of local consistency known as forward checking. Hwang and Mitchell (2005) pointed out that the standard resolution rule with no restriction on clause length is able to simulate all the inferences made by a k-consistency algorithm.", "startOffset": 165, "endOffset": 614}, {"referenceID": 1, "context": "Atserias and Dalmau (2008) showed that the standard resolution rule restricted to clauses with at most k literals, known as the kresolution rule, can be characterised in terms of the Boolean existential (k+1)-pebble game.", "startOffset": 0, "endOffset": 27}, {"referenceID": 11, "context": "A similar relationship was stated in the work of de Kleer (1989), but a complete proof was not given.", "startOffset": 52, "endOffset": 65}, {"referenceID": 1, "context": "The proof is broken down into two lemmas inspired by Lemmas 2 and 3 in the work of Atserias and Dalmau (2008).", "startOffset": 83, "endOffset": 110}, {"referenceID": 2, "context": "Most current SAT-solvers operate in the following way (Atserias et al., 2011; Pipatsrisawat & Darwiche, 2009).", "startOffset": 54, "endOffset": 109}, {"referenceID": 0, "context": "In this section we adapt the machinery from Atserias et al. (2011), and Pipatsrisawat and Darwiche (2009) to show that for any fixed k, the existence of a negative-hyper-resolution refutation of width k is likely to be discovered by a SAT-solver in polynomial-time using standard clause learning and restart techniques, even with a totally random branching strategy.", "startOffset": 44, "endOffset": 67}, {"referenceID": 0, "context": "In this section we adapt the machinery from Atserias et al. (2011), and Pipatsrisawat and Darwiche (2009) to show that for any fixed k, the existence of a negative-hyper-resolution refutation of width k is likely to be discovered by a SAT-solver in polynomial-time using standard clause learning and restart techniques, even with a totally random branching strategy.", "startOffset": 44, "endOffset": 106}, {"referenceID": 0, "context": "In this section we adapt the machinery from Atserias et al. (2011), and Pipatsrisawat and Darwiche (2009) to show that for any fixed k, the existence of a negative-hyper-resolution refutation of width k is likely to be discovered by a SAT-solver in polynomial-time using standard clause learning and restart techniques, even with a totally random branching strategy. Note that previous results about the power of clause-learning SAT-solvers have generally assumed an optimal branching strategy (Beame, Kautz, & Sabharwal, 2004; Pipatsrisawat & Darwiche, 2009) - they have shown what solvers are potentially capable of doing, rather than what they are likely to achieve in practice. An important exception is the paper by Atserias et al. (2011), which gives an analysis of likely behaviour, but relies on the existence of a standard resolution proof of bounded width.", "startOffset": 44, "endOffset": 744}, {"referenceID": 0, "context": "In this section we adapt the machinery from Atserias et al. (2011), and Pipatsrisawat and Darwiche (2009) to show that for any fixed k, the existence of a negative-hyper-resolution refutation of width k is likely to be discovered by a SAT-solver in polynomial-time using standard clause learning and restart techniques, even with a totally random branching strategy. Note that previous results about the power of clause-learning SAT-solvers have generally assumed an optimal branching strategy (Beame, Kautz, & Sabharwal, 2004; Pipatsrisawat & Darwiche, 2009) - they have shown what solvers are potentially capable of doing, rather than what they are likely to achieve in practice. An important exception is the paper by Atserias et al. (2011), which gives an analysis of likely behaviour, but relies on the existence of a standard resolution proof of bounded width. Here we show that the results of Atserias et al. can be extended to hyper-resolution proofs, which can be shorter and narrower than their associated standard resolution proofs. We will make use of the following terminology from Atserias et al. (2011). For a clause C, a Boolean variable x, and a truth value a \u2208 {0, 1}, the restriction of C by the assignment x = a, denoted C|x=a, is defined to be the constant 1, if the assignment satisfies the clause, or else the clause obtained by deleting from C any literals involving the variable x.", "startOffset": 44, "endOffset": 1118}, {"referenceID": 2, "context": "Definition 4 (Atserias et al., 2011) Let \u2206 be a set of clauses, C a non-empty clause, and l a literal of C.", "startOffset": 13, "endOffset": 36}, {"referenceID": 25, "context": "Note that a closely related notion is introduced by Pipatsrisawat and Darwiche (2009) for clauses that are not absorbed by a set of clauses \u2206; they are referred to as 1-empowering with respect to \u2206.", "startOffset": 52, "endOffset": 86}, {"referenceID": 0, "context": "The following key properties of absorption are established by Atserias et al. (2011).", "startOffset": 62, "endOffset": 85}, {"referenceID": 2, "context": "Lemma 5 (Atserias et al., 2011) Let \u2206 and \u2206\u2032 be sets of clauses, and let C and C \u2032 be non-empty clauses.", "startOffset": 8, "endOffset": 31}, {"referenceID": 37, "context": "Most learning schemes in current use satisfy this assumption (Pipatsrisawat & Darwiche, 2009; Zhang et al., 2001), including the learning schemes called \u201c1UIP\u201d and \u201cDecision\u201d (Zhang et al.", "startOffset": 61, "endOffset": 113}, {"referenceID": 37, "context": ", 2001), including the learning schemes called \u201c1UIP\u201d and \u201cDecision\u201d (Zhang et al., 2001).", "startOffset": 69, "endOffset": 89}, {"referenceID": 0, "context": "As noted by Atserias et al. (2011), the same analysis we give below can also be applied to any other branching strategy that randomly chooses between making a heuristic-based decision or a randomly-based decision.", "startOffset": 12, "endOffset": 35}, {"referenceID": 0, "context": "See Lemmas 5, 8 and 10 in the work of Atserias et al. (2011) for a more formal statement and proof of this assertion.", "startOffset": 38, "endOffset": 61}, {"referenceID": 2, "context": "A tighter bound on the number of restarts can be obtained if we focus on the Decision learning scheme (Atserias et al., 2011; Zhang et al., 2001), as the next result indicates.", "startOffset": 102, "endOffset": 145}, {"referenceID": 37, "context": "A tighter bound on the number of restarts can be obtained if we focus on the Decision learning scheme (Atserias et al., 2011; Zhang et al., 2001), as the next result indicates.", "startOffset": 102, "endOffset": 145}, {"referenceID": 0, "context": "Note that this result cannot be obtained directly from the work of Atserias et al. (2011), because the direct encoding of an instance with tree-width k is a set of clauses whose tree-width may be as high as dk.", "startOffset": 67, "endOffset": 90}, {"referenceID": 0, "context": "Note that this result cannot be obtained directly from the work of Atserias et al. (2011), because the direct encoding of an instance with tree-width k is a set of clauses whose tree-width may be as high as dk. Moreover, a standard randomised SAT-solver will decide the satisfiability of any CSP instance, with any structure, within the same polynomial bounds, if the constraint relations satisfy certain algebraic properties that ensure bounded width (Barto & Kozik, 2009). Examples of such constraint types include the \u201c0/1/all\u201d relations, defined by Cooper et al. (1994), and the \u201cconnected row-convex\u201d relations, defined by Deville et al.", "startOffset": 67, "endOffset": 574}, {"referenceID": 0, "context": "Note that this result cannot be obtained directly from the work of Atserias et al. (2011), because the direct encoding of an instance with tree-width k is a set of clauses whose tree-width may be as high as dk. Moreover, a standard randomised SAT-solver will decide the satisfiability of any CSP instance, with any structure, within the same polynomial bounds, if the constraint relations satisfy certain algebraic properties that ensure bounded width (Barto & Kozik, 2009). Examples of such constraint types include the \u201c0/1/all\u201d relations, defined by Cooper et al. (1994), and the \u201cconnected row-convex\u201d relations, defined by Deville et al. (1997), which can both be decided by 2-consistency.", "startOffset": 67, "endOffset": 650}, {"referenceID": 0, "context": "Note that this result cannot be obtained directly from the work of Atserias et al. (2011), because the direct encoding of an instance with tree-width k is a set of clauses whose tree-width may be as high as dk. Moreover, a standard randomised SAT-solver will decide the satisfiability of any CSP instance, with any structure, within the same polynomial bounds, if the constraint relations satisfy certain algebraic properties that ensure bounded width (Barto & Kozik, 2009). Examples of such constraint types include the \u201c0/1/all\u201d relations, defined by Cooper et al. (1994), and the \u201cconnected row-convex\u201d relations, defined by Deville et al. (1997), which can both be decided by 2-consistency. It was shown by Gent (2002) that the support encoding of a binary CSP instance can be made arc-consistent (that is, 1-consistent) by applying unit propagation alone.", "startOffset": 67, "endOffset": 723}, {"referenceID": 6, "context": "We note that our results can be generalised to some other types of consistency such as singleton arc-consistency (Bessi\u00e8re, 2006).", "startOffset": 113, "endOffset": 129}, {"referenceID": 25, "context": "12, and the G12 finite domain solver (Nethercote et al., 2007), version 1.", "startOffset": 37, "endOffset": 62}, {"referenceID": 31, "context": "As the characteristic feature of the instances tested is their relatively low tree-width, we also used the Toulbar2 solver (Sanchez et al., 2008).", "startOffset": 123, "endOffset": 145}, {"referenceID": 25, "context": "An instance with w = 2 and d = 2 is shown diagrammatically and defined using the specification language MiniZinc (Nethercote et al., 2007) in Figure 1 (a) and (b) respectively5.", "startOffset": 113, "endOffset": 138}, {"referenceID": 0, "context": "Hence the tree-width of these instances is 2w \u2212 1 and they can be shown to be unsatisfiable by enforcing (2w \u2212 1)consistency (Atserias et al., 2007).", "startOffset": 125, "endOffset": 148}, {"referenceID": 37, "context": "As the 1UIP learning scheme has generally been found to be more efficient in practice (Zhang et al., 2001), we switched off conflict clause minimization in simpleMiniSAT in order to compare the two standard learning schemes and ran a further set of experiments.", "startOffset": 86, "endOffset": 106}, {"referenceID": 5, "context": "It is known that, with an appropriate branching strategy and restart policy, they are able to p-simulate general resolution (Beame et al., 2004; Pipatsrisawat & Darwiche, 2009), and general resolution proofs can be exponentially shorter than the negative-hyper-resolution proofs we have considered here (Hwang & Mitchell, 2005).", "startOffset": 124, "endOffset": 176}], "year": 2012, "abstractText": "Local consistency techniques such as k-consistency are a key component of specialised solvers for constraint satisfaction problems. In this paper we show that the power of using k-consistency techniques on a constraint satisfaction problem is precisely captured by using a particular inference rule, which we call negative-hyper-resolution, on the standard direct encoding of the problem into Boolean clauses. We also show that current clauselearning SAT-solvers will discover in expected polynomial time any inconsistency that can be deduced from a given set of clauses using negative-hyper-resolvents of a fixed size. We combine these two results to show that, without being explicitly designed to do so, current clause-learning SAT-solvers efficiently simulate k-consistency techniques, for all fixed values of k. We then give some experimental results to show that this feature allows clause-learning SAT-solvers to efficiently solve certain families of constraint problems which are challenging for conventional constraint-programming solvers.", "creator": "TeX"}}}