{"id": "1401.5424", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Jan-2014", "title": "Real Time Strategy Language", "abstract": "Real Time Strategy (RTS) games provide complex domain to test the latest artificial intelligence (AI) research. In much of the literature, AI systems have been limited to playing one game. Although, this specialization has resulted in stronger AI gaming systems it does not address the key concerns of AI researcher. AI researchers seek the development of AI agents that can autonomously interpret learn, and apply new knowledge. To achieve human level performance, current AI systems rely on game specific knowledge of an expert. The paper presents the full RTS language in hopes of shifting the current research focus to the development of general RTS agents. General RTS agents are AI gaming systems that can play any RTS games, defined in the RTS language. This prevents game specific knowledge from being hard coded into the system, thereby facilitating research that addresses the fundamental concerns of artificial intelligence.", "histories": [["v1", "Tue, 21 Jan 2014 19:14:22 GMT  (729kb)", "http://arxiv.org/abs/1401.5424v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["roy hayes", "peter beling", "william scherer"], "accepted": false, "id": "1401.5424"}, "pdf": {"name": "1401.5424.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Roy Hayes", "Peter Beling", "William Scherer"], "emails": [], "sections": [{"heading": null, "text": "Real Time Strategy Language Version 1Roy HayesPeter BelingWilliam Scherer"}, {"heading": "Introduction:", "text": "Over the past decade, researchers have begun to focus on artificial intelligence (AI) for real-time strategy (RTS) games. RTS are popular computer games that involve the development and support of an army of different unit types and buildings. Unlike classic games, such as chess, players perform their actions in real-time to make based decisions. In addition, players move simultaneously to potentially hundreds of units and buildings. That is, researchers have tried to develop a solution for a single aspect of the RTS game. In recent years, there has been a push for the development of AI systems that are capable of playing the full game."}, {"heading": "Language Structure", "text": "The description of the game language was originally designed for turn-based perfect information, symmetrical games. It was later expanded to include imperfect game information. Each turn a player is given suggestions that are true in the given state. In addition, the player receives possible steps that can be made from this state and how they will affect the game. The problem with this formulation is that as the complexity of the game increases also the number of suggestions is required to describe the game state. In addition, the number of possible actions and transitions also increases with complexity [5].Real-time strategy (RTS) games are not conducive to the original format of GDL. Turnbased updates are not feasible for RTS game because they are played over a continuous timeframe. In addition, a player can control hundreds of buildings and units, resulting in exponential growth in possible actions and state transitions."}, {"heading": "Faction Description", "text": "< < < < < > > This describes the factions that comprise the game, along with their buildings and units.; Resources indicate what resources are available in the game.; At the beginning of the game, a player will have 100 pieces of wood for use. As it is game-specific information, they are easily renamed.; Resources indicate that the resources are available in the game.; At the beginning of the game, a player will have 100 pieces of wood for use."}, {"heading": "Environment Description", "text": "The following is a brief example of the map specification system. < Map > < Name > Hills < / Name > < (0.0) > < Ground > Ground Air < / Ground > < / Ground > < Gold > 1000 < / Gold > < / (0.0) > < (0.1) > < Ground > < / Ground > < / Ground > < / Ground > < / (0.1) > < (0.1) > < Grounds > < Wood > 300 < / Ground > < / Ground > < / Ground > < / (0.1) > < / Map > The first cell specifies the terrain as highlands and air, but there is a gold deposit worth 1000 units on it."}, {"heading": "Game Management", "text}, {"heading": "Action", "text": "The list of possible actions that a unit or building can perform is listed below. < Move > x, y < / Move > - Position the unit or building to < Attack > UniqueID < / Attack > - Building or unit attacked by a selected unit < Collect > Resource < / Collect > - Resources that the unit collects, including the process of returning the resource to the processing point < Build > Build < Build > - Tell what the unit is building, training or exploring."}, {"heading": "Armor", "text": "Armor can be specified as a real number or percentage. Armor can be universally specified or made attack specific. In the following example, armor reduces the attack damage of each attack by 2, except for arrows and swords. Arrow and sword attack damage decreases by 3% and sword damage by 5. < Armor > 2 < Arrow > 3% < / Arrow > < Sword > 5 < / Sword > < / Armor >"}, {"heading": "Attack", "text": "The attack includes all the attributes of an attack. It defines the range, shape, size, damage, loading speed, vulnerable terrain and the requirements for an attack. Multiple attacks can be specified for each company. 5 mana are required below. Mana is game specific information and can be specified for each unit or faction as a whole. < Attack > < Attack 1 > < / Attack > 4 < / Reach > < Damage > 3-9 < / Damage > < Charge > 2 < / Load > < / Form > Point < / Form > < Terrain > 1 < / Terrain > < Request > < Mana > 5 < / Mana > < / Attack 1 > < / Attack > < / Attack > < / Attack >"}, {"heading": "Build", "text": "Make a list of the possible things a unit or building can construct, train or explore. Possible buildable items are separated by a newline character. < Create > Tank Jet < / Create >"}, {"heading": "Building", "text": "The keyword building includes all information about buildings for a specific faction."}, {"heading": "Building Time", "text": "Construction time is the time it takes in seconds to construct, train or explore something. Construction time is assumed to be a real number."}, {"heading": "Contain", "text": "Contain is a tag used for buildings or units that may contain other units, such as a transport ship. With this tag, you can set restrictions on which units may enter the structure. A total of 8 weight units are available for this structure. The total weight of all units within the structure must not exceed 8. Also, only units with light armor may enter the structure. < Contain > < Weight > 8 < / Weight > < Armor > Light < / Armor > < / Contain >"}, {"heading": "Damage", "text": "Damage is the amount of damage caused by an attack. Damage values are given as minimum damage and maximum damage. Damage can also be set universally or for individual units. If specified for individual units, the universal damage for that unit is invalidated. It is assumed that the maximum damage is always done unless the armor negates the damage. < Damage > 2-5 < Horse > 4 -9 < / Horse > < / Damage >"}, {"heading": "Distance", "text": "Distance indicates when something must occur at a certain distance or outside a certain distance. An action must take place at a distance of 1 unit from the structure, but no more than 5. < Distance > < Less > 5 < / Less > < Greater > 1 < / Greater > < Distance >"}, {"heading": "Enemy", "text": "Enemy lists the current enemies in a company's field of vision. < Enemy > < Horse > < UniqueID > < Health Point > 100 < / Health Point > < / UniqueID > < / Horse > < / Enemy >"}, {"heading": "Faction", "text": "Factions determine the possible playable groups. In most RTS games, there are multiple factions, each with its own buildings, units, and an effective strategy to play. < Fraction > Fraction 1 Fraction 2 < / Fraction >"}, {"heading": "Gather", "text": "Gather specifies the resources the unit can collect. < Gather > < Resource 1 > 50-100 < / Resource 1 > < / Gather > The first number is the current amount of resources the unit can carry; the second number is the maximum amount the unit can carry. < Gather > < Resource 1 > 50-100 < / Resource 1 > < / Gather >"}, {"heading": "Health Point", "text": "Health Point describes how much life an object has left. It is assumed that health point is a real number. As soon as the health point of an object falls below 0, it is removed from the game. < Health Point > 1200 < / Health Point >"}, {"heading": "Limit", "text": "Specifies how many times an ability may be used. < Mine > < Limit > 4 < / Limit > < / Mine >"}, {"heading": "Map", "text": "The RTS language assumes that the game is played on a two-dimensional board. 3 dimensions can be added by setting multiple terrains for a single coordinate space. < Map > < Name > Map Name < / Name > < #, # > < Terrain > Ground Air < / Terrain > < / #, # > < / Map >"}, {"heading": "Modify", "text": "In some games, attacking an enemy on high ground reduces your attack power by a certain percentage, which can be encoded according to the hierarchical structure. In the following example, the attack damage of units on low ground is reduced by 25% when attacking on higher ground. The same applies to movement speed, visibility, etc. < Terrain > < Low > < Modify > < Attack > < High > < Damage > -25% < / Damage > < / High > < / Attack > < / Modify > < / Low > < / Terrain >"}, {"heading": "Movement", "text": "This marker is optional and indicates movement values. If this marker does not exist, units are assumed to occupy the same terrain at a given speed and move over the same area. However, in some games, units or buildings can land on the ground and move through the air, as demonstrated in the following example. < Terrain > Ground < / Terrain > < Terrain > Air < / Terrain > < Movement >"}, {"heading": "Name", "text": "Name is the name of the current card. It is assumed that the AI system is trained to play on each particular card. At the beginning of each match, the AI system is given the name of the card so that it can play the strategy for that card. See map for example."}, {"heading": "Prepare", "text": "Prepare means that a building must be placed on a resource in order to extract it. This is akin to an oil platform placed above an oil well. This facility prepares a resource for extraction that can or cannot process it. Resources separated by line breaks. < Prepare > Resource 1 < / Prepare >"}, {"heading": "Process", "text": "The process indicates that a building is a warehouse for a particular resource. Resources delivered to that building are added to the total amount of the user."}, {"heading": "Purpose", "text": "The purpose of use indicates the function of a building, including all possible units that can be trained in the building, whether a building recycles or processes resources, and finally all possible research results that can be examined on the building. < Purpose > < Process > < Resource > < / Resource > < / Process > < Construction > Unit 1 Tech 1 < / Construction > < / Purpose >"}, {"heading": "Range", "text": "Range defines the maximum distance a unit or building can and still can be attacked or repaired, assuming it is a real number. < Range > 1 < / Range >"}, {"heading": "Recharge", "text": "Charge time is the time between attacks in seconds. Think of this as the time it takes an archer to draw and fire another bow. < Charge time > 3 < / Charge time >"}, {"heading": "Repair", "text": "Repair is the number of health points a unit can restore per second in another unit / building. Similar to damage, this can be universally defined or unit-specific. If a unit is specified, it overrides the overall repair rate and reach for that unit only. < Repair > 2 < Reach > 1 < / Reach > < Horse > 1 < Reach > 2 < / Reach > < / Horse > < / Repair >"}, {"heading": "Require", "text": "Requirement specifies what is required to train, build, or explore something, which may include having the required amount of resources available, having necessary buildings built, or completing technological research. As Tech 1 is game-specific information, it does not need to be entered in a keyword tag. < Requirement > < Resource > < Resource 1 > 500 < / Resource 1 > < Resource 2 > 50 < / Resource 2 > < / Resource > < Building 1 Building 2 < / Building > Tech 1 Tech 2 < / Require >"}, {"heading": "Resource", "text": "Resources are all items that need to be collected from the map to build units or buildings, and can also be expanded to items that are generated when building buildings and are needed to build other units or buildings, such as farm food. Each resource is separated by a line break. Additionally, the value of the resource tag used in the game indicates the current amount of that resource available to the player. < Resource > < Resource 1 > 50 < / Resource 1 > < Resource 2 > 300 < / Resource 2 > < Resource 3 > 25 < / Resource 3 > < / Resource >"}, {"heading": "Shape", "text": "Entities and attacks have a shape. There are several shapes that can be used as keywords. The x, y position is always assumed to be the center of the shape. Point - Point is a single point in space. Square - The size of the square indicates the length of the square side. < Square > < Size > 5 < / Size > < / Square > Rectangle - The size of a rectangle is defined by two numbers. < The first number defines the sides running parallel to the attacking entity, the second number defines the vertical side. < Rectangle > < Size > 5-10 < / Size > < / Circle > < / Rectangle > Circle - The size of a circle defines the radius of the circle. < Circle > < Size > < / Size > < / Size > < / Size > Cone; < < / Circle > F _ Cone."}, {"heading": "Size", "text": "Size indicates the size of the shape. Depending on the shape, one or two numbers can be specified. For example, look at shape."}, {"heading": "Speed", "text": "Speed is the distance an object can travel per second. It is believed to be a real number that can be slowed down by obstacles such as walls. < Speed > 2 < / Speed >"}, {"heading": "Terrain", "text": "The meaning of the terrain changes depending on the day it is enclosed; for maps, it indicates the terrain that the current grid square consists of; for units, it indicates the terrain on which the buildings can be built; for units, it indicates the terrain through which the units can move and attack; in addition, the terrain can be changed according to conditions; the following example shows a resource of 300 pieces of wood. At the beginning of the game, wood is the terrain, but once the wood is removed, snow becomes the terrain. < Terrain > < Wood > 300 < / Wood > / Snow Air < / Terrain >"}, {"heading": "Time Limit", "text": "This indicates the time each skill can remain active, in seconds. See Game Specific Ability for an example."}, {"heading": "Weight", "text": "This is an optional element. It is used to set the weight of a unit. The combined weight of all units within a structure must not exceed a defined maximum."}, {"heading": "Vision", "text": "Seeing is the distance a unit can see from it, which is assumed to be a real number. All enemies crossing within its field of vision will be added to its Enemy Day for the duration the enemy is in the field of vision. If the user requests an update, the coordinates within its field of vision will also be included in the update. < See > 5 < / See >"}, {"heading": "Unit", "text": "The unit keyword contains all information about units of a particular faction."}, {"heading": "UniqueID", "text": "Each building and unit is uniquely identified so that the AI and game engine can identify the right unit."}, {"heading": "Upgrade", "text": "Upgrade specifies what items the unit or building can be upgraded to. < Upgrade > Keep < / Upgrade >"}, {"heading": "Game Specific Ability", "text": "To define a game-specific ability, create a tag with the name of the ability within the unit or building in which it is used, specify what is changed and whether there is a requirement for the ability, see example below. < Lockdown > < Enemy > < Recharge > 100000 < / Recharge > < Speed > - 100% < / Speed > < / Enemy > < Require > < Enemy > < / Biological > False < / Biological > < / Enemy > < / Require > < / Time Limt > 12 < / Time Limt > < > < <"}], "references": [{"title": "An integrated agent for playing real-time strategy games", "author": ["J. McCoy", "M. Mateas"], "venue": "In AAAI,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2008}, {"title": "The structure of games", "author": ["D.M. Kaiser"], "venue": "In Proceedings of the 43rd annual Southeast regional conference-Volume", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "A general game description language for incomplete information games", "author": ["M. Thielscher"], "venue": "In AAAI,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2010}, {"title": "A bayesian model for opening prediction in rts games with application to starcraft", "author": ["G. Synnaeve", "P. Bessiere"], "venue": "In IEEE Conference on Computational Intelligence and Games,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "The general game playing description language is universal", "author": ["M. Thielscher"], "venue": "In Proceedings of the Twenty-Second international joint conference on Artificial Intelligence-Volume Volume Two,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "A corpus analysis of strategy video game play in starcraft: Brood war", "author": ["J.M. Lewis", "P. Trinh", "D. Kirsh"], "venue": "In Proceedings of the 33rd annual conference of the cognitive science society,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Researchers have generally limited their AI implementation to subcomponents of games, such as resource management or path finding [1].", "startOffset": 130, "endOffset": 133}, {"referenceID": 1, "context": "These general gaming agents have been developed for relatively simple games such chess, tic-tac-toe, and more recently poker, they are known as General Game Playing (GGP) agents [2].", "startOffset": 178, "endOffset": 181}, {"referenceID": 2, "context": "General RTS agents implement an adaptive learning system, thereby mitigating this problem [3].", "startOffset": 90, "endOffset": 93}, {"referenceID": 4, "context": "In addition, the number of possible actions and transitions also increase with complexity [5].", "startOffset": 90, "endOffset": 93}, {"referenceID": 5, "context": "Lewis et al, found a correlation between winning a game and the action rate of players [6].", "startOffset": 87, "endOffset": 90}], "year": 2014, "abstractText": null, "creator": "Microsoft\u00ae Word 2010"}}}