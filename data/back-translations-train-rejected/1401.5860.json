{"id": "1401.5860", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jan-2014", "title": "A New Look at BDDs for Pseudo-Boolean Constraints", "abstract": "Pseudo-Boolean constraints are omnipresent in practical applications, and thus a significant effort has been devoted to the development of good SAT encoding techniques for them. Some of these encodings first construct a Binary Decision Diagram (BDD) for the constraint, and then encode the BDD into a propositional formula. These BDD-based approaches have some important advantages, such as not being dependent on the size of the coefficients, or being able to share the same BDD for representing many constraints.", "histories": [["v1", "Thu, 23 Jan 2014 02:48:33 GMT  (634kb)", "http://arxiv.org/abs/1401.5860v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ignasi ab\\'io", "robert nieuwenhuis", "albert oliveras", "enric rodriguez-carbonell", "valentin mayer-eichberger"], "accepted": false, "id": "1401.5860"}, "pdf": {"name": "1401.5860.pdf", "metadata": {"source": "CRF", "title": "A New Look at BDDs for Pseudo-Boolean Constraints", "authors": ["Ignasi Ab\u0301\u0131o", "Robert Nieuwenhuis", "Albert Oliveras", "Enric Rod\u0155\u0131guez-Carbonell", "Valentin Mayer-Eichberger"], "emails": ["iabio@lsi.upc.edu", "roberto@lsi.upc.edu", "oliveras@lsi.upc.edu", "erodri@lsi.upc.edu", "mayereichberger@gmail.com"], "sections": [{"heading": "1. Introduction", "text": "In this paperwe study, each clause could simply define a minimum variability that cannot be true at the same time. (PB restrictions for a short time), that is, the limitations of the form a1x1 + \u00b7 \u00b7 \u00b7 \u00b7 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"}, {"heading": "2. Preliminaries", "text": "Leave X = {x1, x2,.} be a fixed set of propositional variables is true A least A A. If x x and x are positive and negative literals, respectively. The negation of a literal l, written l, means x, if l is x, and x, if l is x. a CNF formula is a conjunction of letters x1, which have a row of letters, so that there is a row of letters, so that {x, x} x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x"}, {"heading": "3. Exponential ROBDDs for PB Constraints", "text": "In this section, we will examine the size of ROBDD for PB constraints. Let's start by defining the interval of a PB constraint. Then, in Section 3.2, we will look at two families of PB constraints and examine their ROBDD size: First, we will prove that the example given by Bailleux et al. (2006) has polynomial ROBDD, and then we will reproduce the example of Hosaka et al. (1994), which has exponential ROBDD constraints regardless of the variable order. Finally, we will relate the ROBDD size of a PB constraint to the known subset sum problem."}, {"heading": "3.1 Intervals", "text": "Before we formally define the concept of the interval of a PB constraint, we must first give some intuitive explanations. Example 3. Consider the constraint 2x1 + 3x2 + 5x3 \u2264 6. Since no combination of its coefficients can be added to 6, the constraint is equivalent to 2x1 + 3x2 + 5x3 < 6, and thus to 2x1 + 3x2 + 5x3 \u2264 5. This process cannot be repeated since 5 can be achieved with the existing coefficients. Likewise, we could try to increase the right side of the constraint. However, there is a combination of the coefficients that adds to 7, which implies that the constraint is not equivalent to 2x1 + 3x3 \u2264 7. Overall, we can say that the constraint is equivalent to 2x1 + 3x2 + 5x3 \u2264."}, {"heading": "3.2 Some Families of PB Constraints and their ROBDD Size", "text": "We start by revisiting the family of PB constraints given by Bailleux et al. (2006), proving that for their specific variable sequence, their unreduced BDDs grow exponentially for that family. Here, we prove that ROBDDs are polynomial for that family and that this is even independent of the variable sequence. The family is defined by taking into account one, b and n positive integers such as this."}, {"heading": "3.3 Relation between the Subset Sum Problem and the ROBDD Size", "text": "In this section, we will examine the relationship between the ROBDD size for a PB constraint and the subsum problem = 11. This allows us, assuming NP and Co-NP are different, to give a much simpler proof that there are PB constraints that are not polynomial ROBDs.Lemma 9 and the exponential ROBDD example of Theorem 10 suggest that there is a relationship between the size of the ROBDDs and the number of possibilities we can get by adding some of the coefficients of the PB. It seems that if K can be achieved in many different ways, the ROBDD example large.In this section, we will examine another relationship between the problem of adding K with a subset of coefficients and the size of the ROBDDs. In a sense, we will provide evidence that the reversal of the last paragraph is not true: if NP and co-NP are different, there are exponentially dimensioned ROBDDs constraints of their PB efficiency."}, {"heading": "4. Avoiding Exponential ROBDDs", "text": "In this section, we will present our positive results. We limit ourselves to a specific class of PB constraints where all coefficients are powers of two. As we will show below, these constraints allow polynomial ROBDDs. Furthermore, any PB constraint can be reduced to this class by means of coefficient decomposition. Example 13. Let us take the PB constraint 9x1 + 8x2 + 3x3 \u2264 10. Given the binary representation of the coefficients, this constraint can be rewritten to (23x3.1 + 20x0.1) + (23x3.2) + (2 1x1.3 + 2 0x0.3) \u2264 10 if we add the binary clauses expressing that xi, r = xr stands for suitable i and r."}, {"heading": "4.1 Power-of-two PB Constraints Do Have Polynomial-size ROBDDs", "text": "Consider a PB constraint of the form: C: 20 \u00b7 \u03b40,1 \u00b7 x0,1 + 20 \u00b7 \u03b40,2 \u00b7 x0,2 + \u00b7 \u00b7 + 20 \u00b7 \u04210, n \u00b7 x0, n + 21 \u00b7 \u03b2\u03b2xi + 21 \u00b7 \u03b21,2 \u00b7 x1,2 + \u00b7 \u00b7 + 21 \u00b7 \u03b41, n \u00b7 x1, n +. + 2m \u00b7 \u03b4m, 1 \u00b7 xm, 1 + 2m \u00b7 \u03b4m, 2 \u00b7 xm, 2 + \u00b7 \u00b7 \u00b7 + 2m \u00b7 \u03b4m, n \u00b7 xm, n \u2264 K, where \u03b4i, r \u043fi, 0, 1} for all i and r. Note that any PB constraint whose coefficients are powers of 2 can be expressed in this way. Let us consider its ROBDD representation in the order [x0,1, x0,2,.., x0, n, x1,1,."}, {"heading": "4.2 A Consistent Encoding for PB Constraints", "text": "Let us now take an arbitrary PB constraint C: + \u00b7 \u00b7 n \u2264 K and assume that aM is the greatest coefficient.For m = log aM we can rewrite C by dividing the coefficients into two powers, as shown in Example 13: C: 20 \u00b7 \u03b40,1 \u00b7 x0,1 + 20 \u00b7 \u03b20,2 \u00b7 x0,2 + \u00b7 20 \u00b7 \u03b40, n \u00b7 xm, n + 21 \u00b7 \u03b41,1 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 + 21 \u00b7 \u00b7 1, n + 2m \u00b7 \u03b2m, 1 + 2 \u00b7 xm, 2 \u00b7 xm, 2 + xm, 2 + \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 1, n + 2m \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 n, 1 \u00b7 \u00b7 xm, 1 \u00b7 xm, 1 + 2 \u00b7 xm, 2 \u00b7 xm, 2 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7"}, {"heading": "4.3 A Generalized Arc-consistent Encoding for PB Constraints", "text": "The intuitive idea can be seen in the following example: Example 17. Consider the constraint 3x1 + 4x2 \u2264 6. After dividing the coefficients into powers of two, we get C \u00b2: x0.1 + 2x1.1 + 4x2.2 \u2264 6. If we set x2.2 to true, C \u00b2 implies that either x0.1 or x1.1 must be wrong, but the coding cannot take advantage of the fact that both variables have the same truth value and therefore both should be propagated. Addition of clauses stating that x0.1 = x1.1 does not help the propagation of x1 in this sense. To overcome this constraint, we follow the method used by Bessiere, Katsirelos, Narodytska and Walsh (2009) and Bailleux et al. (2009)."}, {"heading": "5. An Algorithm for Constructing ROBDDs for Pseudo-Boolean", "text": "Condition tsLet us fix a pseudo-boolean constraint a1x1 + \u03b2 \u03b2 B = \u03b2 \u03b2 B and a variable sequence [x1, x2,.., xn]. The aim of this section is to prove that the ROBDD of this constraint can be constructed using this sequence in polynomial time and, secondly, the algorithm in terms of ROBDD size and n.This algorithm builds standard ROBDDs, but it can be used to create ROBDDs with coefficients: we must first divide the coefficients and, secondly, apply the algorithm. Future Example 21 shows the overall process in detail. A very similar implementation of this algorithm was described by Mayer-Eichberger (2008).The central point of the algorithm will be to label each node of the ROBDD with its interval."}, {"heading": "6. SAT Encodings of BDDs for Monotonic Functions", "text": "In fact, it is that it is able to assert itself and that it is able to assert itself."}, {"heading": "7. Related Work", "text": "Due to the ubiquity of the pseudo-Boolean constraints and the success of the SAT solvers, the problem of encoding these constraints in SAT has been thoroughly investigated not only in the literature. In the following, we will review the most important contributions, paying particular attention to the basic idea on which they are based, the encoding size and the propagation properties that the encodings fulfil. To simplify the presentation, the remaining steps of this section always assume that the constraint that we want to encode is a1x1 +. + anxn \u2264 k, with maximum amax coefficiency.The first encoding to mention is the variant proposed by Warner (1998). Encoding uses several add numbers in binary representation. First, the left side of the constraint is divided into two halves, each of which is treated recursively to calculate the corresponding subtotal."}, {"heading": "8. Experimental Results", "text": "Our goal is to assess how interesting BDD-based encodings are from a practical standpoint. For us, this means to investigate whether they compete with existing techniques, whether they generally behave well, or are only interesting for very specific types of problems, or whether they produce smaller encodings. To this end, we first compare our encodings with other SAT encodings in terms of encoding time, number of clauses, and number of variables. Then, we also look at the total runtime (i.e. encoding time plus resolution time) of these encodings and compare it with the runtime of pseudo-Boolean solvers. Finally, we briefly report on some experiments with parts, i.e. we try several pseudo-Boolean constraints in a single ROBDDD. All experiments were conducted on a 2Ghore Linux benchmark."}, {"heading": "8.1 The Bergmann-Hommel Test", "text": "To summarize the experiments and make it easier to extract conclusions, each experiment is accompanied by a Bergmann-Hommel non-parametric hypotheses test (Bergmann & Hommel, 1988).The Bergmann-Hommel test is a method for comparing the results of different methods across multiple independent datasets.It gives us two interesting information tests. First, it sorts the methods by giving them a real number between 1 and n, so that the lower number is the better methodology. Furthermore, it indicates for each method pair whether one method significantly improves the other. As an example, Figure 10 is the output of a Bergmann-Hommel test. BDD-1 is the best method, but there is no significant difference between this method and BDD-2 (illustrated by a thick line linking the methods)."}, {"heading": "8.2 Encodings into SAT", "text": "In fact, it is the case that most people living in the USA live in the USA and in the United States of America, in the USA and in the United States, in Europe, in Europe and in the USA, in Europe and in the USA, in Europe and in the USA, in the USA and in the USA, in the EU and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the EU and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA and in the USA, in the USA, in the USA, in the USA and in the USA, in the USA and in the USA, in the USA, in the USA, in the USA and in the USA, in the USA, in the USA, in the USA and in the USA, in the USA, in the USA, in the USA, in the USA and in the USA, in the USA, in the USA, in the USA, in the USA"}, {"heading": "8.3 SAT vs. PB", "text": "In this section we compare the state-of-the-art solvers for pseudo-Boolean problems and some encodings in SAT. For the SAT approach, once the encoding is done, the SAT formula is given to the SAT Solver Lingeling (Biere, 2010) version 276. We have looked at the same SAT encodings as in the previous section. Regarding the pseudo-Boolean solvers, we have MiniSAT + (Ee \ufffd n & So \ufffd rensson, 2006) and the best non-parallel solvers in the no-optimization, small integrators, linear limitations category of the pseudo-Boolean competition: borg & Miikkulainen, 2010) version pb-dec-11,04.03, bsolo (Manquinho & Silva, 2006) version 3.2, wbo (Manquinho, Martins, Lynce, 2010) version 1.4 and SAT4J (Berre Parrain, 2010) 2.We have the Barcelongic version."}, {"heading": "8.4 Sharing", "text": "One of the possible advantages of using ROBDDs to encode pseudo-Boolean constraints is that ROBDDs allow you to encode a series of constraints, not just one. It seems natural to think that if two constraints are similar enough, the two individual ROBDDs would be similar in structure, and their merging into a single one would result in a ROBDD whose size is smaller than the sum of the two individual ROBDDs. However, the main difficulty is deciding which constraints should be encoded together, since a bad choice could lead to a ROBDD whose size is greater than the sum of the ROBDDs for each constraint. We conducted initial experiments in which the criteria of similarity between constraints only took into account which variables appeared in the constraints, as we first fixed an integer k and selected the constraint with the largest set of variables, and then we looked for a constraint that we saw all but the remaining two constraints in each of the first two constraints."}, {"heading": "9. Conclusions and Future Work", "text": "Regarding the theoretical part, we answered negatively the question of whether all PB constraints allow polynomial BDDs by citing the work of Hosaka et al. (1994), which is largely unknown in our research community to the best of our knowledge and belief. In addition, we have provided a simpler proof by assuming that NP differs from co-NP, which relates the subsum problem to the size of ROBDD constraints. On a practical level, we have introduced a ROBDD-based polynomial and generalized arc consistent encoding of PB constraints, and developed a BDD-based generalized arc consistent encoding of monotonous functions using only two clauses per BDD node. We have also presented an algorithm to efficiently construct all of these ROBDD constraints, proving that the entire method competes in practice with modern encodings and tools."}, {"heading": "Acknowledgments", "text": "All UPC authors are partially supported by the Spanish Min. of Education and Science as part of the LogicTools 2 project (TIN2007-68093-C02-01)."}], "references": [{"title": "BDDs for pseudoboolean constraints: revisited", "author": ["I. Ab\u0301\u0131o", "R. Nieuwenhuis", "A. Oliveras", "E. Rod\u0155\u0131guez-Carbonell"], "venue": "In Proceedings of the 14th international conference on Theory and application of satisfiability testing,", "citeRegEx": "Ab\u0301\u0131o et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ab\u0301\u0131o et al\\.", "year": 2011}, {"title": "Generic ILP versus specialized 0-1 ILP: an update", "author": ["F.A. Aloul", "A. Ramani", "I.L. Markov", "K.A. Sakallah"], "venue": "In Proceedings of the 2002 IEEE/ACM international conference on Computer-aided design,", "citeRegEx": "Aloul et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Aloul et al\\.", "year": 2002}, {"title": "A Translation of Pseudo Boolean Constraints to SAT", "author": ["O. Bailleux", "Y. Boufkhad", "O. Roussel"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation, JSAT,", "citeRegEx": "Bailleux et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Bailleux et al\\.", "year": 2006}, {"title": "New Encodings of Pseudo-Boolean Constraints into CNF", "author": ["O. Bailleux", "Y. Boufkhad", "O. Roussel"], "venue": "12th International Conference on Theory and Applications of Satisfiability Testing, SAT \u201909,", "citeRegEx": "Bailleux et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bailleux et al\\.", "year": 2009}, {"title": "Construction of efficient bdds for bounded arithmetic constraints. In Proceedings of the 9th international conference on Tools and algorithms for the construction and analysis", "author": ["C. Bartzis", "T. Bultan"], "venue": "of systems,", "citeRegEx": "Bartzis and Bultan,? \\Q2003\\E", "shortCiteRegEx": "Bartzis and Bultan", "year": 2003}, {"title": "Improvements of general multiple test procedures for redundant systems of hypotheses", "author": ["B. Bergmann", "G. Hommel"], "venue": "Multiple Hypothesenprfung - Multiple Hypotheses Testing,", "citeRegEx": "Bergmann and Hommel,? \\Q1988\\E", "shortCiteRegEx": "Bergmann and Hommel", "year": 1988}, {"title": "The Sat4j library, release", "author": ["D.L. Berre", "A. Parrain"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation, JSAT,", "citeRegEx": "Berre and Parrain,? \\Q2010\\E", "shortCiteRegEx": "Berre and Parrain", "year": 2010}, {"title": "Circuit complexity and decompositions of global constraints", "author": ["C. Bessiere", "G. Katsirelos", "N. Narodytska", "T. Walsh"], "venue": "In Proceedings of the 21st international jont conference on Artifical intelligence,", "citeRegEx": "Bessiere et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2009}, {"title": "Lingeling, Plingeling, PicoSAT and PrecoSAT at SAT Race 2010. Tech. rep., Institute for Formal Models and Verification", "author": ["A. Biere"], "venue": null, "citeRegEx": "Biere,? \\Q2010\\E", "shortCiteRegEx": "Biere", "year": 2010}, {"title": "The Barcelogic SMT Solver", "author": ["M. Bofill", "R. Nieuwenhuis", "A. Oliveras", "E. Rod\u0155\u0131guez-Carbonell", "A. Rubio"], "venue": "In Computer-aided Verification (CAV),", "citeRegEx": "Bofill et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bofill et al\\.", "year": 2008}, {"title": "Graph-Based Algorithms for Boolean Function Manipulation", "author": ["R.E. Bryant"], "venue": "IEEE Transactions on Computers,", "citeRegEx": "Bryant,? \\Q1986\\E", "shortCiteRegEx": "Bryant", "year": 1986}, {"title": "Deciding CLU Logic Formulas via Boolean and Pseudo-Boolean Encodings", "author": ["R.E. Bryant", "S.K. Lahiri", "S.A. Seshia"], "venue": "In Proceedings of the International Workshop on Constraints in Formal Verification, CFV 02. Associated with International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "Bryant et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Bryant et al\\.", "year": 2002}, {"title": "Translating Pseudo-Boolean Constraints into SAT", "author": ["N. E\u00e9n", "N. S\u00f6rensson"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation,", "citeRegEx": "E\u00e9n and S\u00f6rensson,? \\Q2006\\E", "shortCiteRegEx": "E\u00e9n and S\u00f6rensson", "year": 2006}, {"title": "On the Size of Ordered Binary Decision Diagrams Representing Threshold Functions", "author": ["K. Hosaka", "Y. Takenaga", "S. Yajima"], "venue": "In Algorithms and Computation, 5th International Symposium,", "citeRegEx": "Hosaka et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Hosaka et al\\.", "year": 1994}, {"title": "Improving Unsatisfiability-Based Algorithms for Boolean Optimization", "author": ["V.M. Manquinho", "R. Martins", "I. Lynce"], "venue": "13th International Conference on Theory and Applications of Satisfiability Testing,", "citeRegEx": "Manquinho et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Manquinho et al\\.", "year": 2010}, {"title": "On Using Cutting Planes in Pseudo-Boolean Optimization", "author": ["V.M. Manquinho", "J.P.M. Silva"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation, JSAT,", "citeRegEx": "Manquinho and Silva,? \\Q2006\\E", "shortCiteRegEx": "Manquinho and Silva", "year": 2006}, {"title": "Towards Solving a System of Pseudo Boolean Constraints with Binary Decision Diagrams. Master\u2019s thesis, New University of Lisbon", "author": ["V. Mayer-Eichberger"], "venue": null, "citeRegEx": "Mayer.Eichberger,? \\Q2008\\E", "shortCiteRegEx": "Mayer.Eichberger", "year": 2008}, {"title": "Why cumulative decomposition is not as bad as it sounds", "author": ["A. Schutt", "T. Feydy", "P.J. Stuckey", "M.G. Wallace"], "venue": "In Proceedings of the 15th international conference on Principles and practice of constraint programming,", "citeRegEx": "Schutt et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Schutt et al\\.", "year": 2009}, {"title": "Latent class models for algorithm portfolio methods", "author": ["B. Silverthorn", "R. Miikkulainen"], "venue": "In Proceedings of the Twenty-Fourth AAAI Conference on Artificial Intelligence", "citeRegEx": "Silverthorn and Miikkulainen,? \\Q2010\\E", "shortCiteRegEx": "Silverthorn and Miikkulainen", "year": 2010}, {"title": "On Boolean Functions Encodable as a Single Linear Pseudo-Boolean Constraint", "author": ["J. Smaus"], "venue": "4th International Conference on the Integration of AI and OR Techniques in Constraint Programming, CPAIOR \u201907,", "citeRegEx": "Smaus,? \\Q2007\\E", "shortCiteRegEx": "Smaus", "year": 2007}, {"title": "A Linear-Time Transformation of Linear Inequalities into Conjunctive Normal Form", "author": ["J.P. Warners"], "venue": "Information Processing Letters,", "citeRegEx": "Warners,? \\Q1998\\E", "shortCiteRegEx": "Warners", "year": 1998}], "referenceMentions": [{"referenceID": 10, "context": "Since, given a variable ordering, ROBDDs are a canonical representation for Boolean functions (Bryant, 1986), i.", "startOffset": 94, "endOffset": 108}, {"referenceID": 8, "context": ", cumulative scheduling (Schutt, Feydy, Stuckey, & Wallace, 2009), logic synthesis (Aloul, Ramani, Markov, & Sakallah, 2002) or verification (Bryant, Lahiri, & Seshia, 2002), so it is not surprising that a significant number of SAT encodings for these constraints have been proposed in the literature. Here we are interested in encoding a PB constraint C by a clause set S (possibly with auxiliary variables) that is not only equisatisfiable, but also generalized arc-consistent (GAC): given a partial assignment A, if xi is false in every extension of A satisfying C, then unit propagating A on S sets xi to false. To our knowledge, the only polynomial GAC encoding so far was given by Bailleux, Boufkhad, and Roussel (2009). Some other existing encodings are based on building (forms of) Binary Decision Diagrams (BDDs) and translating these into CNF.", "startOffset": 142, "endOffset": 726}, {"referenceID": 2, "context": "Although the approach of Bailleux et al. is not BDD-based, our main motivation to revisit BDD-based encodings is the following: Example 1. Let us consider two Pseudo-Boolean constraints: 3x1 + 2x2 + 4x3 \u2264 5 and 30001x1 + 19999x2 + 39998x3 \u2264 50007. Both are clearly equivalent: the Boolean function they represent can be expressed, e.g., by the clauses x1\u2228x3 and x2\u2228x3. However, encodings like the one of Bailleux et al. (2009) heavily depend on the concrete coefficients of each constraint, and generate a significantly larger SAT encoding for the second one.", "startOffset": 25, "endOffset": 427}, {"referenceID": 12, "context": "A good example is the work of E\u00e9n and S\u00f6rensson (2006), where a GAC encoding using six three-literals clauses per BDD node is given.", "startOffset": 30, "endOffset": 55}, {"referenceID": 12, "context": "A good example is the work of E\u00e9n and S\u00f6rensson (2006), where a GAC encoding using six three-literals clauses per BDD node is given. However, when it comes to study the BDD size, on page 9 they cite the work of Bailleux, Boufkhad, and Roussel (2006) to say \u201cIt is proven that in general a PB-constraint can generate an exponentially sized BDD\u201d.", "startOffset": 30, "endOffset": 250}, {"referenceID": 12, "context": "A good example is the work of E\u00e9n and S\u00f6rensson (2006), where a GAC encoding using six three-literals clauses per BDD node is given. However, when it comes to study the BDD size, on page 9 they cite the work of Bailleux, Boufkhad, and Roussel (2006) to say \u201cIt is proven that in general a PB-constraint can generate an exponentially sized BDD\u201d. In Section 7 we explain why the approach of Bailleux et al does not use ROBDDs, and prove that the example they use to show the exponentiality of their method turns out to have polynomial ROBDDs. Somewhat surprisingly, probably due to the different names that PB constraints receive (0-1 integer linear constraints, linear threshold functions, weight constraints, knapsack constraints), the work of Hosaka, Takenaga, and Yajima (1994) has remained unknown to our research community.", "startOffset": 30, "endOffset": 780}, {"referenceID": 13, "context": "2: We reproduce the family of PB constraints proposed by Hosaka et al. (1994), for which no polynomial-size ROBDD exist.", "startOffset": 57, "endOffset": 78}, {"referenceID": 13, "context": "Extensions include: (i) proofs of all technical results, (ii) multiple examples illustrating the various concepts and algorithms presented, (iii) the PB constraint family by Hosaka et al. (1994) for which no polynomial ROBDD exists, (iv) an algorithm to efficiently construct ROBDDs for Pseudo-Boolean constraints, (v) a detailed related work section, (vi) extensive experimental results comparing our encoding to other approaches and (vii) a brief report of our experience trying to take advantage of the sharing potential of BDDs.", "startOffset": 174, "endOffset": 195}, {"referenceID": 2, "context": "2 we consider two families of PB constraints and study their ROBDD size: we first prove that the example given by Bailleux et al. (2006) has polynomial ROBDDs, and then we reproduce the example of Hosaka et al.", "startOffset": 114, "endOffset": 137}, {"referenceID": 2, "context": "2 we consider two families of PB constraints and study their ROBDD size: we first prove that the example given by Bailleux et al. (2006) has polynomial ROBDDs, and then we reproduce the example of Hosaka et al. (1994) that has exponential ROBDDs regardless of the variable ordering.", "startOffset": 114, "endOffset": 218}, {"referenceID": 2, "context": "2 Some Families of PB Constraints and their ROBDD Size We start by revisiting the family of PB constraints given by Bailleux et al. (2006), where it is proved that, for their concrete variable ordering, their non-reduced BDDs grow exponentially for this family.", "startOffset": 116, "endOffset": 139}, {"referenceID": 2, "context": "But the ROBDD of C \u2032 is known to be of quadratic size because it is a cardinality constraint (see, for instance, Bailleux et al., 2006). In the following, we present a family of PB constraints that only admit exponential ROBDDs. This example was first given by Hosaka et al. (1994), but a clearer alternative proof is given next.", "startOffset": 113, "endOffset": 282}, {"referenceID": 4, "context": "A similar idea was given by Bartzis and Bultan (2003). The important remark is that, using a consistent SAT encoding of the ROBDD for C\u0303 (e.", "startOffset": 28, "endOffset": 54}, {"referenceID": 2, "context": "In order to overcome this limitation, we follow the method presented by Bessiere, Katsirelos, Narodytska, and Walsh (2009) and Bailleux et al. (2009). Let C : a1x1+\u00b7 \u00b7 \u00b7+anxn \u2264 K be an arbitrary PB constraint.", "startOffset": 127, "endOffset": 150}, {"referenceID": 16, "context": "A very similar version of this algorithm was described by Mayer-Eichberger (2008). The key point of the algorithm will be to label each node of the ROBDD with its interval.", "startOffset": 58, "endOffset": 82}, {"referenceID": 18, "context": "The first encoding to mention is the one proposed by Warners (1998). In a nutshell, the encoding uses several adders for numbers in binary representation.", "startOffset": 53, "endOffset": 68}, {"referenceID": 2, "context": "Bailleux et al. (2006) introduced an encoding \u201cvery close to those using a BDD and translating it into clauses\u201d.", "startOffset": 0, "endOffset": 23}, {"referenceID": 2, "context": "Bailleux et al. (2006) introduced an encoding \u201cvery close to those using a BDD and translating it into clauses\u201d. In order to understand the differences between their construction and BDDs let us introduce it in detail. First of all, the coefficients are ordered from small to large. Then, the root is labeled with variable Dn,k, expressing that the sum of the first n terms is no more than k. Its two children are Dn\u22121,k and Dn\u22121,k\u2212an , which correspond to setting xn to false and true, respectively. The process is repeated until nodes corresponding to trivial constraints are reached, which are encoded as true or false. For each node Di,b with children Di\u22121,b and Di\u22121,b\u2212ai , the following four clauses are added: Di\u22121,b\u2212ai \u2192 Di,b Di\u22121,b \u2192 Di,b Di\u22121,b\u2212ai \u2227 xi \u2192 Di,b Di\u22121,b \u2227 xi \u2192 Di,b Example 25. The encoding proposed by Bailleux et al. (2006) on 2x1 + \u00b7 \u00b7 \u00b7+ 2x10 + 5x11 + 6x12 \u2264 10 is illustrated in Figure 9.", "startOffset": 0, "endOffset": 849}, {"referenceID": 2, "context": "Figure 9: Tree-like construction of Bailleux et al. (2006) for 2x1+\u00b7 \u00b7 \u00b7+2x10+5x11+6x12\u226410", "startOffset": 36, "endOffset": 59}, {"referenceID": 2, "context": "Regarding the ROBDD size, the authors cite the work of Bailleux et al. (2006) to state the BDDs are exponential in the worst case.", "startOffset": 55, "endOffset": 78}, {"referenceID": 2, "context": "Regarding the ROBDD size, the authors cite the work of Bailleux et al. (2006) to state the BDDs are exponential in the worst case. As we have seen before, the citation is not correct because Bailleux et al do not construct ROBDDs. The second method is similar to the one of Warners (1998) in the sense that the construction relies on a network of adders.", "startOffset": 55, "endOffset": 289}, {"referenceID": 20, "context": "GAC Warners (Warners, 1998) O(n log amax) NO NO Non-reduced BDD (Bailleux et al.", "startOffset": 12, "endOffset": 27}, {"referenceID": 2, "context": "GAC Warners (Warners, 1998) O(n log amax) NO NO Non-reduced BDD (Bailleux et al., 2006) Exponential YES YES ROBDD (E\u00e9n & S\u00f6rensson, 2006) Exponential (6 per node) YES YES Adders (E\u00e9n & S\u00f6rensson, 2006) O(\u2211 log ai) NO NO Sorting Networks (E\u00e9n & S\u00f6rensson, 2006) O((\u2211 log ai) log2(\u2211 log ai) YES NO Watch Dog (WD) (Bailleux et al.", "startOffset": 64, "endOffset": 87}, {"referenceID": 3, "context": ", 2006) Exponential YES YES ROBDD (E\u00e9n & S\u00f6rensson, 2006) Exponential (6 per node) YES YES Adders (E\u00e9n & S\u00f6rensson, 2006) O(\u2211 log ai) NO NO Sorting Networks (E\u00e9n & S\u00f6rensson, 2006) O((\u2211 log ai) log2(\u2211 log ai) YES NO Watch Dog (WD) (Bailleux et al., 2009) O(n2 log n log amax) YES NO Gen.", "startOffset": 231, "endOffset": 254}, {"referenceID": 3, "context": "WD (Bailleux et al., 2009) O(n3 log n log amax) YES YES", "startOffset": 3, "endOffset": 26}, {"referenceID": 2, "context": "The first polynomial and GAC encoding for Pseudo-Boolean constraints, called WatchDog, was introduced by Bailleux et al. (2009). It uses O(n2 log n log amax) variables and O(n3 log n log amax) clauses.", "startOffset": 105, "endOffset": 128}, {"referenceID": 2, "context": "The first polynomial and GAC encoding for Pseudo-Boolean constraints, called WatchDog, was introduced by Bailleux et al. (2009). It uses O(n2 log n log amax) variables and O(n3 log n log amax) clauses. Again, numbers are expressed in unary representation and totalizers are used to play the role of sorting networks. In order to make the comparison with the right hand side trivial, the left-hand side and k are incremented until k becomes a power of two. Then, all coefficients are decomposed in binary representation and each bit is added independently, taking into account the corresponding carry. In the same paper, another encoding which is only consistent and uses O(n log n log amax) variables and O(n2 log n log amax) clauses is also presented. Finally, it is worth mentioning the work of Bartzis and Bultan (2003). The authors deal with the more general case in which the variables xi are not Boolean, but bounded integers 0 \u2264 xi < 2b.", "startOffset": 105, "endOffset": 823}, {"referenceID": 5, "context": "On the other hand, for more detailed information, we refer the reader to the work of Bergmann and Hommel (1988). Let us assume we have n methods and m data sets, and let Ci,j be the result (time, number of variables or any other value) of the i-th method in the j-th benchmark.", "startOffset": 85, "endOffset": 112}, {"referenceID": 10, "context": "The encodings we have included in the experimental evaluation are: the adder encoding as presented by E\u00e9n and S\u00f6rensson (2006) (Adder), the consistent WatchDog encoding of Bailleux et al.", "startOffset": 102, "endOffset": 127}, {"referenceID": 2, "context": "The encodings we have included in the experimental evaluation are: the adder encoding as presented by E\u00e9n and S\u00f6rensson (2006) (Adder), the consistent WatchDog encoding of Bailleux et al. (2009) (WD-1), its GAC version (WD-2), the encoding into ROBDDs without coefficient decomposition, using Algorithm 1 and the encoding from Section 6 (BDD1); the encoding into ROBDDs after coefficient decomposition as explained in Section 4.", "startOffset": 172, "endOffset": 195}, {"referenceID": 2, "context": "The encodings we have included in the experimental evaluation are: the adder encoding as presented by E\u00e9n and S\u00f6rensson (2006) (Adder), the consistent WatchDog encoding of Bailleux et al. (2009) (WD-1), its GAC version (WD-2), the encoding into ROBDDs without coefficient decomposition, using Algorithm 1 and the encoding from Section 6 (BDD1); the encoding into ROBDDs after coefficient decomposition as explained in Section 4.2 (BDD-2), with Algorithm 1 and the encoding from Section 6; and the GAC approach from Section 4.3 (BDD-3 ), also with Algorithm 1 and the encoding from Section 6. Notice that BDD-1 method is very similar to the ROBDDs presented by E\u00e9n and S\u00f6rensson (2006). However, since Algorithm 1 produces every node only once, BDD-1 should be faster.", "startOffset": 172, "endOffset": 685}, {"referenceID": 8, "context": "For the SAT approach, once the encoding has been done, the SAT formula is given to the SAT Solver Lingeling (Biere, 2010) version 276.", "startOffset": 108, "endOffset": 121}, {"referenceID": 13, "context": "Regarding the theoretical part, we have negatively answered the question of whether all PB constraints admit polynomial BDDs by citing the work of Hosaka et al. (1994) which, to the best of our knowledge, is largely unknown in our research community.", "startOffset": 147, "endOffset": 168}], "year": 2012, "abstractText": "Pseudo-Boolean constraints are omnipresent in practical applications, and thus a significant effort has been devoted to the development of good SAT encoding techniques for them. Some of these encodings first construct a Binary Decision Diagram (BDD) for the constraint, and then encode the BDD into a propositional formula. These BDD-based approaches have some important advantages, such as not being dependent on the size of the coefficients, or being able to share the same BDD for representing many constraints. We first focus on the size of the resulting BDDs, which was considered to be an open problem in our research community. We report on previous work where it was proved that there are Pseudo-Boolean constraints for which no polynomial BDD exists. We also give an alternative and simpler proof assuming that NP is different from Co-NP. More interestingly, here we also show how to overcome the possible exponential blowup of BDDs by coefficient decomposition. This allows us to give the first polynomial generalized arc-consistent ROBDD-based encoding for Pseudo-Boolean constraints. Finally, we focus on practical issues: we show how to efficiently construct such ROBDDs, how to encode them into SAT with only 2 clauses per node, and present experimental results that confirm that our approach is competitive with other encodings and state-of-the-art Pseudo-Boolean solvers.", "creator": "TeX"}}}