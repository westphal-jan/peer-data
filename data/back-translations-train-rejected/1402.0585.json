{"id": "1402.0585", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Feb-2014", "title": "AI Methods in Algorithmic Composition: A Comprehensive Survey", "abstract": "Algorithmic composition is the partial or total automation of the process of music composition by using computers. Since the 1950s, different computational techniques related to Artificial Intelligence have been used for algorithmic composition, including grammatical representations, probabilistic methods, neural networks, symbolic rule-based systems, constraint programming and evolutionary algorithms. This survey aims to be a comprehensive account of research on algorithmic composition, presenting a thorough view of the field for researchers in Artificial Intelligence.", "histories": [["v1", "Tue, 4 Feb 2014 01:43:06 GMT  (846kb)", "http://arxiv.org/abs/1402.0585v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jose david fernandez", "francisco vico"], "accepted": false, "id": "1402.0585"}, "pdf": {"name": "1402.0585.pdf", "metadata": {"source": "META", "title": "AI Methods in Algorithmic Composition: A Comprehensive Survey", "authors": ["Jose David Fern\u00e1ndez", "Francisco Vico"], "emails": ["josedavid@geb.uma.es", "fjv@geb.uma.es"], "sections": [{"heading": null, "text": "Since the 1950s, various artificial intelligence-related computer techniques have been used for algorithmic composition, including grammatical representation, probabilistic methods, neural networks, symbolic rule-based systems, constraint programming, and evolutionary algorithms. This study aims to provide a comprehensive overview of algorithmic composition research and to give Artificial Intelligence researchers a thorough overview of the field."}, {"heading": "1. Introduction", "text": "Many overly optimistic but ultimately unfulfilled predictions were made in the early days of artificial intelligence, when computers that passed the Turing test were a few decades away. However, the field of artificial intelligence has grown and matured, from academic research to many industrial applications, putting areas that are difficult to define formally at a disadvantage and marginalizing computer gamers. This is the case of formal methods, which are reflected in the consolidation of many areas of artificial intelligence."}, {"heading": "1.1 Motivation", "text": "Some useful starting points for researching the past and present of computer music are the Computer Music Journal, the International Computer Music Conference2, which is organized annually by the International Computer Music Union3, and some books such as Machine Models of Music (Schwanauer & Levitt, 1993), Understanding music with AI (Balaban et al., 1992), Music and Connectionism (Todd & Loy, 1991), and the anthologies of selected articles from the Computer Music Journal (Roads & Strawn, 1985; Roads, 1992). However, these resources relate not only to algorithmic composition, but to computer music in general. Surveys are a better option for more specific information about algorithmic composition. There are many surveys that review work on algorithmic composition; some reviews and compositions of computers using AI methods (Roads, 1985), while other algorithmic compositions are viewed from a standpoint."}, {"heading": "2. Introducing Algorithmic Composition", "text": "In fact, it is the case that most of them are able to survive themselves by taking themselves into account. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...)"}, {"heading": "2.1 The Early Years", "text": "In this section we will review early research on algorithmic composition with computers or with a clear computer-aided approach (Raybrot composition) from the 1960s. While these references were discussed in the following sections of the methodology, it is useful to summarize them here because it is difficult to find an overview that discusses all of these techniques. However, the earliest use of computers for composing music dates back to the mid-1950s, around the same time that the concept of Artificial Intelligence was coined at the Darmouth Conference, although the two areas did not coincide until some time later. Computers were expensive and also difficult to use because they were in batch mode. One of the most frequently cited examples is Hiller and Isaacson's (1958) Illiac Suite, a composition created using control systems and Markov chains, in late 1956. It was conceived as a series of experiments on formal music compositions."}, {"heading": "3. The Methods", "text": "In fact, it is so that most people who are able to survive themselves, are able to survive themselves, and that they are able to survive themselves, \"he said in an interview with the\" New York Times. \"\" I do not believe that I am able to survive myself, \"he said in an interview with the\" New York Times. \"\" I do not believe that I will be able to survive myself. \"He added:\" I do not believe that I am able to survive myself, but I believe that I do not believe that I believe, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I, I."}, {"heading": "3.1 Grammars and Related Methods", "text": "In fact, most of the people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to, to move, to, to, to, to move, to, to"}, {"heading": "3.1.1 L-Systems", "text": "Lindenmayer Systems, commonly abbreviated to L-Systems, is a specific variant of formal grammar whose most characteristic feature is parallel paraphrasing, i.e., in each derivative step, not just one, but all possible paraphrasing rules are applied simultaneously. However, this ability to represent self-similar structures has been successfully applied to microbial, fungal and plant growth and shapes because they are particularly well suited to represent the hierarchical self-similarity of these organisms, along with the fact that L-Systems are easier to understand and apply than traditional formal grammars, have made L-Systems quite popular in algorithmic composition, which use the most visually stunning way L-Systems are used. It is only natural that the synthesis of 2D and 3D renderings of plants based on the mapping of symbols on graphics (Prusinkiewicz graphics)."}, {"heading": "3.1.2 Grammars and Evolutionary Algorithms", "text": "Evolutionary methods have also been used along with grammars, but in this case a common approach is the development of grammatical rules, as in GeNotator (Thywissen, 1999), in which the genomes are specified through a graphical user interface and the fitness function is interactive (the user assigns the fitness of the grammars).A more exotic example by Khalifa et al. (2007) uses grammar as part of the fitness function instead of generating the compositions.Some evolutionary methods are specifically adapted to the use of grammars.This is the case of grammatical evolution, a method in which the genomes are sequences of numbers or symbols that control the application of rules of a predefined (and possibly stochastic) grammar. The most common approach is to present music as an output of grammar that can range from very general to specific to a particular style of music."}, {"heading": "3.1.3 Related Methods", "text": "The first is the application of Kohonen's Dynamically Expanding Context (DEC) method to algorithmic composition (Kohonen et al., 1991). In the DEC, the algorithm is fed a series of musical examples that derive from the structure of the examples a model that can be interpreted as stochastic context-sensitive grammar. However, the model is as economical as possible, i.e. the rules have as little contextual information as possible. Then, the grammar derived from them is used to generate new compositions. Drewe and H\u00f6gberg's (2007) work is also borderline, using regular tree grammatics to generate a basic framework that is then modified by algebraic operations to generate a final musical composition. But the more famous example in this category is Copes (1992) \"Experiments in Musical Intelligence\" (EMI)."}, {"heading": "3.2 Symbolic, Knowledge-Based Systems and Related Methods", "text": "In fact, most of them will be able to play by the rules they have imposed on themselves."}, {"heading": "3.2.1 Rule Learning", "text": "While the knowledge implemented in rules-based systems is usually static, some of the knowledge can be dynamically altered or learnt. The natural term for this concept is machine learning, but its meaning is unfortunately vague because it is used as a panacea for many methods, including neural networks and Markov chains. 16. He was not a student of Minsky, thought. A few examples of rules-based learning systems were developed, such as the MUSE implemented by Schwanauer (1993), a rules-based system for solving multiple tasks in four-part harmonization. While the core rulebook was static, a number of limitations and guidelines for the composition process were developed, in which rule priorities were also dynamically altered in the system. Furthermore, when the system successfully solved a task, it was able to derive new composite rules by extracting patterns of rule application. Widmer (1992) implemented another example: a system for harmonizing simple melodies."}, {"heading": "3.2.2 Rule-Based Methods and Evolutionary Algorithms", "text": "The most intuitive way to rely on rules is to create a fitness function from the set of rules, which can be done efficiently in areas where the rules are properly coded, and which have a particularly good impact on this approach. McIntyre (1994) has developed a set of rules for performing classical work, and he has defined them as a set of scoring functions for a given tune."}, {"heading": "3.2.3 Constraint Satisfaction", "text": "In the 1980s and 1990s, there has been a rules-based process in the U.S., which has been about whether and to what extent people are able to determine for themselves what they want and what they don't want. In the 1980s and 1980s, there has been a rules-based process in the U.S., which has been about whether and in which countries people are able to integrate. In the 1980s and 1980s, there has been a rules-based process in the U.S., which has been about equal rights for women and men. In the 1980s and 1980s, there has been in the 1980s and 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the U.S., in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the U.S., in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the U.S., in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the U.S., in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s, in the 1980s in the 1980s, in the 1980s in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s, in the 1980s, in the 1980s in the 1980s in the 1980s, in the 1980s in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s, in the 1980s in the 1980s, in the 1980s, in the 1980s, in the 1980s in the 1980s in the 1980s in the 1980s, in the 1980s in the 1980s, in the 1980s,"}, {"heading": "3.2.4 Case-Based Reasoning", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to"}, {"heading": "3.2.5 Concurrency Models", "text": "They provide primitives for precisely defining the semantics of interaction and synchronization between multiple entities. Their main application was the modeling and design of distributed or simultaneous computer systems by Ross, but they were also used as languages to model the compositional process partially or completely, because music composition can be formulated as an effort to carefully synchronize music events produced by multiple interacting entities. In terms of algorithmic composition, the most commonly used parallel models were Petri networks and various types of process algebras, also known as process calculus. Detailed descriptions of these models go beyond the scope of this study; see, for example, Reisig's (1998) book on Petri networks and Baeda's (2005) study of process algebra algebras for more information. Petri networks were used as the basis for Scoresynth (& Sametti, 1991)."}, {"heading": "3.3 Markov Chains and Related Methods", "text": "In fact, most of them are able to determine for themselves what they want and what they want."}, {"heading": "3.3.1 Related Methods", "text": "The results of the study in Conklin, 2003) were also used for algorithmic composition, as in Pachets (2002) Continuator, a real-time interactive music system. The continuator assumes common Markov chain implementations, using variable order schemes (also known as mixed order) Markov chains22, whose main feature is the consideration of multiple viewing points or sequences of events in the compositions, and which can be used to get the best out of low and high chains. Conklin and Witten (1995) implemented a differentiated scheme 23, whose main feature is the consideration of multiple viewing points or sequences of events in the compositions. Pitches, postures, contours, etc.) instead of integrating them all into a unique sequence of symbols, as was common for most implementations of Markov chains. Variable order systems were also used as part of a larger music repertoire."}, {"heading": "3.4 Artificial Neural Networks and Related Methods", "text": "Artificial Neural Networks (ANNs) are, in fact, computer models inspired by biological neural networks that consist of interconnected sets of artificial neurons: very simple computational instruments that aggregate numerical input into a single numerical output. Typically, neurons are organized in recurrent networks (some or all neurons have connections that are set externally (input connections), while other output signals are used that are to be read as a result of the network's computation (output connections). Typically, neurons are organized into recurrent networks (some or all neurons have inputs that come from other neurons) with multiple interconnected layers, and many variations can be found in the literature. ANNs are typically used as a machine learning method to train the network (i.e., to determine the weights of connections between neurons) in order to detect or generate similar patterns."}, {"heading": "3.4.1 ANNs with Evolutionary Algorithms", "text": "In fact, most people who have chosen a different path have also chosen a different path. \"I don't think I've chosen a different path,\" he says, \"but I think I've chosen a different path.\" Indeed, \"I don't think I've chosen a different path.\" Indeed, \"I don't think I've chosen a different path.\" Indeed, \"I don't think I've chosen a different path.\" Indeed, \"I don't think I've chosen a different path.\" In the other direction. \"In the other direction.\" In the other direction. \"In the other direction.\" In the other direction. \""}, {"heading": "3.4.2 Related Methods", "text": "Finally, this subsection presents methods that are similar to ANNs or, more generally, connectionist. For example, Neurswing (Baggi, 1991) can be described as an ad hoc expert system for jazz improvisation created within a connectionist framework. Surprisingly, many research papers cite Neurswing as an ANN framework, despite Baggi's disclaimer: \"[Neurswing], although it only vaguely resembles a neural network or a connectionist system.\" (Baggi, 1991) Laine (2000) used very simple ANNs to implement central pattern generators, whose output patterns are then interpreted as more or less simple rhythms (movement patterns in its terminology). Boolean networks are another connectionist paradigm in which each node has a binary state and the edges between nodes are regarded as aliens."}, {"heading": "3.5 Evolutionary and Other Population-Based Methods", "text": "Most evolutionary algorithms (EAs) roughly follow a common pattern: a changing set of candidate solutions (a population of individuals) goes through a repeated cycle of evaluation, selection, and reproduction with variation. The first step is to generate the candidate solutions of the initial set, either from user-specific examples or in a more or less random manner. Each candidate solution is then evaluated using a fitness function, a heuristic rule, to measure its quality. The next step is selection: a new set of candidate solutions is generated by copying candidate solutions from the old one; each candidate solution is likely to be copied several times proportionally to its fitness. This step reduces the diversity of the population that is restored by applying (to a fraction of candidate solutions) some operators designed to increase variation (for example mutation or recombination operators) iteratively applied; as a result, the best solution and average fit systems are more likely to exist with many different algorithms.While EA algorithms tend to increase the number of different types of EAs gradually, the best solution and average fit systems are common."}, {"heading": "3.5.1 Evolution with Automatic Fitness Functions", "text": "The difficulty of defining automatic fitness functions is a constant question that often limits the application of evolutionary methods to well-defined and limited problems in composition. Horner and Goldberg (1991) provided one of the earliest examples: They implemented an EA for thematic bridging, a compositional technology consisting of defining a sequence (with a predetermined preferred length) of small musical patterns so that the first and last sequences are predefined, and each pattern is the result of applying a simple transformation to the previous one. Of course, the subjects in the EA were defined as lists of operations applied to the initial pattern to generate the sequence of patterns. Fitness was measured by how close the final pattern (generated from the operations) was, plus the difference between actual and preferred lengths of the sequence. Essentially, the same work (with differences in the underlying representation and operation type) was reported by Ricek (a common fitness function) in 1993."}, {"heading": "3.5.2 Musical IGAs", "text": "It is not only a matter of time before such a process will occur, but also of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...) It is a matter of time before such a process will occur. (...)"}, {"heading": "3.5.3 Other Population-Based Methods", "text": "Finally, this subsection presents other methods that are also population-based. For example, the metaheuristic method Harmony Search is inspired by the improvisation process of musicians, although in practice it can be interpreted as an evolutionary method with a specific way of structuring artificial solutions and performing selection, crossover and mutation operations. Geem and Choi (2007) used this method to harmonize Gregorian chants (i.e., to follow the ones already mentioned in Section 3.2.3 but not properly evolutionary methods. An example is the use of Ant Colony Optimization (ACO) to solve the limitations of music (Geis & Middendorf, 2008), the inspiration of which is already mentioned in Section 3.2.3. In ACO, the candidate solutions are presented as paths in a graph and a population of agents (Agent) that find the graph of the graph to cooperate optimally."}, {"heading": "3.6 Self-Similarity and Cellular Automata", "text": "In the late 1970s, two remarkable results were reported on music by Voss and Clarke (1978). The first was that the spectral density of the audio signal for music of many different styles is (approximately) inversely proportional to its frequency; in other words, it follows approximately a 1 / f distribution. This is not so surprising: many different data series follow this characteristic, from meteorological data to stock market prices; it is usually referred to as 1 / f noise or pink noise. The second result was that random compositions appear more musical and pleasing (for a wide range of evaluators, from inexperienced people to professional musicians and composers) when pitches are determined by a source of 1 / f noise, rather than other common random processes such as white (incorruptible noise or Brownian movements). Although the first result has been challenged for 30 years, the second was used by composers as a source of raw material."}, {"heading": "3.6.1 Cellular Automata", "text": "In fact, it is the case that most people are able to determine for themselves what they want and what they want. In fact, it is the case that they are able to determine for themselves what they want and what they want. In fact, it is the case that they do not want it. In fact, it is the case that they do not want people to be able to determine for themselves what they want. In fact, it is the case that people are able to determine for themselves what they want and what they want. In fact, it is the case that people are able to determine for themselves what they want."}, {"heading": "4. Conclusions", "text": "As Pearce et al. (2002) noted, most work on algorithmic composition does not sufficiently (a) specify the exact practical or theoretical objectives of research; (b) use a methodology to achieve these objectives; or (c) evaluate the results in a controlled, measurable and repeatable manner. Algorithmic composition researchers have very different backgrounds and in many cases do not present their work in a way that allows comparison with others. Therefore, we have presented the literature in a \"narrative\" style, dividing the existing work into several broad categories and providing brief descriptions of the work in approximately chronological order for each category."}, {"heading": "4.1 About Creativity", "text": "It seems to me that this is an attempt to gain power, in a way that emphasises the power of the strong and the power of the strong and the power of the strong."}, {"heading": "4.2 About the Methods", "text": "This year, most of them will be able to move to another world, where they will be able to move to another world, where they will be able to move, where they will be able to move."}, {"heading": "4.3 Final Thoughts", "text": "Computers have remained: the use of CAAC software is widespread among many composers, and some artistic scenes (as generative music) include computer-generated music as part of their identity. However, creativity is for the most part still in the hands of composers. As argued in Section 4.1, creativity is an inherently subjective concept, and it is undoubtedly the point at which a computer system can truly become creative. However, even if one cannot agree on an exact definition, it is easy to see that the development of algorithmic composition systems capable of independent creativity will radically change the process of music composition, and thus the market for music. This should not be seen as another case of computers replacing humans in an increasingly sophisticated activity, but as a potentially radical disruption in the way composers carry out their work: just as an expert pedagogical system does not replace the role of human teachers, but music as one of the arts with a stronger mathematical background, it is not surprising that the most technical and creative work can make inroads."}, {"heading": "Acknowledgments", "text": "The authors thank Ilias Bergstrom for his comments on a preliminary version of the manuscript, and the critical review of our anonymous arbitrators has greatly improved the final version of the study, which was supported in part by a grant to the MELOMICS project (IPT-300000-2010-010) of the Spanish Ministerio de Ciencia e Innovaci\u00f3n and a grant to the CAUCE project (TSI-090302-2011-8) of the Spanish Ministerio de Industria, Turismo y Comercio, and the first author was supported by a grant to the GENEX project (P09-TIC5123) of the Consejer\u00eda de Innovaci\u00f3n y Ciencia de Andaluc\u00eda. The first author would also like to thank his wife Elisa and daughter Isabel for being there day after day, despite the long hours they spent writing this manuscript, and his family for the invaluable support they have provided."}], "references": [], "referenceMentions": [], "year": 2013, "abstractText": "Algorithmic composition is the partial or total automation of the process of music composition by using computers. Since the 1950s, different computational techniques related to Artificial Intelligence have been used for algorithmic composition, including grammatical representations, probabilistic methods, neural networks, symbolic rule-based systems, constraint programming and evolutionary algorithms. This survey aims to be a comprehensive account of research on algorithmic composition, presenting a thorough view of the field for researchers in Artificial Intelligence.", "creator": "LaTeX"}}}