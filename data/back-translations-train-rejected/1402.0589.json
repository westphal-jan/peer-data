{"id": "1402.0589", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Feb-2014", "title": "Protecting Privacy through Distributed Computation in Multi-agent Decision Making", "abstract": "As large-scale theft of data from corporate servers is becoming increasingly common, it becomes interesting to examine alternatives to the paradigm of centralizing sensitive data into large databases. Instead, one could use cryptography and distributed computation so that sensitive data can be supplied and processed in encrypted form, and only the final result is made known. In this paper, we examine how such a paradigm can be used to implement constraint satisfaction, a technique that can solve a broad class of AI problems such as resource allocation, planning, scheduling, and diagnosis. Most previous work on privacy in constraint satisfaction only attempted to protect specific types of information, in particular the feasibility of particular combinations of decisions. We formalize and extend these restricted notions of privacy by introducing four types of private information, including the feasibility of decisions and the final decisions made, but also the identities of the participants and the topology of the problem. We present distributed algorithms that allow computing solutions to constraint satisfaction problems while maintaining these four types of privacy. We formally prove the privacy properties of these algorithms, and show experiments that compare their respective performance on benchmark problems.", "histories": [["v1", "Tue, 4 Feb 2014 01:44:50 GMT  (157kb)", "http://arxiv.org/abs/1402.0589v1", null], ["v2", "Sat, 12 Jul 2014 22:20:22 GMT  (2124kb)", "http://arxiv.org/abs/1402.0589v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CR cs.MA", "authors": ["thomas leaute", "boi faltings"], "accepted": false, "id": "1402.0589"}, "pdf": {"name": "1402.0589.pdf", "metadata": {"source": "CRF", "title": "Protecting Privacy through Distributed Computation in Multi-agent Decision Making Online Appendix 3: Unique ID Generation Algorithm", "authors": ["Thomas L\u00e9aut\u00e9", "Boi Faltings"], "emails": ["thomas.leaute@a3.epfl.ch", "boi.faltings@epfl.ch"], "sections": [{"heading": "Protecting Privacy through Distributed Computation", "text": "On the contrary, in this paper we are not looking at the failures of the agents, and we need rather an algorithm that protects the privacy. To this end, we propose algorithm 1, which is a modification of the pseudo-tree generation. On the contrary: in this paper we are not looking at the failures of the agents, and we need an algorithm that protects the privacy."}], "references": [{"title": "Privacy-preserving multi-agent constraint satisfaction", "author": ["T. L\u00e9aut\u00e9", "B. Faltings"], "venue": "In Proceedings of the 2009 IEEE International Conference on PrivAcy, Security, riSk And Trust (PASSAT\u201909),", "citeRegEx": "L\u00e9aut\u00e9 and Faltings,? \\Q2009\\E", "shortCiteRegEx": "L\u00e9aut\u00e9 and Faltings", "year": 2009}], "referenceMentions": [{"referenceID": 0, "context": "To this purpose, we propose Algorithm 1, which is a modification of the pseudo-tree generation algorithm in Online Appendix 2, and is an improved version of the algorithm proposed by L\u00e9aut\u00e9 and Faltings (2009). Each variable x is assigned a unique number idx that corresponds to the order in which it is first visited during the distributed traversal of the constraint graph (or, more precisely, an upper bound thereon).", "startOffset": 183, "endOffset": 210}], "year": 2013, "abstractText": "The assignment of unique IDs to n variables is an instance of the well-known renaming problem, for which multiple algorithms have been proposed in the literature on distributed algorithms. However, to our knowledge, all these algorithms focus on robustness to failures, and ignore the issue of privacy. On the contrary, in this paper we do not consider agent failures, and we rather need an algorithm that protects agent and topology privacy. To this purpose, we propose Algorithm 1, which is a modification of the pseudo-tree generation algorithm in Online Appendix 2, and is an improved version of the algorithm proposed by L\u00e9aut\u00e9 and Faltings (2009). Each variable x is assigned a unique number idx that corresponds to the order in which it is first visited during the distributed traversal of the constraint graph (or, more precisely, an upper bound thereon). This is done by appending to each CHILD message the number id of variables visited so far (lines 8, 29 and 31). Each variable adds a random number to id so as not to leak any useful upper bound on its number of neighbors (lines 5 and 15). At the end of this algorithm, the root variable discovers an upper bound n+ on the total number of variables, and reveals it to everyone (lines 35 and 22 to 24).", "creator": "TeX"}}}