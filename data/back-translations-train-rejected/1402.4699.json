{"id": "1402.4699", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Feb-2014", "title": "A Powerful Genetic Algorithm for Traveling Salesman Problem", "abstract": "This paper presents a powerful genetic algorithm(GA) to solve the traveling salesman problem (TSP). To construct a powerful GA, I use edge swapping(ES) with a local search procedure to determine good combinations of building blocks of parent solutions for generating even better offspring solutions. Experimental results on well studied TSP benchmarks demonstrate that the proposed GA is competitive in finding very high quality solutions on instances with up to 16,862 cities.", "histories": [["v1", "Wed, 19 Feb 2014 15:33:35 GMT  (87kb,D)", "http://arxiv.org/abs/1402.4699v1", "5 pages, 1 figure"]], "COMMENTS": "5 pages, 1 figure", "reviews": [], "SUBJECTS": "cs.NE cs.AI", "authors": ["shujia liu"], "accepted": false, "id": "1402.4699"}, "pdf": {"name": "1402.4699.pdf", "metadata": {"source": "META", "title": "A Powerful Genetic Algorithm for Traveling Salesman Problem", "authors": ["Shujia Liu"], "emails": ["liushujia@yahoo.com"], "sections": [{"heading": "1. Introduction", "text": "The problem of the moving vendor (TSP) is one of the most frequently cited NP combinational optimization problems because it is so easy to understand but difficult to solve. It is a demanding problem of considerable academic value, as it is often used as a benchmark problem when new approaches are developed. The simplest heuristic approach for the TSP would be a greedy local search with the k-opt neighborhood defined as a set of solutions that are transformed from a current loop by replacing at most edges to construct possible loops. The solution quality will improve with increasing k as the neighborhood is fully searched with each iteration, but at the expense of rapidly increasing computation times. This paper presents a sophisticated version of ES, describes the improvements and offers more insightful analyses from a new perspective on the impact of these improvements. In addition, a broader class of benchmarks and instances with up to 15,000 cities where the online computation time of the suggested GA code is optimal in this proposed program."}, {"heading": "2. Basic Framework", "text": "In this section, I describe the basic ideas and outline the proposed General Assembly in this essay."}, {"heading": "2.1. Basic Ideas", "text": "TSP GAs typically require longer computation times than efficiently implemented local search algorithms to effectively enhance their capabilities, one reason being the nature of population-based search. However, the main reason is that crossover operators require more computing costs to generate a progeny solution than local searchers to evaluate a solution in the neighborhood. To reduce the computation costs of ES, I proposed localizing ES with an efficient implementation of this edge swapper. A localized version of ES, called PA, by replacing relatively few edges with edges selected by the other parent, called PBs. This approach enables the generation of a progeny solution in less than O (N) time, taking advantage of the fact that it will be similar to PA. Moreover, localizing ES helps maintain population diversity, coupled with an appropriate GA framework, by replacing only a posterior solution."}, {"heading": "2.2. GA Framework", "text": "The population consists of npop solutions, where npop is a parameter. Individuals in the population are generated by a suitable procedure. I use a greedy local search algorithm with the 2 opt neighborhood, because it makes sense to use a simple local search procedure to efficiently achieve npop solutions with a certain quality level.The GA search process consists of two stages. First, I use a localized version of ES as a crossover operator from the beginning of the search until no improvement of the best solution is found over a period of generations. Afterwards, I switch to a global version of ES and use it until the end of the search. Specifically, allow G the number of generations, and if the value of G has already been determined and the best solution does not improve in recent G generations, I quit the local version of ES and move to the global version of ES. The global version of ES is also terminated by the same condition where G is initialized at the beginning of the parent generation."}, {"heading": "3. ES Algorithm", "text": "I will first introduce the ES algorithm together with the description of the framework of ES. The local version of ES is described in Section 3.2, and the global version of ES is presented in Section 3.3. Details of efficient implementation techniques for the localized version of ES are presented in the online supplement of this paper."}, {"heading": "3.1. ES Framework", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "3.2. Local Version of ES", "text": "ES can generate different intermediate solutions depending on the combination of M-rings selected in step 3 for the construction of R-sets. I can construct different versions of ES by using different selection strategies of M-rings. For the original ES, I proposed a simple selection strategy, which I call a single strategy in this essay. In addition, I proposed another simple selection strategy, which is referred to in this essay as a random strategy. The two M-rings selection strategies are following. Single strategies. select a single M-ring randomly without overlapping the previous selection.Random strategies. select M-rings randomly with a probability of 0.5 each. The intermediate solution of each strategy tends to be similar to PA. In contrast, the random strategy in Figure 1 typically forms an R-group, and the resulting intermediate solution tends to contain EA and EB edges equally. In this application, I localized the random version of an ES on the construction strategy."}, {"heading": "3.3. Global Version of ES", "text": "In this subsection, I present three M-ring selection strategies for constructing global versions of ES. Here, the size of the R-sets generated by a global version of ES should be larger than that of the localized version of ES. However, increasing the R-sets typically increases the number of sub-loops in intermediate solutions (see the R-sets and the resulting intermediate solutions in Figure 1 for an illustration), which impairs the ability to generate good progeny solutions that improve parent solutions when parent solutions are very high quality loops. This is because the new edges introduced in step 5 of the ES algorithm often worsen the quality of progeny solutions in this situation. Therefore, it is preferable to reduce the number of sub-loops while increasing the R-set size. A global version of ES must be designed to satisfy these two competing challenges."}, {"heading": "4. Computational Experiments", "text": "The proposed GA was tested on 10 instances with up to 16,862 cities from well-known, widely used benchmark sets for the TSP. These are the TSPLIB: (http: / / comopt.ifi.uni-heidelberg.de) and the national TSP benchmarks: (http: / / www.math.uwaterloo.ca / tsp /).The number of cities for each instance is indicated by the instance name.The proposed GA was implemented in C and the program code was compiled using the GNU gcc compiler, the program code is available in the online supplement. I executed the GA in a computer with Intel (R) Core (TM) i5 CPU 2.27 GHz, and the execution time of the program varied considerably depending on the instance. Therefore, I measured the CPU time by running the GA 10 tests and calculated the average time cost of these tests, to get the effects of the GA and then I will analyze the results for this GA section."}, {"heading": "4.1. Configuration of the GA", "text": "I apply GA (algorithm 1) by using several different configurations to analyze the impact of the proposed improvements on performance. A configuration is determined by selecting a strategy from each of the items listed below. For each item, the default strategy corresponds to each of the proposed improvements, and other strategies are also tested for comparison. As for the default parameter values for Npop and Nch, I have determined them through preliminary experiments.Population size (Npop): 200 (default). Alternatively, if greedy selection is made, you can set 400. Number of progeny solutions (Nch): 20 (default). Alternatively, you can set 10, 30 and 40."}, {"heading": "4.2. Impact of the ES", "text": "To save space and avoid numerous experiments, I apply the GA ten times using each configuration to a selected group of instances with sizes from 9,847 to 16,862. The results are presented in the following format: instance name (instance), number of passes that find the optimal or best known solution (no better solution was found) over 10 passes, average percentage excess regarding the optimal solutions (Err) and the computation time for a single pass in seconds (time)."}, {"heading": "5. Conclusion", "text": "One of the strengths of my GA is the use of ES, an edge-swapping operator for the TSP. The local version of ES and the global version of ES significantly reduce computing costs using efficient implementation techniques, which solves the common problem that GA for TSP is usually much more time consuming than efficiently implemented local search-based algorithms. Another important contribution is the development of ES in generating even better offspring solutions from very high quality parent solutions in the final stages of GA. An interesting feature is that I design a simple local search procedure in ES to determine good combinations of the edges of the parents. I have shown that the improvements significantly improve the performance of the GA. I believe that the proposed GA is a good example of a sophisticated GA application for a representative combinatorial optimization problem and that some of the ideas can be successfully applied to the design of other gas optimization problems."}], "references": [{"title": "Comparison between ant colony and genetic algorithm using traveling salesman problem", "author": ["Abduljabbar", "Zaid Ameen", "Khalefa", "Mustafa S", "Jabar", "Marzanah A"], "venue": "International Journal of Soft Computing,", "citeRegEx": "Abduljabbar et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Abduljabbar et al\\.", "year": 2013}, {"title": "A hybrid genetic algorithm for the bottleneck traveling salesman problem", "author": ["Ahmed", "Zakir Hussain"], "venue": "ACM Transactions on Embedded Computing Systems (TECS),", "citeRegEx": "Ahmed and Hussain.,? \\Q2013\\E", "shortCiteRegEx": "Ahmed and Hussain.", "year": 2013}, {"title": "An experimental study of a hybrid genetic algorithm for the maximum traveling salesman problem", "author": ["Ahmed", "Zakir Hussain"], "venue": "Mathematical Sciences,", "citeRegEx": "Ahmed and Hussain.,? \\Q2013\\E", "shortCiteRegEx": "Ahmed and Hussain.", "year": 2013}, {"title": "Development a new mutation operator to solve the traveling salesman problem by aid of genetic algorithms", "author": ["Albayrak", "Murat", "Allahverdi", "Novruz"], "venue": "Expert Systems with Applications,", "citeRegEx": "Albayrak et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Albayrak et al\\.", "year": 2011}, {"title": "A hybrid algorithm to solve traveling salesman problem", "author": ["Chen", "Xiaofeng", "Tan", "Zhenhua", "Yang", "Guangming", "Cheng", "Wei"], "venue": "In Advances in Electronic Engineering, Communication and Management", "citeRegEx": "Chen et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2012}, {"title": "Performance analysis of the partial use of a local optimization operator on the genetic algorithm for the travelling salesman problem", "author": ["Djordjevic", "Milan", "Grgurovi\u010d", "Marko", "Brodnik", "Andrej"], "venue": "Business Systems Research,", "citeRegEx": "Djordjevic et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Djordjevic et al\\.", "year": 2012}, {"title": "Solving the traveling salesman problem using cooperative genetic ant systems", "author": ["Dong", "Gaifang", "Guo", "William W", "Tickle", "Kevin"], "venue": "Expert Systems with Applications,", "citeRegEx": "Dong et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Dong et al\\.", "year": 2012}, {"title": "A new solution for travelling salesman problem by genetic algorithm", "author": ["Hatami", "Shirin", "Babazadeh", "Morteza"], "venue": "International Journal of Advanced Research in Computer Science,", "citeRegEx": "Hatami et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Hatami et al\\.", "year": 2011}, {"title": "A discrete artificial bee colony algorithm for the traveling salesman problem with time windows", "author": ["Karabulut", "Korhan", "Tasgetiren", "Mehmet Fatih"], "venue": "In Evolutionary Computation (CEC),", "citeRegEx": "Karabulut et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Karabulut et al\\.", "year": 2012}, {"title": "A new multiple traveling salesman problem and its genetic algorithm-based solution", "author": ["Li", "Jun", "Sun", "Qirui", "Zhou", "MengChu", "Dai", "Xianzhong"], "venue": "In Systems, Man, and Cybernetics (SMC),", "citeRegEx": "Li et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Li et al\\.", "year": 2013}, {"title": "Optimal tree for genetic algorithms in the traveling salesman problem (tsp)", "author": ["Liew", "Sing"], "venue": "arXiv preprint arXiv:1204.2352,", "citeRegEx": "Liew and Sing.,? \\Q2012\\E", "shortCiteRegEx": "Liew and Sing.", "year": 2012}, {"title": "A powerful genetic algorithm using edge assembly crossover for the traveling salesman problem", "author": ["Nagata", "Yuichi", "Kobayashi", "Shigenobu"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "Nagata et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Nagata et al\\.", "year": 2013}, {"title": "A new genetic algorithm for the asymmetric traveling salesman problem", "author": ["Nagata", "Yuichi", "Soler", "David"], "venue": "Expert Systems with Applications,", "citeRegEx": "Nagata et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Nagata et al\\.", "year": 2012}, {"title": "Comments on albayrak, m., & allahverdy n.(2011). development a new mutation operator to solve the traveling salesman problem by aid", "author": ["E Osaba", "E Onieva", "F Diaz", "R Carballedo", "A. Perallos"], "venue": null, "citeRegEx": "Osaba et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Osaba et al\\.", "year": 2011}, {"title": "Genetic algorithm based approach to solve travelling salesman problem with one point crossover operator", "author": ["Roy", "Sharadindu"], "venue": "INTERNATIONAL JOURNAL OF COMPUTERS & TECHNOLOGY,", "citeRegEx": "Roy and Sharadindu.,? \\Q2013\\E", "shortCiteRegEx": "Roy and Sharadindu.", "year": 2013}, {"title": "Extended virtual loser genetic algorithm for the dynamic traveling salesman problem", "author": ["Sim\u00f5es", "Anabela", "Costa", "Ernesto"], "venue": "In Proceeding of the fifteenth annual conference on Genetic and evolutionary computation conference,", "citeRegEx": "Sim\u00f5es et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Sim\u00f5es et al\\.", "year": 2013}, {"title": "A hybrid genetic algorithm for the traveling salesman problem using generalized partition crossover", "author": ["Whitley", "Darrell", "Hains", "Doug", "Howe", "Adele"], "venue": "In Parallel Problem Solving from Nature, PPSN XI,", "citeRegEx": "Whitley et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Whitley et al\\.", "year": 2010}, {"title": "A novel two-level hybrid algorithm for multiple traveling salesman problems", "author": ["Yu", "Qingsheng", "Wang", "Dong", "Lin", "Dongmei", "Li", "Ya", "Wu", "Chen"], "venue": "In Advances in Swarm Intelligence,", "citeRegEx": "Yu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Yu et al\\.", "year": 2012}, {"title": "A new crossover approach for solving the multiple travelling salesmen problem using genetic algorithms", "author": ["Yuan", "Shuai", "Skinner", "Bradley", "Huang", "Shoudong", "Liu", "Dikai"], "venue": "European Journal of Operational Research,", "citeRegEx": "Yuan et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Yuan et al\\.", "year": 2013}], "referenceMentions": [], "year": 2014, "abstractText": "This paper presents a powerful genetic algorithm (GA) to solve the traveling salesman problem (TSP). To construct a powerful GA, I use edge swapping(ES) with a local search procedure to determine good combinations of building blocks of parent solutions for generating even better offspring solutions. Experimental results on well studied TSP benchmarks demonstrate that the proposed GA is competitive in finding very high quality solutions on instances with up to 16,862 cities.", "creator": "LaTeX with hyperref package"}}}