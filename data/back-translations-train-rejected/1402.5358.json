{"id": "1402.5358", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Feb-2014", "title": "Extended Breadth-First Search Algorithm", "abstract": "The task of artificial intelligence is to provide representation techniques for describing problems, as well as search algorithms that can be used to answer our questions. A widespread and elaborated model is state-space representation, which, however, has some shortcomings. Classical search algorithms are not applicable in practice when the state space contains even only a few tens of thousands of states. We can give remedy to this problem by defining some kind of heuristic knowledge. In case of classical state-space representation, heuristic must be defined so that it qualifies an arbitrary state based on its \"goodness,\" which is obviously not trivial. In our paper, we introduce an algorithm that gives us the ability to handle huge state spaces and to use a heuristic concept which is easier to embed into search algorithms.", "histories": [["v1", "Fri, 21 Feb 2014 17:21:52 GMT  (474kb)", "http://arxiv.org/abs/1402.5358v1", "5 pages, 1 figure, 1 table"]], "COMMENTS": "5 pages, 1 figure, 1 table", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["tam\\'as k\\'adek", "j\\'anos p\\'anovics"], "accepted": false, "id": "1402.5358"}, "pdf": {"name": "1402.5358.pdf", "metadata": {"source": "META", "title": "Extended Breadth-First Search Algorithm", "authors": ["Tam\u00e1s K\u00e1dek", "J\u00e1nos P\u00e1novics"], "emails": ["kadek.tamas@inf.unideb.hu", "panovics.janos@inf.unideb.hu"], "sections": [{"heading": null, "text": "A widely used and sophisticated model is the representation of the state of space, but it has some shortcomings. Classical search algorithms are not applicable in practice if the state space comprises only a few tens of thousands of states. We can remedy this by defining a kind of heuristic knowledge. In the case of classical state space representation, heuristics must be defined in such a way that it qualifies any state on the basis of its \"quality,\" which is obviously not trivial. In our paper, we present an algorithm that enables us to deal with huge state spaces and use a heuristic concept that is easier to embed in search algorithms. Keywords: Artificial Intelligence, State-Space Representation, Extended Model, Breadth-First Search."}, {"heading": "1. Introduction", "text": "The most basic method of problem representation used by artificial intelligence is to represent the state in space. However, it can be used to comfortably describe only a certain small subset of problems. For example, even a simple chess puzzle can have too many possibilities to proceed from a particular situation, since each piece can move in quite a lot of directions and potentially more than one field. Of course, we do not have to deal with all possible moves in a particular situation, provided we have a means to mark the cases that are relevant to the point of view of the solution. This can only happen if we have additional knowledge of the problem that is normally represented by a heuristic function. However, in the event that we have this additional knowledge, it can still be difficult to describe it as a function. For example, in the 8-puzzle game, the heuristic function evaluates a situation as more attractive if it has more pieces in their right places, but this measure will fail in some cases. Before proposing a new algorithm that addresses the problem mentioned above, we must first address the problem ristically."}, {"heading": "2. An Extended State-Space Model (ESSM)", "text": "The goal of this generalization is the ability to model as many systems that do not correspond to the classical interpretation as possible in a unified space. At the execution of each step, newer and newer states are created that form the state space. (Although the relevant properties are defined by the sets of their possible values, a state can be represented as an element of the cartesian product of these propositions.) Let us call this Cartesian product of S. Possible steps are then operations on the elements of S. Let us call the series of operations of F. State space is often represented as a graph in which nodes represent states, and edges represent operations. In this way, the search for a solution to a problem can actually take place with the help of a pathfinding algorithm. We consider the basic idea (i.e., the concepts of states and operations on states) in the extended state space model (ESSM). The goal of this generalization is to model as many systems that correspond to the classical interpretation will not be defined as possible in a unified space."}, {"heading": "3. Model Restrictions for EBFS", "text": "Before describing the EBFS algorithm, we will first introduce the model that serves as an adequate representation technique for problems that suffer from the disadvantages mentioned above, i.e. the large number of states and non-trivial heuristic functions. We can now take advantage of ESSM that more than one state (sentence K) can be defined as input to the search, the basic idea being that the given states should be relevant, which means that the heuristic function is replaced by a list of states that are (potentially) considered useful. In other words, the given states are predictably part of one of the solutions. Similar to the use of a heuristic function, this prediction is not necessarily perfect. There is only one limitation: at least one of the given states should be on a path that represents a solution."}, {"heading": "4. The EBFS Algorithm", "text": "The EBFS algorithms extend the BFS algorithm with the ability to perform more than one width-first search starting from more than one state (the initial known states). It is especially useful if the sub-trees being examined regard each other as represented by Figure 1. The dashed line then identifies the sub-tree discovered by the standard BFS algorithm, even if k1 has not proven that it is useful to find the solution, as the illustration shows. EBFS algorithms store a partial graph of the representation during the search. For each node, it stores the state represented by the node as usual. If we have forward functions, we must also store the forward state (open, closed or not relevant)."}, {"heading": "5. Results", "text": "The state-space representation described in Section 3 illustrates when the EBFS algorithm can be useful. We performed the EBFS and the classic BFS algorithms with the n-queens problem with different values of n and summarized the results in the following table: The table clearly shows that even with only two originally known states, the number of states examined during the EBFS search until successful completion is much lower than that of the BFS, which is the same state as in the case of the EBFS with only one originally known state: the initial state (if the board is empty). If we had two originally known states, then for all values of n one of them was the initial state of the problem (which is a sufficient prerequisite for finding a solution), and the other was a state on a path representing one of the solutions."}, {"heading": "6. Conclusions and Future Work", "text": "As can be seen from the comparison table, EBFS outperforms the classical BFS algorithm in cases where the state space is large, but we can specify a few states that we consider to be part of a solution. Introduction of the EBFS algorithm was only made possible by creating an extended state space model. EBFS algorithm itself is an extension of the classical BFS algorithm. Now, the question arises as to how it is possible to extend other graph search algorithms, such as the search for uniform costs."}, {"heading": "Acknowledgments", "text": "The publication was supported by the T\u00c1MOP-4.2.2.C11 / 1 / KONV-2012-0001 project, co-financed by the European Union."}], "references": [{"title": "Direction- Optimizing Breadth-First Search", "author": ["S. Beamer", "K. Asanovi\u0107", "D. Patterson"], "venue": "in International Conference on High Performance Computing, Networking, Storage and Analysis (SC", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Tractable Planning Under Uncertainty: Exploiting Structure", "author": ["J. Pineau"], "venue": "Ph.D. thesis,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}], "referenceMentions": [], "year": 2013, "abstractText": "The task of artificial intelligence is to provide representation techniques for describing problems, as well as search algorithms that can be used to answer our questions. A widespread and elaborated model is state-space representation, which, however, has some shortcomings. Classical search algorithms are not applicable in practice when the state space contains even only a few tens of thousands of states. We can give remedy to this problem by defining some kind of heuristic knowledge. In case of classical state-space representation, heuristic must be defined so that it qualifies an arbitrary state based on its \u201cgoodness,\u201d which is obviously not trivial. In our paper, we introduce an algorithm that gives us the ability to handle huge state spaces and to use a heuristic concept which is easier to embed into search algorithms.", "creator": "Microsoft\u00ae Word 2013"}}}