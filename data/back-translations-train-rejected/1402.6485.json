{"id": "1402.6485", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Feb-2014", "title": "Solving MaxSAT and #SAT on structured CNF formulas", "abstract": "In this paper we propose a structural parameter of CNF formulas and use it to identify instances of weighted MaxSAT and #SAT that can be solved in polynomial time. Given a CNF formula we say that a set of clauses is precisely satisfiable if there is some complete assignment satisfying these clauses only. Let the ps-value of the formula be the number of precisely satisfiable sets of clauses. Applying the notion of branch decompositions to CNF formulas and using ps-value as cut function, we define the ps-width of a formula. For a formula given with a decomposition of polynomial ps-width we show dynamic programming algorithms solving weighted MaxSAT and #SAT in polynomial time. Combining with results of 'Belmonte and Vatshelle, Graph classes with structured neighborhoods and algorithmic applications, Theor. Comput. Sci. 511: 54-65 (2013)' we get polynomial-time algorithms solving weighted MaxSAT and #SAT for some classes of structured CNF formulas. For example, we get $O(m^2(m + n)s)$ algorithms for formulas $F$ of $m$ clauses and $n$ variables and size $s$, if $F$ has a linear ordering of the variables and clauses such that for any variable $x$ occurring in clause $C$, if $x$ appears before $C$ then any variable between them also occurs in $C$, and if $C$ appears before $x$ then $x$ occurs also in any clause between them. Note that the class of incidence graphs of such formulas do not have bounded clique-width.", "histories": [["v1", "Wed, 26 Feb 2014 10:48:36 GMT  (75kb,D)", "http://arxiv.org/abs/1402.6485v1", null]], "reviews": [], "SUBJECTS": "cs.DS cs.AI cs.CC", "authors": ["sigve hortemo s{\\ae}ther", "jan arne telle", "martin vatshelle"], "accepted": false, "id": "1402.6485"}, "pdf": {"name": "1402.6485.pdf", "metadata": {"source": "CRF", "title": "Solving MaxSAT and #SAT on structured CNF formulas", "authors": ["Sigve Hortemo S\u00e6ther", "Jan Arne Telle", "Martin Vatshelle"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "This year is the highest in the history of the country."}, {"heading": "2 Framework", "text": "For a formula F, cla (F) denotes clauses in F. For a series of variables and clauses, var (S) denotes the variables in S and cla (S) denotes the clauses in C and cla (S) denotes the clauses in C. For a formula F, var (S) denotes the clauses in S and cla (S) denotes the clauses in C. For a formula F, var (F) denotes the clauses in Maxx (S) the clauses in Maxx (F) the clauses in Maxx (F)."}, {"heading": "2.1 Cut of a formula", "text": "In this essay, we will solve MaxSAT and # SAT by using dynamic programming that we do not apply in all areas. We will use a method of division and overcoming, in which we will solve the problem on smaller formulas of the original formula F and then combine the solutions for each of these smaller formulas to form a solution for the entire formula F. However, let us note that the solutions for a subformula will depend on the interaction between the subformula and the rest of formula F. We say that C | X is clause C, that of X. For a formula F and subsets C cla (F) and X clause (F), we say that the clause {2} of C and X is the formula. We say that clause C | X is the clause C, that of X. We say that formula F and subsets C cla (F) and X clausus (F), we say that the subformula FC, X is induced by F."}, {"heading": "5 Interval bigraphs and formulas having interval", "text": "In this section we will show a class of formulas in which we can find linear branch divisions with the ps width O (| cla (F) |). Let us remember the definition of the interval order. A CNF formula F has an interval order, if there is a linear order of variables and clauses, so that for every variable x that occurs in clause C, if x appears before C, then every variable between them also occurs in C, and if C appears before x, then x also occurs in any set between them. From a result of Hell and Huang [11] it follows that a formula F has an interval order, if and only if I (F) is an interval size. Theorem 10. Given a CNF formula F over n variables and m clauses and the size s, we can decide in time O (m + n) whether F has an interval order (yes, if I (F) is an interval size."}, {"heading": "6 Conclusion", "text": "In this paper, we have proposed a structural parameter of CNF formulas called ps-width or perfect-satisfiable-width. We have shown that weighted MaxSAT and # SAT can be solved in polynomial time using formulas specified with a decomposition of polynomially limited ps-width. With the concept of interval bigraphs, we also showed a polynomial time algorithm that actually finds such decomposition for formulas with an interval order. Could such an algorithm also be conceived for the larger class of arc bigraphs, or perhaps even for the even larger class of k-trapezoidal bigraphs? In other words, the problem of recognizing whether a two-part input graph is a circular arc bigraph, or a k-trapezoidal bigraph, or perhaps even for the even larger class of k-trapezoidal bigraphs? It might be interesting to use an algorithm that solves a circular arc formula, such as a formula or a SAT / SAT would be more practical."}], "references": [{"title": "Graph classes with structured neighborhoods and algorithmic applications", "author": ["R\u00e9my Belmonte", "Martin Vatshelle"], "venue": "Theor. Comput. Sci.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Graph Classes: A Survey, volume 3 of Monographs on Discrete Mathematics and Applications", "author": ["A. Brandst\u00e4dt", "V. Bang Le", "J.P. Spinrad"], "venue": "SIAM Society for Industrial and Applied Mathematics, Philadelphia,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1999}, {"title": "On the linear structure and clique-width of bipartite permutation graphs", "author": ["Andreas Brandst\u00e4dt", "Vadim V. Lozin"], "venue": "Ars Comb.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "H-join decomposable graphs and algorithms with runtime single exponential in rankwidth", "author": ["Binh-Minh Bui-Xuan", "Jan Arne Telle", "Martin Vatshelle"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Boolean-width of graphs", "author": ["Binh-Minh Bui-Xuan", "Jan Arne Telle", "Martin Vatshelle"], "venue": "Theoretical Computer Science,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Clique-width of countable graphs: a compactness property", "author": ["Bruno Courcelle"], "venue": "Discrete Mathematics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2004}, {"title": "Counting truth assignments of formulas of bounded tree-width or clique-width", "author": ["Eldar Fischer", "Johann A. Makowsky", "Elena V. Ravve"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Better algorithms for satisfiability problems for formulas of bounded rank-width", "author": ["Robert Ganian", "Petr Hlinen\u00fd", "Jan Obdrz\u00e1lek"], "venue": "Fundam. Inform.,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "David S. Johnson"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1979}, {"title": "Branch-width and well-quasi-ordering in matroids and graphs", "author": ["James F. Geelen", "Bert Gerards", "Geoff Whittle"], "venue": "J. COMBIN. THEORY SER. B,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2002}, {"title": "Interval bigraphs and circular arc graphs", "author": ["Pavol Hell", "Jing Huang"], "venue": "Journal of Graph Theory,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2004}, {"title": "Finding good decompositions for dynamic programming on dense graphs", "author": ["Eivind Magnus Hvidevold", "Sadia Sharmin", "Jan Arne Telle", "Martin Vatshelle"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "On the complexity of the maximum satisfiability problem for horn formulas", "author": ["Brigitte Jaumard", "Bruno Simeone"], "venue": "Inf. Process. Lett.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1987}, {"title": "Recognizing interval digraphs and interval bigraphs in polynomial time", "author": ["Haiko M\u00fcller"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1997}, {"title": "Model counting for CNF formulas of bounded modular treewidth", "author": ["Dani\u00ebl Paulusma", "Friedrich Slivovsky", "Stefan Szeider"], "venue": "STACS, volume 20 of LIPIcs,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "Recognizing interval bigraphs by forbidden patterns", "author": ["Arash Rafiey"], "venue": "CoRR, abs/1211.2662,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "A simplified NP-complete MAXSAT problem", "author": ["Venkatesh Raman", "Bala Ravikumar", "S. Srinivasa Rao"], "venue": "Inf. Process. Lett.,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1998}, {"title": "Graph minors X. obstructions to tree-decomposition", "author": ["Neil Robertson", "Paul D. Seymour"], "venue": "J. COMBIN. THEORY SER. B,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1991}, {"title": "A connectionist framework for reasoning: Reasoning with examples", "author": ["Dan Roth"], "venue": "editors, AAAI/IAAI,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1996}, {"title": "Algorithms for propositional model counting", "author": ["Marko Samer", "Stefan Szeider"], "venue": "J. Discrete Algorithms,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}, {"title": "Model counting for formulas of bounded clique-width", "author": ["Friedrich Slivovsky", "Stefan Szeider"], "venue": "editors, ISAAC,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2013}, {"title": "On fixed-parameter tractable parameterizations of SAT", "author": ["Stefan Szeider"], "venue": "editors, SAT,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2003}, {"title": "New width parameters of graphs", "author": ["Martin Vatshelle"], "venue": "PhD thesis, The University of Bergen,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}], "referenceMentions": [{"referenceID": 8, "context": "#SAT is #P-hard [9] even when restricted to Horn 2-CNF formulas, and to monotone 2-CNF formulas [19].", "startOffset": 16, "endOffset": 19}, {"referenceID": 18, "context": "#SAT is #P-hard [9] even when restricted to Horn 2-CNF formulas, and to monotone 2-CNF formulas [19].", "startOffset": 96, "endOffset": 100}, {"referenceID": 12, "context": "MaxSAT is NP-hard even when restricted to Horn 2-CNF formulas [13], and to 2-CNF formulas where each variable appears at most 3 times [17].", "startOffset": 62, "endOffset": 66}, {"referenceID": 16, "context": "MaxSAT is NP-hard even when restricted to Horn 2-CNF formulas [13], and to 2-CNF formulas where each variable appears at most 3 times [17].", "startOffset": 134, "endOffset": 138}, {"referenceID": 6, "context": "bounding width parameters of graphs associated with formulas, see for example [7, 8, 20, 22].", "startOffset": 78, "endOffset": 92}, {"referenceID": 7, "context": "bounding width parameters of graphs associated with formulas, see for example [7, 8, 20, 22].", "startOffset": 78, "endOffset": 92}, {"referenceID": 19, "context": "bounding width parameters of graphs associated with formulas, see for example [7, 8, 20, 22].", "startOffset": 78, "endOffset": 92}, {"referenceID": 21, "context": "bounding width parameters of graphs associated with formulas, see for example [7, 8, 20, 22].", "startOffset": 78, "endOffset": 92}, {"referenceID": 14, "context": "The work we present here is inspired by the recent results of Paulusma et al [15] and Slivovsky and Szeider [21] showing that #SAT is solvable in polynomial time when the incidence graph I(F ) of the input formula F has bounded modular treewidth, and more strongly, bounded symmetric clique-width.", "startOffset": 77, "endOffset": 81}, {"referenceID": 20, "context": "The work we present here is inspired by the recent results of Paulusma et al [15] and Slivovsky and Szeider [21] showing that #SAT is solvable in polynomial time when the incidence graph I(F ) of the input formula F has bounded modular treewidth, and more strongly, bounded symmetric clique-width.", "startOffset": 108, "endOffset": 112}, {"referenceID": 20, "context": "These are dynamic programming algorithms similar to the one given for #SAT in [21], but we believe that the ps-width parameter is a better measure of its \u2019inherent runtime bottleneck\u2019.", "startOffset": 78, "endOffset": 82}, {"referenceID": 20, "context": "The algorithm of [21] solves #SAT in time (n+m)O(w) for w being the symmetric clique-width of the decomposition, and is thus a polynomial-time algorithm if given a decomposition with constantly bounded w.", "startOffset": 17, "endOffset": 21}, {"referenceID": 22, "context": "The result of Theorem 3 encompasses this, since we show via the concept of MIM-width [23], that any formula with constantly bounded symmetric clique-width also has polynomially bounded ps-width.", "startOffset": 85, "endOffset": 89}, {"referenceID": 22, "context": "This is shown using the concept of MIM-width of graphs, introduced in the thesis of Vatshelle [23].", "startOffset": 94, "endOffset": 98}, {"referenceID": 0, "context": "In particular, this holds for classes of formulas having incidence graphs that can be represented as intersection graphs of certain objects, like interval graphs [1].", "startOffset": 162, "endOffset": 165}, {"referenceID": 2, "context": "The interval bigraphs contain all bipartite permutation graphs, and these latter graphs have been shown to have unbounded clique-width [3].", "startOffset": 135, "endOffset": 138}, {"referenceID": 10, "context": "By combining an alternative definition of interval bigraphs [11] with a fast recognition algorithm [14, 16] we arrive at the following.", "startOffset": 60, "endOffset": 64}, {"referenceID": 13, "context": "By combining an alternative definition of interval bigraphs [11] with a fast recognition algorithm [14, 16] we arrive at the following.", "startOffset": 99, "endOffset": 107}, {"referenceID": 15, "context": "By combining an alternative definition of interval bigraphs [11] with a fast recognition algorithm [14, 16] we arrive at the following.", "startOffset": 99, "endOffset": 107}, {"referenceID": 9, "context": "We will be using a type of decomposition that originates in the theory of graphs and matroids where it is known as branch decomposition, see [10, 18].", "startOffset": 141, "endOffset": 149}, {"referenceID": 17, "context": "We will be using a type of decomposition that originates in the theory of graphs and matroids where it is known as branch decomposition, see [10, 18].", "startOffset": 141, "endOffset": 149}, {"referenceID": 20, "context": "The standard approach is to apply this type of decomposition to the incidence graph of a formula, and evaluate its width using as cut function a graph parameter, as done in [21].", "startOffset": 173, "endOffset": 177}, {"referenceID": 3, "context": "Our algorithm uses the technique of \u2019expectation from the outside\u2019 introduced in [4, 5].", "startOffset": 81, "endOffset": 87}, {"referenceID": 4, "context": "Our algorithm uses the technique of \u2019expectation from the outside\u2019 introduced in [4, 5].", "startOffset": 81, "endOffset": 87}, {"referenceID": 4, "context": "A clever trick first introduced in [5] allows us to loop over triples of indices and for each triple compute the remaining 3 indices forming the 6-tuple involved in the update, thereby reducing the runtime.", "startOffset": 35, "endOffset": 38}, {"referenceID": 22, "context": "In his thesis, Vatshelle [23] shows that MIM-width of any graph G is at most the clique-width of G.", "startOffset": 25, "endOffset": 29}, {"referenceID": 5, "context": "Furthermore, the clique-width has been shown by Courcelle [6] to be at most twice the symmetric clique-width.", "startOffset": 58, "endOffset": 61}, {"referenceID": 0, "context": "Many well known classes of intersection graphs have constant MIM-width, as in the following which lists only a subset of the classes proven to have such bounds in [1, 23].", "startOffset": 163, "endOffset": 170}, {"referenceID": 22, "context": "Many well known classes of intersection graphs have constant MIM-width, as in the following which lists only a subset of the classes proven to have such bounds in [1, 23].", "startOffset": 163, "endOffset": 170}, {"referenceID": 0, "context": "Theorem 8 ([1, 23]).", "startOffset": 11, "endOffset": 18}, {"referenceID": 22, "context": "Theorem 8 ([1, 23]).", "startOffset": 11, "endOffset": 18}, {"referenceID": 1, "context": "See [2] for information about graph classes and their containment relations.", "startOffset": 4, "endOffset": 7}, {"referenceID": 10, "context": "By a result of Hell and Huang [11] it follows that a formula F has an interval ordering if and only if I(F ) is a interval bigraph.", "startOffset": 30, "endOffset": 34}, {"referenceID": 10, "context": "Using the characterization of [11] and the algorithm of [16] we can in time O((m+ n)s) decide if F has an interval ordering and if yes, then we find it.", "startOffset": 30, "endOffset": 34}, {"referenceID": 15, "context": "Using the characterization of [11] and the algorithm of [16] we can in time O((m+ n)s) decide if F has an interval ordering and if yes, then we find it.", "startOffset": 56, "endOffset": 60}, {"referenceID": 0, "context": "From this interval ordering we build an interval graph G such that I(F ) is a bigraph bipartization of G, and construct a linear branch decomposition of G having MIM-width 1 [1].", "startOffset": 174, "endOffset": 177}, {"referenceID": 11, "context": "Maybe such an algorithm could be of practical use? Also of practical interest would be to design a heuristic algorithm which given a formula finds a decomposition of relatively low ps-width, as has been done for boolean-width in [12].", "startOffset": 229, "endOffset": 233}], "year": 2014, "abstractText": "In this paper we propose a structural parameter of CNF formulas and use it to identify instances of weighted MaxSAT and #SAT that can be solved in polynomial time. Given a CNF formula we say that a set of clauses is precisely satisfiable if there is some complete assignment satisfying these clauses only. Let the ps-value of the formula be the number of precisely satisfiable sets of clauses. Applying the notion of branch decompositions to CNF formulas and using ps-value as cut function, we define the ps-width of a formula. For a formula given with a decomposition of polynomial ps-width we show dynamic programming algorithms solving weighted MaxSAT and #SAT in polynomial time. Combining with results of \u2019Belmonte and Vatshelle, Graph classes with structured neighborhoods and algorithmic applications, Theor. Comput. Sci. 511: 54-65 (2013)\u2019 we get polynomial-time algorithms solving weighted MaxSAT and #SAT for some classes of structured CNF formulas. For example, we get O(m(m + n)s) algorithms for formulas F of m clauses and n variables and size s, if F has a linear ordering of the variables and clauses such that for any variable x occurring in clause C, if x appears before C then any variable between them also occurs in C, and if C appears before x then x occurs also in any clause between them. Note that the class of incidence graphs of such formulas do not have bounded clique-width.", "creator": "LaTeX with hyperref package"}}}