{"id": "1403.0222", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Mar-2014", "title": "Beyond Q-Resolution and Prenex Form: A Proof System for Quantified Constraint Satisfaction", "abstract": "We consider the quantified constraint satisfaction problem (QCSP) which is to decide, given a structure and a first-order sentence (not assumed here to be in prenex form) built from conjunction and quantification, whether or not the sentence is true on the structure. We present a proof system for certifying the falsity of QCSP instances and develop its basic theory; for instance, we provide an algorithmic interpretation of its behavior. Our proof system places the established Q-resolution proof system in a broader context, and also allows us to derive QCSP tractability results.", "histories": [["v1", "Sun, 2 Mar 2014 15:19:57 GMT  (32kb)", "https://arxiv.org/abs/1403.0222v1", null], ["v2", "Fri, 23 May 2014 08:15:56 GMT  (22kb)", "http://arxiv.org/abs/1403.0222v2", null], ["v3", "Mon, 17 Nov 2014 14:07:51 GMT  (237kb,D)", "http://arxiv.org/abs/1403.0222v3", null], ["v4", "Sat, 20 Dec 2014 13:55:26 GMT  (246kb,D)", "http://arxiv.org/abs/1403.0222v4", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.CC", "authors": ["hubie chen"], "accepted": false, "id": "1403.0222"}, "pdf": {"name": "1403.0222.pdf", "metadata": {"source": "CRF", "title": "BEYOND Q-RESOLUTION AND PRENEX FORM: A PROOF SYSTEM FOR QUANTIFIED CONSTRAINT SATISFACTION", "authors": ["HUBIE CHEN", "Hubie Chen"], "emails": [], "sections": [{"heading": "1. Introduction", "text": "In fact, it is so that most of them are able to surpass themselves by taking themselves to task. (...) In fact, it is so that they are able to survive themselves. (...) It is so that they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves}, {"heading": "2. Preliminaries", "text": "If f is a figure, we use f S to denote its limitation to a sentence S; we use f [s \u2192 b] to denote the extension of f that maps s to b. We extend this notation to include sets of figures in natural fashion.A signature is a pair (S) in which S is a set of sorts and meanings of first order logic. For the sake of general applicability, we will work in this article with a multi-sorted formula of first order, formalized here as follows. A signature is a pair (S) in which S is a set of sorts and meanings, a set of relation symbols; each relation symbol R has a related arbitrariness ar (R), which is an element of the S signature. Each variable v has an associated signature s (v). An atom is a formula R (v1,)."}, {"heading": "3. QCSP proof system", "text": "In this section, we will present our system of proof for the QCSP and outline some basic properties of it, including solidity and completeness. Let's (\u03c6, B) be a QCSP instance, and let's understand the formula of \u03c6 as a tree. The system of proof allows us to derive what we call an instance at the various nodes of the tree. To facilitate the discussion, let's assume that each Qc sentence contains either a set of indexes containing an index for each subformula, that is, for each node of the tree that corresponds to both. Let's note that (generally) the collection of constraints is derivable from a subformula that does not depend on the subformula, but also on the subformula whose location is in the complete formula. If i is an index, let's use this subformula (i) to name the actual subformula, we will also refer to i."}, {"heading": "4. Propositional proof system", "text": "In this section, we will introduce a different system of evidence that includes a meaningful interpretation of the QCSP proof system. To differentiate, we will refer to judgments and judgments as defined in the previous section. A clause is an exclusion of words that contains at least one word about the variable for each variable; a clause is sometimes considered to be the set of words it contains, and the other is v; each clause is empty if it does not contain words. A clause's variables are simply the variables underlying the clause, and the variables of a clause are considered by a set of words it contains. A clause is empty if it does not contain words; the variables of a clause are simply the variables underlying the clause, and the variables of a clause are considered by a set of words it contains."}, {"heading": "Acknowledgements", "text": "The author thanks Moritz Mu \u00bc ller and Friedrich Sliwovsky for their useful comments. This work was supported by the Spanish project TIN2013-46181-C2-2-R, the Basque project GIU12 / 26 and the Basque scholarship UFI11 / 45."}, {"heading": "Appendix A. Proof of Theorem 4.3", "text": "The theorem follows directly from the following two theorems. Theorem A.1. Let's be \u03b2 \u03b2 \u03b2 \u03b2 1 example and let (\u03c6, B) a QCSP translation of formula 1. For each clause judgment proof that there is a restriction judgment proof for (\u03c6, B) length \u2264 2s and width \u2264 w + 1 so that: each clause judgment that appears in the first evidence has the condition property that there is a restriction judgment on the form (i, vars (\u03b1), F) so that each f-clause judgment fulfills (equally, the unique g: vars) \u2192 {0, 1} that the satisfaction is not in F. A direct consequence of this theory is that if the original clause judgment contains proof, then the produced restriction proof contains an empty clause."}, {"heading": "Appendix B. Proof of Theorem 4.5", "text": "The theorem follows directly from the following two theorems. Theorem B.1. Let us be a QCBF instance. (Given a tree-like clause that proves that P (as a tree) exists of an empty clause, there is a track E whose root has a label (\u2205, e) and where the number of nodes in E is equal to the number of non-flow judgments in P. (Here we use e to denote the unique mapping of P to {0, 1}.) Also, the translation from P to E is polynomial-time computable.Proof. We prove the following result that results in the theorem. Suppose that P is a tree-like clause reasoning that is considered a tree to denote the clause judgments at the root of P, there is a trace E whose number of nodes is equal to the number of non-flow judgments in which P and their root judgments (S)."}, {"heading": "Appendix C. Proof of Theorem 5.3", "text": "Theorem 5.3 follows directly from the two lemmas set out in this paragraph. Lemma C.1. Let us (F, B) be a QCSP instance (F). If there is a k-constraint system P for the instance, then the instance is k-Richter-consistent.Proof. We show that if (i, V, F) there is a derivative judgment, then P [i, V] is a derivative judgment, on the basis of which rule was used to derive (i, F).In the case of (atom) we have P [i, V] F by property (F] F by property (\u03b1).In the case of (p) we assume that V, F) is an earlier judgment with P [i, V] F, and that the judgment of interest has the form (i, U, F U U V) where U V is."}], "references": [{"title": "Constraint propagation as a proof system", "author": ["A. Atserias", "P. Kolaitis", "M. Vardi"], "venue": "In Proceedings of CP,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "Constraint satisfaction problems of bounded width", "author": ["L. Barto", "M. Kozik"], "venue": "In Proceedings of FOCS\u201909,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Propositional proof complexity: Past, present and future", "author": ["P. Beame", "T. Pitassi"], "venue": "Bulletin of the EATCS,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1998}, {"title": "Resolution for quantified Boolean formulas", "author": ["H.K. B\u00fcning", "M. Karpinski", "A. Fl\u00f6gel"], "venue": "Information and Computation,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1995}, {"title": "The tractability frontier of graph-like first-order query sets", "author": ["H. Chen"], "venue": "In Joint Meeting of the Twenty- Third EACSL Annual Conference on Computer Science Logic (CSL) and the Twenty-Ninth Annual ACM/IEEE Symposium on Logic in Computer Science (LICS), CSL-LICS \u201914,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "From Pebble Games to Tractability: An Ambidextrous Consistency Algorithm for Quantified Constraint Satisfaction", "author": ["H. Chen", "V. Dalmau"], "venue": "In Computer Science", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "Decomposing quantified conjunctive (or disjunctive) formulas", "author": ["H. Chen", "V. Dalmau"], "venue": "In LICS,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Gru\u00dfien. Arc consistency and friends", "author": ["H. Chen", "V. Dalmau"], "venue": "J. Log. Comput.,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "On sequent systems and resolution for qbfs", "author": ["U. Egly"], "venue": "In SAT, pages 100\u2013113,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "A solver for QBFs in negation normal", "author": ["U. Egly", "M. Seidl", "S. Woltran"], "venue": "form. Constraints,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "Clause/term resolution and learning in the evaluation of quantified Boolean formulas", "author": ["E. Giunchiglia", "M. Narizzano", "A. Tacchella"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "On propositional QBF expansions and Q-resolution", "author": ["M. Janota", "J. Marques-Silva"], "venue": "In SAT,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "A game-theoretic approach to constraint satisfaction", "author": ["P.G. Kolaitis", "M.Y. Vardi"], "venue": "In Proceedings of the 17th National Conference on AI,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2000}, {"title": "Evaluating and certifying qbfs: A comparison of state-of-the-art tools", "author": ["M. Narizzano", "C. Peschiera", "L. Pulina", "A. Tacchella"], "venue": "AI Commun.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2009}, {"title": "The complexity of propositional proofs", "author": ["N. Segerlind"], "venue": "Bull. Symbolic Logic,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Computing resolution-path dependencies in linear time", "author": ["F. Slivovsky", "S. Szeider"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}], "referenceMentions": [{"referenceID": 2, "context": "The study of propositional proof systems for certifying the unsatisfiability of quantifier-free propositional formulas is supported by multiple motivations [3, 15].", "startOffset": 156, "endOffset": 163}, {"referenceID": 14, "context": "The study of propositional proof systems for certifying the unsatisfiability of quantifier-free propositional formulas is supported by multiple motivations [3, 15].", "startOffset": 156, "endOffset": 163}, {"referenceID": 0, "context": "Finally, algorithms that check for unsatisfiability proofs of various restricted forms have been shown to yield tractable cases of the propositional satisfiability problem and related problems (see for example [1, 2]).", "startOffset": 210, "endOffset": 216}, {"referenceID": 1, "context": "Finally, algorithms that check for unsatisfiability proofs of various restricted forms have been shown to yield tractable cases of the propositional satisfiability problem and related problems (see for example [1, 2]).", "startOffset": 210, "endOffset": 216}, {"referenceID": 13, "context": "space of potential certificate formats for verifying their correctness on particular input instances [14].", "startOffset": 101, "endOffset": 105}, {"referenceID": 3, "context": "Q-resolution [4] is a quantified proof system that can be viewed as a quantified analog of resolution, one of the best-known and most customarily considered propositional proof systems.", "startOffset": 13, "endOffset": 16}, {"referenceID": 10, "context": "In the context of quantified propositional logic, Q-resolution is a heavily studied and basic proof system on which others are built and to which others are routinely compared, as well as a point of departure for the discussion of suitable certificate formats (see [11, 16, 12] for examples).", "startOffset": 265, "endOffset": 277}, {"referenceID": 15, "context": "In the context of quantified propositional logic, Q-resolution is a heavily studied and basic proof system on which others are built and to which others are routinely compared, as well as a point of departure for the discussion of suitable certificate formats (see [11, 16, 12] for examples).", "startOffset": 265, "endOffset": 277}, {"referenceID": 11, "context": "In the context of quantified propositional logic, Q-resolution is a heavily studied and basic proof system on which others are built and to which others are routinely compared, as well as a point of departure for the discussion of suitable certificate formats (see [11, 16, 12] for examples).", "startOffset": 265, "endOffset": 277}, {"referenceID": 9, "context": "As argued by Egly, Seidl, and Woltran [10], this may disrupt the original formula structure, \u201cartificially extend\u201d the scopes of quantifiers, and generate dependencies among variables that were not originally present, unnecessarily increasing the expense of solving; we refer the reader to their article for a contemporary discussion of this issue.", "startOffset": 38, "endOffset": 42}, {"referenceID": 15, "context": "dependencies in a prenex formula [16].", "startOffset": 33, "endOffset": 37}, {"referenceID": 0, "context": "An example used in practice is arc consistency, and understanding when various forms of consistency provide an exact characterization of satisfiability (that is, when consistency is sufficient for satisfiability in addition to being necessary) has been a central theme in the tractability theory of constraint satisfaction [1, 2, 8].", "startOffset": 323, "endOffset": 332}, {"referenceID": 1, "context": "An example used in practice is arc consistency, and understanding when various forms of consistency provide an exact characterization of satisfiability (that is, when consistency is sufficient for satisfiability in addition to being necessary) has been a central theme in the tractability theory of constraint satisfaction [1, 2, 8].", "startOffset": 323, "endOffset": 332}, {"referenceID": 7, "context": "An example used in practice is arc consistency, and understanding when various forms of consistency provide an exact characterization of satisfiability (that is, when consistency is sufficient for satisfiability in addition to being necessary) has been a central theme in the tractability theory of constraint satisfaction [1, 2, 8].", "startOffset": 323, "endOffset": 332}, {"referenceID": 0, "context": "Atserias, Kolaitis, and Vardi [1] showed that checking for k-consistency, an oft-considered consistency notion, can be viewed as detecting the absence of a proof of unsatisfiability having width at most k, in a natural proof system (the width of a proof is the maximum number of variables appearing in a line of the proof); Kolaitis and Vardi [13] also characterized k-consistency algebraically as whether or not Duplicator can win a natural Spoiler-Duplicator pebble game in the spirit of Ehrenfeucht-Fr\u00e4\u0131ss\u00e9 games.", "startOffset": 30, "endOffset": 33}, {"referenceID": 12, "context": "Atserias, Kolaitis, and Vardi [1] showed that checking for k-consistency, an oft-considered consistency notion, can be viewed as detecting the absence of a proof of unsatisfiability having width at most k, in a natural proof system (the width of a proof is the maximum number of variables appearing in a line of the proof); Kolaitis and Vardi [13] also characterized k-consistency algebraically as whether or not Duplicator can win a natural Spoiler-Duplicator pebble game in the spirit of Ehrenfeucht-Fr\u00e4\u0131ss\u00e9 games.", "startOffset": 343, "endOffset": 347}, {"referenceID": 6, "context": "As an application of this algebraic characterization, we prove that (in a sense made precise) any case of the QCSP that lies in the tractable regime of a recent dichotomy theorem [7], is tractable via checking for k-judge-consistency.", "startOffset": 179, "endOffset": 182}, {"referenceID": 5, "context": "We remark that earlier work [6] presents algebraically a notion of consistency for the QCSP, but no corresponding proof system was explicitly presented; the notion of k-judgement consistency can be straightforwardly verified to imply the notion of consistency in this earlier article.", "startOffset": 28, "endOffset": 31}, {"referenceID": 8, "context": "One particular possibility for future work is to compare this proof system to others that are defined on non-prenex formulas, such as those discussed and studied by Egly [9].", "startOffset": 170, "endOffset": 173}, {"referenceID": 4, "context": "2 Let us remark that this dichotomy theorem has since been generalized [5].", "startOffset": 71, "endOffset": 74}, {"referenceID": 3, "context": "We now show that our clause judgement proof system simulates Q-resolution [4], as made precise by the following theorem.", "startOffset": 74, "endOffset": 77}, {"referenceID": 6, "context": "We now show that checking for k-judge-consistency gives a way to decide a set of prenex qc-sentences that is tractable via the dichotomy theorem on so-called prefixed graphs [7].", "startOffset": 174, "endOffset": 177}, {"referenceID": 6, "context": "Let us refer to the width notion defined in that previous work [7] as elimination width.", "startOffset": 63, "endOffset": 66}, {"referenceID": 6, "context": "From the definition of elimination width (defined as width in [7]), it can straightforwardly be verified by induction on the number of variables in \u03c6 that \u03c6 can be transformed to a sentence \u03c6\u2032 having width less than or equal to k, via the three syntactic transformations of Lemma 5.", "startOffset": 62, "endOffset": 65}], "year": 2014, "abstractText": "We consider the quantified constraint satisfaction problem (QCSP) which is to decide, given a structure and a first-order sentence (not assumed here to be in prenex form) built from conjunction and quantification, whether or not the sentence is true on the structure. We present a proof system for certifying the falsity of QCSP instances and develop its basic theory; for instance, we provide an algorithmic interpretation of its behavior. Our proof system places the established Q-resolution proof system in a broader context, and also allows us to derive QCSP tractability results.", "creator": "LaTeX with hyperref package"}}}