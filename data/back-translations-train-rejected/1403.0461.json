{"id": "1403.0461", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Feb-2014", "title": "Timed Soft Concurrent Constraint Programs: An Interleaved and a Parallel Approach", "abstract": "We propose a timed and soft extension of Concurrent Constraint Programming. The time extension is based on the hypothesis of bounded asynchrony: the computation takes a bounded period of time and is measured by a discrete global clock. Action prefixing is then considered as the syntactic marker which distinguishes a time instant from the next one. Supported by soft constraints instead of crisp ones, tell and ask agents are now equipped with a preference (or consistency) threshold which is used to determine their success or suspension. In the paper we provide a language to describe the agents behavior, together with its operational and denotational semantics, for which we also prove the compositionality and correctness properties. After presenting a semantics using maximal parallelism of actions, we also describe a version for their interleaving on a single processor (with maximal parallelism for time elapsing). Coordinating agents that need to take decisions both on preference values and time events may benefit from this language.", "histories": [["v1", "Mon, 24 Feb 2014 12:23:38 GMT  (166kb)", "https://arxiv.org/abs/1403.0461v1", null], ["v2", "Tue, 22 Apr 2014 09:08:34 GMT  (166kb)", "http://arxiv.org/abs/1403.0461v2", null]], "reviews": [], "SUBJECTS": "cs.PL cs.AI", "authors": ["stefano bistarelli", "maurizio gabbrielli", "maria chiara meo", "francesco santini"], "accepted": false, "id": "1403.0461"}, "pdf": {"name": "1403.0461.pdf", "metadata": {"source": "CRF", "title": "Timed Soft Concurrent Constraint Programs: An Interleaved and a Parallel Approach", "authors": ["Stefano Bistarelli", "Maurizio Gabbrielli", "Maria Chiara Meo", "Francesco Santini"], "emails": ["vista@dmi.unipg.it", "gabbri@cs.unibo.it", "cmeo@unich.it", "F.Santini@cwi.nl"], "sections": [{"heading": null, "text": "ar Xiv: 1We propose a time-controlled and soft extension of concurrent constraint programming, based on the hypothesis of bound asynchrony: the calculation takes a limited period of time and is measured by a discrete global clock. Action prefixing is then considered a syntactic marker that distinguishes one moment from the next. Supported by soft rather than crisp constraints, plate and ask agents are now equipped with a preference (or consistency) threshold that is used to determine their success or suspension. In the essay, we provide a language to describe the behavior of the agents, along with their operational and denotational semantics, for which we also demonstrate the compositionality and correctness properties. After we have presented a semantics that uses maximum parallelism of actions, we also describe a version for their interaction on a single processor (with maximum parallelism for transgression of time)."}, {"heading": "1 Introduction", "text": "For example, in many \"real life\" computer applications, a timeframe is set in which activities have a timeframe (which can even be interrupted) and in which the coordination of such activities must be considered. Indeed, these interactions can often be based on quantities that need to be measured or maximized in order to take action that depends on these results: think of generic communication agents who need to make decisions about a (monetary) preference for a common resource, and they both need to be coordinated by time-based and preferences-based decisions. A practical example of such agents corresponds, for example, with software agents who need to negotiate an agreement on a resource."}, {"heading": "2 Background", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Soft Constraints", "text": "A soft compulsion (Bistarelli et al. 1997; Bistarelli 2004) can be regarded as a constraint in which each instantiation of its variables has an associated value of a partially ordered proposition, which can be interpreted as a set of preference values. This formalization is then based on the concept of c-semiring (Bistarelli et al. 1997; Bistarelli 2004), which is referred to in the rest of the world only as semiring. Semiring. a semiring is a tuple < A, 0 > so that: i) a proposition and 0,1 > is an element that A; ii) + is its counterpart, associative and 0 is its unit element; iii) is its associative element; 1 is its element and 0 is its absorbing element."}, {"heading": "2.2 Concurrent Constraint Programming over Soft Constraints", "text": "In fact, it is such that most of them will be able to move into another world, in which they are able to move, in which they move, in which they move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they live, in which they live, in which they, in which they are able to move, in which they are able to move, in which they are able to move, in which they are able to move, in which they are able to move, in which they are able to live, in which they are able to live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they live, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they live, in which they, in which they, in which they, in which they live, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they,"}, {"heading": "2.3 Timed Concurrent Constraint Programming", "text": "A contemporary extension of CCP, called tccp, was introduced in (de Boer et al. 2000). Similar to other contemporary extensions of CCP defined in (Saraswat et al. 1996), tccp is a language for reactive programming designed around the hypothesis of limited asymmetry (as defined in (Saraswat et al. 1996): the calculation takes a limited period of time, rather than being instantaneous.) If you query the memory for information that is not available, a CCP agent will simply stop until the required information has arrived, but you cannot wait indefinitely for an event."}, {"heading": "3 Timed Soft Concurrent Constraint Programming", "text": "In this section, we will introduce the tsccp language that comes from both tccp and sccp. To achieve this, we will extend the syntax of the cc language with the timing construct that we now use to check whether the agents can succeed or not. Definition 1 (tsccp Language) Faced with a soft delimitation system < S, D >, the associated structure C, any half-hearted constraints that are used to check whether the agents are successful or not. Definition 1 (tsccp Language) In the face of a soft delimitation system < S, V >, the associated structure C, soft constraints that we apply, the syntax of the variable x, the syntax of the tsccp language is given by the following grammar: P: = F.A F \u00b7 F (x): = Success."}, {"heading": "5 Programming Idioms and Examples", "text": "We can look at the primitives in definition 1 to derive the soft version of the programming language (de Boer et al. 2000), which are typical for reactive programming; the delay constructs say (c) t - \u2192 threshold A or ask (c) t - but the execution of Agent A after executing Tell (c) or ask (c); t is the number of time units of the delay. Therefore, depending on a constraint in which the transition arrow can also have a number of delay slots, this idiom can be defined by induction: the base case is 0 \u2212 \u2192 A - and the inductive depth is n \u2212 1 - in which we say (1) n \u2212 0 - the rated version of A. The rated version can be defined in an analogous way.Timeout."}, {"heading": "5.1 An Auction Example", "text": "In the second half of the last decade, we are dealing with a number of problems that have come to a head in recent years. (...) In the second half of the last decade, we are dealing with a number of problems. (...) In the second half of the last decade, we are dealing with a number of problems. (...) In the second half of the last decade, we are dealing with a number of problems. (...) In the third half of the last decade, we are dealing with a number of problems. (...) In the second half of the last decade, we are dealing with a number of problems. (...) In the second half of the last decade, we are dealing with a number of problems. (...) The second half of the second half of the second half of the last decade, we are dealing with a number of problems. (...) The third half of the second half of the last decade, we are dealing with the third half. (...) The second half of the last decade, we are dealing with a number of problems."}, {"heading": "6 The Denotational Model", "text": "In this section, we define a denotational characterization of the operational semantics obtained by following the construction in (de Boer et al. 2000) and using time-controlled reactive sequences to represent the tsccp calculations. < - These sequences are similar to those used in the semantics of dataflow languages (Jonsson 1985), imperative languages (Brookes 1993) and (time-controlled) ccp (de Boer and Palamidessi 1991; de Boer et al. 2000).The denotational model associates a series of time-controlled reactive sequences of the form < - / - / - / - / - / - / - / - / - / - Sequences of the form < - / - / - / - / - / - Sequences of the form < / - / - / - / - Sequences of the form < / - / - / - / --- / - Sequences of the form < - / - / - / - / - Sequences of the form / - / --- / - Sequences / --- / - / - Sequences of the form / --- / - / - / --- / - Sequences of the form < / - / - / - / - / --- / - / - / --- / - / - Sequences of the form / --- / --- / --- / - / - / / - Sequences / --- / --- / - / - / / - Sequences- / --- / - / - / - Sequences of the form / --- / / / --- Sequences / / --- / / --- / / / / - Sequences- Sequences- / / / --- Sequences- Sequences- Sequences of the form / / / / / / --- Sequences- / / / --- Sequences- Sequences of the form / / / / / / --- Sequences- / / / --- / / / / / / / --- / / / / / / / / --- Sequences- Sequences- / / /"}, {"heading": "6.1 Correctness", "text": "Observables Ompio (P), which describe the input / output pairs of successful calculations, can be derived from R (P) by considering suitable sequences, namely those sequences that do not perform assumptions on memory. Indeed, note that some reactive sequences do not correspond to real calculations: In other words, for two consecutive steps < \u03c3i, \u03c3 \"i + 1\" i + 1 \"> we must be equal to the assumption on current memory at each step. Definition 4 (Connected Sequences) Let s = < \u03c3i, \u03c3\" i \"i\" i \"i\" i \"i\" i \"i\" < \u03c3lt; \u03c3lt; \u03c3ltance \"i\" i \"i\" i \"i\" i \"i\" i \"if memory exists.\""}, {"heading": "6.2 Compositionality of the Denotational Semantics for tsccp Processes", "text": "In order to prove the compositivity of denotational semantics, we now present a semantics ([F.A]] (e) that is compositional by definition and in which, for technical reasons, we explicitly represent the environment e that is associated with a name for each process identifier. < n) Specifically, we assume that Pvar denotes the set of process identifiers that defines the new environment in such a way that e (p) and e (p) are defined for each process identifier p) p (p) p (p) p) p (p) p (p) p) p) p. \"In the face of a process F.\" A, \"denotational semantics [F\".A): Env \"P\" (S) is defined by the equations in Figure 10, where the least is fixed."}, {"heading": "7 An Interleaving Approach for non-Time-elapsing Actions", "text": "In this section, we will show a different version of the tsccp language: while in tsccp the parallel operator is modeled in terms of maximum parallelism, the same operator can also be treated in terms of interleaving. According to maximum parallelism, any activated agent of the system has the disadvantage that it generally implies the existence of an unbound number of processes. On the other hand, naive interleaving could be semantically problematic, since in principle dynamic process creation does not pass through the time for activated actions that are not planned. For semantics in this section, we will follow an analogous solution assumed in (de Boer et al. 2004) that the parallel operator is interpreted in terms of interleaving, but as usual we must assume parallelism for processes involved."}, {"heading": "9.1 Compositionality of the Denotational Semantics for tsccp-i Processes", "text": "As in Section 6.2 for the tsccp version, we now present a denotational semantics D (F.A) (e), which is compositively defined by definition and in which, for technical reasons, we explicitly represent the environment e (f) = f and e \"(p). Similar to Section 6.2, in which e\" Envi, \"p\" Pvar \"and f\" P \"(Si), we denote e\" s, \"we denote the new environment in such a way that e\" p \"and e\" (p \") for each procedure p.\" 6 = p \"Pvar\" and f \"P\" (Si), we denote denotational semantics, \"we denote e\" f / p \"s.\""}, {"heading": "9.2 Correctness of the Denotational Semantics for tsccp-i Processes", "text": "Regarding the accuracy of the terms presented in Section 6.1 < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <"}, {"heading": "10 Related Work", "text": "In fact, it is such that most people who have decided in recent years in the United States and other countries of the world for a different way than for another, namely for another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another, another,"}, {"heading": "11 Conclusion and Future Work", "text": "Agents modeled with these languages are able to deal with time and preference-dependent decisions, which are often found during complex interactions. An application scenario can be represented by different entities that need to negotiate generic resources or services, such as during an auction process. Mechanisms such as timeout and interrupt can model the waiting for pending conditions or the triggering of some new events.All tsccp and tsccp-i rules have been formally described by a transitional system and then also with a denotational characterization of operational semantics achieved through the use of time-limited reactive sequences.The resulting semantics have been proven to be compositional and correct. Future work may include a first improvement of the presented languages, the inclusion of a fail agent in Definition 1 and Definition 7."}], "references": [{"title": "The ESTEREL synchronous programming language: design, semantics, implementation", "author": ["G. Berry", "G. Gonthier"], "venue": "Sci. Comput. Program. 19, 2, 87\u2013152.", "citeRegEx": "Berry and Gonthier,? 1992", "shortCiteRegEx": "Berry and Gonthier", "year": 1992}, {"title": "Semirings for Soft Constraint Solving and Programming (LNCS)", "author": ["S. Bistarelli"], "venue": "Springer Verlag, London, UK.", "citeRegEx": "Bistarelli,? 2004", "shortCiteRegEx": "Bistarelli", "year": 2004}, {"title": "Timed soft concurrent constraint programs", "author": ["S. Bistarelli", "M. Gabbrielli", "M.C. Meo", "F. Santini"], "venue": "Coordination Models and Languages, 10th International Conference, COORDINATION. Lecture Notes in Computer Science, vol. 5052. Springer, London, UK, 50\u201366.", "citeRegEx": "Bistarelli et al\\.,? 2008", "shortCiteRegEx": "Bistarelli et al\\.", "year": 2008}, {"title": "Semiring-based constraint satisfaction and optimization", "author": ["S. Bistarelli", "U. Montanari", "F. Rossi"], "venue": "J. ACM 44, 2, 201\u2013236.", "citeRegEx": "Bistarelli et al\\.,? 1997", "shortCiteRegEx": "Bistarelli et al\\.", "year": 1997}, {"title": "Soft concurrent constraint programming", "author": ["S. Bistarelli", "U. Montanari", "F. Rossi"], "venue": "ACM Trans. Comput. Logic 7, 3, 563\u2013589.", "citeRegEx": "Bistarelli et al\\.,? 2006", "shortCiteRegEx": "Bistarelli et al\\.", "year": 2006}, {"title": "A nonmonotonic soft concurrent constraint language to model the negotiation process", "author": ["S. Bistarelli", "F. Santini"], "venue": "Fundam. Inform. 111, 3, 257\u2013279.", "citeRegEx": "Bistarelli and Santini,? 2011", "shortCiteRegEx": "Bistarelli and Santini", "year": 2011}, {"title": "Stochastic concurrent constraint programming", "author": ["L. Bortolussi"], "venue": "Electr. Notes Theor. Comput. Sci. 164, 3, 65\u201380.", "citeRegEx": "Bortolussi,? 2006", "shortCiteRegEx": "Bortolussi", "year": 2006}, {"title": "Full abstraction for a shared variable parallel language", "author": ["S.D. Brookes"], "venue": "LICS. IEEE Computer Society, Los Alamitos, CA, USA, 98\u2013109.", "citeRegEx": "Brookes,? 1993", "shortCiteRegEx": "Brookes", "year": 1993}, {"title": "Process calculi for coordination: From Linda to JavaSpaces", "author": ["N. Busi", "R. Gorrieri", "G. Zavattaro"], "venue": "AMAST. Springer-Verlag, London, UK, 198\u2013212.", "citeRegEx": "Busi et al\\.,? 2000", "shortCiteRegEx": "Busi et al\\.", "year": 2000}, {"title": "A timed concurrent constraint language", "author": ["F.S. de Boer", "M. Gabbrielli", "M.C. Meo"], "venue": "Inf. Comput. 161,", "citeRegEx": "Boer et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Boer et al\\.", "year": 2000}, {"title": "A timed Linda language and its denotational semantics", "author": ["F.S. de Boer", "M. Gabbrielli", "M.C. Meo"], "venue": "Fundam. Inf", "citeRegEx": "Boer et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Boer et al\\.", "year": 2004}, {"title": "A fully abstract model for concurrent constraint programming", "author": ["F.S. de Boer", "C. Palamidessi"], "venue": "Proceedings of CAAP \u201991", "citeRegEx": "Boer and Palamidessi,? \\Q1991\\E", "shortCiteRegEx": "Boer and Palamidessi", "year": 1991}, {"title": "A language-based approach to autonomic computing", "author": ["R. De Nicola", "G.L. Ferrari", "M. Loreti", "R. Pugliese"], "venue": "FMCO, B. Beckert, F. Damiani, F. S. de Boer, and M. M. Bonsangue, Eds. Lecture Notes in Computer Science, vol. 7542. Springer, 25\u201348.", "citeRegEx": "Nicola et al\\.,? 2011", "shortCiteRegEx": "Nicola et al\\.", "year": 2011}, {"title": "KLAIM: A Kernel Language for Agents Interaction and Mobility", "author": ["R. de Nicola", "G.L. Ferrari", "R. Pugliese"], "venue": "IEEE Transactions on Software Engineering", "citeRegEx": "Nicola et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Nicola et al\\.", "year": 1998}, {"title": "Probabilistic concurrent constraint programming: Towards a fully abstract model", "author": ["Di Pierro", "H.A. andWiklicky"], "venue": "InMFCS \u201998: Proceedings of Mathematical Foundations of Computer Science. Springer-Verlag, London, UK, 446\u2013455.", "citeRegEx": "Pierro and andWiklicky,? 1998", "shortCiteRegEx": "Pierro and andWiklicky", "year": 1998}, {"title": "Temporary and permanent buyout prices in online auctions", "author": ["J. Gallien", "S. Gupta"], "venue": "Management Science 53, 5, 814\u2013833.", "citeRegEx": "Gallien and Gupta,? 2007", "shortCiteRegEx": "Gallien and Gupta", "year": 2007}, {"title": "The synchronous data-flow programming language LUSTRE", "author": ["N. Halbwachs", "P. Caspi", "P. Raymond", "D. Pilaud"], "venue": "Proceedings of the IEEE 79, 9, 1305\u20131320.", "citeRegEx": "Halbwachs et al\\.,? 1991", "shortCiteRegEx": "Halbwachs et al\\.", "year": 1991}, {"title": "Statecharts: A visual formalism for complex systems", "author": ["D. Harel"], "venue": "Sci. Comput. Program. 8, 3, 231\u2013274.", "citeRegEx": "Harel,? 1987", "shortCiteRegEx": "Harel", "year": 1987}, {"title": "A model and proof system for asynchronous networks", "author": ["B. Jonsson"], "venue": "PODC \u201985: Proceedings ACM symposium on Principles of distributed computing. ACM Press, New York, USA, 49\u201358.", "citeRegEx": "Jonsson,? 1985", "shortCiteRegEx": "Jonsson", "year": 1985}, {"title": "Programming real-time applications with signal", "author": ["P. le Guernic", "M. le Borgne", "T. Gautier", "C. le Maire"], "venue": "Proceedings of the IEEE 79,", "citeRegEx": "Guernic et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Guernic et al\\.", "year": 1991}, {"title": "Temporal concurrent constraint programming: Applications and behavior", "author": ["M. Nielsen", "F.D. Valencia"], "venue": "Formal and Natural Computing - Essays Dedicated to Grzegorz Rozenberg. Springer-Verlag, London, UK, 298\u2013324.", "citeRegEx": "Nielsen and Valencia,? 2002", "shortCiteRegEx": "Nielsen and Valencia", "year": 2002}, {"title": "Universal timed concurrent constraint programming", "author": ["C. Olarte", "C. Palamidessi", "F. Valencia"], "venue": "Logic Programming, 23rd International Conference, ICLP. LNCS, vol. 4670. Springer, London, UK, 464\u2013465.", "citeRegEx": "Olarte et al\\.,? 2007", "shortCiteRegEx": "Olarte et al\\.", "year": 2007}, {"title": "A temporal concurrent constraint programming calculus", "author": ["C. Palamidessi", "F.D. Valencia"], "venue": "CP \u201901: Proceedings of Principles and Practice of Constraint Programming. Springer-Verlag, London, UK, 302\u2013316.", "citeRegEx": "Palamidessi and Valencia,? 2001", "shortCiteRegEx": "Palamidessi and Valencia", "year": 2001}, {"title": "Concurrent constraint programming languages", "author": ["V. Saraswat"], "venue": "PhD thesis.", "citeRegEx": "Saraswat,? 1989", "shortCiteRegEx": "Saraswat", "year": 1989}, {"title": "Timed default concurrent constraint programming", "author": ["V. Saraswat", "R. Jagadeesan", "V. Gupta"], "venue": "J. Symb. Comput. 22, 5-6, 475\u2013520.", "citeRegEx": "Saraswat et al\\.,? 1996", "shortCiteRegEx": "Saraswat et al\\.", "year": 1996}, {"title": "Concurrent constraint programming", "author": ["V. Saraswat", "M. Rinard"], "venue": "POPL \u201990: Proceedings of Principles of programming languages. ACM Press, New York, USA, 232\u2013245.", "citeRegEx": "Saraswat and Rinard,? 1990", "shortCiteRegEx": "Saraswat and Rinard", "year": 1990}, {"title": "Foundations of timed concurrent constraint programming", "author": ["V.A. Saraswat", "R. Jagadeesan", "V. Gupta"], "venue": "Proceedings, Ninth Annual IEEE Symposium on Logic in Computer Science, LICS. IEEE Computer Society, Los Alamitos, CA, USA, 71\u201380.", "citeRegEx": "Saraswat et al\\.,? 1994", "shortCiteRegEx": "Saraswat et al\\.", "year": 1994}, {"title": "Timed concurrent constraint programming: Decidability results and their application to LTL", "author": ["F.D. Valencia"], "venue": "ICLP. LNCS, vol. 2916. Springer, London, UK, 422\u2013 437.", "citeRegEx": "Valencia,? 2003", "shortCiteRegEx": "Valencia", "year": 2003}], "referenceMentions": [{"referenceID": 23, "context": "The Timed Concurrent Constraint Programming (tccp), a timed extension of the pure formalism of Concurrent Constraint Programming (ccp) (Saraswat 1989), has been introduced in (de Boer et al.", "startOffset": 135, "endOffset": 150}, {"referenceID": 24, "context": "The language is based on the hypothesis of bounded asynchrony (Saraswat et al. 1996): computation takes a bounded period of time rather than being instantaneous as in the concurrent synchronous languages ESTEREL (Berry and Gonthier 1992), LUSTRE (Halbwachs et al.", "startOffset": 62, "endOffset": 84}, {"referenceID": 0, "context": "1996): computation takes a bounded period of time rather than being instantaneous as in the concurrent synchronous languages ESTEREL (Berry and Gonthier 1992), LUSTRE (Halbwachs et al.", "startOffset": 133, "endOffset": 158}, {"referenceID": 16, "context": "1996): computation takes a bounded period of time rather than being instantaneous as in the concurrent synchronous languages ESTEREL (Berry and Gonthier 1992), LUSTRE (Halbwachs et al. 1991), SIGNAL (le Guernic et al.", "startOffset": 167, "endOffset": 190}, {"referenceID": 17, "context": "1991) and Statecharts (Harel 1987).", "startOffset": 22, "endOffset": 34}, {"referenceID": 1, "context": "Soft constraints (Bistarelli 2004; Bistarelli et al. 1997) extend classical constraints to represent multiple consistency levels, and thus provide a way to express preferences, fuzziness, and uncertainty.", "startOffset": 17, "endOffset": 58}, {"referenceID": 3, "context": "Soft constraints (Bistarelli 2004; Bistarelli et al. 1997) extend classical constraints to represent multiple consistency levels, and thus provide a way to express preferences, fuzziness, and uncertainty.", "startOffset": 17, "endOffset": 58}, {"referenceID": 4, "context": "The ccp framework has been extended to work with soft constraints (Bistarelli et al. 2006), and the resulting framework is named Soft Concurrent Constraint Programming (sccp).", "startOffset": 66, "endOffset": 90}, {"referenceID": 2, "context": "2004), is different from that one of (de Boer et al. 2000; Bistarelli et al. 2008) (where maximal parallelism was assumed for any kind of action), and it is also different from the one considered in (Busi et al.", "startOffset": 37, "endOffset": 82}, {"referenceID": 8, "context": "2008) (where maximal parallelism was assumed for any kind of action), and it is also different from the one considered in (Busi et al. 2000), where time does not elapse for timeout constructs.", "startOffset": 122, "endOffset": 140}, {"referenceID": 2, "context": "The paper extends the results in (Bistarelli et al. 2008) by providing new semantics that allows maximal parallelism for time elapsing and an interleaving model for basic computation steps (see Section 7).", "startOffset": 33, "endOffset": 57}, {"referenceID": 23, "context": "According to the maximal parallelism policy (applied, for example, in the original works as (Saraswat 1989) and (Saraswat et al.", "startOffset": 92, "endOffset": 107}, {"referenceID": 26, "context": "According to the maximal parallelism policy (applied, for example, in the original works as (Saraswat 1989) and (Saraswat et al. 1994)), at each moment every enabled agent of the system is activated, while in the interleaving paradigm only one of the enabled agents is executed instead.", "startOffset": 112, "endOffset": 134}, {"referenceID": 3, "context": "A soft constraint (Bistarelli et al. 1997; Bistarelli 2004) may be seen as a constraint where each instantiation of its variables has an associated value from a partially ordered set which can be interpreted as a set of preference values.", "startOffset": 18, "endOffset": 59}, {"referenceID": 1, "context": "A soft constraint (Bistarelli et al. 1997; Bistarelli 2004) may be seen as a constraint where each instantiation of its variables has an associated value from a partially ordered set which can be interpreted as a set of preference values.", "startOffset": 18, "endOffset": 59}, {"referenceID": 3, "context": "This is why this formalization is based on the concept of c-semiring (Bistarelli et al. 1997; Bistarelli 2004), called just semiring in the rest of the paper.", "startOffset": 69, "endOffset": 110}, {"referenceID": 1, "context": "This is why this formalization is based on the concept of c-semiring (Bistarelli et al. 1997; Bistarelli 2004), called just semiring in the rest of the paper.", "startOffset": 69, "endOffset": 110}, {"referenceID": 3, "context": "Then, it is possible to prove that (see (Bistarelli et al. 1997)): i) \u2264S is a partial order; ii) + and \u00d7 are monotone on \u2264S ; iii) 0 is its minimum and 1 its maximum; iv) \u3008A,\u2264S\u3009 is a complete lattice (a complete lattice is a partially ordered set in which all subsets have both a supremum and an infimum) and, for all a, b \u2208 A, a + b = lub(a, b) (where lub is the least upper bound).", "startOffset": 40, "endOffset": 64}, {"referenceID": 3, "context": "Given the set C, the combination function \u2297 : C\u00d7C \u2192 C is defined as (c1\u2297c2)\u03b7 = c1\u03b7\u00d7c2\u03b7 (see also (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006)).", "startOffset": 97, "endOffset": 162}, {"referenceID": 1, "context": "Given the set C, the combination function \u2297 : C\u00d7C \u2192 C is defined as (c1\u2297c2)\u03b7 = c1\u03b7\u00d7c2\u03b7 (see also (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006)).", "startOffset": 97, "endOffset": 162}, {"referenceID": 4, "context": "Given the set C, the combination function \u2297 : C\u00d7C \u2192 C is defined as (c1\u2297c2)\u03b7 = c1\u03b7\u00d7c2\u03b7 (see also (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006)).", "startOffset": 97, "endOffset": 162}, {"referenceID": 3, "context": "Given a constraint c \u2208 C and a variable v \u2208 V , the projection (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006) of c over V \u2212 {v}, written c \u21d3(V\u2212{v}) is the constraint c s.", "startOffset": 63, "endOffset": 128}, {"referenceID": 1, "context": "Given a constraint c \u2208 C and a variable v \u2208 V , the projection (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006) of c over V \u2212 {v}, written c \u21d3(V\u2212{v}) is the constraint c s.", "startOffset": 63, "endOffset": 128}, {"referenceID": 4, "context": "Given a constraint c \u2208 C and a variable v \u2208 V , the projection (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006) of c over V \u2212 {v}, written c \u21d3(V\u2212{v}) is the constraint c s.", "startOffset": 63, "endOffset": 128}, {"referenceID": 1, "context": "We define also a function \u0101 (Bistarelli 2004; Bistarelli et al. 2006) as the function that returns the semiring value a for all assignments \u03b7, that is, \u0101\u03b7 = a.", "startOffset": 28, "endOffset": 69}, {"referenceID": 4, "context": "We define also a function \u0101 (Bistarelli 2004; Bistarelli et al. 2006) as the function that returns the semiring value a for all assignments \u03b7, that is, \u0101\u03b7 = a.", "startOffset": 28, "endOffset": 69}, {"referenceID": 1, "context": "A SCSP (Bistarelli 2004) is defined as P = \u3008V ,D ,C , S \u3009, where C is the set of constraints defined over variables in V (each with domain D), and whose preference is determined by semiring S .", "startOffset": 7, "endOffset": 24}, {"referenceID": 1, "context": "The best level of consistency notion is defined as blevel(P) = Sol(P) \u21d3\u2205, where Sol(P) = \u2297 C (Bistarelli 2004).", "startOffset": 93, "endOffset": 110}, {"referenceID": 1, "context": "A problem P is \u03b1-consistent if blevel(P) = \u03b1 (Bistarelli 2004).", "startOffset": 45, "endOffset": 62}, {"referenceID": 23, "context": "The basic idea underlying ccp (Saraswat 1989) is that computation progresses via monotonic accumulation of information in a constraint global store.", "startOffset": 30, "endOffset": 45}, {"referenceID": 25, "context": "The notion of constraint system has been formalized in (Saraswat and Rinard 1990) following Scott\u2019s treatment of information systems.", "startOffset": 55, "endOffset": 81}, {"referenceID": 3, "context": "Soft constraints over a semiring S = \u3008A,+,\u00d7,0,1\u3009 and an ordered set of variables V (over a domain D) have been showed to form a constraint system \u201c\u00e0 la Saraswat\u201d, thus leading to the definition of Soft Concurrent Constraint Programmingg (sccp) (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006).", "startOffset": 244, "endOffset": 309}, {"referenceID": 1, "context": "Soft constraints over a semiring S = \u3008A,+,\u00d7,0,1\u3009 and an ordered set of variables V (over a domain D) have been showed to form a constraint system \u201c\u00e0 la Saraswat\u201d, thus leading to the definition of Soft Concurrent Constraint Programmingg (sccp) (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006).", "startOffset": 244, "endOffset": 309}, {"referenceID": 4, "context": "Soft constraints over a semiring S = \u3008A,+,\u00d7,0,1\u3009 and an ordered set of variables V (over a domain D) have been showed to form a constraint system \u201c\u00e0 la Saraswat\u201d, thus leading to the definition of Soft Concurrent Constraint Programmingg (sccp) (Bistarelli et al. 1997; Bistarelli 2004; Bistarelli et al. 2006).", "startOffset": 244, "endOffset": 309}, {"referenceID": 1, "context": "for each C \u2208 \u2118(C) and c \u2208 C, we have C \u22a2 c \u21d4 \u2297 C \u2291 c (see also (Bistarelli 2004; Bistarelli et al. 2006)).", "startOffset": 63, "endOffset": 104}, {"referenceID": 4, "context": "for each C \u2208 \u2118(C) and c \u2208 C, we have C \u22a2 c \u21d4 \u2297 C \u2291 c (see also (Bistarelli 2004; Bistarelli et al. 2006)).", "startOffset": 63, "endOffset": 104}, {"referenceID": 23, "context": "It is also important to notice that in (Saraswat 1989) it is claimed that a constraint system is a complete algebraic lattice.", "startOffset": 39, "endOffset": 54}, {"referenceID": 4, "context": "In the sccp framework, algebraicity is not required (Bistarelli et al. 2006) instead, since the algebraic nature of the structure C strictly depends on the properties of the semiring.", "startOffset": 52, "endOffset": 76}, {"referenceID": 1, "context": "For each x \u2208 V , the hiding function (Bistarelli 2004; Bistarelli et al. 2006) is the function (\u2203xc)\u03b7 = \u2211 di\u2208D c\u03b7[x := di ].", "startOffset": 37, "endOffset": 78}, {"referenceID": 4, "context": "For each x \u2208 V , the hiding function (Bistarelli 2004; Bistarelli et al. 2006) is the function (\u2203xc)\u03b7 = \u2211 di\u2208D c\u03b7[x := di ].", "startOffset": 37, "endOffset": 78}, {"referenceID": 4, "context": "To make the hiding operator computationally tractable, it is required that the number of domain elements in D , having semiring values different from 0, is finite (Bistarelli et al. 2006).", "startOffset": 163, "endOffset": 187}, {"referenceID": 4, "context": "In fact, for any constraint c and any variable x \u2286 V , c \u21d3V\u2212x= \u2203xc (Bistarelli et al. 2006).", "startOffset": 67, "endOffset": 91}, {"referenceID": 1, "context": ", dxy\u03b7[x := a, y := b] = 1 if a = b, and dxy\u03b7[x := a, y := b] = 0 if a 6= b (Bistarelli 2004; Bistarelli et al. 2006).", "startOffset": 76, "endOffset": 117}, {"referenceID": 4, "context": ", dxy\u03b7[x := a, y := b] = 1 if a = b, and dxy\u03b7[x := a, y := b] = 0 if a 6= b (Bistarelli 2004; Bistarelli et al. 2006).", "startOffset": 76, "endOffset": 117}, {"referenceID": 4, "context": "Theorem 1 (cylindric constraint system (Bistarelli et al. 2006)) Consider a semiring S = \u3008A,+,\u00d7,0,1\u3009, a domain of the variables D , an ordered set of variables V , and the corresponding structure C.", "startOffset": 39, "endOffset": 63}, {"referenceID": 24, "context": "Similarly to other existing timed extensions of ccp defined in (Saraswat et al. 1996), tccp is a language for reactive programming designed around the hypothesis of bounded asynchrony (as introduced in (Saraswat et al.", "startOffset": 63, "endOffset": 85}, {"referenceID": 24, "context": "1996), tccp is a language for reactive programming designed around the hypothesis of bounded asynchrony (as introduced in (Saraswat et al. 1996): computation takes a bounded period of time rather than being instantaneous).", "startOffset": 122, "endOffset": 144}, {"referenceID": 24, "context": "This basic construct allows to derive such timing mechanisms as time-out and preemption (de Boer et al. 2000; Saraswat et al. 1996).", "startOffset": 88, "endOffset": 131}, {"referenceID": 1, "context": "The valued-tell rule checks for the a-consistency of the Soft Constraint Satisfaction Problem (Bistarelli 2004) (SCSP) defined by the store \u03c3 \u2297 c.", "startOffset": 94, "endOffset": 111}, {"referenceID": 1, "context": "For the following examples on the new programming idioms, we consider the Weighted semiring \u3008R \u222a {+\u221e},min,+,+\u221e, 0\u3009 (Bistarelli 2004; Bistarelli et al. 1997) and the (weighted) soft constraints in Figure 4.", "startOffset": 115, "endOffset": 156}, {"referenceID": 3, "context": "For the following examples on the new programming idioms, we consider the Weighted semiring \u3008R \u222a {+\u221e},min,+,+\u221e, 0\u3009 (Bistarelli 2004; Bistarelli et al. 1997) and the (weighted) soft constraints in Figure 4.", "startOffset": 115, "endOffset": 156}, {"referenceID": 15, "context": "In the following of the description we consider a buyout auction (Gallien and Gupta 2007), where the auctioneer improves the service and the related consumed resources (or, alternatively, its money price), bid after bid.", "startOffset": 65, "endOffset": 89}, {"referenceID": 18, "context": "These sequences are similar to those used in the semantics of dataflow languages (Jonsson 1985), imperative languages (Brookes 1993) and (timed) ccp (de Boer and Palamidessi 1991; de Boer et al.", "startOffset": 81, "endOffset": 95}, {"referenceID": 7, "context": "These sequences are similar to those used in the semantics of dataflow languages (Jonsson 1985), imperative languages (Brookes 1993) and (timed) ccp (de Boer and Palamidessi 1991; de Boer et al.", "startOffset": 118, "endOffset": 132}, {"referenceID": 8, "context": "2004) and differently from the approach in (Busi et al. 2000), time continues to elapse (via \u03c4 -actions) also for the time-out process (see also the rules Q5 and Q6 of the parallel operator).", "startOffset": 43, "endOffset": 61}, {"referenceID": 1, "context": "We consider the three soft constraints shown in Figure 4 and the Weighted semiring \u3008R \u222a {+\u221e},min,+,+\u221e, 0\u3009 (Bistarelli 2004; Bistarelli et al. 1997).", "startOffset": 106, "endOffset": 147}, {"referenceID": 3, "context": "We consider the three soft constraints shown in Figure 4 and the Weighted semiring \u3008R \u222a {+\u221e},min,+,+\u221e, 0\u3009 (Bistarelli 2004; Bistarelli et al. 1997).", "startOffset": 106, "endOffset": 147}, {"referenceID": 24, "context": "By comparing this work with other timed languages using crisp constraints (instead of soft ones as in this paper) as (Saraswat et al. 1996; Saraswat et al. 1994), there are three main differences we can find out.", "startOffset": 117, "endOffset": 161}, {"referenceID": 26, "context": "By comparing this work with other timed languages using crisp constraints (instead of soft ones as in this paper) as (Saraswat et al. 1996; Saraswat et al. 1994), there are three main differences we can find out.", "startOffset": 117, "endOffset": 161}, {"referenceID": 26, "context": "First, the computational model of both the languages tcc (Saraswat et al. 1994) and default tcc (Saraswat et al.", "startOffset": 57, "endOffset": 79}, {"referenceID": 24, "context": "1994) and default tcc (Saraswat et al. 1996) is inspired by that one of synchronous languages: each time interval is identified with the time needed for a ccp process to terminate a computation.", "startOffset": 22, "endOffset": 44}, {"referenceID": 26, "context": "In (Saraswat et al. 1994) and (Saraswat et al.", "startOffset": 3, "endOffset": 25}, {"referenceID": 24, "context": "1994) and (Saraswat et al. 1996), the programmer has to explicitly transfer the (positive) information from a time instant to the next one, by using special primitives that allow one to control the temporal evolution of the system.", "startOffset": 10, "endOffset": 32}, {"referenceID": 26, "context": "A third relevant difference is in (Saraswat et al. 1994) and (Saraswat et al.", "startOffset": 34, "endOffset": 56}, {"referenceID": 24, "context": "1994) and (Saraswat et al. 1996) the authors present deterministic languages while our language allows for nondeterminism.", "startOffset": 10, "endOffset": 32}, {"referenceID": 26, "context": "These three differences also hold between (Saraswat et al. 1994) or (Saraswat et al.", "startOffset": 42, "endOffset": 64}, {"referenceID": 24, "context": "1994) or (Saraswat et al. 1996), and the original crisp version of the language, i.", "startOffset": 9, "endOffset": 31}, {"referenceID": 21, "context": "In (Olarte et al. 2007), the authors generalize the model in (Saraswat et al.", "startOffset": 3, "endOffset": 23}, {"referenceID": 26, "context": "2007), the authors generalize the model in (Saraswat et al. 1994) in order to extend it with temporary parametric ask operations.", "startOffset": 43, "endOffset": 65}, {"referenceID": 21, "context": "However, also the agents in (Olarte et al. 2007) show a deterministic behavior, instead of our not-deterministic choice.", "startOffset": 28, "endOffset": 48}, {"referenceID": 20, "context": "Other timed extension of concurrent constraint programming have been proposed in (Nielsen and Valencia 2002; Palamidessi and Valencia 2001), however these languages, differently from tsccp, do not take into account quantitative aspects; therefore, this achievement represents a very important expressivity improvement with respect to related works.", "startOffset": 81, "endOffset": 139}, {"referenceID": 22, "context": "Other timed extension of concurrent constraint programming have been proposed in (Nielsen and Valencia 2002; Palamidessi and Valencia 2001), however these languages, differently from tsccp, do not take into account quantitative aspects; therefore, this achievement represents a very important expressivity improvement with respect to related works.", "startOffset": 81, "endOffset": 139}, {"referenceID": 6, "context": "More recently, stochastic ccp has been introduced in (Bortolussi 2006) to model biological systems.", "startOffset": 53, "endOffset": 70}, {"referenceID": 27, "context": "At last, we would like to consider other time management strategies (as the one proposed in (Valencia 2003)), and to study how timing and non-monotonic constructs (Bistarelli and Santini 2011) can be integrated together.", "startOffset": 92, "endOffset": 107}, {"referenceID": 5, "context": "At last, we would like to consider other time management strategies (as the one proposed in (Valencia 2003)), and to study how timing and non-monotonic constructs (Bistarelli and Santini 2011) can be integrated together.", "startOffset": 163, "endOffset": 192}], "year": 2014, "abstractText": "We propose a timed and soft extension of Concurrent Constraint Programming. The time extension is based on the hypothesis of bounded asynchrony: the computation takes a bounded period of time and is measured by a discrete global clock. Action prefixing is then considered as the syntactic marker which distinguishes a time instant from the next one. Supported by soft constraints instead of crisp ones, tell and ask agents are now equipped with a preference (or consistency) threshold which is used to determine their success or suspension. In the paper we provide a language to describe the agents behavior, together with its operational and denotational semantics, for which we also prove the compositionality and correctness properties. After presenting a semantics using maximal parallelism of actions, we also describe a version for their interleaving on a single processor (with maximal parallelism for time elapsing). Coordinating agents that need to take decisions both on preference values and time events may benefit from this language. To appear in Theory and Practice of Logic Programming (TPLP).", "creator": "LaTeX with hyperref package"}}}