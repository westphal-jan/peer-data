{"id": "1403.1521", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Mar-2014", "title": "Approximation Models of Combat in StarCraft 2", "abstract": "Real-time strategy (RTS) games make heavy use of artificial intelligence (AI), especially in the design of computerized opponents. Because of the computational complexity involved in managing all aspects of these games, many AI opponents are designed to optimize only a few areas of playing style. In games like StarCraft 2, a very popular and recently released RTS, most AI strategies revolve around economic and building efficiency: AI opponents try to gather and spend all resources as quickly and effectively as possible while ensuring that no units are idle. The aim of this work was to help address the need for AI combat strategies that are not computationally intensive. Our goal was to produce a computationally efficient model that is accurate at predicting the results of complex battles between diverse armies, including which army will win and how many units will remain. Our results suggest it may be possible to develop a relatively simple approximation model of combat that can accurately predict many battles that do not involve micromanagement. Future designs of AI opponents may be able to incorporate such an approximation model into their decision and planning systems to provide a challenge that is strategically balanced across all aspects of play.", "histories": [["v1", "Thu, 6 Mar 2014 18:26:49 GMT  (488kb)", "http://arxiv.org/abs/1403.1521v1", "13 pages, 2 figures"]], "COMMENTS": "13 pages, 2 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ian helmke", "daniel kreymer", "karl wiegand"], "accepted": false, "id": "1403.1521"}, "pdf": {"name": "1403.1521.pdf", "metadata": {"source": "CRF", "title": "Approximation Models of Combat in StarCraft 2", "authors": ["Ian Helmke", "Daniel Kreymer"], "emails": ["@gmail.com"], "sections": [{"heading": "Background and Motivation", "text": "StarCraft 2 is a real-time computer game developed by Blizzard Entertainment. It is a sequel to the original game and, like its predecessor, has proved very popular. In July 2010, StarCraft 2 was launched as one of the fastest growing computer games of all time."}, {"heading": "Prior Work", "text": "StarCraft 2 includes a standard kit with multiple difficulty-level settings; however, these KI are fairly simplistic and do not use advanced micro-management techniques or sophisticated decision-making; they are primarily designed to help new players learn how to play the game. The highest levels of StarCraft 2 kit actually cheat. The \"insane\" KI, for example, features special workers who emit 40% more minerals per trip than any other kit-worker. Some attempts at a StarCraft 2 kit build on the frame provided by the standard StarCraft 2 kit-I, but are still cheated. The Green Tea AI is one such attempt: It implements more sophisticated tactics than the Blizzard StarCraft kit-I kit, but cheats by revealing the card so that it receives perfect information while the player is still subject to the fog of war-card. In case of higher difficulty, this AI also collects resources faster than the Blizzard StarCraft kit-I kit-I kit-I-similar to the Blizzard Blizzzzzzzzzzard kit-I-I-I-I-I-KI-KI-should \"insinuate,\""}, {"heading": "Approach", "text": "Our hypothesis was that relatively little information about the composition of an army is needed to model the battle accurately. To test our hypothesis, we developed and implemented several models that could allow an AI opponent to determine whether a mission will end positively at the lowest possible computational cost. We quantified the accuracy of each model compared to in-game test results because the size and composition of the armies involved varied."}, {"heading": "Approximating Battles", "text": "We designed and developed several different approximation models for combat. Each model builds additively on the previous model. In addition, all our approximation models assume: 1. Two opposing armies; 2. Each army starts just out of sight, on the edge of the war fog; 3. Each army is grouped in a relatively narrow, random cluster; 4. Each army receives an \"attack and movement command\" past the opposing army relatively simultaneously; and 5. No army is microromanage.While many battles in StarCraft 2, especially at the professional level, involve intensive micromanagement, many successful players also use macro management strategies. We decided to start with approximation models that mimic the behavior of non-micromanagement battles, in the hope that later micromanagement strategies could be added."}, {"heading": "APX1", "text": "Our basic approximation model simulates the effects of one second of \"rounds\" by selecting randomly selected units from each army and applying damage until there is only one army left. In practical terms, this is similar to the concept of 3 simultaneous \"Perfect Focus Fire\" with randomly selected targets. The algorithm for APX1 is as follows: getAPX1 (army1, army2): while (getHealth (army1) > 0 and getHealth (army2) > 0): dam1 = getDPS (army1) dam2 = getDPS (army2) while (dam1 > 0): unit = getRandomUnit (army2) dam1 - = unit.health probabilisticallyKillUnit (unit, dam2) return (army1, myy2) while (dam2 > 0): unit = getRandomUnit (army2) dam1 - = unit.health probabilisticallyKillUnit (unit, dam2) return (armym2)"}, {"heading": "APX2", "text": "The algorithm for APX2 is as follows: getAPX2 (army1, army2): round1 = True while (getHealth (army1) > 0 and getHealth (army2) > 0): if round1: dam1 = getRangedDPS (army1) dam2 = getRangedDPS (army2) round1 = Falseelse: dam1 = getDPS (army1) dam2 = getDPS (army2) while (dam1 > 0): RandkillomUnit (army2) while (dam2 > 0): killRandomUnit (army1) return (army1, army2)"}, {"heading": "APX3", "text": "Our third approximation model adds the concept of bonus damage: Some units in StarCraft 2 deal more damage to units with certain attributes. We decided to model the bonus damage as a single pool based on the percentage of units in the opposing army with the vulnerable attribute. So, if 50% of units in the opposing army have the Light attribute, a group of hellions that inflict bonus damage on units 4 out of 13 with the Light attribute would add 50% of their potential bonus damage to their army's DPS calculation if 50% of units in the opposing army have the Light attribute. APX3's algorithm is as follows: getAPX3 (army1, army2): Runde1 = True while (getHealth (army1) > 0 and getHealth (army2) > 0): if round1: Dame1 = getRangedDPS (army1) + getRangedDmymyDPS (army1) + DymyDymyarmDPS (mymymy1) (DymyandD2) (Dym1) = 1"}, {"heading": "APX4", "text": "Our fourth approximation model prioritizes melee units over ranged units, and the AI in StarCraft 2 targets the nearest enemy unit when a particular unit is not selected, which in practice means melee units are usually attacked first, the only change to this model being that instead of killing a random unit, we kill a random melee unit until none exists, and then continue to kill random units. APX4 \"s algorithm is getAPX4 (army1, army2): runde1 = True while (getHealth (army1) > 0 and getHealth (army2) > 0): if Runde1: dam1 = getRangedDPS (army1) + getRangedBonmyDPS (army1) + getRangedDPS (army2) = Falseelse: damardamardamardamarmy2 = getRangedDPS (ar2)"}, {"heading": "Approximating Units", "text": "Since battles in StarCraft involve 2 units, each approximate model of combat must also approximate units and the behavior of the units. To this end, we designed a basic representation of a unit with the following attributes: 1. Health: An integer representing the initial sum of health for that unit plus, if applicable, the initial sum of shields (e.g. for Zealots, this was 100 Health + 50 Shields = 150 Health); 2. Health: A decimal representing the amount of damage done per second by that unit; for units with an attack surface (e.g. hellions), the DPS was equal to the base number multiplied by the maximum potential area of action (e.g. for hellions, this was 3.2 DPS * 5 range = 16 DPS). Our reasoning was that in a sufficiently large participation, a unit with an attack surface (e.g. hellions) can be multiplied by one attack surface. 3. Range: An olean value indicating whether the attack unit is an attack unit or a health (the attack unit is a 4)."}, {"heading": "Method", "text": "We built 12 custom StarCraft 2 maps, each representing a match between two opposing armies of different races. For each game, we conducted 10 battles within the StarCraft 2 engine and recorded the results, including how often each army won and how many units were left for each army when it won. For each game, the remaining army compositions were averaged over the 10 battles to achieve an overall result. These experimental results were compared with the results of our simulation machine, which ran 1000 rounds of each approach model. Our 12 games were organized into 4 rounds of increasing army complexity: 6 of 13 rounds 1. PvT: 8 Zealots and 2 Stalkers vs. 12 Marines vs. 12 Marines and 4 Marauders 2. TvZ: 12 Marines and 4 Marauders vs. 24 Zerglings and 4 cockroaches 3. PvZ: 8 Zealots and 2 Stalkers vs. 24 Stalines and 4 Stalines, Stalines vs. 4 Stalines, Stalines vs. 4 Marines, Stalerglies vs. 4 Slies vs. 12 and Ultrivets 2 and 4: 4."}, {"heading": "Results", "text": "In fact, it is so that most of them will be able to show themselves that they are able to achieve their goals, and that they are able to achieve their goals. (...) Most of them are able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are able to achieve their goals. (...) Most of them are not able to achieve their goals. (...) Most of them are not able to achieve their goals. (...)"}, {"heading": "Discussion", "text": "It is indeed the case that we will be able to manoeuvre ourselves into a situation in which we will be able to survive, we will be able to survive ourselves."}, {"heading": "Conclusion", "text": "We developed several different combat models for StarCraft 2 that approximate engagement between two opposing armies. We constructed these models iteratively and evaluated the impact on the accuracy of simulation of various aspects of engagement. Our models focused primarily on the interaction between armies regardless of map characteristics, micromanagement and unit positions. These approximation models have clear applications for each StarCraft 2 AI. Most StarCraft 2 AI systems have some kind of combat model to determine whether or not it makes sense to deploy an opposing force. Our models can help in this decision-making process by providing an estimated probability of successful engagement as well as an average score of units. In addition, for many AI systems it is useful to see what impact the construction of a particular group of units might have on a future combat scenario. Again, our models provide benefits at a computationally efficient rate.11 out of 13"}, {"heading": "Limitations and Future Work", "text": "These combat models provide some insight into the behavior of the units in general, but they are limited in that the results we produce reflect a random target selection, and the results of the models are based only on the composition of the Army, not the position of the units. Our combat models also do not include spells, which can be extremely important in StarCraft 2. The most commonly used spells in StarCraft 2 are effect abilities that are able to damage or protect a large number of units, and \"zoning\" abilities that make it more difficult for an opposing army to withdraw or engage enemy melee units. There is also no idea of upgrades in our model that affect armor damage to units. In many cases, attacks in the beginning and middle of the game with an upgrade advantage are limited in time, so the attacking player has a higher level of upgrades than their opponent. The effect of these upgrades to our 1-level model is relatively simple, but we do not understand this well on our 1-level model."}, {"heading": "Acknowledgements", "text": "The authors would like to thank Professor Amy Sliva for her guidance and feedback, Team Liquid for providing a website that contains much of the unit information we use, and all Blizzard employees responsible for creating StarCraft 2."}, {"heading": "Resources", "text": "The code developed for this project can be found along with StarCraft 2 maps and playback files at https: / / bitbucket.org / karlwiegand / sc2apx.12 of 13"}], "references": [{"title": "Starcraft II Sells 3 Million in One Month.", "author": ["R. Purchese"], "venue": "Internet: http:// www.eurogamer.net/articles/2010-09-01-starcraft-ii-sells-3-million-in-a-month. Sept", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Video Games and their Evolution into a Breed of Spectator Sport.", "author": ["J. Pennycook"], "venue": "Internet: http://www.npr.org/blogs/alltechconsidered/2010/07/29/128846098/starcraftplaceholder. Jul", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2010}, {"title": "Starcraft 2 Automated Player.", "author": ["M. Fisher"], "venue": "Internet: http://graphics.stanford.edu/ ~mdfisher/GameAIs.html. 2012 [Oct", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "Starcraft 2 Battle Simulator.", "author": ["B. Psimas"], "venue": "Internet: http://sc2simulator.com/. 2010 [Oct", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Simulator for StarCraft 2 Lite.", "author": ["D. Low"], "venue": "Internet: https://itunes.apple.com/us/app/ simulator-for-starcraft-2/id385429453?mt=8. Oct", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2011}, {"title": "Attack/Defense Calculator.\u201d Internet: http://www.gamereplays.org/ starcraft2/portals.php?show=page&name=damage-calculator", "author": ["R. Schneider"], "venue": "Feb. 24,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}], "referenceMentions": [], "year": 2012, "abstractText": "Real-time strategy (RTS) games make heavy use of artificial intelligence (AI), especially in the design of computerized opponents. Because of the computational complexity involved in managing all aspects of these games, many AI opponents are designed to optimize only a few areas of playing style. In games like StarCraft 2, a very popular and recently released RTS, most AI strategies revolve around economic and building efficiency: AI opponents try to gather and spend all resources as quickly and effectively as possible while ensuring that no units are idle. The aim of this work was to help address the need for AI combat strategies that are not computationally intensive. Our goal was to produce a computationally efficient model that is accurate at predicting the results of complex battles between diverse armies, including which army will win and how many units will remain. Our results suggest it may be possible to develop a relatively simple approximation model of combat that can accurately predict many battles that do not involve micromanagement. Future designs of AI opponents may be able to incorporate such an approximation model into their decision and planning systems to provide a challenge that is strategically balanced across all aspects of play. Background and Motivation StarCraft 2 is a real-time strategy (RTS) computer game created by Blizzard Entertainment. This game is a sequel to the original StarCraft and, like its predecessor, has proven very popular. Released in July 2010, StarCraft 2 sold over 3 million copies worldwide after only one month on the market, making it one of the fastest-selling RTS games of all time.1 Many professional computer gaming leagues that previously ran StarCraft tournaments have recently converted to running StarCraft 2 tournaments, including the GOMTV Global StarCraft 2 League (GSL), which has awarded approximately $2.5 million USD in prize money since its inception in 2010.2 The rising popularity of \"e-sports\" and the potential of winning substantial prize money in tournaments have contributed to an increased interest in strategies and technical analyses of many competitive computer games, especially StarCraft 2.3 StarCraft 2, like many other titles in the RTS genre, is a game for two or more players. Each player chooses from one of three different races (Protoss, Zerg, or Human) and builds an army of units to defeat his or her enemies on a specific map: a 2-dimensional grid of finite size with", "creator": "Documill Publishor 6.3.12 by Documill (http://www.documill.com/)"}}}