{"id": "1405.1520", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-May-2014", "title": "claspfolio 2: Advances in Algorithm Selection for Answer Set Programming", "abstract": "To appear in Theory and Practice of Logic Programming (TPLP). Building on the award-winning, portfolio-based ASP solver claspfolio, we present claspfolio 2, a modular and open solver architecture that integrates several different portfolio-based algorithm selection approaches and techniques. The claspfolio 2 solver framework supports various feature generators, solver selection approaches, solver portfolios, as well as solver-schedule-based pre-solving techniques. The default configuration of claspfolio 2 relies on a light-weight version of the ASP solver clasp to generate static and dynamic instance features. The flexible open design of claspfolio 2 is a distinguishing factor even beyond ASP. As such, it provides a unique framework for comparing and combining existing portfolio-based algorithm selection approaches and techniques in a single, unified framework. Taking advantage of this, we conducted an extensive experimental study to assess the impact of different feature sets, selection approaches and base solver portfolios. In addition to gaining substantial insights into the utility of the various approaches and techniques, we identified a default configuration of claspfolio 2 that achieves substantial performance gains not only over clasp's default configuration and the earlier version of claspfolio 2, but also over manually tuned configurations of clasp.", "histories": [["v1", "Wed, 7 May 2014 07:25:58 GMT  (60kb)", "http://arxiv.org/abs/1405.1520v1", "To appear in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "To appear in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["holger hoos", "marius lindauer", "torsten schaub"], "accepted": false, "id": "1405.1520"}, "pdf": {"name": "1405.1520.pdf", "metadata": {"source": "CRF", "title": "claspfolio 2: Advances in Algorithm Selection for Answer Set Programming", "authors": ["Holger Hoos", "Marius Lindauer", "Torsten Schaub"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 140 5.15 20v1 [cs.AI] 7"}, {"heading": "1 Introduction", "text": "This year, there will be no significant change in the first half of the year."}, {"heading": "2 Related Work", "text": "Our work continues a long series of research that can be traced back to John Rice's pioneering work on algorithm selection (Rice 1976) on the one hand, and to the work of Huberman et al. (1997) on parallel algorithm portfolios on the other. Automatic algorithm selectors have achieved impressive performance improvements in the last decade, particularly due to SAT problems. SATzilla et al. 2008; 2007; 2009; 2012) forecasted algorithm performance using crest regression until 2009 and nowadays uses a pairing scheme based on random forests; ISAC et al. 2010) cluster distances in the instance mark space and use cluster centers for algorithm selection; 3S (Kadioglu et al.) Malitsky et al al."}, {"heading": "3 Generalized Algorithm Selection Framework", "text": "This year it is more than ever before in the history of the city."}, {"heading": "5 Empirical Performance Analysis", "text": "As previously described, the modular and open architecture of Claspfolio 2 (Section 3) enables the integration of several different approaches and techniques, including (i) different feature generators, (ii) different approaches to solver selection, and (iii) variable solver portfolios. Taking advantage of this flexibility, we conducted an extensive experimental study to assess the effectiveness of the various selections on large and representative ASP instances. Claspfolio 2 training data is stored in the algorithm selection data format developed by the COSEAL Group, 3, an international group of experts in the field of algorithm selection and configuration. Detailed experimental results and Claspfolio 2 source code are available at http: / / www.cs.uni-potsdam.de / Claspfolio. Our empirical analysis uses commonly used techniques from statistics and machine learning (see e.g. (Bishop 2007)."}, {"heading": "5.1 Setup", "text": "All of our experiments were conducted on a computer cluster with two Intel Xeon E5520 quadcore processors (2.26 GHz, 8192 KB cache) and 48 GB of RAM per node on Scientific Linux (2,6,18-308,4.1.el5). Each algorithm run was limited to 600 CPU seconds runtime interruption and 6 GB memory interruption. In addition, we used permutation tests with 100,000 permutations and significance level \u03b1 = 0.05 for our power metrics, the (0 / 1) timeout values, the PAR10 values and the PAR1 values, 4 to determine the statistical significance of the observed power differences."}, {"heading": "5.2 Instance Sets", "text": "We used all instances submitted to the 2013 ASP competition in the NP category that could be grounded within 600 CPU seconds and 6 GB of memory with Gringo (3.05).The resulting instance set consists of 2214 instances of 17 problem classes; we call it the Comp-13 set. As an even more heterogeneous instance set, we used the ASP Potassco set introduced by Hoos et al. (2013); it consists of 2589 instances of 105 problem classes and includes instances 3 https: / / code.google.com / p / coseal 4 PARX is the punished average runtime, the timeouts punished by X times the runtime shortened.From the 2007 ASP contests (SLparse-Track), 2009 (with the codes of the Potassco group) and 2011 (decision NP problems from the system track), and several instances of the ASP benchmark parameters were not combined to form the single instances of the benchmark 5."}, {"heading": "5.3 Building Algorithm Portfolios", "text": "In fact, it is so that it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, and in which it is about a way, and in which it is about a way, and in which it is about a way, and in which it is about a way, and in which it is about a way, in which it is about a way, in which it is about a way, in which it is about a way, and in which it is about a way, and in which it is about a way, in which it is about a way, and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about a way and in which it is about which it is about a way and in which it is about a way and in which it is about which it is about a way and in which it is about which it is about a way and in which it is about which it is about a way and in which it is about which it is about a way and in which it is about a way and in which it is about which it is about a way and in which it is about which it is about a way and in which it is about a way and in which it is about which it is about a way and in which it is about which it is about which it is about which it is about a way and in which it is about a way and which it is about which it is about which it is about a way and which it is about which it is about a way and which it is about which it is about which it is about which it is about which it is about which it is about which it is"}, {"heading": "5.4 Feature Sets", "text": "In addition to the Claspre feature set presented in Section 4, we looked at a number of ASP features that Maratea et al. (2013) very efficiently focused on syntactical features, such as the number of variables. The released version of their feature generator only supports the ASPCore 1.0 (Calimeri et al. 2011) language of ASP Competition.Our Comp-13 set consists of instances of the 2013 ASP Competition in ASPCore 2.0, which introduced additional language constructions. Therefore, we are implementing this feature generator with the help of Maratea et al. To be compatible with ASPCore 2.0.7One of the most established and studied feature generators for SAT is provided as part of SATzilla. (Xu et al.)"}, {"heading": "5.5 Algorithm Selection Approaches", "text": "As already mentioned, Claspfolio 2 was explicitly designed to easily integrate several state-of-the-art approaches to algorithm selection, allowing us not only to optimize the performance of Claspfolio 2, but also to consider the approaches to algorithm selection within a7 The new feature generator is implemented in Python while the original generator was implemented in C + +, which caused an overhead of factor 2 in terms of runtime on average of the ASPCore 1.0 instances of the 2011 ASP competition. 8 lp2sat was used as in the ASP Competition.controlled Environment 2013. Although our re-implementations may not reproduce the original implementations in all details (which would be difficult to achieve considering that sources for some published approaches are not available), they represent the only freely available, opensource implementations of some of these systems, and thus provide a basis for further analysis of Claspfolio 2 and an overview of improvements available in Table 95."}, {"heading": "5.6 Results", "text": "We have evaluated the performance of Claspfolio 2 on all 112 combinations of our 4-part approaches, 4 portfolios and 7 algorithm approaches, which provide validation on both sets of tests. To examine the impact of each design selection, we have collected statistics on the distribution of results across all 28 portfolios and selection approaches. The following parts of the table show the results for the use of each feature set, in terms of the average performance of PAR10 and the best performance of PAR10 approaches. The following parts of Table 6 show analogous results for the different portfolios and selection sets."}, {"heading": "6 Conclusions and Future Work", "text": "Our new, modular Claspfolio 2 ASP solver architecture includes a variety of portfolio-based algorithm selection techniques, including feature extractors, manually and automatically constructed base algorithm portfolios, algorithm selection mechanisms, and solver-schedule-based pre-solving techniques. As shown in the high-level review of empirical performance results in Table 7, Claspfolio 2 is significantly more robust than the standard configuration of Clasp, the manually tuned configuration of Clasp of the ASP Competition 2013, and all other individual solvers evaluated; in fact, its performance in terms of PAR10 score is only about 20% and 15% higher than that of the most well-known oracle of Potassco set and Comp-13 set benchmark sets. The re-implementation of Claspfolio 1.0 in Claspfolio 2, which in preliminary experiments performs similarly to the implementation of PARP-based algorithms on relatively high PARP selection, is the best."}, {"heading": "Acknowledgments", "text": "T. Schaub and M. Lindauer were supported by the DFG projects SCHA 550 / 8-3. H. Hoos was supported by an NSERC Discovery Grant."}], "references": [{"title": "WASP: A native asp solver based on constraint learning", "author": ["M. ALVIANO", "C. DODARO", "W. FABER", "N. LEONE", "F. RICCA"], "venue": "Proceedings of the Twelfth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201913), P. Cabalar and T. Son, Eds. Lecture Notes in Artificial Intelligence, vol. 8148. Springer-Verlag, 54\u201366.", "citeRegEx": "ALVIANO et al\\.,? 2013", "shortCiteRegEx": "ALVIANO et al\\.", "year": 2013}, {"title": "A gender-based genetic algorithm for the automatic configuration of algorithms", "author": ["C. ANS\u00d3TEGUI", "M. SELLMANN", "K. TIERNEY"], "venue": "Proceedings of the Fifteenth International Conference on Principles and Practice of Constraint Programming (CP\u201909), I. Gent, Ed. Lecture Notes in Computer Science, vol. 5732. Springer-Verlag, 142\u2013157.", "citeRegEx": "ANS\u00d3TEGUI et al\\.,? 2009", "shortCiteRegEx": "ANS\u00d3TEGUI et al\\.", "year": 2009}, {"title": "Knowledge Representation, Reasoning and Declarative Problem Solving", "author": ["C. BARAL"], "venue": "Cambridge University Press.", "citeRegEx": "BARAL,? 2003", "shortCiteRegEx": "BARAL", "year": 2003}, {"title": "Proceedings of the Thirteenth International Conference on Principles and Practice of Constraint Programming (CP\u201907)", "author": ["C. BESSIERE", "Ed."], "venue": "Lecture Notes in Computer Science, vol. 4741. SpringerVerlag.", "citeRegEx": "BESSIERE and Ed.,? 2007", "shortCiteRegEx": "BESSIERE and Ed.", "year": 2007}, {"title": "Pattern Recognition and Machine Learning (Information Science and Statistics), 1st ed", "author": ["C. BISHOP"], "venue": "2006. Corr. 2nd printing ed. Springer.", "citeRegEx": "BISHOP,? 2007", "shortCiteRegEx": "BISHOP", "year": 2007}, {"title": "Third ASP competition - file and language formats", "author": ["F. CALIMERI", "G. IANNI", "F. RICCA"], "venue": "Tech. rep., Universit\u00e0 della Calabria.", "citeRegEx": "CALIMERI et al\\.,? 2011", "shortCiteRegEx": "CALIMERI et al\\.", "year": 2011}, {"title": "SNAPP: Solver-based nearest neighbor for algorithm portfolios", "author": ["M. COLLAUTTI", "Y. MALITSKY", "D. MEHTA", "B. O\u2019SULLIVAN"], "venue": "In Proceedings of the Twenty-Fourth European Conference on Machine Learning (ECML\u201913),", "citeRegEx": "COLLAUTTI et al\\.,? \\Q2013\\E", "shortCiteRegEx": "COLLAUTTI et al\\.", "year": 2013}, {"title": "Technical Communications of the Twenty-eighth International Conference on Logic Programming (ICLP\u201912)", "author": ["A. DOVIER", "V. SANTOS COSTA", "Eds."], "venue": "Vol. 17. Leibniz International Proceedings in Informatics (LIPIcs).", "citeRegEx": "DOVIER et al\\.,? 2012", "shortCiteRegEx": "DOVIER et al\\.", "year": 2012}, {"title": "Potassco: The Potsdam answer set solving collection", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "M. OSTROWSKI", "T. SCHAUB", "M. SCHNEIDER"], "venue": "AI Communications 24, 2, 107\u2013124.", "citeRegEx": "GEBSER et al\\.,? 2011", "shortCiteRegEx": "GEBSER et al\\.", "year": 2011}, {"title": "A portfolio solver for answer set programming: Preliminary report", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "T. SCHAUB", "M. SCHNEIDER", "S. ZILLER"], "venue": "Proceedings of the Eleventh International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201911), J. Delgrande and W. Faber, Eds. Lecture Notes in Artificial Intelligence, vol. 6645. Springer-Verlag, 352\u2013357.", "citeRegEx": "GEBSER et al\\.,? 2011", "shortCiteRegEx": "GEBSER et al\\.", "year": 2011}, {"title": "Answer set programming based on propositional satisfiability", "author": ["E. GIUNCHIGLIA", "Y. LIERLER", "M. MARATEA"], "venue": "Journal of Automated Reasoning 36, 4, 345\u2013377.", "citeRegEx": "GIUNCHIGLIA et al\\.,? 2006", "shortCiteRegEx": "GIUNCHIGLIA et al\\.", "year": 2006}, {"title": "Fast downward stone soup: A baseline for building planner portfolios", "author": ["M. HELMERT", "G. R\u00d6GER", "E. KARPAS"], "venue": "ICAPS 2011 Workshop on Planning and Learning. 28\u201335.", "citeRegEx": "HELMERT et al\\.,? 2011", "shortCiteRegEx": "HELMERT et al\\.", "year": 2011}, {"title": "Programming by optimisation", "author": ["H. HOOS"], "venue": "Communications of the ACM 55, 70\u201380.", "citeRegEx": "HOOS,? 2012", "shortCiteRegEx": "HOOS", "year": 2012}, {"title": "aspeed: Solver scheduling via answer set programming", "author": ["H. HOOS", "R. KAMINSKI", "M. LINDAUER", "T. SCHAUB"], "venue": "Theory and Practice of Logic Programming First View, 1\u201326. Available at http://arxiv.org/abs/1401.1024 .", "citeRegEx": "HOOS et al\\.,? 2014", "shortCiteRegEx": "HOOS et al\\.", "year": 2014}, {"title": "Robust benchmark set selection for boolean constraint solvers", "author": ["H. HOOS", "B. KAUFMANN", "T. SCHAUB", "M. SCHNEIDER"], "venue": "See Pardalos and Nicosia (2013), 138\u2013152.", "citeRegEx": "HOOS et al\\.,? 2013", "shortCiteRegEx": "HOOS et al\\.", "year": 2013}, {"title": "An economic approach to hard computational problems", "author": ["B. HUBERMAN", "R. LUKOSE", "T. HOGG"], "venue": "Science 275, 51\u201354.", "citeRegEx": "HUBERMAN et al\\.,? 1997", "shortCiteRegEx": "HUBERMAN et al\\.", "year": 1997}, {"title": "Sequential model-based optimization for general algorithm configuration", "author": ["F. HUTTER", "H. HOOS", "K. LEYTON-BROWN"], "venue": "Proceedings of the Fifth International Conference on Learning and Intelligent Optimization (LION\u201911). Lecture Notes in Computer Science, vol. 6683. Springer-Verlag, 507\u2013523.", "citeRegEx": "HUTTER et al\\.,? 2011", "shortCiteRegEx": "HUTTER et al\\.", "year": 2011}, {"title": "Automatic algorithm configuration based on local search", "author": ["F. HUTTER", "H. HOOS", "T. ST\u00dcTZLE"], "venue": "Proceedings of the Twenty-second National Conference on Artificial Intelligence (AAAI\u201907). AAAI Press, 1152\u20131157.", "citeRegEx": "HUTTER et al\\.,? 2007", "shortCiteRegEx": "HUTTER et al\\.", "year": 2007}, {"title": "Algorithm runtime prediction: The state of the art", "author": ["F. HUTTER", "L. XU", "H.H. HOOS", "K. LEYTON-BROWN"], "venue": "Artificial Intelligence.", "citeRegEx": "HUTTER et al\\.,? 2012", "shortCiteRegEx": "HUTTER et al\\.", "year": 2012}, {"title": "Some (in)translatability results for normal logic programs and propositional theories", "author": ["T. JANHUNEN"], "venue": "Journal of Applied Non-Classical Logics 16, 1-2, 35\u201386.", "citeRegEx": "JANHUNEN,? 2006", "shortCiteRegEx": "JANHUNEN", "year": 2006}, {"title": "Algorithm selection and scheduling", "author": ["S. KADIOGLU", "Y. MALITSKY", "A. SABHARWAL", "H. SAMULOWITZ", "M. SELLMANN"], "venue": "Proceedings of the Seventeenth International Conference on Principles and Practice of Constraint Programming (CP\u201911), J. Lee, Ed. Lecture Notes in Computer Science, vol. 6876. Springer-Verlag, 454\u2013469.", "citeRegEx": "KADIOGLU et al\\.,? 2011", "shortCiteRegEx": "KADIOGLU et al\\.", "year": 2011}, {"title": "ISAC \u2013 instance-specific algorithm configuration", "author": ["S. KADIOGLU", "Y. MALITSKY", "M. SELLMANN", "K. TIERNEY"], "venue": "Proceedings of the Nineteenth European Conference on Artificial Intelligence (ECAI\u201910), H. Coelho, R. Studer, and M. Wooldridge, Eds. IOS Press, 751\u2013756.", "citeRegEx": "KADIOGLU et al\\.,? 2010", "shortCiteRegEx": "KADIOGLU et al\\.", "year": 2010}, {"title": "LLAMA: leveraging learning to automatically manage algorithms", "author": ["L. KOTTHOFF"], "venue": "Tech. rep., Cork Constraint Computation Centre. published at arXiv.", "citeRegEx": "KOTTHOFF,? 2013", "shortCiteRegEx": "KOTTHOFF", "year": 2013}, {"title": "An evaluation of machine learning in algorithm selection for search problems", "author": ["L. KOTTHOFF", "I.P. GENT", "I. MIGUEL"], "venue": "AI Communications 25, 3, 257\u2013270.", "citeRegEx": "KOTTHOFF et al\\.,? 2012", "shortCiteRegEx": "KOTTHOFF et al\\.", "year": 2012}, {"title": "Answer set programming via mixed integer programming", "author": ["G. LIU", "T. JANHUNEN", "I. NIEMEL"], "venue": "Proceedings of the Thirteenth International Conference on Principles of Knowledge Representation and Reasoning (KR\u201912), G. Brewka, T. Eiter, and S. McIlraith, Eds. AAAI Press, 32\u201342.", "citeRegEx": "LIU et al\\.,? 2012", "shortCiteRegEx": "LIU et al\\.", "year": 2012}, {"title": "Boosting sequential solver portfolios: Knowledge sharing and accuracy prediction", "author": ["Y. MALITSKY", "A. SABHARWAL", "H. SAMULOWITZ", "M. SELLMANN"], "venue": "See Pardalos and Nicosia (2013), 153\u2013 167.", "citeRegEx": "MALITSKY et al\\.,? 2013", "shortCiteRegEx": "MALITSKY et al\\.", "year": 2013}, {"title": "Applying machine learning techniques to ASP solving", "author": ["M. MARATEA", "L. PULINA", "F. RICCA"], "venue": "See Dovier and Santos Costa (2012), 37\u201348.", "citeRegEx": "MARATEA et al\\.,? 2012", "shortCiteRegEx": "MARATEA et al\\.", "year": 2012}, {"title": "A multi-engine approach to answer-set programming", "author": ["M. MARATEA", "L. PULINA", "F. RICCA"], "venue": "Theory and Practice of Logic Programming First View, 1\u201328.", "citeRegEx": "MARATEA et al\\.,? 2013", "shortCiteRegEx": "MARATEA et al\\.", "year": 2013}, {"title": "Translating answer-set programs into bit-vector logic", "author": ["M. NGUYEN", "T. JANHUNEN", "I. NIEMEL\u00c4"], "venue": "Proceedings of the Nineteenth International Conference on Applications of Declarative Programming and Knowledge Management (INAP\u201911) and the Twenty-fifth Workshop on Logic Programming (WLP\u201911), H. Tompits, S. Abreu, J. Oetsch, J. P\u00fchrer, D. Seipel, M. Umeda, and A. Wolf, Eds. Lecture Notes in Computer Science, vol. 7773. Springer-Verlag, 105\u2013116.", "citeRegEx": "NGUYEN et al\\.,? 2013", "shortCiteRegEx": "NGUYEN et al\\.", "year": 2013}, {"title": "Using case-based reasoning in an algorithm portfolio for constraint solving", "author": ["E. O\u2019MAHONY", "E. HEBRARD", "A. HOLLAND", "C. NUGENT", "B. O\u2019SULLIVAN"], "venue": "Proceedings of the Nineteenth Irish Conference on Artificial Intelligence and Cognitive Science (AICS\u201908),", "citeRegEx": "O.MAHONY et al\\.,? \\Q2008\\E", "shortCiteRegEx": "O.MAHONY et al\\.", "year": 2008}, {"title": "Proceedings of the Seventh International Conference on Learning and Intelligent Optimization (LION\u201913)", "author": ["P. PARDALOS", "G. NICOSIA", "Eds."], "venue": "Lecture Notes in Computer Science, vol. 7997. Springer-Verlag.", "citeRegEx": "PARDALOS et al\\.,? 2013", "shortCiteRegEx": "PARDALOS et al\\.", "year": 2013}, {"title": "A multi-engine solver for quantified boolean formulas", "author": ["L. PULINA", "A. TACCHELLA"], "venue": "See Bessiere (2007), 574\u2013589.", "citeRegEx": "PULINA and TACCHELLA,? 2007", "shortCiteRegEx": "PULINA and TACCHELLA", "year": 2007}, {"title": "The algorithm selection problem", "author": ["J. RICE"], "venue": "Advances in Computers 15, 65\u2013118.", "citeRegEx": "RICE,? 1976", "shortCiteRegEx": "RICE", "year": 1976}, {"title": "Learning portfolios of automatically tuned planners", "author": ["J. SEIPP", "M. BRAUN", "J. GARIMORT", "M. HELMERT"], "venue": "Proceedings of the Twenty-Second International Conference on Automated Planning and Scheduling (ICAPS\u201912), L. McCluskey, B. Williams, J. R. Silva, and B. Bonet, Eds. AAAI.", "citeRegEx": "SEIPP et al\\.,? 2012", "shortCiteRegEx": "SEIPP et al\\.", "year": 2012}, {"title": "Surviving solver sensitivity: An ASP practitioner\u2019s guide", "author": ["B. SILVERTHORN", "Y. LIERLER", "M. SCHNEIDER"], "venue": "See Dovier and Santos Costa (2012), 164\u2013175.", "citeRegEx": "SILVERTHORN et al\\.,? 2012", "shortCiteRegEx": "SILVERTHORN et al\\.", "year": 2012}, {"title": "Extending and implementing the stable model semantics", "author": ["P. SIMONS", "I. NIEMEL\u00c4", "T. SOININEN"], "venue": "Artificial Intelligence 138, 1-2, 181\u2013234.", "citeRegEx": "SIMONS et al\\.,? 2002", "shortCiteRegEx": "SIMONS et al\\.", "year": 2002}, {"title": "Hierarchical hardness models for SAT", "author": ["L. XU", "H. HOOS", "K. LEYTON-BROWN"], "venue": "See Bessiere (2007), 696\u2013711.", "citeRegEx": "XU et al\\.,? 2007", "shortCiteRegEx": "XU et al\\.", "year": 2007}, {"title": "Hydra: Automatically configuring algorithms for portfolio-based selection", "author": ["L. XU", "H. HOOS", "K. LEYTON-BROWN"], "venue": "Proceedings of the Twenty-fourth National Conference on Artificial Intelligence (AAAI\u201910), M. Fox and D. Poole, Eds. AAAI Press, 210\u2013216.", "citeRegEx": "XU et al\\.,? 2010", "shortCiteRegEx": "XU et al\\.", "year": 2010}, {"title": "SATzilla: Portfolio-based algorithm selection for SAT", "author": ["L. XU", "F. HUTTER", "H. HOOS", "K. LEYTON-BROWN"], "venue": "Journal of Artificial Intelligence Research 32, 565\u2013606.", "citeRegEx": "XU et al\\.,? 2008", "shortCiteRegEx": "XU et al\\.", "year": 2008}, {"title": "SATzilla2009: An automatic algorithm portfolio for SAT", "author": ["L. XU", "F. HUTTER", "H. HOOS", "K. LEYTON-BROWN"], "venue": "SAT 2009 competitive events booklet: preliminary version, D. Le Berre, O. Roussel, L. Simon, V. Manquinho, J. Argelich, C. Li, F. Many\u00e0, and J. Planes, Eds. 53\u201355. Available at http://www.cril.univ-artois.fr/SAT09/solvers/booklet.pdf .", "citeRegEx": "XU et al\\.,? 2009", "shortCiteRegEx": "XU et al\\.", "year": 2009}, {"title": "Hydra-MIP: Automated algorithm configuration and selection for mixed integer programming", "author": ["L. XU", "F. HUTTER", "H. HOOS", "K. LEYTON-BROWN"], "venue": "RCRA workshop on Experimental Evaluation of Algorithms for Solving Problems with Combinatorial Explosion at the International Joint Conference on Artificial Intelligence (IJCAI\u201911).", "citeRegEx": "XU et al\\.,? 2011", "shortCiteRegEx": "XU et al\\.", "year": 2011}, {"title": "Evaluating component solver contributions to portfolio-based algorithm selectors", "author": ["L. XU", "F. HUTTER", "H. HOOS", "K. LEYTON-BROWN"], "venue": "Proceedings of the Fifteenth International Conference on Theory and Applications of Satisfiability Testing (SAT\u201912), A. Cimatti and R. Sebastiani, Eds. Lecture Notes in Computer Science, vol. 7317. Springer-Verlag, 228\u2013241.", "citeRegEx": "XU et al\\.,? 2012", "shortCiteRegEx": "XU et al\\.", "year": 2012}], "referenceMentions": [{"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving.", "startOffset": 29, "endOffset": 41}, {"referenceID": 8, "context": "(2014), and in particular the two portfolio-based systems claspfolio (Gebser et al. 2011) and ME-ASP (Maratea et al.", "startOffset": 69, "endOffset": 89}, {"referenceID": 27, "context": "2011) and ME-ASP (Maratea et al. 2013).", "startOffset": 17, "endOffset": 38}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al.", "startOffset": 30, "endOffset": 687}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al. (2012), Silverthorn et al.", "startOffset": 30, "endOffset": 710}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al. (2012), Silverthorn et al. (2012), Maratea et al.", "startOffset": 30, "endOffset": 737}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al. (2012), Silverthorn et al. (2012), Maratea et al. (2013) and Hoos et al.", "startOffset": 30, "endOffset": 760}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al. (2012), Silverthorn et al. (2012), Maratea et al. (2013) and Hoos et al. (2014), and in particular the two portfolio-based systems claspfolio (Gebser et al.", "startOffset": 30, "endOffset": 783}, {"referenceID": 2, "context": "Answer Set Programming (ASP; (Baral 2003)) has become a popular approach to declarative problem solving. This is mainly due its combination of a rich and simple modeling language with high performance solving technology. ASP decouples problem specifications from solving algorithms; however, modern ASP solvers are known to be sensitive to search configurations \u2013 a phenomenon that is common to advanced Boolean constraint processing techniques. To avoid the necessity of manual solver configuration, a substantial amount of research was thus devoted to automated algorithm configuration and selection approaches, as we detail in Section 2; in ASP, we find works by Gebser et al. (2011), Maratea et al. (2012), Silverthorn et al. (2012), Maratea et al. (2013) and Hoos et al. (2014), and in particular the two portfolio-based systems claspfolio (Gebser et al. 2011) and ME-ASP (Maratea et al. 2013). The idea of such portfoliobased systems is to train classifiers on features of benchmark instances in order to predict the putatively best solver from a given solver portfolio. The portfolio of solvers used in this approach may consist of distinct configurations of the same solver or contain different solvers. In what follows, we describe the new portfolio-based ASP system claspfolio, whose earlier version 1.0 won first, second, and third places at various ASP competitions. Version 0.8 of claspfolio was briefly described in a short paper by Gebser et al. (2011) and is conceptually identical to the first stable release of version 1.", "startOffset": 30, "endOffset": 1468}, {"referenceID": 32, "context": "Our work continues a long line of research that can be traced back to John Rice\u2019s seminal work on algorithm selection (Rice 1976) on one side, and to work by Huberman et al.", "startOffset": 118, "endOffset": 129}, {"referenceID": 38, "context": "SATzilla (Xu et al. 2008; 2007; 2009; 2011; 2012) predicted algorithm performance by means of ridge regression until 2009 and nowadays uses a pairwise voting scheme based on random forests; ISAC (Kadioglu et al.", "startOffset": 9, "endOffset": 49}, {"referenceID": 21, "context": "2008; 2007; 2009; 2011; 2012) predicted algorithm performance by means of ridge regression until 2009 and nowadays uses a pairwise voting scheme based on random forests; ISAC (Kadioglu et al. 2010) clusters instances in the instance feature space and uses a nearest neighbour approach on cluster centers for algorithm selection; 3S (Kadioglu et al.", "startOffset": 175, "endOffset": 197}, {"referenceID": 20, "context": "2010) clusters instances in the instance feature space and uses a nearest neighbour approach on cluster centers for algorithm selection; 3S (Kadioglu et al. 2011; Malitsky et al. 2013) uses k-NN in the feature space and introduces pre-solving schedules computed by Integer Linear Programming and cost-sensitive clustering; SNAPP (Collautti et al.", "startOffset": 140, "endOffset": 184}, {"referenceID": 25, "context": "2010) clusters instances in the instance feature space and uses a nearest neighbour approach on cluster centers for algorithm selection; 3S (Kadioglu et al. 2011; Malitsky et al. 2013) uses k-NN in the feature space and introduces pre-solving schedules computed by Integer Linear Programming and cost-sensitive clustering; SNAPP (Collautti et al.", "startOffset": 140, "endOffset": 184}, {"referenceID": 31, "context": "Similarly, AQME (Pulina and Tacchella 2007) is a multi-engine selector for QSAT.", "startOffset": 16, "endOffset": 43}, {"referenceID": 33, "context": "Stone Soup (Seipp et al. 2012; Helmert et al. 2011) uses greedy hill climbing to find algorithm schedules for planning problems.", "startOffset": 11, "endOffset": 51}, {"referenceID": 11, "context": "Stone Soup (Seipp et al. 2012; Helmert et al. 2011) uses greedy hill climbing to find algorithm schedules for planning problems.", "startOffset": 11, "endOffset": 51}, {"referenceID": 13, "context": "aspeed (Hoos et al. 2014) also computes algorithm schedules, but takes advantage of the modeling and solving capabilities of ASP to find timeout-minimal schedules.", "startOffset": 7, "endOffset": 25}, {"referenceID": 9, "context": "Our work continues a long line of research that can be traced back to John Rice\u2019s seminal work on algorithm selection (Rice 1976) on one side, and to work by Huberman et al. (1997) on parallel algorithm portfolios on the other side.", "startOffset": 158, "endOffset": 181}, {"referenceID": 8, "context": "Following the original claspfolio of Gebser et al. (2011) approach, Maratea et al.", "startOffset": 37, "endOffset": 58}, {"referenceID": 8, "context": "Following the original claspfolio of Gebser et al. (2011) approach, Maratea et al. (2012) presented ME-ASP, a multi-engine algorithm selector for ASP with an instance feature generator for syntactic features.", "startOffset": 37, "endOffset": 90}, {"referenceID": 8, "context": "Following the original claspfolio of Gebser et al. (2011) approach, Maratea et al. (2012) presented ME-ASP, a multi-engine algorithm selector for ASP with an instance feature generator for syntactic features. Similarly, AQME (Pulina and Tacchella 2007) is a multi-engine selector for QSAT. CP-Hydra (O\u2019Mahony et al. 2008) selects a set of CSP solvers based on case-based reasoning and schedules them heuristically. Stone Soup (Seipp et al. 2012; Helmert et al. 2011) uses greedy hill climbing to find algorithm schedules for planning problems. aspeed (Hoos et al. 2014) also computes algorithm schedules, but takes advantage of the modeling and solving capabilities of ASP to find timeout-minimal schedules. Related to our work on a more general level, Hutter et al. (2012) gave an overview over run-", "startOffset": 37, "endOffset": 774}, {"referenceID": 22, "context": "A comparison of different machine learning algorithms for algorithm selection was presented by Kotthoff et al. (2012). Based on these results, Kotthoff (2013) introduced LLAMA, Leveraging Learning to Automatically Manage Algorithms, a flexible framework that provides functionality to train and assess the performance of different algorithm selection techniques.", "startOffset": 95, "endOffset": 118}, {"referenceID": 22, "context": "A comparison of different machine learning algorithms for algorithm selection was presented by Kotthoff et al. (2012). Based on these results, Kotthoff (2013) introduced LLAMA, Leveraging Learning to Automatically Manage Algorithms, a flexible framework that provides functionality to train and assess the performance of different algorithm selection techniques.", "startOffset": 95, "endOffset": 159}, {"referenceID": 12, "context": "Furthermore, the new design of claspfolio 2 follows the idea of Level 4 of programming by optimisation (Hoos 2012): \u201cThe software-development process is centered on the idea of providing design choices and alternatives in all parts of a project that might benefit from them; design choices that cannot be justified convincingly are not made prematurely.", "startOffset": 103, "endOffset": 114}, {"referenceID": 13, "context": "aspeed (Hoos et al. 2014), into an algorithm selection framework to compute a static pre-solving schedule.", "startOffset": 7, "endOffset": 25}, {"referenceID": 13, "context": "The Scheduling component of claspfolio 2 computes a timeout-minimal pre-solving schedule using aspeed (Hoos et al. 2014), where each algorithm gets a (potentially zero) time slice of the overall runtime budget available for solving a given problem instance.", "startOffset": 102, "endOffset": 120}, {"referenceID": 38, "context": "Like SATzilla (Xu et al. 2008), claspfolio 2 allows to ignore instances solved by the presolving schedule (Arrow II) when learning the scoring model, such that the resulting model is focused on the harder instances not solved by the pre-solvers that are actually subject to algorithm selecting during the solving phase.", "startOffset": 14, "endOffset": 30}, {"referenceID": 38, "context": "In (Xu et al. 2008), this is called solver subset selection and in (Maratea et al.", "startOffset": 3, "endOffset": 19}, {"referenceID": 26, "context": "2008), this is called solver subset selection and in (Maratea et al. 2012), solver selection.", "startOffset": 53, "endOffset": 74}, {"referenceID": 8, "context": "claspre is a light-weight version of clasp (Gebser et al. 2011) that extracts instance features of ground ASP instances in smodels format (Syrj\u00e4nen ), using clasp\u2019s internal statistics.", "startOffset": 43, "endOffset": 63}, {"referenceID": 4, "context": ", (Bishop 2007)).", "startOffset": 2, "endOffset": 15}, {"referenceID": 12, "context": "As an even more heterogeneous instance set, we used the ASP Potassco-Set introduced by Hoos et al. (2013); it consists of 2589 instances from 105 problem classes and includes instances", "startOffset": 87, "endOffset": 106}, {"referenceID": 26, "context": "3) configurations designed by Benjamin Kaufmann (configurations: frumpy (default), jumpy, handy and crafty) \u2022 SOTA-portfolio (Maratea et al. 2012): non-portfolio solvers participating in the 2013 ASP Competition6 and in addition, the well-established solvers cmodels and smodels; in detail: clasp (Gebser et al.", "startOffset": 125, "endOffset": 146}, {"referenceID": 8, "context": "2012): non-portfolio solvers participating in the 2013 ASP Competition6 and in addition, the well-established solvers cmodels and smodels; in detail: clasp (Gebser et al. 2011), cmodels (Giunchiglia et al.", "startOffset": 156, "endOffset": 176}, {"referenceID": 10, "context": "2011), cmodels (Giunchiglia et al. 2006), lp2bv (Nguyen et al.", "startOffset": 15, "endOffset": 40}, {"referenceID": 28, "context": "2006), lp2bv (Nguyen et al. 2013), lp2mip (Liu et al.", "startOffset": 13, "endOffset": 33}, {"referenceID": 24, "context": "2013), lp2mip (Liu et al. 2012), lp2sat (Janhunen 2006), smodels (Simons et al.", "startOffset": 14, "endOffset": 31}, {"referenceID": 19, "context": "2012), lp2sat (Janhunen 2006), smodels (Simons et al.", "startOffset": 14, "endOffset": 29}, {"referenceID": 35, "context": "2012), lp2sat (Janhunen 2006), smodels (Simons et al. 2002), and wasp (Alviano et al.", "startOffset": 39, "endOffset": 59}, {"referenceID": 0, "context": "2002), and wasp (Alviano et al. 2013) \u2022 Hydra-like-portfolio (Xu et al.", "startOffset": 16, "endOffset": 37}, {"referenceID": 37, "context": "2013) \u2022 Hydra-like-portfolio (Xu et al. 2010; Xu et al. 2011) of clasp (2.", "startOffset": 29, "endOffset": 61}, {"referenceID": 40, "context": "2013) \u2022 Hydra-like-portfolio (Xu et al. 2010; Xu et al. 2011) of clasp (2.", "startOffset": 29, "endOffset": 61}, {"referenceID": 21, "context": "3) configurations \u2022 ISAC-like-portfolio (Kadioglu et al. 2010) of clasp (2.", "startOffset": 40, "endOffset": 62}, {"referenceID": 17, "context": ", ParamILS (Hutter et al. 2007), GGA (Ans\u00f3tegui et al.", "startOffset": 11, "endOffset": 31}, {"referenceID": 16, "context": "2009) or SMAC (Hutter et al. 2011).", "startOffset": 14, "endOffset": 34}, {"referenceID": 16, "context": "The configuration process performed by SMAC (2.06.01; Hutter et al. 2011) on each cluster and in each Hydra iteration, respectively, was allocated 120 000 CPU seconds, i.", "startOffset": 44, "endOffset": 73}, {"referenceID": 12, "context": "by using cross-validation to optimize the scoring function of the k-means procedure (following Hoos et al. (2013)).", "startOffset": 95, "endOffset": 114}, {"referenceID": 12, "context": "by using cross-validation to optimize the scoring function of the k-means procedure (following Hoos et al. (2013)). Using this approach, ISAC-like-portfolio found 15 clusters for Comp-13-Set and 11 clusters for Potassco-Set, inducing 15 and 11 configuration tasks, respectively. To obtain a fair comparison, we allocated the same time budget to Hydra-like-portfolio and allowed it to perform 15 and 11 iterations, respectively (each consisting of one configuration task). The configuration process performed by SMAC (2.06.01; Hutter et al. 2011) on each cluster and in each Hydra iteration, respectively, was allocated 120 000 CPU seconds, i.e., 200 times the target algorithm cutoff time, and 10 independent repetitions, from which the result with the best PAR10 score on the given training set was selected. SMAC optimized PAR10. Table 3 shows the performance of the virtual best solvers (i.e., the performance of a perfect algorithm selector) for the different considered portfolios. Interestingly, the results differ qualitatively between two benchmark sets. While SOTA-portfolio performs better than Expert-portfolio on Comp-13-Set, Expert-portfolio is better on Potassco-Set. Furthermore, while for both sets, the automatic generation methods found better performing portfolios than the the manual selected methods, on the Comp-13-Set, ISAC-like-portfolio produced a better results than Hydra-like-portfolio, and the opposite holds for Potassco-Set. Furthermore, unlike conjectured by Maratea et al. (2012), a set of configurations of the same, highly parameterized solver (Expert-portfolio,ISAC-like-portfolioand Hydra-like-portfolio) generally did not yield worse performance than a mixed portfolio, such as SOTA-portfolio.", "startOffset": 95, "endOffset": 1513}, {"referenceID": 12, "context": "by using cross-validation to optimize the scoring function of the k-means procedure (following Hoos et al. (2013)). Using this approach, ISAC-like-portfolio found 15 clusters for Comp-13-Set and 11 clusters for Potassco-Set, inducing 15 and 11 configuration tasks, respectively. To obtain a fair comparison, we allocated the same time budget to Hydra-like-portfolio and allowed it to perform 15 and 11 iterations, respectively (each consisting of one configuration task). The configuration process performed by SMAC (2.06.01; Hutter et al. 2011) on each cluster and in each Hydra iteration, respectively, was allocated 120 000 CPU seconds, i.e., 200 times the target algorithm cutoff time, and 10 independent repetitions, from which the result with the best PAR10 score on the given training set was selected. SMAC optimized PAR10. Table 3 shows the performance of the virtual best solvers (i.e., the performance of a perfect algorithm selector) for the different considered portfolios. Interestingly, the results differ qualitatively between two benchmark sets. While SOTA-portfolio performs better than Expert-portfolio on Comp-13-Set, Expert-portfolio is better on Potassco-Set. Furthermore, while for both sets, the automatic generation methods found better performing portfolios than the the manual selected methods, on the Comp-13-Set, ISAC-like-portfolio produced a better results than Hydra-like-portfolio, and the opposite holds for Potassco-Set. Furthermore, unlike conjectured by Maratea et al. (2012), a set of configurations of the same, highly parameterized solver (Expert-portfolio,ISAC-like-portfolioand Hydra-like-portfolio) generally did not yield worse performance than a mixed portfolio, such as SOTA-portfolio. While we gave Hydra the same time budget as ISAC to find portfolios, the components added by Hydra-like-portfolio in its final three iterations decreased the number of timeouts only by one on our training and test sets. Following Xu et al. (2010), Hydra would be terminated when the performance does not improve on the training set after an iteration.", "startOffset": 95, "endOffset": 1979}, {"referenceID": 5, "context": "0 (Calimeri et al. 2011) language of the 2011 ASP Competition.", "startOffset": 2, "endOffset": 24}, {"referenceID": 25, "context": "In addition to the claspre feature set presented in Section 4, we considered a set of ASP features introduced by Maratea et al. (2013) that is focussed on very efficiently computable syntactic features, such as number of variables.", "startOffset": 113, "endOffset": 135}, {"referenceID": 38, "context": "7 One of the most established and investigated feature generators for SAT is provided as part of SATzilla (Xu et al. 2008).", "startOffset": 106, "endOffset": 122}, {"referenceID": 19, "context": "ASP instances can be translated to SAT with techniques by Janhunen (2006), using his tool lp2sat.", "startOffset": 58, "endOffset": 74}], "year": 2014, "abstractText": "Building on the award-winning, portfolio-based ASP solver claspfolio, we present claspfolio 2, a modular and open solver architecture that integrates several different portfolio-based algorithm selection approaches and techniques. The claspfolio 2 solver framework supports various feature generators, solver selection approaches, solver portfolios, as well as solver-schedule-based pre-solving techniques. The default configuration of claspfolio 2 relies on a light-weight version of the ASP solver clasp to generate static and dynamic instance features. The flexible open design of claspfolio 2 is a distinguishing factor even beyond ASP. As such, it provides a unique framework for comparing and combining existing portfolio-based algorithm selection approaches and techniques in a single, unified framework. Taking advantage of this, we conducted an extensive experimental study to assess the impact of different feature sets, selection approaches and base solver portfolios. In addition to gaining substantial insights into the utility of the various approaches and techniques, we identified a default configuration of claspfolio 2 that achieves substantial performance gains not only over clasp\u2019s default configuration and the earlier version of claspfolio, but also over manually tuned configurations of clasp.", "creator": "LaTeX with hyperref package"}}}