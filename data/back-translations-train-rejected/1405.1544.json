{"id": "1405.1544", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-May-2014", "title": "Transalg: a Tool for Translating Procedural Descriptions of Discrete Functions to SAT", "abstract": "In this paper we present the Transalg system, designed to produce SAT encodings for discrete functions, written as programs in a specific language. Translation of such programs to SAT is based on propositional encoding methods for formal computing models and on the concept of symbolic execution. We used the Transalg system to make SAT encodings for a number of cryptographic functions.", "histories": [["v1", "Wed, 7 May 2014 09:30:55 GMT  (105kb)", "https://arxiv.org/abs/1405.1544v1", null], ["v2", "Thu, 29 Oct 2015 10:34:47 GMT  (103kb)", "http://arxiv.org/abs/1405.1544v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ilya otpuschennikov", "alexander semenov", "stepan kochemazov"], "accepted": false, "id": "1405.1544"}, "pdf": {"name": "1405.1544.pdf", "metadata": {"source": "CRF", "title": "TRANSALG: a Tool for Translating Procedural Descriptions of Discrete Functions to SAT", "authors": ["Ilya Otpuschennikov", "Stepan Kochemazov"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 140 5.15 44v2 [cs.AI] 29 Oct 201 5Keywords: SAT encoding, symbolic execution, translator, cryptographic functions"}, {"heading": "1 Introduction", "text": "Many new methods for solving the Boolean Satisfaction Problem (SAT) have been introduced in the last two decades. These methods make it possible to solve combinatorial problems from different areas [2]. Different approaches can be applied to encode an original problem in SAT [14]. Often, each individual problem requires the development and implementation of special encryption techniques. Recently, a number of systems have been developed that automate procedures for encrypting combinatorial problems in SAT [6,7,12,17,20]. In our paper, we present the TRANSALG system, which translates procedural descriptions of discrete functions into SAT. Translation mechanisms used in TRANSALG are based on the ideas of S.A. Cook on propositional encryption of turing machine programs [3] and ideas of J.S. King on symbolic execution [8]. At this time, we mainly use TRANSALG to generate SAT encryption for graphical functions."}, {"heading": "2 The TA-language for Description of Discrete Functions", "text": "As we have already mentioned, the TRANSALG system uses a special DSL language called TAlanguage to describe discrete functions. Below the translation, we mean the process of obtaining a propositional encoding for a TA program. In the second stage, the system deals with the concept of symbolic execution [8] to construct a propositional encoding for a TA program. TRANSALG can output an encoding obtained in standard forms (CNF, ANF)."}, {"heading": "3 Translation of TA-programs to SAT", "text": "We consider a sequence of calculations defined by any TA program. [11] With the sequence of data changes in a memory of an abstract calculator in moments {}, {"heading": "4 Encoding Cryptanalysis Problems with TRANSALG", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "5 Related Work", "text": "In recent years, the SAT community has developed many encryption techniques that can be applied to a broad class of combinatorial problems. Many references to key essays in this area can be found in [14].There are a number of systems for automatically encrypting the Constraint Satisfaction Problem (CSP) to SAT [6,12,17,20]. Some methods and approaches to encrypting pseudo-boolean constraints have been described in [4].In [18], the GRAIN OF SALT tool was introduced, which can be used to make SAT encryptions for the cryptanalysis of key current generators. The GRAIN OF SALT tool uses the special declarative language to describe key current generators. This language was specifically designed to produce compact descriptions of configurations of shift registers. The TRANSALG system, on the other hand, was designed as a general tool, and it can be applied to the much broader class of key generators than the symbolic one."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "In this paper we present the TRANSALG system, designed to produce<lb>SAT encodings for discrete functions, written as programs in a specific language.<lb>Translation of such programs to SAT is based on propositional encoding methods<lb>for formal computing models and on the concept of symbolic execution. We used<lb>the TRANSALG system to make SAT encodings for a number of cryptographic<lb>functions.", "creator": "LaTeX with hyperref package"}}}