{"id": "1405.3367", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-May-2014", "title": "Bound Founded Answer Set Programming", "abstract": "Answer Set Programming (ASP) is a powerful modelling formalism that is very efficient in solving combinatorial problems. ASP solvers implement the stable model semantics that eliminates circular derivations between Boolean variables from the solutions of a logic program. Due to this, ASP solvers are better suited than propositional satisfiability (SAT) and Constraint Programming (CP) solvers to solve a certain class of problems whose specification includes inductive definitions such as reachability in a graph. On the other hand, ASP solvers suffer from the grounding bottleneck that occurs due to their inability to model finite domain variables. Furthermore, the existing stable model semantics are not sufficient to disallow circular reasoning on the bounds of numeric variables. An example where this is required is in modelling shortest paths between nodes in a graph. Just as reachability can be encoded as an inductive definition with one or more base cases and recursive rules, shortest paths between nodes can also be modelled with similar base cases and recursive rules for their upper bounds. This deficiency of stable model semantics introduces another type of grounding bottleneck in ASP systems that cannot be removed by naively merging ASP with CP solvers, but requires a theoretical extension of the semantics from Booleans and normal rules to bounds over numeric variables and more general rules. In this work, we propose Bound Founded Answer Set Programming (BFASP) that resolves this issue and consequently, removes all types of grounding bottleneck inherent in ASP systems.", "histories": [["v1", "Wed, 14 May 2014 05:40:16 GMT  (26kb)", "http://arxiv.org/abs/1405.3367v1", "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria"]], "COMMENTS": "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["rehan abdul aziz"], "accepted": false, "id": "1405.3367"}, "pdf": {"name": "1405.3367.pdf", "metadata": {"source": "CRF", "title": "Bound Founded Answer Set Programming", "authors": ["Rehan Abdul Aziz"], "emails": ["raziz@student.unimelb.edu.au"], "sections": [{"heading": null, "text": "ar Xiv: 140 5.33 67v1 [cs.A"}, {"heading": "1 Motivation", "text": "In fact, most of us are able to move to another world, to move to another world, to move to another world, to move to another world."}, {"heading": "2 Bound Founded Answer Set Programming", "text": "We consider three types of variables: integer, real, and boolean. (In addition, we divide the set of variables into two different sets: Standard S and reasoned variables F. A domain D maps each variable x x V to a set of constant values D (x). An evaluation (or2 The MINZINC encoding of limited diameter MCDS in BFASP is a set of reference points A.assignment) over variables vars (V maps each variable x) vars (or2 The MINZINC encoding of limited diameter MCDS in BFASP is a set of reference points vars (c) representing the solutions of constraint. A constraint c, a variable y vars (c) is monotonically increasing (decreasing) in c when satisfactory for all solutions c."}, {"heading": "3 Overview of the existing literature", "text": "There are several approaches in the literature aimed at preventing the spread of disease caused by earthquakes. Most of these approaches are structured as follows: they are able to get a grip on themselves and others, in the form in which they are able to survive themselves; most of them are able to survive themselves; most of them are able to survive themselves; most of them are able to survive themselves; most of them are able to survive themselves; most of them are able to survive themselves; most of them are unable to survive themselves; most of them are unable to survive themselves; and most of them are unable to survive themselves."}, {"heading": "4 Goals and current status of the research", "text": "The broader objective of my study is to analyze the strengths and implementation techniques of ASP in order to improve the existing modelling and solution possibilities of solvers. This general objective can be subdivided into the following sub-goals. This sub-goal has been achieved and the main features of BFASP have been published in ICLP (Aziz et al.). The paper defines the semantics of BFASPand represents an insufficient set of algorithms related to the search for solutions."}, {"heading": "Appendix A MINIZINC Encoding of Minimum Connected Dominating Set with Bounded", "text": "Diameter: N;% Number of nodes int: E;% Number of edges array [1.. E] of 1.. N: from;% encodes an edge i (from [i], to [i]) array [1.. N: to; array [1.. E] of int: weight;% Weight of an edge int: K;% bound on diameterarray [1.. N] of var bool: dom;% whether a node% dominates sets constraints for all (n in 1.. N) (dom [n]\\ / exists (e in 1.. E where from [e] (dom [to [e])) (dom [to [e])));% Rules for a negative distance array [1.. N] of var int: d::::: foundation; rule forall (n in 1.. N) (n in 1.. N) (d [n, n] > v (n): v (n), n: [v.. n), n: (n), n: int [v > 1 > v (n) (n): [v.. n)."}], "references": [{"title": "Stable model semantics for founded bounds", "author": ["R.A. AZIZ", "G. CHU", "P.J. STUCKEY"], "venue": "Theory and Practice of Logic Programming 13, 4\u20135, 517\u2013532. Proceedings of the 29th International Conference on Logic Programming.", "citeRegEx": "AZIZ et al\\.,? 2013", "shortCiteRegEx": "AZIZ et al\\.", "year": 2013}, {"title": "Inductive definitions in constraint programming", "author": ["R.A. AZIZ", "P.J. STUCKEY", "Z. SOMOGYI"], "venue": "Proceedings of the Thirty-Sixth Australasian Computer Science Conference, B. Thomas, Ed. CRPIT, vol. 135. ACS, 41\u201350.", "citeRegEx": "AZIZ et al\\.,? 2013a", "shortCiteRegEx": "AZIZ et al\\.", "year": 2013}, {"title": "Representing constraint satisfaction problems in answer set programming", "author": ["M. BALDUCCINI"], "venue": "ICLP09 Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP09).", "citeRegEx": "BALDUCCINI,? 2009", "shortCiteRegEx": "BALDUCCINI", "year": 2009}, {"title": "Knowledge representation, reasoning and declarative problem solving", "author": ["C. BARAL"], "venue": "Cambridge University Press.", "citeRegEx": "BARAL,? 2003", "shortCiteRegEx": "BARAL", "year": 2003}, {"title": "Fuzzy answer set programming: An introduction", "author": ["M. BLONDEEL", "S. SCHOCKAERT", "D. VERMEIR", "M. DE COCK"], "venue": "Soft Computing: State of the Art Theory and Novel Applications. Springer, 209\u2013222.", "citeRegEx": "BLONDEEL et al\\.,? 2013", "shortCiteRegEx": "BLONDEEL et al\\.", "year": 2013}, {"title": "On connected dominating sets of restricted diameter", "author": ["A. BUCHANAN", "J.S. SUNG", "V. BOGINSKI", "S. BUTENKO"], "venue": "European Journal of Operational Research.", "citeRegEx": "BUCHANAN et al\\.,? 2013", "shortCiteRegEx": "BUCHANAN et al\\.", "year": 2013}, {"title": "Model expansion in the presence of function symbols using constraint programming", "author": ["B. DE CAT", "B. BOGAERTS", "J. DEVRIENDT", "M. DENECKER"], "venue": "IEEE International Conference on Tools with Artificial Intelligence.", "citeRegEx": "CAT et al\\.,? 2013", "shortCiteRegEx": "CAT et al\\.", "year": 2013}, {"title": "A translational approach to constraint answer set solving", "author": ["C. DRESCHER", "T. WALSH"], "venue": "Theory and Practice of Logic Programming 10, 4-6, 465\u2013480.", "citeRegEx": "DRESCHER and WALSH,? 2010", "shortCiteRegEx": "DRESCHER and WALSH", "year": 2010}, {"title": "Answer set solving with lazy nogood neneration", "author": ["C. DRESCHER", "T. WALSH"], "venue": "Technical Communications of the 28th International Conference on Logic Programming. 188\u2013200.", "citeRegEx": "DRESCHER and WALSH,? 2012", "shortCiteRegEx": "DRESCHER and WALSH", "year": 2012}, {"title": "Conflict-driven answer set solving", "author": ["M. GEBSER", "B. KAUFMANN", "A. NEUMANN", "T. SCHAUB"], "venue": "Proceedings of the 20th International Joint Conference on Artificial Intelligence. MIT Press, 386.", "citeRegEx": "GEBSER et al\\.,? 2007", "shortCiteRegEx": "GEBSER et al\\.", "year": 2007}, {"title": "Conflict-driven answer set solving: From theory to practice", "author": ["M. GEBSER", "B. KAUFMANN", "T. SCHAUB"], "venue": "Artificial Intelligence 187, 52\u201389.", "citeRegEx": "GEBSER et al\\.,? 2012", "shortCiteRegEx": "GEBSER et al\\.", "year": 2012}, {"title": "Constraint answer set solving", "author": ["M. GEBSER", "M. OSTROWSKI", "T. SCHAUB"], "venue": "Proceedings of the 25th International Conference on Logic Programming. Springer, 235\u2013249.", "citeRegEx": "GEBSER et al\\.,? 2009", "shortCiteRegEx": "GEBSER et al\\.", "year": 2009}, {"title": "The stable model semantics for logic programming", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "Proceedings of the Fifth International Conference on Logic Programming. MIT Press, 1070\u20131080.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1988", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1988}, {"title": "Representing normal programs with clauses", "author": ["T. JANHUNEN"], "venue": "Proceedings of the 16th Eureopean Conference on Artificial Intelligence. 358\u2013362.", "citeRegEx": "JANHUNEN,? 2004", "shortCiteRegEx": "JANHUNEN", "year": 2004}, {"title": "Compiling fuzzy answer set programs to fuzzy propositional theories", "author": ["J. JANSSEN", "S. HEYMANS", "D. VERMEIR", "M.D. COCK"], "venue": "Proceedings of the 24th International Conference on Logic Programming. Springer Berlin Heidelberg, 362\u2013376.", "citeRegEx": "JANSSEN et al\\.,? 2008", "shortCiteRegEx": "JANSSEN et al\\.", "year": 2008}, {"title": "Constructing minimum connected dominating sets with bounded diameters in wireless networks", "author": ["KIM D.", "WU Y.", "LI Y.", "ZOU F.", "DU", "D.-Z."], "venue": "IEEE Transactions on Parallel and Distributed Systems, 147\u2013157.", "citeRegEx": "D. et al\\.,? 2009", "shortCiteRegEx": "D. et al\\.", "year": 2009}, {"title": "Cmodels-2: Sat-based answer set solver enhanced to non-tight programs", "author": ["Y. LIERLER", "M. MARATEA"], "venue": "LPNMR. 346\u2013350.", "citeRegEx": "LIERLER and MARATEA,? 2004", "shortCiteRegEx": "LIERLER and MARATEA", "year": 2004}, {"title": "Answer set programming via mixed integer programming", "author": ["G. LIU", "T. JANHUNEN", "I. NIEMELA"], "venue": "Proceedings of the 13th International Conference on Principles of Knowledge Representation and Reasoning. AAAI Press, 32\u201342.", "citeRegEx": "LIU et al\\.,? 2012", "shortCiteRegEx": "LIU et al\\.", "year": 2012}, {"title": "Integrating answer set programming and constraint logic programming", "author": ["V.S. MELLARKOD", "M. GELFOND", "Y. ZHANG"], "venue": "Annals of Mathematics and Artificial Intelligence 53, 1-4, 251\u2013287.", "citeRegEx": "MELLARKOD et al\\.,? 2008", "shortCiteRegEx": "MELLARKOD et al\\.", "year": 2008}, {"title": "A SAT solver primer", "author": ["D.G. MITCHELL"], "venue": "Bulletin of the EATCS 85, 112\u2013132.", "citeRegEx": "MITCHELL,? 2005", "shortCiteRegEx": "MITCHELL", "year": 2005}, {"title": "Fuzzy answer set programming", "author": ["D.V. NIEUWENBORGH", "M.D. COCK", "D. VERMEIR"], "venue": "Proceedings of Logics in Artificial Intelligence, 10th European Conference, JELIA 2006. Springer Berlin Heidelberg, 359\u2013372.", "citeRegEx": "NIEUWENBORGH et al\\.,? 2006", "shortCiteRegEx": "NIEUWENBORGH et al\\.", "year": 2006}, {"title": "Propagation via lazy clause generation", "author": ["O. OHRIMENKO", "P.J. STUCKEY", "M. CODISH"], "venue": "Constraints 14, 3, 357\u2013391.", "citeRegEx": "OHRIMENKO et al\\.,? 2009", "shortCiteRegEx": "OHRIMENKO et al\\.", "year": 2009}, {"title": "Handbook of Constraint Programming (Foundations of Artificial Intelligence)", "author": ["F. ROSSI", "P.V. BEEK", "T. WALSH"], "venue": "Elsevier Science, New York, NY.", "citeRegEx": "ROSSI et al\\.,? 2006", "shortCiteRegEx": "ROSSI et al\\.", "year": 2006}, {"title": "Extending and implementing the stable model semantics", "author": ["P. SIMONS", "I. NIEMEL\u00c4", "T. SOININEN"], "venue": "Artificial Intelligence 138, 1\u20132, 181\u2013234.", "citeRegEx": "SIMONS et al\\.,? 2002", "shortCiteRegEx": "SIMONS et al\\.", "year": 2002}, {"title": "Minizinc with functions", "author": ["P.J. STUCKEY", "G. TACK"], "venue": "Proceedings of the 10th International Conference on Integration of Artificial Intelligence (AI) and Operations Research (OR) techniques in Constraint Programming. Number 7874 in LNCS. Springer, 268\u2013283.", "citeRegEx": "STUCKEY and TACK,? 2013", "shortCiteRegEx": "STUCKEY and TACK", "year": 2013}, {"title": "Unfounded sets and well-founded semantics for general logic programs", "author": ["A. VAN GELDER", "K.A. ROSS", "J.S. SCHLIPF"], "venue": "Proceedings of the ACM Symposium on Principles of Database Systems. ACM, 221\u2013230.", "citeRegEx": "GELDER et al\\.,? 1988", "shortCiteRegEx": "GELDER et al\\.", "year": 1988}], "referenceMentions": [{"referenceID": 3, "context": "Answer Set Programming (Baral 2003) is a useful modelling paradigm to solve search and planning problems.", "startOffset": 23, "endOffset": 35}, {"referenceID": 9, "context": "Modern ASP solving (Gebser et al. 2007; Gebser et al. 2012) builds on propositional satisfiability (SAT) solving (Mitchell 2005).", "startOffset": 19, "endOffset": 59}, {"referenceID": 10, "context": "Modern ASP solving (Gebser et al. 2007; Gebser et al. 2012) builds on propositional satisfiability (SAT) solving (Mitchell 2005).", "startOffset": 19, "endOffset": 59}, {"referenceID": 19, "context": "2012) builds on propositional satisfiability (SAT) solving (Mitchell 2005).", "startOffset": 59, "endOffset": 74}, {"referenceID": 12, "context": "This is due to the difference in semantics of both systems; ASP solvers implement stable model semantics (Gelfond and Lifschitz 1988) which minimizes the number of variables that are true in a given logic program while a SAT solver only looks for an assignment that satisfies all the given clauses.", "startOffset": 105, "endOffset": 133}, {"referenceID": 22, "context": "Constraint Programming solvers (Rossi et al. 2006) and Mixed Integer Programming solvers, on the other hand, are excellent candidates for these problems as they support numeric variables natively.", "startOffset": 31, "endOffset": 50}, {"referenceID": 5, "context": "This problem has applications in computer networks (Kim et al. 2009; Buchanan et al. 2013).", "startOffset": 51, "endOffset": 90}, {"referenceID": 5, "context": "The MIP formulation as given in (Buchanan et al. 2013) encodes each distance variable with K propositional variables, meaning that the problem size increases with K .", "startOffset": 32, "endOffset": 54}, {"referenceID": 18, "context": "Examples of systems that use this approach are the AC SOLVER algorithm (Mellarkod et al. 2008), CLINGCON (Gebser et al.", "startOffset": 71, "endOffset": 94}, {"referenceID": 11, "context": "2008), CLINGCON (Gebser et al. 2009) and EZCSP (Balduccini 2009).", "startOffset": 16, "endOffset": 36}, {"referenceID": 2, "context": "2009) and EZCSP (Balduccini 2009).", "startOffset": 16, "endOffset": 33}, {"referenceID": 8, "context": "One way to achieve this is to introduce standard integer variables inside an ASP solver, and extending ASP\u2019s propagation engine to work like a CP solver (de Cat et al. 2013; Drescher and Walsh 2012).", "startOffset": 153, "endOffset": 198}, {"referenceID": 1, "context": "The second approach is given in our earlier work (Aziz et al. 2013a), and extends an existing CP solver with founded Boolean variables and normal rules.", "startOffset": 49, "endOffset": 68}, {"referenceID": 23, "context": "To implement the stable model semantics over these, it implements the source pointer technique (Simons et al. 2002) to prune unfounded sets (Van Gelder et al.", "startOffset": 95, "endOffset": 115}, {"referenceID": 10, "context": "1988) of variables as a propagator, similar to the ASP solver CLASP (Gebser et al. 2012).", "startOffset": 68, "endOffset": 88}, {"referenceID": 17, "context": "The first approach provides a translation from an ASP program augmented with numeric variables and constraints to a Mixed Integer Program (Liu et al. 2012).", "startOffset": 138, "endOffset": 155}, {"referenceID": 13, "context": "This is done using the level ranking mapping as given in (Janhunen 2004).", "startOffset": 57, "endOffset": 72}, {"referenceID": 7, "context": "The second approach (Drescher and Walsh 2010) encodes entire CP solving into ASP using the well-known eager CP decompositions to SAT.", "startOffset": 20, "endOffset": 45}, {"referenceID": 21, "context": "Unfortunately, this a priori translation of CP to SAT is already known to be highly inefficient in the CP community where it is much more efficient to translate lazily as in lazy clause generation (Ohrimenko et al. 2009).", "startOffset": 197, "endOffset": 220}, {"referenceID": 20, "context": "The formalism that is closest to BFASP in terms of removing this bottleneck is Fuzzy Answer Set Programming (FASP) (Nieuwenborgh et al. 2006; Blondeel et al. 2013).", "startOffset": 115, "endOffset": 163}, {"referenceID": 4, "context": "The formalism that is closest to BFASP in terms of removing this bottleneck is Fuzzy Answer Set Programming (FASP) (Nieuwenborgh et al. 2006; Blondeel et al. 2013).", "startOffset": 115, "endOffset": 163}, {"referenceID": 0, "context": "We have provided the translation in our previous work (Aziz et al. 2013), showing that BFASP subsumes FASP.", "startOffset": 54, "endOffset": 72}, {"referenceID": 14, "context": "Most importantly, from the implementation point of view, the MIP based unfounded set detection algorithm (Janssen et al. 2008) given for FASP only detects unfounded sets in a complete solution, which means that it cannot prune partial solutions that contain unfounded sets.", "startOffset": 105, "endOffset": 126}, {"referenceID": 16, "context": "Therefore, the algorithm has a similar shortcoming as CMODELS (Lierler and Maratea 2004) has in case of Boolean unfounded sets.", "startOffset": 62, "endOffset": 88}, {"referenceID": 0, "context": "This subgoal has been completed, and the most important features of BFASP were published in ICLP 2013 (Aziz et al. 2013).", "startOffset": 102, "endOffset": 120}, {"referenceID": 1, "context": "Prior to introducing BFASP, we extended a CP solver with founded Boolean variables and normal rules (Aziz et al. 2013a).", "startOffset": 100, "endOffset": 119}, {"referenceID": 24, "context": "In other words, we want to extend the flattening principles (Stuckey and Tack 2013) used in constraint languages to BFASP.", "startOffset": 60, "endOffset": 83}, {"referenceID": 11, "context": "\u2022 Identify research areas and benchmarks where BFASP can be applied and that cannot be efficiently solved by the current ASP, CP, and Constraint ASP (Gebser et al. 2009) systems.", "startOffset": 149, "endOffset": 169}], "year": 2014, "abstractText": "Answer Set Programming (ASP) is a powerful modelling formalism that is very efficient in solving combinatorial problems. ASP solvers implement the stable model semantics that eliminates circular derivations between Boolean variables from the solutions of a logic program. Due to this, ASP solvers are better suited than propositional satisfiability (SAT) and Constraint Programming (CP) solvers to solve a certain class of problems whose specification includes inductive definitions such as reachability in a graph. On the other hand, ASP solvers suffer from the grounding bottleneck that occurs due to their inability to model finite domain variables. Furthermore, the existing stable model semantics are not sufficient to disallow circular reasoning on the bounds of numeric variables. An example where this is required is in modelling shortest paths between nodes in a graph. Just as reachability can be encoded as an inductive definition with one or more base cases and recursive rules, shortest paths between nodes can also be modelled with similar base cases and recursive rules for their upper bounds. This deficiency of stable model semantics introduces another type of grounding bottleneck in ASP systems that cannot be removed by naively merging ASP with CP solvers, but requires a theoretical extension of the semantics from Booleans and normal rules to bounds over numeric variables and more general rules. In this work, we propose Bound Founded Answer Set Programming (BFASP) that resolves this issue and consequently, removes all types of grounding bottleneck inherent in ASP systems.", "creator": "LaTeX with hyperref package"}}}