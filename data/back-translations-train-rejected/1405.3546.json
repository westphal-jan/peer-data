{"id": "1405.3546", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-May-2014", "title": "Anytime Computation of Cautious Consequences in Answer Set Programming", "abstract": "Query answering in Answer Set Programming (ASP) is usually solved by computing (a subset of) the cautious consequences of a logic program. This task is computationally very hard, and there are programs for which computing cautious consequences is not viable in reasonable time. However, current ASP solvers produce the (whole) set of cautious consequences only at the end of their computation. This paper reports on strategies for computing cautious consequences, also introducing anytime algorithms able to produce sound answers during the computation.", "histories": [["v1", "Wed, 14 May 2014 15:46:33 GMT  (268kb)", "https://arxiv.org/abs/1405.3546v1", "To appear in Theory and Practice of Logic Programming"], ["v2", "Thu, 15 May 2014 09:27:38 GMT  (268kb)", "http://arxiv.org/abs/1405.3546v2", "To appear in Theory and Practice of Logic Programming"], ["v3", "Mon, 15 Sep 2014 12:29:17 GMT  (268kb)", "http://arxiv.org/abs/1405.3546v3", "To appear in Theory and Practice of Logic Programming"]], "COMMENTS": "To appear in Theory and Practice of Logic Programming", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mario alviano", "carmine dodaro", "francesco ricca"], "accepted": false, "id": "1405.3546"}, "pdf": {"name": "1405.3546.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["alviano@mat.unical.it)", "dodaro@mat.unical.it)", "ricca@mat.unical.it)"], "sections": [{"heading": null, "text": "ar Xiv: 140 5.35 46v3 [cs.AI] 1Appearance in Theory and Practice of Logical Programming (TPLP).KEYWORDS: programming of response sentences, answering queries, careful thinking, algorithms available at all times"}, {"heading": "1 Introduction", "text": "Answer Set Programming (ASP) is a declarative language for knowledge representation and reasoning (Niemela \"1999; Marek and Truszczyn\" ski 1999; Lifschitz 2002; Baral 2003; Gelfond and Kahl 2014) & & & 1 > Q \"1999; Marek and Truszczyn\" ski 1999; Lifschitz \"2002; Baral\" 2003; Gelfond and Kahl \"2014). In ASP, knowledge about an application domain is encrypted by a logic program whose semantics are given by a set of stable models (Gelfond and Lifschitz\" 1991), also referred to as answer sets. As for other non-monotonous formalisms, the resulting knowledge base can be queried using two possible modes of reasoning, which are usually described as brave (or gullible) and cautious (or skeptical). Brave reasoning provides answers to the input query, which must be verified by a stable model of the knowledge base for pre-stable reasoning by all."}, {"heading": "2 Preliminaries", "text": "Syntax and semantics of propositional ASP programs are briefly presented in this section. A quick overview of the most important steps of stable model search is also reported in order to provide the reader with essential knowledge about a process used but not substantially modified by the algorithms analyzed in this work. (For complementary introductory material on ASP, see Gelfond and Lifschitz 1991; Baral 2003; Gelfond and Kahl 2014.) A normal logic program consists of a set of rules of the following form: a0 \u2190 a1,..., am, Progressive am + 1,.., an (4), where each model ai (i = 0,..., n) denotes a propositional atom in a fixed, countable set A, as negation. For a rule r of the form (4), the atom a0 is denoted."}, {"heading": "3 Computation of Cautious Consequences", "text": "In fact, it is the case that most of them are able to abide by the rules that they have imposed on themselves. (...) In fact, it is the case that they are able to abide by the rules. (...) It is the case that they are able to abide by the rules. (...) It is not the case that they are able to break the rules. (...) It is the case that they are able to determine themselves. (...) It is the case that they are able to determine themselves. \"(...)\" It is so. \"(...)"}, {"heading": "4 Implementation and Experiment", "text": "We have implemented the algorithms presented in the previous section to analyze their performance. Details of the implementation, the benchmarks tested and the results achieved are reported in this section."}, {"heading": "4.1 Implementation", "text": "The algorithms described in Section 3 are implemented in an experimental branch of the ASP solver WASP (Alviano et al. 2013) distributed under the Apache 2.0 license. Source codes can be obtained from the queries of the GIT public repository https: / / github.com / alviano / wasp.git.WASP implements ASP solutions with backjumping (Gaschnig 1979), learning (Zhang et al. 2001), and reboots (Gomes et al. 1998). In detail, the WASP branch used in this experiment implements propagation support through program completion (Lierler and Maratea 2004), branching of heuristics and deletion strategies inspired by MiniSAT (Ee-n and So-rensson 2003a), and simplifications on subsumption and atomic elimination techniques described by Ee-Biere and 2005 ()."}, {"heading": "4.2 Benchmark settings", "text": "We compared the implemented algorithms against three benchmarks that correspond to different applications of careful reasoning, each briefly described. Multi-Context Systems Querying (MCS). Multi-context systems (Brewka and Eiter 2007) are a formalism for networking heterogeneous knowledge bases, so-called contexts that model the flow of information between contexts. Test cases in this benchmark are roughly those of the third ASP competition (Calimeri et al. 2014), in which each context is modeled by a normal logical program under the stable model semantics. We actually made the test cases more difficult by calculating all pairs of the form < c, a > one that applies in the context c, whereas in the original test cases a single pair of this form participated in the query. The benchmark contains 53 of the 73 instances submitted to the third ASP competition."}, {"heading": "4.3 Discussion of the results", "text": "The performance of the algorithms for calculating cautious consequences introduced in Section 3 can be examined from several perspectives. On the one hand, we want to know which solution works better and in which cases. On the other hand, we are interested in analyzing the rate at which each algorithm produces sound answers, while summarizing the total number of solved cases and the average duration. In particular, the first two columns report the total number of cases (#) and the number of cases solved by all solvers (# all), each of the remaining columns report the number of solved cases within the time span (sol.), the average duration of the solved cases (t) and the number of cases solved by all solvers (high). Compared to the individual process approaches, we point out that A4 solves more instances and also solves the fastest instances in the average instances (sol.), the average duration of the average duration of the solved instances (and the algorithms) is high."}, {"heading": "5 Related Work", "text": "The calculation of the cautious consequences in ASP is a feature that is available in two solvers, namely DLV (Maratea et al. 2008) and clasp (Gebser et al. 2012a). The algorithm implemented by DLV is an implicit enumeration of models, while bracket implies techniques for overestimating the reduction. However, our implementation differs from these solvers in particular in terms of the results produced during the calculation of cautious consequences. In fact, DLV does not print any form of estimation during the calculation, and Clasp only prints overestimates. Our implementation is instead at any time and therefore prints both underestimates and overestimates during the calculation. Underestimates provide solid answers even when the termination is not affordable in a reasonable time, and are therefore of practical importance for hard problems. It is interesting to observe that among the strategies supported by our implementation, A2, an algorithm is used at any time, a variant of the two very good classes."}, {"heading": "6 Conclusion", "text": "This paper analyzed several algorithms for calculating cautious consequences of ASP programs. At the time of this publication, ASP solvers do not implement always available algorithms, which means that the calculation must be stopped to achieve some cautious consequences. On the other hand, the calculation of cautious consequences is similar to the calculation of backbones of statement theories for which algorithms exist at all times. We have adapted one of these algorithms to careful thinking and demonstrated that underestimates can be achieved effectively in reasonable time even in hard cases. Furthermore, we have introduced a general strategy to obtain variants of existing algorithms as implemented by DLV and clp at all times. All algorithms, as well as a parallel implementation as a proof-of-concept, have been implemented in the WASP solver. Our empirical evaluation emphasizes that solid answers are predictable in the first seconds of the calculation, as implemented by DLV and clamp # 160; In addition, the performance of the system is to be paralleled and leaves room for this work in the future."}, {"heading": "LEONE, N., PFEIFER, G., FABER, W., EITER, T., GOTTLOB, G., PERRI, S., AND SCARCELLO, F. 2006.", "text": "The DLV System for Representation of Knowledge and Argumentation. ACM Transactions on Computational Logic 7, 3 (July), 499-562. LIERLER, Y. AND MARATEA, M. 2004. Cmodels-2: SAT-based answer set solver enhanced to nontight programs. In Proceedings of the 7th International Conference on Logic Programming and NonMonotonic Reasoning (LPNMR-7), V. Lifschitz and I. Niemela, Ed. LNAI, vol. 2923. Springer, 346-350. LIFSCHITZ, V. 2002. Answer set Programming and plan generation. Artificial Intelligence 138, 39-54. LIFSCHITZ, V. AND TURNER, H. 1994. Splitting a Logical program. In Proceedings of the 11th International Conference on Logic Programming (ICLP '94), P. Van Hentenryck, Ed. MIT Press, Santa Margherita Ligure, Italy, U23-Las."}, {"heading": "Appendix A Proof of Theorem 1", "text": "The proof is divided into several lemmas, where Pi, Li, Ui, Oi, Ii are used to mark the content of the variables P, L, U, O, I at step i of the calculation (i \u2265 0). Specifically, in Lemma 1, we will first show that underestimates form an increasing sequence and, on the contrary, overestimates form a decreasing sequence. Then, in Lemma 2, we will prove the properties of stable program models Pi-Li (i \u2265 0). The correctness of the estimates is shown in Lemma 3-4, and the termination of the algorithms in Lemma 5. Finally, in Lemma 6, we will extend the proof to variants using ComputeStableModel \u043a. Lemma 1 Ui Ui + 1 and Oi + 1 Oi Q for each i \u2265 0."}, {"heading": "Proof", "text": "VariableU is initially empty. EnumerationOfModels and OverestimateReduction reassign U only once. IterativeCoherenceTesting and UnderestimateReduction always enlarge the record stored in U by Set Union (line 4). With respect to variable O, it is initially Q and is constrained by fixed intersections at each reassignment (line 7 for OverestimateReduction; line 6 for the other procedures).Lemma 2 SM (Pi + 1-Li + 1) SM (Pi-Li) for each i-0. For IterativeCoherenceTesting and IterativePartialCoherenceTesting we also have SM (Pi + 1-Li + 1) = SM (Pi-Li) for each i-0."}, {"heading": "Proof", "text": "Variable P is only re-assigned by EnumerationOfModels and OverestimateReduction, where constraints are added to the previous program. Restrictions can only remove stable models (as a result of the Splitting Set Theorem by Lifschitz and Turner 1994). On the other hand, learned constraints stored in variable L are implicitly contained in the program stored by variable P, and therefore cannot change its semantics.Lemma 3"}, {"heading": "Oi \u2287 Q\u2229CC(P) for each i \u2265 0.", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Proof", "text": "The base case is true because O0 = Q. Suppose the claim applies to some i \u2265 0 and consider Oi + 1 = Oi-Ii + 1, where Ii + 1-SM (Pi-Li). By i-applications of Lemma 2 we get Ii + 1-SM (P0-L0), i.e. Ii + 1-SM (P)."}, {"heading": "Ui \u2286 Q\u2229CC(P) for each i \u2265 0.", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Proof", "text": "The base case is true because U0 = / 0. Let's say the claim applies to some i \u2265 0 and consider Ui + 1. If Ui + 1 = Ui, then the claim is true. Otherwise, we distinguish two traps. For IterativeCoherenceTesting and IterativePartialCoherenceTesting, Ui + 1 = Ui-Ui-Ui. Furthermore, for some a-Oi-Ui there is no M-SM (Pi-Li), so a / i-M because Ii + 1 =. From Lemma 2 we can conclude that there is no M-SM (P), so a / i-CC (P), i.e. a \""}, {"heading": "Proof", "text": "When EnumerationOfModels is used, termination is guaranteed because P has a limited number of stable models. OverestimatedReduction sets either U to O or reduces O, which initially equals Q, a finite amount. IterativeCoherenceTesting either increases U or decreases O and ends because O is finite and Ui Oi for each i \u2265 0 by lemmas 3 and 4. Termination of IterativePartialCoherenceTesting is guaranteed if restarts are properly delayed during the calculation, as it must already be done to guarantee the termination of a stable model search.Lemma 6 underestimates produced by ComputeStableModel \u043a are solid."}, {"heading": "Proof", "text": "Followed by the fact that L contains constraints implicit in the program stored by variable P."}], "references": [{"title": "WASP: A native ASP solver based on constraint learning", "author": ["M. ALVIANO", "C. DODARO", "W. FABER", "N. LEONE", "F. RICCA"], "venue": "LPNMR, P. Cabalar and T. C. Son, Eds. LNCS, vol. 8148. Springer, 54\u201366.", "citeRegEx": "ALVIANO et al\\.,? 2013", "shortCiteRegEx": "ALVIANO et al\\.", "year": 2013}, {"title": "Dynamic magic sets and super-coherent answer set programs", "author": ["M. ALVIANO", "W. FABER"], "venue": "AI Communications. IOS Press 24, 2, 125\u2013145.", "citeRegEx": "ALVIANO and FABER,? 2011", "shortCiteRegEx": "ALVIANO and FABER", "year": 2011}, {"title": "The disjunctive datalog system DLV", "author": ["M. ALVIANO", "W. FABER", "N. LEONE", "S. PERRI", "G. PFEIFER", "G. TERRACINA"], "venue": "Datalog 2.0, G. Gottlob, Ed. Vol. 6702. Springer Berlin/Heidelberg, 282\u2013301.", "citeRegEx": "ALVIANO et al\\.,? 2011", "shortCiteRegEx": "ALVIANO et al\\.", "year": 2011}, {"title": "Answer sets for consistent query answering in inconsistent databases", "author": ["M. ARENAS", "L.E. BERTOSSI", "J. CHOMICKI"], "venue": "Theory and Practice of Logic Programming 3, 4-5, 393\u2013424.", "citeRegEx": "ARENAS et al\\.,? 2003", "shortCiteRegEx": "ARENAS et al\\.", "year": 2003}, {"title": "Knowledge Representation, Reasoning and Declarative Problem Solving", "author": ["C. BARAL"], "venue": "Cambridge University Press.", "citeRegEx": "BARAL,? 2003", "shortCiteRegEx": "BARAL", "year": 2003}, {"title": "Equilibria in heterogeneous nonmonotonic multi-context systems", "author": ["G. BREWKA", "T. EITER"], "venue": "AAAI. AAAI Press, 385\u2013390.", "citeRegEx": "BREWKA and EITER,? 2007", "shortCiteRegEx": "BREWKA and EITER", "year": 2007}, {"title": "The third open answer set programming competition", "author": ["F. CALIMERI", "G. IANNI", "F. RICCA"], "venue": "Theory and Practice of Logic Programming 14, 1, 117\u2013135.", "citeRegEx": "CALIMERI et al\\.,? 2014", "shortCiteRegEx": "CALIMERI et al\\.", "year": 2014}, {"title": "A machine program for theorem proving", "author": ["M. DAVIS", "G. LOGEMANN", "D. LOVELAND"], "venue": "Commun. ACM 5, 394\u2013397.", "citeRegEx": "DAVIS et al\\.,? 1962", "shortCiteRegEx": "DAVIS et al\\.", "year": 1962}, {"title": "Effective preprocessing in SAT through variable and clause elimination", "author": ["N. E\u00c9N", "A. BIERE"], "venue": "SAT. LNCS, vol. 3569. Springer, 61\u201375.", "citeRegEx": "E\u00c9N and BIERE,? 2005", "shortCiteRegEx": "E\u00c9N and BIERE", "year": 2005}, {"title": "An extensible SAT-solver", "author": ["N. E\u00c9N", "N. S\u00d6RENSSON"], "venue": "SAT, E. Giunchiglia and A. Tacchella, Eds. LNCS, vol. 2919. Springer, 502\u2013518.", "citeRegEx": "E\u00c9N and S\u00d6RENSSON,? 2003a", "shortCiteRegEx": "E\u00c9N and S\u00d6RENSSON", "year": 2003}, {"title": "Temporal induction by incremental sat solving", "author": ["N. E\u00c9N", "N. S\u00d6RENSSON"], "venue": "Electr. Notes Theor. Comput. Sci. 89, 4, 543\u2013560.", "citeRegEx": "E\u00c9N and S\u00d6RENSSON,? 2003b", "shortCiteRegEx": "E\u00c9N and S\u00d6RENSSON", "year": 2003}, {"title": "Data integration and answer set programming", "author": ["T. EITER"], "venue": "LPNMR, C. Baral, G. Greco, N. Leone, and G. Terracina, Eds. LNCS, vol. 3662. Springer, 13\u201325.", "citeRegEx": "EITER,? 2005", "shortCiteRegEx": "EITER", "year": 2005}, {"title": "Combining answer set programming with description logics for the semantic web", "author": ["T. EITER", "G. IANNI", "T. LUKASIEWICZ", "R. SCHINDLAUER", "H. TOMPITS"], "venue": "Artif. Intell. 172, 12-13, 1495\u2013 1539.", "citeRegEx": "EITER et al\\.,? 2008", "shortCiteRegEx": "EITER et al\\.", "year": 2008}, {"title": "Performance measurement and analysis of certain search algorithms", "author": ["J. GASCHNIG"], "venue": "Ph.D. thesis, Carnegie Mellon University, Pittsburgh, PA, USA. Technical Report CMU-CS-79-124.", "citeRegEx": "GASCHNIG,? 1979", "shortCiteRegEx": "GASCHNIG", "year": 1979}, {"title": "Advances in gringo series 3", "author": ["M. GEBSER", "R. KAMINSKI", "A. K\u00d6NIG", "T. SCHAUB"], "venue": "LPNMR, J. P. Delgrande and W. Faber, Eds. LNCS, vol. 6645. Springer, 345\u2013351.", "citeRegEx": "GEBSER et al\\.,? 2011", "shortCiteRegEx": "GEBSER et al\\.", "year": 2011}, {"title": "Conflict-driven answer set solving: From theory to practice", "author": ["M. GEBSER", "B. KAUFMANN", "T. SCHAUB"], "venue": "Artif. Intell. 187, 52\u201389.", "citeRegEx": "GEBSER et al\\.,? 2012a", "shortCiteRegEx": "GEBSER et al\\.", "year": 2012}, {"title": "Multi-threaded ASP solving with clasp", "author": ["M. GEBSER", "B. KAUFMANN", "T. SCHAUB"], "venue": "Theory and Practice of Logic Programming 12, 4-5, 525\u2013545.", "citeRegEx": "GEBSER et al\\.,? 2012b", "shortCiteRegEx": "GEBSER et al\\.", "year": 2012}, {"title": "Knowledge Representation, Reasoning, and the Design of Intelligent Agents: The Answer-Set Programming Approach", "author": ["M. GELFOND", "Y. KAHL"], "venue": "Cambridge University Press.", "citeRegEx": "GELFOND and KAHL,? 2014", "shortCiteRegEx": "GELFOND and KAHL", "year": 2014}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "New Generation Computing 9, 365\u2013385.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1991", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1991}, {"title": "Boosting combinatorial search through randomization", "author": ["C.P. GOMES", "B. SELMAN", "H.A. KAUTZ"], "venue": "Proceedings of AAAI/IAAI 1998. AAAI Press, 431\u2013437.", "citeRegEx": "GOMES et al\\.,? 1998", "shortCiteRegEx": "GOMES et al\\.", "year": 1998}, {"title": "Binding propagation techniques for the optimization of bound disjunctive queries", "author": ["S. GRECO"], "venue": "IEEE Transactions on Knowledge and Data Engineering 15, 2 (March/April), 368\u2013385.", "citeRegEx": "GRECO,? 2003", "shortCiteRegEx": "GRECO", "year": 2003}, {"title": "Algorithms for computing backbones of propositional formulae", "author": ["M. JANOTA", "I. LYNCE", "J. MARQUES-SILVA"], "venue": "AI Commun.. To appear.", "citeRegEx": "JANOTA et al\\.,? 2014", "shortCiteRegEx": "JANOTA et al\\.", "year": 2014}, {"title": "The international SAT solver competitions", "author": ["M. J\u00c4RVISALO", "D.L. BERRE", "O. ROUSSEL", "L. SIMON"], "venue": "AI Magazine 33, 1.", "citeRegEx": "J\u00c4RVISALO et al\\.,? 2012", "shortCiteRegEx": "J\u00c4RVISALO et al\\.", "year": 2012}, {"title": "Efficient querying of inconsistent databases with binary integer programming", "author": ["P.G. KOLAITIS", "E. PEMA", "TAN", "W.-C."], "venue": "PVLDB 6, 6, 397\u2013408.", "citeRegEx": "KOLAITIS et al\\.,? 2013", "shortCiteRegEx": "KOLAITIS et al\\.", "year": 2013}, {"title": "The DLV system for knowledge representation and reasoning", "author": ["N. LEONE", "G. PFEIFER", "W. FABER", "T. EITER", "G. GOTTLOB", "S. PERRI", "F. SCARCELLO"], "venue": "ACM Transactions on Computational Logic 7, 3 (July), 499\u2013562.", "citeRegEx": "LEONE et al\\.,? 2006", "shortCiteRegEx": "LEONE et al\\.", "year": 2006}, {"title": "Cmodels-2: SAT-based answer set solver enhanced to nontight programs", "author": ["Y. LIERLER", "M. MARATEA"], "venue": "Proceedings of the 7th International Conference on Logic Programming and NonMonotonic Reasoning (LPNMR-7), V. Lifschitz and I. Niemel\u00e4, Eds. LNAI, vol. 2923. Springer, 346\u2013 350.", "citeRegEx": "LIERLER and MARATEA,? 2004", "shortCiteRegEx": "LIERLER and MARATEA", "year": 2004}, {"title": "Answer set programming and plan generation", "author": ["V. LIFSCHITZ"], "venue": "Artificial Intelligence 138, 39\u201354.", "citeRegEx": "LIFSCHITZ,? 2002", "shortCiteRegEx": "LIFSCHITZ", "year": 2002}, {"title": "Splitting a logic program", "author": ["V. LIFSCHITZ", "H. TURNER"], "venue": "Proceedings of the 11th International Conference on Logic Programming (ICLP\u201994), P. Van Hentenryck, Ed. MIT Press, Santa Margherita Ligure, Italy, 23\u201337.", "citeRegEx": "LIFSCHITZ and TURNER,? 1994", "shortCiteRegEx": "LIFSCHITZ and TURNER", "year": 1994}, {"title": "Optimal speedup of Las Vegas algorithms", "author": ["M. LUBY", "A. SINCLAIR", "D. ZUCKERMAN"], "venue": "Inf. Process. Lett. 47, 173\u2013180.", "citeRegEx": "LUBY et al\\.,? 1993", "shortCiteRegEx": "LUBY et al\\.", "year": 1993}, {"title": "Consistent query answering via ASP from different perspectives: Theory and practice", "author": ["M. MANNA", "F. RICCA", "G. TERRACINA"], "venue": "Theory and Practice of Logic Programming 13, 2, 227\u2013252.", "citeRegEx": "MANNA et al\\.,? 2013", "shortCiteRegEx": "MANNA et al\\.", "year": 2013}, {"title": "Look-back techniques and heuristics in dlv: Implementation, evaluation, and comparison to qbf solvers", "author": ["M. MARATEA", "F. RICCA", "W. FABER", "N. LEONE"], "venue": "J. Algorithms 63, 1-3, 70\u201389.", "citeRegEx": "MARATEA et al\\.,? 2008", "shortCiteRegEx": "MARATEA et al\\.", "year": 2008}, {"title": "Stable models and an alternative logic programming paradigm", "author": ["V.W. MAREK", "M. TRUSZCZY\u0143SKI"], "venue": "The Logic Programming Paradigm \u2013 A 25-Year Perspective, K. R. Apt, V. W. Marek, M. Truszczy\u0144ski, and D. S. Warren, Eds. Springer Verlag, 375\u2013398.", "citeRegEx": "MAREK and TRUSZCZY\u0143SKI,? 1999", "shortCiteRegEx": "MAREK and TRUSZCZY\u0143SKI", "year": 1999}, {"title": "On computing backbones of propositional theories", "author": ["J. MARQUES-SILVA", "M. JANOTA", "I. LYNCE"], "venue": "ECAI, H. Coelho, R. Studer, and M. Wooldridge, Eds. Frontiers in Artificial Intelligence and Applications, vol. 215. IOS Press, 15\u201320.", "citeRegEx": "MARQUES.SILVA et al\\.,? 2010", "shortCiteRegEx": "MARQUES.SILVA et al\\.", "year": 2010}, {"title": "Logic programming with stable model semantics as constraint programming paradigm", "author": ["I. NIEMEL\u00c4"], "venue": "Annals of Mathematics and Artificial Intelligence 25, 3\u20134, 241\u2013273.", "citeRegEx": "NIEMEL\u00c4,? 1999", "shortCiteRegEx": "NIEMEL\u00c4", "year": 1999}, {"title": "Minimal assignments for bounded model checking", "author": ["K. RAVI", "F. SOMENZI"], "venue": "TACAS, K. Jensen and A. Podelski, Eds. LNCS, vol. 2988. Springer, 31\u201345.", "citeRegEx": "RAVI and SOMENZI,? 2004", "shortCiteRegEx": "RAVI and SOMENZI", "year": 2004}, {"title": "Backbones in optimization and approximation", "author": ["J.K. SLANEY", "T. WALSH"], "venue": "IJCAI, B. Nebel, Ed. Morgan Kaufmann, 254\u2013259.", "citeRegEx": "SLANEY and WALSH,? 2001", "shortCiteRegEx": "SLANEY and WALSH", "year": 2001}, {"title": "Efficient conflict driven learning in boolean satisfiability solver", "author": ["L. ZHANG", "C.F. MADIGAN", "M.W. MOSKEWICZ", "S. MALIK"], "venue": "Proceedings of the International Conference on ComputerAided Design (ICCAD 2001). 279\u2013285.", "citeRegEx": "ZHANG et al\\.,? 2001", "shortCiteRegEx": "ZHANG et al\\.", "year": 2001}], "referenceMentions": [{"referenceID": 26, "context": "Answer Set Programming (ASP) is a declarative language for knowledge representation and reasoning (Niemel\u00e4 1999; Marek and Truszczy\u0144ski 1999; Lifschitz 2002; Baral 2003; Gelfond and Kahl 2014).", "startOffset": 98, "endOffset": 192}, {"referenceID": 4, "context": "Answer Set Programming (ASP) is a declarative language for knowledge representation and reasoning (Niemel\u00e4 1999; Marek and Truszczy\u0144ski 1999; Lifschitz 2002; Baral 2003; Gelfond and Kahl 2014).", "startOffset": 98, "endOffset": 192}, {"referenceID": 17, "context": "Answer Set Programming (ASP) is a declarative language for knowledge representation and reasoning (Niemel\u00e4 1999; Marek and Truszczy\u0144ski 1999; Lifschitz 2002; Baral 2003; Gelfond and Kahl 2014).", "startOffset": 98, "endOffset": 192}, {"referenceID": 18, "context": "In ASP, knowledge concerning an application domain is encoded by a logic program whose semantics is given by a set of stable models (Gelfond and Lifschitz 1991), also referred to as answer sets.", "startOffset": 132, "endOffset": 160}, {"referenceID": 3, "context": "Among them are consistent query answering (Arenas et al. 2003), data integration (Eiter 2005), and ontologybased reasoning (Eiter et al.", "startOffset": 42, "endOffset": 62}, {"referenceID": 11, "context": "2003), data integration (Eiter 2005), and ontologybased reasoning (Eiter et al.", "startOffset": 24, "endOffset": 36}, {"referenceID": 12, "context": "2003), data integration (Eiter 2005), and ontologybased reasoning (Eiter et al. 2008).", "startOffset": 66, "endOffset": 85}, {"referenceID": 24, "context": "A common practice in ASP is to reduce query answering to the computation of a subset of the cautious consequences of a logic program (Leone et al. 2006), where cautious consequences are atoms belonging to all stable models.", "startOffset": 133, "endOffset": 152}, {"referenceID": 24, "context": "Cautious reasoning has been implemented by two ASP solvers, namely DLV (Leone et al. 2006) and clasp (Gebser et al.", "startOffset": 71, "endOffset": 90}, {"referenceID": 15, "context": "2006) and clasp (Gebser et al. 2012a), as a variant of their stable model search algorithms.", "startOffset": 16, "endOffset": 37}, {"referenceID": 32, "context": "The paper provides insights in this respect, showing that underestimates can actually be obtained by improving algorithms employed by ASP systems, or adapting to ASP the iterative consistency testing algorithm for computing backbones of propositional theories (Marques-Silva et al. 2010).", "startOffset": 260, "endOffset": 287}, {"referenceID": 18, "context": "The definition of stable model is based on a notion of program reduct (Gelfond and Lifschitz 1991): Let P be a normal logic program, and I an interpretation.", "startOffset": 70, "endOffset": 98}, {"referenceID": 7, "context": "Given a normal ASP program P, its stable models can be computed by means of an algorithm similar to the DPLL backtracking search algorithm (Davis et al. 1962) adopted by SAT solvers.", "startOffset": 139, "endOffset": 158}, {"referenceID": 13, "context": "When a conflict is found, previous choices and their consequences are unrolled until consistency is restored (backjumping; Gaschnig 1979).", "startOffset": 109, "endOffset": 137}, {"referenceID": 36, "context": "This learning step corresponds to clause learning in SAT (Zhang et al. 2001), and is usually complemented with heuristic techniques that control the number of learned constraints, and possibly restart the computation in order to explore different branches of the search tree.", "startOffset": 57, "endOffset": 76}, {"referenceID": 19, "context": "Restart policies are based on specific sequences of thresholds that guarantee termination of the algorithm (Gomes et al. 1998; Luby et al. 1993).", "startOffset": 107, "endOffset": 144}, {"referenceID": 28, "context": "Restart policies are based on specific sequences of thresholds that guarantee termination of the algorithm (Gomes et al. 1998; Luby et al. 1993).", "startOffset": 107, "endOffset": 144}, {"referenceID": 2, "context": "Among them are the algorithms implemented by the ASP solvers DLV (Alviano et al. 2011) and clasp (Gebser et al.", "startOffset": 65, "endOffset": 86}, {"referenceID": 15, "context": "2011) and clasp (Gebser et al. 2012a), respectively called enumeration of models and overestimate reduction in the following.", "startOffset": 16, "endOffset": 37}, {"referenceID": 32, "context": "One of these strategies is iterative coherence testing, an adaptation of an algorithm computing backbones of propositional formulas (Marques-Silva et al. 2010).", "startOffset": 132, "endOffset": 159}, {"referenceID": 0, "context": "Algorithms described in Section 3 are implemented in an experimental branch of the ASP solver WASP (Alviano et al. 2013), distributed under the Apache 2.", "startOffset": 99, "endOffset": 120}, {"referenceID": 13, "context": "WASP implements ASP solving with backjumping (Gaschnig 1979), learning (Zhang et al.", "startOffset": 45, "endOffset": 60}, {"referenceID": 36, "context": "WASP implements ASP solving with backjumping (Gaschnig 1979), learning (Zhang et al. 2001) and restarts (Gomes et al.", "startOffset": 71, "endOffset": 90}, {"referenceID": 19, "context": "2001) and restarts (Gomes et al. 1998).", "startOffset": 19, "endOffset": 38}, {"referenceID": 25, "context": "More in detail, the branch of WASP used in this experiment implements support propagation via program completion (Lierler and Maratea 2004), branching heuristics and deletion strategy inspired by MiniSAT (E\u00e9n and S\u00f6rensson 2003a), and simplifications via subsumption and atom elimination techniques as described by E\u00e9n and Biere (2005).", "startOffset": 113, "endOffset": 139}, {"referenceID": 0, "context": "Algorithms described in Section 3 are implemented in an experimental branch of the ASP solver WASP (Alviano et al. 2013), distributed under the Apache 2.0 license. Source codes can be downloaded from the branch queries of the public GIT repository https://github.com/alviano/wasp.git. WASP implements ASP solving with backjumping (Gaschnig 1979), learning (Zhang et al. 2001) and restarts (Gomes et al. 1998). More in detail, the branch of WASP used in this experiment implements support propagation via program completion (Lierler and Maratea 2004), branching heuristics and deletion strategy inspired by MiniSAT (E\u00e9n and S\u00f6rensson 2003a), and simplifications via subsumption and atom elimination techniques as described by E\u00e9n and Biere (2005). (Actually, atom elimination, called variable elimination in SAT, is not applied on atoms involved in queries.", "startOffset": 100, "endOffset": 746}, {"referenceID": 5, "context": "Multi-context systems (Brewka and Eiter 2007) are a formalism for interlinking heterogeneous knowledge bases, called contexts, using bridge rules that model the flow of information among contexts.", "startOffset": 22, "endOffset": 45}, {"referenceID": 6, "context": "Testcases in this benchmark are roughly those of the third ASP competition (Calimeri et al. 2014), where each context is modeled by a normal logic program under the stable model semantics.", "startOffset": 75, "endOffset": 97}, {"referenceID": 3, "context": "Consistent Query Answering (CQA) is a well-known application of ASP (Arenas et al. 2003; Manna et al. 2013) described in Section 1.", "startOffset": 68, "endOffset": 107}, {"referenceID": 29, "context": "Consistent Query Answering (CQA) is a well-known application of ASP (Arenas et al. 2003; Manna et al. 2013) described in Section 1.", "startOffset": 68, "endOffset": 107}, {"referenceID": 14, "context": "5 (Gebser et al. 2011), whose execution time is not included in our analysis because our focus is on propositional programs.", "startOffset": 2, "endOffset": 22}, {"referenceID": 3, "context": "Consistent Query Answering (CQA) is a well-known application of ASP (Arenas et al. 2003; Manna et al. 2013) described in Section 1. We considered the benchmark proposed by Kolaitis et al. (2013), and in particular query Q3 encoded according to the rewritings by Manna et al.", "startOffset": 69, "endOffset": 195}, {"referenceID": 30, "context": "The computation of cautious consequences in ASP is a feature available in two solvers, namely DLV (Maratea et al. 2008) and clasp (Gebser et al.", "startOffset": 98, "endOffset": 119}, {"referenceID": 15, "context": "2008) and clasp (Gebser et al. 2012a).", "startOffset": 16, "endOffset": 37}, {"referenceID": 16, "context": "Clasp, being a parallel ASP solver (Gebser et al. 2012b), also supports the parallel computation of cautious consequences by means of the overestimate reduction algorithm.", "startOffset": 35, "endOffset": 56}, {"referenceID": 32, "context": "The computation of cautious consequences of a ground program is related to the problem of backbone computations of propositional formulas (Marques-Silva et al. 2010; Slaney and Walsh 2001).", "startOffset": 138, "endOffset": 188}, {"referenceID": 35, "context": "The computation of cautious consequences of a ground program is related to the problem of backbone computations of propositional formulas (Marques-Silva et al. 2010; Slaney and Walsh 2001).", "startOffset": 138, "endOffset": 188}, {"referenceID": 32, "context": "Several algorithms for computing backbones of propositional formulas are based on variants of the iterative consistency testing algorithm (Marques-Silva et al. 2010; Janota et al. 2014), which essentially corresponds to the iterative coherence testing algorithm analyzed in this paper.", "startOffset": 138, "endOffset": 185}, {"referenceID": 21, "context": "Several algorithms for computing backbones of propositional formulas are based on variants of the iterative consistency testing algorithm (Marques-Silva et al. 2010; Janota et al. 2014), which essentially corresponds to the iterative coherence testing algorithm analyzed in this paper.", "startOffset": 138, "endOffset": 185}, {"referenceID": 34, "context": "Backbone search algorithms usually feature additional techniques for removing candidates to be tested, such as implicant reduction and core-based chunking (Ravi and Somenzi 2004).", "startOffset": 155, "endOffset": 178}, {"referenceID": 21, "context": "Core-based chunking, instead, requires a portfolio of algorithms (Janota et al. 2014) in order to be effective, which is beyond the scope of this paper.", "startOffset": 65, "endOffset": 85}, {"referenceID": 20, "context": "Combinations with query optimization techniques such as magic sets (Greco 2003; Alviano and Faber 2011) are possible but not the focus of the paper.", "startOffset": 67, "endOffset": 103}, {"referenceID": 1, "context": "Combinations with query optimization techniques such as magic sets (Greco 2003; Alviano and Faber 2011) are possible but not the focus of the paper.", "startOffset": 67, "endOffset": 103}], "year": 2014, "abstractText": "Query answering in Answer Set Programming (ASP) is usually solved by computing (a subset of) the cautious consequences of a logic program. This task is computationally very hard, and there are programs for which computing cautious consequences is not viable in reasonable time. However, current ASP solvers produce the (whole) set of cautious consequences only at the end of their computation. This paper reports on strategies for computing cautious consequences, also introducing anytime algorithms able to produce sound answers during the computation. To appear in Theory and Practice of Logic Programming (TPLP).", "creator": "gnuplot 4.6 patchlevel 4"}}}