{"id": "1405.3637", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-May-2014", "title": "Vicious Circle Principle and Logic Programs with Aggregates", "abstract": "The paper presents a knowledge representation language $\\mathcal{A}log$ which extends ASP with aggregates. The goal is to have a language based on simple syntax and clear intuitive and mathematical semantics. We give some properties of $\\mathcal{A}log$, an algorithm for computing its answer sets, and comparison with other approaches.", "histories": [["v1", "Wed, 14 May 2014 19:36:38 GMT  (41kb)", "https://arxiv.org/abs/1405.3637v1", null], ["v2", "Thu, 15 May 2014 02:42:50 GMT  (41kb)", "http://arxiv.org/abs/1405.3637v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["michael gelfond", "yuanlin zhang"], "accepted": false, "id": "1405.3637"}, "pdf": {"name": "1405.3637.pdf", "metadata": {"source": "CRF", "title": "Vicious Circle Principle and Logic Programs with Aggregates", "authors": ["Michael Gelfond", "Yuanlin Zhang"], "emails": ["y.zhang}@ttu.edu)"], "sections": [{"heading": null, "text": "ar Xiv: 140 5.36 37v2 [cs.AI] 1KEYWORDS: Aggregates, Answer Set Programming"}, {"heading": "1 Introduction", "text": "The development of the answer to this question limits our attention to aggregates based on the principles of the general public (Gelfond and Lifschitz 1991), which have led to the emergence of a strong knowledge representation. (Editor's note: There are a number of approaches based on recursive principles and other important phenomena of natural language.) The design of algorithms for answering questions and answers in systems called ASP solvers (Leone et al. 2006) allowed language to become a powerful tool for building non-trivial knowledge (Brewka et al. 2011); Erdem et al. 2012 there are a number of extensions of ASP, which have also contributed to this success. This paper is about such an extension - logical programs with aggregates, which we define functions defined on objects of the domain. (For the simplicity of exposure, we limit our attention to aggregates)."}, {"heading": "2.1 Syntax", "text": "Unless it is a type of term that expresses the {X} (1) format as an expression of the {X} (1) format, in which there is a collection of regular letters, and it is a list of variables that occur in cond. We refer to an expression {X} as an expression of the {X} format (1), in which f \"A, cond is a collection of regular letters, and X\" is a list of variables that occur in cond. We refer to an expression {X) as a sentence name. An occurrence of a variable from X (2) is mentioned within (2). If the condition from (2) contains no variables, it is read as a set of all objects in the program."}, {"heading": "2.2 Semantics", "text": "This year it has reached the point where it will be able to remention the aforementioned hsci-eSrlcnlhSrc\u00fch. () D \"i,\" he says, \"it is able to reeenln.\""}, {"heading": "4 An Algorithm for Computing Answer Sets", "text": "In this section, we briefly outline an algorithm, called A-solver, for calculating the response rates of A-log programs. < / Fa) We follow tradition and limit our attention to programs without classical negation. (In this section, we only look at programs of this type.) By an atom, we mean an e-atom or an aggregated atom that is neither strongly satisfied nor strongly disproved by me. \u2022 A number of atoms is strongly satisfied by me if all atoms in S are strongly satisfied. \u2022 S is strongly disproved by me if for every partial interpretation I contain an atom that is neither strongly satisfied nor strongly disproved by me."}, {"heading": "5 Comparison with Other Approaches", "text": "There are a large number of approaches to the syntax and semantics of ASP systems."}, {"heading": "6 Conclusion and Future Work", "text": "We believe that language meets the design criteria of simplicity of syntax and formal and informal semantics, and there are many ways in which this work can be continued; the first and simplest step is to extend the A-log by allowing selection rules similar to those of (Niemela et al. 2002), which can be done naturally by combining ideas from this and that essay (Gelfond 2002). We also plan to examine the mapping of the A-log in logic programs with any kind of statement formula. There are many interesting and, we believe, important questions related to the optimization of the A-log solver from Section 4. Once clarity has been achieved in this area, we will of course try to address the issues of implementation."}, {"heading": "7 Acknowledgment", "text": "We thank Amelia Harrison, Patrick Kahl, Vladimir Lifschitz and Tran Cao Son for their useful comments. The work of the authors was partially supported by the NSF grant IIS-1018031."}, {"heading": "8 Appendix", "text": "In this appendix it is often said that a row of A is the letter and a rule of A is the answer of A. (We assume that such a rule (r) of A (r) of A (r) of A (r) of A (r) of A (n) of A (n) of A (r) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of A (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H of H (n) of H (n) of H (n) of H (n) of H of H (n) of H (n) of H of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H (n) of H of H (n) of H (n) of H (n) of H (n) of H (n) of H of H (n) of H (n) of H (n) of H (n) of H of"}], "references": [{"title": "Towards answer set programming with sorts", "author": ["E. BALAI", "M. GELFOND", "Y. ZHANG"], "venue": "LPNMR. 135\u2013147.", "citeRegEx": "BALAI et al\\.,? 2013", "shortCiteRegEx": "BALAI et al\\.", "year": 2013}, {"title": "Answer set programming at a glance", "author": ["G. BREWKA", "T. EITER", "M. TRUSZCZYNSKI"], "venue": "Commun. ACM 54, 12, 92\u2013103.", "citeRegEx": "BREWKA et al\\.,? 2011", "shortCiteRegEx": "BREWKA et al\\.", "year": 2011}, {"title": "Complexity and expressive power of logic programming", "author": ["E. DANTSIN", "T. EITER", "G. GOTTLOB", "A. VORONKOV"], "venue": "ACM Comput. Surv. 33, 3, 374\u2013425.", "citeRegEx": "DANTSIN et al\\.,? 2001", "shortCiteRegEx": "DANTSIN et al\\.", "year": 2001}, {"title": "Theory and practice of answer set programming", "author": ["E. ERDEM", "J. LEE", "Y. LIERLER"], "venue": "AAAI-2012 Tutorial (http://peace.eas.asu.edu/aaai12tutorial/asp-tutorial-aaai.pdf).", "citeRegEx": "ERDEM et al\\.,? 2012", "shortCiteRegEx": "ERDEM et al\\.", "year": 2012}, {"title": "Semantics and complexity of recursive aggregates in answer set programming", "author": ["W. FABER", "G. PFEIFER", "N. LEONE"], "venue": "Artificial Intelligence 175, 1, 278\u2013298.", "citeRegEx": "FABER et al\\.,? 2011", "shortCiteRegEx": "FABER et al\\.", "year": 2011}, {"title": "Design and implementation of aggregate functions in the dlv system", "author": ["W. FABER", "G. PFEIFER", "N. LEONE", "T. DELL\u2019ARMI", "G. IELPA"], "venue": "TPLP 8,", "citeRegEx": "FABER et al\\.,? \\Q2008\\E", "shortCiteRegEx": "FABER et al\\.", "year": 2008}, {"title": "Predicativity", "author": ["S. FEFERMAN"], "venue": "http://math.stanford.edu/~feferman/papers/. FERRARIS, P. 2005. Answer sets for propositional theories. In LPNMR. 119\u2013131.", "citeRegEx": "FEFERMAN,? 2002", "shortCiteRegEx": "FEFERMAN", "year": 2002}, {"title": "On the implementation of weight constraint rules in conflict-driven asp solvers", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "T. SCHAUB"], "venue": "ICLP. 250\u2013264.", "citeRegEx": "GEBSER et al\\.,? 2009", "shortCiteRegEx": "GEBSER et al\\.", "year": 2009}, {"title": "Conflict-driven answer set enumeration", "author": ["M. GEBSER", "B. KAUFMAN", "A. NEUMANN", "T. SCHAUB"], "venue": "Proceedings of the 9th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201907), C. Baral, G. Brewka, and J. Schlipf, Eds. lnai, vol. 3662. Springer, 136\u2013148.", "citeRegEx": "GEBSER et al\\.,? 2007", "shortCiteRegEx": "GEBSER et al\\.", "year": 2007}, {"title": "Representing Knowledge in A-Prolog", "author": ["M. GELFOND"], "venue": "Computational Logic: Logic Programming and Beyond, Essays in Honour of Robert A. Kowalski, Part II, A. C. Kakas and F. Sadri, Eds. Vol. 2408. Springer Verlag, Berlin, 413\u2013451.", "citeRegEx": "GELFOND,? 2002", "shortCiteRegEx": "GELFOND", "year": 2002}, {"title": "Knowledge Representation, Reasoning, and the Design of Intelligent Agents", "author": ["M. GELFOND", "Y. KAHL"], "venue": "Cambridge University Press.", "citeRegEx": "GELFOND and KAHL,? 2014", "shortCiteRegEx": "GELFOND and KAHL", "year": 2014}, {"title": "The stable model semantics for logic programming", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "Proceedings of ICLP-88. 1070\u20131080.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1988", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1988}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "New Generation Computing 9, 3/4, 365\u2013386.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1991", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1991}, {"title": "On the semantics of gringo", "author": ["A. HARRISON", "V. LIFSCHITZ", "F. YANG"], "venue": "Working Notes of the Workshop on Answer Set Programming and Other Computing Paradigms.", "citeRegEx": "HARRISON et al\\.,? 2013", "shortCiteRegEx": "HARRISON et al\\.", "year": 2013}, {"title": "Semantics of logic programs with aggregates", "author": ["D.B. KEMP", "P.J. STUCKEY"], "venue": "ISLP. Vol. 91. Citeseer, 387\u2013401.", "citeRegEx": "KEMP and STUCKEY,? 1991", "shortCiteRegEx": "KEMP and STUCKEY", "year": 1991}, {"title": "Enhancing disjunctive logic programming systems by sat checkers", "author": ["C. KOCH", "N. LEONE", "G. PFEIFER"], "venue": "Artif. Intell. 151, 1-2, 177\u2013212.", "citeRegEx": "KOCH et al\\.,? 2003", "shortCiteRegEx": "KOCH et al\\.", "year": 2003}, {"title": "The DLV system for knowledge representation and reasoning", "author": ["N. LEONE", "G. PFEIFER", "W. FABER", "T. EITER", "G. GOTTLOB", "S. PERRI", "F. SCARCELLO"], "venue": "ACM Transactions on Computational Logic 7, 499\u2013562.", "citeRegEx": "LEONE et al\\.,? 2006", "shortCiteRegEx": "LEONE et al\\.", "year": 2006}, {"title": "Splitting a logic program", "author": ["V. LIFSCHITZ", "H. TURNER"], "venue": "Proceedings of the eleventh international conference on Logic programming. MIT Press, Cambridge, MA, USA, 23\u201337.", "citeRegEx": "LIFSCHITZ and TURNER,? 1994", "shortCiteRegEx": "LIFSCHITZ and TURNER", "year": 1994}, {"title": "Logic programs with abstract constraint atoms: The role of computations", "author": ["L. LIU", "E. PONTELLI", "T.C. SON", "M. TRUSZCZYNSKI"], "venue": "Artif. Intell. 174, 3-4, 295\u2013315.", "citeRegEx": "LIU et al\\.,? 2010", "shortCiteRegEx": "LIU et al\\.", "year": 2010}, {"title": "Logic programs with abstract constraint atoms", "author": ["V.W. MAREK", "M TRUSZCZYNSKI"], "venue": "AAAI. Vol. 4. 86\u201391.", "citeRegEx": "MAREK and TRUSZCZYNSKI,? 2004", "shortCiteRegEx": "MAREK and TRUSZCZYNSKI", "year": 2004}, {"title": "Extending and implementing the stable model semantics", "author": ["I. NIEMELA", "P. SIMONS", "T. SOININEN"], "venue": "Artificial Intelligence 138, 1\u20132 (Jun), 181\u2013234.", "citeRegEx": "NIEMELA et al\\.,? 2002", "shortCiteRegEx": "NIEMELA et al\\.", "year": 2002}, {"title": "Well-fouded and stable semantics of logic programs with aggregates", "author": ["N. PELOV", "M. DENECKER", "M. BRUYNOOGHE"], "venue": "Theory and Practice of Logic Programming 7, 355\u2013375.", "citeRegEx": "PELOV et al\\.,? 2007", "shortCiteRegEx": "PELOV et al\\.", "year": 2007}, {"title": "Les mathematiques et la logique", "author": ["H. POINCARE"], "venue": "Review de metaphysique et de morale 14, 294\u2013317.", "citeRegEx": "POINCARE,? 1906", "shortCiteRegEx": "POINCARE", "year": 1906}, {"title": "A constructive semantic characterization of aggregates in answer set programming", "author": ["T.C. SON", "E. PONTELLI"], "venue": "TPLP 7, 3, 355\u2013375.", "citeRegEx": "SON and PONTELLI,? 2007", "shortCiteRegEx": "SON and PONTELLI", "year": 2007}, {"title": "A well-founded semantics for basic logic programs with arbitrary abstract constraint atoms", "author": ["Y. WANG", "F. LIN", "M. ZHANG", "YOU", "J.-H."], "venue": "AAAI.", "citeRegEx": "WANG et al\\.,? 2012", "shortCiteRegEx": "WANG et al\\.", "year": 2012}], "referenceMentions": [{"referenceID": 11, "context": "1 Introduction The development of answer set semantics for logic programs (Gelfond and Lifschitz 1988; Gelfond and Lifschitz 1991) led to the creation of powerful knowledge representation language, Answer Set Prolog (ASP), capable of representing recursive definitions, defaults, effects of actions and other important phenomena of natural language.", "startOffset": 74, "endOffset": 130}, {"referenceID": 12, "context": "1 Introduction The development of answer set semantics for logic programs (Gelfond and Lifschitz 1988; Gelfond and Lifschitz 1991) led to the creation of powerful knowledge representation language, Answer Set Prolog (ASP), capable of representing recursive definitions, defaults, effects of actions and other important phenomena of natural language.", "startOffset": 74, "endOffset": 130}, {"referenceID": 20, "context": "The design of algorithms for computing answer sets and their efficient implementations in systems called ASP solvers (Niemela et al. 2002; Leone et al. 2006; Gebser et al. 2007) allowed the language to become a powerful tool for building non-trivial knowledge intensive applications (Brewka et al.", "startOffset": 117, "endOffset": 177}, {"referenceID": 16, "context": "The design of algorithms for computing answer sets and their efficient implementations in systems called ASP solvers (Niemela et al. 2002; Leone et al. 2006; Gebser et al. 2007) allowed the language to become a powerful tool for building non-trivial knowledge intensive applications (Brewka et al.", "startOffset": 117, "endOffset": 177}, {"referenceID": 8, "context": "The design of algorithms for computing answer sets and their efficient implementations in systems called ASP solvers (Niemela et al. 2002; Leone et al. 2006; Gebser et al. 2007) allowed the language to become a powerful tool for building non-trivial knowledge intensive applications (Brewka et al.", "startOffset": 117, "endOffset": 177}, {"referenceID": 1, "context": "2007) allowed the language to become a powerful tool for building non-trivial knowledge intensive applications (Brewka et al. 2011; Erdem et al. 2012).", "startOffset": 111, "endOffset": 150}, {"referenceID": 3, "context": "2007) allowed the language to become a powerful tool for building non-trivial knowledge intensive applications (Brewka et al. 2011; Erdem et al. 2012).", "startOffset": 111, "endOffset": 150}, {"referenceID": 21, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 20, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 23, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 4, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 9, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 14, "context": "Instead there is a comparatively large collection of such languages with different syntax and, even more importantly, different semantics (Pelov et al. 2007; Niemela et al. 2002; Son and Pontelli 2007; Faber et al. 2011; Gelfond 2002; Kemp and Stuckey 1991).", "startOffset": 138, "endOffset": 257}, {"referenceID": 4, "context": "According to (Faber et al. 2011) the program has one answer set A = { }; according to (Gelfond 2002; Kemp and Stuckey 1991) it has two answer sets: A1 = { } and A2 = {p(a)}.", "startOffset": 13, "endOffset": 32}, {"referenceID": 9, "context": "2011) the program has one answer set A = { }; according to (Gelfond 2002; Kemp and Stuckey 1991) it has two answer sets: A1 = { } and A2 = {p(a)}.", "startOffset": 59, "endOffset": 96}, {"referenceID": 14, "context": "2011) the program has one answer set A = { }; according to (Gelfond 2002; Kemp and Stuckey 1991) it has two answer sets: A1 = { } and A2 = {p(a)}.", "startOffset": 59, "endOffset": 96}, {"referenceID": 6, "context": "According to Feferman (Feferman 2002) the principle was first formulated by Poincare (Poincare 1906) in his analysis of paradoxes of set theory.", "startOffset": 22, "endOffset": 37}, {"referenceID": 22, "context": "According to Feferman (Feferman 2002) the principle was first formulated by Poincare (Poincare 1906) in his analysis of paradoxes of set theory.", "startOffset": 85, "endOffset": 100}, {"referenceID": 4, "context": "Similar ideas were already successfully used in a collection of logic programming definitions of stratification including that of stratified aggregates (see, for instance, (Faber et al. 2011).", "startOffset": 172, "endOffset": 191}, {"referenceID": 0, "context": "If the signature \u03a3 is sorted (as, for instance, in (Balai et al. 2013)) the substitutions should respect sort requirements for predicates and functions.", "startOffset": 51, "endOffset": 70}, {"referenceID": 9, "context": "Note that despite its apparent simplicity the syntax of A log differs substantially from syntax of most other logic programming languages allowing aggregates (with the exception of that in (Gelfond 2002)).", "startOffset": 189, "endOffset": 203}, {"referenceID": 4, "context": "We illustrate the differences using the language presented in (Faber et al. 2011).", "startOffset": 62, "endOffset": 81}, {"referenceID": 11, "context": "2 Semantics To define the semantics of A log programs we expand the standard definition of answer set from (Gelfond and Lifschitz 1988).", "startOffset": 107, "endOffset": 135}, {"referenceID": 10, "context": "The resulting definition captures the rationality principle - believe nothing you are not forced to believe (Gelfond and Kahl 2014) - and avoids vicious circles.", "startOffset": 108, "endOffset": 131}, {"referenceID": 10, "context": "The main function, Solver, is similar to that used in standard ASP algorithms (See, for instance, Solver1 from (Gelfond and Kahl 2014)).", "startOffset": 111, "endOffset": 134}, {"referenceID": 15, "context": "It computes the aggregate reduct of \u03a0 with respect to I and applies usual checking algorithm (see, for instance, (Koch et al. 2003)).", "startOffset": 113, "endOffset": 131}, {"referenceID": 23, "context": "In this section we concentrate on languages from (Son and Pontelli 2007) and (Faber", "startOffset": 49, "endOffset": 72}, {"referenceID": 23, "context": "Example 11 (Vicious Circles in F log) Consider the following program, P6, adopted from (Son and Pontelli 2007):", "startOffset": 87, "endOffset": 110}, {"referenceID": 23, "context": "As shown in (Son and Pontelli 2007) the program has two S log answer sets, A = {q} and B = {p(a), p(b)}.", "startOffset": 12, "endOffset": 35}, {"referenceID": 7, "context": "A key difference between our algorithm and those in the existing work (Faber et al. 2008; Gebser et al. 2009) is that the other work needs rather involved methods to ground the aggregates while our algorithm does not need to ground the aggregate atoms.", "startOffset": 70, "endOffset": 109}, {"referenceID": 13, "context": "There is also a close connection between the above semantics of aggregates all of which are based on some notion of a reduct or a fixpoint computation and approaches in which aggregates are represented as special cases of more general constructs, such as propositional formulas (Ferraris 2005; Harrison et al. 2013) and abstract constraint atoms (Marek et al.", "startOffset": 278, "endOffset": 315}, {"referenceID": 18, "context": "2013) and abstract constraint atoms (Marek et al. 2004; Liu et al. 2010; Wang et al. 2012) (Our semantics can be easily extended to the latter).", "startOffset": 36, "endOffset": 90}, {"referenceID": 24, "context": "2013) and abstract constraint atoms (Marek et al. 2004; Liu et al. 2010; Wang et al. 2012) (Our semantics can be easily extended to the latter).", "startOffset": 36, "endOffset": 90}, {"referenceID": 20, "context": "The first, and simplest, step is to expand A log by allowing choice rules similar to those of (Niemela et al. 2002).", "startOffset": 94, "endOffset": 115}, {"referenceID": 9, "context": "This can be done in a natural way by combining ideas from this paper and that from (Gelfond 2002).", "startOffset": 83, "endOffset": 97}], "year": 2014, "abstractText": "The paper presents a knowledge representation language A log which extends ASP with aggregates. The goal is to have a language based on simple syntax and clear intuitive and mathematical semantics. We give some properties of A log, an algorithm for computing its answer sets, and comparison with other approaches.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}