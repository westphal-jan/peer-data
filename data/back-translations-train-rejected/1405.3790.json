{"id": "1405.3790", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-May-2014", "title": "Transaction Logic with (Complex) Events", "abstract": "This work deals with the problem of combining reactive features, such as the ability to respond to events and define complex events, with the execution of transactions over general Knowledge Bases (KBs).", "histories": [["v1", "Thu, 15 May 2014 10:18:12 GMT  (376kb,D)", "http://arxiv.org/abs/1405.3790v1", "To appear in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "To appear in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["ana sofia gomes", "jos\\'e j\\'ulio alferes"], "accepted": false, "id": "1405.3790"}, "pdf": {"name": "1405.3790.pdf", "metadata": {"source": "CRF", "title": "Transaction Logic with (Complex) Events", "authors": ["Ana Sofia Gomes", "Jos\u00e9 J\u00falio Alferes"], "emails": [], "sections": [{"heading": null, "text": "With this goal in mind, we are building on Transaction Logic (T R), a logic precisely designed to model and execute transactions in KBs defined by arbitrary logic theories, in which transactions are written in a logic programming style by combining primitive update operations via a generic KBs with the usual logical programming connectives and some additional connectives, e.g. to express the sequence of actions. While T R is a natural choice to handle transactions, the question remains whether T R can be used to express complex events, but also to deal with detecting complex events and executing transactions at the same time. In this essay, we show that the former is possible, while the latter is not possible. To do this, we start by showing how T R can express complex events, and in particular how SNOOP event expressions can be translated into logic, and why T is not able to resolve the problem together in both theory."}, {"heading": "1 Introduction", "text": "The reactionary tendencies of recent years have clearly intensified in recent years, in those areas where the economy is able to stabilise and in those areas where it is able to stabilise."}, {"heading": "2 Using T R to express complex events", "text}, {"heading": "3.2 Entailment and Properties", "text": "The logical dichotomy defined in Def. 4 can be used to think about properties of transactions and event formulas that apply to any possible path of execution. In T Rev, similar to T R, we further define executive dichotomy to talk about properties of a particular execution path. But, in order to think about executing transactions over a particular path, care must be taken because, as described above, the satisfaction of a new event in a path can invalidate the transaction formulas that were previously applicable. In order to deal with a similar behavior, nonmonotonic logic relies on the concept of minimal or preferred models: Instead of considering all possible models, non-monotonic theories limit themselves to the most skeptical. Likewise, T Rev uses the minimal models of a program to define dichotony whenever a minimum model is defined by a minimum execution of a formula, such as a minimum model is used."}, {"heading": "4 Discussion and Related Work", "text": "Several solutions exist to think about complex events. Complex event processing (CEP et al. 1998) systems such as (Adaikkalavan and Chakravarthy 2004; Wu et al. 2006) can efficiently argue with large data streams and detect (complex) events, which support a rich specification of events based on event pattern rules that combine atomic events with some temporal constructs. As shown in Theorem 1, T R and T Rev can detect most event patterns of SNOOP and ETALIS (Anicic et al. 2012) CEP system even uses T R syntax and connectives, although the T R model theory is abandoned and a different satisfaction definition is provided. Unlike T Rev, CEP systems do not deal with executing actions in response to the detected events. Extensions of Situation Calculus, Event Calculus, Action Languages, Action Languages, etc. exist with the ability to react to 1998 events, and have some transitional properties."}], "references": [{"title": "Formalization and detection of events over a sliding window in active databases using interval-based semantics", "author": ["R. ADAIKKALAVAN", "S. CHAKRAVARTHY"], "venue": "ADBIS", "citeRegEx": "ADAIKKALAVAN and CHAKRAVARTHY,? \\Q2004\\E", "shortCiteRegEx": "ADAIKKALAVAN and CHAKRAVARTHY", "year": 2004}, {"title": "Snoopib: Interval-based event specification and detection for active databases", "author": ["R. ADAIKKALAVAN", "S. CHAKRAVARTHY"], "venue": "Data Knowl. Eng. 59,", "citeRegEx": "ADAIKKALAVAN and CHAKRAVARTHY,? \\Q2006\\E", "shortCiteRegEx": "ADAIKKALAVAN and CHAKRAVARTHY", "year": 2006}, {"title": "Evolving reactive logic programs", "author": ["J.J. ALFERES", "F. BANTI", "A. BROGI"], "venue": "Intelligenza Artificiale", "citeRegEx": "ALFERES et al\\.,? \\Q2011\\E", "shortCiteRegEx": "ALFERES et al\\.", "year": 2011}, {"title": "Stream reasoning and complex event processing in etalis", "author": ["D. ANICIC", "S. RUDOLPH", "P. FODOR", "N. STOJANOVIC"], "venue": "Semantic Web", "citeRegEx": "ANICIC et al\\.,? \\Q2012\\E", "shortCiteRegEx": "ANICIC et al\\.", "year": 2012}, {"title": "On the decidability of the termination problem of active database systems", "author": ["J. BAILEY", "G. DONG", "K. RAMAMOHANARAO"], "venue": "Theor. Comput. Sci. 311,", "citeRegEx": "BAILEY et al\\.,? \\Q2004\\E", "shortCiteRegEx": "BAILEY et al\\.", "year": 2004}, {"title": "Formal characterizations of active databases: Part ii", "author": ["C. BARAL", "J. LOBO", "G. TRAJCEVSKI"], "venue": "In DOOD. LNCS,", "citeRegEx": "BARAL et al\\.,? \\Q1997\\E", "shortCiteRegEx": "BARAL et al\\.", "year": 1997}, {"title": "Specifying active databases in the situation calculus", "author": ["L.E. BERTOSSI", "J. PINTO", "R. VALDIVIA"], "venue": "In SCCC. IEEE Computer Society,", "citeRegEx": "BERTOSSI et al\\.,? \\Q1998\\E", "shortCiteRegEx": "BERTOSSI et al\\.", "year": 1998}, {"title": "Transaction logic programming", "author": ["A.J. BONNER", "M. KIFER"], "venue": "In ICLP", "citeRegEx": "BONNER and KIFER,? \\Q1993\\E", "shortCiteRegEx": "BONNER and KIFER", "year": 1993}, {"title": "Results on reasoning about updates in transaction logic", "author": ["A.J. BONNER", "M. KIFER"], "venue": "In Transactions and Change in Logic Databases", "citeRegEx": "BONNER and KIFER,? \\Q1998\\E", "shortCiteRegEx": "BONNER and KIFER", "year": 1998}, {"title": "Database programming in transaction logic", "author": ["A.J. BONNER", "M. KIFER", "M.P. CONSENS"], "venue": "In DBPL", "citeRegEx": "BONNER et al\\.,? \\Q1993\\E", "shortCiteRegEx": "BONNER et al\\.", "year": 1993}, {"title": "Reactivity on the web: Paradigms and applications of the language xchange", "author": ["F. BRY", "M. ECKERT", "PATRANJAN", "P.-L"], "venue": "J. Web Eng", "citeRegEx": "BRY et al\\.,? \\Q2006\\E", "shortCiteRegEx": "BRY et al\\.", "year": 2006}, {"title": "Conflict resolution using logic programming", "author": ["J. CHOMICKI", "J. LOBO", "S.A. NAQVI"], "venue": "IEEE Trans. Knowl. Data Eng", "citeRegEx": "CHOMICKI et al\\.,? \\Q2003\\E", "shortCiteRegEx": "CHOMICKI et al\\.", "year": 2003}, {"title": "Complex reactivity with preferences in rule-based agents", "author": ["S. COSTANTINI", "G.D. GASPERIS"], "venue": "In RuleML", "citeRegEx": "COSTANTINI and GASPERIS,? \\Q2012\\E", "shortCiteRegEx": "COSTANTINI and GASPERIS", "year": 2012}, {"title": "A logic-based framework for reactive systems", "author": ["R.A. KOWALSKI", "F. SADRI"], "venue": "In RuleML", "citeRegEx": "KOWALSKI and SADRI,? \\Q2012\\E", "shortCiteRegEx": "KOWALSKI and SADRI", "year": 2012}, {"title": "On active deductive databases: The statelog approach", "author": ["G. LAUSEN", "B. LUD\u00c4SCHER", "MAY"], "venue": "In Transactions and Change in Logic Databases", "citeRegEx": "LAUSEN et al\\.,? \\Q1998\\E", "shortCiteRegEx": "LAUSEN et al\\.", "year": 1998}, {"title": "Event-condition-action rules on rdf metadata in p2p environments", "author": ["G. PAPAMARKOS", "A. POULOVASSILIS", "P.T. WOOD"], "venue": "Comp. Networks", "citeRegEx": "PAPAMARKOS et al\\.,? \\Q2006\\E", "shortCiteRegEx": "PAPAMARKOS et al\\.", "year": 2006}, {"title": "High-performance complex event processing over streams", "author": ["E. WU", "Y. DIAO", "S. RIZVI"], "venue": "In SIGMOD Conference", "citeRegEx": "WU et al\\.,? \\Q2006\\E", "shortCiteRegEx": "WU et al\\.", "year": 2006}, {"title": "Active database rules with transaction-conscious stable-model semantics. In DOOD", "author": ["Ana Sofia Gomes", "C. Jos\u00e9 J\u00falio Alferes ZANIOLO"], "venue": null, "citeRegEx": "Gomes and ZANIOLO,? \\Q1995\\E", "shortCiteRegEx": "Gomes and ZANIOLO", "year": 1995}], "referenceMentions": [], "year": 2014, "abstractText": "This work deals with the problem of combining reactive features, such as the ability to respond to events and define complex events, with the execution of transactions over general Knowledge Bases (KBs). With this as goal, we build on Transaction Logic (T R), a logic precisely designed to model and execute transactions in KBs defined by arbitrary logic theories. In it, transactions are written in a logic-programming style, by combining primitive update operations over a general KB, with the usual logic programming connectives and some additional connectives e.g. to express sequence of actions. While T R is a natural choice to deal with transactions, it remains the question whether T R can be used to express complex events, but also to deal simultaneously with the detection of complex events and the execution of transactions. In this paper we show that the former is possible while the latter is not. For that, we start by illustrating how T R can express complex events, and in particular, how SNOOP event expressions can be translated in the logic. Afterwards, we show why T R fails to deal with the two issues together, and to solve the intended problem propose Transaction Logic with Events, its syntax, model theory and executional semantics. The achieved solution is a non-monotonic extension of T R, which guarantees that every complex event detected in a transaction is necessarily responded. To appear in Theory and Practice of Logic Programming (TPLP)", "creator": "LaTeX with hyperref package"}}}