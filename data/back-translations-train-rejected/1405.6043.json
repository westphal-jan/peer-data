{"id": "1405.6043", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-May-2014", "title": "Understanding model counting for $\\beta$-acyclic CNF-formulas", "abstract": "We extend the knowledge about so-called structural restrictions of $\\mathrm{\\#SAT}$ by giving a polynomial time algorithm for $\\beta$-acyclic $\\mathrm{\\#SAT}$. In contrast to previous algorithms in the area, our algorithm does not proceed by dynamic programming but works along an elimination order, solving a weighted version of constraint satisfaction. Moreover, we give evidence that this deviation from more standard algorithm is not a coincidence, but that there is likely no dynamic programming algorithm of the usual style for $\\beta$-acyclic $\\mathrm{\\#SAT}$.", "histories": [["v1", "Fri, 23 May 2014 12:38:18 GMT  (29kb)", "http://arxiv.org/abs/1405.6043v1", null]], "reviews": [], "SUBJECTS": "cs.CC cs.AI", "authors": ["johann brault-baron", "florent capelli", "stefan mengel"], "accepted": false, "id": "1405.6043"}, "pdf": {"name": "1405.6043.pdf", "metadata": {"source": "CRF", "title": "Understanding model counting for \u03b2-acyclic CNF-formulas", "authors": ["Johann Brault-Baron", "Florent Capelli", "Stefan Mengel"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 140 5,60 43v1 [cs.CC] 2 3M ay2 014Understanding model counting for \u03b2-acyclicCNF-formulasJohann Brault-Baron \u0445 Florent Capelli \u2020 Stefan Mengel \u2021 26 May 2014 We are expanding our knowledge of the so-called structural limitations of # SAT by giving a polynomic time algorithm for \u03b2-acyclic # SAT. Unlike earlier algorithms in this area, our algorithm does not work through dynamic programming, but along an elimination sequence and solves a weighted version of the constraint satisfaction. Furthermore, we give evidence that this deviation from more conventional algorithms is not a coincidence, but that there is probably no dynamic programming algorithm of the usual style for \u03b2-acyclic # SAT."}, {"heading": "1. Introduction", "text}, {"heading": "2. Preliminaries and notation", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1. Weighted counting for constraint satisfaction with default values", "text": "We think of X as a set of variables and D as a domain, and so we call an assignment to variables X. A partial assignment to variables X is in fact a figure in DY, where a figure in DX and Y is considered indispensable, and if a figure in DX and Y is considered indispensable, then we call the figure in DX (x) when x) and b) a figure is written in DY (x), when a figure in X and X (x) is considered indispensable otherwise. Let us leave a figure in DX, y / X, and d D. We write a figure in DX (x).Definition 1."}, {"heading": "2.2. Graphs and hypergraphs associated to CNF-formulas", "text": "D'ir, he says, \"is in a position to come out on top.\""}, {"heading": "2.4. \u03b2-acyclicity of hypergraphs", "text": "In this section we introduce the characteristics of the \u03b2-acyclicity of the hypergraphs that we apply in this work. We note that there are many other characteristics, such as: BLS99, Bra14. Definition 4. Dei H is a hypergraph. It is a vertex x x that will be a nest point if there is a sequence of sets that lend themselves to recording, that is, it is an e1,. ek \"ei + 1 for i.,\" k \u2212 1. \"A \u03b2-Eliminance order for H is defined inductively as follows:\" It is only the empty tupel. \"\" \"It is an e1.\". \"It is an\". \"It is a.\"......... \"\".. \"\".. \"\" \"..\" \"\" \"..\" \"\" \"\".. \"\" \"\". \"\" \"\" \"..\" \"\" \"\" \"..\". \"\" \"\" \"\" \"..\". \"\" \"\" \"\".. \".\" \".\" \".\" \".\". \"\" \"..\". \"\". \".\". \".\". \".\". \"..\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \"..\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\" \".\" \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\". \".\" \".\". \".\". \".\". \".\". \".\" \".\". \".\" \""}, {"heading": "2.5. Width measures of graphs and CNF-Formulas", "text": "In this section, we introduce several measures to see a tree in which each vertex in most degrees 3, and a biprojection between L (T) and V (V).We define what we often do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D) We define what we do. (D). (D). (D). (D). (D). (D). (D). (D). (D. (D). (D). (D). (D. (D). (D). (D. (D). (D). (D). (D. (D). (D). (D). (D. (D). (D). (D). (D. (D). (D). (D). (D). (D). (D. (D). (D). (D). (D). (D. (D). (D). (D. (D). (D). (D). (D. (D). (D). (D). (D). (D). (D. (D). (D). (D). (D. (D). (D. (D). (D). (D). (D. (D). (D). (D. (D). (D. (D). (D). (D). (D). (D). (D. (D). (D). (D). (D). (D. (D). (D). (D). (D). (D). (D). (D). (D). (D). (D). (D. (D). (D). (D"}, {"heading": "3. The algorithm and its correctness", "text": "In this section we describe an algorithm which, since an instance I is defined from # CSPd to domain D and a nest point x from H (I), (I) constructs an instance I (I) in a polynomial number of arithmetic operations so that we can iterate the method for calculating w (I) in a polynomial number of arithmetic operations. In the following, we explain that if I (I) one (X) -acyclic (C) -acyclic (I) -acyclic (I) -acyclic (I) -acyclic (I) -acyclic (I) -acyclic (C) -yclic (C) -yclic (C) -yclic (C) -yclic (C) -acyclic (I) -acyclic (I) acyclic (I acyclic (I) acyclic (I) acyclic (I (I) acyclic (I acyclic) acyclic (I (I) acyclic (I (I) acclic (I (acclic) acclic (I (I) acclic (I (-yclic) acclic (I (-yclic) acc (I (-yclic)."}, {"heading": "4. Runtime analysis of the algorithm", "text": "The analysis of Theorem 11 shows that our algorithm uses only a polynomial number of arithmetic operations, which unfortunately does not guarantee that the algorithm will run on RAM in polynomial time. The problem is that due to the many multiplications and divisions, the bit size of the new (rational) weights that the algorithm calculates at each step could increase exponentially, resulting in a general superpolynomial runtime. In this section, we will prove that this is indeed not the case. We will show that at each step of the algorithm there are numerous cancellations leading to weights of polynomial bit size. Combining this with Theorem 11, it will follow that the algorithm runs in polynomial time."}, {"heading": "4.1. Some technical lemmas", "text": "(W) W (W) W (S) W (S) W (S) W (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S) S (S (S) S (S) S (S) S (S (S) S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S (S) S (S) S (S (S) S (S (S) S (S (S (S) S (S (S (S) S) S (S (S) S (S (S) S (S (S) S) S (S (S) S (S (S (S) S (S) S (S (S (S) S) S (S (S) S) S) S (S (S) S) S (S (S) S (S (S) S) S (S) S (S (S) S (S) S (S (S) S) S (S"}, {"heading": "4.2. Defining partial orders", "text": "\"We assume that we have the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the condition of the"}, {"heading": "4.3. Proof of the runtime bound", "text": "In this section we will prove that for each c (c) i and an assignment of var (c) (k) (c) (c) (a) proportional tow (Ik), a) w (Ik) (c) (c), a). Moreover, since Ik (c) is a subinstance of mine (c), the bit size of the calculated rational number can be polynomial in the size of the input. Remember that according to the convention w (c) = 1 and that for x (c) a rational number of the polynomial bit size and thus all arithmetic operations of the algorithm (c) can be performed in polynomial time. Remember that according to the convention w (c) = 1 and that for x (c) a constant var (c), i)."}, {"heading": "5. Relation to the STV-framework", "text": "In this section, we compare our algorithmic result for # SAT on \u03b2-acyclic hypergraphs with the framework proposed by S\u00e6ther, Telle and Vatshelle in [STV14], which we briefly call the STVframework. We first show that the STV framework provides a uniform explanation of all # SAT traceability results in literature and extends the results of [STV14]. We see this as strong evidence that the STV framework is indeed a good formalization of the intuitive notion of \"dynamic programming for # SAT.\" Next, we show that the STV framework cannot provide subexponential time algorithms for \u03b2-acyclic # SAT. To this end, we demonstrate an exponential lower limit for the PS width of \u03b2-acyclic CNF formulas."}, {"heading": "5.1. Explaining old results by PS-width", "text": "In this section, we show that the STV framework is indeed strong enough to explain all known results on structural # SAT. Figure 1 shows the inclusion hierarchy defined by the acyclicity terms and classes defined by delimiting the width measurements from the literature. Most evidence for inclusion can be found in [Fag83, Dur12, GP04, PSS13, CDM14] and the references contained therein. The relationship between disjunct branches and MIM width and that between \u03b2-acyclicity and MIMwidth is illustrated in this paper. Known complexity results for the limitations of # SAT can be found in Table 1; for definitions of the appearing complexity classes, see e.g. [FG06]. In [Vat12], it is shown that the MIM width is limited by cliquewidth, so that almost all tractability results of Table 1 of [ST14] can be traced with the packaging results that we have in the following framework to show the missing STV for packaging results."}, {"heading": "5.1.1. Hypergraphs with disjoint branches", "text": "In this section we show how the distribution differences between the different branches of T-1 and T-2 dissolve. (t1) In this section we show how the distribution differences between the individual branches of T-1 and T-2-3-3-3-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-5-5-5-5-5-5-5-5-5-5-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-5-5-5-5-5-5-5-5-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-4-4-5-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-"}, {"heading": "5.1.2. Signed incidence cliquewidth", "text": "In this section, we use the STV framework to confirm a result from [FMR08], which we specify as the result of STV fragmentation (FMR08). (FMR08) The SI (F) of a CNF formula is the incidence diagram of F, whose incidence diagram is either positive or negative, depending on whether the variable x formula appears positive or negative in clause C. (F) The set of CNF formulations in most cases is defined as a set of formulas whose signature diagram can be achieved by the following operations, the depressions of which are by {1,.), starting from singleton diagrams. (1.) The disjoint union.2. Recoloring: For a vertex-colored signature bipartite diagram G, we are defined to be the diagram that achieves the results from coloring with all previously colored graphs."}, {"heading": "5.2. Lower bounds on MIM-width and PS-width", "text": "In this section we will prove the promised lower limit of the PS value (A, A, A, C). (D) We start with a simple vase, which we can see as a partial inversion of Lemma 9. (D) We remind the reader that a formula F is called monotonous if all variables appear only positively in F. (D) We construct F by arbitrarily selecting a color class of G and representing the other as a monotonous formula F. (D) This choice then represents a monotonous formula containing a variable x formula if and only if x is connected to an edge in G.Let (T, C). (D) be a branch of G and F. Leave a vertex of T with an intersection (A, A)."}, {"heading": "6. Conclusion", "text": "We have shown that \u03b2-acyclic # SAT can be solved in polynomial time, a question that remains open in [CDM14]. Our algorithm does not follow the dynamic programming approach that was used in all other structural tractability results that were previously known, and how we have seen this is no coincidence. Instead, \u03b2-acyclic # SAT lies outside the STV framework of [STV14], which explains all the old results in a unified manner. We conclude this paper with several open problems that we should explore in the future. First, our algorithm for # SAT is designed specifically for the case \u03b2-acyclic formulas, but we believe that the techniques developed in Section 4 may be extended to other classes of hypergraphs that we can characterize by eliminating ac\u03b2-ac\u03b2 classes in general. In this sense, it would be interesting to see if hypergraphics of limited \u03b2-acyclic-width ac\u03b2-ac\u03b2 classes that ac\u03b2-generalize ac\u03b2-ac\u03b2 classes that we believe that ac\u03b2-clic is a general ac\u03b2-ac\u03b2 class that we can expand to other classes that ac\u03b2-generalize ac\u03b2-ac\u03b2-acess."}], "references": [{"title": "A", "author": ["G. Ausiello"], "venue": "D\u2019Atri, and M. Moscarini. Chordality properties on graphs and minimal conceptual connections in semantic data models. J. Comput. Syst. Sci., 33(2):179\u2013202", "citeRegEx": "ADM86", "shortCiteRegEx": null, "year": 1986}, {"title": "The complexity of weighted and unweighted #csp", "author": ["A. Bulatov", "M. Dyer", "L.A. Goldberg", "M. Jalsenius", "M. Jerrum", "D. Richerby"], "venue": "Journal of Computer and System Sciences, 78(2):681\u2013688, March", "citeRegEx": "BDG+12", "shortCiteRegEx": null, "year": 2012}, {"title": "Graph Classes: A Survey", "author": ["A. Brandst\u00e4dt", "V.B. Le", "J.P. Spinrad"], "venue": "Society for Industrial and Applied Mathematics, Philadelphia, PA, USA", "citeRegEx": "BLS99", "shortCiteRegEx": null, "year": 1999}, {"title": "A tourist guide through treewidth", "author": ["H.L. Bodlaender"], "venue": "Acta Cybern., 11(1-2):1\u201321", "citeRegEx": "Bod93", "shortCiteRegEx": null, "year": 1993}, {"title": "ArXiv e-prints", "author": ["J. Brault-Baron. Hypergraph Acyclicity Revisited"], "venue": "March", "citeRegEx": "Bra14", "shortCiteRegEx": null, "year": 2014}, {"title": "STOC \u201912", "author": ["J.-Y. Cai", "X. Chen. Complexity of counting CSP with complex weights. In Proceedings of the Forty-fourth Annual ACM Symposium on Theory of Computing"], "venue": "page 909\u2013920, New York, NY, USA,", "citeRegEx": "CC12", "shortCiteRegEx": null, "year": 2012}, {"title": "Hypergraph acyclicity and propositional model counting", "author": ["F. Capelli", "A. Durand", "S. Mengel"], "venue": "CoRR, abs/1401.6307", "citeRegEx": "CDM14", "shortCiteRegEx": null, "year": 2014}, {"title": "Constraint representations and structural tractability", "author": ["D.A. Cohen", "M.J. Green", "C. Houghton"], "venue": "Principles and Practice of Constraint Programming - CP 2009, pages 289\u2013303", "citeRegEx": "CGH09", "shortCiteRegEx": null, "year": 2009}, {"title": "Graph Theory (Graduate Texts in Mathematics)", "author": ["R. Diestel"], "venue": "Springer, August", "citeRegEx": "Die05", "shortCiteRegEx": null, "year": 2005}, {"title": "The complexity of counting homomorphisms seen from the other side", "author": ["V. Dalmau", "P. Jonsson"], "venue": "Theor. Comput. Sci., 329(1-3):315\u2013323", "citeRegEx": "DJ04", "shortCiteRegEx": null, "year": 2004}, {"title": "Some characterizations of \u03b3 and \u03b2-acyclicity of hypergraphs", "author": ["D. Duris"], "venue": "Inf. Process. Lett., 112(16):617\u2013620", "citeRegEx": "Dur12", "shortCiteRegEx": null, "year": 2012}, {"title": "Degrees of acyclicity for hypergraphs and relational database schemes", "author": ["R. Fagin"], "venue": "Journal of the ACM, 30(3):514\u2013550", "citeRegEx": "Fag83", "shortCiteRegEx": null, "year": 1983}, {"title": "Parameterized Complexity Theory", "author": ["J. Flum", "M. Grohe"], "venue": "Springer-Verlag New York Inc", "citeRegEx": "FG06", "shortCiteRegEx": null, "year": 2006}, {"title": "Counting truth assignments of formulas of bounded tree-width or clique-width", "author": ["E. Fischer", "J.A. Makowsky", "E.V. Ravve"], "venue": "Discrete Applied Mathematics, 156(4):511\u2013 529", "citeRegEx": "FMR08", "shortCiteRegEx": null, "year": 2008}, {"title": "A comparison of structural csp decomposition methods", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Artif. Intell., 124(2):243\u2013282", "citeRegEx": "GLS00", "shortCiteRegEx": null, "year": 2000}, {"title": "On tree width", "author": ["M. Grohe", "D. Marx"], "venue": "bramble size, and expansion. J. Comb. Theory, Ser. B, 99(1):218\u2013228", "citeRegEx": "GM09", "shortCiteRegEx": null, "year": 2009}, {"title": "Hypergraphs in Model Checking: Acyclicity and Hypertree-Width versus Clique-Width", "author": ["G. Gottlob", "R. Pichler"], "venue": "SIAM Journal on Computing, 33(2)", "citeRegEx": "GP04", "shortCiteRegEx": null, "year": 2004}, {"title": "Satisfiability of acyclic and almost acyclic CNF formulas", "author": ["S. Ordyniak", "D. Paulusma", "S. Szeider"], "venue": "Theoretical Computer Science, 481:85\u201399", "citeRegEx": "OPS13", "shortCiteRegEx": null, "year": 2013}, {"title": "Model Counting for CNF Formulas of Bounded Modular Treewidth", "author": ["D. Paulusma", "F. Slivovsky", "S. Szeider"], "venue": "30th International Symposium on Theoretical Aspects of Computer Science, STACS 2013, pages 55\u201366", "citeRegEx": "PSS13", "shortCiteRegEx": null, "year": 2013}, {"title": "On the hardness of approximate reasoning", "author": ["D. Roth"], "venue": "Artificial Intelligence, 82(1\u20132):273 \u2013 302", "citeRegEx": "Rot96", "shortCiteRegEx": null, "year": 1996}, {"title": "Algorithms for propositional model counting", "author": ["M. Samer", "S. Szeider"], "venue": "Journal of Discrete Algorithms, 8(1):50\u201364", "citeRegEx": "SS10", "shortCiteRegEx": null, "year": 2010}, {"title": "Model Counting for Formulas of Bounded CliqueWidth", "author": ["F. Slivovsky", "S. Szeider"], "venue": "Algorithms and Computation - 24th International Symposium, ISAAC 2013, pages 677\u2013687", "citeRegEx": "SS13", "shortCiteRegEx": null, "year": 2013}, {"title": "Solving MaxSAT and #SAT on structured CNF formulas", "author": ["S. Hortemo S\u00e6ther", "J.A. Telle", "M. Vatshelle"], "venue": "CoRR, abs/1402.6485", "citeRegEx": "STV14", "shortCiteRegEx": null, "year": 2014}, {"title": "New Width Parameters of Graphs", "author": ["M. Vatshelle"], "venue": "PhD thesis, University of Bergen", "citeRegEx": "Vat12", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 19, "context": "[Rot96]), so there is also great interest in the problem from a practical point of view.", "startOffset": 0, "endOffset": 7}, {"referenceID": 19, "context": "monotone 2-CNF-formulas, the problem is #P-hard and in fact even #P-hard to approximate [Rot96].", "startOffset": 88, "endOffset": 95}, {"referenceID": 22, "context": "Very recently, S\u00e6ther, Telle and Vatshelle, in a striking contribution [STV14], have introduced a new width measure for CNF-formulas, that they call PS-width.", "startOffset": 71, "endOffset": 78}, {"referenceID": 22, "context": "Thus they have essentially turned the construction of dynamic programming algorithms into a question of graph theory: If, for a class of formulas, one can efficiently compute decompositions that have small PS-width for all formulas having these graphs, the dynamic programming of [STV14] solves these instances.", "startOffset": 280, "endOffset": 287}, {"referenceID": 22, "context": "On the other hand, since, in our opinion, the framework of [STV14] is a very good formalization of dynamic programming, there is likely no efficient dynamic programming algorithm for a class of CNF-formulas, if it does not have decompositions of small PS-width, or if these decompositions cannot be constructed efficiently.", "startOffset": 59, "endOffset": 66}, {"referenceID": 17, "context": "The complexity of #SAT for \u03b2-acyclic formulas is interesting for several reasons: First, up to this paper, it was the only structural class of formulas for which we know that SAT is tractable [OPS13] without this directly generalizing to a tractability result for #SAT.", "startOffset": 192, "endOffset": 199}, {"referenceID": 17, "context": "This is because the algorithm of [OPS13] does not proceed by dynamic programming but uses resolution, a technique that is known to generally not generalize to counting.", "startOffset": 33, "endOffset": 40}, {"referenceID": 16, "context": "Moreover, \u03b2-acyclicity can be generalized to a width-measure [GP04], so there is hope that a good algorithm for \u03b2-acyclic formulas might generalize to wider classes for which even the status for SAT is left as an open problem in [OPS13].", "startOffset": 61, "endOffset": 67}, {"referenceID": 17, "context": "Moreover, \u03b2-acyclicity can be generalized to a width-measure [GP04], so there is hope that a good algorithm for \u03b2-acyclic formulas might generalize to wider classes for which even the status for SAT is left as an open problem in [OPS13].", "startOffset": 229, "endOffset": 236}, {"referenceID": 14, "context": "Since decomposition techniques based on hypergraph acyclicity tend to be more general than graph-based techniques [GLS00], this might lead to large, new classes of tractable #SAT-instances.", "startOffset": 114, "endOffset": 121}, {"referenceID": 9, "context": "in [DJ04], but since we allow clauses, resp.", "startOffset": 3, "endOffset": 9}, {"referenceID": 9, "context": "relations, of unbounded arity, our results and those of [DJ04] are incomparable.", "startOffset": 56, "endOffset": 62}, {"referenceID": 17, "context": "Instead of doing dynamic programming along a decomposition, we proceed along a vertex elimination order which is more similar to the approach to SAT in [OPS13].", "startOffset": 152, "endOffset": 159}, {"referenceID": 22, "context": "Our second contribution is that we show that our tractability result is not covered by the framework of S\u00e6ther, Telle and Vatshelle [STV14], short STV-framework, which\u2014as we show\u2014 covers all other known structural tractability results for #SAT.", "startOffset": 132, "endOffset": 139}, {"referenceID": 22, "context": "We do this by showing that \u03b2-acyclic #SAT-instances may have a PS-width so high that from [STV14] we cannot even get subexponential runtime bounds.", "startOffset": 90, "endOffset": 97}, {"referenceID": 22, "context": "If one accepts the framework of [STV14] as a good formalization of dynamic programming\u2014which we do\u2014then the deviation from the usual dynamic programming paradigm is not a coincidence but instead due to the fact that there is no efficient dynamic programming algorithm in the usual style.", "startOffset": 32, "endOffset": 39}, {"referenceID": 8, "context": "be found in [Die05].", "startOffset": 12, "endOffset": 19}, {"referenceID": 7, "context": "[CGH09].", "startOffset": 0, "endOffset": 7}, {"referenceID": 0, "context": "Theorem 5 ([ADM86]).", "startOffset": 11, "endOffset": 18}, {"referenceID": 22, "context": "In this section we introduce several width measures on graphs and CNF-formulas that are used when relating our algorithm for \u03b2-acyclic #CSPd to the framework of S\u00e6ther, Telle and Vatshelle [STV14].", "startOffset": 189, "endOffset": 196}, {"referenceID": 23, "context": "For an introduction into this area and many more details see [Vat12].", "startOffset": 61, "endOffset": 68}, {"referenceID": 23, "context": "Moreover, it is often convenient to see a branch decomposition as rooted tree, and as this does not change any of the notions we define (see [Vat12]), we generally follow this convention.", "startOffset": 141, "endOffset": 148}, {"referenceID": 3, "context": "[Bod93]), it is more convenient for us to work with the strongly related notion of Maximum-Matching-width (short MM-width) introduced by Vatshelle [Vat12].", "startOffset": 0, "endOffset": 7}, {"referenceID": 23, "context": "[Bod93]), it is more convenient for us to work with the strongly related notion of Maximum-Matching-width (short MM-width) introduced by Vatshelle [Vat12].", "startOffset": 147, "endOffset": 154}, {"referenceID": 22, "context": "Theorem 8 ([STV14]).", "startOffset": 11, "endOffset": 18}, {"referenceID": 22, "context": "Theorem 9 ([STV14]).", "startOffset": 11, "endOffset": 18}, {"referenceID": 23, "context": "In fact, even the complexity of deciding if a given graph has MIM-width 1 in polynomial time is left as an open problem in [Vat12].", "startOffset": 123, "endOffset": 130}, {"referenceID": 22, "context": "In this section we compare our algorithmic result for #SAT on \u03b2-acyclic hypergraphs to the framework proposed by S\u00e6ther, Telle and Vatshelle in [STV14] which we call short the STVframework.", "startOffset": 144, "endOffset": 151}, {"referenceID": 22, "context": "We first show that the STV-framework gives a uniform explanation of all tractability results for #SAT in the literature, extending the results of [STV14].", "startOffset": 146, "endOffset": 153}, {"referenceID": 20, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 51, "endOffset": 57}, {"referenceID": 20, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 82, "endOffset": 88}, {"referenceID": 18, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 125, "endOffset": 132}, {"referenceID": 18, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 136, "endOffset": 143}, {"referenceID": 13, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 177, "endOffset": 184}, {"referenceID": 17, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 215, "endOffset": 222}, {"referenceID": 21, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 226, "endOffset": 232}, {"referenceID": 22, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 246, "endOffset": 253}, {"referenceID": 6, "context": "class lower bound upper bound primal treewidth FPT [SS10] incidence treewidth FPT [SS10] modular incidence treewidth W1-hard [PSS13] XP [PSS13] signed incidence cliquewidth FPT [FMR08] incidence cliquewidth W1-hard [OPS13] XP [SS13] MIM-width XP [STV14] \u03b3-acyclic FP [GP04, SS13] disjoint branches FP [CDM14] \u03b2-acyclic FP (this paper)", "startOffset": 301, "endOffset": 308}, {"referenceID": 12, "context": "[FG06].", "startOffset": 0, "endOffset": 6}, {"referenceID": 23, "context": "In [Vat12] it is shown that MIM-width is bounded by cliquewidth, so nearly all tractability results of Table 1 follow from [STV14].", "startOffset": 3, "endOffset": 10}, {"referenceID": 22, "context": "In [Vat12] it is shown that MIM-width is bounded by cliquewidth, so nearly all tractability results of Table 1 follow from [STV14].", "startOffset": 123, "endOffset": 130}, {"referenceID": 6, "context": "In this section we show how the tractability of #SAT on hypergraphs with a disjoint branches decomposition proved in [CDM14] can be explained by the STV-framework.", "startOffset": 117, "endOffset": 124}, {"referenceID": 10, "context": "Hypergraphs with disjoint branches decompositions are a strict subclass of \u03b2-acyclic hypergraphs [Dur12].", "startOffset": 97, "endOffset": 104}, {"referenceID": 6, "context": "[CDM14] There is an algorithm that, given a hypergraph H, in time polynomial in \u2016H\u2016 compute a disjoint branches decomposition of H if one exists and rejects otherwise.", "startOffset": 0, "endOffset": 7}, {"referenceID": 6, "context": "Corollary 30 ([CDM14]).", "startOffset": 14, "endOffset": 21}, {"referenceID": 13, "context": "In this section we use the STV-framework to reprove a result from [FMR08] stating that #SAT is fixed-parameter tractable parameterized by signed cliquewidth.", "startOffset": 66, "endOffset": 73}, {"referenceID": 13, "context": "We first state the relevant definitions from [FMR08].", "startOffset": 45, "endOffset": 52}, {"referenceID": 13, "context": "Corollary 32 ([FMR08]).", "startOffset": 14, "endOffset": 21}, {"referenceID": 13, "context": "Note that the runtime bound in [FMR08] cannot be easily compared, because the runtime in [FMR08] depends on the size of the parse tree directly and not on the formula.", "startOffset": 31, "endOffset": 38}, {"referenceID": 13, "context": "Note that the runtime bound in [FMR08] cannot be easily compared, because the runtime in [FMR08] depends on the size of the parse tree directly and not on the formula.", "startOffset": 89, "endOffset": 96}, {"referenceID": 15, "context": "Using the connection between vertex expansion and treewidth (see [GM09]) the following lemma is easy to show.", "startOffset": 65, "endOffset": 71}, {"referenceID": 8, "context": "[Die05]), and thus tw(G) \u2264 tw(G1).", "startOffset": 0, "endOffset": 7}, {"referenceID": 6, "context": "We have shown that \u03b2-acyclic #SAT can be solved in polynomial time, a question left open in [CDM14].", "startOffset": 92, "endOffset": 99}, {"referenceID": 22, "context": "Instead, \u03b2-acyclic #SAT lies outside the STV-framework of [STV14] that explains all old results in a uniform way.", "startOffset": 58, "endOffset": 65}, {"referenceID": 16, "context": "In this direction, it would be interesting to see if hypergraphs of bounded \u03b2-hypertree width, a width measure generalizing \u03b2-acyclicity proposed in [GP04], can be characterized by elimination orders and if such a characterization can be used to solve #SAT on the respective instances.", "startOffset": 149, "endOffset": 155}, {"referenceID": 17, "context": "Also, even the complexity of deciding SAT on instances of bounded \u03b2-hypertree width is an open problem [OPS13].", "startOffset": 103, "endOffset": 110}, {"referenceID": 22, "context": "For example, is there any uniform explanation for tractability of bounded cliquewidth #SAT and \u03b2-acyclic #SAT, similarly to the way in which the framework of [STV14] explains tractability for all previously known results? Finally, we feel that, although we have shown that the STV-framework does not explain all tractability results for #SAT, it is still a framework that should be studied in the future.", "startOffset": 158, "endOffset": 165}], "year": 2014, "abstractText": "We extend the knowledge about so-called structural restrictions of #SAT by giving a polynomial time algorithm for \u03b2-acyclic #SAT. In contrast to previous algorithms in the area, our algorithm does not proceed by dynamic programming but works along an elimination order, solving a weighted version of constraint satisfaction. Moreover, we give evidence that this deviation from more standard algorithm is not a coincidence, but that there is likely no dynamic programming algorithm of the usual style for \u03b2-acyclic #SAT.", "creator": "LaTeX with hyperref package"}}}