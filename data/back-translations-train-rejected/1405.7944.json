{"id": "1405.7944", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-May-2014", "title": "Military Simulator - A Case Study of Behaviour Tree and Unity based architecture", "abstract": "In this paper we show how the combination of Behaviour Tree and Utility Based AI architecture can be used to design more realistic bots for Military Simulators. In this work, we have designed a mathematical model of a simulator system which in turn helps in analyzing the results and finding out the various spaces on which our favorable situation might exist, this is done geometrically. In the mathematical model, we have explained the matrix formation and its significance followed up in dynamic programming approach we explained the possible graph formation which will led improvisation of AI, latter we explained the possible geometrical structure of the matrix operations and its impact on a particular decision, we also explained the conditions under which it tend to fail along with a possible solution in future works.", "histories": [["v1", "Fri, 30 May 2014 18:22:59 GMT  (498kb)", "http://arxiv.org/abs/1405.7944v1", "4 pages, 4 figures"]], "COMMENTS": "4 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["shruti jadon", "anubhav singhal", "suma dawn"], "accepted": false, "id": "1405.7944"}, "pdf": {"name": "1405.7944.pdf", "metadata": {"source": "META", "title": "Military Simulator - A Case Study of Behaviour Tree and Unity based architecture", "authors": ["Shruti Jadon", "Anubhav Singhal"], "emails": [], "sections": [{"heading": null, "text": "In this thesis, we have designed a mathematical model of a simulator system, which in turn helps to analyze the results and identify the different spaces on which our favorable situation might exist, this happens geometrically. In the mathematical model, we have explained the matrix formation and its significance within the framework of a dynamic programming approach, we have explained the possible graph formation that will lead to the improvisation of AI, the latter we have explained the possible geometric structure of matrix operations and their impact on a particular decision, we have also explained the conditions under which it tends to fail, together with a possible solution in future workflows. General conditions game design platform, usage-based AI, tropical geometry, game programming Keywords Military Simulator, Behaviour Tree, Ranking Matrix."}, {"heading": "1. INTRODUCTION", "text": "War games are the closest training that soldiers can undergo to actual combat. It recreates every physical aspect of combat, such as fatigue, fear, smells, sounds, etc. But it is also very expensive. Different types of training camps need to be prepared for different terrains, and they cannot simply be changed. There are also ethical dilemmas such as accommodating the elderly or children in training, but if a soldier only needs to test his tactics or know the location of the country, this type of training is not necessary in the initial phase. Military simulators are used for this purpose. The greatest need for the simulator is to create an enemy that reacts like a human enemy. The role of artificial intelligence comes into play here [1] and [10]. In game theory, we define for analyzing each situation the matrix consisting of the likely response of the opponent to a particular decision. Here, in this game we will first define the matrix on ideal situation that can only change with the help of the matrix in its method."}, {"heading": "2. BACKGROUND STUDY", "text": "There have been various problems in training soldiers in war games. The cost of these games is too high. A location needs to be found and built to the specifications, which costs a lot of resources in terms of time, money and manpower. Apart from that, the ammunition and other weapons used in the training contribute to the cost. Cultural authenticity also needs to be created specifically for the war in foreign countries such as Iraq or Iran. Role players usually help to achieve this goal, but then there is the ethical dilemma of keeping children and the elderly as role players. However, soldiers will have to face these situations on the battlefield, and role players will also be exhausted and may not be able to do the same throughout the training, putting the entire training at risk. And the cost of this training makes it difficult for everyone to perform this training or training for a long time. Military simulators [3], [4] and [6] are very popular with governments because they play their role in such an authentic way that they cannot fulfill this training in full scope."}, {"heading": "3. MATHEMATICAL MODEL", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Basic Mathematical Model", "text": "The strategy matrix [11] can be specified as RXA. (1) where A is the matrix M x N, where N is the number of strategies used in the game & M = 1 (since initial AI is designed [8] only indicates an opponent's strategy) R is the desired result (maximum or minimum value) Since we know that the matrix column values can be represented as a vector in a room, we can see that the vector \"X\" will be a continuous curve in ndimensional space and the vector \"A\" n points will be distributed in that space, so that this equation can be considered as, nnbbbaaaaa1121111211 (2)."}, {"heading": "3.2 Dynamic programming in diagrammatic approach:", "text": "In this sense, it is also possible that we will be able to go in search of a solution that puts us in the position we are in and that enables us to find a solution that enables us to find a solution that enables us to find a solution, that enables us to find a solution, and that enables us to find a solution that enables us to find a solution that enables us to find a solution that enables us to find a solution, and that enables us to find a solution that enables us to find a solution that is capable of finding a solution that is capable of finding a solution that is capable of finding a solution. \""}, {"heading": "4. SIMULATION ARCHITECTURE", "text": "The basic AI framework consists of a behavioural tree, with each level in the tree corresponding to a different state in which the AI will be. The state in which the AI passes from one level to the other is calculated by utility-based AI [1], [3] and [4]."}, {"heading": "4.1 Behaviour Architecture", "text": "It is a hierarchical approach to mapping the behavior of an object. At the first evaluation, they start at the root node and each child is evaluated; the child can be a behavior or another selector that re-evaluates what behavior to select; when all the conditions of a child node are met, its behavior is started; when a node starts a behavior process, that node is set to the \"execute\" status and returns the behavior; the next time the tree is evaluated when it comes to an \"execute\" node, it knows where it left off; the node can have a sequence of actions and conditions before reaching its final state; when a condition fails, the traverse returns to the parent. BT relies on Boolean conditions for its selectors, making understanding and implementing it very easy, but limiting the complexity of the AI that can be designed by the BT; therefore, we want to maintain the hierarchical and simplistic approach of BT while maintaining its ability to be much more complex in architecture."}, {"heading": "4.2 Utility Based AI", "text": "There are two factors that influence decision-making: selectors and rationers. Selectors each select only one event based on criteria, without calculating probability. While rationers calculate the probability of many events at once and select an event based on its value, so instead of selectors they use rationers. Selectors use simple logic such as selecting the first option that meets the requirement, or selecting according to predefined priority or probability. But the rationer is complex. It can be used to dynamically calculate weights, values, or probabilities on the basis of which decisions are made [6]. There may not be a single right choice, but several choices, one of which is selected based on external factors such as threat, health, etc."}, {"heading": "4.3 Decision making", "text": "Fig. 1 is a very rudimentary behavioural tree of an AI in a first person shooter game.This sub-tree can easily be programmed with BT, as the probability of doing something in the sub-tree is the same. Therefore, no complex calculations are required.When the game AI hears a shot or hears a suspicious voice, it is changed to active search status.States are changed based on a global parameter force. It increases when activity occurs that indicates the presence of intruders such as shots, rustling of leaves in suspicious areas, etc. When violence reaches a threshold, the AI status changes and goes into a more aggressive mode. Over time, the force decreases and the AI can revert to its passive state. But when the power value decreases, we are recognized as the enemy."}, {"heading": "5. CONCLUSIONS", "text": "We have proposed an AI approach for a military simulator, which is a mixture of behavioural tree and useful AI architectures. Instead of being static, the probabilities are dynamically calculated based on the situation. In addition, tropical mathematics can be used to create the favorable curve design, and we can try to find a specific pattern in it, and feed this data into the AI to make it more effective and optimized."}, {"heading": "6. REFERENCES", "text": "[1] Mark, D., and Dill, K. 2010. Improving AI DecisionModeling Through Utility Theory. Game Developers Conference. [2] Laird, J. E. and van Lent, M. 2001. Human-Level AI's Killer Application Interactive Computer Games. AIMagazine Volume 22 Number 2. [3] Dill, K. and Mark, D. 2012. Embracing the Dark Art of Mathematical Modeling in AI. Game DevelopersConference. [4] Dill, K. and Martin, L. 2011. A Game AI Approach to Autonomous Control of Virtual Characters.Interservice / Industry Training, Simulation, and Education Conference (I / ITSEC). [5] Mitgutsch, K. and Weise, M. 2011 Subversive Game Design for Recursive Learning, Singapore. MITGAMBIT Game Lab. Massachusetts Institute of Technology. [6] van Lent, M. and Laird, L. 1999."}], "references": [{"title": "Improving AI Decision Modeling Through Utility Theory", "author": ["D. Mark", "K. Dill"], "venue": "Game Developers Conference", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Human-Level AI\u2019s Killer Application", "author": ["J.E. Laird", "M. van Lent"], "venue": "Interactive Computer Games. AI Magazine Volume", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2001}, {"title": "Embracing the Dark Art of Mathematical Modeling in AI", "author": ["K. Dill", "D. Mark"], "venue": "Game Developers Conference", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "A Game AI Approach to Autonomous Control of Virtual Characters. Interservice/Industry Training, Simulation, and Education Conference (I/ITSEC)", "author": ["K. Dill", "L. Martin"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Subversive Game Design for Recursive Learning, Singapore", "author": ["K. Mitgutsch", "M. Weise"], "venue": "MIT GAMBIT Game Lab. Massachusetts Institute of Technology", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Developing an Artificial Intelligence Engine", "author": ["M. van Lent", "L. Laird"], "venue": "Artificial Intelligence Lab. University of Michigan", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1999}, {"title": "Enumerative tropical algebraic geometry in R2", "author": ["G. Mikhalkin"], "venue": "J. Amer.Math. Soc. 18,no", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2005}, {"title": "Assistant Agents for Sequential Planning Problems", "author": ["O. Macindoe", "L. Pack Kaelbling", "T. Lozano Perez"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Non-negative Matrix Factorization with Sparseness Constraints", "author": ["Patrik O. Hoyer"], "venue": "Journal of Machine Learning Research", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Playing With Fire-How do computer games affect the player? The Media Council for Children and Young People", "author": ["S. Egenfeldt-Nielsen", "J. Heide Smith"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Operations Research 3OR. School of Mathematics & Statistics, the University of Western Australia", "author": ["S. Wang"], "venue": "IJCATM : www.ijcaonline.org", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "The role of Artificial Intelligence comes into play here [1] and [10].", "startOffset": 57, "endOffset": 60}, {"referenceID": 9, "context": "The role of Artificial Intelligence comes into play here [1] and [10].", "startOffset": 65, "endOffset": 69}, {"referenceID": 7, "context": "Here in this game, we will firstly define the matrix on ideal situation which will change as time passes with help of AI designed in it [8], the iterative method of testing the correct value of the matrix will help us to achieve the more accurate values of the matrix, and this can only be achieved with more usage of this game by various communities, more specifically by defense agencies", "startOffset": 136, "endOffset": 139}, {"referenceID": 2, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 20, "endOffset": 23}, {"referenceID": 3, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 25, "endOffset": 28}, {"referenceID": 5, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 33, "endOffset": 36}, {"referenceID": 10, "context": "1 Basic Mathematical Model The strategy matrix [11] can be stated as, R X A \uf03d .", "startOffset": 47, "endOffset": 51}, {"referenceID": 7, "context": "(1) where A is M x N matrix where N is the number of strategies used in game & M=1 (as initial AI designed [8] indicates only one strategy of the opponent) R is desired result (maximum or minimum value), As we know that the matrix column values can be represented as a vector in a space, so we can see that the vector \u2018X\u2019 will be some continuous curve in ndimensional space, and the vector \u2018A\u2019 will be n points spread in that space, so this equation can be seen as,", "startOffset": 107, "endOffset": 110}, {"referenceID": 7, "context": "For example if the \u2018A\u2019 matrix consists of the m 0\u2019s[8] in it then it conclude that the numbers of points in n- dimensional space are reduced to \u2018nm\u2019 number of points, and thus we can see that still we will find numerous possible combinations in X, but as to minimize the loss of money and time, we will find only 1 point in that space which consists of the 0 value of X vector which will multiply with value in A vector, and thus the curve of X will be discontinuous, in such situations it is hard to determine the actual probability.", "startOffset": 51, "endOffset": 54}, {"referenceID": 6, "context": "Tropical diagrams [7] can be made and analyzed in two ways first is Tropical graph made on Euclidean plane and second one is made on Tropical plane.", "startOffset": 18, "endOffset": 21}, {"referenceID": 0, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 109, "endOffset": 112}, {"referenceID": 2, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 114, "endOffset": 117}, {"referenceID": 3, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 122, "endOffset": 125}, {"referenceID": 5, "context": "It can be used to dynamically calculate weights, scores or probabilities on basis of which the choices are made[6].", "startOffset": 111, "endOffset": 114}, {"referenceID": 0, "context": "This is called marginal utility [1] and [3] because as the amount of threat increases, it becomes of much more importance than before.", "startOffset": 32, "endOffset": 35}, {"referenceID": 2, "context": "This is called marginal utility [1] and [3] because as the amount of threat increases, it becomes of much more importance than before.", "startOffset": 40, "endOffset": 43}], "year": 2014, "abstractText": "In this paper we show how the combination of Behaviour Tree and Utility Based AI architecture can be used to design more realistic bots for Military Simulators. In this work, we have designed a mathematical model of a simulator system which in turn helps in analyzing the results and finding out the various spaces on which our favorable situation might exist, this is done geometrically. In the mathematical model, we have explained the matrix formation and its significance followed up in dynamic programming approach we explained the possible graph formation which will led improvisation of AI, latter we explained the possible geometrical structure of the matrix operations and its impact on a particular decision, we also explained the conditions under which it tend to fail along with a possible solution in future works. General Terms Game designing platform, Utility-based AI, Tropical Geometry, Game programming", "creator": "Microsoft\u00ae Office Word 2007"}}}