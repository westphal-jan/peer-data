{"id": "1406.0955", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Jun-2014", "title": "Cascading A*: a Parallel Approach to Approximate Heuristic Search", "abstract": "In this paper, we proposed a new approximate heuristic search algorithm: Cascading A*, which is a two-phrase algorithm combining A* and IDA* by a new concept \"envelope ball\". The new algorithm CA* is efficient, able to generate approximate solution and any-time solution, and parallel friendly.", "histories": [["v1", "Wed, 4 Jun 2014 07:12:16 GMT  (330kb,D)", "https://arxiv.org/abs/1406.0955v1", null], ["v2", "Tue, 3 May 2016 03:20:46 GMT  (330kb,D)", "http://arxiv.org/abs/1406.0955v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yan gu"], "accepted": false, "id": "1406.0955"}, "pdf": {"name": "1406.0955.pdf", "metadata": {"source": "CRF", "title": "Cascading A*: a Parallel Approach to Approximate Heuristic Search", "authors": ["Yan Gu"], "emails": [], "sections": [{"heading": null, "text": "Cascading A *: a parallel approach to Approximate HeuristicSearchYan Gu"}, {"heading": "1 Introduction and Background", "text": "The most important questions and answers to this theme are: \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is this?,\" \"What is that?,\" \"What is that?,\" \"\" What is that?, \"\" \"What is that?,\" \"\" What is that?, \"\" \"What is that?,\" \"what is that?,\" \"what is that?,\" what is that, \"what is that,\" what is that, \"what is that,\" what is that, \"what,\" what, \"what,\" what, \"what,\" what, \"what,\" what, \"that,\" what, \"what,\" that, \"what,\" what, \"that,\" what, \"that,\" what, \"that,\" that, \"what,\" that, \"that,\" that, \"that,\" that, \"that,\" what, \"that,\" that, \"that,\" that, \"that,\" that, \"what,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,\" that, \"that,"}, {"heading": "2 Cascading A*", "text": "The Cascading A * algorithm is a hybrid algorithm of A * algorithm and IDA * algorithm. The overarching idea of the CA * algorithm is as follows: \u2022 To quickly generate an approximate solution, CA * uses an outer A * algorithm that uses prohibited heuristics. \u2022 To generate a sufficient number of threads or subtasks for many-core hardware, we introduce the concept of the \"envelope sphere,\" which is a sphere containing all states or vertices with the radius of R defined by a threshold function that is treated as a parameter of CA *. After each of the states reaching the envelope sphere, it forms a new thread to subtask with a separate core. After presenting the overarching idea of the CA * algorithm, we offer the pseudo code in algorithm 1. Entering CA * includes a graphical state, an intermediate state, an S and an explicit state."}, {"heading": "3 Experiment Problem: The N 2 \u2212 1 Sliding Puzzle", "text": "In this section, we present the sliding puzzle N2 \u2212 1, like the experimental problem of CA *. The most famous version is the fifteen-piece puzzle, invented in 1880 by Noyes Chapman, which caused a puzzle frenzy. The 15-piece puzzle consists of a frame of numbered square tiles in random order with one tile missing. The puzzle also exists in other sizes, especially the smaller 8-piece puzzle. If the size is 3 \u00d7 3 tiles, the puzzle is called the 8-piece puzzle, and if 4 \u00d7 4 tiles are missing, the puzzle is called the 15-piece puzzle, named after the number of tiles or spaces. The object of the puzzle is the order of the tiles (see diagram) by sliding covers that use the empty space. An example is given in the figure below. The N2 \u2212 1 puzzle is a classic problem for modeling hay algorithms used."}, {"heading": "4 Experiment and Results", "text": "To test the performance of the CA * algorithm, we select 4 x 4 (15) and 5 x 5 (24) puzzles to test the performance. In addition, we use the inadmissible heuristic g + C \u00b7 h to get an approximate solution where C is a constant between 1 and 2. In addition, here is the threshold function we use, t (S) = (h (S) < \u03b81) * (((GlobalAnswer \u2212 g (S) < \u03b82). The machine we use for the experiment is \"oblivious.cmu.edu,\" which for most test cases are the parameters (\u03b81, \u03b82, \u03b83) = (30, 40, 15). Initially, CA * GlobalAnswer sets = +. The machine we use for the experiment is \"oblivious.cmu.edu,\" which has 8 Intel i7 cores in 3.2 GHz. Parallel implementations were compiled with CilkPlus, the DA is included in puzzles + 15."}, {"heading": "5 Conclusion", "text": "In this paper, we proposed a new approximate heuristic search algorithm: Cascading A *, a two-phrase algorithm that combines A * and IDA * through a new concept called \"envelope.\" The new CA * algorithm is efficient (compares runtime with IDA * in 15 puzzles), able to generate an approximate solution and a solution available at all times, and in parallel friendly."}], "references": [{"title": "A note on two problems in connexion with graphs. Numerische mathematik", "author": ["Dijkstra", "Edsger W"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1959}, {"title": "Memory-bounded bidirectional search AAAI", "author": ["Kaindl", "Hermann", "Aliasghar Khorsand"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1994}, {"title": "Finding Optimal Solutions to the Twenty-four Puzzle", "author": ["E. Korf R", "A. Taylor L"], "venue": "Proceedings of the national conference on artificial intelligence", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1996}], "referenceMentions": [{"referenceID": 0, "context": "A* algorithm was first described by Peter Hart, Nils Nilsson and Bertram Raphael in 1968 [1], which is an extension of Edsger Dijkstra\u2019s 1959 algorithm [2].", "startOffset": 152, "endOffset": 155}, {"referenceID": 1, "context": "Alternative versions of A* are proposed to overcome these problems, which includes IDA* [3], SMA* [4], beam search, etc.", "startOffset": 98, "endOffset": 101}, {"referenceID": 2, "context": "Taylor [5] showed that 114 single-tile moves are needed.", "startOffset": 7, "endOffset": 10}], "year": 2016, "abstractText": "Definition 1. Given a undirected graph G = (V,E), two vertices are adjacent when they are both incident to a common edge. A path in an undirected graph is a sequence of vertices P = (v1, v2, . . . , vn) \u2208 V n such that vi is adjacent to vi+1 for 1 \u2264 i < n. Such a path P is called a path of length n from v1 to vn. Let ei,j be the edge incident to both vi and vj. Given a real-valued weight function f : E \u2192 R, and an undirected graph G, the shortest path from v to v\u2032 is the path P = (v1, v2, . . . , vn) that over all possible n minimizes the sum \u2211n\u22121 i=1 f(ei,i+1), v1 = v and vn = v \u2032.", "creator": "LaTeX with hyperref package"}}}