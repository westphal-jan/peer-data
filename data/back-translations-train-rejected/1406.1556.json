{"id": "1406.1556", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jun-2014", "title": "Enhancements to ACL2 in Versions 6.2, 6.3, and 6.4", "abstract": "We report on improvements to ACL2 made since the 2013 ACL2 Workshop.", "histories": [["v1", "Fri, 6 Jun 2014 01:46:54 GMT  (16kb,D)", "http://arxiv.org/abs/1406.1556v1", "In Proceedings ACL2 2014,arXiv:1406.1238"]], "COMMENTS": "In Proceedings ACL2 2014,arXiv:1406.1238", "reviews": [], "SUBJECTS": "cs.AI cs.LO cs.MS", "authors": ["matt kaufmann", "j strother moore"], "accepted": false, "id": "1406.1556"}, "pdf": {"name": "1406.1556.pdf", "metadata": {"source": "CRF", "title": "Enhancements to ACL2 in Versions 6.2, 6.3, and 6.4", "authors": ["Matt Kaufmann", "J Strother Moore"], "emails": ["kaufmann@cs.utexas.edu", "moore@cs.utexas.edu"], "sections": [{"heading": null, "text": "F. Verbeek and J. Schmaltz (ed.): ACL2 Workshop 2014 (ACL2 '14). EPTCS 152, 2014, pp. 1-7, doi: 10.4204 / EPTCS.152.1c \u00a9 Matt Kaufmann and J Strother Moore This work is licensed under the Creative Commons Attribution License.Enhancements to ACL2 in versions 6.2, 6.3 and 6.4Matt KaufmannDept. of Computer Science, University of Texas at Austin kaufmann @ cs.utexas.eduJ Strother MooreDept. of Computer Science, University of Texas at Austin moore @ cs.utexas.eduWe report on improvements to ACL2 since the ACL2 Workshop 2013."}, {"heading": "1 Introduction", "text": "This year, it has never been as good as it has been this year."}, {"heading": "2 Changes to Existing Features", "text": "In fact, most of them will be able to play by the rules they have imposed on themselves, and they will be able to play by the rules they have imposed on themselves."}, {"heading": "3 New Features", "text": "This section discusses some of the most interesting new features recently added to ACL2. As before, the release notes for the specified versions contain more complete information.6.2 The defstobj event, which introduces singled-threaded objects (see Section 1), allows stobjs to have fields that are themselves stobjs or arrays of stobjs. In the case of these nested stobj structures, fields are called using a new construct, stobj-let.6.2 ACL2 supports metatheoretical reasoning that can be implemented using advanced metafunctions that can access the environment. The logical world - that is, the ACL2 database - is available using the mfc-world.6.2 ACL2 supports many types of declared forms that are processed by the host common lisp compiler, but also others specified by xargs."}, {"heading": "4 Heuristic Improvements", "text": "The development of ACL2 began in 1989, and the development of the Boyer-Moore series of testers began in 1971. Unsurprisingly, at least to us, there have been relatively few changes to the heuristics of testers in recent ACL2 publications. However, there are a few as the user community finds new uses of ACL2 that offer opportunities to improve heuristics. The following summary is intended to give a sense of how ACL2 heuristics have been optimized without delving into unnecessary details of how they work. (Heuristics are generally not documented at the user level, as we do not expect it to be necessary or useful to understand in any depth how they work to be an effective ACL2 user.) ACL2 has an ancestor check heuristic that can prevent excessive backchaining by hypotheses of rules. The following list (which we invite beginners to skip them!) describes how this heuristic approach has not been improved - the heuristic approach has been tweaked."}, {"heading": "5 Bug Fixes", "text": "In fact, we will be able to find a solution that will enable us to find a solution, that will enable us to find a solution that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution, that will enable us to find a solution. \""}, {"heading": "6 Changes at the System Level", "text": "Some of the more comprehensive changes to ACL2 have taken place far from its theorem tester, and here we will briefly discuss some of them.6.2 Since the beginning of ACL2, Gnu Common Lisp (GCL) has been one of the host lisps on which ACL2 can be build.6.2 The previous system for certifying community books has been updated; in particular, it is largely based on cert.pl and other utilities managed by Jared Davis and Sol Swords. See books-certification.6.3 ACL2 is now available between releases on SVN, at http: / / acl2-develop.googlecode.com. Disclaimer (according to the warning message printed at startup): The authors of ACL2 consider svn distributions experimental; they may be unbreakable, unable to solve our DOC, and not be able to solve our problems in DOC."}, {"heading": "7 Emacs Support", "text": "The primary Emacs-related ACL2 extension is a new utility introduced in version 6.4, ACL2-Doc, to search documentation within Emacs. This utility replaces Emacs Info, which is no longer supported due to the transition to XDOC discussed in Section 6. Emacs users will find this utility a good alternative to using: doc on the terminal. It can be used to search either the acl2 + manual or the ACL2 user manual, which is automatically loaded into Emacs when the default emacs / emacs-acl2.el file is loaded."}, {"heading": "8 Conclusion", "text": "We have outlined some of the more interesting and important changes to ACL2 in versions 6.2, 6.3 and 6.4. We hope that a quick reading of this paper will enable ACL2 users to quickly focus on topics of particular interest while simply following the links (in the online version of this paper) to learn more about these topics, with the result of becoming more effective ACL2 users. Many other changes (a total of about 100) are described in the release notes for these versions, and many lower-level changes are described in comments in the source code of these release notes, such as (defxdoc note-6-2...) in community books / system / doc / acl2-doc.lisp.A crucial component in the further development of ACL2 is the feedback of its user community, which we hope will continue! We also appreciate contributions from the user community to the large number of community books that help us test the system [2] and the requirements of these books."}, {"heading": "Acknowledgements", "text": "We thank the members of the ACL2 community whose feedback has led us to make further improvements to ACL2. In particular, we thank the following individuals mentioned in one or more specific points in the release notes for version 6.2, 6.3, or 6.4: Harsh Raju Chamarthi, Jared Davis, Jen Davis, Caleb Eggensperger, Shilpi Goel, Dave Greve, Warren Hunt, Robert Krug, Camm Maguire, David Rager, Gisela Rossi, Sol Swords, Raymond Toy, and Nathan Wetzler. We expressly thank Warren Hunt for his continued support of ACL2 usage and development over many years at UT Austin.We are grateful to Shilpi Goel, Warren Hunt, Robert Krug, Sandip Ray, Nathan Wetzler, and the referees for feedback on drafts of this paper, which is based on work supported by DARPA under Contract # N66001-10-2-4087, ForrestHunt Foundation, National Patron # 158 of the LACL2 Foundation."}], "references": [{"title": "Rewriting with Equivalence Relations in ACL2", "author": ["Bishop Brock", "Matt Kaufmann", "J Strother Moore"], "venue": "Journal of Automated Reasoning", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2008}, {"title": "Rough Diamond: An Extension of Equivalence-based Rewriting", "author": ["Matt Kaufmann", "J Strother Moore"], "venue": "To appear, Proceedings of ITP", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "How Can I Do That with ACL2? Recent Enhancements to ACL2", "author": ["Matt Kaufmann", "J Strother Moore"], "venue": "editors: ACL2,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Enhancements to ACL2 in Versions", "author": ["Matt Kaufmann", "J Strother Moore"], "venue": "Proceedings International Workshop on the ACL2 Theorem Prover and its Applications,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}], "referenceMentions": [{"referenceID": 3, "context": ") Hence this paper is analogous to two papers that correspond to earlier sets of releases [6, 5].", "startOffset": 90, "endOffset": 96}, {"referenceID": 2, "context": ") Hence this paper is analogous to two papers that correspond to earlier sets of releases [6, 5].", "startOffset": 90, "endOffset": 96}, {"referenceID": 0, "context": "[1] The functionality of congruence rules is extended by patterned congruence rules [4] allowing a more general specification of where an equivalence is to be maintained.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[1] The functionality of congruence rules is extended by patterned congruence rules [4] allowing a more general specification of where an equivalence is to be maintained.", "startOffset": 84, "endOffset": 87}], "year": 2014, "abstractText": null, "creator": "LaTeX with hyperref package"}}}