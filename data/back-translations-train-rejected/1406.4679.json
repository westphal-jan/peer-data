{"id": "1406.4679", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2014", "title": "The Propagation Depth of Local Consistency", "abstract": "We establish optimal bounds on the number of nested propagation steps in $k$-consistency tests. It is known that local consistency algorithms such as arc-, path- and $k$-consistency are not efficiently parallelizable. Their inherent sequential nature is caused by long chains of nested propagation steps, which cannot be executed in parallel. This motivates the question \"What is the minimum number of nested propagation steps that have to be performed by $k$-consistency algorithms on (binary) constraint networks with $n$ variables and domain size $d$?\"", "histories": [["v1", "Wed, 18 Jun 2014 11:05:55 GMT  (62kb,D)", "http://arxiv.org/abs/1406.4679v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["christoph berkholz"], "accepted": false, "id": "1406.4679"}, "pdf": {"name": "1406.4679.pdf", "metadata": {"source": "CRF", "title": "The Propagation Depth of Local Consistency", "authors": ["Christoph Berkholz"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "It is a question of the extent to which people are able to abide by the rules that they have imposed on themselves. (...) It is a question of the extent to which they are able to abide by the rules. (...) It is a question of the extent to which they are able to abide by the rules. (...) It is a question of the extent to which they are able to abide by the rules. (...) It is a question of the extent to which they are able to abide by the rules. (...) It is a question of the extent to which they are able to abide by the rules. \"(...)"}, {"heading": "2 Preliminaries", "text": "The universe V (A) of structure A corresponds to the set of variables X, and the universe V (B) of structure B corresponds to domain D. The constraints are encoded in relationships, so that every homomorphism from A to B corresponds to a solution of CSP. For the rest of this paper, we mainly stick to this definition because it is more convenient for us. In fact, our main result benefits to a large extent from the fruitful connection between these two viewpoints. II In the introduction, we have presented k-consistency as a propagation process of constraint networks. In the following, we present the definition in relation to a formal system of inference (inspired by the system of proof in [1] and a generalization of [4]). This view allows us to see the structure of the existential course of this game, which we define as the main component of our process in which we formally provide the proof of consistency."}, {"heading": "2.1 CSP-refutations", "text": "The axioms are all partial mappings p: V (A) \u2192 V (B), which are not partial homomorphisms. We have the following derivative rule to derive a new inconsistent mapping from it. (CSP) For all partial mappings p: i (1), x (A) and V (B), which are not partial homomorphisms. (1) The CSP derivative of p: p is a sequence (p1) and V (B) = {a1,., so that each Pi is either an axiom or from the lines pj, j < i, via the derivative rule (1). A CSP derivative of p is a derivative of p (p1)."}, {"heading": "2.2 Results and Related Work", "text": "Theorem 1. For each integer k \u2265 2 there is a constant \u03b5 > 0 and two positive integers n0, m0 such that for each n \u2265 n0 and m \u2265 m0 there are two binary structures An and Bm with | V (An) | = n and | V (Bm) | = m such that depthk (An, Bm) \u2265 \u03b5nk \u2212 1mk \u2212 1. We are aware of two particular cases that were discovered earlier. Firstly, for case k = 2 (arc consistency) the theorem can be shown using rather simple examples that occurred very early in the AI community. The structure of this extraordinary case is discussed in a joint paper by Oleg Verbitsky and the author of this paper [4]. Secondly, for k = 3 Ladkin and Maddux [14] showed that there is a fixed binary structure B and an infinite sequence of binary structures."}, {"heading": "2.3 The Existential Pebble Game", "text": "In this point, we introduce a third point of view on the pebble couples (pi, qi) on the pebble couples who are able to, the pebbles p1, pk, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, p1, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebbles, pebos, pebos, pebos, pebbles, p1, qk, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebles, p.s, pebles, pebles, pebles, pebos, p1, pebles, pebbles, pebbles, pebbles, pebos, pebos, pebbles, pebos, pebbles, pebbles, pebos, pebbles, pebbles, pebbles, pebles, pebles, pebles, pebos, pebles, pebles, pebles, pebos, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebos, pebos, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebos, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebles, pebos, pebles, pebos, pebles, pebles, pebles, pebles, pebles, pebles, pos, pebles, pebles, pebles, pebles, pebles, pebles, pos, pebles, pebles,"}, {"heading": "3 The Construction", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Overview of the Construction", "text": "In this section, we prove theorem 1 for k \u2265 3. We leave k: = k \u2212 1 \u2265 2 and construct two vertex colored graphs on and Bm with O (n) and O (m) vertically so that spoilers need a color to win the existential (k + 1) -pebble game. We color the indentations of both graphs so that the color partition of the vertex is converted into independent sets, i. Each vertex gets a color and there is no edge between the indentations of the same color. The basic building blocks in our construction are sets of indentations that allow to store the partial homomorphisms with k pebbles.We adjust the indentations, j [n] in On and indentations xij [k], j [m] in Bm."}, {"heading": "3.2 The Gadgets", "text": "We describe the winning gadget and the incremental gadget in detail and provide strategies for spoiler and duplicator. Afterwards, we briefly discuss the switch and initialization gadget. In the next section, we combine the partial strategies on the gadgets to prove that the winning gadget is represented in Figure 3. On the spoiler side, there is only one additional vertex a that is connected to xin for all i pages. On the spoiler side, there are k additional vertices ai, i-k [k]. Each ai is connected to all input vertices except xim. We use a new vertex color to color the vertex and all vertices ai. From position {x1n, x1m),. (xkn, xkm)}. \""}, {"heading": "3.3 Proof of Theorem 1", "text": "It is not as if we are able to pursue such a strategy. - It is not as if we are applying such a strategy. - It is not as if we are applying such a strategy. - It is as if we were applying such a strategy. - It is as if we were applying such a strategy. - It is as if we were applying such a strategy. - It is as if we were applying such a strategy. - It is as if we were applying such a strategy. - It is as if we were applying a critical strategy to Duplicator Gstart, F1, G1, G2, G2, G2. - It is as if we were applying a critical strategy to Duplicator G1."}, {"heading": "4 Conclusion", "text": "We have demonstrated an optimal lower limit for the number of nested propagation steps in the k consistency method on constraint networks with n variables and domain size d. Consequently, each parallel propagation algorithm must perform at least consecutive steps. (n + d) O (k) processors (one for each instance of the inference rule) can be used to calculate the k consistency in O (nk \u2212 1dk \u2212 1) parallel time, which is optimal for propagation algorithms. Furthermore, the best sequential algorithm runs in O (nkdk). The overhead compared to the parallel approach is mainly caused by the time needed to search for the next inconsistent assignment that may be propagated - and this seems to be the only task that can be parallelized. Although we have demonstrated an optimal lower limit in the general setting, it might be interesting to know the depth of spread structures (if we have consistency)."}, {"heading": "A Appendix", "text}], "references": [{"title": "Constraint propagation as a proof system", "author": ["A. Atserias", "P. Kolaitis", "M. Vardi"], "venue": "Wallace, M. (ed.) Principles and Practice of Constraint Programming CP 2004. Lecture Notes in Computer Science, vol. 3258, pp. 77\u201391. Springer Berlin Heidelberg", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2004}, {"title": "Lower bounds for existential pebble games and k-consistency tests", "author": ["C. Berkholz"], "venue": "Logic in Computer Science (LICS), 2012 27th Annual IEEE Symposium on. pp. 25\u201334", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "Lower bounds for existential pebble games and k-consistency tests", "author": ["C. Berkholz"], "venue": "Logical Methods in Computer Science", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "On the speed of constraint propagation and the time complexity of arc consistency testing", "author": ["C. Berkholz", "O. Verbitsky"], "venue": "Chatterjee, K., Sgall, J. (eds.) Mathematical Foundations of Computer Science 2013, Lecture Notes in Computer Science, vol. 8087, pp. 159\u2013170. Springer Berlin Heidelberg", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "An optimal k-consistency algorithm", "author": ["M.C. Cooper"], "venue": "Artificial Intelligence 41(1), 89 \u2013 95", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1989}, {"title": "A problem simplification approach that generates heuristics for constraint-satisfaction problems", "author": ["R. Dechter", "J. Pearl"], "venue": "Tech. rep., Cognitive Systems Laboratory, Computer Science Department, University of California, Los Angeles", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1985}, {"title": "The computational structure of monotone monadic snp and constraint satisfaction: A study through datalog and group theory", "author": ["T. Feder", "M.Y. Vardi"], "venue": "SIAM Journal on Computing 28(1), 57\u2013104", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1998}, {"title": "Synthesizing constraint expressions", "author": ["E.C. Freuder"], "venue": "Commun. ACM 21, 958\u2013966", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1978}, {"title": "The parameterized complexity of local consistency", "author": ["S. Gaspers", "S. Szeider"], "venue": "Proc. CP\u201911. pp. 302\u2013316", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "On the parallel complexity of discrete relaxation in constraint satisfaction networks", "author": ["S. Kasif"], "venue": "Artificial Intelligence 45(3), 275 \u2013 286", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1990}, {"title": "On the complexity of existential pebble games", "author": ["P.G. Kolaitis", "J. Panttaja"], "venue": "Proc. CSL\u201903. pp. 314\u2013329", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2003}, {"title": "On the expressive power of datalog: Tools and a case study", "author": ["P.G. Kolaitis", "M.Y. Vardi"], "venue": "J. Comput. Syst. Sci. 51(1), 110\u2013134", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1995}, {"title": "A game-theoretic approach to constraint satisfaction", "author": ["P.G. Kolaitis", "M.Y. Vardi"], "venue": "Proc AAAI/IAAI\u201900. pp. 175\u2013181", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2000}, {"title": "On binary constraint problems", "author": ["P.B. Ladkin", "R.D. Maddux"], "venue": "J. ACM 41(3),", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1994}, {"title": "Parallel consistent labeling algorithms", "author": ["A. Samal", "T. Henderson"], "venue": "International Journal of Parallel Programming 16, 341\u2013364", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1987}, {"title": "Parallel path consistency", "author": ["S. Susswein", "T. Henderson", "J. Zachary", "C. Hansen", "P. Hinker", "G. Marsden"], "venue": "International Journal of Parallel Programming 20(6),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1991}], "referenceMentions": [{"referenceID": 7, "context": "The k-consistency test [8] is a well-known local consistency technique, which enforces that every satisfying (k \u2212 1)-partial assignment can be extended to a satisfying k-partial assignment.", "startOffset": 23, "endOffset": 26}, {"referenceID": 14, "context": "Indeed, this intuition has been used to design parallel arc and path consistency algorithms [15,16].", "startOffset": 92, "endOffset": 99}, {"referenceID": 15, "context": "Indeed, this intuition has been used to design parallel arc and path consistency algorithms [15,16].", "startOffset": 92, "endOffset": 99}, {"referenceID": 9, "context": "On the other hand, the k-consistency test is known to be PTIME-complete [10,11] and hence not efficiently parallelizable (unless NC=PTIME).", "startOffset": 72, "endOffset": 79}, {"referenceID": 10, "context": "On the other hand, the k-consistency test is known to be PTIME-complete [10,11] and hence not efficiently parallelizable (unless NC=PTIME).", "startOffset": 72, "endOffset": 79}, {"referenceID": 5, "context": "For 2-consistency the occurrence of long chains of sequential dependencies has been observed very early [6] and was recently studied in depth in [4].", "startOffset": 104, "endOffset": 107}, {"referenceID": 3, "context": "For 2-consistency the occurrence of long chains of sequential dependencies has been observed very early [6] and was recently studied in depth in [4].", "startOffset": 145, "endOffset": 148}, {"referenceID": 13, "context": "Ladkin and Maddux [14] used algebraic techniques to show that 3-consistency requires \u03a9(n) nested propagation steps on binary constraint networks with constant domain.", "startOffset": 18, "endOffset": 22}, {"referenceID": 4, "context": "Since the best-known running time of a sequential algorithm for k-consistency is O(nd) [5] it follows that no significant improvement over the sequential algorithm is possible.", "startOffset": 87, "endOffset": 90}, {"referenceID": 6, "context": "As first pointed out by Feder and Vardi [7] the CSP is equivalent to the structure homomorphism problem where two finite relational structures A and B are given as input.", "startOffset": 40, "endOffset": 43}, {"referenceID": 0, "context": "Below we restate the definition in terms of a formal inference system (which is inspired by the proof system in [1] and is a generalization of [4]).", "startOffset": 112, "endOffset": 115}, {"referenceID": 3, "context": "Below we restate the definition in terms of a formal inference system (which is inspired by the proof system in [1] and is a generalization of [4]).", "startOffset": 143, "endOffset": 146}, {"referenceID": 3, "context": "The structure of this exceptional case is discussed in deep in a joint work of Oleg Verbitsky and the author of this paper [4].", "startOffset": 123, "endOffset": 126}, {"referenceID": 13, "context": "Second, for k = 3 Ladkin and Maddux [14] showed that there is a fixed finite binary structure B and an infinite sequence of binary structures Ai such that depth (Ai,B) = \u03a9(|V (Ai)|).", "startOffset": 36, "endOffset": 40}, {"referenceID": 9, "context": "Kasif [10] showed that 2-Cons is complete for PTIME under LOGSPACE reductions.", "startOffset": 6, "endOffset": 10}, {"referenceID": 10, "context": "Kolaitis and Panttaja [11] extended this result to every fixed k \u2265 2.", "startOffset": 22, "endOffset": 26}, {"referenceID": 2, "context": "In [3] the author showed that k-Cons cannot be decided in", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "It is also worth noting that Gaspers and Szeider [9] investigated the parameterized complexity of other parameterized problems related to k-consistency.", "startOffset": 49, "endOffset": 52}, {"referenceID": 11, "context": "The existential k-pebble game [12] is played by two players Spoiler and Duplicator on two relational structures A and B.", "startOffset": 30, "endOffset": 34}, {"referenceID": 12, "context": "The connection between the existential k-pebble game and the k-consistency heuristic was made by Kolaitis and Vardi [13].", "startOffset": 116, "endOffset": 120}, {"referenceID": 2, "context": "To argue about strategies in the existential pebble game we use the framework developed in [3].", "startOffset": 91, "endOffset": 94}, {"referenceID": 2, "context": "The switch is an extension of the \u201cmultiple input one-way switch\u201d defined in [3] (which in turn is a generalization of [11]).", "startOffset": 77, "endOffset": 80}, {"referenceID": 10, "context": "The switch is an extension of the \u201cmultiple input one-way switch\u201d defined in [3] (which in turn is a generalization of [11]).", "startOffset": 119, "endOffset": 123}, {"referenceID": 2, "context": "As for the switch, this gadget is an extension of the initialization gadget presented in [3].", "startOffset": 89, "endOffset": 92}, {"referenceID": 3, "context": "For k = 2 the theorem follows from [4].", "startOffset": 35, "endOffset": 38}], "year": 2014, "abstractText": "We establish optimal bounds on the number of nested propagation steps in k-consistency tests. It is known that local consistency algorithms such as arc-, pathand k-consistency are not efficiently parallelizable. Their inherent sequential nature is caused by long chains of nested propagation steps, which cannot be executed in parallel. This motivates the question \u201cWhat is the minimum number of nested propagation steps that have to be performed by k-consistency algorithms on (binary) constraint networks with n variables and domain size d?\u201d It was known before that 2-consistency requires \u03a9(nd) and 3-consistency requires \u03a9(n) sequential propagation steps. We answer the question exhaustively for every k \u2265 2: there are binary constraint networks where any k-consistency procedure has to perform \u03a9(nk\u22121dk\u22121) nested propagation steps before local inconsistencies were detected. This bound is tight, because the overall number of propagation steps performed by k-consistency is at most nk\u22121dk\u22121.", "creator": "LaTeX with hyperref package"}}}