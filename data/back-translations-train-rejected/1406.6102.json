{"id": "1406.6102", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2014", "title": "Random Logic Programs: Linear Model", "abstract": "This paper proposes a model, the linear model, for randomly generating logic programs with low density of rules and investigates statistical properties of such random logic programs. It is mathematically shown that the average number of answer sets for a random program converges to a constant when the number of atoms approaches infinity. Several experimental results are also reported, which justify the suitability of the linear model. It is also experimentally shown that, under this model, the size distribution of answer sets for random programs tends to a normal distribution when the number of atoms is sufficiently large.", "histories": [["v1", "Mon, 23 Jun 2014 22:23:11 GMT  (371kb,D)", "http://arxiv.org/abs/1406.6102v1", "33 pages. To appear in: Theory and Practice of Logic Programming"]], "COMMENTS": "33 pages. To appear in: Theory and Practice of Logic Programming", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["kewen wang", "lian wen", "kedian mu"], "accepted": false, "id": "1406.6102"}, "pdf": {"name": "1406.6102.pdf", "metadata": {"source": "CRF", "title": "Random Logic Programs: Linear Model", "authors": ["Kewen Wang", "Lian Wen", "Kedian Mu"], "emails": ["k.wang@griffith.edu.au)", "l.wen@griffith.edu.au)", "mukedian@math.pku.edu.cn)"], "sections": [{"heading": null, "text": "KEYWORDS: Programming of response sentences, random logic programs."}, {"heading": "1 Introduction", "text": "This year, it has reached the stage where it will be able to take the lead."}, {"heading": "2 Answer Set Semantics and Two-Literal Programs", "text": "We limit our discussion to finite meaningful programs to a finite series of finite affirmative programs to a finite series of finite affirmative programs to a finite series of finite affirmative programs to a finite series of finite affirmative programs to a finite series of meaningful programs to a finite series of meaningful programs. We assume that all atoms appearing in the body of a rule are different in pairs. A literal atom is one or its standard negation, the latter being a negative letter and its standard negation not complementary."}, {"heading": "3 Random Programs and Their Properties", "text": "In this section, we first present a model for the random generation of negative two-dimensional programs, and then present some statistical properties of such random programs. The main result in this section (theorem 1) shows that the expected number of responses for a random program at a random end of the model results in a constant if the number of atoms is infinite. (In this section, we assume that every negative two-dimensional program contains at least one rule.Definition 1 (Linear Model L), as well as necessary basics of mathematical analysis.) Let c1 and c2 have two non-negative real numbers with c1 > 0. We assume that each negative two-dimensional program contains at least one rule.Definition."}, {"heading": "4 Experimental Results", "text": "In this section, we describe some experimental results about the average number of response sets, the size distribution of the response sets and the probability of consistency for random programs within the linear model. For the average number of response sets, our experimental results closely match the theoretical results given in Section 3. To perform the experiments, we have developed a software tool to generate random logical programs based on the user input parameters, such as the type of programs, the number of atoms, the number of letters in a rule, the number of rules in a program and the number of programs in a test set, etc. After generating a series of random programs, the tool calls an ASP solver to calculate the responses of the random programs, records the test results in a file and analyzes them. The experimental results in this section are based on the ASP solution bracket (we have obtained test cases that are similar to 2009, but with different patterns)."}, {"heading": "4.1 Experiment 1: Random Programs without contradiction rules", "text": "In this experiment, c1 = 5, c2 = 0, and n varies with values 50,100,150,..., 500 each. For each of these values of n, 5,000 logic programs were generated randomly and independently within the framework of the linear model.Given the fact that c1 = 5 and \u03b1 > 1 are uniquely determined by \u03b1\u03b1 = ec1, we have this alpha = 3.7687. Thus, the (experimental) values for NAvg and their corresponding theoretical values (i.e., the expected number E [Nk] of the response sets for random programs determined by equation. (The (experimental) values for NAvg and their corresponding theoretical values (i.e., the expected number E [Nk] of the response sets for random programs determined by equation. (4)) will be shown in Table 1. The experimental and theoretical results will be shown in Figure 1. We can see that these two values are very close to each other, even if n is relatively small."}, {"heading": "4.2 Experiment 2: Random Programs with contradiction rules", "text": "In this experiment, we tested random programs that may contain rules of contradiction and obtained similar experimental results as in the first experiment. We set c1 = 10, n = 200 and c2 = 0,1,2,..., 20. For each value of c2, 5,000 programs were generated independently in the linear model. At c1 = 10, equality (12) and equality (13) result in \u03b1 \u2248 5.7289, x0 \u2248 165.0894 and \u03c3 \u2248 1.9552. The value \u03c6 (x0), which depends on c2, decreases roughly from 0.4257 (if c2 = 0) to 0.01297 (if c2 = 20). On the other hand, we can calculate the expected number of response sets for each c2 on the basis of Equation (4). These two types of values are visualized as two curves in Figure 5. It shows that these two curves are very close to each other, which means that our theoretical result on the size distribution of these first responses is smaller than those in the norms."}, {"heading": "4.3 Experiment 3: Approximating the probability for consistency of random programs", "text": "In this subsection, we present our experimental results for verifying the formula for predicting the consistency of random programs (discussed in Section 3): Pr (E (| AS (P) | > 0)) \u2248 1 \u2212 e \u2212 \u03b3 \u00b7 E (| AS (P) |). (20) Here is \u03b3 a constant of about 0.5 (i.e. independent of n). We tested different pairs of c1 and c2. For each such pair, we took n = 100,150,200,..., 1000. Subsequently, for each value of n, we calculated the value determined by Equation (20). For each value of n, we generated 5,000 programs randomly and calculated the ratio of consistent programs to all 5,000 programs. Our experimental results confirm the estimate in Equation (20). Thus, this formula can be used to predict the consistency of random programs generated under the linear model. The corresponding values for two tested cases are determined in Figures 7 and 8 for each of the curves."}, {"heading": "5 Conclusion", "text": "The average size of a random program created in this way is linear to the total number of atoms. We have demonstrated some mathematical results, and the main result shows that the expected number of random program responses converges in the linear model to a constant determined by the probabilities of both pure rules and constraints; the formal proof of this result, as we have seen, is mathematically informative; the main result is further confirmed by our experiments; another important experimental result shows that the (size) distribution of random program responses generated according to the linear model obeys a normal distribution; in this case, there are several problems for future work. Firstly, it would be interesting to prove mathematically some of the results presented in section 4. Secondly, it would be both interesting and useful to investigate phase transition phenomena for hardness phenomena."}, {"heading": "Acknowledgement", "text": "The authors would like to thank the editor Michael Gelfond and three anonymous speakers for their constructive comments, which have helped to significantly improve the quality of the work. Thanks to Fangzhen Lin and Yi-Dong Shen for discussions on this topic. This work was supported by the Australian Research Council (ARC) under grants DP1093652 and DP130102302 Annex."}, {"heading": "5.1 Proofs for Section 2", "text": "Proposition 1: Every normal logic program P is exactly a logical program that consists of only two basic rules. Proposition 1: every normal logic program P is equivalent to a negative bilingual program. Proof First: It has been proven that every normal logic program is a negative normal program. Proposition 1: Every normal logic program P is equivalent to a negative bilingual program (Brass and Dix 1999; Wang and Zhou 2005). Thus, we can assume without loss of generality that P is a negative normal program. Next, we show that every negative normal program P can be converted into a logical program that consists of only two literal rules and rules of fact. Indeed, we can define the translation as follows. For every rule R in P of the form, a normal not c1,."}, {"heading": "5.2 Basics of mathematical analysis", "text": "In this subsection we will briefly recall some basics of mathematical analysis and notation used in related proofs.1. Big O notation: let f (x), g (x), h (x) be three real functions. By f (x) = g (x) + O (h (x)) we mean that | f (x) \u2212 g (x) | = O (h (x). That is, there is a positive real number c and a real number x0 that for all x > x0. | f (x) \u2212 g (x) | \u2264 c | h (x) |.The same notation also applies to discrete functions. 2. Stirling's approximation: for all integers n > 01 \u2264 n! e \u2212 n \u00b2 n \u00b2 2n \u00b2 function, (21) n!"}, {"heading": "5.3 Lemmas", "text}], "references": [{"title": "Random constraint satisfaction: A more accurate picture", "author": ["D. ACHLIOPTAS", "L. KIROUSIS", "E. KRANAKIS", "D. KRIZANC", "M. MOLLOY", "Y. STAMATIOU"], "venue": "Proceedings of the 3rd International Conference on Principles and Practice of Constraint Programming (CP-97). 107\u2013120.", "citeRegEx": "ACHLIOPTAS et al\\.,? 1997", "shortCiteRegEx": "ACHLIOPTAS et al\\.", "year": 1997}, {"title": "Rigorous location of phase transitions in hard optimization problems", "author": ["D. ACHLIOPTAS", "A. NAOR", "Y. PERES"], "venue": "Nature 435, 7043, 759764.", "citeRegEx": "ACHLIOPTAS et al\\.,? 2005", "shortCiteRegEx": "ACHLIOPTAS et al\\.", "year": 2005}, {"title": "Probabilistic reasoning with answer sets", "author": ["C. BARAL", "M. GELFOND", "N. RUSHTON"], "venue": "Theory and Practice of Logic Programming 9, 1, 57\u2013144.", "citeRegEx": "BARAL et al\\.,? 2009", "shortCiteRegEx": "BARAL et al\\.", "year": 2009}, {"title": "Continuous models of computation for logic programs: importing continuous mathematics into logic programming\u2019s algorithmic foundations", "author": ["H. BLAIR", "F. DUSHIN", "D. JAKEL", "D. RIVERA", "M. SEZGIN"], "venue": "The Logic Programming Paradigm. 231\u2013255.", "citeRegEx": "BLAIR et al\\.,? 1999", "shortCiteRegEx": "BLAIR et al\\.", "year": 1999}, {"title": "Semantics of disjunctive logic programs based on partial evaluation", "author": ["S. BRASS", "J. DIX"], "venue": "Journal of Logic Programming 38, 3, 167\u2013312.", "citeRegEx": "BRASS and DIX,? 1999", "shortCiteRegEx": "BRASS and DIX", "year": 1999}, {"title": "Where the really hard problems are", "author": ["P. CHEESEMAN", "B. KANEFSKY", "W.M. TAYLOR"], "venue": "Proceedings of the 12th International Joint Conference on Artificial Intelligence (IJCAI-91). 331\u2013340.", "citeRegEx": "CHEESEMAN et al\\.,? 1991", "shortCiteRegEx": "CHEESEMAN et al\\.", "year": 1991}, {"title": "The conflict-driven answer set solver clasp: Progress report", "author": ["M. GEBSER", "B. KAUFMANN", "T. SCHAUB"], "venue": "Proceedings of the 10th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR-09). 509\u2013514.", "citeRegEx": "GEBSER et al\\.,? 2009", "shortCiteRegEx": "GEBSER et al\\.", "year": 2009}, {"title": "The stable model semantics for logic programming", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "Proceedings of the 5th International Conference on Logic Programming (ICLP-88). 1070\u20131080.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1990", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1990}, {"title": "Logic programs with classical negation", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "Proceedings of the 7th International Conference on Logic Programming (ICLP-90). 579\u2013597.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1988", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1988}, {"title": "The sat phase transition", "author": ["I. GENT", "T. WALSH"], "venue": "Proceedings of the Eleventh European Conference on Artificial Intelligence (ECAI-94). 105\u2013109.", "citeRegEx": "GENT and WALSH,? 1994", "shortCiteRegEx": "GENT and WALSH", "year": 1994}, {"title": "Two-literal logic programs and satisfiability representation of stable models: A comparison", "author": ["HUANG G.", "JIA X.", "C.", "YOU", "J."], "venue": "Proceedings 15th Canadian Conference on Artificial Intelligence. 119\u2013131.", "citeRegEx": "G. et al\\.,? 2002", "shortCiteRegEx": "G. et al\\.", "year": 2002}, {"title": "Phase transitions in artificial intelligence systems", "author": ["B. HUBERMAN", "T. HOGG"], "venue": "Artificial Intelligence 33, 2, 155\u2013171.", "citeRegEx": "HUBERMAN and HOGG,? 1987", "shortCiteRegEx": "HUBERMAN and HOGG", "year": 1987}, {"title": "Some (in)translatability results for normal logic programs and propositional theories", "author": ["T. JANHUNEN"], "venue": "Journal of Applied Non-Classical Logics , 1-2, 35\u201386.", "citeRegEx": "JANHUNEN,? 2006", "shortCiteRegEx": "JANHUNEN", "year": 2006}, {"title": "The dlv system for knowledge representation and reasoning", "author": ["N. LEONE", "G. PFEIFER", "W. FABER", "T. EITER", "G. GOTTLOB", "S. PERRI", "F. SCARCELLO"], "venue": "ACM Transactions on Computational Logic 7, 3, 499\u2013562.", "citeRegEx": "LEONE et al\\.,? 2006", "shortCiteRegEx": "LEONE et al\\.", "year": 2006}, {"title": "Computing stable models: worst-Case performance estimates", "author": ["Z. LONC", "M. TRUSZCZYNSKI"], "venue": "Theory and Practice of Logic Programming 4, 1-2, 193\u2013231.", "citeRegEx": "LONC and TRUSZCZYNSKI,? 2004", "shortCiteRegEx": "LONC and TRUSZCZYNSKI", "year": 2004}, {"title": "Autoepistemic logic", "author": ["V. MAREK", "M. TRUSZCZYNSKI"], "venue": "Journal of the Association for Computing Machinery 38, 3, 588\u2013619.", "citeRegEx": "MAREK and TRUSZCZYNSKI,? 1991", "shortCiteRegEx": "MAREK and TRUSZCZYNSKI", "year": 1991}, {"title": "Nonmonotonic Logic: Context-Dependent Reasonong", "author": ["V. MAREK", "M. TRUSZCZYNSKI"], "venue": "Springer, 1993.", "citeRegEx": "MAREK and TRUSZCZYNSKI,? 1993", "shortCiteRegEx": "MAREK and TRUSZCZYNSKI", "year": 1993}, {"title": "Hard and easy distributions of sat problems", "author": ["D. MITCHELL", "B. SELMAN", "H. LEVESQUE"], "venue": "Proceedings of the 10th National Conference on Artificial Intelligence (AAAI-92). 459\u2013465.", "citeRegEx": "MITCHELL et al\\.,? 1992", "shortCiteRegEx": "MITCHELL et al\\.", "year": 1992}, {"title": "2+psat: Relation of typical-case complexity to the nature of the phase transition", "author": ["R. MONASSON", "R. ZECCHINA", "S. KIRKPATRICK", "B. SELMAN", "L. TROYANSKY"], "venue": "Random Structures and Algorithms 15, 3-4, 414\u2013435.", "citeRegEx": "MONASSON et al\\.,? 1999", "shortCiteRegEx": "MONASSON et al\\.", "year": 1999}, {"title": "Study of random logic programs", "author": ["G. NAMASIVAYAM"], "venue": "Proceedings of the 25th International Conference on Logic Programming (ICLP-09). 555\u2013556.", "citeRegEx": "NAMASIVAYAM,? 2009", "shortCiteRegEx": "NAMASIVAYAM", "year": 2009}, {"title": "Simple random logic programs", "author": ["G. NAMASIVAYAM", "M. TRUSZCZYNSKI"], "venue": "Proceedings of the 10th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR-09). 223\u2013235.", "citeRegEx": "NAMASIVAYAM and TRUSZCZYNSKI,? 2009", "shortCiteRegEx": "NAMASIVAYAM and TRUSZCZYNSKI", "year": 2009}, {"title": "On the distribution of programs with stable models", "author": ["J. SCHLIPF", "M. TRUSZCZYNSKI", "D. WONG"], "venue": "05171 Abstracts Collection - Nonmonotonic Reasoning, Answer Set Prorgamming and Constraints.", "citeRegEx": "SCHLIPF et al\\.,? 2005", "shortCiteRegEx": "SCHLIPF et al\\.", "year": 2005}, {"title": "Handbook on Ontologies", "author": ["S. STAAB", "R. STUDER"], "venue": "Springer-Verlag, 2004.", "citeRegEx": "STAAB and STUDER,? 2004", "shortCiteRegEx": "STAAB and STUDER", "year": 2004}, {"title": "The smodels system", "author": ["T. SYRJ\u00c4NEN", "I. NIEMEL\u00c4"], "venue": "Proceedings of the 6th International ConferenceLogic Logic Programming and Nonmonotonic Reasoning (LPNMR-01). 434\u2013438.", "citeRegEx": "SYRJ\u00c4NEN and NIEMEL\u00c4,? 2001", "shortCiteRegEx": "SYRJ\u00c4NEN and NIEMEL\u00c4", "year": 2001}, {"title": "Comparisons and computation of well-founded semantics for disjunctive logic programs", "author": ["K. WANG", "L. ZHOU"], "venue": "ACM Transactions on Computational Logic 6, 2, 295\u2013327.", "citeRegEx": "WANG and ZHOU,? 2005", "shortCiteRegEx": "WANG and ZHOU", "year": 2005}, {"title": "Answer set programming phase transition: A study on randomly generated programs", "author": ["Y. ZHAO", "F. LIN"], "venue": "Proceedings of the 19th International Conference on Logic Programming (ICLP-03). 239\u2013 253.", "citeRegEx": "ZHAO and LIN,? 2003", "shortCiteRegEx": "ZHAO and LIN", "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 1, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 5, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 9, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 11, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 17, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 18, "context": "These problems include the satisfiability of boolean formulas (SAT) and the constraint satisfaction problems (CSP) (Achlioptas et al. 1997; Achlioptas et al. 2005; Cheeseman et al. 1991; Gent and Walsh 1994; Huberman and Hogg 1987; Mitchell et al. 1992; Monasson et al. 1999).", "startOffset": 115, "endOffset": 275}, {"referenceID": 6, "context": "Answer set programming (ASP) is currently one of the most widely used nonmonotonic reasoning systems due to its simple syntax, precise semantics and importantly, the availability of ASP solvers, such as clasp (Gebser et al. 2009), dlv (Leone et al.", "startOffset": 209, "endOffset": 229}, {"referenceID": 13, "context": "2009), dlv (Leone et al. 2006), and smodels (Syrj\u00e4nen and Niemel\u00e4 2001).", "startOffset": 11, "endOffset": 30}, {"referenceID": 20, "context": "However, the theoretical study of random ASP has not made much progress so far (Namasivayam and Truszczynski 2009; Namasivayam 2009; Schlipf et al. 2005; Zhao and Lin 2003).", "startOffset": 79, "endOffset": 172}, {"referenceID": 19, "context": "However, the theoretical study of random ASP has not made much progress so far (Namasivayam and Truszczynski 2009; Namasivayam 2009; Schlipf et al. 2005; Zhao and Lin 2003).", "startOffset": 79, "endOffset": 172}, {"referenceID": 21, "context": "However, the theoretical study of random ASP has not made much progress so far (Namasivayam and Truszczynski 2009; Namasivayam 2009; Schlipf et al. 2005; Zhao and Lin 2003).", "startOffset": 79, "endOffset": 172}, {"referenceID": 25, "context": "However, the theoretical study of random ASP has not made much progress so far (Namasivayam and Truszczynski 2009; Namasivayam 2009; Schlipf et al. 2005; Zhao and Lin 2003).", "startOffset": 79, "endOffset": 172}, {"referenceID": 25, "context": "(Zhao and Lin 2003) first conducted an experimental study on the issue of phase transition for randomly generated ASP programs whose rules can have three or more literals.", "startOffset": 0, "endOffset": 19}, {"referenceID": 20, "context": "To study statistical properties for random programs, (Namasivayam and Truszczynski 2009; Namasivayam 2009) considered the class of randomly generated ASP programs in which each rule has exactly two literals, called simple random programs.", "startOffset": 53, "endOffset": 106}, {"referenceID": 19, "context": "To study statistical properties for random programs, (Namasivayam and Truszczynski 2009; Namasivayam 2009) considered the class of randomly generated ASP programs in which each rule has exactly two literals, called simple random programs.", "startOffset": 53, "endOffset": 106}, {"referenceID": 15, "context": "In fact, the class of negative two-literal programs is used to show the NP-hardness of answer set semantics for normal logic programs in (Marek and Truszczynski 1991) (Theorem 6.", "startOffset": 137, "endOffset": 166}, {"referenceID": 2, "context": "For instance, it is important to compute all answer sets of a program in applications, such as diagnoses and query answering, in P-log (Baral et al. 2009).", "startOffset": 135, "endOffset": 154}, {"referenceID": 22, "context": "Also, the linear model of random programs may be useful in application domains such as ontology engineering where most of large practical ontologies are sparse in the sense that the ratio of terminological axioms to concepts/roles is relatively small (Staab and Studer 2004).", "startOffset": 251, "endOffset": 274}, {"referenceID": 20, "context": "(Namasivayam and Truszczynski 2009) discusses some program classes of two-literal programs that may not be negative.", "startOffset": 0, "endOffset": 35}, {"referenceID": 8, "context": "The semantics of a logic program P is defined in terms of its answer sets (or equivalently, stable models) (Gelfond and Lifschitz 1988; Gelfond and Lifschitz 1990) as follows.", "startOffset": 107, "endOffset": 163}, {"referenceID": 7, "context": "The semantics of a logic program P is defined in terms of its answer sets (or equivalently, stable models) (Gelfond and Lifschitz 1988; Gelfond and Lifschitz 1990) as follows.", "startOffset": 107, "endOffset": 163}, {"referenceID": 12, "context": "We note that our definition is slightly different from some other authors, such as (Janhunen 2006; Lonc and Truszczynski 2002), in that fact rules are not allowed in our definition.", "startOffset": 83, "endOffset": 126}, {"referenceID": 15, "context": "It is shown in (Marek and Truszczynski 1991) that the problem of deciding the existence of answer sets for a negative two-literal program is NP-complete.", "startOffset": 15, "endOffset": 44}, {"referenceID": 3, "context": "This result is mentioned in (Blair et al. 1999) but no proof is provided there.", "startOffset": 28, "endOffset": 47}, {"referenceID": 16, "context": "8 in (Marek and Truszczynski 1993).", "startOffset": 5, "endOffset": 34}, {"referenceID": 6, "context": "The experimental results in this section were based on the ASP solver clasp (Gebser et al. 2009), but same patterns were obtained for test cases on which dlv (Leone et al.", "startOffset": 76, "endOffset": 96}, {"referenceID": 13, "context": "2009), but same patterns were obtained for test cases on which dlv (Leone et al. 2006) and smodels (Syrj\u00e4nen and Niemel\u00e4 2001) were also used.", "startOffset": 67, "endOffset": 86}, {"referenceID": 12, "context": "programs that are more general than negative two-literal programs, such as the program classes discussed in (Janhunen 2006; Lonc and Truszczynski 2002).", "startOffset": 108, "endOffset": 151}, {"referenceID": 4, "context": "Proof First, it has been proven that each normal logic program is equivalent to a negative logic program under answer set semantics (Brass and Dix 1999; Wang and Zhou 2005).", "startOffset": 132, "endOffset": 172}, {"referenceID": 24, "context": "Proof First, it has been proven that each normal logic program is equivalent to a negative logic program under answer set semantics (Brass and Dix 1999; Wang and Zhou 2005).", "startOffset": 132, "endOffset": 172}], "year": 2014, "abstractText": "This paper proposes a model, the linear model, for randomly generating logic programs with low density of rules and investigates statistical properties of such random logic programs. It is mathematically shown that the average number of answer sets for a random program converges to a constant when the number of atoms approaches infinity. Several experimental results are also reported, which justify the suitability of the linear model. It is also experimentally shown that, under this model, the size distribution of answer sets for random programs tends to a normal distribution when the number of atoms is sufficiently large.", "creator": "LaTeX with hyperref package"}}}