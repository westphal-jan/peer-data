{"id": "1408.6706", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Aug-2014", "title": "Equilibrium States in Numerical Argumentation Networks", "abstract": "Given an argumentation network with initial values to the arguments, we look for algorithms which can yield extensions compatible with such initial values. We find that the best way of tackling this problem is to offer an iteration formula that takes the initial values and the attack relation and iterates a sequence of intermediate values that eventually converges leading to an extension. The properties surrounding the application of the iteration formula and its connection with other numerical and non-numerical techniques proposed by others are thoroughly investigated in this paper.", "histories": [["v1", "Thu, 28 Aug 2014 12:56:17 GMT  (160kb,D)", "https://arxiv.org/abs/1408.6706v1", null], ["v2", "Wed, 18 Mar 2015 18:09:21 GMT  (126kb,D)", "http://arxiv.org/abs/1408.6706v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["d gabbay", "o rodrigues"], "accepted": false, "id": "1408.6706"}, "pdf": {"name": "1408.6706.pdf", "metadata": {"source": "CRF", "title": "Equilibrium States in Numerical Argumentation Networks", "authors": ["D. Gabbay"], "emails": ["dov.gabbay@kcl.ac.uk", "odinaldo.rodrigues@kcl.ac.uk"], "sections": [{"heading": "1 Orientation and Background", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "1.1 Orientation", "text": "This year, it has come to the point where it only takes a few days to get there, to get to the point where it is able to unfold."}, {"heading": "1.2 Background", "text": "An abstract reasoning framework is a formalism proposed by Dung [10] and defined in relation to a tuple < S, R > where S is a non-empty set of arguments and R, S \u00b7 S is a binary attack relationship. We will refer to an abstract reasoning framework < S, R > simply as an argumentation network. If (X, Y) reasoning X, S, R > is introduced informally in Section 1 as a directed graph (see Figure 1), Att (X) will be used to denounce the reasoning {Y, X, X), it will be argued."}, {"heading": "2 The Gabbay-Rodrigues Iteration Schema", "text": "(1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1)) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 (1) (1) (1 (1) (1) (1) (1 (1) (1) (1) (1) (1 (1) (1) (1 (1) (1 (1) (1 (1) (1) (1) (1) (1) (1 (1) (1 (1) (1 (1) (1) (1) (1 (1) (1 (1 (1) (1) (1) (1 (1 (1) (1 (1) (1) (1) (1) (1 (1 (1) (1) (1) (1) (1 (1 (1) (1 (1) (1) (1"}, {"heading": "3 Discussion and Worked Examples", "text": "This year it is more than ever before."}, {"heading": "3.1 Worked Examples with Cycles", "text": "The table in Figure 6 shows initial, stable and equilibrium values (V0, Vk, Ve) for all nodes in the networks (L) and (R). The last row of the table shows the iteration in which the stable values were reached and the equilibrium values approximate (S, E). Obviously, the equilibrium values are an approximation. We set our tolerance as 10 \u2212 19, the upper limit of relative error due to the rounding in the calculations in our 64-bit cycle. 18 Independent nodes, look18Effectively, this means that if the maximum variation in the node values between two consecutive iterations is less than 10 \u2212 19, we cannot be sure that it is not simply the result of a rounding (L) (R) as Z in the networks always converges to 1 regardless of their initial values."}, {"heading": "4 Comparisons with other work", "text": "This section compares our framework with other techniques that deal with initial values. Our discussions so far and the use of the Gabbay-Rodrigues iteration scheme were in the context of the equation approach to an argumentation network, if we are given some initial values. Our problem was to find a solution to the system of equations that was \"close\" to those initial values. Two important concepts directly related to the work in this essay were proposed in [7], which address the problem of looking for an extension of an argumentation network in the face of an initial labeling of its arguments. Their approach works in two steps. First, they calculate the degraded values that are directly related to the original labeling, which essentially consists of a permissible labeling, the critical part of which is contained in the original labeling, through a process that in each step an illegally labeled argument out of or out into and until no illegal crip values are converted."}, {"heading": "5 Conclusions and Future Research", "text": "This paper examined aspects related to reasoning networks, where the arguments are provided with initial values. We are aware that the mapping of values to nodes and the distribution of values through the network has been investigated independently before they are able to calculate extensions in this way. However, our approach is different because we see a network as a generator of equations, whose solutions generalize the concept of extending the network. In addition, there are many mathematical tools that help to find solutions to the equations that are generic enough to be applied to certain applications where reasoning systems are used, and the behavior of node interactions can of course be described with equations. In addition, there are many mathematical tools to find the equations."}, {"heading": "Acknowledgements", "text": "The authors thank Massimiliano Giacomin, Gabriella Pigozzi, Martin Caminada and Sanjay Modgil for comments and discussions on the topic of this essay."}, {"heading": "A Predator-Prey and Argumentation Motivating Case Studies", "text": "s look at an example from biology. This is a model by M. P. Hassell [18] of the dynamics of a system with two parasitoids (P and Q) and one host (N). The interactions in ecology are shown in Figure 7. The equations that model the dynamics are the following (see [1, p. 295]). N t + 1 = \u03bbN tf1 (P t) f2 (Qt) f2 (Qt) P t + 1 = N t [1 \u2212 f1 (P t)] Qt + 1 = N tf1 (P tf1). In the above equations, the drawings t + 1 indicate two successive generations of P, Q and N."}, {"heading": "B Numerical Argumentation Networks", "text": "The idea of support and attack networks was originally proposed; these networks allow the mapping of initial values to the nodes of the graph; the specification of a transmission factor associated with the strength of arguments that we are now proposing; and the notion of an attack on an attack. (17) We have shown how some of these features can be used in the merging of argument networks. (17) The numerical reasoning of the networks that we are now proposing is part of the characteristics of support and attack networks, but they represent a functional approach to the interaction between nodes.Definition B.1 (Numerical reasoning) The numerical reasoning network is a tuple & ltant < S, V0, h > S is a set of nodes that represent arguments; \u2022 S is a set of arguments that represent arguments."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "<lb>Given an argumentation network with initial values to the arguments,<lb>we look for algorithms which can yield extensions compatible with such<lb>initial values. We find that the best way of tackling this problem is to offer<lb>an iteration formula that takes the initial values and the attack relation<lb>and iterates a sequence of intermediate values that eventually converges<lb>leading to an extension. The properties surrounding the application of<lb>the iteration formula and its connection with other numerical and non-<lb>numerical techniques proposed by others are thoroughly investigated in<lb>this paper. 1 Orientation and Background 1.1 Orientation<lb>A finite system \u3008S,R\u3009, with R a binary relation on S, can be viewed in many<lb>different ways; among them are 1. As an abstract argumentation framework [10], and 2. As a generator of equations [13, 14] 1<lb>ar<lb>X<lb>iv<lb>:1<lb>40<lb>8.<lb>67<lb>06<lb>v2<lb>[<lb>cs<lb>.A<lb>I]<lb>1<lb>8<lb>M<lb>ar<lb>2<lb>01<lb>5 When viewed as an abstract argumentation framework, the basic concepts<lb>studied are those of extensions (being certain subsets of S) and different se-<lb>mantics (being sets of extensions). When studied as generators of equations,<lb>one can generate equations in such a way that the solutions f to the equations<lb>correspond to (complete) extensions and sets of such solutions correspond to<lb>semantics.<lb>This paper offers an iteration schema for finding specific solutions to the<lb>equations responding to initial requirements and shows what these solutions<lb>correspond to in the abstract argumentation sense.<lb>We now explain the role iteration formulas play in general in the equational<lb>context.<lb>When we have a system of equations designed to model an application area1<lb>we face two problems: 1) find any solution to the system of equations, which<lb>will have a meaning in the application area giving rise to the equations; 2)<lb>given boundary conditions and/or other requirements not necessarily mathe-<lb>matical which are meaningful in the application area,2 we would like to find<lb>a solution to the system of equations that is compatible/respects the initial<lb>conditions/requirements.<lb>These two problems are distinct. The first one of finding any solution is a<lb>numerical analysis problem. There are various iteration methods in numerical<lb>analysis to find solutions, of which one of the most known is Newton\u2019s method.3<lb>The second problem is totally different. It calls for an understanding of the<lb>requirements coming from the application area and possibly the design of a<lb>specialised iteration formula which respects the type of requirements involved.<lb>This paper provides the Gabbay-Rodrigues Iteration Schema, for the case of<lb>the equational approach to argumentation, seeking solutions (which we shall see<lb>will correspond to complete extensions) respecting as much as possible initial<lb>demands and restrictions of what arguments are in or out of the extension. We<lb>compare what our iteration schema does with Caminada and Pigozzi\u2019s down-<lb>admissible and up-complete constructions [7]. Because we are dealing with<lb>iteration formulas (involving limits) and we are comparing with set theoretical<lb>operations (as in Caminada and Pigozzi\u2019s paper) we have to be detailed and<lb>precise and despite it being conceptually clear and simple, the proofs turn out<lb>to be mathematically involved, and require some patience from our readers.<lb>However, once we establish the properties of our iteration schema, its use and<lb>application are straightforward and computationally simple, especially in the<lb>context of such tools as MATHEMATICA and others like it. The reader may<lb>wish to just glance at the technical proofs and concentrate on the examples and<lb>1For example, equations of fluid flow in hydrodynamics or equations of particle motion<lb>in mechanics, or equations modelling argumentation networks according to the equational<lb>approach (to be explained later), or equations modelling a biological system of predator-prey<lb>ecology, or some polynomial equation arising in macroeconomics.<lb>2For example, initial conditions in the case of particle mechanics, or initial size of population<lb>in the ecology, or arguments that we would like to be accepted.<lb>3This method starts with an initial guess of a possible solution and uses various iteration<lb>formulae hoping that it will converge to a solution (for an introduction on numerical analysis<lb>see [21]).", "creator": "LaTeX with hyperref package"}}}