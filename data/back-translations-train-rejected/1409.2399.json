{"id": "1409.2399", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Sep-2014", "title": "Prioritized Planning Algorithms for Trajectory Coordination of Multiple Mobile Robots", "abstract": "An important capability of autonomous multi-robot systems is to prevent collision among the individual robots. One approach to this problem is to plan conflict-free trajectories and let each of the robots follow its pre-planned trajectory. A widely used practical method for multi-robot trajectory planning is prioritized planning, which has been shown to be effective in practice, but is in general incomplete. Formal analysis of instances that are provably solvable by prioritized planning is still missing. Moreover, prioritized planning is a centralized algorithm, which may be in many situations undesirable.", "histories": [["v1", "Mon, 8 Sep 2014 15:38:31 GMT  (5955kb,D)", "http://arxiv.org/abs/1409.2399v1", null]], "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.MA", "authors": ["michal \\v{c}\\'ap", "peter nov\\'ak", "alexander kleiner", "martin seleck\\'y"], "accepted": false, "id": "1409.2399"}, "pdf": {"name": "1409.2399.pdf", "metadata": {"source": "CRF", "title": "Prioritized Planning Algorithms for Trajectory Coordination of Multiple Mobile Robots", "authors": ["Michal \u010c\u00e1p", "Peter Nov\u00e1k", "Alexander Kleiner", "Martin Seleck\u00fd"], "emails": [], "sections": [{"heading": null, "text": "This year is the highest in the history of the country."}, {"heading": "II. PROBLEM DEFINITION", "text": "Consider n circular robots operating in a two-dimensional working area. A subset of W occupied by the body of the robot i when its center is in position x is called Ri (x). The maximum speed at which the robot can move is called vi. Each robot is assigned a task at which it moves from its starting position si to a destination position gi and stays there. We assume that the starting and finishing positions of all robots are separated from each other, i.e. the bodies of the robots do not overlap when the robots are in their starting positions and when they are at their destination position. A path p: [0, 1] \u2192 W of the robot i in working area W is considered satisfactory when it begins at the starting position of the robot si, ends at the destination position gi, and the body of the robot whose center follows the path p is always completely in W. A path p: [0, destination] \u2192 W is a mapping of time points to positions in the working space and in the working space."}, {"heading": "Notation", "text": "The following abbreviations are used to talk about regions occupied by another subset of robots at their starting and finishing positions: Si: = Ri (si) G i: = Ri (gi) S > i: = i + 1,..., n Rj (sj) G < i: = [1] J = 1,..., i \u2212 1 Rj (gj) S: = [1] J = 1,..., n Rj (sj) G: = [1], n Rj (gj) Furthermore, we will work with the concept of a space-time region: If a spatial object, like the body of a robot, follows a certain orbit, then we can imagine that it occupies a certain region in space-time T: = W \u00b7 [0]. A dynamic obstacle is then a region in such a space-time-space-space-space-space-space-space T: If (x, y, t), then we know that the spatial position (x) of the point occupying an obstacle is at an obstacle."}, {"heading": "Assumptions on Communication", "text": "We assume that each robot is equipped with an independent processing unit and a wireless device for communicating with other robots. Wireless communication channels are typically implemented as transmission channels, where each transmitted message is transmitted, but ignored by nodes that do not belong to the declared recipients of the message. In such a channel, a single transmission message uses the same channel capacity as a single point-to-point message, and therefore we prefer to perform a single transmission rather than sending multiple point-to-point messages. Furthermore, in the following discussion, we assume that such a communication channel is reliable, i.e. that each transmitted message is ultimately received by all robots in the system, and that the communication channel preserves the sequence of the messages sent."}, {"heading": "III. PRIORITIZED PLANNING", "text": "A simple approach to solving the problem of orbit coordination would be to consider all robots in the system as one composite robot with many degrees of freedom and to find a common path for all robots. However, the size of such a common configuration space is exponential in the number of robots and therefore this approach quickly becomes impractical if you want to plan for more than a few robots. A pragmatic approach, which is often useful even for large multi-robot teams, is prioritized planning. Erdman and Lozano-P\u00ef \u00bf\u0153rez first articulated the idea in [4]. Other work such as [16], [2] examine techniques to choose a good prioritization for robots.3"}, {"heading": "Classical Prioritized Planning", "text": "Priority planning assigns each robot a unique priority, starting with the highest priority of the robot i-1. The trajectories for individual robots are then planned sequentially from the highest priority of the robot to the lowest priority. For each robot, a trajectory is planned that avoids both the static obstacles of the robot in the environment and the higher priorities of the robot moving along the trajectories planned in the previous iterations. Pseudo-coding of classical prioritized planning is in Algorithm 1.Algorithm 1: Classic robot collision robot planning algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm is not able to avoid conflicts."}, {"heading": "Revised Prioritized Planning", "text": "In fact, it is such that it is a matter of a way in which people are able to put themselves into the world, in which they are able to live, in which they are able to live, in which they are able to live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, they live, in which they live, in which they live, in which they live, in which they live, they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live"}, {"heading": "Checking Solvability", "text": "Now let's look at an open multi-robot system where new robot tasks can occur at any time, and we can't guarantee that the robots will only move between prefabricated endpoints. Then, we can use Theorem 2 to verify whether adding a new robot task maintains the sequential solvability of the trajectory coordination problem between the existing robots and the new robot. If not, we can decide to refuse or delay the addition of a new robot task. Episode 3 provides us with sufficient conditions to quickly determine whether a particular problem situation can be solved by RPP without actually running the algorithm, by verifying whether S > i-avoiding and G < i-avoiding paths exist for each robot. Deciding whether such paths exist amounts to planning spatial paths amidst static obstacles, which in practice is significantly faster than planning space-temporal obstacles would have to be executed if PP were to be executed."}, {"heading": "Limitations", "text": "We have shown that there is a class of instances that fully covers RPP, but PP does not. However, outside this class, we can find cases that PP solves, but RPP does not. Consider the following scenario: None of the algorithms is superior to the other in terms of instance coverage. Since RPP preventively avoids starting regions, even if they can be safely traversed, the solutions generated by RPP tend to be slightly longer than those generated by PP. This can be demonstrated in the following scenario: Figure 6: If RPP is looking for a trajectory for Robot 1, it must avoid the starting position of Robot 2, resulting in the curved trajectory shown in the image. On the other hand, PP would create a shorter straight trajectory connecting the start and finish of Robot 1. We can see that despite the theoretical guarantees of RPP, there are situations where PP would be a more suitable choice than RPP."}, {"heading": "IV. DECENTRALIZED ALGORITHMS", "text": "Imagine a multi-robot system that consists of a large number of heterogeneous autonomous robots. In such a scenario, a decentralized implementation of a (revised) prioritized planning is more desirable than a centralized one. In a decentralized implementation, each robot executes its own instance of the algorithm and exchanges messages with the other robots according to a prescribed communication protocol. If an inconsistency is detected by a robot, it calculates the best path for itself using its own on-board computing resources. Finally, the process should be converted to a state where all robots exhibit mutually conflict-free trajectories. An advantage of such an approach is that multiple robots often calculate their trajectories in parallel, and thus a conflict-free solution is usually calculated faster. Another advantage for multi-robot systems with heterogeneous robots is that the kinematic and other potentially implicit constraints on a particular robot's trajectory are often calculated in parallel, thus a conflict-free solution is usually calculated more quickly."}, {"heading": "Synchronized Decentralized Implementation", "text": "A decentralized implementation of classic, prioritized planning processes, in which robots advance simultaneously in synchronized rounds, was first presented by Velagapudi et al. [19] We will use their approach as the basis for decentralized implementation of (revised) prioritized planning and call the resulting algorithms synchronized decentralized implementations of (revised) prioritized planning. [19] The algorithm runs in synchronized rounds. During each round, each robot ensures that its current trajectory is in line with the trajectories of higher priorities of robots from the previous round. If the current trajectory is consistent, then the robot holds its current trajectory still. It finds a new consistent trajectory for itself and transfers the other robots."}, {"heading": "Asynchronous Decentralized Implementation", "text": "Because of its synchronous nature, the SD- (R) PP-algorithm replaces the SD- (R) PP-algorithm with only one active ingredient for mere communication. < PP = PP = PP = PP uses the calculating resources distributed to individual robots not completely out. < PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP = PP"}, {"heading": "V. EXPERIMENTAL ANALYSIS", "text": "We compare the performance of PP, RPP, SD-RPP, AD-PP, AD-RPP in relation to the range, complexity of communication and quality of solutions. The comparison was performed in three real environments (see Figure 1). For each of the environments we have generated two types of problem cases: 1), 2), 3), 4), 5), 5, \"5,\" 6, \"6,\" 6, \"7,\" 7, \"7,\" 8, \",\", \",\", \",\", \"\", \",\" \",\", \"\", \",\", \",\", \",\", \",\" \",\" \",\", \"\", \",\", \"\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \",\", \"\", \",\", \",\" \",\", \",\", \",\", \"\", \",\", \",\", \",\", \",\", \",\" \",\" \",\", \"\", \",\", \",\", \",\", \",\""}, {"heading": "Environments", "text": "Empty Hall Environment: For both instance sets and each number of robots in the range n = 1 to n = 50, we created 25 random problem cases containing the given number of robots.Office Floor Environment: The office floor environment is based on the laser rangefinder protocol of the Cartesium building at the University of Bremen. We thank Cyrill Stachniss for providing the data via the Robotics Data Set Repository [6]. The environment and the roadmap used for planning paths in the area are shown in Figure 9a. For example, we created for both instance sets and each number of robots in the range n = 1 to n = 30 25 random problem cases containing the given number of robots.Warehouse Environment: The map of the warehouse environment and the roadmap used for flight planning are shown in Figure 10a. For example, each instance set of 60 and each robot center represents the number from 1 to 1 with the number of robot centers in the range of problems."}, {"heading": "Results", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "VI. DEPLOYMENT", "text": "In order to verify the applicability of the proposed algorithm under realistic communication conditions, we used the algorithm as a conflict resolution mechanism in a multi-role drone system. The multi-role drone system that we used as a test field is being developed as part of a long-term research project at our center [11], which is developing high-level control algorithms for teams of collaborating drones to autonomously perform tasks such as patrolling, target tracking or area surveillance on tactical missions."}, {"heading": "Multi-UAV Robotic Testbed", "text": "Our test bed consists of two hardware UAVs and any number of simulated UAVs. The hardware UAVs are based on the Unicorn cell, which is equipped with Lockheed Martin's Kestrel autopilot (see Figure 13a). In addition, the airborne system is equipped with the Gumstix Overo EarthStorm embedded computer for on-board computers and the Xbee 2.4GHz RF module to enable direct UAV-to-UAV messages. Our algorithms are primarily aimed at large UAV teams. Due to the limited number of physical UAVs available to us, a mixed reality approach [7] is used to scale the flight capacities of the UAVs used, in particular a relatively high degree of inaccuracy in plan execution due to unstable winds, we model the UAV connection (for flight planning purposes and conflict resolution) as a large UAV zone each Adrium."}, {"heading": "Closed-Loop AD-PP", "text": "In fact, it is the case that you are able to live in a country where most people are able to live in a country where they are able to move and where they are able to change the world."}, {"heading": "Superconflict experiment", "text": "The behavior of the proposed technique within a complex mission is demonstrated in a so-called \"super-conflict\" scenario. We looked at four UAVs with launch positions at the corners of a square and their targets are located at diagonally opposite corners. Therefore, all aircraft are initially in a conflict in the middle of the square, see Figure 13b. To demonstrate the behavior of the CLAD-PP technique more clearly, the BESTTRAJ flight planners of the individual UAVs are forced to use only a fixed altitude and a fixed flight velocity. In this experimental setup, two real UAVs (Plane1 and Plane2) are simulated on a hardware-in-the-loop simulator and two more (Plane3 and Plane4). Control Plans 15Algorithm 5: Asynchronous Decentralized Implementation of Priorized Planning, Closed-Loop."}, {"heading": "VII. CONCLUSION", "text": "In this paper, we summarized characteristics and compared the performance of six different algorithms that use the idea of prioritized planning. While PP and SDPP are existing algorithms that have previously appeared in the literature, the remaining four algorithms are our novel contributions. In particular, we proposed a revised version of prioritization planning (RPP) and proved that this algorithm is guaranteed to provide a solution if there is a path for each robot that reaches its target position, avoids starting positions of lower priority robots and avoids target positions of high priority robots. We have shown that this state is fulfilled when the individual robots move between two endpoints of a valid infrastructure. The significance of this result lies in the fact that human-made environments are usually built as valid infrastructures, and thus the RPP algorithm for efficiently searching for coordinated trajectories for robots operating in such environments."}, {"heading": "Acknowledgements", "text": "This research was supported by the Czech Science Foundation (grant no. 13-22125S) and the Funding Agency of the Czech Technical University in Prague (grant no. SGS14 / 143 / OHK3 / 2T / 13). Access to computing and storage facilities owned by parties and projects contributing to the National MetaCenter for Network Infrastructure is highly appreciated within the framework of the Large Infrastructure Projects for Research, Development and Innovation (LM2010005) programme."}], "references": [{"title": "Some constraints and tradeoffs in the design of network communications", "author": ["E.A. Akkoyunlu", "K. Ekanandham", "R.V. Huber"], "venue": "In SOSP,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1975}, {"title": "Finding and optimizing solvable priority schemes for decoupled path planning techniques for teams of mobile robots", "author": ["M. Bennewitz", "W. Burgard", "S. Thrun"], "venue": "Robotics and Autonomous Systems,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "Asynchronous decentralized algorithm for space-time cooperative pathfinding. In Spatio-Temporal Dynamics Workshop (STeDy), SFB/TR 8 Spatial Cognition Center", "author": ["Michal Cap", "Peter Novak", "Jiri Vokrinek", "Michal Pechoucek"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "On the complexity of motion planning for multiple independent objects; pspace- hardness of the \"warehouseman\u2019s problem", "author": ["J.E. Hopcroft", "J.T. Schwartz", "M. Sharir"], "venue": "The International Journal of Robotics Research,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1984}, {"title": "The robotics data set repository (radish)", "author": ["Andrew Howard", "Nicholas Roy"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "Towards incremental development of human-agent-robot applications using mixed-reality testbeds", "author": ["Michal Jakob", "Michal P\u011bchou\u010dek", "Peter Nov\u00e1k", "Michal \u010c\u00e1p", "Ondra Van\u011bk"], "venue": "IEEE Intelligent Systems,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Sampling-based algorithms for optimal motion planning", "author": ["Karaman", "Frazzoli"], "venue": "International Journal of Robotics Research,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Algorithms for distributed termination detection", "author": ["Friedemann Mattern"], "venue": "Distributed computing,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1987}, {"title": "Anytime safe interval path planning for dynamic environments", "author": ["Venkatraman Narayanan", "Mike Phillips", "Maxim Likhachev"], "venue": "In Intelligent Robots and Systems (IROS),", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "P\u011bchou\u010dek. Deployment of multi-agent algorithms for tactical operations on uav hardware (demonstration)", "author": ["Martin Seleck\u00fd", "Anton\u00edn Komenda", "Michal \u0160tolba", "Tom\u00e1\u0161 Meiser", "Michal \u010c\u00e1p", "Milan Rollo", "Ji\u0159\u00ed Vok\u0159\u00ednek", "Michal"], "venue": "In Proceedings of AAMAS 2013 (to appear),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Cooperative pathfinding", "author": ["David Silver"], "venue": "In AIIDE, pages 117\u2013122,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2005}, {"title": "Strong np-hardness of moving many discs", "author": ["Paul G. Spirakis", "Chee-Keng Yap"], "venue": "Inf. Process. Lett.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1984}, {"title": "Finding optimal solutions to cooperative pathfinding problems", "author": ["Trevor Scott Standley"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Complete algorithms for cooperative pathfinding problems", "author": ["Trevor Scott Standley", "Richard E. Korf"], "venue": "In Toby Walsh, editor,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "Prioritized motion planning for multiple robots", "author": ["Jur van den Berg", "Mark Overmars"], "venue": "In IROS,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2005}, {"title": "Kinodynamic motion planning on roadmaps in dynamic environments", "author": ["Jur van den Berg", "Mark Overmars"], "venue": "In IROS,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2007}, {"title": "Asynchronous decentralized prioritized planning for coordination in multi-robot system", "author": ["Michal \u010c\u00e1p", "Peter Nov\u00e1k", "Martin Seleck\u00fd", "Jan Faigl", "Ji\u0159\u00ed Vok\u0159\u00ednek"], "venue": "In Intelligent Robots and Systems (IROS),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2013}, {"title": "Decentralized prioritized planning in large multirobot teams", "author": ["Prasanna Velagapudi", "Katia P. Sycara", "Paul Scerri"], "venue": "In IROS,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "A complete multirobot path planning algorithm with performance bounds", "author": ["Glenn Wagner", "Howie Choset. M"], "venue": "In IROS,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2011}], "referenceMentions": [{"referenceID": 11, "context": "Deciding whether a coordinated collision-free paths exist for multiple discs moving amidst polygonal obstacles is known to be strongly NP-hard [13]; the same task involving rectangular objects in an empty room is known to be in PSPACE-hard [5].", "startOffset": 143, "endOffset": 147}, {"referenceID": 3, "context": "Deciding whether a coordinated collision-free paths exist for multiple discs moving amidst polygonal obstacles is known to be strongly NP-hard [13]; the same task involving rectangular objects in an empty room is known to be in PSPACE-hard [5].", "startOffset": 240, "endOffset": 243}, {"referenceID": 12, "context": "The coupled approaches typically find optimal solutions [14], [15], [20], but do not scale well with the increasing number of conflicting robots.", "startOffset": 56, "endOffset": 60}, {"referenceID": 13, "context": "The coupled approaches typically find optimal solutions [14], [15], [20], but do not scale well with the increasing number of conflicting robots.", "startOffset": 62, "endOffset": 66}, {"referenceID": 18, "context": "The coupled approaches typically find optimal solutions [14], [15], [20], but do not scale well with the increasing number of conflicting robots.", "startOffset": 68, "endOffset": 72}, {"referenceID": 17, "context": "presented a decentralized version of prioritized planning technique for teams of mobile robots [19], which is able to utilize the distributed computational resources to reduce the time needed to find a solution.", "startOffset": 95, "endOffset": 99}, {"referenceID": 2, "context": "Partial results of the presented work appeared in [3], [18], where the focus was on the design of asynchronous version of decentralized prioritized planning.", "startOffset": 50, "endOffset": 53}, {"referenceID": 16, "context": "Partial results of the presented work appeared in [3], [18], where the focus was on the design of asynchronous version of decentralized prioritized planning.", "startOffset": 55, "endOffset": 59}, {"referenceID": 0, "context": "A path p : [0, 1]\u2192W of robot i in workspace W is called satisfying if it starts at the robot\u2019s start position si, ends at robot\u2019s goal position gi, and the body of robot whose center follows the path p always lies entirely in W .", "startOffset": 11, "endOffset": 17}, {"referenceID": 14, "context": "Other works such as [16], [2] investigate techniques for choosing a good prioritization for the robots.", "startOffset": 20, "endOffset": 24}, {"referenceID": 1, "context": "Other works such as [16], [2] investigate techniques for choosing a good prioritization for the robots.", "startOffset": 26, "endOffset": 29}, {"referenceID": 15, "context": "[17] or [10].", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "[17] or [10].", "startOffset": 8, "endOffset": 12}, {"referenceID": 10, "context": "Prioritized planning is in general incomplete, consider the counter-example [12] depicted in Figure 1: Figure 1: The picture shows two robots desiring to move from s1 to g1 (s2 to g2 resp.", "startOffset": 76, "endOffset": 80}, {"referenceID": 17, "context": "in [19].", "startOffset": 3, "endOffset": 7}, {"referenceID": 17, "context": "Properties: In order to facilitate and simplify exposition of the later introduced asynchronous algorithm, we developed an alternative proof of termination of the SD-(R)PP algorithm, which deviates from the original one devised by the authors of SD-PP in [19].", "startOffset": 255, "endOffset": 259}, {"referenceID": 4, "context": "We thank Cyrill Stachniss for providing the data through the Robotics Data Set Repository [6].", "startOffset": 90, "endOffset": 93}, {"referenceID": 9, "context": "The multi-UAV system we used as a testbed is being developed as a part of a long-running research effort in our center [11], which is concerned with development of high-level control algorithms for teams of cooperating UAVs to autonomously carry out tasks such as patrolling, target tracking or area surveillance in tactical missions.", "startOffset": 119, "endOffset": 123}, {"referenceID": 5, "context": "Due to the limited number of physical UAVs we have at our disposal, a mixed-reality approach [7] is used to scale up.", "startOffset": 93, "endOffset": 96}, {"referenceID": 7, "context": "[9]) at the end of each round in order to detect that every other robot has finished computing in the given round.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "With unreliable communication channels, such synchronization is in general impossible to achieve, as was shown in the famous Two General\u2019s problem [1].", "startOffset": 147, "endOffset": 150}, {"referenceID": 6, "context": "For the trajectory generation (BESTTRAJ routine) we use an any-time RRT*-based [8] spatio-temporal trajectory planner, which is restricted to provide a solution within one second.", "startOffset": 79, "endOffset": 82}], "year": 2014, "abstractText": "An important capability of autonomous multi-robot systems is to prevent collision among the individual robots. One approach to this problem is to plan conflict-free trajectories and let each of the robots follow its pre-planned trajectory. A widely used practical method for multi-robot trajectory planning is prioritized planning, which has been shown to be effective in practice, but is in general incomplete. Formal analysis of instances that are provably solvable by prioritized planning is still missing. Moreover, prioritized planning is a centralized algorithm, which may be in many situations undesirable. In this paper we a) propose a revised version of prioritized planning and characterize the class of instances that are provably solvable by the algorithm and b) propose an asynchronous decentralized variant of prioritized planning, which maintains the desirable properties of the centralized version and in the same time exploits the distributed computational power of the individual robots, which in most situations allows to find the joint trajectories faster. The experimental evaluation performed on real-world indoor maps shows that a) the revised version of prioritized planning reliably solves a wide class of instances on which both classical prioritized planning and popular reactive technique ORCA fail and b) the asynchronous decentralized algorithm provides solution faster than the previously proposed synchronized decentralized algorithm. Note to Practitioners\u2014Consider a large warehouse in which the goods are stored and retrieved by autonomous transport robots. One option is to ignore interaction between the vehicles during the route planning for each robot and handle the conflicts only during the route execution. However, such approach is prone to deadlocks, i.e. to a situations during which some of the robots mutually block each other, cannot proceed and fail to complete their transportation task. An alternative approach would involve planning collision-free routes for each robot before the robots start executing them. However, the general methods for this problem that guarantee a solution are impractical due to their high computational complexity. In this paper, we show that a simple prioritized approach in which robots plan their routes one after another is guaranteed to find collision-free trajectories for a welldefined class of practical problems. In particular, if the systems resembles human-made transport infrastructures by requiring that the start and destination position of each vehicle must never obstruct other vehicles from moving, then the proposed approach is guaranteed to provide a solution. E.g., in such a warehouse application, the collision-free routes can efficiently computed by the prioritized approach. The paper contains formal condition that characterizes the problem instances for which is the method guaranteed to work. Further, we propose a new decentralized adaptation of the prioritized algorithm that can be used in multi-robot systems without a central solver. This technique can be used to find coordinate trajectories just by running simple negotiation protocol between the individual robots. The paper contains analysis showing that the decentralized algorithm exhibits desirable theoretical properties and experimental comparison of performance of different variations of centralized and decentralized algorithms.", "creator": "TeX"}}}