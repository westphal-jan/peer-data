{"id": "1411.4516", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Nov-2014", "title": "Verification of Relational Multiagent Systems with Data Types (Extended Version)", "abstract": "We study the extension of relational multiagent systems (RMASs), where agents manipulate full-fledged relational databases, with data types and facets equipped with domain-specific, rigid relations (such as total orders). Specifically, we focus on design-time verification of RMASs against rich first-order temporal properties expressed in a variant of first-order mu-calculus with quantification across states. We build on previous decidability results under the \"state-bounded\" assumption, i.e., in each single state only a bounded number of data objects is stored in the agent databases, while unboundedly many can be encountered over time. We recast this condition, showing decidability in presence of dense, linear orders, and facets defined on top of them. Our approach is based on the construction of a finite-state, sound and complete abstraction of the original system, in which dense linear orders are reformulated as non-rigid relations working on the active domain of the system only. We also show undecidability when including a data type equipped with the successor relation.", "histories": [["v1", "Mon, 17 Nov 2014 15:49:35 GMT  (62kb)", "http://arxiv.org/abs/1411.4516v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB cs.MA", "authors": ["diego calvanese", "giorgio delzanno", "marco montali"], "accepted": false, "id": "1411.4516"}, "pdf": {"name": "1411.4516.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Marco Montali", "Giorgio Delzanno"], "emails": ["calvanese@inf.unibz.it", "montali@inf.unibz.it", "giorgio.delzanno@unige.it"], "sections": [{"heading": null, "text": "ar Xiv: 141 1,45 16v1 [cs.AI] 17 Nov 201 4"}, {"heading": "1 Introduction", "text": "We are investigating relational multi-agent systems (RMASs) inspired by the recently defined framework of data-conscious connection-based multi-agent systems (DACMASs) (Chopra and Singh 2013; Montali, Calvanese and De Giacomo 2014). Broadly speaking, an RMiri consists of agents who manage data in an internal full-fledged relational database and apply proactive and reactive rules to update their own data and exchange messages with other agents. Messages have an associated payload, which is used to move data from one agent to another. It is noteworthy that when updating their internal database, agents can also inject new data into the system by calling up external services. This abstraction serves as a metaphor for any type of interaction with the external world, such as relying on web services or interacting with people. From a data perspective, previous research has focused mainly on a single, infinite data domain, whose only elements can be compared for equality and inequality."}, {"heading": "2 Relational Multiagent Systems", "text": "RMASs are data-conscious multi-agent systems consisting of agents who exchange and update data. In addition to generic agents, an RMAS is equipped with a so-called institutional agent that exists from the initial system state and can be contacted by the other agents as a kind of \"white-page\" agent, i.e., to (i) obtain information about the system as a whole; (ii) obtain names of other agents to interact with them; and (iii) create and remove agents. On the surface, RMASs and DACMASs share many aspects, but there are two major differences in the way they model data. On the one hand, DACMASs view only a single, abstract data domain that is equipped with equality; on the other hand, RMASs data are typed and enriched with domain-specific relationships."}, {"heading": "2.1 Data Types and Their Facets", "text": "(< F = > Data type T is a pair < F, RT >, where there are a number of data types that we use RT to name all the domain-specific relationships mentioned in T. We also look at the following well-known data domains whose relationships retain the usual meaning: \u2022 Dense, global orders such as < Q, < R, < R, = < R, < R, < R, < R, < R, < R, < R, < R, < R)."}, {"heading": "2.2 Initial Data Domain", "text": "With a data type T = < T, RT > we isolate a finite subset of initial data objects for T. This subset explicitly lists the data objects that can be used in the initial states of the agent specifications (cf. Section 2.4), plus specific \"control data objects\" that are explicitly mentioned in the agent specifications themselves and thus help determine the possible executions. We extend this term to those objects that are used in the definition of facets. Giving a facet F = < T, BA (x) > with T = < T, RT > is a finite subset of T that contains all data objects explicitly mentioned in the definition of facets (x).The initial data domain of an RMAS with a set of facets, written 0, F, is then defined as the (resolved) union of initial data objects for each facet F."}, {"heading": "2.3 Typed Service Calls", "text": "As argued in (Bagheri Hariri et al. 2013; Montali, Calvanese and De Giacomo 2014; Bagheri Hariri et al. 2014), this is crucial to make the system \"open\" to the external world, taking into account a variety of modes of interaction, such as interaction with services or people. We use this mechanism in particular to model the agent's ability to inject new data according to the agent's internal decisions, but still outside its specification. In view of a number of facets, an F-typed service is a triple < f / n, F in, F out >, where (i) f / n is a functional scheme with the name f and the arc n; (ii) F in a series of facets is an F-typi."}, {"heading": "2.4 Agent Specifications", "text": "In RMASs, agent specifications consist of three main components. The first is the data component Q = Q, the intensive part of which is a typed database schema with constraints; each agent adopting the same specification starts with the same initial extensional data, but develops autonomously during execution through interaction with other agents and services. The second is a proactive behavior consisting of a set of conditional action rules that determine what messages can be sent by the agent, along with their actual payload and their target agent. The third is a reactive behavior constituted by ECA-like updating rules that determine how the agent updates its own data when a particular message is received with payload from another agent or sent to another."}, {"heading": "2.5 Well-Formed Specifications", "text": "/ / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / this}, {"heading": "3 Modeling with RMAS", "text": "This year, it has come to the point that it has never come as far as it has in recent years, when it has taken so long to get there, to get there."}, {"heading": "3.1 Ticket-Based Mutual Exclusion Protocols", "text": "The idea is that if a process wants to access a critical section, it must get a ticket and wait until its turn to evaluate the cards with the base facet RF = < < R, {<}, true > for real numbers."}, {"heading": "3.2 Contract Net", "text": "We show how the classic contract protocol (Smith 1980) is easily accommodated within our framework. (This can be considered an example of a \"price-based\" protocol, and therefore indirectly shows how different types of auctions could also be considered, such as in (Belardinelli 2014). An RMAS containing the contract network protocol contains two agent specifications (which obviously can be enriched and expanded on a pro-domain basis): the specification of an initiator agent and the specification of a participating agent. The first specification is embodied by an agent who is interested in delegating the execution of a task to another agent in order to achieve a desired goal. The second specification is embodied by agents who have the skills and interest in performing the task, provided that they receive a remuneration.F The system uses the following FIPA-like messages: \u2022 cfp (SF) (from the initiator - to have a task for the participant)."}, {"heading": "4 Verification", "text": "The execution semantics of RMAS X = < T, F, F, S, M, G, I > is captured by a relational transition system. < T, DX, \u03a3, s0, db, >, where: (i) DX is the union of typed schemas in the specifications of G and I; (ii), is a potentially infinite number of states; (iii) s0, db, is the initial state; (iv) db is a function that, given a state s and the name of an agent in the specifications of s, returns the database of n in the states s.db (n), which must be Dspecn -conformant, where specn assumes the name of the nspecification of n. (v)"}, {"heading": "5 Decidability of Verification", "text}, {"heading": "5.1 RMASs with the Successor Relation", "text": "We show that at least one data type with the succession rule affects decision-making capability: < k = > K = > DC = < p = > K = > K = > K = > K = > K = > K = < p}, {"heading": "5.2 Densely-Ordered RMASs", "text": "Considering the previous indecisiveness of the results, we focus on the equality of the individual arrangements. We rely only on data types endowed with domain-specific equality, and, possibly, on total denser arrangements, as well as on corresponding facets. For this class of RMASs, we have: Theorem 5.3. Verification of closed micro-plant types via state-limited, densely ordered RMASs is decideable and reducible to conventional, end-state models checking.Let X = < T, F, S, M, G, I, I, RMAS, and a closed RMAS property. Notice, which is constituted by hypothesis, T is constituted by a set of data types endowed only with domain-specific equality, and a set of data types endowed with a dense overall order: T = To.The proof is quite indirect and that we are involved in it."}, {"heading": "6 Conclusion", "text": "The presence of concrete data types and their facets greatly strengthens their modeling capacities, making it suitable, for example, for capturing mutual exclusion protocols, asynchronous interactions with limited queues, and price-based protocols. Our central finding, namely that dense-order RMASs and state-defined verification techniques are verifiable, paves the way for concrete verification algorithms for this system class (Lomuscio, Qu, and Raimondi 2009; Cavada et al. 2014). In this regard, exponentiality in the data slots that can be changed over time is a source of complexity inherent in all data-conscious dynamic systems (Deutsch, Sui, and Vianu 2007). We intend to address this by proposing data modularization techniques to divide the system into smaller components. Belelli's basic perspective would be our linkages between two types of data (2012) and idination (both)."}], "references": [{"title": "Verification of relational data-centric dynamic systems with external services", "author": ["Bagheri Hariri"], "venue": "CoRR Technical Report arXiv:1203.0024,", "citeRegEx": "Hariri,? \\Q2012\\E", "shortCiteRegEx": "Hariri", "year": 2012}, {"title": "Verification of relational data-centric dynamic systems with external services", "author": ["Bagheri Hariri"], "venue": "In Proc. of the 32nd ACM SIGACT SIGMOD SIGAI Symp. on Principles of Database Systems", "citeRegEx": "Hariri,? \\Q2013\\E", "shortCiteRegEx": "Hariri", "year": 2013}, {"title": "State-boundedness in data-aware dynamic systems", "author": ["Bagheri Hariri"], "venue": "In Proc. of the 14th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR)", "citeRegEx": "Hariri,? \\Q2014\\E", "shortCiteRegEx": "Hariri", "year": 2014}, {"title": "and Katoen", "author": ["C. Baier"], "venue": "J.-P.", "citeRegEx": "Baier and Katoen 2008", "shortCiteRegEx": null, "year": 2008}, {"title": "An abstraction technique for the verification of artifact-centric systems", "author": ["Lomuscio Belardinelli", "F. Patrizi 2012] Belardinelli", "A. Lomuscio", "F. Patrizi"], "venue": "In Proc. of the 13th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR),", "citeRegEx": "Belardinelli et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Belardinelli et al\\.", "year": 2012}, {"title": "Model-checking concurrent systems with unbounded integer variables: Symbolic representations, approximations, and experimental results", "author": ["Gerber Bultan", "T. Pugh 1999] Bultan", "R. Gerber", "W. Pugh"], "venue": "ACM Transactions on Programming Languages and Systems", "citeRegEx": "Bultan et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Bultan et al\\.", "year": 1999}, {"title": "The nuXmv symbolic model checker", "author": ["Cavada"], "venue": "In Proc. of the 26th Int. Conf. on Computer Aided", "citeRegEx": "Cavada,? \\Q2014\\E", "shortCiteRegEx": "Cavada", "year": 2014}, {"title": "M", "author": ["A.K. Chopra", "Singh"], "venue": "P.", "citeRegEx": "Chopra and Singh 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "Specification and verification of datadriven web applications", "author": ["Sui Deutsch", "A. Vianu 2007] Deutsch", "L. Sui", "V. Vianu"], "venue": "J. of Computer and System Sciences", "citeRegEx": "Deutsch et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Deutsch et al\\.", "year": 2007}, {"title": "MCMAS: A model checker for the verification of multi-agent systems", "author": ["Qu Lomuscio", "A. Raimondi 2009] Lomuscio", "H. Qu", "F. Raimondi"], "venue": "In Proc. of the 21st Int. Conf. on Computer Aided Verification (CAV),", "citeRegEx": "Lomuscio et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lomuscio et al\\.", "year": 2009}, {"title": "M", "author": ["Minsky"], "venue": "L.", "citeRegEx": "Minsky 1967", "shortCiteRegEx": null, "year": 1967}, {"title": "Verification of data-aware commitment-based multiagent systems", "author": ["Calvanese Montali", "M. De Giacomo 2014] Montali", "D. Calvanese", "G. De Giacomo"], "venue": "In Proc. of the 13th Int. Conf. on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "Montali et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Montali et al\\.", "year": 2014}, {"title": "and Pistore", "author": ["U. Montanari"], "venue": "M.", "citeRegEx": "Montanari and Pistore 2005", "shortCiteRegEx": null, "year": 2005}, {"title": "and Calvanese", "author": ["O. Savkovic"], "venue": "D.", "citeRegEx": "Savkovic and Calvanese 2012", "shortCiteRegEx": null, "year": 2012}, {"title": "1980", "author": ["Smith", "R. G"], "venue": "The contract net protocol: High-level communication and control in a distributed problem solver. IEEE Transactions on Computers 29(12):1104\u2013", "citeRegEx": "Smith 1980", "shortCiteRegEx": null, "year": 1113}], "referenceMentions": [], "year": 2014, "abstractText": "We study the extension of relational multiagent systems (RMASs), where agents manipulate full-fledged relational databases, with data types and facets equipped with domainspecific, rigid relations (such as total orders). Specifically, we focus on design-time verification of RMASs against rich firstorder temporal properties expressed in a variant of first-order \u03bc-calculus with quantification across states. We build on previous decidability results under the \u201cstate-bounded\u201d assumption, i.e., in each single state only a bounded number of data objects is stored in the agent databases, while unboundedly many can be encountered over time. We recast this condition, showing decidability in presence of dense, linear orders, and facets defined on top of them. Our approach is based on the construction of a finite-state, sound and complete abstraction of the original system, in which dense linear orders are reformulated as non-rigid relations working on the active domain of the system only. We also show undecidability when including a data type equipped with the successor relation.", "creator": "LaTeX with hyperref package"}}}