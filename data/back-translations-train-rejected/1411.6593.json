{"id": "1411.6593", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Nov-2014", "title": "Rational Deployment of Multiple Heuristics in IDA*", "abstract": "Recent advances in metareasoning for search has shown its usefulness in improving numerous search algorithms. This paper applies rational metareasoning to IDA* when several admissible heuristics are available. The obvious basic approach of taking the maximum of the heuristics is improved upon by lazy evaluation of the heuristics, resulting in a variant known as Lazy IDA*. We introduce a rational version of lazy IDA* that decides whether to compute the more expensive heuristics or to bypass it, based on a myopic expected regret estimate. Empirical evaluation in several domains supports the theoretical results, and shows that rational lazy IDA* is a state-of-the-art heuristic combination method.", "histories": [["v1", "Mon, 24 Nov 2014 20:04:20 GMT  (37kb)", "http://arxiv.org/abs/1411.6593v1", "7 pages, 6 tables, 20 references"]], "COMMENTS": "7 pages, 6 tables, 20 references", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["david tolpin", "oded betzalel", "ariel felner", "solomon eyal shimony"], "accepted": false, "id": "1411.6593"}, "pdf": {"name": "1411.6593.pdf", "metadata": {"source": "CRF", "title": "Rational Deployment of Multiple Heuristics in IDA*", "authors": ["David Tolpin", "Ariel Felner", "Solomon Eyal Shimony"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 141 1,65 93v1 [cs.AI] 24 Nov 201 4"}, {"heading": "1 Introduction", "text": "It is a question of whether this is a way in which people in the US and in other parts of the world have behaved in the past, how they have behaved in the past, how they have behaved in the past, how they have behaved in the past, how they have behaved in the past, how they have behaved in the past and in the future, how they have behaved in the past and in the future, how they have behaved in the past and in the future, how they have behaved in the past and in the present."}, {"heading": "2 Lazy IDA*", "text": "We start with the description of IDA * and the slight change that is necessary to make heuristics lazy and thus implement the lazy IDA *."}, {"heading": "2.1 Definitions", "text": "During this work, for the sake of clarity, we assume that we have two available permissible heuristics, h1 and h2. Unless otherwise stated, we5 This paper is an extended version of a short (2-page) paper that appears in the ECAI procedures 2014. In addition to including all analyses that might not fit into the short version, there are some additional experimental results and a comparison to additional related work results. Algorithm 1: Lazy IDA * 1 Lazy IDA * (root) {2 Let Thresh = max (root), h2 (root) 3 Let Solution = zero 4, while Solution = zero and Thresh < Do 5 Solution, Thresh = Lazy DFS (root, Thresh) 6 Return Solution 7 Lazy DFS (n, Thresh) {8 if g (n) > Thresh zero and Thresh zero, Thresh then zero."}, {"heading": "2.2 Why use lazy IDA*?", "text": "When f (n) = g (n) + h (n) > T is evaluated, n is truncated and IDA * traced back to n's parent. Given h1 and h2, a naive implementation of IDA * will evaluate both and its maximum for comparison with T. Fauler IDA * (LIDA *) is based on the simple fact that if you have a condition in the form of Kond1 or Kond2, then if cond1 = True, then cond2 becomes irrelevant (no matter) and does not need to be calculated, since the entire condition or condition is certainly true. In the context of IDA *, if f1 (n) > T then the search can be traced back without having to compute h2. This simple observation is probably recognized by most IDA * implementors."}, {"heading": "2.3 Issues in Lazy IDA*", "text": "Several other obvious improvements to LIDA * are possible, and here we examine some of these potential improvements as well as potential pitfalls."}, {"heading": "2.3.1 Heuristic bypassing", "text": "Heuristic bypass (HBP) is a technique that in many cases makes it possible to bypass the calculation of a given heuristic without causing any other change in the course of the algorithm. In A *, one must calculate a f value, while applied to IDA *, one only needs to know whether the f value is below or above the threshold. First, it is important to note that Lazy IDA * is a special case of HBP as described above. If f1 (n) > T is not necessary to consult h2 (n), and we bypass the calculation of h2, another variant of HBP for LIDA * is applicable to a node n under the following two conditions: (1) the operator between n and its parent p is bidirectional, and (2) both heuristic istics are consistent [4]. Suppose that the node n was generated and that p is the parent of n; that the cost of the edge & ristic values are consistent and that the heuristic values are + 1."}, {"heading": "2.3.2 Extra iterations of Lazy IDA*", "text": "Suppose the current threshold is T and the current value of the next threshold (NT) is T + 3, because some nodes m were seen in the current iteration with f (m) = T + 3. Now we create nodes n with f1 (n) = T + 1, setting NT = T + 1 and bypassing h2. However, if f2 (n) = T + 2 had led the consultation from h2 to NT = 2, we could now start a new and redundant DFS iteration with LIDA * with T + 1. While Lazy A * has always been as informative as A *, using the maximum of heuristics, this is not the case with lazy IDA *. However, since there is potentially an exponential number of nodes at the limit of a DFS iteration, such scenarios are quite rare and rotten IDA * exceeds the regular IDA * in spite of this worst-case scenario."}, {"heading": "3 Rational Lazy IDA*", "text": "This year it is more than ever before."}, {"heading": "3.1 Bounding the probability that h2 is helpful", "text": "Search time can be saved by evaluating this probability with the help of concentration imbalances, only in those nodes where the probability that the evaluation is helpful is \"high enough\" = >. In particular, in the case of two heuristics, h1 and h2, it is necessary to decide whether h2 (n) can be evaluated on the basis of these empirical frequencies (n) and previous evaluations of h1 and h2 on the basis of the same or \"similar\" nodes. One can try to use the decision limits such as Equation 3 either online or offline on the basis of these empirical frequencies. Nevertheless, we are investigating another possibility, based on the reasoning that our goal in RLIDA * is better than simple LIDA *, and wish to act \"safely\" with the computing times, i.e. with low risk of being worse than LIDA *."}, {"heading": "4 Empirical evaluation", "text": "The biggest advantage of IDA * over A * is storage complexity. However, IDA * has a number of limitations. First, the number of nodes augmented by IDA * is typically much larger than that of A *, because IDA * cannot detect transpositions, and because IDA * repeats the previous iterations in each iteration. Furthermore, IDA * works very poorly if there are a large number of different f-costs below C that occur during the search (leading to a large number of iterations), which is in domains such as TSP. Therefore, we have selected empirical valuation domains known as IDA * -friendly (such as the 15 puzzle), or where recent work has shown that IDA * should work well, such as the problem of container relocation [20]. Unfortunately, most planning problems (from planning competitions) used in IDA * are unsuitable for IDA * metric positions in the search process."}, {"heading": "4.1 Sliding tile puzzles", "text": "This year, it has come to the point where it will be able to put itself at the top, \"he said in an interview with the\" Welt am Sonntag. \""}, {"heading": "4.2 Container relocation problem", "text": "In fact, most of us are in a position to put ourselves in another world, in which we put ourselves in another world, in which we find ourselves in another world, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves, in which we do not find ourselves."}, {"heading": "5 DISCUSSION", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1 Related work", "text": "This year, we will be able to put ourselves on top, \"he said.\" We have to put ourselves on top, \"he said.\" We have to put ourselves on top, \"he said.\" We have to put ourselves on top, \"he said.\" We have to put ourselves on top, \"he said."}, {"heading": "5.2 Summary and future work", "text": "Rational Lazy IDA * and its analysis can be considered as an instance of rational meta-reasoning *. While this framework is very general, it is extremely difficult to apply in practice. Recent work consists in reducing the time spent calculating heuristics. Lazy IDA * is very simple and a natural implementation of heuristics, especially if you are dominant but take on more money. Rational Lazy IDA * allows additional reductions in the number of heuristics during the search. Lazy IDA * is a natural implementation in the presence of 2 or more heuristics."}], "references": [{"title": "Generalized best-first search strategies and the optimality of A*", "author": ["R. Dechter", "J. Pearl"], "venue": "Journal of the ACM, 32(3), 505\u2013536, ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1985}, {"title": "Online speedup learning for optimal planning", "author": ["Carmel Domshlak", "Erez Karpas", "Shaul Markovitch"], "venue": "JAIR, 44,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Inconsistent heuristics in theory and practice", "author": ["A. Felner", "U. Zahavi", "R. Holte", "J. Schaeffer", "N. Sturtevant", "Z. Zhang"], "venue": "Artificial Intelligence, 175(9-10), 1570\u20131603, ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2011}, {"title": "A new efficient in situ sampling model for heuristic selection in optimal search", "author": ["Santiago Franco", "Michael W. Barley", "Patricia J. Riddle"], "venue": "Australasian Conference on Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2013}, {"title": "Selecting computations: Theory and applications", "author": ["Nicholas Hay", "Stuart Russell", "David Tolpin", "Solomon Eyal Shimony"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "A greedy look-ahead heuristic for the container relocation problem", "author": ["Bo Jin", "Andrew Lim", "Wenbin Zhu"], "venue": "in IEA/AIE,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Depth-first iterative-deepening: An optimal admissible tree search", "author": ["R.E. Korf"], "venue": "Artificial Intelligence, 27(1), 97\u2013109, ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1985}, {"title": "Time complexity of iterative-deepening-A* ", "author": ["Richard E. Korf", "Michael Reid", "Stefan Edelkamp"], "venue": "Artif. Intell.,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "Finding optimal solutions to the twenty-four puzzle", "author": ["Richard E. Korf", "Larry A. Taylor"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1996}, {"title": "Predicting the size of IDA*\u2019s search tree", "author": ["Levi H.S. Lelis", "Sandra Zilles", "Robert C. Holte"], "venue": "Artif. Intell.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Enhanced iterativedeepening search", "author": ["Alexander Reinefeld", "Tony A. Marsland"], "venue": "IEEE Trans. Pattern Anal. Mach. Intell.,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1994}, {"title": "Reducing reexpansions in iterative-deepening search by controlling cutoff bounds", "author": ["Uttam K. Sarkar", "Partha P. Chakrabarti", "Sujoy Ghose", "S.C. De Sarkar"], "venue": "Artif. Intell.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1991}, {"title": "Bounded suboptimal search: A direct approach using inadmissible estimates", "author": ["Jordan T. Thayer", "Wheeler Ruml"], "venue": "Proceedings of the Twenty-second International Joint Conference on Artificial Intelligence", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "Toward rational deployment of multiple heuristics in a", "author": ["D. Tolpin", "T. Beja", "S.E. Shimony", "A. Felner", "E. Karpas"], "venue": "IJCAI, ", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2013}, {"title": "Rational deployment of CSP heuristics", "author": ["David Tolpin", "Solomon Eyal Shimony"], "venue": "in IJCAI,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2011}, {"title": "A comparative study of ida*-style searches", "author": ["Benjamin W. Wah", "Yi Shang"], "venue": "in ICTAI, pp", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1994}, {"title": "Predicting the performance of IDA* using conditional distributions", "author": ["Uzi Zahavi", "Ariel Felner", "Neil Burch", "Robert C. Holte"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "An investigation of IDA* algorithms for the container relocation problem", "author": ["Huidong Zhang", "Songshan Guo", "Wenbin Zhu", "Andrew Lim", "Brenda Cheang"], "venue": "Proceedings of the 23rd International Conference on Industrial Engineering and Other Applications of Applied Intelligent Systems - Volume Part I,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}], "referenceMentions": [{"referenceID": 14, "context": "This was shown for depth-first search in CSPs [17], for Monte-Carlo tree search [6], and recently for A* [16].", "startOffset": 46, "endOffset": 50}, {"referenceID": 4, "context": "This was shown for depth-first search in CSPs [17], for Monte-Carlo tree search [6], and recently for A* [16].", "startOffset": 80, "endOffset": 83}, {"referenceID": 13, "context": "This was shown for depth-first search in CSPs [17], for Monte-Carlo tree search [6], and recently for A* [16].", "startOffset": 105, "endOffset": 109}, {"referenceID": 6, "context": "IDA* [8] is a linear-space simulation of A*.", "startOffset": 5, "endOffset": 8}, {"referenceID": 13, "context": "Thus it makes sense to examine how such speed-up was done for A* in a similar context, as was done in Lazy A* (or LA, for short) [16] by reducing the time spent on computing heuristics.", "startOffset": 129, "endOffset": 133}, {"referenceID": 13, "context": "In rational lazy A* (RLA) [16], the ideas of lazy heuristic evaluation and trading additional node expan-", "startOffset": 26, "endOffset": 30}, {"referenceID": 0, "context": "If the heuristic h(n) is admissible (never overestimates the real cost to the goal) then the set of nodes expanded by A* is both necessary and sufficient to find the optimal path to the goal [2].", "startOffset": 191, "endOffset": 194}, {"referenceID": 13, "context": "Unlike Lazy A*, where lazy evaluation must pay an overhead (re-inserting into the OPEN list) [16], Lazy IDA* (LIDA*) is straightforward and has no immediate", "startOffset": 93, "endOffset": 97}, {"referenceID": 17, "context": "We then provide experimental results on sliding tile puzzles and on the container relocation problem [20], showing that RLIDA* outperforms both IDA* and LIDA*.", "startOffset": 101, "endOffset": 105}, {"referenceID": 2, "context": "Another variant of HBP for LIDA* is applicable for a node n under the following two preconditions: (1) the operator between n and its parent p is bidirectional, and (2) both heuristics are consistent [4].", "startOffset": 200, "endOffset": 203}, {"referenceID": 2, "context": "When the heuristic is inconsistent then a mechanism called bidirectional pathmax (BPMX) can be used to propagate heuristic values from parents to children and vice versa [4].", "startOffset": 170, "endOffset": 173}, {"referenceID": 2, "context": "this context, lazy evaluation of heuristics is faster in time than exhaustive evaluation [4].", "startOffset": 89, "endOffset": 92}, {"referenceID": 13, "context": "Some of the ideas behind Rational Lazy IDA* are borrowed from those of [16] and", "startOffset": 71, "endOffset": 75}, {"referenceID": 17, "context": "known to be IDA*-friendly (such as the 15-puzzle), or where recent work has shown IDA* to perform well, such as the container relocation problem [20].", "startOffset": 145, "endOffset": 149}, {"referenceID": 13, "context": "Regretfully, most planning problems (from the planning competitions) used in [16], are inappropriate for IDA* due to multiple transpositions in the search space.", "startOffset": 77, "endOffset": 81}, {"referenceID": 12, "context": "Note that there is another version of the weighted 15-puzzle where the cost of a tile move is the reciprocal of the number on the tile [15].", "startOffset": 135, "endOffset": 139}, {"referenceID": 6, "context": "For consistency of comparison, we used as test cases for the 15 puzzle 98 out of Korf\u2019s 100 tests [8]: all the tests that were solved in less than 20 minutes with standard IDA* using the Manhattan Dis-", "startOffset": 98, "endOffset": 101}, {"referenceID": 8, "context": "more informative heuristic h2 we used the linear-conflict heuristic (LC) [10] which adds a value of 2 to MD for pairs of tiles that are in the same row (or the same column) as their respective goals but in a", "startOffset": 73, "endOffset": 77}, {"referenceID": 17, "context": "The container relocation problem is an abstraction of a planning problem encountered in retrieving stacked containers for loading onto a ship in sea-ports [20].", "startOffset": 155, "endOffset": 159}, {"referenceID": 17, "context": "Optimally solving this problem is NP-hard [20].", "startOffset": 42, "endOffset": 46}, {"referenceID": 17, "context": "We also address only the \u201crestricted\u201d version of the problem [20], where the only relocations allowed are of containers currently on top of the smallest numbered container.", "startOffset": 61, "endOffset": 65}, {"referenceID": 17, "context": "The number of such containers in a state can be computed quickly, and forms an admissible heuristic denoted LB1 in [20].", "startOffset": 115, "endOffset": 119}, {"referenceID": 17, "context": "Following [20], we denote this heuristic by LB3.", "startOffset": 10, "endOffset": 14}, {"referenceID": 5, "context": "In the experiments, we used as instances the 49 hardest tests out of those that were solved in less than 20 minutes with the LB1 heuristic, from the CVS test suite described in [1, 7], retrived from http://iwi.", "startOffset": 177, "endOffset": 183}, {"referenceID": 1, "context": "[3] also noted that although theoretically taking the maximum of admissible heuristics is best within the context of A*, the overhead may not be worth it.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "7 To guarantee admissibility we made some minor notation changes from how this heuristic is formally stated in the original paper Automatically selecting combinations of heuristics for A* and IDA* from a large set of available heuristics was examined in [5].", "startOffset": 254, "endOffset": 257}, {"referenceID": 11, "context": "is saved but optimality of the algorithm is still maintained [14, 12, 18].", "startOffset": 61, "endOffset": 73}, {"referenceID": 10, "context": "is saved but optimality of the algorithm is still maintained [14, 12, 18].", "startOffset": 61, "endOffset": 73}, {"referenceID": 15, "context": "is saved but optimality of the algorithm is still maintained [14, 12, 18].", "startOffset": 61, "endOffset": 73}, {"referenceID": 7, "context": "In addition, the notion of type system was recently introduced to divide the state space into different types [9, 19, 11].", "startOffset": 110, "endOffset": 121}, {"referenceID": 16, "context": "In addition, the notion of type system was recently introduced to divide the state space into different types [9, 19, 11].", "startOffset": 110, "endOffset": 121}, {"referenceID": 9, "context": "In addition, the notion of type system was recently introduced to divide the state space into different types [9, 19, 11].", "startOffset": 110, "endOffset": 121}, {"referenceID": 14, "context": "Recent work exists on meta-reasoning in DFS algorithms for CSP) [17] and in", "startOffset": 64, "endOffset": 68}, {"referenceID": 4, "context": "Monte-Carlo tree search [6].", "startOffset": 24, "endOffset": 27}, {"referenceID": 16, "context": ", those that measure the correlation of a given heuristic between neighbors [19, 11].", "startOffset": 76, "endOffset": 84}, {"referenceID": 9, "context": ", those that measure the correlation of a given heuristic between neighbors [19, 11].", "startOffset": 76, "endOffset": 84}], "year": 2014, "abstractText": "Recent advances in metareasoning for search has shown its usefulness in improving numerous search algorithms. This paper applies rational metareasoning to IDA* when several admissible heuristics are available. The obvious basic approach of taking the maximum of the heuristics is improved upon by lazy evaluation of the heuristics, resulting in a variant known as Lazy IDA*. We introduce a rational version of lazy IDA* that decides whether to compute the more expensive heuristics or to bypass it, based on a myopic expected regret estimate. Empirical evaluation in several domains supports the theoretical results, and shows that rational lazy IDA* is a state-of-the-art heuristic combination method.", "creator": "LaTeX with hyperref package"}}}