{"id": "1411.6998", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Nov-2014", "title": "Solving the Periodic Timetabling Problem using a Genetic Algorithm", "abstract": "In railway operations, a timetable is established to determine the departure and arrival times for the trains or other rolling stock at the different stations or relevant points inside the rail network or a subset of this network. The elaboration of this timetable is done to respond to the commercial requirements for both passenger and freight traffic, but also it must respect a set of security and capacity constraints associated with the railway network, rolling stock and legislation. Combining these requirements and constraints, as well as the important number of trains and schedules to plan, makes the preparation of a feasible timetable a complex and time-consuming process, that normally takes several months to be completed. This article addresses the problem of generating periodic timetables, which means that the involved trains operate in a recurrent pattern. For instance, the trains belonging to the same train line, depart from some station every 15 minutes or one hour. To tackle the problem, we present a constraint-based model suitable for this kind of problem. Then, we propose a genetic algorithm, allowing a rapid generation of feasible periodic timetables. Finally, two case studies are presented, the first, describing a sub-set of the Netherlands rail network, and the second a large portion of the Nord-pas-de-Calais regional rail network, both of them are then solved using our algorithm and the results are presented and discussed.", "histories": [["v1", "Mon, 24 Nov 2014 15:24:25 GMT  (379kb)", "http://arxiv.org/abs/1411.6998v1", "XVIII Congreso Panamericano de Ingenier\\'ia de Transito, Transporte y Logistica (PANAM 2014), Jun 2014, Santander, Spain.this http URL"]], "COMMENTS": "XVIII Congreso Panamericano de Ingenier\\'ia de Transito, Transporte y Logistica (PANAM 2014), Jun 2014, Santander, Spain.this http URL", "reviews": [], "SUBJECTS": "cs.AI cs.NE", "authors": ["diego arenas", "remy chevirer", "said hanafi", "joaquin rodriguez"], "accepted": false, "id": "1411.6998"}, "pdf": {"name": "1411.6998.pdf", "metadata": {"source": "CRF", "title": "Solving the Periodic Timetabling Problem using a Genetic Algorithm", "authors": ["Diego Arenas"], "emails": [], "sections": [{"heading": "Solving the Periodic Timetabling Problem using a Genetic", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Algorithm", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Diego Arenas", "text": "PhD student, UVHC-IFSTTAR, FranceR\u00e9my Chevrier Researcher, IFSTTAR, FranceSa\u00efd Hanafi Professor, UVHC, FranceJoaquin Rodriguez Researcher, IFSTTAR, France"}, {"heading": "SUMMARY", "text": "In railway operations, a timetable is drawn up to determine the departure and arrival times for trains or other rolling stock at the various stations or relevant points within the railway network or a subset of that network, but also to respect a number of safety and capacity constraints related to the railway network, rolling stock and legislation. The combination of these requirements and constraints, as well as the important number of trains and timetables according to plan, makes the creation of a workable timetable a complex and time-consuming process that usually takes several months. This article deals with the problem of creating periodic timetables, which means that the trains involved operate in a recurring pattern. For example, trains on the same train line depart from any station every 15 minutes or one hour. To address the problem, we present a constraint-based model that is suitable for this type of problem. Then we propose a genetic algorithm that makes it possible to map a large part of the Netherlands with fast periodicals of the railway network."}, {"heading": "1. INTRODUCTION", "text": "This year, it is at an all-time high in the history of the European Union."}, {"heading": "2. LITERATURE REVIEW", "text": "This year, it is more than ever before in the history of the city."}, {"heading": "3. PROBLEM FORMULATION", "text": "In this section, we specify the model for our solution. We define the data and variables, then the objective function, and finally we describe the constraints that our model takes into account."}, {"heading": "3.1. Definition of data and variables", "text": "Table 2 and Table 3 give a definition of the most important symbols used for data and variables in our model."}, {"heading": "3.2. Objective Function", "text": "The objective function is defined as the minimization of the weighted sum of restrictions violations. The weight for each type of restriction depends on the meaning of the restriction, for example, the violation of a restriction is much more serious than the violation of a connection restriction: Minimize [(W r \u22c5 V r) + (W d \u22c5 V d) + (W h \u22c5 V h) + (W s \u22c5 V s) + (W c \u22c5 Vc)] (1) Minimize [W x \u22c5 V x) (2), where W x is the weight value corresponding to a violation of a type x restriction, and V x is the number of violations of type x restrictions."}, {"heading": "3.3. Constraints", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Running Time", "text": "This restriction ensures that the travel time for a train i departing from station s and arriving at station t is between the previously calculated limits Lr and Ur (Lower and Upper travel time, respectively). It is defined as follows: Lr i, s, t \u2264 A i, t \u2212 Di, s + T \u22c5 Qarri, t, depi, s \u2264 Uri, s, t (3), whereby Lr i, s, t and Uri, s, t are determined from the details of the infrastructure between stations s and t, the safety rules, and the running and braking time of the rolling stock involved."}, {"heading": "Dwelling Time", "text": "This restriction guarantees that the stopping time of train i at station s is between the Ld and Ud limits. (Lower dwell time or upper dwell time): Ldi, s \u2264 D i, s \u2212 A i, s + T \u22c5 Qdepi, s, arr i, s \u2264 Udi, s (4), where Ld i, s and Udi, s are predefined values that ensure that there is sufficient time for the passenger to get on and off train i. If train i has a connection at station s, this dwell time should be long enough to establish the connection."}, {"heading": "Headway Time", "text": "Two trains i, j, s \u2264 Di, s \u2212 D j, s + T \u22c5 Qdepi, s, dep j, s \u2264 Uhi, j, s (5), where Lhi, j, s and Uhi, j, s are calculated on the basis of the types of trains, their journey times and their correct basic journey time. Basic journey time is the minimum time that a subsequent train must adhere to. This restriction prevents the generation of timetables in which one train on the train overtakes another. Lower limit Lhi, j, s is defined as the difference between the minimum journey times of trains i and j departing from station s to the next station, plus the maximum basic journey time of the train i. The upper limit Uhi, j, s is the difference between cycle T and the basic journey time of the train j."}, {"heading": "Single Track - Opposite Trains", "text": "Similar to train constraint, it is used when there is only one track connecting two stations and there is an i train running from station s to t and another j train departing from t and arriving at s. The time between the departure of train i and the arrival of train j from / to station s must be within the limits of Ls and Us, this restriction is defined as follows: Lsi, j, s \u2264 Tue, s \u2212 A, s + T \u22c5 Qdepi, s, arr j, s \u2264 Usi, j, s (6), where Lsi, j, s is twice the minimum transit time from station s to station s plus the base transit time of the train i. The value of Usi, j, s is the difference between cycle time T and the minimum transit time of the train j."}, {"heading": "Connections", "text": "The time between the arrival of train i and the departure of train j must be within the limits of Lc and Uc (respectively shorter transfer time and upper transfer time): Lci, j, s \u2264 D j, s \u2212 A i, s + T \u22c5 Qdep j, s, arr i, s \u2264 Uci, j, s (7), where Lci, j, s and Uci, j, s are defined as the estimated necessary time within which a passenger arriving on train i at station s must disembark, find the transfer station and board the train. Larger stations usually require longer transfer times."}, {"heading": "4. A GENETIC ALGORITHM BASED SOLVING METHOD", "text": "Our proposal to solve this problem is to develop a genetic algorithm inspired by the models of Kwan and Mistry (2003) and Semet and Schoenauer (2005). A comprehensive description of genetic algorithms can be found in Goldberg (1989) and Holland (1992). Our model takes into account the objective function (2) and limitations (3) to (7) described in Section 3 and performs periodic train schedules."}, {"heading": "4.1. Data Representation", "text": "To represent a timetable, we use a vector of integral values. The length of the vector corresponds to the sum of the two journeys that are counted for all trains, i.e. the possible values that are accepted are defined as [0... (T \u2212 1). The rest of the elements in the section represent the running and stopping times for all journeys and scheduled stops of the train. Figure 2 gives an example of a section. Each element that represents a running time allows only values between those defined by their respective running times, the same is applied to the elements that represent residential times. This will ensure that each timetable automatically respects all running and stopping times of the train."}, {"heading": "5. EXPERIMENTAL ANALYSIS", "text": "To experiment and validate our work, we propose two case studies, which will be presented and discussed according to their description. Specifications of the computer used to solve both case studies are: Intel Core i7 @ 2.9 GHz x4 processor, 3.5 GB RAM memory and running Ubuntu-64 v12.10 as operating system."}, {"heading": "5.1. Description of the instances", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1.1. Case Study 1", "text": "We are looking at a subnetwork of the Dutch railway system. This case study was carried out by Meester and Muns (2007) and consists mainly of 4 train lines: a total of 8 trains, 10 stations and the topology of the network is shown in Figure 3. For relevant information, the time period T has been set at 60 minutes and there are 7 transfer restrictions, so we have a total of 65 restrictions. Details of the routes, their operation, dwell time and connection times are detailed in the reference paper."}, {"heading": "5.1.2. Case Study 2", "text": "This is a simplified version of the Nord-Pas-de-Calais regional rail network, i.e. only the main stations are included (Figure 4).Data has been collected from the various current timetables available for download from the SNCF website (2013).The T period has been set at 60 minutes, the simplified network includes 26 stations and 24 train lines, i.e. a total of 48 trains to be planned. In addition, 14 connecting bottlenecks are defined, resulting in a total of 452 restrictions."}, {"heading": "5.2. Results", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.2.1. Case Study 1", "text": "For the experiment we use three population sizes: 300, 600 and 900 persons. Additionally, we specify as stop criteria that either an optimal solution is found or an evaluation limit is reached. The evaluation number indicates how often a fitness value is calculated, in our case, how many schedules are generated. The evaluation limits are set at: 10K, 20K, 30K, 200K, 1M and 5M. For each permutation of the population with the evaluation limits, the algorithm has been executed 50 times, the results are in Table 4.Our solution can find a workable schedule (without violating hard restrictions) in 100% of the cases below 0.91 seconds. On average, however, 0.34 connection restrictions are violated, which means that 66% of the solutions created under 0.91 seconds are feasible and also comply with the connection restrictions."}, {"heading": "5.2.2. Case Study 2", "text": "In Case Study 2, the sizes of the selected populations were: 600, 800 and 1000, while the selected limits for the number of evaluations were as follows: 50K, 150K, 250K, 500K, 1M and 5M. Similarly, in the previous experiments, each permutation of these two parameters was performed 50 times. Results are in Table 5. As expected, this case study requires a greater number of developments to achieve an acceptable percentage of the schedules created. 92.67% of the schedules created after an average of 34.55 seconds were feasible, but only 46.67% of them respect all connection limitations. It is an average of 124.56 seconds that 99.33% of the generated schedules are not only feasible, but also adhere to all connection limitations. It is important to note that even if the average elapsed time appears to be increased, this is caused by those runs where the solution must reach the limit of evaluations in order to stop, but also comply with all connection limitations."}, {"heading": "5 M 0 0.01 100 99.33 124.56", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "6. CONCLUSION AND PERSPECTIVES", "text": "The results of these measures can improve the current system of roadmap design in the countries that use periodic roadmaps. The results of our implementation to solve the problem are very encouraging. Indeed, although it is a tough and complex problem, the performance of the genetic algorithm is very satisfactory. Our solution can not only quickly find a workable timetable for the problem, but it also provides a flexible platform where we can easily add or modify the restrictions to meet some other criteria."}], "references": [{"title": "Nominal an robust train timetabling problems", "author": ["V. CACCHIANI", "P. TOTH"], "venue": "European Journal of Operational Research,", "citeRegEx": "CACCHIANI and TOTH,? \\Q2012\\E", "shortCiteRegEx": "CACCHIANI and TOTH", "year": 2012}, {"title": "Railway timetabling from an operations research", "author": ["MA Cambridge", "L.G. USA. KROON", "D. HUISMAN", "G. MAROTI"], "venue": "Report No. EI 2007-22. Econometric Institute, Erasmus University Rotterdam,", "citeRegEx": "Cambridge et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Cambridge et al\\.", "year": 2007}, {"title": "The first optimized railway timetable in practice", "author": ["C. LIEBCHEN", "L. PEETERS"], "venue": "timetabling. The IEEE Congress on Evolutionary Computation,", "citeRegEx": "LIEBCHEN and PEETERS,? \\Q2003\\E", "shortCiteRegEx": "LIEBCHEN and PEETERS", "year": 2003}, {"title": "Performance of algorithms for periodic timetable optimization", "author": ["Technische Universitat Berlin", "Berlin", "Germany", "C. 2002 LIEBCHEN", "M. PROKSCH", "F.H. WAGNER"], "venue": null, "citeRegEx": "761", "shortCiteRegEx": "761", "year": 2008}, {"title": "Railway track allocation: models and methods", "author": ["R. LUSBY", "J. LARSEN", "M. EHRGOTT", "D. RYAN"], "venue": "OR Spectrum,", "citeRegEx": "LUSBY et al\\.,? \\Q2011\\E", "shortCiteRegEx": "LUSBY et al\\.", "year": 2011}, {"title": "A constraint generation algorithm for the construction of periodic railway timetables", "author": ["M.A. ODIJK"], "venue": "Transportation Research Part B: Methodological", "citeRegEx": "ODIJK,? \\Q1996\\E", "shortCiteRegEx": "ODIJK", "year": 1996}, {"title": "An efficient memetic, permutation-based evolutionary algorithm for real-world train timetabling", "author": ["Y. SEMET", "M. SCHOENAUER"], "venue": "The IEEE Congress on Evolutionary Computation,", "citeRegEx": "SEMET and SCHOENAUER,? \\Q2005\\E", "shortCiteRegEx": "SEMET and SCHOENAUER", "year": 2005}], "referenceMentions": [], "year": 2014, "abstractText": "In railway operations, a timetable is established to determine the departure and arrival times for the trains or other rolling stock at the different stations or relevant points inside the rail network or a subset of this network. The elaboration of this timetable is done to respond to the commercial requirements for both passenger and freight traffic, but also it must respect a set of security and capacity constraints associated with the railway network, rolling stock and legislation. Combining these requirements and constraints, as well as the important number of trains and schedules to plan, makes the preparation of a feasible timetable a complex and time-consuming process, that normally takes several months to be completed. This article addresses the problem of generating periodic timetables, which means that the involved trains operate in a recurrent pattern. For instance, the trains belonging to the same train line, depart from some station every 15 minutes or one hour. To tackle the problem, we present a constraint-based model suitable for this kind of problem. Then, we propose a genetic algorithm, allowing a rapid generation of feasible periodic timetables. Finally, two case studies are presented, the first, describing a sub-set of the Netherlands rail network, and the second a large portion of the Nord-pas-de-Calais regional rail network, both of them are then solved using our algorithm and the results are presented and discussed.", "creator": "Writer"}}}