{"id": "1412.1042", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Dec-2014", "title": "A CSP implementation of the bigraph embedding problem", "abstract": "A crucial problem for many results and tools about bigraphs and bigraphical reactive systems is bigraph embedding. An embedding is more informative than a bigraph matching, since it keeps track of the correspondence between the various components of the redex (guest) within the agent (host). In this paper, we present an algorithm for computing embeddings based on a reduction to a constraint satisfaction problem. This algorithm, that we prove to be sound and complete, has been successfully implemented in LibBig, a library for manipulating bigraphical reactive systems. This library can be used for implementing a wide range of tools, and it can be adapted to various extensions of bigraphs.", "histories": [["v1", "Mon, 1 Dec 2014 08:52:16 GMT  (97kb,D)", "http://arxiv.org/abs/1412.1042v1", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["marino miculan", "marco peressotti"], "accepted": false, "id": "1412.1042"}, "pdf": {"name": "1412.1042.pdf", "metadata": {"source": "META", "title": "A CSP implementation of the bigraph embedding problem", "authors": ["Marino Miculan", "Marco Peressotti"], "emails": ["marino.miculan@uniud.it", "marco.peressotti@uniud.it"], "sections": [{"heading": "1 Introduction", "text": "In fact, it is so that most people who are able to survive themselves are able to survive themselves by going in search of themselves. (...) Most people who are able to survive themselves will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will have survived themselves. (...) Most of them will have survived themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves. (...) Most of them will be able to survive themselves."}, {"heading": "2 Bigraphical reactive systems", "text": "In this section, we briefly recall the term Bigraphical Reactive Systems (BRS), which refers the interested reader to [19]. The central point of the BRS is that \"the model should exist in some kind of reconfigurable space.\" Agents can interact in this space even if they are spatially separated, which means that two agents can be adjacent in two ways: they can be in the same place, or they can be linked to each other, which leads to the definition of bigraph as a data structure to represent the state of the system. A bigraph can be considered an enriched hypergraph that combines two independent graphic structures that have the same set of nodes: a hierarchy of places and a hypergraph of links.Definition 1 (Bigraph [19, Def. 2.3]). A bigraph graph graph G has a given signature (i.e., a set of types of controls called an object)."}, {"heading": "3 Bigraph embeddings", "text": "The following definitions are from [11], with minor changes to simplify the presentation of the equivalent CSP formulation (cf.), as usual, we will take advantage of the orthogonal linkage of the link and the placemark by defining links and placemarks separately and then combining them to expand the idea. (cf.) Linkage graph is a structure obtained from another (the host), since one would expect this map to contain a pair of injections: one for the nodes and one for the edges (i.e.)."}, {"heading": "4 Implementing the embedding problem in CSP", "text": "In this section, we present the main contribution of the paper, i.e. a constraint satisfaction problem that models the bigraph embedding problem. Encoding is based exclusively on integer linear constraints and proves to be solid and complete.First, we present the encoding for the linkgraph embedding problem and the place graph embedding problem, and then combine it with some additional \"adhesive constraints\" to ensure the consistency of the two partial problems.The resulting encodings contain 34 constraint families (reflecting the size of the problem definition, see Section 3), and therefore exploiting the orthogonality of link and place structures is imperative for both exposure and adequacy reasons."}, {"heading": "4.1 Link Graphs", "text": "This year, more than ever before in the history of a country in which it is a country in which it is a country in which it is a country in which it is a country in which it is a country, a country in which it is a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a country, a"}, {"heading": "4.2 Place Graphs", "text": "The problem is a direct encoding of the definition presented by GE as a matching problem, as usual, as a split diagram. Sites, nodes and roots of the two placemarks are presented as nodes and split into the guest and the host. For the convenience of exposure, graph is presented as a matching problem, as are the Boolean variables defined in (21); these are the only variables used by the problem. So far, a solution is nothing more than a relationship between the components of the guest and the host, which contain only pairs that are connected by an edge, assigned to a non-zero value. To capture precisely these assignments, which are actual placemarks, some conditions must be imposed."}, {"heading": "4.3 Bigraphs", "text": "Let G: < nG, XG > > < mG, YG > and H: < nH, XH > \u2192 < mH, YH > be two concrete bigraphs. By exploiting the legitimacy of the link and location structure, we can define the problem of satisfaction with the condition simply by assembling the above restrictions on embedding link and space diagrams and adding only two consistency constraints to relate the solutions to the two problems. These additional condition families are shown in Figure 6. The family (33) ensures that solutions for LGE [G, H] and PGE [G, H] agree on nodes, as the map must be divided by the appropriate link and space embeddings. The family (34) ensures that ports are included in the image of the inner names (i.e., their flow unit) only when their node is part of the parameter."}, {"heading": "5 Conclusions and future works", "text": "This year it is so far that it is a reactionary, but not yet a reactionary, reactionary, reaknlrteeSrlpnlrteeoiietlcehnlrrrVo ni red eeirsrrteeVnlrrrteeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrlrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr"}, {"heading": "A NP-completeness of the bigraph embedding problem", "text": "Authors have proved that the problem of partitions is a problem which cannot be resolved. (...) The result covers a case of partitions, but not partitions. (...) Partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions of partitions of partitions. (...) Partitions of partitions of partitions. (...) Partitions of partitions. (...) Partitions of partitions. (...) Partitions of partitions. (...)."}], "references": [], "referenceMentions": [], "year": 2014, "abstractText": "<lb>A crucial problem for many results and tools about bigraphs and bigraphical reactive<lb>systems is bigraph embedding. An embedding is more informative than a bigraph matching,<lb>since it keeps track of the correspondence between the various components of the redex<lb>(guest) within the agent (host). In this paper, we present an algorithm for computing<lb>embeddings based on a reduction to a constraint satisfaction problem. This algorithm, that<lb>we prove to be sound and complete, has been successfully implemented in LibBig, a library<lb>for manipulating bigraphical reactive systems. This library can be used for implementing a<lb>wide range of tools, and it can be adapted to various extensions of bigraphs.", "creator": "LaTeX with hyperref package"}}}