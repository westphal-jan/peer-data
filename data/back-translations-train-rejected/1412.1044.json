{"id": "1412.1044", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Dec-2014", "title": "Problem Theory", "abstract": "We define a problem theory from first principles. We investigate the objects of this theory: problems, resolutions, and solutions. We relate problem theory with set theory and with computing theory. We find taxonomies for resolutions and for problems. We build a hierarchy of resolvers: mechanism, adaptor, internalizer, learner, and subject. We show that the problem theory is complete. Finally, we propose a thesis: We are Turing complete subjects because we are the result of an evolution of resolvers of the survival problem.", "histories": [["v1", "Mon, 1 Dec 2014 18:13:34 GMT  (426kb,D)", "https://arxiv.org/abs/1412.1044v1", "37 pages"], ["v2", "Mon, 26 Jan 2015 10:03:24 GMT  (49kb)", "http://arxiv.org/abs/1412.1044v2", "40 pages"], ["v3", "Sun, 12 Apr 2015 10:37:07 GMT  (50kb)", "http://arxiv.org/abs/1412.1044v3", "42 pages. Using a better definition for the range of a resolver"], ["v4", "Wed, 3 Jun 2015 08:55:52 GMT  (52kb)", "http://arxiv.org/abs/1412.1044v4", "42 pages. New abstract (informative, less than 250 words)"], ["v5", "Tue, 4 Aug 2015 08:46:12 GMT  (52kb)", "http://arxiv.org/abs/1412.1044v5", "43 pages"], ["v6", "Fri, 2 Sep 2016 09:08:05 GMT  (55kb)", "http://arxiv.org/abs/1412.1044v6", "43 pages"]], "COMMENTS": "37 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ram\\'on casares"], "accepted": false, "id": "1412.1044"}, "pdf": {"name": "1412.1044.pdf", "metadata": {"source": "META", "title": "Problem Theory", "authors": ["Ram\u00f3n Casares"], "emails": ["papa@ramoncasares.com"], "sections": [{"heading": null, "text": "The solution to the problem is defined by the aptitude. The solution is through the aptitude. The solution is through the aptitude. The solution is through the aptitude. The solution is through the aptitude. The solution is through the aptitude. The solution is through the aptitude. The solution is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude is through the aptitude. The aptitude. The aptitude is through the aptitude. The aptitude. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The. The."}], "references": [{"title": "Turing, \u201cOn Computable Numbers, with an Application to the Entscheidungsproblem\u201d; in Proceedings of the London Mathematical Society", "author": ["M. Alan"], "venue": "vol. s242,", "citeRegEx": "Alan,? \\Q1937\\E", "shortCiteRegEx": "Alan", "year": 1937}, {"title": "Turing, \u201cSystems of Logic Based on Ordinals\u201d; Princeton University PhD dissertation", "author": ["M. Alan"], "venue": "Submitted 17 May,", "citeRegEx": "Alan,? \\Q1938\\E", "shortCiteRegEx": "Alan", "year": 1938}], "referenceMentions": [], "year": 2016, "abstractText": "The Turing machine, as it was presented by Turing himself, models the calculations done by a person. This means that we can compute whatever any Turing machine can compute, and therefore we are Turing complete. The question addressed here is why, Why are we Turing complete? Being Turing complete also means that somehow our brain implements the function that a universal Turing machine implements. The point is that evolution achieved Turing completeness, and then the explanation should be evolutionary, but our explanation is mathematical. The trick is to introduce a mathematical theory of problems, under the basic assumption that solving more problems provides more survival opportunities. So we build a problem theory by fusing set and computing theories. Then we construct a series of resolvers, where each resolver is defined by its computing capacity, that exhibits the following property: all problems solved by a resolver are also solved by the next resolver in the series if certain condition is satisfied. The last of the conditions is to be Turing complete. This series defines a resolvers hierarchy that could be seen as a framework for the evolution of cognition. Then the answer to our question would be: to solve most problems. By the way, the problem theory defines adaptation, perception, and learning, and it shows that there are just three ways to resolve any problem: routine, trial, and analogy. And, most importantly, this theory demonstrates how problems can be used to found mathematics and computing on biology.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}