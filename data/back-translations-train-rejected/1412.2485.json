{"id": "1412.2485", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Dec-2014", "title": "Accurate Streaming Support Vector Machines", "abstract": "A widely-used tool for binary classification is the Support Vector Machine (SVM), a supervised learning technique that finds the \"maximum margin\" linear separator between the two classes. While SVMs have been well studied in the batch (offline) setting, there is considerably less work on the streaming (online) setting, which requires only a single pass over the data using sub-linear space. Existing streaming algorithms are not yet competitive with the batch implementation. In this paper, we use the formulation of the SVM as a minimum enclosing ball (MEB) problem to provide a streaming SVM algorithm based off of the blurred ball cover originally proposed by Agarwal and Sharathkumar. Our implementation consistently outperforms existing streaming SVM approaches and provides higher accuracies than libSVM on several datasets, thus making it competitive with the standard SVM batch implementation.", "histories": [["v1", "Mon, 8 Dec 2014 08:46:07 GMT  (177kb,D)", "http://arxiv.org/abs/1412.2485v1", "2 figures, 8 pages"]], "COMMENTS": "2 figures, 8 pages", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["vikram nathan", "sharath raghvendra"], "accepted": false, "id": "1412.2485"}, "pdf": {"name": "1412.2485.pdf", "metadata": {"source": "CRF", "title": "Accurate Streaming Support Vector Machines", "authors": ["Vikram Nathan", "Sharath Raghvendra"], "emails": [], "sections": [{"heading": null, "text": "Accurate Streaming Supports Vector MachinesVikram Nathan Sharath Raghvendra"}, {"heading": "1 Abstract", "text": "A widely used binary classification tool is the Support Vector Machine (SVM), a supervised learning method that finds the \"maximum margin\" of linear dividing lines between the two classes. While SVMs have been well studied in the batch setting (offline), there is significantly less work on the streaming setting (online), which requires only a single pass over the data using the sublinear space. Existing streaming algorithms are not yet competitive with the batch implementation. In this paper, we use the formulation of SVM as a minimal enclosure problem (MEB) to offer a streaming SVM algorithm based on the blurred sphere coverage originally proposed by Agarwal and Sharathkumar. Our implementation consistently outperforms existing streaming SVM approaches and provides higher accuracy than libSVM on several sets, making it competitive with the standard SVM implementation."}, {"heading": "2 Introduction", "text": "Learning and classifying with a large amount of data increases the need for algorithms that scale well in time and space usage, with the number of data points that are trained. Streaming algorithms have properties that do just that: They run in a single pass over the data and use space polylogarithmically in the total number of points. The technique of making a single pass over the data has three crucial advantages: 1) points can be seen once and then discarded so that they do not take up any additional disk space; 2) the runtime scales are linear in the size of input, a practical need for records with a size in the millions, and 3) it allows these algorithms to function in a streaming model where data is not immediately available, individual data points can arrive slowly over time. This third feature allows data to be learned and models updated in real time, \"rather than regularly performing a batch update on all existing data."}, {"heading": "3 Background", "text": "The Core Vector Machine (CVM) was introduced by [3] as a new approach for the standard vector machine (SVM). (Instead of trying to solve a square system, the CVM uses the observation that many common cores for the standard vector machine (MEB) can be considered as a minimum. (MEB) Consider the following SVM optimization problem on m inputs (xi, yi): min w, b, \u03c1, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, b, b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p b, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p, p b, p b, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p b, p b, p b, p b, p b, p, p, p b, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p, p b, p b, p, p b, p b, p, p, p b, p b, p b, p b, p b, p, p b, p b, p b, p b, p, p b, p b, p, p b, p b, p, p b, p b, p, p b, p b, p, p b, p, p, p, p b, p, p b, p"}, {"heading": "4 Algorithm", "text": "The algorithm consists of two parts: a training method to update the blurred ball coverage and a classification method that uses the blurred ball to label the point with one of the two possible classes. < p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p > p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p = p > p > p = p > p > p > p > p > p > p > p > p > p > p > p > p > p >"}, {"heading": "5 Results", "text": "We executed the Blurred Ball SVM on several canonical datasets and compared the accuracy of each run with the batch implementation LibSVM, Subramanian's Stream SVM, and the streaming setting of the Perceptron (which runs the data only once but is otherwise identical to the Perceptron training algorithm).Table 5 shows the experimental results. All experiments were averaged over 20 runs in terms of random input stream arrangements; the Perceptron, LASVM, and Stream SVM data were taken from the experiments documented in [6].The Blurred Ball SVM on the MNIST dataset was executed with \u03b5 = 0.001 and C = \u221e, and on the IJCNN dataset it was executed with \u03b5 = 10 \u2212 6 and C = 105."}, {"heading": "6 Further Work", "text": "The ability to learn an SVM model in an online environment opens up countless possibilities for analyzing large amounts of data. There are several open questions whose answers could illuminate a streaming model with greater accuracy than the Blurred Ball SVM presented here: 1. Is there a streaming algorithm to maintain an MEB with better guarantees than the Blurred Ball cap proposed by [5]? The paper originally envisaged a limit of 1 + \u221a 32 \u2248 1.3661, which was improved by [7] to less than 1.22. Although [5] has shown that it is impossible to achieve an arbitrarily small approximation factor of 1 + \u03b5 for each \u03b5 > 0, it is possible that a better streaming MEB algorithm exists with detectable limits better than the 1.22 factor shown by [7]. 2. The structure of the points in this SVM setup is unique: All data points are centered on a sphere of the radius that is at the origin."}, {"heading": "7 Conclusion", "text": "We have introduced a streaming algorithm, or \"online\" algorithm for SVM learning, using a reduction in the minimum closure ball problem. Our training algorithm can be tuned using the \u03b5 parameter to adjust the desired approximation ratio. We have also developed several types of classifiers, some of which are non-convex, and demonstrated that our implementation exceeded the accuracy of other streaming implementations. A surprising result is that our implementation exceeds the standard libSVM dataset for canonical binary MNIST datasets. Tests on other digit recognition datasets show similar results, suggesting that this improved performance may be due to structural specifics of the data."}], "references": [{"title": "Fast kernel classifiers with online and active learning", "author": ["A. Bordes", "S. Ertekin", "J. Weston", "L. Bottou"], "venue": "Journal of Machine Learning Research Vol", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2005}, {"title": "The perceptron: a probabilistic model for information storage and organization in the brain. Neurocomputing: Foundations of Research", "author": ["F. Rosenblatt"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1988}, {"title": "Core vector machines: Fast SVM training on very large data sets", "author": ["I.W. Tsang", "J.T. Kwok", "P-M Cheung"], "venue": "Journal of Machine Learning Research", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "Optimal core-sets for balls", "author": ["M. B\u01cedoiu", "K.L. Clarkson"], "venue": "In Proceedings of DIMACS Workshop on Computational Geometry", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "Streaming Algorithms for Extent Problems in High Dimensions", "author": ["P.K. Agarwal", "R. Sharathkumar"], "venue": "Proceedings of the 2014 Symposium of Discrete Algorithms", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "Streamed Learning: One-Pass SVMs", "author": ["P. Rai", "H. Daum\u00e9 III", "S. Venkatasubramanian"], "venue": "International Joint Conferences on Artificial Intelligence", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Streaming and Dynamic Algorithms for Minimum Enclosing Balls in High Dimensions", "author": ["T.M. Chan", "V. Pathak"], "venue": "Computational Geometry Vol 47,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Statistical Learning Theory", "author": ["V. Vapnik"], "venue": "Wiley", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1998}], "referenceMentions": [{"referenceID": 7, "context": "hyperplane) between positive and negative instances and as such, they have a very small hypothesis complexity but provable generalization bounds [8].", "startOffset": 145, "endOffset": 148}, {"referenceID": 0, "context": "There have been several implementations of a streaming SVM classifier ([1], [6], [2]), but so the most effective version has been based off the reduction from SVM to the Minimum Enclosing Ball (MEB) problem introduced by [3].", "startOffset": 71, "endOffset": 74}, {"referenceID": 5, "context": "There have been several implementations of a streaming SVM classifier ([1], [6], [2]), but so the most effective version has been based off the reduction from SVM to the Minimum Enclosing Ball (MEB) problem introduced by [3].", "startOffset": 76, "endOffset": 79}, {"referenceID": 1, "context": "There have been several implementations of a streaming SVM classifier ([1], [6], [2]), but so the most effective version has been based off the reduction from SVM to the Minimum Enclosing Ball (MEB) problem introduced by [3].", "startOffset": 81, "endOffset": 84}, {"referenceID": 2, "context": "There have been several implementations of a streaming SVM classifier ([1], [6], [2]), but so the most effective version has been based off the reduction from SVM to the Minimum Enclosing Ball (MEB) problem introduced by [3].", "startOffset": 221, "endOffset": 224}, {"referenceID": 5, "context": "The connection between these two problems has made it possible to harness the work done on streaming MEBs and apply them to SVMs, as was done in [6].", "startOffset": 145, "endOffset": 148}, {"referenceID": 4, "context": "In this paper, we utilize the Blurred Ball cover approximation to the MEB problem proposed in [5] to obtain a streaming SVM that is both fast and space efficient.", "startOffset": 94, "endOffset": 97}, {"referenceID": 2, "context": "The Core Vector Machine (CVM) was introduced by [3] as an new take on the standard Support Vector Machine (SVM).", "startOffset": 48, "endOffset": 51}, {"referenceID": 2, "context": "[3] showed that if the kernel K(x,y) = \u03c6(x) \u00b7\u03c6(y) satisfies K(x,x) = \u03ba , a constant, then w\u2217 can be found by finding the minimum enclosing ball of the points {\u03c6(xi,yi)}, where \u03c6 i(xi,yi) = \uf8ee\uf8f0 yi\u03c6(xi) yi 1 \u221a C ei \uf8f9\uf8fb", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "The implementation of the CVM in [3] follows the MEB approximation algorithm described in [4]: given \u03b5 > 0, add to the core set C the point z that is the farthest from the current MEB center c.", "startOffset": 33, "endOffset": 36}, {"referenceID": 3, "context": "The implementation of the CVM in [3] follows the MEB approximation algorithm described in [4]: given \u03b5 > 0, add to the core set C the point z that is the farthest from the current MEB center c.", "startOffset": 90, "endOffset": 93}, {"referenceID": 4, "context": "In this paper, we present the Blurred Ball SVM, a streaming algorithm based on the blurred ball cover proposed in [5].", "startOffset": 114, "endOffset": 117}, {"referenceID": 5, "context": "The Perceptron, LASVM and Stream SVM data were taken from the experiments documented in [6].", "startOffset": 88, "endOffset": 91}, {"referenceID": 4, "context": "Is there a streaming algorithm for maintaining an MEB with better guarantees than the Blurred Ball cover proposed by [5]? The paper originally provided a bound of 1+ \u221a 3 2 \u2248 1.", "startOffset": 117, "endOffset": 120}, {"referenceID": 6, "context": "3661, which was improved by [7] to less than 1.", "startOffset": 28, "endOffset": 31}, {"referenceID": 4, "context": "Although [5] showed that it is impossible to achieve an arbitrarily small approximation factor, with 1+ \u03b5 for any \u03b5 > 0, it\u2019s possible that a better streaming MEB algorithm exists with provable bounds better than the 1.", "startOffset": 9, "endOffset": 12}, {"referenceID": 6, "context": "22 factor demonstrated by [7].", "startOffset": 26, "endOffset": 29}], "year": 2014, "abstractText": "A widely-used tool for binary classification is the Support Vector Machine (SVM), a supervised learning technique that finds the \u201cmaximum margin\u201d linear separator between the two classes. While SVMs have been well studied in the batch (offline) setting, there is considerably less work on the streaming (online) setting, which requires only a single pass over the data using sub-linear space. Existing streaming algorithms are not yet competitive with the batch implementation. In this paper, we use the formulation of the SVM as a minimum enclosing ball (MEB) problem to provide a streaming SVM algorithm based off of the blurred ball cover originally proposed by Agarwal and Sharathkumar. Our implementation consistently outperforms existing streaming SVM approaches and provides higher accuracies than libSVM on several datasets, thus making it competitive with the standard SVM batch implementation.", "creator": "LaTeX with hyperref package"}}}