{"id": "1412.3079", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Dec-2014", "title": "Computoser - rule-based, probability-driven algorithmic music composition", "abstract": "This paper presents the Computoser hybrid probability/rule based algorithm for music composition (", "histories": [["v1", "Tue, 9 Dec 2014 20:06:10 GMT  (207kb)", "http://arxiv.org/abs/1412.3079v1", "5 pages"]], "COMMENTS": "5 pages", "reviews": [], "SUBJECTS": "cs.AI cs.SD", "authors": ["bozhidar bozhanov"], "accepted": false, "id": "1412.3079"}, "pdf": {"name": "1412.3079.pdf", "metadata": {"source": "CRF", "title": "Computoser - rule-based, probability-driven algorithmic music composition", "authors": ["Bozhidar Bozhanov"], "emails": ["bozhidar.bozhanov@gmail.com"], "sections": [{"heading": null, "text": "The probability / rules-based algorithm for music composition (http: / / computoser.com) and provides a reference implementation. It addresses the problems of inconvenience and lack of variation that many existing approaches present by combining the two methods (the parameters of the rules are based on data from preliminary analyses).A sample of more than 500 pieces of music was analyzed to derive probabilities for musical characteristics and events (e.g. scale, tempo, intervals).The algorithm was designed to produce pieces of music using the derived probabilities in combination with a large set of compositional rules determined and structured after studying established compositional practices. Pieces produced were published on the Computoser website, where the evaluation was conducted by listeners. The feedback was positive (58.4% approval) and confirmed the merits of the approach undertaken. The paper compares this hybrid approach to the results of the other approaches presented by the music and an algorithmic approach from it."}, {"heading": "1 Introduction", "text": "Algorithmic composition has long been a field of research and is applicable in many scenarios, such as elevator music, live accompaniment, and support for human composers. Computers are designed to address five weaknesses of existing algorithms: convenience; similarity between pieces that require memorization of pieces that require supervision or manual input; lack of a scalable end-user presentation (e.g. a web page) Many algorithms focus on just one of these aspects, leading to less success in the others. Possible reasons for this are discussed in Chapter 7."}, {"heading": "2 About the algorithm", "text": "Computoser is a hybrid, rules-based (knowledge-based) probability-driven (stochastic, according to the categories in [1]) algorithm for music composition. It composes according to a set of rules. As it progresses with composition, decisions are made between several permitted alternatives based on predefined probabilities derived both from existing music practice and from the analysis of sample data as described below. The algorithm cannot be classified as a Markov chain or a Markov decision process, as it does not fulfill the Markov property due to subsequent decisions that depend on the outcome of previous decisions."}, {"heading": "3 Preparation", "text": "In addition, 50 freely available MIDI files of popular classical and modern composers were analyzed, and all entries contained pitch and length of each note. Results were rounded and slightly distorted, and the values shown below are the actual values used in the code, not the exact original results."}, {"heading": "3.1 Music interval and note length probabilities", "text": "Table 1 shows the probability for each type of interval. Steps (one note up or down) are most likely, followed by unison and skip. Octaves are rare, and intervals larger than one octave are even rarer, and are therefore excluded from the current version of the algorithm. Distribution between the skip-type intervals is shown in Table 2.Type% Unison 25octave 2Step 48Skip 25Table 1 Interval probabilityThe probability of each length (in common musical terms) is shown in Table 3."}, {"heading": "3.2 Rules", "text": "The other core aspect is the set of rules. Numerous rules have been extracted from several sources on music theory and composition [2] [3] [5]. Further rules have also been proposed and existing rules have been developed by two composers - Alexeys Pegushev and Hristo Konstantinov. The rules can be divided into the following groups: structure - musical structure is the core of each piece. In this algorithm, the smallest structural component is the motif; several motifs form a phrase. The length of each motif varies significantly, within the limits of accepted practice [2]. Rhythm - note lengths cannot simply be selected on the basis of the percentages in Table 3 - they must correspond to a rhythm scheme [16]. The algorithm chooses between several meters and the length of each subsequent note fits the current beat, so that there are no off-beat notes."}, {"heading": "4 Structure", "text": "The structure of the components of the algorithm is simple - there is a list of score manipulators, each of whom fills in a portion of the information for the piece. Manipulators are called in a given order, since subsequent manipulators depend on the previous ones: A score configurator determines which parts the piece will have: pieces always have a main part, and all other parts are optional and randomly selected: accompaniment, arpeggio, bass, pads, drone, drums, simple beats, effects A scale configurator determines the scale / scales into which the piece should be included. The most likely are the western major and minor scales, scales such as lyric, dorian, etc. Less likely are scales. A meter configurator determines the meter of the piece. For simplicity, a piece can have only one onemeter - e.g. 3 / 4, 5 / 8, 6 / 8, etc. A title generator is an extra-musical element that creates a track for the piece."}, {"heading": "5 Algorithm overview", "text": "The reference implementation can be found at: https: / / github.com / glamour dring / computoserThe algorithm is a sequential one in which multiple musical elements are selected as they progress, and the selection is determined by a local context that ensures continuity and coherence of the piece. The main part is at the core of the pieces composed, containing the melody and most of the rules are applied there. All the other parts follow what has already been composed in the main part. The composition process ends after a pre-determined number of bars. Again, the number of bars depends on the bar and on a random number that is chosen to ensure a variable length between 1 and 5 minutes."}, {"heading": "5.1 Main part component", "text": "The implementation of the main part generator has three main aspects: pitch - which note should be played as the next length - how long should the next note be to match the predefined measure and to maintain a flatter rhythm Variations - perform various variations of previously played motifs. \"Local context\" is used to record some of the intermediate decisions, and is later used to determine the subsequent structure / pitch / length, which violates the Markov property, as already mentioned."}, {"heading": "5.1.1 Pitch", "text": "If the interval to be used is not a perfect fifth or perfect fifth, the interval type (major or minor) is chosen that is valid within the current scale. For example, if a large third would mean a note that does not fall below the current scale, a small third is selected. Tables 1 and 2 are used when no additional constraints are required. Such constraints exist and are: There should be no more than two consecutive unstable tones Long jumps (more than 7 steps) require a step in the opposite direction A predefined sequence can be used - notes from the circle of fifths or parts of an extended chord. In rare cases (5%) all rules for consonances are disregarded and a dissonant interval (extended 4th, minor / 7th) is used. This is done (as shown in 3.2) to make the melody melody melody more interesting. However, too much dissonance would make it unpleasant, so that the fine placement would be necessary."}, {"heading": "5.1.2 Length", "text": "The bar size is the primary constraint - all bars should have the same length as defined by the bar - e.g. 4 / 4 means that the equivalent of 4 quarter notes should be used. The last note in a bar is always shortened in length to fit the bar size.The second constraint is the rhythm. Each bar is either single or composed. Single bars (2 / 4, 3 / 4) have only one downbeat (i.e. the moment the clock would tap the foot).Composite bars have more than one downbeat. For example, a 4 / 4 bar has two downbeats - one on the first note and one on the first note immediately after the equivalence of the first two quarter notes. The algorithm ensures that a new note is played on each downbeat. A rare exception is the so-called syncopation - a note that has already been played continues to play, e.g. when the downbeat occurs."}, {"heading": "5.1.3 Variation", "text": "Each time a variation of a particular motif or sequence of notes is required (in a finely tuned percentage of cases (40%), after at least 2 bars), exactly one of the following standard music variations is performed: Transposition - all notes go up or down within the same scale. Inversion - the melody is \"flipped,\" adjusting the intervals so that they fall within the same scale. Varying the ending - only the last notes are varied (recursively, using the same method) varying the basic structure - only notes on downbeats remain, the rest is changed Retrograding - the motif is played backwards key change - the same melody is played in a different key note-to-rest - some of the notes (randomly, using a manually tuned percentage) are replaced by pauses (silence) - multiply pitches by the same number. They should be kept in scaling.Variations are selected several times (for the same motif)."}, {"heading": "5.1.4 The local context", "text": "Decisions stored in the local context include: the current direction and contour of the melody, the phrases previously created, whether to allow more dissonances and syncopations than usual, whether to have note ornaments, whether to follow a special sequence of notes in the next selection (e.g. a fifth circle), what the current dynamic level is, how long individual motifs should be."}, {"heading": "5.2 Accompaniment part component", "text": "The accompanying part consists of chords. Chords follow the main role, which is already composed separately. As with notes, several unstable chords cannot follow each other, and stable chords are preferred to contain a note that harmonizes with the current note in the main role. In the voice configurator, the type of accompaniment is randomly selected. Sometimes, instead of a traditional accompaniment, the chords can be arpeggios - played note by note until the bar is filled (some notes from the chord can be played more than once). 5,3 Other voice components are sometimes added (each voice has its own probability, during which the probabilities are manually fine-tuned) to vary the results: pads - long-sounding background notes Simple main beats - a simple drum beat on each first note or a fading percussion - effects, where the probabilities are manually adjusted, the percussion sounds are stable in all bars."}, {"heading": "6 Evaluation", "text": "There are four stages of evaluation: 1. Post-composition - the algorithm checks that each newly generated piece meets the basic musical requirements: if it is rhythmic (does it have syncopated notes), it is harmonic (does it have notes outside the defined scale).Deviations are reported in the form: piece X has unbalanced bars; piece X has 9 unequal notes."}, {"heading": "2. \u201cSanity check\u201d performed by a limited audience.", "text": "3. Rating by human listeners on the website where new pieces are regularly generated.4. Based on the human rating, an analysis is carried out on the database to investigate which pieces are least liked and what they have in common. So far, the main reasons for rejection have been identified as: certain instruments (probably due to their artificial sound) and rhythmic discrepancies. There have been 6,000 user reviews, of which 3500 are positive and 2,500 negative. The total number of pieces produced so far is 8,000. They have been played a total of 170,000 times by 28,000 unique users. The list of \"top tracks\" indicates that at least one sample of pieces is considered to be of high musical quality (http: / / computoser.com / toptracks).The perceived quality of a piece depends on the quality of the MIDI files, which in turn depends on the soundbank used. As a free soundbank was used, the lower MIDI quality influenced the listeners who gave negative feed.A survey with 44 participants (http: 41 / 244r)."}, {"heading": "7 Comparison to other approaches", "text": "In fact, it is the case that most people who are able are able to determine for themselves what they want and what they do not want."}, {"heading": "8 Future work", "text": "The implementation of the algorithm is simple and limited, and can be expanded and improved by adding more rules for non-main parts, adding more types of voices, and refining the main part rules. Sound quality can be improved by carefully selecting a soundbank. As part of the evaluation, a more thorough analysis can be performed (Chapter 6, point 4) to search for musical characteristics that are more sympathetic than others. The algorithm can then be used as a tool for composers to give them specific motifs as well as a continuous stream of background music."}, {"heading": "9 Conclusion", "text": "After studying and comparing different approaches, it can be said that a hybrid probability / rules-based approach, where rules are loosely defined, is at least as good as the state of the art. And while the evolution of music itself does not seem justified, rules can evolve with human feedback that serves as a fitness function. In addition to this approach, the data and rules collected during the preparation phase can be a valuable resource for future work. Computoser presents a scalable end-user presentation of a potentially endless amount of music produced without human input that is pleasant to listen to, distinct and memorable. These improvements, measured by a survey, mean the importance of the approach chosen."}, {"heading": "10 References", "text": "http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http: / / www.http / / www.http: / / www.http: / / / www.http: / / / www.http: / / / www.http: / / www.http / / www.http: / / www.www.http / / www.http: / / www.http / / www.http / / www.http: / / www.http / / www.http / / www.http: / www.www.http / / www.http / / www.http: / www.www.http / / www.http: / www.http / www.http / www.http / www.http: / www.www.http / www.http / www.http / www.http / www.http: / www.www.www.http / / www.http / / www.http / www.www.http / / www.http / www.http / / www.http / / www.http / / www.http / / www.http / / www.http / / www.http / / / www.http / / www.http / / www.http / / www.http / / / www.http / / / www.http / / www.http / / / / www.http / / www.http / / / www.http / / www.http / / / www.http / / / www.http / / www.http / / / www.http / / / www.http / www.http / www.http / / www.http / / www.http / www.http / www.http / www.http / / / www.http / www.http / www.http / / www.http / www.http / / www.http / www.http / / www.http / www.http / / www.http / www.http / / www.http / www.http / / www.http / www.http / www.http / / www.http / www.http / / www.www.http / www.http / www.http / www.http / / www.www.http / www.http / www.http / www.http / www.http / www.http / www.http / / / www.http / www.http / www.http / www.http / www.www.http / / www.www.www.www.www.http / / www.http / www.http / / www.http / / www.http / www.http / www.http / www.http / / / www.www.http / www."}], "references": [{"title": "AI Methods for Algorithmic Composition: A Survey, a Critical View and Future Prospects, presented at 1999 AISB symposium of musical creativity", "author": ["G Papadopoulos", "G Wiggins"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1999}, {"title": "Elementary Music Theory (in Bulgarian), 1968, IV edition, Science and Art, Sofia", "author": ["VA Vahromeev"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1968}, {"title": "Aesthetical Analysis of Musical Pieces", "author": ["A Koralov"], "venue": "(in Bulgarian),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1979}, {"title": "National Symphony Orchestra", "author": ["M Hoffman"], "venue": "NPR http://www.kennedycenter.org/nso/classicalmusiccompanion/syncopation.html", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1997}, {"title": "Evolution of music by public choice, http://www.pnas.org/content/109/30/12081.abstract DarwinTunes http://darwintunes.org", "author": ["B MacCallum"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2081}, {"title": "Performing algorithmic computer music: real-time score interpretation of David Birchfield\u2019s community art: resonant energy http://www.tml.tkk.fi/Studies/Tik-111.080/2000/papers/hanna/alco.pdf", "author": ["R Esler"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2000}, {"title": "Fractal Music, http://www.tursiops.cc/fm", "author": ["C Hazard", "C Kimport"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1999}, {"title": "AI Methods in Algorithmic Composition: A Comprehensive Survey", "author": ["J.D. Fern\u00e1ndez", "F. Vico"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Computoser is a hybrid, rule-based (knowledgebased), probability-driven (stochastic, per the categories in [1]) algorithm for music composition.", "startOffset": 107, "endOffset": 110}, {"referenceID": 1, "context": "Numerous rules were extracted from multiple sources about music theory and composition [2][3][4][5].", "startOffset": 87, "endOffset": 90}, {"referenceID": 2, "context": "Numerous rules were extracted from multiple sources about music theory and composition [2][3][4][5].", "startOffset": 93, "endOffset": 96}, {"referenceID": 1, "context": "The length of each motif varies significantly, within the limits of accepted practice [2].", "startOffset": 86, "endOffset": 89}, {"referenceID": 1, "context": "\uf0b7 Variations \u2013 simple repetition tends to be \u201cboring\u201d [2], therefore a set of variation techniques need to be employed in a piece.", "startOffset": 54, "endOffset": 57}, {"referenceID": 3, "context": "\uf0b7 Dissonance and syncopation \u2013 although music strives to be consonant and rhythmic, unexpected dissonances and syncopation can make it more interesting [7], therefore this element is also encoded in the algorithm", "startOffset": 152, "endOffset": 155}, {"referenceID": 4, "context": "People had to select pieces of which 2 algorithms they liked the most, and the result was: DarwinTunes[11] (42% liked this algorithm), Computoser (42%), SoundHelix [9] (34%) Iamus(18%), Melomics (18%), Wolfram Tones (11%) and Fractal Music [14] (7%)", "startOffset": 102, "endOffset": 106}, {"referenceID": 6, "context": "People had to select pieces of which 2 algorithms they liked the most, and the result was: DarwinTunes[11] (42% liked this algorithm), Computoser (42%), SoundHelix [9] (34%) Iamus(18%), Melomics (18%), Wolfram Tones (11%) and Fractal Music [14] (7%)", "startOffset": 240, "endOffset": 244}, {"referenceID": 0, "context": "Below is a short comparison with other approaches to algorithmic music composition, as reviewed in [1], [17].", "startOffset": 99, "endOffset": 102}, {"referenceID": 7, "context": "Below is a short comparison with other approaches to algorithmic music composition, as reviewed in [1], [17].", "startOffset": 104, "endOffset": 108}, {"referenceID": 6, "context": "That\u2019s why algorithmic music using solely mathematical approaches produces unpleasant music [14] (as per the survey).", "startOffset": 92, "endOffset": 96}, {"referenceID": 4, "context": "Some algorithms, like DarwinTunes, use human evaluation, but that slows down after several thousand generations and doesn\u2019t get significantly better [11].", "startOffset": 149, "endOffset": 153}, {"referenceID": 5, "context": "Others use composition rules (as the one presented in this paper) to determine which child is fit [10][12].", "startOffset": 102, "endOffset": 106}], "year": 2014, "abstractText": "This paper presents the Computoser hybrid probability/rule based algorithm for music composition (http://computoser.com) and provides a reference implementation. It addresses the issues of unpleasantness and lack of variation exhibited by many existing approaches by combining the two methods (basing the parameters of the rules on data obtained from preliminary analysis). \u0410 sample of 500+ musical pieces was analyzed to derive probabilities for musical characteristics and events (e.g. scale, tempo, intervals). The algorithm was constructed to produce musical pieces using the derived probabilities combined with a large set of composition rules, which were obtained and structured after studying established composition practices. Generated pieces were published on the Computoser website where evaluation was performed by listeners. The feedback was positive (58.4% approval), asserting the merits of the undertaken approach. The paper compares this hybrid approach to other approaches to algorithmic composition and presents a survey of the pleasantness of the resulting music.", "creator": "Microsoft\u00ae Word 2010"}}}