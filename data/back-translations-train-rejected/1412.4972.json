{"id": "1412.4972", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Dec-2014", "title": "Max-Product Belief Propagation for Linear Programming: Applications to Combinatorial Optimization", "abstract": "Max-product belief propagation (BP) is a popular message-passing algorithm for computing a maximum a-posteriori (MAP) assignment in a joint distribution represented by a graphical model (GM). It was recently shown that BP can solve certain classes of Linear Programming (LP) formulations to combinatorial optimization problems including maximum weight matching and shortest path, i.e., BP can be a distributed solver for certain LPs. However, those LPs and corresponding BP analysis are very sensitive to underlying problem setups, and it has been not clear what extent these results can be generalized to. In this paper, we obtain a generic criteria such that BP converges to the correct solution of the desired LP. Our theoretical result not only rediscovers prior known ones for maximum weight matching and shortest path as special cases, but also can be applied to new problems including traveling salesman, longest path and vertex cover, i.e., BP is a distributed (and parallel) solver to the combinatorial optimization problems. We believe that our results provide new insights on BP performances and new directions on distributed solvers for certain classes of large-scale LPs.", "histories": [["v1", "Tue, 16 Dec 2014 12:18:34 GMT  (21kb)", "http://arxiv.org/abs/1412.4972v1", null], ["v2", "Fri, 6 Mar 2015 01:43:00 GMT  (31kb)", "http://arxiv.org/abs/1412.4972v2", null], ["v3", "Sun, 4 Oct 2015 06:03:41 GMT  (31kb)", "http://arxiv.org/abs/1412.4972v3", null], ["v4", "Thu, 8 Dec 2016 10:37:48 GMT  (190kb,D)", "http://arxiv.org/abs/1412.4972v4", null], ["v5", "Wed, 28 Jun 2017 17:15:25 GMT  (189kb,D)", "http://arxiv.org/abs/1412.4972v5", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["sejun park", "jinwoo shin"], "accepted": false, "id": "1412.4972"}, "pdf": {"name": "1412.4972.pdf", "metadata": {"source": "CRF", "title": "Max-Product Belief Propagation for Linear Programming: Convergence and Correctness", "authors": ["Sejun Park", "Jinwoo Shin"], "emails": ["sejun.park@kaist.ac.kr,", "jinwoos@kaist.ac.kr"], "sections": [{"heading": null, "text": "ar Xiv: 141 2.49 72v1 [cs.AI] 16 Dec 201 4"}, {"heading": "1 Introduction", "text": "In this context, it should be noted that this project is a project which is, first and foremost, a project which focuses on the needs of the people."}, {"heading": "1.1 Organization", "text": "In Section 2 we present the graphical model, the propagation of faith and the general integer programming and its linear programming relaxation. In Section 3 we present the main result of the essay. Finally, the applications of the main result take place in Section 4."}, {"heading": "2 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Graphical Model and Belief Propagation", "text": "A common distribution of n (binary) random variables Z = [Zi] \u04320, 1} n is called a Graphic Model (GM) if factorized as follows: for z = [zi], for Pr [Z = z], for \u03b1 (\u03b1), for \u03b1 (\u03b1), (1), where (BP) non-negative functions are contained, the so-called factors; F is a collection of subsetsF = {\u03b11, \u03b12,..., \u03b1k}, for 2 {1,2,..., n} (each alpha message is a subset of {1, 2,.., n}); z\u03b1 is the projection of z on dimensions contained in alpha. For example, if z = [0, 0] and alpha = {1, 3}, then we are z\u03b1 = [0, 0], then z\u03b1 =."}, {"heading": "2.2 Integer Programming and Linear Programming Relaxation", "text": "Integer programming (IP) is an optimization problem where all variables are integral and their objective function and limitations are linear. We can formulate general IP as follows: Minimize w \u00b7 xsubject to Ax \u2264 bx = [xi] \u0445Z n A \u0440Rm \u00b7 n, b \u0440Rm. (5) However, the solution to IP is NP-hard. Therefore, we usually solve a relaxed problem called linear programming (LP) instead of IP. In LP, we relax the integral limitation of variables such as the following. Minimize w \u00b7 xsubject to Ax \u2264 bx = [xi] \u0441R n A-Rm \u00b7 n, b-Rm. (6)"}, {"heading": "3 Conditions on Convergence and Correctness of Belief Propagation", "text": "Let us consider the following GM (Graphic Model): for x = [xi], [xi], [0, 1], [wi], [Rn], Pr [X = x], [wixi], [xi], [x\u03b1], (7), where the factor function, [x\u03b1], (x\u03b1) = {1, if A\u03b1x\u03b1, [x\u03b1], [x\u03b1], otherwise, is defined for some matrices, A\u03b1, C\u03b1 and vectors b\u03b1, d\u03b1. Let us now consider the IP (Integer Programming) corresponding to the above GM: minimize w \u00b7 xsubject to zess (x\u03b1), (x\u03b1) = 1, [xi], Fx [xi], 1} n. (8) It is easy to determine that the MAP mappings for GM (7) correspond to the solutions of IP (8). To determine the performance of BP on GM (7), we must consider x, the solution of IP (8)."}, {"heading": "3.1 Proof of Theorem 1", "text": "Before we begin the proof, let us introduce a useful LemmaLemma 2."}, {"heading": "4 Applications of Theorem 1", "text": "In this section we present applications that lead to a correct solution if the conditions of Theorem 1 are met. First, we show the problem of the shortest way [11]. Second, we show suitable related applications, including the results of [5, 12, 1, 13]. The last parts are the problem of the traveling salesman and the problem of the longest way. Our applications cover previous work and other problems, such as the problem of the traveling salesman and the solution of the problem of the maximum weight corresponding to linear programming."}, {"heading": "4.1 Shortest Path", "text": "The shortest path problem on a graphene G = (V, E) and weight w = [we], otherwise: Pr [X], pr [X], pr [X], pr [X], pr [X], pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = 0, pr = pr = 0, pr =, pr = pr =, pr =, pr =, pr =, pr = pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr =, pr"}, {"heading": "4.2 Maximum Weight Perfect Matching", "text": "Considering the graphics G = (V, E) and the weight w = [we: e-E] (we: e-r] (we: e-r] (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: e-r) (we: we-r) (we) (we) (we) (we (we) (we) (we) (we) (we (we) (we) (we) (we) (we) (we) (we (we) (we) (we) (we) (we) (we (we) (we) (we) (we) (we (we) (we) (we) (we) (we) (we) (we (we) (we) (we) (we) (we (we) (we) (we (we) (we) (we) (we (we) (we) (we (we) (we (we) (we) (we (we) (we) (we) (we (we) (we) (we (we) (we (we) (we) (we) (we) (we (we (we) (we) (we) (we (we (we) (we) (we) (we (we) (we (we) (we (we) (we) (we) (we (we (we) (we) (we) (we (we (we) (we) (we) (we) (we (we) (we) (we (we) (we) (we (we (we) (we) (we) (we (we (we) (we) (we) (we (we) ("}, {"heading": "4.3 Maximum Weight Perfect Matching with Odd Cycles", "text": "In the previous section, we prove that BP correctly approaches the solution of LP (13) if LP (13) has a unique solution. It is known that the addition of odd cycles makes LP (13) narrow, i.e. LP has a holistic solution. The limitation is as follows: It is a series of odd cycles in G. Lets that construct the new graph G (V) by using BP and adding odd cycles [13]. We refer to the following graphic transformation of [13]. Let C construct a series of odd cycles in G. Lets construct the new graph G (V), E (V), w \u00b2, whereas V \u00b2 C (C), E \u00b2 C (u, vC)."}, {"heading": "4.4 Traveling Salesman", "text": "Considering a directed graph G = (V, E) and weight w = (we: e-E) = ei-ei-ei-ei = i-ei-ei-ei-ei = i-ei-ei-ei-i = i-i-i-i-i-i-i-i = i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i"}, {"heading": "4.5 Longest Path", "text": "Considering a directed graph G = (V, E) and weight w = [we: e-E] = ei-ei-ei-ei-ei-ei-ei-ei-i = ei-ei-ei-i-i = ei-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i-i"}, {"heading": "4.6 Vertex Cover", "text": "Considering a diagram G = (V, E) and positive integer weights b = [bv: v = V], the vertex occlusion problem must be formulated in such a way that each edge is connected to at least one vertex in the set. (22) It can be stated that xe \u2264 e-ollv bv. To make an equivalent LP with binary variables, duplicate each edge e to e1,.., en, where n = maxv bv. Let us introduce an auxiliary diagram G \u00b2 = (V, E \u00b2) in which E \u00b2 dollar variable is n = maxv bv."}, {"heading": "5 Conclusion", "text": "The BP algorithm has been the most popular algorithm to date for solving inference problems arising from graphical models, with its distributed implementation, associated ease of programming, and strong parallelization potential being the main reasons for its growing popularity. In this paper, we aim to design BP algorithms for solving linear programming, and provide sufficient prerequisites for this purpose. We believe that our results provide new interesting directions for the development of efficient distributed (and parallel) solvers for large-scale linear programming."}, {"heading": "A Proof of Lemma 2", "text": "In this case, we can have a claim 9 for any Polytope {x \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2 \u00b2."}, {"heading": "B Proof of Corollary 3", "text": "The proof for the conclusion 3 can be obtained by using theorem 1. From GM (12), each variable is connected to two factors (C2 of theorem 1). Now, let us check if there is C3 of theorem 1. Suppose there is v and x\u03b4 (v) with E (x\u03b4 (v) = 1. Consider the case if there is E (v) with E (1 6 = x). If there is E (v) with E (0 6 = x), we choose such an E (v). If not, we choose E (v) with E (1 6 = x). On the other hand, let us consider if there is E (v) with E (0 6 = x). If E (v) with E (v) with E (1 6 = x), we choose such an E (x)."}, {"heading": "C Proof of Corollary 4", "text": "The proof for the conclusion 4 can be obtained by using theorem 1. From GM (15), each variable is connected to two factors (C2 of theorem 1). Now let us check if there is C3 of theorem 1. Suppose there is v and x\u03b4 (v) with the result v (x\u03b4 (v) = 1. Consider the case if there is ei \u00b2 (v) with the result xei = 1 6 = x \u00b2 ei. Then there is e \u00b2 j (v) with the result xe \u00b2 j = 1 6 = x \u00b2 e \u00b2 j. Let us choose such an e \u00b2 j. Then let us consider the case if there is ei \u00b2 (v) with the result xei = 0 6 = x \u00b2 ei. Then there is e \u00b2 j (v) with the result xe \u00b2 j = 1 6 = x \u00b2 e \u00b2 j. Let us choose such an e \u00b2 j. Then let us choose the solution v (x \u00b2) = 1, where x \u00b2 e \u00b2 \u00b2 \"k\" is the result x \u00b2 e \u00b2. \""}, {"heading": "D Proof of Corollary 5", "text": "From GM (17), each variable is associated with two factors (C2 of theorem 1). Now, let us check C3 of theorem 1. For v \u00b2 V, we can apply the same argument as for the case of maximum weight fit. Suppose there is vC and y\u03b4 (vC) with \u0432 C (y\u03b4 (vC) = 1. Consider the case if there is (u1 \u00b2, vC) an uneven path (vC) with y (u1, vC) = 1 6 = y (u1, vC). As a practicable solution, y\u043c (vC) forms an uneven path [13], we check edges along the path with u1. If there is u2 \u00b2 V (C) on the path with y (u2, vC) = 1 6 = y (u2, vC), we choose such a path (vC) with vC (v2, vC) an uneven path with y (C), if we do not exist (C)."}, {"heading": "E Proof of Corollary 6", "text": "The proof for sequence 6 can be obtained by using theorem 1. From GM (19), each variable is connected to two factors (C2 of theorem 1). Now, let us check if there is C3 of theorem 1. Suppose there is v and x\u03b4 (v) with the result v (x\u03b4 (v)) = 1. Consider the case if there is an argument: i (v) with the result xei = 1 6 = x. If there is an argument: i (v) with the result xei (v) with the result i = 0 6 = x \u00b2 e, we choose such an argument. If not, we choose an argument: i + 1 with the result i + 1 = 1 6 = x \u00b2 e. On the other hand, let us consider if there is an argument: i (v) with the result xei (v) = 0 = x \u00b2 e (v), if there is an argument: i (v)."}, {"heading": "F Proof of Corollary 8", "text": "The proof of the conclusion can be obtained by using Theorem 1. From GM (24), each variable is connected to two factors (C2 of Theorem 1). Now let us check if there is C3 of Theorem 1. Suppose there is v and x\u03b4 (v) with the result v (x\u03b4 (v) = 1. Consider the case if there is ei \u00b2 (v) with the result xei = 1 6 = x \u00b2 ei. If there is e \u00b2 j (v) with the result xe \u00b2 j = 0 6 = x \u00b2 e \u00b2 j, we choose such an e \u00b2 j. If not, we choose e \u00b2 j = ei On the other hand, if there is ei \u00b2 (v) with the result xei = 0 6 = x \u00b2 ei. If there is e \u00b2 j (v) with the result xe \u00b2 j = 1 6 = x \u00b2 e \u00b2, we choose such an e \u00b2 j = ei \u00b2. If not, then we choose e \u00b2 j = ei \u00b2 e (x \u00b2) with the result e \u00b2 (v)."}], "references": [{"title": "Belief-propagation for weighted b-matchings on arbitrary graphs and its relation to linear programs with integer solutions", "author": ["Mohsen Bayati", "Christian Borgs", "Jennifer Chayes", "Riccardo Zecchina"], "venue": "arXiv preprint arXiv:0709.1190,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Complexity of inference in graphical models", "author": ["Venkat Chandrasekaran", "Nathan Srebro", "Prahladh Harsha"], "venue": "arXiv preprint arXiv:1206.3240,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Linear programming and extensions", "author": ["George B Dantzig"], "venue": "Princeton university press,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1998}, {"title": "Parallel splash belief propagation", "author": ["Joseph Gonzalez", "Yucheng Low", "Carlos Guestrin"], "venue": "Technical report, DTIC Document,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Loopy belief propagation for bipartite maximum weight bmatching", "author": ["Bert C Huang", "Tony Jebara"], "venue": "In International Conference on Artificial Intelligence and Statistics,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}, {"title": "Polynomial algorithms in linear programming", "author": ["Leonid G Khachiyan"], "venue": "USSR Computational Mathematics and Mathematical Physics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1980}, {"title": "Graphlab: A new framework for parallel machine learning", "author": ["Yucheng Low", "Joseph Gonzalez", "Aapo Kyrola", "Danny Bickson", "Carlos Guestrin", "Joseph M Hellerstein"], "venue": "arXiv preprint arXiv:1006.4990,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "Task parallel implementation of belief propagation in factor graphs", "author": ["Nam Ma", "Yinglong Xia", "Viktor K Prasanna"], "venue": "In Parallel and Distributed Processing Symposium Workshops & PhD Forum (IPDPSW),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Information, physics, and computation", "author": ["Marc Mezard", "Andrea Montanari"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Modern coding theory", "author": ["Tom Richardson", "Ruediger Urbanke"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2008}, {"title": "st paths using the min-sum algorithm", "author": ["Nicholas Ruozzi", "Sekhar Tatikonda"], "venue": "In Communication, Control, and Computing,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2008}, {"title": "Belief propagation and lp relaxation for weighted matching in general graphs", "author": ["Sujay Sanghavi", "Dmitry Malioutov", "Alan Willsky"], "venue": "Information Theory, IEEE Transactions on,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "A graphical transformation for belief propagation: Maximum weight matchings and odd-sized cycles", "author": ["Jinwoo Shin", "Andrew E Gelfand", "Misha Chertkov"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Graphical models, exponential families, and variational inference", "author": ["Martin J Wainwright", "Michael I Jordan"], "venue": "Foundations and Trends R \u00a9 in Machine Learning,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Belief propagation and revision in networks with loops", "author": ["Yair Weiss"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1997}, {"title": "On the optimality of solutions of the max-product beliefpropagation algorithm in arbitrary graphs", "author": ["Yair Weiss", "William T Freeman"], "venue": "Information Theory, IEEE Transactions on,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2001}], "referenceMentions": [{"referenceID": 9, "context": "1 Introduction Graphical model (GM) has been one of powerful paradigms for succinct representations of joint probability distributions in variety of scientific fields [18, 10, 9, 15].", "startOffset": 167, "endOffset": 182}, {"referenceID": 8, "context": "1 Introduction Graphical model (GM) has been one of powerful paradigms for succinct representations of joint probability distributions in variety of scientific fields [18, 10, 9, 15].", "startOffset": 167, "endOffset": 182}, {"referenceID": 13, "context": "1 Introduction Graphical model (GM) has been one of powerful paradigms for succinct representations of joint probability distributions in variety of scientific fields [18, 10, 9, 15].", "startOffset": 167, "endOffset": 182}, {"referenceID": 1, "context": ", NP-hard) in general [2].", "startOffset": 22, "endOffset": 25}, {"referenceID": 6, "context": "For example, several software architectures for implementing parallel BPs were recently proposed [7, 4, 8] by different research groups in machine learning communities.", "startOffset": 97, "endOffset": 106}, {"referenceID": 3, "context": "For example, several software architectures for implementing parallel BPs were recently proposed [7, 4, 8] by different research groups in machine learning communities.", "startOffset": 97, "endOffset": 106}, {"referenceID": 7, "context": "For example, several software architectures for implementing parallel BPs were recently proposed [7, 4, 8] by different research groups in machine learning communities.", "startOffset": 97, "endOffset": 106}, {"referenceID": 11, "context": "Recently, it has been shown that BP converges to the correct answer for certain classes of loopy GM formulations of several combinatorial optimization problems, including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11].", "startOffset": 180, "endOffset": 187}, {"referenceID": 4, "context": "Recently, it has been shown that BP converges to the correct answer for certain classes of loopy GM formulations of several combinatorial optimization problems, including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11].", "startOffset": 180, "endOffset": 187}, {"referenceID": 0, "context": "Recently, it has been shown that BP converges to the correct answer for certain classes of loopy GM formulations of several combinatorial optimization problems, including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11].", "startOffset": 206, "endOffset": 209}, {"referenceID": 12, "context": "Recently, it has been shown that BP converges to the correct answer for certain classes of loopy GM formulations of several combinatorial optimization problems, including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11].", "startOffset": 236, "endOffset": 240}, {"referenceID": 10, "context": "Recently, it has been shown that BP converges to the correct answer for certain classes of loopy GM formulations of several combinatorial optimization problems, including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11].", "startOffset": 259, "endOffset": 263}, {"referenceID": 2, "context": "In other words, BP can be used an efficient distributed solver for those LPs, and is presumably better than classical centralized LP solvers such as simplex methods [3], interior point methods [14] and ellipsoid methods [6] for large-scale inputs.", "startOffset": 165, "endOffset": 168}, {"referenceID": 5, "context": "In other words, BP can be used an efficient distributed solver for those LPs, and is presumably better than classical centralized LP solvers such as simplex methods [3], interior point methods [14] and ellipsoid methods [6] for large-scale inputs.", "startOffset": 220, "endOffset": 223}, {"referenceID": 11, "context": ", the BP analysis for matching problems [12, 5] do not extend to even for perfect matching ones [1].", "startOffset": 40, "endOffset": 47}, {"referenceID": 4, "context": ", the BP analysis for matching problems [12, 5] do not extend to even for perfect matching ones [1].", "startOffset": 40, "endOffset": 47}, {"referenceID": 0, "context": ", the BP analysis for matching problems [12, 5] do not extend to even for perfect matching ones [1].", "startOffset": 96, "endOffset": 99}, {"referenceID": 11, "context": "First of all, our generic condition can rediscover previous BP results including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11], i.", "startOffset": 90, "endOffset": 97}, {"referenceID": 4, "context": "First of all, our generic condition can rediscover previous BP results including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11], i.", "startOffset": 90, "endOffset": 97}, {"referenceID": 0, "context": "First of all, our generic condition can rediscover previous BP results including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11], i.", "startOffset": 116, "endOffset": 119}, {"referenceID": 12, "context": "First of all, our generic condition can rediscover previous BP results including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11], i.", "startOffset": 146, "endOffset": 150}, {"referenceID": 10, "context": "First of all, our generic condition can rediscover previous BP results including matching [12, 5], perfect matching [1], matching with odd cycles [13] and shortest path [11], i.", "startOffset": 169, "endOffset": 173}, {"referenceID": 0, "context": "For example, if z = [0, 1, 0] and \u03b1 = {1, 3}, then z\u03b1 = [0, 0].", "startOffset": 20, "endOffset": 29}, {"referenceID": 1, "context": ", NP-hard) unless the induced bipartite graph of factors F and variables z, so-called factor graph, has a bounded treewidth [2].", "startOffset": 124, "endOffset": 127}, {"referenceID": 0, "context": "Then, the BP algorithm outputs z = [z i ] as z i = \uf8f1 \uf8f4\uf8f2 \uf8f4\uf8f3 1 if bi[1] > bi[0] ? if bi[1] = bi[0] 0 if bi[1] < bi[0] .", "startOffset": 66, "endOffset": 69}, {"referenceID": 0, "context": "Then, the BP algorithm outputs z = [z i ] as z i = \uf8f1 \uf8f4\uf8f2 \uf8f4\uf8f3 1 if bi[1] > bi[0] ? if bi[1] = bi[0] 0 if bi[1] < bi[0] .", "startOffset": 85, "endOffset": 88}, {"referenceID": 0, "context": "Then, the BP algorithm outputs z = [z i ] as z i = \uf8f1 \uf8f4\uf8f2 \uf8f4\uf8f3 1 if bi[1] > bi[0] ? if bi[1] = bi[0] 0 if bi[1] < bi[0] .", "startOffset": 104, "endOffset": 107}, {"referenceID": 0, "context": "To establish the performance of BP on GM (7) for solving IP (8), we also consider the following the LP (Linear Programming) relation to IP (8): minimize w \u00b7 x subject to \u03c8\u03b1(x\u03b1) = 1, \u2200\u03b1 \u2208 F x = [xi] \u2208 [0, 1] .", "startOffset": 200, "endOffset": 206}, {"referenceID": 0, "context": "We let P denote the polytope of feasible solutions of the above LP: P := {x \u2208 [0, 1] : \u03c8\u03b1(x\u03b1) = 1, \u2200\u03b1 \u2208 F} .", "startOffset": 78, "endOffset": 84}, {"referenceID": 0, "context": "Similarly, P\u03b1 is defined as P\u03b1 := { x \u2208 [0, 1]|\u03b1| : \u03c8\u03b1(x\u03b1) = 1 } .", "startOffset": 40, "endOffset": 46}, {"referenceID": 15, "context": "Now we construct a tree-structured GM (also popularly known as the computational tree [17]), denoted by Ti(t), as follows:", "startOffset": 86, "endOffset": 90}, {"referenceID": 14, "context": "Since we assume x\u0302i \u2208 {0, ?}, it is known from [16] that there exists a MAP configuration y MAP on Ti(t) with y i = 0 at the root variable.", "startOffset": 47, "endOffset": 51}, {"referenceID": 10, "context": "We first show the shortest path problem [11].", "startOffset": 40, "endOffset": 44}, {"referenceID": 4, "context": "Secondly, we show matching related applications including the results of [5, 12, 1, 13].", "startOffset": 73, "endOffset": 87}, {"referenceID": 11, "context": "Secondly, we show matching related applications including the results of [5, 12, 1, 13].", "startOffset": 73, "endOffset": 87}, {"referenceID": 0, "context": "Secondly, we show matching related applications including the results of [5, 12, 1, 13].", "startOffset": 73, "endOffset": 87}, {"referenceID": 12, "context": "Secondly, we show matching related applications including the results of [5, 12, 1, 13].", "startOffset": 73, "endOffset": 87}, {"referenceID": 0, "context": "x = [xe] \u2208 [0, 1] .", "startOffset": 11, "endOffset": 17}, {"referenceID": 0, "context": "e\u2208\u03b4(v) xe = 1, \u2200 v \u2208 V x = [xe] \u2208 [0, 1] .", "startOffset": 34, "endOffset": 40}, {"referenceID": 0, "context": "ei\u2208\u03b4(v) xei = 2 \u2200 v \u2208 V x = [xe1 , xe2 ] \u2208 [0, 1] .", "startOffset": 43, "endOffset": 49}, {"referenceID": 12, "context": "There is previous work on finding matching by using BP and adding disjoint odd cycle constraint [13].", "startOffset": 96, "endOffset": 100}, {"referenceID": 12, "context": "We refer the following graphical transformation from [13].", "startOffset": 53, "endOffset": 57}, {"referenceID": 12, "context": "We refer the maximum weight matching with odd cycles LP from [13] and slightly modify to make the maximum weight perfect matching with odd cycles LP.", "startOffset": 61, "endOffset": 65}, {"referenceID": 1, "context": "u\u2208V (C) (\u22121)d(u,e)y(vC ,u) \u2208 [0, 2] \u2200e \u2208 E(C) \u2211", "startOffset": 29, "endOffset": 35}, {"referenceID": 0, "context": "y = [ye] \u2208 [0, 1] |E| (16)", "startOffset": 11, "endOffset": 17}, {"referenceID": 0, "context": "subject to \u2211 ei+1\u2208\u03b4(v) xei+1 \u2212 \u2211 ei\u2208\u03b4(v) xei = 0 \u2211 e1\u2208\u03b4(v) xe1 = \u2211 en\u2208\u03b4(v) xen = 0 i 6= n, v 6= s \u2211 e1\u2208\u03b4(s) xe1 = \u2211 en\u2208\u03b4(s) xen = 1 \u2211 ei\u2208\u03b4(s) xei = \u2211 ej\u2208\u03b4(s) xej = 0 i 6= 1, j 6= n x = [xei ] \u2208 [0, 1] |V .", "startOffset": 194, "endOffset": 200}, {"referenceID": 0, "context": "i \u2211 ei\u2208\u03b4(t) xei = 1, \u2211 ej\u2208\u03b4(t) xej = 0 \u2200j x = [xei ] \u2208 [0, 1] |V .", "startOffset": 55, "endOffset": 61}, {"referenceID": 0, "context": "ei\u2208\u03b4(v) xei \u2264 bv, \u2200 v \u2208 V x = [xei ] \u2208 [0, 1] |E| (23)", "startOffset": 39, "endOffset": 45}, {"referenceID": 0, "context": "Where, \u03b4(v) is a set of edges connected to a vertex v, w = [wei : ei \u2208 E \u2032] \u2208 [0, 1]|E | and wi = 1 \u2212 i\u03b5.", "startOffset": 78, "endOffset": 84}], "year": 2017, "abstractText": "Max-product belief propagation (BP) is a popular message-passing algorithm for computing a maximum a-posteriori (MAP) assignment in a joint distribution represented by a graphical model (GM). It was recently shown that BP can solve certain classes of Linear Programming (LP) formulations to combinatorial optimization problems including maximum weight matching and shortest path, i.e., BP can be a distributed solver for certain LPs. However, those LPs and corresponding BP analysis are very sensitive to underlying problem setups, and it has been not clear what extent these results can be generalized to. In this paper, we obtain a generic criteria such that BP converges to the correct solution of the desired LP. Our theoretical result not only rediscovers prior known ones for maximum weight matching and shortest path as special cases, but also can be applied to new problems including traveling salesman, longest path and vertex cover, i.e., BP is a distributed (and parallel) solver to the combinatorial optimization problems. We believe that our results provide new insights on BP performances and new directions on distributed solvers for certain classes of large-scale LPs.", "creator": "LaTeX with hyperref package"}}}