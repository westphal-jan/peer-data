{"id": "1412.5477", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Dec-2014", "title": "Computational Model to Generate Case-Inflected Forms of Masculine Nouns for Word Search in Sanskrit E-Text", "abstract": "The problem of word search in Sanskrit is inseparable from complexities that include those caused by euphonic conjunctions and case-inflections. The case-inflectional forms of a noun normally number 24 owing to the fact that in Sanskrit there are eight cases and three numbers-singular, dual and plural. The traditional method of generating these inflectional forms is rather elaborate owing to the fact that there are differences in the forms generated between even very similar words and there are subtle nuances involved. Further, it would be a cumbersome exercise to generate and search for 24 forms of a word during a word search in a large text, using the currently available case-inflectional form generators. This study presents a new approach to generating case-inflectional forms that is simpler to compute. Further, an optimized model that is sufficient for generating only those word forms that are required in a word search and is more than 80% efficient compared to the complete case-inflectional forms generator, is presented in this study for the first time.", "histories": [["v1", "Wed, 17 Dec 2014 16:56:43 GMT  (120kb)", "http://arxiv.org/abs/1412.5477v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["s v kasmir raja", "v rajitha", "lakshmanan meenakshi"], "accepted": false, "id": "1412.5477"}, "pdf": {"name": "1412.5477.pdf", "metadata": {"source": "CRF", "title": "COMPUTATIONAL MODEL TO GENERATE CASE-INFLECTED FORMS OF MASCULINE NOUNS FOR WORD SEARCH IN SANSKRIT E-TEXT", "authors": ["Meenakshi Lakshmanan"], "emails": [], "sections": [{"heading": null, "text": "Corresponding Author: Meenakshi Lakshmanan, Department of Computer Science, Meenakshi College for Women, Chennai, India2260 Science PublicationsJCS"}, {"heading": "1. INTRODUCTION", "text": "Word search in Sanskrit e-text is a complex problem due to the phenomena of euphonic conjunctions and fall movements. These two phenomena in Sanskrit transform words into forms that are distinctly different from the original word and must therefore be taken into account when performing a comprehensive word search in e-texts. This study deals with the generation of search-related case-related forms of words and presents a novel scheme and computational algorithm for the same thing. The authors have already (Raja et al., 2014) presented a solution to the problem of euphonic conjunctions. A noun or pronoun that is of interest may be encountered differently in a given text depending on whether it is used in the nominative, accusative, instrumental, dative, genitive, locative or vocative case, and whether it is used in the singular, dual or plural."}, {"heading": "2. CASE-INFLECTIONS IN SANSKRIT", "text": "There are eight types of fall movements in Sanskrit: nominative, accusative, instrumental, dative, ablative, possessive, locative, and vocative. Apart from the singular and plural forms of a word, which occur in most languages, Sanskrit also has a separate dual form. Therefore, a word can have up to 24 caseinflected forms. In addition, nouns in Sanskrit (and not just the objects they specify) are categorized into three genders: male, female, and male. Caseinflections are defined on the basis of the gender of the word. Deviating rules for the formulation of declensions are defined on the basis of the last letter of the word. For example, the case infections of the word r\u0101ma (masculine ending in the letter a) are performed differently from the case inflections of the word hari (masculine ending in the letter i) and the declensions of the word garda (masculine ending in the letter a)."}, {"heading": "3. THE PROBLEM COMPLEXITY", "text": "A Simple Search for Words Consistency Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Monitoring Mon"}, {"heading": "4. BASIS OF THIS STUDY", "text": "The book \u015aabdama\u00f1jar\u012b by Vidyasagar K. L. V. Sastry and Pandit L. Anantarama Sastri (Vidyasagar et al., 2002) contains the declination tables for Sanskrit nouns belonging to the various categories and is widely accepted as a comprehensive consolidation of the relevant p\u0101\u1e47in rules. This text was used as the primary basis for this study, with further information being sought if necessary (D\u012bk\u1e63ita and Kaumud\u012b, 1962; 2262 Science PublicationsJCSV\u0101mana and Jay\u0101ditya, 1984)."}, {"heading": "5. DEVELOPMENT OF THE COMPUTATIONAL ALGORITHM", "text": "The following control abstraction summarizes the steps required to generate the search-related case diffractions. Generate Inflections (X, g) {/ / X is the given word and g is its gender Step 1: Let x be the last letter of X Step 2: Find the word category C (if any) using g and x Step 3: Calculate x ', the basic transformation of x based on g and C Step 4: Parse the XML structure to get the formulas for this combination of x, g and C Step 5: Perform the operations specified in the formulas to generate the flexed shapes of X} The input word is taken from the user along with the specification of his gender. As already stated, the calculation algorithm consists of two main steps, which consist of identifying the category of the given word and thus the operations required to generate the required inflection shapes, and then performing the following inflection 5 steps."}, {"heading": "6. WORD CATEGORIZATION", "text": "Step 2 of the above control abstraction is accomplished using a hash algorithm to significantly speed up the process. It should be noted that there is no rule, for example, based on the letters of the word, etc., to determine the category of the word. Here, the hash table consists of words belonging to a certain category organized within the categories gender and last letter. Hash value is calculated based on the gender of the word and its last letter. It contains word lists and the corresponding category only for words that have the same gender and the same last letter, but differ in inflected forms. In the hash table, buckets are used for each category to handle collisions that are inevitable since the input contains only information about the gender of the word and its last letter."}, {"heading": "7. TERMINOLOGY", "text": "Before specifying the formulas developed in this study to calculate the inflected forms, it is necessary to introduce some terminology developed exclusively in this study. After examining the inflected word forms indetail, it was determined that the last part of a word is what changes when a inflected form is produced, in most cases affecting only the last letter. On the basis of this observation, a list of required basic operations on the last letter of the words was identified. For each letter x, the list of operations defined on x is identified in Table 2.Sanskrit consonants consist of half vowels, courage, sibilants, and aspirates. Courage is given in Table 3, which represent the columns and rows. All letters in columns 1 and 2 are hard consonants, and those in columns 3 and 4 are soft consonants, which are soft consonants. Column 5 includes the nasal consonants, \"meaning that its sonant is replaced.\""}, {"heading": "8. COMPUTATION OF x'", "text": "A detailed examination and analysis of the declination tables enumerated in accordance with P\u0101\u1e47ini's rules (D\u012bk\u1e63ita and Kaumud\u012b, 2263 Science PublicationsJCS1962) yielded observations that led to the formation of formulas for the calculation of forms of diffraction, simplified by introducing the pre-processing step of calculating the value of x 'as a derivative of x, depending on g and C. This step represents step 3 of the control abstraction presented in section 5. Table 4 shows how x' is calculated from x for all 35 masculine word categories in the s\u0101dh\u0101ra\u1e47a \u015babda list. Identifying x values individually, as shown in Table 4, is a unique approach in the literature and allows, as shown in the table, to summarize word endings and categories for the same process during processing."}, {"heading": "9. DEVELOPMENT OF FORMULAE TO COMPUTE THE INFLECTIONAL FORMS", "text": "A list of words that must be appended to words to generate the vibration forms has been identified for each category of words, taking into account the availability of the two forms X and X'respectively. < Table 5 lists the terms that have been identified. < Although some of the terms in this list can be constructed by appending two or more terms to the list, such terms have not been eliminated because they help with easier processing. In fact, each letter of the Sanskrit alphabet could be given a number and considered an atomic stem and composition formed from their combinations, but the primary goal of simplifying the final formulas has not been eliminated. Step 4 of the control abstraction described in Section 5 above is now explained. A simple XML structure has been developed in which the necessary operations are listed to calculate the converted words for each word category."}, {"heading": "10. OPTIMIZATION OF THE COMPUTATIONAL MODEL", "text": "operation in the formulas is a string concatenation, formulas of the types x + \u03b4i and x + \u03b4i + \u03b4j contain the original word X as a substring. Therefore, for the current use of the word search, it is sufficient to consider only those transformations that cause a change in the word other than appending a string to the word.2264 Science PublicationsJCSTable 1. Case inflections of the n-ending male word r\u0101jan (which means king) # Case Singular Dual Plural"}, {"heading": "1. Nominative (subject) \u0930\u093e\u091c\u093e r\u0101j\u0101 \u0930\u093e\u091c\u093e\u0928\u094c r\u0101j\u0101nau \u0930\u093e\u091c\u093e\u0928\u0903 r\u0101j\u0101na\u1e25", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2. Accusative (object) \u0930\u093e\u091c\u093e\u0928\u092e \u094d r\u0101j\u0101nam \u0930\u093e\u091c\u093e\u0928\u094c r\u0101j\u0101nau \u0930\u093e \u0903 r\u0101j\u00f1a\u1e25", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3. Instrumental (by, with, through) \u0930\u093e \u093e r\u0101j\u00f1\u0101 \u0930\u093e\u091c \u093e\u092e \u094d r\u0101jabhy\u0101m \u0930\u093e\u091c\u093f\u092d\u0903 r\u0101jabhi\u1e25", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4. Dative (for, to) \u0930\u093e  \u0947r\u0101j\u00f1e \u0930\u093e\u091c \u093e\u092e \u094d r\u0101jabhy\u0101m \u0930\u093e\u091c \u0903 r\u0101jabhya\u1e25", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5. Ablative (from, than) \u0930\u093e \u0903 r\u0101j\u00f1a\u1e25 \u0930\u093e\u091c \u093e\u092e \u094d r\u0101jabhy\u0101m \u0930\u093e\u091c \u0903 r\u0101jabhya\u1e25", "text": "< < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <"}, {"heading": "29. \u1e63 - \u1e6d dvi\u1e63 dvi\u1e6d xl + \u201c\u1e6d\u201d", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "28. 2 k t\u0101d\u1e5b\u015b t\u0101d\u1e5bk xl + \u201ck\u201d", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "7. 2 r n\u1e5b nar xg", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "7. 2 17 3 82.35", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "1 \u1e25 14 \u0101ya 27 ena", "text": "2267 Science PublicationsJCSTable 7. Continue20. n 1 15 2 86.67 21. 2 14 2 85.71 22. 3 14 3 78.57 23. 4 14 3 78.57 24. 5 14 3 78.57 25. 6 14 3 78.57 26. 7 16 3 81.25 27. 4 14 2 85.71 28. 2 13 2 84.62 29. - 13 2 84.62 30. s 1 14 2 85.71 31. 2 14 1 92.86 32. 3 16 3 81.25 33. 4 16 3 81.25 34. 4 16 3 81.25 34. 5 14 2 85.71 35. h - 14 2 85.71 Total 504 94 81.35"}, {"heading": "11. CONCLUSION", "text": "A new method for calculating fall movements has been designed for this study, which makes the inflection generation more efficient compared to related work in literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009). Introducing functions that perform some basic operations of euphonic conjunctions, and appropriately introducing a fundamentally transformed form X \"of the given word as a pre-processing step, has greatly increased the efficiency of the inflection form generator. This increase in efficiency can be illustrated by a few examples. Pitching and d\u0101t\u0442, although masculine and ending in the same vowel\" inflac, \"produce different definition tables."}, {"heading": "12.1. Funding Information", "text": "No funding agency involved."}, {"heading": "12.2. Author\u2019s Contributions", "text": "Dr. Kasmir Raja: Mainly involved in the solution conceptualization and led the others in formulating the control abstraction and developing the algorithm. He reviewed the work at each stage and gave guidance and designed the work. Finally, he thoroughly reviewed and reviewed the work. Ms. Rajitha V.: Responsible for formulating the control abstraction and developing the algorithm. She worked out the complete, extensive XML structures, implemented the algorithms and conducted rigorous testing. Dr. Meenakshi Lakshmanan: Inputs for the Sanskrit language, analyzed the efficiency of the 2268 Science PublicationJCSalgorithm and proposed optimizing the computational model. She wrote the work."}, {"heading": "12.3. Ethics", "text": "This article is not about ethical issues."}, {"heading": "13. REFERENCES", "text": "It is not the first time that the US government has been able to address the question of whether it is able to assert its own interests, nor is it the first time that it has been able to assert its own interests, nor is it the first time that it has been able to assert its own interests, nor the first time that it has been able to assert its own interests, nor is it the first time that it has been able to assert its own interests, nor the first time that it has been able to assert its own interests, nor is it the first time that it has been able to assert its own interests, nor is it the first time that it has been able to assert its own interests, nor is it the first time that it has been able to assert its own interests."}], "references": [{"title": "Sanskrit Analysis System (SAS), Sanskrit computational linguistics", "author": ["M. Bhadra", "S.K. Singh", "S.K. Subash", "M.R. Agrawal", "G.N. Jha"], "venue": "Lecture Notes Comput. Sci.,", "citeRegEx": "Bhadra et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bhadra et al\\.", "year": 2009}, {"title": "Translated by \u015ar\u012b\u015ba Candra Vasu", "author": ["B. D\u012bk\u1e63ita"], "venue": "Kaumudi\u0304,", "citeRegEx": "D\u012bk\u1e63ita and S.,? \\Q1962\\E", "shortCiteRegEx": "D\u012bk\u1e63ita and S.", "year": 1962}, {"title": "Completeness analysis of a Sanskrit reader", "author": ["P. Goyal", "G. Huet"], "venue": "Proceedings of the 5th International Symposium on Sanskrit Computational Linguistics,", "citeRegEx": "Goyal and Huet,? \\Q2013\\E", "shortCiteRegEx": "Goyal and Huet", "year": 2013}, {"title": "A distributed platform for Sanskrit processing", "author": ["P. Goyal", "G. Huet", "A. Kulkarni", "P. Scharf", "R. Bunker"], "venue": "Proceedings of the 24th International Conference on Computational Linguistics,", "citeRegEx": "Goyal et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Goyal et al\\.", "year": 2012}, {"title": "Towards computational processing of sanskrit, ICON-2003, Mysore, India", "author": ["G. Huet"], "venue": "Proceedings of the Central Institute of Indian Languages, (IIL\u2019", "citeRegEx": "Huet,? \\Q2003\\E", "shortCiteRegEx": "Huet", "year": 2003}, {"title": "Design of a lexical database for Sanskrit", "author": ["G. Huet"], "venue": "Proceedings of the Workshop on Enhancing and Using Electronic Dictionaries, (UED\u2019", "citeRegEx": "Huet,? \\Q2004\\E", "shortCiteRegEx": "Huet", "year": 2004}, {"title": "Lexicon-directed segmentation and tagging of Sanskrit", "author": ["G. Huet"], "venue": "Proceedings of the 12th World Sanskrit Conference, (WSC\u2019", "citeRegEx": "Huet,? \\Q2004\\E", "shortCiteRegEx": "Huet", "year": 2004}, {"title": "A functional toolkit for morphological and phonological processing, application to a Sanskrit tagger", "author": ["G. Huet"], "venue": "J. Functional Programm.,", "citeRegEx": "Huet,? \\Q2005\\E", "shortCiteRegEx": "Huet", "year": 2005}, {"title": "Shallow syntax analysis in Sanskrit guided by semantic nets constraints", "author": ["G. Huet"], "venue": "Proceedings of International Workshop on Research Issues in Digital Libraries, (IDL,", "citeRegEx": "Huet,? \\Q2006\\E", "shortCiteRegEx": "Huet", "year": 2006}, {"title": "Formal structure of Sanskrit text: Requirements analysis for a mechanical Sanskrit processor. Proceedings, 2nd International Symposium on Sanskrit, Computational Linguistics, (SCL", "author": ["G. Huet"], "venue": null, "citeRegEx": "Huet,? \\Q2008\\E", "shortCiteRegEx": "Huet", "year": 2008}, {"title": "Sanskrit segmentation. South asian languages analysis roundtable XXVIII", "author": ["G. Huet"], "venue": null, "citeRegEx": "Huet,? \\Q2009\\E", "shortCiteRegEx": "Huet", "year": 2009}, {"title": "Morphological analysis of nominal inflections in Sanskrit", "author": ["S. Jha", "G.N. Jha"], "venue": "Proceedings of the Platinum Jubilee International Conference, (JIC\u2019", "citeRegEx": "Jha and Jha,? \\Q2005\\E", "shortCiteRegEx": "Jha and Jha", "year": 2005}, {"title": "Inflectional morphology analyzer for Sanskrit, Sanskrit computational linguistics", "author": ["G.N. Jha", "M.A. Subash", "S.K. Mishra", "D. Mani", "D. Ishra"], "venue": "Lecture Notes Comput. Sci.,", "citeRegEx": "Jha et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Jha et al\\.", "year": 2009}, {"title": "Computational algorithms based on the paninian system to process euphonic conjunctions for word searches", "author": ["S.V.K. Raja", "V. Rajitha", "M. Lakshmanan"], "venue": "Int. J. Comput. Sci. Inform. Security,", "citeRegEx": "Raja et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Raja et al\\.", "year": 2014}, {"title": "Subanta pada analyzer for Sanskrit", "author": ["S. Selot", "A.S. Zadgaonkar", "N. Tripathi"], "venue": "Oriental J. Comput. Sci. Technol.,", "citeRegEx": "Selot et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Selot et al\\.", "year": 2010}, {"title": "With the subcommentaries of Jinendrabuddhi", "author": ["V\u0101mana"], "venue": "Jaya\u0304ditya,", "citeRegEx": "V\u0101mana and ,? \\Q1984\\E", "shortCiteRegEx": "V\u0101mana and ", "year": 1984}], "referenceMentions": [{"referenceID": 13, "context": "The authors have already presented (Raja et al., 2014) a solution to the problem with respect to euphonic conjunctions.", "startOffset": 35, "endOffset": 54}, {"referenceID": 13, "context": "1||\u2019 and two other related aphorisms, which specify conditions under which the letter n in a word would be replaced by \u1e47 (Raja et al., 2014).", "startOffset": 121, "endOffset": 140}, {"referenceID": 3, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 7, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 2, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 4, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 0, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 11, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 14, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}, {"referenceID": 12, "context": "A new method for computation of case-inflections has been designed for this study, which makes the inflectional form generation more efficient compared to related work in the literature (Huet, 2004a; 2014b; Goyal et al., 2012; Huet, 2005; 2009; Goyal and Huet, 2013; Huet, 2003; 2006; 2008; Bhadra et al., 2009; Jha and Jha, 2005; Selot et al., 2010; Jha et al., 2009).", "startOffset": 186, "endOffset": 368}], "year": 2014, "abstractText": "The problem of word search in Sanskrit is inseparable from complexities that include those caused by euphonic conjunctions and case-inflections. The case-inflectional forms of a noun normally number 24 owing to the fact that in Sanskrit there are eight cases and three numbers-singular, dual and plural. The traditional method of generating these inflectional forms is rather elaborate owing to the fact that there are differences in the forms generated between even very similar words and there are subtle nuances involved. Further, it would be a cumbersome exercise to generate and search for 24 forms of a word during a word search in a large text, using the currently available case-inflectional form generators. This study presents a new approach to generating case-inflectional forms that is simpler to compute. Further, an optimized model that is sufficient for generating only those word forms that are required in a word search and is more than 80% efficient compared to the complete case-inflectional forms generator, is presented in this study for the first time.", "creator": "PScript5.dll Version 5.2.2"}}}