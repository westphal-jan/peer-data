{"id": "1412.5980", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Dec-2014", "title": "GraATP: A Graph Theoretic Approach for Automated Theorem Proving in Plane Geometry", "abstract": "Automated Theorem Proving (ATP) is an established branch of Artificial Intelligence. The purpose of ATP is to design a system which can automatically figure out an algorithm either to prove or disprove a mathematical claim, on the basis of a set of given premises, using a set of fundamental postulates and following the method of logical inference. In this paper, we propose GraATP, a generalized framework for automated theorem proving in plane geometry. Our proposed method translates the geometric entities into nodes of a graph and the relations between them as edges of that graph. The automated system searches for different ways to reach the conclusion for a claim via graph traversal by which the validity of the geometric theorem is examined.", "histories": [["v1", "Thu, 18 Dec 2014 18:10:03 GMT  (151kb,D)", "http://arxiv.org/abs/1412.5980v1", "The 8th International Conference on Software, Knowledge, Information Management and Applications (SKIMA 2014)"]], "COMMENTS": "The 8th International Conference on Software, Knowledge, Information Management and Applications (SKIMA 2014)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mohammad murtaza mahmud", "swakkhar shatabda", "mohammad nurul huda"], "accepted": false, "id": "1412.5980"}, "pdf": {"name": "1412.5980.pdf", "metadata": {"source": "CRF", "title": "GraATP: A Graph Theoretic Approach for Automated Theorem Proving in Plane Geometry", "authors": ["Mohammad Murtaza Mahmud", "Swakkhar Shatabda", "Mohammad Nurul Huda"], "emails": ["mohammadmurtazamahmud@gmail.com,", "swakkhar@cse.uiu.ac.bd,", "mnh@cse.uiu.ac.bd"], "sections": [{"heading": null, "text": "Automated Theorem Proving (ATP) is an established branch of Artificial Intelligence. The purpose of ATP is to design a system that can automatically calculate an algorithm to prove or disprove a mathematical claim, based on a set of premises, using a set of basic postulates and the method of logical inference. In this essay, we propose GraATP, a general framework for automated theory proof in plane geometry. Our proposed procedure translates the geometric units into nodes of a graph and the relationships between them as edges of that graph. The automated system searches for various ways to arrive at the conclusion of a claim by graph traversing, through which the validity of the geometric theorem is examined."}, {"heading": "1 Introduction", "text": "In fact, most people who are able to survive themselves are able to survive themselves, \"he said.\" But it's not that they are able to survive themselves. \"In fact,\" it's as if they were able to survive themselves. \"In fact,\" it's as if they were able to survive themselves. \"In fact,\" it's as if they were able to survive themselves, as if they were able to survive themselves, as if they were able to survive themselves, as if they were able to survive themselves, as if they were able to survive themselves, as if they were able to survive themselves. \""}, {"heading": "2 Preliminaries", "text": "To define a geometric system, we use four elementary concepts of geometry: point, straight line, angle and arc. Normally, we choose a point and a line that pass through the point as a starting point. The position of a point is determined by the distance from another predefined point along a certain straight line. Orientation of a line is determined by the angle it makes with another previously specified line and the intersection between the lines. A circular arc is determined by the position of its center and its radius. For example, the following steps are required to create a parallelogram in Figure 1: 1. A is a reference point.2. EF that passes through A is a reference line3. Line GH runs through A, angle 6 FAH = x4. C is a point on GH, where AC = b5. Line KL runs through C, angle 6 KCG = x6. Line IJ runs through B, angle 6 FBJ = x7. D is the intersection of the J on which we have determined the structure between KL and some length."}, {"heading": "2.1 Cartesian Method", "text": "In the Cartesian method, geometry is combined with algebra. Two axes, perpendicular to each other and their intersection, i.e. origin, are specified. A point on a plane is specified by a pair of coordinates, which are the distances of the point from the origin along the axes. Curves and lines are specified by algebraic equations. Solving these equations of unknown dimensions is calculated. Finally, verifiable facts have to be verified.Consider the following example from [5]. We have to prove that diagonals of a parallelogram halve each other. See Figure 2. Here are the hypotheses - i) OACB is a parallelogram = \u21d2 OB | AC, OA | BC, OC and AB are diagonals, ii) D is the intersection of a parallelogram."}, {"heading": "2.2 Euclidean Logical Inference Method", "text": "In the logical conclusion method, a number of axioms, previously proven theorems and hypotheses are used to discover the relationship between different entities (lengths of line segments or arcs, positions of points, number of angles and equations or similarities of finite regions such as triangles) of a geometric structure. These relationships are used to further infer the relationship between various other entities from the previously derived relationships. This process continues until the relationship between two particular entities of interest is discovered. Let's think of the previous example: diagonals of a parallelogram divide each other. We must discover the relationship between the entities (here length of two line segments): OD and CD as well as BD and AD. First, we will find out that relationships taking advantage of the hypotheses. Since OACB is a parallelogram between entities, (OB, AC) and (OA, BC) OBOB and OBOB are equal."}, {"heading": "3 GraATP: Our proposed ATP Framework", "text": "In the previous section, we discussed two manual approaches to geometric theorems that are proving their worth. If we compare between two possibilities, at first glance, the Cartesian algebraic method seems more complicated than the logical inference method. Algebraic method is mechanical, all we have to do is to fix the position coordinates of certain points, discover equations of straight lines or curves that appear in the geometric structure, and find out the coordinates of other points as functions of the previously determined points. If we know all dimensions of the structure, we test whether the final assertion is true or false. On the other hand, the Euclidean logical inference method requires more heuristic knowledge, i.e. more \"intelligence,\" to discover the hidden relationship between different entities of the structure. The ability of the researcher to observe the geometric structure and retrieve previously discovered theorems, in connection with the problem, we play an important role here."}, {"heading": "4 Conclusion", "text": "So far we have discussed how to translate a geometric structure that is uniquely configured by setting a set of parameters to a graph and how to traverse the graph to find out a sequence of steps that can prove the theorem. There are several mechanical methods to prove geometric theorems that have already been proposed, e.g. the Wus Method [5], the area method [6], and so on. The purpose of this work is to resemble the way in which people think, perhaps when it is the most naive way to prove a theorem. It can be thought of as a primitive step of creating artificial thought processors. Each individual system can be thought of as a geometric structure. Data we perceive from our sensory organs are the different \"dimensions.\" If we think that we are finding out the relationship between different dimensions, there are pairs of challenges that we have to face, while we are performing the above-mentioned method is an automated one below."}], "references": [{"title": "A computer program for presburgers algorithm,\u201d in Summaries of talks presented at the Summer Institute for Symbolic Logic", "author": ["M. Davis"], "venue": "Cornell University,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1957}, {"title": "The logic theory machine\u2013a complex information processing system,", "author": ["A. Newell", "H.A. Simon"], "venue": "Information Theory, IRE Transactions on,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1956}, {"title": "A guide to the general problem-solver program gps-2-2,", "author": ["A. Newell"], "venue": "DTIC Document, Tech. Rep.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1963}, {"title": "and D", "author": ["H. Gelernter", "J.R. Hansen"], "venue": "W. Loveland, \u201cEmpirical explorations of the geometry theorem machine,\u201d in Papers presented at the May 3-5, 1960, western joint IRE-AIEE-ACM computer conference. ACM", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1960}, {"title": "Automated geometric theorem proving: Wus method,", "author": ["J. Elias"], "venue": "The Montana Mathematics Enthusiast,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "Machine proofs in geometry", "author": ["S.-C. Chou", "X.-S. Gao", "J.-Z. Zhang"], "venue": "World Scientific, Singapore", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1994}, {"title": "Automated theorem proving,", "author": ["D.A. Plaisted"], "venue": "Wiley Interdisciplinary Reviews: Cognitive Science,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Boolean satisfiability from theoretical hardness to practical success,", "author": ["S. Malik", "L. Zhang"], "venue": "Communications of the ACM,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "and S", "author": ["M.W. Moskewicz", "C.F. Madigan", "Y. Zhao", "L. Zhang"], "venue": "Malik, \u201cChaff: Engineering an efficient sat solver,\u201d in Proceedings of the 38th annual Design Automation Conference. ACM", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "Possible world semantics for first-order logic of proofs,", "author": ["M. Fitting"], "venue": "Annals of Pure and Applied Logic,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Eliminating duplication with the hyper-linking strategy,", "author": ["S.-J. Lee", "D.A. Plaisted"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1992}, {"title": "Ordered semantic hyper-linking,", "author": ["D.A. Plaisted", "Y. Zhu"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2000}, {"title": "Model evolution based theorem proving,", "author": ["P. Baumgartner"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Satisfiability modulo theories: introduction and applications,", "author": ["L. De Moura", "N. Bj\u00f8rner"], "venue": "Communications of the ACM,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Computational logic: essays in honor of Alan Robinson", "author": ["J.-L. Lassez", "G. Plotkin"], "venue": "Mit Press", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1991}, {"title": "Case splitting in an automatic theorem prover for real-valued special functions,", "author": ["J.P. Bridge", "L.C. Paulson"], "venue": "Journal of automated reasoning,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "and S", "author": ["A. Armando", "M.P. Bonacina", "S. Ranise"], "venue": "Schulz, \u201cNew results on rewrite-based satisfiability procedures,\u201d ACM Transactions on Computational Logic (TOCL), vol. 10, no. 1, p. 4", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "and J", "author": ["H. Fu", "X. Zhong", "Q. Li", "H. Xia"], "venue": "Li, \u201cGeometry knowledge base learning from theorem proofs,\u201d in Knowledge Engineering and Management. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "A cartesian methodology for an autonomous program synthesis system,", "author": ["M. Franova"], "venue": "ICONS", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "In 1954 Martin Davis, an American Mathematician programmed Presburgers algorithm [1].", "startOffset": 81, "endOffset": 84}, {"referenceID": 1, "context": "Shaw developed Logic Theory Machine around 1955-56 [2].", "startOffset": 51, "endOffset": 54}, {"referenceID": 2, "context": ") [3] which was able to solve any symbolic problem.", "startOffset": 2, "endOffset": 5}, {"referenceID": 3, "context": "Loveland worked on geometric theorem proving implementing traditional proof method [4].", "startOffset": 83, "endOffset": 86}, {"referenceID": 4, "context": "Later Wen-Tsun Wu developed an algebraic method [5] which could prove geometric theorems more efficiently, but this method involves lots of calculations with polynomials which make the proof hardly readable.", "startOffset": 48, "endOffset": 51}, {"referenceID": 5, "context": "Chou, Gao and Zhang [6] developed \u2018area method\u2019 which is able to produce short and readable proofs of geometric theorems.", "startOffset": 20, "endOffset": 23}, {"referenceID": 6, "context": "Plaisted [7] reviewed different techniques of ATP.", "startOffset": 9, "endOffset": 12}, {"referenceID": 7, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 59, "endOffset": 65}, {"referenceID": 8, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 59, "endOffset": 65}, {"referenceID": 9, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 85, "endOffset": 89}, {"referenceID": 10, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 106, "endOffset": 110}, {"referenceID": 11, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 138, "endOffset": 142}, {"referenceID": 12, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 160, "endOffset": 164}, {"referenceID": 13, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 182, "endOffset": 186}, {"referenceID": 14, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 215, "endOffset": 219}, {"referenceID": 15, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 241, "endOffset": 249}, {"referenceID": 16, "context": "Among these techniques are: propositional proof procedures [8, 9], first order logic [10], clause linking [11], instance-based procedures [12], model evolution [13], modulo theories [14], unification and resolution [15] and combined systems [16, 17].", "startOffset": 241, "endOffset": 249}, {"referenceID": 4, "context": "In another paper, Joran Elias [5] discussed Wus method on geometric theorem proving.", "startOffset": 30, "endOffset": 33}, {"referenceID": 17, "context": "They are: Euclidean Logical Inference methods [18] and Cartesian Algebraic methods [19].", "startOffset": 46, "endOffset": 50}, {"referenceID": 18, "context": "They are: Euclidean Logical Inference methods [18] and Cartesian Algebraic methods [19].", "startOffset": 83, "endOffset": 87}, {"referenceID": 4, "context": "Lets consider the following example from [5].", "startOffset": 41, "endOffset": 44}, {"referenceID": 4, "context": "There are several previously proposed ways: Wus method [5], Area method [6], etc.", "startOffset": 55, "endOffset": 58}, {"referenceID": 5, "context": "There are several previously proposed ways: Wus method [5], Area method [6], etc.", "startOffset": 72, "endOffset": 75}, {"referenceID": 4, "context": "Wus method [5], Area method [6], and so on.", "startOffset": 11, "endOffset": 14}, {"referenceID": 5, "context": "Wus method [5], Area method [6], and so on.", "startOffset": 28, "endOffset": 31}], "year": 2014, "abstractText": "Automated Theorem Proving (ATP) is an established branch of Artificial Intelligence. The purpose of ATP is to design a system which can automatically figure out an algorithm either to prove or disprove a mathematical claim, on the basis of a set of given premises, using a set of fundamental postulates and following the method of logical inference. In this paper, we propose GraATP, a generalized framework for automated theorem proving in plane geometry. Our proposed method translates the geometric entities into nodes of a graph and the relations between them as edges of that graph. The automated system searches for different ways to reach the conclusion for a claim via graph traversal by which the validity of the geometric theorem is examined.", "creator": "LaTeX with hyperref package"}}}