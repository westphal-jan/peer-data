{"id": "1412.5984", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Dec-2014", "title": "Stochastic Local Search for Pattern Set Mining", "abstract": "Local search methods can quickly find good quality solutions in cases where systematic search methods might take a large amount of time. Moreover, in the context of pattern set mining, exhaustive search methods are not applicable due to the large search space they have to explore. In this paper, we propose the application of stochastic local search to solve the pattern set mining. Specifically, to the task of concept learning. We applied a number of local search algorithms on a standard benchmark instances for pattern set mining and the results show the potentials for further exploration.", "histories": [["v1", "Thu, 18 Dec 2014 18:16:52 GMT  (91kb,D)", "http://arxiv.org/abs/1412.5984v1", "The 8th International Conference on Software, Knowledge, Information Management and Applications (SKIMA 2014)"]], "COMMENTS": "The 8th International Conference on Software, Knowledge, Information Management and Applications (SKIMA 2014)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["muktadir hossain", "tajkia tasnim", "swakkhar shatabda", "dewan m farid"], "accepted": false, "id": "1412.5984"}, "pdf": {"name": "1412.5984.pdf", "metadata": {"source": "CRF", "title": "Stochastic Local Search for Pattern Set Mining", "authors": ["Muktadir Hossain", "Tajkia Tasnim", "Swakkhar Shatabda"], "emails": ["muktadir00@gmail.com,", "tajkiamim@gmail.com,", "swakkhar@cse.uiu.ac.bd,", "dewanfarid@cse.uiu.ac.bd"], "sections": [{"heading": null, "text": "Local search methods can quickly find good solutions in cases where systematic search methods could take a long time. Furthermore, in the context of pattern set mining, exhaustive search methods are not applicable due to the large search space they need to explore. In this paper, we propose the use of stochastic local search to solve pattern set mining, specifically for the task of concept learning. We have applied a number of local search algorithms to standardized benchmark instances of pattern set mining and the results show the potential for further exploration."}, {"heading": "1 Introduction", "text": "There has been a growing interest in Patterset Mining rather than Patterns Mining in recent years. One of the most important tasks in Patterset Mining is to find a particular set of patterns in data that successfully splits the data set and distinguishes the classes from each other. [2] This is referred to in the literature as a concept learning task [2]. Such pattern sets are desirable when selecting a particular small set of patterns from a large data set in which traditional pattern mining algorithms do not produce good results. In the concept learning task, we will get a set of classes and a set of patterns or characteristics. The task is to select a small set of characteristics or patterns to maximize classification accuracy. This is a complex combinatorial optimization task. Most of the algorithms used to solve the problem earlier in the literature are exhaustive or greedy in nature. [2] Explanatory frameworks such as limiting methods [3] have a significant success."}, {"heading": "2 Preliminaries", "text": "In this section, we briefly describe the problem model we use. We adopt the item set Mining = > example of transactions that was previously used by Guns et al. in [2]. In the concept tutorial, we get a database of transactions, D. This is a binary matrix, which means that all items are either 0 or 1. The columns of this binary matrix correspond to a series of patterns or items, I and the rows correspond to actual data positions or transactions. For example, consider the records in Table 1. We have four items in the item set, I = {A, B, D} and five transactions in the transaction set, T = {t1, t2, t5}. Item sets or pattern sets and transaction sets are generally represented by binary vectors. Coverage D (I) of an item set I consists of all transactions in which the item set takes place: D (I)."}, {"heading": "3 Related Works", "text": "In the pattern mining problem [6], we are interested in finding patterns in the dataset that are correlated [7], discriminatory [8], contrasting [9], varied [10], etc. A wide variety of algorithms have been proposed to solve pattern set mining over the last decade [1]. Recent advances in this area show the use of declarative programming frameworks, i.e. constraint programming [3]. State-of-the-art constraint solvers, i.e. COMET [11] are used to solve pattern set mining and related tasks [2]. It opens up a huge area of research by combining data mining or machine learning tasks with constraint programming [12, 13]. However, most of these methods use systematic search methods to search the solution space and shrink it."}, {"heading": "4 Our Approach", "text": "In this section we describe the algorithms we have implemented to solve the concept learning task. The basic framework contains two important functions that calculate the coverage and check the closeness or maximum property of the item sets or pattern sets. Algorithm 1: getCoverage (ItemSet I, TransactionSet T) 1 Coverage = [0, \u00b7 \u00b7 \u00b7, 0] 2 for each transaction t-T do 3 when all items appear in I, then 4 Coverage [t] = 1 5 BackcoverThe getCoverage algorithm is in Algorithm 1. It simply looks for the occurrence of items in an item set in all transactions in the dataset and returns them all. The next important function is the isClosed function, which verifies the maximum property of an item set.The algorithm is represented in Algorithm 2.Algorithm 2: isClosed (ItemSet I, Database D) 1 = 0 (Support I) for each item I is covered."}, {"heading": "4.1 Random Walk", "text": "The random run algorithm is similar in nature to Monte Carlo simulations. The pseudo code for the algorithm is given in Algorithm 4. This algorithm continuously updates the maximum accuracy and the best solution \u043a and then returns the best solution found before the algorithm expires."}, {"heading": "4.2 Random Valid", "text": "The next algorithm, which we call \"random valid,\" starts by first generating a valid pattern that is set for each transaction. A pattern set is valid if the item sets are all maximum, the termination criteria are similar to the previous random walk algorithm. In this version, the algorithm makes some random changes in the current solution and accepts the new solution only if the resulting pattern is valid in each iteration. Our random valid algorithm is given in Algorithm 5.Algorithm 3: getAccuracy (PatternSet, Database D) 1 C +: Set of positive matches 2 C \u2212: Set of negative matches 3 for each iteration."}, {"heading": "4.3 Hill Climbing", "text": "The new candidate solution is only accepted if it does not decrease the accuracy of the current candidate pattern. The algorithm is specified in algorithm 6.Algorithm 6: HillClimbing () 1 = create a valid pattern set with k items 2 maxAccuracy = getAccuracy (\u0442, D) 3, while timeout 4 \u0442t = make random changes in \u03c65, if isValid (\u0442t, D) then 6 Accuracy = getAccuracy (\u0441, D) 7, if accuracy \u2265 maxAccuracy then 8 maxAccuracy = accuracy 9 \u0442t10 return"}, {"heading": "4.4 Hill Climbing with Restart", "text": "The hill climbing algorithm shown in algorithm 6 is inherently greedy, since it only accepts non-decreasing steps in terms of accuracy. However, such a strategy quickly takes the algorithm into local minima and cannot be improved any further. To address this situation, we propose the next algorithm, which we call hill climbing with restart, which is referred to in the rest of the paper as HC + restart. The pseudo-code for HC + restart is in algorithm 7. This algorithm is similar to that of hill climbing, but keeps an eye on the non-improving steps and then restarts the search for the number of non-improving steps, exceeds the limit of a parameter threshold. The value of the threshold was kept at 100 for these experiments.Algorithm 7: Hill climbing with restart () 1 = Generate a valid pattern set with k elements 2 items and then start the search for the number of non-improving steps again, otherwise exceeding the limit of a parameter."}, {"heading": "4.5 Genetic Algorithm", "text": "The individual search methods often assume a solution in the search space and have little chance of divergence. Furthermore, combinations of individuals in the population help in the search for high-quality solutions that resemble the natural process of species evolution. One such algorithm is the genetic algorithm we propose here. The genetic algorithm maintains a population of pattern sets and then iteratively recombines the individuals to create new solutions. the pseudo-code for our genetic algorithm is given in Algorithm 8.Algorithm: Genetic algorithm () 1 p: Population size 2 P = generate p valid pattern sets 3, while timeout the individuals 4 childCount = 0 5 Pc = {} 6 during childCount < p do 7 vs. selectValentsoValentom () = child number (2)."}, {"heading": "5 Experimental Results", "text": "We implemented the algorithms in the Ruby language and conducted our experiments on an Intel Core i3 2.40 GHz computer with 6 GB RAM and 32 bit Ubuntu 14.04 operating system."}, {"heading": "5.1 Dataset", "text": "The benchmark data sets we use in this article come from the UCI Machine Learning Repository [14] and were originally used in [2] and can be downloaded free of charge from the web site: https: / / dtai.cs.kuleuven.be / CP4IM / datasets /. The benchmarks are shown in Table 2 with their properties."}, {"heading": "5.2 Results", "text": "We conducted experiments by running different algorithms on each of the benchmark datasets and reported on the accuracy in Table 3. Due to the unavailability of COMET, we were not able to compare the search performance with the large neighborhood search used in [2]. Each algorithm was given 10 minutes to complete, and the best accuracy found during runtime is given in the table. Setting the sample size was varied to see the effects of the size parameter on the performance of the algorithms. The value of the parameter k was varied for the values {2, 3, 4}. The best values in each line are displayed in bold fonts."}, {"heading": "5.3 Analysis", "text": "The results mentioned in Table 3 show that genetic algorithms work better than other algorithms for most sets of data of different pattern sizes. However, in some cases, the Monte Carlo simulation works poorly because there are not many smart decisions made during the search. Random search performance improves because the random aisle wastes a good amount of time finding valid pattern sets that are closed by the positive transaction amount. Search for the hill quickly gets stuck in the local maximum and stagnates once, but cannot improve further due to the lack of escape mechanisms. If we add the strategy of random restart together with search for the hill, the performance of the algorithms varies somewhat with the size of the pattern sets. The situation is illustrated in Figure??, the accuracy of the search algorithms is presented as vertical bars for all data sets."}, {"heading": "6 Conclusion", "text": "In this paper, we demonstrated the effectiveness of various stochastic local search algorithms to solve the pattern set mining concept learning task. Population-based algorithms such as the genetic algorithm are showing promising results, while local minimal escape strategies such as random restart greatly increase the effectiveness of greedy mountaineer search. In the future, we want to improve the performance of search techniques by incorporating more effective strategies in stochastic local search and solving problems related to pattern set mining with realistic datasets."}], "references": [{"title": "Mining sets of patterns", "author": ["B. Bringmann", "S. Nijssen", "N. Tatti", "J. Vreeken", "A. Zimmerman"], "venue": "Tutorial at ECMLP- KDD, 2010. 10  Figure 5: Put a title here Figure 6: Put a title here Figure 7: Search progress for different algorithm for the hepatitis dataset with size of the pattern size k = 3. 11", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2010}, {"title": "Declarative heuristic search for pattern set mining", "author": ["T. Guns", "S. Nijssen", "A. Zimmermann", "L. De Raedt"], "venue": "Data Mining Workshops (ICDMW), 2011 IEEE 11th International Conference on. IEEE, 2011, pp. 1104\u20131111.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Itemset mining: A constraint programming perspective", "author": ["T. Guns", "S. Nijssen", "L. De Raedt"], "venue": "Artificial Intelligence, vol. 175, no. 12, pp. 1951\u20131983, 2011.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1951}, {"title": "k-pattern set mining under constraints", "author": ["T. Guns", "S. Nijssen", "L.D. Raedt"], "venue": "Knowledge and Data Engineering, IEEE Transactions on, vol. 25, no. 2, pp. 402\u2013418, 2013.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Mining association rules between sets of items in large databases", "author": ["R. Agrawal", "T. Imieli\u0144ski", "A. Swami"], "venue": "ACM SIGMOD Record, vol. 22, no. 2. ACM, 1993, pp. 207\u2013216.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1993}, {"title": "Transversing itemset lattices with statistical metric pruning", "author": ["S. Morishita", "J. Sese"], "venue": "Proceedings of the nineteenth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems. ACM, 2000, pp. 226\u2013236.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2000}, {"title": "Discriminative frequent pattern analysis for effective classification", "author": ["H. Cheng", "X. Yan", "J. Han", "C.-W. Hsu"], "venue": "Data Engineering, 2007. ICDE 2007. IEEE 23rd International Conference on. IEEE, 2007, pp. 716\u2013725.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "Supervised descriptive rule discovery: A unifying survey of contrast set, emerging pattern and subgroup mining", "author": ["P.K. Novak", "N. Lavra\u010d", "G.I. Webb"], "venue": "The Journal of Machine Learning Research, vol. 10, pp. 377\u2013403, 2009.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2009}, {"title": "Optimizing feature sets for structured data", "author": ["U. R\u00fcckert", "S. Kramer"], "venue": "Machine Learning: ECML 2007. Springer, 2007, pp. 716\u2013723.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2007}, {"title": "Constraint-based local search", "author": ["P.V. Hentenryck", "L. Michel"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "Declarative modeling for machine learning and data mining", "author": ["L. De Raedt"], "venue": "Formal Concept Analysis. Springer, 2012, pp. 2\u20132.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Miningzinc: A modeling language for constraint-based mining", "author": ["T. Guns", "A. Dries", "G. Tack", "S. Nijssen", "L. De Raedt"], "venue": "Proceedings of the Twenty-Third international joint conference on Artificial Intelligence. AAAI Press, 2013, pp. 1365\u20131372.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "UCI machine learning repository", "author": ["A. Frank", "A. Asuncion"], "venue": "2010. 12", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "There have been growing interest in the field of pattern set mining in stead of pattern mining in the recent years [1].", "startOffset": 115, "endOffset": 118}, {"referenceID": 1, "context": "One of the most important task in pattern set mining is to find a particular set of patterns in data that successfully partitions the dataset and discriminates the classes from one another [2].", "startOffset": 189, "endOffset": 192}, {"referenceID": 1, "context": "This is called concept learning task in the literature [2].", "startOffset": 55, "endOffset": 58}, {"referenceID": 1, "context": "Most of the algorithms that are applied to solve the problem earlier in the literature are mostly exhaustive or greedy in nature [2].", "startOffset": 129, "endOffset": 132}, {"referenceID": 1, "context": "Declarative frameworks like constraint programming methods [2, 3] have gained some significant success.", "startOffset": 59, "endOffset": 65}, {"referenceID": 2, "context": "Declarative frameworks like constraint programming methods [2, 3] have gained some significant success.", "startOffset": 59, "endOffset": 65}, {"referenceID": 2, "context": "We adopt the itemset mining [3] setting used earlier by Guns et al.", "startOffset": 28, "endOffset": 31}, {"referenceID": 1, "context": "in [2].", "startOffset": 3, "endOffset": 6}, {"referenceID": 3, "context": "In pattern set mining, we are interested to find k\u2212pattern sets [4].", "startOffset": 64, "endOffset": 67}, {"referenceID": 4, "context": "The frequent itemset mining task was first proposed in [5] followed by a large number of algorithms and their application is various fields.", "startOffset": 55, "endOffset": 58}, {"referenceID": 5, "context": "In the the pattern mining problem [6], we are interested to find patterns in the dataset that are correlated [7], discriminative [8], contrast [9], diverse [10] etc.", "startOffset": 109, "endOffset": 112}, {"referenceID": 6, "context": "In the the pattern mining problem [6], we are interested to find patterns in the dataset that are correlated [7], discriminative [8], contrast [9], diverse [10] etc.", "startOffset": 129, "endOffset": 132}, {"referenceID": 7, "context": "In the the pattern mining problem [6], we are interested to find patterns in the dataset that are correlated [7], discriminative [8], contrast [9], diverse [10] etc.", "startOffset": 143, "endOffset": 146}, {"referenceID": 8, "context": "In the the pattern mining problem [6], we are interested to find patterns in the dataset that are correlated [7], discriminative [8], contrast [9], diverse [10] etc.", "startOffset": 156, "endOffset": 160}, {"referenceID": 0, "context": "A large variety of algorithms has been proposed to solve the pattern set mining in the last decade [1].", "startOffset": 99, "endOffset": 102}, {"referenceID": 2, "context": "constraint programming [3].", "startOffset": 23, "endOffset": 26}, {"referenceID": 9, "context": "COMET [11] are used to solve the pattern set mining and related tasks [2].", "startOffset": 6, "endOffset": 10}, {"referenceID": 1, "context": "COMET [11] are used to solve the pattern set mining and related tasks [2].", "startOffset": 70, "endOffset": 73}, {"referenceID": 10, "context": "It opens a huge research area by combining data mining or machine learning tasks with constraint programming [12, 13].", "startOffset": 109, "endOffset": 117}, {"referenceID": 11, "context": "It opens a huge research area by combining data mining or machine learning tasks with constraint programming [12, 13].", "startOffset": 109, "endOffset": 117}, {"referenceID": 8, "context": "In [10], stochastic search algorithms are applied to solve a related problem to find diverse pattern sets.", "startOffset": 3, "endOffset": 7}, {"referenceID": 1, "context": "[2] applied large neighborhood search, using constraint programming platform to solve both of the concept learning task and the diverse pattern set mining problem.", "startOffset": 0, "endOffset": 3}, {"referenceID": 12, "context": "The benchmark datasets that we use in this paper are taken from UCI Machine Learning repository [14] and originally used in [2].", "startOffset": 96, "endOffset": 100}, {"referenceID": 1, "context": "The benchmark datasets that we use in this paper are taken from UCI Machine Learning repository [14] and originally used in [2].", "startOffset": 124, "endOffset": 127}, {"referenceID": 1, "context": "Due to the unavailability of COMET, we were unable to compare the search performance with the large neighborhood search used in [2].", "startOffset": 128, "endOffset": 131}], "year": 2014, "abstractText": "Local search methods can quickly find good quality solutions in cases where systematic search methods might take a large amount of time. Moreover, in the context of pattern set mining, exhaustive search methods are not applicable due to the large search space they have to explore. In this paper, we propose the application of stochastic local search to solve the pattern set mining. Specifically, to the task of concept learning. We applied a number of local search algorithms on a standard benchmark instances for pattern set mining and the results show the potentials for further exploration.", "creator": "LaTeX with hyperref package"}}}