{"id": "1412.6545", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Dec-2014", "title": "KF metamodel formalization", "abstract": "The KF metamodel is a comprehensive unifying metamodel covering the static structural entities and constraints of UML Class Diagrams (v2.4.1), ER, EER, ORM, and ORM2, and intended to boost interoperability of common conceptual data modelling languages. It was originally designed in UML with textual constraints, and in this report we present its formalisations in FOL and OWL, which accompanies the paper that describes, discusses, and analyses the KF metamodel in detail. These new formalizations contribute to give a precise meaning to the metamodel, to understand its complexity properties and to provide a basis for future implementations.", "histories": [["v1", "Fri, 19 Dec 2014 21:56:59 GMT  (599kb,D)", "http://arxiv.org/abs/1412.6545v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB cs.LO", "authors": ["pablo r fillottrani", "c maria keet"], "accepted": false, "id": "1412.6545"}, "pdf": {"name": "1412.6545.pdf", "metadata": {"source": "CRF", "title": "KF metamodel formalization", "authors": ["Pablo Rub\u00e9n Fillottrani", "Maria Keet"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "The interoperability of conceptual data modeling languages has become a necessity in increasingly complex software systems, whether through the integration of legacy systems or the development of innovations. In such cases, one would typically use different conceptual models, such as ORM for ease of use with domain experts and interaction between requirements and data analysis, perhaps an EER model for the back-end database, and UML for each application layer software, which forces the systems analyst to link entities in different conceptual modeling languages. To support this endeavor, we have developed an ontology-driven unified metamodel of UML v2.4.1, EER, ORM, and ORM2, whose static, structural entities have been presented in different conceptual modeling languages. To support this endeavor, we have developed an ontology that unifies the metamodel of UML v4."}, {"heading": "2 FOL Formalization", "text": "The FOL formalization is organized along the sub-figures of the metamodel, where we first give a brief overview (Section 2.1) and then the relations and attributes, as well as the constraints between these units. Starting with Section 2.4, the model constraints are presented, ranging from simple mandatory to the connection constraints of the ORM. Each sub-figure of the metamodel is introduced first, followed by a brief description of the element in the figure and its formalization. We use non-functional FOL with equality, with model-theoretical semantics; for a good overview of the language, see e.g. [Hedman, 2004]. For the convenience of notation, we also use count sizes \u2264 c, \u2265 c and = c for all c > 0 that do not give FOL expressiveness but facilitate the interpretation of the formula. See [Baader et al., 2008] for their translation into traditional FOL."}, {"heading": "2.1 Overview of the Static Entities", "text": "Protecting oneself and the environment is a central concern of the people of the United States. (...) Protecting oneself and the environment is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Protecting oneself is a central concern of the people of the United States. (...) Defending oneself is a central concern of the people of the United States. (...) Defending oneself is a central concern of the people of the United States."}, {"heading": "2.2 Overview of the Constraints", "text": "There are several types of constraints in the languages, and this is reflected in the number of nodes (Unix) (Unix) in the totality of all types of constraints (Unix).In this section, we only show the different types of constraints (Unix) in the totality of all types of constraints (Unix).( In later sections, every constraint (x) in the totality of all types of constraints (x).( Constraint) in the totality of all types of constraints (x).( Constraint) In other sections, every constraint (x) in the totality of constraints (x) in the totality of constraints (x).( constraint).( constraint) in the totality of all types of constraints (x).( constraint).( constraint) in the totality of constraints (x).( x).( constraint (x).constraint (x).constraint (x).constraint (x).constraint (constraint (constraint).constraint (constraint).constraint (x).constraint (x).constraint (x).constraint (constraint).constraint (constraint).constraint (constraint (x).constraint (constraint).constraint (constraint).constraint (constraint).constraint (x).constraint (constraint).constraint (constraint (constraint).constraint (constraint).constraint (constraint).constraint).constraint (constraint).constraint (constraint (constraint).constraint (constraint (constraint).constraint (constraint).constraint (constraint).constraint (constraint).constraint (constraint).constraint (constraint).constraint (constraint (constraint).constraint). (constraint (constraint).constraint"}, {"heading": "2.3 Relationships between Relationship, Role and Entity type", "text": "This section deals in detail with relationships and roles in general, and then with subsumption and aggregation, as well as attributes and value types. The most important entities and constraints related to relationships are described in Figure 3.Formalization of relationship, role, entity type and related constraints \u2022 Composition (1, 2..), (x, y) (Contains (x, y) \u2192 Relationship (x), role (y)), (x) 2y (Contains (x, y)), (x) (Role (x) \u2192 = 1 (y) (Contains (y, x))). We do not need to add asymmetric and irreflexive axioms to formalization, as they are both implicit in the disconnection between relationship and role. Nor is transitivity taken into account, since we are dealing with a \"direct equality.\""}, {"heading": "2.3.1 Subsumption and Aggregation", "text": "The metamodel fragment dealing with subsumption and aggregation is shown in Figure 4 and shows the following logic-based reconstruction."}, {"heading": "Formalization of Subsumption and Aggregation", "text": "\u2022 Relationship (0..), subset and trade union constraints (part), subset (part), partial condition (part), partial condition (part), partial condition (part), partial condition (part), partial condition (part) (part), partial condition (part) (part), partial condition (part) (part) (part), partial condition (part) (part), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), x, partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x), partial condition (x, partial condition (x), partial condition (x), partial condition (x, partial condition (x), partial condition (x), partial condition (x, partial condition (x), partial condition (x), partial condition (x), partial condition (x, x, partial condition (x), partial condition (x), partial condition (x, x, partial condition (x), partial condition (x), partial condition (x, x, partial condition (x), partial condition (x, x, partial condition (x), partial condition (x, x, partial condition (x, x, x, x), partial condition (x), partial condition (x, partial condition (x, x, x, x (x, x), partial condition (x, x), partial condition (x, x, partial condition (x, x, partial condition (x, x, x, x, x, x, x, x, x, x, x (x, x), x"}, {"heading": "2.3.2 Attributes and Value Types", "text": "The metamodel fragment of attributes and ORMs counterpart, value types, is shown in Figure 5 and shows the following logic-based reconstruction."}, {"heading": "Formalization of Attributes and Value Types", "text": "(1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (1), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x), Relation (x, Relation (x), (x), Relation (x), Relation (x, x, (x), (x, x, x, x, (x, x, (x, x, x, x, x, x, x, (x, x, (x, x, x, x, (x, x, x, x, x, x, x, x, (x, x,), (x, x,), (x,), (x,), (x, (x, x, (x,),), (, (x,), (x,), (, (x,), (x,), (, (x,), (, (,), (x, (x, (x,), (, (x,), (x,), (, (,), (, (x,), (, (,), (,),), (, (,), (, (, (,), (, (,),), (, (,"}, {"heading": "2.4 Mandatory Constraints", "text": "From this section on, we turn to constraints that can be mapped to the selected conceptual modeling languages. The first deals with the different prescribed constraints as shown in Figure 6."}, {"heading": "Formalization of Mandatory Constraints", "text": "\u2022 Relation (0.., 1..), (x) (MandatoryConstraint (x), (y) (role (y), (x, y))) \u2022 Relation (0.., 2..), (x) (Disjunctive Mandatory (x), (role (y), (role (y), (deklaredOn (x, y)))) \u2022 Relation (0.. 1, 1), (x) (mandatory (x), (= 1 (y) (role (y)), (role (x, y)), (role (x), (\u2264 1 (y) (deklaredOn), (y), (role)) \u2022 Restriction of relationships that contain roles with the same mandatory force (y), int (y), int (not included in the diagram (x, y, v, w, y), (role), y, (role), y, (role), y, (role), c, int (not included), constraint (not included in the diagram (x, y, y, y, y), y (role), y (role), y (role), y, y, y (role), y, y (role), y, y (role), y, y, y (role), y, y, y, y, y, y (role), y (role), x), (x) (x), (role) (x) (Disjunctive MandatoryConstraint (x), x), (role (x), y), y (role, y), y (role, y), x), (role (x), x), x), (role, x, x), (role, x), x, (role, x), (role, x, x), (role, x, x), (role, x), x, x, x, (role, x), x, x, (role, x, x), (role, x, x, x), (role, x, x, x, x, x, x, (role, x, x, x, x), (role, x, x), x, ("}, {"heading": "2.5 Uniqueness Constraints", "text": "The second key constraint in languages is uniqueness, as shown in Figure 7, which is formalized as follows."}, {"heading": "Formalization of Uniqueness Constraints", "text": "\u2022 Relation (0.., 1..) \u2022 Relation (x) (InternalUniquenessConstraint (x) \u2022 Relation (y) (role (y) \u2022 ExternalUniquenessConstraint (x, y)) \u2022 ExternalUniquenessConstraint (1, 0; 2.. UniquenessConstraint (z), third textual constraint (x, y, z) (ExtUniquenessConstraint (x, z) \u2022 ExternalessConstraint (x) \u2022 Relation (z) (z, y) \u2022 Constraint (z) \u2022 Externalessalz (z) \u2022 Externalessalz (Uniternalz) \u2022 Externalessalz (Uniternalz) \u2022 ExternalessConstraint (x, z) \u2022 Externalint (x) \u2022 (Externalint (Externalz) \u2022 (Externalz) \u2022 (Externalz) \u2022 (Externalz) \u2022 (Externalz) \u2022 (Externalint, Externalz (Externalz) \u2022 (Externalz)"}, {"heading": "2.6 Identification Constraints", "text": "The meta-model fragment on identifiers (Figure 8) deals extensively, but does not deal with definitions of identity (see [Keet, 2011] for a brief discussion on this topic). How identification is treated in languages is formalized as follows."}, {"heading": "Formalization of Identification Constraints", "text": "\u2022 Relation (x), 1), 2 (x), 3 (x), 3 (x), 4 (x), 4 (x), 4 (x), 4 (x), 5 (x), 5 (x), 5 (x), 5 (x), 6 (x), 6 (x), 6 (x), 7 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (8, 8, 8, 8 (x, 8, 8, 8, 8 (x), 8 (x, 8, 8, 8, 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x), 8 (x, 8, 8 (x), 8 (x), 8 (x, 8, 8, 8 (x), 8 (x), 8 (x, 8, 8, 8 (x), 8 (x), 8 (x), 8 (x, 8, 8, 8 (x), 8 (x), 8 (x, 8, 8, 8 (x), 8 (x, 8, 8, 8 (x), 8 (x), 8 (x, 8, 8, 8 (x), 8 (x, 8), 8 (x, 8 (x), 8 (x), 8 (x), 8 (x, 8, 8 (x, 8, 8 (x), 8 (x), 8 (x, 8, 8 (x), 8 (x, 8), 8 (x, 8 (x), 8 (x), 8 (x, 8 (x), 8 (x), 8 (x, 8 (x, 8), 8 (x, 8 (x), 8 (x, 8), 8 (x, 8 (x), 8 (x), 8 (x"}, {"heading": "2.7 Cardinality Constraints", "text": "The fourth important limitation of languages is the limitation of cardinality; see Figure 9, formalized below."}, {"heading": "Formalization of Cardinality Constraints", "text": "\u2022 Tripartite relationship (0.., 0.., 0.., 0.., 0.., 1) (x, y, z) (CardR (x, y, z) (AttributiveProperty (x, y, z) (AttributiveProperty (x)))) \u2022 Tripartite relationship (0.., 0.., 1) (CardO (x, y, z) (AttributiveProperty (x) (ObjectType (y) (y) (CardinalityConstraint (z))) \u2022 Tripartite relationship (0.., 1) (x, y, z) (Frequency (x, z) (Relationship (x) (y) (y) (CompoundCardinalityConstraint (y) (, CardinalityConstraint (z) (z))))."}, {"heading": "2.8 Value type, Role and Attribute Value constraints", "text": "The formalization of value types and role and attribute constraints is quite elegant compared to the difficulty of drawing this metamodel fragment (Figure 10), because there are repetitive components that are easier to capture in FOL."}, {"heading": "Formalization of Value type, Role and Attribute Value Constraints", "text": "\u2022 eternal relationships (1, 0..), xor (x, w, z) (ConstrainingValues (x, y, z) \u2192 ((ValueTypeConstraint (x, z))) (ValueProperty (y))) (RoleValueRange (z))) (x) (ValueTypeConstraint (x) (AttributeValueConstraint (x, z)) (ValueEnumeration (z)) (ValueRange (z))) (x) (ValueRange (y, z) (ValueConstraint (x, z) (ConstrainingValue (x, z) (ValueValueValue) (x), ValueConstraint (x), Constraint (x), Valuex ()."}, {"heading": "2.9 Value comparison constraints", "text": "The Metamodel fragment for benchmark constraints is shown in Figure 11. (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac x) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac x) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac q) (\u00ac x) (\u00ac x) (x, y) (x) (x) (x) (x, y) (First (x, y) (First (x, y) (x) (ValueComparisonConstraint (x) (x) (x) (x) (x) (x) (x) (x) (x, y) (x) (x) (x), x (x) (x) (x) (x) (x) (x) (x) (x) (x) (x) (x), x (x (x) (x) (x) (x) (x) (x (x) (x) (x), x (x) (x) (x) (x) (x) (x) (x) (x (x), x (x) (x) (x (x) (x) (x) (x (x), x (x) (x (x) (x) (x) (x (x) (x) (x (x), x (x (x) (x) (x (x) (x (x) (x) (x (x) (x (x) (x) (x (x) (x (x), x (x) (x (x) (x) (x (x) (x) (x (x) (x (x), x (x (x) (x) (x (x) (x) (x) (x (x) (x), x (x) (x (x) (x) (x (x) (x) (x (x) (x) (x) (x (x) (x) (x) (x) (x (x) (x) (x) (x) (x) (x) (x) (x (x) (x (x) (x) (x) ("}, {"heading": "2.10 Role and Relationship constraints", "text": "Boundaries between the sexes are represented in Figure 12, and they are represented in Figure 13 and their formalization. (This section concludes with the metamodeling fragment for ORM's Jointness Constraints (4..). (Figure 14 and formalized at the end of this section). (Figure 13 and its formalization. (Figure) Boundaries for Equality and Disjointness \u2022 four relationships DelaredOn (0..). (Figure 14 and formalized at the end of this section). (Figure 13 and its formalization.) Boundaries for Equality and Disjointness \u2022 four relationships DelaredOn (0..). (Figure 14 and formalized at the end of this section.). (Figure 13 and its formalization. (Figure). (Figure). (Boundaries and Disjointness Constraints. (Boundaries). (Boundaries). (Boundaries). (Figure 13 and their formalization. (Figure 13 and their formalization.). (Figure.). (Boundaries and Disjointness Constraints. (Boundaries). (Boundaries). (Figure 14 and formalized at the end of this section. (Figure). (Figure 13 and formalized at the end of this section.). (Figure 13 and their formalization. (Figure.). (Boundaries. (Figure.). (Boundaries. (Figure.). (Boundaries. (..........................). (Boundaries. (..............). (.. (...........)... (.......... (.........)."}, {"heading": "Formalization of Relationship Constraints", "text": "\u2022 Relation (0.. 4, 2) (x) (RelationshipConstraint (x) \u2022 two relations (0.. 1) (Participant (x, y)) (Participant (x, y) (Role (x, y) (Participant (y, x))) \u2022 two relations (0.. 1), subset, union (x, y) (Participant (x, y) (Participant (x, y) (RelationshipConstraint (x)) \u2022 (First (x, y)) \u2022 (First (x, y))) (First (x, y)) \u2022 Constraint (x, y) \u2022 Constraint (x, y) (First (x, y) (First (x, y), Second (z) \u2022 RelationshipConstraint (z) \u2022 Constraint (x, y) (First (x, y), Second (z)"}, {"heading": "Formalization of Join Constraints", "text": "\u2022 Tripartite relationship (0.., 1, 0..) (x, y, z) (Connect (x, y, z) (Relationship (x, z) (role (z))) (JoinConstraint (y)) (x) (JoinConstraint (x, y) (JoinConstraint (y, z)) \u2022 Relationship (3.. 4, 0..) and relationship (4, 0..) (ParticipatesIn (x, y) (ParticipatesIn (x) (JoinConstraint (y) \u2192 (JoinConstraint (y) (Relationship (x) (Role (x))) (x) (JoinConcipatesIn (y) (y) (RelationesIn) (y) (Constraint (Constray) (Constray) (Constray) (Constray) (Constray) (Constray (Constray) (Constray) (Constray) (Constray) (Constray) (Constray) (Constray) (Constray (Constray) (Constray) (Constray) (Constray (Constray) (Constray) (Constray) (Constray) (Constray (Constray) (Constray) (JoinConstraint) (JoinConstraint) (JoinConstraint) (JoinConstraint) (JoinConstraint) (x) (JoinConstraint) (JoinConstraint) (JoinConstraint) (Constraint)"}, {"heading": "2.11 On the complexity of the FOL formalization", "text": "We have complex formulas in five variables that count quantifiers and ternary predicates. However, even if we reify ternary relationships, the complexity of deciding whether a given formula follows an instantiated meta-model is similar to the general satisfaction problem. However, problematic formulas are part of the textual limitations of numbers; they do not come from the graphical language of UML class diagrams. Thus, if we remove from the meta-model all formulas designated with a \"BA,\" we get a lighter formalization described in C2, the fragment of function-free FOL with only two variables and counting quantifiers. This fragment is not only decidable, but also shown in NEXPTIME, as in [Pratt-Hartmann, 2005]. Most description logics are also subsets of C2. This lighter version of the meta model is the basis for the version of OWL 2 described in the next section."}, {"heading": "3 OWL 2 version of the metamodel", "text": "In fact, most of them will be able to move into a different world, in which they are able to move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they live, in which they, in which they, in which they live."}, {"heading": "4 Final remarks", "text": "We presented the FOL formalization of the KF metamodel, which serves as a unifying metamodel for the static structural units of UML class diagrams (v2.4.1), ER, EER, ORM, and ORM2. It should be noted that this does indeed require FOL. Notwithstanding this, and with regard to implementations, we have also created an OWL-2 DL version of it, which takes into account some modeling decisions, such as a pattern for the representation of n-arias. The original use of formalization was demonstrated in [Fillottrani and Keet, 2014], where the constraints presented between units lead to validation testing of claims between models and model transformations."}, {"heading": "Acknowledgments", "text": "This work is based on research supported by the National Research Foundation of South Africa (Project UID90041) and the Argentine Ministry of Science and Technology. Any opinions, findings and conclusions or recommendations expressed in this material are those of the author and therefore the NRF accepts no liability for them."}], "references": [{"title": "Reasoning over extended ER models", "author": ["Artale et al", "A. 2007] Artale", "D. Calvanese", "R. Kontchakov", "V. Ryzhikov", "M. Zakharyaschev"], "venue": "Proceedings of the 26th International Conference on Conceptual Modeling (ER\u201907),", "citeRegEx": "al. et al\\.,? \\Q2007\\E", "shortCiteRegEx": "al. et al\\.", "year": 2007}, {"title": "The Description Logics Handbook \u2013 Theory and Applications", "author": ["Baader et al", "F. 2008] Baader", "D. Calvanese", "D.L. McGuinness", "D. Nardi", "P.F. PatelSchneider"], "venue": null, "citeRegEx": "al. et al\\.,? \\Q2008\\E", "shortCiteRegEx": "al. et al\\.", "year": 2008}, {"title": "The entity-relationship model\u2014toward a unified view of data", "author": ["Chen", "P.P. 1976] Chen"], "venue": "ACM Transactions on Database Systems,", "citeRegEx": "Chen and Chen,? \\Q1976\\E", "shortCiteRegEx": "Chen and Chen", "year": 1976}, {"title": "Conceptual model interoperability: a metamodel-driven approach", "author": ["Fillottrani", "Keet", "P. 2014] Fillottrani", "C. Keet"], "venue": "Proceedings of the 8th International Web Rule Symposium (RuleML\u201914),", "citeRegEx": "Fillottrani et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Fillottrani et al\\.", "year": 2014}, {"title": "Information modeling and relational databases", "author": ["Halpin", "Morgan", "T. 2008] Halpin", "T. Morgan"], "venue": null, "citeRegEx": "Halpin et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Halpin et al\\.", "year": 2008}, {"title": "Exploring reasoning with the DMOP ontology", "author": ["Keet et al", "C. 2014] Keet", "C. d\u2019Amato", "Z. Khan", "A. Lawrynowicz"], "venue": "Workshop on Ontology Reasoner Evaluation (ORE\u201914),", "citeRegEx": "al. et al\\.,? \\Q2014\\E", "shortCiteRegEx": "al. et al\\.", "year": 2014}, {"title": "Enhancing identification mechanisms in UML class diagrams with meaningful keys", "author": ["C.M. Keet"], "venue": "[Keet,", "citeRegEx": "Keet,? \\Q2011\\E", "shortCiteRegEx": "Keet", "year": 2011}, {"title": "Toward an ontologydriven unifying metamodel for UML class diagrams, EER, and ORM2", "author": ["Keet", "Fillottrani", "C.M. 2013] Keet", "P.R. Fillottrani"], "venue": "32nd International Conference on Conceptual Modeling (ER\u201913),", "citeRegEx": "Keet et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Keet et al\\.", "year": 2013}, {"title": "An ontology-driven unifying metamodel of UML Class Diagrams, EER, and ORM2", "author": ["Keet", "Fillottrani", "C.M. 2014] Keet", "P.R. Fillottrani"], "venue": "Data & Knowledge Engineering,", "citeRegEx": "Keet et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Keet et al\\.", "year": 2014}, {"title": "OWL 2 web ontology language structural specification and functional-style syntax", "author": ["Motik et al", "B. 2009] Motik", "P.F. Patel-Schneider", "B. Parsia"], "venue": "W3c recommendation,", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}, {"title": "A library of ontology design patterns: reusable solutions for collaborative design of networked ontologies. NeOn deliverable D2.5.1", "author": ["Presutti et al", "V. 2008] Presutti", "A. Gangemi", "S. David", "G.A. de Cea", "M.C. Surez-Figueroa", "E. Montiel-Ponsoda", "M. Poveda"], "venue": "NeOn Project,", "citeRegEx": "al. et al\\.,? \\Q2008\\E", "shortCiteRegEx": "al. et al\\.", "year": 2008}, {"title": "Entity relationship model", "author": ["Song", "Chen", "2009] Song", "I.-Y", "P.P. Chen"], "venue": "Encyclopedia of Database Systems,", "citeRegEx": "Song et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Song et al\\.", "year": 2009}, {"title": "OWL to English: a tool for generating organised easily-navigated hypertexts from ontologies", "author": ["Third et al", "A. 2011] Third", "S. Williams", "R. Power"], "venue": "poster/demo paper, Open Unversity UK. 10th International Semantic Web Conference", "citeRegEx": "al. et al\\.,? \\Q2011\\E", "shortCiteRegEx": "al. et al\\.", "year": 2011}], "referenceMentions": [{"referenceID": 6, "context": "The metamodel fragment concerning identifiers (Figure 8), while comprehensive in its treatment, does not deal with definitions of identity (see [Keet, 2011] for a brief discussion on this topic).", "startOffset": 144, "endOffset": 156}, {"referenceID": 8, "context": "It has been shown that using OWL 2\u2019s new feature of inverse object properties results in better reasoner performance [Keet et al., 2014].", "startOffset": 117, "endOffset": 136}], "year": 2014, "abstractText": "The KF metamodel [Keet and Fillottrani, 2013, Keet and Fillottrani, 2014] is a comprehensive unifying metamodel covering the static structural entities and constraints of UML Class Diagrams (v2.4.1), ER, EER, ORM, and ORM2, and intended to boost interoperability of common conceptual data modelling languages. It was originally designed in UML with textual constraints, and in this report we present its formalisations in FOL and OWL, which accompanies the paper that describes, discusses, and analyses the KF metamodel in detail. These new formalizations contribute to give a precise meaning to the metamodel, to understand its complexity properties and to provide a basis for future implementations.", "creator": "LaTeX with hyperref package"}}}