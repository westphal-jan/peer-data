{"id": "1501.07676", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jan-2015", "title": "Towards Resolving Software Quality-in-Use Measurement Challenges", "abstract": "Software quality-in-use comprehends the quality from user's perspectives. It has gained its importance in e-learning applications, mobile service based applications and project management tools. User's decisions on software acquisitions are often ad hoc or based on preference due to difficulty in quantitatively measure software quality-in-use. However, why quality-in-use measurement is difficult? Although there are many software quality models to our knowledge, no works surveys the challenges related to software quality-in-use measurement. This paper has two main contributions; 1) presents major issues and challenges in measuring software quality-in-use in the context of the ISO SQuaRE series and related software quality models, 2) Presents a novel framework that can be used to predict software quality-in-use, and 3) presents preliminary results of quality-in-use topic prediction. Concisely, the issues are related to the complexity of the current standard models and the limitations and incompleteness of the customized software quality models. The proposed framework employs sentiment analysis techniques to predict software quality-in-use.", "histories": [["v1", "Fri, 30 Jan 2015 06:51:42 GMT  (402kb)", "http://arxiv.org/abs/1501.07676v1", "9 pages, 4 figures, Journal of Emerging Trends in Computing and Information Sciences, Vol. 5, No. 11, November 2014"]], "COMMENTS": "9 pages, 4 figures, Journal of Emerging Trends in Computing and Information Sciences, Vol. 5, No. 11, November 2014", "reviews": [], "SUBJECTS": "cs.SE cs.CL", "authors": ["issa atoum", "chih how bong", "narayanan kulathuramaiyer"], "accepted": false, "id": "1501.07676"}, "pdf": {"name": "1501.07676.pdf", "metadata": {"source": "CRF", "title": "Towards Resolving Software Quality-in-Use Measurement Challenges", "authors": ["Issa Atoum", "Chih How Bong", "Narayanan Kulathuramaiyer", "Kota Samarahan", "Sarawak", "Malaysia"], "emails": [], "sections": [{"heading": null, "text": "applications, mobile service-based applications and project management tools. Although to our knowledge there are many software quality models, the challenges associated with measuring software quality in the application are not examined in factory surveys. This paper contains two main contributions: 1) presents important problems and challenges in measuring software quality in the application in the context of the ISO-SQuaRE series and related software quality models, 2) presents a novel framework that can be used to predict software quality in the application, and 3) presents preliminary results of predicting software quality in the application. In summary, the problems relate to the complexity of current standard models and the limitations and incompleteness of customized software quality models. The proposed framework uses mood analysis techniques to predict software quality in the application."}, {"heading": "1. INTRODUCTION", "text": "With thousands of software being published online, it is essential for users to find the software that meets their stated or implicit needs. Users often strive for better software quality. Garvin [1] identified five views / approaches to quality. The closest definition in this essay is the user-based definition that \"meets customer needs.\" If the customer is satisfied, then the product or service is of good quality. It has been implemented in mobile applications [2] - [4] and web applications [5] - [7]. Software quality can be conceptualized from three aspects: the quality characteristics, the quality model and the software quality requirements. A quality feature is \"category of software quality attributes based on software qualities\" [8, p. 9]. Quality requirements are what the user needs in the software, such as performance, user interface or product quality requirements, and the quality characteristics related to each other."}, {"heading": "1.1 Problem Statement", "text": "Many challenges that need to be addressed in order to systematically measure QinU. However, they are not identified or explained in current literature reviews of the QinU software. To our knowledge, this is the first work that specifically identifies and explains the problems in measuring QinU. 2) Insufficient research on other possible research directions to address the first problem. To our knowledge, little work is aimed at solving the QinU problem [10]."}, {"heading": "1.2 Research Contributions", "text": "In short, most of the challenges in ISO standard models are related to the complexity and incompleteness of the documents. On the other hand, custom quality models are subject to incomplete models designed for their own specific needs; a novel framework for predicting software QinU from software reviews is proposed; given the problems associated with QinU measurement, a framework for solving these problems is presented; the framework is based on sentiment analysis, an emerging branch of Natural Language Processing; sentiment analysis or opinion-mining objectives for analyzing textual user judgments about products or services [11], [12] First major software quality-related models are illustrated; then, the challenges of quality measurement are explained; next, a proposed approach is presented; and finally, the paper is completed."}, {"heading": "2. SOFTWARE QUALITY-IN-USE MODELS", "text": "There has been a lot of work in the field of software quality models, but to our knowledge no research has been done to summarize the main problems in measuring quality in the application. Measurement of software quality in the application can be divided into two main frames: the standard and the customized model frames."}, {"heading": "2.1 Standard Frameworks", "text": "There are many standards that can support software quality, but many of them are more like checklist guidelines. For example, the ISO 9000 family, which may not be used for software, has been criticized in the literature [13]. ANSI / IEEE 730-2002 [14] supports quality assurance plans. ISO / IEC 15504 [15], or as it is known as the Software Process Improvement and Capability Determination (SPICE), is a set of technical standards documents for the computer software development process and associated business management functions. These standards are not designed to take into account the quality in application or the specific characteristics of software products. Recently, the Software Product Quality Requirements and Evaluation (SQuaRE) ISO standards series is a result of the merging of ISO / IEC 9126 and the ISO / IEC 14598 series of standards. The purpose of SQuaE standards is to support the development and evaluation of software requirements and the evaluation of Q50."}, {"heading": "2.2 Customized Software Quality Models", "text": "Below are some related models grouped into logical groups.2.2.1 Hierarchical models These models link different quality characteristics at different levels, which are eventually linked to product quality at the root. Activity-based models can adopt these models to measure software quality. Activity-based models establish a correlation between system characteristics and the activities of different stakeholders. Activity-based models typically track development or testing activities, not user activities. Famous hierarchical models are McCall's quality model [16], Boehm's quality model [17], Dromey's quality model [18] and the approach to software quality in development (SQUID) [19]."}, {"heading": "2.2.2 One-Quality-Aspect Models", "text": "These models measure an aspect of software equality. This category includes predictive quality models [20] - [23], quality metric models [24] - [27] and software reliability models. Predictive quality models [20] - [23] use product characteristics or their characteristics and product users to predict the quality of the software. Using ideas in COCOMO [20] Constructive Quality Model [21], [22] (COQUAMO) helps project managers manage, evaluate and predict the product during the development lifecycle [28] or program-dependent [29] [30]. Software reliability models are aimed at evaluating the quality of a particular quality metric, quality assurance or prediction. Many researchers have shown that these metrics are not specific error indicators [28], performance code dependent [28] or program dependent [30]. Software reliability models aim to measure the reliability of software systems based on these error profiles [31], as they are examples of such software intensity measurements."}, {"heading": "2.2.3 Provider-Specific Models", "text": "There are specific quality models for specific programming languages or implementation platforms. FURPS Quality Model was introduced by Grady [33] and later extended and owned by IBM Rational Software [34] - [36]. Quamoco Product Quality Model [37] was originally developed for German software and is a multi-purpose quality model based on ISO 25010."}, {"heading": "3 QUALITY-IN-USE MEASUREMENT CHALLENGES", "text": "Below are the main challenges in measuring software quality in general, measuring quality of use using standard frames, and measuring quality of use using custom models."}, {"heading": "3.1 General Challenges", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1.1 Task Measurement", "text": "To measure QinU, you need to agree with the user of the software on a set of tasks that he / she must perform to achieve a pragmatic goal (\"achieving goals\" to accomplish the task, such as paying an invoice), which means that the user should be included in the specification of quality requirements that may not always apply. Other problems associated with task measurement include the variety of tasks from one software function to another and from software to another. For example, a task to open a file for writing is different from the task of removing special characters from a text file. Worse, defining the tasks themselves is a major challenge, so hedonic tasks (the \"goals\") that imply the user's satisfaction cannot be measured directly."}, {"heading": "3.1.2 The Web Software Development Life Cycle", "text": "Users of publicly available online software are never asked to be part of the lifecycle of system development, but usually developers and software developers start from the needs of the users. In cases where software is designed to be used by global users such as operating systems or antivirus software, software manufacturers must find other ways to gather the needs of users. However, it could be a disaster if users start using the software - not because of software errors, but because users are not satisfied."}, {"heading": "3.1.3 Dynamic Customer Needs", "text": "Customer needs are dynamic and may change from time to time, so quantitative measures may not be appropriate. Ishikawa [38] notes, \"International standards established by the International Organization for Standardization (ISO) or the International Electrical Technical Commission (IEC) are not perfect. They contain many shortcomings. Consumers may not be satisfied with a product that meets these standards. Consumer requirements change from year to year, and even frequently updated standards cannot keep pace with consumer requirements.\" These needs are usually solved by building new software versions, but the software could become complicated or flawed as additional features are added that were not planned in advance. If users are included in advance, these needs are taken into account."}, {"heading": "3.2 Challenges Related to Standard Quality Frameworks", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.2.1 Quality Models Critiques", "text": "There are problems inherent in quality models. A comprehensive study of software quality models [39] identified criticisms of many software quality models; their purpose is unclear, users are not satisfied with how to use quality models, and there is no uniform terminology between the different models. Masip etal. [40] noted that the user experience is implicit in ISO 25010 but not defined."}, {"heading": "3.2.2 Evaluation Requirements", "text": "Taking into account the mathematical formulas of qualityin-use in the ISO 25022 standard and the proposed methods for measuring quality in the application, quality managers find it difficult to calculate the effectiveness, task fulfilment, effectiveness of the task and error frequency. Furthermore, the integration of related quality processes of different standards (Fig. 1, Fig. 2) is a problem for quality engineers. The reason for this problem is the need for experienced engineers, who in the standard models receive only limited information on how to adapt them, especially for small businesses. An extension of ISO 25010 Lew et al. [41] proposes to add data quality within ISO 25010 instead of being separate."}, {"heading": "3.2.3 QinU Environmental Factors", "text": "While the Quality-in-Use model attempts to measure the interaction of the human computer system, there are many factors that influence the quality of use according to the ISO QinU model: information system, target computer system, target software, target data, usage environment and user type (primary, secondary or indirect user). Measuring or estimating these factors is a complex process."}, {"heading": "3.3 ChallengesRelated to Customized Models", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.3.1 Limitation of Quality-in-use Models", "text": "Although there are many software quality models such as McCall, Boehm, Dromey and FURUPS [16], [18], most of them target the characteristics of the software product or process and do not correspond to the software quality in the application or require no manual involvement of the user [42], [43]. McCabe (1976) and Halstead (1977) have been used since the 1970s, while Chidamber & Kemerer metrics [26] initiated their use in 1994. These metrics depend on the object-oriented programming style [26] compared to the approaches of process programming [24], [25]. Furthermore, the results of the COQUAMO model concluded that there were no software product metrics that would generally be good predictors for the quality of the end product. Therefore, metrics used in measuring product quality cannot be used to directly measure quality in the application."}, {"heading": "4. PROPOSED FRAMEWORK", "text": "Opinion Mining, or Sentiment Analysis, is an emerging field of research based on Natural Language Processing that aims to analyze textual user judgments about products or services [11], [12]. Reviews of snippets of text are good sources for users to decide whether to purchase software, and they are a goldmine for product providers. Obviously, the average human reader will have difficulty accurately summarizing relevant information and identifying opinions contained in reviews of a product. In addition, human analysis of textual information is subject to considerable distortions resulting from preferences and different understandings of written text expressions. Therefore, Opinion Mining offered an alternative to identify important ratings and opinions in order to answer users \"questions [44], [45]."}, {"heading": "4.1 Proposed Quality-in-use Prediction Framework", "text": "This year, it has reached the point where it will be able to put itself at the top of the list, \"he told the German Press Agency.\" We have never lost so much time, \"he said.\" We have never lost so much time as this year, \"he said.\" We have never lost so much time as this year. \""}, {"heading": "5. PRELIMINARY RESULTS", "text": "First the experiments with the F-measurement are shown, then the top 5 topic words."}, {"heading": "5.1 F-measur Results", "text": "To illustrate the validity of this work, 600 software entries on QinU topics were labeled. Afterwards, 3 algorithms were executed: the Multinomial Naive Bayes (NB) Measurement Algorithm [55], The Multiclass SVM [56] and the Latent Semantic Analysis [57]. These methods were able to detect a test theorem topic (illustrated in step P2 of Fig.3). The experiment was carried out with triple cross-validation. Fig. 4 shows the F-measure of these measures. The figure shows that the sentence length has a direct influence on the final F-measure. Short sentences tend to have less common words and therefore a low F-measure."}, {"heading": "5.2 Top Five Keywords", "text": "Table 2 shows the top 5 keywords in each topic area. The table shows that the keywords effectiveness are about the execution of the work, the keywords efficiency are about the use of resources. The risk keywords are about the possibility of data loss."}, {"heading": "6. RELATED WORKS", "text": "Most of these works use language semantics to extract features such as nouns and noun sentences along with their frequencies, which are subject to predefined thresholds. Qiu et al. [45], [61] suggested extracting both features and opinions by disseminating information between them by means of grammatical syntactic relations. Leopairote, Surarerks and Prompoon [10] suggest a model that can extract and summarize software evaluations to predict software \"quality-in-use.\" The model is based on a manually constructed ontology of ISO 9126 \"qualityin-use\" keywords and Word Net 3.0 synonym expansion. We consider the work of [10], which is closest to this paper. The difference to the proposed work is that the proposed framework uses word similarity and kinship instead of rule-based classifications and classifications."}, {"heading": "7. CONCLUSION", "text": "Quality-in-use represents software quality from a user's point of view. This paper presents the most important questions when measuring software quality in the application. Quality-in-use can be measured using the standard SQuaRE series, while many features of software quality are scattered across many custom software quality models. Measuring quality-in-use is a challenge due to the complexity of current standard models and the incompleteness of other related custom models. The standpoint of software users is difficult to implement in advance within the software lifecycle, especially for hedonic tasks. This paper suggests editing software reviews in order to maintain software quality in the application."}, {"heading": "8. ACKNOWLEDGMENT", "text": "This study was partially supported by the University of Malaysia Sarawak'Zamalah Graduate Scholarship and grant ERGS / ICT07 (01) / 1018 / 2013 (15) Minister of Education Malaysia."}], "references": [{"title": "What does product quality really mean", "author": ["D.A. Garvin"], "venue": "Sloan Manage. Rev., vol. 26, no. 1, pp. 25\u2013 43, 1984.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1984}, {"title": "Attributes for the quality in use of mobile government systems", "author": ["N.B. Osman", "I.M. Osman"], "venue": "2013 International Conference on Computing, Electrical and Electronics Engineering (ICCEEE), 2013, pp. 274\u2013279.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "A New Methodology (CON-INFO) for Context- Based Development of a Mobile User Interface in Healthcare Applications", "author": ["R. Alnanih", "O. Ormandjieva", "T. Radhakrishnan"], "venue": "Pervasive Health SE - 13, 1st ed., A. Holzinger, M. Ziefle, and C. R\u00f6cker, Eds. London: Springer London, 2014, pp. 317\u2013342.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "A model of qualityin-use for service-based mobile ecosystem", "author": ["H.H.J. La", "S.D.S. Kim"], "venue": "2013 1st International Workshop on the Engineering of Mobile-Enabled Systems (MOBS), 2013, pp. 13\u201318.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Evaluating the perceived and estimated quality in use of Web 2.0 applications", "author": ["T. Orehova\u010dki", "A. Grani\u0107", "D. Kermek"], "venue": "J. Syst. Softw., vol. 86, no. 12, pp. 3039\u20133059, Dec. 2013.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Development of a Methodology for Evaluating the Quality in Use of Web 2.0  Applications", "author": ["T. Orehova\u010dki"], "venue": "Human-Computer Interaction \u2013 INTERACT 2011 SE - 38, vol. 6949, P. Campos, N. Graham, J. Jorge, N. Nunes, P. Palanque, and M. Winckler, Eds. Springe rBerlin Heidelberg, 2011, pp. 382\u2013385.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "SWET-QUM: a quality in use extension model for semantic web exploration tools", "author": ["J.L. Gonz\u00e1lez", "R. Garc\u00eda", "J.M. Brunetti", "R. Gil", "J.M. Gimeno"], "venue": "Proceedings of the 13th International Conference on Interacci\\\u00f3n Persona-Ordenador, 2012, pp. 15:1\u201315:8.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "ISO/IEC 25000:2014, Software and system engineering--Software product Quality Requirements and Evaluation (SQuaRE)--Guide to SQuaRE", "author": ["ISO"], "venue": "Geneva, Switzerland, 214AD.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 0}, {"title": "ISO/IEC 25010: 2011, Systems and software engineering--Systems and software Quality Requirements and Evaluation (SQuaRE)-- System and software quality models", "author": ["ISO/IEC"], "venue": "International Organization for Standardization, Geneva, Switzerland, 2011.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Software quality in use characteristic mining from customer reviews", "author": ["W. Leopairote", "A. Surarerks", "N. Prompoon"], "venue": "2012 Second International Conference on Digital Information and Communication Technology and it\u2019s Applications (DICTAP), 2012, pp. 434\u2013439.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Lexicon-based methods for sentiment analysis", "author": ["M. Taboada", "J. Brooke", "M. Tofiloski", "K. Voll", "M. Stede"], "venue": "Comput. Linguist., vol. 37, no. 2, pp. 267\u2013307, Jun. 2011.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Topic sentiment mixture: modeling facets and opinions in weblogs", "author": ["Q. Mei", "X. Ling", "M. Wondra", "H. Su", "C. Zhai"], "venue": "Proceedings of the 16th international conference on World Wide Web, 2007, pp. 171\u2013180.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2007}, {"title": "A critical look at ISO 9000 for software quality management", "author": ["D. Stelzer", "W. Mellis", "G. Herzwurm"], "venue": "Softw. Qual. J., vol. 6, no. 2, pp. 65\u2013 79, 1997.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1997}, {"title": "ISO/IEC 15504", "author": ["R.M. Poston", "\u201cIEEE 730: a guide for writing successful SQA plans", "\u201d IEEE Softw.", "pp. 86\u201388", "1985. K. El-Emam", "I. Garro"], "venue": "Int.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 0}, {"title": "Factors in software quality :Preliminary Handbook on Software Quality for an Acquisition Manager", "author": ["J.A. McCall", "P.K. Richards", "G.F. Walters"], "venue": "General Electric, National Technical Information Service., Sunnyvale,CA, 1977.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1977}, {"title": "A model for software product quality", "author": ["R.G. Dromey"], "venue": "IEEE Trans. Softw. Eng., vol. 21, no. 2, pp. 146\u2013162, Feb. 1995.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1995}, {"title": "The SQUID approach to defining a quality model", "author": ["B. Kitchenham", "S. Linkman", "A. Pasquini", "V. Nanni"], "venue": "Softw. Qual. J., vol. 6, no. 3, pp. 211\u2013233, 1997.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1997}, {"title": "Software engineering economics", "author": ["B.W. Boehm"], "venue": "IEEE Trans. Softw. Eng., no. 1, pp. 4\u201321, 1984.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1984}, {"title": "Towards a constructive quality model. Part 1: Software quality modelling, measurement and prediction", "author": ["B. Kitchenham"], "venue": "Softw. Eng. J., vol. 2, no. 4, pp. 105\u2013126, 1987.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1987}, {"title": "Towards a constructive quality model. Part 2: Statistical techniques for modelling software quality in the ESPRIT REQUEST project", "author": ["B. Kitchenham", "L. Pickard"], "venue": "Softw. Eng. J., vol. 2, no. 4, pp. 114\u2013126, 1987.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1987}, {"title": "Bayesian analysis of software cost and uality models", "author": ["D.-C. Sunita"], "venue": "UNIVERSITY OF SOUTHERN CALIFORNIA, 1999.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}, {"title": "A complexity measure", "author": ["T.J. McCabe"], "venue": "IEEE Trans. Softw. Eng., no. 4, pp. 308\u2013320, 1976.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1976}, {"title": "Elements of Software Science (Operating and programming systems series)", "author": ["M.H. Halstead"], "venue": "Elsevier Science Inc.,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1977}, {"title": "A metrics suite for object oriented design", "author": ["S.R. Chidamber", "C.F. Kemerer"], "venue": "IEEE Trans. Softw. Eng., vol. 20, no. 6, pp. 476\u2013493, 1994.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1994}, {"title": "Maintainability Index Technique for Measuring Program Maintainability", "author": ["E. VanDoren"], "venue": "SEI STR Rep., 2002.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2002}, {"title": "Software metrics: a rigorous and practical approach, 2nd ed", "author": ["N.E. Fenton", "S.L. Pfleeger"], "venue": "PWS Publishing Co.,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1998}, {"title": "Quantifying the quality of object-oriented design: the factor-strategy model", "author": ["R. Marinescu", "D. Ratiu"], "venue": "Proceedings of the 11th Working Conference on Reverse Engineering, 2004, pp. 192\u2013 201.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2004}, {"title": "A hierarchical model for object-oriented design quality assessment", "author": ["J. Bansiya", "C.G. Davis"], "venue": "IEEE Trans. Softw. Eng., vol. 28, no. 1, pp. 4\u201317, 2002.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2002}, {"title": "A Logarithmic Poisson Execution Time Model for Software Reliability Measurement", "author": ["J.D. Musa", "K. Okumoto"], "venue": "Proceedings of the 7th International Conference on Software Engineering, 1984, pp. 230\u2013238.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1984}, {"title": "The Littlewood-Verrall model for software reliability compared with some rivals", "author": ["B. Littlewood"], "venue": "J. Syst. Softw., vol. 1, no. 0, pp. 251\u2013258, 1980. R. B. Grady, Practical software metrics for project", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1980}, {"title": "The quamoco product quality modelling and assessment approach", "author": ["S. Wagner", "K. Lochmann", "L. Heinemann", "M. Kl\u00e4s", "A. Trendowicz", "R. Pl\u00f6sch", "A. Seidl", "A. Goeb", "J. Streit"], "venue": "Proceedings of the 2012 International Conference on Software Engineering, 2012, pp. 1133\u20131142. K. Ishikawa, What is total quality control? the", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2012}, {"title": "Software quality models: Purposes, usage scenarios and requirements", "author": ["F. Deissenboeck", "E. Juergens", "K. Lochmann", "S. Wagner"], "venue": "IEEE Workshop on Software Quality WOSQ \u201909, 2009, pp. 9\u201314.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2009}, {"title": "User experience specification through quality attributes", "author": ["L. Masip", "M. Oliva", "T. Granollers"], "venue": "Proceedings of the 13th IFIP TC 13 international  conference on Human-computer interaction - Volume Part IV, 2011, pp. 656\u2013660.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2011}, {"title": "Integrating quality, quality in use, actual usability and user experience", "author": ["P. Lew", "L. Olsina", "L. Zhang"], "venue": "Software Engineering Conference (CEE-SECR), 2010 6th Central and Eastern European, 2010, no. 978, pp. 117\u2013123.", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2010}, {"title": "Quality models: Role and value in software engineering", "author": ["D. Samadhiya", "S.-H. Wang", "D. Chen"], "venue": "2010 2nd International Conference on Software Technology and Engineering (ICSTE), 2010, vol. 1, pp. V1\u2013320 \u2013V1\u2013324.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2010}, {"title": "Quality models in software engineering literature: an analytical and comparative study", "author": ["R.E. Al-Qutaish"], "venue": "J. Am. Sci., vol. 6, no. 3, pp. 166\u2013175, 2010.", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2010}, {"title": "Weakness Finder: Find product weakness from Chinese reviews by using aspects based sentiment analysis", "author": ["W. Zhang", "H. Xu", "W. Wan"], "venue": "Expert Syst. Appl., vol. 39, no. 11, pp. 10283\u201310291, Sep. 2012.", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2012}, {"title": "Expanding domain sentiment lexicon through double propagation", "author": ["G. Qiu", "B. Liu", "J. Bu", "C. Chen"], "venue": "Proceedings of the 21st international jont conference on Artifical intelligence, 2009, pp. 1199\u20131204.", "citeRegEx": "45", "shortCiteRegEx": null, "year": 2009}, {"title": "Thumbs up or thumbs down?: semantic orientation applied to unsupervised classification of reviews", "author": ["P.D. Turney"], "venue": "Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, 2002, no. July, pp. 417\u2013 424.", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2002}, {"title": "Sentiment Classification Based on Ontology and SVM Classifier", "author": ["K.P.P. Shein", "T.T.S. Nyunt"], "venue": "Second International Conference on Communication Software and Networks, 2010, pp. 169\u2013172.", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2010}, {"title": "Extracting and ranking product features in opinion documents", "author": ["L. Zhang", "B. Liu", "S.H.S.H. Lim", "E. O\u2019Brien- Strain"], "venue": "Proceedings of the 23rd International Conference on Computational Linguistics: Posters, 2010, no. August, pp. 1462\u2013 1470.", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2010}, {"title": "Text similarity using google tri-grams", "author": ["A. Islam", "E. Milios", "V. Ke\u0161elj"], "venue": "Advances in Artificial Intelligence, vol. 7310, L. Kosseim and D. Inkpen, Eds. Springer, 2012, pp. 312\u2013317.", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2012}, {"title": "A Sequential Algorithm for Training Text Classifiers", "author": ["D.D. Lewis", "W.A. Gale"], "venue": "Proceedings of the 17th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 1994, pp. 3\u201312.", "citeRegEx": "50", "shortCiteRegEx": null, "year": 1994}, {"title": "Multinomial naive bayes for text categorization revisited", "author": ["A.M. Kibriya", "E. Frank", "B. Pfahringer", "G. Holmes"], "venue": "AI 2004: Advances in Artificial Intelligence, Springer, 2005, pp. 488\u2013499.", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2004}, {"title": "Naive Bayes text classifiers: a locally weighted learning approach", "author": ["L. Jiang", "Z. Cai", "H. Zhang", "D. Wang"], "venue": "J. Exp. &amp; Theor. Artif. Intell., vol. 25, no. 2, pp. 273\u2013286, 2013.", "citeRegEx": "52", "shortCiteRegEx": null, "year": 2013}, {"title": "On the Algorithmic Implementation of Multiclass Kernel-based Vector Machines", "author": ["K. Crammer", "Y. Singer"], "venue": "J. Mach. Learn. Res., vol. 2, pp. 265\u2013 292, Mar. 2002.", "citeRegEx": "53", "shortCiteRegEx": null, "year": 2002}, {"title": "A Comparative Study of Two Short Text Semantic Similarity Measures", "author": ["J. O\u2019Shea", "Z. Bandar", "K. Crockett", "D. McLean"], "venue": "Agent and Multi-Agent Systems: Technologies and Applications, vol. 4953, N. Nguyen, G. Jo, R. Howlett, and L. Jain, Eds. Springer Berlin Heidelberg, 2008, pp. 172\u2013181.", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2008}, {"title": "A comparison of event models for naive bayes text classification", "author": ["A. McCallum", "K. Nigam"], "venue": "Association for the Advancement of Artificial Intelligenceworkshop on learning for text categorization, 1998, vol. 752, pp. 41\u201348.", "citeRegEx": "55", "shortCiteRegEx": null, "year": 1998}, {"title": "A Training Algorithm for Optimal Margin Classifiers", "author": ["B.E. Boser", "I.M. Guyon", "V.N. Vapnik"], "venue": "Proceedings of the Fifth Annual Workshop on Computational Learning Theory, 1992, pp. 144\u2013152.", "citeRegEx": "56", "shortCiteRegEx": null, "year": 1992}, {"title": "Indexing by latent semantic analysis", "author": ["S.C. Deerwester", "S.T.S.T. Dumais", "T.K. Landauer", "G.W. Furnas", "R.A. Harshman"], "venue": "J. Am. Soc. Inf. Sci., vol. 41, no. 6, pp. 391\u2013407, Sep. 1990.", "citeRegEx": "57", "shortCiteRegEx": null, "year": 1990}, {"title": "aspect extraction through Semi-Supervised modeling", "author": ["A. Mukherjee", "B. Liu"], "venue": "Proceedings of 50th anunal meeting of association for computational Linguistics (ACL-2012), 2012, no. July, pp. 339\u2013348.", "citeRegEx": "58", "shortCiteRegEx": null, "year": 2012}, {"title": "Opinion extraction, summarization and tracking in news and blog corpora", "author": ["L.W. Ku", "Y.T. Liang", "H.H. Chen"], "venue": "Proceedings of AAAI-2006 Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006, pp. 100\u2013107.", "citeRegEx": "59", "shortCiteRegEx": null, "year": 2006}, {"title": "An unsupervised framework for extracting and normalizing product attributes from multiple web sites", "author": ["T.-L.T.-S. Wong", "W. Lam"], "venue": "Proceedings of the 31st annual international ACM SIGIR conference on Research and development in information retrieval, 2008, pp. 35\u201342.", "citeRegEx": "60", "shortCiteRegEx": null, "year": 2008}, {"title": "Opinion word expansion and target extraction through double propagation", "author": ["G. Qiu", "B. Liu", "J. Bu", "C. Chen"], "venue": "Comput. Linguist., vol. 37, no. 1, pp. 9\u201327, 2011.", "citeRegEx": "61", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Garvin [1] identified five views/approaches of quality.", "startOffset": 7, "endOffset": 10}, {"referenceID": 1, "context": "It has been implemented in mobile-based applications[2]\u2013[4] and Web applications[5]\u2013[7].", "startOffset": 52, "endOffset": 55}, {"referenceID": 3, "context": "It has been implemented in mobile-based applications[2]\u2013[4] and Web applications[5]\u2013[7].", "startOffset": 56, "endOffset": 59}, {"referenceID": 4, "context": "It has been implemented in mobile-based applications[2]\u2013[4] and Web applications[5]\u2013[7].", "startOffset": 80, "endOffset": 83}, {"referenceID": 6, "context": "It has been implemented in mobile-based applications[2]\u2013[4] and Web applications[5]\u2013[7].", "startOffset": 84, "endOffset": 87}, {"referenceID": 9, "context": "To our knowledge, little work target to resolve QinU problem [10].", "startOffset": 61, "endOffset": 65}, {"referenceID": 10, "context": "Sentiment analysis or opinion mining targets to analyze textual user judgments about products or services[11], [12]", "startOffset": 105, "endOffset": 109}, {"referenceID": 11, "context": "Sentiment analysis or opinion mining targets to analyze textual user judgments about products or services[11], [12]", "startOffset": 111, "endOffset": 115}, {"referenceID": 12, "context": "For example, the ISO 9000 family has been criticized in literature not to be used for software [13].", "startOffset": 95, "endOffset": 99}, {"referenceID": 13, "context": "The ANSI/IEEE 730-2002[14] support quality assurance plans.", "startOffset": 22, "endOffset": 26}, {"referenceID": 14, "context": "Famous hierarchical models are McCall\u2019s Quality Model [16], Boehm\u2019s Quality Model [17], Dromey\u2019s Quality Model [18], and The Software Quality In Development (SQUID) approach [19].", "startOffset": 54, "endOffset": 58}, {"referenceID": 15, "context": "Famous hierarchical models are McCall\u2019s Quality Model [16], Boehm\u2019s Quality Model [17], Dromey\u2019s Quality Model [18], and The Software Quality In Development (SQUID) approach [19].", "startOffset": 111, "endOffset": 115}, {"referenceID": 16, "context": "Famous hierarchical models are McCall\u2019s Quality Model [16], Boehm\u2019s Quality Model [17], Dromey\u2019s Quality Model [18], and The Software Quality In Development (SQUID) approach [19].", "startOffset": 174, "endOffset": 178}, {"referenceID": 17, "context": "This category includes predictive quality models[20]\u2013[23], quality metrics models[24]\u2013[27] and software reliability models.", "startOffset": 48, "endOffset": 52}, {"referenceID": 20, "context": "This category includes predictive quality models[20]\u2013[23], quality metrics models[24]\u2013[27] and software reliability models.", "startOffset": 53, "endOffset": 57}, {"referenceID": 21, "context": "This category includes predictive quality models[20]\u2013[23], quality metrics models[24]\u2013[27] and software reliability models.", "startOffset": 81, "endOffset": 85}, {"referenceID": 24, "context": "This category includes predictive quality models[20]\u2013[23], quality metrics models[24]\u2013[27] and software reliability models.", "startOffset": 86, "endOffset": 90}, {"referenceID": 17, "context": "Predictive quality models[20]\u2013[23]use the product attributes or its properties and product users to predict the quality of the software.", "startOffset": 25, "endOffset": 29}, {"referenceID": 20, "context": "Predictive quality models[20]\u2013[23]use the product attributes or its properties and product users to predict the quality of the software.", "startOffset": 30, "endOffset": 34}, {"referenceID": 17, "context": "Exploiting ideas in COCOMO[20]the Constructive Quality Model [21], [22] (COQUAMO) helps project managers to manage, assess and predict product during the development lifecycle.", "startOffset": 26, "endOffset": 30}, {"referenceID": 18, "context": "Exploiting ideas in COCOMO[20]the Constructive Quality Model [21], [22] (COQUAMO) helps project managers to manage, assess and predict product during the development lifecycle.", "startOffset": 61, "endOffset": 65}, {"referenceID": 19, "context": "Exploiting ideas in COCOMO[20]the Constructive Quality Model [21], [22] (COQUAMO) helps project managers to manage, assess and predict product during the development lifecycle.", "startOffset": 67, "endOffset": 71}, {"referenceID": 25, "context": "Many researchers have shown that these metrics are not certain indicators of faults[28], line code dependent [28] or programming dependent[29][30].", "startOffset": 83, "endOffset": 87}, {"referenceID": 25, "context": "Many researchers have shown that these metrics are not certain indicators of faults[28], line code dependent [28] or programming dependent[29][30].", "startOffset": 109, "endOffset": 113}, {"referenceID": 26, "context": "Many researchers have shown that these metrics are not certain indicators of faults[28], line code dependent [28] or programming dependent[29][30].", "startOffset": 138, "endOffset": 142}, {"referenceID": 27, "context": "Many researchers have shown that these metrics are not certain indicators of faults[28], line code dependent [28] or programming dependent[29][30].", "startOffset": 142, "endOffset": 146}, {"referenceID": 28, "context": "Example of such models are [31], [32].", "startOffset": 27, "endOffset": 31}, {"referenceID": 29, "context": "Example of such models are [31], [32].", "startOffset": 33, "endOffset": 37}, {"referenceID": 30, "context": "Quamoco Product Quality Model[37] was initially designed for German Software and is a multipurpose quality model based on ISO 25010.", "startOffset": 29, "endOffset": 33}, {"referenceID": 31, "context": "In a comprehensive study of software quality models,[39] identified critiques to many software quality models; they are unclear of their purposes, not satisfying users of how to use the quality models, and there is no uniform terminology between different models.", "startOffset": 52, "endOffset": 56}, {"referenceID": 32, "context": "[40]stated that user experience is implied in ISO 25010 but is not defined.", "startOffset": 0, "endOffset": 4}, {"referenceID": 33, "context": "[41] suggest adding data quality inside the ISO 25010 instead of being separate.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "1 Limitation of Quality-in-use Models Although there are many software quality models such as McCall, Boehm, Dromey and FURUPS [16], [18] ,", "startOffset": 127, "endOffset": 131}, {"referenceID": 15, "context": "1 Limitation of Quality-in-use Models Although there are many software quality models such as McCall, Boehm, Dromey and FURUPS [16], [18] ,", "startOffset": 133, "endOffset": 137}, {"referenceID": 34, "context": "most of them target the software product or process characteristics and does not suit software quality-in-use or require manual user involvement [42], [43].", "startOffset": 145, "endOffset": 149}, {"referenceID": 35, "context": "most of them target the software product or process characteristics and does not suit software quality-in-use or require manual user involvement [42], [43].", "startOffset": 151, "endOffset": 155}, {"referenceID": 23, "context": "The McCabe(1976) and Halstead(1977), are used since 1970\u2019s while Chidamber& Kemerer metrics[26] triggers its use in 1994.", "startOffset": 91, "endOffset": 95}, {"referenceID": 23, "context": "These metrics depend on programming style objectoriented[26] versus procedure programming approaches[24], [25].", "startOffset": 56, "endOffset": 60}, {"referenceID": 21, "context": "These metrics depend on programming style objectoriented[26] versus procedure programming approaches[24], [25].", "startOffset": 100, "endOffset": 104}, {"referenceID": 22, "context": "These metrics depend on programming style objectoriented[26] versus procedure programming approaches[24], [25].", "startOffset": 106, "endOffset": 110}, {"referenceID": 10, "context": "Opinion mining or sentiment analysis is an emerging research direction based on Natural Language Processing that targets to analyze textual user judgments about products or service[11], [12].", "startOffset": 180, "endOffset": 184}, {"referenceID": 11, "context": "Opinion mining or sentiment analysis is an emerging research direction based on Natural Language Processing that targets to analyze textual user judgments about products or service[11], [12].", "startOffset": 186, "endOffset": 190}, {"referenceID": 36, "context": "Therefore, opinion mining provided an alternative to identify important reviews and opinions to answer users\u2019 queries[44], [45].", "startOffset": 117, "endOffset": 121}, {"referenceID": 37, "context": "Therefore, opinion mining provided an alternative to identify important reviews and opinions to answer users\u2019 queries[44], [45].", "startOffset": 123, "endOffset": 127}, {"referenceID": 38, "context": "Despite the difficulties of sentiment analysis approach[46], [47][48], it can be used to overcome issues discussed in Section 3.", "startOffset": 55, "endOffset": 59}, {"referenceID": 39, "context": "Despite the difficulties of sentiment analysis approach[46], [47][48], it can be used to overcome issues discussed in Section 3.", "startOffset": 61, "endOffset": 65}, {"referenceID": 40, "context": "Despite the difficulties of sentiment analysis approach[46], [47][48], it can be used to overcome issues discussed in Section 3.", "startOffset": 65, "endOffset": 69}, {"referenceID": 41, "context": "Li and google tri-grams [49] as sentence measures, Multinomial Naive Bayes text classification (NB) [50]\u2013[52] and SVM[53] for text classification, LSA [54] for semantic space classification.", "startOffset": 24, "endOffset": 28}, {"referenceID": 42, "context": "Li and google tri-grams [49] as sentence measures, Multinomial Naive Bayes text classification (NB) [50]\u2013[52] and SVM[53] for text classification, LSA [54] for semantic space classification.", "startOffset": 100, "endOffset": 104}, {"referenceID": 44, "context": "Li and google tri-grams [49] as sentence measures, Multinomial Naive Bayes text classification (NB) [50]\u2013[52] and SVM[53] for text classification, LSA [54] for semantic space classification.", "startOffset": 105, "endOffset": 109}, {"referenceID": 45, "context": "Li and google tri-grams [49] as sentence measures, Multinomial Naive Bayes text classification (NB) [50]\u2013[52] and SVM[53] for text classification, LSA [54] for semantic space classification.", "startOffset": 117, "endOffset": 121}, {"referenceID": 46, "context": "Li and google tri-grams [49] as sentence measures, Multinomial Naive Bayes text classification (NB) [50]\u2013[52] and SVM[53] for text classification, LSA [54] for semantic space classification.", "startOffset": 151, "endOffset": 155}, {"referenceID": 47, "context": "Then 3 algorithms were run; the Multinomial Naive Bayes (NB) Measure algorithm[55], The Multiclass SVM[56], and the Latent semantic analysis[57].", "startOffset": 78, "endOffset": 82}, {"referenceID": 48, "context": "Then 3 algorithms were run; the Multinomial Naive Bayes (NB) Measure algorithm[55], The Multiclass SVM[56], and the Latent semantic analysis[57].", "startOffset": 102, "endOffset": 106}, {"referenceID": 49, "context": "Then 3 algorithms were run; the Multinomial Naive Bayes (NB) Measure algorithm[55], The Multiclass SVM[56], and the Latent semantic analysis[57].", "startOffset": 140, "endOffset": 144}, {"referenceID": 40, "context": "Feature or topic extraction has been discussed in literature in many works such as [48], [58]\u2013[61].", "startOffset": 83, "endOffset": 87}, {"referenceID": 50, "context": "Feature or topic extraction has been discussed in literature in many works such as [48], [58]\u2013[61].", "startOffset": 89, "endOffset": 93}, {"referenceID": 53, "context": "Feature or topic extraction has been discussed in literature in many works such as [48], [58]\u2013[61].", "startOffset": 94, "endOffset": 98}, {"referenceID": 37, "context": "[45], [61]", "startOffset": 0, "endOffset": 4}, {"referenceID": 53, "context": "[45], [61]", "startOffset": 6, "endOffset": 10}, {"referenceID": 9, "context": "Leopairote, Surarerks, and Prompoon[10] proposed a model that can extract and summarize software reviews in order to predict software \u201cquality-in-use\u201d.", "startOffset": 35, "endOffset": 39}, {"referenceID": 9, "context": "We consider the work of [10] the most nearby to this paper.", "startOffset": 24, "endOffset": 28}], "year": 2015, "abstractText": "Software quality-in-use comprehends the quality from user\u2019s perspectives. It has gained its importance in e-learning applications, mobile service based applications and project management tools. User\u2019s decisions on software acquisitions are often ad hoc or based on preference due to difficulty in quantitatively measure software quality-in-use. However, why qualityin-use measurement is difficult? Although there are many software quality models to our knowledge, no works surveys the challenges related to software quality-in-use measurement. This paper has two main contributions; 1) presents major issues and challenges in measuring software quality-in-use in the context of the ISO SQuaRE series and related software quality models, 2) Presents a novel framework that can be used to predict software quality-in-use, and 3) presents preliminary results of quality-in-use topic prediction. Concisely, the issues are related to the complexity of the current standard models and the limitations and incompleteness of the customized software quality models. The proposed framework employs sentiment analysis techniques to predict software quality-in-use.", "creator": "Microsoft\u00ae Word 2013"}}}