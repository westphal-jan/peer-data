{"id": "1502.02467", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Feb-2015", "title": "Structural Decompositions for Problems with Global Constraints", "abstract": "A wide range of problems can be modelled as constraint satisfaction problems (CSPs), that is, a set of constraints that must be satisfied simultaneously. Constraints can either be represented extensionally, by explicitly listing allowed combinations of values, or implicitly, by special-purpose algorithms provided by a solver.", "histories": [["v1", "Mon, 9 Feb 2015 12:55:36 GMT  (123kb,D)", "http://arxiv.org/abs/1502.02467v1", "The final publication is available at Springer viathis http URL"]], "COMMENTS": "The final publication is available at Springer viathis http URL", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["evgenij thorstensen"], "accepted": false, "id": "1502.02467"}, "pdf": {"name": "1502.02467.pdf", "metadata": {"source": "META", "title": "Structural Decompositions for Problems with Global Constraints", "authors": ["Evgenij Thorstensen"], "emails": ["evgenit@ifi.uio.no"], "sections": [{"heading": null, "text": "Such implicit constraints, known as global constraints, are widespread; in fact, they are one of the main reasons for the success of constraint programming in solving real problems. In recent years, it has been shown that a variety of constraints on the structure of CSP instances result in tractable classes of CSPs. However, most of these constraints do not guarantee traceability for CSPs with global constraints. We therefore examine the applicability of structural constraints to instances with such constraints. We show that when the number of solutions for a CSP instance is limited in key areas of the problem, structural constraints can be used to derive new tractable classes. Furthermore, we show that this result extends to combinations of instances originating from known tractable classes, as well as to CSP instances where constraints assign cost satisfactory assignments."}, {"heading": "1 Introduction", "text": "In fact, most of them are able to survive on their own."}, {"heading": "2 Preliminaries", "text": "In this section, we define the basic concepts that we use throughout the work. In particular, we give a precise definition of global constraints and structural fragmentations. [1] We define the number of domain elements (the domain elements) of a variable V from D (V), which extend this notation to arbitrary subsets of variables, each specifying a finite number of domain elements. [2] An association of variables V is a function of variables V (V), which includes each V to an element of the variable (v). We write V (V) for the set of variables V. We denote the constraint of variables V to a series of variables V (V)."}, {"heading": "3 Properties of Extensional Representation", "text": "The following definition formalizes what we mean by \"parts,\" and is required to specify the algorithms that Grohe and Marx use in their papers. Definition 19 (condition) Let e [condition] be a global constraint. Projecting the e [condition] onto a set of variables X (condition) is required to specify the algorithms that Grohe and Marx use in their papers. Definition 19 (condition) Let e [condition] be a global constraint. Projecting the e [condition] onto a set of variables X (condition) is the condition pjX (condition). Definition 19 (condition) Let e [condition] be a global constraint. The projection of the e [condition] onto a set of variables X (condition) is the condition pjX (condition)."}, {"heading": "4 Subproblem Decompositions", "text": "To generalize, it is necessary to bear in mind the fact that our definition of a global problem can include a smaller problem in this instance. < V, C > as the only restriction e}, {"heading": "5 Weighted CSP", "text": "In this section, we will apply this property to an extension of the CSP framework, known as weighted CSP instances [21,22], where each constraint is specified by a function that imposes costs on any task, and we would like to find a solution to the variables of this constraint. Reason for considering weighted rather than evaluated CSP instances is that weighted CSP instances (tables) list each satisfactory assignment along with costs, while a weighted constraint is given by a function of assignments to values."}, {"heading": "6 Summary", "text": "We have examined the traceability of CSP instances with global constraints under various structural constraints such as tree and hypertree width. By exploiting the number of solutions for CSP instances at key points, we have identified new traceable classes of such problems, both in the ordinary and in the weighted case. In addition, we have shown how this technique can be used to combine CSP instances from known traceable classes, thereby extending an earlier result of Cohen and Green. [10] We have also shown how the existence of back doors in CSP instances can be used to extend our results. More needs to be done on this subject. In particular, we will investigate whether a refinement of the conditions we have identified can be used to show dichotomy theorems similar to those known for certain types of constraints and structural constraints [9,26,32]. Also of interest is the complexity of checking whether the search for a few instances is associated with CSP's solutions [9,26,32]."}], "references": [{"title": "Width functions for hypertree decompositions", "author": ["I. Adler"], "venue": "Doctoral dissertation, AlbertLudwigs-Universit\u00e4t Freiburg", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Hypertree width and related hypergraph invariants", "author": ["I. Adler", "G. Gottlob", "M. Grohe"], "venue": "European Journal of Combinatorics 28(8), 2167\u20132181", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Optimization methods for the partner units problem", "author": ["M. Aschinger", "C. Drescher", "G. Friedrich", "G. Gottlob", "P. Jeavons", "A. Ryabokon", "E. Thorstensen"], "venue": "Proceedings of the 8th International Conference on Integration of Artificial Intelligence and Operations Research Techniques in Constraint Programming for Combinatorial Optimization Problems (CPAIOR\u201911), Lecture Notes in Computer Science, vol. 6697, pp. 4\u201319. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Structural decomposition methods and what they are good for", "author": ["M. Aschinger", "C. Drescher", "G. Gottlob", "P. Jeavons", "E. Thorstensen"], "venue": "T. Schwentick, C. D\u00fcrr (eds.) Proceedings of the 28th International Symposium on Theoretical Aspects of Computer Science (STACS\u201911), Leibniz International Proceedings in Informatics, vol. 9, pp. 12\u2013 28", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2011}, {"title": "Size bounds and query plans for relational joins", "author": ["A. Atserias", "M. Grohe", "D. Marx"], "venue": "SIAM J. Comput. 42(4), 1737\u20131767", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "The complexity of reasoning with global constraints", "author": ["C. Bessiere", "E. Hebrard", "B. Hnich", "T. Walsh"], "venue": "Constraints 12(2), 239\u2013259", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2007}, {"title": "Decomposition of the NValue constraint", "author": ["C. Bessiere", "G. Katsirelos", "N. Narodytska", "C.G. Quimper", "T. Walsh"], "venue": "Proceedings of the 16th International Conference on Principles and Practice of Constraint Programming (CP\u201910), Lecture Notes in Computer Science, vol. 6308. Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Classifying the complexity of constraints using finite algebras", "author": ["A. Bulatov", "P. Jeavons", "A. Krokhin"], "venue": "SIAM Journal on Computing 34(3), 720\u2013742", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2005}, {"title": "Constraint satisfaction with succinctly specified relations", "author": ["H. Chen", "M. Grohe"], "venue": "Journal of Computer and System Sciences 76(8), 847\u2013860", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Typed guarded decompositions for constraint satisfaction", "author": ["D. Cohen", "M. Green"], "venue": "F. Benhamou (ed.) Proceedings of the 12th International Conference on the Principles and Practice of Constraint Programming (CP\u201906), Lecture Notes in Computer Science, vol. 4204, pp. 122\u2013136. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2006}, {"title": "The complexity of constraint languages", "author": ["D. Cohen", "P. Jeavons"], "venue": "F. Rossi, P. van Beek, T. Walsh (eds.) Handbook of Constraint Programming, Foundations of Artificial Intelligence, vol. 2, pp. 245 \u2013 280. Elsevier", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "A unified theory of structural tractability for constraint satisfaction problems", "author": ["D. Cohen", "P. Jeavons", "M. Gyssens"], "venue": "Journal of Computer and System Sciences 74(5), 721\u2013743", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "Constraint representations and structural tractability", "author": ["D.A. Cohen", "M.J. Green", "C. Houghton"], "venue": "Proceedings of the 15th International Conference on Principles and Practice of Constraint Programming (CP\u201909), Lecture Notes in Computer Science, vol. 5732, pp. 289\u2013303. Springer", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Tractable combinations of global constraints", "author": ["D.A. Cohen", "P.G. Jeavons", "E. Thorstensen", "S. \u017divn\u00fd"], "venue": "C. Schulte (ed.) Proceedings of the 19th International Conference on Principles and Practice of Constraint Programming (CP\u201913), Lecture Notes in Computer Science, vol. 8124, pp. 230\u2013246. Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Constraint satisfaction, bounded treewidth, and finite-variable logics", "author": ["V. Dalmau", "P.G. Kolaitis", "M.Y. Vardi"], "venue": "Proceedings of the 8th International Conference on Principles and Practice of Constraint Programming (CP\u201902), Lecture Notes in Computer Science, vol. 2470, pp. 223\u2013254. Springer", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "Parameterized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": "Monographs in Computer Science. Springer", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1999}, {"title": "Parameterized Complexity Theory", "author": ["J. Flum", "M. Grohe"], "venue": "Texts in Theoretical Computer Science. Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2006}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "D.S. Johnson"], "venue": "W. H. Freeman", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1979}, {"title": "Backdoors to satisfaction", "author": ["S. Gaspers", "S. Szeider"], "venue": "H.L. Bodlaender, R. Downey, F.V. Fomin, D. Marx (eds.) The Multivariate Algorithmic Revolution and Beyond, Lecture Notes in Computer Science, vol. 7370, pp. 287\u2013317. Springer", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2012}, {"title": "MINION: A fast, scalable constraint solver", "author": ["I.P. Gent", "C. Jefferson", "I. Miguel"], "venue": "Proceedings of the 17th European Conference on Artificial Intelligence (ECAI\u201906), pp. 98\u2013102. IOS Press", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2006}, {"title": "Exploiting Tree Decomposition and Soft Local Consistency in Weighted CSP", "author": ["S. de Givry", "T. Schiex", "G. Verfaillie"], "venue": "Proceedings of the 21st National Conference on Artificial Intelligence (AAAI\u201906), pp. 22\u201327", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2006}, {"title": "Tractable optimization problems through hypergraph-based structural restrictions", "author": ["G. Gottlob", "G. Greco", "F. Scarcello"], "venue": "S. Albers, A. Marchetti-Spaccamela, Y. Matias, S. Nikoletseas, W. Thomas (eds.) Proceedings of the 36th International Colloquium on Automata\u201a Languages and Programming (ICALP\u201909), Lecture Notes in Computer Science, vol. 5556, pp. 16\u201330. Springer", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2009}, {"title": "A comparison of structural CSP decomposition methods", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Artificial Intelligence 124(2), 243\u2013282", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2000}, {"title": "Hypertree decompositions and tractable queries", "author": ["G. Gottlob", "N. Leone", "F. Scarcello"], "venue": "Journal of Computer and System Sciences 64(3), 579\u2013627", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2002}, {"title": "Structural tractability of propagated constraints", "author": ["M.J. Green", "C. Jefferson"], "venue": "Proceedings of the 14th International Conference on Principles and Practice of Constraint Programming (CP\u201908), Lecture Notes in Computer Science, vol. 5202, pp. 372\u2013386. Springer", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2008}, {"title": "The complexity of homomorphism and constraint satisfaction problems seen from the other side", "author": ["M. Grohe"], "venue": "Journal of the ACM 54(1), 1\u201324", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2007}, {"title": "Constraint solving via fractional edge covers", "author": ["M. Grohe", "D. Marx"], "venue": "Proceedings of the 17th ACM-SIAM symposium on discrete algorithms (SODA\u201906), pp. 289\u2013298. ACM", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2006}, {"title": "Bin repacking scheduling in virtualized datacenters", "author": ["F. Hermenier", "S. Demassey", "X. Lorca"], "venue": "J. Lee (ed.) Proceedings of the 17th International Conference on Principles and Practice ofConstraint Programming (CP\u201911), Lecture Notes in Computer Science, vol. 6876, pp. 27\u201341. Springer", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "Global constraints", "author": ["W.J. van Hoeve", "I. Katriel"], "venue": "F. Rossi, P. van Beek, T. Walsh (eds.) Handbook of Constraint Programming, Foundations of Artificial Intelligence, vol. 2, pp. 169\u2013208. Elsevier", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2006}, {"title": "Simultaneous matchings: Hardness and approximation", "author": ["M. Kutz", "K. Elbassioni", "I. Katriel", "M. Mahajan"], "venue": "Journal of Computer and System Sciences 74(5), 884\u2013897", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2008}, {"title": "Approximating fractional hypertree width", "author": ["D. Marx"], "venue": "ACM Transactions on Algorithms 6(2), 29:1\u201329:17", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "Can you beat treewidth", "author": ["D. Marx"], "venue": "Theory of Computing", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2010}, {"title": "Tractable hypergraph properties for constraint satisfaction and conjunctive queries", "author": ["D. Marx"], "venue": "J. ACM 60(6), 42", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2013}, {"title": "Improved algorithms for the global cardinality constraint", "author": ["C.G. Quimper", "A. L\u00f3pez-Ortiz", "P. van Beek", "A. Golynski"], "venue": "Proceedings of the 10th International Conference on Principles and Practice of Constraint Programming (CP\u201904), Lecture Notes in Computer Science, vol. 3258, pp. 542\u2013556. Springer", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2004}, {"title": "Generalized Arc Consistency for Global Cardinality Constraint", "author": ["J.C. R\u00e9gin"], "venue": "Proceedings of the 13th National Conference on Artificial Intelligence (AAAI\u201996), pp. 209\u2013215. AAAI Press", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1996}, {"title": "The Handbook of Constraint Programming", "author": ["F. Rossi", "P. van Beek", "Walsh", "T. (eds."], "venue": "Elsevier", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2006}, {"title": "Tractable cases of the extended global cardinality constraint", "author": ["M. Samer", "S. Szeider"], "venue": "Constraints 16(1), 1\u201324", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2011}, {"title": "Valued Constraint Satisfaction Problems: Hard and Easy Problems", "author": ["T. Schiex", "H. Fargier", "G. Verfaillie"], "venue": "C. Mellish (ed.) Proceedings of the 14th International Joint Conference on Artificial Intelligence (IJCAI\u201995), pp. 631\u2013639", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1995}, {"title": "Practical applications of constraint programming", "author": ["M. Wallace"], "venue": "Constraints 1, 139\u2013168", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1996}, {"title": "ECLiPSe: A platform for constraint logic programming", "author": ["M. Wallace", "S. Novello", "J. Schimpf"], "venue": "ICL Systems Journal 12(1), 137\u2013158", "citeRegEx": "40", "shortCiteRegEx": null, "year": 1997}, {"title": "Backdoors to typical case complexity", "author": ["R. Williams", "C.P. Gomes", "B. Selman"], "venue": "Proceedings of the 18th International Joint Conference on Artificial Intelligence (IJCAI\u201903), pp. 1173\u20131178", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2003}, {"title": "The complexity and expressive power of valued constraints", "author": ["S. \u017divn\u00fd"], "venue": "Doctoral dissertation, University of Oxford", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2009}], "referenceMentions": [{"referenceID": 28, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [29,39], and industrial configuration [3,28].", "startOffset": 116, "endOffset": 123}, {"referenceID": 38, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [29,39], and industrial configuration [3,28].", "startOffset": 116, "endOffset": 123}, {"referenceID": 2, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [29,39], and industrial configuration [3,28].", "startOffset": 154, "endOffset": 160}, {"referenceID": 27, "context": "Constraint programming (CP) is widely used to solve a variety of practical problems such as planning and scheduling [29,39], and industrial configuration [3,28].", "startOffset": 154, "endOffset": 160}, {"referenceID": 19, "context": "as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing global constraints [20,36,40].", "startOffset": 126, "endOffset": 136}, {"referenceID": 35, "context": "as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing global constraints [20,36,40].", "startOffset": 126, "endOffset": 136}, {"referenceID": 39, "context": "as global constraints, and a lot of the success of CP in practice has been attributed to solvers providing global constraints [20,36,40].", "startOffset": 126, "endOffset": 136}, {"referenceID": 3, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 7, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 11, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 22, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 25, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 32, "context": "The theoretical properties of constraint problems, in particular the computational complexity of different types of problem, have been extensively studied and quite a lot is known about what restrictions on the general constraint satisfaction problem are sufficient to make it tractable [4,8,12,23,26,33].", "startOffset": 287, "endOffset": 304}, {"referenceID": 23, "context": "In particular, many structural restrictions, that is, restrictions on how the constraints in a problem interact, have been identified and shown to yield tractable classes of CSP instances [24,27,33].", "startOffset": 188, "endOffset": 198}, {"referenceID": 26, "context": "In particular, many structural restrictions, that is, restrictions on how the constraints in a problem interact, have been identified and shown to yield tractable classes of CSP instances [24,27,33].", "startOffset": 188, "endOffset": 198}, {"referenceID": 32, "context": "In particular, many structural restrictions, that is, restrictions on how the constraints in a problem interact, have been identified and shown to yield tractable classes of CSP instances [24,27,33].", "startOffset": 188, "endOffset": 198}, {"referenceID": 29, "context": "This is the case even when the global constraints are fairly simple, such as overlapping difference constraints with acyclic hypergraphs [30].", "startOffset": 137, "endOffset": 141}, {"referenceID": 5, "context": "This is generally done by pruning from the domains of variables those values that cannot lead to a satisfying assignment [6,37].", "startOffset": 121, "endOffset": 127}, {"referenceID": 36, "context": "This is generally done by pruning from the domains of variables those values that cannot lead to a satisfying assignment [6,37].", "startOffset": 121, "endOffset": 127}, {"referenceID": 6, "context": "Another strand of research has explored conditions that allow global constraints to be replaced by collections of explicitly represented constraints [7].", "startOffset": 149, "endOffset": 152}, {"referenceID": 8, "context": "As discussed in [9], when the constraints in a family of problems have unbounded arity, the way that the constraints are represented can significantly affect the complexity.", "startOffset": 16, "endOffset": 19}, {"referenceID": 24, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [25], negative constraints [13], or GDNF/decision diagrams [9], and exploited properties particular to that representation.", "startOffset": 118, "endOffset": 122}, {"referenceID": 12, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [25], negative constraints [13], or GDNF/decision diagrams [9], and exploited properties particular to that representation.", "startOffset": 145, "endOffset": 149}, {"referenceID": 8, "context": "Previous work in this area has assumed that the global constraints have specific representations, such as propagators [25], negative constraints [13], or GDNF/decision diagrams [9], and exploited properties particular to that representation.", "startOffset": 177, "endOffset": 180}, {"referenceID": 13, "context": "In contrast, we will use a definition of global constraints, used also in [14], that allows us to discuss different representations in a uniform manner.", "startOffset": 74, "endOffset": 78}, {"referenceID": 9, "context": "The results that we obtain on this topic extend previous research by Cohen and Green [10].", "startOffset": 85, "endOffset": 89}, {"referenceID": 20, "context": "Finally, we show how our results can be extended to weighted CSP [21,22], that is, CSP where constraints assign costs to satisfying assignments, and the goal is to find an optimal solution.", "startOffset": 65, "endOffset": 72}, {"referenceID": 21, "context": "Finally, we show how our results can be extended to weighted CSP [21,22], that is, CSP where constraints assign costs to satisfying assignments, and the goal is to find an optimal solution.", "startOffset": 65, "endOffset": 72}, {"referenceID": 28, "context": "For example, in [29] a global constraint is defined as \u201ca constraint that captures a relation between a non-fixed number of variables\u201d.", "startOffset": 16, "endOffset": 20}, {"referenceID": 5, "context": "Below, we offer a precise definition similar to the one in [6], where the authors define global constraints for a domain D over a list of variables \u03c3 as being given intensionally by a function D|\u03c3| \u2192 {0, 1} computable in polynomial time.", "startOffset": 59, "endOffset": 62}, {"referenceID": 36, "context": "Example 1 (EGC) A very general global constraint type is the extended global cardinality constraint type [37].", "startOffset": 105, "endOffset": 109}, {"referenceID": 0, "context": "To present the various structural restrictions, we will use the framework of width functions, introduced by Adler [1].", "startOffset": 114, "endOffset": 117}, {"referenceID": 26, "context": "Next, we define a relaxation of hypertree width known as fractional hypertree width, introduced by Grohe and Marx [27].", "startOffset": 114, "endOffset": 118}, {"referenceID": 0, "context": "A fractional edge cover for X is a function \u03b3 : H \u2192 [0, 1] such that \u2211", "startOffset": 52, "endOffset": 58}, {"referenceID": 26, "context": "It is known that this minimum is always rational [27].", "startOffset": 49, "endOffset": 53}, {"referenceID": 1, "context": "Theorem 1 ([2,15,24,27,31]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 26}, {"referenceID": 14, "context": "Theorem 1 ([2,15,24,27,31]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 26}, {"referenceID": 23, "context": "Theorem 1 ([2,15,24,27,31]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 26}, {"referenceID": 26, "context": "Theorem 1 ([2,15,24,27,31]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 26}, {"referenceID": 30, "context": "Theorem 1 ([2,15,24,27,31]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 26}, {"referenceID": 32, "context": "To go beyond fractional hypertree width, Marx [33] recently introduced the concept of submodular width.", "startOffset": 46, "endOffset": 50}, {"referenceID": 15, "context": "However, this class is what is called fixed-parameter tractable [16,17].", "startOffset": 64, "endOffset": 71}, {"referenceID": 16, "context": "However, this class is what is called fixed-parameter tractable [16,17].", "startOffset": 64, "endOffset": 71}, {"referenceID": 32, "context": "Theorem 2 ([33]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 15}, {"referenceID": 26, "context": "The three structural restrictions that we have just presented form a hierarchy [27, 33]: For every hypergraph G, subw(G) \u2264 fhw(G) \u2264 ghw(G) \u2264 tw(G).", "startOffset": 79, "endOffset": 87}, {"referenceID": 32, "context": "The three structural restrictions that we have just presented form a hierarchy [27, 33]: For every hypergraph G, subw(G) \u2264 fhw(G) \u2264 ghw(G) \u2264 tw(G).", "startOffset": 79, "endOffset": 87}, {"referenceID": 17, "context": "Example 4 The NP-complete problem of 3-colourability [18] is to decide, given a graph \u3008V,E\u3009, whether the vertices V can be coloured with three colours such that no two adjacent vertices have the same colour.", "startOffset": 53, "endOffset": 57}, {"referenceID": 26, "context": "To obtain tractability for classic CSP instances of bounded fractional hypertree width, Grohe and Marx [27] use a bound on the number of solutions to a classic CSP instance, and show that this bound is preserved when we consider parts of a CSP instance.", "startOffset": 103, "endOffset": 107}, {"referenceID": 26, "context": "Lemma 2 ([27]) A classic CSP instance P has at most |P | \u2217(hyp(P )) solutions.", "startOffset": 9, "endOffset": 13}, {"referenceID": 4, "context": "This result has since been shown to be optimal \u2014 a classic CSP instance has polynomially many solutions in its size if and only if it has bounded fractional edge cover number [5].", "startOffset": 175, "endOffset": 178}, {"referenceID": 33, "context": "Example 1) does not satisfy Definition 20, since checking whether an arbitrary EGC constraint has a satisfying assignment is NP-hard [34].", "startOffset": 133, "endOffset": 137}, {"referenceID": 34, "context": "On the other hand, a catalogue that contains only EGC constraints whose cardinality sets are intervals does satisfy Definition 20 [35].", "startOffset": 130, "endOffset": 134}, {"referenceID": 18, "context": "A (strong) back door set [19,41] is a set of variables in a CSP instance that, when assigned, make the instance easy to solve.", "startOffset": 25, "endOffset": 32}, {"referenceID": 40, "context": "A (strong) back door set [19,41] is a set of variables in a CSP instance that, when assigned, make the instance easy to solve.", "startOffset": 25, "endOffset": 32}, {"referenceID": 33, "context": "the EGC constraint [34] (cf.", "startOffset": 19, "endOffset": 23}, {"referenceID": 9, "context": "Splitting up a (classic) CSP instance into smaller instances has previously been considered by Cohen and Green [10].", "startOffset": 111, "endOffset": 115}, {"referenceID": 11, "context": "They use a very general framework of guarded decompositions [12] to define what they call \u201ctyped guarded decompositions\u201d.", "startOffset": 60, "endOffset": 64}, {"referenceID": 9, "context": "In [10], Cohen and Green call a subproblem a component of P .", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "On the other hand, tractable classes defined by restricting the allowed assignments of a constraint, rather than the hypergraph, are usually preserved by adding a constraint with only one assignment [11].", "startOffset": 199, "endOffset": 203}, {"referenceID": 34, "context": "Furthermore, both subproblem allow partial assignment checking, as the EGC constraints both have interval cardinality sets [35], and the equality constraints of subproblem P can always be satisfied.", "startOffset": 123, "endOffset": 127}, {"referenceID": 20, "context": "In this section, we are going to apply this property to an extension of the CSP framework called weighted CSP instances [21,22], where every constraint assigns a cost to every satisfying assignment, and we would like to find a solution with smallest cost.", "startOffset": 120, "endOffset": 127}, {"referenceID": 21, "context": "In this section, we are going to apply this property to an extension of the CSP framework called weighted CSP instances [21,22], where every constraint assigns a cost to every satisfying assignment, and we would like to find a solution with smallest cost.", "startOffset": 120, "endOffset": 127}, {"referenceID": 37, "context": "This type of CSP is itself a special case of the more general valued CSP framework [38,42], where every constraint is specified by a function that assigns a cost to every possible assignment for the variables of that constraint.", "startOffset": 83, "endOffset": 90}, {"referenceID": 41, "context": "This type of CSP is itself a special case of the more general valued CSP framework [38,42], where every constraint is specified by a function that assigns a cost to every possible assignment for the variables of that constraint.", "startOffset": 83, "endOffset": 90}, {"referenceID": 21, "context": "Theorem 8 ([22]) Let H be a class of hypergraphs.", "startOffset": 11, "endOffset": 15}, {"referenceID": 9, "context": "Furthermore, we have shown how this technique can be used to combine CSP instances drawn from known tractable classes, extending a previous result by Cohen and Green [10].", "startOffset": 166, "endOffset": 170}, {"referenceID": 8, "context": "In particular, investigating whether a refinement of the conditions we have identified can be used to show dichotomy theorems, similar to those known for certain kinds of constraints and structural restrictions [9,26,32].", "startOffset": 211, "endOffset": 220}, {"referenceID": 25, "context": "In particular, investigating whether a refinement of the conditions we have identified can be used to show dichotomy theorems, similar to those known for certain kinds of constraints and structural restrictions [9,26,32].", "startOffset": 211, "endOffset": 220}, {"referenceID": 31, "context": "In particular, investigating whether a refinement of the conditions we have identified can be used to show dichotomy theorems, similar to those known for certain kinds of constraints and structural restrictions [9,26,32].", "startOffset": 211, "endOffset": 220}], "year": 2015, "abstractText": "A wide range of problems can be modelled as constraint satisfaction problems (CSPs), that is, a set of constraints that must be satisfied simultaneously. Constraints can either be represented extensionally, by explicitly listing allowed combinations of values, or implicitly, by special-purpose algorithms provided by a solver. Such implicitly represented constraints, known as global constraints, are widely used; indeed, they are one of the key reasons for the success of constraint programming in solving real-world problems. In recent years, a variety of restrictions on the structure of CSP instances have been shown to yield tractable classes of CSPs. However, most such restrictions fail to guarantee tractability for CSPs with global constraints. We therefore study the applicability of structural restrictions to instances with such constraints. We show that when the number of solutions to a CSP instance is bounded in key parts of the problem, structural restrictions can be used to derive new tractable classes. Furthermore, we show that this result extends to combinations of instances drawn from known tractable classes, as well as to CSP instances where constraints assign costs to satisfying assignments.", "creator": "LaTeX with hyperref package"}}}