{"id": "1502.02840", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Feb-2015", "title": "An Integrated Semantic Web Service Discovery and Composition Framework", "abstract": "In this paper we present a theoretical analysis of graph-based service composition in terms of its dependency with service discovery. Driven by this analysis we define a composition framework by means of integration with fine-grained I/O service discovery that enables the generation of a graph-based composition which contains the set of services that are semantically relevant for an input-output request. The proposed framework also includes an optimal composition search algorithm to extract the best composition from the graph minimising the length and the number of services, and different graph optimisations to improve the scalability of the system. A practical implementation used for the empirical analysis is also provided. This analysis proves the scalability and flexibility of our proposal and provides insights on how integrated composition systems can be designed in order to achieve good performance in real scenarios for the Web.", "histories": [["v1", "Tue, 10 Feb 2015 10:25:33 GMT  (411kb,D)", "http://arxiv.org/abs/1502.02840v1", "Accepted to appear in IEEE Transactions on Services Computing 2015"]], "COMMENTS": "Accepted to appear in IEEE Transactions on Services Computing 2015", "reviews": [], "SUBJECTS": "cs.AI cs.SE", "authors": ["pablo rodriguez-mier", "carlos pedrinaci", "manuel lama", "manuel mucientes"], "accepted": false, "id": "1502.02840"}, "pdf": {"name": "1502.02840.pdf", "metadata": {"source": "CRF", "title": "An Integrated Semantic Web Service Discovery and Composition Framework", "authors": ["Pablo Rodriguez-Mier", "Carlos Pedrinaci", "Manuel Lama", "Manuel Mucientes"], "emails": ["pablo.rodriguez.mier@usc.es", "manuel.lama@usc.es", "manuel.mucientes@usc.es", "carlos.pedrinaci@open.ac.uk"], "sections": [{"heading": null, "text": "Index Terms - Semantic Web Services; Service Discovery; Service Composition Framework; Service Composition Performance. F"}, {"heading": "1 INTRODUCTION", "text": "This type of service extends from the original UDDI idea, which is based on the syntactic description of services and a predefined categorization of activities ranging from purely graphical support to fully automated discovery techniques. [5] Both discovery methods and composition engines are essentially based on the processing of service descriptions, which increasingly go beyond syntactic representations to include the service solutions of the service. [6] An analysis of the service literature emphasizes that regardless of the approach, a central task that often needs to be performed throughout the composition involves the discovery of suitable services."}, {"heading": "2 RELATED WORK", "text": "This year it has come to the point that it will only be a matter of time before it will happen, until it does."}, {"heading": "3 WEB SERVICE COMPOSITION PROBLEM", "text": "The composition of the services aims to design composite services that could satisfy a user requirement, e.g. booking an entire holiday when no known service alone can satisfy such a requirement. Indeed, a core activity for the creation of service compositions is the discovery of relevant services. In this context, relevant services are those that could be used and help to obtain an executable composition that meets the needs specified by the customer. We formalize the composition problem in close relation to discovery in order to better study and address the integration of discovery and composition motors. Formalization of the problem is data flow-centric, with emphasis on the semantic input-output parameter matching of the interfaces of the services."}, {"heading": "3.1 Semantic Web Service Discovery", "text": "This year, it is more than ever before in the history of the city."}, {"heading": "3.2 Semantic Web Service Composition", "text": "This year, it has reached the point where it will be able to put itself at the top of the list."}, {"heading": "4 COMPOSITION FRAMEWORK", "text": "Based on the formal definition of the problem, we present in this section a graph-based framework for the automatic composition of semantic web services. Figure 1 shows the overview of our approach with the various steps involved; the process is triggered by a composition request specifying the user's input requirements and expected outcomes; this information is used in the composition curve phase to create a diagram of all relevant services and the semantic relationships between their inputs and outputs; in order to find the relevant services, the composition curve phase is linked to the discovery phase; the discovery phase is responsible for finding the relevant services available at various stages during the generation phase; the relationships between the inputs and outputs of services are calculated in the linkage phase, in which the semantic match between the input and output phase of a service is computed on the basis of the reasoning and the reasoning is ultimately calculated on the basis of the reasoning of an argument."}, {"heading": "4.1 Semantic Matchmaking", "text": "A basic functionality that must be available for the creation of compositions and even for the discovery of services is the ability to analyze the compatibility between different semantic types. This functionality, which we call semantic matching, is responsible for assessing the level of semantic compatibility between concepts, since there is an ontology (or a set of ontologies). To do this, semantic matching relies on semantic thinking (especially substitution logic) to determine the relationships between concepts (e.g. plugin match). This mechanism can be used, for example, to find services that generate a concrete input / output by finding semantically compatible types. Such a mechanism is also particularly relevant for generating the service composition course with all matches between service inputs and outputs."}, {"heading": "4.2 Semantic Service Discovery", "text": "The goal of a typical discovery system is to find atomic services that fully match a description that represents the ideal service being sought, i.e., all inputs and outputs are compatible. In this scenario, the ability to find partially identical services very quickly is crucial to efficiently explore the many possible combinations of services that could lead to an appropriate composition. Therefore, the type of service discovery required to support the service composition is a more relaxed and finer version of what is normally provided by discovery engines, with partial matches being achieved in a very fast manner. This can be achieved by defining a simple, fine-grained interface that supports the discovery of services using partial information (some inputs / inputs that contain a particular service)."}, {"heading": "4.3 Service Composition Graph Generation", "text": "The question about the \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why?,\" \"Why}, {"heading": "4.3.1 Index-Based Optimisations", "text": "Although these improvements can save search time, one of the bottlenecks of graph generation is still the size of the repository w, which is usually several orders of magnitude larger than the other parameters involved in the complexity. One effective way to reduce the impact of the size of the repository is to pre-calculate and index the inverted index functions for each concept of ontology. Indexing services can be done independently of any composition requirement, as it depends only on the available information, such as the services themselves and the ontologies. The construction of an inverted index function to restore input-relevant services or output-relevant services can easily be done using the relevant IO function. The main idea behind the inverted index is to create a keyvalue hash map in which the concepts of ontology are and the values are those that are input relevant (or output-relevant) to that concept."}, {"heading": "4.4 Graph-Based Optimisations", "text": "Once the graph is created, the next step is to apply various optimizations to reduce the graph size in order to improve optimal search performance in the composition. This part of the composition is independent of the discovery phase. All the information required to search for the optimal composition is in the graph, namely the relevant services and the semantic relationships between their inputs and outputs, so there is no need to communicate with the discovery / matchmaking systems. We distinguish at least two different techniques [22], [34]: reverse truncation and interface dominance."}, {"heading": "4.4.1 Backward pruning", "text": "It is therefore possible that a service that is not subject to a contribution is essentially a service that is not included in the transitive closure of production-related services; a service would be for a service that is not included in the transitive closure of production-related services."}, {"heading": "4.4.2 Interface Dominance", "text": "Another approach to reducing the graphics is to analyze the equivalence and dominance of some services in terms of the interface manner they offer. (wi) One way to address this problem is to analyze the interface dominance between services in order to find those services that are equivalent or better than others in terms of the interface way they provide. (i) One way to analyze the interface dominance between services is to analyze the interface dominance between services that are equivalent or better than others in terms of the interface definition 10: Facing a concept in a composition graph G (c) as a function that returns the output-relevant services to the concept. (c) Another way that returns the output-relevant services to the concept. (c)"}, {"heading": "4.5 Optimal Composition Search", "text": "The next step is to perform a search over the graph to find the best composition among all possible compositions that meet the input / output requirement, and the search can be designed to meet various criteria, such as the number of services, the execution length, or the QoS properties. Typically, the search over the graph begins with the destination outputs (last layer), starting with the selection of services relevant to the output performance up to a composition that can be called with the initial inputs. Formally, the composition search can be modeled as a state transition system, dividing the problem into a series of states and transitions between states."}, {"heading": "5 REFERENCE IMPLEMENTATION", "text": "We developed a reference implementation of the integrated graph-based composition concept, which is based on two main components: iServe [2], a service warehouse with advanced discovery support, which provides the service register and takes care of the matchmaking and service discovery activities, and ComposIT [22], which is responsible for the graph-based composition part. Fig.5 describes the architecture of the system. In short, the composition process is performed as follows: When a composition request is sent to the system via the web interface, ComposIT begins to calculate the composition course with all relevant services for the request. To this end, all relevant services are then compiled layer by layer using the fine-grained, logic-based discovery support provided by the Semantic Discovery Engine of iServe. This engine relies on the Service Manager and KB Manager to compile the relevant services using the maneuvering capabilities of the KB, and to perform the resulting maneuver based on the IT."}, {"heading": "5.1 iServe", "text": "In fact, it is not as if it is a mere structure, but a structure in which both sides are on an equal footing, \"he said.\" We have to sit down at a table, \"he said.\" We have to sit down at a table, \"he said.\" We have to sit down at a table where we are able to move. \""}, {"heading": "5.2 ComposIT", "text": "ComposIT [22], represented in the left hand of Fig. 5, is the semantic Web Service Composition Engine that we rely on. It implements all the different graph-based composition phases of the framework described in Sec. 4. The semantic service discovery and matchmaking mechanisms that were originally implemented internally are delegated to iServe using integration adapters that are used for the purposes of this work. ComposIT nonetheless uses an internal cache and index to efficiently recover the information of the generated composition curve. It is worth noting that the architecture supports the use of multiple distributed iServe instances to provide various endpoints that ComposIT can use during the composition phase by aggregating the results of the Composer API level. In fact, since the services are taken into account during the composition process, it is worth noting that ComposIT is not the only the composing process, but also the composing process."}, {"heading": "6 EVALUATION", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "7 CONCLUSIONS", "text": "In this paper, we have presented a theoretical analysis of the service composition with respect to its dependence on service discovery. Driven by this analysis, we have defined a formal, graph-based composition concept based on the integration of service discovery and matchmaking within the composition process. We have developed a reference implementation of this framework based on two pre-existing separate components, iServe and ComposIT. This reference implementation has been used to empirically investigate the impact of discovery and matchmaking on the service composition, and we have provided three different configurations with different performance. Our empirical analysis shows that typical approaches pursued by discovery engines may in fact not be a suitable basis to support efficient service composition, as they lead to prohibitive execution times. However, we have also shown that uncovering engines with adequate granularity and indexing interface can support high-speed composition of the local composition without requiring high-efficiency interfaces."}, {"heading": "ACKNOWLEDGMENT", "text": "This work was partially supported by the Spanish Ministry of Economy and Competitiveness (MEC) under the TIN2011-22935 funding and the European project COMPOSE (FP7-ICT-317862). Pablo Rodr\u00ed guez-Mier is supported by an FPU grant from MEC (ref. AP2010-1078) and was partially funded by the Pedro Barrie \u0301 de la Maza Foundation (2013)."}], "references": [{"title": "iServe: a linked services publishing platform,", "author": ["C. Pedrinaci", "D. Liu", "M. Maleshkova", "D. Lambert", "J. Kopecky", "J. Domingue"], "venue": "CEUR Workshop Proceedings,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Web Service Composition - Current Solutions and Open Problems,", "author": ["B. Srivastava", "J. Koehler"], "venue": "ICAPS 2003 workshop on Planning for Web Services,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "A Survey of Automated Web Service Composition Methods,", "author": ["J. Rao", "X. Su"], "venue": "Semantic Web Services and Web Process Composition,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2004}, {"title": "A survey on web services composition,", "author": ["S. Dustdar", "W. Schreiner"], "venue": "Int. J. of Web and Grid Services,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "Semantic web services,", "author": ["S.A. McIlraith", "T.C. Son", "H. Zeng"], "venue": "IEEE Intelligent Systems,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2001}, {"title": "Service-Oriented Computing: State of the Art and Research Challenges,", "author": ["M.P. Papazoglou", "P. Traverso", "S. Dustdar", "F. Leymann"], "venue": "Computer, vol. 40,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Web Service Composition as Planning,", "author": ["M. Carman", "L. Serafini", "P. Traverso"], "venue": "ICAPS 2003 Workshop on planning for web services,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2003}, {"title": "HTN planning for Web Service composition using SHOP2,", "author": ["E. Sirin", "B. Parsia", "D. Wu", "J. Hendler", "D. Nau"], "venue": "Web Semantics: Science, Services and Agents on the World Wide Web,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Semantic Web Service Composition Planning with OWLS-Xplan,", "author": ["M. Klusch", "A. Gerber", "M. Schmidt"], "venue": "Proceedings of the AAAI Fall Symposium on Semantic Web and Agents,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2005}, {"title": "Adapting golog for composition of semantic web services,", "author": ["S.A. McIlraith", "T.C. Son"], "venue": "Proceedings of the Eights Int. Conf. on Principles and Knowledge Representation and Reasoning", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2002}, {"title": "Template-based composition of semantic web services,", "author": ["E. Sirin", "B. Parsia", "J. Hendler"], "venue": "AAAI Fall Symposium on agents and the semantic web,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2005}, {"title": "Generalized Semantics-Based Service Composition,", "author": ["S. Kona", "A. Bansal", "M.B. Blake", "G. Gupta"], "venue": "IEEE Int. Conf. on Web Services,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "Automatic Service Composition Using AND/OR Graph,", "author": ["Y. Yan", "B. Xu", "Z. Gu"], "venue": "IEEE Conf. on E-Commerce Technology and the Fifth IEEE Conf. on Enterprise Computing, E-Commerce and E-Services,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "Visualizing Compositions of Services from Large Repositories,", "author": ["M. Aiello", "N. Benthem", "E. Khoury"], "venue": "IEEE Conf. on E-Commerce Technology and the Fifth IEEE Conf. on Enterprise Computing, E-Commerce and E-Services. IEEE,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Type-Aware Web Service Composition Using Boolean Satisfiability Solver,", "author": ["W. Nam", "H. Kil", "D. Lee"], "venue": "10th IEEE Conf. on E-Commerce Technology and the Fifth IEEE Conf. on Enterprise Computing, E-Commerce and E-Services,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "Customizable Business Process Composition with Query Optimization,", "author": ["K. Raman", "Y.Z.Y. Zhang", "M. Panahi", "K.-J.L.K.-J. Lin"], "venue": "10th IEEE Conf. on E-Commerce Technology and the Fifth IEEE Conf. on Enterprise Computing, E-Commerce and E- Services,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2008}, {"title": "Thiell, \u201cAn Incremental Graphbased Approach to Automatic Service Composition,", "author": ["M. Shiaa", "J. Fladmark"], "venue": "IEEE Int. Conf. on Services Computing", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "Highly Scalable Web Service Composition Using Binary Tree-Based Parallelization,", "author": ["P. Hennig", "W.-T. Balke"], "venue": "IEEE Int. Conf. on Web Services,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "Web service planner (WSPR): an effective and scalable web service composition algorithm,", "author": ["S. Oh", "D. Lee", "S. Kumara"], "venue": "Int. Journal of Web Services Research,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2007}, {"title": "Overview of the S3 Contest: Performance Evaluation of Semantic Service Matchmakers,", "author": ["M. Klusch"], "venue": "Semantic Web Services. Springer,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2012}, {"title": "An Optimal and Complete Algorithm for Automatic Web Service Composition,", "author": ["P. Rodriguez-Mier", "M. Mucientes", "J. Vidal", "M. Lama"], "venue": "Int. J. of Web Services Research (IJWSR),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "Toward the Next Wave of Services: Linked Services for the Web of Data,", "author": ["C. Pedrinaci", "J. Domingue"], "venue": "Journal of Universal Computer Science,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}, {"title": "Semantic web services,", "author": ["C. Pedrinaci", "J. Domingue", "A.P. Sheth"], "venue": "Handbook of semantic web technologies. Springer,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}, {"title": "OWLS-MX3: an adaptive hybrid semantic service matchmaker for OWL-S,", "author": ["M. Klusch", "P. Kapahnke"], "venue": "Proceedings of 3rd Int. Workshop on Semantic Matchmaking and Resource Retrieval,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2009}, {"title": "iSem: Approximated reasoning for adaptive hybrid selection of semantic services,", "author": ["M. Klusch", "P. Kapahnke"], "venue": "The semantic web: Research and applications. Springer,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2010}, {"title": "XSSD: A Fast Hybrid Semantic Web Services Discovery Method,", "author": ["D. Chu", "J. Han", "J. Li", "Y. Zhao"], "venue": "in Int. Conf. on Computer Technology and Development,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2011}, {"title": "Web Service Composition as AI Planning \u2013 a Survey,", "author": ["J. Peer"], "venue": "University of St. Gallen, Switzerland, Tech. Rep. March,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2005}, {"title": "An Integrated Approach to Automated Semantic Web Service Composition through Planning,", "author": ["O. Hatzi", "D. Vrakas", "M. Nikolaidou", "N. Bassiliades", "D. Anagnostopoulos", "I. Vlahavas"], "venue": "Transactions on Services Computing,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2011}, {"title": "WSC-08: Continuing the Web Services Challenge,", "author": ["A. Bansal", "M.B. Blake", "S. Kona", "S. Bleul", "T. Weise", "M.C. Jaeger"], "venue": "IEEE Conf. on E-Commerce Technology and the Fifth IEEE Conf. on Enterprise Computing, E-Commerce and E-Services", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2008}, {"title": "Lecue, \u201cA framework for dynamic web services composition,", "author": ["F. L\u00e9cu\u00e9", "E. Silva", "L.F. Pires"], "venue": "ECOWS Workshop on Emerging Web Services Technology,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2007}, {"title": "Towards runtime discovery, selection and composition of semantic services,", "author": ["E.G. da Silva", "L.F. Pires", "M. van Sinderen"], "venue": "Computer Communications,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2011}, {"title": "Semantic Matching of Web Services Capabilities,", "author": ["M. Paolucci", "T. Kawamura", "T.R. Payne", "K. Sycara"], "venue": "The Semantic Web - ISWC 2002,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2002}, {"title": "Automatic Web Service Composition with a Heuristic-Based Search Algorithm,", "author": ["P. Rodriguez-Mier", "M. Mucientes", "M. Lama"], "venue": "IEEE Int. Conf. on Web Services (ICWS),", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2011}, {"title": "A Formal Basis for the Heuristic Determination of Minimum Cost Paths,", "author": ["P.E. Hart", "N.J. Nilsson", "B. Raphael"], "venue": "IEEE Transactions of Systems Science and Cybernetics,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 1968}, {"title": "Hipster: An Open Source Java Library for Heuristic Search,", "author": ["P. Rodriguez-Mier", "A. Gonzalez-Sieira", "M. Mucientes", "M. Lama", "A. Bugarin"], "venue": "Iberian Conf. on Information Systems and Technologies,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "services across domains exploiting rich user-provided semantic service descriptions [2].", "startOffset": 84, "endOffset": 87}, {"referenceID": 1, "context": "Similarly, a plethora of service composition solutions have been produced spanning from mere graphical support to completely automated solutions [3]\u2013[5].", "startOffset": 145, "endOffset": 148}, {"referenceID": 3, "context": "Similarly, a plethora of service composition solutions have been produced spanning from mere graphical support to completely automated solutions [3]\u2013[5].", "startOffset": 149, "endOffset": 152}, {"referenceID": 4, "context": "service descriptions, which increasingly go beyond syntactic representations to include the semantics of the service(s) to enable more advanced computations [6], [7].", "startOffset": 157, "endOffset": 160}, {"referenceID": 5, "context": "service descriptions, which increasingly go beyond syntactic representations to include the semantics of the service(s) to enable more advanced computations [6], [7].", "startOffset": 162, "endOffset": 165}, {"referenceID": 6, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 115, "endOffset": 118}, {"referenceID": 8, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 119, "endOffset": 123}, {"referenceID": 9, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 198, "endOffset": 202}, {"referenceID": 10, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 204, "endOffset": 208}, {"referenceID": 11, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 290, "endOffset": 294}, {"referenceID": 18, "context": "Whether one looks at fully automated composition engines based on Artificial Intelligence (AI) planning techniques [8]\u2013[10], or at more constrained solutions that rely on pre-defined skeletal plans [11], [12], or at graph based approaches focused on semantic inputoutput parameter matching [13]\u2013[20], service discovery", "startOffset": 295, "endOffset": 299}, {"referenceID": 19, "context": "Moreover, response times of discovery engines are orders of magnitude above what would be acceptable for a composition engine that should it delegate the thousands discovery requests it needs to issue at composition time [21].", "startOffset": 221, "endOffset": 225}, {"referenceID": 20, "context": "2) A reference implementation of this formal framework based on the adaptation of two independently developed components, namely ComposIT [22] and iServe [2], respectively in charge of", "startOffset": 138, "endOffset": 142}, {"referenceID": 0, "context": "2) A reference implementation of this formal framework based on the adaptation of two independently developed components, namely ComposIT [22] and iServe [2], respectively in charge of", "startOffset": 154, "endOffset": 157}, {"referenceID": 21, "context": "In fact, on the Web less than 5% of the semantic Web services include preconditions and effects [23].", "startOffset": 96, "endOffset": 100}, {"referenceID": 3, "context": "problem that involves multiple research areas [5].", "startOffset": 46, "endOffset": 49}, {"referenceID": 22, "context": "Concretely, lots of efforts have been devoted to automate the discovery and composition using different approaches and techniques [24].", "startOffset": 130, "endOffset": 134}, {"referenceID": 19, "context": "competition [21] shows some of the newest advances in the automatic discovery field.", "startOffset": 12, "endOffset": 16}, {"referenceID": 23, "context": "Most relevant examples are OWLS-MX3 [25], iSem 1.", "startOffset": 36, "endOffset": 40}, {"referenceID": 24, "context": "1 [26] and XSSD [27].", "startOffset": 2, "endOffset": 6}, {"referenceID": 25, "context": "1 [26] and XSSD [27].", "startOffset": 16, "endOffset": 20}, {"referenceID": 26, "context": "From the composition side, most approaches can be categorized into: 1) classical AI planning approaches [28], where the composition problem is translated into", "startOffset": 104, "endOffset": 108}, {"referenceID": 7, "context": "Relevant approaches of the first group are [9], [10], [29].", "startOffset": 43, "endOffset": 46}, {"referenceID": 8, "context": "Relevant approaches of the first group are [9], [10], [29].", "startOffset": 48, "endOffset": 52}, {"referenceID": 27, "context": "Relevant approaches of the first group are [9], [10], [29].", "startOffset": 54, "endOffset": 58}, {"referenceID": 28, "context": "On the other hand, graph-based I/O approaches are gaining much attention since the Web Service Challenge [30].", "startOffset": 105, "endOffset": 109}, {"referenceID": 12, "context": "Some notable works in this field are [14]\u2013 [20].", "startOffset": 37, "endOffset": 41}, {"referenceID": 18, "context": "Some notable works in this field are [14]\u2013 [20].", "startOffset": 43, "endOffset": 47}, {"referenceID": 12, "context": "Concretely, [14], [15], [20] are the top-3 algorithms of", "startOffset": 12, "endOffset": 16}, {"referenceID": 13, "context": "Concretely, [14], [15], [20] are the top-3 algorithms of", "startOffset": 18, "endOffset": 22}, {"referenceID": 18, "context": "Concretely, [14], [15], [20] are the top-3 algorithms of", "startOffset": 24, "endOffset": 28}, {"referenceID": 12, "context": "Although these approaches show generally good performance and low response times, [14] and [15] do not find optimal solutions and [20] fails to find solutions in large data sets.", "startOffset": 82, "endOffset": 86}, {"referenceID": 13, "context": "Although these approaches show generally good performance and low response times, [14] and [15] do not find optimal solutions and [20] fails to find solutions in large data sets.", "startOffset": 91, "endOffset": 95}, {"referenceID": 18, "context": "Although these approaches show generally good performance and low response times, [14] and [15] do not find optimal solutions and [20] fails to find solutions in large data sets.", "startOffset": 130, "endOffset": 134}, {"referenceID": 11, "context": "in [13].", "startOffset": 3, "endOffset": 7}, {"referenceID": 29, "context": "Similarly, in [31], L\u00e9cu\u00e9 et al.", "startOffset": 14, "endOffset": 18}, {"referenceID": 30, "context": "In [32], Da Silva et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 31, "context": "The different matchmaking degrees that are typically contemplated in the literature are [33]:", "startOffset": 88, "endOffset": 92}, {"referenceID": 20, "context": "We distinguish at least two different techniques [22], [34]: backward pruning and interface dominance.", "startOffset": 49, "endOffset": 53}, {"referenceID": 32, "context": "We distinguish at least two different techniques [22], [34]: backward pruning and interface dominance.", "startOffset": 55, "endOffset": 59}, {"referenceID": 0, "context": "We developed a reference implementation of the integrated graph-based composition framework that is based on two main components: iServe [2], a service warehouse with advanced discovery support which provides the service registry and takes care of the matchmaking and service discovery activities, and ComposIT [22], which is in charge of the graph-based composition part.", "startOffset": 137, "endOffset": 140}, {"referenceID": 20, "context": "We developed a reference implementation of the integrated graph-based composition framework that is based on two main components: iServe [2], a service warehouse with advanced discovery support which provides the service registry and takes care of the matchmaking and service discovery activities, and ComposIT [22], which is in charge of the graph-based composition part.", "startOffset": 311, "endOffset": 315}, {"referenceID": 0, "context": "iServe [2], see right hand-side of Fig.", "startOffset": 7, "endOffset": 10}, {"referenceID": 0, "context": "These plugins generate descriptions expressed in terms of a simple RDF/S model, Minimal Service Model (MSM) [2], which essentially captures the intersection of existing service description formalisms.", "startOffset": 108, "endOffset": 111}, {"referenceID": 20, "context": "ComposIT [22], depicted in the left hand-side of Fig.", "startOffset": 9, "endOffset": 13}, {"referenceID": 33, "context": "based on the A* algorithm [36].", "startOffset": 26, "endOffset": 30}, {"referenceID": 34, "context": "mented using Hipster4j [37] to identify a minimal subset of the services from the graph that satisfy the request (in terms of inputs and outputs).", "startOffset": 23, "endOffset": 27}], "year": 2015, "abstractText": "In this paper we present a theoretical analysis of graph-based service composition in terms of its dependency with service discovery. Driven by this analysis we define a composition framework by means of integration with fine-grained I/O service discovery that enables the generation of a graph-based composition which contains the set of services that are semantically relevant for an input-output request. The proposed framework also includes an optimal composition search algorithm to extract the best composition from the graph minimising the length and the number of services, and different graph optimisations to improve the scalability of the system. A practical implementation used for the empirical analysis is also provided. This analysis proves the scalability and flexibility of our proposal and provides insights on how integrated composition systems can be designed in order to achieve good performance in real scenarios for the Web.", "creator": "LaTeX with hyperref package"}}}