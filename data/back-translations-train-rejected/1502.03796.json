{"id": "1502.03796", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Feb-2015", "title": "Variable and value elimination in binary constraint satisfaction via forbidden patterns", "abstract": "Variable or value elimination in a constraint satisfaction problem (CSP) can be used in preprocessing or during search to reduce search space size. A variable elimination rule (value elimination rule) allows the polynomial-time identification of certain variables (domain elements) whose elimination, without the introduction of extra compensatory constraints, does not affect the satisfiability of an instance. We show that there are essentially just four variable elimination rules and three value elimination rules defined by forbidding generic sub-instances, known as irreducible existential patterns, in arc-consistent CSP instances. One of the variable elimination rules is the already-known Broken Triangle Property, whereas the other three are novel. The three value elimination rules can all be seen as strict generalisations of neighbourhood substitution.", "histories": [["v1", "Thu, 12 Feb 2015 20:22:44 GMT  (28kb)", "http://arxiv.org/abs/1502.03796v1", "A full version of an IJCAI'13 paper to appear in Journal of Computer and System Sciences (JCSS)"]], "COMMENTS": "A full version of an IJCAI'13 paper to appear in Journal of Computer and System Sciences (JCSS)", "reviews": [], "SUBJECTS": "cs.CC cs.AI cs.DM", "authors": ["david a cohen", "martin c cooper", "guillaume escamocher", "stanislav zivny"], "accepted": false, "id": "1502.03796"}, "pdf": {"name": "1502.03796.pdf", "metadata": {"source": "CRF", "title": "Variable and Value Elimination in Binary Constraint Satisfaction via Forbidden Patterns", "authors": ["David A. Cohen"], "emails": ["dave@cs.rhul.ac.uk", "cooper@irit.fr", "guillaume.escamocher@insight-centre.org", "standa@cs.ox.ac.uk"], "sections": [{"heading": null, "text": "ar Xiv: 150 2.03 796v 1 [cs"}, {"heading": "1 Introduction", "text": "In fact, it is such that most people who are able to move in the world, to move in the world, to move in the world, to move in the world, to move in the world, to move in the world, to move in the world, in the world, in the world, to move in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in the world, in, in the world, in, in the world, in, in the world, in, in, in the world, in the world, in, in, in the world, in, in the world, in, in, in the, in, in the, in, in, in the, in, in, in, in, in, in the, in, in the, in, in, in the, in, in, in the, in, in, in the, in, in the, in the, in, in the, in, in the, in, in the, in the, in, in the, in the, in, in the, in, in the, in the, in the, in the, in, in, in the, in the, in the, in, in, in the, in the, in the, in, in the, in the, in the, in the, in the, in the, in, in the, in the, in the, in the, in, in the, in, in the, in, in, in"}, {"heading": "1.1 Simplification by variable and value elimination", "text": "In fact, most of us are able to move to another world, in which we are able, in which we are able, in which we are able to change the world, and in which we are able to change the world, \"he said in an interview with the New York Times."}, {"heading": "1.2 Our contribution", "text": "By local conditions, we mean configurations of variables, values, and constraints that do not occur. That is, we will identify (local) obstacles to variable or value imination. We will call such constructions variable elimination or value imination patterns. Surprisingly, we find that there are exactly four (three) essentially different local patterns, the absence of which allows for the elimination of variables (values). Searching for these local patterns takes polynomial time and only needs to be done during the pre-processing phase before the search. All detected obstacles to elimination can be effectively monitored during the subsequent search using techniques analogous to observed literals [20]. Whenever a variable (value) no longer participates in any obstacle pattern, it can certainly be eliminated. We show that after a sequence of variables and value iminations, the solution of the instance is always reduced to a low time to return the original instance to a polynomial reconstruction."}, {"heading": "2 Definitions", "text": "In fact, the fact is that most of them are able to assert themselves, and that they are able to assert themselves, \"he said in an interview with the\" New York Times. \""}, {"heading": "3 Variable elimination by forbidden patterns", "text": "In this paper we characterize irreducible patterns. < p = > pattern there are essentially only four (along with their irreducible partial patterns): the patterns BTP,'s subBTP,' s subBTP and's snake, shown in Figure 2. We start by showing that each of these four patterns allows variable elimination. < x lt; x ltltS, s ltS, s lt}, {"heading": "4 Characterisation of quantified var-elim patterns", "text": "Our goal is to accurately characterize all irreducible patterns that allow variable elimination in an arc-consistent pattern. < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < &"}, {"heading": "5 Value elimination patterns", "text": "It is about the question whether and to what extent it can come to a satisfaction at all. (...) It is about the question whether and to what extent it can come to a satisfaction at all. (...) It is about the question whether and to what extent it can come to a satisfaction. (...) It is about the question whether and to what extent it can come to a satisfaction. (...) It is about the question whether and to what extent it can come to a satisfaction. (...) It is about the question whether and to what extent it can come to a satisfaction. (...) It is about the satisfaction of certain responsibilities which are unnecessary, about the satisfaction of the satisfaction of the instance. (...) It is about the question to what extent the satisfaction of the satisfaction of the satisfaction of the satisfaction of the satisfaction of the satisfaction of the answer of the answer of the question. (...) It is about the question to what extent the answer of the answer of the answer of the question is concerned."}, {"heading": "6 Characterisation of value elimination patterns", "text": "asD rf\u00fc ide r\u00fc die f \u00fc die f \u00fc die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die die f die f die f die f die f die f die f die f die f der die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f die f e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e"}, {"heading": "7 Recovering one or all solutions after eliminations", "text": "We assume that all solutions are possible in ambiguous time frames. In some applications, it is only the satisfaction of the instance that is of interest. In other areas of application, such as error diagnosis [32] or the interpretation of ambiguous images [8], it is important to find all solutions or to find a representation of all solutions."}, {"heading": "8 Conclusion", "text": "This paper has introduced the concept of variable and value animation rules in binary CSPs based on the absence of quantified patterns. We have identified all irreducible quantified patterns whose absence allows for variable or value animation. Consequently, we have also identified novel tractable classes of binary CSPs. From a practical point of view, our rules can be integrated into generic constraint solvers to trim the search tree. There are several interesting directions for further research. Can we generalize the variable or value animation patterns described in this paper to CSP instances of arbitrariness (perhaps using one of the possible definitions of microstructure to limit arbitrary arbitrariness [25])? A partially positive answer to this question has recently been given by arbitrary versions of BTP [14]."}], "references": [{"title": "Consistency restoration and explanations in dynamic CSPs application to configuration", "author": ["J\u00e9r\u00f4me Amilhastre", "H\u00e9l\u00e8ne Fargier", "Pierre Marquis"], "venue": "Artif. Intell.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2002}, {"title": "Compiling CSPs: A complexity map of (non-deterministic) multivalued decision diagrams", "author": ["J\u00e9r\u00f4me Amilhastre", "H\u00e9l\u00e8ne Fargier", "Alexandre Niveau", "C\u00e9dric Pralet"], "venue": "In ICTAI,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "A microstructure based approach to constraint satisfaction optimisation problems", "author": ["Ola Angelsmark", "Johan Thapper"], "venue": "Proceedings of the Eighteenth International Florida Artificial Intelligence Research Society Conference,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "3-coloring in time o(1.3446n): A no-MIS algorithm", "author": ["Richard Beigel", "David Eppstein"], "venue": "Annual Symposium on Foundations of Computer Science, Milwaukee, Wisconsin,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1995}, {"title": "An optimal coarse-grained arc consistency algorithm", "author": ["Christian Bessi\u00e8re", "Jean-Charles R\u00e9gin", "Roland H.C. Yap", "Yuanlin Zhang"], "venue": "Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "Conflict-directed backjumping revisited", "author": ["Xinguang Chen", "Peter van Beek"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2001}, {"title": "The tractability of CSP classes defined by forbidden patterns", "author": ["David A. Cohen", "Martin C. Cooper", "P\u00e1id\u0301\u0131 Creed", "D\u00e1niel Marx", "Andr\u00e1s Z. Salamon"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Efficient systematic analysis of occlusion", "author": ["Martin C. Cooper"], "venue": "Pattern Recognition Letters,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1988}, {"title": "Fundamental properties of neighbourhood substitution in constraint satisfaction problems", "author": ["Martin C. Cooper"], "venue": "Artif. Intell.,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1997}, {"title": "A weighted CSP approach to cost-optimal planning", "author": ["Martin C. Cooper", "Marie de Roquemaurel", "Pierre R\u00e9gnier"], "venue": "Artificial Intelligence Communications,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2001}, {"title": "A dichotomy for 2-constraint forbidden CSP patterns", "author": ["Martin C. Cooper", "Guillaume Escamocher"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "Generalizing constraint satisfaction on trees: Hybrid tractability and variable elimination", "author": ["Martin C. Cooper", "Peter G. Jeavons", "Andr\u00e1s Z. Salamon"], "venue": "Artif. Intell.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}, {"title": "\u017divn\u00fd. Tractable triangles and cross-free convexity in discrete optimisation", "author": ["Martin C. Cooper", "Stanislav"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}, {"title": "A polynomial algorithm for recognizing perfect graphs. In FOCS, pages 20\u201327", "author": ["G\u00e9rard Cornu\u00e9jols", "Xinming Liu", "Kristina Vuskovic"], "venue": "IEEE Computer Society,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2003}, {"title": "Eliminating interchangeable values in constraint satisfaction problems", "author": ["Eugene C. Freuder"], "venue": "In Proceedings of AAAI-91,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1991}, {"title": "Hybrid tractable classes of binary quantified constraint satisfaction problems", "author": ["Jian Gao", "Minghao Yin", "Junping Zhou"], "venue": "In AAAI,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2011}, {"title": "Watched literals for constraint propagation in minion", "author": ["Ian P. Gent", "Christopher Jefferson", "Ian Miguel"], "venue": "editor, CP,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2006}, {"title": "The ellipsoid method and its consequences in combinatorial optimization", "author": ["M. Gr\u00f6tschel", "L. Lovasz", "A. Schrijver"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1981}, {"title": "Decomposition of domains based on the micro-structure of finite constraintsatisfaction problems", "author": ["P. Jegou"], "venue": "In Proceedings of the 11th National Conference on Artificial Intelligence,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1993}, {"title": "Boosting search with variable elimination in constraint optimization and constraint satisfaction problems", "author": ["Javier Larrosa", "Rina Dechter"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2003}, {"title": "Constraint Networks: Techniques and Algorithms", "author": ["Christophe Lecoutre"], "venue": "ISTE/Wiley,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2009}, {"title": "Microstructures for CSPs with constraints of arbitrary arity", "author": ["Achref El Mouelhi", "Philippe J\u00e9gou", "Cyril Terrioux"], "venue": "Proceedings of the Tenth Symposium on Abstraction,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2013}, {"title": "Some new tractable classes of CSPs and their relations with backtracking algorithms", "author": ["Achref El Mouelhi", "Philippe J\u00e9gou", "Cyril Terrioux", "Bruno Zanuttini"], "venue": "CPAIOR", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2013}, {"title": "Principles and Practice of Constraint Programming - 20th International Conference, CP", "author": ["Barry O\u2019Sullivan", "editor"], "venue": "Proceedings, volume 8656 of Lecture Notes in Computer Science. Springer,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Hybrid algorithms for the constraint satisfaction problem", "author": ["Patrick Prosser"], "venue": "Computational Intelligence,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1993}, {"title": "Perfect constraints are tractable", "author": ["Andr\u00e1s Z. Salamon", "Peter G. Jeavons"], "venue": "In Proceedings of the 14th International Conference on Principles and Practice of Constraint Programming,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2008}, {"title": "A dichotomy theorem for the general minimum cost homomorphism problem", "author": ["Rustem Takhanov"], "venue": "Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2010}, {"title": "Conflict-directed A* and its role in model-based embedded systems", "author": ["Brian C. Williams", "Robert J. Ragno"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2007}], "referenceMentions": [{"referenceID": 20, "context": "Constraint satisfaction has proved to be a useful modelling tool in a variety of contexts, such as scheduling, timetabling, planning, bio-informatics and computer vision [17, 24, 29].", "startOffset": 170, "endOffset": 182}, {"referenceID": 5, "context": "Such techniques include Back-marking, Back-jumping, Conflict-Directed Back-jumping [6,28].", "startOffset": 83, "endOffset": 89}, {"referenceID": 24, "context": "Such techniques include Back-marking, Back-jumping, Conflict-Directed Back-jumping [6,28].", "startOffset": 83, "endOffset": 89}, {"referenceID": 4, "context": "Of these look-ahead techniques the most common is to maintain the local consistency property called generalised arc-consistency (GAC) [5].", "startOffset": 134, "endOffset": 137}, {"referenceID": 11, "context": "It has been observed that a more general property, called the (local) Broken Triangle Property (lBTP) [13], if it holds at some variable, allows us to eliminate that variable.", "startOffset": 102, "endOffset": 106}, {"referenceID": 11, "context": "Unfortunately, this domain order is NP-hard to discover [13] for unbounded domain size, and so the lMME is less likely to be effective in practice.", "startOffset": 56, "endOffset": 60}, {"referenceID": 19, "context": "An alternative to simple variable elimination is used in Bucket Elimination [23].", "startOffset": 76, "endOffset": 80}, {"referenceID": 14, "context": "The most well-known polynomial-time detectable substitution operation is neighbourhood substitution [18].", "startOffset": 100, "endOffset": 104}, {"referenceID": 18, "context": "The term microstructure was first given a formal definition by J\u00e9gou [22]: if I is a binary CSP instance, then its microstructure is a graph \u3008A,E\u3009 where A is the set of possible variable-value assignments and E is the set of pairs of compatible variable-value assignments.", "startOffset": 69, "endOffset": 73}, {"referenceID": 17, "context": "Since a maximum clique in a perfect graph can be found in polynomial time [21], the class of binary CSP instances with a perfect microstructure is tractable [30].", "startOffset": 74, "endOffset": 78}, {"referenceID": 25, "context": "Since a maximum clique in a perfect graph can be found in polynomial time [21], the class of binary CSP instances with a perfect microstructure is tractable [30].", "startOffset": 157, "endOffset": 161}, {"referenceID": 13, "context": "Perfect graphs can also be recognized in polynomial time [16].", "startOffset": 57, "endOffset": 61}, {"referenceID": 26, "context": "Takhanov [31] gave a dichotomy for tractable conservative constraint languages for MinHom which uses the fact that an instance of binary MinHom can be solved in polynomial time if its microstructure is perfect.", "startOffset": 9, "endOffset": 13}, {"referenceID": 22, "context": "[26] make the observation that if the microstructure has a bounded number of maximal cliques then the instance will be solved in polynomial time by classical algorithms such as Forward Checking or Really Full Lookahead and hence by CSP solvers.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "Simple rules for variable or value elimination based on properties of the microstructure are used by Beigel and Eppstein [4] in their algorithms with low worst-case time bounds for such NP-complete problems as 3-COLOURING and 3SAT.", "startOffset": 121, "endOffset": 124}, {"referenceID": 2, "context": "A similar approach allows Angelsmark and Thapper [3] to reduce the problem of finding a minimum weighted independent set in the microstructure complement to the problem of counting the number of solutions to a 2SAT instance.", "startOffset": 49, "endOffset": 52}, {"referenceID": 16, "context": "Any discovered obstructions to elimination can be effectively monitored during subsequent search using techniques analogous to watched literals [20].", "startOffset": 144, "endOffset": 148}, {"referenceID": 4, "context": "There are optimal O(cd) algorithms for establishing arc consistency which repeatedly remove such values [5], where c is the number of non-trivial constraints and d the maximum domain size.", "startOffset": 104, "endOffset": 107}, {"referenceID": 10, "context": "The definitions of occurrence and reduction between quantified patterns extend definitions previously given for non-quantified patterns [12].", "startOffset": 136, "endOffset": 140}, {"referenceID": 6, "context": "Essentially we want to say that pattern P occurs in pattern Q if P is homomorphic to a sub-pattern of Q via an injective renaming of variables and a (possibly non-injective) renaming of assignments [7].", "startOffset": 198, "endOffset": 201}, {"referenceID": 11, "context": "Hence we are able to significantly extend the list of known tractable classes defined by forbidden patterns since among known tractable patterns, namely BTP [13], 2-constraint patterns [12], pivots [7] and JWP [15], only BTP (and its sub-patterns) allow variable elimination.", "startOffset": 157, "endOffset": 161}, {"referenceID": 10, "context": "Hence we are able to significantly extend the list of known tractable classes defined by forbidden patterns since among known tractable patterns, namely BTP [13], 2-constraint patterns [12], pivots [7] and JWP [15], only BTP (and its sub-patterns) allow variable elimination.", "startOffset": 185, "endOffset": 189}, {"referenceID": 6, "context": "Hence we are able to significantly extend the list of known tractable classes defined by forbidden patterns since among known tractable patterns, namely BTP [13], 2-constraint patterns [12], pivots [7] and JWP [15], only BTP (and its sub-patterns) allow variable elimination.", "startOffset": 198, "endOffset": 201}, {"referenceID": 12, "context": "Hence we are able to significantly extend the list of known tractable classes defined by forbidden patterns since among known tractable patterns, namely BTP [13], 2-constraint patterns [12], pivots [7] and JWP [15], only BTP (and its sub-patterns) allow variable elimination.", "startOffset": 210, "endOffset": 214}, {"referenceID": 11, "context": "Forbidding BTP is equivalent to the already-known local Broken Triangle Property (lBTP) [13] mentioned in Section 1.", "startOffset": 88, "endOffset": 92}, {"referenceID": 11, "context": "Since it is known that BTP is a var-elim pattern [13], we only need to prove the result for the three existential patterns: \u2203subBTP, \u2203invsubBTP and \u2203snake.", "startOffset": 49, "endOffset": 53}, {"referenceID": 8, "context": "It is worth noting that even when all solutions are required, neighbourhood substitutability can still be applied since all solutions to the original instance can be recovered from the set of solutions to the reduced instance in time which is linear in the total number of solutions and polynomial in the size of the instance [9].", "startOffset": 326, "endOffset": 329}, {"referenceID": 8, "context": "Neighbourhood substitution cannot destroy arc consistency [9], but eliminating a value by a val-elim pattern can provoke new eliminations by arc consistency, as we have seen in the above examples.", "startOffset": 58, "endOffset": 61}, {"referenceID": 8, "context": "The result of applying a sequence of neighbourhood substitution eliminations until convergence is unique modulo isomorphism [9].", "startOffset": 124, "endOffset": 127}, {"referenceID": 9, "context": "that it is present in all solution-plans) we need to determine the satisfiability of a binary CSP representing the same planning problem using the set of actions A \\ {a} [11].", "startOffset": 170, "endOffset": 174}, {"referenceID": 27, "context": "In other application areas, such as fault-diagnosis [32] or the interpretation of ambiguous pictures [8], it is important to find all solutions or a representation of all solutions from", "startOffset": 52, "endOffset": 56}, {"referenceID": 7, "context": "In other application areas, such as fault-diagnosis [32] or the interpretation of ambiguous pictures [8], it is important to find all solutions or a representation of all solutions from", "startOffset": 101, "endOffset": 104}, {"referenceID": 0, "context": "For example, the on-line configuration of a product (such as a car) by a user can be rendered tractable by the off-line compilation of all solutions into some appropriate compact form [1, 2].", "startOffset": 184, "endOffset": 190}, {"referenceID": 1, "context": "For example, the on-line configuration of a product (such as a car) by a user can be rendered tractable by the off-line compilation of all solutions into some appropriate compact form [1, 2].", "startOffset": 184, "endOffset": 190}, {"referenceID": 11, "context": "If x has been eliminated due to the absence of BTP, then it is known that any solution s of the reduced instance can be extended to a solution of I [13].", "startOffset": 148, "endOffset": 152}, {"referenceID": 21, "context": "Can we generalise the variable or value elimination patterns described in this paper to arbitrary-arity CSP instances (perhaps using one of the possible definitions of microstructure for constraints of arbitrary arity [25])? A partial positive answer to this question has recently been provided by arbitrary-arity versions of BTP [14].", "startOffset": 218, "endOffset": 222}, {"referenceID": 15, "context": "Do the variable and value elimination patterns introduced in this paper generalise to other versions of constraint satisfaction, such as the QCSP (as is the case for the tractable class defined by BTP [19]) or the Weighted CSP (as is the case for tractable class defined by the socalled joint-winner pattern [15])? The research reported in the present paper has recently led to the discovery of sound variable and value elimination rules defined by local properties which strictly generalise the absence of patterns [10].", "startOffset": 201, "endOffset": 205}, {"referenceID": 12, "context": "Do the variable and value elimination patterns introduced in this paper generalise to other versions of constraint satisfaction, such as the QCSP (as is the case for the tractable class defined by BTP [19]) or the Weighted CSP (as is the case for tractable class defined by the socalled joint-winner pattern [15])? The research reported in the present paper has recently led to the discovery of sound variable and value elimination rules defined by local properties which strictly generalise the absence of patterns [10].", "startOffset": 308, "endOffset": 312}], "year": 2015, "abstractText": "Variable or value elimination in a constraint satisfaction problem (CSP) can be used in preprocessing or during search to reduce search space size. A variable elimination rule (value elimination rule) allows the polynomial-time identification of certain variables (domain elements) whose elimination, without the introduction of extra compensatory constraints, does not affect the satisfiability of an instance. We show that there are essentially just four variable elimination rules and three value elimination rules defined by forbidding generic sub-instances, known as irreducible existential patterns, in arc-consistent CSP instances. One of the variable elimination rules is the already-known Broken Triangle Property, whereas the other three are novel. The three value elimination rules can all be seen as strict generalisations of neighbourhood substitution.", "creator": "LaTeX with hyperref package"}}}