{"id": "1502.04013", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Feb-2015", "title": "Deep Neural Programs for Adaptive Control in Cyber-Physical Systems", "abstract": "We introduce Deep Neural Programs (DNP), a novel programming paradigm for writing adaptive controllers for cy-ber-physical systems (CPS). DNP replace if and while statements, whose discontinuity is responsible for undecidability in CPS analysis, intractability in CPS design, and frailness in CPS implementation, with their smooth, neural nif and nwhile counterparts. This not only makes CPS analysis decidable and CPS design tractable, but also allows to write robust and adaptive CPS code. In DNP the connection between the sigmoidal guards of the nif and nwhile statements has to be given as a Gaussian Bayesian network, which reflects the partial knowledge, the CPS program has about its environment. To the best of our knowledge, DNP are the first approach linking neural networks to programs, in a way that makes explicit the meaning of the network. In order to prove and validate the usefulness of DNP, we use them to write and learn an adaptive CPS controller for the parallel parking of the Pioneer rovers available in our CPS lab.", "histories": [["v1", "Fri, 13 Feb 2015 14:50:22 GMT  (1215kb,D)", "http://arxiv.org/abs/1502.04013v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.RO", "authors": ["konstantin selyunin", "denise ratasich", "ezio bartocci", "radu grosu"], "accepted": false, "id": "1502.04013"}, "pdf": {"name": "1502.04013.pdf", "metadata": {"source": "CRF", "title": "Deep Neural Programs for Adaptive Control in Cyber-Physical Systems", "authors": ["K. Selyunin", "D. Ratasich", "E. Bartocci", "R. Grosu"], "emails": ["konstantin.selyunin@tuwien.ac.at", "denise.ratasich@tuwien.ac.at", "ezio.bartocci@tuwien.ac.at", "radu.grosu@tuwien.ac.at"], "sections": [{"heading": null, "text": "Keywords Cyber-physical systems, Adaptive Control, Parking, Deep Neuronal Programs, Gaussian Bayesian Networks."}, {"heading": "1. INTRODUCTION", "text": "This is an example of smart grids, smart factories, smart transportation, and smart health care [4]. Similar to living organisms, CPS operate in an uncertain, continuously evolving ecosystem, competing for a limited supply of resources; for survival, they must continuously adapt so that they respond in real time and in an optimal manner, in terms of the overall survival of organisms, their partial knowledge, their actualization, communication, and compilation capacities. To equip CPS with such extraordinary properties, various researchers have begun to wonder about the weather of our current CPS analysis, design, and implementation techniques. Going back to Paras, Chaudhuri, and Lezama to inform on a series of complex features."}, {"heading": "2. BACKGROUND", "text": "The most important tool for drawing logical conclusions is the Modus Ponens rule: Assuming that proposition A is true, and that the truth of proposition B can be inferred from the truth of proposition A, one can conclude that the statements A and B are both true. Formally: A (A) B = B = B (B) In probability theory, uncertainty in the truth of a proposition (also known as an event) is expressed as probability, and the implication between the propositions is expressed as conditional probability, which leads to a probable extension of the mode pony, known as the Bayes rule. Formally: P (A) P (B) = P (B) (B) This rule is consistent with logic, is the main mechanism for probable conclusions."}, {"heading": "3. NEURAL CODE", "text": "Traditional inequality relationships (e.g. >, \u2264, <) define a sharp (or fixed) limit on the satisfaction of a condition that is a step function (see Figure 1). Using fixed decisions in a program that is essentially based on normal RVs, distributions are defined in two halves, with unnormalized and invalid PDFs (see Figure 3: The upper right figure shows the approach of the PDF to the PDF after they each pass a normal RV through a traditional conditional statement. To avoid transforming the probability density, we introduce a special type of control structure called the Neural if, or nif for a short time. The name is coined to express the key novelty of our approach: We propose to use a smooth condition that is 2 x (x)."}, {"heading": "4. BAYESIAN-NETWORK LEARNING", "text": "Parking can be seen as a sequence of movements and twists in which each action depends on the previous one. For example, the angle of rotation typically depends on the distance traveled previously. Due to sensor noise and inaccuracy, inertia and friction forces, as well as many possible ways to perform a parking task from a starting point, we assume that the dependence between actions is probable, and in particular the RVs is distributed according to the Gaussian distributions (GD). We represent the dependencies between actions in Figure 4, where li or \u03b1j represent a distance or a rotation angle of the corresponding action, and bij is a conditional dependence between successive actions. To learn the conditional probability distributions of the GBN in Figure 4, and to fill in the targetLocations and sigmas in Listing 1, we take the successful parameters performed by a human expert."}, {"heading": "5. EXPERIMENTAL RESULTS", "text": "Our experiments were carried out on a mobile rover Pioneer P3AT-SH from Adept MobileRobots [1] (see Figure 7), which uses the Carma Devkit from SECO [21] as the main computing unit. On the included ARM CPU Tegra 3, the Robot Operating System (ROS) runs on the basis of Ubuntu 12.04."}, {"heading": "5.1 Structure of the Parking System", "text": "The Block Rover Interface detects and controls the rover, i.e. it establishes an interface to the hardware. Sensor Fusion takes the sensor values from the Rover Interface Block and provides the expected pose of the robot to the High Level Controller Engine. The engine uses the GBN Block to update the motion commands and update the motion commands that update the motion commands T7 = 1 + b43 + b221 + b21 + b32 + b32 + b32 + b32 + b231 + b243 + the motion commands."}, {"heading": "5.2 Integration into ROS", "text": "ROS [26] is a meta operating system that provides common functionality for robot tasks including process communication, packet management, and hardware abstraction. A basic building block of a system in ROS is a node called a node that performs calculations and exchanges information with other units. Nodes communicate with each other by subscribing to or publishing messages on specific topics. Thus, all nodes that subscribe to a particular topic A receive messages from nodes that are published on that topic. As the application is implemented in ROS, we use the Roslaunch utility to start the required ROS nodes (as shown in Figure 9) that correspond to the blocks specified in Section 5.1.Rover interface. RosAria is used to control the speed of the robot and provide the values of the wheel encoders for the sensor fusion node. ROS nodes imu3000 and kxtf9, which run on the Raspberry, provide data from the accelerator and the accelerator."}, {"heading": "5.3 Results", "text": "After the learning phase we obtain the parameters of the GBN, which we use in the program skeleton (Table 2). Since we follow the position on the basis of the data from sensor fusion and each movement has the experimentally learned uncertainty, we are resistant to disturbance of the actual driving distances and angles. If the current distance of the robot deviates from the planned distance, the commands, which are re-sampled from the GBN, try to compensate the deviation with the dependencies from the learning phase."}, {"heading": "6. RELATED WORK", "text": "Although probabilistic programs (PP), Gaussian Bayesian Networks (GBN) and neural networks were developed before, to the best of our knowledge, the development of smooth control instructions based on a GBN ontology is new. Ontology represents PP's knowledge of its environment and its own control logic. Probabilistic programs are represented by different languages and frameworks. [14] The authors differentiate probabilistic programs from \"traditional\" ones by the ability to grasp the values of variables by observation. Although they take into account discrete and continuous probability distributions, the transformations of Bayesian Networks and Discrete Time Markov Chains are not mentioned."}, {"heading": "7. CONCLUSION", "text": "In this work, we introduced deep neural programs (DNP), a new formalism for writing robust and adaptive controllers of the Cyberphysical System (CPS). Key to this formalism is: (i) the use of smooth probit distributions in conditional and loop instructions instead of their classic step-by-step equivalents, and (2) the use of a Gaussian Bayesian network to capture dependencies between probit distributions within conditional and loop instructions in the DPP. We validated the usefulness of DPNs by developing once and for all a parallel parallel CPS controller capable of adapting to unforeseen environmental situations, such as slippery floors or loud actors. No classical program has such capability: one would have to encode all these unforeseen situations, resulting in an incomprehensible code. In future work, we plan to examine the benefits of DPNs in the design and optimization of these controllers."}, {"heading": "8. REFERENCES", "text": "[1] Adept MobileRobots and Production. Pioneer 3-AT.A."}], "references": [{"title": "A Tutorial on Particle Filters for Online Nonlinear/Non-Gaussian Bayesian Tracking", "author": ["M. Arulampalam", "S. Maskell", "N. Gordon", "T. Clapp"], "venue": "IEEE Transactions on Signal Processing, 50(2):174\u2013188", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2002}, {"title": "Cyber-physical systems", "author": ["M. Broy", "E. Geisberger"], "venue": "driving force for innovation in mobility, health, energy and production. Acatech: The National Academy Of Science and Engineering", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Smooth Interpretation: Presentation Slides", "author": ["S. Chaudhuri", "A. Solar-Lezama"], "venue": "http://people.csail.mit.edu/asolar/Talks/ PLDI2010Final.pptx ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2014}, {"title": "Smooth interpretation", "author": ["S. Chaudhuri", "A. Solar-Lezama"], "venue": "PLDI, pages 279\u2013291", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Smoothing a program soundly and robustly", "author": ["S. Chaudhuri", "A. Solar-Lezama"], "venue": "CAV, pages 277\u2013292", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2011}, {"title": "Multi-column deep neural networks for image classification", "author": ["D. Ciresan", "U. Meier", "J. Schmidhuber"], "venue": "In Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Hybrid Probabilistic Programs", "author": ["A. Dekhtyar", "V. Subrahmanian"], "venue": "The Journal of Logic Programming, 43(3):187 \u2013 250", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2000}, {"title": "Why does unsupervised pre-training help deep learning", "author": ["D. Erhan", "Y. Bengio", "A. Courville", "P.-A. Manzagol", "P. Vincent", "S. Bengio"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2010}, {"title": "Analysis of hybrid systems: An ounce of realism can save an infinity of states", "author": ["M. Fraenzle"], "venue": "Computer  Science Logic, volume 1683 of Lecture Notes in Computer Science, pages 126\u2013139. Springer Berlin Heidelberg", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1999}, {"title": "Delta-complete analysis for bounded reachability of hybrid systems", "author": ["S. Gao", "S. Kong", "W. Chen", "E.M. Clarke"], "venue": "CoRR, abs/1404.7171", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "A Language and Program for Complex Bayesian Modelling", "author": ["W.R. Gilks", "A. Thomas", "D.J. Spiegelhalter"], "venue": "Journal of the Royal Statistical Society. Series D (The Statistician), 43(1):pp. 169\u2013177", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1994}, {"title": "Probabilistic Programming", "author": ["A.D. Gordon", "T.A. Henzinger", "A.V. Nori", "S.K. Rajamani"], "venue": "In International Conference on Software Engineering (ICSE Future of Software Engineering)", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Probability and random processes", "author": ["G. Grimmett", "D. Stirzaker"], "venue": "Oxford science publications. Clarendon Press", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1985}, {"title": "Learning bayesian networks: A unification for discrete and gaussian domains", "author": ["D. Heckerman", "D. Geiger"], "venue": "UAI, pages 274\u2013284", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1995}, {"title": "Intelligent algorithm for parallel self-parking assist of a mobile robot", "author": ["M.-A. Ibarra-Manzano", "J.-H. De-Anda-Cuellar", "C.-A. Perez-Ramirez", "O.-I. Vera-Almanza", "F.-J. Mendoza-Galindo", "M.-A. Carbajal-Guillen", "D.-L. Almanza-Ojeda"], "venue": "In Electronics, Robotics and Automotive Mechanics Conference (CERMA),", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "A sensor guided autonomous parking system for nonholonomic mobile robots", "author": ["K. Jiang", "L. Seneviratne"], "venue": "Robotics and Automation, 1999. Proceedings. 1999 IEEE International Conference on, volume 1, pages 311\u2013316 vol.1", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1999}, {"title": "Autonomous parallel parking of a car-like mobile robot by a neuro-fuzzy behavior-based controller", "author": ["M. Khoshnejad", "K. Demirli"], "venue": "Fuzzy Information Processing Society", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2005}, {"title": "Probabilistic Graphical Models: Principles and Techniques - Adaptive Computation and Machine Learning", "author": ["D. Koller", "N. Friedman"], "venue": "The MIT Press", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "CUDA on ARM: Tegra3 Based Low-Power GPU Compute Node", "author": ["M.A. Lee"], "venue": "2013. Poster presented at GPU Technical Conference", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "Multifunctional Intelligent Autonomous Parking Controllers for Carlike Mobile Robots", "author": ["T. Li", "Y.-C. Yeh", "J.-D. Wu", "M.-Y. Hsiao", "C.-Y. Chen"], "venue": "Industrial Electronics, IEEE Transactions on,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2010}, {"title": "Multi-Sensor Data Fusion - An Introduction", "author": ["H. Mitchell"], "venue": "Springer, Berlin, Heidelberg, New York", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2007}, {"title": "Learning Bayesian Networks", "author": ["R.E. Neapolitan"], "venue": "Prentice-Hall, Inc., Upper Saddle River, NJ, USA", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2003}, {"title": "Software aspects of strategic defense systems", "author": ["D.L. Parnas"], "venue": "Commun. ACM,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1985}, {"title": "ROS: an  open-source robot operating system", "author": ["M. Quigley", "K. Conley", "B. Gerkey", "J. Faust", "T.B. Foote", "J. Leibs", "R. Wheeler", "A.Y. Ng"], "venue": "ICRA Workshop on Open Source Software", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "Constraints for continuous reachability in the verification of hybrid systems", "author": ["S. Ratschan", "Z. She"], "venue": "J. Calmet, T. Ida, and D. Wang, editors, Artificial Intelligence and Symbolic Computation, volume 4120 of Lecture Notes in Computer Science, pages 196\u2013210. Springer Berlin Heidelberg", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2006}, {"title": "Artificial Intelligence: A Modern Approach", "author": ["S. Russell", "P. Norvig"], "venue": "Prentice-Hall, 3rd edition", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "Fpga-based autonomous parking of a car-like robot using fuzzy logic control", "author": ["N. Scicluna", "E. Gatt", "O. Casha", "I. Grech", "J. Micallef"], "venue": "In Electronics, Circuits and Systems (ICECS),", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2012}, {"title": "Probabilistic Robotics", "author": ["S. Thrun", "W. Burgard", "D. Fox"], "venue": "MIT Press, Cambridge", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2006}, {"title": "The Unscented Kalman Filter for Nonlinear Estimation", "author": ["E. Wan", "R. Van der Merwe"], "venue": "In Adaptive Systems for Signal Processing, Communications, and Control Symposium", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2000}, {"title": "Sreach: Combining statistical tests and bounded model checking for nonlinear hybrid systems with parametric uncertainty", "author": ["Q. Wang", "P. Zuliani", "S. Kong", "S. Gao", "E.M. Clarke"], "venue": "CoRR, abs/1404.7206", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 1, "context": "Examples of CPS include smart grids, smart factories, smart transportation, and smart health-care [4].", "startOffset": 98, "endOffset": 101}, {"referenceID": 3, "context": "Going back to Parnas, Chaudhuri and Lezama identified in a series of intriguing papers [6,7,25], the if-thenelse construct as the main culprit for program frailness.", "startOffset": 87, "endOffset": 95}, {"referenceID": 4, "context": "Going back to Parnas, Chaudhuri and Lezama identified in a series of intriguing papers [6,7,25], the if-thenelse construct as the main culprit for program frailness.", "startOffset": 87, "endOffset": 95}, {"referenceID": 22, "context": "Going back to Parnas, Chaudhuri and Lezama identified in a series of intriguing papers [6,7,25], the if-thenelse construct as the main culprit for program frailness.", "startOffset": 87, "endOffset": 95}, {"referenceID": 8, "context": "For this reason, a series of papers, of Fraenzle, Ratschan, Wang, Gao and Clarke [11, 12, 27, 32], proposed the use of an indifference region \u03b4 (see Figure 1), and rewrite the predicates in the form f(x)\u2212a> \u03b4.", "startOffset": 81, "endOffset": 97}, {"referenceID": 9, "context": "For this reason, a series of papers, of Fraenzle, Ratschan, Wang, Gao and Clarke [11, 12, 27, 32], proposed the use of an indifference region \u03b4 (see Figure 1), and rewrite the predicates in the form f(x)\u2212a> \u03b4.", "startOffset": 81, "endOffset": 97}, {"referenceID": 24, "context": "For this reason, a series of papers, of Fraenzle, Ratschan, Wang, Gao and Clarke [11, 12, 27, 32], proposed the use of an indifference region \u03b4 (see Figure 1), and rewrite the predicates in the form f(x)\u2212a> \u03b4.", "startOffset": 81, "endOffset": 97}, {"referenceID": 29, "context": "For this reason, a series of papers, of Fraenzle, Ratschan, Wang, Gao and Clarke [11, 12, 27, 32], proposed the use of an indifference region \u03b4 (see Figure 1), and rewrite the predicates in the form f(x)\u2212a> \u03b4.", "startOffset": 81, "endOffset": 97}, {"referenceID": 3, "context": "In order to alleviate this problem, Chaudhuri and Lezama [6] proposed to smoothen the steps, by passing a Gaussian input distribution through the CPS.", "startOffset": 57, "endOffset": 60}, {"referenceID": 5, "context": "Such networks, and in particular deep neural networks, have recently achieved amazing performance, for example in the recognition of sophisticated patterns [8, 10].", "startOffset": 156, "endOffset": 163}, {"referenceID": 7, "context": "Such networks, and in particular deep neural networks, have recently achieved amazing performance, for example in the recognition of sophisticated patterns [8, 10].", "startOffset": 156, "endOffset": 163}, {"referenceID": 2, "context": "In order to validate our new paradigm, we use the parking example from [5].", "startOffset": 71, "endOffset": 74}, {"referenceID": 25, "context": "This rule, consistent with logic, is the main mechanism for probabilistic inference [28].", "startOffset": 84, "endOffset": 88}, {"referenceID": 17, "context": "To avoid the complications induced by the use of the joint probability distribution (or density), each variable Xi is associated with a conditional probability distribution (CPD) that takes into account dependencies only between the variable and its direct parents [20, 28].", "startOffset": 265, "endOffset": 273}, {"referenceID": 25, "context": "To avoid the complications induced by the use of the joint probability distribution (or density), each variable Xi is associated with a conditional probability distribution (CPD) that takes into account dependencies only between the variable and its direct parents [20, 28].", "startOffset": 265, "endOffset": 273}, {"referenceID": 12, "context": "To express these dependencies we use a multivariate Gaussian Distribution (MGD) [15], which generalizes the Gaussian distribution to multiple dimensions.", "startOffset": 80, "endOffset": 84}, {"referenceID": 21, "context": "The probability density then can be written as follows [24]:", "startOffset": 55, "endOffset": 59}, {"referenceID": 21, "context": "We than use the fact that any GBN can be converted to an MGD [24] in our learning routine.", "startOffset": 61, "endOffset": 65}, {"referenceID": 13, "context": "use the recursive notation in [16], where the value of the coefficients bi, will be learned in the update step below.", "startOffset": 30, "endOffset": 34}, {"referenceID": 21, "context": "Once we derived the symbolic form of the precision matrix (T7 in our example), we use the training set, in order to learn the actual values of its parameters, as described in the algorithm from [24].", "startOffset": 194, "endOffset": 198}, {"referenceID": 18, "context": "The rover uses the Carma Devkit from SECO [21] as a main computational unit.", "startOffset": 42, "endOffset": 46}, {"referenceID": 19, "context": "4 The Sensor Fusion Block Parking is often performed by applying predefined rules [22] or following a specific trajectory [22].", "startOffset": 82, "endOffset": 86}, {"referenceID": 19, "context": "4 The Sensor Fusion Block Parking is often performed by applying predefined rules [22] or following a specific trajectory [22].", "startOffset": 122, "endOffset": 126}, {"referenceID": 20, "context": "A common method is state estimation (also called filtering) [23,30].", "startOffset": 60, "endOffset": 67}, {"referenceID": 27, "context": "A common method is state estimation (also called filtering) [23,30].", "startOffset": 60, "endOffset": 67}, {"referenceID": 28, "context": "In this application, an unscented Kalman filter (UKF) [31] is used.", "startOffset": 54, "endOffset": 58}, {"referenceID": 23, "context": "2 Integration into ROS ROS [26] is a meta-operating system that provides common functionality for robotic tasks including process communication, package management, and hardware abstraction.", "startOffset": 27, "endOffset": 31}, {"referenceID": 6, "context": "Probabilistic programs are represented by different languages and frameworks [9, 13, 14].", "startOffset": 77, "endOffset": 88}, {"referenceID": 10, "context": "Probabilistic programs are represented by different languages and frameworks [9, 13, 14].", "startOffset": 77, "endOffset": 88}, {"referenceID": 11, "context": "Probabilistic programs are represented by different languages and frameworks [9, 13, 14].", "startOffset": 77, "endOffset": 88}, {"referenceID": 11, "context": "The authors in [14] differentiate probabilistic programs from \u201ctraditional\u201d ones, by the ability to sample at random from the distribution and condition the values of variables via observation.", "startOffset": 15, "endOffset": 19}, {"referenceID": 3, "context": "In [6], the authors adapted the signal and image processing technique called Gaussian smoothing (GS), for program optimization.", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "In [7] this idea was developed further and soundness and robustness for smooth interpretation of programs was defined.", "startOffset": 3, "endOffset": 6}, {"referenceID": 21, "context": "Learning Bayesian Networks comprises different tasks and problem formulations: i) Learning the structure of the network, ii) Learning the conditional probabilities for the given structure and iii) Performing querying-inference for a given Bayesian Network [24].", "startOffset": 256, "endOffset": 260}, {"referenceID": 13, "context": "In [16] the authors introduce a unified method for both discrete and continuous domains to learn the parameters of Bayesian Network, using a combination of prior knowledge and statistical data.", "startOffset": 3, "endOffset": 7}, {"referenceID": 16, "context": "Various formulations of a mobile parking problem were extensively studied for robots with different architectures [17\u2013 19, 22, 29].", "startOffset": 114, "endOffset": 130}, {"referenceID": 19, "context": "Various formulations of a mobile parking problem were extensively studied for robots with different architectures [17\u2013 19, 22, 29].", "startOffset": 114, "endOffset": 130}, {"referenceID": 26, "context": "Various formulations of a mobile parking problem were extensively studied for robots with different architectures [17\u2013 19, 22, 29].", "startOffset": 114, "endOffset": 130}, {"referenceID": 19, "context": "For instance, in [22] the authors use a custom spatial configuration of the ultrasonic sensors and binaural method to perceive the environment and park the robot using predefined rules.", "startOffset": 17, "endOffset": 21}, {"referenceID": 16, "context": "In [19] the authors approximate the trajectory for the parking task with a polynomial curve, that the robot could follow with the constraints satisfied, and used fuzzy controller to minimize the difference between specified trajectory and actual path.", "startOffset": 3, "endOffset": 7}, {"referenceID": 0, "context": "State estimators [3, 23, 30] and in particular Kalman filters [30, 31] are commonly used methods to increase the confidence of the state estimate evaluated out of raw sensor measurements.", "startOffset": 17, "endOffset": 28}, {"referenceID": 20, "context": "State estimators [3, 23, 30] and in particular Kalman filters [30, 31] are commonly used methods to increase the confidence of the state estimate evaluated out of raw sensor measurements.", "startOffset": 17, "endOffset": 28}, {"referenceID": 27, "context": "State estimators [3, 23, 30] and in particular Kalman filters [30, 31] are commonly used methods to increase the confidence of the state estimate evaluated out of raw sensor measurements.", "startOffset": 17, "endOffset": 28}, {"referenceID": 27, "context": "State estimators [3, 23, 30] and in particular Kalman filters [30, 31] are commonly used methods to increase the confidence of the state estimate evaluated out of raw sensor measurements.", "startOffset": 62, "endOffset": 70}, {"referenceID": 28, "context": "State estimators [3, 23, 30] and in particular Kalman filters [30, 31] are commonly used methods to increase the confidence of the state estimate evaluated out of raw sensor measurements.", "startOffset": 62, "endOffset": 70}], "year": 2015, "abstractText": "We introduce Deep Neural Programs (DNP), a novel programming paradigm for writing adaptive controllers for cyber-physical systems (CPS). DNP replace if and while statements, whose discontinuity is responsible for undecidability in CPS analysis, intractability in CPS design, and frailness in CPS implementation, with their smooth, neural nif and nwhile counterparts. This not only makes CPS analysis decidable and CPS design tractable, but also allows to write robust and adaptive CPS code. In DNP the connection between the sigmoidal guards of the nif and nwhile statements has to be given as a Gaussian Bayesian network, which reflects the partial knowledge, the CPS program has about its environment. To the best of our knowledge, DNP are the first approach linking neural networks to programs, in a way that makes explicit the meaning of the network. In order to prove and validate the usefulness of DNP, we use them to write and learn an adaptive CPS controller for the parallel parking of the Pioneer rovers available in our CPS lab.", "creator": "LaTeX with hyperref package"}}}