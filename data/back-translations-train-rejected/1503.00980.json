{"id": "1503.00980", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Mar-2015", "title": "On memetic search for the max-mean dispersion problem", "abstract": "Given a set $V$ of $n$ elements and a distance matrix $[d_{ij}]_{n\\times n}$ among elements, the max-mean dispersion problem (MaxMeanDP) consists in selecting a subset $M$ from $V$ such that the mean dispersion (or distance) among the selected elements is maximized. Being a useful model to formulate several relevant applications, MaxMeanDP is known to be NP-hard and thus computationally difficult. In this paper, we present a highly effective memetic algorithm for MaxMeanDP which relies on solution recombination and local optimization to find high quality solutions. Computational experiments on the set of 160 benchmark instances with up to 1000 elements commonly used in the literature show that the proposed algorithm improves or matches the published best known results for all instances in a short computing time, with only one exception, while achieving a high success rate of 100\\%. In particular, we improve 59 previous best results out of the 60 most challenging instances. Results on a set of 40 new large instances with 3000 and 5000 elements are also presented. The key ingredients of the proposed algorithm are investigated to shed light on how they affect the performance of the algorithm.", "histories": [["v1", "Tue, 3 Mar 2015 15:43:36 GMT  (59kb)", "http://arxiv.org/abs/1503.00980v1", "22 pages"]], "COMMENTS": "22 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["xiangjing lai", "jin-kao hao"], "accepted": false, "id": "1503.00980"}, "pdf": {"name": "1503.00980.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["laixiangjing@gmail.com", "hao@info.univ-angers.fr"], "sections": [{"heading": null, "text": "ar Xiv: 150 3.00 980v 1 [cs.A I] 3 MGiven a set of V of n elements and a distance matrix [dij] n \u00d7 n between the elements, the problem of maximum mean dispersion (MaxMeanDP) is to select a subset M of V so as to maximize the mean dispersion (or distance) between the selected elements. Since MaxMeanDP is a useful model for formulating several relevant applications, it is known that it is NP-hard and therefore mathematically difficult. In this paper, we present a highly effective memetic algorithm for MaxMeanDP that relies on solution recombination and local optimization to find high-quality solutions. Computer experiments on a set of 160 benchmark instances with up to 1000 elements, often used in the literature, show that the proposed algorithm improves or matches the best known results for all instances, and how the most important instances are represented in the 5000 instances."}, {"heading": "1 Introduction", "text": "Considering a complete graph G = (V, E, D) in which V is the problem of n wells, E is the set of n \u00b7 (n \u2212 1) 2edges, and D represents the set of edge weights dij (i 6 = j), the generic problem of propagation consists in selecting a subset M of V so that some objective function f is defined, which is given on the subgraph. [1] The maximum extension of expansion between the individual elements DP (Jin-Kao Hao).Preprint, which is optimized at Elsevier 4 March 2015, induced by M [20]. In related literature, a vertex v-V is also called an element, and the edge weight dij D is called the distance (or diversity) between the elements i and j.According to the objective function to be optimized."}, {"heading": "2 Memetic Algorithm for Max-Mean Dispersion Problem", "text": "Memetic search is a well-known metaheuristic framework that aims to provide the search with a desirable trade-off between intensification and diversification through the combined use of a crossover operator (to generate new promising solutions) and a local optimization process (to improve the solutions generated locally) [17,18]."}, {"heading": "2.1 General Procedure", "text": "The proposed memetic algorithm (referred to as MAMMDP) adopts the principles and guidelines for developing effective MA for discrete combinatorial problems (13). In fact, the overall performance of a memetic algorithm largely depends on the implementation of these two key components, which must be carefully designed according to the specific problem structure. Furthermore, the proposed MAMMDP algorithm uses a population scheme based on the path linking method [11] to ensure a strong intensification of the search. The general approach of our MAMMDP algorithm is outlined in Algorithm 1, in which s and sw represent the best solution found so far and the worst solution in the population in terms of objective value, and PairSet is the group of solution pairs (si, sj), which is initially composed of all possible solution pairs (si, sj) in the population and is dynamically updated."}, {"heading": "2.2 Search Space and Solution Representation", "text": "Considering a MaxMeanDP instance denoted by a set of V of n elements and its distance matrix D = [dij] n \u00b7 n, the search space examined by our MAMMDP algorithm consists of all possible subsets of V, i.e., the subset M of V can be expressed by an n-dimensional binary vector (x1, x2,..., xn), where xi 1 takes if element i belongs to M, and 0 others.In other words, the search space is composed of all possible n-dimensional binary vectors, i.e., for each candidate solution s = {(x1, x2,..., xn): xi, xi, 0, 1, 1 \u2264 i \u2264 n}. The size of the search space is clearly limited by O (2n).For each candidate solution s = (x1, x2,..., xn) its quality is determined by the mean value of the formula (f)."}, {"heading": "2.3 Population Initialization", "text": "In our memetic algorithm, the initial population of p solutions is generated as follows: First, we create p-random solutions, whereby each component xi (i = 1, 2,..., n) of a solution (x1, x2,..., xn) is randomly assigned a value from {0, 1} based on a uniform probability distribution. Then, the taboo search method (see Section 2.4) is applied to each of the solutions generated to optimize them to a locally optimal solution, and the resulting solutions are used to form the initial population."}, {"heading": "2.4 Local Optimization using Tabu Search", "text": "Local optimization is a key component of a memetic algorithm and generally guarantees the role of an intensified search to find a high-quality local optimum. In this study, we conceive a taboo search method (TS) as a local optimization method that proves most effective when applied alone. In view of a neighborhood structure (N (s) and a starting solution (s0), our taboo search method is iteratively replaced by a suitable neighboring solution (s) until the stop condition is met, i.e., the best solution (sb) is not improved for successive iterations (referred to as depth of TS). In each iteration of TS, the move performed is recorded in the tabu list to prevent the reverse move from being performed for the next tt iteration, i.e., the best solution (sb) is not improved for successive iterations (sb) (as a tabu list and controlled by a special tabu list management strategy."}, {"heading": "2.4.1 Move and Neighborhood", "text": "Neighborhood N1 of our taboo search algorithm is defined by the operator with a rotational motion, which consists of changing the value of a single variable xi into its complementary valley 1 \u2212 xi. As such, neighborhood N1 (n) consists of all possible solutions that can be achieved by applying the rotational motion curve to s. Thus, the size of neighborhood N1 (s) is limited by O (n), where n is the number of components in s."}, {"heading": "2.4.2 Fast Neighborhood Evaluation Technique", "text": "In our TS method, we use a fast neighborhood evaluation technique to examine the neighborhood N1. For this purpose, we use an n-dimensional vector W = (p1, p2,.., pn) to effectively calculate the tensile value (i.e. the change in the lens value) of any possible motion applicable to the current solution, with the entry pi representing the sum of the distances between the element i and the selected elements for the current solution, i.e., pi = performed j-M; j 6 = i dij, where M is the set of selected elements. If a one-sided motion is performed, i.e. a variable xi is reversed as xi-xi (1 \u2212 xi), the tensile value p-i can be quickly calculated as follows:"}, {"heading": "2.4.3 Tabu List Management Strategy", "text": "In our TS procedure, we use a taboo list management strategy to dynamically set the taboo period tt, which is adjusted according to a technique proposed in [9], with the taboo period determined by a periodic step function. If the current iteration is y, then the taboo period of a move is marked by tt (y). Strictly speaking, our taboo period function is defined for each period by a sequence of values (a1, a2, \u00b7 \u00b7, aq + 1) and a sequence of interval margins (y1, y2, \u00b7, yq + 1), so that for each y in [yi, yi + 1 \u2212 1] tt (y) = ai + rand (2), rand (2) being a random integer between 0 and 2. Here q is set to 15, (a) i = 1, \u00b7 \u00b7, 15 = Tmax 8 (1, 2, and more)."}, {"heading": "2.5 Crossover Operator", "text": "In a memetic algorithm, the crossover operator is another essential component whose main goal is to bring the search process to new promising search regions in order to diversify the search. In this thesis, we examine two crossover operators for MaxMeanDP; the first is the unified crossover (denoted by algorithm 3); the Uniform Crossover Operator for MaxMeanDP1: Input: Two superior solutions s1 = (x11, x 1 2,.) and s 2 = (x21, x 2,.,., x 2 n); 2: Output: Offspring solution so = (xo1, x o 2,., x o.) 3: for i = 1 to n do 4: r."}, {"heading": "2.6 Population Updating Rule", "text": "If a new progeny solution is created by the crossover operator, the taboo search procedure is first improved and then the population is updated according to the following rule: If the progeny solution differs from an existing solution in the population and is objectively better than the worst solution in the population, the progeny solution replaces the worst solution in the population. Otherwise, the population remains unchanged."}, {"heading": "3 Experimental Results and Comparisons", "text": "In this section, we conduct extensive computational experiments to evaluate the performance of our memetic algorithm based on a large number of MaxMeanDP benchmark instances."}, {"heading": "3.1 Benchmark Instances", "text": "Our computational experiments are performed on two types of instances, type I and type II. The distances of type I instances are randomly generated at the interval [\u2212 10, 10] with a uniform probability distribution, while the distances of type II instances are generated from [\u2212 10, \u2212 5] -5 [5, 10] with the same probability distribution. In addition, the set of benchmark instances used in our experiments consists of two substances. The first substance set consists of 80 type I instances and 80 type II instances with the number of elements n in the range of 20 to 1000. These 160 instances have been comprehensively adopted from the previous studies [4,6,16] and are available online at http: / / www.optsicom.es. The second substance set consists of 20 type I instances and 20 type II large substances with n = 3000 or 5000. The source code of the generator used to extract these 40 large substances will be available 1."}, {"heading": "3.2 Parameter Settings and Experimental Protocol", "text": "Our memetic algorithm is based on only three parameters: the population size p, the depth of the taboo search \u03b1 and the maximum taboo duration Tmax. For p and \u03b1 we follow [24] and set p = 10, \u03b1 = 50000, while we set Tmax = 120 empirically. This parameter setting is used for all experiments reported in the work. Even if fine-tuning these parameters would lead to better results, as we show below, our algorithm with this fixed setting is able to achieve high performance in relation to the state of the art. Our memetic algorithm is programmed in C + + and compiled with g + + compiler under the flag \"-O2.\" 2. All experiments are carried out on a computer with an Intel Xeon E5440 processor (2.83 GHz CPU and 2Gb RAM), with the operating system running Linux."}, {"heading": "3.3 Computational Results and Comparisons on Small and Medium Sized Instances", "text": "Our first experiment aims to evaluate the performance of our MAMMDP algorithm on the set of 160 popular instances with up to 1000 elements. The1 The source code for generating these instances will be available on our website. 2 Our best results and the source code of our algorithm will be made available online. 3 dmclique, ftp: / / dimacs.rutgers.edu / pub / dsj / clique, the benchmark procedure is compiled by the gcc compiler with the \"Flagcomputational results of MAMMDP on the 60 medium sized instances are summarized in Table 1, whereas the results of the 100 small instances with n \u2264 150 in Annex 6 are compiled using the same computational statistics. The first two columns of the table each give the name and size of the instances. Column 3 shows the best objective values (fpre) of the literature, which are calculated from the three most recent and best performed algorithms."}, {"heading": "3.4 Computational Results on Large-Scale Instances", "text": "In order to further evaluate the performance of the proposed MAMMDP algorithm on the large instances, we independently perform MAMMDP 20 time tests to solve each instance of the second set of benchmarks with n \u2265 3000, and report the arithmetic statistics in Table 2 with the same information as in Table 1. Table 2 shows that our MAMMDP algorithm achieves a success rate of at least 10 / 20 for instances with 3000 elements, which is an interesting indicator of its good performance in these instances. However, the success rate of the algorithm on even larger instances with n = 5000 varies significantly between 4 / 20 and 19 / 20, which means that these large instances are much more difficult. However, the difference between the best and average targets for all instances is very small. These results can serve as a reference for future comparisons of new MaxMeanDP algorithms."}, {"heading": "4 Analysis and Discussions", "text": "In this section, we will examine some key components of the proposed algorithm to understand its impact on the performance of the proposed algorithm."}, {"heading": "4.1 Effectiveness of the Tabu Search Procedure", "text": "First, to demonstrate the effectiveness of the underlying taboo search method of the proposed algorithm, we are conducting an additional experiment on 30 representative cases, each instance being independently solved 20 times by the taboo search method with randomly generated initial solutions.The calculation results are summarized in Table 3, where f * and t (s) each represent the best known result to date and the average computation time over 20 iterations.Other symbols are the same as in Table 1. Note that the improved results compared to the previously best known values fpre are given in bold prints.Table 3 shows that our taboo search method alone is capable of achieving the previously best known result for the instances tested. Furthermore, the average objective value obtained (favored) for all instances tested is still better than the previous best known result (fpre) in 29 out of 30 instances. These results show that our taboo search method is effectively designed with respect to the existing maxim search algorithms, which are fairly effective for DP."}, {"heading": "4.2 Influence of the Crossover Operator", "text": "In this section we present a study on the influence of the crossover operator on the performance of the proposed algorithm by comparing the Uniform Crossover Operator (UC) and the Greedy Crossover Operator (GC). The experiment is conducted on a set of 40 large instances with n \u2265 3000, with the memetic algorithms with UC and GC being performed 20 times each for each of the tested instances. The computational results of both algorithms are summarized in Table 4, including the best (fbest) and average (favorite) objective values achieved over 20 runs, the success rate (SR) and the average computing time in seconds (t (s) to achieve the corresponding best, with better results between these two algorithms in bold. The lines Better, Equal, Worse each denote the number of instances for which an algorithm provides better, equal, worse results compared to the other algorithm."}, {"heading": "4.3 Improvement of Memetic Algorithm Over the Tabu Search Procedure", "text": "As shown in Section 4.1, our taboo search method is very competitive compared to existing algorithms in the literature. It is therefore interesting to know whether our MAMMDP algorithm has a significant improvement over its underlying local optimization method (the taboo search). To compare the performance of the MAMMDP algorithm and its underlying taboo search method, the taboo multiple search method (MTS) and the MAMMDP algorithms are each performed 20 times for each of the 40 representative instances with n = 3000 or 5000 within the same cutoff periods specified in Section 3.2. Note that in MTS, the taboo search method is performed in a multi-start method with a randomly generated starting solution for each restart until the timeout limit is reached, with the taboo search method being restarted once the depth of the taboo search (set to 5 x 104) MTS is composed of the same taboo search results as the table of both larger algorithms, where the MTS results are composed of two smaller parts each."}, {"heading": "5 Conclusions", "text": "In this paper, we propose the first population-based memetic algorithm (MAMMDP) to solve the NP-hard max-mean dispersion problem (MaxMeanDP). MAMMDP integrates an effective taboo search method and a random crossover operator, adopting an original scheme for parent selection. The calculation results for a large number of 200 benchmark instances show that the proposed algorithm is very competitive compared to the state-of-the-art algorithms in literature. Specifically, it improves the previous best known results for all tested instances with n \u2264 1000 with an average computation time of less than 14 seconds and a success rate of 100%, with only one exception. In particular, we found new and improved best results for 59 of the 60 most difficult instances. We also show computational results on 40 large instances with 3000 or 5000 elements, which can serve as a reference for lower limits for the evaluation of new MaxCrosanDP algorithms. Investigations of several important components confirm that both the proposed search method and the underlying problem could also contribute to the proposed solution of the large number of elements."}, {"heading": "Acknowledgments", "text": "The work is partly supported by the LigeRo project (2009-2014) and a post-doctoral fellowship for X.J. Lai from the Pays de la Loire region (France) and the PGMO project (2014-0024H) of the Jacques Hadamard Mathematical Foundation."}], "references": [{"title": "Tabu search versus GRASP for the maximum diversity problem", "author": ["R. Aringhieri", "R. Cordone", "Y. Melzani"], "venue": "4OR: A Quarterly Journal of Operations Research 6(1),45\u201360", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2008}, {"title": "Comparing local search metaheuristics for the maximum diversity problem", "author": ["R. Aringhieri", "R. Cordone"], "venue": "Journal of the Operational Research Society", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Construction and improvement algorithms for dispersion problems", "author": ["R. Aringhieri", "R. Cordone", "A. Grosso"], "venue": "European Journal of Operational Research", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Tabu search for the max-mean dispersion problem. http://www.uv.es/rmarti/paper/docs/mdp10.pdf", "author": ["Carrasco R", "P.T. Anthanh", "M. Gallego", "F. Gort\u00e1zar", "A. Duarte", "R. Mart\u00ed"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "A heuristic approach for the maxmin diversity problem based on max-clique", "author": ["F. Della Croce", "A. Grosso", "M. Locatelli"], "venue": "Computers & Operations Research", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "A hybrid heuristic approach based on a quadratic knapsack formulation for the max-mean dispersion problem", "author": ["F. Della Croce", "M. Garraffa", "F. Salassa"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Tabu search and grasp for the maximum diversity problem", "author": ["A. Duarte", "R. Mart\u00ed"], "venue": "European Journal of Operational Research", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Greedy randomized search procedure with exterior path relinking for differential dispersion minimization", "author": ["A. Duarte", "J. S\u00e1nchez-Oro", "M.G.C. Resende", "F. Glover", "R. Mart\u00ed"], "venue": "Information Sciences", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "An efficient memetic algorithm for the graph partitioning problem", "author": ["P. Galinier", "Z. Boujbel", "C. Fernandes M"], "venue": "Annals of Operations Research", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Fundamentals of scatter search and path relinking", "author": ["Glover F", "M. Laguna", "R. Mart\u00ed"], "venue": "Control Cybernetics", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2000}, {"title": "Heuristic algorithms for the maximum diversity problem", "author": ["F. Glover", "C.C. Kuo", "K.S. Dhir"], "venue": "Journal of Information and Optimization Sciences", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1998}, {"title": "Memetic algorithms in discrete optimization", "author": ["J.K. Hao"], "venue": "Handbook of Memetic Algorithms. Studies in Computational Intelligence 379, Springer,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "The page trust algorithm: how to rank web pages when negative links are allowed", "author": ["C. Kerchove", "P.V. Dooren"], "venue": "Proceedings SIAM International Conference on Data Mining,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2008}, {"title": "A branch and bound algorithm for the maximum diversity problem", "author": ["R. Mart\u00ed", "M. Gallego", "A. Duarte"], "venue": "European Journal of Operational Research", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "GRASP and path relinking for the equitable dispersion problem", "author": ["R. Mart\u00ed", "F. Sandoya"], "venue": "Computers & Operations Research 40(12),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "A gentle introduction to memetic algorithms", "author": ["P. Moscato", "C. Cotta"], "venue": "Handbook of Metaheuristics,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2003}, {"title": "P.(Eds.) Handbook of Memetic Algorithms", "author": ["F. Neri", "C. Cotta", "Moscato"], "venue": "Studies in Computational Intelligence", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2011}, {"title": "A simple and effective algorithm for the MaxMin diversity problem", "author": ["D.C. Porumbel", "J.K. Hao", "F. Glover"], "venue": "Annals of Operations Research", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2011}, {"title": "The equitable dispersion problem", "author": ["O.A. Prokopyev", "N. Kong", "D.L. Martinez-Torres"], "venue": "European Journal of Operational Research", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "Iterated tabu search for the maximum diversity problem", "author": ["G. Palubeckis"], "venue": "Applied Mathematics and Computation", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "MaxMinMin p-dispersion problem: A variable neighborhood search approach", "author": ["B. Saboonchi", "P. Hansen", "S. Perron"], "venue": "Computers & Operations Research", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "A hybrid metaheuristic method for the maximum diversity problem", "author": ["Q.H. Wu", "J.K. Hao"], "venue": "European Journal of Operational Research", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2013}], "referenceMentions": [{"referenceID": 18, "context": "induced by M is optimized [20].", "startOffset": 26, "endOffset": 30}, {"referenceID": 0, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 1, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 6, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 10, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 13, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 19, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 21, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 307, "endOffset": 326}, {"referenceID": 4, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 433, "endOffset": 445}, {"referenceID": 17, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 433, "endOffset": 445}, {"referenceID": 20, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 433, "endOffset": 445}, {"referenceID": 2, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 586, "endOffset": 592}, {"referenceID": 18, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 586, "endOffset": 592}, {"referenceID": 2, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 891, "endOffset": 899}, {"referenceID": 7, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 891, "endOffset": 899}, {"referenceID": 18, "context": "At first, if the cardinality of M is fixed to a given number m, the related equitable dispersion problems include the following four classic variants: (1) the max-sum diversity problem, also known as the maximum diversity problem (MDP), which is to maximize the sum of distances among the selected elements [1,2,7,12,15,21,24]; (2) the max-min diversity problem that aims to maximize the minimum distance among the selected elements [5,19,22,23]; (3) the maximum minsum dispersion problem (MaxMinsumDP) that aims to maximize the minimum aggregate dispersion among the selected elements [3,20]; (4) the minimum differential dispersion problem (MinDiffDP) whose goal is to minimize the difference between the maximum and minimum aggregate dispersion among the selected elements to guarantee that each selected element has the approximately same total distance from the other selected elements [3,8,20].", "startOffset": 891, "endOffset": 899}, {"referenceID": 3, "context": ", the size of M is allowed to vary from 2 to n, the related equitable dispersion problems include the max-mean dispersion problem (MaxMeanDP) and the weighted MaxMeanDP [4,6,16,20].", "startOffset": 169, "endOffset": 180}, {"referenceID": 5, "context": ", the size of M is allowed to vary from 2 to n, the related equitable dispersion problems include the max-mean dispersion problem (MaxMeanDP) and the weighted MaxMeanDP [4,6,16,20].", "startOffset": 169, "endOffset": 180}, {"referenceID": 14, "context": ", the size of M is allowed to vary from 2 to n, the related equitable dispersion problems include the max-mean dispersion problem (MaxMeanDP) and the weighted MaxMeanDP [4,6,16,20].", "startOffset": 169, "endOffset": 180}, {"referenceID": 18, "context": ", the size of M is allowed to vary from 2 to n, the related equitable dispersion problems include the max-mean dispersion problem (MaxMeanDP) and the weighted MaxMeanDP [4,6,16,20].", "startOffset": 169, "endOffset": 180}, {"referenceID": 18, "context": "In this study, we focus on MaxMeanDP which can be described as follows [20].", "startOffset": 71, "endOffset": 75}, {"referenceID": 14, "context": "MaxMeanDP can be naturally expressed as a quadratic integer program with binary variables xi that takes 1 if element i is selected and 0 otherwise [16,20], i.", "startOffset": 147, "endOffset": 154}, {"referenceID": 18, "context": "MaxMeanDP can be naturally expressed as a quadratic integer program with binary variables xi that takes 1 if element i is selected and 0 otherwise [16,20], i.", "startOffset": 147, "endOffset": 154}, {"referenceID": 18, "context": "In addition to its theoretical signification as a strongly NP-hard problem [20], MaxMeanDP is notable for its ability to model a variety of real-world applications, such as web pages ranks [14], community mining [25], and others mentioned in [4].", "startOffset": 75, "endOffset": 79}, {"referenceID": 12, "context": "In addition to its theoretical signification as a strongly NP-hard problem [20], MaxMeanDP is notable for its ability to model a variety of real-world applications, such as web pages ranks [14], community mining [25], and others mentioned in [4].", "startOffset": 189, "endOffset": 193}, {"referenceID": 3, "context": "In addition to its theoretical signification as a strongly NP-hard problem [20], MaxMeanDP is notable for its ability to model a variety of real-world applications, such as web pages ranks [14], community mining [25], and others mentioned in [4].", "startOffset": 242, "endOffset": 245}, {"referenceID": 18, "context": "presented a mixed-integer 0-1 linear programming formulation and solved small instances with up to 100 elements with the CPLEX solver [20].", "startOffset": 134, "endOffset": 138}, {"referenceID": 14, "context": "Subsequently, Mart\u00ed and Sandoya proposed a GRASP with the path relinking method (GRASPPR) [16], and the computational results show that GRASP-PR outperforms the previously reported methods.", "startOffset": 90, "endOffset": 94}, {"referenceID": 5, "context": "reported a hybrid heuristic approach based on a quadratic knapsack formulation [6], and their computational experiment shows that the hybrid approach is superior to the GRASP-PR method.", "startOffset": 79, "endOffset": 82}, {"referenceID": 3, "context": "proposed a diversified tabu search algorithm by combining a short-term tabu search procedure and a long-term tabu search procedure [4], and the computational results show that this algorithm clearly dominates the previous GRASP-PR method.", "startOffset": 131, "endOffset": 134}, {"referenceID": 15, "context": "Memetic search is a well-known metaheuristic framework which aims to provide the search with a desirable trade-off between intensification and diversification through the combined use of a crossover operator (to generate new promising solutions) and a local optimization procedure (to locally improve the generated solutions) [17,18].", "startOffset": 326, "endOffset": 333}, {"referenceID": 16, "context": "Memetic search is a well-known metaheuristic framework which aims to provide the search with a desirable trade-off between intensification and diversification through the combined use of a crossover operator (to generate new promising solutions) and a local optimization procedure (to locally improve the generated solutions) [17,18].", "startOffset": 326, "endOffset": 333}, {"referenceID": 11, "context": "The proposed memetic algorithm (denoted by MAMMDP) adopts the principles and guidelines of designing effective MA for discrete combinatorial problems [13].", "startOffset": 150, "endOffset": 154}, {"referenceID": 9, "context": "Additionally, the proposed MAMMDP algorithm uses a population scheme which borrows from the path relinking method [11] to ensure a strong intensification search.", "startOffset": 114, "endOffset": 118}, {"referenceID": 8, "context": "In our TS procedure, we use a tabu list management strategy to dynamically tune the tabu tenure tt, which is adapted according to a technique proposed in [9] where the tabu tenure is given by a periodic step function.", "startOffset": 154, "endOffset": 157}, {"referenceID": 4, "context": "The distances of Type I instances are randomly generated in the interval [\u221210, 10] with a uniform probability distribution, while the distances of Type II instances are generated from [\u221210,\u22125]\u222a [5, 10] with the same probability distribution.", "startOffset": 194, "endOffset": 201}, {"referenceID": 3, "context": "These 160 instances were extensively adopted by the previous studies [4,6,16] and are available online at http://www.", "startOffset": 69, "endOffset": 77}, {"referenceID": 5, "context": "These 160 instances were extensively adopted by the previous studies [4,6,16] and are available online at http://www.", "startOffset": 69, "endOffset": 77}, {"referenceID": 14, "context": "These 160 instances were extensively adopted by the previous studies [4,6,16] and are available online at http://www.", "startOffset": 69, "endOffset": 77}, {"referenceID": 21, "context": "For p and \u03b1, we follow [24] and set p = 10, \u03b1 = 50000 while setting Tmax = 120 empirically.", "startOffset": 23, "endOffset": 27}, {"referenceID": 3, "context": "Each instance is independently solved 20 times, and improved results are indicated in bold compared to the previous best known results fpre of the literature reported in [4,6,16].", "startOffset": 170, "endOffset": 178}, {"referenceID": 5, "context": "Each instance is independently solved 20 times, and improved results are indicated in bold compared to the previous best known results fpre of the literature reported in [4,6,16].", "startOffset": 170, "endOffset": 178}, {"referenceID": 14, "context": "Each instance is independently solved 20 times, and improved results are indicated in bold compared to the previous best known results fpre of the literature reported in [4,6,16].", "startOffset": 170, "endOffset": 178}, {"referenceID": 3, "context": "Memetic Algorithm Instance n fpre [4,6,16] fbest favg SR t(s)", "startOffset": 34, "endOffset": 42}, {"referenceID": 5, "context": "Memetic Algorithm Instance n fpre [4,6,16] fbest favg SR t(s)", "startOffset": 34, "endOffset": 42}, {"referenceID": 14, "context": "Memetic Algorithm Instance n fpre [4,6,16] fbest favg SR t(s)", "startOffset": 34, "endOffset": 42}, {"referenceID": 14, "context": "Column 3 indicates the best objective values (fpre) of the literature which are compiled from the best results yielded by three recent and best performing algorithms, namely GRASP-PR [16], a hybrid heuristic approach [6], and a diversified tabu search method [4] (from http://www.", "startOffset": 183, "endOffset": 187}, {"referenceID": 5, "context": "Column 3 indicates the best objective values (fpre) of the literature which are compiled from the best results yielded by three recent and best performing algorithms, namely GRASP-PR [16], a hybrid heuristic approach [6], and a diversified tabu search method [4] (from http://www.", "startOffset": 217, "endOffset": 220}, {"referenceID": 3, "context": "Column 3 indicates the best objective values (fpre) of the literature which are compiled from the best results yielded by three recent and best performing algorithms, namely GRASP-PR [16], a hybrid heuristic approach [6], and a diversified tabu search method [4] (from http://www.", "startOffset": 259, "endOffset": 262}, {"referenceID": 3, "context": "In [4,16], the cutoff time limits are set to 90, 600, and 1800 seconds for instances with the size 500, 750, and 1000, respectively, and in [6] the cutoff time limits are respectively set to 60 and 600 seconds for the instances with the size 150 and 500.", "startOffset": 3, "endOffset": 9}, {"referenceID": 14, "context": "In [4,16], the cutoff time limits are set to 90, 600, and 1800 seconds for instances with the size 500, 750, and 1000, respectively, and in [6] the cutoff time limits are respectively set to 60 and 600 seconds for the instances with the size 150 and 500.", "startOffset": 3, "endOffset": 9}, {"referenceID": 5, "context": "In [4,16], the cutoff time limits are set to 90, 600, and 1800 seconds for instances with the size 500, 750, and 1000, respectively, and in [6] the cutoff time limits are respectively set to 60 and 600 seconds for the instances with the size 150 and 500.", "startOffset": 140, "endOffset": 143}, {"referenceID": 14, "context": "4 GHz CPU with 3 GB RAM [16]; the hybrid heuristic approach was run on a computer with an Intel Core i5-3550 3.", "startOffset": 24, "endOffset": 28}, {"referenceID": 5, "context": "30GHz CPU with 4GB RAM [6] and the diversified tabu search method was run on a computer with an Intel Core 2 Quad CPU and 6 GB RAM [4].", "startOffset": 23, "endOffset": 26}, {"referenceID": 3, "context": "30GHz CPU with 4GB RAM [6] and the diversified tabu search method was run on a computer with an Intel Core 2 Quad CPU and 6 GB RAM [4].", "startOffset": 131, "endOffset": 134}, {"referenceID": 3, "context": "by the state of the art algorithms [4,6,16].", "startOffset": 35, "endOffset": 43}, {"referenceID": 5, "context": "by the state of the art algorithms [4,6,16].", "startOffset": 35, "endOffset": 43}, {"referenceID": 14, "context": "by the state of the art algorithms [4,6,16].", "startOffset": 35, "endOffset": 43}, {"referenceID": 3, "context": "It should be mentioned that compared to the previous methods for MaxMeanDP, such as those in [4], the success of our tabu search method may be attributed to the combined use of the neighborhood N1, the fast neighborhood evaluation technique and its dynamic tabu list management strategy.", "startOffset": 93, "endOffset": 96}], "year": 2015, "abstractText": "Given a set V of n elements and a distance matrix [dij ]n\u00d7n among elements, the max-mean dispersion problem (MaxMeanDP) consists in selecting a subset M from V such that the mean dispersion (or distance) among the selected elements is maximized. Being a useful model to formulate several relevant applications, MaxMeanDP is known to be NP-hard and thus computationally difficult. In this paper, we present a highly effective memetic algorithm for MaxMeanDP which relies on solution recombination and local optimization to find high quality solutions. Computational experiments on the set of 160 benchmark instances with up to 1000 elements commonly used in the literature show that the proposed algorithm improves or matches the published best known results for all instances in a short computing time, with only one exception, while achieving a high success rate of 100%. In particular, we improve 59 previous best results out of the 60 most challenging instances. Results on a set of 40 new large instances with 3000 and 5000 elements are also presented. The key ingredients of the proposed algorithm are investigated to shed light on how they affect the performance of the algorithm.", "creator": "LaTeX with hyperref package"}}}