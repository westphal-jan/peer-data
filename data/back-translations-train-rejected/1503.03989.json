{"id": "1503.03989", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Mar-2015", "title": "An implementation of Apertium based Assamese morphological analyzer", "abstract": "Morphological Analysis is an important branch of linguistics for any Natural Language Processing Technology. Morphology studies the word structure and formation of word of a language. In current scenario of NLP research, morphological analysis techniques have become more popular day by day. For processing any language, morphology of the word should be first analyzed. Assamese language contains very complex morphological structure. In our work we have used Apertium based Finite-State-Transducers for developing morphological analyzer for Assamese Language with some limited domain and we get 72.7% accuracy", "histories": [["v1", "Fri, 13 Mar 2015 09:03:21 GMT  (464kb)", "http://arxiv.org/abs/1503.03989v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["mirzanur rahman", "shikhar kumar sarma"], "accepted": false, "id": "1503.03989"}, "pdf": {"name": "1503.03989.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["APERTIUM BASED ASSAMESE", "MORPHOLOGICAL ANALYZER", "Mirzanur Rahman", "Shikhar Kumar Sarma"], "emails": [], "sections": [{"heading": null, "text": "DOI: 10.5121 / ijnlc.2015.4102 23Technology. Morphology examines the word structure and word formation of a language. In the current scenario of NLP research, morphological analysis techniques have become more popular day by day. For the processing of each language, the morphology of the word should first be analyzed. Assamese language contains a very complex morphological structure. In our work we have used apertium-based finite-state transducer for the development of morphological analyzers for Assam language with a limited domain and we obtained 72.7% accuracy KEYWORDS assamese language, morphology, Natural Language Processing, FST1.INTRODUCTION Assamese is the main language spoken in Assam. Assam state is the northeastern part of the country. Assamese language served as a bridge language between different language communities throughout the territory of the state. Asamese is a language we derive from today two Arabic languages."}, {"heading": "2. MORPHOLOGY OF A LANGUAGE", "text": "In Language Technology Research, morphological analysis examines the structure of words and word formation in a language. Words in a language can be divided into many small units known as morphemes [10]. Recognition of different morphemes in a word with their lexical properties is known as morphological analysis. For example, in English Girls = Girl + so Root: Girl (category- noun) o Affix: \"s \u00b2 (indeterminate plural marker) In the above example, the word\" Girls \"is a combination of\" s \"morpheme\" and \"s\" morpheme. \"When we analyze a word with a morphological analyzer, it should provide all combinations of morphemes with their lexical properties."}, {"heading": "3. PRIOR ARTS", "text": "In this section, we will attempt to summarize all reported work related to Assamese morphological analysis. In [3], the authors have presented Building Morphological Analyzers with the suffix stripping method for the four languages - Assamese, Bengali, Bodo and Oriya. In the proposed mechanism, they have dealt with inflationary suffixes only, which involves identifying individual suffixes from a series of suffixes attached to a trunk / root, using morpheme sequencing rules.Initially, the analyzer analyzes the flexed form of a word in suffixes and stems using a root / stem dictionary), a list of suffixes that include all possible suffixes that may encompass different categories (to identify a valid suffix), and the morpheme sequencing rules."}, {"heading": "4. IMPLEMENTATION USING APERTIUM AND LTTOOLBOX", "text": "Apertium is a rules-based open source machine shallow translation platform [11]. It is free software and is published under the terms of the GNU General Public License. It includes the engine, maintenance tools, and open linguistic data for multiple language pairs. Lttoolbox is a toolbox for lexical processing, morphological analysis, and word generation. Lttoolbox used finite-state transducers (FST). FST are a type of finite-state automata that can be used as morphological single-pass analyzers. In Apertium, the analyzer data is stored in the dictionary (Dix) format of Apertium with XML syntax. The analyzer can easily be converted into a morphological generator from the morphological database (Monodix), whichever way the system reads the dictionary. If the system reads the analyzer on the left, we get the analyzer to the right of the analyzer."}, {"heading": "4.1. Dictionary", "text": "An Apertium-based system can use two types of dictionaries, Monolingual and Bilingual Dictionary: Monolingual Dictionary is used for Morphological Analyzer & Generator and Bilingual Dictionary is used for machine translation."}, {"heading": "4.2. Paradigm definitions <pardef>", "text": "A paradigm is the complete set of related inflective and productive derivative word forms of a given category. A paradigm can be understood as a small dictionary of alternative transformations that can be linked to parts of words (or entries of another paradigm) to specify regularities in the lexical processing of dictionary entries, such as regularities of inflection. In the definition, in addition to the root word, it contains additional information such as category, gender, number, person, fall marker, tense, etc."}, {"heading": "4.3. Element for Reference to a Paradigm", "text": "Apertium provides a lexico-semantic level to work with the inflection of a word. It introduces the lexeme into the derivative while simultaneously following the inflection of the derivative lexeme. It is used within < pardefs > Entry. Main advantage of using the reference paradigm is that it is not necessary to write all the inflected forms of a lexeme into a morphological dictionary entry because it can be derived from other paradigms."}, {"heading": "4.4. Morpheme", "text": "The entire root word (morphem) is contained in the dictionary created for Morphological Analyzer. The dictionary differs from a conventional dictionary because it contains other information with morphemes such as lexical categories and the corresponding paradigm."}, {"heading": "4.5. Lttoolbox Modules", "text": "Lttoolbox contains three modules, lexical processing (lt-comp) > morphological analysis & generation (lt-proc) and expansion (lt-expand).For morphological analysis lt-comp and lt-proc module are required, lt-comp for processing and ltproc for generation [12].Lt-comp module is responsible for assembling our morphological dictionaries into their own finite representation and lt-comp module is responsible for processing the compiled input data into required output.4.5.1. Compilation: lt-comp module compile the given.dix format file in binary format from left to right (LR) or from right to lest (RL).When we compile with LR, it generates an analyzer and RL usually generates a generator.Syntax of lt-Comp: lt-Comp $: from right to lep (R) file format (L)."}, {"heading": "4.6. Meaning of Analyzers Output format", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.7. Current Dictionary", "text": "In our current work, we have considered only a limited number of words with selected Parts-of-Speech (POS) categories. The following table shows a summary of our database entries used. As source of our dictionary, we use the following Assamese text corpus, which we received from the Language Technology Development Project of Gauhati University Asamiya Abhidhan [9]. All dictionary entries are made manually using Notepad + + Software. The lexical categories of the keywords are linguistically checked so that the output of the analyzer is correct."}, {"heading": "5. EVALUATION AND TEST RESULT", "text": "In the table above (Table # 1), we have seen that the number of dictionary entries is only 24565, which is not very high. As the work continues, we can assume that in the future we will have an XML dictionary with a large number of entries. Here, we have checked only the most commonly used words in the Assamic language. So far, we have not added a rule for lexical selection in the Apertium machine, which is why sometimes it cannot properly analyze a word. For example, the Assamic word can be used as a suffix or it can be used as a personal name. Most of the time, the word (man in general) is used as a suffix in Assamic sentences, but if someone uses that word as a personal name (although the word (jhon) can be used as a suffix)."}, {"heading": "6. CONCLUSION", "text": "In this paper, we discuss the implementation of a morphological analyzer using the toolbox of Apertium & Lt.Currently, this analyzer can only handle inflexible morphology, as we exclude the morphology of derivatives and work on nouns, pronouns, verbs and adverbs. Our current dictionary can only provide information on suffixes. From the previous work (in Section III), we can see that maximum work is done using the suffix stripping methodology. Only in a limited number of the work reported [5, 8] an unattended technique has been implemented to analyze the morphology.Here, we have applied the supervised finite-state transducer method (FST) using the apertium engine, as finite-state transducers have manyadvantages [13]. With the help of a single source, FST can work as a bidirectional engine for both the analysis as well as for the per second as for generating and for the thousands of words (are compact)."}, {"heading": "ACKNOWLEDGEMENTS", "text": "The authors thank the Department of Information Technology of Gauhati University for providing the corpus that helped us build the MA system and the staff of the Language Technology Development Project of Gauhati University for their immense support."}], "references": [{"title": "Assamese, Its Formation and Development", "author": ["Bani Kanta Kakati"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1962}, {"title": "Developing Morphological Analyzer for Four Indian Languages Using A Rule Based Affix Stripping Approach\u201d, Linguistic Data Consortium for Indian Languages, CIIL", "author": ["Mona Parakh", "Rajesha N"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "A Suffix based Noun and Verb Classifier for an Inflectional Language", "author": ["Navanath Saharia", "Utpal Sharma", "Jugal Kalita"], "venue": "International Conference on Asian Language Proceesing(IALP-10),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Acquisition of Morphology of an Indic Language from Text Corpus", "author": ["Sharma", "Utpal", "Kalita", "Jugal K", "Das", "Rajib K"], "venue": "ACM Transactions of Asian Language Information Processing (TALIP),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Analysis and Evaluation of Stemming Algorithms: A case study with Assamese", "author": ["Navanath Saharia", "Utpal Sharma", "Jugal Kalita"], "venue": "Proceedings of the International Conference on Advances in Computing, Communications and Informatics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "An Improved Stemming Approach Using HMM for a Highly Inflectional Language", "author": ["Navanath Saharia", "Kishori M. Konwar", "Utpal Sharma", "Jugal Kalita"], "venue": "Proceedings of 14th International Conference on Intelligent Text Processing and Computational Linguistics (CICLing),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Unsupervised Learning of Morphology of a Highly Inflectional Language", "author": ["Utpal Sharma"], "venue": "Phd. Thesis,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "There are two variations of Assamese language according to dialectical regions [2] i.", "startOffset": 79, "endOffset": 82}, {"referenceID": 1, "context": "\uf0b7 In [3], the authors have presented building Morphological Analyzers using the Suffix Stripping method for the four languages \u2013 Assamese, Bengali, Bodo and Oriya.", "startOffset": 5, "endOffset": 8}, {"referenceID": 2, "context": "\uf0b7 In [4], the authors have presented A Suffix-based Noun and Verb Classifier for an Inflectional Language.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "\uf0b7 In [5], the authors describe an approach to unsupervised learning of morphology from an unannotated corpus for Assamese Language in their paper \u201cAcquisition of Morphology of an Indic Language from Text Corpus\u201d.", "startOffset": 5, "endOffset": 8}, {"referenceID": 4, "context": "\uf0b7 In [6], the authors have presented suffix stripping approach, where they add a rule engine which generates all the possible suffix sequences for analyzing morphology of a word.", "startOffset": 5, "endOffset": 8}, {"referenceID": 5, "context": "\uf0b7 In [7], the authors combine a rule based algorithm and HMM based algorithm.", "startOffset": 5, "endOffset": 8}, {"referenceID": 6, "context": "\uf0b7 In [8] Utpal Sarma proposed an unsupervised method for learning morphology of a language in his Ph.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "Only limited no of [5, 8] reported work has implement unsupervised technique for analyzing the morphology.", "startOffset": 19, "endOffset": 25}, {"referenceID": 6, "context": "Only limited no of [5, 8] reported work has implement unsupervised technique for analyzing the morphology.", "startOffset": 19, "endOffset": 25}], "year": 2015, "abstractText": "Morphological Analysis is an important branch of linguistics for any Natural Language Processing Technology. Morphology studies the word structure and formation of word of a language. In current scenario of NLP research, morphological analysis techniques have become more popular day by day. For processing any language, morphology of the word should be first analyzed. Assamese language contains very complex morphological structure. In our work we have used Apertium based Finite-State-Transducers for developing morphological analyzer for Assamese Language with some limited domain and we get 72.7% accuracy", "creator": "Microsoft\u00ae Word 2010"}}}