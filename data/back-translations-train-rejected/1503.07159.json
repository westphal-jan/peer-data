{"id": "1503.07159", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Mar-2015", "title": "Modeling context and situations in pervasive computing environments", "abstract": "In pervasive computing environments, various entities often have to cooperate and integrate seamlessly in a \\emph{situation} which can, thus, be considered as an amalgamation of the context of several entities interacting and coordinating with each other, and often performing one or more activities. However, none of the existing context models and ontologies address situation modeling. In this paper, we describe the design, structure and implementation of a generic, flexible and extensible context ontology called Rover Context Model Ontology (RoCoMO) for context and situation modeling in pervasive computing systems and environments. We highlight several limitations of the existing context models and ontologies, such as lack of provision for provenance, traceability, quality of context, multiple representation of contextual information, as well as support for security, privacy and interoperability, and explain how we are addressing these limitations in our approach. We also illustrate the applicability and utility of RoCoMO using a practical and extensive case study.", "histories": [["v1", "Tue, 24 Mar 2015 17:14:02 GMT  (1103kb,D)", "http://arxiv.org/abs/1503.07159v1", null]], "reviews": [], "SUBJECTS": "cs.CY cs.AI cs.HC", "authors": ["preeti bhargava", "shivsubramani krishnamoorthy", "ashok agrawala"], "accepted": false, "id": "1503.07159"}, "pdf": {"name": "1503.07159.pdf", "metadata": {"source": "CRF", "title": "Modeling context and situations in pervasive computing environments", "authors": ["Preeti Bhargava", "Shivsubramani Krishnamoorthy", "Ashok Agrawala"], "emails": ["prbharga@cs.umd.edu", "shiv@cs.umd.edu", "agrawala@cs.umd.edu"], "sections": [{"heading": null, "text": "Keywords - Context-aware Computing, Context Modeling and Representation, Situation ModelingF"}, {"heading": "1 INTRODUCTION", "text": "In fact, most of them are able to move to another world, to move to another world, to move to another world, to move to another world, to move to another world, to move to another world, to move to another world, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move."}, {"heading": "2 MOTIVATION", "text": "We describe a simple but practical case study here to motivate and illustrate the diverse nature of the context, and the skills that context models and ontologies should possess to depict and model this situation in real-time pervasive computer systems and environments. We will return to this case study in Sections 5 and 6 to illustrate RoCoMO's modeling capabilities. To illustrate, we have selected a situation from the field of rescue and evacuation, but this in no way limits the applicability and universality of RoCoMO. A fire event takes place in a room on the fourth floor of a building on a university campus. Firefighters and reactionaries use a contextual system to coordinate rescue efforts. A reactionary, using the system, gets updated readings from two temperature sensors in the combustion room. With this contextual information, the system determines the time that reactionaries have before the building is evacuated."}, {"heading": "3 RELATED WORK IN CONTEXT AND SITUATION MODELING", "text": "In this context, it is also worth mentioning the fact that most of them are people who are able to get involved in another country, in a country where they are able, in which they are able to get established; in other countries, it is so that they are able to get established; in other countries, it is so that they are able to get established; in other countries, it is so that they are able to get established and get established; in other countries, it is so that they are able to get established and get established."}, {"heading": "4 STRUCTURE, DESIGN AND IMPLEMENTATION OF ROCOMO", "text}, {"heading": "5 ANALYSIS AND EVALUATION OF RO-", "text": "COMO Bettini et al. [15] and Ye et al. [18] have defined a set of requirements that should support both context models 6 and ontologies for ubiquitous computing environments. We evaluate RoCoM and RoCoMO based on these criteria and explain how they meet them:"}, {"heading": "5.1 Representation of static and dynamic information", "text": "Contextual information can be static, i.e. those aspects of a ubiquitous system that are invariant, such as a person's date of birth. However, the majority of contextual information is dynamic, such as location, and its persistence is highly variable. Each element of RoCoM ontology, starting with top-level classes such as \"entity,\" \"activity,\" and \"event,\" divides its contextual information into two hierarchies - static and dynamic. This allows a simple distinction between contextual information that is persistent over a long period of time (static) and those that frequently need to be updated due to its freshness (dynamic)."}, {"heading": "5.2 Representation of temporal characteristics of primitives", "text": "For each primitive such as an enterprise, activity or event, we have defined a time class in which properties such as start time - the time at which the event / activity began or the enterprise arose, end time - the time at which the event / activity ended or the enterprise ceased to exist (which corresponds to the current time, if the individual still exists), duration or lifespan of an individual (difference in start time and end time) and repetition - frequency of repetition of an event / activity. The following OWL code snippet shows the time class: < class rdf: about = \"http: / / mind7.cs.umd.edu: 8134 / Rover / time # < < / time\" > < / class > < owl: DatatypeProperty rdf: about = \"http: / / mind7.cs.umd.edu: 8134 / Rover / time # startTime # < < < rfs: Resource > & / owd.edu: http: / / / owd.Resourd.edu / / / / /"}, {"heading": "5.3 Timestamping", "text": "Dynamic context information timestamping allows the system to determine the freshness and versioning of context information, further enabling conflicts and ambiguities to be resolved. RoCoMO timestamps context information on two levels: 1) fine-grained - timestamping each dynamic context instance of a single instance of a primitive to track when it was last changed and by which entity, and 2) coarse-grained - timestamping the individual instance itself to determine when it was changed and from which entity. < Axiom > < annotatedTarget rdf: ydatf & lt; lt; < < <"}, {"heading": "5.4 Machine-interpretable representation of contextual information, Efficient context provisioning and Granularity of context", "text": "The model and ontology must use a machine-interpretable context representation to address heterogeneity through semantic annotation.These annotations can enable the automatic utilization and transformation of information into distributed context scenarios, as well as automatic context thinking; they should provide efficient access paths to contextual information and represent it at various levels of abstraction, such as the location of a user on a fine-grained level in terms of width / length and on a coarse-grained level in terms of the name of a city or building. RoCoMO is implemented in OWL2 DL, which is expressive and allows for a more versatile representation of knowledge. In OWL, context can be represented as annotated semantics through data properties and relationships between different elements via object properties. It also allows automatic context thinking. In addition, OWL represents information hierarchically, allowing for an efficient delivery of context and multiple levels of abstraction or granular representation."}, {"heading": "5.5 Encoding bias/ Comparability", "text": "Contextual information sources represent a variety of sensors and devices that often use different measurement and encoding systems7 that result in a heterogeneous set of values that describe the same units. Therefore, context model and ontology must not depend on a particular symbol-level encoding, such as the representation of the date in a particular format. They should provide tools for comparing and converting values with different scales and encodings. To achieve this, we comment on all measurable contextual information with an annotation property called \"scale\" defined in a RoCoMO scheme (this scheme enables the matrification of any OWL statement that is part of RoCoMO)."}, {"heading": "5.6 Quality of Context (QoC)", "text}, {"heading": "5.7 Provenance and Traceability", "text": "In order to provide adequate control and interpretation of the contextual information, the model and the ontology should provide the means to determine the source of the data and the transformations. < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <, \"< < < < < <,\" < < < < < <, \"< < < < <,\" < < < <, \"<\" < \"<\" < < < \"<"}, {"heading": "5.8 Heterogeneity and Mobility", "text": "Pervasive computing environments are characterized by distribution, heterogeneity, unpredictability, and unreliable communication connections, so the model and ontology should support these requirements and allow aggregation and merging of data when needed. RoCoM is an ontological model that promotes knowledge sharing and reuse between distributed systems and applications in ubiquitous computing environments. Thus, even when the sources of context are heterogeneous, distributed, and partitioned, contextual information can be shared and aggregated across environments."}, {"heading": "5.9 Ease of development", "text": "RoCoMO is based on the principle of model-driven development. Ontology is also available to the public. Developers therefore have sufficient support in development and implementation."}, {"heading": "5.10 Flexibility, extensibility, applicability, generality, evolvability and completeness", "text": "Context models and ontologies should not be rigid, but flexible and expandable; therefore, they should not be limited to a single domain and should be able to support new and diverse areas of application; they should evolve with the applications and their context needs. RoCoMO is modular in structure and clearly distinguishes between core and application ontology; in addition, additional concepts can be added as applications evolve; therefore, it is easily expandable, flexible and developable; it does not target a particular domain in ubiquitous computing and should be applicable in general and across multiple applications and domains; as a result, we do not claim that ontology is complete."}, {"heading": "5.11 Interoperability", "text": "Since several existing projects use standard upper ontologies, any generic ontology should be interoperable, i.e. its term definitions must be consistent with other standard, generic, and consensus sontologies such as SOUPA [3], which also allows for the reuse of domain knowledge [8]. We designed RoCoMO to be interoperable with other ontologies, such as SOUPA [3], via the equivalent class and equivalentProperty OWL statements. < Class rdf: about = \"& person; person\" > rdfs: label equiml: lang = \"en\" > person < / rdfs label: > person < physical label: < Class: < df: < weblabel: < < / <"}, {"heading": "5.12 Clarity, Coherence, Redundancy and Orthogonality", "text": "The concepts in RoCoMO are unique, unambiguous, independent and uniform."}, {"heading": "5.13 Security and Privacy", "text": "A group is an instance of type \"Access Group.\" This class has object properties such as \"Groupmember,\" which include the entities such as users or devices that can be assigned to an instance of the group. \"Access Group\" also has an object property called \"Privileges,\" which defines the permissions that the group can have. These permissions can take the form of an \"activity\" that the group is allowed to execute. Each entity can belong to several access groups, while each access group can have multiple entities and privileges. This form of access control, which is achieved by assigning users to groups and not to individual users, reduces the number of involved associations that need to be managed. Therefore, it is easier to set security policies within this framework."}, {"heading": "6 MODELING THE FIRE INCIDENT CASE STUDY USING ROCOMO", "text": "In this section, we review the Fire Incident Case Study from Section 2 and illustrate how RoCoMO can be used to model it. Figure 3 shows a graphical representation of the situation modeled in RoCoMO. At the time t0, the Fire Incident Event triggers the following situation and sets the evacuation target. This goal can be divided into smaller sub-targets that can be accomplished by one or more activities. Entity Responder1 performs the activity of updated temperature measurements, at the time t1, to obtain the context information information of the room Room123 - the updated temperature measurements of the temperature sensors TempSensor1 and Tempor2.The goal of this activity is to determine the remaining time for the evacuation. Since the information is timed, the system can periodically release it due to its freshness and this triggers any ambiguity of the system."}, {"heading": "7 CONCLUSION AND FUTURE WORK", "text": "In this paper, we have described a generic, flexible and extensible ontology called Rover Context Model Ontology (RoCoMO) and demonstrated its benefits for context and situation modeling in ubiquitous computer environments using a practical case study. We have identified several shortcomings in contemporary context models and ontologies and explained how RoCoMO remedies them. We have also identified the benefits of their capabilities by evaluating them against various criteria that ontologies should have for context and situation modeling. Our next step is to develop a GUI that allows users to browse and explore the RoCoM ontologies, as well as expand and modify them. An API for working with ontology will also be available. Our goal is to encourage users to develop applications and systems using this ontology so that they can be used both in isolation and integrated with Rover II.10."}], "references": [{"title": "Towards a better understanding of context and context-awareness", "author": ["G. Abowd", "A. Dey", "P. Brown", "N. Davies", "M. Smith", "P. Steggles"], "venue": "Handheld and Ubiquitous Computing. Springer, 1999, pp. 304\u2013307.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1999}, {"title": "Hierarchical situation modeling and reasoning for pervasive computing", "author": ["S. Yau", "J. Liu"], "venue": "Software Technologies for Future Embedded and Ubiquitous Systems, 2006 and the 2006 Second International Workshop on Collaborative Computing, Integration, and Assurance. SEUS 2006/WCCIA 2006. The Fourth IEEE Workshop on, 2006.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Soupa: Standard ontology for ubiquitous and pervasive applications", "author": ["H. Chen", "F. Perich", "T. Finin", "A. Joshi"], "venue": "Mobile and Ubiquitous Systems: Networking and Services, 2004. MOBIQUITOUS 2004. The First Annual International Conference on, 2004, pp. 258\u2013267.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Representing and managing the context of a situation", "author": ["S. Krishnamoorthy", "P. Bhargava", "M. Mah", "A. Agrawala"], "venue": "The Computer Journal, vol. 55 (8), 2012.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "An ontological context model for representing a situation and the design of an intelligent context-aware middleware", "author": ["P. Bhargava", "S. Krishnamoorthy", "A. Agrawala"], "venue": "Proceedings of the 2012 ACM Conference on Ubiquitous Computing, 2012, pp. 1016\u20131025.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2012}, {"title": "An ontology for contextaware pervasive computing environments", "author": ["H. Chen", "T. Finin", "A. Joshi"], "venue": "The Knowledge Engineering Review, vol. 18, no. 03, pp. 197\u2013207, 2003.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "An ontologybased context model in intelligent environments", "author": ["T. Gu", "X. Wang", "H. Pung", "D. Zhang"], "venue": "Proceedings of communication networks and distributed systems modeling and simulation conference, 2004, pp. 270\u2013275.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2004}, {"title": "Towards an extensible context ontology for ambient intelligence", "author": ["D. Preuveneers", "J. Van den Bergh", "D. Wagelaar", "A. Georges", "P. Rigole", "T. Clerckx", "Y. Berbers", "K. Coninx", "V. Jonckers", "K. De Bosschere"], "venue": "Ambient intelligence, pp. 148\u2013159, 2004.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "Cool: A context ontology language to enable contextual interoperability", "author": ["T. Strang", "C. Linnhoff-Popien", "K. Frank"], "venue": "Distributed applications and interoperable systems. Springer, 2003, pp. 236\u2013247.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2003}, {"title": "Use of ontologies in a pervasive computing environment", "author": ["A. Ranganathan", "R. McGrath", "R. Campbell", "M. Mickunas"], "venue": "The Knowledge Engineering Review, vol. 18, no. 03, pp. 209\u2013220, 2003.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2003}, {"title": "Working document on gloss ontology", "author": ["J. Coutaz", "A. Dearle", "S. Dupuy-Chessa", "G. Kirby", "C. Lachenal", "R. Morrison", "G. Rey", "E. Zirintsis"], "venue": "Arxiv preprint arXiv:1006.5661, 2010.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "A comprehensive context modeling framework for pervasive computing systems", "author": ["R. Reichle", "M. Wagner", "M. Khan", "K. Geihs", "J. Lorenzo", "M. Valla", "C. Fra", "N. Paspallis", "G. Papadopoulos"], "venue": "Distributed applications and interoperable systems. Springer, 2008, pp. 281\u2013295.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2008}, {"title": "Ontology-based context modeling", "author": ["R. Krummenacher", "T. Strang"], "venue": "Proceedings Third Workshop on Context- Aware Proactive Systems (CAPS 2007)(June 2007), 2007.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "A survey of context modelling and reasoning techniques", "author": ["C. Bettini", "O. Brdiczka", "K. Henricksen", "J. Indulska", "D. Nicklas", "A. Ranganathan", "D. Riboni"], "venue": "Pervasive and Mobile Computing, vol. 6, no. 2, pp. 161\u2013180, 2010.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2010}, {"title": "Ontology-based models in pervasive computing systems", "author": ["J. Ye", "L. Coyle", "S. Dobson", "P. Nixon"], "venue": "The Knowledge Engineering Review, vol. 22, no. 4, pp. 315\u2013347, 2007.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}, {"title": "Modelling and using sensed context information in the design of interactive applications", "author": ["P. Gray", "D. Salber"], "venue": "Engineering for Human-Computer Interaction, pp. 317\u2013335, 2001.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "Dey and Abowd [1] describe a context-aware system as one that \u201cuses context to provide relevant information and/or services to the user, where relevancy depends on the user\u2019s task.", "startOffset": 14, "endOffset": 17}, {"referenceID": 1, "context": "\u201d [2].", "startOffset": 2, "endOffset": 5}, {"referenceID": 2, "context": "[3] and Krishnamoorthy et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4], ontologies are a powerful tool for modeling context and the encompassing situations in context-aware systems because they promote knowledge sharing and reuse across different applications and services interacting in a pervasive computing environment, thus, enhancing their interoperability.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] and Bhargava et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5].", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "We introduced the Rover Context Model Ontology (RoCoMO), which is the underlying ontology for RoCoM and is currently deployed and implemented in Rover II, in [5].", "startOffset": 158, "endOffset": 161}, {"referenceID": 5, "context": "CoBrA-Ont[6] is a collection of ontologies for describing places, agents and events and their associated properties in an intelligent meetingroom domain.", "startOffset": 9, "endOffset": 12}, {"referenceID": 2, "context": "SOUPA[3] was developed to provide pervasive computing developers with a shared and upper ontology that combines many useful vocabularies from different consensus ontologies such as FOAF, DAML-Time, RCC, BDI, and Rei policy ontology.", "startOffset": 5, "endOffset": 8}, {"referenceID": 6, "context": "Other contemporary ontologies include CONON[8] where the context ontologies are divided into upper ontology and domainspecific ontologies; CoDAMoS[9] where the context ontology is centered around four entities - user, environment, platform and service; ASC/CoOL[10] that enables context awareness and interoperability; Gaia [11] that incorporates ontologies for context awareness, service discovery and matchmaking, and interoperation between entities in a pervasive computing infrastructure mainly geared towards smart spaces; and GLOSS[12] which employs ontologies for the precise understanding of various contexts and services in smart spaces.", "startOffset": 43, "endOffset": 46}, {"referenceID": 7, "context": "Other contemporary ontologies include CONON[8] where the context ontologies are divided into upper ontology and domainspecific ontologies; CoDAMoS[9] where the context ontology is centered around four entities - user, environment, platform and service; ASC/CoOL[10] that enables context awareness and interoperability; Gaia [11] that incorporates ontologies for context awareness, service discovery and matchmaking, and interoperation between entities in a pervasive computing infrastructure mainly geared towards smart spaces; and GLOSS[12] which employs ontologies for the precise understanding of various contexts and services in smart spaces.", "startOffset": 146, "endOffset": 149}, {"referenceID": 8, "context": "Other contemporary ontologies include CONON[8] where the context ontologies are divided into upper ontology and domainspecific ontologies; CoDAMoS[9] where the context ontology is centered around four entities - user, environment, platform and service; ASC/CoOL[10] that enables context awareness and interoperability; Gaia [11] that incorporates ontologies for context awareness, service discovery and matchmaking, and interoperation between entities in a pervasive computing infrastructure mainly geared towards smart spaces; and GLOSS[12] which employs ontologies for the precise understanding of various contexts and services in smart spaces.", "startOffset": 261, "endOffset": 265}, {"referenceID": 9, "context": "Other contemporary ontologies include CONON[8] where the context ontologies are divided into upper ontology and domainspecific ontologies; CoDAMoS[9] where the context ontology is centered around four entities - user, environment, platform and service; ASC/CoOL[10] that enables context awareness and interoperability; Gaia [11] that incorporates ontologies for context awareness, service discovery and matchmaking, and interoperation between entities in a pervasive computing infrastructure mainly geared towards smart spaces; and GLOSS[12] which employs ontologies for the precise understanding of various contexts and services in smart spaces.", "startOffset": 324, "endOffset": 328}, {"referenceID": 10, "context": "Other contemporary ontologies include CONON[8] where the context ontologies are divided into upper ontology and domainspecific ontologies; CoDAMoS[9] where the context ontology is centered around four entities - user, environment, platform and service; ASC/CoOL[10] that enables context awareness and interoperability; Gaia [11] that incorporates ontologies for context awareness, service discovery and matchmaking, and interoperation between entities in a pervasive computing infrastructure mainly geared towards smart spaces; and GLOSS[12] which employs ontologies for the precise understanding of various contexts and services in smart spaces.", "startOffset": 537, "endOffset": 541}, {"referenceID": 11, "context": "([13], Krummenacher et al.", "startOffset": 1, "endOffset": 5}, {"referenceID": 12, "context": "[14] and Bettini et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[15]) have asserted that, of all the current ontologies used for context modeling, SOUPA is the most comprehensive ontology.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[15] and Ye et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[18] have specified a set of requirements that both context models", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "Several papers including Gray and Salber [19] introduced the notion of attaching information quality attributes to every piece of sensed context.", "startOffset": 41, "endOffset": 45}, {"referenceID": 2, "context": "its term definitions must be consistent with other standard, generic and consensus ontologies such as SOUPA [3].", "startOffset": 108, "endOffset": 111}, {"referenceID": 6, "context": "This also enables reuse of domain knowledge [8].", "startOffset": 44, "endOffset": 47}, {"referenceID": 2, "context": "We have designed RoCoMO to be interoperable with other ontologies, for instance SOUPA[3], via the equivalentClass and equivalentProperty OWL statements.", "startOffset": 85, "endOffset": 88}], "year": 2015, "abstractText": "In pervasive computing environments, various entities often have to cooperate and integrate seamlessly in a situation which can, thus, be considered as an amalgamation of the context of several entities interacting and coordinating with each other, and often performing one or more activities. However, none of the existing context models and ontologies address situation modeling. In this paper, we describe the design, structure and implementation of a generic, flexible and extensible context ontology called Rover Context Model Ontology (RoCoMO) for context and situation modeling in pervasive computing systems and environments. We highlight several limitations of the existing context models and ontologies, such as lack of provision for provenance, traceability, quality of context, multiple representation of contextual information, as well as support for security, privacy and interoperability, and explain how we are addressing these limitations in our approach. We also illustrate the applicability and utility of RoCoMO using a practical and extensive case study. Keywords\u2014Context-aware Computing, Context Modeling and Representation, Situation Modeling", "creator": "LaTeX with hyperref package"}}}