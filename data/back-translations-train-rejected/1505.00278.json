{"id": "1505.00278", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-May-2015", "title": "Automatic Observer Script for StarCraft: Brood War Bot Games (technical report)", "abstract": "This short report describes an automated BWAPI-based script developed for live streams of a StarCraft Brood War bot tournament, SSCAIT. The script controls the in-game camera in order to follow the relevant events and improve the viewer experience. We enumerate its novel features and provide a few implementation notes.", "histories": [["v1", "Fri, 1 May 2015 20:41:19 GMT  (14kb)", "http://arxiv.org/abs/1505.00278v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["bj\\\"orn persson mattsson", "tom\\'a\\v{s} vajda", "michal \\v{c}ertick\\'y"], "accepted": false, "id": "1505.00278"}, "pdf": {"name": "1505.00278.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Bj\u00f6rn Persson Mattsson", "Tom\u00e1\u0161 Vajda"], "emails": ["bjorn.pm@plankter.se", "thomas.vajda@gmail.com", "certicky@agents.fel.cvut.cz"], "sections": [{"heading": null, "text": "ar Xiv: 150 5.00 278v 1 [cs.A I] developed for live streams of a StarCraft Brood War Bot tournament, SSCAIT. The script controls the in-game camera to track relevant events and improve the viewing experience. We list the novel features and give some implementation hints."}, {"heading": "1 Introduction", "text": "Since 2010, several competitions have been established for StarCraft: Brood War BWAPI1 bots, including long-term SSCAIT: Student StarCraft AI Tournament2 and Brood War Bots Ladder3, as well as short-term events at AIIDE and CIG research conferences. The growing community behind StarCraft AI research and growing public interest has prompted organizers of the long-term tournaments to publicly stream the games. To solve the first challenge, you can simply use the Open Source Tournament Manager Software4, developed at the University of Alberta (SSCAIT tournament uses a modification of this tool).For the second challenge, this tool has proven inadequate, although it is equipped with an automatic module."}, {"heading": "2 SSCAIT Observer", "text": "The SSCAIT Observer is implemented in the C + + framework BWAPI and compiled as part of the \"Tournament Module\" DLL (which provides additional camera-independent functionality). It performs automated viewer behavior based primarily on game events, priorities, and timers, and achieves this by setting the position of the game screen to the position within the game that is to be shown. Furthermore, this behavior is referred to as \"moving the camera.\" The camera will always try to focus on game events that are important to viewers (e.g. mutual attacks by units, creation of new units, etc.) When multiple events occur simultaneously, the camera determines which event to focus on based on predefined priorities. To improve the viewing experience, timers are used to ensure that the camera does not move too often."}, {"heading": "2.1 Time Limits and Priorities", "text": "Two time limits are used by the SSCAIT observer: One defines the minimum time (tmin) that must elapse before the camera is allowed to focus on a higher priority event, and another defines the time (tmax) that must elapse before the camera focuses on a new event (including a lower priority event). Example 1. Let's assume that tmin = 50 and tmax = 150 (time values are given in logical game frames). Here is an example of how this mechanism works: - At t = 0 event e1 occurs with priority 1. \u2192 The camera focuses on event e1. - At t = 40 event e2 occurs with priority 2. \u2192 since less time than tmin has elapsed since the last event, the camera remains focused on e1. - At t = 60 event e3 occurs with priority 0. \u2192 since e3 has a lower priority than the current focus e1 and less time than tmax has elapsed, the camera remains focused on e1 with priority 220 at the time, the e4 at the time of the moment of the e4 - 4 at the moment of the priority."}, {"heading": "2.2 Smooth Camera Movement", "text": "When the camera of the SSCAIT observer focuses on an event, it does not simply \"teleport\" the camera into the focus position. Instead, it always moves the camera smoothly towards the desired position through the simple update rule: posn + 1 = m \u00b7 (fPos \u2212 posn) 3, where pos is the current position of the camera, fPos is the desired focus position and m is a motion factor between 0 and 1. A motion factor of m = 0.1 would mean that the camera moves 10% of the distance between the current camera position and the focus position. SSCAIT observer currently uses m = 0.1 and updates the camera position on each game frame. Another feature of the SSCAIT observer is that the camera can focus not only on one position, but also on one unit. This functionality means that the camera can track units (e.g. an army or a reconnaissance) around the map, rather than stay at a position from which the corresponding unit may have moved."}, {"heading": "2.3 Events", "text": "Priority: 3 - A unit conducts an attack. Priority: 3 - A worker scouting. - If a scouting worker is near a potential enemy base, Priority: 2 - Otherwise Priority: 0Note: A worker is counted as a scout only if he is not in his own main base and the number of images is less than 7500 (about 8 minutes in terms of playing time). - A drop is performed. Priority: 2 Note: Here, a drop is counted as a non-empty transport unit located near a potential enemy base. - A group of army units is closely positioned together. Priority: 1 Note: A definition of \"army unit\" can be found below. - A unit is created. Priority: 1Some of these events are detected by meandering over all available units and checking if the condition is met, while others are purely event-related, in the sense that the game displays the event as an observer."}, {"heading": "2.4 Groups of Army Units", "text": "Since a group of resource-gathering workers should not be classified as an \"army,\" the Observer excludes workers from searching for army units. Other types of units that are not counted as army units are structures, larvae, overlords, and spider mines. An explanation might be needed for the exclusion of overlords and spider mines: Some of the Zerg bots competing in the SSCAIT tournament tend to clump overlords in one corner of the map, while some Terran bots have a strategy of creating very dense minefields. Most viewers would probably agree that watching a minefield for much of a game.4"}, {"heading": "2.5 Dynamic screen resolution", "text": "When StarCraft was launched in 1998, it used a constant screen resolution of 640 x 480 px. Modern displays have much higher resolutions and different aspect ratios, so StarCraft can only use a small part of the screen. Fortunately, it is possible to use various \"resolution hacks\" to force the game to run at higher screen resolutions and display a larger part of the map. Although this is considered a scam by human gamers, bots are not affected in any way by the field of view and do not gain any benefit from higher resolutions. At the same time, increasing the screen size balances out more attractive and modern-looking streams. The SSCAIT Observer is compatible with resolution hacks and supports any screen resolution (specified in the configuration file)."}, {"heading": "3 Conclusion", "text": "Thanks to the custom observer script described in this text, the SSCAIT Tournament currently broadcasts a visually attractive live stream of all bot games in high-definition widescreen resolution, selecting the most interesting game situations and transitions between them fluently to enhance the viewing experience, and the stream can be viewed on the tournament's website. We plan to release the script as open source software in the near future, and in the meantime, it is available on demand."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "This short report describes an automated BWAPI-based script developed for live streams of a StarCraft Brood War bot tournament, SSCAIT. The script controls the in-game camera in order to follow the relevant events and improve the viewer experience. We enumerate its novel features and provide a few implementation notes.", "creator": "LaTeX with hyperref package"}}}