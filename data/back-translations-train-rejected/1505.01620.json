{"id": "1505.01620", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-May-2015", "title": "Structure Formation in Large Theories", "abstract": "Structuring theories is one of the main approaches to reduce the combinatorial explosion associated with reasoning and exploring large theories. In the past we developed the notion of development graphs as a means to represent and maintain structured theories. In this paper we present a methodology and a resulting implementation to reveal the hidden structure of flat theories by transforming them into detailed development graphs. We review our approach using plain TSTP-representations of MIZAR articles obtaining more structured and also more concise theories.", "histories": [["v1", "Thu, 7 May 2015 08:16:19 GMT  (37kb,D)", "http://arxiv.org/abs/1505.01620v1", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["serge autexier", "dieter hutter"], "accepted": false, "id": "1505.01620"}, "pdf": {"name": "1505.01620.pdf", "metadata": {"source": "CRF", "title": "Structure Formation in Large Theories", "authors": ["Serge Autexier", "Dieter Hutter"], "emails": ["serge.autexier@dfki.de", "dieter.hutter@dfki.de"], "sections": [{"heading": "1 Introduction", "text": "It has long been known that modularity of specifications is an indispensable prerequisite for efficient reasoning in complex areas. Algebraic specification techniques provide suitable framework conditions for structuring complex specifications, and the authors introduced the concept of a developmental graph [5,1,6] as a technical means of working with and on such structured specifications. While its application presupposes the development of theories that already have the intended structures in mind, there are various applications of formal methods in which theories are automatically generated in a completely unstructured representation. Therefore, there is a need for computer-aided structuring for large theories that allow efficient reasoning in such theories. In this paper, we present a first approach to support structural formations in large unstructured specifications. The idea is to provide a calculation and methodology to crystallize the intrinsic structures in a specification and explicitly represent them in relation to developmental graphs."}, {"heading": "2 Development Graphs for Structure Formation", "text": "(D) n (D) n (D) n (D) n (D) n (D) n (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s) s (D) s) s (D) s (D) s (D) s) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s (D) s"}, {"heading": "Dom\u3008N ,L\u3009(M). Furthermore,", "text": "1. e is provided locally in N \u2212 e \u2012 Dom < N, L > (M). \u03c3 (e \u2032) = e applies. In this case, we say that l \u00b2 is provided by e \u00b2. e is provided exclusively by l \u00b2 e. The locking principle requires that there are no fake nodes in the diagram that contribute nothing new. we combine these requirements into the concept of location mapping: Definition 2 (location mapping). Let D = < N > be a development diagram. A mapping locD: DomD \u2192 N is a location mapping for D iff 1. locD is surjective (closure) 2."}, {"heading": "3 Refactoring Rules", "text": "Below, we present the transformation rules for development that turn a structuring back into a structuring. With these rules, we are able to structure the initial trivial development chart, which consists of exactly one node that encompasses all predefined concepts step by step. This initial development chart, which consists of exactly one node, meets the condition of structuring if we have adequate support. We define four types of structuring diagrams and multiplication of development graphs: (i) horizontal splitting and merging of development graphs, (ii) vertical splitting and merging of development graphs, (ii) factorization and multiplication of development graphs, and (iv) removal and insertion of specific links. Splitting and merging as as as factorization and multiplication are dual operations. For the lack of space and because we are mostly interested in rules to increase the structure of a development."}, {"heading": "Vertical Split", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Vertical Merge", "text": "Example 1: We illustrate the horizontal and vertical column rules by looking at a single theory that includes a field with binary operations + and \u00b7 consisting of a distribution axiom (\u03a6D: = \u00b2 x, y \u00b2, z.x \u00b7 (y + z) = x \u00b7 y + x \u00b7 z) and the axioms of an Abel group for + and \u00b7, respectively (zi + AG: = x, y \u00b2, z \u00b2 (y + y) + z, i. x, y + y + x, o."}, {"heading": "4 Refactoring Process", "text": "In fact, most of them are able to go to another world, to go to another world, to go to another world."}, {"heading": "5 Evaluation", "text": "We have applied the factoring method presented in the previous section to the TSTP versions of the Mizar library articles, www.mizar.org, created by Joseph Urban and available at http: / / www.cs.miami.edu / ~ tptp / MizarTP Articles /. This is a collection of 922 files in TSTP format (www.cs.miami.edu / ~ tptp / TSTP) in which theorems are commented by theorems and axioms in their proofs. The files consist of the axioms and theorems of each article, including all directly contained articles, but without transitive expansion of all inclusions. Therefore, the knowledge in each file is fairly tailored to the knowledge needed to define the additional mathematical concepts and enable the proofs of the theorems."}, {"heading": "6 Related Work and Conclusion", "text": "In fact, most of them are not a political party, but a party capable of establishing itself and establishing itself."}, {"heading": "Proof of Theorem 1 (Structure Preservation)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Horizontal Split", "text": "It is trivial that DomD = DomD \u2032. - loc \u2032 is surjective, because by construction each Ni = 1,.. k has a local unit. Furthermore, for each Ni and each e-domNi \"loc\" (e) = Ni by construction applies. Furthermore, since loc \u2212 1 (N) = domN, none of the incoming connections is valid in N, and consequently none of the incoming connections in N1,.. Nk do. Hence, loc \"\u2212 1 (Ni) = domdom Ni, i = 1, 2 and sincedomN: = domN1.] domNk\" loc \"(e) is unique to e domN. - If N is not an upper node in D, then DomdD\" e \"is."}, {"heading": "Vertical Split", "text": "- First, we have to prove that loc \"is a location that is assigned. Loc\" is surjective, because by building each node Ni (with i = 1, 2) has a local structure. So loc \"(e) = Ni and Ni is in the area loc.\" Beyond that, there is no node in N. \"loc\" (e) = Ni is valid by definition. Since N1 \"id\" + 3 \"L,\" N1 \"andN2\" is not the same entity e. \"- By definition, e\" domNi \"loc\" (e) = N \"and therefore there is no node in N.\" N1 \"id\" + 3 \"L,\" N1 \"and\" N2 \"loc.\" loc. \""}, {"heading": "Factorization", "text": "- We have to prove that loc \"is a location mapping. First, we have to prove that loc\" is a surjective case. To each node K \"N\" N \"{N, N1,.. Np\" loc \"1\" (K) = loc \"1\" (K) applies. Since sigN \"axN\" 6 \"(Nj) applies at most, but (sigN\" axN \")\" DomD \"(N\" axN \") does not apply, this sigN\" loc \"(N\" axMj \"loc\" \u2212 1 \"(Nj) since sigMj\" axMj \"phenomenj\" (sigN \"axN\") and Ph\u00e4nomenj \"(sigN\" axN \") also applies. Second, we have to prove that\" K \"N.\" e \"domlem\" loc \"(e\" Domlem \")\" (e \"Domlem\") \"(e\" Domlem \") does not.\" If K \"loc\" (e \"Domlem\"). (e \"Domlem\" D \") =\" lem."}, {"heading": "DomD\u2032(Nj) = lem", "text": "Mj\\ \u03b8j (lem), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2), loc \u00b2 (loc \u00b2) and loc \u00b2 (loc \u00b2)."}, {"heading": "Transitive enrichment", "text": "Obviously, the inclusion of the global link does not affect the visibility (e.g. dome) of a node in N or the local units provided by the individual nodes (i.e. dom). Therefore, all properties of a structuring are trivially transmitted to the enriched structuring."}, {"heading": "Removable link", "text": "- We must prove that loc is also a position map for D. It states that \"N.\" locD (N) = locD \"(N), since dom (N) remains unchanged, and also all e\" locD (N), which is provided exclusively by a link in D., are still provided exclusively in D. Therefore, loc is also surjective in D, \"also\" N. \"locD\" (e) = locD (e) = N and \"E\" DomD. \"locD\" (e) is the only node that e. - D \"and D\" match in the units they provide at their maximum nodes, which is a direct consequence of condition (2) of Def. 9. - Also \"LemD.\""}], "references": [{"title": "Mind the gap - maintaining formal developments in MAYA", "author": ["S. Autexier", "D. Hutter"], "venue": "In Festschrift in Honor of J.H. Siekmann. Springer, LNCS 2605,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2005}, {"title": "Generalization with taxonomic information", "author": ["A.M. Frisch", "C.D.P. Jr"], "venue": "In 8th National Conference on Artificial Intelligence, pages 775\u2013761. AAAI-Press,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1990}, {"title": "Matching concepts across HOL libraries", "author": ["T. Gauthier", "C. Kaliszyk"], "venue": "In Intelligent Computer Mathematics, pages 267\u2013281. Springer, LNAI 8543,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Institutions: Abstract model theory for specification and programming", "author": ["J.A. Goguen", "R.M. Burstall"], "venue": "Journal of the Association for Computing Machinery, 39:95\u2013146, 1992. Predecessor in: LNCS 164, 221\u2013256,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1984}, {"title": "Management of change in verification systems", "author": ["D. Hutter"], "venue": "In Proceedings 15th IEEE International Conference on Automated Software Engineering, ASE-2000, pages 23\u201334. IEEE Computer Society,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2000}, {"title": "Development graphs - proof management for structured specifications", "author": ["T. Mossakowski", "S. Autexier", "D. Hutter"], "venue": "Journal of Logic and Algebraic Programming, special issue on Algebraic Specification and Development Techniques, 67(1-2):114\u2013 145, april", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2006}, {"title": "Extended formula normalization for -retrieval and sharing of mathematical knowledge", "author": ["I. Normann", "M. Kohlhase"], "venue": "In Towards Mechanized Mathematical Assistants (Calculemus/MKM). Springer, LNCS 4573,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2007}, {"title": "Reusable tptp parser in java", "author": ["A. Riazanov", "A. Tchaltsev"], "venue": "http://www. freewebs.com/andrei_ch/TPTP_2007.01.30.tgz,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "The TPTP World - Infrastructure for Automated Reasoning", "author": ["G. Sutcliffe"], "venue": "In E. Clarke and A. Voronkov, editors, Proceedings of the 16th International Conference on Logic for Programming Artificial Intelligence and Reasoning, number 6355 in LNAI, pages 1\u201312. Springer-Verlag,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "On the sets inhabited by numbers", "author": ["A. Trybulec"], "venue": "Journal of Formalized Mathematics, 15,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 4, "context": "Algebraic specification techniques provide appropriate frameworks for structuring complex specifications and the authors introduced the notion of an development graph [5,1,6] as a technical means to work with and reason about such structured specifications.", "startOffset": 167, "endOffset": 174}, {"referenceID": 0, "context": "Algebraic specification techniques provide appropriate frameworks for structuring complex specifications and the authors introduced the notion of an development graph [5,1,6] as a technical means to work with and reason about such structured specifications.", "startOffset": 167, "endOffset": 174}, {"referenceID": 5, "context": "Algebraic specification techniques provide appropriate frameworks for structuring complex specifications and the authors introduced the notion of an development graph [5,1,6] as a technical means to work with and reason about such structured specifications.", "startOffset": 167, "endOffset": 174}, {"referenceID": 3, "context": "We base our framework on the notions of development graphs (and thus on the notion of institutions [4]) to specify and reason about structured specifications.", "startOffset": 99, "endOffset": 102}, {"referenceID": 8, "context": "In order to evaluate the refactoring rules on real theories we have implemented the development graphs and the rules in Scala and added support to read formulas in TSTP format [9] using the Java parser from [8].", "startOffset": 176, "endOffset": 179}, {"referenceID": 7, "context": "In order to evaluate the refactoring rules on real theories we have implemented the development graphs and the rules in Scala and added support to read formulas in TSTP format [9] using the Java parser from [8].", "startOffset": 207, "endOffset": 210}, {"referenceID": 9, "context": "rated obtained from the Mizar article [10] \u201cOn the Sets Inhabited by Numbers\u201d we could factorize 36 theorems into 16 theorems.", "startOffset": 38, "endOffset": 42}, {"referenceID": 1, "context": "[2,7,3]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 6, "context": "[2,7,3]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 2, "context": "[2,7,3]).", "startOffset": 0, "endOffset": 7}], "year": 2015, "abstractText": "Structuring theories is one of the main approaches to reduce the combinatorial explosion associated with reasoning and exploring large theories. In the past we developed the notion of development graphs as a means to represent and maintain structured theories. In this paper we present a methodology and a resulting implementation to reveal the hidden structure of flat theories by transforming them into detailed development graphs. We review our approach using plain TSTPrepresentations of MIZAR articles obtaining more structured and also more concise theories.", "creator": "LaTeX with hyperref package"}}}