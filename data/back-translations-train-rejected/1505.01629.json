{"id": "1505.01629", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-May-2015", "title": "LeoPARD --- A Generic Platform for the Implementation of Higher-Order Reasoners", "abstract": "LeoPARD supports the implementation of knowledge representation and reasoning tools for higher-order logic(s). It combines a sophisticated data structure layer (polymorphically typed {\\lambda}-calculus with nameless spine notation, explicit substitutions, and perfect term sharing) with an ambitious multi-agent blackboard architecture (supporting prover parallelism at the term, clause, and search level). Further features of LeoPARD include a parser for all TPTP dialects, a command line interpreter, and generic means for the integration of external reasoners.", "histories": [["v1", "Thu, 7 May 2015 08:54:19 GMT  (21kb)", "http://arxiv.org/abs/1505.01629v1", "6 pages, to appear in the proceedings of CICM'2015 conference"]], "COMMENTS": "6 pages, to appear in the proceedings of CICM'2015 conference", "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.MA cs.MS", "authors": ["max wisniewski", "alexander steen", "christoph benzm\\\"uller"], "accepted": false, "id": "1505.01629"}, "pdf": {"name": "1505.01629.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["max.wisniewski@fu-berlin.de", "a.steen@fu-berlin.de", "c.benzmueller@fu-berlin.de"], "sections": [{"heading": null, "text": "ar Xiv: 150 5.01 629v 1 [cs.L O] 7M ay"}, {"heading": "1 Introduction", "text": "LeoPARD (Leo's Parallel ARchitecture and Datastructures) is designed as a generic system platform for the implementation of higher order (HO) logic based knowledge representation, and reasoning tools. In particular, LeoPARD provides the base layer of the new HO automated theorem prover (ATP) Leo-III, the successor of the well-known testers LEO-I [4] and LEO-II [7].Previous experiments with LEO-I and the OAnts mechanism [5] suggest a flexible, multi-agent blackboard architecture that is well suited for the automation of HO logic [6]. However, due to project limitations, such an approach has not been implemented in LEO-II. Instead, the focus is on the evidence search layer in combination with a simple, sequential collaboration with an external first-order (FO) -sk.LEO-II also offers improved term data structures, tertiary indexing and tertiary unfortunately, and tertiary sharing mechanisms that have not been used optimally."}, {"heading": "2 Term Data Structure", "text": "The key aspects for efficient theorems are an intensive research topic and have reached a maturity within FO-ATPs [19,20]. Of course, one would expect an even greater influence of data structure decisions in HO-ATPs. However, comparatively little effort was made in the latter context - probably also due to the inherently more complex nature of HO logic. The LeoPARD term language extends the simple typed calculation with parametric polymorphism that polymorphs the second order."}, {"heading": "3 Multi-agent Blackboard Architecture", "text": "In fact, it is the case that most of them will be able to go into another world, in which they are able to live in, in which they want to live, and in which they will go into another world, in which they want to live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they, in which they live, in which they, in which they live, in which they live, in which they live."}, {"heading": "4 Other Components", "text": "The LeoPARD framework provides useful additional components, such as a generic parser that supports all TPTP syntax dialects. In addition, a command-line interpreter supports fine-grained interaction with the system, which is useful not only for debugging, but also for training and demonstration purposes. As explained above, it also provides useful support for integrating external argumentators based on the TPTP infrastructure, including comprehensive support for TPTP-SZS results sontology. In addition, ongoing and future work aims at generic means of transforming and integrating (external) proof protocols, ideally by leveraging the results of projects such as ProofCert2."}, {"heading": "5 Related work", "text": "There is comparatively little work on LeoPARD, since higher order theory testers typically implement their own data structures. Related systems (mostly for term representation) include \u03bbProlog and Teyjus [17], the interactive theory tester of Abella [13], and the logical framework Twelve [18]. We thank the reviewers for their valuable feedback. Furthermore, we thank Tomer Libal and the students of the Leo III project for their contributions to LeoPARD."}], "references": [{"title": "Explicit substitutions", "author": ["M. Abadi", "L. Cardelli", "P.-L. Curien", "J.-J. Levy"], "venue": "In Proc. of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1990}, {"title": "Social Choice and Individual Values", "author": ["K.J. Arrow"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1951}, {"title": "Introduction to Generalized Type Systems", "author": ["H.P. Barendregt"], "venue": "In J. of Functional Programming,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1991}, {"title": "LEO \u2013 A Higher-Order Theorem Prover", "author": ["C. Benzm\u00fcller", "M. Kohlhase"], "venue": "In Proc. of CADE-15,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1998}, {"title": "OANTS \u2013 Combining Interactive and Automated Theorem Proving", "author": ["C. Benzm\u00fcller", "V. Sorge"], "venue": "Symbolic Computation and Automated Reasoning,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "Combined Reasoning by Automated Cooperation", "author": ["C. Benzm\u00fcller", "V. Sorge", "M. Jamnik", "M. Kerber"], "venue": "J. of Applied Logic,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "LEO-II - A Cooperative Automatic Theorem Prover for Higher-Order Logic (system description)", "author": ["C. Benzm\u00fcller", "F. Theiss", "L. Paulson", "A. Fietzke"], "venue": "In Proc. of IJCAR 2008,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Extending Sledgehammer with SMT Solvers", "author": ["J. Blanchette", "S. B\u00f6hme", "L. Paulson"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "A Taxonomy of Parallel Strategies for Deduction", "author": ["M.P. Bonacina"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2000}, {"title": "Satallax: An Automatic Higher-Order Prover", "author": ["C.E. Brown"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the Church-Rosser theorem", "author": ["N.G. De Bruijn"], "venue": "INDAG. MATH,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1972}, {"title": "A linear spine calculus", "author": ["I. Cervesato", "F. Pfenning"], "venue": "J. Logic and Computation,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2003}, {"title": "The Abella interactive theorem prover (system description)", "author": ["A. Gacek"], "venue": "In Proc. Automated Reasoning,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "Interpr\u00e9tation fonctionnelle et \u00e9limination des coupures de l\u2019arithm\u00e9tique d\u2019ordre sup\u00e9rieur", "author": ["J.Y. Girard"], "venue": "PhD thesis, Paris VII,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1972}, {"title": "Alpha-conversion and typability", "author": ["A.J. Kfoury", "S. Ronchi Della Rocca", "J. Tiuryn", "P. Urzyczyn"], "venue": "Inf. Comput.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1999}, {"title": "Towards a theory of type structure", "author": ["J.C. Reynolds"], "venue": "In Symposium on Programming, volume 19 of LNCS,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1974}, {"title": "System Description: Teyjus - A Compiler and Abstract Machine Based Implementation of \u03bbProlog", "author": ["C. Liang", "D. Mitchell"], "venue": "In Automated Deduction CADE-16, LNCS,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1999}, {"title": "System description: Twelf \u2014 A Meta-Logical Framework for Deductive Systems", "author": ["F. Pfenning", "C. Sch\u00fcrmann"], "venue": "In Automated Deduction,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1999}, {"title": "Implementing an efficient theorem prover", "author": ["A. Riazanov"], "venue": "PhD thesis, University of Manchester,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2003}, {"title": "Term Indexing. In Handbook of Automated Reasoning, pages 1853\u20131964", "author": ["R. Sekar", "I.V. Ramakrishnan", "A. Voronkov"], "venue": "Elsevier Science Publishers B. V.,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2001}, {"title": "Efficient Data Structures for Automated Theorem Proving in Expressive Higher-Order Logics", "author": ["A. Steen"], "venue": "Master\u2019s thesis, Freie Universita\u0308t Berlin,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2014}, {"title": "The TPTP Problem Library and Associated Infrastructure", "author": ["G. Sutcliffe"], "venue": "J. Automated Reasoning,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}, {"title": "Automated Reasoning in Higher-Order Logic using the TPTP THF Infrastructure", "author": ["G. Sutcliffe", "C. Benzm\u00fcller"], "venue": "J. Formalized Reasoning,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}, {"title": "Agent-based Blackboard Architecture for a HigherOrder Theorem Prover", "author": ["M. Wisniewski"], "venue": "Master\u2019s thesis, Freie Universita\u0308t Berlin,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2014}], "referenceMentions": [{"referenceID": 3, "context": "In particular, LeoPARD provides the base layer of the new HO automated theorem prover (ATP) Leo-III, the successor of the well known provers LEO-I [4] and LEO-II [7].", "startOffset": 147, "endOffset": 150}, {"referenceID": 6, "context": "In particular, LeoPARD provides the base layer of the new HO automated theorem prover (ATP) Leo-III, the successor of the well known provers LEO-I [4] and LEO-II [7].", "startOffset": 162, "endOffset": 165}, {"referenceID": 4, "context": "Previous experiments with LEO-I and the OAnts mechanism [5] indicate a flexible, multi-agent blackboard architecture is well-suited for automating HO logic [6].", "startOffset": 56, "endOffset": 59}, {"referenceID": 5, "context": "Previous experiments with LEO-I and the OAnts mechanism [5] indicate a flexible, multi-agent blackboard architecture is well-suited for automating HO logic [6].", "startOffset": 156, "endOffset": 159}, {"referenceID": 20, "context": "LeoPARD combines a sophisticated data structure layer [21] (polymorphically typed \u03bb-calculus with nameless", "startOffset": 54, "endOffset": 58}, {"referenceID": 23, "context": "spine notation, explicit substitutions, and perfect term sharing), with a multiagent blackboard architecture [25] (supporting prover parallelism at the term, clause, and search level) and further tools including a parser for all TPTP [22,23] syntax dialects, generic support for interfacing with external reasoners, and a command line interpreter.", "startOffset": 109, "endOffset": 113}, {"referenceID": 21, "context": "spine notation, explicit substitutions, and perfect term sharing), with a multiagent blackboard architecture [25] (supporting prover parallelism at the term, clause, and search level) and further tools including a parser for all TPTP [22,23] syntax dialects, generic support for interfacing with external reasoners, and a command line interpreter.", "startOffset": 234, "endOffset": 241}, {"referenceID": 22, "context": "spine notation, explicit substitutions, and perfect term sharing), with a multiagent blackboard architecture [25] (supporting prover parallelism at the term, clause, and search level) and further tools including a parser for all TPTP [22,23] syntax dialects, generic support for interfacing with external reasoners, and a command line interpreter.", "startOffset": 234, "endOffset": 241}, {"referenceID": 18, "context": "Key aspects for efficient theorem proving have been an intensive research topic and have reached maturity within FO-ATPs [19,20].", "startOffset": 121, "endOffset": 128}, {"referenceID": 19, "context": "Key aspects for efficient theorem proving have been an intensive research topic and have reached maturity within FO-ATPs [19,20].", "startOffset": 121, "endOffset": 128}, {"referenceID": 2, "context": "The LeoPARD term language extends the simply typed \u03bbcalculus with parametric polymorphism, yielding the second-order polymorphically typed \u03bb-calculus (corresponding to \u03bb2 in Barendregt\u2019s \u03bb-cube [3]).", "startOffset": 194, "endOffset": 197}, {"referenceID": 15, "context": "In particular, the system under consideration was independently developed by Reynolds [16] and Girard [14] and is commonly called System F today.", "startOffset": 86, "endOffset": 90}, {"referenceID": 13, "context": "In particular, the system under consideration was independently developed by Reynolds [16] and Girard [14] and is commonly called System F today.", "startOffset": 102, "endOffset": 106}, {"referenceID": 14, "context": "Internally, LeoPARD employs a locally nameless representation (both at the type and term level), that extends de-Bruijn indices to (bound) type variables [15].", "startOffset": 154, "endOffset": 158}, {"referenceID": 10, "context": "The definition of de-Bruijn indices [11] for type variables is analogous to the one for term variables.", "startOffset": 36, "endOffset": 40}, {"referenceID": 11, "context": "On top of nameless terms, LeoPARD employs spine notation [12] and explicit substitutions [1].", "startOffset": 57, "endOffset": 61}, {"referenceID": 0, "context": "On top of nameless terms, LeoPARD employs spine notation [12] and explicit substitutions [1].", "startOffset": 89, "endOffset": 92}, {"referenceID": 20, "context": "A recent empirical evaluation [21] has shown that there is no single best reduction strategy for HO-ATPs.", "startOffset": 30, "endOffset": 34}, {"referenceID": 7, "context": "This also includes support for subprover parallelism as successfully employed, for example, in Isabelle/HOL\u2019s Sledgehammer tool [8].", "startOffset": 128, "endOffset": 131}, {"referenceID": 8, "context": "More generally, LeoPARD is construed to enable parallalism at various levels inside an ATP, including the term, clause, and search level [9].", "startOffset": 137, "endOffset": 140}, {"referenceID": 23, "context": "The LeoPARD blackboard [25] is a collection of globally shared and accessible data structures which any process, i.", "startOffset": 23, "endOffset": 27}, {"referenceID": 21, "context": "Moreover, for each supercontext respective TPTP SZS status [22] information is automatically inferred from the statuses of its subcontexts.", "startOffset": 59, "endOffset": 63}, {"referenceID": 23, "context": "In LeoPARD specialist processes can be modeled as agents [25].", "startOffset": 57, "endOffset": 61}, {"referenceID": 23, "context": "Action execution in LeoPARD is coordinated by an auction based scheduler, which implements an own approximation algorithm [25] for combinatorical auctions [2].", "startOffset": 122, "endOffset": 126}, {"referenceID": 1, "context": "Action execution in LeoPARD is coordinated by an auction based scheduler, which implements an own approximation algorithm [25] for combinatorical auctions [2].", "startOffset": 155, "endOffset": 158}, {"referenceID": 9, "context": "This includes agents embodying LEO-II and Satallax [10] running remotely on the SystemOnTPTP [22] servers in Miami.", "startOffset": 51, "endOffset": 55}, {"referenceID": 21, "context": "This includes agents embodying LEO-II and Satallax [10] running remotely on the SystemOnTPTP [22] servers in Miami.", "startOffset": 93, "endOffset": 97}, {"referenceID": 16, "context": "Related systems (mostly concerning term representation) include \u03bbProlog and Teyjus [17], the Abella interactive theorem prover [13], and the logical framework Twelf [18].", "startOffset": 83, "endOffset": 87}, {"referenceID": 12, "context": "Related systems (mostly concerning term representation) include \u03bbProlog and Teyjus [17], the Abella interactive theorem prover [13], and the logical framework Twelf [18].", "startOffset": 127, "endOffset": 131}, {"referenceID": 17, "context": "Related systems (mostly concerning term representation) include \u03bbProlog and Teyjus [17], the Abella interactive theorem prover [13], and the logical framework Twelf [18].", "startOffset": 165, "endOffset": 169}], "year": 2015, "abstractText": "LeoPARD supports the implementation of knowledge representation and reasoning tools for higher-order logic(s). It combines a sophisticated data structure layer (polymorphically typed \u03bb-calculus with nameless spine notation, explicit substitutions, and perfect term sharing) with an ambitious multi-agent blackboard architecture (supporting prover parallelism at the term, clause, and search level). Further features of LeoPARD include a parser for all TPTP dialects, a command line interpreter, and generic means for the integration of external reasoners.", "creator": "LaTeX with hyperref package"}}}