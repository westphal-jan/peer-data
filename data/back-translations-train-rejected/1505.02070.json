{"id": "1505.02070", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-May-2015", "title": "Short Portfolio Training for CSP Solving", "abstract": "Many different approaches for solving Constraint Satisfaction Problems (CSPs) and related Constraint Optimization Problems (COPs) exist. However, there is no single solver (nor approach) that performs well on all classes of problems and many portfolio approaches for selecting a suitable solver based on simple syntactic features of the input CSP instance have been developed. In this paper we first present a simple portfolio method for CSP based on k-nearest neighbors method. Then, we propose a new way of using portfolio systems --- training them shortly in the exploitation time, specifically for the set of instances to be solved and using them on that set. Thorough evaluation has been performed and has shown that the approach yields good results. We evaluated several machine learning techniques for our portfolio. Due to its simplicity and efficiency, the selected k-nearest neighbors method is especially suited for our short training approach and it also yields the best results among the tested methods. We also confirm that our approach yields good results on SAT domain.", "histories": [["v1", "Fri, 8 May 2015 15:42:13 GMT  (26kb)", "http://arxiv.org/abs/1505.02070v1", "21 pages"]], "COMMENTS": "21 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mirko stojadinovi\\'c", "mladen nikoli\\'c", "filip mari\\'c"], "accepted": false, "id": "1505.02070"}, "pdf": {"name": "1505.02070.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Filip Mari\u0107"], "emails": ["mirkos@matf.bg.ac.rs", "nikolic@matf.bg.ac.rs", "filip@matf.bg.ac.rs"], "sections": [{"heading": null, "text": "ar Xiv: 150 5.02 070v 1 [cs.A I] 8 May 2Keywords CSP Portfolio \u00b7 Short training \u00b7 k-nearest neighbours \u00b7 SAT Portfolio"}, {"heading": "1 Introduction", "text": "There are many different approaches to solving problems relevant to the real world (e.g. scheduling, scheduling, sequencing, rosting, planning) (Rossi et al. 2006). Many different approaches to solving problems relevant to the real world (e.g.), we should opt for a different type of problems relevant to the real world (e.g. scheduling, sequencing, routing, planning, planning) (Rossi et al al al).rsMladen Nikolic (Faculty of Mathematics, University of Belgrade, Serbia e-mail)."}, {"heading": "2 Background", "text": "In this section we present key terms used in the rest of the work, and we analyze previous results in this area. (2) Finite Linear CSPDefinition 1 Linear Expressions over the set of integer variables V are algebraic expressions of the form \u2211 nk = 1 akxk, where all xk variables of V and all ak are integers.A Finite Linear CSP in CNF is a tuple (V, L, U, B, S) where1 is a finite set of integer variables, 2. Functions L: V 7 \u2192 Z and U: V 7 \u2192 Z give lower and upper bound of integer variables andars and these determines the domain D (x) of each variable x, 3. S is a set of Boolean variables, 4. S is a finite set of clauses (over V and B). Clauses are formed as disjunctions of literals where the elements of the union of sets B, {\u00ac p} and B}."}, {"heading": "3 Experimental Setup", "text": "In this section, we describe our experimental setup used throughout the paper. We use a rich set of available CSP solvers and a very wide corpus of available CSP benchmarks. In addition to describing them, we also present the evaluation of these solvers on these benchmarks.Solvers. For reduction to SAT, we used direct support, sequence and direct command coding implemented in the system meSAT 1.1 (Stojadinovic and Maric 2014), row coding implemented in System 2.1.3 (Tamura and Banbara 2008), and protocoding implemented in System Azucar 0.2.4 (Tanjo et al.). SAT solver Minisat 2.2 (Ee) n and Sun \ufffd rensson 2003 was used in all cases when reduction to SAT was performed. We expanded meSAT to enable reduction of CSP instances to SMT-LIB language."}, {"heading": "4 CSP Portfolio", "text": "In this section, we present a simple portfolio of variables for all variables in the instance (e.g. average intensification of intensification).The basic principle was chosen by SAT Portfolio ArgoSmArT-kNN (Nikolic \u0301 et al. 2011), but the new portfolio was based on features (described in Section 4.1) and solvers suitable for CSPs. In Section 4.2, we describe the portfolio, in Section 4.3, we compare the efficiency of ArgoCSP-kNN to various existing portfolios. Finally, in Section 4.4, we briefly evaluate the effects of the instance on portfolio effectiveness. 4.1 Portfolio featured uresUnlike some other approaches (e.g., Kiziltan et al. 2011), which use the characteristics of the generated SAT instances (in the case of reduction to SAT), we only use functions that are extracted from the variable CSP instance, which are considered by groups of 70 attributes, which are divided into several of the variables."}, {"heading": "5 Short Portfolio Training", "text": "This year it is more than ever before in the history of the city."}, {"heading": "6 Conclusions and Further Work", "text": "In this paper, we have presented a simple NN-based portfolio for CSP and demonstrated that it achieves state-of-the-art performance by comparing it with other methods; we have assessed the impact of the training phase on overall portfolio quality by using different timeout values; our approach improves significantly with each individual approach and gives good generalisation results, even when used with a very short preparation period (so that the training does not require an advanced cluster computer, but can be carried out on a single PC); often, solving a single fixed set of instances as quickly as possible with the given set of solvers will be the only practical concern; we have addressed this issue and have proposed a portfolio-based approach that is based on the set of instances that need to be solved and then selects a suitable solution for each of those instances."}], "references": [{"title": "An empirical evaluation of portfolios approaches", "author": ["R Amadini", "M Gabbrielli", "J Mauro"], "venue": null, "citeRegEx": "Amadini et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Amadini et al\\.", "year": 2013}, {"title": "SUNNY: a lazy portfolio approach for constraint", "author": ["R Amadini", "M Gabbrielli", "J Mauro"], "venue": "csps. In: CPAIOR,", "citeRegEx": "Amadini et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Amadini et al\\.", "year": 2014}, {"title": "A system for solving constraint satisfaction problems", "author": ["M York Bofill", "J Suy", "M Villaret"], "venue": null, "citeRegEx": "Bofill et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bofill et al\\.", "year": 2010}, {"title": "LIBSVM: A library for support vector machines", "author": ["C Chang", "C Lin"], "venue": "smt. In: SAT,", "citeRegEx": "Chang and Lin,? \\Q2011\\E", "shortCiteRegEx": "Chang and Lin", "year": 2011}, {"title": "Proteus: A hierarchical portfolio", "author": ["B Hurley", "L Kotthoff", "Y Malitsky", "B O\u2019Sullivan"], "venue": "CSP Solver Competition", "citeRegEx": "Hurley et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hurley et al\\.", "year": 2014}, {"title": "Paramils: An automatic algorithm", "author": ["F Hutter", "HH Hoos", "K Leyton-Brown", "T St\u00fctzle"], "venue": "solvers and transformations. In: CPAIOR,", "citeRegEx": "Hutter et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Hutter et al\\.", "year": 2009}, {"title": "A classification-based approach", "author": ["Z Kiziltan", "L Mandrioli", "B O\u2019Sullivan", "J Mauro"], "venue": null, "citeRegEx": "Kiziltan et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kiziltan et al\\.", "year": 2011}, {"title": "manage a solver portfolio for csps", "author": ["Y Malitsky", "M Sellmann"], "venue": null, "citeRegEx": "Malitsky and Sellmann,? \\Q2012\\E", "shortCiteRegEx": "Malitsky and Sellmann", "year": 2012}, {"title": "Parallel SAT solver selection", "author": ["Y Malitsky", "A Sabharwal", "H Samulowitz", "M Sellmann"], "venue": "sat. In: SAT,", "citeRegEx": "Malitsky et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Malitsky et al\\.", "year": 2012}, {"title": "Algorithm portfolios based on", "author": ["Y Malitsky", "A Sabharwal", "H Samulowitz", "M Sellmann"], "venue": null, "citeRegEx": "Malitsky et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Malitsky et al\\.", "year": 2013}, {"title": "Abscon: A prototype to solve csps with ab", "author": ["S 614 Merchez", "C Lecoutre", "F Boussemart"], "venue": null, "citeRegEx": "Merchez et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Merchez et al\\.", "year": 2001}, {"title": "Compiling finite domain constraints to sat with bee", "author": ["A Metodi", "M Codish"], "venue": "TPLP", "citeRegEx": "Metodi and Codish,? \\Q2012\\E", "shortCiteRegEx": "Metodi and Codish", "year": 2012}, {"title": "An efficient smt solver", "author": ["N Nethercote", "PJ Stuckey", "R Becket", "S Brand", "GJ Duck", "G Tack"], "venue": null, "citeRegEx": "Nethercote et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Nethercote et al\\.", "year": 2008}, {"title": "Instance-based selection of policies for sat solvers", "author": ["M Nikoli\u0107", "F Mari\u0107", "P Jani\u010di\u0107"], "venue": "a standard cp modelling language. In: CP,", "citeRegEx": "Nikoli\u0107 et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Nikoli\u0107 et al\\.", "year": 2009}, {"title": "Simple algorithm portfolio for sat", "author": ["M Nikoli\u0107", "F Mari\u0107", "P Jani\u010di\u0107"], "venue": null, "citeRegEx": "Nikoli\u0107 et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Nikoli\u0107 et al\\.", "year": 2011}, {"title": "Propagation via lazy clause generation", "author": ["O Ohrimenko", "PJ Stuckey", "M Codish"], "venue": null, "citeRegEx": "Ohrimenko et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ohrimenko et al\\.", "year": 2009}, {"title": "Xml representation of constraint networks: Format xcsp", "author": ["gramming", "Springer", "F pp 89\u2013135 Rossi", "P van Beek", "T Walsh"], "venue": "Handbook of Constraint Programming. Elsevier Roussel O, Lecoutre C", "citeRegEx": "gramming et al\\.,? \\Q2006\\E", "shortCiteRegEx": "gramming et al\\.", "year": 2006}, {"title": "Gecode. Software download and online material", "author": ["C Schulte", "M Lagerkvist", "G Tack"], "venue": null, "citeRegEx": "Schulte et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Schulte et al\\.", "year": 2006}, {"title": "Minisat 2.1 and minisat++ 1.0sat race 2008 editions. SAT p 31 Stojadinovi\u0107 M, Mari\u0107 F (2014) mesat: multiple encodings of CSP to SAT. Constraints", "author": ["N E\u00e9n"], "venue": null, "citeRegEx": "S\u00f6rensson and E\u00e9n,? \\Q2009\\E", "shortCiteRegEx": "S\u00f6rensson and E\u00e9n", "year": 2009}, {"title": "Sugar: A csp to sat translator based on order encoding", "author": ["N Tamura", "M Banbara"], "venue": null, "citeRegEx": "Tamura and Banbara,? \\Q2008\\E", "shortCiteRegEx": "Tamura and Banbara", "year": 2008}, {"title": "Proceedings of the third constraint solver competition, pp", "author": ["N Tamura", "A Taga", "S Kitagawa", "M Banbara"], "venue": null, "citeRegEx": "Tamura et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Tamura et al\\.", "year": 2009}, {"title": "A compact and efficient sat-encoding of finite domain", "author": ["T Tanjo", "N Tamura", "M Banbara"], "venue": null, "citeRegEx": "Tanjo et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Tanjo et al\\.", "year": 2011}, {"title": "Azucar: A sat-based csp solver using compact order", "author": ["T Tanjo", "N Tamura", "M Banbara"], "venue": "csp. In: SAT,", "citeRegEx": "Tanjo et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Tanjo et al\\.", "year": 2012}, {"title": "Satzilla: Portfolio-based algorithm", "author": ["L Xu", "F Hutter", "HH Hoos", "K Leyton-Brown"], "venue": "Sat v csp. In: CP,", "citeRegEx": "Xu et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Xu et al\\.", "year": 2000}], "referenceMentions": [{"referenceID": 7, "context": ", (Xu et al. 2008; Nikoli\u0107 et al. 2009, 2011; Malitsky et al. 2011; Kadioglu et al. 2011; Malitsky and Sellmann 2012; Malitsky et al. 2012, 2013)) but also for CSP (e.", "startOffset": 2, "endOffset": 145}, {"referenceID": 6, "context": ", (O\u2019Mahony et al. 2008; Kiziltan et al. 2011; Amadini et al. 2013, 2014; Hurley et al. 2014)) assume that a number of different solvers are available and for each input instance these approaches select a solver (and its configuration) that should be run.", "startOffset": 2, "endOffset": 93}, {"referenceID": 4, "context": ", (O\u2019Mahony et al. 2008; Kiziltan et al. 2011; Amadini et al. 2013, 2014; Hurley et al. 2014)) assume that a number of different solvers are available and for each input instance these approaches select a solver (and its configuration) that should be run.", "startOffset": 2, "endOffset": 93}, {"referenceID": 19, "context": "Finite linear CSP (Tamura and Banbara 2008) is a special class of constraint satisfaction problems that is often encountered in applications.", "startOffset": 18, "endOffset": 43}, {"referenceID": 14, "context": "In our previous work (Stojadinovi\u0107 and Mari\u0107 2014) we adapted the ArgoSmArT-kNN portfolio (Nikoli\u0107 et al. 2011), originally developed for SAT, to constraint satisfaction problems.", "startOffset": 90, "endOffset": 111}, {"referenceID": 15, "context": "generation solvers (Ohrimenko et al. 2009), and constraint propagation solvers (Rossi et al.", "startOffset": 19, "endOffset": 42}, {"referenceID": 19, "context": "Example 2 Constraint solver Sugar (Tamura and Banbara 2008) solves finite linear CSP by reduction to SAT and it uses very simple input language.", "startOffset": 34, "endOffset": 59}, {"referenceID": 10, "context": "Solvers Mistral (Hebrard 2008) and Abscon (Merchez et al. 2001) that participated in CSP competitions belong to this type of solvers.", "startOffset": 42, "endOffset": 63}, {"referenceID": 21, "context": "Several different encoding schemes (Tanjo et al. 2011; Stojadinovi\u0107 and Mari\u0107 2014) have been proposed and successfully used in various applications.", "startOffset": 35, "endOffset": 83}, {"referenceID": 20, "context": "Sugar is a constraint solver that solves finite linear CSPs by translating them into SAT using the order encoding method (Tamura et al. 2009) and then solving SAT instances by several supported SAT solvers.", "startOffset": 121, "endOffset": 141}, {"referenceID": 22, "context": "Azucar (Tanjo et al. 2012) is a successor of Sugar that uses the compact-order encoding (Tanjo et al.", "startOffset": 7, "endOffset": 26}, {"referenceID": 21, "context": "2012) is a successor of Sugar that uses the compact-order encoding (Tanjo et al. 2011) for translating finite linear CSP into SAT.", "startOffset": 67, "endOffset": 86}, {"referenceID": 20, "context": "The supported encodings are: direct (Walsh 2000), support (Gent 2002), direct-support (Stojadinovi\u0107 and Mari\u0107 2014), order (Tamura et al. 2009) and direct-order (Stojadinovi\u0107 and Mari\u0107 2014).", "startOffset": 123, "endOffset": 143}, {"referenceID": 2, "context": "fzn2smt (Bofill et al. 2010)).", "startOffset": 8, "endOffset": 28}, {"referenceID": 15, "context": "In the lazy clause generation approach (Ohrimenko et al. 2009), finite domain constraint propagation engine is combined with a SAT solver: propagators are mapped into clauses and passed to SAT solver, which uses unit propagation and then returns obtained information back to the engine.", "startOffset": 39, "endOffset": 62}, {"referenceID": 7, "context": "2009, 2011), ISAC (Malitsky and Sellmann 2012), Non-Model-Based Algorithm Portfolios for SAT (Malitsky et al.", "startOffset": 18, "endOffset": 46}, {"referenceID": 6, "context": "(Kiziltan et al. 2011), uses run-time classifiers (categories are: \u201cshort\u201d, \u201cmedium\u201d and \u201clong\u201d) to minimize the average solving time of each instance.", "startOffset": 0, "endOffset": 22}, {"referenceID": 0, "context": "(Amadini et al. 2013) compares efficiency of different portfolio approaches based on SAT portfolio techniques and machine learning algorithms.", "startOffset": 0, "endOffset": 21}, {"referenceID": 1, "context": "A recent system SUNNY (Amadini et al. 2014) outperforms CPHYDRA and some portfolios originally developed for SAT, but adapted to CSP solving (e.", "startOffset": 22, "endOffset": 43}, {"referenceID": 1, "context": "The original experimental evaluation (Amadini et al. 2014) included instances from CSP Solver Competition and from MiniZinc distribution, and 11 solvers from MiniZinc Challenge.", "startOffset": 37, "endOffset": 58}, {"referenceID": 4, "context": "Proteus (Hurley et al. 2014) is a hierarchical portfolio that outperforms many other machine learning approaches adapted for CSP solving.", "startOffset": 8, "endOffset": 28}, {"referenceID": 19, "context": "3 (Tamura and Banbara 2008), and log and compact-order encoding implemented in system Azucar 0.", "startOffset": 2, "endOffset": 27}, {"referenceID": 22, "context": "4 (Tanjo et al. 2012).", "startOffset": 2, "endOffset": 21}, {"referenceID": 10, "context": "We used two solvers implementing constraint propagation techniques: Abscon 112V4 (Merchez et al. 2001) and Mistral 1.", "startOffset": 81, "endOffset": 102}, {"referenceID": 17, "context": "1 (Schulte et al. 2006) was also used.", "startOffset": 2, "endOffset": 23}, {"referenceID": 19, "context": "Sugar (Tamura and Banbara 2008) input format.", "startOffset": 6, "endOffset": 31}, {"referenceID": 0, "context": "(Amadini et al. 2013).", "startOffset": 0, "endOffset": 21}, {"referenceID": 14, "context": "The basic principle was taken from SAT portfolio ArgoSmArT-kNN (Nikoli\u0107 et al. 2011), but the new portfolio was constructed based on features (described in Section 4.", "startOffset": 63, "endOffset": 84}, {"referenceID": 6, "context": ", (Kiziltan et al. 2011)) that use features of the generated SAT instances (in case of reduction to SAT), we use only features extracted from the orig-", "startOffset": 2, "endOffset": 24}, {"referenceID": 5, "context": "Solver performance on an instance is expressed by a PAR10 score (Hutter et al. 2009) \u2014 the solving time if the instance is solved within the given timeout, or the timeout value multiplied by 10, otherwise.", "startOffset": 64, "endOffset": 84}, {"referenceID": 14, "context": "The solver selection algorithm (based on (Nikoli\u0107 et al. 2011)) is shown in Figure 2.", "startOffset": 41, "endOffset": 62}, {"referenceID": 4, "context": "As features of used instances and the times for all solvers on all instances used in Proteus paper (Hurley et al. 2014) had been made available online by the authors, we decided to apply the ArgoCSP-kNN approach to that data.", "startOffset": 99, "endOffset": 119}, {"referenceID": 3, "context": "As RapidMiner performed very poorly when used with SVM (the process just got stuck with many different combinations of metaparameters), we also experimented with tool LIBSVM (Chang and Lin 2011) which showed greater stability.", "startOffset": 174, "endOffset": 194}, {"referenceID": 14, "context": "We compare ArgoSmArT-kNN with and without short training methodology on instances originally used in ArgoSmArT-kNN paper (Nikoli\u0107 et al. 2011) \u2013 instances from SAT Competitions (2002-2007) and SAT Races (2000-2008).", "startOffset": 121, "endOffset": 142}, {"referenceID": 11, "context": "For example, systems meSAT , Azucar, and BEE (Metodi and Codish 2012) offer choosing between different", "startOffset": 45, "endOffset": 69}, {"referenceID": 18, "context": "encodings, while Minisat++ (S\u00f6rensson and E\u00e9n 2009) offers 3 different options when encoding PB constraints (adders, BDDs, Sorters).", "startOffset": 27, "endOffset": 51}], "year": 2017, "abstractText": "Many different approaches for solving Constraint Satisfaction Problems (CSPs) and related Constraint Optimization Problems (COPs) exist. However, there is no single solver (nor approach) that performs well on all classes of problems and many portfolio approaches for selecting a suitable solver based on simple syntactic features of the input CSP instance have been developed. In this paper we first present a simple portfolio method for CSP based on k-nearest neighbors method. Then, we propose a new way of using portfolio systems \u2014 training them shortly in the exploitation time, specifically for the set of instances to be solved and using them on that set. Thorough evaluation has been performed and has shown that the approach yields good results. We evaluated several machine learning techniques for our portfolio. Due to its simplicity and efficiency, the selected k-nearest neighbors method is especially suited for our short training approach and it also yields the best results among the tested methods. We also confirm that our approach yields good results on SAT domain.", "creator": "LaTeX with hyperref package"}}}