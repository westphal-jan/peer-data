{"id": "1505.02405", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-May-2015", "title": "Exploiting Resolution-based Representations for MaxSAT Solving", "abstract": "Most recent MaxSAT algorithms rely on a succession of calls to a SAT solver in order to find an optimal solution. In particular, several algorithms take advantage of the ability of SAT solvers to identify unsatisfiable subformulas. Usually, these MaxSAT algorithms perform better when small unsatisfiable subformulas are found early. However, this is not the case in many problem instances, since the whole formula is given to the SAT solver in each call. In this paper, we propose to partition the MaxSAT formula using a resolution-based graph representation. Partitions are then iteratively joined by using a proximity measure extracted from the graph representation of the formula. The algorithm ends when only one partition remains and the optimal solution is found. Experimental results show that this new approach further enhances a state of the art MaxSAT solver to optimally solve a larger set of industrial problem instances.", "histories": [["v1", "Sun, 10 May 2015 16:38:15 GMT  (558kb,D)", "http://arxiv.org/abs/1505.02405v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["miguel neves", "ruben martins", "mikol\\'a\\v{s} janota", "in\\^es lynce", "vasco manquinho"], "accepted": false, "id": "1505.02405"}, "pdf": {"name": "1505.02405.pdf", "metadata": {"source": "META", "title": "Exploiting Resolution-based Representations for MaxSAT Solving", "authors": ["Miguel Neves", "Ruben Martins", "Mikol\u00e1\u0161 Janota", "In\u00eas Lynce", "Vasco Manquinho"], "emails": ["neves@sat.inesc-id.pt", "mikolas@sat.inesc-id.pt", "ines@sat.inesc-id.pt", "vmm@sat.inesc-id.pt", "ruben.martins@cs.ox.ac.uk"], "sections": [{"heading": "1 Introduction", "text": "Many real-world problems in various areas, such as error localization in C programs, design debugging, software system upgrades, among others, can be solved with Maximum Satisfiability (MaxSAT) [2,9,11,14,24]. The increasing use of MaxSAT for problem solving is a result of improvements in MaxSAT technology in recent years. In the last decade, several new techniques and algorithms have also been proposed that improved on previous MaxSAT solvers by several orders of magnitude. In addition, the developments in the underlying SAT technology, namely the identification of unsatisfactory subformulas and incrementality, are a factor in the improvements of MaxSAT-SAT Solving.MaxSAT-Solver-Solver-Solver-Solver-Solver-Solver-Solver-SAT-SAT-SAT-SAT-Solver-Solver-Solver-Solver-SAT-SAT-Solving.MaxSAT-SAT-SAT-Solving.SAT-SAT-SAT-Solving.AT-SAT-SAT-SAT-SAT-Solving.SAT-SAT-SAT-SAT-Solver-SAT-SAT-Solver-SAT-SAT-Solver-Solver-SAT-SAT-Solving.SAT-SAT-SAT-SAT.SAT-SAT-SAT-SAT-SAT-Solving.SAT-SAT-SAT."}, {"heading": "2 Preliminaries", "text": "The prospective formula in the normal conjunctive form (CNF) is considered hard, while others are declared partially soft. (SAT) Maximum satisfaction (MaxSAT) can be considered an optimization of the SAT problem. (SAT) The goal is to find an association with the variables of a CNF formula that minimizes the number of dissatisfied clauses. (MaxSAT) The number of dissatisfied clauses is equivalent to the number of satisfied clauses. (SAT) The number of dissatisfied clauses is equivalent to the number of satisfied clauses. (MaxSAT) The number of dissatisfied clauses is equivalent to the number of satisfied clauses. (SAT) In a partial MaxSAT formula, some clauses are considered hard (CNF), while the number of dissatisfied clauses is minished. (SAT) The number of dissatisfied clauses is equivalent to the number of satisfied clauses."}, {"heading": "3 Graph Representations", "text": "In order to extract structural properties of CNF formulas, various graph-based models have been proposed so far (e.g. diagram representations have been used to characterize industrial SAT examples [1] and improve the performance of MaxSAT algorithms [18]. In this section, we will briefly review the context of our algorithms for MaxSAT solutions and adjust the use of resolution-based diagrams (RES) [26] to model relationships in CNF formulas, although other models exist [1,25,18], in the context of our MaxSAT solution algorithms, these are considered the most appropriate models. In the CVIG model, a weighted, undirected graph G is constructed to add a vertex for each variable xj and for each clause that occurs in the CNF formula."}, {"heading": "4 New Partition-based Algorithm for MaxSAT", "text": "Despite its very good performance in industrial partial MaxSAT instances, the MSU3 algorithm (see algorithm 2) may suffer from two problems: (1) the identification of unnecessarily large, unsatisfactory subformulas, and (2) a potentially large cardinality constraint that must be maintained between iterations. Indeed, these problems are interrelated. If an unsatisfactory subformula with an unnecessarily large number of soft clauses occurs early, then an unnecessarily large cardinality constraint must be overcome by most iterations of the algorithm. Our approach to solving these problems is to divide the set of soft clauses, the goal being that the algorithm should consider only part of the problem in each iteration, rather than addressing the entire problem case in each iteration."}, {"heading": "4.1 Algorithm Description", "text": "Algorithm 3 introduces our extension of MSU3 with the soft clause partition.The algorithm starts by partitioning \"s\" into n disjointed sets of \"soft clauses.\" (line 1) Note that several methods can be used to partition \"s.\" Details of this procedure will be discussed later. For each set of \"i,\" we apply the MSU3 algorithm to the formula \"h\" (lines 2-11).As a result, we obtain a lower bound value \"i,\" which is associated with each set of soft clauses. If the partitioning procedure creates a single partition, then the algorithm ends (line 13). Otherwise, it is necessary to create the solution of the MaxSAT instance by merging the various sets of soft clauses. The merging process works as follows. For each iteration, two sets of soft clauses \"i\" and \"we are merged by (line 15)."}, {"heading": "4.2 Partition and Merge of Soft Clauses", "text": "Algorithm 3 can be configured differently depending on two procedures: (1) how the set of soft clauses is partitioned (line 1) and (2) how two sets of soft clauses are merged (line 15). In the partition process, our algorithm begins by representing the formula of the CNF as graphs using one of the models described in Section 3. Next, we apply a community finding algorithm to graph representation that maximizes a modularity measure [4] to obtain graph partitioning. Recently, the use of modularity measures in the analysis of graph structure has become widespread, especially for identifying communities [7,23]. In fact, this has already been done in the analysis of SAT instances [1] and to improve the original dissatisfaction-based approach of Fu and Algorithm 3: Advanced MSU3 Algorithm Input: Extended M3 Algorithm / Input is Extended to Input: Extended MAT Algorithm / Input: Extended SAT: Extended Input)."}, {"heading": "12 if |\u03b3| = 1 then", "text": "13 Return rates / / no partitions were identified 14, while true do 15 (\u03b3i, \u03b3j) \u2190 selectPartitions (\u03b3) 16 GP (GP, GP, GP, GP) 17 (GP, V k R, GP) \"(GP, V iR, V jR, GP) 18 (st, C, GP)\" (SAT (GP, V k, R) \"19, while st = UNSAT 20 foreach (GP) do 21 V kR\" V kR \"(GP, GP) / / r is a new variable 22 perspecR\" (R) / / \"was previously not relaxed 23\" (GP, GP) \"24\" (GP, GP) + 1 25 (ST, GP, GP) \"SAT\" (GP, GP)."}, {"heading": "26 if \u03b3 = \u2205 then", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "27 return \u03bd", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "28 else", "text": "The purpose of the modularity process is to evaluate the quality of the partitions in which the partitions within a partition should be closely connected, and the slots assigned to different partitions should each be loosely connected. [4] However, two partitions are selected to merge with each other. Several different criteria can be selected to select and merge the partitions of the soft clauses. In early attempts, the merge process was sequential [18]."}, {"heading": "4.3 Algorithm Analysis", "text": "This section provides proof of the correctness of algorithm 3, as well as an analysis of the number of SAT calls. As mentioned in Section 2, we assume that the number of SAT calls is satisfactory. Otherwise, the MaxSAT formula is unsatisfactory. This can be verified by a single SAT call before applying the algorithms. We will accept the following call numbers processed in Algorithm 3, we will write the SAT call numbers appearing in the Algorithm Caller Numbers-Call Numbers-Call Numbers-Call Numbers-Call Numbers-Call Numbers-Call Numbers-Call Numbers-Call Numbers-Numbers-Call Numbers-Numbers-Call Numbers-Numbers-Numbers-Call Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numbers-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-numbers-Numerals-Numerals-Numerals-Numerals-Numerals-Numerals-Numer"}, {"heading": "5 Experimental Results", "text": "In this section, we compare the different configurations of Algorithm 3 with the top 3 non-portfolio readers of the MaxSAT 2014 partial MaxSAT category, the top 3 being Open-WBO's incremental algorithm [17,16], Eva500a [22] and MSCG [20], but the new partition-based algorithm will also use the Open-WBO Framework4.The algorithms were executed using the power set of partial MaxSAT industrial instances from 2012, 2013 and 2014. Algorithms were executed for each instance with a time span of 1800 seconds and a memory limit of 4GB. Similar resource constraints were used during the last MaxSAT 2014 evaluation, which was performed on a machine with 4 AMD Opteron 6376 (2.3GHz) and 128GB of RAM."}, {"heading": "6 Conclusions and Future Work", "text": "In this paper, we use resolution-based graph representations of CNF formulas to develop a new state-of-the-art algorithm for MaxSAT. In the proposed approach, soft clauses are first divided into disjoint sets by analyzing the formula structure, and the partitioning process is achieved by applying a community-finding algorithm to weighted resolution-based graphs. Next, each iteration of the algorithm merges partitions using structural information from the graph representation until an optimal solution is found. The proposed approach is novel in many respects. First, the use of a resolution-based graph representation enables better modeling of the interaction between clauses. In addition, graph representation is also used in a weight-based balanced merging process until an optimal solution is found."}, {"heading": "Acknowledgments", "text": "This work was partially supported by the ERC-Project 280053, FCT-Funding POLARIS (PTDC / EIA-CCO / 123051 / 2010), FCT-Funding AMOS (CMUP-EPB / TIC / 0049 / 2013) and INESC-ID's multi-annual PIDDAC-Funding PEst-OE / EEI / LA0021 / 2013."}], "references": [{"title": "The Community Structure of SAT Formulas", "author": ["C. Ans\u00f3tegui", "J. Gir\u00e1ldez-Cru", "J. Levy"], "venue": "International Conference on Theory and Applications of Satisfiability Testing. LNCS, vol. 7317, pp. 410\u2013423. Springer", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Curriculum-based course timetabling with SAT and MaxSAT", "author": ["R. As\u00edn", "R. Nieuwenhuis"], "venue": "Annals of Operations Research 218(1), 71\u201391", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Efficient CNF Encoding of Boolean Cardinality Constraints", "author": ["O. Bailleux", "Y. Boufkhad"], "venue": "Principles and Practice of Constraint Programming. LNCS, vol. 2833, pp. 108\u2013122. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2003}, {"title": "Fast unfolding of communities in large networks", "author": ["V. Blondel", "J. Guillaume", "R. Lambiotte", "E. Lefebvre"], "venue": "Journal of Statistical Mechanics 2008(10), P10008", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Maximizing modularity is hard", "author": ["U. Brandes", "D. Delling", "M. Gaertler", "R. Goerke", "M. Hoefer", "Z. Nikoloski", "D. Wagner"], "venue": "arXiv: physics, 0608255", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2006}, {"title": "On Solving the Partial MAX-SAT Problem", "author": ["Z. Fu", "S. Malik"], "venue": "International Conference on Theory and Applications of Satisfiability Testing. LNCS, vol. 4121, pp. 252\u2013265. Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2006}, {"title": "Community structure in social and biological networks", "author": ["M. Girvan", "M.E.J. Newman"], "venue": "Proceedings of the National Academy of Sciences 99(12), 7821\u20137826", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2002}, {"title": "Core-Guided Binary Search Algorithms for Maximum Satisfiability", "author": ["F. Heras", "A. Morgado", "J. Marques-Silva"], "venue": "Burgard, W., Roth, D. (eds.) AAAI Conference on Artificial Intelligence. AAAI Press", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2011}, {"title": "PackUp: Tools for Package Upgradability Solving", "author": ["M. Janota", "I. Lynce", "V. Manquinho", "J. Marques-Silva"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation 8(1/2), 89\u201394", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2012}, {"title": "Blocked clause elimination", "author": ["M. J\u00e4rvisalo", "A. Biere", "M. Heule"], "venue": "Tools and Algorithms for the Construction and Analysis of Systems. LNCS, vol. 6015, pp. 129\u2013144. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2010}, {"title": "Cause clue clauses: error localization using maximum satisfiability", "author": ["M. Jose", "R. Majumdar"], "venue": "Programming Language Design and Implementation. pp. 437\u2013 446. ACM", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "QMaxSAT: A Partial MaxSAT Solver", "author": ["M. Koshimura", "T. Zhang", "H. Fujita", "R. Hasegawa"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation 8(1/2), 95\u2013100", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "On a generalization of extended resolution", "author": ["O. Kullmann"], "venue": "Discrete Applied Mathematics 96-97, 149\u2013176", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1999}, {"title": "On Using Unsatisfiability for Solving Maximum Satisfiability", "author": ["J. Marques-Silva", "J. Planes"], "venue": "CoRR", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2007}, {"title": "Incremental Cardinality Constraints for MaxSAT", "author": ["R. Martins", "S. Joshi", "V. Manquinho", "I. Lynce"], "venue": "Principles and Practice of Constraint Programming. LNCS, vol. 8656, pp. 531\u2013548. Springer", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Open-WBO: a Modular MaxSAT Solver", "author": ["R. Martins", "V. Manquinho", "I. Lynce"], "venue": "International Conference on Theory and Applications of Satisfiability Testing. LNCS, vol. 8561, pp. 438\u2013445. Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2014}, {"title": "Community-based partitioning for maxsat solving", "author": ["R. Martins", "V.M. Manquinho", "I. Lynce"], "venue": "International Conference on Theory and Applications of Satisfiability Testing. LNCS, vol. 7962, pp. 182\u2013191. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Iterative and core-guided MaxSAT solving: A survey and assessment", "author": ["A. Morgado", "F. Heras", "M. Liffiton", "J. Planes", "J. Marques-Silva"], "venue": "Constraints 18(4), 478\u2013534", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Core-Guided MaxSAT with Soft Cardinality Constraints", "author": ["A. Morgado", "C. Dodaro", "J. Marques-Silva"], "venue": "Principles and Practice of Constraint Programming. LNCS, vol. 8656, pp. 564\u2013573. Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "Improvements to Core-Guided Binary Search for MaxSAT", "author": ["A. Morgado", "F. Heras", "J. Marques-Silva"], "venue": "Cimatti, A., Sebastiani, R. (eds.) International Conference on Theory and Applications of Satisfiability Testing. LNCS, vol. 7317, pp. 284\u2013297. Springer", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Maximum Satisfiability Using Core-Guided MaxSAT Resolution", "author": ["N. Narodytska", "F. Bacchus"], "venue": "AAAI Conference on Artificial Intelligence. pp. 2717\u20132723. AAAI Press", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2014}, {"title": "Finding and evaluating community structure in networks", "author": ["M.E.J. Newman", "M. Girvan"], "venue": "Physical Review E 69(026113)", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2004}, {"title": "Improved design debugging using maximum satisfiability", "author": ["S. Safarpour", "H. Mangassarian", "A.G. Veneris", "M.H. Liffiton", "K.A. Sakallah"], "venue": "Formal Methods in Computer-Aided Design. pp. 13\u201319. IEEE Computer Society", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2007}, {"title": "Variable independence and resolution paths for quantified boolean formulas", "author": ["A. Van Gelder"], "venue": "Principles and Practice of Constraint Programming. LNCS, vol. 6876, pp. 789\u2013803. Springer", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2011}, {"title": "Resolution graphs", "author": ["R.A. Yates", "B. Raphael", "T.P. Hart"], "venue": "Artificial Intelligence 1(4), 257\u2013289", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1970}], "referenceMentions": [{"referenceID": 1, "context": "Many real-world problems in different areas such as fault localization in C programs, design debugging, upgradability of software systems, among other, can be solved using Maximum Satisfiability (MaxSAT) [2,9,11,14,24].", "startOffset": 204, "endOffset": 218}, {"referenceID": 8, "context": "Many real-world problems in different areas such as fault localization in C programs, design debugging, upgradability of software systems, among other, can be solved using Maximum Satisfiability (MaxSAT) [2,9,11,14,24].", "startOffset": 204, "endOffset": 218}, {"referenceID": 10, "context": "Many real-world problems in different areas such as fault localization in C programs, design debugging, upgradability of software systems, among other, can be solved using Maximum Satisfiability (MaxSAT) [2,9,11,14,24].", "startOffset": 204, "endOffset": 218}, {"referenceID": 22, "context": "Many real-world problems in different areas such as fault localization in C programs, design debugging, upgradability of software systems, among other, can be solved using Maximum Satisfiability (MaxSAT) [2,9,11,14,24].", "startOffset": 204, "endOffset": 218}, {"referenceID": 2, "context": "The cardinality constraint is encoded into a set of propositional clauses, which are added to the working formula [3,12,16].", "startOffset": 114, "endOffset": 123}, {"referenceID": 11, "context": "The cardinality constraint is encoded into a set of propositional clauses, which are added to the working formula [3,12,16].", "startOffset": 114, "endOffset": 123}, {"referenceID": 14, "context": "The cardinality constraint is encoded into a set of propositional clauses, which are added to the working formula [3,12,16].", "startOffset": 114, "endOffset": 123}, {"referenceID": 13, "context": "An example is the MSU3 algorithm [15] presented in Algorithm 2.", "startOffset": 33, "endOffset": 37}, {"referenceID": 17, "context": "Although more sophisticated MaxSAT algorithms exist [19], an implementation of MSU3 algorithm on the Open-WBO framework was the best performing", "startOffset": 52, "endOffset": 56}, {"referenceID": 14, "context": "One of the crucial features for its success relies on the fact that only one SAT solver instance needs to be created [16].", "startOffset": 117, "endOffset": 121}, {"referenceID": 0, "context": "For instance, graph representations have been used to characterize industrial SAT instances [1] and to improve on the performance of MaxSAT algorithms [18].", "startOffset": 92, "endOffset": 95}, {"referenceID": 16, "context": "For instance, graph representations have been used to characterize industrial SAT instances [1] and to improve on the performance of MaxSAT algorithms [18].", "startOffset": 151, "endOffset": 155}, {"referenceID": 24, "context": "In this section, we briefly review the Clause-Variable Incidence Graph (CVIG) and adapt the use of Resolution-based Graphs (RES) [26] to model relations in CNF formulas.", "startOffset": 129, "endOffset": 133}, {"referenceID": 0, "context": "Although other models exist [1,25,18], in the context of our algorithm for MaxSAT solving, these were found to be the best suited.", "startOffset": 28, "endOffset": 37}, {"referenceID": 23, "context": "Although other models exist [1,25,18], in the context of our algorithm for MaxSAT solving, these were found to be the best suited.", "startOffset": 28, "endOffset": 37}, {"referenceID": 16, "context": "Although other models exist [1,25,18], in the context of our algorithm for MaxSAT solving, these were found to be the best suited.", "startOffset": 28, "endOffset": 37}, {"referenceID": 12, "context": "A similar type of analysis is done in blocked clause elimination [13,10] \u2014 a technique commonly used in formula preprocessing.", "startOffset": 65, "endOffset": 72}, {"referenceID": 9, "context": "A similar type of analysis is done in blocked clause elimination [13,10] \u2014 a technique commonly used in formula preprocessing.", "startOffset": 65, "endOffset": 72}, {"referenceID": 24, "context": "Although resolution-based graphs are not novel [26] and have been used in other domains [25], in this paper we propose to enhance the resolution-based graph representation by adding weights to edges.", "startOffset": 47, "endOffset": 51}, {"referenceID": 23, "context": "Although resolution-based graphs are not novel [26] and have been used in other domains [25], in this paper we propose to enhance the resolution-based graph representation by adding weights to edges.", "startOffset": 88, "endOffset": 92}, {"referenceID": 3, "context": "Next, we apply a community-finding algorithm on the graph representation that maximizes a modularity measure [4] in order to obtain a graph partitioning.", "startOffset": 109, "endOffset": 112}, {"referenceID": 6, "context": "Recently, the use of modularity measures has become widespread when analyzing the structure of graphs, in particular for the identification of communities [7,23].", "startOffset": 155, "endOffset": 161}, {"referenceID": 21, "context": "Recently, the use of modularity measures has become widespread when analyzing the structure of graphs, in particular for the identification of communities [7,23].", "startOffset": 155, "endOffset": 161}, {"referenceID": 0, "context": "In fact, this has already been used in the analysis of SAT instances [1] and to improve the initial unsatisfiability-based approach proposed by Fu and", "startOffset": 69, "endOffset": 72}, {"referenceID": 5, "context": "Malik [6,18].", "startOffset": 6, "endOffset": 12}, {"referenceID": 16, "context": "Malik [6,18].", "startOffset": 6, "endOffset": 12}, {"referenceID": 4, "context": "However, finding a set of partitions with an optimal modularity value is computationally hard [5].", "startOffset": 94, "endOffset": 97}, {"referenceID": 3, "context": "[4].", "startOffset": 0, "endOffset": 3}, {"referenceID": 16, "context": "In early attempts, the merge process was sequential [18].", "startOffset": 52, "endOffset": 56}, {"referenceID": 7, "context": "Finally, we would like to reference other solvers that split the set of soft clauses by identifying disjoint unsatisfiable subformulas [8,21].", "startOffset": 135, "endOffset": 141}, {"referenceID": 19, "context": "Finally, we would like to reference other solvers that split the set of soft clauses by identifying disjoint unsatisfiable subformulas [8,21].", "startOffset": 135, "endOffset": 141}, {"referenceID": 7, "context": "Furthermore, in solvers where disjoint unsatisfiable subformulas are identified [8,21], the split occurs on the cardinality constraints at each iteration.", "startOffset": 80, "endOffset": 86}, {"referenceID": 19, "context": "Furthermore, in solvers where disjoint unsatisfiable subformulas are identified [8,21], the split occurs on the cardinality constraints at each iteration.", "startOffset": 80, "endOffset": 86}, {"referenceID": 15, "context": "The top 3 were Open-WBO\u2019s MSU3 incremental algorithm [17,16], Eva500a [22] and MSCG [20].", "startOffset": 53, "endOffset": 60}, {"referenceID": 14, "context": "The top 3 were Open-WBO\u2019s MSU3 incremental algorithm [17,16], Eva500a [22] and MSCG [20].", "startOffset": 53, "endOffset": 60}, {"referenceID": 20, "context": "The top 3 were Open-WBO\u2019s MSU3 incremental algorithm [17,16], Eva500a [22] and MSCG [20].", "startOffset": 70, "endOffset": 74}, {"referenceID": 18, "context": "The top 3 were Open-WBO\u2019s MSU3 incremental algorithm [17,16], Eva500a [22] and MSCG [20].", "startOffset": 84, "endOffset": 88}, {"referenceID": 14, "context": "As with the MSU3 implementation on Open-WBO, we take advantage of assumptions usage at each SAT call and incremental encoding of cardinality constraints [16].", "startOffset": 153, "endOffset": 157}], "year": 2015, "abstractText": "Most recent MaxSAT algorithms rely on a succession of calls to a SAT solver in order to find an optimal solution. In particular, several algorithms take advantage of the ability of SAT solvers to identify unsatisfiable subformulas. Usually, these MaxSAT algorithms perform better when small unsatisfiable subformulas are found early. However, this is not the case in many problem instances, since the whole formula is given to the SAT solver in each call. In this paper, we propose to partition the MaxSAT formula using a resolution-based graph representation. Partitions are then iteratively joined by using a proximity measure extracted from the graph representation of the formula. The algorithm ends when only one partition remains and the optimal solution is found. Experimental results show that this new approach further enhances a state of the art MaxSAT solver to optimally solve a larger set of industrial problem instances.", "creator": "LaTeX with hyperref package"}}}