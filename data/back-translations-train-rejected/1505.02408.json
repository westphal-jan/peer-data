{"id": "1505.02408", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-May-2015", "title": "DistMS: A Non-Portfolio Distributed Solver for Maximum Satisfiability", "abstract": "The most successful parallel SAT and MaxSAT solvers follow a portfolio approach, where each thread applies a different algorithm (or the same algorithm configured differently) to solve a given problem instance. The main goal of building a portfolio is to diversify the search process being carried out by each thread. As soon as one thread finishes, the instance can be deemed solved. In this paper we present a new open source distributed solver for MaxSAT solving that addresses two issues commonly found in multicore parallel solvers, namely memory contention and scalability. Preliminary results show that our non-portfolio distributed MaxSAT solver outperforms its sequential version and is able to solve more instances as the number of processes increases.", "histories": [["v1", "Sun, 10 May 2015 16:55:42 GMT  (57kb,D)", "http://arxiv.org/abs/1505.02408v1", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["miguel neves", "in\\^es lynce", "vasco manquinho"], "accepted": false, "id": "1505.02408"}, "pdf": {"name": "1505.02408.pdf", "metadata": {"source": "CRF", "title": "DistMS: A Non-Portfolio Distributed Solver for Maximum Satisfiability", "authors": ["Miguel Neves", "Vasco Manquinho"], "emails": ["neves@sat.inesc-id.pt", "ines@sat.inesc-id.pt", "vmm@sat.inesc-id.pt"], "sections": [{"heading": "1 Context and Motivation", "text": "??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"}, {"heading": "2.1 Search Space Splitting Algorithm", "text": "Given n processes, the search space splitting algorithm is composed of 1master, 1 unsatisfaction-based process and n \u2212 2 linear search processes. The master process is responsible for maintaining a lower limit \u03bb and an upper limit \u00b5 on the optimal solution of the MaxSAT instance. The lower limit is initially 0. The master process begins with a SAT call containing only the hard clauses. Note that if this SAT call is unsatisfactory, the solver immediately terminates and returns that the instance is not satisfactory. Otherwise, the number of unsatisfactory soft clauses provides an initial upper limit of \u00b5.The main objective of the search splitting algorithm is to divide the set of possible values for the optimal solution. Given k linear search processes, p1, pk, the interval defined by the lower limit and upper limit is divided by the k processes."}, {"heading": "2.2 Guiding Paths with Lookahead Algorithm", "text": "The solution, which has been newly found, is initially based on a lookahead solver to create guides to divide the search tree. Lookahead solvers apply a complex reasoning at each branching step to guide the search more effectively. The algorithm described in the rest of this section is an extension of the previous approach to distributed MaxSAT. Faced with n processes, the guideline algorithm is compiled in DistMS by a master, n \u2212 2 guideline solution processes and 1 linear search process. The master starts by generating a queue of guides to be solved by the slave processes while waiting for an initial upper limit. The guides are heuristically sorted and matched to available slave processes with the best bound code. Each slave applies a linear search MaxSAT algorithm [1] and returns the solution found to the master."}, {"heading": "10 end", "text": "It is not as if the procedure which prevents the procedure from the generalisation to the generalisation. If the procedure from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation from the generalisation to the generalisation of the generalisation from the generalisation to the generalisation of the generalisation from the generalisation to the generalisation to the generalisation of the generalisation of the"}, {"heading": "3 Experimental Results and Discussion", "text": "The results in Table 1 were created on the partial MaxSAT and industrial instances of the MaxSAT evaluation of 2013. DistMS was implemented on top of OpenWBO [12] and different configurations of DistMS are compared against the sequential counterparts. MSU3 refers to the dissatisfaction-based MSU3 algorithm, Linear SU to the linear search algorithms of OpenWBO, GP-n: Guide paths with n processes per one of the m machines and SSS-n: m to search space splitting with n per one of the m machines. For each instance, algorithms were executed with a time span of 1800 seconds (wall clock time) and a memory limit of n per process. Tests were performed on a group of machines with 4 AMD Opteron 6376 (2.3 GHz) and 128 GB of RAM."}], "references": [{"title": "QMaxSAT: A Partial Max-SAT Solver", "author": ["X. An", "T. Zhang", "H. Fujita", "R. Hasegawa"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation 8, 95\u2013100", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "An effective distributed d&c approach for the satisfiability problem", "author": ["G. Audemard", "B. Hoessen", "S. Jabbour", "C. Piette"], "venue": "22nd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing, PDP. pp. 183\u2013187. IEEE Computer Society", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Efficient CNF Encoding of Boolean Cardinality Constraints", "author": ["O. Bailleux", "Y. Boufkhad"], "venue": "Rossi, F. (ed.) Principles and Practice of Constraint Programming. LNCS, vol. 2833, pp. 108\u2013122. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2003}, {"title": "On solving the partial MAX-SAT problem", "author": ["Z. Fu", "S. Malik"], "venue": "Biere, A., Gomes, C.P. (eds.) Theory and Applications of Satisfiability Testing - SAT 2006, 9th International Conference, Seattle, WA, USA, August 12-15, 2006, Proceedings. Lecture Notes in Computer Science, vol. 4121, pp. 252\u2013265. Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "Cube and Conquer: Guiding CDCL SAT Solvers by Lookaheads", "author": ["M.J. Heule", "O. Kullmann", "S. Wieringa", "A. Biere"], "venue": "Hardware and Software: Verification and Testing, pp. 50\u201365. Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2012}, {"title": "QMaxSAT: A Partial MaxSAT Solver", "author": ["M. Koshimura", "T. Zhang", "H. Fujita", "R. Hasegawa"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation 8(1/2), 95\u2013100", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2012}, {"title": "MaxSAT, Hard and Soft Constraints", "author": ["C.M. Li", "F. Many\u00e0"], "venue": "Handbook of Satisfiability, pp. 613\u2013631. IOS Press", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Conflict-Driven Clause Learning SAT Solvers", "author": ["J. Marques-Silva", "I. Lynce", "S. Malik"], "venue": "SAT Handbook pp. 131\u2013154", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2009}, {"title": "GRASP: A New Search Algorithm for Satisfiability", "author": ["J. Marques-Silva", "K. Sakallah"], "venue": "International Conference on Computer-Aided Design. pp. 220\u2013227", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1996}, {"title": "Parallel Search for Maximum Satisfiability", "author": ["R. Martins"], "venue": "Ph.D. thesis, Instituto Superior T\u00e9cnico, Universidade T\u00e9cnica de Lisboa", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "Parallel Search for Maximum Satisfiability", "author": ["R. Martins", "V. Manquinho", "I. Lynce"], "venue": "AI Communications 25, 75\u201395", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2012}, {"title": "Open-wbo: A modular maxsat solver", "author": ["R. Martins", "V.M. Manquinho", "I. Lynce"], "venue": "(eds.) Theory and Applications of Satisfiability Testing SAT 2014 - 17th International Conference, Held as Part of the Vienna Summer of Logic,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2014}, {"title": "Iterative and core-guided MaxSAT solving: A survey and assessment", "author": ["A. Morgado", "F. Heras", "M. Liffiton", "J. Planes", "J. Marques-Silva"], "venue": "Constraints 18(4), 478\u2013534", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "Chaff: Engineering an efficient sat solver", "author": ["M.W. Moskewicz", "C.F. Madigan", "Y. Zhao", "L. Zhang", "S. Malik"], "venue": "Proceedings of the 38th annual Design Automation Conference. pp. 530\u2013535. ACM", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2001}, {"title": "PSATO: a Distributed Propositional Prover and Its Application to Quasigroup Problems", "author": ["H. Zhang", "M.P. Bonacina", "J. Hsiang"], "venue": "Journal of Symbolic Computation 21, 543\u2013560", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1996}, {"title": "Efficient Conflict Driven Learning in a Boolean Satisfiability Solver", "author": ["L. Zhang", "C.F. Madigan", "M.H. Moskewicz", "S. Malik"], "venue": "International Conference on Computer-Aided Design. pp. 279\u2013285", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2001}, {"title": "Validating SAT solvers using an independent resolution-based checker: Practical implementations and other applications", "author": ["L. Zhang", "S. Malik"], "venue": "2003 Design, Automation and Test in Europe Conference and Exposition (DATE 2003), 3-7 March 2003, Munich, Germany. pp. 10880\u201310885. IEEE Computer Society", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 6, "context": "Although there are weighted variants of MaxSAT [7], in this paper we focus on partial MaxSAT.", "startOffset": 47, "endOffset": 50}, {"referenceID": 3, "context": "Hence, a common approach for solving partial MaxSAT is to relax \u03c6 and iteratively call a SAT solver on \u03c6R with an additional constraint \u2211 rj \u2264 b encoded into CNF [4].", "startOffset": 162, "endOffset": 165}, {"referenceID": 16, "context": "More recently, several algorithms have been proposed that take advantage of the ability of SAT solvers to provide an unsatisfiable sub-formula [17].", "startOffset": 143, "endOffset": 147}, {"referenceID": 12, "context": "We refer the reader to the literature for details [13].", "startOffset": 50, "endOffset": 54}, {"referenceID": 9, "context": "[10,11].", "startOffset": 0, "endOffset": 7}, {"referenceID": 10, "context": "[10,11].", "startOffset": 0, "endOffset": 7}, {"referenceID": 14, "context": "The second algorithm is based on the guiding paths splitting strategy [15,5,2], which has been shown to be successful in parallel and distributed SAT solvers.", "startOffset": 70, "endOffset": 78}, {"referenceID": 4, "context": "The second algorithm is based on the guiding paths splitting strategy [15,5,2], which has been shown to be successful in parallel and distributed SAT solvers.", "startOffset": 70, "endOffset": 78}, {"referenceID": 1, "context": "The second algorithm is based on the guiding paths splitting strategy [15,5,2], which has been shown to be successful in parallel and distributed SAT solvers.", "startOffset": 70, "endOffset": 78}, {"referenceID": 1, "context": "Unlike other distributed solvers [2], slave processes in DistMS do not communicate directly.", "startOffset": 33, "endOffset": 36}, {"referenceID": 2, "context": "A slave process pi executes a SAT call on a relaxed MaxSAT formula \u03c6R with the additional constraint \u2211 rj \u2264 bi encoded into CNF [3,6].", "startOffset": 128, "endOffset": 133}, {"referenceID": 5, "context": "A slave process pi executes a SAT call on a relaxed MaxSAT formula \u03c6R with the additional constraint \u2211 rj \u2264 bi encoded into CNF [3,6].", "startOffset": 128, "endOffset": 133}, {"referenceID": 4, "context": "[5] already proposed a parallel SAT algorithm that initially uses a lookahead solver to generate guiding paths in order to split the search tree.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "Each slave applies a linear search MaxSAT algorithm [1] and returns the best solution found for the given path to the master.", "startOffset": 52, "endOffset": 55}, {"referenceID": 4, "context": "[5].", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "Algorithm 1: Guiding Path generation algorithm [5]", "startOffset": 47, "endOffset": 50}, {"referenceID": 8, "context": "If \u03c6 is unsatisfied, then the procedure applies conflict analysis [9,16] and learns a new clause (line 8), similarly to a CDCL SAT solver [8].", "startOffset": 66, "endOffset": 72}, {"referenceID": 15, "context": "If \u03c6 is unsatisfied, then the procedure applies conflict analysis [9,16] and learns a new clause (line 8), similarly to a CDCL SAT solver [8].", "startOffset": 66, "endOffset": 72}, {"referenceID": 7, "context": "If \u03c6 is unsatisfied, then the procedure applies conflict analysis [9,16] and learns a new clause (line 8), similarly to a CDCL SAT solver [8].", "startOffset": 138, "endOffset": 141}, {"referenceID": 13, "context": "Given a literal l, the only difference is that instead of considering all the clauses in \u03c6, only the clauses watching [14] literal l are considered in the computation of evalwl(l).", "startOffset": 118, "endOffset": 122}, {"referenceID": 11, "context": "DistMS was implemented on top of OpenWBO [12] and different configurations of DistMS are compared against the sequential counterparts.", "startOffset": 41, "endOffset": 45}], "year": 2015, "abstractText": null, "creator": "LaTeX with hyperref package"}}}