{"id": "1505.03085", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-May-2015", "title": "Indonesian Social Media Sentiment Analysis With Sarcasm Detection", "abstract": "Sarcasm is considered one of the most difficult problem in sentiment analysis. In our ob-servation on Indonesian social media, for cer-tain topics, people tend to criticize something using sarcasm. Here, we proposed two additional features to detect sarcasm after a common sentiment analysis is conducted. The features are the negativity information and the number of interjection words. We also employed translated SentiWordNet in the sentiment classification. All the classifications were conducted with machine learning algorithms. The experimental results showed that the additional features are quite effective in the sarcasm detection.", "histories": [["v1", "Tue, 12 May 2015 16:45:52 GMT  (419kb)", "http://arxiv.org/abs/1505.03085v1", "4 pages; 3 figures"]], "COMMENTS": "4 pages; 3 figures", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["edwin lunando", "ayu purwarianti"], "accepted": false, "id": "1505.03085"}, "pdf": {"name": "1505.03085.pdf", "metadata": {"source": "CRF", "title": "Indonesian Social Media Sentiment Analysis with Sarcasm Detection", "authors": ["Edwin Lunando", "Ayu Purwarianti"], "emails": ["edwinlunando@gmail.com", "ayu@stei.itb.ac.id"], "sections": [{"heading": null, "text": "In fact, most people who are able to move are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "II. SENTIMENT ANALYSIS WITH SARCASM CLASSIFICATION", "text": "An easy way to meet the formatting requirements of the conference paper is to use this document as a template and simply type in your text. Similar to other mood analysis systems, our mood classification system consists of pre-processing, fit extraction and classification. The system architecture is as shown in Figure 1."}, {"heading": "A. Preprocessing component", "text": "Pre-processing aims to minimise the vocabulary of the terms used in the text message. In Indonesian text messages on social media such as Twitter or Facebook, people tend to use oblique words as formal, such as numerical, to replace the alphabet, to repeat vowel signs, and to use ordinary informal words to replace formal words. [2] To process such words, we used pre-processing as follows: 1. Reverse numerical words in alphabet, such as \"ga2l\" in \"gagal\" (fail) 2. Remove vocal repetitions, such as \"cemunguuudh\" in \"cemungudh\" 3. Translate informal words into formal words using dictionary, such as \"cemungudh\" in \"semangat\" (high spirit)."}, {"heading": "B. Feature extraction component", "text": "\"There are several phenomena that have emerged from the edited text: 1. Unigram We analyzed that unigram is better suited for indonesian social media text since the grammars used in indonesian social media texts are different and informal.The unigram taken from the text is only the term that exists in our translated SentiWordNet. We translate English SentiWordNet into Indonesian language using an available statistical machine translator (Google). In the translation, an Indonesian word with more than one English translation is given the average score of all English translations. For text\" Pasangan Rieke dan Teten cok untuk memajukan Jawa Barat. \"(Rieke and Teten are suitable to advance West Java!), the unigram features are taken for\" cocok \"(suitable) and\" memajukan. \""}, {"heading": "C. Classification component", "text": "In the classification component, there are two classification steps. The first classification consists of classifying each text into three sentiment classes: possible, negative and neutral. The second classification consists in classifying the sarcasm of the possible text. The flow is as in Figure 2.All classifications are performed using several machine learning algorithms such as Na\u00efve Bayes, Maximum Entropy and Support Vector Machine.These algorithms were chosen because they have shown good accuracy in many text classification tasks [7]. In the first classification, the attribute is the unicode, while in the second classification the attribute is the unicode, negativity and the number of interjection words.Figure 3 describes one of the classification methods used in sentiment analysis. Instead of classifying a text directly into three classes, this method first classifies a text into opinions and neutral text. Then the opinion text is classified into positive or negative class. [3] It tries to use this method, but does not have both of them interrelated."}, {"heading": "III. EXPERIMENTS", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A. Experimental data", "text": "The size of the training data is 980, which consists of 502 neutral texts, 250 possible texts and 228 negative texts. The size of the test data is 300, which consists of 200 neutral texts, 60 possible texts and 40 negative texts. Training and test data were collected from various topics such as politics, food, film and public figures. To get the list of negativity values, we created it using Twitter's search API. We collected 100 tweets from each topic and labelled the mood manually to get the number of positive and negative tweets."}, {"heading": "B. Experimental result and analysis", "text": "There were three experiments that were conducted: the first experiment is at the first stage of classification step, and the second experiment is at the second stage of classification level 78 (classification method), and the third classification is at the third stage of classification step (sarcasm classification).1) Experiments on Sentiment ScoreAs the first experiment, we evaluated the use of the translated SentiWordNet in the first classification type, which classifies each text into 3 classes: possible, negative and neutral. We compared two things in the experiment: using only the lexical of Sentiment Word; and using the score of the Sentiment Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word. The mood can be the word with a low score and the word with a high Sentier Sentier Sentiment Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word Word."}, {"heading": "IV. CONCLUSIONS", "text": "We have shown that the additional features for detecting sarcasm are very effective, as they have increased accuracy by 6%. Based on our observations of the sarcasm data, we have added the features of negativity and the number of interjection words. Negativity tried to capture the global mood value, while the interjection feature represents the lexical phenomena of the text message. In our next research, we will evaluate the method for detecting sarcasm text without a global theme and add some new features to the leveled classification to improve the result."}], "references": [{"title": "Sentiment Classification for Indonesian Messages in Social Media", "author": ["A.R. Naradhipa", "A. Purwarianti"], "venue": "International Conference on Electrical Engineering and Informatics (ICEEI). Bandung. Indonesia", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Sistem Analisis Opini Microblogging Berbahasa Indonesia", "author": ["Harlili", "Wibisono", "Yudi"], "venue": "Konferensi Nasional Sistem Informasi. Bali. Indonesia", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Lexical Influences on the Perception of Sarcasm", "author": ["Kreuz", "R. J", "G.M. Caucci"], "venue": "Proceedings of the Workshop on Computational Approaches to Figurative Language", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2007}, {"title": "Identifying Sarcasm in Twitter: a closer look", "author": ["R. Gonzales-Ibanez", "S. Muresan", "Wacholder N"], "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "SentiWordNet 3.0: An Enhanced Lexical Resource for Sentiment Analysis and Opinion Mining", "author": ["S. Baccianella", "A. Esuli", "Sebastiani"], "venue": "Proceedings of LREC-2010", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Thumb\u2019s up? Sentiment Classification using machine learning Techniques", "author": ["Pang", "Bo", "L. Lee", "Vaithyanathan"], "venue": "Proceeding of the 7 Conference on Empirical Methods in Natural Language Processing (EMNLP-02)", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2002}], "referenceMentions": [{"referenceID": 3, "context": "One approach to solve this problem was by employing lexical features such as unigram and pragmatic factors such as smileys or emoticons [5].", "startOffset": 136, "endOffset": 139}, {"referenceID": 2, "context": "An interesting analysis from the field of lingustic tells us that lexical factors like presence of adjectives and adverbs, presence of interjections, and use of punctuations play a quite significant role in sarcasm[4] In the basic sentiment analysis, many researches employed machine learning techniques such as Na\u00efve Bayes, Maximum Entropy, and Support Vector machine because these algorithms are tend to outperform the other algorithm in the context of text classification [2][3][7].", "startOffset": 214, "endOffset": 217}, {"referenceID": 0, "context": "An interesting analysis from the field of lingustic tells us that lexical factors like presence of adjectives and adverbs, presence of interjections, and use of punctuations play a quite significant role in sarcasm[4] In the basic sentiment analysis, many researches employed machine learning techniques such as Na\u00efve Bayes, Maximum Entropy, and Support Vector machine because these algorithms are tend to outperform the other algorithm in the context of text classification [2][3][7].", "startOffset": 475, "endOffset": 478}, {"referenceID": 1, "context": "An interesting analysis from the field of lingustic tells us that lexical factors like presence of adjectives and adverbs, presence of interjections, and use of punctuations play a quite significant role in sarcasm[4] In the basic sentiment analysis, many researches employed machine learning techniques such as Na\u00efve Bayes, Maximum Entropy, and Support Vector machine because these algorithms are tend to outperform the other algorithm in the context of text classification [2][3][7].", "startOffset": 478, "endOffset": 481}, {"referenceID": 5, "context": "An interesting analysis from the field of lingustic tells us that lexical factors like presence of adjectives and adverbs, presence of interjections, and use of punctuations play a quite significant role in sarcasm[4] In the basic sentiment analysis, many researches employed machine learning techniques such as Na\u00efve Bayes, Maximum Entropy, and Support Vector machine because these algorithms are tend to outperform the other algorithm in the context of text classification [2][3][7].", "startOffset": 481, "endOffset": 484}, {"referenceID": 4, "context": "Other than that, there is also a lexical resource, SentiWordNet [6], developed as a resource of word with sentiment score.", "startOffset": 64, "endOffset": 67}, {"referenceID": 0, "context": "This is different with other researches on sentiment analysis of Indonesian social media [2][3] which didn\u2019t address the sarcasm detection and didn\u2019t employ sentiment score in the SentiWordNet.", "startOffset": 89, "endOffset": 92}, {"referenceID": 1, "context": "This is different with other researches on sentiment analysis of Indonesian social media [2][3] which didn\u2019t address the sarcasm detection and didn\u2019t employ sentiment score in the SentiWordNet.", "startOffset": 92, "endOffset": 95}, {"referenceID": 0, "context": "In Indonesian text message of social media such as twitter or facebook, people tend to use slank words than the formal one such as using numeric to replace alphabet, repeating vocal characters, and using common informal words to replace the formal words [2].", "startOffset": 254, "endOffset": 257}, {"referenceID": 0, "context": "To handle this problem, we used a special list of word such as used in [2].", "startOffset": 71, "endOffset": 74}, {"referenceID": 0, "context": "Since not all suffix \u201can\u201d have negative sentiment, we handled this problem by using a list of word such as used in [2].", "startOffset": 115, "endOffset": 118}, {"referenceID": 5, "context": "These algorithms were chosen because they have shown good accuracy in many text classification task [7].", "startOffset": 100, "endOffset": 103}, {"referenceID": 1, "context": "[3] has tried to use this method, but they haven\u2019t compare those two methods.", "startOffset": 0, "endOffset": 3}], "year": 2013, "abstractText": "Sarcasm is considered one of the most difficult problem in sentiment analysis. In our ob-servation on Indonesian social media, for cer-tain topics, people tend to criticize something using sarcasm. Here, we proposed two additional features to detect sarcasm after a common sentiment analysis is conducted. The features are the negativity information and the number of interjection words. We also employed translated SentiWordNet in the sentiment classification. All the classifications were conducted with machine learning algorithms. The experimental results showed that the additional features are quite effective in the sarcasm detection. Keywords\u2014 Sentimen analysis, sarcasm, classification,", "creator": "Microsoft\u00ae Word 2013"}}}