{"id": "1505.05364", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-May-2015", "title": "Reactive Reasoning with the Event Calculus", "abstract": "Systems for symbolic event recognition accept as input a stream of time-stamped events from sensors and other computational devices, and seek to identify high-level composite events, collections of events that satisfy some pattern. RTEC is an Event Calculus dialect with novel implementation and 'windowing' techniques that allow for efficient event recognition, scalable to large data streams. RTEC can deal with applications where event data arrive with a (variable) delay from, and are revised by, the underlying sources. RTEC can update already recognised events and recognise new events when data arrive with a delay or following data revision. Our evaluation shows that RTEC can support real-time event recognition and is capable of meeting the performance requirements identified in a recent survey of event processing use cases.", "histories": [["v1", "Wed, 20 May 2015 13:26:36 GMT  (359kb,D)", "http://arxiv.org/abs/1505.05364v1", "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 9-15, technical report, ISSN 1430-3701, Leipzig University, 2014.this http URL2014,1"]], "COMMENTS": "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 9-15, technical report, ISSN 1430-3701, Leipzig University, 2014.this http URL2014,1", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["alexander artikis", "marek sergot", "georgios paliouras"], "accepted": false, "id": "1505.05364"}, "pdf": {"name": "1505.05364.pdf", "metadata": {"source": "CRF", "title": "Reactive Reasoning with the Event Calculus", "authors": ["Alexander Artikis", "Georgios Paliouras"], "emails": ["a.artikis@unipi.gr", "m.sergot@imperial.ac.uk", "paliourg@iit.demokritos.gr"], "sections": [{"heading": "1 Introduction", "text": "The SDEs (\"low level event\") is the result of the application of a computer-based derivative process to another event, such as an event originating from a sensor. [21] The use of SDEs as input, the recognition of events that satisfy a certain pattern, requires a contemporary and possibly atemporal limitation on their subevents, i.e. SDEs or other CEs. The recognition of attacks on computer networks that measure the TCP / IP. Countless recognition systems have been proposed in the literature [10]."}, {"heading": "2 Event Calculus", "text": "Our system for CE recognition is based on an event calculator dialect. The event calculator [18] is a logical programming formalism for displaying and reflecting events and their effects. For the dialect introduced here, called RTEC, the time model is linear and includes integer points of time. Variables begin with an uppercase letter, while predicates and constants begin with a lowercase letter. Where F is a fluid - a property that may have different values at different points of time - the term F = V denotes the fluid value V. Boolean liquids are a special case where the possible values are true and false. HoldsAt (F = V, T) represents this fluid value V at a given time. HoldsFor (F = V, I) represents that I consider the list of maximum intervals for which F = V is holdsly."}, {"heading": "2.1 Simple Fluents", "text": "We assume that without loss of generality these types are splintered (for a simple person = 1); for a simple person (for a simple person = 1) these types are splintered (for a simple person = 1); for a simple person (for a simple person = 1) these types are splintered (for a simple person = 1); this is an implementation of the law of inertia. To calculate the intervals for which F = V, i.e. holdsFor (F = V, I), we find all the time points at which F = V is initiated, and then we calculate the law of inertia for each Ts. The times at which F = V is \"broken.\" The times at which F = V is initiated are calculated using domain-specific initiatedAt rules; the times at which F = V is initiated."}, {"heading": "2.2 Statically Determined Fluents", "text": "In addition to the domain-independent definition of HoldsFor, an event description may include domain-specific HoldsFor rules, which are used to define the values of a flowing F relative to the values of other fluents. We call such a flowing F list statically determined. HoldsFor (moving (P1, P2) = true, I) \u2190 List HoldsFor (walking (P1) = true, I1), holdsFor (walking) (walking (P2) = true, I3), intersect all (I2, I3), holdsFor (walking) (11) List I of maximum intervals Intervals moving with P2 is calculated by determining the list I1 of I3), intersect all (I2, I3), intersect all (11) List I of maximum intervals moving with P2."}, {"heading": "2.3 Semantics", "text": "CE definitions are (locally) layered logic programs [25]. We limit attention to hierarchical definitions where it is possible to define a functional level that maps all fluent values F = V and all events to non-negative integers as follows. Events and statically determined fluent values F = V of level 0 are those whose HappensAt and HoldsFor definitions do not depend on other events or fluent values. In CE detection, they represent the input SDEs. There are no fluent values F = V of simple fluent values F of level 0. Events and simple fluent values of level n are defined in terms of at least one event or fluent value of level n \u2212 1 and a possibly empty set of events and fluent values from levels lower than n \u2212 1. Statically determined fluent values of level n are defined in terms of at least one fluent value of level n and a static empty set of values \u2212 1."}, {"heading": "3 Run-Time Recognition", "text": "In this context, it should be noted that this is a very complex matter."}, {"heading": "4 Experimental Results", "text": "In fact, it is the case that most of us are able to abide by the rules that they have imposed on themselves. (...) It is not as if they were able to determine themselves. (...) It is not as if they were able to determine themselves. (...) It is as if they were able to determine themselves. (...) It is as if they were able to determine themselves. (...) It is as if they were able to determine themselves. (...) It is as if they are able to determine themselves. (...) It is as if they are able to determine themselves. (...)... (...)... (...) \"(...)\" (...) \"(...)\" (...) \"(...) (...) (...) (...) (...) (...) (...) () () (...) () ()"}, {"heading": "5 Discussion", "text": "This year, it is at an all-time high in the history of the European Union."}, {"heading": "ACKNOWLEDGEMENTS", "text": "We thank the anonymous reviewers for their very helpful comments. This work was partly funded by the EU FP7 project SPEEDD (619435)."}], "references": [{"title": "Real-time complex event recognition and reasoning", "author": ["D. Anicic", "S. Rudolph", "P. Fodor", "N. Stojanovic"], "venue": "Applied Artificial Intelligence, 26(1\u2013 2), 6\u201357, ", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "The CQL continuous query language: semantic foundations and query execution", "author": ["A. Arasu", "S. Babu", "J. Widom"], "venue": "The VLDB Journal, 15(2), 121\u2013142, ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Run-time composite event recognition", "author": ["A. Artikis", "M. Sergot", "G. Paliouras"], "venue": "DEBS, pp. 69\u201380. ACM, ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Logic-based event recognition", "author": ["A. Artikis", "A. Skarlatidis", "F. Portet", "G. Paliouras"], "venue": "Knowledge Engineering Review, 27(4), 469\u2013506, ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Results of the survey on event processing use cases", "author": ["P. Bizzaro"], "venue": "Event Processing Technical Society,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "A calculus of macro-events: Progress report", "author": ["I. Cervesato", "A. Montanari"], "venue": "TIME, pp. 47\u201358, ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2000}, {"title": "A logic-based", "author": ["F. Chesani", "P. Mello", "M. Montali", "P. Torroni"], "venue": "reactive calculus of events\u2019, Fundamenta Informaticae, 105(1-2), 135\u2013161, ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Efficient temporal reasoning in the cached event calculus", "author": ["L. Chittaro", "A. Montanari"], "venue": "Computational Intelligence, 12(3), 359\u2013382, ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1996}, {"title": "TESLA: a formally defined event specification language", "author": ["G. Cugola", "A. Margara"], "venue": "DEBS, pp. 50\u201361, ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Processing flows of information: From data stream to complex event processing", "author": ["G. Cugola", "A. Margara"], "venue": "ACM Computing Surveys, 44(3), 15, ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Efficiently correlating complex events over live and archived data streams", "author": ["N. Dindar", "P.M. Fischer", "M. Soner", "N. Tatbul"], "venue": "DEBS, pp. 243\u2013254, ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Runtime semantic query optimization for event stream processing", "author": ["L. Ding", "S. Chen", "E.A. Rundensteiner", "J. Tatemura", "W.-P. Hsiung", "K. Candan"], "venue": "ICDE, pp. 676\u2013685, ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "Chronicle recognition improvement using temporal focusing and hierarchisation", "author": ["C. Dousson", "P. Le Maigat"], "venue": "IJCAI, pp. 324\u2013329, ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2007}, {"title": "SASE: Complex event processing over streams", "author": ["D. Gyllstrom", "E. Wu", "H.-J. Chae", "Y. Diao", "P. Stahlberg", "G. Anderson"], "venue": "CIDR, ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Modular-E : An elaboration tolerant approach to the ramification and qualification problems", "author": ["A. Kakas", "L. Michael", "R. Miller"], "venue": "LP- NMR, pp. 211\u2013226, ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2005}, {"title": "Incremental learning of event definitions with inductive logic programming", "author": ["Nikos Katzouris", "Alexander Artikis", "George Paliouras"], "venue": "CoRR, abs/1402.5988,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2014}, {"title": "On the implementation of the probabilistic logic programming language ProbLog", "author": ["A. Kimmig", "B. Demoen", "L. De Raedt", "V. Santos Costa", "R. Rocha"], "venue": "Theory and Practice of Logic Programming, 11, 235\u2013 262, ", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2011}, {"title": "A logic-based calculus of events", "author": ["R. Kowalski", "M. Sergot"], "venue": "New Generation Computing, 4(1), 67\u201396, ", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1986}, {"title": "Semantics and implementation of continuous sliding window queries over data streams", "author": ["J. Kr\u00e4mer", "B. Seeger"], "venue": "ACM Transactions on Database Systems, 34(1), 1\u201349, ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2009}, {"title": "Complex event pattern detection over streams with interval-based temporal semantics", "author": ["M. Li", "M. Mani", "E.A. Rundensteiner", "T. Lin"], "venue": "DEBS, pp. 291\u2013302, ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Event processing glossary \u2014 version 1.1", "author": ["D. Luckham", "R. Schulte"], "venue": "Event Processing Technical Society,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "A monitoring approach for runtime service discovery", "author": ["K. Mahbub", "G. Spanoudakis", "A. Zisman"], "venue": "Automated Software Engineering, 18(2), 117\u2013161, ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "and W", "author": ["M. Montali", "F.M. Maggi", "F. Chesani", "P. Mello"], "venue": "M. P. van der Aalst, \u2018Monitoring business constraints with the Event Calculus\u2019, ACM TIST, 5(1), ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2014}, {"title": "Knowledge representation concepts for automated SLA management", "author": ["A. Paschke", "M. Bichler"], "venue": "Decision Support Systems, 46(1), 187\u2013 205, ", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2008}, {"title": "On the declarate semantics of stratified deductive databases and logic programs", "author": ["T. Przymusinski"], "venue": "Foundations of Deductive Databases and Logic Programming, Morgan, ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1987}, {"title": "Bilattice-based logical reasoning for human detection", "author": ["V. Shet", "J. Neumann", "V. Ramesh", "L. Davis"], "venue": "CVPR, ", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 20, "context": "A SDE (\u2018low-level event\u2019) is the result of applying a computational derivation process to some other event, such as an event coming from a sensor [21].", "startOffset": 146, "endOffset": 150}, {"referenceID": 9, "context": "Numerous recognition systems have been proposed in the literature [10].", "startOffset": 66, "endOffset": 70}, {"referenceID": 3, "context": "Recognition systems with a logic-based representation of CE definitions, in particular, have recently been attracting attention [4].", "startOffset": 128, "endOffset": 131}, {"referenceID": 17, "context": "To address this issue, we present an efficient dialect of the Event Calculus [18], called \u2018Event Calculus for Run-Time reasoning\u2019 (RTEC).", "startOffset": 77, "endOffset": 81}, {"referenceID": 4, "context": "Our evaluation shows that RTEC supports real-time CE recognition and is capable of meeting the performance requirements of most of today\u2019s applications as estimated by a recent survey of event processing use cases [5].", "startOffset": 214, "endOffset": 217}, {"referenceID": 17, "context": "The Event Calculus [18] is a logic programming formalism for representing and reasoning about events and their effects.", "startOffset": 19, "endOffset": 23}, {"referenceID": 2, "context": "The complexity analysis may be found in [3].", "startOffset": 40, "endOffset": 43}, {"referenceID": 24, "context": "CE definitions are (locally) stratified logic programs [25].", "startOffset": 55, "endOffset": 59}, {"referenceID": 0, "context": "Moreover, SDEs may be revised, or even completely discarded in the future, as in the case where the parameters of a SDE were originally computed erroneously and are subsequently revised, or in the case of retraction of a SDE that was reported by mistake, and the mistake was realised later [1].", "startOffset": 290, "endOffset": 293}, {"referenceID": 2, "context": "More details about CE recognition in RTEC may be found at [3].", "startOffset": 58, "endOffset": 61}, {"referenceID": 4, "context": "According to the use case survey of the Event Processing Technical Society [5], in the resulting dataset there are more SDEs per sec than in most applications.", "startOffset": 75, "endOffset": 78}, {"referenceID": 1, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 0, "endOffset": 14}, {"referenceID": 12, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 0, "endOffset": 14}, {"referenceID": 18, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 0, "endOffset": 14}, {"referenceID": 8, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 0, "endOffset": 14}, {"referenceID": 25, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 82, "endOffset": 89}, {"referenceID": 0, "context": "[2, 13, 19, 9]), has builtin axioms for complex temporal phenomena (as opposed to [26, 1]), explicitly represents CE intervals and thus avoids the related logical problems (as opposed to e.", "startOffset": 82, "endOffset": 89}, {"referenceID": 21, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 12, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 8, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 14, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 13, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 11, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 8, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 10, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 19, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 23, "context": "[22, 13, 9, 15]), and supports out-oforder SDE streams (as opposed to [14, 12, 9, 11, 20, 24]).", "startOffset": 70, "endOffset": 93}, {"referenceID": 7, "context": "[8, 7, 23, 24, 6]) \u2018forgets\u2019 or represents concisely the SDE history.", "startOffset": 0, "endOffset": 17}, {"referenceID": 6, "context": "[8, 7, 23, 24, 6]) \u2018forgets\u2019 or represents concisely the SDE history.", "startOffset": 0, "endOffset": 17}, {"referenceID": 22, "context": "[8, 7, 23, 24, 6]) \u2018forgets\u2019 or represents concisely the SDE history.", "startOffset": 0, "endOffset": 17}, {"referenceID": 23, "context": "[8, 7, 23, 24, 6]) \u2018forgets\u2019 or represents concisely the SDE history.", "startOffset": 0, "endOffset": 17}, {"referenceID": 5, "context": "[8, 7, 23, 24, 6]) \u2018forgets\u2019 or represents concisely the SDE history.", "startOffset": 0, "endOffset": 17}, {"referenceID": 7, "context": "The \u2018Cached Event Calculus\u2019 [8] performs update-time reasoning: it computes and stores the consequences of a SDE as soon as it arrives.", "startOffset": 28, "endOffset": 31}, {"referenceID": 15, "context": "For further work, we are developing techniques, based on abductive-inductive logic programming, for automated generation and refinement of CE definitions from very large datasets, with the aim of minimising the time-consuming and error-prone process of manual CE definition construction [16].", "startOffset": 287, "endOffset": 291}, {"referenceID": 16, "context": "We are also porting RTEC into probabilistic logic programming frameworks, in order to deal with various types of uncertainty, such as imperfect CE definitions, incomplete and erroneous SDE streams [17].", "startOffset": 197, "endOffset": 201}], "year": 2015, "abstractText": "Systems for symbolic event recognition accept as input a stream of time-stamped events from sensors and other computational devices, and seek to identify high-level composite events, collections of events that satisfy some pattern. RTEC is an Event Calculus dialect with novel implementation and \u2018windowing\u2019 techniques that allow for efficient event recognition, scalable to large data streams. RTEC can deal with applications where event data arrive with a (variable) delay from, and are revised by, the underlying sources. RTEC can update already recognised events and recognise new events when data arrive with a delay or following data revision. Our evaluation shows that RTEC can support real-time event recognition and is capable of meeting the performance requirements identified in a recent survey of event processing use cases. 4", "creator": "TeX"}}}