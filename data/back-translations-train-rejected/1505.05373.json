{"id": "1505.05373", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-May-2015", "title": "Towards a Simulation-Based Programming Paradigm for AI applications", "abstract": "We present initial ideas for a programming paradigm based on simulation that is targeted towards applications of artificial intelligence (AI). The approach aims at integrating techniques from different areas of AI and is based on the idea that simulated entities may freely exchange data and behavioural patterns. We define basic notions of a simulation-based programming paradigm and show how it can be used for implementing AI applications.", "histories": [["v1", "Wed, 20 May 2015 13:34:34 GMT  (30kb)", "http://arxiv.org/abs/1505.05373v1", "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 55-61, technical report, ISSN 1430-3701, Leipzig University, 2014"]], "COMMENTS": "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 55-61, technical report, ISSN 1430-3701, Leipzig University, 2014", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["j\\\"org p\\\"uhrer"], "accepted": false, "id": "1505.05373"}, "pdf": {"name": "1505.05373.pdf", "metadata": {"source": "CRF", "title": "Towards a Simulation-Based Programming Paradigm for AI applications", "authors": ["J\u00f6rg P\u00fchrer"], "emails": ["puehrer@informatik.uni-leipzig.de"], "sections": [{"heading": null, "text": "ar Xiv: 150 5.05 373v 1 [cs.A I] 2 0M ay2 015"}, {"heading": "1 Introduction", "text": "In fact, most of them are able to survive on their own if they do not see themselves as able to flourish."}, {"heading": "2 Simulation-Based Programming", "text": "In this section we will explain the architecture of the proposed simulation paradigm on an abstract level. < p > The SBP system deals with different worlds, each of which can be viewed as a different perspective. SBP does not predefine the meaning of these worlds, for example, the programmer can decide whether to take an objective stance and view a world as real or treat all worlds equally. Different worlds allow, for example, to model an agent's beliefs as in an agent-based approach. Other applications are hypothetical reasoning or the realization of different granularities of efficiency, e.g. parts of simulation that are currently the focus of a world that offers a more precise simulation are handled by another world that implements an approximation (see Section 3).A world contains a set of named entities that are the primary artefacts of SBP."}, {"heading": "3 Modelling AI Applications in SBP", "text": "In fact, most of us are able to move to another world where we are able to move, \"he said in an interview with The New York Times."}, {"heading": "4 Interface Considerations for Transition Descriptions", "text": "This is essentially already achieved when their semantics respect the interface of definition 2. Since different transitions communicate by reading and writing to and from the SBP configuration, their formalities do not need to be aligned in a different way. However, it is certainly necessary that they use the same format for real estate values. Examples in the previous section already show some of the features that we consider useful in a language that implements a transitional description. On the one hand, it is valuable to have generic keywords representing the name of the entity to which the transition belongs, such as myself and Myworld in the examples."}, {"heading": "5 Consistency of Data", "text": "An essential element of SBP is simultaneous programming. Thus, a natural question is how to approach problems related to simultaneous access to data and the consistency of data. Conceptually, conflicting updates that occur simultaneously do not cause a technical problem, since the update function resolves an arbitrary set of updates to a valid successor configuration of SBP. In practice, however, the functionality of this function could be implemented and conflicts (e.g. deleting and changing a property of the same name at the same time) must be addressed. Here, techniques for consolidation in databases could be useful. In addition, it may be worth giving the modeler means of resolving individual concessions through a specific language."}, {"heading": "6 Influences and Relation to Existing Approaches", "text": "This year it is so far that it will be able to erenie.nlrrsVo rf\u00fc eid eerwdnei rf\u00fc eid eerwdteeSrteeu to erenie.nlrsVo"}, {"heading": "7 Conclusion", "text": "The cornerstones of the approach are \u2022 typeless entities \u2022 different worlds for different views of reality \u2022 behavior defined by heterogeneous concurrent services \u2022 exchange of behavioral patterns and individual inheritance. The main contribution of the paper is not a ready-to-use language, but an initial idea for an architecture to combine these principles in a simulation-based programming paradigm. In the next step, we clearly want to examine many important aspects that need to be taken into account when implementing SBP in practice. Examples are the choice of data structures for entities, their interface when using different formalities in transition definitions, and the consistency of the data as described in Section 5. As a next step, we want to examine the capabilities of different formalities as a transition description language, starting with ASP, and identify different modeling patterns for important problems. An important goal is the development of a prototypical SBP running time machine that opens a wide field for further research: An important point is how multiple resources can be managed in BP or in different systems."}], "references": [{"title": "A survey of robot learning from demonstration", "author": ["Brenna Argall", "Sonia Chernova", "Manuela M. Veloso", "Brett Browning"], "venue": "Robotics and Autonomous Systems,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Artificial intelligence through simulated evolution", "author": ["L.J. Fogel", "A.J. Owens", "M.J. Walsh"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1966}, {"title": "Evolving multi-context systems", "author": ["R. Gon\u00e7alves", "M. Knorr", "J. Leite"], "venue": "in Proc. ECAI\u201914,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Genetic Programming: On the Programming of Computers by Means of Natural Selection", "author": ["John R. Koza"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1992}, {"title": "A completeness theorem in modal logic", "author": ["Saul Kripke"], "venue": "J. Symb. Log.,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1959}, {"title": "Elaboration tolerance", "author": ["John McCarthy"], "venue": "Proceedings of the 4th Symposium on Logical Formalizations of Commonsense Reasoning (Common Sense", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1998}, {"title": "The st. thomas common sense symposium: Designing architectures for human-level intelligence", "author": ["Marvin Minsky", "Push Singh", "Aaron Sloman"], "venue": "AI Magazine,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2004}, {"title": "An introduction to genetic algorithms", "author": ["Melanie Mitchell"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1998}, {"title": "Agent-based computing from multiagent systems to agent-based models: a visual survey", "author": ["Muaz Niazi", "Amir Hussain"], "venue": "Scientometrics, 89(2),", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "Logic programs with stable model semantics as a constraint programming paradigm", "author": ["Ilkka Niemel\u00e4"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1999}, {"title": "A dynamic-bayesian network framework for modeling and evaluating learning from observation", "author": ["Santiago Onta\u00f1\u00f3n", "Jos\u00e9 L. Monta\u00f1a", "Avelino J. Gonzalez"], "venue": "Expert Syst. Appl.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Artificial Intelligence - A Modern Approach (3", "author": ["Stuart J. Russell", "Peter Norvig"], "venue": "internat. ed.), Pearson Education,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "An Introduction to MultiAgent Systems (2", "author": ["Michael J. Wooldridge"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2009}, {"title": "NetP: A network API for building heterogeneous modular intelligent systems", "author": ["Kai yuh Hsiao", "Peter Gorniak", "Deb Roy"], "venue": "Proceedings of the AAAI 2005 Workshop on Modular Construction of Human-Like Intelligence,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2005}], "referenceMentions": [{"referenceID": 11, "context": "Artificial intelligence (AI) is a wide field of research in which many different outstanding techniques have been developed and refined over the last decades [15].", "startOffset": 158, "endOffset": 162}, {"referenceID": 6, "context": "Besides many approaches to couple specific individual methods, a need for a wider integration of different AI techniques has been identified in the area of artificial general intelligence [16, 10].", "startOffset": 188, "endOffset": 196}, {"referenceID": 8, "context": "Simulation has been used in different fields of AI (such as agentbased systems [12, 18] or evolutionary computation [4]) for achieving intelligent behaviour.", "startOffset": 79, "endOffset": 87}, {"referenceID": 12, "context": "Simulation has been used in different fields of AI (such as agentbased systems [12, 18] or evolutionary computation [4]) for achieving intelligent behaviour.", "startOffset": 79, "endOffset": 87}, {"referenceID": 1, "context": "Simulation has been used in different fields of AI (such as agentbased systems [12, 18] or evolutionary computation [4]) for achieving intelligent behaviour.", "startOffset": 116, "endOffset": 119}, {"referenceID": 9, "context": "For instance, a transition description implementing sorting can be realised by some efficient standard algorithm in an imperative language, while another transition description that deals with a combinatorial problem with many side constraints uses a declarative knowledge representation approach like answerset programming (ASP) [8, 13] in which the problem can be easily modelled.", "startOffset": 330, "endOffset": 337}, {"referenceID": 5, "context": "That is, because problem descriptions in these languages are typically concise and many declarative languages offer high elaboration tolerance [9], i.", "startOffset": 143, "endOffset": 146}, {"referenceID": 3, "context": "For example, by implementing mutation or crossing-over operators for decision descriptions, it is easy to realise genetic programming [6] principles in SBP.", "startOffset": 134, "endOffset": 137}, {"referenceID": 10, "context": "In an SBP framework it is easy to incorporate existing learning techniques [14, 1] by means of transition descriptions.", "startOffset": 75, "endOffset": 82}, {"referenceID": 0, "context": "In an SBP framework it is easy to incorporate existing learning techniques [14, 1] by means of transition descriptions.", "startOffset": 75, "endOffset": 82}, {"referenceID": 2, "context": "This is similar in spirit to the use of different context formalisms in recent reactive forms of heterogenous multi-context systems [3, 5].", "startOffset": 132, "endOffset": 138}, {"referenceID": 4, "context": "The idea of using multiple worlds for different points of view and modalities is loosely related to the possible world semantics of modal logics [7].", "startOffset": 145, "endOffset": 148}, {"referenceID": 7, "context": "In, genetic algorithms [11] the fitness of individuals is typically rated by a dedicated fitness function, whereas the most obvious approach in SBP is simulating natural selection by competition in the simulated environment, as discussed in the context of the chicken scenario after Example 2.", "startOffset": 23, "endOffset": 27}, {"referenceID": 3, "context": "The evolution of behaviour is related to genetic programming [6] where computer programs are shaped by evolutionary processes.", "startOffset": 61, "endOffset": 64}, {"referenceID": 8, "context": "Agent-based systems (ABS) [12, 18] share several aspects with SBP like the significance of emerging behaviour when entities are viewed as agents.", "startOffset": 26, "endOffset": 34}, {"referenceID": 12, "context": "Agent-based systems (ABS) [12, 18] share several aspects with SBP like the significance of emerging behaviour when entities are viewed as agents.", "startOffset": 26, "endOffset": 34}, {"referenceID": 13, "context": "Focuses of integration efforts in artificial general intelligence are communication APIs [19] and design methodology [17].", "startOffset": 89, "endOffset": 93}], "year": 2015, "abstractText": "We present initial ideas for a programming paradigm based on simulation that is targeted towards applications of artificial intelligence (AI). The approach aims at integrating techniques from different areas of AI and is based on the idea that simulated entities may freely exchange data and behavioural patterns. We define basic notions of a simulation-based programming paradigm and show how it can be used for implementing AI applications.", "creator": "LaTeX with hyperref package"}}}