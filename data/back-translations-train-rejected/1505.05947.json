{"id": "1505.05947", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-May-2015", "title": "A Pareto Front-Based Multiobjective Path Planning Algorithm", "abstract": "Path planning is one of the most vital elements of mobile robotics. With a priori knowledge of the environment, global path planning provides a collision-free route through the workspace. The global path plan can be calculated with a variety of informed search algorithms, most notably the A* search method, guaranteed to deliver a complete and optimal solution that minimizes the path cost. Path planning optimization typically looks to minimize the distance traversed from start to goal, yet many mobile robot applications call for additional path planning objectives, presenting a multiobjective optimization (MOO) problem. Past studies have applied genetic algorithms to MOO path planning problems, but these may have the disadvantages of computational complexity and suboptimal solutions. Alternatively, the algorithm in this paper approaches MOO path planning with the use of Pareto fronts, or finding non-dominated solutions. The algorithm presented incorporates Pareto optimality into every step of A* search, thus it is named A*-PO. Results of simulations show A*-PO outperformed several variations of the standard A* algorithm for MOO path planning. A planetary exploration rover case study was added to demonstrate the viability of A*-PO in a real-world application.", "histories": [["v1", "Fri, 22 May 2015 04:35:12 GMT  (3734kb)", "http://arxiv.org/abs/1505.05947v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.RO", "authors": ["alexander lavin"], "accepted": false, "id": "1505.05947"}, "pdf": {"name": "1505.05947.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Alexander Lavin"], "emails": ["alavin@alumni.cmu.edu)."], "sections": [{"heading": null, "text": "This year, it has reached the point where there is only one person who is able to establish himself in the region."}, {"heading": "A. Mobile Robot Path Planning", "text": "In this case, it is a matter of pure bickering, of bickering, of bickering, of bickering, of bickering, of bickering, of bickering, of bickering, of bickering, of bickering."}, {"heading": "B. Pareto Optimality", "text": "There are two general approaches to optimising multiple objectives: (i) combining the individual objectives into a composite function and (ii) defining a Pareto solution; the first option can be achieved with weighted sums or utility functions, but selecting the parameters is difficult because small glitches in the weights can lead to very different solutions; and the second option finds the Pareto solution in its entirety, which is a set of solutions that are not dominated in relation to each other; that is, switching between Pareto solutions always makes sacrifices in one goal in order to achieve a profit in another [21]. It is advantageous to include Pareto fronts in the evolutionary algorithm fitness functions in solving MOO problems."}, {"heading": "16 End For", "text": "17 Move q to the closed list 18 End WhileTo minimize the objective function, it is said that a point is a Pareto optimum point when there is no Pareto optimum point, that there is one. () \u2264 For all, there are optimization goals. () A point is not an inferior solution when there is no such solution for a district, that there is one, that there are no inferior optimization points - those on the Pareto front. () Pareto optimization is a crucial concept for finding solutions to MOO problems, because identifying a single solution that optimizes multiple goals at the same time. (It is therefore worth noting that the summary of costs goes beyond the calculation of another cell.) A crucial concept for solving MOO problems is that identifying a single solution that is optimized simultaneously across multiple goals is an impossible task."}, {"heading": "A. Costmap", "text": "To calculate the cost functions in each step, the search algorithm uses a cost map. This representation of the configuration space is based on the aforementioned allocation grid, but now each cell is assigned a cost value. Crossing a free space adds up the total cost of a cell, and the obstacles are represented by unlimited costs, so they are not transferable. If you go across a cell, you have to take into account the cost of crossing a cell in a diagonal (an angle of 45 \u00b0), but this cost map only reflects the distance of crossing a given path through the configuration space. For a MOO problem, the cost of travel must take into account the other cost criteria for which I use additional layers. Each additional cost layer adds a dimension to the Pareto space from which the Pareto front is calculated."}, {"heading": "14 End For", "text": "15 q \u00df Calculate Pareto before ScoreMatrix 16 If multiple points on Pareto normalize front 17 ScoreMatrix 18 q \u00df execute std. A * Cost function on Pareto front node 19 Press q on the closed list"}, {"heading": "20 End While", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "B. A*-PO Search Algorithm", "text": "The algorithm presented in this study, A * -PO, is essentially the standard A * search algorithm, but with a key modification: instead of calculating the cost function by adding the cost criteria, A * -PO calculates the Pareto front before the cost criteria. Lines 8-16 in the previous A * pseudo code are replaced by the pseudo code shown above. Calculation of the Pareto front before the open list sometimes results in several Pareto points. That is, q (in the pseudo code) can contain several Pareto points. In this scenario, where several nodes form the Pareto front, one of the series of Pareto points is selected via the normalized A * cost calculation. For example, let's consider a certain step of path search with an open list (i.e. priority list) consisting of 11 nodes, and perhaps three fall on the Pareto front. The algorithm will first normalize the range for each of the three costs of the respective nodes."}, {"heading": "A. Algorithm Comparison", "text": "The advantages of A * -PO are significant for the creation of concepts. I evaluate them by comparing them with A * -PO. Start and finish locations were fixed at the upper end of the scale (20,18). Surveys for the target and initial states were specified at the lower end of the scale."}, {"heading": "B. Case Study", "text": "That's why it's come to this, \"he said.\" It's not yet to the point that we'll be able to find a solution, \"he said.\" But it's still too early to find a solution, \"he said.\" It's still too early to find a solution. \"He added:\" It's still too early to find a solution. \""}, {"heading": "ACKNOWLEDGMENT", "text": "The author thanks Professors Matthew Eicholtz and David Wettergreen of Carnegie Mellon University for their continued support and support."}], "references": [{"title": "An Overview of Autonomous Mobile Robot Path Planning Algorithms", "author": ["N. Sariff", "N. Buniyamin"], "venue": "Research and Development, 2006. SCOReD 2006. 4th Student Conference on , vol., no., pp.183,188, 27- 28 June 2006", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Literature review on path planning in dynamic environment", "author": ["P.M. Bhushan Mahajan"], "venue": "International Journal of Computer Science and Network, vol. 2, no. 1, pp. 115\u2013118, 2013.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "Map-based navigation in mobile robots:: Ii. a review of map-learning and path-planning strategies", "author": ["J.-A. Meyer", "D. Filliat"], "venue": "Cognitive Systems Research, vol. 4, no. 4, pp. 283 \u2013 317, 2003", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2003}, {"title": "Optimal and efficient path planning for partiallyknown environments.", "author": ["Stentz", "Anthony"], "venue": "Robotics and Automation,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1994}, {"title": "Fast replanning for navigation in unknown terrain", "author": ["S. Koenig", "M. Likhachev"], "venue": "Robotics, IEEE Transactions on, vol. 21, no. 3, pp. 354\u2013363, 2005.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2005}, {"title": "Some guidelines for genetic algorithms with penalty  functions", "author": ["Jon T. Richardson", "Mark R. Palmer", "Gunar E. Liepins", "Mike Hilliard"], "venue": "In Proceedings of the third international conference on Genetic algorithms,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1989}, {"title": "Multi-objective Mobile Robot Path Planning Based on Improved Genetic Algorithm", "author": ["Hu Jun", "Zhu Qingbao"], "venue": "Intelligent Computation Technology and Automation (ICICTA), 2010 International Conference on , vol.2, no., pp.752,756, 11-12 May 2010", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Global Path Planning for Autonomous Mobile Robot Using Genetic Algorithm", "author": ["M. Samadi", "M.F. Othman"], "venue": "Signal-Image Technology & Internet-Based Systems (SITIS), 2013 International Conference on , vol., no., pp.726,730, 2-5 Dec. 2013", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "A fast and elitist multiobjective genetic algorithm: NSGA-II", "author": ["K. Deb", "A Pratap", "S. Agarwal", "T. Meyarivan"], "venue": "Evolutionary Computation, IEEE Transactions on , vol.6, no.2, pp.182,197, Apr 2002.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2002}, {"title": "Indicator-based selection in multiobjective search", "author": ["E. Zitzler", "S. Knzli"], "venue": "Parallel Problem Solving from Nature - PPSN VIII, ser. Lecture Notes in Computer Science, X. Yao, E. Burke, J. A. Lozano, J. Smith, J. J. Merelo-Guervs, J. A. Bullinaria, J. Rowe, P. Tino, A. Kabn, and H.-P. Schwefel, Eds. Springer Berlin / Heidelberg, 2004, vol. 3242, pp. 832\u2013842.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2004}, {"title": "Step-spreading map knowledge based multi-objective genetic algorithm for robotpath planning", "author": ["Jin Yuan", "Tao Yu", "Wang, Kesheng", "Xuemei Liu"], "venue": "Systems, Man and Cybernetics, 2007. ISIC. IEEE International Conference on , vol., no., pp.3402,3407, 7-10 Oct. 2007", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "A niched Pareto genetic algorithm for multiobjective optimization", "author": ["J. Horn", "N. Nafpliotis", "D.E. Goldberg"], "venue": "Evolutionary Computation, 1994. IEEE World Congress on Computational Intelligence., Proceedings of the First IEEE Conference on , vol., no., pp.82,87 vol.1, 27-29 Jun 1994", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1994}, {"title": "Multi-objective Optimization - Design of Control Arm Using HyperWorks - Altair HyperWorks Insider.", "author": ["Bonino", "Simone"], "venue": "Altair HyperWorks Insider. N.p.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}, {"title": "Graph-based Path Planning for Mobile Robots.\" Thesis", "author": ["Wooden", "David T"], "venue": "Georgia Institute of Technology,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2006}, {"title": "Artificial Intelligence: A Modern Approach", "author": ["Norvig", "Peter", "Stuart Russell"], "venue": "NJ: Pearson Education Limited,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "Mission-Integrated Path Planning for Planetary Rover Exploration.", "author": ["Wu", "Peng", "Hehua Ju"], "venue": "Journal of Software", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Fuzzy terrain-based path planning for planetary rovers", "author": ["A. Howard", "H. Seraji", "B. Werger"], "venue": "Proceedings of the 2002 IEEE International Conference on Fuzzy Systems, vol.1, pp.316-320, 2002.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "An Integrated Traverse Planner and Analysis Tool for Planetary Exploration.", "author": ["Johnson", "Aaron", "Jeffrey Hoffman", "Dava Newman", "Erwan Mazarico", "Maria Zuber"], "venue": "AIAA SPACE 2010 Conference & Exposition, Anaheim, California,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Solving the find-path problem in mapped environments using modified A* search algorithm", "author": ["Kuo-Chin Fan", "Po-Chang Lui"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics, vol.24, no.9, September 1994, pp 1390-1396.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1994}, {"title": "Fast path planning method using modified A* method", "author": ["Charles W. Warren"], "venue": ". IEEE International Conference on Robotics and Automation, pp 662-667.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 0}, {"title": "Calculating Complete and Exact Pareto Front for Multiobjective Optimization: A New Deterministic Approach for Discrete Problems", "author": ["Xiao-Bing Hu", "Ming Wang", "Di Paolo, E."], "venue": "Cybernetics, IEEE Transactions on , vol.43, no.3, pp.1088,1101, June 2013", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2013}, {"title": "Robotics, Vision & Control", "author": ["P.I. Corke"], "venue": "Springer 2011,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "It can be argued that path planning is one of the most important issues in the navigation process [1], and subsequently much research in field robotics is concerned with path planning [2], [3].", "startOffset": 98, "endOffset": 101}, {"referenceID": 1, "context": "It can be argued that path planning is one of the most important issues in the navigation process [1], and subsequently much research in field robotics is concerned with path planning [2], [3].", "startOffset": 184, "endOffset": 187}, {"referenceID": 2, "context": "It can be argued that path planning is one of the most important issues in the navigation process [1], and subsequently much research in field robotics is concerned with path planning [2], [3].", "startOffset": 189, "endOffset": 192}, {"referenceID": 3, "context": "Path planning methods find a path connecting the defined start and goal positions, while environmental parameters play the role as algorithm inputs, and the output is an optimized path from the start to goal [4].", "startOffset": 208, "endOffset": 211}, {"referenceID": 4, "context": "Of these criteria, time and distance are typically the most important for researchers [5], and methods typically optimize the path efficiency for only one criterion [6].", "startOffset": 86, "endOffset": 89}, {"referenceID": 5, "context": "Of these criteria, time and distance are typically the most important for researchers [5], and methods typically optimize the path efficiency for only one criterion [6].", "startOffset": 165, "endOffset": 168}, {"referenceID": 5, "context": "But these methods are problematic as the final solution is typically very sensitive to small adjustments in the penalty function coefficients and weighting factors [6].", "startOffset": 164, "endOffset": 167}, {"referenceID": 6, "context": "Evolutionary algorithms, particularly genetic algorithms, have been used widely for MOO problems, including success in path planning [7], [8].", "startOffset": 133, "endOffset": 136}, {"referenceID": 7, "context": "Evolutionary algorithms, particularly genetic algorithms, have been used widely for MOO problems, including success in path planning [7], [8].", "startOffset": 138, "endOffset": 141}, {"referenceID": 8, "context": "Some state-of-the-art algorithms for multiobjective evolutionary computation include NSGA-II and SPEA2 [9], [10].", "startOffset": 103, "endOffset": 106}, {"referenceID": 9, "context": "Some state-of-the-art algorithms for multiobjective evolutionary computation include NSGA-II and SPEA2 [9], [10].", "startOffset": 108, "endOffset": 112}, {"referenceID": 10, "context": "The non-dominated paths are favored in the population, and this increases generation over generation [11].", "startOffset": 101, "endOffset": 105}, {"referenceID": 11, "context": "The goal of a Pareto evolutionary algorithm is to find a set of solutions along the Pareto front, optimal for a combination of criteria [12].", "startOffset": 136, "endOffset": 140}, {"referenceID": 12, "context": "Two-dimensional Pareto space, where points x1 and x2 lie on the Pareto front [13].", "startOffset": 77, "endOffset": 81}, {"referenceID": 7, "context": "Other studies have applied Pareto optimality to evolutionary planning for synchronous optimization of several objectives [8], and domination metrics are used in some evolutionary algorithms for path planning, including NSGA-II and SPEA2 [11], [12].", "startOffset": 121, "endOffset": 124}, {"referenceID": 10, "context": "Other studies have applied Pareto optimality to evolutionary planning for synchronous optimization of several objectives [8], and domination metrics are used in some evolutionary algorithms for path planning, including NSGA-II and SPEA2 [11], [12].", "startOffset": 237, "endOffset": 241}, {"referenceID": 11, "context": "Other studies have applied Pareto optimality to evolutionary planning for synchronous optimization of several objectives [8], and domination metrics are used in some evolutionary algorithms for path planning, including NSGA-II and SPEA2 [11], [12].", "startOffset": 243, "endOffset": 247}, {"referenceID": 8, "context": "In order to sort a population according to the level of non-domination, each path must be compared with every other path in the population to find if it is dominated, where the computational complexity scales exponentially with the search space [9].", "startOffset": 245, "endOffset": 248}, {"referenceID": 7, "context": "Each method has its own pros and cons depending on the environment and application type [8].", "startOffset": 88, "endOffset": 91}, {"referenceID": 14, "context": "The deliberative, or global, layer considers the entire world, likely requiring computation time proportional to the problem size [15].", "startOffset": 130, "endOffset": 134}, {"referenceID": 13, "context": "High-level block diagram of the standard hybrid control system architecture for mobile robots [14].", "startOffset": 94, "endOffset": 98}, {"referenceID": 0, "context": "The configuration spaces of path planning algorithms are usually represented by an occupancy grid, a vertex graph, a Voronoi diagram, generalized cones, or a quad-tree [1].", "startOffset": 168, "endOffset": 171}, {"referenceID": 8, "context": "The set of feasible successor cells is narrowed because of the three occupied cells (gray) [9].", "startOffset": 91, "endOffset": 94}, {"referenceID": 0, "context": "The algorithm employed for the problem must coordinate with the configuration space representation [1].", "startOffset": 99, "endOffset": 102}, {"referenceID": 13, "context": "Uninformed search methods are used when no information about the states are known beyond the problem definition [14].", "startOffset": 112, "endOffset": 116}, {"referenceID": 3, "context": "The general approach of these methods is best-first, which traverses a graph or grid using a priority queue to find the shortest, collision-free path [4].", "startOffset": 150, "endOffset": 153}, {"referenceID": 14, "context": "The search algorithm, looking for the cheapest path, tries (expands) the node with the lowest f n [15], [16].", "startOffset": 98, "endOffset": 102}, {"referenceID": 15, "context": "The search algorithm, looking for the cheapest path, tries (expands) the node with the lowest f n [15], [16].", "startOffset": 104, "endOffset": 108}, {"referenceID": 16, "context": "path), the A* algorithm is a favorite for route search problems [17], [18].", "startOffset": 64, "endOffset": 68}, {"referenceID": 17, "context": "path), the A* algorithm is a favorite for route search problems [17], [18].", "startOffset": 70, "endOffset": 74}, {"referenceID": 14, "context": "Norvig and Russel [15] explain how the A* heuristic satisfies the consistency condition, and also that A* is optimally efficient: no other optimal algorithm is guaranteed to expand fewer nodes than A*.", "startOffset": 18, "endOffset": 22}, {"referenceID": 18, "context": "For real-time planning, where computational speed is a priority, previous studies [19], [20] have modified A* for fast planning.", "startOffset": 82, "endOffset": 86}, {"referenceID": 19, "context": "For real-time planning, where computational speed is a priority, previous studies [19], [20] have modified A* for fast planning.", "startOffset": 88, "endOffset": 92}, {"referenceID": 3, "context": "The D* algorithm is a dynamic version of A*, built to be capable of fast rerouting when the robot encounters new obstacles in the environment [4].", "startOffset": 142, "endOffset": 145}, {"referenceID": 13, "context": "The speed of these searching algorithms is increased dramatically, but at the cost of sub-optimal solution paths [14].", "startOffset": 113, "endOffset": 117}, {"referenceID": 20, "context": "Pareto optimality is a crucial concept for finding solutions to MOO problems because identifying a single solution that simultaneously optimizes across several objectives is often an impossible task [22].", "startOffset": 199, "endOffset": 203}, {"referenceID": 21, "context": "The code is written in MATLAB R2013a, and will be published in a future release of Corke\u2019s \u201cRobotics, Vision, Control\u201d [23].", "startOffset": 119, "endOffset": 123}, {"referenceID": 13, "context": "The mobile robot community has put an increased emphasis on suboptimal path planning methods which meet the time-critical constraints over slow, optimal algorithms [14].", "startOffset": 164, "endOffset": 168}], "year": 2015, "abstractText": "Path planning is one of the most vital elements of mobile robotics. With a priori knowledge of the environment, global path planning provides a collision-free route through the workspace. The global path plan can be calculated with a variety of informed search algorithms, most notably the A* search method, guaranteed to deliver a complete and optimal solution that minimizes the path cost. Path planning optimization typically looks to minimize the distance traversed from start to goal, yet many mobile robot applications call for additional path planning objectives, presenting a multiobjective optimization (MOO) problem. Past studies have applied genetic algorithms to MOO path planning problems, but these may have the disadvantages of computational complexity and suboptimal solutions. Alternatively, the algorithm in this paper approaches MOO path planning with the use of Pareto fronts, or finding non-dominated solutions. The algorithm presented incorporates Pareto optimality into every step of A* search, thus it is named A*-PO. Results of simulations show A*-PO outperformed several variations of the standard A* algorithm for MOO path planning. A planetary exploration rover case study was added to demonstrate the viability of A*-PO in a real-world application. Keywords\u2014multiobjective optimization; path planning; search algorithm; A*; Pareto; mobile robot; Mars rover", "creator": "Word"}}}