{"id": "1506.00482", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Jun-2015", "title": "Learning Regular Languages over Large Ordered Alphabets", "abstract": "This work is concerned with regular languages defined over large alphabets, either infinite or just too large to be expressed enumeratively. We define a generic model where transitions are labeled by elements of a finite partition of the alphabet. We then extend Angluin's L* algorithm for learning regular languages from examples for such automata. We have implemented this algorithm and we demonstrate its behavior where the alphabet is a subset of the natural or real numbers. We sketch the extension of the algorithm to a class of languages over partially ordered alphabets.", "histories": [["v1", "Mon, 1 Jun 2015 13:12:54 GMT  (32kb)", "https://arxiv.org/abs/1506.00482v1", null], ["v2", "Wed, 16 Sep 2015 19:04:30 GMT  (44kb)", "http://arxiv.org/abs/1506.00482v2", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.FL", "authors": ["irini-eleftheria mens", "oded maler"], "accepted": false, "id": "1506.00482"}, "pdf": {"name": "1506.00482.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["O. MALER"], "emails": ["irini-eleftheria.mens@imag.fr", "oded.maler@imag.fr"], "sections": [{"heading": null, "text": "In fact, most people who have campaigned for equality between women and men in the United States and other countries of the world over the last ten years are generally unable to decide whether they will be able to get involved, or whether they will be able to survive themselves, and that they will be able to survive themselves, \"he told the German Press Agency in an interview with\" Welt. \""}, {"heading": "1. Learning Regular Sets", "text": "The question is whether the initial word relationship < beyond that, of course, a lexicographic order can be raised using the lexicographic order. Deterministic, finite automation via a tuple is a characteristic function f: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p: p:"}, {"heading": "2. Symbolic Automata", "text": "In this section we will introduce the variant of symbolic automata that we use. Symbolic automata [HV11, VB12] provide a more concise representation for languages using large finite alphabets and can also represent languages using infinite alphabets such as N, R or Rn. The size of a standard automaton for a language grows linearly with the size of the alphabet and thus the complexity of the learning algorithm such as L *. As we will see, symbolic automata allow a variant of the L * algorithm, whose complexity is independent of the size of the alphabet."}, {"heading": "A = (\u03a3,\u03a3, \u03c8,Q, \u03b4, \u03b4, q0 , F ), where", "text": "It is the input alphabet that leads from q0 to a state in F. A bet on alphabetization is symbolically applicable if it is symbolic. (It is the input alphabet that leads from q0 to a state.) It is a finite alphabet, decomposed in \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" = symbolic \"Q\" and \"Q\" are the concrete and symbolic transition functions \"Q,\" each of which can be regarded as the acceptor of a concrete language. If we read a concrete letter, the transition to the alphabet will take place (q, a), where there is a unique element of the satisfaction of a language. Hence L (A) consists of all concrete words whose course from q0 leads to a state in F. A bet on alphabetization is symbolically recognizable."}, {"heading": "3. Symbolic Observation Tables", "text": "In this section, we adapt observation tables to the symbolic setting. They are similar to the specific case with the additional terms of evidence and evidence of compatibility.Definition 3.1 (Balanced Symbol Tree) A balanced symbolic arrow tree is a tuple (A, S, R, E), where \u2022 S'R is a given subset of Ps. \u2022 N = S-S is a symbolic alphabet. \u2022 N = S-S is a family of total surjective functions of the form Ps: Ps. It is required that for each s, S and each s, s, S-R and for each r-R and each b-S-R, R-R. Elements of R are referred to as boundary elements of the contract. We will use observation tables whose rows are symbolic words and thus form an entry in the table that represents a statement about the inclusion or exclusion of a large set of concrete words in the language."}, {"heading": "T = (\u03a3,\u03a3,S,R, \u03c8,E,f , \u00b5) such that", "text": "\u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7"}, {"heading": "4. Learning Languages over Ordered Alphabets", "text": "In this section, we present a symbolic learning algorithm that begins with an intuitive verbal description. The algorithmic schema is similar to the specific L algorithm, but differs in the treatment of counter-examples and the new concept of compatibility. If the table is not closed, S-R is extended to closing. If such an extension occurs, additional queries are made to fill the table. It is always compatible and reduces during the processing of counter-examples. From now on, we assume that a completely ordered alphabet with a minimal element will be a0 and limit ourselves to symbolic automata in which the concrete semantic letters are an interval."}, {"heading": "5. Learning Languages over Partially-ordered Alphabets", "text": "In this section, we outline extending the results of this paper to partially ordered letters. < < <"}, {"heading": "6. On Complexity", "text": "The complexity of the symbolic algorithm is not influenced by the size of the alphabet, but by the resolution (partition size) with which we observe it. Let L-V-V be the target language and let A be the minimum symbolic automaton that recognizes this language, with the state set Q of size n and a symbolic alphabet. Therefore, at most n \u2212 1 equivalence queries of the first type can be made and n (m \u2212 1) of the second, which leads to O (mn) equivalence queries. In terms of the size of the table, the set of prefixes S is monotonically increased and reaches the size of the exact n elements. Since the table is always reduced by construction, the elements in S \u2212 n represent exactly the states of the automaton. The size of the boundary of the letters S is always smaller than the total number of the 2 elements."}, {"heading": "7. Conclusion", "text": "We have defined a generic algorithmic scheme for automatic learning that addresses languages via large alphabets that can be recognized by finite symbolic automata with a modest number of states and transitions. Some ideas similar to ours have been proposed for the specific case of parametric languages [BJR06] and more recently in a more general framework [HSM11, IHS13, BB13], including partial evidence support and alphabet refinement during the learning process. The universality of our algorithm is due to a semantic approach (alphabet partitions), but of course each domain will have its own semantic and syntactic specialization in terms of the size and shape of the alphabet partitions."}, {"heading": "Acknowledgement", "text": "This work was supported by the French project EQINOCS (ANR-11-BS02-004) and we thank Peter Habermehl, Eugene Asarin and anonymous arbitrators for useful comments and references to the literature."}], "references": [{"title": "Learning regular sets from queries and counterexamples", "author": ["Dana Angluin"], "venue": "Information and Computation,", "citeRegEx": "Angluin.,? \\Q1987\\E", "shortCiteRegEx": "Angluin.", "year": 1987}, {"title": "Sigma*: Symbolic learning of Input-Output specifications", "author": ["Matko Botin\u010dan", "Domagoj Babi\u0107"], "venue": "In POPL,", "citeRegEx": "Botin\u010dan and Babi\u0107.,? \\Q2013\\E", "shortCiteRegEx": "Botin\u010dan and Babi\u0107.", "year": 2013}, {"title": "Regular inference for state machines with parameters", "author": ["Therese Berg", "Bengt Jonsson", "Harald Raffelt"], "venue": "In FASE,", "citeRegEx": "Berg et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Berg et al\\.", "year": 2006}, {"title": "What you must remember when processing data words", "author": ["Michael Benedikt", "Clemens Ley", "Gabriele Puppis"], "venue": "In AMW,", "citeRegEx": "Benedikt et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Benedikt et al\\.", "year": 2010}, {"title": "Model checking. In Model-Based Testing of Reactive Systems, volume 3472 of LNCS, pages 557\u2013603", "author": ["Therese Berg", "Harald Raffelt"], "venue": null, "citeRegEx": "Berg and Raffelt.,? \\Q2004\\E", "shortCiteRegEx": "Berg and Raffelt.", "year": 2004}, {"title": "Grammatical inference: learning automata and grammars", "author": ["Colin De la Higuera"], "venue": null, "citeRegEx": "Higuera.,? \\Q2010\\E", "shortCiteRegEx": "Higuera.", "year": 2010}, {"title": "The Book of Traces", "author": ["Volker Diekert", "Grzegorz Rozenberg"], "venue": "World Scientific,", "citeRegEx": "Diekert and Rozenberg.,? \\Q1995\\E", "shortCiteRegEx": "Diekert and Rozenberg.", "year": 1995}, {"title": "Minimization of symbolic automata", "author": ["Loris D\u2019Antoni", "Margus Veanes"], "venue": "In POPL,", "citeRegEx": "D.Antoni and Veanes.,? \\Q2014\\E", "shortCiteRegEx": "D.Antoni and Veanes.", "year": 2014}, {"title": "System identification via state characterization", "author": ["E. Mark Gold"], "venue": null, "citeRegEx": "Gold.,? \\Q1972\\E", "shortCiteRegEx": "Gold.", "year": 1972}, {"title": "Mona: Monadic second-order logic in practice", "author": ["Jesper G. Henriksen", "Ole J.L. Jensen", "Michael E. Jrgensen", "Nils Klarlund", "Robert Paige", "Theis Rauhe", "Anders B. Sandholm"], "venue": "In TACAS,", "citeRegEx": "Henriksen et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Henriksen et al\\.", "year": 1995}, {"title": "Inferring canonical register automata", "author": ["Falk Howar", "Bernhard Steffen", "Bengt Jonsson", "Sofia Cassel"], "venue": "In VMCAI,", "citeRegEx": "Howar et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Howar et al\\.", "year": 2012}, {"title": "Automata learning with automated alphabet abstraction refinement", "author": ["Falk Howar", "Bernhard Steffen", "Maik Merten"], "venue": "In VMCAI,", "citeRegEx": "Howar et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Howar et al\\.", "year": 2011}, {"title": "An evaluation of automata algorithms for string analysis", "author": ["Pieter Hooimeijer", "Margus Veanes"], "venue": "In VMCAI,", "citeRegEx": "Hooimeijer and Veanes.,? \\Q2011\\E", "shortCiteRegEx": "Hooimeijer and Veanes.", "year": 2011}, {"title": "Inferring automata with state-local alphabet abstractions", "author": ["Malte Isberner", "Falk Howar", "Bernhard Steffen"], "venue": "In NASA Formal Methods,", "citeRegEx": "Isberner et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Isberner et al\\.", "year": 2013}], "referenceMentions": [], "year": 2015, "abstractText": "This work is concerned with regular languages defined over large alphabets, either infinite or just too large to be expressed enumeratively. We define a generic model where transitions are labeled by elements of a finite partition of the alphabet. We then extend Angluin\u2019s L algorithm for learning regular languages from examples for such automata. We have implemented this algorithm and we demonstrate its behavior where the alphabet is a subset of the natural or real numbers. We sketch the extension of the algorithm to a class of languages over partially ordered alphabets.", "creator": "LaTeX with hyperref package"}}}