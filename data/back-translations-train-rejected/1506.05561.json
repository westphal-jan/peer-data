{"id": "1506.05561", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2015", "title": "Comparing and evaluating extended Lambek calculi", "abstract": "Lambeks Syntactic Calculus, commonly referred to as the Lambek calculus, was innovative in many ways, notably as a precursor of linear logic. But it also showed that we could treat our grammatical framework as a logic (as opposed to a logical theory). However, though it was successful in giving at least a basic treatment of many linguistic phenomena, it was also clear that a slightly more expressive logical calculus was needed for many other cases. Therefore, many extensions and variants of the Lambek calculus have been proposed, since the eighties and up until the present day. As a result, there is now a large class of calculi, each with its own empirical successes and theoretical results, but also each with its own logical primitives. This raises the question: how do we compare and evaluate these different logical formalisms? To answer this question, I present two unifying frameworks for these extended Lambek calculi. Both are proof net calculi with graph contraction criteria. The first calculus is a very general system: you specify the structure of your sequents and it gives you the connectives and contractions which correspond to it. The calculus can be extended with structural rules, which translate directly into graph rewrite rules. The second calculus is first-order (multiplicative intuitionistic) linear logic, which turns out to have several other, independently proposed extensions of the Lambek calculus as fragments. I will illustrate the use of each calculus in building bridges between analyses proposed in different frameworks, in highlighting differences and in helping to identify problems.", "histories": [["v1", "Thu, 18 Jun 2015 07:10:26 GMT  (142kb,D)", "http://arxiv.org/abs/1506.05561v1", "Empirical advances in categorial grammars, Aug 2015, Barcelona, Spain. 2015"]], "COMMENTS": "Empirical advances in categorial grammars, Aug 2015, Barcelona, Spain. 2015", "reviews": [], "SUBJECTS": "cs.CL cs.LO", "authors": ["richard moot"], "accepted": false, "id": "1506.05561"}, "pdf": {"name": "1506.05561.pdf", "metadata": {"source": "CRF", "title": "Comparing and evaluating extended Lambek calculi", "authors": ["Richard Moot"], "emails": [], "sections": [{"heading": null, "text": "To answer this question, I present two unifying frameworks for these extended Lambek calculations, both of which are proof-net calculations with graph-contraction criteries.The first is a very general system: you determine the structure of your sequences and it gives you the connections and contractions that correspond to it.The calculation can be augmented by structural rules that translate directly into graph-rewrite rules; the second is a first-order linear (multiplicatively intuitive) logic that turns out to be several other independently proposed extensions of the Lambek calculations as fragments. I will illustrate the use of each calculation to build bridges between the analyses proposed in different frameworks, highlight differences and identify problems.Keywords: typlogic grammar; Lambek calculation; evidence networks; linear logic."}, {"heading": "1 Introduction", "text": "In fact, it is as if most people are able to survive themselves by blaming themselves and others. (...) In fact, it is as if most people are able to survive themselves. (...) It is not as if they are able to survive themselves. (...) It is as if they are able to survive themselves. (...) It is not as if they are able to survive themselves. \"(...) It is as if they are able to survive themselves.\" (...) It is as if they are able to survive themselves. \"(...) It is as if they are able to survive themselves.\" (...) It is as if they are able to survive themselves. \"(...) It is as if they are able to survive themselves.\" (...) It is as if they are able to survive themselves. (...) It is as if they are able to survive themselves."}, {"heading": "2 Multiplicative intuitionistic linear logic and the syntax-", "text": "As Moortgat (1997, Section 3) notes, there is a common choice between the various typological grammars discussed in this paper: the syntax-semantics interface takes the form of a homomorphism, from proofs in the given source logic to proofs in the multiplicative intuitionist linear logic (also called Lambek van Benthem calculation in the categorical grammar literature).In the following, we will refer to multiplicative intuitionist linear logic as proof of the deep structure of a sentence and proof in the source logic as surface structure.From the deep structure, we obtain the meaning of a sentence by replacing the semantic terms from the lexicon and normalizing the result. Seen from this perspective, various typlogical grammars generally agree on the deep structure of an analysis, but come to this deep structure through different surface structures. As Moortgat (1997, Section 3) notes, the tension between the P has a more restricted structure."}, {"heading": "3 A catalogue of problem cases", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "4 Graph rewriting", "text": "This year, the time has come for an agreement to be reached, and it will only take a few days."}, {"heading": "4.1 Lambek-Grishin and Galois connections", "text": "First, we can see that the non-associative Lambek-Connective (NL) extended with Galois-Connectives has the Lambek-Grishin-Calculation as a special case. As Figure 3 shows, LG NL expands with upward-facing symmetrical connectors, while the Galois-Connectives represent a negation-like polarity-change operation. In particular, as shown in the middle of Figure 3, this allows us to simulate the Grishin-Connectives: a combination of an NL-Constructor with a Galois-Connective, as shown in the figure, forms a subgraph that outwardly \"looks alike,\" up to the cyclic order of external connections, as the Grishin-Connective-Connective-Connective-Connective (there is an alternative solution that is left-right symmetrical to the shown Galois-Connective-Connective).This assignment goes only in one direction, but the translation back to LG is partial: Although the images of the original connective-Connective-Connective-Connective are aptive-Connective, we are aptive-Connective-Connective-h, the h is an aptive-only."}, {"heading": "4.2 Multimodal versions of q", "text": "Since a second illustration, Moortgat (1996b) and Barker and Shan (2014) have a system between two branches, both offer an implementation of the in situ binder q (A, B, C) shown in Figure 4 and Figure 5 on the right and middle and left and middle sides respectively (both have an additional \"start\" rule, shown in Figure 6, which is discussed below), because the rules of Figures 4 and 5 of the two substructures shown in grey give us an illustration of one system to another, highlighting both similarities and differences between the two approaches: the Barker and Shan implementations, which they call NLCL, function unchanged when several in situ binders \"overlaps\" arise, as they are used in their analysis of the semantics of the \"same,\" while Moortgat's approach works correctly even in the presence of associativeness. Both properties are a consequence of the unary branches and their position in moortat associations, but the rules of the unassociated branches are circumvented by the rules of the branch association."}, {"heading": "4.3 Graph rewriting, graph grammars and modal logic", "text": "Since most typological grammars have models in modal logic, can we use some of the rich tools of modal logic to discover relationships between different formalisms? For example, by using bisimulations between the model-theoretical interpretations of two calculations (Rodgers et al., 2001), which would be a model-theoretical counterpart to the proof-theoretical approach of the current work. Since the modern view of modal logic regards modal logic as (decideable) fragments of first-order logic, this nicely ties in with the first-order perspective of the next paragraph. A second point is that graph rewriting has been extensively studied in computer science. However, as these tend to be nicer than the classes of graphs presented here. Is there a connection between some context-free grammars (Engelfriet, 1997) and some of the networks or preliminary investigations examined here?"}, {"heading": "5 First-order linear logic", "text": "The second meta-logic is first-order linear logic (multiplicative, intuitionist). Although the idea of adding first-order quantifiers to typlogical grammars is very old (Morrill, 1994, Section 6.2), the important shift in Moot and Piazza (2001) was that first-order quantifiers could also be used for word order. Instead of adding first-order quantifiers to one of the other variants of typical grammar, we can add first-order quantifiers to multiplicative linear logic and embed the Lambek calculus."}, {"heading": "5.1 Proof search in first-order linear logic", "text": "In fact, most of them will be able to move to another world in which they are able, in which they are able to move, and in which they are able to move."}, {"heading": "5.2 First-order linear logic as a grammar formalism", "text": "In fact, it is the case that most of us are able to abide by the rules that we have given ourselves in order to put them into practice. (...) In fact, it is the case that we are able to understand the rules that we have given ourselves. (...) In fact, it is the case that we are able to break the rules. \"(...) In fact, it is the case that we are able to change the rules.\" (...) In fact, it is the case that we are able to break the rules. \"(...)"}, {"heading": "5.3 Relative pronouns", "text": "(1, x0) (n, x2) (x2) (x2) (x2) (x2) (x2) (2) (x2) (2) (x2) (2) (2) (x2) (2) (2) (2) (x2) (2) (2) (x2) (2) (2) (x2) (2) (1) (x1) (x1) (x1) (x1) (x1) (x1) (x1) (x2) (x2) (x1) (x2) (x2) (x2) (x2) (x2) (x2) (x2) (x2) (x2) (x2) (x1) (x1) (x1) (x1) (x1) (x1) (x1) (x1) (x2) (x2) (x2) (x2) (x2) (x2) (2) (x2) (2) (2) (2) (2) (2) (2) (2) (1) (x1) (x1) (x1) (x1) (x2) (x1) (x2) (1) (x2) (x2) (1) (x2) (1) (x2) (1) (x2) (1) (x2) (1) (1) (x1) (1) (1) (x1) (1) (x1) (1) (x1) (x1) (1) (1) (x1) (1) (1) (x1) (1) (x2 (1) (x2) (1) (1) (1) (x2) (1) (1) (1) (1) (1) (1) (x1) (1) (1) (1) (1) (x2) (1) (1 (1) (1 (1) (1) (1) (1 (1) (1 (1) (1) (x1) (1) (1) (1) (x1) (1) (1) (1) ("}, {"heading": "5.4 Adverbs, higher-order formulas and lambda grammars", "text": "It is only a matter of time before we will be able to grasp and compare all possible lexical entities that have their translation into the linear logic of the first order (np / s) into the second order (np / s) into the first order (np / s) into the second order (np / s) into the second order (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s) and compare their translation into the linear logic of the first order (np / s) into the second order (np / s) into the first order (np / s) into the first order (np / s) into the first order (np / s) into the third level (np / s) into the third level (np / s) into the third level (np / s)."}, {"heading": "5.5 Reflexives in D and in first-order linear logic", "text": "There is a slight difference between the displacement calculation and its translation into first-order linear logic. Morrill et al. (2011). (vp \u2191 > np) \u2191 < np) \u2193 < (vp \u2191 > np) is translated as follows if it occurs at string positions 3-4 (the vp subformulas were not translated). (x0, x1, x2, x5 [np (3, 4) (np (x1, x2) (vp, x5) (np, x2) (vp, x2) (vp, x0, x2)) The first-order linear logic formula more or less states that it transforms a ditransitive verb (with one of its objects occurring at positions 3-4) into a transitive verb. (However, the original D formula specifies something more, namely that the other np reasoning, nurs, wurs, xp, xnp, xnp, etc."}, {"heading": "5.6 Open questions", "text": "An important question has to be answered here: can we give (partial) translations from the displacement calculation into Hybrid Type-Logical Grammars or vice versa? We can, of course, translate first-order linear logic into first-order proofs and see if we can translate them back into the other system (Moot, 2015, uses such a strategy, but to translate first-order linear logical proofs back into the \"source language\"). However, such a strategy depends on the exact formula obtained, for example, formulas 2 and 3 on page 16 are equivalent, and therefore this elementary case would already require an additional mechanism to deal with equivalence. A direct translation could circumvent this problem and help to crystallize the differences between the systems even more clearly. There is another open question that has already been briefly alluded to when we discuss such a property. The variables and quantifiers of the formulas we are interested follow certain patterns."}, {"heading": "6 Towards convergence", "text": "Figure 6 provides a slightly simplified picture of the most important logical calculations and their relationships. The two metalogies are not mutually exclusive: The displacement calculation can be embedded both in a graph paraphrase (as of (Valent \u0301 \u0131n, 2014)) and in a first-order linear logic (Moot, 2014a). Similarly, NL\u03bb appears to have a representation in both systems (Barker and Shan, 2014; Moot, 2014a, b), although the full formal details of this possibility have yet to be worked out. However, it remains an open question whether there is a natural way to guarantee the convergence of the two logics: What limitation of graph paraphrase for Proof networks would ensure that the meta logic discussed in this paper converged? There remains an open question whether there is a natural way to guarantee the convergence of the two logics: What limitation of graph paraphrasing for Proof networks would ensure that the first order of grid calinization can be likened with the first order of calinization?"}, {"heading": "7 Conclusions", "text": "In this paper, I have presented two tools that I hope will build bridges between the many formalities in the family of typlogic grammars, which are not only theoretical tools, but also the basis of two implementations (Moot et al., 2015; Moot, 2015), a theorem proof based on (for the time being only the intuitionist part) of graph transcription, and a first-order linear logic theory proof that can provide evidence of displacement calculation and hybrid typlogic grammars through translation. I believe that an open discussion of the advantages and disadvantages of one system over another, as well as an increasing number of linguistic data that can find satisfactory representation in typical grammars, will be an important factor in ensuring that our community remains alive and healthy."}, {"heading": "Acknowledgements", "text": "I would like to thank Chris Barker, Philippe de Groote, Yusuke Kubota, Robert Levine and Michael Moortgat for their discussion of the topics that led to the publication of this paper. I would also like to invite the speakers of the workshop Empirical Advances in Categorial Grammar (2015) for the comments and comments on the submitted abstract."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "Lambeks Syntactic Calculus, commonly referred to as the Lambek calculus, was innovative in many ways, notably as a precursor of linear logic. But it also showed that we could treat our grammatical framework as a logic (as opposed to a logical theory). However, though it was successful in giving at least a basic treatment of many linguistic phenomena, it was also clear that a slightly more expressive logical calculus was needed for many other cases. Therefore, many extensions and variants of the Lambek calculus have been proposed, since the eighties and up until the present day. As a result, there is now a large class of calculi, each with its own empirical successes and theoretical results, but also each with its own logical primitives. This raises the question: how do we compare and evaluate these different logical formalisms? To answer this question, I present two unifying frameworks for these extended Lambek calculi. Both are proof net calculi with graph contraction criteria. The first calculus is a very general system: you specify the structure of your sequents and it gives you the connectives and contractions which correspond to it. The calculus can be extended with structural rules, which translate directly into graph rewrite rules. The second calculus is first-order (multiplicative intuitionistic) linear logic, which turns out to have several other, independently proposed extensions of the Lambek calculus as fragments. I will illustrate the use of each calculus in building bridges between analyses proposed in different frameworks, in highlighting differences and in helping to identify problems.", "creator": "LaTeX with hyperref package"}}}