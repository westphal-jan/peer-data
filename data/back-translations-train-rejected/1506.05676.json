{"id": "1506.05676", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Jun-2015", "title": "Pragmatic Side Effects", "abstract": "In the quest to give a formal compositional semantics to natural languages, semanticists have started turning their attention to phenomena that have been also considered as parts of pragmatics (e.g., discourse anaphora and presupposition projection). To account for these phenomena, the very kinds of meanings assigned to words and phrases are often revisited. To be more specific, in the prevalent paradigm of modeling natural language denotations using the simply-typed lambda calculus (higher-order logic) this means revisiting the types of denotations assigned to individual parts of speech. However, the lambda calculus also serves as a fundamental theory of computation, and in the study of computation, similar type shifts have been employed to give a meaning to side effects. Side effects in programming languages correspond to actions that go beyond the lexical scope of an expression (a thrown exception might propagate throughout a program, a variable modified at one point might later be read at an another) or even beyond the scope of the program itself (a program might interact with the outside world by e.g., printing documents, making sounds, operating robotic limbs...).", "histories": [["v1", "Wed, 17 Jun 2015 19:55:13 GMT  (3kb)", "http://arxiv.org/abs/1506.05676v1", "Redrawing Pragmasemantic Borders, Mar 2015, Groningen, Netherlands.this https URL"]], "COMMENTS": "Redrawing Pragmasemantic Borders, Mar 2015, Groningen, Netherlands.this https URL", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["jiri marsik", "maxime amblard"], "accepted": false, "id": "1506.05676"}, "pdf": {"name": "1506.05676.pdf", "metadata": {"source": "CRF", "title": "Pragmatic Side Effects workshop redrawing pragmasemantics borders", "authors": ["Jirka Mar\u0161\u0301\u0131k", "Maxime Amblard"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 150 6.05 676v 1 [cs.C L] 17 Jun 2015Pragmatic side effects workshop on redrawing the boundaries of pragmatism Jirka Mars: Maxime Amblard"}, {"heading": "1 Introduction", "text": "In an effort to give natural languages formal compositional semantics, semantics have begun to turn their attention to phenomena that have also been considered part of pragmatics (e.g., discourse aphoras and premises projection). To take these phenomena into account, precisely the types of meanings assigned to words and phrases are often reconsidered. More specifically, in the prevailing paradigm of modelling natural language names using the single-typed lambda calculation (higher-order logic), this means checking the types of denotations assigned to individual parts of the language. However, the lambda calculation also serves as a basic theory of compilation, and in studying the compilation, similar type shifts were applied to give meaning to side effects. Side effects in programming languages correspond to actions that go beyond the lexical scope of an expression (a discarded exception might be read by a program modified at a point, for example, at a point outside the program)."}, {"heading": "2 Side Effects and Pragmatics", "text": "We are now examining some parallels between the side effects of programming languages and the pragmatic phenomena of linguistics."}, {"heading": "2.1 Parallel Functions", "text": "We note that the pragmatics of the semantics of natural language seem to do a similar service to the study of side effects of the semantics of programming language. Discourse anaphora is an example of an action whose effect goes beyond the lexical scope of the expressions involved (speaker and reference expression), much as a variable memory bridges the gap between a variable writing and reading instruction. Assumptions triggered by defined descriptions can be seen as spreading through the structure of the discourse until they are either validated by established or hypothetical knowledge or placed at the right level, much as an exception spreads throughout the program until it is captured by some."}, {"heading": "2.2 Parallel Theories", "text": "When semantics turn their attention to phenomena whose effects go beyond the framework of their syntactic domains, they are often forced to generalize the types of denotations assigned by their theory in order to maintain a compositional treatment. In dynamic semantics, the type of a sentence turns into a function of discourse contexts and actualized discourse contexts that allow us to abstract from effects and compose them with relative ease (monads and monad morphisms [3], algebraic effects and actualized states of memory to deal with variable variables). Computer scientists have developed general notions of a side effect that allows us to abstract from effects and compose them with relative ease."}], "references": [{"title": "Towards a montagovian account of dynamics", "author": ["Philippe de Groote"], "venue": "In Proceedings of SALT,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Expression de la dynamique du discours \u00e0 l\u2019aide de continuations", "author": ["Ekaterina Lebedeva"], "venue": "PhD thesis, Universite\u0301 de Lorraine,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "An abstract view of programming languages. University of Edinburgh, Department of Computer Science, Laboratory for Foundations of Computer Science, 1990. By presuppositions, we mean the kind of conditions that must be true in order for an utterance to be judgeable as either true or false (e.g., the presupposition of France having a king in the phrase the king of France is bald)", "author": ["Eugenio Moggi"], "venue": "We haven\u2019t covered implicatures in our prototype", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1990}, {"title": "Handling algebraic effects", "author": ["Gordon D Plotkin", "Matija Pretnar"], "venue": "arXiv preprint arXiv:1312.1399,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Pragmatic presuppositions", "author": ["Robert Stalnaker"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1974}], "referenceMentions": [{"referenceID": 2, "context": "Computer scientists have developed general notions of a side effect that allow us to abstract over effects and compose them with relative ease (monads and monad morphisms [3], algebraic effects and handlers [4]).", "startOffset": 171, "endOffset": 174}, {"referenceID": 3, "context": "Computer scientists have developed general notions of a side effect that allow us to abstract over effects and compose them with relative ease (monads and monad morphisms [3], algebraic effects and handlers [4]).", "startOffset": 207, "endOffset": 210}, {"referenceID": 0, "context": "So far, we have a prototype dealing with dynamics (based on typetheoretic dynamic logic [1]), presuppositions (based on presuppositions as exceptions [2]) and some of their interactions (the presupposition binding problem).", "startOffset": 88, "endOffset": 91}, {"referenceID": 1, "context": "So far, we have a prototype dealing with dynamics (based on typetheoretic dynamic logic [1]), presuppositions (based on presuppositions as exceptions [2]) and some of their interactions (the presupposition binding problem).", "startOffset": 150, "endOffset": 153}, {"referenceID": 4, "context": "This distinction could thus be seen as a formal incarnation of Stalnaker\u2019s distinction between content and context [5].", "startOffset": 115, "endOffset": 118}], "year": 2015, "abstractText": "In the quest to give a formal compositional semantics to natural languages, semanticists have started turning their attention to phenomena that have been also considered as parts of pragmatics (e.g., discourse anaphora and presupposition projection). To account for these phenomena, the very kinds of meanings assigned to words and phrases are often revisited. To be more specific, in the prevalent paradigm of modeling natural language denotations using the simply-typed lambda calculus (higher-order logic) this means revisiting the types of denotations assigned to individual parts of speech. However, the lambda calculus also serves as a fundamental theory of computation, and in the study of computation, similar type shifts have been employed to give a meaning to side effects. Side effects in programming languages correspond to actions that go beyond the lexical scope of an expression (a thrown exception might propagate throughout a program, a variable modified at one point might later be read at an another) or even beyond the scope of the program itself (a program might interact with the outside world by e.g., printing documents, making sounds, operating robotic limbs. . . ).", "creator": "LaTeX with hyperref package"}}}