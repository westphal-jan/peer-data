{"id": "1506.08454", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Jun-2015", "title": "WYSIWYE: An Algebra for Expressing Spatial and Textual Rules for Visual Information Extraction", "abstract": "The visual layout of a webpage can provide valuable clues for certain types of Information Extraction (IE) tasks. In traditional rule based IE frameworks, these layout cues are mapped to rules that operate on the HTML source of the webpages. In contrast, we have developed a framework in which the rules can be specified directly at the layout level. This has many advantages, since the higher level of abstraction leads to simpler extraction rules that are largely independent of the source code of the page, and, therefore, more robust. It can also enable specification of new types of rules that are not otherwise possible. To the best of our knowledge, there is no general framework that allows declarative specification of information extraction rules based on spatial layout. Our framework is complementary to traditional text based rules framework and allows a seamless combination of spatial layout based rules with traditional text based rules. We describe the algebra that enables such a system and its efficient implementation using standard relational and text indexing features of a relational database. We demonstrate the simplicity and efficiency of this system for a task involving the extraction of software system requirements from software product pages.", "histories": [["v1", "Sun, 28 Jun 2015 21:17:26 GMT  (2863kb,D)", "http://arxiv.org/abs/1506.08454v1", null], ["v2", "Tue, 27 Sep 2016 19:49:41 GMT  (2838kb,D)", "http://arxiv.org/abs/1506.08454v2", null]], "reviews": [], "SUBJECTS": "cs.CL cs.DB cs.IR", "authors": ["vijil chenthamarakshan", "prasad m desphande", "raghu krishnapuram", "ramakrishna varadarajan", "knut stolze"], "accepted": false, "id": "1506.08454"}, "pdf": {"name": "1506.08454.pdf", "metadata": {"source": "CRF", "title": "WYSIWYE\u2217 : An Algebra for Expressing Spatial and Textual Rules for Information Extraction", "authors": ["Vijil Chenthamarakshan", "Prasad .M. Deshpande", "Raghu Krishnapuram", "Ramakrishna Varadarajan", "Knut Stolze"], "emails": ["ecvijil@us.ibm.com", "prasdesh@in.ibm.com", "kraghura@in.ibm.com", "ramkris@cs.wisc.edu", "ramkris@cs.wisc.edu"], "sections": [{"heading": "1 Introduction", "text": "In fact, it is such that most of them will be able to move into another world, in which they are able to move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they live, in which they, in which they live, in which they live, in which they live, in which they live, in which they live."}, {"heading": "2 Related Work", "text": "Information Extraction (IE): The VIPS algorithm completes our work as it is able to create a reasonably good processing structure before performing a complete visual analysis. [13] Both rule-based and machine learning-based approaches have been proposed and widely used in real-world environments. In this paper, we extend the System T operator algebra [12] to support rules based on spatial layout.Frameworks for Information Extraction: The NLP community has developed several software architectures for the exchange of annotators, such as GATE [4] and UIMA [5]. The motivation is to provide a reusable framework in which annotators developed by different vendors can be integrated and executed in a workflows.Visual Information Extraction: There is a lot of work on the use of visual information for specific tasks. We list some representative works to prepare on the VIPS quellum, the rendering algorithm of a DOM is described below."}, {"heading": "3 Visual Algebra", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Overview of Algebraic Information Extraction", "text": "We begin with a system proposed by Reiss et al. [12] and extend it to support visual extraction rules. First, we give a brief summary of their algebra. For full details, we ask the reader to refer to the original paper."}, {"heading": "Data Model", "text": "The basic concept of algebra is that of a span, an ordered pair < start, end >, which designates a region or text within a document identified by its \"starting\" and \"ending positions.\" Each annotator finds regions of the document that comply with a series of rules, and marks each region with an object that is called a chip. Algebra works through a simple relational data model with three data types: span, tuple, and relation. A tuple is a finite sequence of w-span < s1,..., sw >; where w is the width of the tup.A relationship is a multitude of tuples, with the restriction that each tuple must have the same width in the relationship. Each operator takes zero or more relationships as input and generates a single output relationship."}, {"heading": "Operator Algebra", "text": "The number of operators in algebra can be roughly categorized into relational operators, chip extraction operators, and chip aggregation operators, as in Table 1. Relational operators include the standard operators such as Select, Project, Join, Union, and so on. The chip extraction operators identify text segments that match some patterns, and generate spans that match those matches. The two common chip extraction operators are the regular extraction matcher re and the dictionary matcher. The regular expression matcher takes a regular expression r, matches it to the input text, and issues spans that match those matches. The dictionary matcher takes a dictionary matcher that consists of a set of words / phrases, matches them to the input text, and outputs spans that correspond to each occurrence of a dictionary element in the input text. The text matcher takes a dictionary matcher that consists of a set of words / phrases spans that are larger than a string operator that are displayed as a combination of two (the following)."}, {"heading": "3.2 Extensions for Visual Information Extraction", "text": "In this context, it should be noted that the regions are rectangles that apply to most markup languages like HTML. A V isualSpan is a combination of a text-based span and a visual region with the following attributes. We assume that the regions are rectangles that apply to most markup languages like HTML. A V isualSpan is a combination of a text-based span and a visual region with the following attributes. < s > A text that begins and ends with attributes is the region where most markup languages like HTML. A V isualSpan is a combination of text and a visual region with the following attributes."}, {"heading": "3.3 Visual Operators", "text": "We are introducing many new operators to algebra to allow rules to be written based on visual regions. Operators can be classified as span-generating, scalar, or grouping operators, and a subset is listed in Table 2. Many of these operators are borrowed from spatial (GIS) databases. For example, the operators Contains, Touches, and Intersects are available in a GIS database such as DB2 Spatial Extender2. However, to the best of our knowledge, this is the first application of these constructs for gathering information. 2http: / / www-01.ibm.com / software / data / spatial / db2spatial /"}, {"heading": "Span Generating Operators", "text": "These operators generate a series of viewpoints as output and include the < (d), ancestor and descendant operators."}, {"heading": "Scalar Operators", "text": "The scalar operators take as input one or more values from a single tuple and return a single value. Boolean scalar operators can be used in predicates and are further classified as directional or containment operators. Directional operators allow comparisons of visibility based on their position in the layout. For space reasons, we have listed only NorthOf, but we have similar predicates for other directions. Other scalar operators are the generalization / specialization operators and the geometric operators."}, {"heading": "Grouping Operators", "text": "The grouping operators are used to group several tuples according to certain criteria and apply an aggregation function to each group, similar to the GROUP BY functionality in SQL."}, {"heading": "3.4 Comparison with Source Based Approach", "text": "If visual algebra is not supported, we would only have to implement a given task based on certain source-based rules. Visual algebra is a superset of existing source-based algebra. If we express a visual rule using existing algebra as a source-based rule, we can categorize it into one of the following cases: 1. Identical semantics: Some of the visual operators can be mapped directly to source-based rules while keeping semantics intact. 2. Approximate semantics: Mapping a visual rule to a source-based rule with identical semantics can lead to very complex rules, as there are many ways to achieve the same visual layout < li > or < p >, depending on the exact task. 2. Approximate semantics: Mapping a source-based rule with identical semantics can lead to very complex rules, as there are many ways to achieve the same visual layout."}, {"heading": "4 System Architecture and Implementation", "text": "This section describes the architecture and implementation of the visual extraction system. There are two models that are typically used to extract information - document-level processing, where rules are applied to a document at the same time, and survey-level processing, where rules are matched to the entire document collection at once. Collection-level processing is useful when the document collection is static and the rules are dynamic, i.e. new rules are developed over time on the same collection. Previous work has shown an order of performance improvements in collection-level processing compared to document-level processing through the use of indexes to evaluate regular expression rules [11]. Visual algebra can be implemented either using a document-level processing model or a collection-level processing model."}, {"heading": "Preprocessing Phase", "text": "In the pre-processing phase, web pages from which information is to be extracted are searched and a local repository of the web pages is created. In addition to the HTML source of the web page, all components required to render the page accurately, such as embedded images and stylesheets, should be downloaded and linked accordingly from the local copy of the page. We use an open source extension specifically designed for this purpose called WebPageDump3. Each page is then displayed in a browser and for each node in the DOM tree, its visual region and text is extracted (using the Chickenfoot Firefox extension4) and stored in a relational database (IBM DB2 UDB). We also use the indexing and text search functions of DB2 Net Search Extender5 to accelerate queries that can benefit from an inverted index.3http: / / www.dbai.tuen..at / paddpolder.web5 /."}, {"heading": "Query Phase", "text": "During the interactive query phase, the user expresses the task of information extraction as operations in visual algebra. Subsequently, the visual algebraic operations are translated into standard SQL queries and executed in the database."}, {"heading": "4.1 Implementing Visual Algebra Queries using a Database", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Schema", "text": "The visual regions computed in the pre-processing stage are stored in a table called Regions with the following scheme: < Pageid, Regionid, xl, yl, xh, yh, TextStart, TextEnd, Text, HtmlTag, MinimalRegion, MaximalRegion >.The Pageid uniquely identifies a page. The HTML DOM tree is a hierarchical structure in which the parent nodes consist of child nodes. For example, a < td > can be nested within a < tr > tag nested within a < table >, and so on. The Regionid uniquely identifies a region in a page annd as a path expression that encodes the path to the corresponding node, making it easy to identify the parents and offspring of a region nested within a region."}, {"heading": "Implementation of Operators", "text": "For the sake of simplicity, we have shown the SQL for each operator separately. Applying these rules for a general algebra expression will produce a nested SQL statement that can be flattened in a single SQL using the regular transformation rules for SQL sub-queries. We have also experimented with using a spatial database to implement our algebra, but found that it was not very efficient. Spatial databases can handle complex geometries, but not be optimized for the simple rectangular geometries that the visual regions have. Conditions resulting from simple rectangular geometries can easily be mapped to the simple conditions of the region."}, {"heading": "Use of Indices", "text": "Indices can be used to speed up the text and region predicates. Instead of the MatchesRegex UDF, we can use the CONTAINS operation provided by the text index. We also build indices on xl, xl, xh, yh columns to speed up visual operators. Once the visual algebra query is mapped to an SQL query, the optimizer takes on the task of deciding which indices to use for the query based on cost implications."}, {"heading": "5 Experiments", "text": "The aim of the experiments is to demonstrate the simplicity of visual queries and to examine the effectiveness of mapping visual algebra queries to database queries. We describe visual algebra queries for a representative set of tasks, assign them to SQL queries in a database system, and examine the effects of indexing on performance."}, {"heading": "5.1 Experimental Setup", "text": "The Corpus document for our experiments consists of software product information pages from IBM website 6. We combed through these pages, resulting in a corpus of 44726 pages. Our goal was to extract the system requirements information for these products from their web pages (see Figure 1). Extracting the system requirements is a challenging task as the pages are created manually and do not have a standard format, which can be broken down into sub-tasks that we use as representative queries for our experiments, the queries are listed below. Visual algebra expression and the corresponding SQL query via the spatial database are listed in Table 4. To simplify printing, the visual algebra queries are6http: / / www.ibm.com / software / products / us / en? pgel = lnavspecified using an SQL like syntax."}, {"heading": "5.2 Accuracy of Spatial Rules", "text": "The Q2 and Q4 test set consists of 116 manually marked pages. The Q1 and Q3 test set contains 3310 10-page regions with 525 positive examples for Q1 and 23 positive examples for Q3. Please note that for Q1 and Q3 we have to manually mark each region on one page. As there are only a few hundred regions on one page, we manually mark only 10 pages. The rules were developed by looking at different patterns that occur in a random sample of the entire corpus. Results are presented in Figure 4. As our tasks are well suited to spatial rule extraction, we were able to achieve a high degree of accuracy through relatively simple rules."}, {"heading": "5.3 Performance", "text": "Since the queries have selection predicates on the text column and the coordinates (xl, yl, xh, yh), we build indices to speed them up. We also index the text column using the DB2 Net Search Extender. The runtime of the queries is in Figure 3. We compare different ways to use no indices, only text index and indices on the regional coordinates. For Q1, the text index makes no difference because there is no text predicate. The regional index results in a big improvement in time. Q2, Q3 and Q4 have both text and regional predicates, and therefore benefit from both the text index and the regional indices. The advantage of the text index is comparatively greater. In all cases, we can see that the use of indices leads to a three to fifteen-fold improvement in the execution times of the query."}, {"heading": "6 Discussion", "text": "The WYSIWYE algebra we propose allows the user to seamlessly combine traditional text-based rules with high-level rules based on spatial layout. Visual algebra can be systematically mapped to SQL statements, enabling optimization through the database. We have evaluated our system in terms of ease of use and performance for the task of extracting software system requirements from software pages. Rules expressed with visual algebra are much simpler than the corresponding source-based rules and more resistant to changes in source code. Performance results show that queries to SQL and the use of text and region indexes in the database can significantly improve the time needed to apply the rules."}], "references": [{"title": "The common pattern specification language", "author": ["D.E. Appelt", "B. Onyshkevych"], "venue": "In Proceedings of a workshop on held at Baltimore, Maryland,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1996}, {"title": "Extracting structured data from web pages", "author": ["A. Arasu", "H. Garcia-Molina"], "venue": "In SIGMOD Conference,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "Vips: a vision-based page segmentation algorithm", "author": ["D. Cai", "S. Yu", "J.-R. Wen", "W.-Y. Ma"], "venue": "Technical report, Microsoft Research,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "Gate - a general architecture for text", "author": ["H. Cunningham", "Y. Wilks", "R.J. Gaizauskas"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1996}, {"title": "Uima: an architectural approach to unstructured information processing in the corporate research environment", "author": ["D. Ferrucci", "A. Lally"], "venue": "Nat. Lang. Eng.,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2004}, {"title": "Towards domain-independent information extraction from web tables", "author": ["W. Gatterbauer", "P. Bohunsky", "M. Herzog", "B. Krpl", "B. Pollak"], "venue": "In WWW", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Visual based content understanding towards web adaptation", "author": ["X.-D. Gu", "J. Chen", "W.-Y. Ma", "G.-L. Chen"], "venue": "In AH", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2002}, {"title": "Recognition of common areas in a web page using visual information: a possible application in a page classification", "author": ["M. Kovacevic", "M. Diligenti", "M. Gori", "V. Milutinovic"], "venue": "In ICDM", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2002}, {"title": "Using visual cues for extraction of tabular data from arbitrary html documents", "author": ["B. Krpl", "M. Herzog", "W. Gatterbauer"], "venue": "WWW \u201905,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Using the structure of web sites for automatic segmentation of tables", "author": ["K. Lerman", "L. Getoor", "S. Minton", "C. Knoblock"], "venue": "In SIGMOD", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2004}, {"title": "Entity annotation based on inverse index operations", "author": ["G. Ramakrishnan", "S. Balakrishnan", "S. Joshi"], "venue": "In EMNLP\u2019", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "An algebraic approach to rule-based information extraction", "author": ["F. Reiss", "S. Raghavan", "R. Krishnamurthy", "H. Zhu", "S. Vaithyanathan"], "venue": "In ICDE", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}, {"title": "Information extraction", "author": ["S. Sarawagi"], "venue": "FnT Databases,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "Declarative information extraction using datalog with embedded extraction predicates", "author": ["W. Shen", "A. Doan", "J.F. Naughton", "R. Ramakrishnan"], "venue": "In VLDB", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2007}], "referenceMentions": [{"referenceID": 2, "context": "Indeed, there have been several efforts to use layout information for specific tasks such as web page segmentation [3] and table extraction [6].", "startOffset": 115, "endOffset": 118}, {"referenceID": 5, "context": "Indeed, there have been several efforts to use layout information for specific tasks such as web page segmentation [3] and table extraction [6].", "startOffset": 140, "endOffset": 143}, {"referenceID": 9, "context": "Lerman et al [10] show that only a fraction of tables are implemented using the <table> tag.", "startOffset": 13, "endOffset": 17}, {"referenceID": 8, "context": "\u2022 Proximity of two entities in the HTML source code does not necessarily imply visual proximity [9], and so it may not be possible to encode visual proximity cues using simple source based rules.", "startOffset": 96, "endOffset": 99}, {"referenceID": 11, "context": "Rule based system can be either declarative [12, 14] or procedural [1].", "startOffset": 44, "endOffset": 52}, {"referenceID": 13, "context": "Rule based system can be either declarative [12, 14] or procedural [1].", "startOffset": 44, "endOffset": 52}, {"referenceID": 0, "context": "Rule based system can be either declarative [12, 14] or procedural [1].", "startOffset": 67, "endOffset": 70}, {"referenceID": 11, "context": "It has been shown that expressing information extraction (IE) tasks using an algebra, rather than procedural rules or custom code, enables systematic optimizations making the extraction process very efficient [12, 14].", "startOffset": 209, "endOffset": 217}, {"referenceID": 13, "context": "It has been shown that expressing information extraction (IE) tasks using an algebra, rather than procedural rules or custom code, enables systematic optimizations making the extraction process very efficient [12, 14].", "startOffset": 209, "endOffset": 217}, {"referenceID": 11, "context": "Hence, we focus on an algebraic information extraction framework described in [12] and extend its algebra with a visual operator algebra that can express rules based on spatial layout cues.", "startOffset": 78, "endOffset": 82}, {"referenceID": 11, "context": "\u2022 We have developed an algebraic framework for rule\u2013based information extraction that allows us to seamlessly combine traditional text\u2013based rules with high\u2013level rules based on the spatial layout of the page by extending an existing algebra for traditional text based information extraction [12], with a visual operator algebra.", "startOffset": 292, "endOffset": 296}, {"referenceID": 12, "context": "Information Extraction(IE): IE is a mature area of research that has received widespread attention in the NLP, AI, web and database communities [13].", "startOffset": 144, "endOffset": 148}, {"referenceID": 11, "context": "In this paper, we extend the operator algebra of System T [12] to support rules based on spatial layout.", "startOffset": 58, "endOffset": 62}, {"referenceID": 3, "context": "Frameworks for Information Extraction: The NLP community has developed several software architectures for sharing annotators, such as GATE [4] and UIMA [5].", "startOffset": 139, "endOffset": 142}, {"referenceID": 4, "context": "Frameworks for Information Extraction: The NLP community has developed several software architectures for sharing annotators, such as GATE [4] and UIMA [5].", "startOffset": 152, "endOffset": 155}, {"referenceID": 2, "context": "The VIPS algorithm described in [3] segments a DOM tree based on visual cues retrieved from browser\u2019s rendering.", "startOffset": 32, "endOffset": 35}, {"referenceID": 6, "context": "A top-down approach to segment a web page and detect its content structure by dividing and merging blocks is given in [7].", "startOffset": 118, "endOffset": 121}, {"referenceID": 7, "context": "[8] use visual information to build up a \u201cM-tree\u201d, a concept similar to the DOM tree enhanced with screen coordinates.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] describe a completely domain-independent method for IE from web tables, using visual information from Mozilla browser.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Another body of work that is somewhat related is automatic and semi-automatic wrapper induction for information extraction [2].", "startOffset": 123, "endOffset": 126}, {"referenceID": 11, "context": "We start with a system proposed by Reiss et al [12] and extend it to support visual extraction rules.", "startOffset": 47, "endOffset": 51}, {"referenceID": 10, "context": "Previous work has demonstrated an order of magnitude improvement in performance by collection level processing compared to document level processing with the use of indices for evaluating regular expression rules [11].", "startOffset": 213, "endOffset": 217}], "year": 2017, "abstractText": "The visual layout of a webpage can provide valuable clues for certain types of Information Extraction (IE) tasks. In traditional rule based IE frameworks, these layout cues are mapped to rules that operate on the HTML source of the webpages. In contrast, we have developed a framework in which the rules can be specified directly at the layout level. This has many advantages, since the higher level of abstraction leads to simpler extraction rules that are largely independent of the source code of the page, and, therefore, more robust. It can also enable specification of new types of rules that are not otherwise possible. To the best of our knowledge, there is no general framework that allows declarative specification of information extraction rules based on spatial layout. Our framework is complementary to traditional text based rules framework and allows a seamless combination of spatial layout based rules with traditional text based rules. We describe the algebra that enables such a system and its efficient implementation using standard relational and text indexing features of a relational database. We demonstrate the simplicity and efficiency of this system for a task involving the extraction of software system requirements from software product pages.", "creator": "LaTeX with hyperref package"}}}