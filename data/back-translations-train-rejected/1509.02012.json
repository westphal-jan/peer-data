{"id": "1509.02012", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Sep-2015", "title": "Bounded Situation Calculus Action Theories", "abstract": "In this paper, we investigate bounded action theories in the situation calculus. A bounded action theory is one which entails that, in every situation, the number of object tuples in the extension of fluents is bounded by a given constant, although such extensions are in general different across the infinitely many situations. We argue that such theories are common in applications, either because facts do not persist indefinitely or because the agent eventually forgets some facts, as new ones are learnt. We discuss various classes of bounded action theories. Then we show that verification of a powerful first-order variant of the mu-calculus is decidable for such theories. Notably, this variant supports a controlled form of quantification across situations. We also show that through verification, we can actually check whether an arbitrary action theory maintains boundedness.", "histories": [["v1", "Mon, 7 Sep 2015 12:42:45 GMT  (109kb,D)", "http://arxiv.org/abs/1509.02012v1", "51 pages"]], "COMMENTS": "51 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["giuseppe de giacomo", "yves lesp\\'erance", "fabio patrizi sapienza university of rome", "italy", "york university", "toronto", "on", "canada", "free university of bozen-bolzano", "italy)"], "accepted": false, "id": "1509.02012"}, "pdf": {"name": "1509.02012.pdf", "metadata": {"source": "CRF", "title": "Bounded Situation Calculus Action Theories", "authors": ["Giuseppe De Giacomo", "Yves Lesp\u00e9rance", "Fabio Patrizi"], "emails": ["degiacomo@dis.uniroma1.it", "lesperan@cse.yorku.ca", "patrizi@dis.uniroma1.it"], "sections": [{"heading": "1 Introduction", "text": "It has proved to be an invaluable formal tool for understanding the subtle questions involved in the argument about action, but its understanding allows us to put all aspects of dynamic systems into perspective. However, basic theories of action allow us to capture changes as a result of actions in the system [72], while high-level languages such as Golog [58] and ConGolog [26] support the representation of processes in relation to the dynamic system. Aspects such as time [74], knowledge and perception of changes in the system [78], probabilities and utilities [16], and preferences, which have all been addressed. The price of such universality is that decisiveness results for argumentation in the situation are rare, e.g. [85] for an argument-free fragment, and [49] for a descriptive logical two-variable fragment. Obviously, we have the most important features to reduce the situation."}, {"heading": "2 Preliminaries", "text": "The situation calculus [64,73] is a sorted predicate logic language for the representation and argumentation about dynamically changing worlds. All changes in the world are the result of actions that are terms in language. We denote action variables by lowercase letters a, action formulas by uppercase letters A and action terms by \u03b1, possibly with drawings. A possible world history is represented by a term designated as a situation. The constant S0 is also used to denote the initial situation in which no actions have yet been performed. Sequences of actions are constructed using the functional symbol in which (a, s) is the successor situation resulting from the performance of actions in situations. In addition to actions and situations, there is also the type of objects for all other entities. Predictions and functions whose value varies from situation to situation are denoted as fluid and are denoted by symbols as their last argument (e.g. s holding), which means that an object holds."}, {"heading": "3 Bounded Action Theories", "text": "Let b be a natural number. We use the notation (x). (xb) We assume that there are at least b) different tuples (x) that both represent the following FOL formula. (xb) We also use the notation (x). (xb) There are fewer than b different tuples that satisfy each other. (xx) We also use the notation (x). (xb) There are fewer than b different tuples that are suitable for the satisfaction (x). (x) We also use the notation (x). (x) We define the notion of a fluent F (x) in a situation limited by a natural number. (s) We assume that there is (s) a natural number b (s). (s)"}, {"heading": "4 Obtaining Bounded Action Theories", "text": "Before focusing on verification, in this section we will consider several interesting sufficient conditions that guarantee that a basic action theory is limited. Later in Section 9, we will see that it is actually possible to use verification itself to verify whether any basic action theory with a limited initial situation description is actually limited."}, {"heading": "4.1 Bounding by Blocking", "text": "We assume that the formula Boundedb (s) is a basic action theory that is discussed in the situations mentioned above and is therefore revocable for basic action theories. (This allows us to introduce a first interesting class of action theories.) In fact, we can immediately obtain a limited action theory from any basic action theory by simply blocking the execution of actions if the result would cross the line. (D) define a basic action theory by replacing any action condition. (A), (A), S), S), S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S. (1) Let us be a basic action theory with the original description D0."}, {"heading": "4.2 Effect Bounded Action Theories", "text": "Let us consider another sufficient condition for limitation."}, {"heading": "4.3 Fading Fluents Action Theories", "text": "\"We have the possibility that we will find a solution.\" (a, s) \"We have: Fi (x, s), do (a, s), do (a, s), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a), do (a)."}, {"heading": "5 Expressing Dynamic Properties", "text": "In order to express properties through situation calculus action theories, we introduce a specific logic inspired by \u00b5 calculation [40,17], one of the most powerful temporal logic subsuming both linear time logic, such as linear temporal logic (LTL) [68] and the property specification language (PSL) [39], and the branching of time logic such as the computational tree logic CTL [21] and the CTL [41]. The main feature of \u00b5 calculation is its ability to directly express the least and largest fixed points of (predicate transformers) operators that correlate the current state with the next. By using such fixed point constructions, one can easily express complex properties defined by induction or co-induction, which is why practically all logic used in verification are considered fragments of \u00b5 calculation."}, {"heading": "6 Verification of Bounded Action Theories with Complete Information on S0", "text": "In this section, we focus on action theories with complete information about the starting situation. The case of incomplete information will be discussed in the next section. In particular, we assume that the extension of all fluid elements in the starting situation S0 is given as a (limited) database. We also assume that the domain of interpretation for objects \u2206 is given as well. Note that action theory D only allows a model-like presence of an infinite number of object constants and the unique naming on them Duno, such an object domain \u0445 must be infinity.10 As a result of these two assumptions, we have that action theory D only allows a modellM \u0445 [66], which we call the model of action theory D (although we need it to define it) with a slight misuse of terminology. Our main result is the following action theory 4. Let D have a limited action theory with starting situation described by a (limited) situation."}, {"heading": "6.1 Suppressing Action Terms", "text": "Theorem 5. For every possibly open, situational formula FO (x, s) that is uniform in s and with free variables x, there is a situational formula (x, s) that is uniform in s, in which no action formulas occur, such as that Dca | = (x, s), (x, s), (x, s), (x, s), (x, s), (x, s), in which there is a situational formula in which no action formulas occur, so that Dca | = (x, s), (y), (y), (y), y, \"y,\" y, \"y,\" x, \"x,\" then vice versa, y, \"x,\" x, \"x,\" \"x,\" \"x,\" \"x,\" x, \"x,\" x, \"x,\" x, \"x,\" x, \"x."}, {"heading": "6.2 Suppressing Situation Terms", "text": "Since the FO components of the FO formulas are connected to the object domain and a situation, it is obviously irrelevant when we check the FO formulas; more precisely, the FO components (i.e. the entire logic) are sensitive only to the interpretation of formulas (and constants) in any situation, while the situations themselves are not relevant. The effects of this observation on the evaluation of FO formulas in the general case are evident in Section 6.4. Here, we focus on the local evaluation of FO components (on the interpretation of an individual situation), or more specifically on the FO situation, the formulas in s, and present some remarkable results that, apart from being interesting, will be useful at a later time.In view of a basic action theory D, we think of F the amount of its flowing symbols, and of C the (finite) constants explicitly mentioned in N."}, {"heading": "6.3 \u00b5\u0141p over Transition Systems", "text": "The results presented in sections 6.1 and 6.2 indicate that for the purpose of verifying Q = Q = Q = Q = Q = Q = Q = Q (Q = Q = Q = Q), action theories can be operated on simpler structures than the models of situational calculation. In fact, as we have seen, both actions and situations can essentially be ignored. The connection between models of situational theories and transition systems will be discussed in section 6.4. With Theorem 5, we can concentrate on a variant of \u00b5Lop in which action terms do not occur without loss of universality. By means of IntF, C, we point out the correlations of all possible interpretations of the situation that are suppressed in F and constants in C."}, {"heading": "6.4 Transition Systems Induced by a Situation Calculus Theory", "text": "Among the various TSs, we are interested in those induced by models of situational calculation theory. Consider a ModelM of D with object domain and situational domain S. The TS induced by M is the labeled TS TM = < \u2206, Q, q0, I, \u2192 >, so that: - Q = S is the set of possible states, each of which corresponds to a specific executable situation in S. - q0 = SM0 = Q is the initial state, with SM0 the initial situation of D; - \u2192 Q \u00b7 Q is the transition relationship so that q \u2192 q \u2032 iff there is such an action that < a, q > PossM and q \u2032 = doM (a, q). - I: Q 7 \u2192 IntF, C \u0445 is the labeling function that links each situation (situation) q to the interpretation of M."}, {"heading": "6.5 Abstract Finite-State Transition System", "text": "As shown above, the satisfaction of the \u00b5\u0141p formulas is maintained only by persistent Q2 constants (see above), even between an infinite and a finite state TS. If this is the case, the verification on the finite TS can be performed using standard procedures that essentially perform fixed point calculations on a finite state space. Next, we will show how, in the case of the finite theories, a finite TS TF can be constructed that is bisimilar to the TS TM constructed by M.We construct TF using method 1. The procedure takes as input an action theory D (with complete information on the initial situation) limited by b and a model of D with finite object domain, 12 and returns a finite state TS TF that is bisimilar to TM. TF is built step by step, through iterative refinements of states Q, the interpretation function I, and the transition relationship."}, {"heading": "7 Dealing with Incomplete Information", "text": "In this section, we will deal with partial information about the initial situation by assuming that D0 is a series of axioms that characterize a possibly infinite series of limited initial databases. In this case, too, we will focus on theories whose models have infinite object domains (since we then have infinitely different constants). First, we will prove that whenever two models interpret their respective initial situations in isomorphic ways, they exhibit persistent bisimilarities. We will find that this result is independent of the cardinalities of the object domains of the models. Theorem 18. Let D be a limited basic theory of action. For every second modelsM and M \u00b2 of D, with possibly different infinite object domains and domains of action, each being M (SM0) and I (SMM \u00b2) the preservation (SMM), then."}, {"heading": "8 Computational Complexity", "text": "In this section, we will assume the computational complexity of verifying \u00b5\u0141p formulas over a limited situation computing basic action theory. In particular, we will show that the constructive techniques we have used to prove decision-making ability are, in fact, optimal in terms of maximum computational complexity. We will assume that for a basic action theory D, the maximum number of different objects occurring in the state of each situation dominates the input size of D itself, and that there is a limit between the maximum nature of fluctuations. This is a reasonable assumption, analogous to that typical in databases, that the size of the database provides a higher limit for input along all dimensions, and that in practical cases there is an upper limit to the nature of relationships. We will use the constructive techniques we have introduced to demonstrate decision-making ability to maintain an exponential time above. Theorem 20."}, {"heading": "9 Checking Boundedness", "text": "We now show that we can always check whether any BAT maintains the boundaries for a given boundary. That is, if the initial situation is limited, then the whole theory is up to (for all executable situations). First, we must determine that in a situation we can determine whether each executable act does not cross the boundary next (i.e. in do (a, s). We can grasp the notion of a fluent F, which at the next stage is limited by the formula: \"A (x), s), s), s), s), s, s,\" BoundedF, b, c, c, c, c, c, c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, c, c, c, c, c, c, c, c, c, c, \"c, c, c, c, c, c, c, c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c, c,\" c, c, \"c, c,\" c, c, \"c, c, c,\" c, c, c, \"c, c, c,\" c, c, \"c, c, c,\" c, c, \"c, c,\" c, c, c, \"c,\" c, c, \"c,\" c, c, \"c,\" c, \"c, c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c, c,\" c, \"c,\" c, \"c,\", \",\" c, \",\" c, \"c,\" c, \",\" c, \",\" c, \"c,\" c, \",\" c, \"c,\" c, \",\" c, \"c,\", \",\" c, \",\", \"c,\", \",\" c, \",\" c, \",\" c, \"c,\","}, {"heading": "10 Related Work", "text": "Some attention has also been paid to specifying and verifying general temporal characteristics, especially in the context of planning. [65] The Planning Domain Definition Language (PDDL) [65] was developed to specify planning domains and changes, and a newer version supports the expression of time constraints on the plan trajectory [46]. Approaches such as those in TLPlan [3], TALplanner [56], or in planning support planning with such time constraints."}, {"heading": "11 Conclusion", "text": "In this paper, we have defined the concept of bound action theory in the situation calculus, where the number of flowing atoms remains limited. We have shown that this constraint is sufficient to ensure that the verification of an expressive class of temporal properties is still decidable, and that it is indeed complete, despite the fact that we have an infinite domain and a state space. Our result is that the presence of incomplete information is important, but we have also argued that this constraint can be observed in practical applications by identifying interesting classes of bound action theories and showing that they can be used to be a typical example of dynamic domains."}, {"heading": "Acknowledgements", "text": "The authors acknowledge the support of: Ripartizione Diritto allo Studio, Universit\u00e0 e Ricerca Scientifica de Provincia Autonoma di Bolzano-Alto Adige, within the project VeriSynCoPateD (Verification and synthesis of process components that manipulate data); EU Commission, within the IP project n. FP7-318338 Optique (Scalable End User Access to Big Data); and the National Science and Engineering Research Council of Canada."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "In this paper, we investigate bounded action theories in the situation<lb>calculus. A bounded action theory is one which entails that, in every situation,<lb>the number of object tuples in the extension of fluents is bounded by a given<lb>constant, although such extensions are in general different across the infinitely<lb>many situations. We argue that such theories are common in applications, either<lb>because facts do not persist indefinitely or because the agent eventually forgets<lb>some facts, as new ones are learnt. We discuss various classes of bounded action<lb>theories. Then we show that verification of a powerful first-order variant of the \u03bc-<lb>calculus is decidable for such theories. Notably, this variant supports a controlled<lb>form of quantification across situations. We also show that through verification,<lb>we can actually check whether an arbitrary action theory maintains boundedness.", "creator": "LaTeX with hyperref package"}}}