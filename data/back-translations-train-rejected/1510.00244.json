{"id": "1510.00244", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Oct-2015", "title": "RDF Knowledge Graph Visualization From a Knowledge Extraction System", "abstract": "In this paper, we present a system to visualize RDF knowledge graphs. These graphs are obtained from a knowledge extraction system designed by GEOLSemantics. This extraction is performed using natural language processing and trigger detection. The user can visualize subgraphs by selecting some ontology features like concepts or individuals. The system is also multilingual, with the use of the annotated ontology in English, French, Arabic and Chinese.", "histories": [["v1", "Thu, 1 Oct 2015 14:10:25 GMT  (123kb,D)", "http://arxiv.org/abs/1510.00244v1", null]], "reviews": [], "SUBJECTS": "cs.HC cs.CL", "authors": ["fadhela kerdjoudj", "olivier cur\\'e"], "accepted": false, "id": "1510.00244"}, "pdf": {"name": "1510.00244.pdf", "metadata": {"source": "CRF", "title": "RDF Knowledge Graph Visualization From a Knowledge Extraction System", "authors": ["Fadhela Kerdjoudj", "Olivier Cur\u00e9"], "emails": ["@u-pem.fr", "ocure@u-pem.fr"], "sections": [{"heading": "1 Introduction", "text": "In recent decades, many knowledge extraction systems have emerged, aimed at automating the processing of text documents. The importance of these systems is underscored by the proliferation of text publications on the Web, such as social media, blogs or journals. To extract as much relevant information as possible, it is necessary to harness the power of the semantic Web and related technologies, namely vocabulary (RDF, OWL, SKOS...), query language (SPARQL), inference services, linked open data (LOD), allow the representation, access, reasoning and networking of extracted data. To obtain this data, we use a knowledge extraction system based on Natural Language Processing (NLP) to populate a knowledge base. In this article, we present a component of this system that deals with the visualization of RDF knowledge graphs, allowing us to begin by selecting the length of the text, or concepts applied to the individual."}, {"heading": "2 Knowledge extraction system", "text": "The web contains a large number of documents from heterogeneous sources. However, these documents cannot be used directly by programs.ar Xiv: 151 0.00 244v 1 [cs.H C] 1O ct2 01The extraction and representation framework developed at GEOLSemantics combines NLP techniques with semantic processing to extract RDF knowledge diagrams."}, {"heading": "2.1 Deep Morphosyntactic Analysis", "text": "Deep morphosyntactic analysis consists of the following steps: - Segmentation: The text is divided into tokens using regular expressions that identify uppercase letters, numbers, dates, etc. - Morphological processing: For each inflected word, the basis (lemmas) is identified and ascribed a grammatical category to it. - Identification of named entities: The named entities, namely: person, organization, location, are identified using two methods: (i) Thesaurus consultation, based on LOD such as DBpedia and Geonames. (ii) Explanatory rules based on announcers such as President, Lord, City, Airport. - Syntactic analysis: allows to represent the syntactic structure of a text. It indicates how the grammatical categories are arranged, e.g. noun-verb adjective. In fact, some other processes are performed such as: Transform passive forms to be active, Resolution of anaphora, Modality, and Vernalignment of Tense information about the plot."}, {"heading": "2.2 Knowledge Extraction", "text": "All these processes are organized as follows: - Probable concept selection: It consists of the recognition of triggers. Triggers consist of one or more words (nouns, verbs, etc.) that represent a semantic unit that denotes a unit to be extracted. For example, the verb \"Go\" denotes a shift. Each trigger is assigned to an ontology class and a number of rules. - Rules selection: Each trigger is assigned to a list of rule patterns. A suitable approach allows the selection of all relevant patterns from the various relationships identified in the syntactic analysis. - Triple creation: The selected rules help generate triples based on the given patterns. Then, the result is structured as an RDF triple."}, {"heading": "2.3 Integration", "text": "In this step, our goal is to bring more consistency to the extracted knowledge by performing the following processes: (i) co-reference resolution: As described in [2], we group all instances of each entity. (ii) Relative data resolution: Turn all relative data into absolute data like today, last week. (iii) Complete the extraction with implicit information that can be gleaned from reading a text such as the date or location. (iv) Labeling creation: Following the symbol positions indicated by morphosyntactic processing, the labels are retrieved from the original text. It helps to identify each entity."}, {"heading": "3 Visualization Features", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Ontology description", "text": "Using a triple RDF-based representation and ontology description, the text can be presented as a knowledge diagram containing all the information needed. Currently, our ontology is expressed in OWL (exactly ACLIF (D) description logic and contains a few hundred classes and characteristics. We are constantly enriching this ontology to support other uses and disciplines. The classes considered are mainly: - Named entities such as person, organization, place, measure, date. - Facts such as work experience, studies, family relationship, personal relationship, event relationship, organizational relationship. - Events such as meetings, movement, violence, conviction, appointment, arrest. Object characteristics describe the relationship between entities such as the address of a person or organization, the date and place where an event takes place. Finally, the data type characteristics are dictionaries in which the named entities are described, such as names, types, values. It is noteworthy that the ontology design has been assigned a great importance in each domain and in the French language."}, {"heading": "3.2 Graph features", "text": "The extracted knowledge is conform to the ontology description, the triples are related to each other and the graph can be constructed. In our diagram representation, instead of using URIs to mark nodes, we use symbols and labels. This allows the user to recognize the requested information in a simpler way than reading all URIs, which are usually less illustrative. The edges are also designated with labels as they were specified in ontology.Multilingual aspect: Defining the labels in ontology in different languages makes it possible to visualize the graph in a multilingual form, as in Figure 1, which describes the knowledge extracted from Example 1. By selecting the Chinese language, the user can visualize the knowledge diagram, which corresponds to an English text with Chinese annotations. We note that literals can also be translated into the selected language.For clarity, we keep them in their original form (i.e., as quoted in the example)."}, {"heading": "4 Implementation", "text": "The visualization module of our system is a web interface developed in Java. The graph is created using GraphViz3, where nodes denote instance classes and edge relationships between them. Graphviz [3] constructs a graph from an entry in DOT [4] language. The diagrams are presented in various formats: PNG, PDF, SVG, etc. The text (the caption) can be handled using useful features such as font, color, size, hyperlinks, custom shapes. In addition, the graph layout can be hierarchical, radial, or circular. In addition, we used Javascript code to link the graph to the text by highlighting the trigger when hooking the corresponding node. Finally, the ontology is analyzed using the Jena API [1] to retrieve classes and properties, hierarchies, and annotations. http: / / graphvization.org / Document.phent.p"}, {"heading": "5 Conclusion and future work", "text": "In this thesis, we present a system for visualizing an RDF knowledge graph. It allows the selection of sub-graphs. This feature is particularly useful in the case of large graphs obtained through long word processing. We also explain the role that ontology plays in visualization, it helps to create more clarity and provides a multilingual interpretation of the text. As a future work, we plan to edit further RDF extractions such as Yago and DBpedia and make the graph more interactive by allowing, for example, moving the nodes."}, {"heading": "1. Jeremy J Carroll, Ian Dickinson, Chris Dollin, Dave Reynolds, Andy Seaborne, and Kevin Wilkinson. Jena: implementing the semantic web recommendations. In", "text": "Proceedings of the 23rd International Conference on Computational Linguistics, pages 277-285. Association for Computational Linguistics, 2010. 3. John Ellson, Emden R Gansner, Eleftherios Koutsofios, Stephen C North, and Gordon Woodhull. Graphviz and dynagraphstatic and dynamic graph drawing tools. In Graph drawing software, pages 127-148. Springer, 2004. 4. Eleftherios Koutsofios, Stephen North, et al. Drawing graphs with dot. Technical report, Technical Report 910904-59113-08TM, AT & T Bell Laboratories, NJ Hill, 1991."}], "references": [{"title": "Jena: implementing the semantic web recommendations", "author": ["Jeremy J Carroll", "Ian Dickinson", "Chris Dollin", "Dave Reynolds", "Andy Seaborne", "Kevin Wilkinson"], "venue": "In Proceedings of the 13th international World Wide Web conference on Alternate track papers & posters,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "Entity disambiguation for knowledge base population", "author": ["Mark Dredze", "Paul McNamee", "Delip Rao", "Adam Gerber", "Tim Finin"], "venue": "In Proceedings of the 23rd International Conference on Computational Linguistics,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Graphviz and dynagraphstatic and dynamic graph drawing tools", "author": ["John Ellson", "Emden R Gansner", "Eleftherios Koutsofios", "Stephen C North", "Gordon Woodhull"], "venue": "In Graph drawing software,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "Drawing graphs with dot", "author": ["Eleftherios Koutsofios", "Stephen North"], "venue": "Technical report, Technical Report 910904-59113-08TM,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}], "referenceMentions": [{"referenceID": 1, "context": "In this step, our aim is to bring more consistency to the extracted knowledge by performing the following processes: (i) Coreference resolution: as described in [2], we group all the instances of each entity.", "startOffset": 161, "endOffset": 164}, {"referenceID": 2, "context": "Graphviz [3] constructs a graph from an entry in DOT [4] language.", "startOffset": 9, "endOffset": 12}, {"referenceID": 3, "context": "Graphviz [3] constructs a graph from an entry in DOT [4] language.", "startOffset": 53, "endOffset": 56}, {"referenceID": 0, "context": "Finally, the ontology is parsed with the Jena API [1], to retrieve classes and properties, hierarchies and annotations.", "startOffset": 50, "endOffset": 53}], "year": 2015, "abstractText": "In this paper, we present a system to visualize RDF knowledge graphs. These graphs are obtained from a knowledge extraction system designed by GEOLSemantics. This extraction is performed using natural language processing and trigger detection. The user can visualize subgraphs by selecting some ontology features like concepts or individuals. The system is also multilingual, with the use of the annotated ontology in English, French, Arabic and Chinese.", "creator": "LaTeX with hyperref package"}}}