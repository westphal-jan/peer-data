{"id": "1510.00523", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Oct-2015", "title": "Implementing Efficient All Solutions SAT Solvers", "abstract": "All solutions SAT (AllSAT for short) is a variant of propositional satisfiability problem. Despite its significance, AllSAT has been relatively unexplored compared to other variants. We thus survey and discuss major techniques of AllSAT solvers. We faithfully implement them and conduct comprehensive experiments using a large number of instances and various types of solvers including one of the few public softwares. The experiments reveal solver's characteristics. Our implemented solvers are made publicly available so that other researchers can easily develop their solver by modifying our codes and compare it with existing methods.", "histories": [["v1", "Fri, 2 Oct 2015 08:32:59 GMT  (470kb,D)", "http://arxiv.org/abs/1510.00523v1", null]], "reviews": [], "SUBJECTS": "cs.DS cs.AI cs.LO", "authors": ["takahisa toda", "takehide soh"], "accepted": false, "id": "1510.00523"}, "pdf": {"name": "1510.00523.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": "1. Introduction", "text": "This year it is more than ever before."}, {"heading": "2. Related Work", "text": "Another variant of SAT is the dualization of Boolean functions: given a DNF formula of a Boolean function f, it consists in calculating the complete DNF formula of the double function fd. Since a CNF formula of fd can be easily obtained by replacing the logical disjunction with the logical conjunction and the constants 0 with 1, a major difference to AllSAT is that the resulting DNF formula must be complete. Dualization is well studied in terms of complexity [18] [15], while there does not seem to be a recent empirical study, with few exceptions [33] [11] [30] [54]. Practical algorithms for a limited form of dualization have been presented [53] [46] and some implementations are available2, although they are not suitable for arbitrary Boolean functions. Another variant is the problem of counting the number of altogether satisfactory assignments, which are called propositional problems, or counting the SAT component is well heritable."}, {"heading": "3. Preliminaries", "text": "It is as if it is a finite concatenation of clauses and a finite concatenation of terms and concepts. We identify clauses with sets of words and CNF formulas. The same applies to terms and DNFs. The dual of a Boolean function f is the function fd defined by fd (x1,. xn) = \u00ac f,."}, {"heading": "4. Techniques of All Solutions SAT Solvers", "text": "In order to implement an efficient AllSAT solution, we need to find an appropriate solution that takes into account various factors and their characteristics. (...) There is only a very limited number of approaches that are able to block and supplement the existing procedures. (...) There is only a very limited number of approaches that are able to block the existing procedures. (...) There is only a very limited number of approaches that are able to block the existing procedures and end with the configuration of our implemented solutions. (...) We have added an asterisk to the title of each specific technique that contains our original ideals. (...) The simplest way of implementing an AllSAT solution is to repeatedly run a proper SAT solution and find a satisfactory task. (...) A specific procedure is as follows. (...) A specific procedure follows an AllSAT solution with a CNAT solution. (...)"}, {"heading": "5. Experiments", "text": "All solutions are in C on top of MiniSat-C v1.14.1 [19]. Clasp 3.1.2 was taken from Potassco Project9. As far as we are aware, the formula J.1 [21], picosat [10], and relsat [6] are only SAT solutions that support the enumeration of all solutions. Among them, we have used Clasp for comparison because it has achieved better performance than picosat, and relsat does not support silent mode in solution generation and generated solutions that may be too large to be stored. All experiments were run at the 2.13GHz Xeon R \u00a9 E7-2830 level with 512GB of RAM, with Red Hat Enterprise Linux 6.3 running with gcc compiler version 4.7. In the execution of each AllSAT solution, limitations and memory limits were set at 600 seconds or 50GB, respectively."}, {"heading": "6. Conclusion", "text": "We examined and discussed the main techniques of existing AllSAT solvers. We classified the types of solvers into a blocking solver, a non-blocking solver and a formula BDD caching solver. We implemented and published these solvers publicly so that other researchers can easily develop their solvers by modifying our codes and comparing them with existing methods. We conducted extensive experiments with a total of 2,867 instances taken from SATLIB, the 2014 SAT competition and the ISCAS benchmarks. Apart from our implemented solvers, we used Staples, one of the few standard software with solution generation support. The experiments revealed the following solver properties (600 second time limit). See also the formula BDD caching solver is the most powerful. It has the most solved instances, including instances with more than a trillion solution. The maximum memory usage is several gigabytes."}], "references": [{"title": "Binary decision diagrams", "author": ["S.B. Akers"], "venue": "IEEE Trans. Comput.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1978}, {"title": "MINCE: A static global variable-ordering heuristic for SAT search and BDD manipulation", "author": ["Fadi A. Aloul", "Igor L. Markov", "Karem A. Sakallah"], "venue": "J. UCS,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2004}, {"title": "A constraint store based on multivalued decision diagrams", "author": ["H.R. Andersen", "T. Hadzic", "J.N. Hooker", "P. Tiedemann"], "venue": "In Christian Bessie\u0301re, editor, Principles and Practice of Constraint Programming,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Algorithms and complexity results for #sat and bayesian inference", "author": ["F. Bacchus", "S. Dalmao", "T. Pitassi"], "venue": "In Foundations of Computer Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2003}, {"title": "Counting models using connected components", "author": ["Roberto J. Bayardo", "J.D. Pehoushek"], "venue": "Proceedings of the AAAI National Conference,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2000}, {"title": "Using csp lookback techniques to solve real-world sat instances", "author": ["Roberto J. Bayardo", "Jr.", "Robert C. Schrag"], "venue": "In Proceedings of the Fourteenth National Conference on Artificial Intelligence and Ninth Conference on Innovative Applications of Artificial Intelligence,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1997}, {"title": "Formula caching in dpll", "author": ["Paul Beame", "Russell Impagliazzo", "Toniann Pitassi", "Nathan Segerlind"], "venue": "ACM Trans. Comput. Theory,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "Handbook of Satisfiability: Volume 185 Frontiers in Artificial Intelligence and Applications", "author": ["A. Biere", "M. Heule", "H. van Maaren", "T. Walsh"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Existential quantification as incremental sat", "author": ["Jrg Brauer", "Andy King", "Jael Kriener"], "venue": "Computer Aided Verification,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "Graph-based algorithms for boolean function manipulation", "author": ["R.E. Bryant"], "venue": "Computers, IEEE Transactions on,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1986}, {"title": "Conflict-directed backjumping revisited", "author": ["Xinguang Chen", "Peter van Beek"], "venue": "J. Artif. Int. Res.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2001}, {"title": "Predicate abstraction of ansi-c programs using sat", "author": ["Edmund Clarke", "Daniel Kroening", "Natasha Sharygina", "Karen Yorav"], "venue": "Formal Methods in System Design,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "Boolean Functions: Theory, Algorithms, and Applications. Encyclopedia of Mathematics and its Applications", "author": ["Y. Crama", "P.L. Hammer"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "New advances in compiling CNF into decomposable negation normal form", "author": ["Adnan Darwiche"], "venue": "In Proceedings of the 16th Eureopean Conference on Artificial Intelligence, ECAI\u20192004, including Prestigious Applicants of Intelligent Systems,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2004}, {"title": "Backjump-based backtracking for constraint satisfaction problems", "author": ["Rina Dechter", "Daniel Frost"], "venue": "Artificial Intelligence,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2002}, {"title": "Computational aspects of monotone dualization: A brief survey", "author": ["Thomas Eiter", "Kazuhisa Makino", "Georg Gottlob"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "An extensible sat-solver", "author": ["Niklas En", "Niklas Srensson"], "venue": "In Enrico Giunchiglia and Armando Tacchella, editors, Theory and Applications of Satisfiability Testing,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2004}, {"title": "Efficient sat-based unbounded symbolic model checking using circuit cofactoring", "author": ["M.K. Ganai", "A. Gupta", "P. Ashar"], "venue": "In Computer Aided Design,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2004}, {"title": "clasp: A conflict-driven answer set solver", "author": ["Martin Gebser", "Benjamin Kaufmann", "Andr\u00e9 Neumann", "Torsten Schaub"], "venue": "Logic Programming and Nonmonotonic Reasoning,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "Conflict-driven answer set enumeration", "author": ["Martin Gebser", "Benjamin Kaufmann", "Andr\u00e9 Neumann", "Torsten Schaub"], "venue": "Logic Programming and Nonmonotonic Reasoning,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2007}, {"title": "Memory efficient all-solutions sat solver and its application for reachability analysis", "author": ["Orna Grumberg", "Assaf Schuster", "Avi Yadgar"], "venue": "Formal Methods in Computer-Aided Design,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2004}, {"title": "Itemset mining: A constraint programming perspective", "author": ["Tias Guns", "Siegfried Nijssen", "Luc De Raedt"], "venue": "Artificial Intelligence,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1983}, {"title": "Sat-based image computation with application in reachability analysis", "author": ["Aarti Gupta", "Zijiang Yang", "Pranav Ashar", "Anubhav Gupta"], "venue": "Formal Methods in Computer-Aided Design, volume 1954 of Lecture Notes in Computer Science,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2000}, {"title": "Frequent pattern mining: current status and future directions", "author": ["Jiawei Han", "Hong Cheng", "Dong Xin", "Xifeng Yan"], "venue": "Data Mining and Knowledge Discovery,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2007}, {"title": "Using dpll for efficient obdd construction", "author": ["Jinbo Huang", "Adnan Darwiche"], "venue": "In HolgerH. Hoos and DavidG. Mitchell, editors, Theory and Applications of Satisfiability Testing,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2005}, {"title": "The language of search", "author": ["Jinbo Huang", "Adnan Darwiche"], "venue": "J. Artif. Intell. Res. (JAIR),", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2007}, {"title": "Extending modern SAT solvers for models enumeration", "author": ["S\u00e4\u0131d Jabbour", "Jerry Lonlac", "Lakhdar Sais", "Yakoub Salhi"], "venue": "In Proceedings of the 15th IEEE International Conference on Information Reuse and Integration,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2014}, {"title": "Enumerating prime implicants of propositional formulae in conjunctive normal form", "author": ["Said Jabbour", "Joao Marques-Silva", "Lakhdar Sais", "Yakoub Salhi"], "venue": "Logics in Artificial Intelligence,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "Boolean satisfiability for sequence mining", "author": ["Said Jabbour", "Lakhdar Sais", "Yakoub Salhi"], "venue": "In Proceedings of the 22Nd ACM International Conference on Conference on Information; Knowledge Management,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2013}, {"title": "Efficient conflict analysis for finding all satisfying assignments of a boolean circuit", "author": ["HoonSang Jin", "HyoJung Han", "Fabio Somenzi"], "venue": "Tools and Algorithms for the Construction and Analysis of Systems,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2005}, {"title": "Prime clauses for fast enumeration of satisfying assignments to boolean circuits", "author": ["HoonSang Jin", "Fabio Somenzi"], "venue": "In Proceedings of the 42Nd Annual Design Automation Conference,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2005}, {"title": "Sat-based unbounded symbolic model checking. Computer-Aided Design of Integrated Circuits and Systems", "author": ["Hyeong-Ju Kang", "In-Cheol Park"], "venue": "IEEE Transactions on,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2005}, {"title": "The Art of Computer Programming, Volume 4, Fascicle 1: Bitwise Tricks & Techniques", "author": ["Donald E. Knuth"], "venue": "Binary Decision Diagrams. Addison-Wesley Professional,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2009}, {"title": "Representation of switching circuits by binary-decision programs", "author": ["C.Y. Lee"], "venue": "Bell System Technical Journal,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 1959}, {"title": "A novel SAT allsolutions solver for efficient preimage computation", "author": ["Bin Li", "Michael S. Hsiao", "Shuo Sheng"], "venue": null, "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2004}, {"title": "Network verification in the light of program verification", "author": ["Nuno Lopes", "Nikolaj Bjorner", "Patrice Godefroid", "George Varghese"], "venue": "Technical report,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2013}, {"title": "Using caching to solve larger probabilistic planning problems", "author": ["Stephen M. Majercik", "Michael L. Littman"], "venue": "In Proceedings of the Fifteenth National Conference on Artificial Intelligence and Tenth Innovative Applications of Artificial Intelligence Conference,", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 1998}, {"title": "Boolean satisfiability from theoretical hardness to practical success", "author": ["Sharad Malik", "Lintao Zhang"], "venue": "Commun. ACM,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2009}, {"title": "On computing backbones of propositional theories", "author": ["Joao Marques-Silva", "Mikol\u00e1\u0161 Janota", "In\u00eas Lynce"], "venue": "In Proceedings of the 2010 Conference on ECAI 2010: 19th European Conference on Artificial Intelligence,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2010}, {"title": "Grasp: a search algorithm for propositional satisfiability", "author": ["J.P. Marques-Silva", "K.A. Sakallah"], "venue": "Computers, IEEE Transactions on,", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 1999}, {"title": "Applying sat methods in unbounded symbolic model checking", "author": ["KenL. McMillan"], "venue": "In Ed Brinksma and KimGuldstrand Larsen, editors, Computer Aided Verification,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2002}, {"title": "Good learning and implicit model enumeration", "author": ["A. Morgado", "J. Marques-Silva"], "venue": "In Tools with Artificial Intelligence,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2005}, {"title": "A compressed breadth-first search for satisfiability", "author": ["DoRonB. Motter", "IgorL. Markov"], "venue": "In DavidM. Mount and Clifford Stein, editors, Algorithm Engineering and Experiments,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2002}, {"title": "Efficient algorithms for dualizing large-scale hypergraphs", "author": ["Keisuke Murakami", "Takeaki Uno"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2014}, {"title": "A lightweight component caching scheme for satisfiability solvers", "author": ["Knot Pipatsrisawat", "Adnan Darwiche"], "venue": "In Theory and Applications of Satisfiability Testing - SAT 2007,", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2007}, {"title": "Hybrid algorithms for the constraint satisfaction problem", "author": ["Patrick Prosser"], "venue": "Computational Intelligence,", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 1993}, {"title": "Applying formal methods to networking: Theory, techniques, and applications", "author": ["J. Qadir", "O. Hasan"], "venue": "Communications Surveys Tutorials,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2015}, {"title": "Minimal assignments for bounded model checking", "author": ["Kavita Ravi", "Fabio Somenzi"], "venue": "Tools and Algorithms for the Construction and Analysis of Systems,", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2004}, {"title": "Efficient preimage computation using a novel success-driven atpg", "author": ["Shuo Sheng", "Michael Hsiao"], "venue": "In Proceedings of the Conference on Design, Automation and Test in Europe - Volume 1,", "citeRegEx": "51", "shortCiteRegEx": "51", "year": 2003}, {"title": "sharpsat counting models with advanced component caching and implicit bcp", "author": ["Marc Thurley"], "venue": "In Armin Biere and CarlaP. Gomes, editors, Theory and Applications of Satisfiability Testing - SAT 2006,", "citeRegEx": "52", "shortCiteRegEx": "52", "year": 2006}, {"title": "Hypergraph transversal computation with binary decision diagrams", "author": ["Takahisa Toda"], "venue": "Experimental Algorithms,", "citeRegEx": "53", "shortCiteRegEx": "53", "year": 2013}, {"title": "Dualization of boolean functions using ternary decision diagrams", "author": ["Takahisa Toda"], "venue": "In International Symposium on Artificial Intelligence and Mathematics, ISAIM", "citeRegEx": "54", "shortCiteRegEx": "54", "year": 2014}, {"title": "Bdd construction for all solutions sat and efficient caching mechanism", "author": ["Takahisa Toda", "Koji Tsuda"], "venue": "In Proceedings of the 30th Annual ACM Symposium on Applied Computing,", "citeRegEx": "55", "shortCiteRegEx": "55", "year": 2015}, {"title": "Handbook of Knowledge Representation", "author": ["Frank van Harmelen", "Vladimir Lifschitz", "Bruce Porter"], "venue": "Elsevier Science, San Diego, USA,", "citeRegEx": "56", "shortCiteRegEx": "56", "year": 2007}, {"title": "Allsat using minimal blocking clauses", "author": ["Yinlei Yu", "P. Subramanyan", "N. Tsiskaridze", "S. Malik"], "venue": "In VLSI Design and 2014 13th International Conference on Embedded Systems,", "citeRegEx": "57", "shortCiteRegEx": "57", "year": 2014}, {"title": "Verification of computer switching networks: An overview", "author": ["Shuyuan Zhang", "Sharad Malik", "Rick McGeer"], "venue": "(T. Toda) Graduate School of Information Systems, University of Electro-Communications,", "citeRegEx": "58", "shortCiteRegEx": "58", "year": 2012}], "referenceMentions": [{"referenceID": 53, "context": "practical algorithms and elegant implementation techniques have been developed [56] [9] [40].", "startOffset": 79, "endOffset": 83}, {"referenceID": 7, "context": "practical algorithms and elegant implementation techniques have been developed [56] [9] [40].", "startOffset": 84, "endOffset": 87}, {"referenceID": 37, "context": "practical algorithms and elegant implementation techniques have been developed [56] [9] [40].", "startOffset": 88, "endOffset": 92}, {"referenceID": 26, "context": "This is mentioned in the literature [29] and also supported by the fact that there are only a few recent papers, almost no software is publicly available, and it has not even been taken up in major handbooks related to satisfiability.", "startOffset": 36, "endOffset": 40}, {"referenceID": 23, "context": "A fundamental task in data mining is to generate all interesting patterns from a given database [26].", "startOffset": 96, "endOffset": 100}, {"referenceID": 18, "context": "1A few exceptions are clasp [21], picosat [10], and relsat [6].", "startOffset": 28, "endOffset": 32}, {"referenceID": 5, "context": "1A few exceptions are clasp [21], picosat [10], and relsat [6].", "startOffset": 59, "endOffset": 62}, {"referenceID": 21, "context": "For this reason, a framework based on declarative paradigm has recently been proposed [24].", "startOffset": 86, "endOffset": 90}, {"referenceID": 28, "context": "Among much related work, an approach on which problems are encoded into CNF formulae and solved with AllSAT solvers has been studied [31].", "startOffset": 133, "endOffset": 137}, {"referenceID": 55, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 151, "endOffset": 155}, {"referenceID": 35, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 156, "endOffset": 160}, {"referenceID": 46, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 161, "endOffset": 165}, {"referenceID": 11, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 189, "endOffset": 193}, {"referenceID": 38, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 216, "endOffset": 220}, {"referenceID": 22, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 281, "endOffset": 285}, {"referenceID": 40, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 286, "endOffset": 290}, {"referenceID": 48, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 291, "endOffset": 295}, {"referenceID": 34, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 296, "endOffset": 300}, {"referenceID": 17, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 301, "endOffset": 305}, {"referenceID": 20, "context": "Besides the data mining, there have been many studies on the application of ALLSAT, in particular to formal verification, such as network verification [58] [38] [49], predicate abstraction [14], backbone computation [41], image and preimage computation in unbounded model checking [25] [43] [51] [37] [20] [23].", "startOffset": 306, "endOffset": 310}, {"referenceID": 15, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 57, "endOffset": 61}, {"referenceID": 12, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 62, "endOffset": 66}, {"referenceID": 30, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 134, "endOffset": 138}, {"referenceID": 8, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 139, "endOffset": 143}, {"referenceID": 27, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 144, "endOffset": 148}, {"referenceID": 51, "context": "Dualization has been well-studied in terms of complexity [18] [15], while there seems no recent empirical study with a few exceptions [33] [11] [30] [54].", "startOffset": 149, "endOffset": 153}, {"referenceID": 50, "context": "Practical algorithms for a restricted form of dualization have been presented [53] [46] and some implementations are available, though they are not for arbitrary Boolean functions.", "startOffset": 78, "endOffset": 82}, {"referenceID": 43, "context": "Practical algorithms for a restricted form of dualization have been presented [53] [46] and some implementations are available, though they are not for arbitrary Boolean functions.", "startOffset": 83, "endOffset": 87}, {"referenceID": 7, "context": "It has been well-studied because of good applications such as probabilistic inference problems and hard combinatorial problems, and some solvers are available [9].", "startOffset": 159, "endOffset": 162}, {"referenceID": 41, "context": "Although #SAT is apparently similar to AllSAT, techniques such as connected components and component caching are inherent in counting, and they are not applicable to AllSAT as is [44].", "startOffset": 179, "endOffset": 183}, {"referenceID": 53, "context": "See for details [56] and [9].", "startOffset": 16, "endOffset": 20}, {"referenceID": 7, "context": "See for details [56] and [9].", "startOffset": 25, "endOffset": 28}, {"referenceID": 33, "context": "A binary decision diagram (BDD for short) is a graphical representation of Boolean functions in a compressed form [36] [1] [12].", "startOffset": 114, "endOffset": 118}, {"referenceID": 0, "context": "A binary decision diagram (BDD for short) is a graphical representation of Boolean functions in a compressed form [36] [1] [12].", "startOffset": 119, "endOffset": 122}, {"referenceID": 9, "context": "A binary decision diagram (BDD for short) is a graphical representation of Boolean functions in a compressed form [36] [1] [12].", "startOffset": 123, "endOffset": 127}, {"referenceID": 32, "context": "We follow the notation and terminology in Knuth\u2019s book [35].", "startOffset": 55, "endOffset": 59}, {"referenceID": 40, "context": "The clause obtained at Step 4 is called a blocking clause [43].", "startOffset": 58, "endOffset": 62}, {"referenceID": 47, "context": "Variable lifting refers to a number of such simplification techniques [50].", "startOffset": 70, "endOffset": 74}, {"referenceID": 41, "context": "Since this topic is well-summarized in the literature [44], we do not go into details.", "startOffset": 54, "endOffset": 58}, {"referenceID": 54, "context": "For recent results, see also the literature [57].", "startOffset": 44, "endOffset": 48}, {"referenceID": 29, "context": "It is not straightforward to answer how to continue search [32].", "startOffset": 59, "endOffset": 63}, {"referenceID": 44, "context": "The problem of over-canceling due to backtracking was addressed [47], and a simple technique, called progress saving, that stores recent canceled decisions in an array and simulates them after backtracking was proposed.", "startOffset": 64, "endOffset": 68}, {"referenceID": 41, "context": "For a simplification technique, we used a method related to set covering model [44] and decision-based minimal satisfying cube [57].", "startOffset": 79, "endOffset": 83}, {"referenceID": 54, "context": "For a simplification technique, we used a method related to set covering model [44] and decision-based minimal satisfying cube [57].", "startOffset": 127, "endOffset": 131}, {"referenceID": 20, "context": "introduced the notion of sublevels and presented a sublevel-based first UIP scheme that is compatible with non-blocking approach [23].", "startOffset": 129, "endOffset": 133}, {"referenceID": 20, "context": "augmented non-blocking approach with conflict resolution by means of a restricted non-chronological backtracking [23].", "startOffset": 113, "endOffset": 117}, {"referenceID": 45, "context": "CBJ has been studied as one of tree search algorithms for constraint satisfaction problem [48] [13] [17].", "startOffset": 90, "endOffset": 94}, {"referenceID": 10, "context": "CBJ has been studied as one of tree search algorithms for constraint satisfaction problem [48] [13] [17].", "startOffset": 95, "endOffset": 99}, {"referenceID": 14, "context": "CBJ has been studied as one of tree search algorithms for constraint satisfaction problem [48] [13] [17].", "startOffset": 100, "endOffset": 104}, {"referenceID": 20, "context": "A pseudo code is given in Algorithm 5, which is almost faithfully rephrased in our setting from the code given in the literature [23].", "startOffset": 129, "endOffset": 133}, {"referenceID": 19, "context": "To our knowledge, this method was first presented by [22], though it was in the context of answer set programming.", "startOffset": 53, "endOffset": 57}, {"referenceID": 19, "context": "6It is mentioned [22] that a combination of conflict-directed backjumping and", "startOffset": 17, "endOffset": 21}, {"referenceID": 6, "context": "Formula caching refers to a number of techniques to memorize formulae to avoid recomputation of subproblems [7].", "startOffset": 108, "endOffset": 111}, {"referenceID": 36, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 63, "endOffset": 67}, {"referenceID": 5, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 93, "endOffset": 96}, {"referenceID": 39, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 97, "endOffset": 101}, {"referenceID": 4, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 148, "endOffset": 151}, {"referenceID": 3, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 152, "endOffset": 155}, {"referenceID": 40, "context": "Examples include a caching technique in probabilistic planning [39], conflict clauses in SAT [6] [42], component caching and other cachings in #SAT [5] [4], and blocking clauses in AllSAT [43].", "startOffset": 188, "endOffset": 192}, {"referenceID": 25, "context": "Another type of formula caching in which formulae are associated with propositional languages such as FBDD, OBDD, and a subset of d-DNNF has been studied in the context of knowledge compilation [28].", "startOffset": 194, "endOffset": 198}, {"referenceID": 52, "context": "An application to an AllSAT solver itself was more explicitly mentioned in the literature [55] and a compiler-based AllSAT solver is released.", "startOffset": 90, "endOffset": 94}, {"referenceID": 48, "context": "Similar caching techniques appear in other areas such as preimage computation in unbounded model checking [51] [37] [34], satisfiability [45], and discrete optimization [3] [8].", "startOffset": 106, "endOffset": 110}, {"referenceID": 34, "context": "Similar caching techniques appear in other areas such as preimage computation in unbounded model checking [51] [37] [34], satisfiability [45], and discrete optimization [3] [8].", "startOffset": 111, "endOffset": 115}, {"referenceID": 31, "context": "Similar caching techniques appear in other areas such as preimage computation in unbounded model checking [51] [37] [34], satisfiability [45], and discrete optimization [3] [8].", "startOffset": 116, "endOffset": 120}, {"referenceID": 42, "context": "Similar caching techniques appear in other areas such as preimage computation in unbounded model checking [51] [37] [34], satisfiability [45], and discrete optimization [3] [8].", "startOffset": 137, "endOffset": 141}, {"referenceID": 2, "context": "Similar caching techniques appear in other areas such as preimage computation in unbounded model checking [51] [37] [34], satisfiability [45], and discrete optimization [3] [8].", "startOffset": 169, "endOffset": 172}, {"referenceID": 24, "context": "work [27] [55].", "startOffset": 5, "endOffset": 9}, {"referenceID": 52, "context": "work [27] [55].", "startOffset": 10, "endOffset": 14}, {"referenceID": 24, "context": "Examples of formula-BDD cachings include those induced by cutsets and separators [27], defined below, and a variant of cutsets [55].", "startOffset": 81, "endOffset": 85}, {"referenceID": 52, "context": "Examples of formula-BDD cachings include those induced by cutsets and separators [27], defined below, and a variant of cutsets [55].", "startOffset": 127, "endOffset": 131}, {"referenceID": 24, "context": "See [27].", "startOffset": 4, "endOffset": 8}, {"referenceID": 16, "context": "1 [19].", "startOffset": 2, "endOffset": 6}, {"referenceID": 18, "context": "As far as we are aware, clasp [21], picosat [10], and relsat [6] are only SAT solvers which support the enumeration of all solutions.", "startOffset": 30, "endOffset": 34}, {"referenceID": 5, "context": "As far as we are aware, clasp [21], picosat [10], and relsat [6] are only SAT solvers which support the enumeration of all solutions.", "startOffset": 61, "endOffset": 64}, {"referenceID": 1, "context": "0 [2] to decide a static variable order before the execution of formula-BDD caching solvers.", "startOffset": 2, "endOffset": 5}, {"referenceID": 49, "context": "1 [52], c2d version 2.", "startOffset": 2, "endOffset": 6}, {"referenceID": 13, "context": "20 [16] and relsat version 2.", "startOffset": 3, "endOffset": 7}, {"referenceID": 5, "context": "20 [6], to check the performance of our developed ALLSAT solvers for #SAT.", "startOffset": 3, "endOffset": 6}], "year": 2015, "abstractText": "All solutions SAT (AllSAT for short) is a variant of propositional satisfiability problem. Despite its significance, AllSAT has been relatively unexplored compared to other variants. We thus survey and discuss major techniques of AllSAT solvers. We faithfully implement them and conduct comprehensive experiments using a large number of instances and various types of solvers including one of the few public softwares. The experiments reveal solver\u2019s characteristics. Our implemented solvers are made publicly available so that other researchers can easily develop their solver by modifying our codes and compare it with existing methods.", "creator": "LaTeX with hyperref package"}}}