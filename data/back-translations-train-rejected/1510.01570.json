{"id": "1510.01570", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Oct-2015", "title": "Analyzer and generator for Pali", "abstract": "This work describes a system that performs morphological analysis and generation of Pali words. The system works with regular inflectional paradigms and a lexical database. The generator is used to build a collection of inflected and derived words, which in turn is used by the analyzer. Generating and storing morphological forms along with the corresponding morphological information allows for efficient and simple look up by the analyzer. Indeed, by looking up a word and extracting the attached morphological information, the analyzer does not have to compute this information. As we must, however, assume the lexical database to be incomplete, the system can also work without the dictionary component, using a rule-based approach.", "histories": [["v1", "Tue, 6 Oct 2015 13:33:46 GMT  (1185kb)", "http://arxiv.org/abs/1510.01570v1", "Bachelor Thesis"]], "COMMENTS": "Bachelor Thesis", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["david alfter"], "accepted": false, "id": "1510.01570"}, "pdf": {"name": "1510.01570.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Reinhard K\u00f6hler"], "emails": ["s2daalft@uni-trier.de"], "sections": [{"heading": null, "text": "This paper describes a system that performs a morphological analysis and the generation of Pali words. It works with regular reflection paradigms and a lexical database. The generator is used to build a collection of curved and derived words, which in turn are used by the analyzer. Generating and storing morphological forms together with the corresponding morphological information enables an efficient and easy lookup by the analyzer. In fact, the system can also function without the word component, using a rules-based concept."}, {"heading": "In contrast with Nov\u00e1k\u2019s terminology, the lemmatizer\u2019s function is to return the lemma", "text": "It is not as if it is a matter of the way in which the results of the analysis are derived from the way in which this method is used from the analysis to the lemmatization of the lemmatization function in the offline context. The lemmatize function in the offline context is then strongly derived from the morphological information and word class of the results and returns this information. In contrast, the lemmatize results in the online context are looked up in the word forms of the generated word forms. As each of these entries contains the problem from which it was derived, the word class of the word can simply be retrieved."}, {"heading": "1 RULE 1", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3 RULE 2", "text": "The fact is that most people who work for people's rights are working for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for people's rights, for"}, {"heading": "In the console:", "text": "If you have enabled a mode other than the analyzer, typechmodto returns to the mode selection.TypelemmaType a word, for example: buddhassaYou will get a list of possible lemmas. You can also specify the word class of a word by appending it to the word, using a colon as a delimiter: buddhassa: noun"}, {"heading": "In the GUI:", "text": "Enter one or more words in the input field. Multiple words should be separated by spaces. Click the Lemmatize button. You will get a list of possible lemmas. You can also specify the word class of the word (words) by appending it to the word (words) using a colon as a delimiter. 336. Stemmer"}, {"heading": "In the console:", "text": "If you have enabled a mode other than the Stemmer, return to the mode selection with typechmodto. TypestemType a word, for example: gavenaYou get the stem. You can also specify the word class of a word by appending it to the word, using a colon as a delimiter."}, {"heading": "In the GUI:", "text": "Enter one or more words in the input field. Multiple words should be separated by spaces. Click the Trunk button. You will get the stem. You can also specify the word class of the word (words) by appending it to the word (words) using a colon as a delimiter."}, {"heading": "In the console:", "text": "If you have enabled a mode other than the Analyzer, use typechmodto to return to the mode selection.Type in a word, for example: gavena34You will get a list of possible analyses."}, {"heading": "In the GUI:", "text": "Enter one or more words in the input field. Multiple words should be separated by spaces. Click the Analyze button. You can get possible analyses. You can also specify the word class of the word (s) by appending it to the word (s) using a colon as a delimiter.8. GeneratorPlease note that generating word forms can take some time."}, {"heading": "In the console:", "text": "If you have enabled a mode other than the generator, use typechmodto to return to the mode selection.Type in a word, for example: goYou will get a list of morphological shapes."}, {"heading": "In the GUI:", "text": "Enter one or more words in the input field. Multiple words should be separated by spaces. Click the Generate button. You will get a list of morphological shapes. You can also specify the word class of the word (words) by appending it to the word (words) using a colon as a delimiter. Sandhi9.4. SplittingPlease note that splitting may take some time."}, {"heading": "In the console:", "text": "If you have enabled a mode other than Sandhi Splitter, typechmodto returns to the mode selection.TypesType a word, for example: sakidevaYou will get a list of possible splits."}, {"heading": "In the GUI:", "text": "Enter one or more words in the input field. Multiple words should be separated by spaces. Click the Columns button. You will get a list of possible splits. You can also specify the word class of the word (words) by appending it to the word (words) using a colon as a delimiter."}, {"heading": "In the console:", "text": "If you have enabled a mode other than Sandhi Merger, typechmodto returns to the mode selection.TypesmEnter two or more words separated by spaces, for example: 36saki evaYou will get a list of possible merges. Please note that it is not possible to specify word classes when using Sandhi Merger."}, {"heading": "In the GUI:", "text}], "references": [], "referenceMentions": [], "year": 2014, "abstractText": "This work describes a system that performs morphological analysis and generation of Pali words. The system works with regular inflectional paradigms and a lexical database. The generator is used to build a collection of inflected and derived words, which in turn is used by the analyzer. Generating and storing morphological forms along with the corresponding morphological information allows for efficient and simple look up by the analyzer. Indeed, by looking up a word and extracting the attached morphological information, the analyzer does not have to compute this information. As we must, however, assume the lexical database to be incomplete, the system can also work without the dictionary component, using a rule-based approach.", "creator": "Microsoft\u00ae Word 2010"}}}