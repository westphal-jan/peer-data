{"id": "1510.04183", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Oct-2015", "title": "Mathematical Foundations for Designing and Development of Intelligent Systems of Information Analysis", "abstract": "This article is an attempt to combine different ways of working with sets of objects and their classes for designing and development of artificial intelligent systems (AIS) of analysis information, using object-oriented programming (OOP). This paper contains analysis of basic concepts of OOP and their relation with set theory and artificial intelligence (AI). Process of sets and multisets creation from different sides, in particular mathematical set theory, OOP and AI is considered. Definition of object and its properties, homogeneous and inhomogeneous classes of objects, set of objects, multiset of objects and constructive methods of their creation and classification are proposed. In addition, necessity of some extension of existing OOP tools for the purpose of practical implementation AIS of analysis information, using proposed approach, is shown.", "histories": [["v1", "Wed, 14 Oct 2015 16:09:43 GMT  (474kb)", "http://arxiv.org/abs/1510.04183v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["d o terletskyi", "o i provotar"], "accepted": false, "id": "1510.04183"}, "pdf": {"name": "1510.04183.pdf", "metadata": {"source": "CRF", "title": "MATHEMATICAL FOUNDATIONS FOR DESIGNING AND DEVELOPMENT OF INTELLIGENT SYSTEMS OF INFORMATION ANALYSIS", "authors": ["D.O. Terletskyi", "O.I. Provotar", "Taras Shevchenko"], "emails": ["dmytro.terletskyi@gmail.com,", "aprowata@unicyb.kiev.ua"], "sections": [{"heading": null, "text": "UDC 510.2: 004.8"}, {"heading": "MATHEMATICAL FOUNDATIONS FOR DESIGNING AND DEVELOPMENT OF INTELLIGENT SYSTEMS OF INFORMATION ANALYSIS", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "D.O. Terletskyi1, O.I. Provotar2", "text": "This article is an attempt to combine different types of work with objects and their classes for designing and developing intelligent systems (AIS) of analytical information using object-oriented programming (OOP).This paper contains basic concepts of OOP and its relationship to set theory and artificial intelligence (AI).The process of creating sets and multisets from different pages, in particular mathematical set theory, is considered to be the definition of objects and their relationship to set theory (AI)."}, {"heading": "Introduction", "text": "Object-oriented programming (OOP) is then one of the famous and useful programming paradigms of today. Indeed, according to [1-3], the most popular programming languages are such languages as OOP. However, as we know, object and class are the most important concepts of OOP. Each object is defined by two concepts: attributes and behaviors are properties of objects that describe it, and behaviors are procedures that we can apply to that object, they are blueprints that we use as the basis for objects that are built. Each object is defined by two concepts: attributes and behaviors."}, {"heading": "Objects and Classes", "text": "In fact, he says, it is only a matter of time before an agreement is reached. \"It is a matter of time before we reach an agreement,\" he says. \"It is only a matter of time before we reach an agreement,\" he says."}, {"heading": "Universal Operation on Objects and Runtime Class Generation", "text": "In fact, it is that we are able to assert ourselves, that we are able, that we are able to achieve our goals, and that we are able to achieve our goals."}, {"heading": "Sets of Objects and Inhomogeneous Classes", "text": "There are a few ways to create a set of objects. First, we can achieve a set of objects with Union properties to use no less than two arbitrary objects. Second, we can do it with the help of a set of objects."}, {"heading": "Conclusions", "text": "In this paper, we analyzed such basic concepts of OOP as object and class and their relationship to set theory and AI. Accordingly, definitions of the object and its properties, homogeneous and inhomogeneous classes of objects were proposed. We defined such operations on objects as unification, intersection, difference, symmetric difference and cloning. We also looked at the process of runtime class generation and showed that intersection, difference, symmetrical difference of objects are examples of class generators.The proposed approach not only allows the generation of sets and multisets from different sides, in particular mathematical set theory, OOP and AI, but also proposes a constructive definition of objects, multisets of objects and methods of their creation. Furthermore, the relationship between object sets and object classes was demonstrated."}], "references": [{"title": "The Object-Oriented Thought Process", "author": ["M. Weisfeld"], "venue": "Third Edition. Addison-Wesley Professional,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "OOP \u2013 Learn Object Oriented Thinking and Programming", "author": ["R. Pecinovsk\u00fd"], "venue": "Tom\u00e1\u0161 Bruckner, \u0158ep\u00edn-\u017divon\u00edn,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Artificial intelligence: The Heuristic Programming Approach", "author": ["J.R. Slagle"], "venue": "McGRAW-HILL Book Company,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1971}, {"title": "Artificial intelligence illuminated", "author": ["B. Coppin"], "venue": "Jones and Bartlett Publishers, Inc.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "Artificial Intelligence and Soft Computing", "author": ["A. Konar"], "venue": "Behavioral and Cognitive Modeling of the Human Brain. CRC Press LLC,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2000}, {"title": "Encyclopedia of Artificial Intelligence", "author": ["J.R. Rabunal", "J. Dorado", "A. Pazos"], "venue": "Information Science Reference,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Artificial Intelligence", "author": ["G. F Luger"], "venue": "Structures and Strategies for Complex Problem Solving: 6-th edition. Addison-Wesley,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2008}, {"title": "Artificial Intelligence: A Systems Approach", "author": ["M.T. Jones"], "venue": "Infinity Science Press LLC,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2008}, {"title": "Universal Artificial Intelligence and Expert Systems", "author": ["V.N. Ruchkin", "V.A. Fulin"], "venue": "St. Petersburg: \"BHV-Petersburg\",", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Essentials of artificial intelligence", "author": ["M. Ginsberg"], "venue": "Morgan Kaufmann Publishers, Inc.,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1993}, {"title": "Contributions to the Founding of the Theory of Transfinite Numbers", "author": ["G. Cantor"], "venue": "New York: Dover Publications, Inc.,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1915}, {"title": "Les Systemes Axiomatiques de la Theorie des Ensembles", "author": ["H. Wang", "R.M. Naughton"], "venue": "Paris: Gauthier-Villars,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1953}, {"title": "Mathematics in the alternative set theory", "author": ["P. Vopenka"], "venue": "Leipzig: BSB B.G. Teubner,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1979}, {"title": "Fuzzy sets", "author": ["L.A. Zadeh"], "venue": "Information and control. N 8,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1965}, {"title": "The C++ Programming Language: Special Edition", "author": ["B. Stroustrup"], "venue": "Addison-Wesley Professional,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2000}, {"title": "Thinking in Java: 4-th Edition", "author": ["B. Eckel"], "venue": "Prentice Hall,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2006}, {"title": "Lectures on general algebra: Second Edition", "author": ["A.G. Kurosh"], "venue": "Moscow: Nauka,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1973}, {"title": "Algebraic Aspects of Information Technology", "author": ["I.V. Serhienko", "S.L. Kryvyi", "O.I. Provotar"], "venue": "Kyiv: Naukova Dumka,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "Sets, Logic and Axiomatic Theories: 2-nd edition", "author": ["R.R. Stoll"], "venue": "W.H. Freeman & Co Ltd.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1975}, {"title": "STL Tutorial and Reference Guide: 2-nd edition", "author": ["D.R. Musser", "G.J. Derge", "A. Saini"], "venue": "C++ Programming with the Standard Template Library, Addison-Wesley Professional,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2001}, {"title": "NET 4.0 Generics: Beginner\u2019s Guide", "author": ["S. Mukherjee"], "venue": "Packt Publishing Ltd", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "Programming in Python 3", "author": ["M. Summerfield"], "venue": "A Complete Introduction to the Python Language: 2-nd edition. Pearson Education, Inc.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "Denumerations of rooted trees and multisets", "author": ["N.D. Bruijn"], "venue": "Discrete Applied Mathematics, vol. 6, no. 1, pp. 25-33,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1983}, {"title": "Mathematics of multisets, in Proceedings of the Workshop on Multiset Processing: Multiset Processing, Mathematical, Computer Science, and Molecular Computing Points of View\u201d, p", "author": ["A. Syropoulos"], "venue": "347-358, Springer-Verlag Berlin Heidelberg,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2001}, {"title": "Spaces of sets and multisets", "author": ["A. Petrovskyi"], "venue": "M.: Editorial URSS,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "According to [4], objects are the building blocks of an object-oriented program.", "startOffset": 13, "endOffset": 16}, {"referenceID": 1, "context": "According to [5], real world is created by objects, and OOP is the approach for description and simulation of this world or some his particular parts.", "startOffset": 13, "endOffset": 16}, {"referenceID": 2, "context": "Nowadays very often development of AIS is reduced to heuristic programming [6].", "startOffset": 75, "endOffset": 78}, {"referenceID": 3, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 4, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 5, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 6, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 7, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 8, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 53, "endOffset": 59}, {"referenceID": 5, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 79, "endOffset": 85}, {"referenceID": 6, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 79, "endOffset": 85}, {"referenceID": 7, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 79, "endOffset": 85}, {"referenceID": 8, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 79, "endOffset": 85}, {"referenceID": 9, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 79, "endOffset": 85}, {"referenceID": 4, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 99, "endOffset": 105}, {"referenceID": 5, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 99, "endOffset": 105}, {"referenceID": 6, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 99, "endOffset": 105}, {"referenceID": 4, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 129, "endOffset": 136}, {"referenceID": 6, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 129, "endOffset": 136}, {"referenceID": 3, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 166, "endOffset": 169}, {"referenceID": 4, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 182, "endOffset": 185}, {"referenceID": 5, "context": "The most famous and common are Semantic Nets, Frames [7-13] and Logical Models [9-14] also Scripts [8-10], Conceptual Dependency [8, 10], Search Spaces, Search Trees [7], Petri Nets [8], K-Lines, Memory Organization Packets [9], Semantic WEB, Computational", "startOffset": 224, "endOffset": 227}, {"referenceID": 7, "context": "234 Knowledge Discovery [11] are known.", "startOffset": 24, "endOffset": 28}, {"referenceID": 6, "context": "Furthermore, there are a few hybrid models of KR, in particular Brooks\u2019 Subsumption Architecture and Copycat [10].", "startOffset": 109, "endOffset": 113}, {"referenceID": 10, "context": "However, questions about the origin of specific sets are emerging while analyzing the definition of this term, which is given in [15].", "startOffset": 129, "endOffset": 133}, {"referenceID": 11, "context": "We can conclude that the \u201cnew\u201d set can be obtained by set-theoretic operations over \u201cexisting\u201d sets, analyzing the different systems of set theory [16, 17], and it is really so.", "startOffset": 147, "endOffset": 155}, {"referenceID": 12, "context": "We can conclude that the \u201cnew\u201d set can be obtained by set-theoretic operations over \u201cexisting\u201d sets, analyzing the different systems of set theory [16, 17], and it is really so.", "startOffset": 147, "endOffset": 155}, {"referenceID": 0, "context": "Usually in OOP [4, 5], we can consider properties of objects separately from objects.", "startOffset": 15, "endOffset": 21}, {"referenceID": 1, "context": "Usually in OOP [4, 5], we can consider properties of objects separately from objects.", "startOffset": 15, "endOffset": 21}, {"referenceID": 13, "context": "concept [18].", "startOffset": 8, "endOffset": 12}, {"referenceID": 0, "context": "In OOP [4, 5, 19, 20], programmers operate with specifications and methods of objects without objects, and they call it a type or a class of object.", "startOffset": 7, "endOffset": 21}, {"referenceID": 1, "context": "In OOP [4, 5, 19, 20], programmers operate with specifications and methods of objects without objects, and they call it a type or a class of object.", "startOffset": 7, "endOffset": 21}, {"referenceID": 14, "context": "In OOP [4, 5, 19, 20], programmers operate with specifications and methods of objects without objects, and they call it a type or a class of object.", "startOffset": 7, "endOffset": 21}, {"referenceID": 15, "context": "In OOP [4, 5, 19, 20], programmers operate with specifications and methods of objects without objects, and they call it a type or a class of object.", "startOffset": 7, "endOffset": 21}, {"referenceID": 16, "context": "Concept of OO class is similar to universal algebra [21, 22], where carrier of algebra consists of objects and signature consists of methods of objects.", "startOffset": 52, "endOffset": 60}, {"referenceID": 17, "context": "Concept of OO class is similar to universal algebra [21, 22], where carrier of algebra consists of objects and signature consists of methods of objects.", "startOffset": 52, "endOffset": 60}, {"referenceID": 4, "context": "This operation is similar to concept of copy constructor in C++ [8], and is an example of constructor of objects.", "startOffset": 64, "endOffset": 67}, {"referenceID": 18, "context": "As we can see, the majority of operations on objects that defined above are similar to set-theoretic operations in classical set theory [23].", "startOffset": 136, "endOffset": 140}, {"referenceID": 18, "context": "As we know, scheme 2 S is defined in classical set theory, and this operation is known as a union of sets [23].", "startOffset": 106, "endOffset": 110}, {"referenceID": 22, "context": "As we know, a multiset is a generalization of the notion of set in which members are allowed to appear more than once [29-31].", "startOffset": 118, "endOffset": 125}, {"referenceID": 23, "context": "As we know, a multiset is a generalization of the notion of set in which members are allowed to appear more than once [29-31].", "startOffset": 118, "endOffset": 125}, {"referenceID": 24, "context": "As we know, a multiset is a generalization of the notion of set in which members are allowed to appear more than once [29-31].", "startOffset": 118, "endOffset": 125}, {"referenceID": 19, "context": "Nowadays, there are a few different implementations of tools for working with sets within some OOP-languages, in particular set in STL for C++ [26], HashSet in Java [20], HashSet, SortedSet and ISet in C# [27], set and frozenset in Python [28].", "startOffset": 143, "endOffset": 147}, {"referenceID": 15, "context": "Nowadays, there are a few different implementations of tools for working with sets within some OOP-languages, in particular set in STL for C++ [26], HashSet in Java [20], HashSet, SortedSet and ISet in C# [27], set and frozenset in Python [28].", "startOffset": 165, "endOffset": 169}, {"referenceID": 20, "context": "Nowadays, there are a few different implementations of tools for working with sets within some OOP-languages, in particular set in STL for C++ [26], HashSet in Java [20], HashSet, SortedSet and ISet in C# [27], set and frozenset in Python [28].", "startOffset": 205, "endOffset": 209}, {"referenceID": 21, "context": "Nowadays, there are a few different implementations of tools for working with sets within some OOP-languages, in particular set in STL for C++ [26], HashSet in Java [20], HashSet, SortedSet and ISet in C# [27], set and frozenset in Python [28].", "startOffset": 239, "endOffset": 243}], "year": 2015, "abstractText": "This article is an attempt to combine different ways of working with sets of objects and their classes for designing and development of artificial intelligent systems (AIS) of analysis information, using object-oriented programming (OOP). This paper contains analysis of basic concepts of OOP and their relation with set theory and artificial intelligence (AI). Process of sets and multisets creation from different sides, in particular mathematical set theory, OOP and AI is considered. Definition of object and its properties, homogeneous and inhomogeneous classes of objects, set of objects, multiset of objects and constructive methods of their creation and classification are proposed. In addition, necessity of some extension of existing OOP tools for the purpose of practical implementation AIS of analysis information, using proposed approach, is shown.", "creator": "Microsoft\u00ae Word 2013"}}}