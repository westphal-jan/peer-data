{"id": "1510.04206", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Oct-2015", "title": "Exploiters-Based Knowledge Extraction in Object-Oriented Knowledge Representation", "abstract": "This paper contains the consideration of knowledge extraction mechanisms of such object-oriented knowledge representation models as frames, object-oriented programming and object-oriented dynamic networks. In addition, conception of universal exploiters within object-oriented dynamic networks is also discussed. The main result of the paper is introduction of new exploiters-based knowledge extraction approach, which provides generation of a finite set of new classes of objects, based on the basic set of classes. The methods for calculation of quantity of new classes, which can be obtained using proposed approach, and of quantity of types, which each of them describes, are proposed. Proof that basic set of classes, extended according to proposed approach, together with union exploiter create upper semilattice is given. The approach always allows generating of finitely defined set of new classes of objects for any object-oriented dynamic network. A quantity of these classes can be precisely calculated before the generation. It allows saving of only basic set of classes in the knowledge base.", "histories": [["v1", "Wed, 14 Oct 2015 17:21:37 GMT  (10kb)", "http://arxiv.org/abs/1510.04206v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["dmytro terletskyi"], "accepted": false, "id": "1510.04206"}, "pdf": {"name": "1510.04206.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Dmytro Terletskyi", "Taras Shevchenko"], "emails": ["dmytro.terletskyi@gmail.com,"], "sections": [{"heading": null, "text": "ar Xiv: 151 0.04 206v 1 [cs.A I] 1 4O ctKeywords: knowledge extraction, object-oriented dynamic networks, inhomogeneous class, universal exploiters, upper semigrid."}, {"heading": "1 Introduction", "text": "Nowadays, methods of knowledge extraction and thinking about knowledge are an integral part of the majority of knowledge-based systems. They provide the ability to extract or acquire new knowledge, based on so-called basic knowledge. Such skills make knowledge-based systems intelligent and applicable, at least in areas of artificial intelligence such as information search, problem solving, planning, pattern recognition, decision-making, etc. Currently, there are a variety of knowledge representation models (KRMs) that implement different approaches to knowledge representation, one of which is an object-oriented knowledge representation, the main idea of which is the representation of knowledge in relation to objects, classes of objects, and relationships between them. Nowadays, the most well-known KRMs within this approach are frames and object-oriented programming (OOP), both of which have their own methods of knowledge extraction that provide some skills for the acquisition of new knowledge. Let us take a closer look at these mechanisms and their main features."}, {"heading": "2 Knowledge Extraction in Frames and OOP", "text": "Frames as a KRM provide representation of knowledge in terms of frames (system of frames), where particular frame is a class-frame or instanceframe [3], [6] and association (own, plays, creations, etc.). Generalization leads to the implementation of inheritance mechanisms that allow lower predispositions in the hierarchy to inherit all slots from more general frames. Such a structure of the system enables efficient representation of knowledge because it is based on the idea of representation of new knowledge. Furthermore, it results in each individual frame being subordinated in the hierarchy."}, {"heading": "3 Object-Oriented Dynamic Networks", "text": "iSe rf\u00fc ide for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the leaders for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the voices for the"}, {"heading": "4 Exploiters-Based Knowledge Extraction", "text": "In fact, it is such that we are able to move to another world, in which we move to another world, in which we move to another world, in which we move to another world, in which we move to another world, in which we are able to change the world, in which we are able to move to another world, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, in which we live, we live in which we live in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, we live in which we live, in which we live in which we live, in which we live, in which we live, in which we live, we live in which we live in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live,"}, {"heading": "T omCabOn, T omCabSpi, T omCabOil, T omOnSpi, T omOnOil,", "text": "D omSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpiritoSpi"}, {"heading": "5 Conclusions", "text": "The main achievement of the paper is the introduction of a new method of knowledge extraction based on exploiters for OODNs, which always provides for the generation of a finally defined set of new classes of objects based on the basic set of classes. - The main characteristics of the proposed method are: - Calculation capability: \u2022 Number of new classes that can be achieved using the proposed approach \u2022 Number of different types that describe each of the obtained classes; - The principle of classes of each OODN, which is expanded according to the proposed approach, together with the trade union exploiter: \u2022 Upper semilattice, \u2022 Finally generated universal algebra, for which the basic group of classes of OODN represents a generative structure."}, {"heading": "1. Al-Asady, R.: Inheritance Theory: An Artificial Intelligence Approach. Ablex Publishing Corporation, Norwood, New Jersey (1995)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2. Birkhoff, G.: Lattice theory. 3-rd Revised edition. American Mathematical Society Colloquium Publications, New York (1967)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3. Brachman, R.J., Levesque, H.J.: Knowledge Representation and Reasoning. Morgan Kaufmann Publishers, San Francisco, California (2004)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4. Davey, B.A., Priestley, H.A.: Introduction to Lattices and Order. Second Edition. Cambridge University Press, New York (2002)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5. Craig, I.D.: Object-Oriented Programming Languages: Interpretation. Springer,", "text": "London (2007) 6. Negnevitsky, M.: Artificial Intelligence: A Guide to Intelligent Systems: Second Edition. Addison-Wesley, Herlow, Essex (2004) 7. Terletskyi, D.O., Provotar, O.I.: Mathematical Foundations for Designing and Development of Intelligent Systems of Information Analysis. Scientific Journal \"Problems in Programming.\" 15, 233-241 (2014) 8. Terletskyi, D.O., Provotar, O.I.: Object-Oriented Dynamic Networks. In: Setlak, G., Markov, K. (eds.) Computational Models for Business and Engineering Domains. IBS ISC, vol. 30, pp. 123-136. ITHEA (2014) 9. Touretzky, D.S.: The Mathematics of Inheritance Systems. Morgan Kaufmann Publishers, Los Altos, California (1986) 10. Ueno, Koiama T., Okiama T., T., Okiama T. Okdka, Moscow 1987."}], "references": [{"title": "Inheritance Theory: An Artificial Intelligence Approach", "author": ["R. Al-Asady"], "venue": "Ablex Publishing Corporation, Norwood, New Jersey", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1995}, {"title": "Lattice theory", "author": ["G. Birkhoff"], "venue": "3-rd Revised edition. American Mathematical Society Colloquium Publications, New York", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1967}, {"title": "Knowledge Representation and Reasoning", "author": ["R.J. Brachman", "H.J. Levesque"], "venue": "Morgan Kaufmann Publishers, San Francisco, California", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Introduction to Lattices and Order", "author": ["B.A. Davey", "H.A. Priestley"], "venue": "Second Edition. Cambridge University Press, New York", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2002}, {"title": "Object-Oriented Programming Languages: Interpretation", "author": ["I.D. Craig"], "venue": "Springer, London", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Artificial Intelligence: A Guide to Intelligent Systems: Second Edition", "author": ["M. Negnevitsky"], "venue": "Addison-Wesley, Herlow, Essex", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2004}, {"title": "Mathematical Foundations for Designing and Development of Intelligent Systems of Information Analysis", "author": ["D.O. Terletskyi", "O.I. Provotar"], "venue": "Scientific Journal \u201cProblems in Programming\u201d. 15, 233\u2013241", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Object-Oriented Dynamic Networks", "author": ["D.O. Terletskyi", "O.I. Provotar"], "venue": "Setlak, G., Markov, K. (eds.) Computational Models for Business and Engineering Domains. IBS ISC, vol. 30, pp. 123\u2013136. ITHEA", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "The Mathematics of Inheritance Systems", "author": ["D.S. Touretzky"], "venue": "Morgan Kaufmann Publishers, Los Altos, California", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1986}, {"title": "Representation and Usage of Knowledge (In Russian)", "author": ["H. Ueno", "T. Koiama", "T. Okamoto", "B. Matsubi", "M. Isidzuka"], "venue": "Mir, Moscow", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1987}], "referenceMentions": [{"referenceID": 2, "context": "Frames as a KRM provide representation of knowledge in terms of hierarchies of frames (system of frames), where particular frame is a class-frame or instanceframe [3], [6].", "startOffset": 163, "endOffset": 166}, {"referenceID": 5, "context": "Frames as a KRM provide representation of knowledge in terms of hierarchies of frames (system of frames), where particular frame is a class-frame or instanceframe [3], [6].", "startOffset": 168, "endOffset": 171}, {"referenceID": 9, "context": "Thus, extracting of new knowledge in the frame system can be done by dint of the reasoning in inheritance hierarchy or by means of procedural attachments executing [10].", "startOffset": 164, "endOffset": 168}, {"referenceID": 5, "context": "However, frames support two kinds of inheritance \u2013 single and multiple ones [6].", "startOffset": 76, "endOffset": 79}, {"referenceID": 0, "context": "Inheritance can cause such problems as problem of exceptions, problem of redundancy and problem of ambiguity [1], [9].", "startOffset": 109, "endOffset": 112}, {"referenceID": 8, "context": "Inheritance can cause such problems as problem of exceptions, problem of redundancy and problem of ambiguity [1], [9].", "startOffset": 114, "endOffset": 117}, {"referenceID": 5, "context": "Frames also allow overriding of values of slots in the instance-frames [6], that leads to the situation when the subclass or instance goes beyond its superclass.", "startOffset": 71, "endOffset": 74}, {"referenceID": 4, "context": "In contrast to frames, OOP is divided on two styles \u2013 class-based and prototype based ones [5].", "startOffset": 91, "endOffset": 94}, {"referenceID": 4, "context": "In addition, inheritance in OOP causes the same problems as in frames [5].", "startOffset": 70, "endOffset": 73}, {"referenceID": 7, "context": "Besides mentioned object-oriented KRMs, there is one more KRM, such as object-oriented dynamic networks (OODNs), that was proposed in [8].", "startOffset": 134, "endOffset": 137}, {"referenceID": 7, "context": "Definitions of all elements from the tuple OODN = (O,C,R,E,M) were introduced and considered in detail in [8].", "startOffset": 106, "endOffset": 109}, {"referenceID": 6, "context": "There are two kinds of object\u2019s properties \u2013 quantitative and qualitative ones, which definitions were introduced in [7].", "startOffset": 117, "endOffset": 120}, {"referenceID": 0, "context": "Definition 3 Qualitative property of class of objects T is a verification function p(T ) = vf(T ), which is defined as a mapping vf(T ) : p(T ) \u2192 [0, 1] and reflects the degree (measure) of truth (presence) of a property p(T ) for the class T .", "startOffset": 146, "endOffset": 152}, {"referenceID": 2, "context": "Within frames and OOP, concept of class is defined as abstract description of some quantity of objects, which have the same nature [3], [5].", "startOffset": 131, "endOffset": 134}, {"referenceID": 4, "context": "Within frames and OOP, concept of class is defined as abstract description of some quantity of objects, which have the same nature [3], [5].", "startOffset": 136, "endOffset": 139}, {"referenceID": 6, "context": "Nevertheless, there are classes, which are inhomogeneous ones [7].", "startOffset": 62, "endOffset": 65}, {"referenceID": 6, "context": "That is why, such universal exploiters as union, intersection, difference and symmetrical difference were introduced in [7].", "startOffset": 120, "endOffset": 123}, {"referenceID": 1, "context": "According to the definition of upper semilattice, it should be a system SL = (A,\u03a9), where A is a poset, \u03a9 = {\u2228} and \u2228 is binary, idempotent, commutative and associative operation [2], [4].", "startOffset": 179, "endOffset": 182}, {"referenceID": 3, "context": "According to the definition of upper semilattice, it should be a system SL = (A,\u03a9), where A is a poset, \u03a9 = {\u2228} and \u2228 is binary, idempotent, commutative and associative operation [2], [4].", "startOffset": 184, "endOffset": 187}], "year": 2015, "abstractText": "This paper contains the consideration of knowledge extraction mechanisms of such object-oriented knowledge representation models as frames, object-oriented programming and object-oriented dynamic networks. In addition, conception of universal exploiters within objectoriented dynamic networks is also discussed. The main result of the paper is introduction of new exploiters-based knowledge extraction approach, which provides generation of a finite set of new classes of objects, based on the basic set of classes. The methods for calculation of quantity of new classes, which can be obtained using proposed approach, and of quantity of types, which each of them describes, are proposed. Proof that basic set of classes, extended according to proposed approach, together with union exploiter create upper semilattice is given. The approach always allows generating of finitely defined set of new classes of objects for any object-oriented dynamic network. A quantity of these classes can be precisely calculated before the generation. It allows saving of only basic set of classes in the knowledge base.", "creator": "LaTeX with hyperref package"}}}