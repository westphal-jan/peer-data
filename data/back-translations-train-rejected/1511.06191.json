{"id": "1511.06191", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Nov-2015", "title": "Abstract Attribute Exploration with Partial Object Descriptions", "abstract": "Attribute exploration has been investigated in several studies, with particular emphasis on the algorithmic aspects of this knowledge acquisition method. In its basic version the method itself is rather simple and transparent. But when background knowledge and partially described counter-examples are admitted, it gets more difficult. Here we discuss this case in an abstract, somewhat \"axiomatic\" setting, providing a terminology that clarifies the abstract strategy of the method rather than its algorithmic implementation.", "histories": [["v1", "Thu, 19 Nov 2015 14:59:06 GMT  (19kb)", "http://arxiv.org/abs/1511.06191v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["daniel borchmann", "bernhard ganter"], "accepted": false, "id": "1511.06191"}, "pdf": {"name": "1511.06191.pdf", "metadata": {"source": "CRF", "title": "Abstract Attribute Exploration with Partial Object Descriptions", "authors": ["Daniel Borchmann", "Bernhard Ganter"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 151 1.06 191v 1 [cs.A I] 1 9N ov2 015with Partial Object DescriptionsDaniel Borchmann Bernhard Ganter20. November 2015The exploration of attributes has been investigated in several studies, with particular attention paid to the algorithmic aspects of this method of acquiring knowledge. In its basic version, the method itself is rather simple and transparent. However, when background knowledge and partially described counter-examples are admitted, it becomes more difficult. Here, we discuss this case in an abstract, somewhat \"axiomatic\" setting and provide terminology that clarifies the abstract strategy of the method and not its algorithmic implementation."}, {"heading": "1 Introduction", "text": "Attribute exploration is a fairly well-known and proven method of knowledge acquisition based on formal concept analysis [6], similar to query learning described in [1]. Although it is quite simple in its basic idea, it can become quite complicated in its many extensions and modifications (see Ganter & Obiedkov (in preparation). Readers unfamiliar with this method may find motivating examples in the literature. The purpose of this paper is not to add another generalization, but to present an abstract version of one of the more basic variants, namely the exploration of attributes with partial object descriptions [3]. We will use the formalization of a domain expert developed by the first author [4]. We hope to make the method more transparent. It is our impression that such a strictly formal constellation could ultimately be more practical. In general, the purpose of an exploration is to classify implications by an expert."}, {"heading": "2 The parts of the exploration method", "text": "The Exploration Base contains the current status of an Exploration. The Domain Expert is the reliable source of information for an Exploration. The Exploration Engine consists of the algorithmic machinery for communication between domain experts and Exploration Base. These four parts are described in more detail. Before we do this, we briefly outline the nature of these four modules. The Exploration Scheme defines the set of all the attribute combinations examined (permitted or not), which we call the universe of the respective Exploration. In addition, the Scheme can contain additional background knowledge. The Exploration Base consists of three parts, one containing the counter examples that have already been accepted or derived, the second containing the implications that have been validated or derived. Both lists can be modified by the Domain Expert and the Exploration Engine."}, {"heading": "3 The exploration schema", "text": "A (finite) set of M attributes under investigation is specified; the universe is the power set (P (M) to be determined by exploration is a subset E (M), which is not directly accessible, but only by questioning some \"domain experts.\" Thesubsets that are elements of E are referred to as permissible sentences or synonymous counter-examples; the questions to the domain expert are formulated as implications R \u0441S, where R and S are subsets of M. A set X-M respects (or is a model of) an implication R-X or R-X. Otherwise, if R-X and S-X. then X refutes the implication R-S. By validating an implication R-S, the domain expert determines that this implication is respected by all permissible sets. In other words, if a permissible sentence contains all elements of R, then X must include all elements of S."}, {"heading": "4 The exploration base", "text": "An exploration base consists of three parts: a journal file, the collection of accepted counter-examples, and the collection of validated implications. These groups may be empty at the beginning of an exploration. Both collections are subsets of the order relationship, meaning that each entry of these collections is a pair (R, S) of elements from P (M) to R (S). How do such pairs represent counter-examples and implications? A pair (R, S) of subsets represents the implication R \u0441S, which is considered true when iff R (A) applies to all allowable sets."}, {"heading": "R \u010e U and S \u0118 V.", "text": "It is assumed that the domain expert provides only partial counter-examples that have a permissible completion, which means that the exploration base remains consistent throughout each exploration process, in the sense that it has at least one realiser, i.e. that all sub-examples can be completed in a way that respects all validated implications and is not excluded by background knowledge. We will later prove that an exploration base can be checked for consistency without knowing what the permissible sets are. We warn the reader that it is not sufficient for an exploration base that no counter-example refutes a validated implication. We write L for the list of implications and C for the list of sub-examples in the base. We ignore the journal file for the time and shorten the exploration base as (L, C). Such a base may have more than one realiser, but - if it is consistent - it always has one largest."}, {"heading": "5 The domain expert", "text": "The domain expert is the only source of information for exploration. If that expert is a human, a group, or an algorithm, is not really important for our considerations. Essential is the (probably unrealistic) assumption that the expert is consistent in the sense that the answers given are compatible with a realiser, which is now formalized. Consider a figure that shows implications to counter-examples or to a symbol that the implications and counter-examples represent comparable pairs of sub-areas of M, and remind us that the sub-order relationship is formally the set of all comparable pairs based on counter-examples."}, {"heading": "6 The exploration engine", "text": "It is checked that the base of the exploration is complete, in the sense that any implications that are not disproved by any counter-example can also be derived from the validated implications. In such a case, the domain expert is forced to provide a counter-example. (To keep things simple, we are not discussing the possibility of asking questions here.) How the query engine works is easier to explain in the event that the exploration base is normalized; the normalization engine tries to simplify the counter-examples of the exploration without changing the information they contain. \u2022 Whenever there is a partial counter-example (U, V) and an implication R-S in the base, it will simplify the counter-examples of the exploration without changing the information."}, {"heading": "7 Attribute exploration", "text": "An Exploration attribute begins by specifying an exploration scheme and an initial exploration base, the latter may be empty. Then, the query engine computes a question, which the domain expert answers. The answer is added to the exploration base, which is then normalized. This question-and-answer process repeats until the query engine determines that the exploration base is complete. Figure 1 shows a pseudo-code implementation of this algorithm. The following claim is now obvious. Theorem Let S be an exploration scheme on an attribute set M with background knowledge K. Let p be a domain expert on M, C a set of models of Th (p) and K-Th (p). ThenL: = Exploration (S, p, C) is a basis of Th (p) for background knowledge K, i.e. Cn (LYK) = Th is a set of models of Th (p) and K-Th (p) is a set of models of Th (p). Theorem L: = Exploration (S, p, C) is a basis of background knowledge K, i.e. Let p be a domain expert on M, C is a set of models of this algorithm."}, {"heading": "8 Outlook", "text": "However, the abstract formulation of attribute exploration, as we have presented in this paper, does not capture all the characteristics of the classical algorithm. The main example, namely that classical attribute exploration calculates the canonical basis in the presence of implicit background knowledge, was briefly mentioned in the previous section. Therefore, since expert interaction can be assumed to be expensive, minimizing the number of questions to the expert seems inevitable for the practicality of the exploration itself. One of the logical next steps in investigating an abstract formulation of attribute exploration is to examine the characteristics of the exploration engine and the domain expert required to minimize the number of expert interactions. The classical algorithm already offers the possibility of implementing the exploration engine in such a way that expert interaction is minimized. In this implementation, the implications returned by the engine are listed in an extended order that one could actually ask for an expert interaction."}], "references": [{"title": "Learning Conjunctions of Horn Clauses", "author": ["Dana Angluin", "Michael Frazier", "Leonard Pitt"], "venue": "In:Machine Learning", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1992}, {"title": "Construction and learnability of canonical Horn formulas", "author": ["Marta Arias", "Jos\u00e9 L. Balc\u00e1zar"], "venue": "In:Machine Learning", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Completing Description Logic Knowledge Bases Using Formal Concept Analysis", "author": ["Franz Baader"], "venue": "(Hyderabad, India)", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Exploring Faulty Data", "author": ["Daniel Borchmann"], "venue": "ICFCA", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2015}, {"title": "Pseudo-models and propositional Horn inference", "author": ["Bernhard Ganter", "R\u00fcdiger Krau\u00dfe"], "venue": "Discrete Applied Mathematics", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "Formal Concept Analysis: Mathematical Foundations", "author": ["Bernhard Ganter", "Rudolf Wille"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1999}, {"title": "NextClosures: Parallel Computation of the Canonical Base", "author": ["Francesco Kriegel", "Daniel Borchmann"], "venue": "Proceedings of the 12th International Conference on Concept Lattices and their Applications (CLA", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}], "referenceMentions": [{"referenceID": 5, "context": "Attribute Exploration is a fairly well-known andwell-tried knowledge acquisition technique based on Formal Concept Analysis [6].", "startOffset": 124, "endOffset": 127}, {"referenceID": 0, "context": "It is similar to Query Learning, as described in [1].", "startOffset": 49, "endOffset": 52}, {"referenceID": 2, "context": "The aim of this paper is not to add yet another generalization, but to present an abstract version of one of the more basic variants, namely attribute exploration with partial object descriptions [3].", "startOffset": 196, "endOffset": 199}, {"referenceID": 3, "context": "For this we shall make use of the formalization of a domain expert, as developed by the first author [4].", "startOffset": 101, "endOffset": 104}, {"referenceID": 4, "context": "Then assuming N is fixed, deciding whether an implication follows from L can be done in O(|H|  \u0308 |M|) steps [5].", "startOffset": 108, "endOffset": 111}, {"referenceID": 6, "context": "Recent results on the parallelizability of the computation of the canonical base seem to suggest that, under some additional mild assumptions, the latter might indeed be true [7].", "startOffset": 175, "endOffset": 178}, {"referenceID": 0, "context": "Another interesting perspective for future research is the comparison of attribute exploration with the query learning algorithm for propositional Horn logic from [1].", "startOffset": 163, "endOffset": 166}, {"referenceID": 0, "context": "However, it is known that the algorithm from [1] computes the canonical base not matter what the form of the particular choice of the examples given by the involved oracles [2].", "startOffset": 45, "endOffset": 48}, {"referenceID": 1, "context": "However, it is known that the algorithm from [1] computes the canonical base not matter what the form of the particular choice of the examples given by the involved oracles [2].", "startOffset": 173, "endOffset": 176}], "year": 2015, "abstractText": "Attribute exploration has been investigated in several studies, with particular emphasis on the algorithmic aspects of this knowledge acquisition method. In its basic version the method itself is rather simple and transparent. But when background knowledge and partially described counterexamples are admitted, it gets more difficult. Here we discuss this case in an abstract, somewhat \u201caxiomatic\u201d setting, providing a terminology that clarifies the abstract strategy of the method rather than its algorithmic implementation.", "creator": "LaTeX with hyperref package"}}}