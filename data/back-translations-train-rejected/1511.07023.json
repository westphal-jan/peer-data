{"id": "1511.07023", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Nov-2015", "title": "Anvaya: An Algorithm and Case-Study on Improving the Goodness of Software Process Models generated by Mining Event-Log Data in Issue Tracking System", "abstract": "Issue Tracking Systems (ITS) such as Bugzilla can be viewed as Process Aware Information Systems (PAIS) generating event-logs during the life-cycle of a bug report. Process Mining consists of mining event logs generated from PAIS for process model discovery, conformance and enhancement. We apply process map discovery techniques to mine event trace data generated from ITS of open source Firefox browser project to generate and study process models. Bug life-cycle consists of diversity and variance. Therefore, the process models generated from the event-logs are spaghetti-like with large number of edges, inter-connections and nodes. Such models are complex to analyse and difficult to comprehend by a process analyst. We improve the Goodness (fitness and structural complexity) of the process models by splitting the event-log into homogeneous subsets by clustering structurally similar traces. We adapt the K-Medoid clustering algorithm with two different distance metrics: Longest Common Subsequence (LCS) and Dynamic Time Warping (DTW). We evaluate the goodness of the process models generated from the clusters using complexity and fitness metrics. We study back-forth \\&amp; self-loops, bug reopening, and bottleneck in the clusters obtained and show that clustering enables better analysis. We also propose an algorithm to automate the clustering process -the algorithm takes as input the event log and returns the best cluster set.", "histories": [["v1", "Sun, 22 Nov 2015 15:43:29 GMT  (997kb,D)", "http://arxiv.org/abs/1511.07023v1", null]], "reviews": [], "SUBJECTS": "cs.SE cs.LG", "authors": ["prerna juneja", "divya kundra", "ashish sureka"], "accepted": false, "id": "1511.07023"}, "pdf": {"name": "1511.07023.pdf", "metadata": {"source": "CRF", "title": "Anvaya: An Algorithm and Case-Study on Improving the Goodness of Software Process Models generated by Mining Event-Log Data in Issue Tracking Systems", "authors": ["Prerna Juneja", "Divya Kundra", "Ashish Sureka"], "emails": ["prerna1399@iiitd.ac.in,", "divya1395@iiitd.ac.in", "ashish@iiitd.ac.in"], "sections": [{"heading": null, "text": "Index Terms - Bug Tracking System, Clustering, Mining-Software-Repositories, Process Mining, Process Model Fitness Metric, Process Model Structural Complexity"}, {"heading": "I. RESEARCH MOTIVATION AND AIM", "text": "This is modelled on the lines of application of business intelligence techniques to business processes (Business Process Intelligence (BPI)), but with a focus on software processes and their applicability to software engineering (SE) and information technology (IT) systems. SPI has diverse applications and is an area that has recently attracted the attention of several researchers due to the availability of huge data generated during software development. Some of the business applications of process mining on software repositories or SPI are: the detection of process inefficiencies and inconsistencies, the observation of project key indicators and the calculation of correlations between product and process metrics, the extraction of general visual process patterns for the estimation and analysis of problem-solving activities [1]. Several SE processes such as the problem or error resolution are flexible and consist of multiple process variants (which are adhoc and unstructured)."}, {"heading": "II. RESEACH FRAMEWORK AND SOLUTION APPROACH", "text": "Figure 1 shows the architecture diagram and the 4-step data processing pipeline for the Anvaya Framework. The first step consists of extracting issue tracking system (ITS) data for the Firefox project using the Bugzilla REST API (an HTTP version of its XMLRPC and JSONRPC APIs) 1 and storing it in a MySQL database. We extract the complete history (lifecycle) of all closed bugs. The history consists of five fields: Who, What, Removed and Add. An event in a process log for a process discovery algorithm requires a minimum of four fields: Case ID (or the trace ID for the process instance), Actor, Timestamp and Activity. We map the ITS issue ID as the case ID, Who as-Actor, Actor, Removed and Add."}, {"heading": "III. EXPERIMENTAL DATASET", "text": "The life cycle of an error consists of several stages. The initial status of the error is either new or unconfirmed. From each of these two states, it can either go to the assigned state, in which it is assigned to a resolver by the triager, or can be resolved directly. An error can have seven resolutions: Wontfix, Worksforme, Invalid, Fixed, Remind, Duplicate, and Later3. From either of these two states, it can either go to the assigned state, in which it is assigned to a resolver by the triager, or can be fixed directly. An error can have seven resolutions: Wontfix, Worksforme, Invalid, Fixed, Remind, Duplicate, and Later3."}, {"heading": "IV. CLUSTERING", "text": "We adjust the K-medoid cluster algorithm [4] [5] to group the sequential traces using two different distance measurement parameters. The first distance measurement parameter that can be used to calculate the similarity between two traces is the longest common sub-sequence metric (LCS similarity) [6] [7] [8]. Since each track can be considered a string, we use the LCS algorithm to determine the length of the longest common string, which does not have to follow one another but follows a left-to-right order order. Longer is the length of the LCS, 3https: / bugzilla.mozilla.org / page.cgi? id = fields.html 4https: / / github.com / ashishsureka / anvayamore, the length of the LCS is similar, 3https: / bugzilla.gfielzla.cid = field.html /.pailla.html / https is similar to the length of the LCS."}, {"heading": "V. PROCESS DISCOVERY & EVALUATION", "text": "We discover process models from the entire event log as well as the event log of clusters with disco. A node in the disco process model represents one activity, while one edge represents the transition from one activity to another. The process model has a start node (represented by a triangle symbol), an end node (represented by a stop symbol) and activity nodes that contain the name and absolute frequency of the activity. Dashed arrows refer to activities that are formed at 5http: / / cs.bc.edu / a lvarez / Algorithms / Notes / dtw.htmlAlgorithm 1: k Medoid Clustering Data: Event log in sequential data format Result: k Clusters1 Input the number of clusters that are formed k. 2 Read the input event log 3 randomly selected k tracks as initial medoid tracks 4 For each non-medoid track for each 5-medomi and 6-track."}, {"heading": "A. Complexity", "text": "Complexity has undesirable effects on the comprehensibility, comprehensibility and correctness of process models [12]. Of the many key complexity indicators suggested in the literature, we use McCabe's cyclomatic number, which represents the total number of independent paths possible in the process model [13]. The pseudo code for determining the cyclomatic number of process models obtained from disco is in algorithm 2. Input in the Xml format of the process model is required as it contains all relevant information, namely the number of edges and nodes required to calculate the complexity. The higher the complexity value returned by this algorithm, the higher the number of independent paths and thus the model becomes more complex."}, {"heading": "B. Fitness", "text": "In fact, it is a real scenario, in which it is a scenario, in which it is a scenario, in which it is a real scenario."}, {"heading": "VI. EXPERIMENTAL RESULTS", "text": "Figure 2b shows the complex, spaghetti-like, difficult-to-understand process model generated from the entire event log (referred to as the main model throughout the paper), created by Disco at 100% activity and 12.2% path resolution. Complexity and suitability of the main model and all clusters are illustrated in Table III. We see that the complexity in a cluster has been reduced by an average of 40.03% and 40.96%, respectively, while the use of LCS and DTW metrics clearly show that clusters are much easier to understand and analyze. We note that process models of 66.67% clusters in the case of LCS and 83.34% clusters in the case of DTW have a better one-to-one mapping with the event log and thus have a better fitness value."}, {"heading": "VII. PROCESS MODEL CLUSTER ANALYSIS", "text": "In the following section, usable results, actionable information and valuable insights are extracted from all six clusters obtained using the LCS metric. We show that clustering enables easier identification of inconsistencies and imperfections and a better understanding of the process that would not have been possible by studying the complex spaghetti model."}, {"heading": "A. Self-loop Analysis", "text": "C, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, C, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, C, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S, S,"}, {"heading": "B. Back-Forth Analysis", "text": "A reverse loop, also known as a ping-pong pattern, can be defined as a transition A \u2192 B \u2192 A, i.e. a transition that begins at activity A, goes to activity B, and ends at activity A. A second entry in each cell of Table IV contains the activity with which the activity specified in the first cell of the same row forms a reverse loop, no more than once along with the frequency of that loop. An activity A can be in a reverse loop with multiple activities, e.g. A \u2192 B with frequency f1 and A \u2192 A with frequency f2 and f2 \u2265 f1. C / f2 is specified as the second entry in the cell corresponding to activity A in Table IV. \"-\" indicates the absence of a loop. Activities that form high frequency loops can be effectively analyzed in clusters. As bugs with similar life cycle are bundled, the cause behind the occurrence of such anti-patterns is also easier to identify and dynamize."}, {"heading": "C. Reopen Analysis", "text": "The reason for this is that most of them are not able to get a grip on their own problems. (See why they are not able to get a grip on their own problems.) Most of them are not able to get a grip on their own problems. (See why they are not able to get a grip on their own problems.) Most of them are not able to get a grip on their own problems. (See why they are not able to get a grip on their own problems.) Most of them are not able to get a grip on their own problems."}, {"heading": "D. Bottleneck Identification", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "VIII. DETERMINING THE BEST CLUSTER SOLUTION", "text": "Depending on the algorithm used, the initial cluster centers chosen, the number of iterations and the number of specified clusters, clusters can result in many different solutions. Of the many possible solutions, we choose the one where clusters have low complexity and a high fitness value to allow better analysis. To test the proposed algorithm, the experimental data set described in Table II is divided into four equal partial data sets and each subset is experimented with the proposed algorithm using k-medoid with LCS similarity metrics. Algorithm 4 executes the cluster algorithm three times via the input event protocol to select the best cluster set. Table V indicates the G-ratio of all three iterations performed on all four partial data sets, as well as the iteration whose solution set is determined as the best by our proposed algorithm."}, {"heading": "IX. RELATED WORK AND RESEARCH CONTRIBUTIONS", "text": "This year it has come to the point where it is a purely reactionary project, which is a reactionary project, which is primarily a reactionary project, which is a reactionary project, but in which it is a reactionary project."}, {"heading": "X. CONCLUSION", "text": "Our work contributes to simplifying these complex models by clustering them so that they can be easily understood by process analysts. We adapt the K-Medoid algorithm by using two different distance measurements - LCS and DTW - to obtain clusters with good class-internal similarity. K-Medoid is an efficient cluster algorithm that is resistant to outliers and noise data. The quality of the models increases as fitness and structural complexity is improved, making the models easier to understand. We demonstrate the effectiveness of our proposed technique by conducting a real-world case study on the Firefox browser project. We successfully demonstrate that clustering enables better analysis, making it easier to identify bottlenecks, investigate the reopening of bugs, self-loops and reverse loops."}], "references": [{"title": "Process mining software repositories", "author": ["W. Poncin", "A. Serebrenik", "M. van den Brand"], "venue": "Software Maintenance and Reengineering (CSMR), 2011 15th European Conference on. IEEE, 2011, pp. 5\u201314.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Process mining framework for software processes", "author": ["V. Rubin", "C.W. G\u00fcnther", "W.M. Van Der Aalst", "E. Kindler", "B.F. Van Dongen", "W. Sch\u00e4fer"], "venue": "Software Process Dynamics and Agility. Springer, 2007, pp. 169\u2013181.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Fuzzy mining: Adaptive process simplification based on multi-perspective metrics", "author": ["C.W. G\u00fcnther", "W.M.P. Van Der Aalst"], "venue": "Proceedings of the 5th International Conference on Business Process Management, ser. BPM\u201907. Berlin, Heidelberg: Springer-Verlag, 2007, pp. 328\u2013343. [Online]. Available: http://dl.acm.org/citation.cfm?id= 1793114.1793145", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "Clustering by Means of Medoids", "author": ["L. Kaufman", "P. Rousseeuw"], "venue": "ser. Reports of the Faculty of Mathematics and Informatics. Faculty of Mathematics and Informatics,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1987}, {"title": "Finding groups in data: an introduction to cluster analysis", "author": ["L. Kaufman", "P.J. Rousseeuw"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1990}, {"title": "The string-to-string correction problem", "author": ["R.A. Wagner", "M.J. Fischer"], "venue": "J. ACM, vol. 21, no. 1, pp. 168\u2013173, Jan. 1974. [Online]. Available: http://doi.acm.org/10.1145/321796.321811", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1974}, {"title": "A survey of longest common subsequence algorithms", "author": ["L. Bergroth", "H. Hakonen", "T. Raita"], "venue": "Proceedings of the Seventh International Symposium on String Processing Information Retrieval (SPIRE\u201900), ser. SPIRE \u201900. Washington, DC, USA: IEEE Computer Society, 2000, pp. 39\u2013. [Online]. Available: http://dl.acm.org/citation.cfm?id=829519. 830817", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2000}, {"title": "Algorithms for the longest common subsequence problem", "author": ["D.S. Hirschberg"], "venue": "J. ACM, vol. 24, no. 4, pp. 664\u2013675, Oct. 1977. [Online]. Available: http://doi.acm.org/10.1145/322033.322044", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1977}, {"title": "The symmetric time-warping problem: from continuous to discrete", "author": ["J. Kruskal", "M. Liberman"], "venue": "1983.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1983}, {"title": "Using dynamic time warping to find patterns in time series.", "author": ["D.J. Berndt", "J. Clifford"], "venue": "KDD Workshop,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1994}, {"title": "Data clustering - theory, algorithms, and applications", "author": ["G. Gan", "C. Ma", "J. Wu"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}, {"title": "A discourse on complexity of process models", "author": ["J. Cardoso", "J. Mendling", "G. Neumann", "H.A. Reijers"], "venue": "Proceedings of the 2006 International Conference on Business Process Management Workshops, ser. BPM\u201906. Berlin, Heidelberg: Springer-Verlag, 2006, pp. 117\u2013128. [Online]. Available: http://dx.doi.org/10.1007/11837862 13", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2006}, {"title": "A complexity measure", "author": ["T.J. McCabe"], "venue": "Proceedings of the 2Nd International Conference on Software Engineering, ser. ICSE \u201976. Los Alamitos, CA, USA: IEEE Computer Society Press, 1976, pp. 407\u2013. [Online]. Available: http://dl.acm.org/citation.cfm?id=800253.807712", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1976}, {"title": "Conformance Testing: Measuring the Fit and Appropriateness of Event Logs and Process Models", "author": ["A. Rozinat", "W. Aalst"], "venue": "First International Workshop on Business Process Intelligence (BPI\u201905), M. Castellanos and T. Weijters, Eds., Nancy, France, September 2005, pp. 1\u201312.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2005}, {"title": "Nirikshan: Mining bug report history for discovering process maps, inefficiencies and inconsistencies", "author": ["M. Gupta", "A. Sureka"], "venue": "Proceedings of the 7th India Software Engineering Conference, ser. ISEC \u201914. New York, NY, USA: ACM, 2014, pp. 1:1\u20131:10. [Online]. Available: http://doi.acm.org/10.1145/2590748.2590749", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Designing task visualizations to support the coordination of work in software development", "author": ["C.A. Halverson", "J.B. Ellis", "C. Danis", "W.A. Kellogg"], "venue": "Proceedings of the 2006 20th Anniversary Conference on Computer Supported Cooperative Work, ser. CSCW \u201906. New York, NY, USA: ACM, 2006, pp. 39\u201348. [Online]. Available: http://doi.acm.org/10.1145/1180875.1180883", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Studying re-opened bugs in open source software", "author": ["E. Shihab", "A. Ihara", "Y. Kamei", "W.M. Ibrahim", "M. Ohira", "B. Adams", "A.E. Hassan", "K. ichi Matsumoto"], "venue": "G. Antoniol and M. Pinzger, Eds. Springer, 2013, vol. 18, pp. 1005\u20131042.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Characterizing and predicting which bugs get reopened", "author": ["T. Zimmermann", "N. Nagappan", "P.J. Guo", "B. Murphy"], "venue": "Proceedings of the 34th International Conference on Software Engineering (ICSE 2012 SEIP Track). IEEE, June 2012. [Online]. Available: http://research.microsoft.com/apps/pubs/default.aspx?id=159352", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Finding structure in unstructured processes: The case for process mining", "author": ["W.M.P. van der Aalst", "C.W. G\u00fcnther"], "venue": "Seventh International Conference on Application of Concurrency to System Design (ACSD 2007), 10-13 July 2007, Bratislava, Slovak Republic, 2007, pp. 3\u201312. [Online]. Available: http://doi.ieeecomputersociety.org/ 10.1109/ACSD.2007.50", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2007}, {"title": "Understanding spaghetti models with sequence clustering for ProM", "author": ["G.M. Veiga", "D.R. Ferreira"], "venue": "Business Process Management Workshops, BPM 2009 International Workshops, Ulm, Germany, September 7, 2009. Revised Papers, ser. Lecture Notes in Business Information Processing, vol. 43. Springer, 2010, pp. 92\u2013103.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "Context aware trace clustering: Towards improving process mining results", "author": ["R.P.J.C. Bose", "W.M.P. van der Aalst"], "venue": "Proceedings of the SIAM International Conference on Data Mining, SDM 2009, April 30 - May 2, 2009, Sparks, Nevada, USA, 2009, pp. 401\u2013412. [Online]. Available: http://dx.doi.org/10.1137/1.9781611972795.35", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "Approaching process mining with sequence clustering: Experiments and findings", "author": ["D. Ferreira", "M. Zacarias", "M. Malheiros", "P. Ferreira"], "venue": "Proceedings of the 5th International Conference on Business Process Management, ser. BPM\u201907. Berlin, Heidelberg: Springer-Verlag, 2007, pp. 360\u2013374. [Online]. Available: http://dl.acm.org/citation.cfm?id= 1793114.1793147", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "Active trace clustering for improved process discovery", "author": ["J.D. Weerdt", "S.K.L.M. vanden Broucke", "J. Vanthienen", "B. Baesens"], "venue": "IEEE Trans. Knowl. Data Eng., vol. 25, no. 12, pp. 2708\u20132720, 2013. [Online]. Available: http://doi.ieeecomputersociety.org/10.1109/TKDE. 2013.64", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2013}, {"title": "Trace clustering in process mining", "author": ["M. Song", "C.W. G\u00fcnther", "W.M.P. van der Aalst"], "venue": "Business Process Management Workshops, BPM 2008 International Workshops, Milano, Italy, September 1- 4, 2008. Revised Papers, 2008, pp. 109\u2013120. [Online]. Available: http://dx.doi.org/10.1007/978-3-642-00328-8 11", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2008}, {"title": "Business alignment: using process mining as a tool for delta analysis and conformance testing", "author": ["W. Aalst"], "venue": "Requirements Engineering, vol. 10, no. 3, pp. 198\u2013211, 2005. [Online]. Available: http: //dx.doi.org/10.1007/s00766-005-0001-x", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2005}], "referenceMentions": [{"referenceID": 0, "context": "Some of the business applications of process mining on software repositories or SPI are: uncovering runtime process models, discovering process inefficiencies and inconsistencies, observing project key indicators and computing correlation between product and process metrics, extracting general visual process patterns for effort estimation and analyzing problem resolution activities [1] [2].", "startOffset": 385, "endOffset": 388}, {"referenceID": 1, "context": "Some of the business applications of process mining on software repositories or SPI are: uncovering runtime process models, discovering process inefficiencies and inconsistencies, observing project key indicators and computing correlation between product and process metrics, extracting general visual process patterns for effort estimation and analyzing problem resolution activities [1] [2].", "startOffset": 389, "endOffset": 392}, {"referenceID": 2, "context": "We generate a single process model from the entire event-log data as well as for each cluster obtained in the previous step using a process mining tool Disco2 that uses the fuzzy miner algorithm [3].", "startOffset": 195, "endOffset": 198}, {"referenceID": 3, "context": "CLUSTERING We adapt the K-medoid clustering algorithm [4] [5] to cluster the sequential traces using two different distance metrics.", "startOffset": 54, "endOffset": 57}, {"referenceID": 4, "context": "CLUSTERING We adapt the K-medoid clustering algorithm [4] [5] to cluster the sequential traces using two different distance metrics.", "startOffset": 58, "endOffset": 61}, {"referenceID": 5, "context": "The first distance metric that can be used to compute the similarity between two traces is the Longest Common Subsequence metric (LCS Similarity) [6] [7] [8].", "startOffset": 146, "endOffset": 149}, {"referenceID": 6, "context": "The first distance metric that can be used to compute the similarity between two traces is the Longest Common Subsequence metric (LCS Similarity) [6] [7] [8].", "startOffset": 150, "endOffset": 153}, {"referenceID": 7, "context": "The first distance metric that can be used to compute the similarity between two traces is the Longest Common Subsequence metric (LCS Similarity) [6] [7] [8].", "startOffset": 154, "endOffset": 157}, {"referenceID": 8, "context": "The second distance metric we use is Dynamic Time Warping (DTW Similarity) [9] [10] which is used to find similarity between sequences that are structurally similar but can be on a different timescale.", "startOffset": 75, "endOffset": 78}, {"referenceID": 9, "context": "The second distance metric we use is Dynamic Time Warping (DTW Similarity) [9] [10] which is used to find similarity between sequences that are structurally similar but can be on a different timescale.", "startOffset": 79, "endOffset": 83}, {"referenceID": 10, "context": "This path is subjected to certain restrictions namely, monotonicity, continuity and boundary condition [11].", "startOffset": 103, "endOffset": 107}, {"referenceID": 10, "context": "Out of the many warping paths, an optimal warping path is the one that minimizes the total cost [11].", "startOffset": 96, "endOffset": 100}, {"referenceID": 11, "context": "Complexity has unwanted effects on understandability, comprehensibility and correctness of process models [12].", "startOffset": 106, "endOffset": 110}, {"referenceID": 12, "context": "Out of the many complexity metrics proposed in literature, we use McCabe\u2019s cyclomatic number which represents the total number of independent paths possible in the process model [13].", "startOffset": 178, "endOffset": 182}, {"referenceID": 13, "context": "The fitness metric is used to determine the extent to which an event log conforms to the process model generated from that log and vice versa [14].", "startOffset": 142, "endOffset": 146}, {"referenceID": 14, "context": "The pseudocode to determine the fitness of the process model is given in Algorithm 3 [15].", "startOffset": 85, "endOffset": 89}, {"referenceID": 15, "context": "Self-loop Analysis Study of self-loops is important since such loops indicate intensive problems [16] which are often difficult to detect because it may seem that at each stage some useful work is being done though actually no progress is being made and the bug is just getting transferred [16].", "startOffset": 97, "endOffset": 101}, {"referenceID": 15, "context": "Self-loop Analysis Study of self-loops is important since such loops indicate intensive problems [16] which are often difficult to detect because it may seem that at each stage some useful work is being done though actually no progress is being made and the bug is just getting transferred [16].", "startOffset": 290, "endOffset": 294}, {"referenceID": 16, "context": "Such loops are undesirable because the average time to resolve a re-opened bug can be twice as long as the time to resolve a non re-opened bug [17].", "startOffset": 143, "endOffset": 147}, {"referenceID": 17, "context": "Bug reopening is equally important in open source systems like Bugzilla as it is in closed source or commercial systems [18].", "startOffset": 120, "endOffset": 124}, {"referenceID": 16, "context": "It increases the costs of maintaining the software, lessens the user-perceived quality of the system and leads to extra and needless rework by already loaded developers [17].", "startOffset": 169, "endOffset": 173}, {"referenceID": 14, "context": "We take into account the following factors [15] [17] [18] that contribute in reopening of bugs:", "startOffset": 43, "endOffset": 47}, {"referenceID": 16, "context": "We take into account the following factors [15] [17] [18] that contribute in reopening of bugs:", "startOffset": 48, "endOffset": 52}, {"referenceID": 17, "context": "We take into account the following factors [15] [17] [18] that contribute in reopening of bugs:", "startOffset": 53, "endOffset": 57}, {"referenceID": 18, "context": "The problem of spaghetti process models has been discussed in [19] and [20].", "startOffset": 62, "endOffset": 66}, {"referenceID": 19, "context": "The problem of spaghetti process models has been discussed in [19] and [20].", "startOffset": 71, "endOffset": 75}, {"referenceID": 20, "context": "propose a context aware approach to cluster process instances based on Levenshtein distance [21].", "startOffset": 92, "endOffset": 96}, {"referenceID": 20, "context": "The authors evaluate the proposed algorithm on the telephone repair process event log and show that the approach is able to generate clusters with high degree of fitness and comprehensibility when compared to other approaches [21].", "startOffset": 226, "endOffset": 230}, {"referenceID": 18, "context": "In [19] Aalst et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 18, "context": "processes [19].", "startOffset": 10, "endOffset": 14}, {"referenceID": 18, "context": "They use significance and correlation metrics to simplify the processes by clustering less significant but highly correlated data [19].", "startOffset": 130, "endOffset": 134}, {"referenceID": 21, "context": "[22].", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "extended this work by using two dummy states (input and output state) with the Markov chain model for depicting the probability for an event to be the first or last in the sequence [20].", "startOffset": 181, "endOffset": 185}, {"referenceID": 19, "context": "They also suggest several preprocessing steps done before clustering to eliminate undesirable events from the event log [20].", "startOffset": 120, "endOffset": 124}, {"referenceID": 22, "context": "propose a new tecnique called ActiTraC (active trace clustering) for trace clustering which uses elements of active learning in an unsupervised environment [23].", "startOffset": 156, "endOffset": 160}, {"referenceID": 22, "context": "The proposed algorithm lessens the divergence between the clustering bias and the evaluation bias and improves the accuracy and complexity of process models [23].", "startOffset": 157, "endOffset": 161}, {"referenceID": 23, "context": "[24] propose a trace clustering technique that uses several perspectives of traces such as performance, transition, case and event attributes organised as a feature vector.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "Conformance measurement done through process mining in business processes has been shown in [14], [25] and [15].", "startOffset": 92, "endOffset": 96}, {"referenceID": 24, "context": "Conformance measurement done through process mining in business processes has been shown in [14], [25] and [15].", "startOffset": 98, "endOffset": 102}, {"referenceID": 14, "context": "Conformance measurement done through process mining in business processes has been shown in [14], [25] and [15].", "startOffset": 107, "endOffset": 111}], "year": 2015, "abstractText": "Issue Tracking Systems (ITS) such as Bugzilla can be viewed as Process Aware Information Systems (PAIS) generating event-logs during the life-cycle of a bug report. Process Mining consists of mining event logs generated from PAIS for process model discovery, conformance and enhancement. We apply process map discovery techniques to mine event trace data generated from ITS of open source Firefox browser project to generate and study process models. Bug life-cycle consists of diversity and variance. Therefore, the process models generated from the event-logs are spaghetti-like with large number of edges, inter-connections and nodes. Such models are complex to analyse and difficult to comprehend by a process analyst. We improve the Goodness (fitness and structural complexity) of the process models by splitting the event-log into homogeneous subsets by clustering structurally similar traces. We adapt the K-Medoid clustering algorithm with two different distance metrics: Longest Common Subsequence (LCS) and Dynamic Time Warping (DTW). We evaluate the goodness of the process models generated from the clusters using complexity and fitness metrics. We study backforth & self-loops, bug reopening, and bottleneck in the clusters obtained and show that clustering enables better analysis. We also propose an algorithm to automate the clustering process the algorithm takes as input the event log and returns the best cluster set.", "creator": "LaTeX with hyperref package"}}}