{"id": "1511.08205", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Nov-2015", "title": "Breaking Symmetries in Graph Search with Canonizing Sets", "abstract": "There are many complex combinatorial problems which involve searching for an undirected graph satisfying given constraints. Such problems are often highly challenging because of the large number of isomorphic representations of their solutions. This paper introduces effective and compact, complete symmetry breaking constraints for small graph search. Enumerating with these symmetry breaks generates all and only non-isomorphic solutions. For small search problems, with up to $10$ vertices, we compute instance independent symmetry breaking constraints. For small search problems with a larger number of vertices we demonstrate the computation of instance dependent constraints which are complete. We illustrate the application of complete symmetry breaking constraints to extend two known sequences from the OEIS related to graph numeration.", "histories": [["v1", "Wed, 25 Nov 2015 06:26:33 GMT  (19kb,D)", "http://arxiv.org/abs/1511.08205v1", null], ["v2", "Thu, 4 Feb 2016 03:05:24 GMT  (25kb,D)", "http://arxiv.org/abs/1511.08205v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DM", "authors": ["avraham itzhakov", "michael codish"], "accepted": false, "id": "1511.08205"}, "pdf": {"name": "1511.08205.pdf", "metadata": {"source": "CRF", "title": "Breaking Symmetries in Graph Search with Canonizing Sets", "authors": ["Avraham Itzhakov", "Michael Codish"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "It is about searching for a graph that meets a given set of constraints, or determining that no such graph exists."}, {"heading": "2 A Motivating Example", "text": "A classic example of a graph search problem refers to the search for Ramsey graphs [25]. The graph R (s, t; n) is a simple graph with n vertices, no clique of size s, and no independent set of size. Figure 1 illustrates an R (s, 3; 5) graph. The graph contains no 3 clique and no 3 independent set. A Ramsey (s, t; n) graph is an R (s, t; n) graph for some n. The set of all R (s, t; n) graphs, modulo-graph isomorphism is called R (s, t; n). The Ramsey theory tells us that there is only a finite number of Ramsey (s, t) graphs for each s and t, but finding all of these graphs or even determining the largest n graphs for which they exist is a known symmetric problem."}, {"heading": "3 Preliminaries", "text": "We assume that the vertex number of a graph, G = (V, E), is a pair (A) consisting of a pair (A) and a matrix (n) composed of a graph. (A) A graph (n) consisting of a graph (n) and a matrix (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n), a graph (n)."}, {"heading": "Then, by Definition 2 and Lemma 1,", "text": "min\u0432 (A) = (abcdef lex adebcf) \u0442 (abcdef lex bacdfe) \u0442 (abcdef lex acbdef) and this simplified using properties of lexicographic orderings to: min\u044b (A) = (bc lex de). [9] Codish et al. present the following symmetry breaks for graph search problems where Ai denotes the i-th series of adjazency matrix A and {i, j} the lexicographic comparison for strings after removal of their ith and jth elements. Definition 4 (lexicographic symmetry break, [9]. Let A be an n \u00d7 n predijacency matrix. [Millain] mutation on strings after removal of their ith and jth elements.Definition 4 (lexicographic symmetry break, [9]."}, {"heading": "4 Canonizing Symmetry Breaks", "text": "The observation in Example 3 that a canonization set for graphs with n vertices can be much smaller than n! motivates us to look for \"small\" canonization sets that could be used to introduce canonization symmetry-breaking constraints on graph search problems. In this section, we describe an approach to calculating such canonization sets. With this approach, we calculate relatively small canonization sets that apply to graph search problems with up to 10 vertices. We illustrate their application when breaking all breaking symmetries in the Ramsey and claw-free graph search."}, {"heading": "Computing Canonizing Sets", "text": "To calculate the number of permutations, we have to calculate the number of permutations in G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G) to G (G) to G) to G (G) to G) to G (G) to G (G) to G) to G (G) to G) to G (G) to G) to G (G) to G) to G (G) to G) to G (G) to G) to G (G) to G (G) to G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G) to G (G)."}, {"heading": "Computing Ramsey Graphs with Canonizing Symmetry Breaks", "text": "Recall Example 1, where we introduced the graph search problem for Ramsey graphs. Table 2 describes the calculation of all R (4, 4; n) graphs for n \u2264 10 with an SAT solver. The table compares two configurations: one with the partial symmetry break predicate sb \u0445 \"defined in [9], and the other with a canonizing symmetry break predicate min\u043e, which is the canonizing set of permutations, the calculation of which is in Table 1. For each configuration, we detail the size of the SAT encoding (clauses and variables), the time in seconds (except where it is specified in hours) to find all solutions with a SAT solver, and the number of solutions found. Note that the encodings are much larger using the canonizing symmetry breaks. However, the SAT solution time is much smaller than the minimum configuration of 10 = n can be calculated in 33 hours."}, {"heading": "Computing Claw-Free Graphs with Canonizing Symmetry Breaks", "text": "Let us recall Example 2, where we introduce the claw-free graph search problem, where the number of claw-free graphs for n \u2264 9 vertices is detailed as sequence A086991 on the OEIS [23]. Table 3 describes the claw-free graph search as a graph search problem, then we use a SAT solver to calculate the set of all claw-free graphs on n vertices. We illustrate that using canonizing symmetry breaks and the results detailed in Table 1, we can calculate the set of all claw-free graphs modulo-graph isomorphism for n \u2264 10, thus calculating a new value for the sequence A086991. The column descriptions are the same as those for Table 2. For each configuration, we detail the size of the SAT coding (clauses and variables), the time in seconds to find all solutions using a SAT solution set, and the number of channels found."}, {"heading": "5 Instance Dependent Canonizing Symmetry Breaks", "text": "Considering a specific graph search problem, we can adjust algorithm 1 to calculate a series of permutations that cause a canonical symmetry pause that is specific to this problem, namely so that all solutions to the solution structure are obtained, and so that all symmetries within the solution space are not isomorphic. In practice, we can often consider instance-dependent canonization sets for larger graphs with n > 10 vertices. In this section, we demonstrate the calculation and application of an instance-dependent canonization sequence. Let's let P = (B, A) be a graph search problem. To adjust algorithm 1 to calculate an instance-dependent canonization set, we need to make a single change in the algorithm: to apply the loop to a series of graphs, we do not just apply it to the entire graph search."}, {"heading": "Computing Highly Irregular Graphs Per Degree Sequence", "text": "Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic Graphic"}, {"heading": "6 More Related Work", "text": "Isomorphism-free generation of combinatorial objects, and graphs in particular, is a well-studied approach. Typically, graphs are constructed by adding edges in iteration until a solution is found and traceability occurs when they fail. In each such iteration, the graph is checked to see if it can be extended any further: (a) to solve the graph search problem, and (b) to a canonical graph. Both tests take into account only the fixed part of the subgraph. Initially, there are very few permutations to consider for (b) because the subgraph is still small. However, as the number of edges grows, this test becomes harder and takes up more time. Our method, by contrast, is static."}, {"heading": "7 Conclusion and Future Work", "text": "Although each vertex permutation is potentially symmetrical, we calculate compact canonizing symmetry breaks that are much smaller than those that take all permutations into account. Our strategy for graph search problems is two-phase. First, symmetry break constraints are calculated. Second, these constraints are added to the model, and then a solver is applied to find (any) solutions that satisfy the model. We have presented methods that generate both instance-independent and instance-dependent symmetry break constraints. While instance-dependent symmetry breaks limit their applicability as they grow enormously for graphs with more than 10 vertices, instance-dependent symmetry breaks have been successfully applied to calculate new values in highly irregular graphs, the OEIS sequence for graphs with up to 19 vertibles.Although our approach is limited to graphs with a small number of open problems, there are many applications."}], "references": [{"title": "Highly irregular graphs", "author": ["Y. Alavi", "G. Chartrand", "F.R. Chung", "P. Erd\u00f6s", "R.L. Graham", "O.R. Oellermann"], "venue": "Journal of Graph Theory, 11(2):235\u2013249,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1987}, {"title": "Symmetry in boolean satisfiability", "author": ["F.A. Aloul"], "venue": "Symmetry, 2(2):1121\u20131134,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2010}, {"title": "Breaking instanceindependent symmetries in exact graph coloring", "author": ["F.A. Aloul", "I.L. Markov", "A. Ramani", "K.A. Sakallah"], "venue": "CoRR, abs/1109.2347,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Efficient symmetry breaking for boolean satisfiability", "author": ["F.A. Aloul", "K.A. Sakallah", "I.L. Markov"], "venue": "IEEE Trans. Computers, 55(5):549\u2013558,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "Canonical labeling of graphs", "author": ["L. Babai", "E.M. Luks"], "venue": "In Proceedings of the fifteenth annual ACM symposium on Theory of computing, pages 171\u2013183. ACM,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1983}, {"title": "Fast generation of cubic graphs", "author": ["G. Brinkmann"], "venue": "Journal of Graph Theory, 23(2):139\u2013149,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1996}, {"title": "Cataloguing the graphs on 10 vertices", "author": ["R. Cameron", "C. Colbourn", "R. Read", "N.C. Wormald"], "venue": "Journal of Graph Theory, 9(4):551\u2013562,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1985}, {"title": "Breaking symmetries in graph representation", "author": ["M. Codish", "A. Miller", "P. Prosser", "P.J. Stuckey"], "venue": "In F. Rossi, editor, IJCAI 2013, Proceedings of the 23rd International Joint Conference on Artificial Intelligence, Beijing, China, August 3-9, 2013. IJCAI/AAAI,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Constraints for symmetry breaking in graph representation", "author": ["M. Codish", "A. Miller", "P. Prosser", "P.J. Stuckey"], "venue": "Full version of [9] (in preparation).,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Symmetry-breaking predicates for search problems", "author": ["J.M. Crawford", "M.L. Ginsberg", "E.M. Luks", "A. Roy"], "venue": "In L. C. Aiello, J. Doyle, and S. C. Shapiro, editors, Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR\u201996), Cambridge, Massachusetts, USA, November 5-8, 1996., pages 148\u2013159. Morgan Kaufmann,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1996}, {"title": "Constructive enumeration of combinatorial objects", "author": ["I. Faradzev"], "venue": "Problmes Combinatoires et Thorie des Graphes Colloque Internat, Paris, pages 131\u2013135,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1978}, {"title": "Symmetry and satisfiability: An update", "author": ["H. Katebi", "K.A. Sakallah", "I.L. Markov"], "venue": "In O. Strichman and S. Szeider, editors, Theory and Applications of Satisfiability Testing - SAT 2010, 13th International Conference, SAT 2010, Edinburgh, UK, July 11-14, 2010. Proceedings, volume 6175 of Lecture Notes in Computer Science, pages 113\u2013127. Springer,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Conflict anticipation in the search for graph automorphisms", "author": ["H. Katebi", "K.A. Sakallah", "I.L. Markov"], "venue": "In N. Bj\u00f8rner and A. Voronkov, editors, Logic for Programming, Artificial Intelligence, and Reasoning - 18th International Conference, LPAR-18, M\u00e9rida, Venezuela, March 11-15, 2012. Proceedings, volume 7180 of Lecture Notes in Computer Science, pages 243\u2013257. Springer,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Graph symmetry detection and canonical labeling: Differences and synergies", "author": ["H. Katebi", "K.A. Sakallah", "I.L. Markov"], "venue": "In A. Voronkov, editor, Turing-100 - The Alan Turing Centenary, Manchester, UK, June 22-25, 2012, volume 10 of EPiC Series, pages 181\u2013195. EasyChair,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "The complexity of symmetry-breaking formulas", "author": ["E.M. Luks", "A. Roy"], "venue": "Annals of Mathematics and Artificial Intelligence, 41(1):19\u201345,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2004}, {"title": "Degree sequences of highly irregular graphs", "author": ["Z. Majcher", "J. Michael"], "venue": "Discrete Mathematics, 164(1):225\u2013236,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1997}, {"title": "nauty user\u2019s guide (version 1.5)", "author": ["B. McKay"], "venue": "Technical Report TR-CS-90-02, Australian National University,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1990}, {"title": "Isomorph-free exhaustive generation", "author": ["B.D. McKay"], "venue": "Journal of Algorithms, 26(2):306\u2013324,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1998}, {"title": "R(4, 5) = 25", "author": ["B.D. McKay", "S.P. Radziszowski"], "venue": "Journal of Graph Theory, 19(3):309\u2013322,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1995}, {"title": "Applying SAT methods in unbounded symbolic model checking", "author": ["K.L. McMillan"], "venue": "In E. Brinksma and K. G. Larsen, editors, Computer Aided Verification, 14th International Conference, Proceedings, volume 2404 of Lecture Notes in Computer Science, pages 250\u2013264. Springer,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2002}, {"title": "Boolean equi-propagation for concise and efficient SAT encodings of combinatorial problems", "author": ["A. Metodi", "M. Codish", "P.J. Stuckey"], "venue": "J. Artif. Intell. Res. (JAIR), 46:303\u2013341,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2013}, {"title": "On the satisfiability of symmetrical constrained satisfaction problems", "author": ["J. Puget"], "venue": "In H. J. Komorowski and Z. W. Ras, editors, Methodologies for Intelligent Systems, 7th International Symposium, ISMIS \u201993, Trondheim, Norway, June 15-18, 1993, Proceedings, volume 689 of Lecture Notes in Computer Science, pages 350\u2013361. Springer,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1993}, {"title": "Small Ramsey numbers", "author": ["S.P. Radziszowski"], "venue": "Electronic Journal of Combinatorics, 1994. Revision #14: January,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "Every one a winner or how to avoid isomorphism search when cataloguing combinatorial configurations", "author": ["R.C. Read"], "venue": "Ann. Discrete Math., 2:107\u2013120,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1978}, {"title": "A survey of graph generation techniques", "author": ["R.C. Read"], "venue": "In Combinatorial Mathematics VIII, pages 77\u201389. Springer,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1981}, {"title": "Generating effective symmetry-breaking predicates for search problems", "author": ["I. Shlyakhter"], "venue": "Discrete Applied Mathematics, 155(12):1539 \u2013 1548, 2007. {SAT}", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2001}, {"title": "General symmetry breaking constraints", "author": ["T. Walsh"], "venue": "In F. Benhamou, editor, Principles and Practice of Constraint Programming - CP 2006, 12th International Conference, CP 2006, Nantes, France, September 25-29, 2006, Proceedings, volume 4204 of Lecture Notes in Computer Science, pages 650\u2013664. Springer,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2006}, {"title": "Symmetry breaking constraints: Recent results", "author": ["T. Walsh"], "venue": "In J. Hoffmann and B. Selman, editors, Proceedings of the Twenty-Sixth AAAI Conference on Artificial Intelligence, July 22-26, 2012, Toronto, Ontario, Canada. AAAI Press,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 21, "context": "One common approach to eliminate symmetries is to introduce symmetry breaking constraints [24,11,28,29] which rule out isomorphic solutions thus reducing the size of the search space while preserving the set of solutions.", "startOffset": 90, "endOffset": 103}, {"referenceID": 9, "context": "One common approach to eliminate symmetries is to introduce symmetry breaking constraints [24,11,28,29] which rule out isomorphic solutions thus reducing the size of the search space while preserving the set of solutions.", "startOffset": 90, "endOffset": 103}, {"referenceID": 25, "context": "One common approach to eliminate symmetries is to introduce symmetry breaking constraints [24,11,28,29] which rule out isomorphic solutions thus reducing the size of the search space while preserving the set of solutions.", "startOffset": 90, "endOffset": 103}, {"referenceID": 26, "context": "One common approach to eliminate symmetries is to introduce symmetry breaking constraints [24,11,28,29] which rule out isomorphic solutions thus reducing the size of the search space while preserving the set of solutions.", "startOffset": 90, "endOffset": 103}, {"referenceID": 9, "context": "However, computing such symmetry breaking constraints is, most likely, intractable in general [11].", "startOffset": 94, "endOffset": 98}, {"referenceID": 27, "context": "In practice, symmetry breaking constraints typically rule out some, but not all of the symmetries in the search and, as noted in the survey by Walsh [30], often a few simple constraints rule out most of the symmetries.", "startOffset": 149, "endOffset": 153}, {"referenceID": 25, "context": "Shlyakhter [28] notes that the core difficulty is to identify a symmetrybreaking predicate which is both effective (rules out a large portion of the search ar X iv :1 51 1.", "startOffset": 11, "endOffset": 15}, {"referenceID": 8, "context": "In [10], Codish et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 3, "context": "A typical application is in the context of SAT solving as described for example in [4,2,13,15,14].", "startOffset": 83, "endOffset": 97}, {"referenceID": 1, "context": "A typical application is in the context of SAT solving as described for example in [4,2,13,15,14].", "startOffset": 83, "endOffset": 97}, {"referenceID": 11, "context": "A typical application is in the context of SAT solving as described for example in [4,2,13,15,14].", "startOffset": 83, "endOffset": 97}, {"referenceID": 13, "context": "A typical application is in the context of SAT solving as described for example in [4,2,13,15,14].", "startOffset": 83, "endOffset": 97}, {"referenceID": 12, "context": "A typical application is in the context of SAT solving as described for example in [4,2,13,15,14].", "startOffset": 83, "endOffset": 97}, {"referenceID": 16, "context": "First one generates the set S of solutions to the constraints, and then one applies a graph isomorphism tool, such as nauty [18] to reduce S modulo isomorphism.", "startOffset": 124, "endOffset": 128}, {"referenceID": 2, "context": "In general, our first technique is, in the terminology of [3], \u201cinstance independent\u201d and applies to break all symmetries in graph search problems on up to 10 vertices.", "startOffset": 58, "endOffset": 61}, {"referenceID": 22, "context": "A classic example of a graph search problem relates to the search for Ramsey graphs [25].", "startOffset": 84, "endOffset": 88}, {"referenceID": 7, "context": "Introducing a partial symmetry breaking constraint as described in [9] in the search to enumerate all R(3, 4; 8) graphs computes only 11 graphs in a fraction of the time required to compute the full set of solutions.", "startOffset": 67, "endOffset": 70}, {"referenceID": 6, "context": "Because adjacency matrices are symmetric with zeroes on the diagonal, it suffices to focus on the upper triangle parts of the matrices [8].", "startOffset": 135, "endOffset": 138}, {"referenceID": 23, "context": "e lex leader) in each equivalence class of isomorphic graphs [26].", "startOffset": 61, "endOffset": 65}, {"referenceID": 1, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 10, "endOffset": 22}, {"referenceID": 0, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 10, "endOffset": 22}, {"referenceID": 2, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 10, "endOffset": 22}, {"referenceID": 3, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 10, "endOffset": 22}, {"referenceID": 0, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 24, "endOffset": 36}, {"referenceID": 2, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 24, "endOffset": 36}, {"referenceID": 1, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 24, "endOffset": 36}, {"referenceID": 3, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 24, "endOffset": 36}, {"referenceID": 0, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 38, "endOffset": 50}, {"referenceID": 1, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 38, "endOffset": 50}, {"referenceID": 3, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 38, "endOffset": 50}, {"referenceID": 2, "context": "Let \u03a0 = { [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] } .", "startOffset": 38, "endOffset": 50}, {"referenceID": 1, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 20, "endOffset": 32}, {"referenceID": 0, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 20, "endOffset": 32}, {"referenceID": 2, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 20, "endOffset": 32}, {"referenceID": 3, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 20, "endOffset": 32}, {"referenceID": 0, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 34, "endOffset": 46}, {"referenceID": 2, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 34, "endOffset": 46}, {"referenceID": 1, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 34, "endOffset": 46}, {"referenceID": 3, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 34, "endOffset": 46}, {"referenceID": 0, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 48, "endOffset": 60}, {"referenceID": 1, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 48, "endOffset": 60}, {"referenceID": 3, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 48, "endOffset": 60}, {"referenceID": 2, "context": "c e f 0 \uf8fa\uf8fa\uf8fa\uf8fb \u03a0 = \uf8f2\uf8f3 [2, 1, 3, 4], [1, 3, 2, 4], [1, 2, 4, 3] \uf8fd\uf8fe", "startOffset": 48, "endOffset": 60}, {"referenceID": 7, "context": "In [9], Codish et al.", "startOffset": 3, "endOffset": 6}, {"referenceID": 7, "context": "Definition 4 (lexicographic symmetry break, [9]).", "startOffset": 44, "endOffset": 47}, {"referenceID": 20, "context": "Encodings to CNF are obtained using the finite-domain constraint compiler BEE [22].", "startOffset": 78, "endOffset": 82}, {"referenceID": 19, "context": "This technique, originally due to McMillan [21], is simplistic but suffices for our purposes.", "startOffset": 43, "endOffset": 47}, {"referenceID": 14, "context": "Drawing on the discussion in [16,6,11] we do not expect to find a polynomial time algorithm to compute a canonical (or any other complete) symmetry breaking constraint for graph search problems based on Definition 2.", "startOffset": 29, "endOffset": 38}, {"referenceID": 4, "context": "Drawing on the discussion in [16,6,11] we do not expect to find a polynomial time algorithm to compute a canonical (or any other complete) symmetry breaking constraint for graph search problems based on Definition 2.", "startOffset": 29, "endOffset": 38}, {"referenceID": 9, "context": "Drawing on the discussion in [16,6,11] we do not expect to find a polynomial time algorithm to compute a canonical (or any other complete) symmetry breaking constraint for graph search problems based on Definition 2.", "startOffset": 29, "endOffset": 38}, {"referenceID": 7, "context": "The table compares two configurations: one using the partial symmetry breaking predicate sb` defined in [9] and the other using a canonizing symmetry break min\u03a0 where \u03a0 is the canonizing set of permutations, the", "startOffset": 104, "endOffset": 107}, {"referenceID": 18, "context": "Finally note that the computation with min\u03a0 computes the precise number of solutions modulo graph isomorphism as detailed for example in [20].", "startOffset": 137, "endOffset": 141}, {"referenceID": 0, "context": "A connected graph is called highly irregular if each of its vertices is adjacent only to vertices with distinct degrees [1].", "startOffset": 120, "endOffset": 123}, {"referenceID": 15, "context": "To perform the first step we apply a result from [17] which states that any degree sequence of a highly irregular graph is of the form \u3008mm , .", "startOffset": 49, "endOffset": 53}, {"referenceID": 23, "context": "Isomorphism free generation of combinatorial objects and particularly graphs, is a well studied topic [26,12,27,7,19].", "startOffset": 102, "endOffset": 117}, {"referenceID": 10, "context": "Isomorphism free generation of combinatorial objects and particularly graphs, is a well studied topic [26,12,27,7,19].", "startOffset": 102, "endOffset": 117}, {"referenceID": 24, "context": "Isomorphism free generation of combinatorial objects and particularly graphs, is a well studied topic [26,12,27,7,19].", "startOffset": 102, "endOffset": 117}, {"referenceID": 5, "context": "Isomorphism free generation of combinatorial objects and particularly graphs, is a well studied topic [26,12,27,7,19].", "startOffset": 102, "endOffset": 117}, {"referenceID": 17, "context": "Isomorphism free generation of combinatorial objects and particularly graphs, is a well studied topic [26,12,27,7,19].", "startOffset": 102, "endOffset": 117}], "year": 2017, "abstractText": "There are many complex combinatorial problems which involve searching for an undirected graph satisfying given constraints. Such problems are often highly challenging because of the large number of isomorphic representations of their solutions. This paper introduces effective and compact, complete symmetry breaking constraints for small graph search. Enumerating with these symmetry breaks generates all and only non-isomorphic solutions. For small search problems, with up to 10 vertices, we compute instance independent symmetry breaking constraints. For small search problems with a larger number of vertices we demonstrate the computation of instance dependent constraints which are complete. We illustrate the application of complete symmetry breaking constraints to extend two known sequences from the OEIS related to graph enumeration.", "creator": "LaTeX with hyperref package"}}}