{"id": "1511.08350", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Nov-2015", "title": "A global Constraint for mining Sequential Patterns with GAP constraint", "abstract": "Sequential pattern mining (SPM) under gap constraint is a challenging task. Many efficient specialized methods have been developed but they are all suffering from a lack of genericity. The Constraint Programming (CP) approaches are not so effective because of the size of their encodings. In[7], we have proposed the global constraint Prefix-Projection for SPM which remedies to this drawback. However, this global constraint cannot be directly extended to support gap constraint. In this paper, we propose the global constraint GAP-SEQ enabling to handle SPM with or without gap constraint. GAP-SEQ relies on the principle of right pattern extensions. Experiments show that our approach clearly outperforms both CP approaches and the state-of-the-art cSpade method on large datasets.", "histories": [["v1", "Thu, 26 Nov 2015 10:45:34 GMT  (598kb,D)", "http://arxiv.org/abs/1511.08350v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["amina kemmar", "samir loudni", "yahia lebbah", "patrice boizumault", "thierry charnois"], "accepted": false, "id": "1511.08350"}, "pdf": {"name": "1511.08350.pdf", "metadata": {"source": "CRF", "title": "A global Constraint for mining Sequential Patterns with GAP constraint", "authors": ["Amina Kemmar", "Samir Loudni", "Yahia Lebbah", "Patrice Boizumault", "Thierry Charnois"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "There are many useful applications, including detecting changes in customer behavior, detecting intruders, and finding relevant genes from the sequences. In recent years, many studies have focused on products that were purchased at regular intervals. However, in recent years, it has been possible to deploy a degree of flexibility in the sequences."}, {"heading": "2 Preliminaries", "text": "First, we provide the basic definitions for GSPM. Then we show that the anti-monotonicity property of the frequency of SPM does not apply to GSPM. Finally, we introduce the right pattern extensions that allow efficient filtering for GSPM."}, {"heading": "2.1 Definitions", "text": "The language of the sequences corresponds to LI \u03b2 =. In the DB database (DB database), a sequence s via LI is an ordered list < s1s2. DB database is a gap where si, 1 \u2264 i \u2264 n, is a sequence. We now define the subsequence relationship [M, N] under Gap [M, N], which is the allowed distance between items of the sequences in sequences.Definition 2 (subsequence relationship [M, N]). We define the subsequence relationship [M, N] under Gap [M, N], which is the allowed distance between items in sequences.Definition 2 (subsequence relationship [M, N] under Gap [M, N]). We define the subsequence relationship [M, N]."}, {"heading": "2.3 Right pattern extensions", "text": "The correct pattern of any pattern p gives all possible sub-sequences that can be appended to the right of p to form a gap [M, N] limited pattern. According to proposal 1, the set of all locally common items within the correct pattern is extensions of p in SDS. Given a certain gap (sid, s) and a pattern p s.t. p [M, N] s is an operator that allows to calculate all correct patterns of a pattern. [M, N].Definition 7 (right pattern extensions) is the collection of legal sub-sequences of s to the right of p and a satisfactory gap [M, N] s. The correct pattern extensions of p in s, denoted by Ext [M, N] R (p, s), is the collection of legal sub-sequences of s that are to the right of p and are equal. To define Ext [M, N] we must define BE [M] N] R (p, s)."}, {"heading": "3 Related works", "text": "There are also several methods that focus on gap constraints. Zaki [16] first proposed cSpade, a deep-first search based on a vertical database format, but including max-gap, max-span and length constraints. Ji et al. [6] and Li et al. [9] explored the problem of mining frequent patterns with gap constraints. In [6] a minimal distinction is made between sequences that often occur in the positive consequences, and in the negative consequences where the maximum gap constraint is defined."}, {"heading": "4 GAP-SEQ global constraint", "text": "This section is dedicated to global GAP SEQ constraint. Section 4.1 defines the global GAP SEQ constraint and introduces CSP modelling. Section 4.2 shows how filtering can use the anti-monotonicity property of the gap [M, N] constraint (see Section 6) and proper pattern extensions (see Section 5) to remove inconsistent values from the range of a future variable. Section 4.3 describes the filter algorithm and Section 4.4 provides its temporal and spatial complexity."}, {"heading": "4.1 CSP modeling for GSPM", "text": "A restriction of satisfaction problem (CSP) consists of a setX of n variables, a domainD mapping each variable Xi-X to a finite set of values D (Xi), and a set of constraints C. An assignment \u03c3 is a mapping from variables in X to values in their domains. (a) Variables and domains. Let P be the unknown pattern of size \"we are looking for. Symbol 2 stands for an empty item and denotes the end of a sequence. We encoding the unknown pattern P of maximum length\" with a sequence of 'variables < P1, P2,. Each variable Pj represents the item in the sequence."}, {"heading": "4.2 Principles of filtering", "text": "(a) Maintaining local consistency is a challenging task due to the exponential number of candidates that should be considered on the basis of specific DC consistency. < b > DB = > DB = > DB patterns that should find the common patterns. < b > DB patterns, the problem is even more difficult since the complexity of testing for sub-sequences is higher than the complexity of the standard sub-sequence relationship, taking into account the number of maximum frequent sequences. Furthermore, the NPhardness of the mining maximum2 frequent sequences was established in [15] by demonstrating the # P complexity of the problem of counting the maximum frequent sequences. Hence, ensuring domain consistency (DC) for GAP-SEQ i.e., the search for any variable Pj, a value dj (Pj) that is satisfying the constraint NP-hard.Thus, the consistency of the specific GAP-SEQ receives a lower consistency than the SEQ."}, {"heading": "4.3 Filtering algorithm", "text": "Algorithm 1 describes the pseudo-code of the GAP SEQ filter algorithms (TEPCs). < DB patterns = > DB patterns are used as input: the index j of the last assigned variable in P, the current partial assignment \u03c3 = < \u03c3 (Pj) >, the minimum support threshold minsup, the minimum and the maximum gaps. Internal data structure ALLOCC stores all intermediate events of the patterns in SDB, whereALLOCCj = AllOcc (for j), the minimum support threshold minsup, the minimum and the maximum gaps. [1.] If this happens, then ALLOCC0 = {(sid, [1, # s]). ALLOCCj is calculated step by step by ALLOCCj to improve efficiency."}, {"heading": "4.4 Temporal and spatial complexities of the filtering algorithm", "text": "The calculation of ALLOCCj from ALLOCCj \u2212 1 (see function GETALLOCC of algorithm 2) can be achieved in O (m \u00b7 '2). The function GETRIGHTEXT (see algorithm 2) processes all \u03c3 occurrences in each sequence of the SDS. In the worst case, there may be \"occurrences for each sequence in the database. Thus, the time complexity of the function GETRIGHTEXT is O (m \u00b7' 2 + m \u00b7 ') i.e. O (m \u00b7' 2).Proposition 7. In the worst case, (i) filtering in O (m \u00b7 '2 + d) and (ii) the space complexity in the structure of GETRIGHTEXT (m) can be achieved."}, {"heading": "5 Experiments", "text": "eiD rf\u00fc ide rf\u00fc the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green for the green"}, {"heading": "6 Conclusion", "text": "The filtering algorithm benefits from the principle of correct pattern extensions and prefixes the anti-monotonicity property of the gap constraint. GAP-SEQ enables multiple types of constraints to be handled simultaneously and does not require any reified constraints or additional variables to encode the subsequence relationship. Experiments conducted on multiple real data sets (i) show that our approach significantly exceeds existing CP approaches as well as specialized methods for GSPM on large data sets, and (ii) demonstrates the ability of GAP-SEQ to handle SPM efficiently. This work opens up several questions for future research. We plan to handle constraints on sequence patterns such as coherence, relevant subgroup and skypatter constraints."}], "references": [{"title": "Mining sequential patterns", "author": ["R. Agrawal", "R. Srikant"], "venue": "Yu, P.S., Chen, A.L.P. (eds.) ICDE. pp. 3\u201314. IEEE Computer Society", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1995}, {"title": "Sequential pattern mining using a bitmap representation", "author": ["J. Ayres", "J. Flannick", "J. Gehrke", "T. Yiu"], "venue": "KDD 2002. pp. 429\u2013435. ACM", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Sequential pattern mining to discover relations between genes and rare diseases", "author": ["N. B\u00e9chet", "P. Cellier", "T. Charnois", "B. Cr\u00e9milleux"], "venue": "CBMS", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "A SAT-based approach for discovering frequent, closed and maximal patterns in a sequence", "author": ["E. Coquery", "S. Jabbour", "L. Sa\u00efs", "Y. Salhi"], "venue": "ECAI. pp. 258\u2013263", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "SPMF: A Java Open-Source Pattern Mining Library", "author": ["P. Fournier-Viger", "A. Gomariz", "T. Gueniche", "A. Soltani", "C. Wu", "V. Tseng"], "venue": "J. of Machine Learning Resea", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Mining minimal distinguishing subsequence patterns with gap constraints", "author": ["X. Ji", "J. Bailey", "G. Dong"], "venue": "(ICDM\u201905. pp. 194\u2013201", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2005}, {"title": "PREFIX-PROJECTION global constraint for sequential pattern mining", "author": ["A. Kemmar", "S. Loudni", "Y. Lebbah", "P. Boizumault", "T. Charnois"], "venue": "Principles and Practice of Constraint Programming - 21st International Conference, CP 2015, Cork, Ireland, August 31 - September 4, 2015, Proceedings. pp. 226\u2013243", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "Mining relevant sequence patterns with cp-based framework", "author": ["A. Kemmar", "W. Ugarte", "S. Loudni", "T. Charnois", "Y. Lebbah", "P. Boizumault", "B. Cr\u00e9milleux"], "venue": "ICTAI. pp. 552\u2013559", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "Efficiently mining closed subsequences with gap constraints", "author": ["C. Li", "J. Wang"], "venue": "SIAM 2008 on Data Mining. pp. 313\u2013322", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Efficient mining of gap-constrained subsequences and its various applications", "author": ["C. Li", "Q. Yang", "J. Wang", "M. Li"], "venue": "Trans. Knowl. Discov. Data 6(1), 2:1\u20132:39", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "A constraint programming approach for mining sequential patterns in a sequence database", "author": ["J.P. M\u00e9tivier", "S. Loudni", "T. Charnois"], "venue": "ECML/PKDD Workshop on Languages for Data Mining and Machine Learning", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "Constraint-based sequence mining using constraint programming", "author": ["B. N\u00e9grevergne", "T. Guns"], "venue": "CPAIOR\u201915. pp. 288\u2013305", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "PrefixSpan: Mining sequential patterns by prefix-projected growth", "author": ["J. Pei", "J. Han", "B. Mortazavi-Asl", "H. Pinto", "Q. Chen", "U. Dayal", "M. Hsu"], "venue": "ICDE. pp. 215\u2013224. IEEE Computer Society", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2001}, {"title": "PMBC: pattern mining from biological sequences with wildcard constraints", "author": ["X. Wu", "X. Zhu", "Y. He", "A.N. Arslan"], "venue": "Comp. in Bio. and Med. 43(5), 481\u2013492", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Computational aspects of mining maximal frequent patterns", "author": ["G. Yang"], "venue": "Theor. Comput. Sci. 362(1-3), 63\u201385", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Sequence mining in categorical domains: Incorporating constraints", "author": ["M.J. Zaki"], "venue": "CIKM\u201900. pp. 422\u2013429", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2000}, {"title": "SPADE: An efficient algorithm for mining frequent sequences", "author": ["M.J. Zaki"], "venue": "Machine Learning 42(1/2), 31\u201360", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2001}, {"title": "Mining periodic patterns with gap requirement from sequences", "author": ["M. Zhang", "B. Kao", "D.W. Cheung", "K.Y. Yip"], "venue": "TKDD 1(2)", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 6, "context": "In [7], we have proposed the global constraint PREFIX-PROJECTION for SPM which remedies to this drawback.", "startOffset": 3, "endOffset": 6}, {"referenceID": 15, "context": "In recent years many studies have focused on SPM with gap constraints [16,18].", "startOffset": 70, "endOffset": 77}, {"referenceID": 17, "context": "In recent years many studies have focused on SPM with gap constraints [16,18].", "startOffset": 70, "endOffset": 77}, {"referenceID": 5, "context": "For example, [6] analyses purchase behaviors to reflect products usually bought by customers at regular time intervals according to time gaps.", "startOffset": 13, "endOffset": 16}, {"referenceID": 13, "context": "In computational biology, the gap constraint helps discover periodic patterns with significant biological and medical values [14].", "startOffset": 125, "endOffset": 129}, {"referenceID": 5, "context": "Several specialized approaches have been proposed [6,10,18] but they have a lack of genericity to handle simultaneously various types of constraints.", "startOffset": 50, "endOffset": 59}, {"referenceID": 9, "context": "Several specialized approaches have been proposed [6,10,18] but they have a lack of genericity to handle simultaneously various types of constraints.", "startOffset": 50, "endOffset": 59}, {"referenceID": 17, "context": "Several specialized approaches have been proposed [6,10,18] but they have a lack of genericity to handle simultaneously various types of constraints.", "startOffset": 50, "endOffset": 59}, {"referenceID": 3, "context": "Recently, a few proposals [4,8,11,12] have investigated relationships between GSPM and constraint programming (CP) in order to provide a declarative approach, while exploiting efficient and generic solving methods.", "startOffset": 26, "endOffset": 37}, {"referenceID": 7, "context": "Recently, a few proposals [4,8,11,12] have investigated relationships between GSPM and constraint programming (CP) in order to provide a declarative approach, while exploiting efficient and generic solving methods.", "startOffset": 26, "endOffset": 37}, {"referenceID": 10, "context": "Recently, a few proposals [4,8,11,12] have investigated relationships between GSPM and constraint programming (CP) in order to provide a declarative approach, while exploiting efficient and generic solving methods.", "startOffset": 26, "endOffset": 37}, {"referenceID": 11, "context": "Recently, a few proposals [4,8,11,12] have investigated relationships between GSPM and constraint programming (CP) in order to provide a declarative approach, while exploiting efficient and generic solving methods.", "startOffset": 26, "endOffset": 37}, {"referenceID": 6, "context": "More recently, we have proposed the global constraint PREFIX-PROJECTION for SPM which remedies to this drawback [7].", "startOffset": 112, "endOffset": 115}, {"referenceID": 1, "context": "For example, the sequence \u3008BABC\u3009 is a super-sequence of \u3008AC\u3009 under gap[0, 2]: \u3008AC\u3009 \u3008BABC\u3009.", "startOffset": 70, "endOffset": 76}, {"referenceID": 0, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 25, "endOffset": 31}, {"referenceID": 1, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 44, "endOffset": 47}, {"referenceID": 1, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 74, "endOffset": 77}, {"referenceID": 0, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 82, "endOffset": 88}, {"referenceID": 1, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 82, "endOffset": 88}, {"referenceID": 0, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 91, "endOffset": 97}, {"referenceID": 2, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 91, "endOffset": 97}, {"referenceID": 4, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 99, "endOffset": 105}, {"referenceID": 5, "context": "The occurrences under gap[0, 1] of \u03b1 in SDB1[2] is given by AllOcc(\u03b1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 99, "endOffset": 105}, {"referenceID": 0, "context": "If we consider minsup = 2, \u03b1 is a gap[0, 1] constrained sequential pattern because sup SDB1(\u03b1) \u2265 2.", "startOffset": 37, "endOffset": 43}, {"referenceID": 0, "context": "Most of SPM algorithms rely on the anti-monotonicity property of frequency [1] to reduce the search space: all the subsequences of a frequent sequence are frequent as well (or, equivalently, if a subsequence is infrequent, then no super-sequence of it can be frequent).", "startOffset": 75, "endOffset": 78}, {"referenceID": 0, "context": "A simple illustration from our running example suffices to show that sequence \u3008AB\u3009 is not a sequential pattern under gap[0, 1] (for minsup = 3) whereas sequence \u3008ACB\u3009 is a gap[0, 1] constrained sequential pattern.", "startOffset": 120, "endOffset": 126}, {"referenceID": 0, "context": "A simple illustration from our running example suffices to show that sequence \u3008AB\u3009 is not a sequential pattern under gap[0, 1] (for minsup = 3) whereas sequence \u3008ACB\u3009 is a gap[0, 1] constrained sequential pattern.", "startOffset": 175, "endOffset": 181}, {"referenceID": 0, "context": "Let p1 = \u3008AC\u3009 be a pattern and the gap constraint be gap[0, 1].", "startOffset": 56, "endOffset": 62}, {"referenceID": 1, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 23, "endOffset": 26}, {"referenceID": 0, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 31, "endOffset": 37}, {"referenceID": 1, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 31, "endOffset": 37}, {"referenceID": 0, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 40, "endOffset": 46}, {"referenceID": 2, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 40, "endOffset": 46}, {"referenceID": 4, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 48, "endOffset": 54}, {"referenceID": 5, "context": "We have AllOcc(p1, SDB1[2]) = {[1, 2]), [1, 3], [5, 6]}.", "startOffset": 48, "endOffset": 54}, {"referenceID": 1, "context": "The right pattern extensions of p1 in SDB1[2] is equal to Ext [0,1] R (p1, SDB1[2]) = {\u3008CB\u3009, \u3008BA\u3009, \u3008B\u3009}.", "startOffset": 42, "endOffset": 45}, {"referenceID": 0, "context": "The right pattern extensions of p1 in SDB1[2] is equal to Ext [0,1] R (p1, SDB1[2]) = {\u3008CB\u3009, \u3008BA\u3009, \u3008B\u3009}.", "startOffset": 62, "endOffset": 67}, {"referenceID": 1, "context": "The right pattern extensions of p1 in SDB1[2] is equal to Ext [0,1] R (p1, SDB1[2]) = {\u3008CB\u3009, \u3008BA\u3009, \u3008B\u3009}.", "startOffset": 79, "endOffset": 82}, {"referenceID": 0, "context": "The right pattern extensions of p1 in SDB1 is given byExt [0,1] R (p1, SDB1) = {(1, {\u3008DB\u3009}), (2, {\u3008CB\u3009, \u3008BA\u3009, \u3008B\u3009}), (3, {\u3008BE\u3009}), (4, {\u3008C\u3009})}.", "startOffset": 58, "endOffset": 63}, {"referenceID": 1, "context": "To compute Ext R (p1, SDB1[2]), only the first occurrence of p1 in SDB1[2] need to be considered (i.", "startOffset": 26, "endOffset": 29}, {"referenceID": 1, "context": "To compute Ext R (p1, SDB1[2]), only the first occurrence of p1 in SDB1[2] need to be considered (i.", "startOffset": 71, "endOffset": 74}, {"referenceID": 0, "context": "[1, 2]) (cf.", "startOffset": 0, "endOffset": 6}, {"referenceID": 1, "context": "[1, 2]) (cf.", "startOffset": 0, "endOffset": 6}, {"referenceID": 1, "context": "Thus, Ext R (p1, SDB1[2]) = {\u3008CBACB\u3009}).", "startOffset": 21, "endOffset": 24}, {"referenceID": 0, "context": "Let minsup be 2 and the gap constraint be gap[0, 1].", "startOffset": 45, "endOffset": 51}, {"referenceID": 0, "context": "Thus, p1 = \u3008AC\u3009 is a gap[0, 1] constrained sequential pattern.", "startOffset": 24, "endOffset": 30}, {"referenceID": 0, "context": "According to proposition 2, p1 can be extended to two gap[0, 1] constrained sequential patterns \u3008ACB\u3009 and \u3008ACC\u3009 .", "startOffset": 57, "endOffset": 63}, {"referenceID": 0, "context": "The SPM was first proposed in [1].", "startOffset": 30, "endOffset": 33}, {"referenceID": 1, "context": "Since then, many efficient specialized approaches have been proposed [2,13,17].", "startOffset": 69, "endOffset": 78}, {"referenceID": 12, "context": "Since then, many efficient specialized approaches have been proposed [2,13,17].", "startOffset": 69, "endOffset": 78}, {"referenceID": 16, "context": "Since then, many efficient specialized approaches have been proposed [2,13,17].", "startOffset": 69, "endOffset": 78}, {"referenceID": 15, "context": "Zaki [16] first proposed cSpade, a depth-first search based on a vertical database format, incorporating max-gap, max-span and length constraints.", "startOffset": 5, "endOffset": 9}, {"referenceID": 5, "context": "[6] and Li and al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] studied the problem of mining frequent patterns with gap constraints.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "In [6], a minimal distinguishing subsequence that occurs frequently in the positive sequences and infrequently in the negative sequences is proposed, where the maximum gap constraint is defined.", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "In [9], closed frequent patterns with gap constraints are mined.", "startOffset": 3, "endOffset": 6}, {"referenceID": 10, "context": "[11] have proposed to model a sequence using an automaton capturing all subsequences that can occur in it.", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[8] have proposed a CSP model for SPM with explicit wildcards1.", "startOffset": 0, "endOffset": 3}, {"referenceID": 11, "context": "[12] have proposed two CP encodings for the SPM.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "In [7], we have proposed the global constraint PREFIX-PROJECTION for sequential pattern mining which remedies to this drawback.", "startOffset": 3, "endOffset": 6}, {"referenceID": 14, "context": "Furthermore, the NPhardness of mining maximal2 frequent sequences was established in [15] by proving the #P-completeness of the problem of counting the number of maximal frequent sequences.", "startOffset": 85, "endOffset": 89}, {"referenceID": 0, "context": "Consider the running example of Table 1, let minsup be 2 and the gap constraint be gap[1, 2].", "startOffset": 86, "endOffset": 92}, {"referenceID": 1, "context": "Consider the running example of Table 1, let minsup be 2 and the gap constraint be gap[1, 2].", "startOffset": 86, "endOffset": 92}, {"referenceID": 0, "context": "Consider Example 2: Ext [0,1] R (\u3008AC\u3009, SDB1) will be encoded as {(1, {(4, 5)}), (2, {(3, 4), (4, 5), (7, 7)}), (3, {(4, 5)}), (4, {(4, 4)})}.", "startOffset": 24, "endOffset": 29}, {"referenceID": 0, "context": "Minsup (%) GAP-SEQ[0,1] decomposed-p.", "startOffset": 18, "endOffset": 23}, {"referenceID": 0, "context": "f[0,1]", "startOffset": 1, "endOffset": 6}, {"referenceID": 0, "context": "Minsup (%) GAP-SEQ[0,1] decomposed-p.", "startOffset": 18, "endOffset": 23}, {"referenceID": 0, "context": "f[0,1]", "startOffset": 1, "endOffset": 6}, {"referenceID": 4, "context": "This section reports experiments on several real-life datasets [5,3] of large size having varied characteristics and representing different application domains (see Tab.", "startOffset": 63, "endOffset": 68}, {"referenceID": 2, "context": "This section reports experiments on several real-life datasets [5,3] of large size having varied characteristics and representing different application domains (see Tab.", "startOffset": 63, "endOffset": 68}, {"referenceID": 0, "context": "In the experiments, we used the gap constraint gap[0, 1] and various values of minsup.", "startOffset": 50, "endOffset": 56}, {"referenceID": 8, "context": "3: Varying the value of minsup with the gap constraint gap[0, 9]: CPU times.", "startOffset": 58, "endOffset": 64}, {"referenceID": 8, "context": "We used the gap[0, 9] constraint, while minsup varied until the two methods were not able to complete the extraction within the time limit.", "startOffset": 15, "endOffset": 21}, {"referenceID": 8, "context": "The gap constraint was set to gap[0, 9], and minsup to three different values.", "startOffset": 33, "endOffset": 39}, {"referenceID": 2, "context": ", gene - rare disease relationships) [3].", "startOffset": 37, "endOffset": 40}, {"referenceID": 8, "context": "We used the gap[0, 9] constraint, which is the best setting found in [3].", "startOffset": 15, "endOffset": 21}, {"referenceID": 2, "context": "We used the gap[0, 9] constraint, which is the best setting found in [3].", "startOffset": 69, "endOffset": 72}, {"referenceID": 6, "context": "These results confirm those observed in [7].", "startOffset": 40, "endOffset": 43}], "year": 2015, "abstractText": "Sequential pattern mining (SPM) under gap constraint is a challenging task. Many efficient specialized methods have been developed but they are all suffering from a lack of genericity. The Constraint Programming (CP) approaches are not so effective because of the size of their encodings. In [7], we have proposed the global constraint PREFIX-PROJECTION for SPM which remedies to this drawback. However, this global constraint cannot be directly extended to support gap constraint. In this paper, we propose the global constraint GAPSEQ enabling to handle SPM with or without gap constraint. GAP-SEQ relies on the principle of right pattern extensions. Experiments show that our approach clearly outperforms both CP approaches and the state-of-the-art cSpade method on large datasets.", "creator": "LaTeX with hyperref package"}}}