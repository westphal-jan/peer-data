{"id": "1512.05616", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Dec-2015", "title": "Deep-Spying: Spying using Smartwatch and Deep Learning", "abstract": "Wearable technologies are today on the rise, becoming more common and broadly available to mainstream users. In fact, wristband and armband devices such as smartwatches and fitness trackers already took an important place in the consumer electronics market and are becoming ubiquitous. By their very nature of being wearable, these devices, however, provide a new pervasive attack surface threatening users privacy, among others.", "histories": [["v1", "Thu, 17 Dec 2015 14:58:26 GMT  (5999kb,D)", "http://arxiv.org/abs/1512.05616v1", "Security, Side-Channel Attack, Keystroke Inference, Motion Sensors, Deep Learning, Recurrent Neural Network, Wearable Computing"]], "COMMENTS": "Security, Side-Channel Attack, Keystroke Inference, Motion Sensors, Deep Learning, Recurrent Neural Network, Wearable Computing", "reviews": [], "SUBJECTS": "cs.CR cs.CY cs.LG", "authors": ["tony beltramelli", "sebastian risi"], "accepted": false, "id": "1512.05616"}, "pdf": {"name": "1512.05616.pdf", "metadata": {"source": "META", "title": "Deep-Spying: Spying using Smartwatch and Deep Learning", "authors": ["Tony Beltramelli"], "emails": [], "sections": [{"heading": null, "text": "In fact, wristbands and wristband devices such as smartwatches and fitness trackers have already taken and are becoming ubiquitous in the consumer electronics market. However, due to their peculiarity of being wearable, these devices offer a new, ubiquitous attack interface that threatens users \"privacy. Meanwhile, advances in machine learning offer unprecedented opportunities to efficiently process complex data, allowing patterns to emerge from high-dimensional, inevitably loud data, and the goal of this work is to raise awareness of the potential risks associated with motion sensors built into wearable devices, and demonstrate abuses utilized by advanced neural network architectures. LSTM-based implementation presented in this research can perform touch logging and keylogging on 12-key pads with above-average accuracy, even when confronted with raw, unprocessed data."}, {"heading": "1 Introduction 1", "text": "1.1 Problem definition............................... 1 1,2 Methodology......................"}, {"heading": "2 Related Work 5", "text": ". Concepts...... 2.1.2. Wearable Computing..... Signal......... 62.1.1. Computer Security. 6. 1.3. Learning............. 82.2. Background: Artificial Neural Network........ 82.1. Recurrent Neural. Network.........."}, {"heading": "3 Attack Description 25", "text": "3.1 Targets...................................................................................."}, {"heading": "4 System 29", "text": "4.1 System architecture.................................................................................................................................."}, {"heading": "5 Data Analytics 36", "text": "For this purpose, the foundations for the development of the system were laid. For this purpose, the foundations for the development of the system were laid. For this purpose, the foundations for the development of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the foundations of the system were laid. For this purpose, the foundations for the system were laid."}, {"heading": "6 Evaluation 61", "text": "6.1 Empirical data collection.................... 61 6.2 Experiments................................................................................................................................................................................................................................................................................................................................................................................................................................................."}, {"heading": "7 Conclusion 72", "text": "7.1 Summary................................... 72 7.2 Future work..................... 73Bibliography 75Appendices 85"}, {"heading": "A Backpropagation 86", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "B Signal Pre-processing 88", "text": "B.1 Gyroscope............................. 88 B.2 Accelerometer...................... 91"}, {"heading": "C Confusion Matrices from Model Benchmark 94", "text": "C.1 Model training with statistical attributes......... 94 C.2 Model training with data segments as attributes...... 95"}, {"heading": "D Experiment Results 98", "text": "The answer to the question of whether this is the correct answer is: \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" - \"No.\" -. - \"-. -\" -. - \"-. -\" -. - \"-. -\" -. - \"-. -\" -. - \"-. -\" -."}, {"heading": "1.1 Problem Statement", "text": "In fact, it is the case that you will be able to manoeuvre yourself into a situation in which you see yourself in a position, in which you are able to move, and in which you are able to move."}, {"heading": "1.2 Methodology", "text": "The research questions raised in Section 1.1 are answered in a practical way. Firstly, a system is implemented to collect, process, analyze, and analyze mo-2A errors in Android was discovered during the work on this research project and is believed to lead to a vulnerability. In fact, the bug results in applications that address Android Wear granting some permissions without these being explicitly defined in the manifest file [8]. A responsible disclosure process has therefore been initiated with Google to address the issue. After further investigation, the problem has proven to be a bug in the Android SDK with no serious security implications for users. 3Chapter 1. Introduction sensors data and perform experimental indirect passive attacks such as keylogging and touch logging. Secondly, experiments are conducted to collect data in a deployment environment. Finally, the results are interpreted and discussed."}, {"heading": "2.1 Key Concepts", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1.1 Computer Security", "text": "Passive Attack: A passive attack is characterized by the fact that an attacker listens on a communication channel. In such an attack, the attacker does not attempt to destroy the system or modify the transmitted data (i.e. active attack). Instead, the attacker monitors the exchanged packets to obtain information about the target (e.g. the users, the system, the communicating units) [15]. Side Channel Attack: A side channel attack is defined by an attacker who uses side channel information to gain insight into a system. Side channel information can be obtained from data that has been leaked at the physical level (e.g. timing information, power consumption, electromagnetic emanations, sound) [19]. Keylogging and touchlogging: Keylogging is the action that keys entered by a user on a keyboard record. Similarly, touchlogging is the action that keys are used by a touch screen to allow the user to touch the keyboard, or the coordinate."}, {"heading": "2.1.2 Wearable Computing", "text": "Wearable Technology: Wearable Technologies are small and portable computers that are integrated into clothing or worn continuously (e.g. glasses, bracelets, wristbands).These devices are designed to be largely mobile and can be used in environments where support for the computer infrastructure.6Chapter 2. Related Work Motion Sensors: Modern mobile and portable devices generally have integrated motion sensors that measure the movements of the device.The analysis of output data from such sensors enables the estimation of certain types of motion the device is subject to, such as translation, tilt, shaking, rotation or panning. Typical motion sensors available in standard devices are listed in Table 2.1. Software-based sensors usually derive their data from hardware-based sensors, namely the acceleration sensors (one for each axis x, y and z) and the gyroscope [42, 40, 43, 1 Chapter 72.] Related Work"}, {"heading": "2.1.3 Machine Learning", "text": "Classification: In the field of machine learning, classification is the process of assigning categories to data. The classifier is a function that assigns data names by creating a statistical model (i.e. a data structure) based on a training set of sample data with known associated classes. This process is called supervised learning, because the statistical model must be trained with expert-annotated data in order to then classify invisible samples [12, 31].Feature Extraction: Building a relevant statistical model is only possible if the information used describes the problem in a meaningful way.The term feature engineering refers to methods that enable the selection of such valuable information in a raw dataset. This dimensionality reduction process consists of building feature vectors of discrete length that allow the data volume to be processed and its quality to be improved. Feature engineering is the process of manual feature selection of experts. Unsupervised feature learning is a process that automatically selects by the model 12]."}, {"heading": "2.2 Background: Artificial Neural Network", "text": "Artificial Neural Network (ANN) is a class of biologically inspired statistical models consisting of a series of connected nodes (i.e. neurons), each connection (i.e. synapses) having a weight attached to it [12, 33]. A typical ANN consists of an input layer with a number of input neurons corresponding to the length of the characteristic vector. ANN's output layer can be constructed with a variable number of neurons depending on the task (e.g. equal to the number of classes for classification, two output neurons for binary classification, one output neuron for regression). ANNs are normally also composed of 8chapter 2. Associated working hidden layers, each containing a variable number of neurons, as shown in Figure 2.2. The network is activated by feeding its input layer with a feature vector assigned to an output vector, which, thanks to the internal network structure, is pre-mapped to an input function."}, {"heading": "2.2.1 Recurrent Neural Network", "text": "Recurrent Neural Network (RNN) is a class of ANN that is able to model relationships between consecutive data points. This type of model is of great interest to the application in the context in which data with a time relationship must be processed. In fact, the network can link data in series using a feedback loop that allows information to be maintained over time. In other words, when an input vector is fed into the network, it produces an output vector from the new input vector, but also according to the vector previously shown in Figure 2.4. This storage state makes RNNs particularly suitable for processing sequential data such as time series, sound, video, or text. Mathematically, the output of an RNN cell can be expressed as follows: yt =? (Wxixt + Wyiyt \u2212 1) (2.2) with the new input vector in time, yt, video, or text."}, {"heading": "2.2.2 Long Short-Term Memory", "text": "Hochreiter and Schmidhuber [34] overcame the limitations of standard RNN by introducing a new architecture called Long Short-Term Memory (LSTM), which enables input to be linked to distant memories by maintaining the error propagated back over time and layers. 12 As shown in Figure 2.6, an LSTM memory cell consists of many different gates that can learn to store, read, write, and delete information. Weights are associated with the connection between the different gates and are updated during training. \u2212 Cell state c learns to memorize information by connecting one of its inputs to its traditional RNN cells. Input gate i is used to control the error flow on the inputs of cell state c to avoid input weight conflicts occurring in traditional RNN."}, {"heading": "2.2.3 Backpropagation", "text": "The network error is calculated from a loss function (e.g. Mean Squared Error, Root Mean Squared Error, Quadratic Loss, Minkowski-R Error) by comparing the predicted vector with the expected vector. The error is transferred backwards from the output layer to the input layer to adjust the weights along the path. As each weight is responsible for a portion of the error, they are updated using the chain rule (the reader is asked to refer to Appendix A for additional theory details) to calculate the partial derivative rate relative to each weight layer so that: E. Wij = eiyj (2,12) With E the output error to minimize, W. the weight error to update, y the output error, and e the local error e. The local error e is calculated differently depending on the neuron the type."}, {"heading": "2.3 Literature Review", "text": "The aim of this section is to examine and understand the methods and techniques used in previous studies from relevant similar research fields. The1In regression tasks, the expected output vector usually consists of one or more continuous values. In classification tasks, the desired output vector usually consists of binary values. For example, the desired output vector for three classes consists of classes a: < 1, 0, 0 >, class b: < 0, 1, 0 > and class c: < 0, 0, 1 >.16Chapter 2. Related work aims to compare alternative approaches, analyze their respective advantages and disadvantages, and inform and justify decisions throughout the research process."}, {"heading": "2.3.1 Motion-Based Keystroke Inference Attack", "text": "The conclusion from the lateral keystroke has been extensively studied in various studies. Traditionally, the properties of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11] and timing [75, 25] are used. However, such lateral channels are ineffective for exploiting virtual keyboards, although sound has been successfully used on smartphones [71]. Studies have shown that the great potential of restoring sound, music, speech and even typing is established by simply observing mild vibrations in the environment caused by physical events [24, 6]. Such studies have shown that movements invisible to the human eye can transmit a surprisingly large amount of information, with movement established as a relevant source of valuable data and thus as a reliable lateral channel. Although the camera can be used to detect movement, we are interested in motion sensors here because they are currently available on the majority of the WAD keyboard, which is not the case for cameras."}, {"heading": "2.3.1.1 Keylogging", "text": "Marquardt et al. [61] have shown that the motion sensors of a smartphone that stands on a flat surface can be used to close keystrokes on a nearby physical computer keyboard that stands on the same surface. Their attack scenario is based on two observations: First, that access to the acceleration data was not protected by a mobile operating system, which allowed any installed application to monitor the acceleration events; second, that many users place their smartphones on the desk next to their computer keyboard during their work. In their experimental setup, an iPhone device collects the acceleration data to send it to a remote server where data processing and classification is performed; and they demonstrated the ability to recover up to 80% of the typed content by matching abstracted words according to the classification with candidate dictionaries. This research therefore shows the great potential to successfully extract keystrokes from subtle movements such as small vibrations."}, {"heading": "2.3.1.2 Touchlogging", "text": "Related work [16, 84, 66, 63] has shown that the data from a smartphone's motion sensors can be used to infer keystrokes on its touchscreen. Cai et al. [16] have shown that a malicious Android application can trace up to 70% of keystrokes back to a purely numbered virtual keyboard on an Android device. However, in order to work, the user must grant the application access to the motion sensors during installation. Cai et al. believed that this assumption is not unrealistic, considering that most users will not treat the motion data as sensitively as, say, a camera or microphone. In their paper, Owusu et al. [66] proposed a system that reads acceleration data to extract 6-character passwords on an Android device. Their experiment consists of a virtual keyboard used to reconstruct the keystrokes."}, {"heading": "2.3.2 Classification of Motion Sensors Signal", "text": "The classification of motion signals by motion sensors has been extensively researched in studies on activity detection [5, 68, 51] in the field of pervasive computing and gesture detection [67, 72, 55, 83] in the field of human-computer interaction. Historically, the use of acceleration sensors has been studied in more detail in both areas, although some studies have explored the merging of sensors to increase robustness [74, 58]. While the approaches used in these areas can be borrowed, there is an important difference. In fact, the duration and movement amplitude of a keystroke are each much shorter and less than the movement caused by a gesture (e.g. finger swiping, hand waving) or an activity (e.g. running, sitting). Since the classification is an approach to recognizing patterns in the signal, it can be argued that patterns produced by a gesture can take significantly longer to amplify the keyboard."}, {"heading": "2.3.2.1 Classifier Model", "text": "According to Tanwani [77], the classification accuracy of a particular algorithm depends largely on the nature of the dataset and not on the classification algorithm itself. In fact, the choice of a classification model differs greatly in the related studies, without one model having a greater advantage over the other; 20Chapter 2. Associated work confirmation that the classification quality largely depends on the strategy of feature extraction and the quality of the training set (i.e. the truth of the ground). Successful classification is traditionally only possible after appropriate pre-processing to purify the signal and the smart feature extraction to select meaningful information from the data in order to depict the movement event in a relevant way. That is, good feature vectors contain features that differ between motion signals from different keystrokes and match between motion signals caused by the same keystroke. As demonstrated by Cai et al, the smaller the training set is the more accurate for the implementation of the specific instruction [17]."}, {"heading": "2.3.2.2 Data Analysis and Feature Extraction", "text": "In fact, most of them are able to survive on their own, without having to take responsibility for themselves."}, {"heading": "2.3.3 Additional Mentions", "text": "Wang et al. [81] developed a system for keylogging on a laptop keyboard using the motion sensors of a smartwatch. Their approach requires the extraction of statistical features to train a classifier, and non-trivial techniques such as point cloud matching and Bayesian inference.Using the linear accelerometer built into a smartwatch, Maiti et al. [59] succeeded in 23Chapter 2. Related work created a system to capture keystrokes entered by a user on a numbered keyboard on a smartphone touchscreen. They achieved 90% accuracy thanks to a solution based on flat classifiers trained with the help of developed feature vectors containing 54 values.In their paper, Liu et al. [56] focus on performing keylogging functions using a smartwatch keyboard and a standard QERY keyboard."}, {"heading": "3.1 Attacker Goals", "text": "The aim of the attacker is to intercept the keys entered by the victim on a virtual or physical keyboard. Eve could monitor Alice's keystrokes for various reasons. In general, Eve could: \u2022 steal passwords and other credentials. \u2022 steal sensitive information such as PINs, social security numbers and credit card numbers. \u2022 spy directly by tapping typed messages. 1Access to Alice's private information could be used to imitate Alice, steal money or, for example, gain access to password protected content.25Chapter 3."}, {"heading": "3.2 Threat Model", "text": "Pairing a WAD with a smartphone is a risky task and can be a vector of choice for an attacker to gain access to the WAD. In fact, the pairing of devices has been extensively studied in the field of computer security [76, 62, 4, 18, 29] and has proved difficult. Producing a key between two devices in the presence of an active adversary remains a tough problem, and existing solutions usually require compromises. As many users are unaware of the risks, it is not unrealistic to consider the possibility of pairing a WAD with an attacker's smartphone. Bluetooth technology is currently the preferred medium to pair smartwatches and fitness trackers with smartphones [41, 39, 44]. This communication channel, which is wireless, increases the risk of device pairing. 2Once the WAD is paired with the attacker's device, applications can be installed wirelessly on the WAD."}, {"heading": "3.3 Attack Scenarios", "text": "It is important to note that the victim is wearing the WAD on the wrist of the preferred hand that interacts with the keyboard. In fact, in our attack scenario, it would be more difficult, if not impossible, for the attacker to derive keystrokes if the victim is right-handed but carries the WAD on his left hand. The use of an exploit or malware to compromise the WAD is not part of this research. Instead, it is assumed that the attacker has already compromised the WAD and can access the sensors. The following attack scenarios are examined to assess their feasibility."}, {"heading": "4.1 System Architecture", "text": "This distributed system paradigm allows client computers with limited computing resources (e.g. mobile devices, portable computers) to delegate heavy computing to more powerful machines such as a networked server. A server host provides services to the various clients connected to it, while the clients initiate communication sessions with the server waiting for incoming requests. As shown in Figure 4.1, the system consists of two clients connected to a processing server on the same local network. A smartphone client acts as a proxy by receiving motion sensing events from the WAD and passing the data on to the processing server. In the training phase, a second client is responsible for sending the labels to the server, which is an important advantage of the client-server model. Indeed, this architecture allows flexibility to experiment with different types of training equipment without having to change the rest of the system."}, {"heading": "4.2 Client", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.2.1 Wearable Application", "text": "The software developed is 30Chapter 4. Systemwritten in Java and designed for use on devices with Android Wear API level 21. The primary goal of the application is to hear accelerometers and gyroscope sensors and send them for further processing. As such a WAD has limited network capacity, the smartwatch cannot send motion sensor data directly to the server. Instead, the smartwatch is paired via Bluetooth with a compatible Android device to establish a communication channel that allows the use of the Android WearData Layer API to encapsulate sensor data. The paired mobile phone then forwards the data to the server."}, {"heading": "4.2.2 Mobile Application", "text": "This mobile application is required for the relay device and has been tested on a LG Nexus 4 smartphone and implemented in Java to address devices with Android API level 19. As shown in Figure 4.2, a recording session begins when a user asks the mobile client to start recording, and the smartphone then sends a message to the server to initiate a new session, and a message to the WAD to hear the events of the motion sensor. When the user taps on the training client, timestamped labels are sent to the server. Meanwhile, the user's hand movements are recorded by the WAD and reported to the relay device as a message from the portable data layer with a timestamp value, a three-dimensional array (i.e. one dimension per axis), and the type of sensor that spreads the event (i.e. gyroscope or accelerometer). The relay device stores the data locally in a buffer for each sensor type."}, {"heading": "4.2.3 Training Application", "text": "Two different training software are implemented to experiment with both touchlogging and keylogging. Despite the fact that the technologies used for the two training platforms are different, both applications communicate with the same communication protocol. During the training, the labels corresponding to the keys entered and their respective timestamps are serialized with JSON and sent to the server. Therefore, the UI can be scaled and adapted to any screen size as shown in Figure 4.3 (a) to be used as a training application. The touchlogging training application is implemented with web technologies HTML and JavaScript."}, {"heading": "4.3 Server", "text": "The server is needed to perform two main tasks. Firstly, to obtain data from the various clients, they organize and store it persistently. Secondly, and most importantly, to perform data analysis with the previously stored data; namely, to benefit from flexible data structures and scientific computing tools."}, {"heading": "5.1 Data Acquisition", "text": "Sensor Recording: The data is captured by the gyroscope and acceleration sensors built into the smartwatch. Sensor event data is stored in tuples (ti, xi, yi, zi), i = 1... n, where ti is the time in ms in which the event occurred, xi, yi, zi are the values along the three axes x, y or z, and n is the total number of motion sensor events in an entire recording session. We observed that the sampling rate was not constant, but the delay between sensor events varied slightly enough to ignore the problem of the sampling rate during pre-processing.Label Recording: The training device reports labels in the form of tuples (tj, lj), j = 1... m, where tj is the time in ms in which the keystroke was appended, lj is the designation (i.e. the total number of strokes entered) during the keystroke session."}, {"heading": "5.2 Pre-processing", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.2.1 Calibration", "text": "Both motion sensors must be calibrated to align all three axes. In fact, due to the influence of gravity, the accelerometers contain values in different absolute ranges (as shown in Figure 5.2 (b)). Although the gyroscopic axes should average at zero, a small difference has been observed that is not zero. Calibration is performed by subtracting each sensor value with the mean of its axes, so that: 38chapter 5. Data Analysis f (vi) v (X, Y, Z) = vi \u2212 v (5.1) where v is the amplitude value on the given axis. The result of this operation can be seen in Figure 5.3.39chapter 5."}, {"heading": "5.2.2 Median Filter", "text": "The moving mean filter is a possible alternative, but has the disadvantage of damping the trends in the data.The moving mean removes the noise while maintaining the signal pattern and is applied with a sliding window to calculate the mean within a specified range [46], i.e.: f (vi) v \u00b2 {X, Y, Z} = Median (vi \u2212 1 2 (w \u2212 1),..., vi,..., vi + 1 2 (w \u2212 1))) (5.2) Where v is the amplitude value on the given axis and w is an odd number representing the size of the sliding window. Since the sensors scanning the frequencies are different, the number of data points at the end of a recording session is different. Therefore, the size of the sliding window must be different for each sensor in order to optimally remove the noise and maintain the signal as far as possible.Experiments show that w = 9 or the noise is satisfactory for operation."}, {"heading": "5.2.3 Butterworth Filter", "text": "However, the documentation clearly states that the specified delay is only an indication of the system and that events can be received faster or slower than the specified rate. In our context, knowing the maximum delay between sensor events in the worthwhile scenario allows us to optimize the preprocessing algorithm to clean the signal accordingly. Maximum 41 Chapter 5. Data analysis delay for the gyroscope and accelerometer was 10 000\u00b5s and 62 500\u00b5s, respectively. Elemental physics tells us that the sampling rate from the sampling delay can be calculated such that: f = 1d \u00b7 10 \u2212 6 (5.3) Where d is the sampling delay in \u00b5s and f is the frequency in Hz, with the maximum delay measured in the step of data acquisition, the sensors can be filtered with new data at a frequency of 100 Hz and 16 Hz for the gyroscope and f is the frequency in Hz."}, {"heading": "5.2.4 Kalman Filter", "text": "The Kalman filter algorithm provides estimates that minimize Mean Squared Error by observing a series of measurements. [32] Even with data that includes statistical noise, the filter can make estimates that allow patterns to emerge more significantly from the signal. [43] This advanced filtering technique has proven useful in our application context, smoothing the signal evenly and attenuating irregular peaks and shafts (as shown in Figure 5.6).43 The signals are eventually normalized before they are returned. The output of the preprocessing pipeline is a smoother signal that reduces the effects of noise while preserving the signal patterns as much as possible. Figure 5.7 compares both motion sensor signals before and after preprocessing. 4445Chapter 5. Data Analysis"}, {"heading": "5.3 Feature Extraction", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.3.1 Sensor Fusion", "text": "As mentioned in Section 2.3.2, studies have shown that sensors can increase the robustness of motion sensor outputs."}, {"heading": "5.3.2 Segmentation", "text": "The server receives a continuous stream of motion detection events. Therefore, it is important to segment the data stream into sections corresponding to each keystroke before classification."}, {"heading": "5.3.2.1 Segmentation from Labels", "text": "As mentioned in Section 5.1, during the training, tuples with labels and timestamps in ms are sent to the server. These time values are used as reference points to segment the signal into m-pieces, where m is the total number of keystrokes in the entire recording session (Figure 5.9 shows an example of a signal after segmentation).We defined a fixed-size sampling window to select subsets of data points that occur during a keystroke as follows: [ti \u2212 \u03b1, ti + \u03b1 [= {vi \u00b2 {X, Y, X} vi \u2212 \u03b1 \u2264 vi < vi + \u03b1} (5.7), where \u03b1 is half the size of the sampling window. Considering that Asonov et al. [2] specified the duration of a keystroke at about 100 ms, and knowing that our sample rate was set at 2 ms (see Section 5.3.1), we defined a sample window of our 49.50 data points. Therefore, we have specified a sample window of 50 in 49.1."}, {"heading": "5.3.2.2 Heuristic Segmentation", "text": "As explained in Chapter 3, it is assumed that the attacker has not compromised the target device on which the user enters keys. Therefore, both the training phase and the logging phase cannot realistically rely on keystroke timestamps to segment the signal. Observations have shown that keystrokes tend to cause high peaks in the signal. Therefore, the Peak-to-Average Power Ratio can be used to detect such peaks as follows: 1. First, we observed that the signal peaks of the gyroscope were better matched to the actual keystroke timestamps than those of the accelerator. Considering that the sensor data is three-dimensional, the signals on the three axes are merged by simply calculating the center signal of the gyroscope: gi = 13 (gxi + gyi + gzi) (5.8) 2. Considering that the data of the mean value of the signal can be used as the signal to calculate the middle peak, the signal can now be used as the median Average."}, {"heading": "5.3.3 Statistical Features", "text": "Statistical models such as RNNs are designed to process sequential data through unattended feature learning. However, traditional FNNs usually require technical features to model the data efficiently. Therefore, the following statistical vector is calculated: < min, max, RMS, \u03c1, \u03bb, \u03c3, \u03b3 > (5.12) With RMS, the root center square, \u03c1 the number of peaks in the signal determined using the approach described in Section 5.3.2.2, \u03bb the crest factor calculated from Equation 5.9, \u03c3 the skew, \u0445 the curtosis, and \u03b3 the variance. This statistical vector is calculated for all three axes of both sensors and thus returns a statistical vector of length 48."}, {"heading": "5.4 Classifier Model", "text": "A typical input vector consists of values normalized in the range [\u2212 1, 1], and the output is a binary vector of the same length as the number of labels. That is, each label is assigned a binary representation stored in an overview table. Various multi-level classification models have been implemented to compare their respective efficiency in processing the data. Each of the models is trained with supervised learning, thanks to a data set of labeled data points. To update the weights each time a training example is shown to the network, the weights are updated using an improved variant of the iterative gradient curve called Rprop- [69, 37]. To ensure the reproducibility of the result, an online approach is used to update the weights, the weights are initialized with a pseudo-random number, which is labeled with a fixed coded constant as Rprop- [69, 37]."}, {"heading": "5.4.1 Performance Evaluation", "text": "\"For the first time in my life, I have been able to do this for the first time. I have been able to do it for the first time. I have been able to do it for the second time. I have been able to do it for the first time. I have been able to do it for the second time. I have been able to do it for the first time. I have been able to do it for the second time. I have been able to do it for the first time. I have been able to do it for the last two years. I have been able to do it for the first time. I have been able to do it for the second time. I have been able to do it for the second time. I have been able to do it for the first time. I have been able to do it for the first time. I have been able to do it for the first time."}, {"heading": "5.4.2 Sensor Fusion Benchmark", "text": "Experiments were conducted to select the sensor fusion strategy with the best classification results. Observations showed that signals resulting from movements occurring when tapping buttons in opposite corners (i.e. 1, 3, \u0445, #) were so differentiated that they were recorded to the naked eye by simple 56 chapter 5. Data analyses looking at the resulting signal patterns (example in Figure 5.9) were recorded to construct a toy data set based on the assumption that a good classification model should be able to work as well as the human eye on these simple patterns. The toy data set contains a total of 120 keystrokes targeting 4 labels, resulting in 30 instances per key. To assess the quality of the various fusion strategies, the vectors were used to train an RNN with a hidden LSTM layer of 9 units (as shown in Figure 5.11)."}, {"heading": "5.4.3 Model Benchmark", "text": "In fact, most of them will be able to play by the rules that they have established for their purposes in recent years."}, {"heading": "6.1 Empirical Data Collection", "text": "Seven people outside this research, aged between 23 and 30, took part in the following experiments. Each person was asked to type several keystrokes on a touch screen and keyboard while wearing a WAD on his wrist. To prevent the influence of external movements, participants had to sit in a comfortable position that allowed them to remain silent for the entire recording session. Each record contains 240 keystrokes with 20 instances of each of the 12 labels (i.e. 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \u0445, #). If a classifier makes its predictions randomly, the probability of correctly classifying a keystroke K is P (K) = 112.61chapter 6."}, {"heading": "6.2 Experiments", "text": "The number of output units is increased to reflect the number of labels in the measurements collected, and the terms FNN-Sigmoid and FNN-Tanh are used to refer to the feedback implementations shown in Figure 6.1 (a) and (b). The selected recurring implementation of process data sequences is shown in Figure 6.1 (c) and referred to as RNN-LSTM.62Chapter 6. Evaluation data preparation schemes: The experiments require many different data preparation schemes to compare the performance of classifiers in different contexts."}, {"heading": "6.2.1 Experiment 1: Touchlogging Attack", "text": "The aim of this experiment is to assess the likelihood of a touchlogging attack on a smartphone touchscreen using motion sensor outputs from a WAD. Participants were asked to type keystrokes on our training application, which runs on an iPhone 4S (interface shown in Figure 4.3 (a)). Figure 6.2 provides a graphical representation comparing the performance of the three classifiers; the results are detailed in the tables below. Table 6.4 shows that FNN sigmoid is better at analyzing pre-processed data than raw data. Despite poorer performance with unprocessed data, it is a surprise that the model can still classify such features with reliable predictions and low standard deviations. The lower FNN score on raw data can be explained by the fact that the model is based on statistical characteristics. As a result, raw data show unstable statistical characteristics demonstrating the utility of predicting NI models."}, {"heading": "6.2.2 Experiment 2: Keylogging Attack", "text": "The purpose of this experiment is to determine the feasibility of a keylogging attack by analyzing WAD movements while typing on an ATM-like physical keyboard. Keystrokes were typed by participants on our training device (shown in Figure 4.3 (b)) using the same method of input both on the touchscreen and on the keyboard.66 Despite the fact that the FNN sigmoid is confident in its predictions, the quality of its decisions is far from satisfactory. In fact, Table 6.4 shows that the average reliability value is high with a small standard design, although the standard deviation of the F1 score is very important. The predictions of the NN signature show the average reliability of the prediction.Similar to the FNN signature model, FNN-tanh is even important with an average standard design."}, {"heading": "6.2.3 Experiment 3: from Touchlogging to Keylogging", "text": "For this experiment, the classifier will be trained for 200 epochs with the full data set recorded during Experiment 1, when users type keys on a smartphone touch screen. Later, the logging phase will be performed using the full measurement data set recorded for Experiment 2 with users typing on an ATM-like keyboard. It is worth noting that the classifier will be trained and later evaluated with features generated by the same data scheme. That is, when the model is trained with pre-processed data with time stamp-based segmentation (i.e. P-T), the same data scheme will be applied to the evaluation data set. This experiment will be completed with the RNN-LSTM model, because it is the model that provides the best results in both previous experiments. The results shown in Table 6.7 are immediately calculated if the evaluation data set is still detected by the user when everything else is shown to the pre-classifier, although the other data set is marked by the 6M."}, {"heading": "6.3 Discussions", "text": "The LSTM implementation is indisputably the best classification model used in the experiments. In fact, this architecture can achieve touchlogging and keylogging with a maximum accuracy of 73% and 59%. The LSTM model can also successfully classify signals with an accuracy of 19% if the dataset used for training and logging comes from two different keys."}, {"heading": "7.1 Summary", "text": "The system developed in this work can perform touchlogging and keylogging with an accuracy of 73% and 59%, respectively. Despite the fact that these results are smaller than those in related work, our classifier can be equally successful when confronted with raw, unprocessed data. Thus, it shows that deep neural networks are able to more easily achieve keystrokes based on motion sensors by eliminating the need for non-trivial preprocessing lines and carefully developed strategies for feature extraction. All related work relies heavily on techniques such as those in Chapter 2. In addition, the system is still able to derive keystrokes with a 19% accuracy when trained and evaluated with data sets recorded by different keyboards. This result suggests that an attacker could log keys from a wide range of devices, even if its classifier is trained with measurements from another compromised device."}, {"heading": "7.2 Future Work", "text": "One possible addition to this project could be the implementation of a more dynamic system that enables automatic signal segmentation and classification in real time. Indeed, it might be interesting to compare the performance of CNN with LSTM in our application context. A significant extension of this work could be the implementation of a more dynamic system that enables automatic signal segmentation and classification in real time. Thus, LSTM layers could be trained to identify key combinations in the measurement flow, automatically segment the signal and pass the resulting data to other layers responsible for further processing and classification. 73Chapter 7."}], "references": [{"title": "On the best sensor for keystrokes inference attack on android", "author": ["Ahmed Al-Haiqi", "Mahamod Ismail", "Rosdiadee Nordin"], "venue": "Procedia Technology,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Keyboard acoustic emanations", "author": ["Dmitri Asonov", "Rakesh Agrawal"], "venue": "In Proceedings of the IEEE Symposium on Security and Privacy,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2004}, {"title": "Practicality of accelerometer side channels on smartphones", "author": ["Adam J Aviv", "Benjamin Sapp", "Matt Blaze", "Jonathan M Smith"], "venue": "In Proceedings of the 28th Annual Computer Security Applications Conference,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Talking to strangers: Authentication in ad-hoc wireless networks", "author": ["Dirk Balfanz", "Diana K Smetters", "Paul Stewart", "H Chi Wong"], "venue": "In NDSS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "Activity recognition from user-annotated acceleration data", "author": ["Ling Bao", "Stephen S Intille"], "venue": "In Pervasive computing,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2004}, {"title": "Sniffing keystrokes with lasers/voltmeters", "author": ["Andrea Barisani", "Daniele Bianco"], "venue": "Proceedings of Black Hat USA,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Pybrain: Pythonbased reinforcement learning, artificial intelligence and neural network library. https://github.com/pybrain/pybrain, Online, accessed", "author": ["Justin Bayer", "Tom Schaul", "Thomas R\u00fcckstie\u00df"], "venue": "Bibliography", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Android wear permissions bug", "author": ["Tony Beltramelli"], "venue": "https://github. com/tonybeltramelli/Android-Wear-Permissions-Bug, Online,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Lasagne: Lightweight library to build and train neural networks in theano", "author": ["Sander D Benanne", "Jan Schl\u00fcter", "Colin Raffel"], "venue": "https: //github.com/Lasagne/Lasagne, Online,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Learning long-term dependencies with gradient descent is difficult", "author": ["Yoshua Bengio", "Patrice Simard", "Paolo Frasconi"], "venue": "Neural Networks, IEEE Transactions on,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1994}, {"title": "Dictionary attacks using keyboard acoustic emanations", "author": ["Yigael Berger", "Avishai Wool", "Arie Yeredor"], "venue": "In Proceedings of the 13th ACM conference on Computer and communications security,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "Pattern recognition and machine learning", "author": ["Christopher M Bishop"], "venue": "springer,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2006}, {"title": "On the theory of filter amplifiers", "author": ["Stephen Butterworth"], "venue": "Wireless Engineer,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1930}, {"title": "Security and cooperation in wireless networks: thwarting malicious and selfish behavior in the age of ubiquitous computing", "author": ["Levente Buttyan", "Jean-Pierre Hubaux"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Touchlogger: Inferring keystrokes on touch screen from smartphone motion", "author": ["Liang Cai", "Hao Chen"], "venue": "HotSec,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "On the practicality of motion based keystroke inference", "author": ["Liang Cai", "Hao Chen"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "Shake them up!: a movementbased pairing protocol for cpu-constrained devices", "author": ["Claude Castelluccia", "Pars Mutaf"], "venue": "In Proceedings of the 3rd international conference on Mobile systems,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2005}, {"title": "Sidechannel leaks in web applications: A reality today, a challenge tomorrow", "author": ["Shuo Chen", "Rui Wang", "XiaoFeng Wang", "Kehuan Zhang"], "venue": "In Security and Privacy (SP),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "Keras: Theano-based deep learning library. https: //github.com/fchollet/keras, Online, accessed 04-11-2015", "author": ["Fran\u00e7ois Chollet"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Torch: Scientific computing for luajit. https://github.com/ torch/torch7, Online, accessed 04-11-2015", "author": ["Ronan Collobert", "Clement Farabet", "Koray Kavukcuoglu", "Soumith Chintala"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "From keyloggers to touchloggers: Take the rough with the smooth", "author": ["Dimitrios Damopoulos", "Georgios Kambourakis", "Stefanos Gritzalis"], "venue": "Computers & Security,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2013}, {"title": "The visual microphone: Passive recovery of sound from video", "author": ["Abe Davis", "Michael Rubinstein", "Neal Wadhwa", "Gautham J Mysore", "Fredo Durand", "William T Freeman"], "venue": "ACM Trans. Graph,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "Timing attacks on pin input devices", "author": ["Denis Foo Kune", "Yongdae Kim"], "venue": "In Proceedings of the 17th ACM conference on Computer and communications security,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2010}, {"title": "Recurrent nets that time and count", "author": ["Felix Gers", "J\u00fcrgen Schmidhuber"], "venue": "In Neural Networks,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2000}, {"title": "Learning to forget: Continual prediction with lstm", "author": ["Felix A Gers", "J\u00fcrgen Schmidhuber", "Fred Cummins"], "venue": "Neural computation,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2000}, {"title": "Dl4j: Deep learning for java. https://github.com/ deeplearning4j/deeplearning4j, Online, accessed 04-11-2015", "author": ["Adam Gibson"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2015}, {"title": "Loud and clear: Human-verifiable authentication based on audio", "author": ["Michael T Goodrich", "Michael Sirivianos", "John Solis", "Gene Tsudik", "Ersin Uzun"], "venue": "In Distributed Computing Systems,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2006}, {"title": "LSTM: A search space odyssey", "author": ["Klaus Greff", "Rupesh Kumar Srivastava", "Jan Kout\u0144\u0131k", "Bas R Steunebrink", "J\u00fcrgen Schmidhuber"], "venue": "arXiv preprint arXiv:1503.04069,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2015}, {"title": "Data mining: concepts and techniques: concepts and techniques", "author": ["Jiawei Han", "Micheline Kamber", "Jian Pei"], "venue": null, "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2011}, {"title": "Kalman filtering and neural networks, volume 47", "author": ["Simon Haykin"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2004}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1997}, {"title": "Recurrent neural networks for time series classification", "author": ["Michael H\u00fcsken", "Peter Stagge"], "venue": "Neurocomputing, 50:223\u2013235,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2003}, {"title": "Empirical evaluation of the improved rprop learning", "author": ["Christian Igel", "Michael H\u00fcsken"], "venue": "algorithms. Neurocomputing,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2003}, {"title": "Keystroke dynamics. Advanced Topics in Information Processing\u2013Lecture", "author": ["Jarmo Ilonen"], "venue": null, "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2003}, {"title": "Motion events. https://developer.apple.com/ library/ios/documentation/EventHandling/Conceptual/ EventHandlingiPhoneOS/motion_event_basics/motion_event_ basics.html, Online, accessed 23-06-2015", "author": ["Apple Inc"], "venue": null, "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2015}, {"title": "An empirical exploration of recurrent network architectures", "author": ["Rafal Jozefowicz", "Wojciech Zaremba", "Ilya Sutskever"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2015}, {"title": "Median filtering: Statistical properties", "author": ["BI Justusson"], "venue": "Springer", "citeRegEx": "46", "shortCiteRegEx": null, "year": 1981}, {"title": "Convnetjs: Deep learning in javascript", "author": ["Andrej Karpathy"], "venue": "https:// github.com/karpathy/convnetjs, Online,", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2015}, {"title": "A study of cross-validation and bootstrap for accuracy estimation and model selection", "author": ["Ron Kohavi"], "venue": "In Ijcai,", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 1995}, {"title": "Wrappers for feature subset selection", "author": ["Ron Kohavi", "George H John"], "venue": "Artificial intelligence,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 1997}, {"title": "Ubiquitous computing fundamentals", "author": ["John Krumm"], "venue": "CRC Press,", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2009}, {"title": "Activity recognition using cell phone accelerometers", "author": ["Jennifer R Kwapisz", "Gary M Weiss", "Samuel A Moore"], "venue": "ACM SigKDD Explorations Newsletter,", "citeRegEx": "51", "shortCiteRegEx": "51", "year": 2011}, {"title": "A review of unsupervised feature learning and deep learning for time-series modeling", "author": ["Martin L\u00e4ngkvist", "Lars Karlsson", "Amy Loutfi"], "venue": "Pattern Recognition Letters,", "citeRegEx": "52", "shortCiteRegEx": "52", "year": 2014}, {"title": "Convolutional networks for images, speech, and time series", "author": ["Yann LeCun", "Yoshua Bengio"], "venue": "The handbook of brain theory and neural networks,", "citeRegEx": "53", "shortCiteRegEx": "53", "year": 1995}, {"title": "uwave: Accelerometer-based personalized gesture recognition and its applications", "author": ["Jiayang Liu", "Lin Zhong", "Jehan Wickramasuriya", "Venu Vasudevan"], "venue": "Pervasive and Mobile Computing,", "citeRegEx": "55", "shortCiteRegEx": "55", "year": 2009}, {"title": "When good becomes evil: Keystroke inference with smartwatch", "author": ["Xiangyu Liu", "Zhe Zhou", "Wenrui Diao", "Zhou Li", "Kehuan Zhang"], "venue": "In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security,", "citeRegEx": "56", "shortCiteRegEx": "56", "year": 2015}, {"title": "Wearnet: A distributed multi-sensor system for context aware wearables", "author": ["Paul Lukowicz", "Holger Junker", "Mathias St\u00e4ger", "Thomas von Bueren", "Gerhard Tr\u00f6ster"], "venue": "In UbiComp 2002: Ubiquitous Computing,", "citeRegEx": "58", "shortCiteRegEx": "58", "year": 2002}, {"title": "smart) watch your taps: side-channel keystroke inference attacks using smartwatches", "author": ["Anindya Maiti", "Murtuza Jadliwala", "Jibo He", "Igor Bilogrevic"], "venue": "In Proceedings of the 2015 ACM International Symposium on Wearable Computers,", "citeRegEx": "59", "shortCiteRegEx": "59", "year": 2015}, {"title": "Introduction to information retrieval, volume 1", "author": ["Christopher D Manning", "Prabhakar Raghavan", "Hinrich Sch\u00fctze"], "venue": null, "citeRegEx": "60", "shortCiteRegEx": "60", "year": 2008}, {"title": "sp) iphone: decoding vibrations from nearby keyboards using mobile phone accelerometers", "author": ["Philip Marquardt", "Arunabh Verma", "Henry Carter", "Patrick Traynor"], "venue": "In Proceedings of the 18th ACM conference on Computer and communications security,", "citeRegEx": "61", "shortCiteRegEx": "61", "year": 2011}, {"title": "Seeing-isbelieving: Using camera phones for human-verifiable authentication", "author": ["Jonathan M McCune", "Adrian Perrig", "Michael K Reiter"], "venue": "In Security and privacy,", "citeRegEx": "62", "shortCiteRegEx": "62", "year": 2005}, {"title": "Tapprints: your finger taps have fingerprints", "author": ["Emiliano Miluzzo", "Alexander Varshavsky", "Suhrid Balakrishnan", "Romit Roy Choudhury"], "venue": "In Proceedings of the 10th international conference on Mobile systems, applications, and services,", "citeRegEx": "63", "shortCiteRegEx": "63", "year": 2012}, {"title": "Keystroke dynamics as a biometric for authentication", "author": ["Fabian Monrose", "Aviel D Rubin"], "venue": "Future Generation computer systems,", "citeRegEx": "64", "shortCiteRegEx": "64", "year": 2000}, {"title": "Accessory: password inference using accelerometers on smartphones", "author": ["Emmanuel Owusu", "Jun Han", "Sauvik Das", "Adrian Perrig", "Joy Zhang"], "venue": "In Proceedings of the Twelfth Workshop on Mobile Computing Systems & Applications,", "citeRegEx": "66", "shortCiteRegEx": "66", "year": 2012}, {"title": "Accelerometer based gesture recognition using continuous hmms", "author": ["Timo Pylv\u00e4n\u00e4inen"], "venue": "In Pattern Recognition and Image Analysis,", "citeRegEx": "67", "shortCiteRegEx": "67", "year": 2005}, {"title": "Activity recognition from accelerometer data", "author": ["Nishkam Ravi", "Nikhil Dandekar", "Preetham Mysore", "Michael L Littman"], "venue": "In AAAI,", "citeRegEx": "68", "shortCiteRegEx": "68", "year": 2005}, {"title": "A direct adaptive method for faster backpropagation learning: The rprop algorithm", "author": ["Martin Riedmiller", "Heinrich Braun"], "venue": "In Neural Networks,", "citeRegEx": "69", "shortCiteRegEx": "69", "year": 1993}, {"title": "Learning internal representations by error propagation", "author": ["David E Rumelhart", "Geoffrey E Hinton", "Ronald J Williams"], "venue": "Technical report, DTIC Document,", "citeRegEx": "70", "shortCiteRegEx": "70", "year": 1985}, {"title": "Soundcomber: A stealthy and contextaware sound trojan for smartphones", "author": ["Roman Schlegel", "Kehuan Zhang", "Xiao-yong Zhou", "Mehool Intwala", "Apu Kapadia", "XiaoFeng Wang"], "venue": "In NDSS,", "citeRegEx": "71", "shortCiteRegEx": "71", "year": 2011}, {"title": "Gesture recognition with a wii controller", "author": ["Thomas Schl\u00f6mer", "Benjamin Poppinga", "Niels Henze", "Susanne Boll"], "venue": "In Proceedings of the 2nd international conference on Tangible and embedded interaction,", "citeRegEx": "72", "shortCiteRegEx": "72", "year": 2008}, {"title": "Deep learning in neural networks: An overview", "author": ["J\u00fcrgen Schmidhuber"], "venue": "Neural Networks,", "citeRegEx": "73", "shortCiteRegEx": "73", "year": 2015}, {"title": "Fusion of smartphone motion sensors for physical activity", "author": ["Muhammad Shoaib", "Stephan Bosch", "Ozlem Durmaz Incel", "Hans Scholten", "Paul JM Havinga"], "venue": "recognition. Sensors,", "citeRegEx": "74", "shortCiteRegEx": "74", "year": 2014}, {"title": "Timing analysis of keystrokes and timing attacks on ssh", "author": ["Dawn Xiaodong Song", "David Wagner", "Xuqing Tian"], "venue": "In USENIX Security Symposium,", "citeRegEx": "75", "shortCiteRegEx": "75", "year": 2001}, {"title": "The resurrecting duckling", "author": ["Frank Stajano"], "venue": "In Security Protocols,", "citeRegEx": "76", "shortCiteRegEx": "76", "year": 2000}, {"title": "Guidelines to select machine learning scheme for classification of biomedical datasets. In Evolutionary Computation, Machine Learning and Data", "author": ["Ajay Kumar Tanwani", "Jamal Afridi", "M Zubair Shafiq", "Muddassar Farooq"], "venue": "Mining in Bioinformatics,", "citeRegEx": "77", "shortCiteRegEx": "77", "year": 2009}, {"title": "Compromising electromagnetic emanations of wired and wireless keyboards", "author": ["Martin Vuagnoux", "Sylvain Pasini"], "venue": "In USENIX security symposium,", "citeRegEx": "80", "shortCiteRegEx": "80", "year": 2009}, {"title": "Mole: Motion leaks through smartwatch sensors", "author": ["He Wang", "Ted Tsung-Te Lai", "Romit Roy Choudhury"], "venue": "In Proceedings of the 21st Annual International Conference on Mobile Computing and Networking,", "citeRegEx": "81", "shortCiteRegEx": "81", "year": 2015}, {"title": "Backpropagation through time: what it does and how to do it", "author": ["Paul J Werbos"], "venue": "Proceedings of the IEEE,", "citeRegEx": "82", "shortCiteRegEx": "82", "year": 1990}, {"title": "Gesture recognition with a 3-d accelerometer", "author": ["Jiahui Wu", "Gang Pan", "Daqing Zhang", "Guande Qi", "Shijian Li"], "venue": "In Ubiquitous intelligence and computing,", "citeRegEx": "83", "shortCiteRegEx": "83", "year": 2009}, {"title": "Taplogger: Inferring user inputs on smartphone touchscreens using on-board motion sensors", "author": ["Zhi Xu", "Kun Bai", "Sencun Zhu"], "venue": "In Proceedings of the fifth ACM conference on Security and Privacy in Wireless and Mobile Networks,", "citeRegEx": "84", "shortCiteRegEx": "84", "year": 2012}], "referenceMentions": [{"referenceID": 14, "context": "Related works (detailed in Chapter 2) have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen [16, 84, 66].", "startOffset": 162, "endOffset": 174}, {"referenceID": 69, "context": "Related works (detailed in Chapter 2) have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen [16, 84, 66].", "startOffset": 162, "endOffset": 174}, {"referenceID": 53, "context": "Related works (detailed in Chapter 2) have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen [16, 84, 66].", "startOffset": 162, "endOffset": 174}, {"referenceID": 49, "context": "Other research has proved that the motion sensors from a smartphone standing on a flat surface can be used to infer the keystrokes typed on a nearby physical computer keyboard [61].", "startOffset": 176, "endOffset": 180}, {"referenceID": 66, "context": "Moreover, recently published works have demonstrated that smartwatches motion sensors could be exploited to infer keystrokes on both virtual and physical keyboards [81, 59, 56].", "startOffset": 164, "endOffset": 176}, {"referenceID": 47, "context": "Moreover, recently published works have demonstrated that smartwatches motion sensors could be exploited to infer keystrokes on both virtual and physical keyboards [81, 59, 56].", "startOffset": 164, "endOffset": 176}, {"referenceID": 45, "context": "Moreover, recently published works have demonstrated that smartwatches motion sensors could be exploited to infer keystrokes on both virtual and physical keyboards [81, 59, 56].", "startOffset": 164, "endOffset": 176}, {"referenceID": 60, "context": "These powerful models have successfully been applied to complex tasks in the fields of Computer Vision, Natural Language Processing and Speech Recognition [54, 73].", "startOffset": 155, "endOffset": 163}, {"referenceID": 42, "context": "Deep Learning has however comparatively been used poorly to process time series data such as motion sensors [52].", "startOffset": 108, "endOffset": 112}, {"referenceID": 19, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 18, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 8, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 6, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 25, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 37, "context": "However, their remarkable qualities lead to the development of various Open-Source projects [79, 21, 20, 9, 7, 28, 47, 36, 78] making them available and free to use by anyone.", "startOffset": 92, "endOffset": 126}, {"referenceID": 7, "context": "In fact, the bug leads applications targeting Android Wear to grant some permissions without them being explicitly defined in the manifest file [8].", "startOffset": 144, "endOffset": 147}, {"referenceID": 13, "context": "the users, the system, the communicating entities) [15].", "startOffset": 51, "endOffset": 55}, {"referenceID": 17, "context": "timing information, power consumption, electromagnetic emanations, sound) [19].", "startOffset": 74, "endOffset": 78}, {"referenceID": 20, "context": "Similarly, touchlogging is the action of recording the buttons pressed on a touch screen, or the coordinates of the touch events allowing the inference of the keys virtually touched by the user [23].", "startOffset": 194, "endOffset": 198}, {"referenceID": 40, "context": "These devices are designed to be extensively mobile and operate in environments that may have limited computing infrastructure support [50].", "startOffset": 135, "endOffset": 139}, {"referenceID": 34, "context": "Software-based sensors usually derive their data from hardwarebased sensors, namely the accelerometers (one for each axis x, y, and z), and the gyroscope [42, 40, 43, 1].", "startOffset": 154, "endOffset": 169}, {"referenceID": 0, "context": "Software-based sensors usually derive their data from hardwarebased sensors, namely the accelerometers (one for each axis x, y, and z), and the gyroscope [42, 40, 43, 1].", "startOffset": 154, "endOffset": 169}, {"referenceID": 11, "context": "This process is known as supervised learning since the statistical model needs to be trained with expert-annotated data to classify subsequently unseen samples [12, 31].", "startOffset": 160, "endOffset": 168}, {"referenceID": 28, "context": "This process is known as supervised learning since the statistical model needs to be trained with expert-annotated data to classify subsequently unseen samples [12, 31].", "startOffset": 160, "endOffset": 168}, {"referenceID": 11, "context": "Unsupervised Feature Learning is a process where the model selects features automatically through training [12, 73].", "startOffset": 107, "endOffset": 115}, {"referenceID": 60, "context": "Unsupervised Feature Learning is a process where the model selects features automatically through training [12, 73].", "startOffset": 107, "endOffset": 115}, {"referenceID": 11, "context": "synapses) has a weight associated with it [12, 33].", "startOffset": 42, "endOffset": 50}, {"referenceID": 9, "context": "[10] have shown that standard RNNs are in practice unable to learn long-term dependencies in contexts where information need to be connected over long time intervals.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "Hochreiter and Schmidhuber [34] overcame the limitations of standard RNN by introducing a new architecture termed Long Short-Term Memory (LSTM) which allows the association of input with memories remote in time by preserving the backpropagated error through time and layers.", "startOffset": 27, "endOffset": 31}, {"referenceID": 27, "context": "While many LSTM implementation variants have been proposed [30, 45], the following detailed LSTM cell use a forget gate [27] with no bias for simplicity reasons.", "startOffset": 59, "endOffset": 67}, {"referenceID": 35, "context": "While many LSTM implementation variants have been proposed [30, 45], the following detailed LSTM cell use a forget gate [27] with no bias for simplicity reasons.", "startOffset": 59, "endOffset": 67}, {"referenceID": 24, "context": "While many LSTM implementation variants have been proposed [30, 45], the following detailed LSTM cell use a forget gate [27] with no bias for simplicity reasons.", "startOffset": 120, "endOffset": 124}, {"referenceID": 30, "context": "c and use o to decide when to read information from c [34].", "startOffset": 54, "endOffset": 58}, {"referenceID": 24, "context": "Additionally, a forget gate f is used to reset memory and, as a result, help the network process continuous sequences or sequences that are not segmented with precise starting and ending time [27].", "startOffset": 192, "endOffset": 196}, {"referenceID": 23, "context": "[26] to allow recurrent networks to distinguish between sequences of variable length.", "startOffset": 0, "endOffset": 4}, {"referenceID": 57, "context": "Backpropagation is a popular algorithm designed to train ANNs using a gradient descent method to minimize the network prediction error [70].", "startOffset": 135, "endOffset": 139}, {"referenceID": 11, "context": "Otherwise, the error of hidden neurons is proportional to the weighted sum of errors from connected neurons [12, 31, 33].", "startOffset": 108, "endOffset": 120}, {"referenceID": 28, "context": "Otherwise, the error of hidden neurons is proportional to the weighted sum of errors from connected neurons [12, 31, 33].", "startOffset": 108, "endOffset": 120}, {"referenceID": 67, "context": "A significant alternative is Backpropagation Through Time [82] used to train RNNs.", "startOffset": 58, "endOffset": 62}, {"referenceID": 65, "context": "Traditionally by exploiting characteristics of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11], and timing [75, 25].", "startOffset": 96, "endOffset": 100}, {"referenceID": 1, "context": "Traditionally by exploiting characteristics of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11], and timing [75, 25].", "startOffset": 108, "endOffset": 119}, {"referenceID": 10, "context": "Traditionally by exploiting characteristics of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11], and timing [75, 25].", "startOffset": 108, "endOffset": 119}, {"referenceID": 62, "context": "Traditionally by exploiting characteristics of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11], and timing [75, 25].", "startOffset": 132, "endOffset": 140}, {"referenceID": 22, "context": "Traditionally by exploiting characteristics of physical keyboards such as electromagnetic waves [80], sound [2, 85, 11], and timing [75, 25].", "startOffset": 132, "endOffset": 140}, {"referenceID": 58, "context": "However, such side-channels are ineffective to exploit virtual keyboard, albeit sound have been successfully exploited on smartphones [71].", "startOffset": 134, "endOffset": 138}, {"referenceID": 21, "context": "Studies have shown the great potential of recovering sound, music, voice conversations, and even typing by simply observing slight vibrations in the environment produced by physical events [24, 6].", "startOffset": 189, "endOffset": 196}, {"referenceID": 5, "context": "Studies have shown the great potential of recovering sound, music, voice conversations, and even typing by simply observing slight vibrations in the environment produced by physical events [24, 6].", "startOffset": 189, "endOffset": 196}, {"referenceID": 15, "context": "However, studies [17, 3] have shown that motion-based keystroke inference attack remains effective and practical despite the obvious assumptions that the previously enunciated factors might alter the robustness and the accuracy of the inference.", "startOffset": 17, "endOffset": 24}, {"referenceID": 2, "context": "However, studies [17, 3] have shown that motion-based keystroke inference attack remains effective and practical despite the obvious assumptions that the previously enunciated factors might alter the robustness and the accuracy of the inference.", "startOffset": 17, "endOffset": 24}, {"referenceID": 49, "context": "[61] have shown that the motion sensors output from a smartphone standing on a flat surface can be used to infer keystrokes typed on a nearby physical computer keyboard standing on the same surface.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "Related works [16, 84, 66, 63] have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen.", "startOffset": 14, "endOffset": 30}, {"referenceID": 69, "context": "Related works [16, 84, 66, 63] have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen.", "startOffset": 14, "endOffset": 30}, {"referenceID": 53, "context": "Related works [16, 84, 66, 63] have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen.", "startOffset": 14, "endOffset": 30}, {"referenceID": 51, "context": "Related works [16, 84, 66, 63] have shown that the data from the motion sensors of a smartphone can be used to infer keystrokes entered on its touchscreen.", "startOffset": 14, "endOffset": 30}, {"referenceID": 14, "context": "[16] demonstrated that a malicious Android application can infer as much as 70% of the keystrokes entered on a number-only virtual keyboard on an Android device.", "startOffset": 0, "endOffset": 4}, {"referenceID": 53, "context": "[66] proposed a system that reads accelerometer data to extract 6-character passwords on an Android device.", "startOffset": 0, "endOffset": 4}, {"referenceID": 69, "context": "[84] introduced a keystroke inference attack by using a Trojan application running on the Android platform.", "startOffset": 0, "endOffset": 4}, {"referenceID": 51, "context": "[63] have demonstrated that the motion sensors built-in smartphones and tablets could be used to infer keystrokes entered on a complete 26-letters keyboard with an accuracy reaching as much as 90%.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 110, "endOffset": 121}, {"referenceID": 55, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 110, "endOffset": 121}, {"referenceID": 41, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 110, "endOffset": 121}, {"referenceID": 54, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 182, "endOffset": 198}, {"referenceID": 59, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 182, "endOffset": 198}, {"referenceID": 44, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 182, "endOffset": 198}, {"referenceID": 68, "context": "Motion sensors signal classification have been explored extensively in studies involving activity recognition [5, 68, 51] in the field of Pervasive Computing and gesture recognition [67, 72, 55, 83] in the area of Human-Computer Interaction.", "startOffset": 182, "endOffset": 198}, {"referenceID": 61, "context": "In both fields, the use of accelerometer sensors is historically studied more deeply although some studies explored sensors fusion to increase robustness [74, 58].", "startOffset": 154, "endOffset": 162}, {"referenceID": 46, "context": "In both fields, the use of accelerometer sensors is historically studied more deeply although some studies explored sensors fusion to increase robustness [74, 58].", "startOffset": 154, "endOffset": 162}, {"referenceID": 64, "context": "According to Tanwani [77], the classification accuracy of a given algorithm is largely dependent on the nature of the dataset rather than the classification algorithm itself.", "startOffset": 21, "endOffset": 25}, {"referenceID": 15, "context": "In their implementation [17], they showed that the inference accuracy level stabilizes when the training set reaches a certain size (i.", "startOffset": 24, "endOffset": 28}, {"referenceID": 0, "context": "In fact, studies have shown that the gyroscope is a better side-channel than the accelerometer for keystroke inference [1, 17, 63].", "startOffset": 119, "endOffset": 130}, {"referenceID": 15, "context": "In fact, studies have shown that the gyroscope is a better side-channel than the accelerometer for keystroke inference [1, 17, 63].", "startOffset": 119, "endOffset": 130}, {"referenceID": 51, "context": "In fact, studies have shown that the gyroscope is a better side-channel than the accelerometer for keystroke inference [1, 17, 63].", "startOffset": 119, "endOffset": 130}, {"referenceID": 49, "context": "In fact, hardware specification such as the motion sensor sampling rate is not fixed and is much lower than the sampling rates of acoustic and electromagnetic sensors used in related eavesdropping attacks [61, 17, 1].", "startOffset": 205, "endOffset": 216}, {"referenceID": 15, "context": "In fact, hardware specification such as the motion sensor sampling rate is not fixed and is much lower than the sampling rates of acoustic and electromagnetic sensors used in related eavesdropping attacks [61, 17, 1].", "startOffset": 205, "endOffset": 216}, {"referenceID": 0, "context": "In fact, hardware specification such as the motion sensor sampling rate is not fixed and is much lower than the sampling rates of acoustic and electromagnetic sensors used in related eavesdropping attacks [61, 17, 1].", "startOffset": 205, "endOffset": 216}, {"referenceID": 15, "context": "[17] proposed a pre-processing solution allowing them to use signal analysis methods.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[16] experimented with the patterns produced by the motion during keystrokes.", "startOffset": 0, "endOffset": 4}, {"referenceID": 53, "context": "[66] solved the sampling rate problem by using an approach involving linear interpolation to create consistent sampling intervals throughout the recorded accelerometer data.", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "A wrapper [49] was then used for feature subset selection to maximize the accuracy of the prediction.", "startOffset": 10, "endOffset": 14}, {"referenceID": 49, "context": "[61] used a 100ms long time window as Asonov et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 1, "context": "[2] to extract features from the signal.", "startOffset": 0, "endOffset": 3}, {"referenceID": 69, "context": "[84] selected features from the signal in a time window bounded by the touch-down and the touch-up events triggered when the user interact with the touchscreen.", "startOffset": 0, "endOffset": 4}, {"referenceID": 66, "context": "[81] developed a system to perform keylogging on a laptop keyboard using the motion sensors of a smartwatch.", "startOffset": 0, "endOffset": 4}, {"referenceID": 47, "context": "[59]", "startOffset": 0, "endOffset": 4}, {"referenceID": 45, "context": "[56] focused on performing keylogging with a smartwatch on both a number-only physical keypad and a standard QWERTY computer keyboard.", "startOffset": 0, "endOffset": 4}, {"referenceID": 63, "context": "In fact, device pairing has been extensively studied in the field of Computer Security [76, 62, 4, 18, 29] and has proven to be challenging.", "startOffset": 87, "endOffset": 106}, {"referenceID": 50, "context": "In fact, device pairing has been extensively studied in the field of Computer Security [76, 62, 4, 18, 29] and has proven to be challenging.", "startOffset": 87, "endOffset": 106}, {"referenceID": 3, "context": "In fact, device pairing has been extensively studied in the field of Computer Security [76, 62, 4, 18, 29] and has proven to be challenging.", "startOffset": 87, "endOffset": 106}, {"referenceID": 16, "context": "In fact, device pairing has been extensively studied in the field of Computer Security [76, 62, 4, 18, 29] and has proven to be challenging.", "startOffset": 87, "endOffset": 106}, {"referenceID": 26, "context": "In fact, device pairing has been extensively studied in the field of Computer Security [76, 62, 4, 18, 29] and has proven to be challenging.", "startOffset": 87, "endOffset": 106}, {"referenceID": 6, "context": "The server then saved them The ANNs are implemented using modules available in the PyBrain Open-Source library [7] with a C++ wrapper additionally used to speed up the computations.", "startOffset": 111, "endOffset": 114}, {"referenceID": 19, "context": "Some experiments were also performed using Torch [21] and the programming language Lua.", "startOffset": 49, "endOffset": 53}, {"referenceID": 36, "context": "The moving median removes the noise while preserving the signal pattern and is applied with a sliding window to compute the median value in a fixed range [46], that is:", "startOffset": 154, "endOffset": 158}, {"referenceID": 12, "context": "At contrary for the accelerometer, we want to attenuate signals with frequencies lower than the cutoff frequency, thus the need to use a high-pass filter [14].", "startOffset": 154, "endOffset": 158}, {"referenceID": 29, "context": "Even with data containing statistical noise, the filter can produce estimates allowing patterns to emerge more significantly from the signal [32].", "startOffset": 141, "endOffset": 145}, {"referenceID": 1, "context": "[2] determined the duration of a key-press to be approximately 100ms and knowing that our target sampling rate was defined to be 2ms (see Section 5.", "startOffset": 0, "endOffset": 3}, {"referenceID": 56, "context": "The weights are updated using an improved variant of the Backpropagation iterative gradient descent termed Rprop- [69, 37].", "startOffset": 114, "endOffset": 122}, {"referenceID": 32, "context": "The weights are updated using an improved variant of the Backpropagation iterative gradient descent termed Rprop- [69, 37].", "startOffset": 114, "endOffset": 122}, {"referenceID": 48, "context": "F1 Score) [60].", "startOffset": 10, "endOffset": 14}, {"referenceID": 31, "context": "H\u00fcsken and Stagge [35] proposed a method to assess the reliability of a classification algorithm based on the value distribution of the output neurons.", "startOffset": 18, "endOffset": 22}, {"referenceID": 38, "context": "All data are thus used for both training and evaluation to provide a more general and accurate performance assessment [48].", "startOffset": 118, "endOffset": 122}, {"referenceID": 43, "context": "Convolutional Neural Network (CNN) is a class of powerful deep models designed to process multi-dimensional arrays such as images and video frames [53].", "startOffset": 147, "endOffset": 151}, {"referenceID": 52, "context": "The motion of WAD could also potentially be used for the identification and tracking of users as studied in similar research [64, 38].", "startOffset": 125, "endOffset": 133}, {"referenceID": 33, "context": "The motion of WAD could also potentially be used for the identification and tracking of users as studied in similar research [64, 38].", "startOffset": 125, "endOffset": 133}], "year": 2015, "abstractText": "Wearable technologies are today on the rise, becoming more common and broadly available to mainstream users. In fact, wristband and armband devices such as smartwatches and fitness trackers already took an important place in the consumer electronics market and are becoming ubiquitous. By their very nature of being wearable, these devices, however, provide a new pervasive attack surface threatening users privacy, among others. In the meantime, advances in machine learning are providing unprecedented possibilities to process complex data efficiently. Allowing patterns to emerge from high dimensional unavoidably noisy data. The goal of this work is to raise awareness about the potential risks related to motion sensors built-in wearable devices and to demonstrate abuse opportunities leveraged by advanced neural network architectures. The LSTM-based implementation presented in this research can perform touchlogging and keylogging on 12-keys keypads with above-average accuracy even when confronted with raw unprocessed data. Thus demonstrating that deep neural networks are capable of making keystroke inference attacks based on motion sensors easier to achieve by removing the need for non-trivial preprocessing pipelines and carefully engineered feature extraction strategies. Our results suggest that the complete technological ecosystem of a user can be compromised when a wearable wristband device is worn.", "creator": "LaTeX with hyperref package"}}}