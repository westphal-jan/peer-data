{"id": "1512.05670", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Dec-2015", "title": "Towards automating the generation of derivative nouns in Sanskrit by simulating Panini", "abstract": "About 1115 rules in Astadhyayi from A.4.1.76 to A.5.4.160 deal with generation of derivative nouns, making it one of the largest topical sections in Astadhyayi, called as the Taddhita section owing to the head rule A.4.1.76. This section is a systematic arrangement of rules that enumerates various affixes that are used in the derivation under specific semantic relations. We propose a system that automates the process of generation of derivative nouns as per the rules in Astadhyayi. The proposed system follows a completely object oriented approach, that models each rule as a class of its own and then groups them as rule groups. The rule groups are decided on the basis of selective grouping of rules by virtue of anuvrtti. The grouping of rules results in an inheritance network of rules which is a directed acyclic graph. Every rule group has a head rule and the head rule notifies all the direct member rules of the group about the environment which contains all the details about data entities, participating in the derivation process. The system implements this mechanism using multilevel inheritance and observer design patterns. The system focuses not only on generation of the desired final form, but also on the correctness of sequence of rules applied to make sure that the derivation has taken place in strict adherence to Astadhyayi. The proposed system's design allows to incorporate various conflict resolution methods mentioned in authentic texts and hence the effectiveness of those rules can be validated with the results from the system. We also present cases where we have checked the applicability of the system with the rules which are not specifically applicable to derivation of derivative nouns, in order to see the effectiveness of the proposed schema as a generic system for modeling Astadhyayi.", "histories": [["v1", "Thu, 17 Dec 2015 16:55:57 GMT  (565kb)", "http://arxiv.org/abs/1512.05670v1", "16th World Sanskrit Conference, Bangkok June 28th - July 02 2016"], ["v2", "Tue, 22 Dec 2015 10:07:35 GMT  (565kb)", "http://arxiv.org/abs/1512.05670v2", "16th World Sanskrit Conference, Bangkok June 28th - July 02 2015"]], "COMMENTS": "16th World Sanskrit Conference, Bangkok June 28th - July 02 2016", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["amrith krishna", "pawan goyal"], "accepted": false, "id": "1512.05670"}, "pdf": {"name": "1512.05670.pdf", "metadata": {"source": "CRF", "title": "Towards automating the generation of derivative nouns in Sanskrit by simulating Pa\u0304n\u0323ini", "authors": ["Amrith Krishna", "Pawan Goyal"], "emails": ["amrith@iitkgp.ac.in", "pawang@cse.iitkgp.ernet.in"], "sections": [{"heading": null, "text": "Towards the automation of the generation of derived nouns in Sanskrit by the simulation of P\u0101\u1e47iniAmrith Krishna Department of CSE, Indian Institute of Technology, Kharagpur, Indiaamrith @ iitkgp.ac.inPawan Goyal Department of CSE, Indian Institute of Technology, Kharagpur, India pawang @ cse.iitkgp.ernet.in (Presented at the 16th World Sanskrit Conference, Bangkok June 28 - July 2, 2016) AbstractAbout 1115 rules in A\u1e63\u1e6d\u0101dhy\u0101y\u012b from A.4.1.76 to A.5.4.160 deal with the generation of derived nouns and make it one of the largest thematic sections in Actuat\u0101dhy\u0101dhy\u0101y\u012b, called the Taddhita section, which is the main rule A.4.1.76. This section is a systematic arrangement of rules containing various affixes used in the derivation under certain setic relationships."}, {"heading": "1 Introduction", "text": "It is a classic and seminal work on descriptive linguistics. (...) It has provided a complete description of the Sanskrit language spoken during this period of time and is also often praised for the calculation principles and programming concepts used in it. (...) Approximately a fourth (approximately 1115) of the rules in application practice is derived from the practice of the derived nouns (and adjectives) derived from other nouns (or adjectives). Affixes used to derive derived nouns are used in the Taddhita section of derived nouns (and adjectives) and the affixes coming under this section are referred to as the Taddhita section. (...) Tadhita section begins with rule A.4.76."}, {"heading": "2 Related Work", "text": "He points out the contrast between Paganini's system and the system dealt with by maritime components in the second half of the twentieth century. There were works by eminent scholars on the formalism of P\u0101nnis grammar rules, their expressiveness and the resulting process of deriving rules (prakriy\u0101), which they also apply. Seminar works from Cardona (1965) and Staal (1965) on the formatting of rules of grammar with emphasis on meta-rules describing the context of sensitive aspects were a starting point with further improvements from Cardona (1969), where he applies his formalization to other rules related to phonetic changes.Cardona (2009) emphasizes the relevance of affixation and how it is well integrated with syntax as a continuum in Paganini's derivative system."}, {"heading": "3 Linguistic and Structural aspects of Taddhita Section", "text": "In the section Taddhita, P\u0101\u1e47ini identifies about 300 semantic relations, among which Pr\u0101tipadikas can be created with Taddhita appendages. It is mentioned as a subsection to pratyay\u0101dhik\u0101ra, which deals with all kinds of appendices. The rules in the section Taddhita deal with three entities, namely semantic relations, appendices and tribes or the collection of tribes from ga\u1e47ap\u0101\u1e6dha. The rules are defined in such a way that they facilitate the attachment of the correct Taddhita appendices in relation to the intended semantic relationship. The rules often deal with characteristics of the entities involved at different levels of phonological, morphological, syntactic and semantic planes. There are two types of derivatives which include Taddhita appendices (Sharma, 2002)."}, {"heading": "3.1 Linguistic Phenomena in Derivational Morphology", "text": "The derived morphology in Sanskrit, as in many other languages, represents some of the known facts about many to many correspondences between forms and appendages. Appendices of Taddhita show affix polysemy, homonymy, synonymy and non-composiality. In affix polysemy, the same affix is used to designate related senses as in the case of patronymy and provenance relationship. In affix homonymy, the same affix is used in unambiguous and unrelated semantic contexts, as in the case of personal nouns or abstract nouns. Appendices of synonymy deal with the same semantic sense but use different affixes. For example, multiple affixes can be used for the patronymic relationship, such as \"(...),\"..."}, {"heading": "3.2 Organization of Taddhita rules", "text": "The five rules are}, {"heading": "4 Implementation", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1 Derivational Process", "text": "To discuss the derivative process or derivation of a derivative noun, we take the derivative derivative from the nominal noun, which can be considered as \"Hello World\" in the section Taddhita. The essential steps of the derivative process are outlined in Table 1. Once the Taddhita addition is introduced, there remains a series of operations on the environment that lead to a final form. The rules thus triggered can be regarded as a continuous iteration of two sub-processes, one being the identification and assignment of technical terms (as well as the assignment of technical terms) to the surrounding chain or to a relevant sub-chain thereof."}, {"heading": "4.2 Overview of the Implementation System", "text": "For the automation of the derivative process, we propose the following method, which is based on object-oriented concepts. Each rule forms a class and each instance of the rule class (henceforth referred to as the rule itself) is registered with the environment, so that if there is a change in the environment, the rules are notified. Each rule checks the possibility that it is applied to the environment, and for one rule, if all the conditions are met, the rule can ideally be applied to the environment. However, in a general scenario, several rules can claim their competence to apply to the environment. In order to handle such scenarios, we keep these competing rules in a list called the candidate list. Then, a conflict resolution method is applied that decides the winning rule, and other rules are removed from the list. By removing rules other than the winning rule, we believe that the remote rules are not applied to the current instance of the environment, although they are notified when the surrounding rule reappears in Figure 2 of the implementation system."}, {"heading": "4.3 Tools and Techniques Used", "text": "We take a completely object-oriented approach to implementing the system. The following tools and techniques are used to achieve the principles described in Section 4.2:"}, {"heading": "4.3.1 Observer Design Patern", "text": "The design pattern of the observer defines one to many dependencies between objects, so that when an object changes its state, all its dependencies are automatically notified and updated (Gamma et al., 1994). The object on which the state changes occur is called the subject and it keeps a list of its dependencies, called observers. As shown in Figure 3, each observer object, which in our case is the s\u016btra or the rule, is registered with an object called the \"subject\" and in our case represents the environment. Subject class has a method for registering the observers. Whenever a change in the value of an attribute of the subject occurs, it calls the method \"notify\" of the abstract observer class, which is implemented for each object of the observer."}, {"heading": "4.3.2 Multilevel Inheritance", "text": "To form rule groups, i.e. a network of inheritance between rules, we use multi-level inheritance between rules. Although multi-level inheritance is permitted, multi-level inheritance is not permitted in the system, and therefore no single rule directly inherits from two different rules. Figure 4 shows the inheritance achieved for each class in A\u1e63\u1e6d\u0101dhy\u0101y\u012b. All classes inherit from a base class called \"s\u016btra,\" a generic class that defines all possible traits that a rule or s\u016btra can possess. All other rules inherit from it."}, {"heading": "4.4 Rule Triggering and Propagation", "text": "The environment forms the subject class for the design pattern of the observer. However, not all rules are applied directly to the environment, but only those rules that do not fall within the domain of any adhik\u0101ra rules or of a controlling leader of a set of rules by anuv\u1e5btti (which are usually rules that assign technical terms to the assignments), which are inherent in the classes R1, R2, etc. in Figure 5. Then there are rule groups represented by RG1, RG2, etc. These are set of rules with the same head. The rule classes that fall within the group under the same head are inherent in the head rule class. The head rule object, like the design pattern of the observer, registers the inherited objects as observers. Now, the head class notifies the observers whenever the environment meets the conditions of the head rule. The tested conditions are those conditions that must be fulfilled by all rules registered under the head. Here, \"by head we mean either a k\u0101ra or a component passed on."}, {"heading": "4.4.1 Working", "text": "It is not the only rule that it can apply in the ruleset, and this rule can be called the check phase. The dotted line on the right side of each block indicates that the execution of the rules is guided from the tip to the specific rules by triggering the rules. The check phase on the ruleset can be called the check phase. The dotted line on the right side of each block indicates that the execution of the rules is led from the tip to the specific rules. The check phase for the applicable rules on the ruleset can be called the check phase. The dotted line on the right side of each block indicates the execution of the rules that are executed. i.e. the knot leading the dotted edge with label 1 is the exact rule that is executed, and other knots in the path indicate that these rules are being executed."}, {"heading": "4.5 Environment Representation", "text": "The environment is an object that contains the entities that are part of the derivative process. Entities may arise from the environment, affixes, extensions, characters or any of their properties. The most basic and atomic entity in the environment is another object called \"\u015babda.\" The environment also contains various instances of the class \"\u015babda collection,\" which contain a sequence of references to \u015babda objects along with a number of attributes belonging to the collection. Instances of the \"\u015babda collection\" are used to represent various technical terms that can be attributed to the environment or part of it. Figure 7 shows how the environment is used after the affixation of Taddhita affix's object affix. As already seen in Section 4.4.1, the Taddhita affixation of objects occurs due to the presence of the technical term pr\u0101tipadika."}, {"heading": "4.6 Rule Selection and Conflict Resolution", "text": "In such cases, we need to apply mechanisms to help us resolve the conflicts. There is little information on conflict resolution among the applicant rules in the applicant countries, but there are no specific rules to be applied by other scholars. It may be the case that we have adopted these principles, which were predominant in his time as a prerequisite for understanding his treatise on grammar, but this has led to debates among scholars leading to different schools of thought. Following such a scenario, we have decided to implement the conflict resolution module as a separate pluggable module in our system, so that we can try different methods that have brought scholars in general to a consensus."}, {"heading": "5 Derivation of a Derivative Noun", "text": "In this section we will show how to derive the nominal characteristics of the system. In Section 4.4.1, the affixation of the technical characteristics is already shown. However, some of the finer details regarding the post-processing after the execution of the rule are not discussed, which we will do gradually in this step. Please refer to Table 1 for the state of the environment after each rule is applied. \u25a0 Affixation, as shown in Section 4.4.1. Here, the user input \"which has led to an affixation of the desired characteristics,\" has led to the affixation of the desired affixation. Affixation has been added to the environment in the form of \"pratyaya,\" shown in Figure 7, and two other attributes have also been added to the \"pratyaya\" object. The two attributes are \"upade\u015ba\" and \"Taddhita.\""}, {"heading": "6 The Schema as a General Schema for Modelling A\u1e63\u1e6d\u0101dhy\u0101y\u012b", "text": "In this section we will reflect on rules that lie outside A.A.101. (2010) Five cases are discussed in which a conflict of application arises between two competing rules. (2011) In his essay Scharf speaks of a conflict between rules A.6.1.87 and A.6.1.88, where the scope of A.6.1.88 is properly within the scope of rule A.6.1.87. The only aspect passed by A.6.1.77 as part of the inheritance is nothing other than the verification of a vowel right as right context. (2011) It could be argued that A.6.1.84 has no relevance for this examination, but A.6.1.84 is an adhik\u0101ra rule and the execution will never stop."}, {"heading": "7 Evaluation Results", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "7.1 Evaluation Framework", "text": "For the evaluation, we have divided the entire section apatya into the three cases we have then reached. - The section apatya consists of rules from A.4.1.92 to A.4.176 dealing with the rules for the execution of tribes, which must be used together with a semantic sense of apatyam (with its subtypes gotra, yuv\u0101m) or \"the descendant of the semantic relationship.\" For the proper execution of these rules, we had to implement other rules which cover the entire span of the \"apatya\" section and the results after the affixation from the system, such as the pratyay\u0101dhik\u0101ra rule A.4.1.83 and its exceptions, as well as the rules applied outside the Taddhita section. We have selected 60 input cases which cover the entire span of the \"apatya\" section and the results after the affixation from the system.A web-based survey was used for human judgment."}, {"heading": "8 Discussion and Conclusion", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "8.1 Bottlenecks in Automating the Astadhyayai", "text": "In the discussion of the specific hierarchy, we can see that the entire A\u1e63\u0101dhy\u0101yi rule uses a multitude of linguistic traits ranging from phonetic to semantic traits. P\u0101\u1e47ini occasionally uses the intention of the speaker as a condition to be fulfilled. If, for example, we consider rule 4-1-147 as a condition that includes a multitude of linguistic traits from phonetic to semantic traits, P\u0101\u1e47ini occasionally describes the intention of the speaker as a condition to be fulfilled. If we regard rule 4-1-147 as a condition, the term \"A.hierarchy\" means the intention of the speaker whether we want to address someone or not by referring to the \"descendants of the\" relationship in an disrespectful manner."}, {"heading": "8.2 Conclusions and Future directions", "text": "The proposed scheme, which aims primarily at the automated generation of derivative nouns, can essentially be used as a tool for verifying the system. Our proposed scheme, which mainly aims at the automated generation of derivative nouns, or what is called the Taddhita section, adopts a fully object-oriented approach to modeling the system. In order to improve the authors \"knowledge, the system is the first of its kind to specifically focus on modeling Taddhita methods in A\u1e63\u0101dhy\u0101y\u012b. The system focuses not only on generating correct definitive forms, but also on producing the correct sequence of rules that are applied to the entire derivative process. This approach doubles the system as a pedagogical tool, where a learner can use the system to learn about the derivative process by focusing nominally on his choice, rather than focusing on a set of rules that can be separated from a set of examples already discussed or solved from a series of text books."}, {"heading": "Acknowledgments", "text": "We would like to thank Dr. G\u00e9rard Huet, Dr. Peter Scharf and Dr. Amba Kulkarni for their support and valuable contributions from the discussions we had in connection with the work. We would also like to thank the experts, Ms. Sukhada, Ms. Anuja Ajotikar, Ms. Tanuja Ajotikar, Mr. Pavankumar Satuluri and Mr. P Sanjeev for their participation in the system evaluation we conducted and also for their valuable comments."}], "references": [{"title": "Panini\u2019s Taddhita rules", "author": ["Saroja Bhate."], "venue": "University of Poona, Pune.", "citeRegEx": "Bhate.,? 1989", "shortCiteRegEx": "Bhate.", "year": 1989}, {"title": "Indowordnet", "author": ["Pushpak Bhattacharyya."], "venue": "proceedings of LREC-10. Citeseer.", "citeRegEx": "Bhattacharyya.,? 2010", "shortCiteRegEx": "Bhattacharyya.", "year": 2010}, {"title": "On translating and formalizing p\u0101\u1e47inian rules", "author": ["George Cardona."], "venue": "Journal of the Oriental Institute of Baroda, volume 14, pages 306\u201314.", "citeRegEx": "Cardona.,? 1965", "shortCiteRegEx": "Cardona.", "year": 1965}, {"title": "Studies in indian grammarians i: the method of description reflected in the \u015bivas\u016btras", "author": ["George Cardona."], "venue": "Transactions of the American Philosophical Society, pages 3\u201348. JSTOR.", "citeRegEx": "Cardona.,? 1969", "shortCiteRegEx": "Cardona.", "year": 1969}, {"title": "Panini: His work and its traditions vol 1", "author": ["George Cardona."], "venue": "Background and Introduction. 2nd ed. Motilal Banarsidass.", "citeRegEx": "Cardona.,? 1997", "shortCiteRegEx": "Cardona.", "year": 1997}, {"title": "On the structure of p\u0101\u1e47ini\u2019s system", "author": ["George Cardona."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 1\u201332. Springer.", "citeRegEx": "Cardona.,? 2009", "shortCiteRegEx": "Cardona.", "year": 2009}, {"title": "Derivational morphology in inheritance-based lexica: Insights from p\u0101\u1e47ini", "author": ["Ashwini Deo."], "venue": "Lingua, volume 117.1, pages 175\u2013201. Elsevier.", "citeRegEx": "Deo.,? 2007", "shortCiteRegEx": "Deo.", "year": 2007}, {"title": "Design Patterns: Elements of Reusable Object-Oriented Software", "author": ["Erich Gamma", "Richard Helm", "Ralph Johnson", "John Vlissides."], "venue": "Addison Wesley.", "citeRegEx": "Gamma et al\\.,? 1994", "shortCiteRegEx": "Gamma et al\\.", "year": 1994}, {"title": "Completeness analysis of a sanskrit reader", "author": ["Pawan Goyal", "G\u00e9rard Huet."], "venue": "Proceedings, 5th International Symposium on Sanskrit Computational Linguistics. DK Printworld (P) Ltd, pages 130\u2013171.", "citeRegEx": "Goyal and Huet.,? 2013", "shortCiteRegEx": "Goyal and Huet.", "year": 2013}, {"title": "Computer simulation of a\u1e63\u1e6d\u0101dhy\u0101y\u012b: Some insights", "author": ["Pawan Goyal", "Amba Kulkarni", "Laxmidhar Behera."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 139\u2013161. Springer.", "citeRegEx": "Goyal et al\\.,? 2009", "shortCiteRegEx": "Goyal et al\\.", "year": 2009}, {"title": "Design of a lexical database for sanskrit", "author": ["G\u00e9rard Huet."], "venue": "Proceedings of the Workshop on Enhancing and Using Electronic Dictionaries, pages 8\u201314. Association for Computational Linguistics.", "citeRegEx": "Huet.,? 2004", "shortCiteRegEx": "Huet.", "year": 2004}, {"title": "From p\u0101\u1e47inian sandhi to finite state calculus", "author": ["Malcolm D. Hyman."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 253\u2013265. Springer.", "citeRegEx": "Hyman.,? 2009", "shortCiteRegEx": "Hyman.", "year": 2009}, {"title": "Xml to object translation, June 13", "author": ["S. Jain", "S. Thakur."], "venue": "US Patent App. 09/755,501.", "citeRegEx": "Jain and Thakur.,? 2002", "shortCiteRegEx": "Jain and Thakur.", "year": 2002}, {"title": "Semantic processing in p\u0101\u1e47ini\u2019s k\u0101raka system", "author": ["Girish Nath Jha", "Sudhir K. Mishra."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 239\u2013252. Springer.", "citeRegEx": "Jha and Mishra.,? 2009", "shortCiteRegEx": "Jha and Mishra.", "year": 2009}, {"title": "Inflectional morphology analyzer for sanskrit", "author": ["Girish Nath Jha", "Muktanand Agrawal", "Subash", "Sudhir K. Mishra", "Diwakar Mani", "Diwakar Mishra", "Manji Bhadra", "Surjit K. Singh."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 219\u2013238. Springer.", "citeRegEx": "Jha et al\\.,? 2009", "shortCiteRegEx": "Jha et al\\.", "year": 2009}, {"title": "On siddha, asiddha and sth\u0100nivat", "author": ["S.D. johshi", "J.A.F. Roodbergen."], "venue": "Annals of the Bhandarkar Oriental Research Institute, volume 68, pages 541\u2013549. Bhandarkar Oriental Research Institute.", "citeRegEx": "johshi and Roodbergen.,? 1987", "shortCiteRegEx": "johshi and Roodbergen.", "year": 1987}, {"title": "Phonological overgeneration in p\u0101\u1e47inian system", "author": ["Malhar Kulkarni."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 306\u2013319. Springer.", "citeRegEx": "Kulkarni.,? 2009", "shortCiteRegEx": "Kulkarni.", "year": 2009}, {"title": "Simulating the p\u0101\u1e47inian system of sanskrit grammar", "author": ["Anand Mishra."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 127\u2013138. Springer.", "citeRegEx": "Mishra.,? 2009", "shortCiteRegEx": "Mishra.", "year": 2009}, {"title": "Modelling a\u1e63\u1e6d\u0101dhy\u0101y\u012b: An approach based on the methodology of ancillary disciplines (vedanga)", "author": ["Anand Mishra."], "venue": "Sanskrit Computational Linguistics, Fourth International Symposium, Delhi, India, pages 239\u2013258. Springer.", "citeRegEx": "Mishra.,? 2010", "shortCiteRegEx": "Mishra.", "year": 2010}, {"title": "On p\u0101\u1e47ini and the generative capacity of contextualized replacement systems", "author": ["Gerald Penn", "Paul Kiparsky."], "venue": "Proceedings of COLING 2012: Posters, pages 943\u2013950.", "citeRegEx": "Penn and Kiparsky.,? 2012", "shortCiteRegEx": "Penn and Kiparsky.", "year": 2012}, {"title": "Extra linguistic information needed for automatic generation of sanskrit compounds: A study", "author": ["Pawankumar Satuluri", "Amba Kulkarni."], "venue": "The recent developments in Sanskrit Computational Linguistics\u2019, at SALA-30, Hyderabad.", "citeRegEx": "Satuluri and Kulkarni.,? 2014", "shortCiteRegEx": "Satuluri and Kulkarni.", "year": 2014}, {"title": "Voice, preverb, and transitivity restrictions in sanskrit verb use", "author": ["Peter Scharf", "Pawan Goyal", "Anuja Ajotika", "Tanuja Ajotikar."], "venue": "Sanskrit Syntax, Selected papers presented at the seminar on sanskrit syntax and discouse structures, pages 157\u2013202.", "citeRegEx": "Scharf et al\\.,? 2015", "shortCiteRegEx": "Scharf et al\\.", "year": 2015}, {"title": "Modeling p\u0101\u1e47inian grammar", "author": ["Peter Scharf."], "venue": "Sanskrit Computational Linguistics, First and Second International Symposia, Rocquencourt, France, pages 95\u2013126. Springer.", "citeRegEx": "Scharf.,? 2009", "shortCiteRegEx": "Scharf.", "year": 2009}, {"title": "Rule selection in the a\u1e63\u1e6d\u0101dhy\u0101y\u012b, or is p\u0101\u1e47ini\u2019s grammar mechanistic? In Studies in Sanskrit Grammars", "author": ["Peter M Scharf"], "venue": "Proceedings of the Vyakarana Section of the 14th World Sanskrit Conference", "citeRegEx": "Scharf.,? \\Q2010\\E", "shortCiteRegEx": "Scharf.", "year": 2010}, {"title": "The A\u1e63\u1e6d\u0101dhy\u0101yi of P\u0101\u1e47ini - Vol.1 : Introduction to the A\u1e63\u1e6d\u0101dhy\u0101yi as a Grammatical Device", "author": ["Rama Nath Sharma"], "venue": "Munshiram Manoharlal Publishers Pvt. Ltd.,", "citeRegEx": "Sharma.,? \\Q2002\\E", "shortCiteRegEx": "Sharma.", "year": 2002}, {"title": "Context-sensitive rules in p\u0101\u1e47ini", "author": ["J. Frits Staal."], "venue": "Foundations of Language 1, pages 63\u201372.", "citeRegEx": "Staal.,? 1965", "shortCiteRegEx": "Staal.", "year": 1965}, {"title": "Computational structure of the a\u1e63\u1e6d\u0101dhy\u0101y\u012b and conflict resolution techniques", "author": ["Sridhar Subbanna", "Shrinivasa Varakhedi."], "venue": "Sanskrit Computational Linguistics, Third International Symposium, Hyderabad, India, pages 56\u201365. Springer.", "citeRegEx": "Subbanna and Varakhedi.,? 2009", "shortCiteRegEx": "Subbanna and Varakhedi.", "year": 2009}, {"title": "Asiddhatva principle in computational model of a\u1e63\u1e6d\u0101dhy\u0101y\u012b", "author": ["Sridhar Subbanna", "Shrinivasa Varakhedi."], "venue": "Sanskrit Computational Linguistics, Fourth International Symposium, Delhi, India, pages 231\u2013238. Springer.", "citeRegEx": "Subbanna and Varakhedi.,? 2010", "shortCiteRegEx": "Subbanna and Varakhedi.", "year": 2010}, {"title": "On using the observer design pattern", "author": ["Constantin Szallies."], "venue": "XP-002323533,(Aug. 21, 1997), 9.", "citeRegEx": "Szallies.,? 1997", "shortCiteRegEx": "Szallies.", "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "5 \u0924\ue27b\u0948 \u093f\u0939\u0924\u092e \u094dwhich means \u201cbeneficial to that\u201d (Bhate, 1989), where \u201cthat\u201d(\u0924\ue27b)\u0948 is intended for the base nominal from which the derivation will take place.", "startOffset": 45, "endOffset": 58}, {"referenceID": 6, "context": "A\u1e63\u1e6d\u0101dhy\u0101y\u012b considers both nouns and adjectives as a single category called as Pr\u0101tipadika (\ue38e\u093e\u093f\u0924\u092a\u093f\u0926\u0915), and hence the affixes used in Taddhita are not category changing affixes (Deo, 2007).", "startOffset": 175, "endOffset": 186}, {"referenceID": 6, "context": "multilevel inheritance formed between individual rule classes, which has been inspired from the inheritance network that P\u0101\u1e47ini used in A\u1e63\u1e6d\u0101dhy\u0101y\u012b (Deo, 2007).", "startOffset": 147, "endOffset": 158}, {"referenceID": 2, "context": "Seminal works from Cardona (1965) and Staal (1965) on formalizing rules of the grammar with stress on the meta-rules that state about the context sensitive aspects was a starting point with further enhancements from Cardona (1969) where he applies his formalization for more rules that is related to phonetic changes.", "startOffset": 19, "endOffset": 34}, {"referenceID": 2, "context": "Seminal works from Cardona (1965) and Staal (1965) on formalizing rules of the grammar with stress on the meta-rules that state about the context sensitive aspects was a starting point with further enhancements from Cardona (1969) where he applies his formalization for more rules that is related to phonetic changes.", "startOffset": 19, "endOffset": 51}, {"referenceID": 2, "context": "Seminal works from Cardona (1965) and Staal (1965) on formalizing rules of the grammar with stress on the meta-rules that state about the context sensitive aspects was a starting point with further enhancements from Cardona (1969) where he applies his formalization for more rules that is related to phonetic changes.", "startOffset": 19, "endOffset": 231}, {"referenceID": 19, "context": "Penn and Kiparsky (2012) focus on the expressive power of A\u1e63\u1e6d\u0101dhy\u0101yi rules and also the expressive power of formalism that P\u0101\u1e47ini", "startOffset": 0, "endOffset": 25}, {"referenceID": 11, "context": "Hyman (2009) developed a finite state transducer after re-framing individual rules in A\u1e63\u1e6d\u0101dhy\u0101yi, resulting in generation of strings that belong to regular languages and performs sandhi (\u0938\u093f\ue18f) at word boundaries for any two given word combinations.", "startOffset": 0, "endOffset": 13}, {"referenceID": 11, "context": "Hyman (2009) developed a finite state transducer after re-framing individual rules in A\u1e63\u1e6d\u0101dhy\u0101yi, resulting in generation of strings that belong to regular languages and performs sandhi (\u0938\u093f\ue18f) at word boundaries for any two given word combinations. Hyman had introduced an XML vocabulary for encoding rules in A\u1e63\u1e6d\u0101dhy\u0101yi that helped him in implementing the finite state transducer. Scharf (2009) discusses about Scharf\u2019s and Hyman\u2019s combined efforts in developing XML formalization that not only deals with sandhi but also with nominal declensions and verb conjugations.", "startOffset": 0, "endOffset": 395}, {"referenceID": 9, "context": "Goyal et al. (2009) implemented an inflectional morphology generator that takes as input a noun from the user and then generates all 21 forms of noun declensions, known as vibhakti system in Sanskrit grammar.", "startOffset": 0, "endOffset": 20}, {"referenceID": 9, "context": "Goyal et al. (2009) implemented an inflectional morphology generator that takes as input a noun from the user and then generates all 21 forms of noun declensions, known as vibhakti system in Sanskrit grammar. The authors talk about the programming perspectives that need to be considered when encoding rules in A\u1e63\u1e6d\u0101dhy\u0101yi, and various computational aspects that A\u1e63\u1e6d\u0101dhy\u0101yi possesses. They also talk about the need of conflict resolution methods for competing rules that can be applied in the same context. Jha et al. (2009) have developed a system that is an inflectional morphology analyser.", "startOffset": 0, "endOffset": 524}, {"referenceID": 9, "context": "Goyal et al. (2009) implemented an inflectional morphology generator that takes as input a noun from the user and then generates all 21 forms of noun declensions, known as vibhakti system in Sanskrit grammar. The authors talk about the programming perspectives that need to be considered when encoding rules in A\u1e63\u1e6d\u0101dhy\u0101yi, and various computational aspects that A\u1e63\u1e6d\u0101dhy\u0101yi possesses. They also talk about the need of conflict resolution methods for competing rules that can be applied in the same context. Jha et al. (2009) have developed a system that is an inflectional morphology analyser. They have developed independent systems for verb and noun forms and their corresponding inflections. Though their work was not related to simulating A\u1e63\u1e6d\u0101dhy\u0101yi, but they claim that they take into account the P\u0101\u1e47inian way of analysis. Satuluri and Kulkarni (2014) takes on generation of Sanskrit compounds called as sam\u0101sa that deals with about 400 rules of A\u1e63\u1e6d\u0101dhy\u0101yi which helps them to form compound words from independent words in Sanskrit.", "startOffset": 0, "endOffset": 856}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied.", "startOffset": 69, "endOffset": 98}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked.", "startOffset": 69, "endOffset": 196}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked. They also talk about various conflict resolution methods that are mentioned in the s\u016btras as well as in other v\u0101rttikas. Subbanna and Varakhedi (2010) presented a computational model based on the principle of asiddhatva, an improvised model over the one discussed in Subbanna and Varakhedi (2009).", "startOffset": 69, "endOffset": 553}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked. They also talk about various conflict resolution methods that are mentioned in the s\u016btras as well as in other v\u0101rttikas. Subbanna and Varakhedi (2010) presented a computational model based on the principle of asiddhatva, an improvised model over the one discussed in Subbanna and Varakhedi (2009). Mishra (2009) talks of the nature of grammar which performs the analysis of constituent elements and then its reconstitution using various set of operational rules as mentioned in A\u1e63\u1e6d\u0101dhy\u0101yi.", "startOffset": 69, "endOffset": 699}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked. They also talk about various conflict resolution methods that are mentioned in the s\u016btras as well as in other v\u0101rttikas. Subbanna and Varakhedi (2010) presented a computational model based on the principle of asiddhatva, an improvised model over the one discussed in Subbanna and Varakhedi (2009). Mishra (2009) talks of the nature of grammar which performs the analysis of constituent elements and then its reconstitution using various set of operational rules as mentioned in A\u1e63\u1e6d\u0101dhy\u0101yi.", "startOffset": 69, "endOffset": 714}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked. They also talk about various conflict resolution methods that are mentioned in the s\u016btras as well as in other v\u0101rttikas. Subbanna and Varakhedi (2010) presented a computational model based on the principle of asiddhatva, an improvised model over the one discussed in Subbanna and Varakhedi (2009). Mishra (2009) talks of the nature of grammar which performs the analysis of constituent elements and then its reconstitution using various set of operational rules as mentioned in A\u1e63\u1e6d\u0101dhy\u0101yi. Mishra (2010) in his work discusses about ved\u0101\u1e45ga principles and extends his work by considering the common methodological approach of ancillary disciplines for rule application.", "startOffset": 69, "endOffset": 906}, {"referenceID": 14, "context": "There has been an in-depth study on siddha and asiddha principles by johshi and Roodbergen (1987), where they talk about the order in which rules need to be applied. Subbanna and Varakhedi (2009) mentioned about the grouping of rules based on the general-exception relation between rules and formation of rules as a tree structure, but commented that the feasibility of automation needs to be checked. They also talk about various conflict resolution methods that are mentioned in the s\u016btras as well as in other v\u0101rttikas. Subbanna and Varakhedi (2010) presented a computational model based on the principle of asiddhatva, an improvised model over the one discussed in Subbanna and Varakhedi (2009). Mishra (2009) talks of the nature of grammar which performs the analysis of constituent elements and then its reconstitution using various set of operational rules as mentioned in A\u1e63\u1e6d\u0101dhy\u0101yi. Mishra (2010) in his work discusses about ved\u0101\u1e45ga principles and extends his work by considering the common methodological approach of ancillary disciplines for rule application. His work provides a good walk-through for the entire derivation process that begins with introduction of atomic elements to coming up with the desired final form. Kulkarni (2009) establishes the issue with phonological over-generation that can occur, if one is to strictly adhere to the rules defined by P\u0101\u1e47ini.", "startOffset": 69, "endOffset": 1250}, {"referenceID": 13, "context": "Jha and Mishra (2009) sheds some light in formalizing semantic categorization rules when he deals with k\u0101raka systems.", "startOffset": 0, "endOffset": 22}, {"referenceID": 2, "context": "Cardona (1997) discusses about various principles like utsarga-ap\u0101vada, antara\u1e45ga-bahira\u1e45ga, nitya-anitya etc.", "startOffset": 0, "endOffset": 15}, {"referenceID": 8, "context": "When it comes to automating Taddhitas, the Sanskrit Heritage System is an existing system that can recognize taddhitas and perform the analysis, but it does not generate the Taddhitas and only the lexicalized Taddhitas are recognized during the analysis (Goyal and Huet, 2013).", "startOffset": 254, "endOffset": 276}, {"referenceID": 28, "context": "Instead the mechanism allows the rules to be updated about environment state changes whenever there is one and yet the rule classes can refrain from state dependency issues with the environment (Szallies, 1997).", "startOffset": 194, "endOffset": 210}, {"referenceID": 8, "context": "When it comes to automating Taddhitas, the Sanskrit Heritage System is an existing system that can recognize taddhitas and perform the analysis, but it does not generate the Taddhitas and only the lexicalized Taddhitas are recognized during the analysis (Goyal and Huet, 2013). To the best of the authors\u2019 knowledge, the system which we are going to propose is the first of its kind, that is focused specifically on generation of derivative nouns (Taddhitas). The proposed system embraces a unique approach of forming rule groups where similar rules are grouped together to form a Directed Acyclic Graph (DAG). The similarity of rules is based on the notion of topicality present among the rules by virtue of usage of anuv\u1e5btti. The approach can be treated as analogous to the model, what is proposed in Subbanna and Varakhedi (2009), but they propose the formation of similar topic DAG through utsarga-ap\u0101vada relations.", "startOffset": 255, "endOffset": 833}, {"referenceID": 8, "context": "When it comes to automating Taddhitas, the Sanskrit Heritage System is an existing system that can recognize taddhitas and perform the analysis, but it does not generate the Taddhitas and only the lexicalized Taddhitas are recognized during the analysis (Goyal and Huet, 2013). To the best of the authors\u2019 knowledge, the system which we are going to propose is the first of its kind, that is focused specifically on generation of derivative nouns (Taddhitas). The proposed system embraces a unique approach of forming rule groups where similar rules are grouped together to form a Directed Acyclic Graph (DAG). The similarity of rules is based on the notion of topicality present among the rules by virtue of usage of anuv\u1e5btti. The approach can be treated as analogous to the model, what is proposed in Subbanna and Varakhedi (2009), but they propose the formation of similar topic DAG through utsarga-ap\u0101vada relations. One cannot comment on the similarity of the approaches without a proper comparison of DAGs formed from both of them. Moreover Subbanna and Varakhedi (2009) mentioned that they had not checked the feasibility of automating their notion of rule group formation.", "startOffset": 255, "endOffset": 1077}, {"referenceID": 24, "context": "There are two types of derivations possible that involve Taddhita affixes (Sharma, 2002).", "startOffset": 74, "endOffset": 88}, {"referenceID": 6, "context": "For example, for the patronymic relation \u0905\u092a\ue11a\u092e \u094d , multiple affixes can be used, like \u0905(\u0923)\u094d, \u0905\u092f\u0928(\u092b\u0915)\u094d, \u0907(\u091e)\u094d depending on the stems used (Deo, 2007).", "startOffset": 136, "endOffset": 147}, {"referenceID": 6, "context": "Deo (2007) calls this form of arrangement as constrained separationism, where the rules form", "startOffset": 0, "endOffset": 11}, {"referenceID": 0, "context": "This group of rules is treated as extraneous to otherwise systematic network of the section (Bhate, 1989).", "startOffset": 92, "endOffset": 105}, {"referenceID": 7, "context": "Observer design pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically (Gamma et al., 1994).", "startOffset": 170, "endOffset": 190}, {"referenceID": 26, "context": "In case of asiddhavat rules as discussed in Subbanna and Varakhedi (2009), the environment makes a complete copy of itself; one object is used for checking the conditions while in the other object, all the operations are applied.", "startOffset": 44, "endOffset": 74}, {"referenceID": 22, "context": "To resolve such a scenario, we have applied the specificity hierarchy as mentioned in Scharf (2010). Specificity hierarchy deals with a priority wise ordering of rules based on the linguistic features present in the rule (or a combination of the same, if multiple entities are present) from the most concrete to the most abstract features.", "startOffset": 86, "endOffset": 100}, {"referenceID": 22, "context": "Scharf (2010) discusses five cases in which conflict of application occurs between two competing rules.", "startOffset": 0, "endOffset": 14}, {"referenceID": 22, "context": "Other conflict cases discussed in Scharf (2010) are not discussed here as those fall into one of the scenarios already discussed.", "startOffset": 34, "endOffset": 48}, {"referenceID": 24, "context": "133 implies that the affix \u0922\u0915 \u094d should be introduced (Sharma, 2002).", "startOffset": 53, "endOffset": 67}, {"referenceID": 1, "context": "This kind of information can be used to supplement available lexical resources like IndoWordNet for sanskrit (Bhattacharyya, 2010) and also to provide supplementary information in dictionary entries for lexical databases as described in Huet (2004).", "startOffset": 109, "endOffset": 130}, {"referenceID": 1, "context": "This kind of information can be used to supplement available lexical resources like IndoWordNet for sanskrit (Bhattacharyya, 2010) and also to provide supplementary information in dictionary entries for lexical databases as described in Huet (2004).", "startOffset": 110, "endOffset": 249}, {"referenceID": 12, "context": "The conversion of Objects to XML schema is a well addressed task in IT World (Jain and Thakur, 2002).", "startOffset": 77, "endOffset": 100}, {"referenceID": 22, "context": "Our system forms rule groups as Directed Acyclic Graphs (DAG), analogous to as Subbanna and Varakhedi (2009) suggests.", "startOffset": 79, "endOffset": 109}, {"referenceID": 22, "context": "Our system forms rule groups as Directed Acyclic Graphs (DAG), analogous to as Subbanna and Varakhedi (2009) suggests. But our notion of topical rule groups arises from the notion of topicality by virtue of anuv\u1e5btti, while Subbanna and Varakhedi (2009) attempts to form the topical rule groups from general-exception rule concepts.", "startOffset": 79, "endOffset": 253}, {"referenceID": 22, "context": "Our system forms rule groups as Directed Acyclic Graphs (DAG), analogous to as Subbanna and Varakhedi (2009) suggests. But our notion of topical rule groups arises from the notion of topicality by virtue of anuv\u1e5btti, while Subbanna and Varakhedi (2009) attempts to form the topical rule groups from general-exception rule concepts. The approaches in group formation need to be studied further, in order to comment on the commonality of the DAGs so formed, but Subbanna and Varakhedi (2009) do not talk about the attempts to model their concept in implementation.", "startOffset": 79, "endOffset": 490}, {"referenceID": 20, "context": "This makes the set up of environment comparable to the set up as in Scharf et al. (2015) which is primarily an XML representation.", "startOffset": 68, "endOffset": 89}, {"referenceID": 12, "context": "The conversion of Objects to XML schema is a well addressed task in IT World (Jain and Thakur, 2002). Hence one can also think of developing a schema to transfer the data entities used in one system to the other, as Scharf et al. (2015) tries to model the entire A\u1e63\u1e6d\u0101dhy\u0101y\u012b.", "startOffset": 78, "endOffset": 237}], "year": 2015, "abstractText": "About 1115 rules in A\u1e63\u1e6d\u0101dhy\u0101y\u012b from A.4.1.76 to A.5.4.160 deal with generation of derivative nouns, making it one of the largest topical sections in A\u1e63\u1e6d\u0101dhy\u0101y\u012b, called as the Taddhita section owing to the head rule A.4.1.76. This section is a systematic arrangement of rules that enumerates various affixes that are used in the derivation under specific semantic relations. We propose a system that automates the process of generation of derivative nouns as per the rules in A\u1e63\u1e6d\u0101dhy\u0101y\u012b. The proposed system follows a completely object oriented approach, that models each rule as a class of its own and then groups them as rule groups. The rule groups are decided on the basis of selective grouping of rules by virtue of anuv\u1e5btti. The grouping of rules results in an inheritance network of rules which is a directed acyclic graph. Every rule group has a head rule and the head rule notifies all the direct member rules of the group about the environment which contains all the details about data entities, participating in the derivation process. The system implements this mechanism using multilevel inheritance and observer design patterns. The system focuses not only on generation of the desired final form, but also on the correctness of sequence of rules applied to make sure that the derivation has taken place in strict adherence to A\u1e63\u1e6d\u0101dhy\u0101y\u012b. The proposed system\u2019s design allows to incorporate various conflict resolution methods mentioned in authentic texts and hence the effectiveness of those rules can be validated with the results from the system. We also present cases where we have checked the applicability of the system with the rules which are not specifically applicable to derivation of derivative nouns, in order to see the effectiveness of the proposed schema as a generic system for modeling A\u1e63\u1e6d\u0101dhy\u0101y\u012b.", "creator": " XeTeX output 2015.12.17:2032"}}}