{"id": "1512.06211", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Dec-2015", "title": "Test-Driven Development of ontologies (extended version)", "abstract": "Emerging ontology authoring methods to add knowledge to an ontology focus on ameliorating the validation bottleneck. The verification of the newly added axiom is still one of trying and seeing what the reasoner says, because a systematic testbed for ontology authoring is missing. We sought to address this by introducing the approach of test-driven development for ontology authoring. We specify 36 generic tests, as TBox queries and TBox axioms tested through individuals, and structure their inner workings in an `open box'-way, which cover the OWL 2 DL language features. This is implemented as a Protege plugin so that one can perform a TDD test as a black box test. We evaluated the two test approaches on their performance. The TBox queries were faster, and that effect is more pronounced the larger the ontology is. We provide a general sequence of a TDD process for ontology engineering as a foundation for a TDD methodology.", "histories": [["v1", "Sat, 19 Dec 2015 09:15:24 GMT  (308kb,D)", "http://arxiv.org/abs/1512.06211v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["c maria keet", "agnieszka lawrynowicz"], "accepted": false, "id": "1512.06211"}, "pdf": {"name": "1512.06211.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["C. Maria Keet", "Agnieszka Lawrynowicz"], "emails": ["mkeet@cs.uct.ac.za", "agnieszka.lawrynowicz@cs.put.poznan.pl"], "sections": [{"heading": "1 Introduction", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "2 Related work", "text": "Before assessing their work in ontology, we first described some relevant aspects of TDD production."}, {"heading": "3 TDD specification for ontologies", "text": "Before the TDD tests TBox and RBox are introduced, the general procedure is introduced and some explanations given on notation, on the presentation of true / false TDD tests and on entities to be mocked."}, {"heading": "3.1 Preliminaries", "text": "Taking into account the TDD approach of developing a test that demonstrates the absence of function (i.e., test failure), we add features to test again if the tests pass, the generalized TDD principle for ontologies is then: 1. Input: CQ and converting it into an axiom (optional) 2. Given: Axiom x of type X to be added to ontology. 3. Check the vocabulary elements of x that should then pass the test (even a TDD test) 4. TDD test twice: (a) the first execution should fail (check O 2 x or not present), (b) update the ontology (add x), and (c) repeat the test that should then pass (check that there is no new inconsistency or unwanted deduction)."}, {"heading": "3.2 Test patterns for TBox axioms", "text": "The tests are introduced in the order in which the primed test names are those with explicit individuals.Class subsumption, Tcs, or T \u2032 cs. If the axiom to be added is of type C v D, then O | = \u00ac (C v D) should be true if it did not exist. Logically, this means that O \u00ac (C v D) should be inconsistent, i.e., O \u00b2 (D \u00b2).D \u00b2 test makes it easier to create and / or execute custom tableau algorithms for the 6 https: / github.com / iliannakollia / owl-bgpsuperclass of C and to determine that D is not in the query response, but as a create and / or execute custom tableau algorithm. Thus, a test T can be true or false: In SPARQL-OWL notation and quasi-algorithm for comprehensibility, Tcs is: Require: T (C) classes."}, {"heading": "1: \u03b1\u2190 DisjointClasses(?x D)", "text": "The order of the steps is sequence: The order of the steps is such that the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order of the order: Order of the order of the order of the order of the order of the order of the order, order of the order of the order of the order of the order, order of the order of the order of the order of the order of the order, order of the order of the order, the order of the order, the order of the order, the order of the sequence, the order of the sequence, the sequence of the sequence, the sequence of the sequence of the steps:"}, {"heading": "3.3 Test patterns for object propery axioms", "text": "From here on, there are two options: First, you can look more closely at the object properties - sometimes the RBox is called false - which in most cases are not well suited to a simple query in the DL query table, because the DL query is essentially a property that can be resolved by adding a new property, i.e., only one (complex) query can be expressed in the DL query table. However, the SPARQL-OWL and the automated query are in the O. To ensure that it is not essentially an interface constraint that can be expressed by adding a new property to TDD.Domain axiom axiom, Tda or T \"da.\" Let X be R v C, which cannot yet be used in O., it should be true. (R v C) should be true, or O: R v C false. With SPARQL-OWL, there are two options."}, {"heading": "9: end if", "text": "10: Delete R (a, b) and S (c, d), and a, b, c, dFor object property equivalence at the Tbox level, i.e., R-2) is true 6: end ifObject property inverses, Tpi and T'pi. There are two options here, since OWL 2, and it is hard to choose which one to choose \"better\": with explicit inverse tends for understanding."}, {"heading": "4 Experimental evaluation with a Prote\u0301ge\u0301 plugin for TDD", "text": "In this section we describe the design of the plugin and the evaluation of the performance tests."}, {"heading": "4.1 Design", "text": "To help ontology engineers perform TDD, we have implemented the plugin TDDOnto. The plugin provides a view in which the user can specify which tests should be performed and, after they have been performed, the status of the tests is displayed. It is also possible to add a selected axiom to the ontology (and run the test again)."}, {"heading": "4.2 Evaluation of the TBox and ABox based TDD tests", "text": "It is. (It is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it is.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it.) It is. (it is. (it.) It is. (it.) It is. (it is. (it.) It is. (it. (it.) It is. (it. (it.) It is. (it. (it.) It is. (it. (it.) It is. (it. (it.) It is. (it. (it.)"}, {"heading": "5 Discussion", "text": "There are several reasons why the browsing way out is not ideal. First, because you don't know the implications (unless it's classified first); second, surfing in large ontologies is cumbersome and more easily leads to cognitive overload that impedes rapid ontology development; third, surfing is a purely manual check, making it easy to overlook something; and the process of finding and adding an axiom is automatable, which solves these three problems; instead of manual checks and sample axioms, all of which need to be added manually and possibly removed during the regular \"Add Something and See What Happens,\" this can be done in one go. In addition, the TDD tests also offer the convenience and utility of systematic regression testing."}, {"heading": "5.1 Reflections on specifying and implementing a TDD tool", "text": "Dre rf\u00fc ide eeisrcnlhsrteeaeVnlrtee\u00fcgr rf\u00fc ide rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf the rf\u00fc the rf the rf the rf\u00fc the rf\u00fc the rf the rf the rf the rf the rf the rf the rf the rf the rf the rf\u00fc the rf the"}, {"heading": "5.2 A step toward a TDD ontology engineering methodology", "text": "A method is a structured collection of, in principle, methods and techniques, processes that may have roles in teams, and quality measurements and standards during the process (see, e.g., [4]), and it has been shown that overall results are improved compared to something without a methodology. This does not mean that a full-fledged TDD ontology methodology has been developed, it should be the ontology methodology. [4] There will be some ontology development projects, but perhaps not others. Here, with the test specifications described above and their experimental assessments, we will not have a full TDD methodology."}, {"heading": "5.3 Answering the research questions", "text": "The answers to the questions raised in Section 1 can be summarized as follows: The first question was formulated more broadly: given the TDD process in software development, what does it mean for the ontology tests when they are applied to ontology development? The most important answer to this is the specification of tests for each type of axiom that can be added to ontology, namely questions about the TBox and by individuals in the ABox. So, while the general idea is the same - requirement, test specification, test fails, tests run again to check it - the means of performing a test for ontologies is different. It is not checking the code for its functionality, but for whether that one piece of knowledge is present in the way it is purposely presented. In relation to the second question, TDD, the mock object requires for the \"incomplete\" parts of the code and mainly for the methods."}, {"heading": "6 Conclusions", "text": "This paper presented 36 tests for the test-driven development of ontologies, which specified what and how to test. Tests were specified both at TDD level with queries and for ABox individuals using bogus objects. Implementation of the key tests showed that the TBox testing approach performs better. An 8-step procedure for TDD ontology engineering at the highest level was proposed. Future work concerns the expansion of tools to implement the remaining tests, deepen the methodology and conduct use case assessment.Recognitions This research was supported by the National Science Centre in Poland under funding number 2014 / 13 / D / ST6 / 02076."}], "references": [{"title": "The RapidOWL methodology\u2013towards Agile knowledge engineering", "author": ["S. Auer"], "venue": "Enabling Technologies: Infrastructure for Collaborative Enterprises, 2006. WETICE \u201906. 15th IEEE International Workshops on. pp. 352\u2013357", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Test-Driven Development: by example", "author": ["K. Beck"], "venue": "Addison-Wesley, Boston, MA", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2004}, {"title": "Ontology testing \u2013 methodology and tool", "author": ["E. Blomqvist", "A. Sepour", "V. Presutti"], "venue": "18th International Conference on Knowledge Engineering and Knowledge Management (EKAW\u201912). LNAI, vol. 7603, pp. 216\u2013226. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Selecting a project\u2019s methodology", "author": ["A. Cockburn"], "venue": "IEEE Software 17(4), 64\u201371", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2000}, {"title": "Building a chemical ontology using METHONTOLOGY and the ontology design environment", "author": ["M. Fern\u00e1ndez", "A. G\u00f3mez-P\u00e9rez", "A. Pazos", "J. Pazos"], "venue": "IEEE Expert: Special Issue on Uses of Ontologies January/February, 37\u201346", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1999}, {"title": "Advocatus diaboli exploratory enrichment of ontologies with negative constraints", "author": ["S. Ferr\u00e9", "S. Rudolph"], "venue": "18th International Conference on Knowledge Engineering and Knowledge Management (EKAW\u201912). LNAI,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Ontology design patterns", "author": ["A. Gangemi", "V. Presutti"], "venue": "Staab, S., Studer, R. (eds.) Handbook on Ontologies, pp. 221\u2013243. Springer Verlag", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "OntologyTest: A tool to evaluate ontologies through tests defined by the user", "author": ["S. Garca-Ramos", "A. Otero", "M. Fern\u00e1ndez-L\u00f3pez"], "venue": "10th International Work-Conference on Artificial Neural Networks, IWANN 2009 Workshops, Proceedings, Part II. LNCS,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "Developing ontologies within decentralized settings", "author": ["A. Garcia", "K. O\u2019Neill", "L.J. Garcia", "P. Lord", "R. Stevens", "O. Corcho", "F. Gibson"], "venue": "Chen, H., et al. (eds.) Semantic e-Science. Annals of Information Systems 11, pp. 99\u2013139. Springer", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "The evolution of Prot\u00e9g\u00e9: an environment for knowledge-based systems development", "author": ["J.H. Gennari", "M.A. Musen", "R.W. Fergerson", "W.E. Grosso", "M. Crub\u00e9zy", "H. Eriksson", "N.F. Noy", "S.W. Tu"], "venue": "International Journal of Human-Computer Studies 58(1), 89\u2013123", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2003}, {"title": "Moki: The enterprise modelling wiki", "author": ["C. Ghidini", "B. Kump", "S. Lindstaedt", "N. Mabhub", "V. Pammer", "M. Rospocher", "L. Serafini"], "venue": "Proceedings of the 6th Annual European Semantic Web Conference", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2009}, {"title": "Closed world reasoning in the semantic web through epistemic operators", "author": ["S. Grimm", "B. Motik"], "venue": "CEUR-WS, vol", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2005}, {"title": "Information Modeling and Relational Databases", "author": ["T. Halpin"], "venue": "San Francisco: Morgan Kaufmann Publishers", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2001}, {"title": "Software architecture improvement through test-driven development", "author": ["D.S. Janzen"], "venue": "Companion to 20th ACM SIGPLAN Conference 2005. pp. 240\u2013241. ACM Proceedings", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2005}, {"title": "Exploring reasoning with the DMOP ontology", "author": ["C.M. Keet", "C. d\u2019Amato", "Z. Khan", "A. Lawrynowicz"], "venue": "(eds.) 3rd Workshop on Ontology Reasoner Evaluation (ORE\u201914). CEUR-WS,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "Ontology authoring with FORZA", "author": ["C.M. Keet", "M.T. Khan", "C. Ghidini"], "venue": "Proceedings of the 22nd ACM international conference on Conference on Information & Knowledge Management", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Mock object models for test driven development", "author": ["T. Kim", "C. Park", "C. Wu"], "venue": "Proceedings of the Fourth International Conference on Software Engineering Research, Management and Applications (SERA06). IEEE Computer Society", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2006}, {"title": "SPARQL Query Answering over OWL Ontologies", "author": ["I. Kollia", "B. Glimm", "I. Horrocks"], "venue": "Proceedings of the 8th Extended Semantic Web Conference (ESWC\u201911). LNCS,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2011}, {"title": "Test-driven evaluation of linked data quality", "author": ["D. Kontokostas", "P. Westphal", "S. Auer", "S. Hellmann", "J. Lehmann", "R. Cornelissen", "A. Zaveri"], "venue": "Proceedings of the 23rd international conference on World Wide Web (WWW\u201914). pp. 747\u2013758. ACM proceedings", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2014}, {"title": "Comparative study of test driven development with traditional techniques", "author": ["S. Kumar", "S. Bansal"], "venue": "International Journal of Soft Computing and Engineering 3(1), 352\u2013360", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Extreme Programming Examined, chap", "author": ["T. Mackinnon", "S. Freeman", "P. Craig"], "venue": "Endo-testing: unit testing with mock objects, pp. 287\u2013301. Addison-Wesley, Boston, MA", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2001}, {"title": "Epistemic querying of OWL knowledge bases", "author": ["A. Mehdi", "S. Rudolph", "S. Grimm"], "venue": "Antoniou, G., Grobelnik, M., Simperl, E.P.B., Parsia, B., Plexousakis, D., Leenheer, P.D., Pan, J.Z. (eds.) The Semantic Web: Research and Applications - 8th Extended Semantic Web Conference, ESWC 2011, Heraklion, Crete, Greece, May 29-June 2, 2011, Proceedings, Part I. Lecture Notes in Computer Science, vol. 6643, pp. 397\u2013409. Springer", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "The OWL Reasoner Evaluation (ORE) 2015 competition report", "author": ["B. Parsia", "N. Matentzoglu", "R. Goncalves", "B. Glimm", "A. Steigmiller"], "venue": "Proceedings of the 11th International Workshop on Scalable Semantic Web Knowledge Base Systems (SSWS\u201915). CEUR-WS,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "Aspect OntoMaven - aspect-oriented ontology development and configuration with OntoMaven", "author": ["A. Paschke", "R. Schaefermeier"], "venue": "Tech. Rep. 1507.00212v1,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2015}, {"title": "Validating ontologies with OOPS", "author": ["M. Poveda-Villal\u00f3n", "M.C. Su\u00e1rez-Figueroa", "A. G\u00f3mez-P\u00e9rez"], "venue": "International Conference on Knowledge Engineering and Knowledge Management (EKAW\u201912). LNAI,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2012}, {"title": "extreme design with content ontology design patterns", "author": ["V. Presutti", "E Daga"], "venue": "Proc. of WS on OP\u201909. CEUR-WS, vol. 516, pp. 83\u201397", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "A library of ontology design patterns: reusable solutions for collaborative design of networked ontologies", "author": ["V. Presutti", "A. Gangemi", "S. David", "G.A. de Cea", "M.C. Surez-Figueroa", "E. MontielPonsoda", "M. Poveda"], "venue": "NeOn deliverable D2.5.1, NeOn Project, Institute of Cognitive Sciences and Technologies (CNR)", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2008}, {"title": "Towards competency question-driven ontology authoring", "author": ["Y. Ren", "A. Parvizi", "C. Mellish", "J.Z. Pan", "K. van Deemter", "R. Stevens"], "venue": "Extended Semantic Web Conference (ESWC\u201914). LNCS, Springer", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2014}, {"title": "Metrics for test case design in test driven development", "author": ["D.P. Shrivastava", "R. Jain"], "venue": "International Journal of Computer Theory and Engineering, 2(6), 952\u2013956", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2010}, {"title": "SPARQL-DL: SPARQL Query for OWL-DL", "author": ["E. Sirin", "B. Parsia"], "venue": "Proceedings of the Third International Workshop OWL: Experiences and Directions (OWLED\u201907). CEUR-WS", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2007}, {"title": "NeOn methodology for building contextualized ontology networks", "author": ["M.C. Su\u00e1rez-Figueroa", "G.A. de Cea", "C. Buil", "K. Dellschaft", "M. Fern\u00e1ndez-Lopez", "A. Garcia", "A. G\u00f3mez-P\u00e9rez", "G. Herrero", "E. Montiel-Ponsoda", "M. Sabou", "B. Villazon-Terrazas", "Z. Yufei"], "venue": "NeOn Deliverable D5.4.1, NeOn Project", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2008}, {"title": "Moda: Automated test generation for database applications via mock objects", "author": ["K. Taneja", "Y. Zhang", "T. Xie"], "venue": "Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE\u201910)). pp. 289\u2013292. ACM proceedings", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "An approach to testing conceptual schemas", "author": ["A. Tort", "A. Oliv\u00e9"], "venue": "Data & Knowledge Engineering 69, 598\u2013618", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2010}, {"title": "An approach to test-driven development of conceptual schemas", "author": ["A. Tort", "A. Oliv\u00e9", "M.R. Sancho"], "venue": "Data & Knowledge Engineering 70, 1088\u20131111", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2011}, {"title": "Unit tests for ontologies", "author": ["D. Vrande\u010di\u0107", "A. Gangemi"], "venue": "OTM workshops 2006. LNCS, vol. 4278, pp. 1012\u20131020. Springer", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2006}], "referenceMentions": [{"referenceID": 30, "context": "The process of ontology development has progressed much over the past 20 years, aided by development information systems-oriented methodologies, such as methontology for a single-person/group monolithic ontology to ontology networks with NeOn [31], and both stand-alone and collaborative tools, such as Prot\u00e9g\u00e9 [10] and MoKI [11].", "startOffset": 243, "endOffset": 247}, {"referenceID": 9, "context": "The process of ontology development has progressed much over the past 20 years, aided by development information systems-oriented methodologies, such as methontology for a single-person/group monolithic ontology to ontology networks with NeOn [31], and both stand-alone and collaborative tools, such as Prot\u00e9g\u00e9 [10] and MoKI [11].", "startOffset": 311, "endOffset": 315}, {"referenceID": 10, "context": "The process of ontology development has progressed much over the past 20 years, aided by development information systems-oriented methodologies, such as methontology for a single-person/group monolithic ontology to ontology networks with NeOn [31], and both stand-alone and collaborative tools, such as Prot\u00e9g\u00e9 [10] and MoKI [11].", "startOffset": 325, "endOffset": 329}, {"referenceID": 15, "context": "Processes at this \u2018micro\u2019 level of the development process, rather than the \u2018macro\u2019 level, may use the reasoner to propose axioms with FORZA [16], use Ontology Design Patterns (ODPs) [7], and start gleaning ideas from software engineering practices, notably exploring the notion of unit tests [35], eXtreme Design with ODPs [3], and Competency Question (CQ)-based authoring using SPARQL [28].", "startOffset": 141, "endOffset": 145}, {"referenceID": 6, "context": "Processes at this \u2018micro\u2019 level of the development process, rather than the \u2018macro\u2019 level, may use the reasoner to propose axioms with FORZA [16], use Ontology Design Patterns (ODPs) [7], and start gleaning ideas from software engineering practices, notably exploring the notion of unit tests [35], eXtreme Design with ODPs [3], and Competency Question (CQ)-based authoring using SPARQL [28].", "startOffset": 183, "endOffset": 186}, {"referenceID": 34, "context": "Processes at this \u2018micro\u2019 level of the development process, rather than the \u2018macro\u2019 level, may use the reasoner to propose axioms with FORZA [16], use Ontology Design Patterns (ODPs) [7], and start gleaning ideas from software engineering practices, notably exploring the notion of unit tests [35], eXtreme Design with ODPs [3], and Competency Question (CQ)-based authoring using SPARQL [28].", "startOffset": 293, "endOffset": 297}, {"referenceID": 2, "context": "Processes at this \u2018micro\u2019 level of the development process, rather than the \u2018macro\u2019 level, may use the reasoner to propose axioms with FORZA [16], use Ontology Design Patterns (ODPs) [7], and start gleaning ideas from software engineering practices, notably exploring the notion of unit tests [35], eXtreme Design with ODPs [3], and Competency Question (CQ)-based authoring using SPARQL [28].", "startOffset": 324, "endOffset": 327}, {"referenceID": 27, "context": "Processes at this \u2018micro\u2019 level of the development process, rather than the \u2018macro\u2019 level, may use the reasoner to propose axioms with FORZA [16], use Ontology Design Patterns (ODPs) [7], and start gleaning ideas from software engineering practices, notably exploring the notion of unit tests [35], eXtreme Design with ODPs [3], and Competency Question (CQ)-based authoring using SPARQL [28].", "startOffset": 387, "endOffset": 391}, {"referenceID": 26, "context": "Ontology authoring-driven TDD - the domain expert As there is practically only a limited amount of \u2018types\u2019 of axioms to add, one could create templates, alike the notion of the \u201clogical macro\u201d ODP [27].", "startOffset": 197, "endOffset": 201}, {"referenceID": 33, "context": "[34] essentially specify \u2018unit tests\u2019 for each feature/possible addition to a conceptual model, and test such an addition against sample individuals.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "In addition, for ontologies, one can avail of a query language for the TBox, namely, SPARQL-OWL [18], and most of the test can be specified in that language as well.", "startOffset": 96, "endOffset": 100}, {"referenceID": 1, "context": "TDD in software development The principal introduction of TDD is described in [2]: it is essentially a methodology of software development, where one writes new code only if an automated test has failed, and eliminating duplication in doing so.", "startOffset": 78, "endOffset": 81}, {"referenceID": 19, "context": "\u201d [20].", "startOffset": 2, "endOffset": 6}, {"referenceID": 28, "context": "Shrivastava and Jain [29] summed up the sequence as follows: 1) Write a test for a piece of functionality (that was based on a requirement), 2) Run all tests to check that the new test fails, 3) Write relevant code that passes the test, 4) Run the specific test to verify it passes, 5)", "startOffset": 21, "endOffset": 25}, {"referenceID": 19, "context": "TDD is said to result in being more focussed, improved communication, improved understanding of required software behaviour, and reduced design complexity [20].", "startOffset": 155, "endOffset": 159}, {"referenceID": 13, "context": "e, better software quality\u2014and involves less time spent on debugging, and experiments with students showed that the test-first group wrote more tests and were significantly more productive than the test-last group [14].", "startOffset": 214, "endOffset": 218}, {"referenceID": 32, "context": "While all this focuses on the actual programming, the underlying ideas have been applied to conceptual data modelling [33,34], resulting in a TDD authoring process, compared to, among others, Halpin\u2019s conceptual schema design procedure [13].", "startOffset": 118, "endOffset": 125}, {"referenceID": 33, "context": "While all this focuses on the actual programming, the underlying ideas have been applied to conceptual data modelling [33,34], resulting in a TDD authoring process, compared to, among others, Halpin\u2019s conceptual schema design procedure [13].", "startOffset": 118, "endOffset": 125}, {"referenceID": 12, "context": "While all this focuses on the actual programming, the underlying ideas have been applied to conceptual data modelling [33,34], resulting in a TDD authoring process, compared to, among others, Halpin\u2019s conceptual schema design procedure [13].", "startOffset": 236, "endOffset": 240}, {"referenceID": 33, "context": "Tort and Oliv\u00e9 reworked the test specification into a test-driven way of modelling, where each UML Class Diagram language feature has its own test specification in OCL that involves creating the objects that should, or ought not to, instantiate the UML classes and associations [34].", "startOffset": 278, "endOffset": 282}, {"referenceID": 33, "context": "The tool that implements it was evaluated with modellers, which made clear, among others, that more time was spent on developing and revising the conceptual model, in the sense of fixing errors, than on writing the test cases [34].", "startOffset": 226, "endOffset": 230}, {"referenceID": 34, "context": "Tests in ontology engineering An early explorative work on borrowing the notion of testing from software engineering to apply it to ontology engineering is described in [35], which explores several adaptation options: testing with the axiom and its negation, formalising CQs, checks by means on integrity constraints, autoepistemic operators, and domain and range assertions.", "startOffset": 169, "endOffset": 173}, {"referenceID": 27, "context": "A substantial step in the direction of test-driven ontology engineering was proposed by Ren et al [28], who analyse CQs for use with SPARQL queries that then would be tested against the ontology.", "startOffset": 98, "endOffset": 102}, {"referenceID": 7, "context": "Earlier work on CQs and queries include the OntologyTest tool, which allows the user to specify tests to check the functional requirements of the ontology based on the CQs, using ABox instances and SPARQL queries [8].", "startOffset": 213, "endOffset": 216}, {"referenceID": 7, "context": "Unlike extensive CQ and query patters, it specifies different types of tests focussed on the ABox rather than knowledge represented in the TBox, such as \u201cinstantiation tests\u201d (instance checking) and \u201crecovering tests\u201d (query for a class\u2019 individuals) and using mock individuals where applicable [8]; other instance-oriented test approaches have been proposed as well, although", "startOffset": 295, "endOffset": 298}, {"referenceID": 18, "context": "focussing on RDF/Linked Data rather than the OWL ABox [19].", "startOffset": 54, "endOffset": 58}, {"referenceID": 2, "context": "A NeON plugin with similar functionality and methodical steps within the eXtreme Design approach also has been proposed [3], but not the types of tests.", "startOffset": 120, "endOffset": 123}, {"referenceID": 34, "context": "The ontology unit test notion of axiom and its negation of [35] has been used, in a limited sense, in advocatus diaboli, where in the absence of a disjointness axiom between classes, it shows the consequences to the modeller to approve or disapprove, and if the latter is selected, the tool adds the disjointness axiom [6].", "startOffset": 59, "endOffset": 63}, {"referenceID": 5, "context": "The ontology unit test notion of axiom and its negation of [35] has been used, in a limited sense, in advocatus diaboli, where in the absence of a disjointness axiom between classes, it shows the consequences to the modeller to approve or disapprove, and if the latter is selected, the tool adds the disjointness axiom [6].", "startOffset": 319, "endOffset": 322}, {"referenceID": 24, "context": "Some of the OOPS! pitfalls that the software checks has some test-flavour to it [25], such as suggesting possible symmetry.", "startOffset": 80, "endOffset": 84}, {"referenceID": 15, "context": "FORZA shows the permissible relations one can add that will not lead to an inconsistency, which is based on domain and range constraints of properties and the selected entities one wants to relate [16]; that is, also not hypothesising a failure/absence of required knowledge in the TBox as such, though it can be seen as a variant of the domain & range assertions unit tests in [35].", "startOffset": 197, "endOffset": 201}, {"referenceID": 34, "context": "FORZA shows the permissible relations one can add that will not lead to an inconsistency, which is based on domain and range constraints of properties and the selected entities one wants to relate [16]; that is, also not hypothesising a failure/absence of required knowledge in the TBox as such, though it can be seen as a variant of the domain & range assertions unit tests in [35].", "startOffset": 378, "endOffset": 382}, {"referenceID": 8, "context": "Concerning overarching methodologies, none of the 9 methodologies reviewed by [9] are TDD-based, nor is the MeltingPoint Gar\u0107\u0131a et al.", "startOffset": 78, "endOffset": 81}, {"referenceID": 23, "context": "Aspect OntoMaven [24] is an extension to OntoMaven that is based on reusing ideas from Apache Maven, advocated as being both a tool and supporting agile ontology engineering, such as COLM.", "startOffset": 17, "endOffset": 21}, {"referenceID": 23, "context": "Regarding tests, besides the OntoMvnTest with \u2018test cases\u2019 for the usual syntax checking, consistency, and entailment, the documentation states it should be possible to reuse Maven plug-ins for further test types [24], but this has not been followed through yet.", "startOffset": 213, "endOffset": 217}, {"referenceID": 25, "context": "A different Agile-inspired method is, eXtreme Design with content ODPs [26], although this is also more a design method for rapid turnaround times rather than test-driven.", "startOffset": 71, "endOffset": 75}, {"referenceID": 0, "context": "Likewise, the earlier proposed RapidOWL is based on \u201citerative refinement, annotation and structuring of a knowledge base\u201d [1] rather permeating the test-driven approach throughout the methodology.", "startOffset": 123, "endOffset": 126}, {"referenceID": 30, "context": "many CQs first\u2019 [31], but not how this is to be achieved other than publishing new versions quickly.", "startOffset": 16, "endOffset": 20}, {"referenceID": 17, "context": "For the TBox tests, we use SPARQL-OWL [18] where possible/applicable.", "startOffset": 38, "endOffset": 42}, {"referenceID": 29, "context": "5 While SPARQL-DL [30] might be more well-known than SPARQL-OWL, that ver-", "startOffset": 18, "endOffset": 22}, {"referenceID": 17, "context": "The query rewriting of SPARQL-OWL has been described in [18] and a tool implementing the algorithms, OWL-BGP, is freely available.", "startOffset": 56, "endOffset": 60}, {"referenceID": 20, "context": "This resembles the notion of mock objects in software engineering [21,17], which we shall transport into the ontology setting.", "startOffset": 66, "endOffset": 73}, {"referenceID": 16, "context": "This resembles the notion of mock objects in software engineering [21,17], which we shall transport into the ontology setting.", "startOffset": 66, "endOffset": 73}, {"referenceID": 31, "context": "(Possibly this can be taken further, using mock ontology modules, alike the mock databases [32], but this is not needed at this stage.", "startOffset": 91, "endOffset": 95}, {"referenceID": 21, "context": "Proposals for epistemic extensions for OWL exist, which concern instance retrieval and integrity constraints checking [22] that reduces the K-operator to plain OWL queries, or closed world reasoning [12].", "startOffset": 118, "endOffset": 122}, {"referenceID": 11, "context": "Proposals for epistemic extensions for OWL exist, which concern instance retrieval and integrity constraints checking [22] that reduces the K-operator to plain OWL queries, or closed world reasoning [12].", "startOffset": 199, "endOffset": 203}, {"referenceID": 14, "context": ", teaches and teaches\u2212) improved reasoner performance in at least one instance [15].", "startOffset": 79, "endOffset": 83}, {"referenceID": 17, "context": "D select Sub classes without even having to face the consideration of having blank nodes/unnamed classes (complex class expressions) on the right-hand-side of the inclusion axiom that was not supported in Kollia et al\u2019s BGP [18].", "startOffset": 224, "endOffset": 228}, {"referenceID": 22, "context": "Further, it may be the case that overall performance may be different when a different reasoner is used, as reasoners do differ [23].", "startOffset": 128, "endOffset": 132}, {"referenceID": 3, "context": ", [4]), and has been shown to improve the overall results compared to doing something without a methodology.", "startOffset": 2, "endOffset": 5}, {"referenceID": 3, "context": "Like for software engineering\u2019s \u2018methodology selection grid\u2019 [4], it will exceedingly suit some ontology development projects but perhaps not others.", "startOffset": 61, "endOffset": 64}, {"referenceID": 4, "context": "While some aspects overlap, such as CQs (requirements), and the \u2018formalisation\u2019 step in methontology [5] (writing the axioms, by the knowledge engineer), both can be avoided as well: the former by the engineering, the latter by the domain expert.", "startOffset": 101, "endOffset": 104}], "year": 2015, "abstractText": "Emerging ontology authoring methods to add knowledge to an ontology focus on ameliorating the validation bottleneck. The verification of the newly added axiom is still one of trying and seeing what the reasoner says, because a systematic testbed for ontology authoring is missing. We sought to address this by introducing the approach of test-driven development for ontology authoring. We specify 36 generic tests, as TBox queries and TBox axioms tested through individuals, and structure their inner workings in an \u2018open box\u2019-way, which cover the OWL 2 DL language features. This is implemented as a Protege plugin so that one can perform a TDD test as a black box test. We evaluated the two test approaches on their performance. The TBox queries were faster, and that effect is more pronounced the larger the ontology is. We provide a general sequence of a TDD process for ontology engineering as a foundation for a TDD methodology.", "creator": "LaTeX with hyperref package"}}}