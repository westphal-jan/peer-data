{"id": "1601.03783", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jan-2016", "title": "Towards Turkish ASR: Anatomy of a rule-based Turkish g2p", "abstract": "This paper describes the architecture and implementation of a rule-based grapheme to phoneme converter for Turkish. The system accepts surface form as input, outputs SAMPA mapping of the all parallel pronounciations according to the morphological analysis together with stress positions. The system has been implemented in Python", "histories": [["v1", "Fri, 15 Jan 2016 00:09:52 GMT  (116kb)", "http://arxiv.org/abs/1601.03783v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["duygu altinok"], "accepted": false, "id": "1601.03783"}, "pdf": {"name": "1601.03783.pdf", "metadata": {"source": "CRF", "title": "Towards Turkish ASR: Anatomy of a rule-based Turkish g2p", "authors": ["Duygu Alt\u0131nok"], "emails": [], "sections": [{"heading": null, "text": "1.IntroductionIn this essay, we present the conception and implementation of a rules-based phoneme conversion graph for Turkish. Turkish has a very large, possibly infinite vocabulary due to the productive reflection and derivative morphology. Nouns have hundreds of forms and a verbal root can generate thousands of words. Therefore, our g2p is based on the recognition and processing of the root of a given word. SAMPA mappings of words are based on dictionary searches for roots with exceptional phonetic events and rule-based generation for regular roots. The stress marker comes from the morphological analysis of the input word. Turkish looks more or less like a phonetic language at first glance, but ancient Arabic, Persian loanwords break both pronunciation and stress rules. Abbreviation and foreign word treatment are a major problem that we are putting into this area. This paper is not the first lexlexical system we have implemented for this state language."}, {"heading": "2. Turkish", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Turkish morphology", "text": "Turkish is an Uraltaic language with agglutinative word structures. Turkish has a productive morphology with flexible and derivative processes. Theoretically, there are an infinite number of words in Turkish, because one root can produce hundreds of new reflected derivative words. Let's take, for example, the verbal root Kazmak and see its reflections: kazd\u0131n, kazd\u0131m, kazd\u0131k, kazd\u0131lar, kazd\u0131n\u0131z, kazarken, kaz\u0131yorken, kazmazken, kazm\u0131yorken, kazmazd\u0131, kazmazd\u0131m... The Turkish morphology has been well studied by Oflazer [13]. A two-step morphological analyzer for Turkish was built by using XRCE tools for finite states. This analyzer segments words into a series of lexical morphemes."}, {"heading": "2.2. Turkish phonology", "text": "Turkish ortography has 8 vowels a, e, \u0131, i, o, \u00f6, u, \u00fc; corresponds to / a, e, 1, i, o, 2, u, y /. Each vowel has a long counterpart and is represented with an addition: in SAMPA; / a:, e:, 1:, i:, o:, 2:, u:, y: /. / o: / and / 2: / are not very common, in fact these phonemes do not exist in words but in abbreviations. Vowels are symmetrical upwards, backwards, roundness and height. Vowels harmonize within a root and suffer with the last vowel of the root. Turkish has 26 consonants / p, t, tS, k, c, b, d, dZ, g, gj, f, s, s, w, z, m, n, l, l. l"}, {"heading": "2.3. Turkish stress pattern", "text": "Most indigenous words have stress in their last syllables, usually suffixes shift the stress \"towards\" the end of the word. End-to-end emphasis is more or less standard for most words, with the exception of old Arabic / Persian loanwords. Geographical names have a different stress pattern, the so-called Sezer stress [14]. Composite words also differ, the first word retains its stress and the second word loses, so stress is not definitive again. Also, our stress calculations are based on rules. We looked at regular roots, irregular roots, compound words and geographical names with regular and shifting suffixes."}, {"heading": "3. Architecture of the g2p system", "text": "Our system consists of several modules. First, we perform a morphological analysis of the surface, then we essentially have to obtain the pronunciation of the root and focus it on the pronunciation of the suffix sequence. All interesting phonological events occur either at the root itself or at the root boundary; the pronunciation of the suffix sequence is quite simple. So, once we have identified the root, rest is easy. Phontezier module contains a pronunciator for Turkish roots, one for foreign words, and one for abbreviations along with a root and a suffix sequence pronunciation combiner. When all possible SAMPA mappings of the word are complete, we can check some exceptional phonological events that occur in the language but are not reflected in the ortography. Finally, we produce stress markers and syllabified form for the TTS mode. We do not need to generate stress positions and syllabitions for the ASR, see below."}, {"heading": "3.1. Morphological Analyzer", "text": "We used \u00c7a\u011fr\u0131 \u00c7\u00f6ltekin's TRmorph. In [1] he described his work as follows: \"To our knowledge, TRmorph is the first freely available morphological analyzer for Turkish.\" TRmorph offers tribal and full morphological analysis functionality for Turkish. We preferred TRmorph because of its wide variety of functionality. Our morphological analyzer module consists of two parts: TRmorphological full analyzer for common words and our heuristic family tree for loans, foreign words and abbreviations. See 4.1. for heuristic stem. Input into this module is the surface shape of the word and output a list of the tuples of the form (root, suffix sequence, analysis). For example, word koyun: koyun \u2192 [(koy, un, un, < V > < < < < < & lt; 2p > +), (kolt; < < < < < < < < < < < < < < < < < < < < < < < < < < < < <"}, {"heading": "3.2. Phoneticizier", "text": "A second example is a native Turkish word that is sometimes not pronounced. It is a rules-based SAMPA program for the words that we know are not able to move in the world. It is a real word that we do not know in the world. It is a pure word that spreads in the world and in the world. It is not the way we understand it in the world and in the world, but the way we understand it in the world and in the world. It is a way in which we understand it in the world and in the world. It is the way in which we understand it in the world and in the world. Many roots are just 1-to-1 mappings of its graphics. Many roots are old loans Arabic / Persian words and have long vowels. For example, it is an old Arabic credit word and a pronunciation is an old Arabic word and a pronunciation is a: b / i, not its graphics definitively."}, {"heading": "3.3. Exceptional Phonology Module", "text": "Exceptional phonology module calculates phonological phenomena that occur in spoken language but are not represented in written language. We have implemented several methods:"}, {"heading": "3.3.1. n-1 assimilation", "text": "l is generally assimilated by a previous n in fast language, e.g. kad\u0131nlar / k a d can be pronounced 1 n a r / and anla- can be pronounced / a n a- /.3.3.2. The rounding r in the present tense -yorMost native speakers pronounce r in the present tense with the suffix -yor, when the suffix is followed by a suffix, starts with a consonant or -yor is the last suffix of the word itself. Comparegidiyor / gj i d i j o / gidiyordum / gj i d i j o d u m / gidiyorken / gj i d i j o c e / togidiyorum / gj i d i j o r u m / gidiyoruz / gj i d i j o o r u z /. This method requires the morphological analysis of the word, as we are only interested in yor if it is the present suffix. Some roots, for example, contain a morphological analysis of the suffix here."}, {"heading": "3.3.3. Realizations of \u011f", "text": "Most native speakers have a glottal stop in successive vowels of old Arabic loanwords such as saat / s a: a / s. Glottal stop is not only perceived in old loanwords, but also in new loanwords and foreign words, as the Turkish motherland does not have vowel clusters. For example, Maria is called / m a r i j a /. See the following section for details. Turkish SAMPA has phonemes for soft g / G / although we have not used it often. We have rather tried to give the surrounding vowels a soft g effect. From a computational point of view, soft g is either inaudible as a consonant or identical."}, {"heading": "3.3.4. Other common exceptional phenomena", "text": "y is the palatal paraglider. i + y sequence can sometimes be realized as / i: / as in iyi / i: / and diyece\u011fim / d i: dZ e m /. Futuristic suffix is usually abbreviated during fast speech and causes interesting phonological phenomena that therefore deserve our attention. Although words are spelled \"correctly\" in written language, abbreviations are also spelled in colloquial language. See the examples: Word shorter & misspelled pronunciation as gidece\u011fim gidicem / gj i d i d i d i c e m / git\u00e7em / gj i t tS e m / git\u00e7em / gj i t tS e m / git\u00e7em / gj i t tS d\u00f6ncek e m / d 2 n Z e cacak e m / gj i dZ dk / k kk / t a lak / dk / dk / t an example for xa / t dk / dk / dk / t"}, {"heading": "3.4. Syllabifier", "text": "All syllables in Turkish words have the same duration during pronunciation, Turkish has a very regular syllable pattern. We present an algorithm for syllable formation: Find the position of the first vowel, call it pos. If the pos + 1-th phoneme is a vowel, divide the syllable from right to left. Otherwise, if the pos + 2-th phoneme is a vowel, divide the syllable from right to right. Otherwise, if pos + 1, pos + 2, pos + 3-th consonants / str /, / ktr /, / ctr / or / ntr / divide the syllable from right to right + 1. Otherwise, pos + 2, pos + 3. Consonants are / str /, / ktr /, / ctr / or / ntr / divide the syllable between pos + 1. position."}, {"heading": "3.5. Stress Computations", "text": "In fact, the majority of them are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight."}, {"heading": "4. Troubles", "text": "There are already several classes of phonetically irregular roots. One does not follow the final devoicing rule, those with vowel changes in case of reflection, those with irregular stress patterns.... Turkish looks more or less phonetic at first glance, but as understood from the previous section, there are also quite a lot of irregularities. Although we have to label dictionaries for this type of irregularity, irregular roots are known and manageable. Real problems exist with foreign named units and abbreviations. Every day, new abbreviations and foreign words enter the Turkish script and language. Foreign words are written in several forms; original form, Turkish pronounced form and worst of all - Turkish hybrid form. For example, word facebook has several written alternatives: Facebook, feysbuk, feyzbuk, facebuk, feysbuuk. Foreign named units are manageable up to a point, abbreviations are much more problematic."}, {"heading": "4.1. Heuristic Stemming", "text": "\"In the last few years we have been in the USA, in Europe, in the world, in Europe, in Europe, in Europe, in the world, in Europe, in the USA, in Europe, in the USA, in Europe, in the USA, in Europe, in the USA, in the USA, in the USA, in the USA, in the USA, in Europe, in the USA, in the USA, in Europe, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA in the USA, in the USA, in the USA, in the USA in the USA, in the USA, in the USA, in the USA, in the USA in the USA, in the USA, in the USA, in the USA, in the USA in the USA, in the USA, in the USA in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA, in the USA,"}, {"heading": "4.2. Foreign word recognition and phoneticization", "text": "As explained in the previous section, there are several problems with the recognition of reflected foreign / credit words. We have heuristically solved the problem of parentage and recognition of such words in the previous section. Today's challenge of generating SAMPA mappings to foreign words comes. From the point of view of g2p, feysbukumdan and tivit\u0131rda are perfectly fine, they are already mapped to the Turkish pronunciation. If we feed these words into the Phoneticizer module, they will be correctly mapped to their SAMPA counterparts. But first, we need to recognize whether the word is foreign / loan, abbreviation or just a misspelled Turkish word. We have implemented a heuristic foreign word recognition algorithm, but we must first stop the word through the heuristic parentage."}, {"heading": "4.3. Abbreviation recognition and phonetization", "text": "This year we are dealing with a very well-done program in which we are able to put ourselves at the top, \"he said.\" We have to be able to be, \"he said.\" We have to be able to be able to be, \"he said.\" We have to be able to hide, \"he said.\" We have to be able to hide, \"he said.\" But we have to be able to find a solution. \""}, {"heading": "5. Some implementation details", "text": "As we have already pointed out, we used TRmorph from \u00c7a\u011fr\u0131 \u00c7\u00f6ltekin for morphological analysis. TRmorph is developed with foma. Foma is a compiler, programming language and C library for building finite state machines and converters for various applications. We implemented our implementation in Python due to simple string processing. We also used foma Python wrappers due to the use of TRmorph. See https: / / github.com / DuyguA for our implementation. We also implemented a static g2p, see the GitHub repository above for the variant created with Phonetisaurus and OpenFst."}, {"heading": "6. Future work", "text": "Future work will include the creation of a statistical g2p for English words. We will prepare a dictionary \"English words with Turkish mouth\" and then use Phonetisaurus on it to generate a statistical g2p."}, {"heading": "7. References", "text": "[1] \u00c7a\u011fr\u0131 \u00c7\u00f6ltekin, A Freely Available Morphological Analyzer for Turkish, Proceedings of the Seventh International Conference on Language Resources and Evaluation [2] Clements, G.N., Sezer, E., 1982. Vowel and consonant disharmony in Turkish,. In: van der Hulst, H., Smith, N. (Eds.), The Structure of Phonological Representations, Part II. Foris, Dordrecht, pp. 213-255 [3] Demircan, \u00d6mer T\u00fcrk\u00e7enin Ses Dizimi, DER YAYINLARI [4], The Structure of Phonological Representations, Part II., Celia 2005 Turkish: A Comprehensive Grammar [5] Hazen, T.J., Hetherington, I.L. T\u00fcr\u00e7enin, Shu, H., Livescu, K., September 2002."}], "references": [{"title": "Vowel and consonant disharmony in Turkish", "author": ["G.N. Clements", "E. Sezer"], "venue": "The Structure of Phonological Representations, Part II. Foris, Dordrecht,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1982}, {"title": "Turkish: A Comprehensive Grammar", "author": ["Asli G\u00f6ksel", "Celia Kerslake"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2005}, {"title": "Pronunciation modeling using a finite-state transducer representation", "author": ["T.J. Hazen", "I.L. Hetherington", "H. Shu", "K. Livescu"], "venue": "Proceedings of the ISCA Workshop on Pronunciation Modeling and Lexicon Adaptation", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "Exceptional stress-attracting suffixes in Turkish: representations vs. the grammar", "author": ["S. Inkelas"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1999}, {"title": "Turkish stress: a review", "author": ["S. Inkelas", "C.O. Orgun"], "venue": "Phonology", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2003}, {"title": "Speech and Language Processing", "author": ["D. Jurafsky", "J.H. Martin"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2000}, {"title": "Two-level description of Turkish morphology", "author": ["K. Oflazer"], "venue": "Literary and Linguistic Computing", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1994}, {"title": "The architecture and the implementation of a finite state pronunciation lexicon for Turkish", "author": ["K. Oflazer", "S. Inkelas"], "venue": "Computer Speech and Language,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "Two-level description of Turkish morphology", "author": ["K. Oflazer"], "venue": "Literary and Linguistic Computing", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1994}, {"title": "On non-final stress in Turkish", "author": ["E. Sezer"], "venue": "Journal of Turkish Studies", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1981}], "referenceMentions": [{"referenceID": 7, "context": "Oflazer and Inkelas already implemented a finite state lexicon for Turkish in [11] with extensive use of finite state tools.", "startOffset": 78, "endOffset": 82}, {"referenceID": 0, "context": "Overviews of Turkish phonology can be found in [2], [3] and [9].", "startOffset": 47, "endOffset": 50}, {"referenceID": 9, "context": "Geographical names has a different stress pattern, known as Sezer stress [14].", "startOffset": 73, "endOffset": 77}, {"referenceID": 1, "context": "yor, ki and several stress shifting suffixes can be found in [4], also see the implementation.", "startOffset": 61, "endOffset": 64}], "year": 2016, "abstractText": "This paper describes the architecture and implementation of a rule-based grapheme to phoneme converter for Turkish. The system accepts surface form as input, outputs SAMPA mapping of the all parallel pronounciations according to the morphological analysis together with stress positions. The system has been implemented in Python.", "creator": "Writer"}}}