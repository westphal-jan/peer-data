{"id": "1602.00309", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-Jan-2016", "title": "Bandits meet Computer Architecture: Designing a Smartly-allocated Cache", "abstract": "In many embedded systems, such as imaging sys- tems, the system has a single designated purpose, and same threads are executed repeatedly. Profiling thread behavior, allows the system to allocate each thread its resources in a way that improves overall system performance. We study an online resource al- locationproblem,wherearesourcemanagersimulta- neously allocates resources (exploration), learns the impact on the different consumers (learning) and im- proves allocation towards optimal performance (ex- ploitation). We build on the rich framework of multi- armed bandits and present online and offline algo- rithms. Through extensive experiments with both synthetic data and real-world cache allocation to threads we show the merits and properties of our al- gorithms", "histories": [["v1", "Sun, 31 Jan 2016 19:53:49 GMT  (215kb,D)", "http://arxiv.org/abs/1602.00309v1", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["yonatan glassner", "koby crammer"], "accepted": false, "id": "1602.00309"}, "pdf": {"name": "1602.00309.pdf", "metadata": {"source": "CRF", "title": "Bandits meet Computer Architecture: Designing a Smartly-allocated Cache", "authors": ["Yonatan Glassner", "Koby Crammer"], "emails": ["yglasner@tx.technion.ac.il,", "koby@ee.technion.ac.il"], "sections": [{"heading": null, "text": "In many embedded systems, such as vision systems, the system has only one purpose, and the same threads are repeated. By profiling threads, the system can allocate its resources to each thread in a way that improves the overall performance of the system. We are investigating an online resource allocation problem, where a resource manager allocates resources simultaneously (exploration), learns the impact on different consumers (learning), and improves allocation toward optimal performance (exploitation). We build on the rich framework of multi-armed bandits and present online and offline algorithms. By conducting extensive experiments with both synthetic data and real cache allocation of threads, we show the merits and characteristics of our algorithms."}, {"heading": "1 Introduction", "text": "In fact, it is that we are able to assert ourselves, that we are able, that we are able, that we are able, that we are able, that we are able."}, {"heading": "2 Related work", "text": "In fact, it is that we are able to assert ourselves, that we are able, that we will be able, that we will be able, that we will be able, that we will be able, and that we will be able, that we will be able, to put ourselves in a position, to put ourselves in a position, to put ourselves in a position, to put ourselves in a position, to put ourselves in a position, to put ourselves in a position, to put ourselves in the position we are in."}, {"heading": "3 Problem Setting", "text": "Next, we will assume that all resources are summarized in a certain way. We will assume that all resources are summarized in a certain way in a certain way in a certain way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same way in the same"}, {"heading": "4 Algorithms", "text": "A simple approach to solving our problem is to apply the algorithm at the same level as 1 / N memory to all of this. However, we can now ignore the structure of the problem, and since the actions are exponential in the number of algorithms, this approach is not practical in practice. We propose two algorithms that perform an initial pure exploration stage, and then a pure exploitation stage. The second algorithm is a UCB-like algorithm that fundamentally maps the exploration. We analyze the algorithms in the common \u03b2 case, while our experiments are also performed for the execution of the first algorithms. We start with the first algorithms. If the number of rounds T is known, the algorithms are pure exploitation for T rounds that perform an equal amount of 1 / N storage parameters."}, {"heading": "5 Experimental results", "text": "We evaluate our algorithms on both synthetic and real data. Based on the synthetic data, we have generated data that we can compare with this model: a thread produces a Bernoulli distributed binary stochastic reward system, so that Pr (st, i = 1) is the real amount of data that we first share, and random values of ~ \u03b3. \"We varied the number of threads - N that we use to set these parameters, we executed each algorithm for 10, 000 iterations, and calculated reward and regret in terms of the optimal mapping (according to the value that was set for ~ \u03b3 and \u03b2\" s). Furthermore, we have our algorithms for known values of different \u03b2 that one uses per process. However, since knowing the \u03b2 \"s, we have assumed that the \u03b2\" s are known to a small difference, as we observe them in real data, that there are approximately two clusters of programs: memory-intensive and non-intensive programs."}, {"heading": "6 Discussion", "text": "We provided two algorithms for the task and carried out an empirical study using both synthetic and real data. We ran several real-world applications in a controlled storage environment and analyzed a few allocation strategies. Memory UCB outperformed all other methods. Although we limited our discussion to allocating memory to threads, the tools developed here can also be used in other contexts, such as allocating memory and cores to processes, allocating network bandwidth to clients, etc."}], "references": [{"title": "Asymptotically efficient adaptive allocation rules", "author": ["T.L. Lai", "H. Robbins"], "venue": "Advances in applied mathematics, vol. 6, no. 1, pp. 4\u201322, 1985.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1985}, {"title": "Organizing the last line of defense before hitting the memory wall for cmps", "author": ["C. Liu", "A. Sivasubramaniam", "M. Kandemir"], "venue": "Software, IEE Proceedings-. IEEE, 2004, pp. 176\u2013185.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2004}, {"title": "Regret analysis of stochastic and nonstochastic multi-armed bandit problems", "author": ["S. Bubeck", "N. Cesa-Bianchi"], "venue": "Foundations and Trends in Machine Learning, vol. 5, no. 1, pp. 1\u2013122, 2012.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Finite-time analysis of the multiarmed bandit problem", "author": ["P. Auer", "N. Cesa-Bianchi", "P. Fischer"], "venue": "Machine learning, vol. 47, no. 2-3, pp. 235\u2013256, 2002.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2002}, {"title": "Combinatorial network optimization with unknown variables: Multi-armed bandits with linear rewards", "author": ["Y. Gai", "B. Krishnamachari", "R. Jain"], "venue": "arXiv preprint arXiv:1011.4748, 2010.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Combinatorial multiarmed bandit: General framework and applications", "author": ["W. Chen", "Y. Wang", "Y. Yuan"], "venue": "Proceedings of the 30th International Conference on Machine Learning (ICML-13), 2013, pp. 151\u2013159.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "A new memory monitoring scheme for memory-aware scheduling and partitioning", "author": ["G.E. Suh", "S. Devadas", "L. Rudolph"], "venue": "High-Performance Computer Architecture, 2002. Proceedings. Eighth International Symposium on. IEEE, 2002, pp. 117\u2013128.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2002}, {"title": "Coordinated management of multiple interacting resources in chip multiprocessors: A machine learning approach", "author": ["R. Bitirgen", "E. Ipek", "J.F. Martinez"], "venue": "Proceedings of the 41st annual IEEE/ACM International Symposium on Microarchitecture. IEEE Computer Society, 2008, pp. 318\u2013329.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Optimal resource allocation with semi-bandit feedback", "author": ["T. Lattimore", "K. Crammer", "C. Szepesv\u00e1ri"], "venue": "Proceedings of the 30th Conference on Uncertainty in Artificial Intelligence (UAI), 2014.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Probability inequalities for sums of bounded random variables", "author": ["W. Hoeffding"], "venue": "Journal of the American Statistical Association, vol. 58, no. 301, pp. 13\u201330, March 1963. [Online]. Available: http://www.jstor.org/ stable/2282952? 8", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1963}], "referenceMentions": [{"referenceID": 0, "context": "The problem of making decisions under uncertainty, or partial knowledge, was studied extensively in the literature, and a popular model for this problem is the Multi-Armed Bandit (MAB) [1].", "startOffset": 185, "endOffset": 188}, {"referenceID": 1, "context": "[2]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "We clearly can not review all variants, and refer the reader to a recent manuscript in the area [3].", "startOffset": 96, "endOffset": 99}, {"referenceID": 0, "context": "Lai and Robbins [1] proposed one of the earliest MAB version, in which there are N independent arms, each producing stochastic i.", "startOffset": 16, "endOffset": 19}, {"referenceID": 3, "context": "[4] presented the UCB1 (upper confidence bound) algorithm.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "See again the manuscript [3] for details and examples.", "startOffset": 25, "endOffset": 28}, {"referenceID": 4, "context": "[5]), compared to structureconsidered algorithm.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] proposed a general CMAB formulation.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] and of Suh et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] for cache hit rate optimization, and of Bitirgen et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] for global resources optimization using Artificial Neural Network).", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] studied a similar resource allocation problem, where a system manager allocated resources to maximize system gain.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "On iteration t an allocation algorithm partitions the memory to the threads, allocating mt,i \u2208 [0, 1] fraction of the memory to thread i.", "startOffset": 95, "endOffset": 101}, {"referenceID": 0, "context": "Once the resources are allocated, or partitioned, each thread i receives a stochastic bounded reward st,i \u2208 [0, 1] based on these resources.", "startOffset": 108, "endOffset": 114}, {"referenceID": 0, "context": "where \u03b3i, \u03b2i \u2208 [0, 1].", "startOffset": 15, "endOffset": 21}, {"referenceID": 3, "context": "[4]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "It is also concentrated around its mean, applying Hoeffding inequality [10]", "startOffset": 71, "endOffset": 75}, {"referenceID": 3, "context": "[4].", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2], Suh et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7], Bitirgen et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] are not relevant to our settings, as the first is not designed to optimize the cumulative hit-rate, the second used a pre-defined model, and the third assumes the statistics are known (i.", "startOffset": 0, "endOffset": 3}], "year": 2016, "abstractText": "In many embedded systems, such as imaging systems, the system has a single designated purpose, and same threads are executed repeatedly. Profiling thread behavior, allows the system to allocate each thread its resources in a way that improves overall system performance. We study an online resource allocation problem, where a resource manager simultaneously allocates resources (exploration), learns the impact on the different consumers (learning) and improves allocation towards optimal performance (exploitation). We build on the rich framework of multiarmed bandits and present online and offline algorithms. Through extensive experiments with both synthetic data and real-world cache allocation to threads we show the merits and properties of our algorithms.", "creator": "LaTeX with hyperref package"}}}