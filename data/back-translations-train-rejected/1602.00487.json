{"id": "1602.00487", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Feb-2016", "title": "Towards a Cognitive Routing Engine for Software Defined Networks", "abstract": "Most Software Defined Networks (SDN) traffic engineering applications use excessive and frequent global monitoring in order to find the optimal Quality-of-Service (QoS) paths for the current state of the network. In this work, we present the motivations, architecture and initial evaluation of a SDN application called Cognitive Routing Engine (CRE) which is able to find near-optimal paths for a user-specified QoS while using a very small monitoring overhead compared to global monitoring which is required to guarantee that optimal paths are found. Smaller monitoring overheads bring the advantage of smaller response time for the SDN controllers and switches. The initial evaluation of CRE on a SDN representation of the GEANT academic network shows that it is possible to find near-optimal paths with a small optimality gap of 1.65% while using 9.5 times less monitoring.", "histories": [["v1", "Mon, 1 Feb 2016 11:56:44 GMT  (293kb,D)", "http://arxiv.org/abs/1602.00487v1", "This is a non-final version of the paper submitted to IEEE ICC 2016"]], "COMMENTS": "This is a non-final version of the paper submitted to IEEE ICC 2016", "reviews": [], "SUBJECTS": "cs.NI cs.AI", "authors": ["frederic francois", "erol gelenbe"], "accepted": false, "id": "1602.00487"}, "pdf": {"name": "1602.00487.pdf", "metadata": {"source": "CRF", "title": "Towards a Cognitive Routing Engine for Software Defined Networks", "authors": ["Frederic Francois"], "emails": ["e.gelenbe}@imperial.ac.uk"], "sections": [{"heading": null, "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "A. Link Delay Monitoring", "text": "A link delay monitoring mechanism based on the use of only the features provided by OF [2], so that CRE is compatible with OF-enabled NFEs already in use in the field. As the OF protocol from [2] does not specify that an OF-compatible NFE can measure and store the link delay itself, it is necessary to use test packets to measure and calculate the delay of the connection between 2 NFEs. The link delay monitoring mechanism follows the following steps to calculate the link delay between 2 NFEs Ns and Nd with source and destination ports and Pd accordingly: \u2022 Step 1: An OF Echo Request Measurement (with a specified transaction identification id xid) together with an OF Barrier Request Measurement message is sent to NFE Ns and the time TNs it takes to respond with a corresponding OF Echo Reply (identified by the xid)."}, {"heading": "B. OF Statistics Gathering", "text": "SDN-enabled NFEs have counters [2] that can count different port characteristics, such as sent and received packets and the number of received packets with errors per port. This information is retrieved from the SDN controller either on NFE base or port base, by sending a message about the number of bytes transferred to the relevant NFE with the port number specified when retrieving information about a port base. To retrieve the following characteristic of a link: \u2022 Load - is calculated by first determining the number of bytes transferred A sent via a link by sending a message about the port number of the source port of the link to the source NFE of the link, so that only statistics about this port can be retrieved and not for all ports of the NFE [2]. The use of U of a link can be calculated as a source \u2212 A [t \u2212 1]."}, {"heading": "C. Optimizing the Network Monitoring Process", "text": "This year it is more than ever before in the history of the city."}, {"heading": "A. Scenario 1: Delay Detection and Path Switching in illustrative network", "text": "Scenario 1 uses the topology in Figure 1, in which the initial connection delays are shown in the figure. If Ping # 1 enters the network with source 1 and destination 2, CRE first installs 2 paths G1,2 = H1 \u2192 N1 \u2192 H2 and G2,1 = H2 \u2192 N2 \u2192 H1 based on the shortest path based on the hop count, which also happens to indicate the paths with the shortest delay with the ping round trip time (RTT) of 120ms, the higher RTT for Ping # 1, compared to the subsequent pings, results from the effort to inform the controller of new currents, calculate paths and insert rules within the NFEs. CRE then begins to monitor the network based on RNN with RL. At the time 9 s in the experiment, the connections from / to N1 \u2192 N2 \u2192 L1,2 and this increase in delays to G28.1 \u2192 resulting from the delay of N4ms will occur."}, {"heading": "B. Scenario 2: CRE convergence and monitoring reduction in the GEANT operational network", "text": "The network topology used is GEANT - a European academic network consisting of 23 Point of Presence (PoP) 3,370 (PoP), represented as NFEs in this experiment, and 74 unidirectional links, where the propagation delay of a given link is calculated using the range of vision between the source and the destination PoP of the connection. The experiment goal is to measure the amount of time and monitoring that CRE takes to determine the best path in the network for a given Source-Destination (SD) pair compared to an optimal routing algorithm that examines the 74 connections of the network each time. Experiments are performed for 90 s with the network monitoring around the 20 frequency of both CRE and the optimal algorithm to 5sTABLE I CRE CONVERGENCE VS OPTIMALExp. No."}], "references": [{"title": "The road to sdn", "author": ["N. Feamster", "J. Rexford", "E. Zegura"], "venue": "Queue, vol. 11, no. 12, pp. 20:20\u201320:40, Dec. 2013.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Software defined network traffic measurement: Current trends and challenges", "author": ["A. Yassine", "H. Rahimi", "S. Shirmohammadi"], "venue": "Instrumentation Measurement Magazine, IEEE, vol. 18, no. 2, pp. 42\u201350, April 2015.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "A roadmap for traffic engineering in sdn-openflow networks", "author": ["I.F. Akyildiz", "A. Lee", "P. Wang", "M. Luo", "W. Chou"], "venue": "Computer Networks, vol. 71, no. 0, pp. 1 \u2013 30, 2014.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Monitoring latency with openflow", "author": ["K. Phemius", "M. Bouet"], "venue": "Network and Service Management (CNSM), 2013 9th International Conference on, Oct 2013, pp. 122\u2013125.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Flowsense: Monitoring network utilization with zero measurement cost", "author": ["C. Yu", "C. Lumezanu", "Y. Zhang", "V. Singh", "G. Jiang", "H. Madhyastha"], "venue": "Passive and Active Measurement, ser. Lecture Notes in Computer Science, M. Roughan and R. Chang, Eds. Springer Berlin Heidelberg, 2013, vol. 7799, pp. 31\u201341.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Opensample: A low-latency, sampling-based measurement platform for commodity sdn", "author": ["J. Suh", "T. Kwon", "C. Dixon", "W. Felter", "J. Carter"], "venue": "Distributed Computing Systems (ICDCS), 2014 IEEE 34th International Conference on, June 2014, pp. 228\u2013237.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Cognitive packet networks", "author": ["E. Gelenbe", "Z. Xu", "E. Seref"], "venue": "Tools with Artificial Intelligence, 1999. Proceedings. 11th IEEE International Conference on, 1999, pp. 47\u201354.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1999}, {"title": "Cognitive packet network", "author": ["E. Gelenbe"], "venue": "US Patent 09/680,184, October 12, 2004.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "Design and performance of cognitive packet networks", "author": ["E. Gelenbe", "R. Lent", "Z. Xu"], "venue": "Perform. Eval., vol. 46, no. 2-3, pp. 155\u2013176, Oct. 2001.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2001}, {"title": "Cognitive packet networks: Qos and performance", "author": ["E. Gelenbe", "R. Lent", "A. Montuori", "Z. Xu"], "venue": "Modeling, Analysis and Simulation of Computer and Telecommunications Systems, 2002. MASCOTS 2002. Proceedings. 10th IEEE International Symposium on, 2002, pp. 3\u20139.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2002}, {"title": "The cognitive packet network: A survey", "author": ["G. Sakellari"], "venue": "The Computer Journal, vol. 53, no. 3, pp. 268\u2013279, 2010. [Online]. Available: http://comjnl.oxfordjournals.org/content/53/3/268.abstract", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Traffic engineering with cognitive packet networks", "author": ["E. Gelenbe", "A. Nunez"], "venue": "Simulation Series, vol. 35, 2003.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "Power-aware ad hoc cognitive packet networks", "author": ["E. Gelenbe", "R. Lent"], "venue": "Ad Hoc Networks, vol. 2, no. 3, pp. 205 \u2013 216, 2004, quality of service in ad hoc networks.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2004}, {"title": "Power aware smart routing in wireless sensor networks", "author": ["L. Hey"], "venue": "Next Generation Internet Networks, 2008. NGI 2008, April 2008, pp. 195\u2013202.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2008}, {"title": "An autonomic approach to denial of service defence", "author": ["E. Gelenbe", "M. Gellman", "G. Loukas"], "venue": "World of Wireless Mobile and Multimedia Networks, 2005. WoWMoM 2005. Sixth IEEE International Symposium on a, June 2005, pp. 537\u2013541.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2005}, {"title": "Switchreduce: Reducing switch state and controller involvement in openflow networks", "author": ["A. Iyer", "V. Mann", "N. Samineni"], "venue": "IFIP Networking Conference, 2013, May 2013, pp. 1\u20139.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Opennetmon: Network monitoring in openflow software-defined networks", "author": ["N. Van Adrichem", "C. Doerr", "F. Kuipers"], "venue": "Network Operations and Management Symposium (NOMS), 2014 IEEE, May 2014, pp. 1\u20138.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2014}, {"title": "A network in a laptop: Rapid prototyping for software-defined networks", "author": ["B. Lantz", "B. Heller", "N. McKeown"], "venue": "Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks, ser. Hotnets-IX. New York, NY, USA: ACM, 2010, pp. 19:1\u201319:6.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "The ossification of computer networks due to the use of nonstandardized and closed source protocols between the control and data plane of commercial Network Forwarding Elements (NFEs) has led researchers to develop Software Defined Networks (SDNs) [1] where open and standardized protocols, such as OpenFlow (OF) [2], are used to program the data plane of NFEs.", "startOffset": 248, "endOffset": 251}, {"referenceID": 1, "context": "These routing applications make routing decisions based on network policies and the state of the network but unfortunately, gathering the state of the network is an expensive activity both in terms of processing overhead at the controller and NFEs and control traffic [3].", "startOffset": 268, "endOffset": 271}, {"referenceID": 2, "context": "In current literature, most traffic engineering techniques [4] used in SDN takes the view that SDN provides a global view of the current network state and topology in a logically centralized controller and therefore, optimization can be performed on the network by running different types of global traffic engineering algorithms such as constrained shortest path first.", "startOffset": 59, "endOffset": 62}, {"referenceID": 1, "context": "the excessive overhead linked with accurate and frequent global monitoring the network [3].", "startOffset": 87, "endOffset": 90}, {"referenceID": 1, "context": "Existing work on network monitoring in SDN can be divided into 2 categories: active and passive monitoring [3].", "startOffset": 107, "endOffset": 110}, {"referenceID": 3, "context": "Active monitoring involves either the actual probing of the network by sending special packets [5] and/or polling the state of the network through OF mechanism,", "startOffset": 95, "endOffset": 98}, {"referenceID": 4, "context": "Packet-In and Flow Removed OF control messages [6], or calculates the network state based on the collected sampled packets [7].", "startOffset": 47, "endOffset": 50}, {"referenceID": 5, "context": "Packet-In and Flow Removed OF control messages [6], or calculates the network state based on the collected sampled packets [7].", "startOffset": 123, "endOffset": 126}, {"referenceID": 6, "context": "similar to the routing algorithm that is used in Cognitive Packet Networks (CPNs) [8]\u2013[11] but with the significant and ar X iv :1 60 2.", "startOffset": 82, "endOffset": 85}, {"referenceID": 9, "context": "similar to the routing algorithm that is used in Cognitive Packet Networks (CPNs) [8]\u2013[11] but with the significant and ar X iv :1 60 2.", "startOffset": 86, "endOffset": 90}, {"referenceID": 10, "context": "CPN has been used successful in various settings [12], for e.", "startOffset": 49, "endOffset": 53}, {"referenceID": 11, "context": ", traffic engineering [13], routing in wireless [14] and sensor [15] networks and defence against Denial-of-Service (DoS) attacks [16].", "startOffset": 22, "endOffset": 26}, {"referenceID": 12, "context": ", traffic engineering [13], routing in wireless [14] and sensor [15] networks and defence against Denial-of-Service (DoS) attacks [16].", "startOffset": 48, "endOffset": 52}, {"referenceID": 13, "context": ", traffic engineering [13], routing in wireless [14] and sensor [15] networks and defence against Denial-of-Service (DoS) attacks [16].", "startOffset": 64, "endOffset": 68}, {"referenceID": 14, "context": ", traffic engineering [13], routing in wireless [14] and sensor [15] networks and defence against Denial-of-Service (DoS) attacks [16].", "startOffset": 130, "endOffset": 134}, {"referenceID": 3, "context": "doesn\u2019t have any native ability to obtain the necessary information from the network in order to calculate the packet delay on a link but the SDN controller can send probe packets to obtain a good estimate of packet delays [5].", "startOffset": 223, "endOffset": 226}, {"referenceID": 6, "context": "CRAM is a routing algorithm which is based on Random Neural Network (RNN) with Reinforcement Learning (RL) [8]\u2013[11].", "startOffset": 107, "endOffset": 110}, {"referenceID": 9, "context": "CRAM is a routing algorithm which is based on Random Neural Network (RNN) with Reinforcement Learning (RL) [8]\u2013[11].", "startOffset": 111, "endOffset": 115}, {"referenceID": 10, "context": "5% [12], of the time and exploitation mode is chosen for the remaining (1\u2212X)% of the time.", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "ri is a normalization factor (firing rate in [12]) which is calculated as:", "startOffset": 45, "endOffset": 49}, {"referenceID": 15, "context": "in a similar way as in [18].", "startOffset": 23, "endOffset": 27}, {"referenceID": 9, "context": "This is different to traditional CPN [11] where each NFE will send smart packets for each of its RNNs to collect network state.", "startOffset": 37, "endOffset": 41}, {"referenceID": 2, "context": "This allows CRE to have a worst-case/upper bound on its network monitoring activity that is the same as when the current global SDN traffic engineering applications [4] poll every NFEs in the network.", "startOffset": 165, "endOffset": 168}, {"referenceID": 16, "context": "If the link characteristic is stable, then a longer te can be used [19].", "startOffset": 67, "endOffset": 71}, {"referenceID": 17, "context": "The following evaluations scenarios where carried out using the SDN emulator Mininet [20] where custom topology can", "startOffset": 85, "endOffset": 89}], "year": 2016, "abstractText": "Most Software Defined Networks (SDN) traffic engineering applications use excessive and frequent global monitoring in order to find the optimal Quality-of-Service (QoS) paths for the current state of the network. In this work, we present the motivations, architecture and initial evaluation of a SDN application called Cognitive Routing Engine (CRE) which is able to find near-optimal paths for a user-specified QoS while using a very small monitoring overhead compared to global monitoring which is required to guarantee that optimal paths are found. Smaller monitoring overheads bring the advantage of smaller response time for the SDN controllers and switches. The initial evaluation of CRE on a SDN representation of the GEANT academic network shows that it is possible to find near-optimal paths with a small optimality gap of 1.65% while using 9.5 times less monitoring.", "creator": "LaTeX with hyperref package"}}}