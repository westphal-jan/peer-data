{"id": "1602.00489", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Feb-2016", "title": "Real Time Video Quality Representation Classification of Encrypted HTTP Adaptive Video Streaming - the Case of Safari", "abstract": "The increasing popularity of HTTP adaptive video streaming services has dramatically increased bandwidth requirements on operator networks, which attempt to shape their traffic through Deep Packet Inspection (DPI). However, Google and certain content providers have started to encrypt their video services. As a result, operators often encounter difficulties in shaping their encrypted video traffic via DPI. This highlights the need for new traffic classification methods for encrypted HTTP adaptive video streaming to enable smart traffic shaping. These new methods will have to effectively estimate the quality representation layer and playout buffer. We present a new method and show for the first time that video quality representation classification for (YouTube) encrypted HTTP adaptive streaming is possible. We analyze the performance of this classification method with Safari over HTTPS. Based on a large number of offline and online traffic classification experiments, we demonstrate that it can independently classify, in real time, every video segment into one of the quality representation layers with 97.18% average accuracy.", "histories": [["v1", "Mon, 1 Feb 2016 12:12:17 GMT  (1446kb)", "http://arxiv.org/abs/1602.00489v1", "9 pages"], ["v2", "Fri, 19 Feb 2016 15:23:02 GMT  (1446kb)", "http://arxiv.org/abs/1602.00489v2", "9 pages"]], "COMMENTS": "9 pages", "reviews": [], "SUBJECTS": "cs.MM cs.CR cs.LG cs.NI", "authors": ["ran dubin", "amit dvir", "ofir pele", "ofer hadar", "itay richman", "ofir trabelsi"], "accepted": false, "id": "1602.00489"}, "pdf": {"name": "1602.00489.pdf", "metadata": {"source": "CRF", "title": "Real Time Video Quality Representation Classification of Encrypted HTTP Adaptive Video Streaming - the Case of Safari", "authors": ["Ran Dubin", "Amit Dvir"], "emails": [], "sections": [{"heading": null, "text": "In fact, most of them are able to determine for themselves what they want and what they want."}, {"heading": "II. RELATED WORK", "text": "Many recent papers have proposed methods for encrypting data streams and capturing data streams [6], [7], [8] and [8]. Several papers have examined different statistical characteristics such as the duration of data streams [8], [8], the number of data streams in a session [8], [8] and [8], the number of data streams in a single session [8], [8] and [9], [9] and [9]."}, {"heading": "III. YOUTUBE ANALYSIS", "text": "This year, the time has come for an agreement to be reached, and it will only take a few days."}, {"heading": "IV. PROBLEM FORMULATION", "text": "A server stores a video that is divided into segments of fixed duration. Each segment is encoded in m representations (m may be different for different videos). The user can choose whether to download a constant or adaptive representation. In adaptive mode, the client's video player application (using adaptive logic), based on its estimate of network condition and playback buffer, selects a suitable representation to download each segment. We used data from static (constant) quality representations to learn a model that can classify segments of constant and adaptive video streams. We used a training set of encrypted video streams where each was downloaded m times. Each download had a different constant video quality representation. We used a fixed m = 3 for all videos. Each segment of the stream is encoded to a function. The designation of each segment is its index for constant quality representation:"}, {"heading": "V. PROPOSED ALGORITHM", "text": "The proposed solution architecture is illustrated in Fig. 5. The first two modules forward YouTube video streams only to the next modules. Each segment of network traffic enters the system separately and is first passed to the Connection Matching Filter. This filter is responsible for checking whether the incoming flow is new or ongoing, and does so on the basis of a five-fold representation: {protocol (TCP / UDP), src IP, dst IP, src port, dst port}. If the incoming flow is new, the DPI filter decides whether it is a YouTube flow, based on the Service Name Indication (SNI) field in the client hello message. If the DPI module finds the following string: googlevideos.com (which identifies YouTube) in the SNI, the Stream Feature Creation Module will be routed past."}, {"heading": "A. Feature Creation", "text": "DASH is streamed using a TCP transport protocol. Streaming applications have high bit rate consumption, so feature recovery methods must take into account TCP constraints such as retransmission caused by network issues. Retransmission adds additional data to the stream that can cause classification errors. In Section II, we discussed state-of-the-art methods for creating network functions such as packet length, packet time between arrival and RTT packet direction. However, since the payload during video streaming often has maximum size, network delays and retransmissions cause incorrect packet numbers. Therefore, we propose a one-dimensional bit rate function based on a TCP stack retransmission filter based on the TCP-ACK method. Feature creation begins after we realize that this data flow is a YouTube video flow. Any packet entering the algorithm is verified by CTP stack to prevent our re-stack from overload."}, {"heading": "B. Feature Classification", "text": "The proposed classification solution is illustrated in Fig. 6. It has a training step and a test step. In the training step, we first constructed our data set based on YouTube video streaming captures (PCAP trace files [30]). Each video was downloaded with the three following fixed qualities {360P, 480P, 720P}. In the second step, we extracted statistical features from the entire labeled data set. In our proposed solution, the statistical function is a bit rate throughput over a period based on the user's TCP stack implementation, which filters unnecessary TCP retransmissions that occurred regularly in traffic. Our method of feature extraction is adapted to browser-generated content (Safari). In the third step, the entire feature set was grouped using k-means + + [31] (Step (3) in Fig. 6). The end product of these codebook steps is the entire feature that represents the feature."}, {"heading": "VI. PERFORMANCE EVALUATION", "text": "In this section, we evaluate the proposed classification algorithm for quality representation. First, we describe the data set in VI-A. Then, we analyze the accuracy using different numbers of k centers (step (3) in Fig. 6) in Section VI-B. In Section VI-C, we evaluate the accuracy using different training dataset sizes. Finally, we analyze the accuracy of the various test sets in Section VI-D. We test the robustness of the classifier against delays and packet losses in Section VI-E. We examine the accuracy of the estimation of the user buffer in Section VI-F. Finally, we compare our classification results with two different classifiers in Section VI-G. One is a naive algorithm developed by us and the other is based on an algorithm for detecting malware anomalies [26], [27] which we have modified for the streaming world."}, {"heading": "A. Dataset", "text": "The video titles used in this study are popular YouTube videos from various categories such as news, video action trailers, and GoPro videos [30].In this study, we decided to focus on the Safari browser because the Fixed Quality Download Mode (fig. 1 (d)) and the Adaptive Quality Selection Mode (fig. 1 (c) have similar characteristics. We show that we can learn an accurate model of static or automatic quality modes for Safari simply by using a fixed training dataset. Future studies will add additional browsers.The training dataset contained 120 video streams of 40 unique video titles, each of which was downloaded separately with fixed quality from the following quality tests: {360P, 480P, 720P}.We have three test datasets: 1) Test Fixed Train Titles: 120 video streams of 40 unique video titles (the same titles as those downloaded in each training phase)."}, {"heading": "C. Accuracy Evaluation using Different Training Dataset Sizes", "text": "In Fig. 8, we compare our detection rate with a different number of training video titles. The figure shows large performance gains when the number of training video titles increases from 10 to 30. The gains are much smaller when the number of training video titles increases from 30 to 50 (by only 2.2%). The figure also shows that using the last peak in our solution reduces the identification rate."}, {"heading": "D. Accuracy Evaluation on the Different Test Sets", "text": "Fig. 9 (a) shows that our classification errors in fixed quality representation mode are between narrow qualitative representations and below 3%. Note that Fig. 9 (b) is based on the use of the Nearest Neighbor using Average Bit Rate feature (NAI), which uses the average bit rate calculated for each quality in Fig. 3. The average classification accuracy was 2% better than when we tested video titles from our training set (Fig. 9 (c)) than when we tested video titles that were not in our training set (Fig. 9 (d)). We investigated why the error in classifying 480P quality representation segments as 720P in adaptive streams was relatively higher than the other errors (see Fig. 9 (c) and 9 (d)))."}, {"heading": "E. Evaluation of Robustness to Delays and Packet Losses", "text": "Fig. 10 (a) shows the robustness of our algorithm against network delays. There was a sharp decrease in classification accuracy up to 300 milliseconds delay, followed by a moderate decrease. The video application QoE is very sensitive to network delays and delays of over 300 milliseconds, which can be easily detected. The general classification accuracy decreased after 1000 milliseconds by only 7%. Fig. 10 (b) shows the robustness of our algorithm against packet losses. Packet losses of 3% decreased our classification accuracy by 20%. We found that the traffic behavior for packet losses differs from our normal test model. After 10% packet losses (the video has practically stopped) our classification accuracy dropped to 73%. Fig. 10 (c) shows the robustness of our algorithm against combinations of network delays and packet losses. 500 ms delays plus 10% packet losses reduced our classification accuracy to 73%. Fig. 10 (c) shows the robustness of our algorithm against combinations of network delays and packet losses."}, {"heading": "F. User Buffer Estimate", "text": "Fig. 11 shows our buffer estimate compared to the real buffer measurement. Experiments were performed using the entire data set (Fixed and Auto mode). For simplicity, we present the sum total. The average deviation between the full video duration and our estimate was 0.276 seconds and the STD 0.25. The average deviation per feature was 0.035 seconds with an STD of 0.047."}, {"heading": "G. Classifier Comparisons", "text": "Our proposed solution is the first classifier for encrypted adaptive video streaming over HTTPS. In this section, we describe and compare two other new classification approaches: a na\u00efve classifier for bit rates and an algorithm based on a fingerprinting algorithm for network traffic. [27] Because the malware fingerprint is not designed to automatically switch representation, we used the fixed-mode dataset in the tests. The na\u00efve algorithm uses the average bit rate calculated from Fig. 3 for each quality. We used our entire Fixed Representation Test dataset and found the closest average bit rate for each feature. Fig. 9 (b) illustrates the na\u00efve approach and the proposed algorithm is presented in Fig. 9 (a), 9 (c), 9 (d)."}, {"heading": "VII. CONCLUSIONS", "text": "Our solution was tested in Safari (Flash Player) browser with offline and online network traffic over HTTPS. We achieved an average classification accuracy of 97.18% in fixed mode and 97.14% in automatic quality switching mode. The algorithm estimates the user buffer playout level after each segment download with an average error of 0.035 seconds. The proposed solution showed 8.95% better average classification results than a na\u00efve classification approach. In this work, we used the one-dimensional bit rate function. We showed that our solution is more vulnerable to packet losses than to network delays. Extending features to strengthen the robustness of packet losses is one of our future goals. The DASH problem of encrypted data quality representation still faces many challenges. (In this work, we presented YouTube with the Safari browser over HTTPS as a use case. Classification of other browsers should be a problem that our network automated streaming behavior is not similar to our automated Chrome data traffic."}], "references": [{"title": "Issues and future directions in traffic classification", "author": ["A. Dainotti", "A. Pescape", "KC. Claffy"], "venue": "Network, IEEE,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Reviewing traffic classification", "author": ["S. Valenti", "D. Rossi", "A. Dainotti", "A. Pescap\u00e8", "A. Finamore", "M. Mellia"], "venue": "In Data Traffic Monitoring and Analysis,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "A survey on encrypted traffic classification", "author": ["Z. Cao", "G. Xiong", "Y. Zhao", "Z. Li", "L. Guo"], "venue": "In Applications and Techniques in Information Security,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Progressive download video rate traffic shaping using tcp window and deep packet inspection", "author": ["R. Dubin", "O. Hadar", "A. Noam", "R. Ohayon"], "venue": "In WORLDCOMP,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Identification over encrypted channels", "author": ["B. Niemczyk", "P.Rao"], "venue": "In BlackHat USA,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Classification research on ssl encrypted application. In Trustworthy Computing and Services, volume 320 of Communications in Computer and Information Science, pages 404\u2013411", "author": ["P. Fu", "L. Guo", "G. Xiong", "J. Meng"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "An identification method based on ssl extension", "author": ["P. Fu", "G. Xiong", "Y. Zhao", "M. Song", "P. Zhang"], "venue": "In Symposium on Research in Attacks, Intrusions and Defenses,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Classifying service flows in the encrypted skype traffic", "author": ["M. Korczynski", "A. Duda"], "venue": "In IEEE International Conference on Communications (ICC),", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Empirically derived analytic models of wide-area tcp connections", "author": ["Vern Paxson"], "venue": "IEEE/ACM Transactions on Networking (TON),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1994}, {"title": "Unveiling skype encrypted tunnels using gp", "author": ["R. Alshammari", "AN. Zincir-Heywood"], "venue": "In IEEE Congress on Evolutionary Computation (CEC),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Self-learning ip traffic classification based on statistical flow characteristics", "author": ["S. Zander", "T. Nguyen", "G. Armitage"], "venue": "In Passive and Active Network Measurement,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2005}, {"title": "Identification and analysis of skype peer-to-peer traffic", "author": ["D. Zhang", "C. Zheng", "H. Zhang", "H. Yu"], "venue": "In Fifth International Conference on Internet and Web Applications and Services (ICIW),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Practical anomaly detection based on classifying frequent traffic patterns", "author": ["I. Paredes-Oliva", "I. Castell-Uroz", "P. Barlet-Ros", "X. Dimitropoulos", "J. Sole-Pareta"], "venue": "In IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2012}, {"title": "Detailed analysis of skype traffic", "author": ["D. Bonfiglio", "M. Mellia", "M. Meo", "D. Rossi"], "venue": "Multimedia, IEEE Transactions on,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "Quantifying skype user satisfaction", "author": ["KT. Chen", "CY. Huang", "P. Huang", "CL. Lei"], "venue": "In ACM SIGCOMM Computer Communication Review,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2006}, {"title": "Statistical protocol identification with spid: Preliminary results", "author": ["E. Hjelmvik", "W. John"], "venue": "In Swedish National Computer Networking Workshop,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}, {"title": "Realtime classification for encrypted traffic", "author": ["R. Bar-Yanai", "M. Langberg", "D. Peleg", "L. Roditty"], "venue": "In Experimental Algorithms,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}, {"title": "Phonotactic reconstruction of encrypted voip conversations: Hookt on fon-iks", "author": ["AM. White", "AR. Matthews", "KZ. Snow", "F. Monrose"], "venue": "In IEEE Symposium on Security and Privacy (SP),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}, {"title": "Language identification of encrypted voip traffic: Alejandra y roberto or alice and bob", "author": ["CV. Wright", "L. Ballard", "F. Monrose", "GM. Masson"], "venue": "In USENIX Security,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2007}, {"title": "Botnet identification via universal anomaly detection", "author": ["S. Siboni", "A. Cohen"], "venue": "In IEEE Workshop on Information Forensics and Security (WIFS),", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2014}, {"title": "Malicious traffic detection using traffic fingerprint", "author": ["A. Shimoni", "S. Barhom"], "venue": null, "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Compression of individual sequences via variable-rate coding", "author": ["Avraham Lempel", "Jacob Ziv"], "venue": "IEEE Transmissions on Information Theory,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1978}, {"title": "k-means++: The advantages of careful seeding", "author": ["D. Arthur", "S. Vassilvitskii"], "venue": "In Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2007}, {"title": "Traffic morphing: An efficient defense against statistical traffic analysis", "author": ["CV. Wright", "SE. Coull", "F. Monrose"], "venue": "In NDSS,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2009}], "referenceMentions": [{"referenceID": 0, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 134, "endOffset": 137}, {"referenceID": 1, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 139, "endOffset": 142}, {"referenceID": 2, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 144, "endOffset": 147}, {"referenceID": 3, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 149, "endOffset": 152}, {"referenceID": 4, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 154, "endOffset": 158}, {"referenceID": 5, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 160, "endOffset": 164}, {"referenceID": 6, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 166, "endOffset": 170}, {"referenceID": 7, "context": "Network traffic classification algorithms use two main techniques: DPI packet content analysis and statistical feature classification [6], [7], [8], [9], [10], [11], [12], [13].", "startOffset": 172, "endOffset": 176}, {"referenceID": 0, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [6], [7], [8].", "startOffset": 166, "endOffset": 169}, {"referenceID": 1, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [6], [7], [8].", "startOffset": 171, "endOffset": 174}, {"referenceID": 2, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [6], [7], [8].", "startOffset": 176, "endOffset": 179}, {"referenceID": 8, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 84, "endOffset": 88}, {"referenceID": 9, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 90, "endOffset": 94}, {"referenceID": 10, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 96, "endOffset": 100}, {"referenceID": 9, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 133, "endOffset": 137}, {"referenceID": 11, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 139, "endOffset": 143}, {"referenceID": 12, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 145, "endOffset": 149}, {"referenceID": 9, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 254, "endOffset": 258}, {"referenceID": 11, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 260, "endOffset": 264}, {"referenceID": 11, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 291, "endOffset": 295}, {"referenceID": 13, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 297, "endOffset": 301}, {"referenceID": 13, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 312, "endOffset": 316}, {"referenceID": 14, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 318, "endOffset": 322}, {"referenceID": 14, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 346, "endOffset": 350}, {"referenceID": 15, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 369, "endOffset": 373}, {"referenceID": 16, "context": "Several works have examined different statistical features such as session duration [15], [16], [17], number of packets in a session [16], [18], [19], different variance calculations of the minimum, maximum and average values of interarrival packet time [16], [18], payload size information [18], [20], bit rate [20], [21], Round-Trip Time (RTT) [21], packet direction [22] or server sent bit rate [23].", "startOffset": 398, "endOffset": 402}, {"referenceID": 0, "context": ") [6], [7], [8], by exploiting encrypted VOIP streams interaction of Variable Bit Rate (VBR) codecs such as phonetic reconstruction [24] and language identification [25].", "startOffset": 2, "endOffset": 5}, {"referenceID": 1, "context": ") [6], [7], [8], by exploiting encrypted VOIP streams interaction of Variable Bit Rate (VBR) codecs such as phonetic reconstruction [24] and language identification [25].", "startOffset": 7, "endOffset": 10}, {"referenceID": 2, "context": ") [6], [7], [8], by exploiting encrypted VOIP streams interaction of Variable Bit Rate (VBR) codecs such as phonetic reconstruction [24] and language identification [25].", "startOffset": 12, "endOffset": 15}, {"referenceID": 17, "context": ") [6], [7], [8], by exploiting encrypted VOIP streams interaction of Variable Bit Rate (VBR) codecs such as phonetic reconstruction [24] and language identification [25].", "startOffset": 132, "endOffset": 136}, {"referenceID": 18, "context": ") [6], [7], [8], by exploiting encrypted VOIP streams interaction of Variable Bit Rate (VBR) codecs such as phonetic reconstruction [24] and language identification [25].", "startOffset": 165, "endOffset": 169}, {"referenceID": 19, "context": "[26] and Shimoni et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[27].", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "Both methods are based on the Lempel Ziv 78 (LZ78) universal compression algorithm [28] and on probability tree classifiers.", "startOffset": 83, "endOffset": 87}, {"referenceID": 19, "context": "In the next step, the sequence is used for building a LZ87 tree for each training sample with a probabilistic prediction model [26].", "startOffset": 127, "endOffset": 131}, {"referenceID": 20, "context": "algorithm [27] to the streaming world.", "startOffset": 10, "endOffset": 14}, {"referenceID": 22, "context": "In the third stage, the entire features set was clustered using k-means++ [31] (step (3) in Fig.", "startOffset": 74, "endOffset": 78}, {"referenceID": 19, "context": "Finally, we compare our classification results to two different classifiers in Section VI-G, one of which is a na\u0131\u0308ve algorithm we developed and the other based on a malware anomaly detection algorithm [26], [27] which we modified to the streaming world.", "startOffset": 202, "endOffset": 206}, {"referenceID": 20, "context": "Finally, we compare our classification results to two different classifiers in Section VI-G, one of which is a na\u0131\u0308ve algorithm we developed and the other based on a malware anomaly detection algorithm [26], [27] which we modified to the streaming world.", "startOffset": 208, "endOffset": 212}, {"referenceID": 20, "context": "In this section, we describe and compare to two other new classification approaches: a na\u0131\u0308ve bit rate classifier and an algorithm based on a network traffic malware fingerprinting algorithm[27].", "startOffset": 190, "endOffset": 194}, {"referenceID": 20, "context": "[27] 38.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[27] 81.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "TOR traffic morphing may also be a challenge to statistical classification [32].", "startOffset": 75, "endOffset": 79}], "year": 2017, "abstractText": "The increasing popularity of HTTP adaptive video streaming services has dramatically increased bandwidth requirements on operator networks, which attempt to shape their traffic through Deep Packet Inspection (DPI). However, Google and certain content providers have started to encrypt their video services. As a result, operators often encounter difficulties in shaping their encrypted video traffic via DPI. This highlights the need for new traffic classification methods for encrypted HTTP adaptive video streaming to enable smart traffic shaping. These new methods will have to effectively estimate the quality representation layer and playout buffer. We present a new method and show for the first time that video quality representation classification for (YouTube) encrypted HTTP adaptive streaming is possible. We analyze the performance of this classification method with Safari over HTTPS. Based on a large number of offline and online traffic classification experiments, we demonstrate that it can independently classify, in real time, every video segment into one of the quality representation layers with 97.18% average accuracy.", "creator": "LaTeX with hyperref package"}}}