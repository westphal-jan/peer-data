{"id": "1602.02211", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Feb-2016", "title": "Fuzzy Maximum Satisfiability", "abstract": "In this paper, we extend the Maximum Satisfiability (MaxSAT) problem to {\\L}ukasiewicz logic. The MaxSAT problem for a set of formulae {\\Phi} is the problem of finding an assignment to the variables in {\\Phi} that satisfies the maximum number of formulae. Three possible solutions (encodings) are proposed to the new problem: (1) Disjunctive Linear Relations (DLRs), (2) Mixed Integer Linear Programming (MILP) and (3) Weighted Constraint Satisfaction Problem (WCSP). Like its Boolean counterpart, the extended fuzzy MaxSAT will have numerous applications in optimization problems that involve vagueness.", "histories": [["v1", "Sat, 6 Feb 2016 03:57:57 GMT  (10kb)", "http://arxiv.org/abs/1602.02211v1", "10 pages"]], "COMMENTS": "10 pages", "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.CC", "authors": ["mohamed el halaby", "areeg abdalla"], "accepted": false, "id": "1602.02211"}, "pdf": {"name": "1602.02211.pdf", "metadata": {"source": "CRF", "title": "Fuzzy Maximum Satisfiability", "authors": ["Mohamed El Halaby", "Areeg Abdalla"], "emails": ["halaby@sci.cu.edu.eg", "areeg@sci.cu.edu.eg"], "sections": [{"heading": null, "text": "ar Xiv: 160 2.02 211v 1 [cs.L O] 6F eb"}, {"heading": "1 Introduction", "text": "Boolean Satisfaction (SAT) is at the crossroads of logic, graph theory and computer science in general. Therefore, today, more problems are solved by SAT solvers faster than by other means. Many real-life problems are difficult to solve because they present computational challenges. In many of these problems, it is not enough to find a solution, but one that is optimal. These are called optimization problems and often occur in the real world. One of the most effective ways to solve optimization problems is to first model them mathematically or logically and then solve them with an appropriate algorithm.Maximum Satisfaction (MaxSAT) is the optimization version of SAT. In recent years, there has been a growing interest in developing efficient algorithms [18, 19] and translating them into competent solvers that could solve instances from real-world applications [6, 12, 21, 4, 5]. In fact, an annual contest called Maxk Logics SAT is a non-transparent assessment."}, {"heading": "1.1 Boolean Logic and SAT", "text": "A Boolean variable x can take one of two possible values: 1 or 0. A literal l is a variable x or its negation \u00ac x. A disjunction C is a group of r-literals connected by a conjunction. Henceforth, we will refer to a disjunction in a CNF formula as a clause. If a clause consists of m clauses in which each clause Ci is composed of ri-literals, then either a formula containing 0 x-literals can be written, or a formula that is k-CNF if each clause contains exactly k-literals. Sometimes, we consider a CNF formula as a series of xxformuls. xxx."}, {"heading": "1.2 MaxSAT", "text": "The idea behind it is that sometimes all the limitations of a Problems can be satisfied, and we try to satisfy as much as possible. In view of a CNF-formula, SAT asks for an assignment that maximizes the number of satisfying clauses. For example,???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"}, {"heading": "1.3 Fuzzy Logic", "text": "Let X be a non-empty set, a fuzzy set A in X is characterized by its belonging function (\u20ac1,1): X \u2192 (\u20ac0, 1) and \u00b5A (\u20acx) is interpreted as the degree of belonging of the element x in fuzzy set A for each x formula. An assignment (also referred to as an interpretation) is a mapping I: V \u2192 [0, 1], where: \u2022 For each constant c: 0, 1 \u2212 constant from [0, 1] and an n-like binding F for n N. An assignment (also referred to as an interpretation) is a mapping I: V \u2192 [0, 1], where: \u2022 For each constant c: 0 [0, 1], [c] I = c:. \""}, {"heading": "1.3.1 Discretization", "text": "In practice, it is customary to assume a finite number of degrees of truth derived from a setTk = {0, 1 k, 2 k,..., 1} with k-N \u2212 {0}. \u2022 Let L \u00b2 denote the infinitely evaluating Lukasiewicz logic and Lk denote the (k + 1) evaluated version, taking into account only interpretations that assume degrees of truth from Tk. \u2022 For each set of formulas, there is a finite number of degrees of truth d, so \u03a6 in L-1 is satisfactory if it is satisfactory in Ld."}, {"heading": "2 Fuzzy MaxSAT", "text": "Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.2. Definition 2.2. Definition 2.1. Definition 2.1. Definition 2.2. Definition 2.2. Definition 2.2. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.2. Definition 2.2. Definition 2.2. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. Definition 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.2. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1. 2.1."}, {"heading": "3 Encodings", "text": "Before introducing the encodings, it is important to note that the Boolean CNF can be generalized by replacing the Boolean negation with the Lukasiewicz negation and the Boolean disjunction with the strong disjunction.The resulting form ism \u0441i = 1ri-clausal = 1lijand is referred to in [7] as the simple L-clausal form. [7] It has been shown that the satisfaction problem can be solved for any simple L-clausal form in linear time, in contrast to the SAT problem in Boolean logic, which is generally NP-complete. Furthermore, the significance of simple L-clausal forms is limited, i.e. not every Lukasiewicz formula has an equivalent simple L-clausal form. To address this matter, another form has been proposed called the L-clausal form."}, {"heading": "3.1 A Proposed Fuzzy MaxSAT Algorithm for Simple Lclausal forms", "text": "The proposed algorithm takes advantage of the fact that the SAT problem can be solved in linear time for simple L-clauses. Furthermore, it is based on the basic SAT-based technique of the Boolean MaxSAT solution. Let \u03c6 = {C1,..., Cm} be a MaxSAT instance. The following formula is satisfactory if it is are\u03c6k = {C1-b1,..., Cm-bm}, if each Bi, (1 \u2264 i \u2264 m) is a new variable and CNF (\u0445 mi = 1 bi \u2264 k) is the coding of the constraint \u0445 mi = 1 bi \u2264 k to CNF. This constraint is met if throuk has at most k adulterated clauses. There are three ways to start looking for the value of k corresponding to the optimal solution: 1The proof includes the reduction of the Boolean 3SAT to the SAT problem."}, {"heading": "3.2 Into DLRs", "text": "A disjunctive linear relationship (DLR) is an expression P1-1-Q1-Q1-Q1-Qm-Qm, in which each Pi and Qi is a grade one polynomial with rational coefficients over the real value of the variables X = {x1,.., xn} and each \"assignment I: X,\" so that every DLR in D. In 1998, Jonsson and Ba \ufffd ckstro \ufffd m [11] showed that SATDLR NP is complete. Let's decide whether there is an \"assignment I: X,\" so that every DLR in D is satisfied."}, {"heading": "3.3 Into MILP", "text": "The Mixed Integer Linear Program (MILP) includes the minimization of nj = 1 cjxj subject ton = 1aijxj \u2264, (i = 1, 2,.., m) xj \u2265 0, (j = 1,.., n), some of which are xj, (1 \u2264 j \u2264 n) integers and others are real and cj, bi, bi, R Let it be a series of r-formulas {\u03c61,..., \u03c6m}. \u2022 Introduce new binary variables y1,..., (one per formula). \u2022 Replace each formula with the relaxed formula \u0432i \u2192 yi. \u2022 Take the resulting formula of the previous step and replace any occurrence of binary variables y1,..., (one per formula). \u2022 Replace each formula with the relaxing formula \u0432i \u2192 yi. \u2022 Replace any resulting formula of the previous step and any occurrence of binary variables."}, {"heading": "3.4 Into WCSP", "text": "A weighted CSP instance (WCSP) is a triple (X, D, C), where X = {x1,..., xn}, D = {d (x1)..., d (xn)}, and C = {C1,..., Cr} are variables, domains, and constraints. Each Ci-C function is a pair (Si, fi), where Si = {xi1,.., xik} is the scope of constraints, and fi: d (xi1) \u00d7. \u00b7 d (xik) \u2192 N is a cost function that assigns each tuple to its associated weight. An optimal solution for a WCSP instance is a complete mapping to the variables in X, where the sum of the constraints is minimal. \u00b7 The WCSP problem for a WCSP instance is to find an optimal solution for that instance."}, {"heading": "4 Future Work", "text": "We will investigate whether an algorithm for the new MaxSAT problem for simple L-clauses can exploit this fact to polynomize its temporal complexity or not. An interesting alternative definition to blurred MaxSAT is: In Lukasiewicz's logic, find a formula \u03c6 so that [\u03c6] I is maximum. In other words, the new definition requires an assignment that maximizes the degree of truth of \u03c6."}], "references": [{"title": "A max-sat solver with lazy data structures", "author": ["Teresa Alsinet", "Felip Manya", "Jordi Planes"], "venue": "Advances in Artificial Intelligence\u2013IBERAMIA", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "Qmaxsat version", "author": ["Xuanye An", "Miyuki Koshimura", "Hiroshi Fujita", "Ryuzo Hasegawa"], "venue": "Proceedings of the International Workshop on First-Order Theorem Proving,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Sat-based maxsat algorithms", "author": ["Carlos Ans\u00f3tegui", "Maria Luisa Bonet", "Jordi Levy"], "venue": "Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Solving linux upgradeability problems using boolean optimization", "author": ["Josep Argelich", "Daniel Le Berre", "In\u00eas Lynce", "Joao Marques-Silva", "Pascal Rapicault"], "venue": "arXiv preprint arXiv:1007.1021,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Cnf instances from the software package installation problem", "author": ["Josep Argelich", "In\u00eas Lynce"], "venue": "In RCRA Workshop,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Curriculum-based course timetabling with sat and maxsat", "author": ["Roberto A\u015b\u0131n Ach\u00e1", "Robert Nieuwenhuis"], "venue": "Annals of Operations Research,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Finding hard instances of satisfiability in lukasiewicz logics", "author": ["Miquel Bofill", "Felip Manya", "Amanda Vidal", "Mateu Villaret"], "venue": "InMultiple-Valued Logic (ISMVL),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "A two-phase exact algorithm for maxsat and weighted max-sat problems", "author": ["Brian Borchers", "Judith Furman"], "venue": "Journal of Combinatorial Optimization,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1998}, {"title": "Handbook of temporal reasoning in artificial intelligence, volume", "author": ["Michael David Fisher", "Dov M Gabbay", "Lluis Vila"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "On solving the partial max-sat problem", "author": ["Zhaohui Fu", "Sharad Malik"], "venue": "Theory and Applications of Satisfiability Testing-SAT", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}, {"title": "A unifying approach to temporal constraint reasoning", "author": ["Peter Jonsson", "Christer B\u00e4ckstr\u00f6m"], "venue": "Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1998}, {"title": "Cause clue clauses: error localization using maximum satisfiability", "author": ["Manu Jose", "Rupak Majumdar"], "venue": "ACM SIGPLAN Notices,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "A logical approach to efficient max-sat solving", "author": ["Javier Larrosa", "Federico Heras", "Simon de Givry"], "venue": "Artificial Intelligence,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "The sat4j library, release 2.2 system description", "author": ["Daniel Le Berre", "Anne Parrain"], "venue": "Journal on Satisfiability, Boolean Modeling and Computation,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "New inference rules for maxsat", "author": ["Chu Min Li", "Felip Many\u00e0", "Jordi Planes"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Towards more effective unsatisfiabilityimum satisfiability algorithms", "author": ["Joao Marques-Silva", "Vasco Manquinho"], "venue": "In Theory and Applications of Satisfiability Testing\u2013SAT", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "On using unsatisfiability for solving maximum satisfiability", "author": ["Joao Marques-Silva", "Jordi Planes"], "venue": "arXiv preprint arXiv:0712.1097,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2007}, {"title": "Iterative and core-guided maxsat solving: A survey and assessment", "author": ["Antonio Morgado", "Federico Heras", "Mark Liffiton", "Jordi Planes", "Joao Marques-Silva"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2013}, {"title": "Maximum satisfiability using coreguided maxsat resolution", "author": ["Nina Narodytska", "Fahiem Bacchus"], "venue": "In AAAI,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2014}, {"title": "New upper bounds for MaxSat", "author": ["Rolf Niedermeier", "Peter Rossmanith"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1999}, {"title": "Improved design debugging using maximum satisfiability", "author": ["Sean Safarpour", "Hratch Mangassarian", "Andreas Veneris", "Mark H Liffiton", "Karem Sakallah"], "venue": "In Formal Methods in Computer Aided Design, 2007", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "Improving exact algorithms for max-2-sat", "author": ["Haiou Shen", "Hantao Zhang"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2005}, {"title": "Maxsolver: An efficient exact algorithm for (weighted) maximum satisfiability", "author": ["Zhao Xing", "Weixiong Zhang"], "venue": "Artificial Intelligence,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2005}], "referenceMentions": [{"referenceID": 17, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 85, "endOffset": 93}, {"referenceID": 18, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 85, "endOffset": 93}, {"referenceID": 5, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 193, "endOffset": 210}, {"referenceID": 11, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 193, "endOffset": 210}, {"referenceID": 20, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 193, "endOffset": 210}, {"referenceID": 3, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 193, "endOffset": 210}, {"referenceID": 4, "context": "In recent years, there has been a growing interest in developing efficient algorithms[18, 19] and implementing them into competent solvers that could solve instances from real-life applications[6, 12, 21, 4, 5].", "startOffset": 193, "endOffset": 210}, {"referenceID": 7, "context": "Branch and bound algorithms[8]", "startOffset": 27, "endOffset": 30}, {"referenceID": 19, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 0, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 21, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 22, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 14, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 12, "context": "Namely, more efficient data-structures, new branching heuristics, new simplification rules and more accurate lower bounds[20, 1, 22, 23, 15, 13].", "startOffset": 121, "endOffset": 144}, {"referenceID": 9, "context": "SAT-based MaxSAT algorithms[10, 17, 16, 14, 2] are based on iteratively calling a SAT solver.", "startOffset": 27, "endOffset": 46}, {"referenceID": 16, "context": "SAT-based MaxSAT algorithms[10, 17, 16, 14, 2] are based on iteratively calling a SAT solver.", "startOffset": 27, "endOffset": 46}, {"referenceID": 15, "context": "SAT-based MaxSAT algorithms[10, 17, 16, 14, 2] are based on iteratively calling a SAT solver.", "startOffset": 27, "endOffset": 46}, {"referenceID": 13, "context": "SAT-based MaxSAT algorithms[10, 17, 16, 14, 2] are based on iteratively calling a SAT solver.", "startOffset": 27, "endOffset": 46}, {"referenceID": 1, "context": "SAT-based MaxSAT algorithms[10, 17, 16, 14, 2] are based on iteratively calling a SAT solver.", "startOffset": 27, "endOffset": 46}, {"referenceID": 17, "context": "Comprehensive surveys on SAT-based MaxSAT solving can be found in[18, 3].", "startOffset": 65, "endOffset": 72}, {"referenceID": 2, "context": "Comprehensive surveys on SAT-based MaxSAT solving can be found in[18, 3].", "startOffset": 65, "endOffset": 72}, {"referenceID": 0, "context": "3 Fuzzy Logic Let X be a nonempty set, a fuzzy set A in X is characterized by its membership function \u03bcA : X \u2192 [0, 1] and \u03bcA(x) is interpreted as the degree of membership of element x in fuzzy set A for each x \u2208 X .", "startOffset": 111, "endOffset": 117}, {"referenceID": 0, "context": "A = {(x, \u03bcA(x)) | x \u2208 X} A fromula is built from a set of variables V , constants from [0, 1] and an n-ary connective F for n \u2208 N.", "startOffset": 87, "endOffset": 93}, {"referenceID": 0, "context": "An assignment (also called an interpretation)is a mapping I : V \u2192 [0, 1], where: \u2022 For each constant c \u2208 [0, 1], [c]I = c.", "startOffset": 66, "endOffset": 72}, {"referenceID": 0, "context": "An assignment (also called an interpretation)is a mapping I : V \u2192 [0, 1], where: \u2022 For each constant c \u2208 [0, 1], [c]I = c.", "startOffset": 105, "endOffset": 111}, {"referenceID": 6, "context": "and is referred to as simple L-clausal form in[7].", "startOffset": 46, "endOffset": 49}, {"referenceID": 6, "context": "It has been shown[7] that the satisfiability problem for any simple L-clausal form is solvable in linear time, contrary to the SAT problem in Boolean logic which is NP-complete in the general case.", "startOffset": 17, "endOffset": 20}, {"referenceID": 8, "context": ", xn} and each \u25e6i \u2208 {<,\u2264, >,\u2265,=, 6=}, (1 \u2264 i \u2264 m)[9].", "startOffset": 49, "endOffset": 52}, {"referenceID": 10, "context": "In 1998, Jonsson and B\u00e4ckstr\u00f6m[11] showed that SATDLR is NP-complete.", "startOffset": 30, "endOffset": 34}], "year": 2016, "abstractText": "In this paper, we extend the Maximum Satisfiability (MaxSAT) problem to Lukasiewicz logic. The MaxSAT problem for a set of formulae \u03a6 is the problem of finding an assignment to the variables in \u03a6 that satisfies the maximum number of formulae. Three possible solutions (encodings) are proposed to the new problem: (1) Disjunctive Linear Relations (DLRs), (2) Mixed Integer Linear Programming (MILP) and (3) Weighted Constraint Satisfaction Problem (WCSP). Like its Boolean counterpart, the extended fuzzy MaxSAT will have numerous applications in optimization problems that involve vagueness.", "creator": "LaTeX with hyperref package"}}}