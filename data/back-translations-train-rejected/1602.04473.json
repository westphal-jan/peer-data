{"id": "1602.04473", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Feb-2016", "title": "Large-Scale Reasoning with OWL", "abstract": "With the growth of the Semantic Web in size and importance, more and more knowledge is stored in machine-readable formats such as the Web Ontology Language OWL. This paper outlines common approaches for efficient reasoning on large-scale data consisting of billions ($10^9$) of triples. Therefore, OWL and its sublanguages, as well as forward and backward chaining techniques are presented. The WebPIE reasoner is discussed in detail as an example for forward chaining using MapReduce for materialisation. Moreover, the QueryPIE reasoner is presented as a backward chaining/hybrid approach which uses query rewriting. Furthermore, an overview on other reasoners is given such as OWLIM and TrOWL.", "histories": [["v1", "Sun, 14 Feb 2016 16:18:32 GMT  (291kb,D)", "http://arxiv.org/abs/1602.04473v1", "Part of the \"Knowledge Representation in the Semantic Web\" Seminar by Matthias Thimm, Koblenz 2015"]], "COMMENTS": "Part of the \"Knowledge Representation in the Semantic Web\" Seminar by Matthias Thimm, Koblenz 2015", "reviews": [], "SUBJECTS": "cs.AI cs.DB", "authors": ["michael ruster"], "accepted": false, "id": "1602.04473"}, "pdf": {"name": "1602.04473.pdf", "metadata": {"source": "META", "title": "Large-Scale Reasoning with OWL", "authors": ["Michael Ruster"], "emails": [], "sections": [{"heading": null, "text": "Great reflection with OWLMichael RusterUniversity Koblenz-Landau, Campus Koblenz"}, {"heading": "1 Introduction", "text": "In recent years, the semantic web has grown in size and importance, with more and more knowledge stored in machine-readable formats such as RDFS or OWL. For many applications, knowledge extraction and reasoning is one of the core requirements. Argumentation can logically derive knowledge that is not explicitly present in the data. Due to the complexity and scope of knowledge in the semantic web, this can easily become a difficult task. Bottlenecks are the time needed to process a query as well as the memory required for arguing. This paper outlines common approaches to efficient reasoning on large-format data. It therefore presents techniques implemented in argumentators that are capable of processing billions (109) of triples. The paper focuses on OWL because it is widely used as a knowledge representation ontology language on the semantic web and because it is rich in features. First, a brief introduction to semantic web strategies is given."}, {"heading": "2 Semantic Web and Language Features", "text": "In fact, it is the case that most of us are in a position to put ourselves in another world, in which they get lost in another world, in which they get lost in another world, in which they get lost in another world, in which they get lost in another world, in which they get lost in another world, in which they get lost in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live in which they live, in which they"}, {"heading": "3. OWL AND ITS SUBLANGUAGES 3", "text": "It remains unclear how much more credible the newspaper is in comparison to the blogger. Nevertheless, the information from the newspaper article can be seen as truth and not just as information closer to the actual truth, which allows for modelling incomplete knowledge with the knowledge that captures typical states and is defeated by more specific rules. Thus, if changes in knowledge expressed by broken rules occur, these broken rules could be added immediately without requiring further processing [11]. It depends on the ontology developers whether they see a need for this logic to describe their data. In some contexts, they may be useful, but they always increase the complexity of the reasoning process. In the next section, sublanguages of OWL are discussed to illustrate possible expressions that are already provided by OWL without further enhancements."}, {"heading": "3 OWL and its Sublanguages", "text": "This section gives a quick introduction to OWL and its sublanguages in terms of their characteristics. The purpose of this section is to illustrate that the choice of an ontology language is an important decision for the argumentation on big data. To this end, the complexities of the argumentation of most languages are explained, their main characteristics are explained, and therefore it should be understood why some languages are often used for this kind of argumentation. Web Ontology Language (OWL for short) is a specification of the W3C with the purpose of presenting knowledge in a machine-processable way. In the OWL 1 Web Ontology Language Guide [33], the W3C explains that OWL 1 can be divided into its three sublanguages OWL 1 Full, OWL 1 Lite and OWL 1 DL. These sublanguages themselves can be subdivided and differ in their expressiveness, with OWL 1 Full being the most distinctive."}, {"heading": "3. OWL AND ITS SUBLANGUAGES 4", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 5", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4 Approaches for Large-Scale OWL Reasoning", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 6", "text": "A class Z and X entity. Next, it can be compared to the precursors of the example rules and thus be considered part of class Y. [32] It divides a goal into smaller sub-goals and tries to solve them. By matching rules for real consequences and then adopting real precursors, the reasons for re-concatenating data that match the original goal are concatenated backwards. Equation 4 also illustrates an application concatenated backwards, assuming a class Y entity. [32] Section 4.1 is a common way to use forward concatenation for this task, also presenting a typical model of programming and the approaches to semantic web reasoning and what advantages it has over the other."}, {"heading": "4.1 Materialisation", "text": "Materialization is a forward-looking approach [21], based on the idea of calculating all conclusions before thinking and storing them for later queries [32]. In this section, after discussing the main advantages and disadvantages of this technique, a common programming model called MapReduce is explained. In addition, a concept of reason that uses MapReduce is presented. Calculation of all conclusions allows a quick response to the query, as it is comparable to looking up in a database. On the other hand, the initial materialization process is time-consuming and memory-consuming. As an example, sameAs is one of the most commonly found axioms according to Hogan et al. [14] It is used to express equivalent individuals. If a concept of reason were effectively implemented, a complete closure in O (n2) would be an effective reduction of the analogy. On a corpus containing 33 052 equivalent individuals, Hogan et al. [16] represents an effective reduction of the analogy."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 7", "text": "The process is divided into three successive steps, as described by Dean and Ghemawat: 1. Map is the first stage and describes the act of pre-processing input data as a list of key-value pairs; the result of each key-value pair processed is immediately output; thus, this process can be paralleled to speed up data processing; its method signature can be specified as: Map (k1, v1) \u2192 List (k2, v2); the different indexes express potentially different data types; 2. Shuffle captures all results of the first phase and groups them by their key; therefore, the data types remain the same; and a method signature can be specified as: Shuffle (list (k2, v2))."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 8", "text": "The reason for this is that the derived knowledge is only part of the antecedent anew.MapReduce This is not a trivial task that needs only one run to put the rules into practice. There are several difficulties in implementing this approach in a way that relatively easily penetrates into space and time."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 9", "text": "This means that it would be a kind of underclass of this super-class. (This means that it would be an underclass of this super-class. (This means that it would be an underclass that respects the class hierarchy.) This means that it would be an underclass. (This means that it would be an underclass of this super-class. (This means that it would be an underclass.) This means that it would be an underclass. (This means that it would be an underclass.) This means that it would be an underclass. (This means that there would be an underclass.) It is an underclass. (This means that there will be an underclass.)"}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 10", "text": "Equation 5 shows such a rule from the OWL pD * rule.v owl: sameAs w, w owl: sameAs u \u21d2 v owl: sameAs u (5) There, appropriate instances must be looked up in the ABox for both triples in the prehistory. Again, the authors propose a solution that concretely corresponds to the affected OWL pD * rules. However, they also describe a common technique for reducing the overhead caused by rules taking into account the owl: same as axiom as in Equation 5. The input is modified so that synonymous instances are replaced by a unique identifier that each represents an entire class of equivalents [e.g. 40, 5]. As a result, the required space and computation time are drastically reduced. Although few bottlenecks have been highlighted, it should be clear that the application of mapce to most complex problems that occur there is due to a lack of efficient solutions."}, {"heading": "4.2 Backward Chaining", "text": "Backward concatenation has two advantages over materialization as described by Urbani et al. [44]. Firstly, there is no need for a precalculation due to the backward concatenation, nor, in general, is there a need to calculate a complete closure, since any reasoning has to be done exclusively to the extent necessary to answer the query. Firstly, an application that uses only backward concatenation can be used immediately without any previous time and space-consuming calculation. Secondly, the results of a query take into account current data modifications. That is, when changes to the data occur, such as deletions or additions, they are immediately available through the reasoning that is done by query rewriting. Furthermore, this means that after changes to the data there is no need for a computerized and memory-intensive recalculation."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 11", "text": "OBDA describes the idea of storing ABoxes in traditional databases such as relational database management systems while allowing the use of ontological constraints [12]. Here, OWL 2 QL is often the preferred language, since it was implicitly designed with OBDA as the intended purpose [26, 20]. With OBDA, data access via ontology is offered as an intermediate layer, so that the queries are independent of actual data storage [45]. This allows uniform, sealed access to different data sources. Therefore, scalable, OBDA-able reasoning can be of particular interest for semantic web reasoning due to the high data divergence. Despite the existing potential, there are so far few argumentators that rewrite queries and scale to billions of triples. In particular, there is a lack of argumentators that focus on implementing the concept of OBDA and make use of this scalability."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 12", "text": "In this case, however, it is not necessary for the sequences of equations 6 and 7 to match the input queries."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 13", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "1 reason ( pattern ) :", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2 // Get r u l e s where the query pa t t e rn i s more s p e c i f i c \u2190\u21a9", "text": "\u2192 as a consequence of ru l e's: 3 rules app l i c ab l eRu l e s = r u l e S e t. a p l i c a b l e (pattern)"}, {"heading": "4 Resu l t s r e s u l t s = {}", "text": "In the eeisn eeisrcnlhsrteeaJnh nvo edn eeisrcnlhsrteeaeVnlhsrtee\u00fccnh hacu ide eeisrcnlhsrtee\u00fccnlhSe ni red eeisrdteeSn ni edn eeisrdteeWnln ni rde eeisrdteeu ni der eeisrdteeBnlrtee\u00fcn nlrf\u00fc ide eeisrcehncnlrteeaeWnn.nlrteeeiD \"s,\" so so so tlrf\u00fc ide eeisrcehnlrteeWnlrteeWnlrteeu, i so tcaht, \"so he tasts."}, {"heading": "4. APPROACHES FOR LARGE-SCALE OWL REASONING 14", "text": "QueryPIE will probably be the first reasonable scaler to scale to billions of triples at runtime [43]."}, {"heading": "4.3 Other Reasoners", "text": "In fact, the fact is that we are able to assert ourselves, that we are able, we are able, we are able to hide ourselves, \"he said."}, {"heading": "5. CONCLUSION 15", "text": "Virtuoso Universal Server4 is a web server and triple storage. Moreover, it is an OWL proponent that allows both backward and forward concatenation [32, 37], but its support is limited to a subset of OWL 2 RL [43]. Furthermore, apart from an RDF proponent implementation [10], there does not appear to be any implementations aimed at web triples. Apache Jena5 is a framework written in Java to support the development of semantic web applications. The included OWL proponent supports forward and backward concatenation, as well as a hybrid between the two [32]. However, throughout the research for this essay, no implementation could be found that uses the Jena5 proponent to enable the construction of billions of triples. Another proponent is F-OWL [47], which primarily uses backward concatenation and a hybrid between the two."}, {"heading": "5 Conclusion", "text": "In essence, the approaches do not differ from conventional reasoning methods. However, performance optimization is crucial. Furthermore, the choice of ontological language can have a strong impact on the complexity of the reasoning. OWL pD * and OWL 2 RL are often used for forward concatenation approaches, whereas OWL 2 QL is mainly used in the reverse concatenation of arguments. Furthermore, when arguing on the Semantic Web, extensions of languages may be of interest. For example, the use of defective logic can enable reasoning with poor quality data from different sources. Likewise, OBDA can be a suitable technology for working and arguing on Semantic Web Data.Reasoning on large knowledge bases modeled in OWL is still rarely possible with the help of backward concatenation. Instead, materialization alone is the most commonly used approach."}], "references": [{"title": "OWL Web Ontology Language Overview", "author": ["D.L. McGuinnes", "F. van Harmelen"], "venue": "W3c Recommendation", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2004}, {"title": "OWL 2 Web Ontology Language: Profiles (Second Edition)", "author": ["B. Motik", "B.C. Grau", "I. Horrocks", "Z. Wu", "A. Fokoue", "C. Lutz"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2012}, {"title": "Defeasible logic. In: Web knowledge management and decision support, pp. 151\u2013169", "author": ["D. Nute"], "venue": "http://link.springer.com/chapter/", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2003}, {"title": "Reasoning the FMA Ontologies with TrOWL", "author": ["J.Z. Pan", "Y. Ren", "N. Jekjantuk", "J. Garcia"], "venue": "ORE. pp", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2013}, {"title": "OWL Web Ontology Language Semantics and Abstract Syntax", "author": ["P.F. Patel-Schneider", "P. Hayes", "I. Horrocks"], "venue": "W3c Recommendation", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2004}, {"title": "Attributive concept descriptions with complements", "author": ["M. Schmidt-Schau\u00df", "G. Smolka"], "venue": "Artificial intelligence 48(1),", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1991}, {"title": "The semantic web revisited", "author": ["N. Shadbolt", "W. Hall", "T. Berners-Lee"], "venue": "Intelligent Systems, IEEE 21(3),", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2006}, {"title": "A Scalable Backward Chaining-based Reasoner for a Semantic Web", "author": ["H. Shi", "K. Maly", "S. Zeil"], "venue": "International Journal On Advances in Intelligent Systems 7(1", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2014}, {"title": "Fuzzy OWL: Uncertainty and the semantic web", "author": ["G. Stoilos", "G.B. Stamou", "V. Tzouvaras", "J.Z. Pan", "I. Horrocks"], "venue": "OWLED", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2005}, {"title": "Scalable nonmonotonic reasoning over RDF data using MapReduce", "author": ["I. Tachmazidis", "G. Antoniou", "G. Flouris", "S. Kotoulas"], "venue": "Proceedings of the Joint Workshop on Scalable and High-Performance Semantic Web Systems. pp", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2012}, {"title": "Large-scale parallel stratified defeasible reasoning (2012), http://eprints", "author": ["I. Tachmazidis", "G. Antoniou", "G. Flouris", "S. Kotoulas", "T.L. McCluskey"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2012}, {"title": "TrOWL: Tractable OWL 2 reasoning infrastructure", "author": ["E. Thomas", "J.Z. Pan", "Y. Ren"], "venue": "The Semantic Web: Research and Applications,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2010}, {"title": "Scalable Distributed RDFS/OWL Reasoning using MapReduce", "author": ["J. Urbani"], "venue": "Master thesis,", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2009}, {"title": "OWL reasoning with WebPIE: calculating the closure of 100 billion triples", "author": ["J. Urbani", "S. Kotoulas", "J. Maassen", "F. Van Harmelen", "H. Bal"], "venue": "The Semantic Web: Research and Applications,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2010}, {"title": "WebPIE: A Web-scale parallel inference engine using MapReduce", "author": ["J. Urbani", "S. Kotoulas", "J. Maassen", "F. Van Harmelen", "H. Bal"], "venue": "Web Semantics: Science, Services and Agents on the World Wide Web 10,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2012}, {"title": "Scalable distributed reasoning using MapReduce", "author": ["J. Urbani", "S. Kotoulas", "E. Oren", "F. Van Harmelen"], "venue": "http://link.springer.com/", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2009}, {"title": "Hybrid reasoning on OWL RL", "author": ["J. Urbani", "R. Piro", "F. van Harmelen", "H. Bal"], "venue": "Semantic Web", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2014}, {"title": "QueryPIE: Backward reasoning for OWL horst over very large knowledge bases", "author": ["J. Urbani", "F. Van Harmelen", "S. Schlobach", "H. Bal"], "venue": "The Semantic Web\u2013ISWC", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2011}, {"title": "Rules and ontology based data access", "author": ["G. Xiao", "M. Rezk", "M. Rod\u0155\u0131guez-Muro", "D. Calvanese"], "venue": "Web Reasoning and Rule Systems,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2014}, {"title": "Fuzzy sets. Information and Control", "author": ["L.A. Zadeh"], "venue": "(Jun", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 1965}, {"title": "F-owl: An inference engine for semantic web. In: Formal Approaches to Agent-Based Systems, pp. 238\u2013248", "author": ["Y. Zou", "T. Finin", "H. Chen"], "venue": null, "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2005}], "referenceMentions": [], "year": 2016, "abstractText": "In recent years, the Semantic Web has grown in size and importance. More and more knowledge is stored in machine-readable formats like RDFS or OWL. For many applications, knowledge extraction and reasoning is one of the core requirements. Through reasoning, knowledge can be logically derived that is not explicitly present in the data. Due to the complexity and amount of knowledge on the Semantic Web, this can easily become a difficult task. The bottlenecks are the time used for processing a query as well as the memory needed while reasoning. This paper outlines common approaches for efficient reasoning on large-scale data. It therefore presents techniques implemented in reasoners, which are able to process billions (10) of triples. The paper focuses on OWL because it is widely used as a knowledge representation ontology language on the Semantic Web and because it is rich in features. First of all, a brief introduction to the Semantic Web is given in Section 2. For this, common properties of it are highlighted which may influence the choice of language selection for knowledge representation. Subsequently, Section 3 will give an overview of OWL and some of its sublanguages. The choice of sublanguages is shortly explained based on the requirements of modelling knowledge on the Semantic Web. Section 4 illustrates two main techniques for large-scale reasoning. Differences between the approaches are being highlighted. Furthermore, for both techniques, one example reasoner is presented together with some optimisation strategies they implement. Finally, Section 5 summarises this paper.", "creator": "LaTeX with hyperref package"}}}