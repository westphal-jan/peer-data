{"id": "1602.05705", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Feb-2016", "title": "Applying Boolean discrete methods in the production of a real-valued probabilistic programming model", "abstract": "In this paper we explore the application of some notable Boolean methods, namely the Disjunctive Normal Form representation of logic table expansions, and apply them to a real-valued logic model which utilizes quantities on the range [0,1] to produce a probabilistic programming of a game character's logic in mathematical form.", "histories": [["v1", "Thu, 18 Feb 2016 07:42:00 GMT  (390kb)", "http://arxiv.org/abs/1602.05705v1", "14 pages"]], "COMMENTS": "14 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jonathan darren nix"], "accepted": false, "id": "1602.05705"}, "pdf": {"name": "1602.05705.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "XV.: 160. 2.05. 705v. 1. [c.A.] 1. 8Fg. B20. Content Content Content Content Content, Content, Content, Content, Content, Content, Content, Content, Content, Content, Content, Content, Content, Content."}, {"heading": "1 Introduction", "text": "Let's start by looking at the set S of all functions of the form f: X \u2192 Y and g: X, Y \u2192 Z, where each X, Y and Z are individual bits of the set {0,1}. Then we have the set of functions as shown in tables 1 and 2, which we can call George Boole Logical Operators, where all such operators of the form x or x y can be interpreted as functions, e.g. (x), or (x, y), and vice versa. If we can call the variable X or the tuple (X, Y), which we call Boolean variables, we can list any of their possible values, and then define in the columns any function that can exist. From these tables we select the functions f3, g2, g8, and g10, which represent the definitions of the boolean NONOT, NONONONOT, NONOX, NOX, and XNOR operators of the logic of x, and so they are displayed in the table."}, {"heading": "2 Definitions of terms", "text}, {"heading": "3 Logic Tables", "text": "We define logic tables in this paper by definition 3.1. We can imagine that a logic table accepts certain inputs I = {i0, i1, i2,..., ii}, assigning a logical value to each element of set I. Then the elements in set I are implicitly interpreted to have a subjective meaning (e.g. health, shields, distance, etc.), and so set I represents a specific situation within which the logic table is able to produce a certain output O, which is itself a logical value. Like the input values, the output value also has a subjective meaning, which can be interpreted either as a calculation or as a consideration of logic, so that the logic table can output the answer to a logical question. Definition 3.1 A \"logic table\" consists of: 1. The set I of inputs {i0, i1, i2,..., ii} where each element of a logical table} is a specific value. If we assign a specific value to an element {i1, ii}, we assign it to a specific situation."}, {"heading": "4 Disjunctive Normal Form (DNF)", "text": "In fact, it is not that we are in a position to sow seeds, to go in search of a solution that will enable us to go in search of a solution that will enable us, that will enable us to find a solution that will enable us, that will enable us to find a solution that will enable us to find a solution, that will enable us to find a solution that will enable us to find a solution and that will enable us to find a solution that will enable us to find a solution that will enable us to find a solution that will enable us to find a solution that will enable us to find a solution that will enable us to find a solution."}, {"heading": "O1 = (NOT(X) AND Y AND Z) OR (X AND NOT(Y) AND Z) OR (X AND Y AND NOT(Z))", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "OR (X AND Y AND Z))", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "O2 = (NOT(X) AND NOT(Y) AND Z) OR (NOT(X) AND Y AND NOT(Z)) OR (X AND NOT(Y) AND NOT(Z)) OR (X AND Y AND Z)", "text": "with extended formulas according to algorithm 2 as follows:"}, {"heading": "O1 = (XNOR(X,0) AND XNOR(Y,1) AND XNOR(Z,1)) OR (XNOR(X,1) AND XNOR(Y,0)", "text": "AND XNOR (Z, 1)) OR (XNOR (X, 1) AND XNOR (Y, 1) AND XNOR (Z, 0)) OR (XNOR (X, 1) AND XNOR (Y, 1) AND XNOR (Z, 1))"}, {"heading": "O2 = (XNOR(X,0) AND XNOR(Y,0) AND XNOR(Z,1)) OR (XNOR(X,0) AND XNOR(Y,1)", "text": "AND XNOR (Z, 0)) OR (XNOR (X, 1) AND XNOR (Y, 0) AND XNOR (Z, 0)) OR (XNOR (X, 1) AND XNOR (Y, 1) AND XNOR (Z, 1))"}, {"heading": "5 Extensions to continuous logic", "text": "We find continuous mathematical definitions for classical Boolean operators that remain relatively unchanged from history, with the definition of NOT, AND, and OR going as far back as [1] and [2].When selecting continuous mathematical functions that do NOT, AND, OR, and XNOR, we can then search for each of these functions that produce the same {0.1} output values for each given {0.1} input value, and consider alternatives to the definitions here as having an effect on the values produced between 0 and 1. We analyze and observe the results, particularly the following: 3We have found that X-Y = min (x + y |, 1) behaves, more accurately, and less warped than x \u2212 xy.Definition 5.1 X NOT 0 1 0 1 0 1 0 = (1 \u2212 X) The complementarity of a logical quantity produces a representation of its lack of participation in a whole truth."}, {"heading": "6 Provision for continuous outputs", "text": "Theorem 6.1 On each term of the equation in solution 5.5, where we have a value in the range [0,1] Q = = Q, we can apply a multiplier Z, the terms of the form Z * (EQ, Y) *... The resulting transformation goes from a logical value in the range [0,1] to a value that becomes Z, to the extent to which X = = Y, or {Z, Z,} to the extent to which {X, X,...}.Proof: If EQ (X, Y) is whether X = Y by definition 5.4, then Z * EQ (X, Y) is Z to the extent to which X = = Y.Example 6.2We apply a multiplier to each term and observe that the output expresses the values represented in the multipliers."}, {"heading": "7 Provision for unknowns", "text": "We have observed what we could call Boolean values, e.g. {x: x: x: 0, 1}, and Continuous values, e.g. {z: z: z [0,1]}, and we next provide support for additional data defined as follows. Specifically, we produce algorithm 4 to allow the special value UNKNOWN, which allows the machine to be configured so that no complete connection of all inputs to the outputs is necessary. Algorithm 4 create a \"continuity formula\" equation from the logical table using equation w / provision for the ignorant 1: Faced with a logic table {I, O, M} 2: Leave Equation = 0,0 3: for each line j in M 4: if Oj 6 = 0,0 then 5: Leave Term = Oj 6: for each input i, I do 7: if mi, j is NOT KNOWN, then 8: Term = (Term, EQ, then let ij: End of Term: 5: End of Term: 11)"}, {"heading": "8 Provision for state machines", "text": "We provide the EQ function in algorithm 5 with support for crisp state values, which we can simply describe as all these numbered values, e.g. {n: n: n \u30fb N}. We can then configure the logic table to recognize and output state values. Next, we will show examples. Algorithm 5 EQ with support for \"state values\" 1: Give X, Y 2: If X and Y are state values, then 3: Return (X = = Y) 4: otherwise 5: Return 1.0 \u2212 | X \u2212 Y | 6: End if"}, {"heading": "9 Examples", "text": "eSi's, he says, \"is like being able to change the world, to change the world.\""}, {"heading": "10 Conclusions", "text": "This paper summarizes a process by which logical machines can be constructed and provides a basis for further analysis that may appear in subsequent publications. Acknowledgements: The views and conclusions contained therein are those of the author and should not be interpreted as necessarily representing the official guidelines or recommendations of the Art Institute of Portland, neither express nor implied."}], "references": [{"title": "An Investigation of the Laws of Thought", "author": ["G. Boole"], "venue": "Newburyport: Dover Publications", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "Fuzzy control systems", "author": ["A. Kandel", "G. Langholz"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1994}, {"title": "Logical Networks. Classical and fuzzy concepts in mathematical logic and applications", "author": ["M. Reghi\u015f", "E. Roventa"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1998}, {"title": "Digital logic design. Oxford: Newnes", "author": ["B. Holdsworth", "R.C. Woods"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "Analysis of Boolean functions", "author": ["R. O\u2019Donnell"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "Abstract In this paper we explore the application of some notable Boolean methods, namely the Disjunctive Normal Form representation of logic table expansions, and apply them to a real-valued logic model which utilizes quantities on the range [0,1] to produce a probabilistic programming of a game character\u2019s logic in mathematical form.", "startOffset": 243, "endOffset": 248}, {"referenceID": 3, "context": "From these tables we select the functions f3, g2, g8, and g10 which satisfy the definitions of the Boolean NOT, AND, OR, and XNOR operators from [6], and so they are depicted in Table 3.", "startOffset": 145, "endOffset": 148}, {"referenceID": 2, "context": "We accomplish that through an analysis of world values, logic values, logic questions, logic tables and their expansion to a Disjunctive Normal Form (DNF) equation which computes the result designed by the logic table using the methods from [5] and [7].", "startOffset": 241, "endOffset": 244}, {"referenceID": 4, "context": "We accomplish that through an analysis of world values, logic values, logic questions, logic tables and their expansion to a Disjunctive Normal Form (DNF) equation which computes the result designed by the logic table using the methods from [5] and [7].", "startOffset": 249, "endOffset": 252}, {"referenceID": 0, "context": "logic values from the set { 0, 1 }), and an extension to a non-discrete continuous logic space on the range [0, 1] is proposed, its methods utilizing logic tables are shown, and several examples and code samples are provided.", "startOffset": 108, "endOffset": 114}, {"referenceID": 0, "context": "A value from the range [0,1], e.", "startOffset": 23, "endOffset": 28}, {"referenceID": 1, "context": "3 A \u201cfuzzification\u201d after [4] is a mapping W \u2192 Z, e.", "startOffset": 26, "endOffset": 29}, {"referenceID": 0, "context": "A question answerable by a value from the range [0,1], e.", "startOffset": 48, "endOffset": 53}, {"referenceID": 1, "context": "5 A \u201ccontemplation\u201d in this paper is a Fuzzy Control System process after [4], as follows:", "startOffset": 74, "endOffset": 77}, {"referenceID": 2, "context": "4 Disjunctive Normal Form (DNF) We can make use of the AND, OR, and NOT operators by applying an established technique from [5] whereby an I \u2192 O mapping is listed in a logic table, and a formula in terms of AND, OR, We then use XNOR instead of NOT in order to compose the DNF equation in a more customizable form.", "startOffset": 124, "endOffset": 127}, {"referenceID": 4, "context": "The equation produced is said to be in Disjunctive Normal Form (DNF) after [7].", "startOffset": 75, "endOffset": 78}, {"referenceID": 0, "context": "We find continuous mathematical definitions for classical Boolean operators remaining relatively unchanged from history, with the definition of NOT, AND, and OR going as far back as [1] and [2].", "startOffset": 182, "endOffset": 185}, {"referenceID": 0, "context": "3 X Y OR 0 0 0 0 1 1 1 0 1 1 1 1 = X \u2295 Y = x+ y : [0,1] The capped addition of two logical quantities produces a depiction of an independent contribution of each quantity toward a whole truth.", "startOffset": 50, "endOffset": 55}, {"referenceID": 0, "context": "Where the operator \u2295 denoted here is addition restricted to the range [0,1], the XNOR function is labeled EQ for clarity, and the operator |x| used in Definition 5.", "startOffset": 70, "endOffset": 75}, {"referenceID": 0, "context": "We next apply a trivial arithmetic operation to cause each term of the equations emitted by Algorithm 2 to support arbitrary row outputs which can be configured to be in the range [0,1].", "startOffset": 180, "endOffset": 185}, {"referenceID": 0, "context": "5, where we have a value on the range [0,1], we may apply a multiplier Z, producing terms of the form Z*(EQ(X,Y)*.", "startOffset": 38, "endOffset": 43}, {"referenceID": 0, "context": "The resulting transformation is from a logical value on the range [0,1] to a value that becomes Z to the extent that X==Y, or { Z,Z,.", "startOffset": 66, "endOffset": 71}, {"referenceID": 0, "context": ", ii} of arbitrary input values on the range [0,1].", "startOffset": 45, "endOffset": 50}, {"referenceID": 0, "context": ",Mi,j} of arbitrary matrix values on the range [0,1].", "startOffset": 47, "endOffset": 52}, {"referenceID": 0, "context": ", Oj} of arbitrary output values on the range [0,1].", "startOffset": 46, "endOffset": 51}, {"referenceID": 0, "context": "{ z : z \u2208[0,1] }, and we next provision with support for additional data as defined as follows.", "startOffset": 9, "endOffset": 14}, {"referenceID": 1, "context": "In particular we are depicting a Fuzzy Control System process as in [4].", "startOffset": 68, "endOffset": 71}, {"referenceID": 0, "context": "Our next step is to apply a normalization of the values from W into the character\u2019s [0,1] logic space.", "startOffset": 84, "endOffset": 89}, {"referenceID": 1, "context": "This step is called the fuzzification step after [4].", "startOffset": 49, "endOffset": 52}, {"referenceID": 0, "context": "These are continuous logic values on the range [0,1] and represent continuous Boolean logic (to distinguish it from discrete Boolean logic).", "startOffset": 47, "endOffset": 52}], "year": 2016, "abstractText": "In this paper we explore the application of some notable Boolean methods, namely the Disjunctive Normal Form representation of logic table expansions, and apply them to a real-valued logic model which utilizes quantities on the range [0,1] to produce a probabilistic programming of a game character\u2019s logic in mathematical form.", "creator": "LaTeX with hyperref package"}}}