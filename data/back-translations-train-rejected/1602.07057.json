{"id": "1602.07057", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Feb-2016", "title": "Finding Needle in a Million Metrics: Anomaly Detection in a Large-scale Computational Advertising Platform", "abstract": "Online media offers opportunities to marketers to deliver brand messages to a large audience. Advertising technology platforms enables the advertisers to find the proper group of audiences and deliver ad impressions to them in real time. The recent growth of the real time bidding has posed a significant challenge on monitoring such a complicated system. With so many components we need a reliable system that detects the possible changes in the system and alerts the engineering team. In this paper we describe the mechanism that we invented for recovering the representative metrics and detecting the change in their behavior. We show that this mechanism is able to detect the possible problems in time by describing some incident cases.", "histories": [["v1", "Tue, 23 Feb 2016 07:07:26 GMT  (528kb,D)", "http://arxiv.org/abs/1602.07057v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CY cs.DC", "authors": ["bowen zhou", "shahriar shariat"], "accepted": false, "id": "1602.07057"}, "pdf": {"name": "1602.07057.pdf", "metadata": {"source": "CRF", "title": "Finding Needle in a Million Metrics: Anomaly Detection in a Large-scale Computational Advertising Platform", "authors": ["Bowen Zhou", "Shahriar Shariat"], "emails": ["bzhou@turn.com", "sshariat@turn.com"], "sections": [{"heading": null, "text": "CCS concepts \u2022 information systems \u2192 computer-aided advertising; keywords detection of anomalies, detection of change points, computer-aided advertising"}, {"heading": "1. INTRODUCTION", "text": "In fact, most of them are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "2. BACKGROUND", "text": "A Demand Side Platform (DSP) manages multiple advertisers \"marketing campaigns at the same time by identifying the target audience that meets campaign requirements and making real-time bidding decisions on behalf of advertisers to get the\" best \"price. As a result, many advertisers have been forced to use DSPs to deliver their brand messages on a large scale to the right audience. On the other hand, more and more users around the world are using the Internet to access the information on a daily basis. As a result, more advertising budgets along with more traffic have been a major challenge for DSPs to scale and maintain service quality. In this section, we briefly describe the relevant background to the overall design of a DSP and the overall monitoring system to create the conditions for our proposed framework."}, {"heading": "2.1 Demand Side Platform", "text": "Figure 1 shows the general architecture of a demand-side platform. The exchange (or offer-side platform) submits a bid request that describes the inventory by specifying the URL, the location of the ad, the acceptable ad format, etc., and, if available, a user ID. The request is received by the presentation server, where it is decrypted and enhanced by a user profile extracted from a profile server based on the provided user ID. This decrypted message, sometimes called adCall, is then forwarded to an ad server. The ad server receives the adCall, the set of ads and their budget, and determines the group of ads that are qualified to provide for the inventory. For each qualified ad, an offer is estimated that quantifies the value of the inventory of advertisers for that specific ad."}, {"heading": "2.2 Monitoring", "text": "There are usually two sources of error: i) internal and ii) external. Internal: An error in the most recent version is probably the most common internal problem. Despite extensive testing, it is still possible that a faulty code is used in production, which can cause immediate system crashes, or it could only cause a series of campaigns of minor concern. External: A DSP depends on its exchange partners. If they do not provide robust and reliable traffic, the performance of a DSP can be severely impaired. Also, many advertisers want to use third-party or first-party data. An advertiser could use its own marketing data to reach the right audience. In this case, the DSP needs to take that data and use it during ad placement. Another example is when an advertiser wants to use ads offered by a third-party."}, {"heading": "2.3 Goals", "text": "The goal of our anomaly detection system is to issue a warning as soon as the DSP does not work as expected, and in time so that engineers can investigate and fix the problems before significant damage is caused. \u2022 The measurement itself must be as informative as possible, which means that once the alarm is triggered, we must have a quick way to isolate the cause of the fault. \u2022 The alarm should be reasonably accurate. As we have said before, the warnings generated on the final campaign performance metrics are considered a high priority, so it is important that we have a reliable and accurate mechanism for triggering them. \u2022 We also do not want to miss an incident and therefore need the detection algorithm to have a reasonable detection rate. In fact, we would prefer a few false alarms in order to increase the detection rate. \u2022 The alarms should be triggered within a reasonable time, typically a few hours after an event occurs."}, {"heading": "3. DESIGN", "text": "Millions of metrics are constantly generated for all campaigns running on the Turn platform, each of which needs to be monitored and analyzed in real time to identify abnormal behaviors, as system problems can occur at any part of the platform. Overhead could easily bring the platform to its knees, especially given the requirements for latency of less than 100 milliseconds imposed on alerts by ad exchanges. In this section, we introduce the design of our anomaly detection system, which can efficiently sift through millions of metrics to find abnormal behaviors within a reasonable time span. The key idea of our design is to apply filtering and aggregation to the metrics before executing the anomaly detection algorithm against the resulting data of a much smaller set. As illustrated in Figure 2, the workflow of the anomaly detection system consists of four steps: (a) the identification of stable campaigns by the overall set-up and behavioral system (the aggregation) of the campaigns (the Alien)."}, {"heading": "3.1 Stable Campaign Identification", "text": "Considering a metric, we regularly scan all campaigns and select the appropriate campaigns to include (or exclude) them in Sstable. Specifically, all campaigns are included in Sstable at the beginning, which is then trimmed in detail by a two-step campaign behavior in the section. However, the selection of stable campaigns is refreshed every hour and stored in memory by the control server.3.1.1 Campaign setup During the first step, the configurations of all campaigns are reviewed according to a set of predefined rules presented in Table 1. Campaigns that fail each of these tests in Table 1 are removed from Sstable. The checklist is determined primarily on the basis of our experience of coordinating numerous campaigns. The anomalous detection system only considers US dollar-based campaigns because the campaigns represent a sufficiently large portion of the system running on this currency. Furthermore, the mixing of currencies will add to the already significant noise of the system."}, {"heading": "3.2 Change Metric Generation", "text": "Based on a set of stable Sstable campaigns, we split the stable campaigns into clusters and aggregate the raw data in each cluster. Metric aggregation is done via selected campaign clusters, so the anomaly detection system can cover different parts of the platform by monitoring the aggregated metrics. Campaigns are clustered based on the criteria for targeted advertising or the media channels in which the ads are placed. As our code base is designed to handle each targeting criterion or media channel from a relatively self-sufficient module, we can easily identify a problem on the platform based on the aggregated metrics that manifest the problem. The Anomaly Detection System considers the most common targeting criteria as listed in Table 2 and four major media channels, namely ad, video, mobile and social networks, when the campaigns are clustered."}, {"heading": "3.3 Time Series Storage", "text": "Time series are generated on the control server and then transmitted to OpenTSDB [2], a distributed time series database based on HBase [1]. OpenTSDB serves as the persistence layer for the time series data and the feed for the anomaly detector. Each sample in the time series consists of the timestamp when the entry is submitted, the value of the metric and a list of tags. Timestamps are written with second resolution. In the case of double data points for the same timestamp, the most recent value is recorded. Tags are optional key value pairs associated with the time series to provide additional information about the aggregation. Samples of the time series are taken at regular intervals by the dedicated reporter thread on the control server and sent to OpenTSDB by HTTP messages. A message starts with the operation name, followed by the metric name, the timestamp and the metric value, finally ending with the list of tags."}, {"heading": "3.4 Anomaly Detection", "text": "In this subsection, we describe our standard anomaly detection algorithm, which is applied to the variable value \u03b2 = \u03b2 = \u03b2 = \u03b2 = 2 defined in Section 3.2. The algorithm is presented in Table 1. We assume a Gaussian distribution, N (\u00b5, \u03c3), on the input time series, i.e. dt, \u03b2. Essentially, the algorithm refers to a di as abnormal when | di \u2212 \u00b5 | > \u03b2\u03c3, where 0 \u2264 \u03b2 \u2264 3 is a parameter that depends on the anomalies detected. To make the algorithms more robust, one must limit one's memory. To achieve this, we use a decay factor, namely 0 \u2264 \u03b1 \u2264 1, to smoothly subtract the past during the calculation of the current sum of time points. Therefore, the algorithm can easily be applied to any normal time series and requires that we keep only three variables in memory."}, {"heading": "4. EVALUATION", "text": "In this section, we present our experience of applying the anomaly detection system to a real performance metric during a period in which four incidents were detected by the tool, two of which were temporary and self-solved, the other two of which were caused by bugs. Three of the incidents lasted less than a day, while the last one was fixed a week after its introduction, and our tool successfully identified all four issues and demonstrated its robustness against both short-lived and long-lived problems. The final change measurement retrieved from the anomaly detector consists of 2185 data points, 160 of which are anomalous as they coincide with system problems in a timely manner. One week of data is used as training data to initialize the anomalgorithm, and the rest of the data is used to evaluate the performance of the system. Note that we leave out the numbers and exact timestamps that match the measurements presented here in accordance with company regulations."}, {"heading": "4.1 Metric Stability", "text": "We compare the metrics of all campaigns running on the Turn platform with those that only include stable campaigns; the metrics of day-over-day change (i.e. p = 1) in Figure 6 (b) are obviously more meaningful in terms of the occurrence of system problems than the aggregate campaign metric in Figure 6 (a); the metrics of week-over-week change (i.e. p = 7) in Figure 7 (b) show highly stabilized behavior that reveals the negative peaks caused by system problems; on the contrary, the week-over-week campaign metric in Figure 7 (a) reveals little information about the state of the system, as it is contaminated by heavy noise. In our final configuration of the anomaly detection system, we use the week-over-over-week metric in Figure 7 (b) as input to the detector."}, {"heading": "4.2 Accuracy", "text": "We also evaluate the accuracy of the anomaly detection system using the data set described above. Weekly change metrics derived from the original time series are used for the numbers presented here. We use the standard F1 measurement variable defined in Eq.3 to quantify the accuracy of the anomaly detection system. In Eq.3, precision denotes the ratio of true anomalies among all data points detected and remember the percentage of anomalies detected. F1 Score = 2 \u00b7 Precision \u00b7 Recall Precision + Recall (3) Figure 5 illustrates the outcome of the experiment: 157 true anomalies and 12 false positives are identified and 3 anomalies are overlooked. F1 Score = 2 \u00b7 Precision \u00b7 Recall Precision + Recall (3) Figure 5 illustrates the accuracy of 92.9% and a memory of 92.9%. F1 measurement is 0.954 based on the precision and recall (3) Recall (3) Recall (3) Figure 5 illustrates the false memory of the result of the 912 and 98.9% are overlooked."}, {"heading": "5. CONCLUSION", "text": "We present an anomaly detection system that identifies system problems based on the self-correlated behavior of stable campaigns in a large-scale DSP. Used in our production cluster, the system has successfully detected several major system problems that would otherwise not be detected until serious consequences are caused."}, {"heading": "6. REFERENCES", "text": "[1] Apache HBase. https: / / hbase.apache.org /. [2] OpenTSDB. http: / / opentsdb.net /. [3] V. Chandola, A. Banerjee, and V. Kumar. Anomaly detection: A survey. ACM computing surveys (CSUR), 41 (3): 15, 2009. [4] V. Chandola, A. Banerjee, and V. Kumar. Anomaly detection for discrete sequences: A survey. Knowledge and Data Engineering, IEEE Transactions on, 24 (5): 823-839, 2012. [5] S. C. Geyik, A. Saxena, and A. Dasdan. Multi-Touch Attribution based budget allocation in online advertising. In ADKDD, 2014. [6] N. Laptev, S. Amizadeh, and I. Flint. Generic and scalable framework for automated time-series Dasomaly Org."}], "references": [{"title": "Anomaly detection: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar"], "venue": "ACM computing surveys (CSUR),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Anomaly detection for discrete sequences: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar"], "venue": "Knowledge and Data Engineering, IEEE Transactions on,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Multi-touch attribution based budget allocation in online advertising", "author": ["S.C. Geyik", "A. Saxena", "A. Dasdan"], "venue": "In ADKDD,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Generic and scalable framework for automated time-series anomaly detection", "author": ["N. Laptev", "S. Amizadeh", "I. Flint"], "venue": "In SIGKDD,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2015}, {"title": "Estimating conversion rate in display advertising from past erformance data", "author": ["K.-C. Lee", "B. Orten", "A. Dasdan", "W. Li"], "venue": "In SIGKDD,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Online model evaluation in a large-scale computational advertising platform", "author": ["S. Shariat", "B. Orten", "A. Dasdan"], "venue": "In ICDM,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Smart pacing for effective online ad campaign optimization", "author": ["J. Xu", "K.-C. Lee", "W. Li", "H. Qi", "Q. Lu"], "venue": "In SIGKDD,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "A survey on real time bidding advertising", "author": ["Y. Yuan", "F. Wang", "J. Li", "R. Qin"], "venue": "In SOLI,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}], "referenceMentions": [{"referenceID": 7, "context": "This has resulted in exponential growth of online advertising and, in particular, real time bidding [10].", "startOffset": 100, "endOffset": 104}, {"referenceID": 0, "context": "Refer to [3, 4] for comprehensive surveys on many anomaly detection algorithms and their applications.", "startOffset": 9, "endOffset": 15}, {"referenceID": 1, "context": "Refer to [3, 4] for comprehensive surveys on many anomaly detection algorithms and their applications.", "startOffset": 9, "endOffset": 15}, {"referenceID": 3, "context": "More recent works, such as [6], mainly focus on post processing techniques that reduce the false alarms and increase the quality of an anomaly detection task.", "startOffset": 27, "endOffset": 30}, {"referenceID": 0, "context": "We pose the monitoring of the final campaign performance metrics as a contextual anomaly detection problem [3].", "startOffset": 107, "endOffset": 110}, {"referenceID": 4, "context": "Refer to [7, 8], for more detail on bid prediction and model evaluation.", "startOffset": 9, "endOffset": 15}, {"referenceID": 5, "context": "Refer to [7, 8], for more detail on bid prediction and model evaluation.", "startOffset": 9, "endOffset": 15}, {"referenceID": 2, "context": "The main duty of the control server is to allocate [5] and pace [9] the budget of each campaign through its lifetime.", "startOffset": 51, "endOffset": 54}, {"referenceID": 6, "context": "The main duty of the control server is to allocate [5] and pace [9] the budget of each campaign through its lifetime.", "startOffset": 64, "endOffset": 67}], "year": 2016, "abstractText": "Online media offers opportunities to marketers to deliver brand messages to a large audience. Advertising technology platforms enables the advertisers to find the proper group of audiences and deliver ad impressions to them in real time. The recent growth of the real time bidding has posed a significant challenge on monitoring such a complicated system. With so many components we need a reliable system that detects the possible changes in the system and alerts the engineering team. In this paper we describe the mechanism that we invented for recovering the representative metrics and detecting the change in their behavior. We show that this mechanism is able to detect the possible problems in time by describing some incident cases.", "creator": "LaTeX with hyperref package"}}}