{"id": "1603.02597", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Mar-2016", "title": "Prediction of Infinite Words with Automata", "abstract": "In the classic problem of sequence prediction, a predictor receives a sequence of values from an emitter and tries to guess the next value before it appears. The predictor masters the emitter if there is a point after which all of the predictor's guesses are correct. In this paper we consider the case in which the predictor is an automaton and the emitted values are drawn from a finite set; i.e., the emitted sequence is an infinite word. We examine the predictive capabilities of finite automata, pushdown automata, stack automata (a generalization of pushdown automata), and multihead finite automata. We relate our predicting automata to purely periodic words, ultimately periodic words, and multilinear words, describing novel prediction algorithms for mastering these sequences.", "histories": [["v1", "Tue, 8 Mar 2016 17:12:09 GMT  (442kb,D)", "http://arxiv.org/abs/1603.02597v1", null]], "reviews": [], "SUBJECTS": "cs.FL cs.LG", "authors": ["tim smith"], "accepted": false, "id": "1603.02597"}, "pdf": {"name": "1603.02597.pdf", "metadata": {"source": "META", "title": "Prediction of Infinite Words with Automata", "authors": ["Tim Smith"], "emails": ["tim.smith@u-pem.fr"], "sections": [{"heading": "1 Introduction", "text": "One motivation for studying the prediction of infinite words stems from its position as a kind of underlying \"simplest case\" of other prediction tasks. Consider, for example, the problem of developing an intelligent agent, a purposeful autonomous entity that is able to explore and interact with its surroundings. At any moment, it receives data from its sensors that it stores in its memory. We want the agent to analyze the data it receives so that it can predict future data and perform actions in the world based on these predictions. That is, we want the agent to discover the laws of nature that govern its environment. Without limiting the problem, this is a daunting task. The data the agent receives could be present in multiple channels that correspond to seeing, hearing, touching and other senses, and in each channel the data given at any moment have a complex structure, such as a field of view or tactile array."}, {"heading": "1.1 Our contributions", "text": "In this paper, we will consider the case where the predictor in the above setting is an automaton. In our model, a prediction automaton M takes an infinite word \u03b1 as input and produces an infinite word M (\u03b1) as output, with the caveat that for each i \u2265 1, M must output the ith symbol of M (\u03b1) before it can be read via the i \u2212 1. symbol of \u03b1. If there is an n \u2265 1 such that for each i \u2265 n the ith symbol of M (\u03b1) is equal to the ith symbol of \u03b1, then we will say that M is master \u03b1.We will consider three classes of infinite words. The first are the purely periodic words, which are of the form xxx \u00b7 \u00b7 for some string x. Next are the ultimately periodic words of the form xyy \u00b7 for strings x, y. Finally, we will consider the multilinear words [21], which consist of an initial string of characters repeated in a manner governed by linear polymists."}, {"heading": "1.2 Related work", "text": "A classical overview of inductive conclusions, including the problem of sequence prediction, can be found in [2]. The concept of \"mastering\" an infinite word is a form of \"learning in the limit,\" a concept derived from the policy paper of Gold [11], where it is applied to the learning ability of language. Turing machines are considered sequence extrapolators in [4]. An early work on the prediction of periodic sequences is [20] where these sequences appear in the environment of two-player emission prediction games. Conclusions to ultimately periodic sequences are treated in an \"offline\" setting, in which the input is a finite sequence and the output is a description of an ultimately periodic sequence. An algorithm is presented that calculates the shortest possible description of an ultimately periodic sequence when given a long enough prefix of that sequence is given, and can be implemented in size."}, {"heading": "1.3 Outline of paper", "text": "The rest of the work is structured as follows: Section 2 contains definitions of infinite words and predictions of automata. Section 3 deals with prediction of purely periodic and ultimately periodic words. Section 4 deals with prediction of multilinear words. Section 5 provides our conclusions."}, {"heading": "2 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Words", "text": "Where X is a set, we denote the cardinality of X with | X |. A word is a concatenation of symbols of A. We denote the set of finite words with A * and the set of finite words with A. We denote the set of finite words with A *. A language is a subset of A. A (symbolic) sequence S is an element of A *. A prefix of S is a string x, so S = xS \u00b2 is a sequence S \u00b2. The ith symbol of S stands for the empty string S [i]; indexing begins at 1. A (symbolic) sequence S is an element of A \u00b2. A prefix of S is a string x, so that S = xS \u00b2 is a sequence S \u00b2. The ith symbol of S stands for the empty string S [i]; indexing begins at 1. For a non-empty string x, XII stands for the finite word xxx \u00b7 such a word S \u00b2 is an sequence S \u00b2."}, {"heading": "2.2 Predictors", "text": "We define predictors on the basis of various types of automata. (See [23] for the results on the original automata Q = Q = Q = Q = Q = Q = Q = Q = Q = Predictors.) Each predictor M takes an infinite word \u03b1 as input and produces an infinite word M (\u03b1) as output, with the caveat that for each i \u2265 1, M must execute the symbol of M (\u03b1) before it can be read beyond the i \u2212 1 symbol of \u03b1. We say that it is wrong that for each i \u00b2 s prediction it is about the position i of \u03b1. If M (i) [\u03b1] = \u03b1 [\u03b1] then we say that the conjecture is right; otherwise we say that it is wrong."}, {"heading": "3 Prediction of periodic words", "text": "In this section we examine finite automata, push-down automata, stack automata, and multi-head finite automata as predictors of purely periodic and ultimately periodic words."}, {"heading": "3.1 Prediction by DFAs", "text": "Theorem 1. Let A be an alphabet, so that | A | \u2265 2. Then no DFA predictor can handle every purely periodic word via A.Proof. Let's assume that some DFA predictor can handle every purely periodic word via A. M has a certain number of states p. Let's take any a, b \u00b2 A so that a 6 = b. Let \u03b1 be the purely periodic word (ap + 1b) \u03c9. Then there is an n \u2265 1 so that for each i \u2265 n, M (\u03b1) [i] = \u03b1 [i]. Let's take the first segment of p + 1 consecutively as after position n. With two of these as M is in the same state. Then M repeats the guesses it made between these two as long as it reads. But then M a for the next b, guess a contradiction. So M does not control that."}, {"heading": "3.2 Prediction by DPDAs", "text": "Theorem 2: Imagine that any DPDA predictor M = (Q, A, F, T,., M, qs) can handle any purely periodic word above A. We assume p to be very large in relation to | Q | and | F |. Let's assume an a, b \u00b2 A is such that a = b. Let \u03b1 be the purely periodic word (apb) \u03c9. Then there is a position m \u2265 0 according to which all M's assumptions about \u03b1 are correct. Now, between each segment of p \u00b2 consecutive a's there is only one symbol (a single b), so that the stack can grow by at most | Q | | F | between each two segments. It follows that in any segment of p \u00b2 consecutive a's the height of a stack does not decrease by more than one b's, so that the stack can grow by at most | Q | F | between each two segments."}, {"heading": "3.3 Prediction by DSAs", "text": "We give two results about the prediction capabilities of DSAs: firstly, that some DSA predictors can handle any purely periodic word, and secondly, that no DSA predictor can handle any infinite word that is not multilinear. Algorithm 1 A DSA predictor that can handle any purely periodic word, and secondly, that no DSA predictor can handle any infinite word that is not multilinear. After that, an infinite word follows. Wherever a guess is not specified, it can be taken arbitrarily..1: Loop 2: push hi 3: push high: push high: push high: push up: push up: push up: push up:: push up: push: push: push up: push: push up: push: push up: push: push: push: high: push up: move up: push up: push up: push: push up: push:"}, {"heading": "3.4 Prediction by multi-DFAs", "text": "Next, let's look at multi-DFA predictors. Let's let their more powerful cousins, the multi-DFA predictors, know in Section 4.Algorithm 2 A 2-head DFA predictor, which masters each ultimately periodic word. Heads are denoted by t and h. Input consists of the symbol. followed by an endless word \u03b1. Wherever a guess is not given, it can be considered arbitrary. Train h loopmove t move h, guess \u03b1 [t] move h if \u03b1 [h] 6 = \u03b1 [t] theorem 5. Let A be an alphabet. Then, some multi-DFA predictor masters each ultimately periodic word via A.Proof. We use a variation of the \"tortoise and hares\" cycle detection algorithm [19], adapted to our attitude. Let M be a 2-head DFA predictor, taking any eventual periodic word via A.Take any word."}, {"heading": "4 Prediction of multilinear words", "text": "We now turn to predicting the class of multilinear words. We give an algorithm that allows us to capture a multiple DFA segment that controls all multilinear Word segments. Let us get involved in a multiple DFA segment that allows us to edit a multiple DFA segment at a time. Let us get involved in a segment that allows us to edit a multiple DFA segment that adapts to certain conditions. That is, the algorithms can be broken up into \"blocks,\" each block consisting of m \"segments\" of the form pis n i. To master, M will switch between two procedures, Correction and Matching. Correction tries to position the positions h1, h3 and h4 so that each head at the beginning of a segment pis n i."}, {"heading": "5 Conclusion", "text": "In this paper, we investigated the classic problem of sequence prediction from the perspective of automata and infinite words. We examined several types of automata and tried to find out which classes of infinite words they could master, describing novel prediction algorithms for the classes of purely periodic, ultimately periodic, and multilinear words. Unanswered questions in our study would be whether there is a DSA predictor that can handle each ultimately periodic word, and whether there is a multi-DFA predictor that can handle each multilinear word. Further indications for further research would be to consider other types of automata as predictors, such as automata with bilateral input tapes, and to try to make predictions of other classes of infinite words, such as morphic words. It would also be interesting to consider questions of computational tractability, such as how many guesses and how much time it takes to achieve mastery."}, {"heading": "10. Ginsburg, S., Greibach, S.A., Harrison, M.A.: One-way stack automata. J. ACM", "text": "14 (2), 389-418 (Apr 1967)"}, {"heading": "11. Gold, E.M.: Language identification in the limit. Information and Control", "text": "10 (5), 447-474 (1967), http: / / groups.lis.illinois.edu / amag / langev / paper / gold67limit.html 12. Hibbard, B.: Adversarial sequence prediction. In: Proceedings of the Conference on Artificial General Intelligence 2008: Proceedings of the First AGI Conference. pp. 399-403. IOS Press, Amsterdam, The Netherlands, The Netherlands (2008), http: / / dl.acm.org / citation.cfm? id = 1566174.1566212"}, {"heading": "13. Holzer, M., Kutrib, M., Malcher, A.: Complexity of multi-head finite automata: Origins and directions. Theor. Comput. Sci. 412(1-2), 83\u201396 (Jan 2011)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "14. Hromkovic\u030c, J.: One-way multihead deterministic finite automata. Acta Informatica", "text": "19 (4), 377-384 (1983), http: / / dx.doi.org / 10.1007 / BF00290734"}, {"heading": "15. Johansen, P.: Inductive inference of ultimately periodic sequences. BIT Numerical", "text": "Mathematics 28 (3), 573-580 (1988), http: / / dx.doi.org / 10.1007 / BF01941135"}, {"heading": "16. Leblanc, B., Lutton, E., Allouche, J.P.: Inverse problems for finite automata:", "text": "A solution based on genetic algorithms. In: Hao, J.K., Lutton, E., Ronald, E., Schoenauer, M., Snyers, D. (eds.) Artificial Evolution, Lecture Notes in Computer Science, vol. 1363, pp. 157-166. Springer Berlin Heidelberg (1998), http: / / dx.doi.org / 10.1007 / BFb0026598 17. Legg, S.: Is there an elegant universal theory of prediction? In: Algorithmic Learning Theory, 17th International Conference, ALT 2006, Barcelona, Spain, 7 to 10 October 2006, Proceedings. pp. 274-287 (2006), http: / / dx.doi.org / 10.1007 / 11894841 _ 23"}, {"heading": "18. O\u2019Connor, M.G.: An unpredictability approach to finite-state randomness. J.", "text": "Comput. Syst. Sci. 37 (3), 324-336 (December 1988), http: / / dx.doi.org / 10.1016 / 0022-0000 (88) 90011-6 19. Sedgewick, R., Szymanski, T.G., Yao, A.C.: The complexity of finding cycles in periodic functions. SIAM Journal on Computing 11 (2), 376-390 (1982) 20. Shubert, B.: Games of prediction of periodic sequences. Tech. rep., United States Naval Postgraduate School (1971) 21. Smith, T.: On Infinite Words Determined by Stack Automata. In: FSTTCS 2013. Leibniz International Proceedings in Informatics (LIPIcs), vol. 24, pp. 413-424. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik, Dagstuhl, Germany (2013) 22nd part of: Solonational Proceedings in Informatics (LIPIcs), Ivol."}, {"heading": "A Prediction by DPDAs", "text": "In this appendix we give a complete proof of theorem 2 by filling in the sketch given in the body."}, {"heading": "B Prediction of multilinear words", "text": "In this appendix, we give a complete proof of Theorem 6 by filling in the sketch given in the body =. This theorem states that some empirical multi-DFA predictors master each multilinear word. We start by providing a normal form for properly multilinear words, along with some definitions used in the proofs. Then, we prove a result on the behavior of Algorithm 2 (\"tortoise and hare\") when applied to multilinear words. With this basic work, we show that by implementing Algorithm 3, a sensing multi-DFA we can master each multilinear word. B.1 Normal form for properly multilinear words below, we give a convenient form for truly multilinear words, similar to Proposition 32 of [8], but with a tighter constraint.Theorem 7. Let's be a properly multilinear word."}], "references": [{"title": "Learning regular omega languages", "author": ["D. Angluin", "D. Fisman"], "venue": "Tim Smith in Computer Science,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Inductive inference: Theory and methods", "author": ["D. Angluin", "C.H. Smith"], "venue": "ACM Comput. Surv", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1983}, {"title": "Minimax vs. Bayes prediction", "author": ["D. Blackwell"], "venue": "Probability in the Engineering and Informational Sciences", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1995}, {"title": "Toward a mathematical theory of inductive inference", "author": ["L. Blum", "M. Blum"], "venue": "Information and Control 28(2),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1975}, {"title": "Predictions with automata", "author": ["A. Broglio", "P. Liardet"], "venue": "Symbolic Dynamics and its Applications. Contemporary Mathematics, vol. 135, pp. 111\u2013124. American Mathematical Society", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1992}, {"title": "Prediction of binary sequences by evolving finite state machines", "author": ["U. Cerruti", "M. Giacobini", "P. Liardet"], "venue": "Artificial Evolution, Lecture Notes in Computer Science,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "High-confidence predictions under adversarial uncertainty", "author": ["A. Drucker"], "venue": "TOCT 5(3),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Degrees of Streams. Integers", "author": ["J. Endrullis", "D. Hendriks", "J.W. Klop"], "venue": "Electronic Journal of Combinatorial Number Theory 11B(A6),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Universal prediction of individual sequences", "author": ["M. Feder", "N. Merhav", "M. Gutman"], "venue": "IEEE Transactions on Information Theory 38, 1258\u20131270", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1992}, {"title": "One-way stack automata", "author": ["S. Ginsburg", "S.A. Greibach", "M.A. Harrison"], "venue": "J. ACM 14(2), 389\u2013418", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1967}, {"title": "Language identification in the limit", "author": ["E.M. Gold"], "venue": "Information and Control 10(5),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1967}, {"title": "Adversarial sequence prediction", "author": ["B. Hibbard"], "venue": "Proceedings of the 2008 Conference on Artificial General Intelligence 2008: Proceedings of the First AGI Conference", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}, {"title": "Complexity of multi-head finite automata: Origins and directions", "author": ["M. Holzer", "M. Kutrib", "A. Malcher"], "venue": "Theor. Comput. Sci. 412(1-2), 83\u201396", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2011}, {"title": "One-way multihead deterministic finite automata", "author": ["J. Hromkovi\u010d"], "venue": "Acta Informatica 19(4),", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1983}, {"title": "Inductive inference of ultimately periodic sequences", "author": ["P. Johansen"], "venue": "BIT Numerical Mathematics", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1988}, {"title": "Inverse problems for finite automata: A solution based on genetic algorithms", "author": ["B. Leblanc", "E. Lutton", "J.P. Allouche"], "venue": "Artificial Evolution, Lecture Notes in Computer Science,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1998}, {"title": "Is there an elegant universal theory of prediction", "author": ["S. Legg"], "venue": "Algorithmic Learning Theory, 17th International Conference,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "An unpredictability approach to finite-state randomness", "author": ["M.G. O\u2019Connor"], "venue": "J. Comput. Syst. Sci", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1988}, {"title": "The complexity of finding cycles in periodic functions", "author": ["R. Sedgewick", "T.G. Szymanski", "A.C. Yao"], "venue": "SIAM Journal on Computing 11(2), 376\u2013390", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1982}, {"title": "Games of prediction of periodic sequences", "author": ["B. Shubert"], "venue": "Tech. rep., United States Naval Postgraduate School", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1971}, {"title": "On Infinite Words Determined by Stack Automata", "author": ["T. Smith"], "venue": "FSTTCS 2013. Leibniz International Proceedings in Informatics (LIPIcs), vol. 24, pp. 413\u2013424. Schloss Dagstuhl\u2013Leibniz-Zentrum fuer Informatik, Dagstuhl, Germany", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "A formal theory of inductive inference. part i. Information and Control", "author": ["R. Solomonoff"], "venue": "http://www.sciencedirect.com/science/article/", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1964}, {"title": "Computational Complexity", "author": ["K. Wagner", "G. Wechsung"], "venue": "Mathematics and its Applications, Springer", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1986}], "referenceMentions": [{"referenceID": 20, "context": "Finally we consider the multilinear words [21], which consist of an initial string followed by strings that repeat in a way governed by linear polynomials, for example abaabaaab \u00b7 \u00b7 \u00b7 .", "startOffset": 42, "endOffset": 46}, {"referenceID": 9, "context": "Stack automata are a generalization of pushdown automata whose stack head, in addition to pushing and popping when at the top of the stack, can move up and down the stack in read-only mode [10].", "startOffset": 189, "endOffset": 193}, {"referenceID": 12, "context": "Next, we consider multi-DFAs (multihead deterministic finite automata), finite automata with one or more input heads [13].", "startOffset": 117, "endOffset": 121}, {"referenceID": 13, "context": "Finally, we consider sensing multi-DFAs, multihead DFAs extended with the ability to sense, for each pair of heads, whether those two heads are at the same position on the input tape [14].", "startOffset": 183, "endOffset": 187}, {"referenceID": 1, "context": "A classic survey of inductive inference, including the problem of sequence prediction, can be found in [2].", "startOffset": 103, "endOffset": 106}, {"referenceID": 10, "context": "The concept of \u201cmastering\u201d an infinite word is a form of \u201clearning in the limit\u201d, a concept which originates with the seminal paper of Gold [11], where it is applied to language learnability.", "startOffset": 140, "endOffset": 144}, {"referenceID": 3, "context": "Turing machines are considered as sequence extrapolators in [4].", "startOffset": 60, "endOffset": 63}, {"referenceID": 19, "context": "An early work on prediction of periodic sequences is [20], where these sequences appear in the setting of two-player emission-prediction games.", "startOffset": 53, "endOffset": 57}, {"referenceID": 14, "context": "Inference of ultimately periodic sequences is treated in [15] in an \u201coffline\u201d setting, where the input is a finite string and the output is a description of an ultimately periodic sequence.", "startOffset": 57, "endOffset": 61}, {"referenceID": 17, "context": "In [18], finite-state automata are considered as predicting machines and the question of which sequences appear \u201crandom\u201d to these machines is answered.", "startOffset": 3, "endOffset": 7}, {"referenceID": 4, "context": "Further work on this concept appears in [5].", "startOffset": 40, "endOffset": 43}, {"referenceID": 8, "context": "In [9] the finite-state predictability of an infinite sequence is defined as the minimum fraction of prediction errors that can be made by an finite-state predictor, and it is proved that finite-state predictability can be obtained by an efficient prediction procedure using techniques from data compression.", "startOffset": 3, "endOffset": 6}, {"referenceID": 2, "context": "In [3] a random prediction method for binary sequences is given which ensures that the proportion of correct predictions approaches the frequency of the more common symbol (0 or 1) in the sequence.", "startOffset": 3, "endOffset": 6}, {"referenceID": 15, "context": "In [16], \u201cinverse", "startOffset": 3, "endOffset": 7}, {"referenceID": 5, "context": "In [6], an evolutionary algorithm is used to search for the finite-state machine with the highest prediction ratio for a given purely periodic word, in the space of all automata with a fixed number of states.", "startOffset": 3, "endOffset": 6}, {"referenceID": 6, "context": "In [7], the problem of successfully predicting a single 0 in an infinite binary word being revealed sequentially to the predictor is considered; only one prediction may be made, but at a time of the predictor\u2019s choosing.", "startOffset": 3, "endOffset": 6}, {"referenceID": 0, "context": "Learning of languages consisting of infinite words has also been studied; see [1] for recent work.", "startOffset": 78, "endOffset": 81}, {"referenceID": 21, "context": "An early and influential approach to predicting infinite sequences is that of program-size complexity [22].", "startOffset": 102, "endOffset": 106}, {"referenceID": 16, "context": "Unfortunately this model is incomputable, and in [17] it is shown furthermore that some sequences can only be predicted by very complex predictors which cannot be discovered mathematically due to problems of G\u00f6del incompleteness.", "startOffset": 49, "endOffset": 53}, {"referenceID": 16, "context": "[17] concludes that \u201cperhaps the only reasonable solution would be to add additional restrictions to both the algorithms which generate the sequences to be predicted, and to the predictors.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "Following on from [17], in [12] the formalism of sequence prediction is extended to a competition between two agents, which is shown to be a computational resources arms race.", "startOffset": 18, "endOffset": 22}, {"referenceID": 11, "context": "Following on from [17], in [12] the formalism of sequence prediction is extended to a competition between two agents, which is shown to be a computational resources arms race.", "startOffset": 27, "endOffset": 31}, {"referenceID": 20, "context": "The class of multilinear words appears in [21] and also in [8] (as the reducts of the \u201cprime\u201d stream \u03a0).", "startOffset": 42, "endOffset": 46}, {"referenceID": 7, "context": "The class of multilinear words appears in [21] and also in [8] (as the reducts of the \u201cprime\u201d stream \u03a0).", "startOffset": 59, "endOffset": 62}, {"referenceID": 22, "context": "(See [23] for results on the original automata, which are language recognizers rather than predictors.", "startOffset": 5, "endOffset": 9}, {"referenceID": 20, "context": "Since all of M \u2019s guesses after n are correct, M\u03b1 now recognizes Prefix(\u03b1), and hence M\u03b1 determines \u03b1 in the sense of [21].", "startOffset": 118, "endOffset": 122}, {"referenceID": 20, "context": "Then by Theorem 8 of [21], \u03b1 is multilinear.", "startOffset": 21, "endOffset": 25}, {"referenceID": 18, "context": "We employ a variation of the \u201ctortoise and hare\u201d cycle detection algorithm [19], adapted to our setting.", "startOffset": 75, "endOffset": 79}], "year": 2016, "abstractText": "In the classic problem of sequence prediction, a predictor receives a sequence of values from an emitter and tries to guess the next value before it appears. The predictor masters the emitter if there is a point after which all of the predictor\u2019s guesses are correct. In this paper we consider the case in which the predictor is an automaton and the emitted values are drawn from a finite set; i.e., the emitted sequence is an infinite word. We examine the predictive capabilities of finite automata, pushdown automata, stack automata (a generalization of pushdown automata), and multihead finite automata. We relate our predicting automata to purely periodic words, ultimately periodic words, and multilinear words, describing novel prediction algorithms for mastering these sequences.", "creator": "LaTeX with hyperref package"}}}