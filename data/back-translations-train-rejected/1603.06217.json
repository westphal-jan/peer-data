{"id": "1603.06217", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Mar-2016", "title": "An Approximation Approach for Solving the Subpath Planning Problem", "abstract": "The subpath planning problem is a branch of the path planning problem, which has widespread applications in automated manufacturing process as well as vehicle and robot navigation. This problem is to find the shortest path or tour subject for travelling a set of given subpaths. The current approaches for dealing with the subpath planning problem are all based on meta-heuristic approaches. It is well-known that meta-heuristic based approaches have several deficiencies. To address them, we propose a novel approximation algorithm in the O(n^3) time complexity class, which guarantees to solve any subpath planning problem instance with the fixed ratio bound of 2. Also, the formal proofs of the claims, our empirical evaluation shows that our approximation method acts much better than a state-of-the-art method, both in result and execution time.", "histories": [["v1", "Sun, 20 Mar 2016 14:22:26 GMT  (1815kb,D)", "http://arxiv.org/abs/1603.06217v1", null]], "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.DS", "authors": ["masoud safilian", "s mehdi tashakkori", "sepehr eghbali", "aliakbar safilian"], "accepted": false, "id": "1603.06217"}, "pdf": {"name": "1603.06217.pdf", "metadata": {"source": "CRF", "title": "An Approximation Approach for Solving the Subpath Planning Problem", "authors": ["Masoud Safilian", "S. Mehdi Tashakkori Hashemi", "Sepehr Eghbali", "Aliakbar Safilian"], "emails": ["ma.safilian@gmail.com,", "hashemi@aut.ac.ir", "sepehr.eghbali@uwaterloo.ca", "safiliaa@mcmaster.ca"], "sections": [{"heading": null, "text": "Note to practitioners - In some real-world applications such as robotic and vehicle navigation in structured and industrial environments, as well as some manufacturing processes such as electronic printing and polishing, it is necessary for the agent to travel a series of predefined paths. Automation of this process involves three steps: 1) capturing the surroundings of the actual problem and formulating this problem as an on-the-go planning problem; 2) solving the on-the-road planning problem in order to find the near-optimal path or near-optimal results; 3) commanding the robot to follow the result; the most difficult phase is the second that this paper attempts to master. In order to design effective automation for the above applications, it is essential to use methods with low computing costs but near-optimal results in the second phase. Due to the fact that the length of the final output has a direct impact on the cost of completion of the task, it is desirable to integrate methods with low complexity for the above applications, which we cannot guarantee the optimum results in this case between the length of the Xiv and the 3.06."}, {"heading": "1 Introduction", "text": "In fact, most of them are able to survive on their own."}, {"heading": "2 Related Work", "text": "There are a number of problems that both have to do with each other. For example, the question of whether one person is a person or a person who is a different person, a person who is a different person. There is another person who is a different person. There is another person who is a different person. There is another person who is a different person. There is another person who is another person who is another person. There is another person who is another person. There is another person who is another person. There is another person who is another person. There is another person who is another person. There is another person who is another person who is another person. There is another person who is another person, another person who is another person. There is another person, another person who is another person."}, {"heading": "3 Transformation of SPP to TSP", "text": "In this section, we will show how to convert SPP to TSP. Workable solutions for an SPP instance are the routes that traverse all sub-paths. A minimum length tour is a desired solution. Each feasible solution is a sequence of connected sub-paths. In a fixed sequence with n sub-paths, the ith (i < n) sub-path can be connected to the (i + 1) sub-path (the ninth sub-path is connected to the first one) in two different ways (either by head or tail). Consider an SPP instance with n-paths. Obviously, the number of possible sequences of these n-paths n!. Due to two different connections between two successive sub-paths, the total number of feasible solutions n! 2n.TSP would be one of the classic NP-hard problems of combinatorial optimization. In recent decades, different approach methods [21] and this combinatorial problem [18] have been proposed."}, {"heading": "3.1 TSP model of SPP: Transformation Procedure", "text": "Consider an SPP instance with n subways indexed with the sentence I = {1,..., n}. The procedure includes two stages. In the first stage, a complete graph G is built, corresponding to the following stages. Level 1: 1. For each subway, we say that it contains two nodes si and ei, corresponding to its start and end points. 2. For each subway I, we consider an edge between si and ei with the weight corresponding to the length of the subway in the workspace. Let us call this edge the subway. 3. For each pair of two different subways i and j (i 6 = j), we add edges corresponding to siej, eisj and eiej of the graph. We also consider the weights of these newly added edges equal the corresponding Euclidean distances in the workspace. Let us call these edges the connecting edge."}, {"heading": "3.2 Pseudo Code and Complexity Analysis of Transforming", "text": "Algorithm 1 represents a pseudo-code for the SPP to TSP transformation method. The algorithm takes a workspace as input and returns a graph G as output. It comprises the following two phases: 1) Generation of a graph G according to stage 1 (line 1) 2) Generation of a graph G \u00b2 by adding middle nodes to the graph according to stage 2 (lines 2 to 9) Time complexity of the generation of graph G is in O (n2), where n is the number of partial paths. Lines 2 to 9 add middle nodes to the graph within a loop of n iterations. \"In each iteration, there is another loop (lines 6 to 8) which requires O (n) runtime. Therefore, the addition of middle nodes O (n2) runtime. Thus, the total complexity of the algorithm O (n2) is (i). Algorithm 1: SP1 to construct T1: 7 (i) with adaptability ei i (4) i (4) i (4): 4 i (4)."}, {"heading": "4 Imperfectly Establish the Triangle Inequality", "text": "As already discussed, the use of any approximation method for TSP requires that the triangular inequality be held above given graphs. Two types of triangles in G \u2032 (fig. 2.b) may violate the triangular inequality: V-1) triangles with an underpath edge as one of their edges, i.e. triangles in the form of 4sieiv 4, where v 6 = mi.V-2) triangles with one and only one infinity edge. In such a triangle, one of its edges is either simj or eimj (i 6 = j). Other triangles in G \u2032 that are not in any of the above types do not violate the triangular inequality. Such triangles can be grouped into the following types: 1) triangles having more than one infinity edge. 2) triangles in which all edge weights are equal to the corresponding euclidean distances."}, {"heading": "4.1 IETI: The Procedure", "text": "The IETI algorithm is the output of the transformation method (G \u2032) and deals with the first category of infringing triangles, i.e., V-1. In fact, this algorithm makes some changes to the edges of the weight of G \u2032 to create a graph designated by G \u2032, so that TSP turns in G \"and G\" \"are equal (see Theorem 3) and there are no violating triangles of the type V-1 in G.\" (see Theorem 2).44abc designates the triangle with a, b, and c as its vertices.The IETI algorithm is an iterative method. In fact, it iterates over all subpaths for which it updates the weight of the edges in the same way. In fact, each iteration corresponds to a subpath. Below we describe how it works."}, {"heading": "4.2 Pseudo Code and Complexity Analysis of IETI", "text": "Algorithm 2 presents the pseudo code of the IETI algorithm. This algorithm takes a graph G \"(the output of the SPP to TSP transformation) and returns a graph G.\" The loop of n iterations in lines 1 to 13 updates the weights of the edges of the sub-paths. Within these lines there are two loops, each of which is iterated 2 times (lines 2 and 8 to 11). Thus, the time complexity of the algorithm lies in class O (n2)."}, {"heading": "5 A 2-approximation Algorithm", "text": "The Christofides algorithm [6] is one of the most efficient approximation algorithms for solving TSP, which works for given graphs that meet the state of triangular inequality. It has the temporal complexity of O (n3) and the ratio bound of 1.5. Due to its complexity and proportionality, the Christofides algorithm is a popular approximation method for TSP. Algorithm 2: TSP transformation and IETI1: for each partial path edge siei do 2: Find node d-G, the R = w (si, d) + w (d, ei) 3: dv \u2190 R \u2212 w (si, ei) 24: if dv < 0 then 5: w (si, ei)."}, {"heading": "5.1 CSPP: the procedure", "text": "The question of the \"Why?,\" \"Why,\" \"Why,\" \"Why,\" \"Why,\" \"Why\"?, \"\" Why}, {"heading": "5.2 Ratio Bound of CSPP Algorithm", "text": "In this section it is shown that the ratio of CSPP to CSPP 2 (si) + ei (ei) mi (ei) mi (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W (i).W ("}, {"heading": "5.3 Pseudo Code and Complexity Analysis of CSPP", "text": "This section discusses the temporal complexity of the CSPP approximation algorithms in terms of the number of sub-paths. (Algorithm 3 is a pseudo-code for this algorithm, the G \u2032 \"(the output of the IETI algorithm) as input and return of a Hamilton visit called h-Trail. (Leave the number of sub-paths in the given workspace n.) Then the number of sub-paths in the given workspace n. (The graph G\" s has 3n nodes and 9n2 edges.Complexity analysis of step 1 (line 1): MST can be found with Kruskal's algorithm [20] or Prim \"s algorithm [31]. Two implementations of these algorithms are Improved Implementation of Kruskal Algorithm and Fibonacci Heap Implementation of Prim Algorithm [1], respectively, both of which are in O (E | V | V) class."}, {"heading": "6 Experiments and Results", "text": "In fact, the fact is that most of them are able to survive themselves if they do not feel able to survive themselves, and that they are able to survive themselves, \"he told the Deutsche Presse-Agentur in an interview with the US magazine\" New York Times. \""}, {"heading": "7 Conclusion and Future Works", "text": "In this paper, we have proposed a method for transforming SPP to TSP. Transforming SPP to TSP allows us to use existing algorithms to solve TSP in the context of subpath planning. However, the violation of triangular inequality impedes the application of existing fixed-ratio approximation algorithms such as Christofides for SPP. To address this problem, we have proposed the IETI algorithm, which constitutes an essential subset of infringing triangles to satisfy the inequality condition in the triangle. IETI algorithm should be considered a fundamental step in proposing and applying bound approximation algorithms to solve SPP. With this method, a subset of SPP-bound approximation algorithms, called CSPP, can be proposed to find an almost optimal solution for SPP. CSPP solves TSP via the output graph of IETI algorithms CSPP is similar to the Christofixity algorithm algorithm, but in terms of the Christofixity algorithm algorithm."}, {"heading": "A Proofs of Lemma 3 and Lemma 5", "text": "The proofs for lemmas 3 and 5 are adapted to [6]. Proof: [proof for lemmas 3] Suppose H is a Hamiltonian tour constructed by subtracting an arbitrary edge of T *. Note that H is a spanning tree of G. Hence: W (MST) \u2264 W (H) < W (T) (18) Proof: [proof for lemmas 5] For an n-city TSP we consider T \u0445 = (xi1, xi2,..., xin). Starting from vertex xi1 and a journey around the circuit T * we assign the traversed connections alternately to two sets of M1 and M2. Starting with M1, for example: M1 = (xi1, xi2), (xi3, xi4),..., (xi4,), (xi4),..., (xin \u2212 1, xin) and M2 = (xin)."}], "references": [{"title": "Network flows: Theory", "author": ["R. Ahuja", "T. Magnanti", "J. Orlin"], "venue": "algorithms, and applications", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1993}, {"title": "Approximation algorithms for the geometric covering salesman problem", "author": ["E.M. Arkin", "R. Hassin"], "venue": "Discrete Applied Mathematics, 55(3):197\u2013218", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1994}, {"title": "Complexity and approximation: Combinatorial optimization problems and their approximability properties", "author": ["G. Ausiello"], "venue": "Springer Verlag", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1999}, {"title": "Metaheuristics in combinatorial optimization: Overview and conceptual comparison", "author": ["C. Blum", "A. Roli"], "venue": "ACM Computing Surveys (CSUR), 35(3):268\u2013308", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "Coupled path planning", "author": ["D. Chen", "S. Luan", "C. Wang"], "venue": "region optimization, and applications in intensity-modulated radiation therapy. Algorithmica, 60(1):152\u2014174", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Worst-Case analysis of a new heuristic for the travelling salesman problem", "author": ["N. Christofides"], "venue": "Technical report, DTIC Document", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1976}, {"title": "A heuristic for the stacker crane problem on trees which is almost surely exact", "author": ["A. Coja-Oghlan", "S.O. Krumke", "T. Nierhoff"], "venue": "Journal of Algorithms, 61(1):1\u201319", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Approximation algorithms for tsp with neighborhoods in the plane", "author": ["A. Dumitrescu", "J.S. Mitchell"], "venue": "Proceedings of the twelfth annual ACM-SIAM symposium on Discrete algorithms, pages 38\u201346. Society for Industrial and Applied Mathematics", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2001}, {"title": "Arc routing problems", "author": ["H.A. Eiselt", "M. Gendreau", "G. Laporte"], "venue": "part i: The chinese postman problem. Operations Research, 43(2):231\u2013242", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1995}, {"title": "Arc routing problems", "author": ["H.A. Eiselt", "M. Gendreau", "G. Laporte"], "venue": "part ii: The rural postman problem. Operations Research, 43(3):399\u2013414", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1995}, {"title": "Approximation algorithms for some postman problems", "author": ["G.N. Frederickson"], "venue": "Journal of the ACM (JACM), 26(3):538\u2013554", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1979}, {"title": "Approximation algorithms for some routing problems", "author": ["G.N. Frederickson", "M.S. Hecht", "C.E. Kim"], "venue": "Foundations of Computer Science, 1976., 17th Annual Symposium on, pages 216\u2013227. IEEE", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1976}, {"title": "Computers and intractability. a guide to the theory of np-completeness. a series of books in the mathematical sciences, ed", "author": ["M. Garey", "D. Johnson"], "venue": "v. klee", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1979}, {"title": "The corridor map method: a general framework for real-time high-quality path planning", "author": ["R. Geraerts", "M. Overmars"], "venue": "Computer Animation and Virtual Worlds, 18(2):107\u2014119", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Genetic algorithms in search", "author": ["D. Goldberg"], "venue": "optimization, and machine learning. Addison-wesley", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1989}, {"title": "Evolutionary path planning with subpath constraints", "author": ["J. Gyorfi", "D. Gamota", "S. Mok", "J. Szczech", "M. Toloo", "J. Zhang"], "venue": "IEEE Transactions on Electronics Packaging Manufacturing, 33(2):143\u2014151", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "An effective implementation of the Lin-Kernighan traveling salesman heuristic", "author": ["K. Helsgaun"], "venue": "European Journal of Operational Research, 126(1):106\u2014130", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2000}, {"title": "The traveling salesman problem: A case study in local optimization", "author": ["D. Johnson", "L. McGeoch"], "venue": "Local search in combinatorial optimization, pages 215\u2014310", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1997}, {"title": "Reducibility among combinatorial problems", "author": ["R. Karp"], "venue": "volume 40. Springer", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1972}, {"title": "On the shortest spanning subtree of a graph and the traveling salesman problem", "author": ["J. Kruskal"], "venue": "Proceedings of the American Mathematical society, 7(1):48\u201450", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1956}, {"title": "The traveling salesman problem: An overview of exact and approximate algorithms", "author": ["G. Laporte"], "venue": "European Journal of Operational Research, 59(2):231\u2014247", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1992}, {"title": "Complexity of vehicle routing and scheduling problems", "author": ["J.K. Lenstra", "A. Kan"], "venue": "Networks, 11(2):221\u2013227", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1981}, {"title": "An effective heuristic algorithm for the travelingsalesman problem", "author": ["S. Lin", "B. Kernighan"], "venue": "Operations research, pages 498\u2014516", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1973}, {"title": "Approximation algorithms for geometric tour and network design problems", "author": ["C.S. Mata", "J.S. Mitchell"], "venue": "Proceedings of the eleventh annual symposium on Computational geometry, pages 360\u2013369. ACM", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1995}, {"title": "An o (v| v| c| e|) algoithm for finding maximum matching in general graphs", "author": ["S. Micali", "V. Vazirani"], "venue": "Foundations of Computer Science, 1980., 21st Annual Symposium on, pages 17\u201427", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1980}, {"title": "Computers and intractability: A guide to the theory of np-completeness", "author": ["R.G. Michael", "D.S. Johnson"], "venue": "WH Freeman & Co., San Francisco", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1979}, {"title": "A fundamental problem in vehicle routing", "author": ["C. Orloff"], "venue": "Networks, 4(1):35\u201364", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1974}, {"title": "The euclidean travelling salesman problem is np-complete", "author": ["C.H. Papadimitriou"], "venue": "Theoretical Computer Science, 4(3):237\u2013244", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1977}, {"title": "Computational discrete mathematics: combinatorics and graph theory with Mathematica", "author": ["S. Pemmaraju", "S. Skiena"], "venue": "Cambridge Univ Pr", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2003}, {"title": "Reliable robust path planning with application to mobile robots", "author": ["R. Pepy", "M. Kieffer", "E. Walter"], "venue": "International Journal of Applied Mathematics and Computer Science, 19(3):413\u2013424", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Shortest connection networks and some generalizations", "author": ["R. Prim"], "venue": "Bell system technical journal, 36(6):1389\u20141401", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1957}, {"title": "On the complexity of approximating tsp with neighborhoods and related problems", "author": ["S. Safra", "O. Schwartz"], "venue": "computational complexity, 14(4):281\u2013307", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2006}, {"title": "P-complete approximation problems", "author": ["S. Sahni", "T. Gonzalez"], "venue": "Journal of the ACM (JACM), 23(3):555\u2013565", "citeRegEx": "33", "shortCiteRegEx": null, "year": 1976}, {"title": "Tool path planning for compound surfaces in spray forming processes", "author": ["W. Sheng", "H. Chen", "N. Xi", "Y. Chen"], "venue": "Automation Science and Engineering, IEEE Transactions on, 2(3):240\u2013249", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2005}, {"title": "A path planning-based study of protein folding with a case study of hairpin formation in protein g and l", "author": ["G. Song", "S. Thomas", "K. DILL", "J. Scholtz", "N. Amato"], "venue": "Proc. Pacific Symposium of Biocomputing (PSB), pages 240\u2014251", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2002}, {"title": "A motion planning approach to studying molecular motions", "author": ["L. Tapia", "S. Thomas", "N. Amato"], "venue": "Communications in Information & Systems, 10(1):53\u201468", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2010}, {"title": "Research of path planning for polishing robot based on improved genetic algorithm", "author": ["G. Tong-ying", "Q. Dao-kui", "D. Zai-li"], "venue": "Robotics and Biomimetics, 2004. ROBIO 2004. IEEE International Conference on, pages 334\u2014338", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2004}, {"title": "Asymptotically optimal algorithms for one-to-one pickup and delivery problems with applications to transportation systems", "author": ["K. Treleaven", "M. Pavone", "E. Frazzoli"], "venue": "For an n-city TSP,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2013}], "referenceMentions": [{"referenceID": 29, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 79, "endOffset": 83}, {"referenceID": 13, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 168, "endOffset": 172}, {"referenceID": 4, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 186, "endOffset": 189}, {"referenceID": 34, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 206, "endOffset": 210}, {"referenceID": 33, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 234, "endOffset": 238}, {"referenceID": 35, "context": "Path planning is a challenging problem in artificial intelligence and robotics [30] with applications also in other areas such as computer animation and computer games [14], therapeutic [5] protein folding [35], manufacturing process [34] and computational biology [36].", "startOffset": 265, "endOffset": 269}, {"referenceID": 15, "context": "SPP has widespread applications such as navigation of robots and vehicles as well as automated manufacturing process [16, 37].", "startOffset": 117, "endOffset": 125}, {"referenceID": 36, "context": "SPP has widespread applications such as navigation of robots and vehicles as well as automated manufacturing process [16, 37].", "startOffset": 117, "endOffset": 125}, {"referenceID": 12, "context": "SPP is an NP-hard problem [13, 19].", "startOffset": 26, "endOffset": 34}, {"referenceID": 18, "context": "SPP is an NP-hard problem [13, 19].", "startOffset": 26, "endOffset": 34}, {"referenceID": 36, "context": "[37] and Gyorfi et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] proposed some algorithms based on Genetic Algorithm (GA) [15] for solving SPP in polishing robots and electronic printing, respectively.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[16] proposed some algorithms based on Genetic Algorithm (GA) [15] for solving SPP in polishing robots and electronic printing, respectively.", "startOffset": 62, "endOffset": 66}, {"referenceID": 3, "context": "Like other meta-heuristic methods [4], GA cannot guarantee any bound on its final result.", "startOffset": 34, "endOffset": 37}, {"referenceID": 2, "context": "The current paper aims at overcoming the problems of meta-heuristic methods in solving SPP by proposing an approximation algorithm [3] with a fixed ratio bound and efficient polynomial complexity.", "startOffset": 131, "endOffset": 134}, {"referenceID": 17, "context": "The first stage is transforming SPP to Travelling Salesman Problem (TSP) [18] with an O(n) time complexity algorithm.", "startOffset": 73, "endOffset": 77}, {"referenceID": 18, "context": "Since TSP is an NP-hard problem [19], proposing a precise algorithm for solving TSP does not make sense.", "startOffset": 32, "endOffset": 36}, {"referenceID": 5, "context": "Christofides in [6] argues that there is no polynomial approximation algorithm with a fixed ratio bound for general TSP.", "startOffset": 16, "endOffset": 19}, {"referenceID": 5, "context": "Literally, we cannot propose any fixed ratio bound approximation algorithm on a general graph, in which the triangle inequality does not hold in all triangles [6] (this observation is also due to Sahni and Gonzale [33]).", "startOffset": 159, "endOffset": 162}, {"referenceID": 32, "context": "Literally, we cannot propose any fixed ratio bound approximation algorithm on a general graph, in which the triangle inequality does not hold in all triangles [6] (this observation is also due to Sahni and Gonzale [33]).", "startOffset": 214, "endOffset": 218}, {"referenceID": 5, "context": "However, there are some fixed-ratio bound approximation algorithms such as Christofides\u2019 algorithm [6], for solving TSP over constrained graphs, which satisfy triangle inequality.", "startOffset": 99, "endOffset": 102}, {"referenceID": 5, "context": "Indeed, the CSPP algorithm is a modified version of the Christofides\u2019 algorithm [6] to make it able to work for all outputs of the IETI algorithm.", "startOffset": 80, "endOffset": 83}, {"referenceID": 15, "context": "[16] over various workspaces with different number of subpaths.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] is presented in Section 6.", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "This set of problems includes Travelling Salesman Problem with Neighbours (TSPN) and those that are in the context of Arc Routing Problems (ARP) [9, 10].", "startOffset": 145, "endOffset": 152}, {"referenceID": 9, "context": "This set of problems includes Travelling Salesman Problem with Neighbours (TSPN) and those that are in the context of Arc Routing Problems (ARP) [9, 10].", "startOffset": 145, "endOffset": 152}, {"referenceID": 1, "context": "Travelling Salesman Problem with Neighbours: Travelling Salesman Problem with Neighbours (TSPN) is introduced by Arking and Hassin [2].", "startOffset": 131, "endOffset": 134}, {"referenceID": 25, "context": "Since TSPN is a generalization of TSP, it is also NP-hard [26, 28].", "startOffset": 58, "endOffset": 66}, {"referenceID": 27, "context": "Since TSPN is a generalization of TSP, it is also NP-hard [26, 28].", "startOffset": 58, "endOffset": 66}, {"referenceID": 31, "context": "Besides, Safra and Schwartz [32] showed that it is NP-hard to approximate within any constant bound.", "startOffset": 28, "endOffset": 32}, {"referenceID": 23, "context": "For the general case of connected polygons, Mata and Mitchell [24] proposed an O(log n) approximation bound with O(N) time complexity based on \u201dguillotine rectangular subdivisions\u201d, where N is the total number of vertices of the polygons.", "startOffset": 62, "endOffset": 66}, {"referenceID": 7, "context": "If all the polygons have the same diameter, then an O(1) algorithm also exists [8].", "startOffset": 79, "endOffset": 82}, {"referenceID": 9, "context": "Otherwise (the given graph is neither purely directed nor undirected), the problem would be NP-hard [10].", "startOffset": 100, "endOffset": 104}, {"referenceID": 26, "context": "RPP was first introduced by Orloff [27].", "startOffset": 35, "endOffset": 39}, {"referenceID": 10, "context": "The undirected, directed and mixed versions of RPP are all proven to be NP-hard [11, 22].", "startOffset": 80, "endOffset": 88}, {"referenceID": 21, "context": "The undirected, directed and mixed versions of RPP are all proven to be NP-hard [11, 22].", "startOffset": 80, "endOffset": 88}, {"referenceID": 10, "context": "Frederickson [11] proposed a polynomial time solution for RPP with the worst case ratio bound of 1.", "startOffset": 13, "endOffset": 17}, {"referenceID": 11, "context": "Stacker Crane Problem: The Stacker Crane Problem (SCP) [12] is another relevant problem in the context of routing.", "startOffset": 55, "endOffset": 59}, {"referenceID": 6, "context": "[7] proposed an approximation approach for a special case of SCP.", "startOffset": 0, "endOffset": 3}, {"referenceID": 11, "context": "[12] proposed a polynomial algorithm for this problem with the ratio bound of 1.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "The Fredrickson\u2019s solution for SCP is known to be the best approximation algorithm [38].", "startOffset": 83, "endOffset": 87}, {"referenceID": 20, "context": "In the recent decades, various approximation [21] and combinatorial optimization methods [18] have been proposed for solving this problem.", "startOffset": 45, "endOffset": 49}, {"referenceID": 17, "context": "In the recent decades, various approximation [21] and combinatorial optimization methods [18] have been proposed for solving this problem.", "startOffset": 89, "endOffset": 93}, {"referenceID": 5, "context": "The Christofides\u2019 algorithm [6] is one the most efficient approximation algorithms for solving TSP, which works for given graphs satisfying the triangle inequality condition.", "startOffset": 28, "endOffset": 31}, {"referenceID": 5, "context": "This step is the same as the first step of the Christofides\u2019 algorithm [6].", "startOffset": 71, "endOffset": 74}, {"referenceID": 5, "context": "Step 3: Minimum Perfect Matching over Odd-degree Nodes This step, which is identical to one of the Christofides\u2019 steps [6], performs minimum perfect matching in G\u2032\u2032 between all odd-degree nodes in G\u2217 8 and adds the edges involved in perfect matching to G\u2217 to build a graph denoted by \u011c.", "startOffset": 119, "endOffset": 122}, {"referenceID": 5, "context": "An operation, called shortcut, is used in Christofides\u2019 algorithm [6] to do such a transformation.", "startOffset": 66, "endOffset": 69}, {"referenceID": 5, "context": "In fact, differences between shortcut in [6] and confined shortcut are in the two following issues: 1) Performing confined shortcuts in only three consecutive nodes in the tour; 2) avoiding performing confined shortcut whenever it leads to adding an infinity weight edge.", "startOffset": 41, "endOffset": 44}, {"referenceID": 5, "context": "Lemmas 3 and 5 are adapted from [6].", "startOffset": 32, "endOffset": 35}, {"referenceID": 19, "context": "Complexity analysis of Step 1 (line 1): MST can be found using Kruskal\u2019s algorithm [20] or Prim\u2019s algorithm [31].", "startOffset": 83, "endOffset": 87}, {"referenceID": 30, "context": "Complexity analysis of Step 1 (line 1): MST can be found using Kruskal\u2019s algorithm [20] or Prim\u2019s algorithm [31].", "startOffset": 108, "endOffset": 112}, {"referenceID": 0, "context": "Two implementations of these algorithms are Improved Implementation of Kruskal Algorithm and Fibonacci Heap Implementation of Prim\u2018s Algorithm [1], respectively, which both are in O(|E|+|V | log |V |) complexity class.", "startOffset": 143, "endOffset": 146}, {"referenceID": 24, "context": "Complexity analysis of Step 3 (lines 10 and 11): The modified version of Edmond\u2019s Blossom Shrinking algorithm in [25] can be used to do perfect matching, which requires O(|V |) running time.", "startOffset": 113, "endOffset": 117}, {"referenceID": 28, "context": "Complexity of Step 4 (line 12): One can use Fleury algorithm [29] to find Eulerian tour, which has the running time complexity of O(|E|).", "startOffset": 61, "endOffset": 65}, {"referenceID": 15, "context": "Figure 6: An augmented chromosome used in Gyorfi GA which consists of two arrays (adapted from [16]).", "startOffset": 95, "endOffset": 99}, {"referenceID": 15, "context": "[16], which uses GA.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "The subpath reversal operator changes the direction flag of randomly chosen genes within a parent chromosome\u201d[16].", "startOffset": 109, "endOffset": 113}, {"referenceID": 22, "context": "We think that it would be possible to improve the results of the CSPP method using some improvement methods such as Lin-Kernighan [23] and Helsgaun [17].", "startOffset": 130, "endOffset": 134}, {"referenceID": 16, "context": "We think that it would be possible to improve the results of the CSPP method using some improvement methods such as Lin-Kernighan [23] and Helsgaun [17].", "startOffset": 148, "endOffset": 152}, {"referenceID": 10, "context": "One important guide line could be using the graph generated by the IETI algorithm as an input for a modified version of the RPP algorithm [11].", "startOffset": 138, "endOffset": 142}], "year": 2016, "abstractText": "The subpath planning problem is a branch of the path planning problem, which has widespread applications in automated manufacturing process as well as vehicle and robot navigation. This problem is to find the shortest path or tour subject for travelling a set of given subpaths. The current approaches for dealing with the subpath planning problem are all based on meta-heuristic approaches. It is well-known that meta-heuristic based approaches have several deficiencies. To address them, we propose a novel approximation algorithm in the O(n3) time complexity class, which guarantees to solve any subpath planning problem instance with the fixed ratio bound of 2. Beside the formal proofs of the claims, our empirical evaluation shows that our approximation method acts much better than a state-of-the-art method, both in result and execution time. Note to Practitioners\u2014In some real world applications such as robot and vehicle navigation in structured and industrial environments as well as some of the manufacturing processes such as electronic printing and polishing, it is required for the agent to travel a set of predefined paths. Automating this process includes three steps: 1) capturing the environment of the actual problem and formulating it as a subpath planning problem; 2) solving subpath planning problem to find the near optimal path or tour; 3) command the robot to follow the output. The most challenging phase is the second one that this paper tries to tackle it. To design an effective automation for the aforementioned applications, it is essential to make use of methods with low computational cost but near optimal outputs in the second phase. According to the fact that the length of the final output has a direct effect on the cost of performing the task, it is desirable to incorporate methods with low complexity that can guarantee a bound for the difference between length of the optimal path and 1 ar X iv :1 60 3. 06 21 7v 1 [ cs .R O ] 2 0 M ar 2 01 6 the output. Current approaches for solving subpath planning problem are all meta-heuristic based. These methods do not provide such a bound. And plus, they are usually very time consuming. They may find promising results for some instances of problems, but there is no guarantee that they always exhibit such a good behaviour. In this paper, in order to avoid the issues of metaheuristics methods, we present an approximation algorithm, which provides an appropriate bound for the optimality of its solution. To gauge the performance of proposed methods, we conducted a set of experiments the results of which show that our proposed method finds shorter paths in less time in comparison with a state-of-the-art method.", "creator": "LaTeX with hyperref package"}}}