{"id": "1603.09545", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-Mar-2016", "title": "Characterizing Realizability in Abstract Argumentation", "abstract": "Realizability for knowledge representation formalisms studies the following question: given a semantics and a set of interpretations, is there a knowledge base whose semantics coincides exactly with the given interpretation set? We introduce a general framework for analyzing realizability in abstract dialectical frameworks (ADFs) and various of its subclasses. In particular, the framework applies to Dung argumentation frameworks, SETAFs by Nielsen and Parsons, and bipolar ADFs. We present a uniform characterization method for the admissible, complete, preferred and model/stable semantics. We employ this method to devise an algorithm that decides realizability for the mentioned formalisms and semantics; moreover the algorithm allows for constructing a desired knowledge base whenever one exists. The algorithm is built in a modular way and thus easily extensible to new formalisms and semantics. We have also implemented our approach in answer set programming, and used the implementation to obtain several novel results on the relative expressiveness of the abovementioned formalisms.", "histories": [["v1", "Thu, 31 Mar 2016 12:05:34 GMT  (29kb)", "http://arxiv.org/abs/1603.09545v1", "Contribution to the 16h International Workshop on Non-Monotonic Reasoning, 2016, Cape Town"]], "COMMENTS": "Contribution to the 16h International Workshop on Non-Monotonic Reasoning, 2016, Cape Town", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["thomas linsbichler", "j\\\"org p\\\"uhrer", "hannes strass"], "accepted": false, "id": "1603.09545"}, "pdf": {"name": "1603.09545.pdf", "metadata": {"source": "CRF", "title": "Characterizing Realizability in Abstract Argumentation", "authors": ["Thomas Linsbichler", "Hannes Strass"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 160 3.09 545v 1 [cs.A I] 3 1M ar2 01"}, {"heading": "1 Introduction", "text": "In fact, it is the case that most of them are able to survive themselves by blaming themselves and others. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are not able to survive themselves. (...)"}, {"heading": "2 Preliminaries", "text": "We make use of standard mathematical concepts such as functions and partially ordered sets. For a function f: X \u2192 Y, we denote the update of f with a pair (x, y), X \u00b7 Y with a pair (x, y), X \u00b7 Y with a pair (z), and z 7 \u2192 f (z) otherwise. For a function f: X \u2192 Y and y \u00b2 Y, their price range is a complete statement if and only if each S has a maximum possible lower limit (glb) d S \"and a minimum upper limit (lub) S. A partially ordered sentence with a partial order on S. A partially ordered sentence (S) is a complete lattice if and only if each S\" has a maximum possible lower limit (glb) d. \"S\" and a minimum upper limit (S) S \"S\" S \"S.\" A partially ordered sentence (S) is a complete ordered quantity (S), a complete meeting semilattice \"iff not any subset S.\""}, {"heading": "3 A General Framework for Realizability", "text": "The main underlying idea of our concept is that all the abstract argumentation patterns introduced in the previous section can be traced back to a similar function. (D) However, we know that these formalities can be redefined as ADFs. (D) We need to use this knowledge for feasibility to define the corresponding subclasses in terms of ADFs \"acceptance. (D) This is also possible and paves the way for the framework outlined in this section. (D) Most importantly, we will use the different formalities and different semantics, which is independent of each other. (Towards) a uniform representation of feasibility for ADFs from other semantic points of view, we start with a new characterization of feasibility for ADFs from underlying semantic points of view, which is based on a similar notion."}, {"heading": "3.1 Deciding Realizability: Algorithm 1", "text": "We can assume that the most important decision-making algorithms are sufficient to construct a knowledge base. (...) We can assume that the basic decision-making algorithms (...) that we apply (...) do not exist if (...) formalism F and (...) semantics use the desired number of interpretations to derive certain necessary properties of the knowledge base (line 2). This is the essential part of the algorithms: the derivative rules used there are based on characterizations of feasibility in relation to formalisms and semantics. (...) Once the propagation of the properties has reached a fixed point (line 7), the algorithms are checked whether the derivative information is sufficient to construct a knowledge base."}, {"heading": "3.2 Semantics Propagators", "text": "It is not only the question of whether it is a condition, but also whether there is a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for a condition for"}, {"heading": "3.3 Formalism Propagators", "text": "If we do not support a certain group of interpretations, we must attack them in another way. For a certain group of interpretations, we must define the realities we define. (F) The function kbADF\u03c3 (F) uses the characterization given by F in the following way: v is a model of acceptance of statements that are also applied to the characteristics of individual persons. (V, a, t) The propagators defined below the structural knowledge of the form of acceptance of the respective formalisms in order to reduce the search space or induce the incoherence of F whenever V is not feasible. For bipolar ADFs, we use the fact that each of their linkages must have at least one polarity, that is, support or attack it."}, {"heading": "3.4 Correctness", "text": "For a lack of space, we could not contain formal proof of the solidity and completeness of algorithm 1, but rather arguments for termination and correction.Termination With each recursive call, the set F can never decrease in size, since the only changes to F add the results of propagation in line 3 and the conjectures in line 11. Even within the infinite loop, the set F can never decrease in size; moreover, there is only a general finite number of triples that can be added to F. So at some point, it must be defined with pF {pF} with pF as above. L + and L \u2212 define link polarities for kbBADF\u03c3.we must have F = prolongation and exit the infinite loop. Since F always increases in size, it must become either functional or incoherent, causing the algorithm to end."}, {"heading": "4 Implementation", "text": "Since algorithm 1 is based on multiplication, conjecture, and verification, it is perfectly suited for implementation using Response Set Programming (ASP) (Niemela \ufffd, 1999; Marek and Truszczyn \u0301 ski, 1999), as it allows the use of conflict learning strategies and heuristics of modern ASP solvers. Therefore, we developed ASP encryptions in the Gringo language (Gebser et al., 2012) for our approach. Similar to the algorithm, our declarative encryptions are modular, consisting of a main body that is responsible for generating set F and separate encryptions for the individual distributors. For example, if you want to calculate an AF realization under permissible semantics for a set V of interpretations, an input program that encodes V with the main encoding is the distribution tools, the encoding tools for permissible semantics, and the dissemination methods encoding mechanism for AF."}, {"heading": "5 Expressiveness Results", "text": "In this section, we briefly present some of the results obtained with our implementation, starting with some necessary notations to describe the relative expressivity of the knowledge representation."}, {"heading": "6 Discussion", "text": "At the heart of our approach is an algorithm that decides on the feasibility of a given set of interpretations in a formalism under a semantic. The algorithm uses propagators to adapt it to the different formalities and semantics. In addition, we presented an implementation of our framework in the programming of response sentences and several novel expressive results that we have achieved with our implementation. In related work, Polberg (2016) examines a wide range of abstract argumentation formalisms, especially their relationship to ADFs. This may be the basis for incorporating further formalisms into our realisation framework: there is only a need to identify suitable ADF fragments and develop broadcasters for them, as we have done for example for Nielsen and Parsons SETAFs."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "Realizability for knowledge representation formalisms studies the following question: Given a semantics and a set of interpretations, is there a knowledge base whose semantics coincides exactly with the given interpretation set? We introduce a general framework for analyzing realizability in abstract dialectical frameworks (ADFs) and various of its subclasses. In particular, the framework applies to Dung argumentation frameworks, SETAFs by Nielsen and Parsons, and bipolar ADFs. We present a uniform characterization method for the admissible, complete, preferred and model/stable semantics. We employ this method to devise an algorithm that decides realizability for the mentioned formalisms and semantics; moreover the algorithm allows for constructing a desired knowledge base whenever one exists. The algorithm is built in a modular way and thus easily extensible to new formalisms and semantics. We have also implemented our approach in answer set programming, and used the implementation to obtain several novel results on the relative expressiveness of the abovementioned formalisms.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}