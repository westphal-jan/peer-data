{"id": "1604.00300", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Apr-2016", "title": "A SAT model to mine flexible sequences in transactional datasets", "abstract": "Traditional pattern mining algorithms generally suffer from a lack of flexibility. In this paper, we propose a SAT formulation of the problem to successfully mine frequent flexible sequences occurring in transactional datasets. Our SAT-based approach can easily be extended with extra constraints to address a broad range of pattern mining applications. To demonstrate this claim, we formulate and add several constraints, such as gap and span constraints, to our model in order to extract more specific patterns. We also use interactive solving to perform important derived tasks, such as closed pattern mining or maximal pattern mining. Finally, we prove the practical feasibility of our SAT model by running experiments on two real datasets.", "histories": [["v1", "Fri, 1 Apr 2016 15:49:51 GMT  (45kb,D)", "http://arxiv.org/abs/1604.00300v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["r\\'emi coletta", "benjamin negrevergne"], "accepted": false, "id": "1604.00300"}, "pdf": {"name": "1604.00300.pdf", "metadata": {"source": "CRF", "title": "A SAT model to mine flexible sequences in transactional datasets", "authors": ["Remi Coletta", "Benjamin Negrevergne"], "emails": ["coletta@lirmm.fr", "benjamin.negrevergne@inria.fr"], "sections": [{"heading": null, "text": "This year, it will be able to establish itself in the region."}, {"heading": "II. FREQUENT SEQUENCE MINING: FORMAL PROBLEM", "text": "STATEMENTS Given: 1) a vocabulary V: {v0,.., v | V |} 2) a series of transactions T = {T1,.., T | T |} where each transaction Ti is a sequence of characters in V; we use the projection notation Ti [j] to specify the jth. character of the transaction Ti; and 3) a minimum frequency threshold minsup, the sequence mining problem is to list all sequences embedded in at least minsup transactions. In the standard sequence mining problem we say that a sequence S of n characters is embedded in a transaction T if there is j1,.. jn integers such as: j1 <. < jn, Hi-1, Hi-1,., n s.t. S [i] = T [ji] The list of positions e = (j1,.jn) is a problem that is embedded in at least S (S)."}, {"heading": "III. SAT ENCODING OF THE BASE MODEL", "text": "In this section, we will present the variables and limitations of our SAT model. We will then show how to easily modify the SAT solver to cover all common sequences.VariablesIn frequent sequence mining, patterns (i.e. frequent sequences) can have different lengths, while restriction-based solvers usually require a fixed number of variables. Therefore, you must first calculate an upper limit on the size of the patterns. Obviously, a pattern cannot be longer than the longest transaction, but we can calculate a narrower limit: To be frequent, a pattern must be covered by at least minsup transactions. Therefore, the maximum size of a pattern K is the size of the minsup longest transactions in T. We then define any pattern S as a sequence of precisely K characters and insert an additional character into the V vocabulary to encode the transaction."}, {"heading": "B. Constraints", "text": "b) The two following constraints encode the fact that each position k in the pattern can be assigned only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) There is only one figure from the vocabulary. (...) Vocabulary turned. (...) Vocabulary turned. (...) Vocabulary turned. (... Vocabulary turned. (...) Vocabulary turned. (...) Vocabulary turned."}, {"heading": "C. Solving", "text": "Truc et Machin have shown in [10] that branching out via decision variables confuses the clauses system and ultimately reduces the solution performance. Therefore, we give no indication of the search strategy and use the solver as a black box. Every model of our SAT formula (i.e., every solution) is a frequent sequence of the input data set. Consequently, the enumeration of all frequent sequences can be done by enumerating all models that meet the formulas. Algorithm 1: COMPUTS ALL FREQUENT PATTER 1, while F is solvable, do 2 model."}, {"heading": "IV. EXTENDING THE MODEL WITH USER CONSTRAINTS", "text": "The enumeration of all common sequences can result in an overwhelming number of sequences. (See second column in Table II.) Some of these can be considered redundant and / or irrelevant by the user. In this section we formulate various user restrictions that can be added to the base model to extract fewer and more specific sequences. The following is not an exhaustive list of useful user restrictions, but a series of examples demonstrating the flexibility of SAT formulation."}, {"heading": "A. Constraints on the way a pattern is embedded", "text": "g) Sequence Mapping with the maximum gap: (1) Sequence Mapping with the maximum gap: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1) Sequence Mapping: (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1) Sequence Mapping (1: 1: 1) Sequence Mapping (1: (1) Sequence Mapping: (1: 1: 1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: (1) Sequence Mapping (1: 1: 1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1: 1) Sequence Mapping (1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1) Sequence Mapping (1: 1: 1: 1: 1: 1:"}, {"heading": "B. Constraints over the pattern itself", "text": "In many areas of application, interesting sequences can be distinguished from irrelevant ones by setting syntactical constraints on the pattern itself. Thus, the authors of [12] have designed an algorithm to find frequent sequences that meet regular user-defined expressions, and the resulting algorithm is applied to biological datasets. We will now explain how this type of constraint can be taken into account in our SAT formulation. In [13] Pesant proposed the regular global constraint for CP systems. In fact, this constraint is met when a sequence of values belongs to a particular regular language. More recently, the authors of [14], [15] have extended this work to context-free languages with the introduction of global constraints on grammar. Furthermore, Quimper and Walsh [16] and Katsirelos et al. [17] have shown how to dissect regular and grammatical constraints into SAT formulas."}, {"heading": "V. MAXIMAL AND CLOSED PATTERN MINING", "text": "In our SAT formulation and in other CP / SAT formulations of the pattern mining problem (e.g., [4]), we first presented a pattern (e.g., [4]), each solution represents a pattern. Normally, in classic SAT or CP applications, we have shown how we can list all solutions with minor modifications in the SAT solution. Conversely, however, the set of all patterns is usually highly redundant. To overcome this problem, condensed representations have been introduced. For example, closed pattern mining [18] aims to extract a subset of patterns from which it is possible to derive all other patterns. Machin et Truc [19] later showed that expressing coherence can lead to an ambiguous problem definition."}, {"heading": "VI. EXPERIMENTS", "text": "After presenting our experimental environment in Section VI-A, we now compare our approach to specialized algorithms designed to break down closed frequent sequences. Subsequently, we demonstrate that our SAT-based approach, unlike specialized algorithms, is capable of exploiting additional constraints to further narrow the search space."}, {"heading": "A. Experimental setting", "text": "We conduct our experiments on two real data sets called Gazelle and JMLR. Gazelle is a web click data set in which each transaction represents the sequence of page views by a single user. JMLR consists of a series of abstracts from the Journal of Machine Learning Research in which each transaction is the abstract of a publication. Both data sets were previously used to evaluate sequence mining algorithms, for example in [22] or in [3]. Since our approach is currently unable to address the entire data set, we guide smaller data sets through the first n transactions. For example, the JMLR500 data set consists of the first 500 transactions of JMLR. This approach is preferable to synthetic data sets that typically have very different properties than real data sets. As shown in Table I, the properties of JMLR-500 and Gazelle-500 are similar to the sequences of JMLR and Gazelle-500."}, {"heading": "B. Enumerating all closed frequent sequences", "text": "Specialized algorithms such as LCMseq [11] or Bide [22] are designed to list all frequently closed sequences efficiently. Running times for these algorithms are presented in Table II. Our SAT-based approach does not claim to be faster than algorithms designed and optimized specifically for this basic task. Even then, it is worth noting that the number of closed frequent sequences is growing rapidly, making manual interpretation of the results almost impossible. (See Table II, second column) In this case, reducing the number of results by adding constraints is the only option offered to the user. In some cases, post-processing of the series of closed frequent sequences may be an alternative to using our limitation-based sequence framework. However, this option is not always available and, when available, is not always efficient. For example, post-processing of the sample set to eliminate all sequences that do not meet maximum mining."}, {"heading": "C. Solving sequence mining with extra user constraints", "text": "Next, we show that the SAT solver, unlike specialized algorithms, is able to exploit additional user constraints to reduce mining time. To do this, we compare runtimes based on various constraints: \u2022 maximum gap and maximum span that regulate the embedding of sequences in transactions; \u2022 regular constraints: for example, in the JMLR dataset we extract the sequences that correspond to the regular expression: \"? machine learning?\" 1; \u2022 a combination of the above constraints. Total runtimes are shown in Figure 3 for JMLR-500 and Figure 5 for Gazelle-500. It is important to note that from the solver's point of view, adding constraints exacerbates the problem, but also reduces the number of required solution calls (algorithm 1, line 3). To show that each individual call to the solver works faster, we also measure the average solution time per sequence."}, {"heading": "VII. RELATED WORK", "text": "However, the problem of the mining sequences of single characters was introduced by Mannila et al. as a problem of serial episode mining. The authors proposed an apriori-based algorithm with a depth-first-search strategy. However, the pattern mining algorithms usually require a large storage capacity, as they must store all patterns of size n before enumerating the patterns of size n + 1. An important improvement was therefore made by Wang et al. with the first depth-first-search algorithms. Furthermore, they require a large storage capacity because they have all patterns of size n before enumerating the sequences n + 1."}, {"heading": "VIII. CONCLUSION & PERSPECTIVES", "text": "In this paper, we first proposed SAT coding to solve the sequence mining problem. Second, we formulated several constraints, such as gap or chip constraints, that are relevant to mining in different application areas. Third, we proposed a solid methodology to solve complex mining tasks such as closed and maximum pattern mining. In addition, we implemented this methodology with the Glucose-SAT solver using interactive SAT solutions. Although state-of-the-art sequence mining algorithms are faster to generate all common sequences, this approach is not scalable: As the number of sequences grows exponentially with the size of the data set, unrestricted sequence mining is bound to intractability. Our study and our experiments not only demonstrate the feasibility of using SAT to solve sequence-mining data problems, but also highlight several benefits for users, including the ability to combine them."}], "references": [{"title": "Fast algorithms for mining association rules in large database", "author": ["R. Agrawal", "R. Srikant"], "venue": "VLDB, vol. 1215, 1994, pp. 487\u2013499.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1994}, {"title": "An efficient, versatile and scalable pattern growth approach to mine frequent patterns in unaligned protein sequences", "author": ["K. Ye", "W.A. Kosters", "A.P. IJzerman"], "venue": "Bioinformatics, vol. 23, no. 6, pp. 687\u2013693, 2007.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "The long and the short of it: summarising event sequences with serial episodes", "author": ["N. Tatti", "J. Vreeken"], "venue": "KDD, 2012, pp. 462\u2013470.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Constraint programming for itemset mining", "author": ["L.D. Raedt", "T. Guns", "S. Nijssen"], "venue": "KDD, 2008, pp. 204\u2013212.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Efficient cnf encoding of boolean cardinality constraints", "author": ["O. Bailleux", "Y. Boufkhad"], "venue": "CP, 2003, pp. 108\u2013122.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2003}, {"title": "Towards an optimal cnf encoding of boolean cardinality constraints", "author": ["C. Sinz"], "venue": "CP, 2005, pp. 827\u2013831.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2005}, {"title": "Conflict directed lazy decomposition", "author": ["I. Ab\u0131\u0301o", "P.J. Stuckey"], "venue": "CP, 2012, pp. 70\u201385.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "A sat-based approach for discovering frequent, closed and maximal patterns in a sequence", "author": ["E. Coquery", "S. Jabbour", "L. Sa\u0131\u0308s", "Y. Salhi"], "venue": "ECAI, 2012, pp. 258\u2013263.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Predicting learnt clauses quality in modern sat solvers", "author": ["G. Audemard", "L. Simon"], "venue": "IJCAI, 2009, pp. 399\u2013404.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2009}, {"title": "Dependent and independent variables in propositional satisfiability", "author": ["E. Giunchiglia", "M. Maratea", "A. Tacchella"], "venue": "JELIA, 2002, pp. 296\u2013307.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2002}, {"title": "Efficient serial episode mining with minimal occurrences.", "author": ["H. Ohtani", "T. Kida", "T. Uno", "H. Arimura"], "venue": "ICUIMC,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "A framework for frequent sequence mining under generalized regular expression constraints", "author": ["H. Albert-Lorincz", "J.-F. Boulicaut"], "venue": "Workshop on Knowledge Discovery in Inductive Databases (KDID- 2003), 2003, p. 2.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2003}, {"title": "A regular language membership constraint for finite sequences of variables", "author": ["G. Pesant"], "venue": "CP, 2004, pp. 482\u2013495.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2004}, {"title": "Global grammar constraints", "author": ["C.-G. Quimper", "T. Walsh"], "venue": "CP, ser. Lecture Notes in Computer Science, F. Benhamou, Ed., vol. 4204. Springer, 2006, pp. 751\u2013755.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2006}, {"title": "The theory of grammar constraints", "author": ["M. Sellmann"], "venue": "CP, ser. Lecture Notes in Computer Science, F. Benhamou, Ed., vol. 4204. Springer, 2006, pp. 530\u2013544.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Decompositions of grammar constraints", "author": ["C.-G. Quimper", "T. Walsh"], "venue": "AAAI, D. Fox and C. P. Gomes, Eds. AAAI Press, 2008, pp. 1567\u2013 1570.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2008}, {"title": "Reformulating global grammar constraints", "author": ["G. Katsirelos", "N. Narodytska", "T. Walsh"], "venue": "CPAIOR, 2009, pp. 132\u2013147.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Discovering frequent closed itemsets for association rules", "author": ["N. Pasquier", "Y. Bastide", "R. Taouil", "L. Lakhal"], "venue": "ICDT99, pp. 398\u2013416, 1999.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1999}, {"title": "On closed constrained frequent pattern mining", "author": ["F. Bonchi", "C. Lucchese"], "venue": "ICDM. IEEE, 2004, pp. 35\u201342.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2004}, {"title": "Efficiently mining long patterns from databases", "author": ["R. Bayardo"], "venue": "ACM SIGMOD, 1998, pp. 85\u201393.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1998}, {"title": "Efficient sat solving under assumptions", "author": ["A. Nadel", "V. Ryvchin"], "venue": "SAT, A. Cimatti and R. Sebastiani, Eds., 2012, pp. 242\u2013255.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Bide: Efficient mining of frequent closed sequences", "author": ["J. Wang", "J. Han"], "venue": "ICDE. IEEE, 2004, pp. 79\u201390.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2004}, {"title": "Mining sequential patterns", "author": ["R. Agrawal", "R. Srikant"], "venue": "ICDE. IEEE, 1995, pp. 3\u201314.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1995}, {"title": "Discovery of frequent episodes in event sequences", "author": ["H. Mannila", "H. Toivonen", "A. Inkeri Verkamo"], "venue": "DMKD, vol. 1, no. 3, pp. 259\u2013289, 1997.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1997}, {"title": "A constraint-based language for declarative pattern discovery", "author": ["J. Metivier", "P. Boizumault", "B. Cr\u00e9milleux", "M. Khiari", "S. Loudni"], "venue": "Data Mining Workshops (ICDMW). IEEE, 2011, pp. 1112\u20131119.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2011}, {"title": "Polynomial-delay and polynomial-space algorithms for mining closed sequences, graphs, and pictures in accessible set systems", "author": ["H. Arimura", "T. Uno"], "venue": "ICDM, 2009, pp. 1087\u20131098.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "Para miner: a generic pattern mining algorithm for multi-core architectures", "author": ["B. Negrevergne", "A. Termier", "M.-C. Rousset", "J.-F. M\u00e9haut"], "venue": "Data Mining and Knowledge Discovery, pp. 1\u201341, 2013.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2013}, {"title": "Principles and Practice of Constraint Programming - CP", "author": ["F. Benhamou", "Ed"], "venue": "Proceedings, ser. Lecture Notes in Computer Science,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "Since seminal work by Agrawal and Srikant on frequent itemset mining [1], a large number of new pattern mining tasks have been proposed to extract more structured patterns, such as sequence, tree or graph patterns.", "startOffset": 69, "endOffset": 72}, {"referenceID": 1, "context": ",[2]).", "startOffset": 1, "endOffset": 4}, {"referenceID": 2, "context": ",[3]).", "startOffset": 1, "endOffset": 4}, {"referenceID": 3, "context": "in [4] have recently proposed using CP modeling techniques and CP solvers to address various itemset mining tasks.", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "Bailleux and Boufkhad [5] proposed a network-based decomposition using O(|T |.", "startOffset": 22, "endOffset": 25}, {"referenceID": 5, "context": "log(minsup)) in [6], and proved optimal.", "startOffset": 16, "endOffset": 19}, {"referenceID": 6, "context": "More recently, Abio and Stuckey [7] have proposed a technique to improve the efficiency of the cardinality constraint, by taking into account two tricky internal mechanisms of a CDCL SAT solver.", "startOffset": 32, "endOffset": 35}, {"referenceID": 7, "context": "in [8].", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "We solve our SAT formula using the Glucose CDCL solver [9].", "startOffset": 55, "endOffset": 58}, {"referenceID": 9, "context": "Truc et Machin have shown in [10] that branching over decision variables confuses the clause-learning system and ultimately reduces the solving performances.", "startOffset": 29, "endOffset": 33}, {"referenceID": 10, "context": "h) Remark on the gap constraint: Due to its usefulness, the gap constraint has already been implemented in LCMseq algorithms [11].", "startOffset": 125, "endOffset": 129}, {"referenceID": 11, "context": "For example, the authors of [12] designed an algorithm to mine frequent sequences that satisfy regular expressions specified by the user.", "startOffset": 28, "endOffset": 32}, {"referenceID": 12, "context": "In [13], Pesant proposed the regular global constraint for CP systems.", "startOffset": 3, "endOffset": 7}, {"referenceID": 13, "context": "More recently, in [14], [15], the authors extended this work to the context-free languages with the introduction of grammar global constraints.", "startOffset": 18, "endOffset": 22}, {"referenceID": 14, "context": "More recently, in [14], [15], the authors extended this work to the context-free languages with the introduction of grammar global constraints.", "startOffset": 24, "endOffset": 28}, {"referenceID": 15, "context": "Furthermore, Quimper and Walsh [16] and by Katsirelos et al.", "startOffset": 31, "endOffset": 35}, {"referenceID": 16, "context": "[17] have shown how to decompose regular and grammar constraints into SAT formulae.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": ", [4]), each solution represents a pattern.", "startOffset": 2, "endOffset": 5}, {"referenceID": 17, "context": "For example, closed pattern mining [18] aims at extracting a subset of patterns from which it is possible to derive all other patterns.", "startOffset": 35, "endOffset": 39}, {"referenceID": 18, "context": "Machin et Truc [19] later showed that expressing closedness as a constraint can lead to ambiguous problem definition.", "startOffset": 15, "endOffset": 19}, {"referenceID": 19, "context": "In this section, we address closed and maximal pattern mining [20] by using interactive SAT solving.", "startOffset": 62, "endOffset": 66}, {"referenceID": 17, "context": "for itemset mining ([18]).", "startOffset": 20, "endOffset": 24}, {"referenceID": 20, "context": "To avoid this constraint negation requirement, we now propose to use the incremental SAT solving paradigm [21].", "startOffset": 106, "endOffset": 110}, {"referenceID": 21, "context": "Both datasets were previously used to evaluate sequence mining algorithms, for example in [22] or in [3].", "startOffset": 90, "endOffset": 94}, {"referenceID": 2, "context": "Both datasets were previously used to evaluate sequence mining algorithms, for example in [22] or in [3].", "startOffset": 101, "endOffset": 104}, {"referenceID": 8, "context": "To solve our SAT formulation, we use the Glucose[9] SAT solver modified as explained in Algorithm 2.", "startOffset": 48, "endOffset": 51}, {"referenceID": 10, "context": "Specialized algorithms such as LCMseq [11] or Bide [22] have been designed to efficiently enumerate all closed frequent sequences.", "startOffset": 38, "endOffset": 42}, {"referenceID": 21, "context": "Specialized algorithms such as LCMseq [11] or Bide [22] have been designed to efficiently enumerate all closed frequent sequences.", "startOffset": 51, "endOffset": 55}, {"referenceID": 18, "context": "As pointed by [19], this is true only for anti-monotonic constraints.", "startOffset": 14, "endOffset": 18}, {"referenceID": 22, "context": "[23], who proposed an Apriori-derived algorithm to mine frequent sequences of itemsets (as opposed to mining frequent sequences of single characters, which is the issue that we address in this paper).", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "in [24] as the problem of serial episode mining.", "startOffset": 3, "endOffset": 7}, {"referenceID": 21, "context": "in [22] with the first depth-first search BIDE algorithm.", "startOffset": 3, "endOffset": 7}, {"referenceID": 11, "context": "In [12], the authors mine sequences that satisfy a regular expression.", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "The LCMseq algorithm ([11]) also deserves mention: It was extended by its authors to address different variations of the sequence mining task, such as maximal sequences and sequences with gap constraints.", "startOffset": 22, "endOffset": 26}, {"referenceID": 3, "context": "([4]).", "startOffset": 1, "endOffset": 4}, {"referenceID": 24, "context": "have proposed a constraint-based language for itemset mining ([25]).", "startOffset": 62, "endOffset": 66}, {"referenceID": 7, "context": "More recently, in [8], Coquerry et al.", "startOffset": 18, "endOffset": 21}, {"referenceID": 25, "context": "However, this formulation is based on a set encoding of sequences proposed by Arimura and Uno ([26]) and cannot be extended to more complex mining tasks such as flexible sequences.", "startOffset": 95, "endOffset": 99}, {"referenceID": 26, "context": "In [27], the authors showed that highly optimized pattern mining algorithms are inherently difficult to parallelize due to the large number of instances of memory access.", "startOffset": 3, "endOffset": 7}], "year": 2016, "abstractText": "Traditional pattern mining algorithms generally suffer from a lack of flexibility. In this paper, we propose a SAT formulation of the problem to successfully mine frequent flexible sequences occurring in transactional datasets. Our SAT-based approach can easily be extended with extra constraints to address a broad range of pattern mining applications. To demonstrate this claim, we formulate and add several constraints, such as gap and span constraints, to our model in order to extract more specific patterns. We also use interactive solving to perform important derived tasks, such as closed pattern mining or maximal pattern mining. Finally, we prove the practical feasibility of our SAT model by running experiments on two real datasets.", "creator": "LaTeX with hyperref package"}}}