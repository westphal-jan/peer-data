{"id": "1604.01166", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Apr-2016", "title": "An Efficient Algorithm for Mining Frequent Sequence with Constraint Programming", "abstract": "The main advantage of Constraint Programming (CP) approaches for sequential pattern mining (SPM) is their modularity, which includes the ability to add new constraints (regular expressions, length restrictions, etc). The current best CP approach for SPM uses a global constraint (module) that computes the projected database and enforces the minimum frequency; it does this with a filtering algorithm similar to the PrefixSpan method. However, the resulting system is not as scalable as some of the most advanced mining systems like Zaki's cSPADE. We show how, using techniques from both data mining and CP, one can use a generic constraint solver and yet outperform existing specialized systems. This is mainly due to two improvements in the module that computes the projected frequencies: first, computing the projected database can be sped up by pre-computing the positions at which an symbol can become unsupported by a sequence, thereby avoiding to scan the full sequence each time; and second by taking inspiration from the trailing used in CP solvers to devise a backtracking-aware data structure that allows fast incremental storing and restoring of the projected database. Detailed experiments show how this approach outperforms existing CP as well as specialized systems for SPM, and that the gain in efficiency translates directly into increased efficiency for other settings such as mining with regular expressions.", "histories": [["v1", "Tue, 5 Apr 2016 08:15:24 GMT  (1341kb)", "http://arxiv.org/abs/1604.01166v1", "frequent sequence mining, constraint programming"]], "COMMENTS": "frequent sequence mining, constraint programming", "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["john o r aoga", "tias guns", "pierre schaus"], "accepted": false, "id": "1604.01166"}, "pdf": {"name": "1604.01166.pdf", "metadata": {"source": "CRF", "title": "An Efficient Algorithm for Mining Frequent Sequence with Constraint Programming", "authors": ["John O.R. Aoga", "Tias Guns", "Pierre Schaus"], "emails": ["john.aoga@uclouvain.be", "pierre.schaus@uclouvain.be", "tias.guns@cs.kuleuven.be"], "sections": [{"heading": null, "text": "ar Xiv: 160 4.01 166v 1 [cs.D B] 5A pr"}, {"heading": "1 Introduction", "text": "In recent years, the problem of coercive programmes (CP) has proved to be a general framework for achieving targets, each of which can be considered a module that is so simple that it is a modular approach. A CP framework expresses a problem that is characterised by a series of constraints that have to be met by the solutions. Each of these coercive controls can be considered a module that is so simple that it does not contain a specific symbol in a particular position."}, {"heading": "2 Related works", "text": "In this context, it should be noted that this problem is a sequence pattern that can only be extended by appending symbols. In view of this, one can calculate the projected database of all sufficiency sources that have the prefix as a subsequence. Considering that this prefix is a sequence pattern, one can assume that the sequence pattern is a sequence pattern that can only be extended by appending symbols. In view of this, one can calculate the projected database of all sufficiency sequences that have the prefix as a subsequence pattern."}, {"heading": "3 Sequential Pattern Mining Background", "text": "This section presents the necessary concepts and definitions of sequence mining and constraint programming."}, {"heading": "3.1 Sequence Mining Background", "text": "Let me = {s1,. < sN} be a set of N = > symbols. < DB = > DB = > Database. A sequence s = < s1s2. A sequence s = < s1s2. A sequence s = < s1s2. About me is a sequence of (potentially repetitive) symbols sj, j [1, n] with # s = n the length of the sequence s. A set of tuples (sid, s) where sid is a sequence and s is a sequence called a sequence database (SDB). Example 1 shows an example SDB1 about symbols I = {A, B, C, D}. For the sequence s = < BABC >: # s = 2 = A, s1 = A, 3 = B, 4 = DB = 1."}, {"heading": "3.2 Constraint Programming Background", "text": "A CP problem (V, D, C) is defined by mapping the variables to a value from its domain, so that all constraints are satisfactory. At its core, the CP solvers are in-depth search algorithms that oscillate between unassigned variables."}, {"heading": "4 Global constraints for projected frequency", "text": "First, we present the basic CP model of frequent sequence mining introduced in [4] and extended in [7], then we present how to improve the calculation of the pseudo-projection, followed by the projected frequency counting and the intersection."}, {"heading": "4.1 Existing methods [4,7]", "text": "The CP model is designed in such a way that a single solution corresponds to a frequent sequence, which means that all sequences can be extracted by enumerating all approaches to solving the problem. Let L is an upper limit on the pattern length, e.g. the length of the longest sequence in the database. Each variable has an initial domain {0,., N}, which corresponds to all possible symbols and is associated with an additional identifier 0. The symbol with the identifier 0 represents the empty symbol. It is used to mark the end of the sequence in P, with a trailing suffix such as 0. Definition 6. A CP model over the frequent sequence is threshold 3, iff the following three conditions are met."}, {"heading": "4.2 Improving propagation", "text": "In fact, it is true that it is a way in which most people are able to survive on their own}, {"heading": "4.3 Constraints of SPM", "text": "We implemented general constraints such as minimum and maximum pattern size, symbol inclusion / exclusion, and regular expression constraints. Time constraints (maxgap, mingap, maxspan, etc.) are outside the scope of this work: they change the definition of what is a valid prefix and therefore require a change in the propagator (as in [5])."}, {"heading": "5 Experiments", "text": "In fact, most of them are able to go to another world, to go to another world, to go to another world."}, {"heading": "6 Conclusion", "text": "This work improved the existing CP-based sequential pattern mining approaches [4,5] to the point where it also outperforms specialized mining systems in terms of efficiency. To this end, we combined advanced ideas from the sequence mining literature, namely last position lists [9], as well as from the CP literature, namely memory-efficient data structures for storing and restoring state during traceability searches. We introduced the PrefixProjection-Inc (PPIC), PrefixProjection-Dec (PDC) and PrefixProjection-mixed (PPmixed) global constraints, which propose different strategies for calculating projected frequencies: from scratch by reducing them, or a mixture of both. These constraints can be inserted as modules in a CP solver. These constraints are implemented in Scala and made available in the generic OscaR solver."}], "references": [{"title": "A taxonomy of sequential pattern mining algorithms", "author": ["N.R. Mabroukeh", "C.I. Ezeife"], "venue": "ACM Comput. Surv. 43(1)", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2010}, {"title": "Itemset mining: A constraint programming perspective", "author": ["T. Guns", "S. Nijssen", "L. De Raedt"], "venue": "Artificial Intelligence 175(12)", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "A SAT-based approach for discovering frequent, closed and maximal patterns in a sequence", "author": ["E. Coquery", "S. Jabbour", "L. Sa\u00efs", "Y. Salhi"], "venue": "ECAI.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Constraint-based sequence mining using constraint programming", "author": ["B. Negrevergne", "T. Guns"], "venue": "CPAIOR15. Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}, {"title": "A global constraint for mining sequential patterns with gap constraint", "author": ["A. Kemmar", "S. Loudni", "Y. Lebbah", "P. Boizumault", "T. Charnois"], "venue": "CPAIOR16", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Prefixspan: Mining sequential patterns efficiently by prefix-projected pattern growth", "author": ["J. Pei", "J. Han", "B. Mortazavi-Asl", "H. Pinto", "Q. Chen", "U. Dayal", "M.C. Hsu"], "venue": "icccn, IEEE", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2001}, {"title": "Prefixprojection global constraint for sequential pattern mining", "author": ["A. Kemmar", "S. Loudni", "Y. Lebbah", "P. Boizumault", "T. Charnois"], "venue": "Principles and Practice of Constraint Programming, Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "Sequence mining in categorical domains: incorporating constraints", "author": ["M.J. Zaki"], "venue": "Proceedings of the ninth international conference on Information and knowledge management, ACM", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2000}, {"title": "LAPIN-SPAM: An Improved Algorithm for Mining Sequential Pattern", "author": ["Z. Yang", "M. Kitsuregawa"], "venue": "International Conference on Data Engineering.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "Mining sequential patterns", "author": ["R. Agrawal", "R. Srikant"], "venue": "Data Engineering, 1995. Proceedings of the Eleventh International Conference on, IEEE", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1995}, {"title": "Sequential pattern mining using a bitmap representation", "author": ["J. Ayres", "J. Flannick", "J. Gehrke", "T. Yiu"], "venue": "ACM SIGKDD.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2002}, {"title": "LAPIN: effective sequential pattern mining algorithms by last position induction for dense databases", "author": ["Z. Yang", "Y. Wang", "M. Kitsuregawa"], "venue": "DAFSAA.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2007}, {"title": "Clospan: Mining closed sequential patterns in large datasets", "author": ["X. Yan", "J. Han", "R. Afshar"], "venue": "In SDM, SIAM", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "Sequence mining automata: A new technique for mining frequent sequences under regular expressions", "author": ["R. Trasarti", "F. Bonchi", "B. Goethals"], "venue": "Data Mining, 2008. ICDM\u201908. Eighth IEEE International Conference on, IEEE", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2008}, {"title": "Handbook of CP", "author": ["F. Rossi", "P. Van Beek", "T. Walsh"], "venue": "Elsevier", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Finite domain constraint programming systems", "author": ["C. Schulte", "M. Carlsson"], "venue": "Handbook of constraint programming", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Improving gac-4 for table and mdd constraints", "author": ["G. Perez", "J.C. Regin"], "venue": "Principles and Practice of Constraint Programming, Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "It has applications ranging from web usage mining, text mining, biological sequence analysis and human mobility mining [1].", "startOffset": 119, "endOffset": 122}, {"referenceID": 1, "context": "In recent years, constraint programming (CP) has been proposed as a general framework for pattern mining [2,3,4,5].", "startOffset": 105, "endOffset": 114}, {"referenceID": 2, "context": "In recent years, constraint programming (CP) has been proposed as a general framework for pattern mining [2,3,4,5].", "startOffset": 105, "endOffset": 114}, {"referenceID": 3, "context": "In recent years, constraint programming (CP) has been proposed as a general framework for pattern mining [2,3,4,5].", "startOffset": 105, "endOffset": 114}, {"referenceID": 4, "context": "In recent years, constraint programming (CP) has been proposed as a general framework for pattern mining [2,3,4,5].", "startOffset": 105, "endOffset": 114}, {"referenceID": 3, "context": "[4] have shown that a fine-grained modular approach to sequence mining can support any type of constraints, including gap and span constraints and any quality function beyond frequency, but that this is not competitive with state-of-theart specialized methods.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "On the other hand, by using a global constraint that computes the pseudo-projection of the sequences in the database similar to PrefixSpan [6], this overhead can be reduced.", "startOffset": 139, "endOffset": 142}, {"referenceID": 4, "context": "[5,7] have further extended this work by introducing one constraint (module) for both the pseudoprojection and the frequency pruning.", "startOffset": 0, "endOffset": 5}, {"referenceID": 6, "context": "[5,7] have further extended this work by introducing one constraint (module) for both the pseudoprojection and the frequency pruning.", "startOffset": 0, "endOffset": 5}, {"referenceID": 7, "context": "While reasonable performance is obtained, especially for mining under regular expressions, the method does not achieve the same scalability as some of the best specialized systems such as Zaki\u2019s cSpade [8].", "startOffset": 202, "endOffset": 205}, {"referenceID": 8, "context": "First, we improve the efficiency of computing the projected database and the projected frequency using last-position lists, similar to the LAPIN algorithm [9] but within a PrefixSpan approach.", "startOffset": 155, "endOffset": 158}, {"referenceID": 0, "context": "A more thorough review of algorithmic developments is given in [1].", "startOffset": 63, "endOffset": 66}, {"referenceID": 9, "context": "Introduced by Srikant and Agrawal [10], GSP was the first approach to extract sequential patterns from a sequential database.", "startOffset": 34, "endOffset": 38}, {"referenceID": 5, "context": "A seminal work is that of PrefixSpan [6].", "startOffset": 37, "endOffset": 40}, {"referenceID": 7, "context": "Alternative methods such as SPADE [8] and SPAM [11] use a vertical representation of the database, having for each symbol a list of sequence identifiers and positions at which that symbol appears.", "startOffset": 34, "endOffset": 37}, {"referenceID": 10, "context": "Alternative methods such as SPADE [8] and SPAM [11] use a vertical representation of the database, having for each symbol a list of sequence identifiers and positions at which that symbol appears.", "startOffset": 47, "endOffset": 51}, {"referenceID": 11, "context": "have shown [12] that algorithms with either data representation can be improved by precomputing the last position of each symbol in a sequence.", "startOffset": 11, "endOffset": 15}, {"referenceID": 7, "context": "The standard sequence mining settings have been extended in a number of directions, including user-defined constraints on length or on the gap or span of a sequence such as in the cSPADE algorithm [8], closed patterns [13] and algorithms that can handle regular expression constraints on the patterns such as SMA [14].", "startOffset": 197, "endOffset": 200}, {"referenceID": 12, "context": "The standard sequence mining settings have been extended in a number of directions, including user-defined constraints on length or on the gap or span of a sequence such as in the cSPADE algorithm [8], closed patterns [13] and algorithms that can handle regular expression constraints on the patterns such as SMA [14].", "startOffset": 218, "endOffset": 222}, {"referenceID": 13, "context": "The standard sequence mining settings have been extended in a number of directions, including user-defined constraints on length or on the gap or span of a sequence such as in the cSPADE algorithm [8], closed patterns [13] and algorithms that can handle regular expression constraints on the patterns such as SMA [14].", "startOffset": 313, "endOffset": 317}, {"referenceID": 2, "context": "Early work has focused on fixedlength sequences with wildcards [3].", "startOffset": 63, "endOffset": 66}, {"referenceID": 3, "context": "More generally, [4] proposed two approaches: a full decomposition of the problem in terms of constraints and an approach using a global constraint to construct the pseudo-projected database similar to PrefixSpan.", "startOffset": 16, "endOffset": 19}, {"referenceID": 6, "context": "Kemmar et al [7] propose to gather all these constraints into a unique global constraint to reduce the overhead of the multiple constraints.", "startOffset": 13, "endOffset": 16}, {"referenceID": 4, "context": "They further showed how the constraint can be modified to take a maximal gap constraint into account [5].", "startOffset": 101, "endOffset": 104}, {"referenceID": 9, "context": "The sequential pattern mining (SPM) problem, first introduced by Agrawal and Srikant [10], is the following:", "startOffset": 85, "endOffset": 89}, {"referenceID": 5, "context": "These concepts were first introduced in the seminal paper that presented the PrefixSpan algorithm [6].", "startOffset": 98, "endOffset": 101}, {"referenceID": 14, "context": ", [15]).", "startOffset": 2, "endOffset": 6}, {"referenceID": 3, "context": "For example, [4] introduced a global constraint for the pseudo-projection of a single sequence, and [5] for the entire projected frequency subproblem.", "startOffset": 13, "endOffset": 16}, {"referenceID": 4, "context": "For example, [4] introduced a global constraint for the pseudo-projection of a single sequence, and [5] for the entire projected frequency subproblem.", "startOffset": 100, "endOffset": 103}, {"referenceID": 15, "context": "In most of the CP solvers a general mechanism, called trailing is used for storing and restoring the state (on backtrack) [16].", "startOffset": 122, "endOffset": 126}, {"referenceID": 3, "context": "We first introduce the basic CP model of frequent sequence mining introduced in [4] and extended in [7].", "startOffset": 80, "endOffset": 83}, {"referenceID": 6, "context": "We first introduce the basic CP model of frequent sequence mining introduced in [4] and extended in [7].", "startOffset": 100, "endOffset": 103}, {"referenceID": 3, "context": "1 Existing methods [4,7]", "startOffset": 19, "endOffset": 24}, {"referenceID": 6, "context": "1 Existing methods [4,7]", "startOffset": 19, "endOffset": 24}, {"referenceID": 3, "context": "Prefix projection global constraint Initial work [4] proposed to decompose these three conditions into separate constraints, including a dedicated global constraint for the inclusion relation \u3008P1 .", "startOffset": 49, "endOffset": 52}, {"referenceID": 6, "context": "[7] extended this idea by encapsulating the filtering of all three conditions into one single (global) constraint called PrefixProjection.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "Although being the state-of-art approach for solving SPM with CP, the filtering algorithm of Kemmar et al [5] presents room for improvement.", "startOffset": 106, "endOffset": 109}, {"referenceID": 11, "context": "This idea was first introduced in [12] and exploited in the LAPIN family of algorithms.", "startOffset": 34, "endOffset": 38}, {"referenceID": 0, "context": "Indeed according to lastPosList[sid1][1] the maximum last position is 5 (corresponding to the last C).", "startOffset": 37, "endOffset": 40}, {"referenceID": 1, "context": "Then according to lastPosList[sid1][2] the second maximum last position is 4 (corresponding to the last position of symbol B).", "startOffset": 35, "endOffset": 38}, {"referenceID": 16, "context": "Inspired from the reset idea of [17] the PP-mixed approach dynamically chooses the best strategy: if projFreqsSDB(a) < #PSDBi/2 (i.", "startOffset": 32, "endOffset": 36}, {"referenceID": 4, "context": "Time constraints (maxgap, mingap, maxspan,etc) are outside the scope of this work: they change the definition of what a valid prefix is, and hence require changing the propagator (as in [5]).", "startOffset": 186, "endOffset": 189}, {"referenceID": 13, "context": "In this section, we report our experimental results on the performance of our approaches with six real-life datasets and one synthetic (data200k [14]) with various characteristics shown in Table.", "startOffset": 145, "endOffset": 149}, {"referenceID": 3, "context": "Our proposals are compared, first, with CPSM[4] and Gap-Seq[5], the recently CP-based approaches including Gap constraint and the previous version of Gap-Seq, PP[7] without Gap but with regular expression constraint.", "startOffset": 44, "endOffset": 47}, {"referenceID": 4, "context": "Our proposals are compared, first, with CPSM[4] and Gap-Seq[5], the recently CP-based approaches including Gap constraint and the previous version of Gap-Seq, PP[7] without Gap but with regular expression constraint.", "startOffset": 59, "endOffset": 62}, {"referenceID": 6, "context": "Our proposals are compared, first, with CPSM[4] and Gap-Seq[5], the recently CP-based approaches including Gap constraint and the previous version of Gap-Seq, PP[7] without Gap but with regular expression constraint.", "startOffset": 161, "endOffset": 164}, {"referenceID": 7, "context": "Second, we made comparison with cSpade[8], PrefixSpan [6] and SPMF.", "startOffset": 38, "endOffset": 41}, {"referenceID": 5, "context": "Second, we made comparison with cSpade[8], PrefixSpan [6] and SPMF.", "startOffset": 54, "endOffset": 57}, {"referenceID": 13, "context": "(b,c) We also selected data200k adding a regular expression constraint RE10 = A \u2217 B(B|C)D \u2217 EF \u2217 (G|H)I\u2217 and RE14 = A \u2217 (Q|BS \u2217 (B|C))D \u2217 E(I |S) \u2217 (F |H)G \u2217 R [14].", "startOffset": 160, "endOffset": 164}, {"referenceID": 3, "context": "This work improved the existing CP-based sequential pattern mining approaches [4,5] up to the point that it also surpasses specialized mining systems in terms of efficiency.", "startOffset": 78, "endOffset": 83}, {"referenceID": 4, "context": "This work improved the existing CP-based sequential pattern mining approaches [4,5] up to the point that it also surpasses specialized mining systems in terms of efficiency.", "startOffset": 78, "endOffset": 83}, {"referenceID": 8, "context": "To do so, we combined advanced ideas from the sequence mining literature, namely last-position lists [9], as well as from the CP literature, namely memory-efficient data-structures for storing and restoring state during backtracking search.", "startOffset": 101, "endOffset": 104}, {"referenceID": 4, "context": "There are other constraints which change the subsequence relation and which would hence require hardcoding changes in the propagator (gap [5], span, etc).", "startOffset": 138, "endOffset": 141}, {"referenceID": 1, "context": "Our work shows that generic CP solvers can indeed be used as framework to build scalable mining algorithms, not just for generic yet less scalable systems as was done for itemset mining [2].", "startOffset": 186, "endOffset": 189}], "year": 2016, "abstractText": "The main advantage of Constraint Programming (CP) approaches for sequential pattern mining (SPM) is their modularity, which includes the ability to add new constraints (regular expressions, length restrictions, etc). The current best CP approach for SPM uses a global constraint (module) that computes the projected database and enforces the minimum frequency; it does this with a filtering algorithm similar to the PrefixSpan method. However, the resulting system is not as scalable as some of the most advanced mining systems like Zaki\u2019s cSPADE. We show how, using techniques from both data mining and CP, one can use a generic constraint solver and yet outperform existing specialized systems. This is mainly due to two improvements in the module that computes the projected frequencies: first, computing the projected database can be sped up by pre-computing the positions at which an symbol can become unsupported by a sequence, thereby avoiding to scan the full sequence each time; and second by taking inspiration from the trailing used in CP solvers to devise a backtracking-aware data structure that allows fast incremental storing and restoring of the projected database. Detailed experiments show how this approach outperforms existing CP as well as specialized systems for SPM, and that the gain in efficiency translates directly into increased efficiency for other settings such as mining with regular expressions.", "creator": "LaTeX with hyperref package"}}}