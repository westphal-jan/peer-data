{"id": "1604.03793", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Apr-2016", "title": "HordeQBF: A Modular and Massively Parallel QBF Solver", "abstract": "The recently developed massively parallel satisfiability (SAT) solver HordeSAT was designed in a modular way to allow the integration of any sequential CDCL-based SAT solver in its core. We integrated the QCDCL-based quantified Boolean formula (QBF) solver DepQBF in HordeSAT to obtain a massively parallel QBF solver---HordeQBF. In this paper we describe the details of this integration and report on results of the experimental evaluation of HordeQBF's performance. HordeQBF achieves superlinear average and median speedup on the hard application instances of the 2014 QBF Gallery.", "histories": [["v1", "Wed, 13 Apr 2016 14:21:34 GMT  (63kb,D)", "http://arxiv.org/abs/1604.03793v1", "camera-ready version, 6-page tool paper, to appear in the proceedings of SAT 2016, LNCS, Springer"]], "COMMENTS": "camera-ready version, 6-page tool paper, to appear in the proceedings of SAT 2016, LNCS, Springer", "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["tomas balyo", "florian lonsing"], "accepted": false, "id": "1604.03793"}, "pdf": {"name": "1604.03793.pdf", "metadata": {"source": "CRF", "title": "HordeQBF: A Modular and Massively Parallel QBF Solver", "authors": ["Tom\u00e1\u0161 Balyo", "Florian Lonsing"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "HordeSAT [3] is a modular, massively parallel SAT solver that enables the integration of any sequential CDCL-based SAT solver into its core, enabling advances in CDCL-SAT solving to be translated into a parallel environment. Experiments have shown that HordeSAT can achieve superlinear average speedup to hard benchmarks. Of course, the logic of quantified Boolean formulas (QBFs) extends to SAT by explicitly quantifying propositive variables. Problems in complexity classes beyond NP, especially PSPACE-complete problems in domains such as formal verification, reactive synthesis or planning can be encoded as QBFs. QBF solvers based on QBF-specific variant of CDCL, apply techniques similar to CDCL solvers."}, {"heading": "2 Preliminaries", "text": "We look at closed QBFs: = \u043f.\u03c6 in prenex CNF (PCNF) consisting of a quantifier-free CNF \u03c6 over a set of V variables and a quantifier prefix \u0442: = Q1v1... Qnvn, in which Qi- {, as well as vi-V. QBF solving with clause and cube (QCDCL) [9,15,27], also called Constraint Learning, is a generalization of conflict-driven clause learning (CDCL) for SAT. The variables in a PCNF solution are assigned by decision-making, unit propagation and pure letter recognition. Assignments by decision-making must follow the sequence from left to right. If a clause under the current assignment A is forged, then a learned clause C is derived by Q-resolution [14] and assigned conjunctively to the clause. If all clauses under A or A are fulfilled, then a assignment under the current assignment A can also be learned by Qtractus and during the current assignment of Cubic."}, {"heading": "3 Related Work", "text": "Approaches to the parallel QBF solution are based on shared and distributed memory architectures. PQSolve [7] is an early parallel DPLL [5] solution without knowledge exchange. It comes with a dynamic master / slave framework, which is implemented via the Message Passing Interface (MPI) [10]. The search space is divided between master and slave by variable assignments. QMiraXT [16] is a multithreaded QCDCL solver with search space partitioning. PAQuBE [17] is an MPI-based parallel variant of the QCDCL solver QuBE [8]. Klause and cube sharing in PAQuBE can be dynamically adapted at runtime. The search space is based on guidance paths as in the SAT solver PSATO [25]. The MPI-based solver MPIDepQBF [13] implements a master word exchange solution QM, which consists of a QCDL solution architecture without any problems."}, {"heading": "4 The HordeSAT Parallelization Framework", "text": "HordeSAT is a portfolio SAT solver with clause sharing [3]. It can be considered a multithreaded program that executes multiple instances of a sequential SAT solver and communicates with other instances of the same program via MPI. The parallelization framework has three main tasks: to ensure that the core solvers are diversified, to handle the clause exchange, and to stop all solvers when one of them solves the problem. To communicate with the core solvers, it uses an API described in detail in the HordeSAT paper [3]. Since the HordeQBF interface is identical, we will briefly list the most relevant methods: void diversify (int rank, int size): This method instructs the core solver to diversify its settings, leaving the specifications of diversification to the solver. The description for DepQBF is specified in the following section: void diversify clause > clause <"}, {"heading": "5 QBF Solver Integration", "text": "This year it is more than ever before in the history of the city."}, {"heading": "6 Experimental Evaluation", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "7 Conclusion", "text": "We have shown that QBF solutions can be successfully parallelized using the same techniques as massively parallel SAT solutions. Our parallel QBF solver HordeQBF achieved superlinear total and median acceleration for hard cases, i.e. cases where parallelization makes sense. As a future work, it would be interesting to consider further variants of Qresolution systems [2] (apart from traditional [14] and long-range resolution [1,26]) as a means of diversification into HordeQBF, which would be equivalent to a combination of QBF evidence systems with different performance. Furthermore, equipping HordeQBF with a search space division as in MPIDepQBF [13] could be very promising."}], "references": [{"title": "Unified QBF certification and its applications", "author": ["V. Balabanov", "J.R. Jiang"], "venue": "Formal Methods in System Design 41(1), 45\u201365", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "QBF Resolution Systems and Their Proof Complexities", "author": ["V. Balabanov", "M. Widl", "J.R. Jiang"], "venue": "SAT. LNCS, vol. 8561, pp. 154\u2013169. Springer", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "HordeSat: A Massively Parallel Portfolio SAT Solver", "author": ["T. Balyo", "P. Sanders", "C. Sinz"], "venue": "SAT. LNCS, vol. 9340, pp. 156\u2013172. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "PicoSAT Essentials", "author": ["A. Biere"], "venue": "JSAT 4(2-4), 75\u201397", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "An Algorithm to Evaluate Quantified Boolean Formulae", "author": ["M. Cadoli", "A. Giovanardi", "M. Schaerf"], "venue": "AAAI. pp. 262\u2013267. AAAI Press / The MIT Press", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1998}, {"title": "An Extensible SAT-solver", "author": ["N. E\u00e9n", "N. S\u00f6rensson"], "venue": "SAT. LNCS, vol. 2919, pp. 502\u2013518. Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "A Distributed Algorithm to Evaluate Quantified Boolean Formulae", "author": ["R. Feldmann", "B. Monien", "S. Schamberger"], "venue": "Proc. of the 17th Nat. Conference on Artificial Intelligence (AAAI 2000). pp. 285\u2013290. AAAI", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2000}, {"title": "Clause/Term Resolution and Learning in the Evaluation of Quantified Boolean Formulas", "author": ["E. Giunchiglia", "M. Narizzano", "A. Tacchella"], "venue": "JAIR 26, 371\u2013416", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2006}, {"title": "A high-performance, portable implementation of the mpi message passing interface standard", "author": ["W. Gropp", "E. Lusk", "N. Doss", "A. Skjellum"], "venue": "Parallel computing 22(6), 789\u2013828", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1996}, {"title": "Clause Elimination for SAT and QSAT", "author": ["M. Heule", "M. J\u00e4rvisalo", "F. Lonsing", "M. Seidl", "A. Biere"], "venue": "J. Artif. Intell. Res. (JAIR) 53, 127\u2013168", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "The QBFGallery 2014: The QBF Competition at the FLoC Olympic Games", "author": ["M. Janota", "C. Jordan", "W. Klieber", "F. Lonsing", "M. Seidl", "A. Van Gelder"], "venue": "JSAT 9, 187\u2013206", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}, {"title": "MPIDepQBF: Towards Parallel QBF Solving without Knowledge Sharing", "author": ["C. Jordan", "L. Kaiser", "F. Lonsing", "M. Seidl"], "venue": "SAT. LNCS, vol. 8561, pp. 430\u2013437. Springer", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2014}, {"title": "Resolution for Quantified Boolean Formulas", "author": ["H. Kleine B\u00fcning", "M. Karpinski", "A. Fl\u00f6gel"], "venue": "Inf. Comput. 117(1), 12\u201318", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1995}, {"title": "Lemma and Model Caching in Decision Procedures for Quantified Boolean Formulas", "author": ["R. Letz"], "venue": "TABLEAUX. LNCS, vol. 2381, pp. 160\u2013175. Springer", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "QMiraXT \u2013 a multithreaded QBF solver", "author": ["M. Lewis", "T. Schubert", "B. Becker"], "venue": "Methoden und Beschreibungssprachen zur Modellierung und Verifikation von Schaltungen und Systemen (MBMV)", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2009}, {"title": "Parallel QBF Solving with Advanced Knowledge Sharing", "author": ["M. Lewis", "T. Schubert", "B. Becker", "P. Marin", "M. Narizzano", "E. Giunchiglia"], "venue": "Fundamenta Informaticae 107(2-3), 139\u2013166", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2011}, {"title": "Enhancing Search-Based QBF Solving by Dynamic Blocked Clause Elimination", "author": ["F. Lonsing", "F. Bacchus", "A. Biere", "U. Egly", "M. Seidl"], "venue": "LPAR. LNCS, vol. 9450, pp. 418\u2013433. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2015}, {"title": "DepQBF: A Dependency-Aware QBF Solver", "author": ["F. Lonsing", "A. Biere"], "venue": "JSAT 7(2-3), 71\u201376", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2010}, {"title": "Integrating Dependency Schemes in Search-Based QBF Solvers", "author": ["F. Lonsing", "A. Biere"], "venue": "SAT. LNCS, vol. 6175, pp. 158\u2013171. Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2010}, {"title": "A new parallel architecture for QBF tools", "author": ["B.D. Mota", "P. Nicolas", "I. St\u00e9phan"], "venue": "Proc. of the Int. Conf. on High Performance Computing and Simulation (HPCS 2010). pp. 324\u2013330. IEEE", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "A Lightweight Component Caching Scheme for Satisfiability Solvers", "author": ["K. Pipatsrisawat", "A. Darwiche"], "venue": "SAT. LNCS, vol. 4501, pp. 294\u2013299. Springer", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "AQME\u201910", "author": ["L. Pulina", "A. Tacchella"], "venue": "JSAT 7(2-3), 65\u201370", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "A Parallel Solving Algorithm for Quantified Constraints Problems", "author": ["J. Vautard", "A. Lallouet", "Y. Hamadi"], "venue": "ICTAI. pp. 271\u2013274. IEEE Computer Society", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2010}, {"title": "PSATO: A Distributed Propositional Prover and its Application to Quasigroup Problems", "author": ["H. Zhang", "M.P. Bonacina", "J. Hsiang"], "venue": "J. Symb. Comput. 21(4), 543\u2013560", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1996}, {"title": "Conflict driven learning in a quantified Boolean Satisfiability solver", "author": ["L. Zhang", "S. Malik"], "venue": "ICCAD. pp. 442\u2013449. ACM / IEEE Computer Society", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2002}, {"title": "Towards a Symmetric Treatment of Satisfaction and Conflicts in Quantified Boolean Formula Evaluation", "author": ["L. Zhang", "S. Malik"], "venue": "CP. LNCS, vol. 2470, pp. 200\u2013215. Springer", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2002}], "referenceMentions": [{"referenceID": 2, "context": "HordeSAT [3] is a modular massively parallel SAT solver which allows the integration of any sequential CDCL-based SAT solver in its core.", "startOffset": 9, "endOffset": 12}, {"referenceID": 16, "context": "0 of the QCDCL-based solver DepQBF [18] in HordeSAT to obtain the massively parallel QBF solver HordeQBF.", "startOffset": 35, "endOffset": 39}, {"referenceID": 7, "context": "QBF solving with clause and cube learning (QCDCL) [9,15,27], also called constraint learning, is a generalization of conflict-driven clause learning (CDCL) for SAT.", "startOffset": 50, "endOffset": 59}, {"referenceID": 13, "context": "QBF solving with clause and cube learning (QCDCL) [9,15,27], also called constraint learning, is a generalization of conflict-driven clause learning (CDCL) for SAT.", "startOffset": 50, "endOffset": 59}, {"referenceID": 25, "context": "QBF solving with clause and cube learning (QCDCL) [9,15,27], also called constraint learning, is a generalization of conflict-driven clause learning (CDCL) for SAT.", "startOffset": 50, "endOffset": 59}, {"referenceID": 12, "context": "If a clause is falsified under the current assignment A, then a learned clause C is derived from \u03c8 by Q-resolution [14] and added conjunctively to \u03c8.", "startOffset": 115, "endOffset": 119}, {"referenceID": 7, "context": "Learned cubes may also be derived by term resolution [9], a variant of Q-resolution applied to previously learned cubes.", "startOffset": 53, "endOffset": 56}, {"referenceID": 6, "context": "PQSolve [7] is an early parallel DPLL [5] solver without knowledge sharing.", "startOffset": 8, "endOffset": 11}, {"referenceID": 4, "context": "PQSolve [7] is an early parallel DPLL [5] solver without knowledge sharing.", "startOffset": 38, "endOffset": 41}, {"referenceID": 8, "context": "It comes with a dynamic master/slave framework implemented using the message passing interface (MPI) [10].", "startOffset": 101, "endOffset": 105}, {"referenceID": 14, "context": "QMiraXT [16] is a multithreaded QCDCL solver with search space partitioning.", "startOffset": 8, "endOffset": 12}, {"referenceID": 15, "context": "PAQuBE [17] is an MPI-based parallel variant of the QCDCL solver QuBE [8].", "startOffset": 7, "endOffset": 11}, {"referenceID": 23, "context": "Search space is partitioned like in the SAT solver PSATO based on guiding paths [25].", "startOffset": 80, "endOffset": 84}, {"referenceID": 11, "context": "The MPI-based solver MPIDepQBF [13] implements a master/worker architecture without knowledge sharing.", "startOffset": 31, "endOffset": 35}, {"referenceID": 17, "context": "A worker consists of an instance of the QCDCL solver DepQBF [19].", "startOffset": 60, "endOffset": 64}, {"referenceID": 22, "context": "Parallel solving approaches have also been presented for quantified CSPs [24] and non-PCNF QBFs [21].", "startOffset": 73, "endOffset": 77}, {"referenceID": 19, "context": "Parallel solving approaches have also been presented for quantified CSPs [24] and non-PCNF QBFs [21].", "startOffset": 96, "endOffset": 100}, {"referenceID": 21, "context": "Whereas sequential portfolio solvers like AQME [23] include different QBF solvers, HordeQBF integrates instances of the same QCDCL solver (i.", "startOffset": 47, "endOffset": 51}, {"referenceID": 2, "context": "HordeSAT is a portfolio SAT solver with clause sharing [3].", "startOffset": 55, "endOffset": 58}, {"referenceID": 2, "context": "To communicate with the core solvers it uses an API which is described in detail in the HordeSAT paper [3].", "startOffset": 103, "endOffset": 106}, {"referenceID": 16, "context": "0 of DepQBF which comes with a dynamic variant of blocked clause elimination (QBCE) [18] for advanced cube learning.", "startOffset": 84, "endOffset": 88}, {"referenceID": 9, "context": "QBCE allows to eliminate redundant clauses from a PCNF [11].", "startOffset": 55, "endOffset": 59}, {"referenceID": 17, "context": "DepQBF features a sophisticated analysis of variable dependencies in a PCNF [19,20] to relax the linear ordering of variables in the prefix.", "startOffset": 76, "endOffset": 83}, {"referenceID": 18, "context": "DepQBF features a sophisticated analysis of variable dependencies in a PCNF [19,20] to relax the linear ordering of variables in the prefix.", "startOffset": 76, "endOffset": 83}, {"referenceID": 16, "context": "For the experiments in this paper, however, we disabled dependency analysis for both HordeQBF and the sequential variant of DepQBF since the use of dependency information causes run time overhead (during clause/cube learning) in addition to overhead already caused by dynamic blocked clause elimination (QBCE) [18].", "startOffset": 310, "endOffset": 314}, {"referenceID": 17, "context": "This is different from the original restart policy of DepQBF [19], where the solver backtracks to higher decision levels depending on the current assignment.", "startOffset": 61, "endOffset": 65}, {"referenceID": 20, "context": "The values of variables in the assignment cache [22] are initialized at random.", "startOffset": 48, "endOffset": 52}, {"referenceID": 5, "context": "DepQBF implements variable activities similar to MiniSAT [6].", "startOffset": 57, "endOffset": 60}, {"referenceID": 3, "context": "DepQBF implements a nested restart scheme similar to PicoSAT [4], the parameters of which are randomly selected.", "startOffset": 61, "endOffset": 64}, {"referenceID": 16, "context": "Variants of dynamic QBCE [18] are enabled at random, including switching off dynamic QBCE at all, or applying QBCE only as a preprocessing or inprocessing step.", "startOffset": 25, "endOffset": 29}, {"referenceID": 0, "context": "Finally, applications of long-distance resolution [1,26], an extension of traditional Q-resolution [14] used to derive learned constraints, are toggled at random.", "startOffset": 50, "endOffset": 56}, {"referenceID": 24, "context": "Finally, applications of long-distance resolution [1,26], an extension of traditional Q-resolution [14] used to derive learned constraints, are toggled at random.", "startOffset": 50, "endOffset": 56}, {"referenceID": 12, "context": "Finally, applications of long-distance resolution [1,26], an extension of traditional Q-resolution [14] used to derive learned constraints, are toggled at random.", "startOffset": 99, "endOffset": 103}, {"referenceID": 10, "context": "To examine our portfolio-based parallel QBF solver HordeQBF we performed experiments using all the 735 benchmark problems from the application track of the 2014 QBF Gallery [12].", "startOffset": 173, "endOffset": 177}, {"referenceID": 1, "context": "As future work it would be interesting to consider further variants of Qresolution systems [2] (apart from traditional [14] and long-distance resolution [1,26]) as a means of diversification in HordeQBF, which would amount to a combination of QBF proof systems with different power.", "startOffset": 91, "endOffset": 94}, {"referenceID": 12, "context": "As future work it would be interesting to consider further variants of Qresolution systems [2] (apart from traditional [14] and long-distance resolution [1,26]) as a means of diversification in HordeQBF, which would amount to a combination of QBF proof systems with different power.", "startOffset": 119, "endOffset": 123}, {"referenceID": 0, "context": "As future work it would be interesting to consider further variants of Qresolution systems [2] (apart from traditional [14] and long-distance resolution [1,26]) as a means of diversification in HordeQBF, which would amount to a combination of QBF proof systems with different power.", "startOffset": 153, "endOffset": 159}, {"referenceID": 24, "context": "As future work it would be interesting to consider further variants of Qresolution systems [2] (apart from traditional [14] and long-distance resolution [1,26]) as a means of diversification in HordeQBF, which would amount to a combination of QBF proof systems with different power.", "startOffset": 153, "endOffset": 159}, {"referenceID": 11, "context": "Further, it may be promising to equip HordeQBF with search space partitioning as in MPIDepQBF [13].", "startOffset": 94, "endOffset": 98}], "year": 2016, "abstractText": "The recently developed massively parallel satisfiability (SAT) solver HordeSAT was designed in a modular way to allow the integration of any sequential CDCL-based SAT solver in its core. We integrated the QCDCL-based quantified Boolean formula (QBF) solver DepQBF in HordeSAT to obtain a massively parallel QBF solver\u2014HordeQBF. In this paper we describe the details of this integration and report on results of the experimental evaluation of HordeQBF\u2019s performance. HordeQBF achieves superlinear average and median speedup on the hard application instances of the 2014 QBF Gallery.", "creator": "LaTeX with hyperref package"}}}