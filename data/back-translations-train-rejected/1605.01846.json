{"id": "1605.01846", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-May-2016", "title": "The KB paradigm and its application to interactive configuration", "abstract": "The knowledge base paradigm aims to express domain knowledge in a rich formal language, and to use this domain knowledge as a knowledge base to solve various problems and tasks that arise in the domain by applying multiple forms of inference. As such, the paradigm applies a strict separation of concerns between information and problem solving. In this paper, we analyze the principles and feasibility of the knowledge base paradigm in the context of an important class of applications: interactive configuration problems. In interactive configuration problems, a configuration of interrelated objects under constraints is searched, where the system assists the user in reaching an intended configuration. It is widely recognized in industry that good software solutions for these problems are very difficult to develop. We investigate such problems from the perspective of the KB paradigm. We show that multiple functionalities in this domain can be achieved by applying different forms of logical inferences on a formal specification of the configuration domain. We report on a proof of concept of this approach in a real-life application with a banking company. To appear in Theory and Practice of Logic Programming (TPLP).", "histories": [["v1", "Fri, 6 May 2016 07:39:19 GMT  (56kb)", "http://arxiv.org/abs/1605.01846v1", "To appear in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "To appear in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["pieter van hertum", "ingmar dasseville", "gerda janssens", "marc denecker"], "accepted": false, "id": "1605.01846"}, "pdf": {"name": "1605.01846.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Pieter Van Hertum", "Ingmar Dasseville", "Gerda Janssens", "Marc Denecker"], "emails": ["first.lastname@cs.kuleuven.be"], "sections": [{"heading": null, "text": "ar Xiv: 160 5.01 846v 1 [cs.A I] KEYWORDS: interactive configuration, knowledge paradigm, conclusions, applications of declarative systems"}, {"heading": "1 Introduction", "text": "In fact, it is not that it is a way in which people are able to determine themselves how they are to behave. (...) It is not that people are able to determine themselves how they are to behave. (...) It is not that people are able to determine themselves. (...) It is not that they are able to determine themselves. (...) It is not that they are doing it. (...) It is that they are not doing it. (...) It is that they are doing it. (...) It is that they are doing it. (...) It is that they are doing it. (...) It is that they are doing it, as if they are doing it. (...) It is that they are doing it, as if they are doing it, as if they are doing it, as if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it, if they are doing it."}, {"heading": "2 The FO(.) KB project", "text": "Language FO (\u00b7) refers to the class of extensions of first-order logic (FO) as used in logic, e.g. FO (LFP) stands for the extension of FO with a minimum of predisposition construction (Immerman and Vardi 1997). The language of the IDP system in the project is FO (T, ID, arit, PF) (Denecker and Ternovska 2008; Pelov et al. 2007): FO expands with types, definitions, aggregates, arithmetic and partial functions. Using notation, we will use FO (\u00b7) as an abbreviation for this language. Below, we will present the aspects of logic and its syntax on which this paper is based. A vocabulary is a set of type (referred to as \"T\"), predicate (referred to as \"P\"), and function symbols (referred to as \"F\")."}, {"heading": "3 Interactive Configuration", "text": "In an IC problem, one or more users are looking for a configuration of objects and relationships between them that meets a number of limitations.Typically, the user is not aware of all the limitations, there may be too many of them to keep an eye on. Even if the human user can monitor all the limitations that he has to fulfill, he is not a perfect rational person and cannot comprehend all the consequences of his decisions. That alone makes such problems difficult to solve. Furthermore, the problems get worse if the user does not know about the relevant objects and relationships or the limitations on them, or if the class of objects and relationships involved is large, if the limitations become more complex and \"irregular\" (e.g. exceptions), if more users are involved, etc. Furthermore, the underlying limitations in such problems tend to develop quickly. All of these complexities often occur, making the problem difficult for the human user. In such cases, computer help is required: The human user is required to help the system by helping him by selecting a specific number and through the IC, and it will be filled by the system."}, {"heading": "3.1 Running example: Domain knowledge", "text": "A simplified version of the application in Section 5.1 is used in Section 4 as a running example. The expertise of this example is presented here. Example 3.1. Software on a computer must be configured for different employees. Table 1 contains information about the software, requirements, employee budgets, and software prices. Software available is Windows, Linux, LATEX, Office, and a DualBoot system. Each software product has a price that can be seen in the PriceOf column. Column PreReq specifies which software is needed for other software.Each employee type has a budget that is provided in columnMaxCost. IsOs lists the software that is operating systems.In addition to the information in the table, we know that if more than one operating system is installed, a DualBoot system is required."}, {"heading": "3.2 Subtasks of an interactive configuration system", "text": "In this case, it is a case of a reactionary group that is able to go in search of a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution, that is able to find a solution."}, {"heading": "4 Interactive Configuration in the KB paradigm", "text": "In order to analyze the IC problem from the point of view of the KB, we aim to formalize the subtasks of section 3 as conclusions. In this essay, we do not deal with aspects of the user interface. For a particular application, our knowledge base consists of a vocabulary expressing the configuration constraints and a substructure. First, S0 is the substructure containing the domains of the types and the input data. While IC, S0 become more and more precise substructures Si based on the decisions made by the user. For IC, the KB also contains LS0, the set of all uninterpreted domain domain terms contained in S0. These domain terms are the logical formalization of the IC problem. In this section, all subtasks are formalized (a combination of) inferences based on this knowledge base consisting of T, S0, LS0 and collected information from the user."}, {"heading": "5 Proof of Concept", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1 Implementation", "text": "In this section we describe the developed application and implementation. Our application has a simple client-server architecture. The server plays the role of the argumentation engine, which is mainly a thin wrapper around the IDP system. The client consists of a GUI that was created in QML (QML 2015) as a front end. The server converts IDP into a stateless server that is accessible over the Web. The client application sends the necessary information, consisting of theories, substructures and decisions, to that server and the server executes the necessary conclusions. It is a design where the decisions made by a user are repeatedly sent, but it allows a very simple architecture to show the feasibility of our design. This implementation was done in collaboration with Adaptive Planet, a consulting company (Adaptive Planet 2015) that developed the user interface, and an international banking company that has provided us with a significant configuration demo for testing purposes. This implementation has been done in collaboration with Adaptive Planet, a consulting company (Adaptive Planet 2015) that has developed the user interface, and an international banking company that has provided us with a significant configuration demo problem for testing purposes."}, {"heading": "5.1.1 The Reasoning Engine", "text": "As explained above, the application we developed was built on the knowledge base system IDP, which was not specifically designed for configuration problems. It provides the basic conclusions that were reached at the end of Section 2. The aim of this experiment was to test whether this general infrastructure is readily applicable to applications such as configuration. In Section 4, we showed how the tasks required for configuration relate to the infrastructure provided by IDP. Our main implementation task was to convert these specifications into code. Some sub-tasks, such as auto-completion, do not require any additional effort as this functionality is directly available as a modeling extension inference. Some functionality, such as calculating consequences, require some work, but the existing functionality provided almost all the components needed. We mainly use the existing forms of conclusion that are readily available in the IDP system."}, {"heading": "5.1.2 User Interface", "text": "The frontend consists of an application written in the Qt framework using QML (QML 2015) and connects to a configuration engine via the web. For the purposes of our demonstration, we have developed two different graphical interfaces: Wizard In the wizard interface, the user is quizzed and answers subsequent questions selected by the system using the GetOpenTerms inference. An important side note here is that the user can choose not to answer a specific question, for example, because he cannot decide because he lacks relevant information or because he is not interested in the actual value (at this point). These parameters can be filled in later by the user, or by the system using the propagation, or if the user calls the configuration himself. Drill-Down In the drill-down interface, the user sees a list of open interfaces when this wizard selects the desired values and the next bit is in the user interface."}, {"heading": "5.2 Evaluation", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.2.1 Evaluation Criteria", "text": "This year, it will be able to leave the country to return to the EU, where it will be able to integrate into the EU."}, {"heading": "5.2.2 Evaluation", "text": "This year it is more than ever before."}, {"heading": "6 Related Work", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "6.1 Other approaches", "text": "The following discussion on knowledge-based approaches is based on a book in recent literature (Felfernig et al. 2014). After the discussion, we will compare the ten approaches with our approach (IDP). Historically, the first knowledge-based configuration systems are rule-based (RBS). These systems operate on a working memory and when the condition of a rule is met, working memory is modified and the conclusion of this rule is applied. Rule-based systems are sensitive to rule orders, making rule-base modification more difficult. The inclusion of rule-based problem solutions makes a rule-based problem specific and focuses on a specific task, resulting in the same problems as in imperative languages."}, {"heading": "6.2 Comparison of approaches", "text": "Felfernig et al. (2014) evaluated all of these paradigms with respect to the evaluation criteria of Section 5.2.1. In Table 2, we show this evaluation, along with scores for our implementation in the IDP column, based on the discussion of Section 5.2.2.All of these approaches are focused on a specific conclusion: Ontologies focus on derivatives, control systems focus on backward / forward concatenation, etc. These approaches are less general than the KB paradigm, which is specifically designed to reuse knowledge for various reasoning tasks. The contributions of this paper differ from the previously discussed approaches: We analyzed IC problems from a knowledge transfer perspective. This paper is a discussion of possible approaches and the importance of this point of view. We did a study of the desired functionalities for an IC system and how we define logical reasoning tasks to provide these functionalities."}, {"heading": "7 Challenges and Future Work", "text": "Interactive configuration problems are part of a broader type of problem, namely service delivery. Service delivery is the problem domain of linking services to end-users, from the request to the provision of the service. Traditionally, such problems start with designing a configuration system that allows users to communicate their wishes, for which we have provided a knowledge-based solution. Once all the information has been collected from a user, it is still necessary to create a plan for the production and delivery of the selected configuration. Therefore, the configuration problem is followed by a planning problem that shares domain knowledge with the configuration problem, but also its own domain knowledge about component vendors, production processes, etc. This planning problem then leads to a monitoring problem. Authorizations may be required, payments may need to be verified, or the configuration may become invalid in the middle of the process."}, {"heading": "8 Conclusion", "text": "The KB paradigm, which proposes a strict separation between knowledge and problem solving, has been analyzed in a class of knowledge-intensive problems: interactive configuration problems. While we discussed why solutions for this class are difficult to develop, we proposed a new approach to the configuration problem based on an existing KB system. We analyzed the functional requirements of an IC system and explored how we can provide them by drawing logical conclusions on a knowledge base. We identified interesting new methods of input and applied them to the interactive configuration area. We examined this approach in the context of a large application for which we provided concept proof, using the KB system as an engine that we expanded to include the new conclusions. As concept proof, we solved a configuration problem for a large banking company. The results are compelling and open perspectives for further research in service delivery."}], "references": [{"title": "Adaptive planet", "author": ["Adaptive Planet"], "venue": "http://www.adaptiveplanet.com/.", "citeRegEx": "Planet,? 2015", "shortCiteRegEx": "Planet", "year": 2015}, {"title": "A tool for developing interactive configuration applications", "author": ["T. Axling", "S. Haridi"], "venue": "Journal of Logic Programming 26, 2, 147\u2013168.", "citeRegEx": "Axling and Haridi,? 1996", "shortCiteRegEx": "Axling and Haridi", "year": 1996}, {"title": "Expert systems for configuration at digital: XCON and beyond", "author": ["V.E. Barker", "D.E. O\u2019Connor"], "venue": "Commun. ACM 32,", "citeRegEx": "Barker and O.Connor,? \\Q1989\\E", "shortCiteRegEx": "Barker and O.Connor", "year": 1989}, {"title": "Simulating dynamic systems using linear time calculus theories", "author": ["B. Bogaerts", "J. Jansen", "M. Bruynooghe", "B. De Cat", "J. Vennekens", "M. Denecker"], "venue": "TPLP 14, 4\u20135 (7), 477\u2013492.", "citeRegEx": "Bogaerts et al\\.,? 2014", "shortCiteRegEx": "Bogaerts et al\\.", "year": 2014}, {"title": "Predicate logic as a modeling language: modeling and solving some machine learning and data mining problems with IDP3", "author": ["M. Bruynooghe", "H. Blockeel", "B. Bogaerts", "B. De Cat", "S. De Pooter", "J. Jansen", "A. Labarre", "J. Ramon", "M. Denecker", "S. Verwer"], "venue": "TPLP 15, 783\u2013817.", "citeRegEx": "Bruynooghe et al\\.,? 2015", "shortCiteRegEx": "Bruynooghe et al\\.", "year": 2015}, {"title": "The third open answer set programming competition", "author": ["F. Calimeri", "G. Ianni", "F. Ricca"], "venue": "TPLP 14, 1, 117\u2013135.", "citeRegEx": "Calimeri et al\\.,? 2014", "shortCiteRegEx": "Calimeri et al\\.", "year": 2014}, {"title": "Semantics of templates in a compositional framework for building logics", "author": ["I. Dasseville", "M. van der Hallen", "G. Janssens", "M. Denecker"], "venue": "TPLP 15,", "citeRegEx": "Dasseville et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Dasseville et al\\.", "year": 2015}, {"title": "Predicate logic as a modelling language: The IDP system", "author": ["B. De Cat", "B. Bogaerts", "M. Bruynooghe", "G. Janssens", "M. Denecker"], "venue": "CoRR abs/1401.6312v2.", "citeRegEx": "Cat et al\\.,? 2016", "shortCiteRegEx": "Cat et al\\.", "year": 2016}, {"title": "A Tarskian informal semantics for answer set programming", "author": ["M. Denecker", "Y. Lierler", "M. Truszczy\u0144ski", "J. Vennekens"], "venue": "ICLP (Technical Communications), A. Dovier and V. S. Costa, Eds. LIPIcs, vol. 17. Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, 277\u2013289.", "citeRegEx": "Denecker et al\\.,? 2012", "shortCiteRegEx": "Denecker et al\\.", "year": 2012}, {"title": "A logic of nonmonotone inductive definitions", "author": ["M. Denecker", "E. Ternovska"], "venue": "ACM Trans. Comput. Log. 9, 2 (Apr.), 14:1\u201314:52.", "citeRegEx": "Denecker and Ternovska,? 2008", "shortCiteRegEx": "Denecker and Ternovska", "year": 2008}, {"title": "Building a knowledge base system for an integration of logic programming and classical logic", "author": ["M. Denecker", "J. Vennekens"], "venue": "ICLP, M. Gar\u0107\u0131a de la Banda and E. Pontelli, Eds. LNCS, vol. 5366. Springer, 71\u201376.", "citeRegEx": "Denecker and Vennekens,? 2008", "shortCiteRegEx": "Denecker and Vennekens", "year": 2008}, {"title": "Challenges of knowledge evolution in practice", "author": ["A.A. Falkner", "A. Haselb\u00f6ck"], "venue": "AI Communications 26, 1, 3\u201314.", "citeRegEx": "Falkner and Haselb\u00f6ck,? 2013", "shortCiteRegEx": "Falkner and Haselb\u00f6ck", "year": 2013}, {"title": "Knowledge-based Configuration: From Research to Business Cases, 1st ed", "author": ["A. Felfernig", "L. Hotz", "C. Bagley", "J. Tiihonen"], "venue": "Morgan Kaufmann Publishers Inc., San Francisco, CA, USA.", "citeRegEx": "Felfernig et al\\.,? 2014", "shortCiteRegEx": "Felfernig et al\\.", "year": 2014}, {"title": "Configuring large systems using generative constraint satisfaction", "author": ["G. Fleischanderl", "G. Friedrich", "A. Haselb\u00f6ck", "H. Schreiner", "M. Stumptner"], "venue": "IEEE Intelligent Systems 13, 4, 59\u201368.", "citeRegEx": "Fleischanderl et al\\.,? 1998", "shortCiteRegEx": "Fleischanderl et al\\.", "year": 1998}, {"title": "The stable model semantics for logic programming", "author": ["M. Gelfond", "V. Lifschitz"], "venue": "ICLP/SLP, R. A. Kowalski and K. A. Bowen, Eds. MIT Press, 1070\u20131080.", "citeRegEx": "Gelfond and Lifschitz,? 1988", "shortCiteRegEx": "Gelfond and Lifschitz", "year": 1988}, {"title": "A BDD-based approach to interactive configuration", "author": ["T. Hadzic"], "venue": "Principles and Practice of Constraint Programming - CP 2004, 10th International Conference, CP 2004, Toronto, Canada, September 27 - October 1, 2004, Proceedings, M. Wallace, Ed. LNCS, vol. 3258. Springer, 797.", "citeRegEx": "Hadzic,? 2004", "shortCiteRegEx": "Hadzic", "year": 2004}, {"title": "Interactive reconfiguration in power supply restoration", "author": ["T. Hadzic", "H.R. Andersen"], "venue": "Principles and Practice of Constraint Programming - CP 2005, 11th International Conference, CP 2005, Sitges, Spain, October 1-5, 2005, Proceedings, P. van Beek, Ed. Lecture Notes in Computer Science, vol. 3709. Springer, 767\u2013771.", "citeRegEx": "Hadzic and Andersen,? 2005", "shortCiteRegEx": "Hadzic and Andersen", "year": 2005}, {"title": "Core-guided binary search algorithms for maximum satisfiability", "author": ["F. Heras", "A. Morgado", "J. Marques-Silva"], "venue": "Proceedings of the Twenty-Fifth AAAI Conference on Artificial Intelligence, AAAI 2011, San Francisco, California, USA, August 7-11, 2011.", "citeRegEx": "Heras et al\\.,? 2011", "shortCiteRegEx": "Heras et al\\.", "year": 2011}, {"title": "Configuration in industrial product families - the ConIPF methodology", "author": ["L. Hotz", "T. Krebs", "S. Deelstra", "M. Sinnema", "J. Nijhuis"], "venue": "IOS Press, Inc.", "citeRegEx": "Hotz et al\\.,? 2006", "shortCiteRegEx": "Hotz et al\\.", "year": 2006}, {"title": "Model checking and transitive-closure logic", "author": ["N. Immerman", "M.Y. Vardi"], "venue": "Computer Aided Verification, 9th International Conference, CAV \u201997, Haifa, Israel, June 22-25, 1997, Proceedings, O. Grumberg, Ed. Lecture Notes in Computer Science, vol. 1254. Springer, 291\u2013302.", "citeRegEx": "Immerman and Vardi,? 1997", "shortCiteRegEx": "Immerman and Vardi", "year": 1997}, {"title": "Do SAT solvers make good configurators? In Software Product Lines, 12th International Conference, SPLC 2008, Limerick, Ireland, September 8-12, 2008, Proceedings", "author": ["M. Janota"], "venue": "Second Volume (Workshops), S. Thiel and K. Pohl, Eds. Lero Int. Science Centre, University of Limerick, Ireland, 191\u2013195.", "citeRegEx": "Janota,? 2008", "shortCiteRegEx": "Janota", "year": 2008}, {"title": "Experimental evaluation of a state-of-the-art grounder", "author": ["J. Jansen", "I. Dasseville", "J. Devriendt", "G. Janssens"], "venue": "Proceedings of the 16th International Symposium on Principles and Practice of Declarative Programming, Kent, Canterbury, United Kingdom, September 8-10, 2014, O. Chitil, A. King, and O. Danvy, Eds. ACM, 249\u2013258.", "citeRegEx": "Jansen et al\\.,? 2014", "shortCiteRegEx": "Jansen et al\\.", "year": 2014}, {"title": "QUICKXPLAIN: preferred explanations and relaxations for overconstrained problems", "author": ["U. Junker"], "venue": "Proceedings of the Nineteenth National Conference on Artificial Intelligence, Sixteenth Conference on Innovative Applications of Artificial Intelligence,", "citeRegEx": "Junker,? 2004", "shortCiteRegEx": "Junker", "year": 2004}, {"title": "Preference programming: Advanced problem solving for configuration", "author": ["U. Junker", "D. Mailharro"], "venue": "AI EDAM 17, 1, 13\u201329.", "citeRegEx": "Junker and Mailharro,? 2003", "shortCiteRegEx": "Junker and Mailharro", "year": 2003}, {"title": "Feature-oriented Domain Analysis (FODA): Feasibility Study ; Technical Report CMU/SEI-90-TR-21 - ESD-90-TR-222", "author": ["K. Kang"], "venue": "Software Engineering Inst., Carnegie Mellon Univ.", "citeRegEx": "Kang,? 1990", "shortCiteRegEx": "Kang", "year": 1990}, {"title": "Mapping extended feature models to constraint logic programming over finite domains", "author": ["A.S. Karatas", "H. Oguzt\u00fcz\u00fcn", "A.H. Dogru"], "venue": "Software Product Lines: Going Beyond - 14th International Conference, SPLC 2010, Jeju Island, South Korea, September 13-17, 2010. Proceedings, J. Bosch and J. Lee, Eds. Lecture Notes in Computer Science, vol. 6287. Springer, 286\u2013299.", "citeRegEx": "Karatas et al\\.,? 2010", "shortCiteRegEx": "Karatas et al\\.", "year": 2010}, {"title": "Towards inferring labelling heuristics for CSP application domains", "author": ["Z. Kiziltan", "P. Flener", "B. Hnich"], "venue": "KI 2001: Advances in Artificial Intelligence, Joint German/Austrian Conference on AI, Vienna, Austria, September 19-21, 2001, Proceedings, F. Baader, G. Brewka, and T. Eiter, Eds. LNCS, vol. 2174. Springer, 275\u2013289.", "citeRegEx": "Kiziltan et al\\.,? 2001", "shortCiteRegEx": "Kiziltan et al\\.", "year": 2001}, {"title": "Introduction to Metamathematics", "author": ["S.C. Kleene"], "venue": "Van Nostrand.", "citeRegEx": "Kleene,? 1952", "shortCiteRegEx": "Kleene", "year": 1952}, {"title": "Product configuration optimization using a multiobjective genetic algorithm", "author": ["B. Li", "L. Chen", "Z. Huang", "Y. Zhong"], "venue": "The International Journal of Advanced Manufacturing Technology 30, 1, 20\u201329.", "citeRegEx": "Li et al\\.,? 2005", "shortCiteRegEx": "Li et al\\.", "year": 2005}, {"title": "On computing minimum unsatisfiable cores", "author": ["I. Lynce", "J.P.M. Silva"], "venue": "SAT 2004 - The Seventh International Conference on Theory and Applications of Satisfiability Testing, 10-13 May 2004, Vancouver, BC, Canada, Online Proceedings.", "citeRegEx": "Lynce and Silva,? 2004", "shortCiteRegEx": "Lynce and Silva", "year": 2004}, {"title": "Algorithms for maximum satisfiability using unsatisfiable cores", "author": ["J. Marques-Silva", "J. Planes"], "venue": "Design, Automation and Test in Europe, DATE 2008, Munich, Germany, March 10-14, 2008. 408\u2013413.", "citeRegEx": "Marques.Silva and Planes,? 2008", "shortCiteRegEx": "Marques.Silva and Planes", "year": 2008}, {"title": "R1: A rule-based configurer of computer systems", "author": ["J.P. McDermott"], "venue": "Artif. Intell. 19, 1, 39\u201388.", "citeRegEx": "McDermott,? 1982", "shortCiteRegEx": "McDermott", "year": 1982}, {"title": "An industrial-strength description-logicsbased configurator platform", "author": ["D.L. McGuinness", "J.R. Wright"], "venue": "IEEE Intelligent Systems 13, 4, 69\u201377.", "citeRegEx": "McGuinness and Wright,? 1998", "shortCiteRegEx": "McGuinness and Wright", "year": 1998}, {"title": "A framework for representing and solving NP search problems", "author": ["D.G. Mitchell", "E. Ternovska"], "venue": "AAAI, M. M. Veloso and S. Kambhampati, Eds. AAAI Press / The MIT Press, 430\u2013435.", "citeRegEx": "Mitchell and Ternovska,? 2005", "shortCiteRegEx": "Mitchell and Ternovska", "year": 2005}, {"title": "Dynamic constraint satisfaction problems", "author": ["S. Mittal", "B. Falkenhainer"], "venue": "Proceedings of the 8th National Conference on Artificial Intelligence. Boston, Massachusetts, July 29 - August 3, 1990, 2 Volumes., T. Dieterich and W. Swartout, Eds. AAAI/MIT Press, 25\u201332.", "citeRegEx": "Mittal and Falkenhainer,? 1990", "shortCiteRegEx": "Mittal and Falkenhainer", "year": 1990}, {"title": "Towards a generic model of configuraton tasks", "author": ["S. Mittal", "F. Frayman"], "venue": "Proceedings of the 11th International Joint Conference on Artificial Intelligence. Detroit, MI, USA, August 1989, N. S. Sridharan, Ed. Morgan Kaufmann, 1395\u20131401.", "citeRegEx": "Mittal and Frayman,? 1989", "shortCiteRegEx": "Mittal and Frayman", "year": 1989}, {"title": "Well-founded and stable semantics of logic programs with aggregates", "author": ["N. Pelov", "M. Denecker", "M. Bruynooghe"], "venue": "TPLP 7, 3, 301\u2013353.", "citeRegEx": "Pelov et al\\.,? 2007", "shortCiteRegEx": "Pelov et al\\.", "year": 2007}, {"title": "Strategic capabilities of mass customization based e-commerce: Construct development and empirical test", "author": ["F.T. Piller", "T. Harzer", "C. Ihl", "F. Salvador"], "venue": "47th Hawaii International Conference on System Sciences, HICSS 2014, Waikoloa, HI, USA, January 6-9, 2014. IEEE, 3255\u20133264.", "citeRegEx": "Piller et al\\.,? 2014", "shortCiteRegEx": "Piller et al\\.", "year": 2014}, {"title": "Justifications for logic programs under answer set semantics", "author": ["E. Pontelli", "T.C. Son"], "venue": "ICLP, S. Etalle and M. Truszczy\u0144ski, Eds. LNCS, vol. 4079. Springer, 196\u2013210.", "citeRegEx": "Pontelli and Son,? 2006", "shortCiteRegEx": "Pontelli and Son", "year": 2006}, {"title": "Qml", "author": ["QML"], "venue": "http://qmlbook.org/.", "citeRegEx": "QML,? 2015", "shortCiteRegEx": "QML", "year": 2015}, {"title": "A theory of diagnosis from first principles", "author": ["R. Reiter"], "venue": "Artif. Intell. 32, 1, 57\u201395.", "citeRegEx": "Reiter,? 1987", "shortCiteRegEx": "Reiter", "year": 1987}, {"title": "Fdconfig: A constraint-based interactive product configurator", "author": ["D. Schneeweiss", "P. Hofstedt"], "venue": "Applications of Declarative Programming and Knowledge Management - 19th International Conference, INAP 2011, and 25th Workshop on Logic Programming, WLP 2011, Vienna, Austria, September 28-30, 2011, Revised Selected Papers, H. Tompits, S. Abreu, J. Oetsch, J. P\u00fchrer, D. Seipel, M. Umeda, and A. Wolf,", "citeRegEx": "Schneeweiss and Hofstedt,? 2011", "shortCiteRegEx": "Schneeweiss and Hofstedt", "year": 2011}, {"title": "Interactive ontology debugging using direct diagnosis", "author": ["K.M. Shchekotykhin", "G. Friedrich", "P. Rodler", "P. Fleiss"], "venue": "Proceedings of the Third International Workshop on Debugging Ontologies and Ontology Mappings, WoDOOM 2014, co-located with 11th Extended Semantic Web Conference (ESWC 2014), Anissaras/Hersonissou, Greece, May 26, 2014., P. Lambrix, G. Qi, M. Horridge, and B. Parsia, Eds. CEUR", "citeRegEx": "Shchekotykhin et al\\.,? 2014", "shortCiteRegEx": "Shchekotykhin et al\\.", "year": 2014}, {"title": "Debugging overconstrained declarative models using unsatisfiable cores", "author": ["I. Shlyakhter", "R. Seater", "D. Jackson", "M. Sridharan", "M. Taghdiri"], "venue": "ASE. IEEE Computer Society, 94\u2013105.", "citeRegEx": "Shlyakhter et al\\.,? 2003", "shortCiteRegEx": "Shlyakhter et al\\.", "year": 2003}, {"title": "Debugging inconsistent answer set programs", "author": ["T. Syrj\u00e4nen"], "venue": "Proceedings of the Eleventh International Workshop on Non-Monotonic Reasoning, NMR 2006, Lake District, UK, 30 May - 1 June, J. Dix and A. Hunter, Eds. 77\u201384.", "citeRegEx": "Syrj\u00e4nen,? 2006", "shortCiteRegEx": "Syrj\u00e4nen", "year": 2006}, {"title": "Wecotin - A practical logic-based sales configurator", "author": ["J. Tiihonen", "M. Heiskala", "A. Anderson", "T. Soininen"], "venue": "AI Commun. 26, 1, 99\u2013131.", "citeRegEx": "Tiihonen et al\\.,? 2013", "shortCiteRegEx": "Tiihonen et al\\.", "year": 2013}, {"title": "Ontology driven software engineering for real life applications", "author": ["M. Vanden Bossche", "P. Ross", "I. MacLarty", "B. Van Nuffelen", "N. Pelov"], "venue": "3rd International Workshop on Semantic Web Enabled Software Engineering (SWESE).", "citeRegEx": "Bossche et al\\.,? 2007", "shortCiteRegEx": "Bossche et al\\.", "year": 2007}, {"title": "A logical framework for configuration software", "author": ["H. Vlaeminck", "J. Vennekens", "M. Denecker"], "venue": "Proceedings of the 11th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming, September 7-9, 2009, Coimbra, Portugal, A. Porto and F. J. L\u00f3pez-Fraguas, Eds. ACM, 141\u2013148.", "citeRegEx": "Vlaeminck et al\\.,? 2009", "shortCiteRegEx": "Vlaeminck et al\\.", "year": 2009}, {"title": "The idp system: A model expansion system for an extension of classical logic", "author": ["J. Wittocx", "M. Mari\u00ebn", "M. Denecker"], "venue": null, "citeRegEx": "Wittocx et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Wittocx et al\\.", "year": 2008}, {"title": "Debugging for model expansion", "author": ["J. Wittocx", "H. Vlaeminck", "M. Denecker"], "venue": "Eds. LNCS,", "citeRegEx": "Wittocx et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Wittocx et al\\.", "year": 2009}, {"title": "Extracting minimum unsatisfiable cores with a greedy genetic algorithm", "author": ["J. Zhang", "S. Li", "S. Shen"], "venue": "AI 2006: Advances in Artificial Intelligence, 19th Australian Joint Conference on Artificial Intelligence, Hobart, Australia, December 4-8, 2006, Proceedings. 847\u2013856.", "citeRegEx": "Zhang et al\\.,? 2006", "shortCiteRegEx": "Zhang et al\\.", "year": 2006}], "referenceMentions": [{"referenceID": 10, "context": "The Knowledge Base (KB) paradigm (Denecker and Vennekens 2008) was proposed as an answer to this.", "startOffset": 33, "endOffset": 62}, {"referenceID": 10, "context": "The FO(\u00b7) KB project (Denecker and Vennekens 2008) is a research project that runs now for a number of years.", "startOffset": 21, "endOffset": 50}, {"referenceID": 9, "context": "So far, it has led to the KB language FO(\u00b7) (Denecker and Ternovska 2008) and the KB system IDP (De Cat et al.", "startOffset": 44, "endOffset": 73}, {"referenceID": 31, "context": "An interactive configuration (IC) problem (McDermott 1982; Mittal and Frayman 1989; Fleischanderl et al. 1998; Junker and Mailharro 2003; Hadzic 2004) is an interactive version of a constraint solving problem.", "startOffset": 42, "endOffset": 150}, {"referenceID": 35, "context": "An interactive configuration (IC) problem (McDermott 1982; Mittal and Frayman 1989; Fleischanderl et al. 1998; Junker and Mailharro 2003; Hadzic 2004) is an interactive version of a constraint solving problem.", "startOffset": 42, "endOffset": 150}, {"referenceID": 13, "context": "An interactive configuration (IC) problem (McDermott 1982; Mittal and Frayman 1989; Fleischanderl et al. 1998; Junker and Mailharro 2003; Hadzic 2004) is an interactive version of a constraint solving problem.", "startOffset": 42, "endOffset": 150}, {"referenceID": 23, "context": "An interactive configuration (IC) problem (McDermott 1982; Mittal and Frayman 1989; Fleischanderl et al. 1998; Junker and Mailharro 2003; Hadzic 2004) is an interactive version of a constraint solving problem.", "startOffset": 42, "endOffset": 150}, {"referenceID": 15, "context": "An interactive configuration (IC) problem (McDermott 1982; Mittal and Frayman 1989; Fleischanderl et al. 1998; Junker and Mailharro 2003; Hadzic 2004) is an interactive version of a constraint solving problem.", "startOffset": 42, "endOffset": 150}, {"referenceID": 12, "context": "However, building such software is renowned in industry as difficult and no broadly accepted solution methods are available (Felfernig et al. 2014; Axling and Haridi 1996).", "startOffset": 124, "endOffset": 171}, {"referenceID": 1, "context": "However, building such software is renowned in industry as difficult and no broadly accepted solution methods are available (Felfernig et al. 2014; Axling and Haridi 1996).", "startOffset": 124, "endOffset": 171}, {"referenceID": 2, "context": "Building software support using standard imperative programming is often a nightmare (Barker and O\u2019Connor 1989; Piller et al. 2014), due to the fact that (1) many functionalities need to be provided, (2) they are complex to implement, and (3) constraints on the configuration tend to get duplicated and spread out over the application, in the form of snippets of code performing various computations relative to the constraint (e.", "startOffset": 85, "endOffset": 131}, {"referenceID": 37, "context": "Building software support using standard imperative programming is often a nightmare (Barker and O\u2019Connor 1989; Piller et al. 2014), due to the fact that (1) many functionalities need to be provided, (2) they are complex to implement, and (3) constraints on the configuration tend to get duplicated and spread out over the application, in the form of snippets of code performing various computations relative to the constraint (e.", "startOffset": 85, "endOffset": 131}, {"referenceID": 15, "context": "That declarative methods are particularly suitable for solving this type of problem has been acknowledged before, and several systems and languages have been developed (Hadzic 2004; Schneeweiss and Hofstedt 2011; Tiihonen et al. 2013; Vlaeminck et al. 2009).", "startOffset": 168, "endOffset": 257}, {"referenceID": 41, "context": "That declarative methods are particularly suitable for solving this type of problem has been acknowledged before, and several systems and languages have been developed (Hadzic 2004; Schneeweiss and Hofstedt 2011; Tiihonen et al. 2013; Vlaeminck et al. 2009).", "startOffset": 168, "endOffset": 257}, {"referenceID": 45, "context": "That declarative methods are particularly suitable for solving this type of problem has been acknowledged before, and several systems and languages have been developed (Hadzic 2004; Schneeweiss and Hofstedt 2011; Tiihonen et al. 2013; Vlaeminck et al. 2009).", "startOffset": 168, "endOffset": 257}, {"referenceID": 47, "context": "That declarative methods are particularly suitable for solving this type of problem has been acknowledged before, and several systems and languages have been developed (Hadzic 2004; Schneeweiss and Hofstedt 2011; Tiihonen et al. 2013; Vlaeminck et al. 2009).", "startOffset": 168, "endOffset": 257}, {"referenceID": 9, "context": "The logic used in this experiment is the logic FO(\u00b7) (Denecker and Ternovska 2008), an extension of first-order logic (FO), and the system is the IDP system (De Cat et al.", "startOffset": 53, "endOffset": 82}, {"referenceID": 12, "context": "We evaluated our approach using the evaluation criteria of the knowledge-based configuration research (Felfernig et al. 2014).", "startOffset": 102, "endOffset": 125}, {"referenceID": 19, "context": "construction (Immerman and Vardi 1997).", "startOffset": 13, "endOffset": 38}, {"referenceID": 9, "context": "Currently, the language of the IDP system in the project is FO(T, ID, Agg, arit, PF) (Denecker and Ternovska 2008; Pelov et al. 2007): FO extended with types, definitions, aggregates, arithmetic and partial functions.", "startOffset": 85, "endOffset": 133}, {"referenceID": 36, "context": "Currently, the language of the IDP system in the project is FO(T, ID, Agg, arit, PF) (Denecker and Ternovska 2008; Pelov et al. 2007): FO extended with types, definitions, aggregates, arithmetic and partial functions.", "startOffset": 85, "endOffset": 133}, {"referenceID": 27, "context": "To define the satisfaction relation on theories, we extend the interpretation of symbols to arbitrary terms and formulas using the Kleene truth assignments (Kleene 1952).", "startOffset": 156, "endOffset": 169}, {"referenceID": 48, "context": "Modelexpand (Wittocx et al. 2008) is a generalization for FO(\u00b7) theories of the modelexpansion task as defined in Mitchell et al.", "startOffset": 12, "endOffset": 33}, {"referenceID": 33, "context": "(Mitchell and Ternovska 2005).", "startOffset": 0, "endOffset": 29}, {"referenceID": 47, "context": "Approximative versions exist for some of these inferences, with lower complexity (Vlaeminck et al. 2009).", "startOffset": 81, "endOffset": 104}, {"referenceID": 3, "context": "More inferences exist, such as simulation of temporal theories in FO(\u00b7) (Bogaerts et al. 2014), but were not used in the experiment.", "startOffset": 72, "endOffset": 94}, {"referenceID": 33, "context": "Complexity results of derived inferences stem from basic results formulated by Mitchell and Ternovska (2005) and the observation that modelchecking is polynomial in the size of the domain.", "startOffset": 79, "endOffset": 109}, {"referenceID": 38, "context": "If a user supplies an inconsistent value for a parameter, options can range from calculating an inconsistent subset of the theory T (1) to giving a proof of inconsistency as in (Pontelli and Son 2006) (2), to calculating a", "startOffset": 177, "endOffset": 200}, {"referenceID": 42, "context": "As in (Shchekotykhin et al. 2014), we can introduce a \u201cbackground theory\u201d B \u2282 T \u222a TS (a subset of the theory in which there are assumed to be no conflicts).", "startOffset": 6, "endOffset": 33}, {"referenceID": 22, "context": "QuickXPlain (Junker 2004) is an algorithm that implements Definition 4.", "startOffset": 12, "endOffset": 25}, {"referenceID": 40, "context": "The Hitting Set Directed Acyclic Graph (HSDAG) (Reiter 1987) algorithm calculates subset minimal inconsistent theories (Definition 4.", "startOffset": 47, "endOffset": 60}, {"referenceID": 43, "context": "14, as in different ASP solvers (Shlyakhter et al. 2003; Syrj\u00e4nen 2006).", "startOffset": 32, "endOffset": 71}, {"referenceID": 44, "context": "14, as in different ASP solvers (Shlyakhter et al. 2003; Syrj\u00e4nen 2006).", "startOffset": 32, "endOffset": 71}, {"referenceID": 29, "context": "15 have been described in (Lynce and Silva 2004) and (Zhang et al.", "startOffset": 26, "endOffset": 48}, {"referenceID": 50, "context": "15 have been described in (Lynce and Silva 2004) and (Zhang et al. 2006).", "startOffset": 53, "endOffset": 72}, {"referenceID": 49, "context": "14 (Wittocx et al. 2009), where we do however do not calculate the entire set of subset minimal theories.", "startOffset": 3, "endOffset": 24}, {"referenceID": 17, "context": "This problem is closely related to the explanation subtask (Heras et al. 2011; Marques-Silva and Planes 2008).", "startOffset": 59, "endOffset": 109}, {"referenceID": 30, "context": "This problem is closely related to the explanation subtask (Heras et al. 2011; Marques-Silva and Planes 2008).", "startOffset": 59, "endOffset": 109}, {"referenceID": 40, "context": "To find the maximal partial subconfiguration S \u2032 that satisfies that property, the minimal hitting set (Reiter 1987) of all sets in A has to be calculated.", "startOffset": 103, "endOffset": 116}, {"referenceID": 39, "context": "The client consists of a GUI made in QML (QML 2015) as front-end.", "startOffset": 41, "endOffset": 51}, {"referenceID": 39, "context": "The front end consists of an application written in the Qt framework using QML (QML 2015) and connects to a configuration engine over the web.", "startOffset": 79, "endOffset": 89}, {"referenceID": 45, "context": "However, in the configuration community it is known that reasoning about typical configuration problems is relatively easy and does not exhibit real exponential behavior (Tiihonen et al. 2013).", "startOffset": 170, "endOffset": 192}, {"referenceID": 12, "context": "In recent literature (Felfernig et al. 2014) nine evaluation criteria are used to differentiate between different paradigms used for configuration.", "startOffset": 21, "endOffset": 44}, {"referenceID": 21, "context": "The performance of the IDP system has been tested extensively in other contexts (Jansen et al. 2014; Bruynooghe et al. 2015).", "startOffset": 80, "endOffset": 124}, {"referenceID": 4, "context": "The performance of the IDP system has been tested extensively in other contexts (Jansen et al. 2014; Bruynooghe et al. 2015).", "startOffset": 80, "endOffset": 124}, {"referenceID": 5, "context": "The reasoning engine for IDP is very similar in performance to mainstream ASP solvers (Calimeri et al. 2014).", "startOffset": 86, "endOffset": 108}, {"referenceID": 4, "context": "2014; Bruynooghe et al. 2015). The reasoning engine for IDP is very similar in performance to mainstream ASP solvers (Calimeri et al. 2014). Their performance was tested more extensively in the context of configuration by Tiihonen et al. (2013). It is also very difficult to reliably compare the response times for interactive systems.", "startOffset": 6, "endOffset": 245}, {"referenceID": 12, "context": "The following discussion of knowledge-based approaches is based on a book in recent literature (Felfernig et al. 2014).", "startOffset": 95, "endOffset": 118}, {"referenceID": 31, "context": "Historically, the first knowledge-based configuration systems were rule-based (RBS) (McDermott 1982; Barker and O\u2019Connor 1989).", "startOffset": 84, "endOffset": 126}, {"referenceID": 2, "context": "Historically, the first knowledge-based configuration systems were rule-based (RBS) (McDermott 1982; Barker and O\u2019Connor 1989).", "startOffset": 84, "endOffset": 126}, {"referenceID": 35, "context": "Constraint Satisfaction Problems are widely used for tackling configuration problems (Mittal and Frayman 1989; Fleischanderl et al. 1998).", "startOffset": 85, "endOffset": 137}, {"referenceID": 13, "context": "Constraint Satisfaction Problems are widely used for tackling configuration problems (Mittal and Frayman 1989; Fleischanderl et al. 1998).", "startOffset": 85, "endOffset": 137}, {"referenceID": 28, "context": "To make efficient CSP configuration systems, different techniques have been used, such as local search (Li et al. 2005), symmetry breaking (Kiziltan et al.", "startOffset": 103, "endOffset": 119}, {"referenceID": 26, "context": "2005), symmetry breaking (Kiziltan et al. 2001) and knowledge compilation techniques such as binary decision diagrams (Hadzic and Andersen 2005).", "startOffset": 25, "endOffset": 47}, {"referenceID": 16, "context": "2001) and knowledge compilation techniques such as binary decision diagrams (Hadzic and Andersen 2005).", "startOffset": 76, "endOffset": 102}, {"referenceID": 34, "context": "Dynamic Constraint Satisfaction Problems (DCSP) (Mittal and Falkenhainer 1990) allow for variables to be inactive or irrelevant.", "startOffset": 48, "endOffset": 78}, {"referenceID": 13, "context": "Generative Constraint Satisfaction Problems (GCSP) (Fleischanderl et al. 1998) extends SCSP with component types and generative constraints.", "startOffset": 51, "endOffset": 78}, {"referenceID": 11, "context": "Kang (1990) used feature models (FM) for modeling these concepts, while UML was proposed in (Falkner and Haselb\u00f6ck 2013).", "startOffset": 92, "endOffset": 120}, {"referenceID": 2, "context": "Historically, the first knowledge-based configuration systems were rule-based (RBS) (McDermott 1982; Barker and O\u2019Connor 1989). These systems operate on a working memory and if the condition of a rule is fulfilled, it fires and modifies the working memory, applying the conclusion of that rule. Rule-based systems are sensitive to rule orderings. This complicates modification of the rule-base. More importantly, inclusion of problem solving knowledge in the rule-base, makes a rule-base problem specific and focused towards one specific task. This leads to the same problems as in imperative languages. To solve different tasks, more rule-bases have to be built, leading to duplication and fanning out of knowledge, giving issues in maintainability. Constraint Satisfaction Problems are widely used for tackling configuration problems (Mittal and Frayman 1989; Fleischanderl et al. 1998). A (static) constraint satisfaction problem (SCSP) is a triple (V,D,C) of a set of domain variables V = {v1, v2, . . . , vn}, a set of domains {dom(v1), dom(v2), . . . , dom(vn)} and set of constraints C. A solution for a SCSP is an assignment S of domain elements di \u2208 dom(vi) to variables vi, such that each variable has a value in S and constraints C are satisfied by S. A configuration task in SCSP is searching for a solution for a SCSP (V,D,C), where C contains the configuration constraints together with the user preferences. To make efficient CSP configuration systems, different techniques have been used, such as local search (Li et al. 2005), symmetry breaking (Kiziltan et al. 2001) and knowledge compilation techniques such as binary decision diagrams (Hadzic and Andersen 2005). In response to limitations of SCSP in configuration, extensions have been developed. Dynamic Constraint Satisfaction Problems (DCSP) (Mittal and Falkenhainer 1990) allow for variables to be inactive or irrelevant. If a variable is inactive, it does not need a value in a solution (for example, when configuring a smartphone, no camera resolution is needed if no camera is present). Generative Constraint Satisfaction Problems (GCSP) (Fleischanderl et al. 1998) extends SCSP with component types and generative constraints. Janota (2008) studied a mapping of CSP to SAT to use a SAT solver to provide functionality for a configuration system.", "startOffset": 101, "endOffset": 2220}, {"referenceID": 2, "context": "Historically, the first knowledge-based configuration systems were rule-based (RBS) (McDermott 1982; Barker and O\u2019Connor 1989). These systems operate on a working memory and if the condition of a rule is fulfilled, it fires and modifies the working memory, applying the conclusion of that rule. Rule-based systems are sensitive to rule orderings. This complicates modification of the rule-base. More importantly, inclusion of problem solving knowledge in the rule-base, makes a rule-base problem specific and focused towards one specific task. This leads to the same problems as in imperative languages. To solve different tasks, more rule-bases have to be built, leading to duplication and fanning out of knowledge, giving issues in maintainability. Constraint Satisfaction Problems are widely used for tackling configuration problems (Mittal and Frayman 1989; Fleischanderl et al. 1998). A (static) constraint satisfaction problem (SCSP) is a triple (V,D,C) of a set of domain variables V = {v1, v2, . . . , vn}, a set of domains {dom(v1), dom(v2), . . . , dom(vn)} and set of constraints C. A solution for a SCSP is an assignment S of domain elements di \u2208 dom(vi) to variables vi, such that each variable has a value in S and constraints C are satisfied by S. A configuration task in SCSP is searching for a solution for a SCSP (V,D,C), where C contains the configuration constraints together with the user preferences. To make efficient CSP configuration systems, different techniques have been used, such as local search (Li et al. 2005), symmetry breaking (Kiziltan et al. 2001) and knowledge compilation techniques such as binary decision diagrams (Hadzic and Andersen 2005). In response to limitations of SCSP in configuration, extensions have been developed. Dynamic Constraint Satisfaction Problems (DCSP) (Mittal and Falkenhainer 1990) allow for variables to be inactive or irrelevant. If a variable is inactive, it does not need a value in a solution (for example, when configuring a smartphone, no camera resolution is needed if no camera is present). Generative Constraint Satisfaction Problems (GCSP) (Fleischanderl et al. 1998) extends SCSP with component types and generative constraints. Janota (2008) studied a mapping of CSP to SAT to use a SAT solver to provide functionality for a configuration system. There exist many graphical approaches for doing knowledge configuration, and visualizing a configuration model. Kang (1990) used feature models (FM) for modeling these concepts, while UML was proposed in (Falkner and Haselb\u00f6ck 2013).", "startOffset": 101, "endOffset": 2449}, {"referenceID": 18, "context": "They have also been used for the development of configuration systems (Hotz et al. 2006; McGuinness and Wright 1998).", "startOffset": 70, "endOffset": 116}, {"referenceID": 32, "context": "They have also been used for the development of configuration systems (Hotz et al. 2006; McGuinness and Wright 1998).", "startOffset": 70, "endOffset": 116}, {"referenceID": 45, "context": "developed a configuration systemWeCoTin (Tiihonen et al. 2013), based on Answer Set Programming (ASP).", "startOffset": 40, "endOffset": 62}, {"referenceID": 14, "context": "Answer set programming (ASP) is a form of declarative programming based on the stablemodel semantics (Gelfond and Lifschitz 1988) for logic programs.", "startOffset": 101, "endOffset": 129}, {"referenceID": 8, "context": "Also, in language, many similarities can be identified (Denecker et al. 2012), as they both have their roots in extended logic programming.", "startOffset": 55, "endOffset": 77}, {"referenceID": 18, "context": "They combine reasoning engines from these fields to provide inference (Hotz et al. 2006).", "startOffset": 70, "endOffset": 88}, {"referenceID": 22, "context": "Karatas et al. (2010) for example combined feature models with constraint logic programming (CLP) to provide reasoning and automated analysis.", "startOffset": 0, "endOffset": 22}, {"referenceID": 16, "context": "They have also been used for the development of configuration systems (Hotz et al. 2006; McGuinness and Wright 1998). The trade-off for having decidable subsets of first-order logic is that they are limited in expressivity. This make domain knowledge in these systems less readable, less natural and harder to maintain. An ontology based method was also proposed by Vanden Bossche et al. (2007) using OWL.", "startOffset": 71, "endOffset": 395}, {"referenceID": 12, "context": "2 as in (Felfernig et al. 2014).", "startOffset": 8, "endOffset": 31}, {"referenceID": 12, "context": "Not discussed by Felfernig et al. (2014) et al is work by Vlaeminck et al.", "startOffset": 17, "endOffset": 41}, {"referenceID": 12, "context": "Not discussed by Felfernig et al. (2014) et al is work by Vlaeminck et al. (2009). They did a preliminary experiment using the KB approach for interactive configuration, also using the FO(\u00b7) IDP project.", "startOffset": 17, "endOffset": 82}, {"referenceID": 6, "context": "A prime example of this are templates (Dasseville et al. 2015).", "startOffset": 38, "endOffset": 62}], "year": 2016, "abstractText": "The knowledge base paradigm aims to express domain knowledge in a rich formal language, and to use this domain knowledge as a knowledge base to solve various problems and tasks that arise in the domain by applying multiple forms of inference. As such, the paradigm applies a strict separation of concerns between information and problem solving. In this paper, we analyze the principles and feasibility of the knowledge base paradigm in the context of an important class of applications: interactive configuration problems. In interactive configuration problems, a configuration of interrelated objects under constraints is searched, where the system assists the user in reaching an intended configuration. It is widely recognized in industry that good software solutions for these problems are very difficult to develop. We investigate such problems from the perspective of the KB paradigm. We show that multiple functionalities in this domain can be achieved by applying different forms of logical inferences on a formal specification of the configuration domain. We report on a proof of concept of this approach in a real-life application with a banking company. To appear in Theory and Practice of Logic Programming (TPLP).", "creator": "LaTeX with hyperref package"}}}