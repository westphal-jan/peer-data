{"id": "1605.02038", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-May-2016", "title": "Markov Chain methods for the bipartite Boolean quadratic programming problem", "abstract": "We study the Bipartite Boolean Quadratic Programming Problem (BBQP) which is an extension of the well known Boolean Quadratic Programming Problem (BQP). Applications of the BBQP include mining discrete patterns from binary data, approximating matrices by rank-one binary matrices, computing the cut-norm of a matrix, and solving optimisation problems such as maximum weight biclique, bipartite maximum weight cut, maximum weight induced sub-graph of a bipartite graph, etc. For the BBQP, we first present several algorithmic components, specifically, hillclimbers and mutations, and then show how to combine them in a high-performance metaheuristic. Instead of hand-tuning a standard metaheuristic to test the efficiency of the hybrid of the components, we chose to use an automated generation of a multi-component metaheuristic to save human time, and also improve objectivity in the analysis and comparisons of components. For this we designed a new metaheuristic schema which we call Conditional Markov Chain Search (CMCS). We show that CMCS is flexible enough to model several standard metaheuristics; this flexibility is controlled by multiple numeric parameters, and so is convenient for automated generation. We study the configurations revealed by our approach and show that the best of them outperforms the previous state-of-the-art BBQP algorithm by several orders of magnitude. In our experiments we use benchmark instances introduced in the preliminary version of this paper and described here, which have already become the de facto standard in the BBQP literature.", "histories": [["v1", "Fri, 6 May 2016 19:06:56 GMT  (85kb,D)", "https://arxiv.org/abs/1605.02038v1", null], ["v2", "Mon, 24 Oct 2016 18:44:11 GMT  (71kb,D)", "http://arxiv.org/abs/1605.02038v2", null]], "reviews": [], "SUBJECTS": "cs.DS cs.AI", "authors": ["daniel karapetyan", "abraham p punnen", "andrew j parkes"], "accepted": false, "id": "1605.02038"}, "pdf": {"name": "1605.02038.pdf", "metadata": {"source": "CRF", "title": "Markov Chain methods for the bipartite Boolean quadratic programming problem", "authors": ["Daniel Karapetyana", "Abraham P. Punnen", "Andrew J. Parkes"], "emails": ["daniel.karapetyan@gmail.com", "apunnen@sfu.ca", "andrew.parkes@nottingham.ac.uk"], "sections": [{"heading": null, "text": "We are investigating the two-part Boolean quadratic programming problem (BBQP), which is an extension of the well-known Boolean quadratic programming problem (BQP). Applications of BBQP include extracting discrete patterns from binary data, approximating matrices according to rank-one binary matrices, calculating the intersection norm of a matrix, and solving optimization problems such as maximum weight biclique, bipartial maximum weight reduction, maximum weight induced subgraph of a two-part graph, etc. For BBQP, we first present several algorithmic components, especially mountaineers and mutations, and then show how to combine them in high-performance metaheuristics. Instead of setting a standard metaheuristics manually to test the efficiency of the hybrids of the components, we have decided to use an automated generation of multi-component metaheuristics to save human time."}, {"heading": "1. Introduction", "text": "The (unrestricted) BQP is a problem closely related to BQP, called the bipartite (unrestricted) BQP is a constant. BQP is a well-studied problem in operational research literature [6]. The focus of this paper is closely related to BQP, called the bipartite (unrestricted) BQP is a constant problem (BBQP). BBQP can be defined as: maximise f (x, y).xTQy + c0subject to x {0, 1} m, y {0, 1} n, whereQ = (qij) is a real matrix."}, {"heading": "2. Algorithmic Components", "text": "In this section we will introduce several algorithmic components for BBQP. Apart from \"Repair\" and \"MutationX / Y\" components, these components are able to avoid a reasonable mix of fast and slow climbing operators for intensification, along with mutation operators that suggest an increase in diversification, and with repair that causes a bit of both. Note that a climbing component potentially implies either a simple improvement or a repetitive local search procedure with iterated operators that is only terminated when a local maximum is reached. However, in this project we have opted for individual movements that control the metaheuristic framework.Name Description - Hill climbing operators: That is, components guarantee that the solution is not worsened OptX Optimise-X, Section 2.1. Fixed vector y during optimization x."}, {"heading": "3. The Markov Chain Methods", "text": "The algorithmic components described in Section 2 are designed to function within a metaheuristics; an analysis of each component alone would not be enough to conclude their usefulness in the context of a multi-component system. To avoid bias based on the selection of one or the other metaheuristics, and to save human time in manual tuning, we have opted for a generic scheme coupled with an automated configuration."}, {"heading": "3.1. Conditional Markov Chain Search (CMCS)", "text": "The existing framework that came closest to our needs was the Markov Chain Hyper-Heuristic (MCHH). MCHH is a relatively simple algorithm that applies components in a sequence. This sequence is a Markov chain; the \"state\" in the Markov chain is only the operator to be applied, and so the Markov nature means that the transition to a new state (component / operator) depends only on the carefully applied component and transition probabilities. Transition probabilities organized in a transition matrix are achieved dynamically in MCHH by learning the most successful sequences. While MCHH is a successful approach that is able to use several algorithmic components effectively, it does not necessarily provide the necessary convenience of interpreting individual components and their combinations, because the transition probabilities in MCHH are dynamically altered, and in order to solve this problem, we have decided to have them and the transition matrix."}, {"heading": "11 else", "text": "12 h \u2190 RouletteWheel (M Failh, 1, M Failh, 2,..., M Failh, | H |);"}, {"heading": "13 return S\u2217;", "text": "Developed for BBQP [15, 9], we initialize the search with a randomly generated solution, whereby the probability of xi = 1 and yj = 1 is 50%."}, {"heading": "3.2. CMCS properties", "text": "Below, we list some of the characteristics of CMCS that make it a good choice in our study. We also believe it will be useful in future studies in a similar way. \u2022 CMCS is able to combine several algorithmic components in a search process, and each component is considered a black box. \u2022 CMCS has parameters for including or excluding individual components, as we do not know in advance whether one of our components performs poorly, especially considering that the performance of one component may well depend on which others are available - some synergistic combinations may be much more powerful than individuals would suggest. \u2022 CMCS has parameters that allow some components to be used more often than others, as some of our mountaineers are significantly faster than others; this also eliminates the need to decide in advance on the frequency of use of each of each component."}, {"heading": "3.3. Special cases of CMCS", "text": "iSe rf\u00fc ide rf\u00fc rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the"}, {"heading": "4. Benchmark Instances", "text": "The test bed, which is currently considered the standard for BBQP, was first introduced in our unpublished work. (...) Our test bed consists of five different types that relate to some of the real applications of BBQP. (...) To generate a random bipartite graph, we must create a random bipartite graph G = (V, U, E), we define seven parameters, namely m = V, n = E, n}, {"heading": "5. Metaheuristic Design", "text": "In this section we describe the configuration of metaheuristics as described in section 3 and use the BBQP components as described in section 2. In sections 5.1 and 5.2 we describe some details about our experiments, then in section 5.3 we describe the automated configuration technology used, in section 5.4 we provide details about the configured metaheuristics and in section 5.5 we analyze the results. Our test machine is based on two Intel Xeon CPU E52630 v2 (2.6 GHz) and has 32 GB RAM installed. Hyperthreading is enabled, but we never run more than one experiment per physical CPU core at a time, and conformity is not used in any of the solution methods tested."}, {"heading": "5.1. Solution Representation", "text": "We use the most natural solution representation for BBQP, i.e. simple storage of the vectors x and y. However, the additional storage of some auxiliary information together with the solution can dramatically improve the performance of the algorithms. We use a similar strategy as in [11]. In particular, in addition to the vectors x and y, we always maintain ci + \u2211 j yjqij for each i and for each j + \u2211 i xiqij. Maintaining this auxiliary information slows down any updates of the solution, but considerably accelerates the evaluation of potential movements, which usually takes up most of the time during the search."}, {"heading": "5.2. Solution Polishing", "text": "As in many one-point metaheuristics, the switch between diversifying and intensifying steps of the CMCS means that the best-found solution must be stored, and that it does not necessarily represent a local maximum in relation to all available mountaineers. Therefore, we apply a polishing process to every CMCS configuration created in this study, including special cases of VNS, Op. Prob. and MCHH. Our polishing process is performed after the CMCS has completed its work, and it aims to improve the best solution found during the operation of the CMCS. It successively terminates the OptX, OptY, FlpX and FlpY components, and restarts that sequence each time an improvement is found. If none of these algorithms can improve the solution, that is, the solution is a local maximum in relation to all our mountaineers, the process ends."}, {"heading": "5.3. Approach to Configuration of the Metaheuristics", "text": "This year, it has reached the point where it will be able to retaliate until it is able to retaliate."}, {"heading": "5.4. Configured Metaheuristics", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "5.5. Analysis of Components and Metaheuristics", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "6. Evaluation of Metaheuristics", "text": "In Tables 3 and 4, however, we report on their performance on benchmark instances, specifying 10 seconds per medium instance and 100 seconds per large instance. For each instance and metaheuristics, we report on the percentage gap between the solution obtained through this metaheuristics and the best known objective value for that instance. The best objective values are achieved by recording the best solutions produced in all of our experiments, not necessarily just the experiments reported in this paper. The best known solutions are provided for download, and their objective values are provided in Tables 5 and 6. The results of the experiments on benchmark instances are generally positively correlated with the configuration of objective function (3), except that op. sample performance is better than MCHH, and competes with CMCS [2 series reduced] to large instances. This shows a common problem that the evaluation by short runs on small instances is correlated to how the training is always used for the component, which is not perfect."}, {"heading": "6.1. Comparison to the State-of-the-art", "text": "There have been two published high-performance metaheuristics for BBQP: Iterated Local Search by Duarte et al. [9] and Tabu Search by Glover et al. [11] Both papers agree that their approaches are similar; in fact, we compare a character test, Duarte et al., from which we conclude that \"there are no significant differences between the two methods.\" First, we compare CMCS [2-series] with Tabu Search, for which we have detailed experimental results [11]. Then we also compare CMCS [2-series] with the approach used in [9]. Tabu Search has two phases: (i) a classic taboo search based on a relatively small neighborhood that runs until it fails to improve the solution (ii) a polishing process similar to ours that repeats a sequence of mountain climbing operators, OptY, FlpX and FlpY."}, {"heading": "7. Conclusions", "text": "In this thesis, we considered an important combinatorial optimization problem called the Bipartite Boolean Programming Problem (BBQP). We defined several algorithmic components for BBQP, which primarily target components for metaheuristics. In order to test and combine the performance of the components, we designed a flexible metaheuristic scheme, which we call Conditional Markov Chain Search (CMCS), whose behavior is fully defined by a set of parameters and which is suitable for automatic configuration. CMCS is a powerful multi-standard metterling scheme."}, {"heading": "7.1. Future Work", "text": "Another way to create a new class of powerful components is to reduce the overall problem by adding constraints of the form xi = xi \u2032, xi 6 = xi \u2032 or xi = 1, or even more complex ones such as xi = xi \u2032. Note that such constraints effectively reduce the original problem to a smaller BBQP; then this smaller BBQP can be solved accurately or heuristically. Also, if such constraints are generated to be consistent with the current solution, this approach can be used as a mountaineer operator. It is interesting to note that the smaller size sub-problem itself could be solved by configuring a version of CMCS to be effective for short, intense runs. This gives the fascinating possibility of a superficial CMCS process in which one of the components uses a different CMCS system, although one might expect such a component to be tuned differently."}, {"heading": "Acknowledgement", "text": "This research was supported in part by a complement to the NSERC Discovery accelerator awarded to Abraham P. Punnen, EPSRC grants EP / H000968 / 1 and EP / F033214 / 1 (\"The LANCS Initiative\"), and the LANCS Initiative International Scientific Outreach Fund, which supported Daniel Karapetyan's visit to Simon Fraser University."}], "references": [{"title": "Fine-tuning of algorithms using fractional experimental designs and local search", "author": ["B. Adenso-D\u0131\u0301az", "M. Laguna"], "venue": "Operations Research", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "A survey of very large-scale neighborhood search techniques", "author": ["R.K. Ahuja", "\u00d6. Ergun", "J.B. Orlin", "A.P. Punnen"], "venue": "Discrete Applied Mathematics", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "Approximating the Cut-Norm via Grothendieck\u2019s Inequality", "author": ["N. Alon", "A. Naor"], "venue": "SIAM Journal on Computing", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2006}, {"title": "Inapproximability results for maximum edge biclique, minimum linear arrangement, and sparsest cut", "author": ["C. Amb\u00fchl", "M. Mastrolilli", "O. Svensson"], "venue": "SIAM Journal on Computing", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Evolutionary Multi-Criterion Optimization: 8th International Conference, EMO", "author": ["L.C.T. Bezerra", "M. L\u00f3pez-Ib\u00e1\u00f1ez", "T. St\u00fctzle"], "venue": "\u2013April", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2015}, {"title": "Quadratic 0-1 bibliography URL: http: //cedric.cnam.fr/fichiers/RC611.pdf", "author": ["A. Billionnet"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2004}, {"title": "Exploring biological interaction networks with tailored weighted quasi-bicliques", "author": ["W.C. Chang", "S. Vakati", "R. Krause", "O. Eulenstein"], "venue": "BMC bioinformatics 13 Suppl", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "A hyperheuristic approach to scheduling a sales summit", "author": ["P. Cowling", "G. Kendall", "E. Soubeiga"], "venue": "Selected papers from the 3rd International Conference on the Practice and Theory of Automated Timetabling (PATAT", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2001}, {"title": "Optimization procedures for the bipartite unconstrained 0-1 quadratic programming problem", "author": ["A. Duarte", "M. Laguna", "R. Mart\u0301\u0131", "J. S\u00e1nchez-Oro"], "venue": "Computers & Operations Research", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}, {"title": "Low-rank matrix approximation with weights or missing data is NP-hard", "author": ["N. Gillis", "F. Glineur"], "venue": "SIAM Journal on Matrix Analysis and Applications", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Integrating tabu search and VLSN search to develop enhanced algorithms: A case study using bipartite boolean quadratic programs", "author": ["F. Glover", "T. Ye", "A. Punnen", "G. Kochenberger"], "venue": "European Journal of Operational Research", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2015}, {"title": "Programming by optimization", "author": ["H.H. Hoos"], "venue": "Communications of the ACM", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "ParamILS: An automatic algorithm configuration framework", "author": ["F. Hutter", "H.H. Hoos", "K. Leyton-Brown", "T. St\u00fctzle"], "venue": "Journal of Artificial Research", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Automatic algorithm configuration based on local search", "author": ["F. Hutter", "H.H. Hoos", "T. St\u00fctzle"], "venue": "in: Proceedings of the 22nd National Conference on Artificial Intelligence - Volume", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2007}, {"title": "Heuristic algorithms for the bipartite unconstrained 0-1 quadratic programming problem URL: http://arxiv.org/abs/1210.3684", "author": ["D. Karapetyan", "A.P. Punnen"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}, {"title": "Compression, clustering, and pattern discovery in very high-dimensional discrete-attribute data sets", "author": ["M. Koyut\u00fcrk", "A. Grama", "N. Ramakrishnan"], "venue": "IEEE Transactions on Knowledge and Data Engineering", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2005}, {"title": "Nonorthogonal decomposition of binary matrices for bounded-error data compression and analysis", "author": ["M. Koyut\u00fcrk", "A. Grama", "N. Ramakrishnan"], "venue": "ACM Transactions on Mathematical Software", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "Iterated local search: Framework and applications handbook of metaheuristics, Springer US, Boston, MA. volume 146 of International Series in Operations", "author": ["H.R. Louren\u00e7o", "O.C. Martin", "T. St\u00fctzle"], "venue": "Research & Management Science", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Weighted rank-one binary matrix factorization", "author": ["H. Lu", "J. Vaidya", "V. Atluri", "H. Shin", "L. Jiang"], "venue": "in: Proceedings of the Eleventh SIAM International Conference on Data Mining,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2011}, {"title": "On selecting a satisfying truth assignment", "author": ["C.H. Papadimitriou"], "venue": "in: Foundations of Computer Science,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1991}, {"title": "2015a. Average value of solutions for the bipartite boolean quadratic programs and rounding algorithms", "author": ["A.P. Punnen", "P. Sripratak", "D. Karapetyan"], "venue": "Theoretical Computer Science", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2015}, {"title": "The bipartite unconstrained 0-1 quadratic programming problem: polynomially solvable cases", "author": ["A.P. Punnen", "P. Sripratak", "D. Karapetyan"], "venue": "Discrete Applied Mathematics 193,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "Local search strategies for satisfiability testing, in: DIMACS series in discrete mathematics and theoretical computer", "author": ["B. Selman", "H. Kautz", "B. Cohen"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1995}, {"title": "Mining discrete patterns via  binary matrix factorization, in: Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data", "author": ["Shen", "B.h", "S. Ji", "J. Ye"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2009}, {"title": "Inapproximability of Maximum Weighted Edge Biclique and Its Applications", "author": ["J. Tan"], "venue": "in: Proceedings of the 5th international conference on Theory and applications of models of computation,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2008}, {"title": "Discovering statistically significant biclusters in gene expression data", "author": ["A. Tanay", "R. Sharan", "R. Shamir"], "venue": "Bioinformatics 18,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2002}, {"title": "Scheduling and rescheduling with iterative repair", "author": ["M. Zweben", "E. Davis", "B. Daun", "M.J. Deale"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1993}], "referenceMentions": [{"referenceID": 5, "context": "The BQP is a well-studied problem in the operational research literature [6].", "startOffset": 73, "endOffset": 76}, {"referenceID": 21, "context": "The focus of this paper is on a problem closely related to BQP, called the Bipartite (Unconstrained) Boolean Quadratic Programming Problem (BBQP) [23].", "startOffset": 146, "endOffset": 150}, {"referenceID": 21, "context": "A graph theoretic interpretation of the BBQP can be given as follows [23].", "startOffset": 69, "endOffset": 73}, {"referenceID": 3, "context": "Biclique Problem (MWBP) [4, 26] is to find a biclique in G of maximum total edge-weight.", "startOffset": 24, "endOffset": 31}, {"referenceID": 24, "context": "Biclique Problem (MWBP) [4, 26] is to find a biclique in G of maximum total edge-weight.", "startOffset": 24, "endOffset": 31}, {"referenceID": 21, "context": "Then BBQP(Q, c, d) solves the MWBP [23].", "startOffset": 35, "endOffset": 39}, {"referenceID": 3, "context": "This immediately shows that the BBQP is NP-hard and one can also establish some approximation hardness results with appropriate assumptions [4, 26].", "startOffset": 140, "endOffset": 147}, {"referenceID": 24, "context": "This immediately shows that the BBQP is NP-hard and one can also establish some approximation hardness results with appropriate assumptions [4, 26].", "startOffset": 140, "endOffset": 147}, {"referenceID": 6, "context": "has applications in data mining, clustering and bioinformatics [7, 27] which in turn become applications of BBQP.", "startOffset": 63, "endOffset": 70}, {"referenceID": 25, "context": "has applications in data mining, clustering and bioinformatics [7, 27] which in turn become applications of BBQP.", "startOffset": 63, "endOffset": 70}, {"referenceID": 9, "context": "Another application of BBQP arises in approximating a matrix by a rank-one binary matrix [10, 16, 17, 19, 25].", "startOffset": 89, "endOffset": 109}, {"referenceID": 15, "context": "Another application of BBQP arises in approximating a matrix by a rank-one binary matrix [10, 16, 17, 19, 25].", "startOffset": 89, "endOffset": 109}, {"referenceID": 16, "context": "Another application of BBQP arises in approximating a matrix by a rank-one binary matrix [10, 16, 17, 19, 25].", "startOffset": 89, "endOffset": 109}, {"referenceID": 18, "context": "Another application of BBQP arises in approximating a matrix by a rank-one binary matrix [10, 16, 17, 19, 25].", "startOffset": 89, "endOffset": 109}, {"referenceID": 23, "context": "Another application of BBQP arises in approximating a matrix by a rank-one binary matrix [10, 16, 17, 19, 25].", "startOffset": 89, "endOffset": 109}, {"referenceID": 18, "context": "Binary matrix factorisation is an important topic in mining discrete patterns in binary data [19, 25].", "startOffset": 93, "endOffset": 101}, {"referenceID": 23, "context": "Binary matrix factorisation is an important topic in mining discrete patterns in binary data [19, 25].", "startOffset": 93, "endOffset": 101}, {"referenceID": 21, "context": "The Maximum Cut Problem on a bipartite graph (MaxCut) can be formulated as BBQP [23] and this gives yet another application of the model.", "startOffset": 80, "endOffset": 84}, {"referenceID": 2, "context": "to find approximations to the cut-norm of a matrix [3].", "startOffset": 51, "endOffset": 54}, {"referenceID": 20, "context": "For theoretical analysis of approximation algorithms for BBQP, we refer to [22].", "startOffset": 75, "endOffset": 79}, {"referenceID": 14, "context": "A preliminary version of this paper was made available to the research community in 2012 [15].", "startOffset": 89, "endOffset": 93}, {"referenceID": 10, "context": "[11] and Duarte et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "[9] studied heuristic algorithms for the problem.", "startOffset": 0, "endOffset": 3}, {"referenceID": 14, "context": "The testbed presented in our preliminary report [15] continues to be the source of benchmark instances for the BBQP.", "startOffset": 48, "endOffset": 52}, {"referenceID": 14, "context": "In this paper, in addition to providing a detailed description of the benchmark instances, we refine the algorithms reported in [15], introduce a new class of algorithms and give a methodology for automated generation of a multi-component metaheuristic.", "startOffset": 128, "endOffset": 132}, {"referenceID": 0, "context": "see [1, 5, 13, 14]).", "startOffset": 4, "endOffset": 18}, {"referenceID": 4, "context": "see [1, 5, 13, 14]).", "startOffset": 4, "endOffset": 18}, {"referenceID": 12, "context": "see [1, 5, 13, 14]).", "startOffset": 4, "endOffset": 18}, {"referenceID": 13, "context": "see [1, 5, 13, 14]).", "startOffset": 4, "endOffset": 18}, {"referenceID": 14, "context": "These test instances were first introduced in the preliminary version of this paper [15] and since then used in a number of papers [9, 11] becoming de facto standard testbed for the BBQP.", "startOffset": 84, "endOffset": 88}, {"referenceID": 8, "context": "These test instances were first introduced in the preliminary version of this paper [15] and since then used in a number of papers [9, 11] becoming de facto standard testbed for the BBQP.", "startOffset": 131, "endOffset": 138}, {"referenceID": 10, "context": "These test instances were first introduced in the preliminary version of this paper [15] and since then used in a number of papers [9, 11] becoming de facto standard testbed for the BBQP.", "startOffset": 131, "endOffset": 138}, {"referenceID": 14, "context": "Except for \u2018Repair\u2019 and \u2018MutationX/Y\u2019, these components were introduced in [15].", "startOffset": 75, "endOffset": 79}, {"referenceID": 21, "context": "Equation (1) was first introduced in [23] and then used as a neighbourhood search operator in [15], [9] and [11].", "startOffset": 37, "endOffset": 41}, {"referenceID": 14, "context": "Equation (1) was first introduced in [23] and then used as a neighbourhood search operator in [15], [9] and [11].", "startOffset": 94, "endOffset": 98}, {"referenceID": 8, "context": "Equation (1) was first introduced in [23] and then used as a neighbourhood search operator in [15], [9] and [11].", "startOffset": 100, "endOffset": 103}, {"referenceID": 10, "context": "Equation (1) was first introduced in [23] and then used as a neighbourhood search operator in [15], [9] and [11].", "startOffset": 108, "endOffset": 112}, {"referenceID": 1, "context": "time of OptY is polynomial and the size of the neighbourhood |NOptY(x, y)| = 2 is exponential; hence OptY corresponds to an operator that could be used in a very large-scale neighbourhood search (VLNS), a method that is often considered as a powerful approach to hard combinatorial optimisation problems [2].", "startOffset": 304, "endOffset": 307}, {"referenceID": 21, "context": "FlpX and FlpY were first proposed in [23] and then used in [11].", "startOffset": 37, "endOffset": 41}, {"referenceID": 10, "context": "FlpX and FlpY were first proposed in [23] and then used in [11].", "startOffset": 59, "endOffset": 63}, {"referenceID": 19, "context": "Repair is a new component inspired by the WalkSAT heuristic for SAT problem [21, 24] in that it is a version of \u2018iterative repair\u2019 [28] that tries to repair some significant \u2018flaw\u2019 (deficiency of the solution) even if this results in creation of other flaws, in a hope that the newly created flaws could be repaired later.", "startOffset": 76, "endOffset": 84}, {"referenceID": 22, "context": "Repair is a new component inspired by the WalkSAT heuristic for SAT problem [21, 24] in that it is a version of \u2018iterative repair\u2019 [28] that tries to repair some significant \u2018flaw\u2019 (deficiency of the solution) even if this results in creation of other flaws, in a hope that the newly created flaws could be repaired later.", "startOffset": 76, "endOffset": 84}, {"referenceID": 26, "context": "Repair is a new component inspired by the WalkSAT heuristic for SAT problem [21, 24] in that it is a version of \u2018iterative repair\u2019 [28] that tries to repair some significant \u2018flaw\u2019 (deficiency of the solution) even if this results in creation of other flaws, in a hope that the newly created flaws could be repaired later.", "startOffset": 131, "endOffset": 135}, {"referenceID": 8, "context": "An operator similar to Mutation-X/Y was used in [9].", "startOffset": 48, "endOffset": 51}, {"referenceID": 14, "context": "developed for BBQP [15, 9], however, to reduce potential", "startOffset": 19, "endOffset": 26}, {"referenceID": 8, "context": "developed for BBQP [15, 9], however, to reduce potential", "startOffset": 19, "endOffset": 26}, {"referenceID": 17, "context": "implements Iterated Local Search [18]; the algorithm repeatedly applies HC until it fails, then applies Mut, and then returns to HC disregarding the success or failure of Mut.", "startOffset": 33, "endOffset": 37}, {"referenceID": 7, "context": "If M succ h,h\u2032 = M fail h,h\u2032 = 1/|H| for all h, h\u2032 \u2208 H then CMCS implements a simple uniform random choice of component [8].", "startOffset": 120, "endOffset": 123}, {"referenceID": 7, "context": "Note that Operator Probabilities is a static version of a Selection Hyper-heuristic [8].", "startOffset": 84, "endOffset": 87}, {"referenceID": 14, "context": "BBQP was first introduced in our unpublished work [15].", "startOffset": 50, "endOffset": 54}, {"referenceID": 21, "context": "For an explanation, see [23].", "startOffset": 24, "endOffset": 28}, {"referenceID": 10, "context": "We use a strategy similar to the one employed in [11].", "startOffset": 49, "endOffset": 53}, {"referenceID": 12, "context": "We compared the tuning results of our CMCS-specific algorithm to ParamILS [13], one of the leading general", "startOffset": 74, "endOffset": 78}, {"referenceID": 13, "context": "real (or benchmark) instances [14].", "startOffset": 30, "endOffset": 34}, {"referenceID": 11, "context": "We note here that CMCS is relevant to the Programming by Optimisation (PbO) concept [12].", "startOffset": 84, "endOffset": 88}, {"referenceID": 11, "context": "\u201d [12].", "startOffset": 2, "endOffset": 6}, {"referenceID": 11, "context": "the CMCS matrices; for details of PbO see [12].", "startOffset": 42, "endOffset": 46}, {"referenceID": 8, "context": "[9] and Tabu Search by Glover et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 10, "context": "[11].", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "At first, we compare CMCS[2-row] to Tabu Search for which we have detailed experimental results [11].", "startOffset": 96, "endOffset": 100}, {"referenceID": 8, "context": "Then we also compare CMCS[2-row] to ILS using approach adopted in [9].", "startOffset": 66, "endOffset": 69}, {"referenceID": 10, "context": "The experiments in [11] were conducted on the same benchmark instances, first introduced in [15] and now described in Section 4 of this paper.", "startOffset": 19, "endOffset": 23}, {"referenceID": 14, "context": "The experiments in [11] were conducted on the same benchmark instances, first introduced in [15] and now described in Section 4 of this paper.", "startOffset": 92, "endOffset": 96}, {"referenceID": 10, "context": "5In [11], a composite of OptY and FlpX is called Flip-x-Float-y, and a composite of OptX and FlpY is called Flip-y-Float-x.", "startOffset": 4, "endOffset": 8}, {"referenceID": 8, "context": "[9] that were not significantly different from Tabu.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "As pointed out above, it is known from the literature that ILS [9] performs similarly to Tabu Search, and hence the conclusions of the comparison between CMCS[2-row] and Tabu Search can be extended to ILS as well.", "startOffset": 63, "endOffset": 66}, {"referenceID": 8, "context": "However, to verify this, we reproduced the experiment from [9].", "startOffset": 59, "endOffset": 62}], "year": 2016, "abstractText": "We study the Bipartite Boolean Quadratic Programming Problem (BBQP) which is an extension of the well known Boolean Quadratic Programming Problem (BQP). Applications of the BBQP include mining discrete patterns from binary data, approximating matrices by rank-one binary matrices, computing the cut-norm of a matrix, and solving optimisation problems such as maximum weight biclique, bipartite maximum weight cut, maximum weight induced subgraph of a bipartite graph, etc. For the BBQP, we first present several algorithmic components, specifically, hill climbers and mutations, and then show how to combine them in a high-performance metaheuristic. Instead of hand-tuning a standard metaheuristic to test the efficiency of the hybrid of the components, we chose to use an automated generation of a multi-component metaheuristic to save human time, and also improve objectivity in the analysis and comparisons of components. For this we designed a new metaheuristic schema which we call Conditional Markov Chain Search (CMCS). We show that CMCS is flexible enough to model several standard metaheuristics; this flexibility is controlled by multiple numeric parameters, and so is convenient for automated generation. We study the configurations revealed by our approach and show that the best of them outperforms the previous state-of-the-art BBQP algorithm by several orders of magnitude. In our experiments we use benchmark instances introduced in the preliminary version of this paper and described here, which have already become the de facto standard in the BBQP literature.", "creator": "LaTeX with hyperref package"}}}