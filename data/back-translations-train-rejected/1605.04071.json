{"id": "1605.04071", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-May-2016", "title": "Bayesian Network Structure Learning with Integer Programming: Polytopes, Facets, and Complexity", "abstract": "The challenging task of learning structures of probabilistic graphical models is an important problem within modern AI research. Recent years have witnessed several major algorithmic advances in structure learning for Bayesian networks---arguably the most central class of graphical models---especially in what is known as the score-based setting. A successful generic approach to optimal Bayesian network structure learning (BNSL), based on integer programming (IP), is implemented in the GOBNILP system. Despite the recent algorithmic advances, current understanding of foundational aspects underlying the IP based approach to BNSL is still somewhat lacking. Understanding fundamental aspects of cutting planes and the related separation problem( is important not only from a purely theoretical perspective, but also since it holds out the promise of further improving the efficiency of state-of-the-art approaches to solving BNSL exactly. In this paper, we make several theoretical contributions towards these goals: (i) we study the computational complexity of the separation problem, proving that the problem is NP-hard; (ii) we formalise and analyse the relationship between three key polytopes underlying the IP-based approach to BNSL; (iii) we study the facets of the three polytopes both from the theoretical and practical perspective, providing, via exhaustive computation, a complete enumeration of facets for low-dimensional family-variable polytopes; and, furthermore, (iv) we establish a tight connection of the BNSL problem to the acyclic subgraph problem.", "histories": [["v1", "Fri, 13 May 2016 07:27:03 GMT  (60kb,D)", "http://arxiv.org/abs/1605.04071v1", null], ["v2", "Sun, 18 Dec 2016 17:28:15 GMT  (144kb,D)", "http://arxiv.org/abs/1605.04071v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["james cussens", "matti j\\\"arvisalo", "janne h korhonen", "mark bartlett"], "accepted": false, "id": "1605.04071"}, "pdf": {"name": "1605.04071.pdf", "metadata": {"source": "CRF", "title": "Bayesian Network Structure Learning with Integer Programming: Polytopes, Facets, and Complexity", "authors": ["James Cussens", "Matti J\u00e4rvisalo", "Janne H. Korhonen", "Mark Bartlett"], "emails": ["james.cussens@york.ac.uk", "matti.jarvisalo@helsinki.fi", "korhonen@ru.is", "mark.bartlett@york.ac.uk"], "sections": [{"heading": "1. Introduction", "text": "In fact, it is a purely reactionary project, it is a reactionary project, it is a reactionary project, it is a reactionary project, it is a reactionary project, it is a reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary, reactionary."}, {"heading": "2. Bayesian Network Structure Learning", "text": "In this section, we will recall the problem of learning optimal Bayesian network structures in the central score-based environment."}, {"heading": "2.1 Bayesian Networks", "text": "A Bayesian network represents a common probability distribution over a series of random variables V. A Bayesian network consists of a structure and parameters. \u2022 The structure is an acyclic digraph (V, B) above set V with directed edges B. The structure defines the conditional dependencies between the variables in V; for edge i-j-B we say that i is a child of j and j is a parent of i, and for a variable i-V we denote the set of parents of i by Pa (i, B). \u2022 The parameters define a distribution for each of the random variables i-V stating the parents Pa (i, B), that is, the probabilities Pr (i | Pa (i, B). As mentioned above, our focus is on learning Bayesian networks from data. Specifically, we focus on the Bayesian problem of learning the network structure (BNSL), because once a BN structure is decided, the parameters can be learned from the simple way."}, {"heading": "2.2 Score-based BNSL", "text": "In the integer programming approach to BNSL, which is at the heart of this work, the learning problem is considered a limited optimization problem (SNP): each candidate BN structure has a score that measures how well it \"explains\" the given data and the task is to find a BN structure that maximizes that score. This score function is defined in terms of the data, but for our purposes it is sufficient to interpret the details away, see e.g. Koller and Friedman (2009).Specifically, in this paper we limit attention to decompatible score functions where the score is defined locally by parent selection."}, {"heading": "2.3 BNSL with Small Parent Sets", "text": "As already mentioned, it is customary to set an upper limit on the cardinality of the permitted parental rates. Specifically, a common attitude is that we have a constant upper limit and the BSNL instances we look at are so limited that all J-P instances (i), if they are small, are. For the rest of the paper, we use the convention that sets this upper limit. In practice, BNSL instances with a large node size can often be solved if they are small. Sheehan et al. (2014) we were able to solve BNSL instances with an upper limit of 1614 between 3 and 42 minutes. Although BNSL instances with a total size of 1 (Chickering, 1996) remain hard, such results suggest that the value of the BNSL instance is in practice an important determining hardness factor of a BNSL instance. However, we will show below that the situation is somewhat more substantial."}, {"heading": "3. An Integer Programming Approach to Bayesian Network Structure", "text": "LearningIn this section, we discuss holistic approaches to BNSL programming, focusing on the branch-and-cut approach implemented by the gobnilp system for BNSL, which motivates the theoretical results presented in this article."}, {"heading": "3.1 An Integer Programming Formulation of BNSL", "text": "So it is not hard to see that any type of family diagram and its family variability can be encoded with a 0-1 vector whose components are family variables and where exactly the family variables are set to 1. Figure 1 and Table 1 show an example of an example graphic and its family variability. Although each digraph can be encoded as a 0-1 vector, it is clearly not the case that any null-1 vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector vector v"}, {"heading": "3.3 BNSL Cutting Planes via SUB-IPs", "text": "The separation problem for an IP is the problem of finding an interface that is violated by the current linear loosening of the IP. > J > J > J > xi xi xi xi xi, or to show that none exists. In this paper, we focus on the specific case of finding an interface for an LP solution. (We call this the weak separation problem because cluster constraints are not the only possible interface. In gobnilp, this problem is solved via a sub-IP as previously described, e.g. by Bartlett and Cussens (2015). In the face of an LP solution x \u00b2, the variables of the sub-IP are not the only possible interface. (In gobnilp, this problem is solved via a sub-IP as previously described.) In addition, binary variables yi are created for each i-level. The constraints of the sub-IP are such that yi = 1 indicates that i is a member of a cluster whose cluster-J-level constraint is a cluster."}, {"heading": "4. Three Polytopes related to the BNSL IP", "text": "As explained in Section 3.2, the basic Gobnilp algorithm first uses (i) only the convexity constraints and then adds (ii) cluster constraints and (iii) branches to intellectual property solution variables where appropriate. These three stages correspond to three different polytopes defined and analyzed in Sections 4.2-4.4. Before performing this analysis, we first provide basic background information on linear inequalities, polytopes, and polyhedra (Conforti et al., 2014)."}, {"heading": "4.1 Linear inequalities, polytopes and polyhedra", "text": "A point x r n is a combination of points in s r n if there is a finite number of points x1,..., xp s and scalars}, {"heading": "4.2 The Digraph Polytope", "text": "It is not as if it is a complete group of families consisting of F (V, P).F (V, P).F (V, P).F (V, P).F (V, P).F (V).F (V).F (V).F (V).F (V).F (A).F (P).F (P).F (P).F (P).F (P).F (V).F (V).F (V).F (V).F).F (V).F (V).D).F (P).D (V).F (P).F (P).F (V).D (V).D (V).D (.D).D (D).D (.D).D (.D).D (.D) (.D).D (.D) (.D) (.D).D (.D) (.D) (.D).D (.D) (.D) (.D).D (.D) (.D).D (.D) (.D).D (.D) (.D).D (.D).D (.D) (.D).D (.D) (.D) (.D).D (.D).D (.D) (.D) (.D) (.D).D (.D (.D) (.D).D (.D).D (.D).D (.D).D (.D).D (.D).D (.D (.D).D (.D).D (.D (.D).D (.D (.D).D (.D).D (.D (.D).D (.D (.D).D (.D).D (V (.D).D (.D).D (.D).D (V (V (V (V).D).F (V (V).F (V).F (V).F (V).F (V).F (V).F (V"}, {"heading": "4.3 The Cluster Polytope", "text": "Although gobnilp only adds the cluster constraints required to separate LP solutions, it is useful to consider the polytopic that would arise if all were added. Cluster polytopic PCLUSTER (V, P) is defined by adding all cluster constraints to the facet-determining inequalities of the digraphene polytopic PG (V, P), which excludes (familial variable encodings of) cyclic diagrams. PCLUSTER (V, P): = {x \u00b2 RF (V, P)."}, {"heading": "4.4 The Family Variable Polytope", "text": "The family variable PF (V, P) is the convex hull of the acyclic diagrams with node V permitted by P. To define PF (V, P), it is first useful to introduce the notation for the set of acyclic subgraphs of any diagram. (15) Let us now consider the case in which D = (V, V \u00d7 V).The family variable PF (V, P) isPF (V, P) isPF (V, P) isPF (V, P) is: = conv {x RF (V, P) is acyclic in D}.t. Pa (i, B), P (i), P (i), i (i) xi J = 1 (J = Pa (i, B)."}, {"heading": "5. Computational Complexity of the BNSL Sub-IPs", "text": "In this section, we focus on the computational complexity of BNSL sub-IPs."}, {"heading": "6. Facets of the Family Variable Polytope", "text": "This section identifies a number of facets of the polytopic family variable and specifies specific facet properties. Section 6.1 provides simpler results and Sections 6.2-6.4 more substantial results, including a close link between facets and cluster constraints, elimination of facets, and the effect of facet constraint on parent laws. In Appendix A, we provide a complete list of facet-determining inequalities over 2-4 nodes and confirm that the enumeration is consistent with the theoretical results presented here."}, {"heading": "6.1 Simple Results on Facets", "text": "We start by showing that the full-dimensional family of polytopes PF = J = J (J = J = J) is monotonous. Once we have proven this result, we will use it to determine the elementary properties of the facets of PF and the simple facets of polytope.Definition 17. A non-empty polyhedron P Rn 0 is monotonous if x \u00b2 P and 0 \u2264 y \u00b2 x implies y \u00b2 P \u00b2.Lemma 18. Let x \u00b2 PF and let the vector be such that yi \u00b2 J \u00b2 = 0 for some i \u00b2 J \u00b2 and yi \u00b2 J \u00b2 J \u00b2 and yi \u00b2 J \u00b2 J = xi \u00b2 J if i \u00b2 J 6 = i \u00b2 p \u00b2. Then y \u00b2 PF \u00b2 kxk \u00b2 kxk where each xk \u00b2 component is an extreme point of the PF corresponding to an acyclic \u00b2 diagram. For each xk we define the vector yk, yk \u00b2 yk \u00b2 yk \u00b2 yk \u00b2 yk."}, {"heading": "6.2 Cluster Constraints are Facets of the Family Variable Polytope", "text": "In this section, we show that inequality in the family is different when all parents are intertwined. In this section, we show that inequalities in the family are different. In this section, we show that inequalities in the family are different. In the next section (Section 6.3), we will show how inequalities in the group (3) are generalized. This provides a simple generalization (Theorem 29) of the result of this section, which shows that if all parents in the group are admitted, all inequalities in the group (Section 6.3) are not just those for which C = V. As a special case, this implies that inequalities in the group were developed by Jaakkola et al. (2010) facets in the family are variable."}, {"heading": "6.3 Lifting Facets of the Family Variable Polytope", "text": "In this section we show that if all parents are admitted, then facet-defining inequalities for the family of variable polytopes for some nodes V can be \"reversed\" to facets for each family of variable polytopes for an extended node V. \"Recall that PV (i):\" Every single node is independent of the family of variable polytopes PF (V, PV), which does not have a lower limit for a variable family V. \"Leave V\" \"(i), where i.\" 6. \"\" J \"(21) is a facet-defining inequality for the family of variable polytopes PF\" (V, PV), which does not have a lower limit for a variable V. \"Leave V\" (i), where i. \"V.\".J. \"\""}, {"heading": "6.4 Facets when Parent Sets are Restricted", "text": "The results in the preceding sections are all intended for the special case PV, when all possible parent sets are allowed for each node."}, {"heading": "7. Faces of the Family Variable Polytope defined by Orders and by Sinks", "text": "In this section, we will analyze the faces of the All-Parent-Sets-Allowed Family Variable Polytopes, which are defined by global orders or drop nodes. Faces of a polytopic are themselves polytopes, and in this section, we will find a complete characterization of the facets of both types of polytopes. In addition, faces defined by drop nodes will result in a useful extended representation of the family variable polytopes, which can be used to relate family variable polytopes to different numbers of nodes."}, {"heading": "7.1 Order-defined Faces", "text": "An acyclic diagram (V, B) is consistent with < if i \u2190 B \u21d2 j < i, so that the parents come before the children in order. Valid inequality is defined by i, J: (j, J s.t. i < j) xi \u2190 J = 0 defines a face of the family variable PolytopePF (V, <) = {x, PF (V, PV). This is the only constraint for x. So distinct are all acyclic diagrams associated with < j, PF (V, <) and no diagrams associated with < V."}, {"heading": "7.2 Sink-defined Faces", "text": "For some specific j-V, we consider the valid inequality \u2211 i = j, j-J xi-J = 1 (1). This defines a face PF (V, j) of family variables asPF (V, j): = {x-PF (V, PV). Since each acyclic diagram has at least one sink, then each extreme point of family variables PF (V, PV) on a face PF (V, j) is for at least one selection j.Remark 35. Abbreviation for p and remember that dim (PF, PV) = p (2p \u2212 1)."}, {"heading": "7.3 A Sink-based Extended Representation for the Family Variable Polytope", "text": "Da PF (V, j), PF (V, PV), for each j (V, PV), J (J), J (V, PV), PF (V, PV), PF (V, PF), PF (V, PV), PF (V, PV), PF (V, PV), PF (V, PV), PF (V, j), PF (V, PV), PF (V, PV), PF (V), PV (V, PV), PF (V, j), PF (V, j), PF (V, V), PF (V), PF (V, j), PF (V), PF (V), PF (V, j), PF (V), PF (V), PV (V)."}, {"heading": "8. Relating BNSL and the Acyclic Subgraph Problem", "text": "As the last contribution of this article, we establish a close link between BNSL and the acyclic subgraph problem."}, {"heading": "8.1 BSNL as the Acyclic Subgraph Problem", "text": "BNSL. BNSL. (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL). (BNSL)."}, {"heading": "8.2 Relating the BNSL and Acyclic Subgraph Problem Polytopes", "text": "Let RA be a real vector space in which each component of a vector y \u00b7 RA is indexed by an edge i \u00b7 j \u00b2 A. For each edge that B \u00b2 A has set, the incidence vector yB \u00b2 RA of B is defined by yBi \u00b2 J = 1, if i \u00b2 J \u00b2 B and yBi \u00b2 J = 0, if i \u00b2 J 6 \u00b2 B. The acyclic subgraph polytopic PAC (D) isPAC (D): = conv {yB \u00b2 RA \u00b2 B \u00b2 A (D)}. (38) It is not difficult to see that the all-parent set permitted family variable Polytopic PF (V) can be projected onto the ASP polytopic A = V \u00b7 V \u00b2 B \u00b2 B \u00b2 A (D)."}, {"heading": "9. Conclusions", "text": "Integer programming, and in particular the IP-based gobnilp system, provides a state-of-the-art practical approach to the NP-hard optimization problem of learning optimal Bayesian network structures, BNSL. Therefore, providing fundamental insights into the IP approach to BNSL is important both from a purely scientific perspective - dealing with a central class of probabilistic graphical models with various applications in AI - and for developing a better understanding of the approach, in the hope of further improving the current algorithmic approaches to BNSL. With these motifs, we are exploring various fundamental computational and representative aspects of BNSL in this work. From a practical perspective, many of our key contributions have close links to IP interfaces, which are derived in practice in the search for optimal network structures. Specifically, our contributions include the following: We have shown that the separation problem, which in practice results in problem-specific BNSL interfaces, is previously a hard problem within gobnp."}, {"heading": "Acknowledgments", "text": "The authors are grateful for financial support from: UK Medical Research Council Grant G1002312 (JC, MB); Senior Postdoctoral Fellowship SF / 14 / 008 from KU Leuven (JC); UK NC3RS Grant NC / K001264 / 1 (JC); Academy of Finland under grants 251170 COIN Centre of Excellence in Computational Inference Research, 276412, and 284591 (MJ); Research Funds of the University of Helsinki (MJ); and Icelandic Research Fund grant 152679-051 (JHK)."}, {"heading": "Appendix A. Enumeration of Facets for Low-dimensional Family", "text": "In this section we provide a complete listing of all facet-determining inequalities (i.e. a minimal description of the convex hull by inequalities) of the family variables polytopic PF (V, PV) {{} {} {} {} {} {{}} {2, 3, 4. We will observe that all lower limits of variables, modified convexity constraints and cluster inequalities actually belong to the facets predicted by our theoretical results. In section A.4 we will find that there are many facets that are not given in section 6. In section A.4 we will list all facet-determining inequalities for | V | 4, where most parents are allowed and ensure that the results are consistent with theorem."}, {"heading": "Appendix B. Lift-and-Project for Family Variable Polytopes", "text": "In this Appendix, we apply a \"Lift-and-Project\" method based on the b-based b-based b-based b-based b-based b-based extended b-based representation of Section 7.3 to derive a representation of PF ({a, b, c, d}, P {b, c, d}, PF ({a, c, d}), PF ({a, c, d}, P {a, c}, P {a, c}, P {a, c, d}), PF ({a, b}, P {a, b {b, c +), P {b, c, c (c), P {b, xx}, c \u00b2, c \u00b2, c \u00b2, c \u00b2, c \u00b2, c \u00b2, relevant, c \u00b2, c, c, c \u00b2, c, c, c, c \u00b2, c, c, c, c \u00b2, c, 33, c, c, c, c, c, c, c \u00b2, c, c, c, c, c, c \u00b2, c, c, c, c, c, c, c, c, c, c, c, c, c, \u00b2, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c"}, {"heading": "4B facet", "text": "ua \u2212 a = 1, ua \u2212 2 \u2212 bcd = 1, ub \u2212 b = 1, ub \u2212 2 \u2212 acd = 1, uc \u2212 c = 1, uc \u2212 ab = 1, ud \u2212 d = 1, ud \u2212 ab = 1"}, {"heading": "4C facet", "text": "ua \u2212 a = 1, ua \u2212 2 \u2212 bcd = 1, ub \u2212 b = 1, ub \u2212 a = 1, uc \u2212 c = 1, uc \u2212 ad = 1, ud \u2212 d = 1, ud \u2212 ac = 1"}, {"heading": "4D facet", "text": "ua \u2212 a = 2, ua \u2212 b = 1, ub \u2212 b = 1, ub \u2212 ac = 1, ub \u2212 ad = 1, uc \u2212 c = 1, uc \u2212 abd = 1, ud \u2212 d = 1, ud \u2212 abc = 1"}, {"heading": "4E facet", "text": "ua \u2212 a = 2, ub \u2212 b = 1, ub \u2212 2 \u2212 acd = 1, uc \u2212 c = 1, uc \u2212 2 \u2212 abd = 1, ud \u2212 d = 1, ud \u2212 2 \u2212 abc = 1"}, {"heading": "4F facet", "text": "ua \u2212 a = 1, ua \u2212 bcd = 1, ub \u2212 b = 1, ub \u2212 acd = 1, uc \u2212 c = 2, uc \u2212 d = 1, ud \u2212 d = 2, ud \u2212 c = 1"}, {"heading": "4G facet", "text": "ua \u2212 a = 1, ua \u2212 bcd = 1, ub \u2212 b = 1, ub \u2212 ad = 1, ub \u2212 cd = 1, uc \u2212 c = 2, uc \u2212 d = 1, ud \u2212 d = 2, ud \u2212 bc = 1"}, {"heading": "4H facet", "text": "ua \u2212 a = 2, ub \u2212 b = 1, ub \u2212 a = 1, uc \u2212 c = 1, uc \u2212 ad = 1, ud \u2212 d = 1, ud \u2212 ac = 1"}, {"heading": "4I facet", "text": "ua \u2212 a = 2, ua \u2212 bcd = 1, ub \u2212 b = 2, ub \u2212 acd = 1, uc \u2212 c = 2, uc \u2212 ad = 1, uc \u2212 bd = 1, ud \u2212 d = 2, ud \u2212 ac = 1, ud \u2212 bc = 1"}, {"heading": "4J facet", "text": "ua \u2212 a = 2, ua \u2212 2 \u2212 bcd = 1, ub \u2212 b = 1, ub \u2212 ac = 1, ub \u2212 ad = 1, uc \u2212 c = 1, uc \u2212 ab = 1, uc \u2212 ad = 1, ud \u2212 d = 1, ud \u2212 ab = 1, ud \u2212 ac = 1We have shown how to generate all facets of PF (V, PV) for | V | = 4 from the | V | = 3 case by constructing the desired convex shell with an extended representation and then projecting the extransible variables away. Although in this case we already had the convex shell for | V | = 4 (by direct calculation using cables), it is clear that the same technique could be used to construct the convex shell for | V | = 5 and above. The difficulty in this approach is to determine which projections produce u \u2265 0 facets."}], "references": [{"title": "Constraint Integer Programming", "author": ["T. Achterberg"], "venue": "Ph.D. thesis, TU Berlin.", "citeRegEx": "Achterberg,? 2007", "shortCiteRegEx": "Achterberg", "year": 2007}, {"title": "Projection, lifting and extended formulation in integer and combinatorial optimization", "author": ["E. Balas"], "venue": "Annals of Operation Research, 140, 125\u2013161.", "citeRegEx": "Balas,? 2005", "shortCiteRegEx": "Balas", "year": 2005}, {"title": "Integer linear programming for the Bayesian network structure learning problem", "author": ["M. Bartlett", "J. Cussens"], "venue": null, "citeRegEx": "Bartlett and Cussens,? \\Q2015\\E", "shortCiteRegEx": "Bartlett and Cussens", "year": 2015}, {"title": "Facet generating techniques", "author": ["S. Boyd", "W.R. Pulleyblank"], "venue": "Research Trends in Combinatorial Optimization, Bonn Workshop on Combinatorial Optimization", "citeRegEx": "Boyd and Pulleyblank,? \\Q2009\\E", "shortCiteRegEx": "Boyd and Pulleyblank", "year": 2009}, {"title": "Learning Bayesian networks is NP-Complete", "author": ["D.M. Chickering"], "venue": "Fisher, D., & Lenz, H.-J. (Eds.), Learning from Data: AI & Statistics V, chap. 12, pp. 121\u2013130. Springer.", "citeRegEx": "Chickering,? 1996", "shortCiteRegEx": "Chickering", "year": 1996}, {"title": "Algebra, Vol", "author": ["P.M. Cohn"], "venue": "1. Wiley.", "citeRegEx": "Cohn,? 1982", "shortCiteRegEx": "Cohn", "year": 1982}, {"title": "Learning highdimensional directed acyclic graphs with latent and selection variables", "author": ["D. Colombo", "M.H. Maathuis", "M. Kalisch", "T.S. Richardson"], "venue": "Annals of Statistics,", "citeRegEx": "Colombo et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Colombo et al\\.", "year": 2012}, {"title": "Maximum likelihood pedigree reconstruction using integer programming", "author": ["J. Cussens"], "venue": "Proceedings of the Workshop on Constraint Based Methods for Bioinformatics (WCB-10).", "citeRegEx": "Cussens,? 2010", "shortCiteRegEx": "Cussens", "year": 2010}, {"title": "Bayesian network learning with cutting planes", "author": ["J. Cussens"], "venue": "Cozman, F. G., & Pfeffer, A. (Eds.), Proceedings of the 27th Conference on Uncertainty in Artificial Intelligence (UAI 2011), pp. 153\u2013160. AUAI Press.", "citeRegEx": "Cussens,? 2011", "shortCiteRegEx": "Cussens", "year": 2011}, {"title": "Maximum likelihood pedigree reconstruction using integer linear programming", "author": ["J. Cussens", "M. Bartlett", "E.M. Jones", "N.A. Sheehan"], "venue": "Genetic Epidemiology,", "citeRegEx": "Cussens et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Cussens et al\\.", "year": 2013}, {"title": "Polyhedral aspects of score equivalence in Bayesian network structure learning", "author": ["J. Cussens", "D. Haws", "M. Studen\u00fd"], "venue": "Submitted to Mathematical Programming", "citeRegEx": "Cussens et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Cussens et al\\.", "year": 2015}, {"title": "Efficient structure learning of Bayesian networks using constraints", "author": ["de Campos", "P. Cassio", "Q. Ji"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Campos et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Campos et al\\.", "year": 2011}, {"title": "cdd and ccdplus homepage.. https://www.inf.ethz.ch/personal/ fukudak/cdd_home", "author": ["K. Fukuda"], "venue": null, "citeRegEx": "Fukuda,? \\Q2015\\E", "shortCiteRegEx": "Fukuda", "year": 2015}, {"title": "On the acyclic subgraph polytope", "author": ["M. Gr\u00f6tschel", "M. J\u00fcnger", "G. Reinelt"], "venue": "Mathematical Programming,", "citeRegEx": "Gr\u00f6tschel et al\\.,? \\Q1985\\E", "shortCiteRegEx": "Gr\u00f6tschel et al\\.", "year": 1985}, {"title": "Facets of regular 0-1 polytopes", "author": ["P.L. Hammer", "E. Johnson", "U.N. Peled"], "venue": "Mathematical Programming,", "citeRegEx": "Hammer et al\\.,? \\Q1975\\E", "shortCiteRegEx": "Hammer et al\\.", "year": 1975}, {"title": "Learning discrete Bayesian networks", "author": ["D. Heckerman", "D. Geiger", "D.M. Chickering"], "venue": "Machine Learning,", "citeRegEx": "Heckerman et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Heckerman et al\\.", "year": 1995}, {"title": "Hugin case stories", "author": ["Hugin"], "venue": "http://www.hugin.com/case-stories/.", "citeRegEx": "Hugin,? 2016", "shortCiteRegEx": "Hugin", "year": 2016}, {"title": "Learning Bayesian network structure using LP relaxations", "author": ["T. Jaakkola", "D. Sontag", "A. Globerson", "M. Meila"], "venue": "Proceedings of 13th International Conference on Artificial Intelligence and Statistics (AISTATS 2010),", "citeRegEx": "Jaakkola et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Jaakkola et al\\.", "year": 2010}, {"title": "Exact Bayesian structure discovery in Bayesian networks", "author": ["M. Koivisto", "K. Sood"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Koivisto and Sood,? \\Q2004\\E", "shortCiteRegEx": "Koivisto and Sood", "year": 2004}, {"title": "Probabilistic Graphical Models: Principles and Techniques", "author": ["D. Koller", "N. Friedman"], "venue": null, "citeRegEx": "Koller and Friedman,? \\Q2009\\E", "shortCiteRegEx": "Koller and Friedman", "year": 2009}, {"title": "Predicting the hardness of learning Bayesian networks", "author": ["B. Malone", "K. Kangas", "M. J\u00e4rvisalo", "M. Koivisto", "P. Myllym\u00e4ki"], "venue": "Proceedings of the 28th AAAI Conference on Artificial Intelligence (AAAI", "citeRegEx": "Malone et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Malone et al\\.", "year": 2014}, {"title": "The Linear Ordering Problem: Exact and Heuristic Methods in Combinatorial Optimization", "author": ["R. Mart\u0301\u0131", "G. Reinelt"], "venue": null, "citeRegEx": "Mart\u0301\u0131 and Reinelt,? \\Q2011\\E", "shortCiteRegEx": "Mart\u0301\u0131 and Reinelt", "year": 2011}, {"title": "Exact maximum margin structure learning of Bayesian networks", "author": ["R. Peharz", "F. Pernkopf"], "venue": "In Proceedings of the 29th International Conference on Machine Learning (ICML", "citeRegEx": "Peharz and Pernkopf,? \\Q2012\\E", "shortCiteRegEx": "Peharz and Pernkopf", "year": 2012}, {"title": "Improved maximum likelihood reconstruction of complex multi-generational pedigrees", "author": ["N. Sheehan", "M. Bartlett", "J. Cussens"], "venue": "Theoretical Population Biology,", "citeRegEx": "Sheehan et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sheehan et al\\.", "year": 2014}, {"title": "A simple approach for finding the globally optimal Bayesian network structure", "author": ["T. Silander", "P. Myllym\u00e4ki"], "venue": "In Proceedings of the 22nd Conference on Uncertainty in Artificial Intelligence (UAI", "citeRegEx": "Silander and Myllym\u00e4ki,? \\Q2006\\E", "shortCiteRegEx": "Silander and Myllym\u00e4ki", "year": 2006}, {"title": "Causation, Prediction and Search", "author": ["P. Spirtes", "C. Glymour", "R. Scheines"], "venue": null, "citeRegEx": "Spirtes et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Spirtes et al\\.", "year": 1993}, {"title": "How matroids occur in the context of learning Bayesian network structure", "author": ["M. Studen\u00fd"], "venue": "Meila, M., & Heskes, T. (Eds.), Proceedings of the 31st Conference on Uncertainty in Artificial Intelligence (UAI 2015), pp. 832\u2013841. AUAI Press.", "citeRegEx": "Studen\u00fd,? 2015", "shortCiteRegEx": "Studen\u00fd", "year": 2015}, {"title": "The max-min hill-climbing Bayesian network structure learning algorithm", "author": ["I. Tsamardinos", "L.E. Brown", "C.F. Aliferis"], "venue": "Machine Learning,", "citeRegEx": "Tsamardinos et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Tsamardinos et al\\.", "year": 2006}, {"title": "Machine learning of Bayesian networks using constraint programming", "author": ["P. van Beek", "H. Hoffmann"], "venue": "Proceedings of the 21st International Conference on Principles and Practice of Constraint Programming (CP 2015),", "citeRegEx": "Beek and Hoffmann,? \\Q2015\\E", "shortCiteRegEx": "Beek and Hoffmann", "year": 2015}, {"title": "Integer Programming", "author": ["L.A. Wolsey"], "venue": "John Wiley.", "citeRegEx": "Wolsey,? 1998", "shortCiteRegEx": "Wolsey", "year": 1998}, {"title": "Learning optimal Bayesian networks: A shortest path perspective", "author": ["C. Yuan", "B. Malone"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Yuan and Malone,? \\Q2013\\E", "shortCiteRegEx": "Yuan and Malone", "year": 2013}], "referenceMentions": [{"referenceID": 16, "context": "Bayesian networks (Koller & Friedman, 2009) form a central class of probabilistic graphical models that finds applications in various domains (Hugin, 2016; Sheehan et al., 2014).", "startOffset": 142, "endOffset": 177}, {"referenceID": 23, "context": "Bayesian networks (Koller & Friedman, 2009) form a central class of probabilistic graphical models that finds applications in various domains (Hugin, 2016; Sheehan et al., 2014).", "startOffset": 142, "endOffset": 177}, {"referenceID": 25, "context": "In the constraint-based approach (Spirtes et al., 1993; Colombo et al., 2012) the goal is to learn a network which is consistent with conditional independence relations which have been inferred from the data.", "startOffset": 33, "endOffset": 77}, {"referenceID": 6, "context": "In the constraint-based approach (Spirtes et al., 1993; Colombo et al., 2012) the goal is to learn a network which is consistent with conditional independence relations which have been inferred from the data.", "startOffset": 33, "endOffset": 77}, {"referenceID": 15, "context": "Even when the score function is restricted to be a BDe score (Heckerman et al., 1995), the BNSL problem has been shown to be NP-hard (Chickering, 1996).", "startOffset": 61, "endOffset": 85}, {"referenceID": 4, "context": ", 1995), the BNSL problem has been shown to be NP-hard (Chickering, 1996).", "startOffset": 55, "endOffset": 73}, {"referenceID": 27, "context": "Due to NPhardness, much work on BNSL has focused on developing approximate, local search style algorithms (Tsamardinos et al., 2006) that most often cannot give guarantees on how close to optimal, in terms of the objective function, are the structures found.", "startOffset": 106, "endOffset": 132}, {"referenceID": 8, "context": "Recently, despite its complexity, several advances in exact approaches to BNSL have surfaced (Koivisto & Sood, 2004; Silander & Myllym\u00e4ki, 2006; Cussens, 2011; de Campos & Ji, 2011; Yuan & Malone, 2013; van Beek & Hoffmann, 2015), ranging from problem-specific dynamic programming branch-and-bound algorithms to approaches based on A\u2217-style state-space search, constraint programming, and integer linear programming (IP), which can, with certain restrictions, learn provably-optimal BN structures with tens to hundreds of nodes.", "startOffset": 93, "endOffset": 229}, {"referenceID": 20, "context": "As shown in a recent study (Malone et al., 2014), perhaps the most successful exact approach to BNSL is provided by the gobnilp system (Cussens, 2011).", "startOffset": 27, "endOffset": 48}, {"referenceID": 8, "context": ", 2014), perhaps the most successful exact approach to BNSL is provided by the gobnilp system (Cussens, 2011).", "startOffset": 94, "endOffset": 109}, {"referenceID": 19, "context": "Koller and Friedman (2009). Specifically, in this paper we restrict attention to decomposable score functions, where the score is defined locally by the parent set choices for each i \u2208 V .", "startOffset": 0, "endOffset": 27}, {"referenceID": 4, "context": "Even though BNSL remains NP-hard unless \u03ba = 1 (Chickering, 1996), such results suggest that in practice the value of \u03ba is an important determining factor of the hardness of a BNSL instance.", "startOffset": 46, "endOffset": 64}, {"referenceID": 22, "context": "For example, with \u03ba = 2, Sheehan et al. (2014) were able to solve BNSL instances with |V | = 1614 in between 3 and 42 minutes.", "startOffset": 25, "endOffset": 47}, {"referenceID": 7, "context": "There are a number of ways of ruling out cycles (Cussens, 2010; Peharz & Pernkopf, 2012; Cussens et al., 2013).", "startOffset": 48, "endOffset": 110}, {"referenceID": 9, "context": "There are a number of ways of ruling out cycles (Cussens, 2010; Peharz & Pernkopf, 2012; Cussens et al., 2013).", "startOffset": 48, "endOffset": 110}, {"referenceID": 7, "context": "There are a number of ways of ruling out cycles (Cussens, 2010; Peharz & Pernkopf, 2012; Cussens et al., 2013). In this paper we focus on cluster constraints first introduced by Jaakkola et al. (2010). A cluster is simply a subset of nodes.", "startOffset": 49, "endOffset": 201}, {"referenceID": 2, "context": "The gobnilp approach to solving this IP are fully detailed by Bartlett and Cussens (2015); here we overview the essential ideas.", "startOffset": 62, "endOffset": 90}, {"referenceID": 0, "context": "de) (Achterberg, 2007) and it uses SCIP to generate many other cutting planes in addition to cluster constraints.", "startOffset": 4, "endOffset": 22}, {"referenceID": 2, "context": "by Bartlett and Cussens (2015). Given an LP solution x\u2217 to separate, the variables of the sub-IP include binary variables yi\u2190J for each family such that x \u2217 i\u2190J > 0.", "startOffset": 3, "endOffset": 31}, {"referenceID": 2, "context": "It is not difficult to show\u2014Bartlett and Cussens (2015) provide the detail\u2014that any feasible solution to sub-IP (9\u201313) determines a cutting plane for x\u2217 and that a proof of the sub-IP\u2019s infeasibility establishes that there is no such cutting plane.", "startOffset": 28, "endOffset": 56}, {"referenceID": 29, "context": "Affine independence is defined as follows (Wolsey, 1998).", "startOffset": 42, "endOffset": 56}, {"referenceID": 26, "context": "That PF ( PCLUSTER also implies that it may be worth searching for facetdefining cuts which are not cluster inequalities, for example those discovered by Studen\u00fd (2015).", "startOffset": 154, "endOffset": 169}, {"referenceID": 14, "context": "From Proposition 20 and the result of Hammer et al. (1975) we have the result but with \u03c00 \u2265 0.", "startOffset": 38, "endOffset": 59}, {"referenceID": 8, "context": "The \u03ba-cluster inequalities (Cussens, 2011) are a generalisation of cluster inequalities (3).", "startOffset": 27, "endOffset": 42}, {"referenceID": 7, "context": "The \u03ba-cluster inequalities (Cussens, 2011) are a generalisation of cluster inequalities (3). The cluster inequalities (3) are \u03ba-cluster inequalities for the special case of \u03ba = 1. In the next section (Section 6.3) we will show how to \u2018lift\u2019 facet-defining inequalities. This provides an easy generalisation (Theorem 29) of the result of this section which shows that, when all parent sets are allowed, all \u03ba-cluster inequalities are facets, not just those for which C = V . As a special case, this implies that the cluster inequalities devised by Jaakkola et al. (2010) are facets of the family variable polytope, when all parent sets are allowed.", "startOffset": 28, "endOffset": 570}, {"referenceID": 7, "context": "The \u03ba-cluster inequalities (Cussens, 2011) are a generalisation of cluster inequalities (3). The cluster inequalities (3) are \u03ba-cluster inequalities for the special case of \u03ba = 1. In the next section (Section 6.3) we will show how to \u2018lift\u2019 facet-defining inequalities. This provides an easy generalisation (Theorem 29) of the result of this section which shows that, when all parent sets are allowed, all \u03ba-cluster inequalities are facets, not just those for which C = V . As a special case, this implies that the cluster inequalities devised by Jaakkola et al. (2010) are facets of the family variable polytope, when all parent sets are allowed. An alternative proof for the fact that \u03ba-cluster inequalities are facet-defining was recently provided by Cussens et al. (2015) (see Corollary 4 of that paper).", "startOffset": 28, "endOffset": 776}, {"referenceID": 7, "context": "The \u03ba-cluster inequalities (Cussens, 2011) are a generalisation of cluster inequalities (3). The cluster inequalities (3) are \u03ba-cluster inequalities for the special case of \u03ba = 1. In the next section (Section 6.3) we will show how to \u2018lift\u2019 facet-defining inequalities. This provides an easy generalisation (Theorem 29) of the result of this section which shows that, when all parent sets are allowed, all \u03ba-cluster inequalities are facets, not just those for which C = V . As a special case, this implies that the cluster inequalities devised by Jaakkola et al. (2010) are facets of the family variable polytope, when all parent sets are allowed. An alternative proof for the fact that \u03ba-cluster inequalities are facet-defining was recently provided by Cussens et al. (2015) (see Corollary 4 of that paper). The proof establishes not only that \u03ba-cluster inequalities are facet-defining, but also that they are score-equivalent. A face of the family variable polytope is said to be score-equivalent if it is the optimal face for some score equivalent objective. An objective function is score equivalent if it gives the same value to any two acyclic digraphs which are Markov equivalent (encode the same conditional independence relations). In later work, Studen\u00fd (2015) went further and showed that \u03ba-cluster inequalities form just part of a more general class of facet-defining inequalities which can be defined in terms of connected matroids.", "startOffset": 28, "endOffset": 1271}, {"referenceID": 3, "context": "As Boyd and Pulleyblank (2009) note \u201cAs it is often technically much simpler to obtain results", "startOffset": 3, "endOffset": 31}, {"referenceID": 5, "context": "Since this is an elementary operation it does not change the rank of the matrix (Cohn, 1982), and so A2 has rank m.", "startOffset": 80, "endOffset": 92}, {"referenceID": 13, "context": "1 BSNL as the Acyclic Subgraph Problem BNSL is closely related to the well-known acyclic subgraph problem (ASP) (Gr\u00f6tschel et al., 1985).", "startOffset": 112, "endOffset": 136}, {"referenceID": 21, "context": "Note that, as Mart\u0301\u0131 and Reinelt (2011) show, ASP is equivalent to the linear ordering problem (LOP).", "startOffset": 14, "endOffset": 40}], "year": 2016, "abstractText": "The challenging task of learning structures of probabilistic graphical models is an important problem within modern AI research. Recent years have witnessed several major algorithmic advances in structure learning for Bayesian networks\u2014arguably the most central class of graphical models\u2014especially in what is known as the score-based setting. A successful generic approach to optimal Bayesian network structure learning (BNSL), based on integer programming (IP), is implemented in the gobnilp system. Despite the recent algorithmic advances, current understanding of foundational aspects underlying the IP based approach to BNSL is still somewhat lacking. Understanding fundamental aspects of cutting planes and the related separation problem is important not only from a purely theoretical perspective, but also since it holds out the promise of further improving the efficiency of state-of-the-art approaches to solving BNSL exactly. In this paper, we make several theoretical contributions towards these goals: (i) we study the computational complexity of the separation problem, proving that the problem is NP-hard; (ii) we formalise and analyse the relationship between three key polytopes underlying the IP-based approach to BNSL; (iii) we study the facets of the three polytopes both from the theoretical and practical perspective, providing, via exhaustive computation, a complete enumeration of facets for low-dimensional family-variable polytopes; and, furthermore, (iv) we establish a tight connection of the BNSL problem to the acyclic subgraph problem.", "creator": "TeX"}}}