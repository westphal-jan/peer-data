{"id": "1605.06466", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-May-2016", "title": "Anomaly Detection in XML-Structured SOAP Messages Using Tree-Based Association Rule Mining", "abstract": "Web services are software systems designed for supporting interoperable dynamic cross-enterprise interactions. The result of attacks to Web services can be catastrophic and causing the disclosure of enterprises' confidential data. As new approaches of attacking arise every day, anomaly detection systems seem to be invaluable tools in this context. The aim of this work has been to target the attacks that reside in the Web service layer and the extensible markup language (XML)-structured simple object access protocol (SOAP) messages. After studying the shortcomings of the existing solutions, a new approach for detecting anomalies in Web services is outlined. More specifically, the proposed technique illustrates how to identify anomalies by employing mining methods on XML-structured SOAP messages. This technique also takes the advantages of tree-based association rule mining to extract knowledge in the training phase, which is used in the test phase to detect anomalies. In addition, this novel composition of techniques brings nearly low false alarm rate while maintaining the detection rate reasonably high, which is shown by a case study.", "histories": [["v1", "Fri, 20 May 2016 18:43:44 GMT  (1275kb)", "http://arxiv.org/abs/1605.06466v1", "Trustworthy Computing Laboratory, School of Computer Engineering, Iran University of Science and Technology"]], "COMMENTS": "Trustworthy Computing Laboratory, School of Computer Engineering, Iran University of Science and Technology", "reviews": [], "SUBJECTS": "cs.CR cs.AI", "authors": ["reyhaneh ghassem esfahani", "mohammad abadollahi azgomi", "reza fathi"], "accepted": false, "id": "1605.06466"}, "pdf": {"name": "1605.06466.pdf", "metadata": {"source": "CRF", "title": "Anomaly Detection in XML-Structured SOAP Messages Using Tree-Based Association Rule Mining", "authors": ["Reyhaneh Ghassem Esfahani", "Mohammad Abadollahi Azgomi", "Reza Fathi"], "emails": ["r_isfehani@comp.iust.ac.ir,", "azgomi@iust.ac.ir", "fathi_reza@comp.iust.ac.ir", "azgomi@iust.ac.ir."], "sections": [{"heading": null, "text": "Web services are software systems that support interoperable dynamic interactions between companies. The outcome of attacks on web services can be catastrophic and lead to the disclosure of confidential company data. As new approaches to the attack emerge every day, anomaly detection systems seem to be invaluable tools in this context. The aim of this work was to combat the attacks that occur in the web services layer and the extensible markup language (XML) -structured simple object access log messages (SOAP). After examining the shortcomings of the existing solutions, a new approach to detecting anomalies in web services is outlined. More specifically, the proposed technique shows how anomalies can be identified by using mining methods on XML-structured SOAP messages. This technique also takes advantage of the tree-based association rule mining to extract knowledge during the training phase, which is used in the test phase to detect anomalies."}, {"heading": "1. Introduction", "text": "In fact, it is that we are able to assert ourselves, that we are able, that we are able to achieve our objectives, and that we are able to achieve these objectives."}, {"heading": "2. Background", "text": "In this section, we will briefly define some concepts and terms that will be used throughout the essay."}, {"heading": "2.1. Web services", "text": "According to the World Wide Web Consortium (W3C), a web service is a software system that supports interoperable machine-to-machine interaction over a network. It has an interface that is described in a machine-processable format, especially in the Web Service Definition Language (WSDL). Other systems interact with the web service in a manner prescribed by its description through SOAP messages, which are typically transmitted via the Hypertext Transport Protocol (HTTP) with XML serialization in conjunction with other web-related standards [1]."}, {"heading": "2.2. Simple object access protocol", "text": "Simple Object Access Protocol (SOAP) is an Internet-based, platform-independent protocol that provides a way to communicate between applications. Previous application protocols, such as Remote Procedure Call (RPC), have faced some security and compatibility issues. Therefore, firewalls and proxy servers usually block their traffic. SOAP messages, on the other hand, are sent via HTTP, a transmission protocol that is supported by all Internet browsers and servers. - Ease-of-use and extensibility are other features of this XML-based protocol [2]. A SOAP message is an ordinary XML document that contains the following elements: - Envelope: the root element that identifies the XML document as a SOAP message. - Header: an optional element that contains information such as authentication or payment. - Body: a required element that contains call and response information - the SOAP error that is included in an application's request form, and a SOP that is an optional element of the application."}, {"heading": "2.3. Web services and SOAP security", "text": "Since firewalls and gateways treat SOAP messages as normal HTTP traffic, it is possible for these messages to bypass firewalls. Therefore, all possible malicious content in SOAP messages is not detected and this fact can compromise the security of web services. In [3], attacks on web services are divided into three main classes: (1) infrastructure attacks, which are attacks on web servers on which the web services are located, and also attacks related to the transport protocol used to exchange the web services request, (2) web services attacks, which originate from the actual technology that fuels web services, such as WSDL scanning, and (3) XML content attacks, which can be any kind of XML-based, content-driven threat, which include the tactic of embedding malicious content with a legitimate XML document. In [4], security issues of XML web services are investigated and the results of their studies are presented as eight possible categories of attacks on web services."}, {"heading": "2.4. Intrusion detection systems", "text": "Any set of actions that attempt to compromise the integrity, confidentiality or availability (CIA) of a resource is referred to as intrusion [7]. An intrusion detection system is a system that attempts to identify intrusions. Based on the analytical models, intrusion detection systems fall into two different categories: abuse detection and anomaly detection. Abuse detection systems are designed to detect previously known attacks based on a set of predefined patterns. The major deficiencies of such systems are the need to update the database of attack signatures and their inability to detect new invisible attacks. Anomaly detection systems, on the other hand, are capable of detecting new invisible attacks. Anomaly detection is based on the belief that any malicious activity will cause a change in the normal use pattern of resources. Therefore, to set up an anomaly detection system, a comprehensive normal behavior of the system must be at hand, and cannot always provide such a pattern."}, {"heading": "2.5. Tree-based association rule mining", "text": "The concept of association rules became popular in particular due to [8]. Association rules describe the simultaneous occurrence of data elements in a data set and are usually represented in the form of XY, where X and Y are two arbitrarily different data elements. This juxtaposition is a pattern and also interesting when it confirms a hypothesis that the user was trying to confirm. An interesting pattern represents knowledge and there are two measures of rule support and security to measure the interest of a rule [9]. Rule support corresponds to the frequency of XY, while XY = \u2205 in the data set, which is isp (XY). Note that the notation P (XY) indicates the probability that a data set contains the union of set X and set Y. Rule certainty corresponds to the conditional probability of finding Y and is given by a data set specified by a particular data set (XY)."}, {"heading": "3. Related works", "text": "In fact, most people are able to survive themselves, and they are able to survive themselves, \"he said in an interview with The New York Times."}, {"heading": "4. Motivations and aims", "text": "In the service-oriented architecture (SOA), traffic often has to pass through firewalls. Firewalls are means of packet filtering that operate in third and fourth layers of the OSI reference model, where TCP / IP headers are analyzed. These types of firewalls are designed to prevent DoS attacks such as \"TCP / SYN flood\" and \"ping of death\" that exploit TCP / IP protocols. Application level gateways are designed to analyze application protocols above the fourth layer. These gateways can identify simple application protocols such as HTTP and can protect services against malformed HTTP requests. Obviously, the above solutions cannot fully protect Web services. The packet filtering and application gateway approaches only HTTP and TCP / IP headers, while Web services protect XML-structured SOAP messages in application protocol requests and XTTP and IP headers."}, {"heading": "5. The proposed method", "text": "In this section, we present a new method for detecting anomalies in XML-structured SOAP messages using tree-based association rule mining. To this end, we first present some definitions, assumptions and concepts, and then present the details of the proposed method, including the required algorithms and processes."}, {"heading": "5.1. Definitions and assumptions", "text": "Web services are placed in the demilitarized zone of the network firewall. Nowadays, the use of tools such as XML firewalls or Web service firewalls is very common. Web service firewall ensures that traffic is secure and then sends it to the Web server of the Web service. Figure 2 shows the location where Web services intrusion detection system (WS-IDS) stands among other elements of the network. On an abstract level, an anomaly is defined as a pattern that does not match the expected normal behavior [39]. Therefore, a simple approach to detecting anomalies defines the area that designates the normal behavior and any data that does not belong to that area as an anomaly. Based on the data available, anomaly detection methods can be divided into three categories [39]: Supervised anomaly detection: Techniques that work in this mode assume that the training dataset has instances available for both normal and anomaly classes."}, {"heading": "5.2. Knowledge extraction from XML documents", "text": "In order to perform semi-supervised detection of anomalies using SOAP messages from a web service, we need to create a normal profile of correct SOAP requests and responses to train the anomaly detection system. As explained above, SOAP messages are XML-based. The body part of the SOAP message is used. Therefore, we need to choose a data mining technique to extract patterns from this XML-based data. We use the Association Rules Mining algorithm to find the rules that govern the normal instances in the training data set and thus form the structure of the normal profile. After examining the existing methods, we came to the conclusion that tree-based association rules mining best meets our needs for detecting anomalies in SOAP messages. One prominent reason is the volume of the data, which is high, and the other is the large number of candidates being considered for the determination of the rules. In the following section, we present the details of the implementation of the proposed technique."}, {"heading": "5.3. Details of the proposed method", "text": "The aim was to take advantage of the tree-based association rule (TAR) mining technique and apply it to SOAP message instances in the training phase, and the information obtained about structural regularities can form the basis of the normal profile. According to [34], the extraction of TARs has two main steps: (1) the removal of frequent sub-trees from the SOAP messages of the training set and (2) the extraction of rules from the obtained sub-trees of the previous step. Taking into account the efficiency of the algorithm, the authors of Dryadeparent showed in [40] that their algorithm is the fastest algorithm available for tree removal, and CMTreeMiner [41] is in second position. One specification of Dryadeparent is that it maintains an ancestral relationship, but what we need here is the parent-child relationship supported by CMTreeMiner."}, {"heading": "6. Case study", "text": "In fact, it is the case that most of them will be able to move into a different world, in which they are able, in which they are able, in which they are able, in which they are able, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they, in which they live, in which they, in which they live, in which they live, in which they live, in which they live, in which they live."}, {"heading": "7. Evaluation results", "text": "To measure the detection rate and false alarm rate more accurately, we repeated each experiment twice, using two different compositions of training data and considering the average of these two experiments as the detection rate and false alarm rate of this experiment. The ratio of attacks detected to all attacks is called detection rate (Equation 1), and the ratio of normal queries, which are wrongly considered anomalous to all normal queries, is called the false alarm rate (Equation 2). The detection rate and false alarm rate of the proposed method in various attempts in our case study Table 1. The abbreviation TP means recognizing a real attack as an attack, and FP means falsely recognizing a normal attack as an attack, and TN means recognizing a normal data as normal data, and FN means falsely recognizing an attack as normal data."}, {"heading": "8. Conclusions", "text": "The normal behavior of the web service is learned by the system in the training phase and in the testing phase this knowledge is used to detect probable attacks. If the system is trained with less normal instances, more requests are rejected and the detection rate is close to 1, but also the false alarm rate is high. If the system is learned with more normal patterns, the false alarm rate quickly decreases and the detection rate remains acceptably high. As a future work, one can prepare a real or synthesized standard data set containing different attack patterns to evaluate the effectiveness of the web services intrusion detection system. Such a standard data set can be used as a basis to compare different web services intrusion detection systems."}], "references": [{"title": "Web Services Architecture", "author": ["WWW Group"], "venue": "[Online]. Available: http://www.w3.org/TR/wsarch/#whatis. [Accessed: March 2013].", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Professional Pen Testing for Web Applications - Programmer to Programmer Series (P2P)", "author": ["A. Manzanares"], "venue": "The Computer Journal, vol. 50, no. 4, pp. 500-500, 2007.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "Possible attacks on XML web services", "author": ["E. Moradian", "A. Hkansson"], "venue": "International Journal of Computer Science and Network Security (IJCSNS), vol. 6, no. 1B, pp. 154-170, 2006.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "Web services security: SOAP message security 1.1 (WS-security 2004)", "author": ["K. Lawrence", "C. Kaler", "A. Nadalin", "R. Monzillo", "P. Hallam-Baker"], "venue": "OASIS, OASIS Standard, 2006.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2006}, {"title": "Servilla, The architecture of a network-level intrusion detection system", "author": ["R. Heady", "G. Luger", "M.A. Maccabe"], "venue": "Technical Report CS90-20,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1990}, {"title": "Mining association rules between sets of items in large databases", "author": ["R. Agrawal", "T. Imieli ski", "A. Swami"], "venue": "Proceedings of the International Conference on Foundations of Data Organization and Algorithms, Chicago, 1993.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1993}, {"title": "Data mining: concepts and techniques, 3  rd ed", "author": ["J. Han", "M. Kamber"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "XML Information Set", "author": ["W.W.W. Consortium"], "venue": "Second Edition, 2004. [Online]. Available: http://www.w3.org/TR/xml-infoset/.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2004}, {"title": "Mining tree-based association rules from XML documents", "author": ["M. Mazuran", "E. Quintarelli", "L. Tanca"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2009}, {"title": "Protecting web services from dos attacks by SOAP message validation", "author": ["N. Gruschka", "N. Luttenberger"], "venue": "Security and Privacy in Dynamic Environments, pp. 171-182, 2006.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2006}, {"title": "An adaptive intrusion detection and prevention (ID/IP) framework for web services", "author": ["C. Yee", "W. Shin", "G. Rao"], "venue": "Proceedings of the International Conference on Convergence Information Technology, pp. 528-534, 2007.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "An adaptive multi-agent solution to detect dos  attack in SOAP messages", "author": ["C. Pinzn", "J. De Paz", "J. Bajo", "J. Corchado"], "venue": "Proceedings of the International Conference on Computational Intelligence in Security for Information Systems, pp. 77-84, 2009.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Design and implementation of an XML firewall", "author": ["Y. Loh", "W. Yau", "C. Wong", "W. Ho"], "venue": "Proceedings of the International Conference on Computational Intelligence and Security, vol. 2, pp. 1147-1150, 2006.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "A self-learning anomaly-based web application firewall", "author": ["C. Torrano-Gimenez", "A. Perez-Villegas", "G. Alvarez"], "venue": "Proceedings of the International Conference on Computational Intelligence in Security for Information Systems, pp. 85-92, 2009.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Modeling and analysis of a Web service firewall using coloured Petri nets", "author": ["Z. Aliannezhadi", "M. Abdollahi Azgomi"], "venue": "Proceedings of the IEEE Asia-Pacific Services Computing Conference (APSCC'08), Jiaosi, Yilan, Taiwan, 2008.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2008}, {"title": "Security for web services: Standards and research issues", "author": ["L. Martino", "E. Bertino"], "venue": "International Journal of Web Services Research (IJWSR), vol. 6, no. 4, pp. 48-74, 2009.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "Intrusion detection: A survey", "author": ["A. Lazarevic", "V. Kumar", "J. Srivastava"], "venue": "Managing Cyber Threats, Vol. 5, Kumar, V. and Srivastava, J. and Lazarevic, A. (eds.), Springer, pp. 19-78, 2005.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2005}, {"title": "A distributed multi-approach intrusion detection system for web services", "author": ["M.S.A. Najjar", "M. Abdollahi Azgomi"], "venue": "Proceedings of the 3rd International Conference on Security of Information and Networks, ACM, pp. 238-244, 2010.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2010}, {"title": "A multi-layer architecture for intrusion-tolerant Web services", "author": ["Z. Aghajani", "M. Abdollahi Azgomi"], "venue": "International Journal of u-and e-Service, Science and Technology, vol. 1, no. 1, pp. 73-80, 2008.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2008}, {"title": "Security evaluation of an intrusion tolerant Web service architecture using stochastic activity networks", "author": ["Z. Aghajani", "M. Abdollahi Azgomi"], "venue": "Proceedings of the 3rd International Conference on Information Security and Assurance (ISA'09), Korea University, Seoul, Korea, 2009.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2009}, {"title": "Intrusion detection by machine learning: A review", "author": ["C. Tsai", "Y. Hsu", "C. Lin", "W. Lin"], "venue": "Expert Systems with Applications, vol. 36, no. 10, pp. 11994-12000, 2010.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "S-MAS: An adaptive hierarchical distributed multi-agent architecture for blocking malicious SOAP messages within Web Services environments", "author": ["J.C.I. Pinz\u00f3n", "Bajo", "J.F. De Paz", "J.M. Corchado"], "venue": "Expert Systems with Applications,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2011}, {"title": "Security testing methodology for vulnerabilities detection of XSS in Web services and WS-security", "author": ["M.I.P. Salas E. Martins"], "venue": "Electronic Notes in Theoretical Computer Science,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Data on the Web: from relations to semistructured data and XML", "author": ["S. Abiteboul", "P. Buneman", "D. Suciu"], "venue": "Morga Kaufmann Publishers,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2000}, {"title": "Object-relational complex structures for XML storage", "author": ["E. Pardede", "J. Rahayu", "D. Taniar"], "venue": "Information and Software Technology, vol. 48, no. 6, pp. 370-384, 2006.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2006}, {"title": "Data mining and XML documents", "author": ["R. Nayak", "R. Witt", "A. Tonev"], "venue": "Proceedings of the International Conference on Internet Computing, June 24-27, 2002.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2002}, {"title": "Mining frequent patterns from XML data: Efficient  algorithms and design trade-offs", "author": ["A. Jim\u00e9nez", "F. Berzal", "J.-C. Cubero"], "venue": "Expert Systems with Applications,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2012}, {"title": "Querying XML documents by using association rules", "author": ["C. Combi", "B. Oliboni", "R. Rossato"], "venue": "Proceedings of the Sixteenth International on Workshop Database and Expert Systems Applications, pp. 1020-1024, 2005.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2005}, {"title": "Discovering interesting information in XML data with association rules", "author": ["D. Braga", "A. Campi", "S. Ceri", "M. Klemettinen", "P. Lanzi"], "venue": "Proceedings of the 2003 ACM symposium on Applied computing, pp. 450-454, 2003.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2003}, {"title": "A new method for mining association rules from a collection of XML documents", "author": ["J. Paik", "H. Youn", "U. Kim"], "venue": "Proceedings of the International Conference on Computational Science and Its Applications pp. 1-7, 2007.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2007}, {"title": "Discovering structural association of semistructured data", "author": ["K. Wang", "H. Liu"], "venue": "IEEE Transactions on Knowledge and Data Engineering, vol. 12, no. 3, pp. 353-371, 2000.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2000}, {"title": "XML query-answering support system using association mining technique", "author": ["I. Suganya", "N. Velmurugan", "P. Ganeshkumar"], "venue": "Proceedings the 2013 IEEE Conference on Information and Communication Technologies (ICT),", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2013}, {"title": "An adaptive intrusion detection and prevention (ID/IP) framework for Web services", "author": ["C. Yee", "W. Shin", "G. Rao"], "venue": "Proceedings of the International Conference on Convergence Information Technology, pp. 528-534, 2007.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2007}, {"title": "Anomaly-based network intrusion detection: Techniques, systems and challenges", "author": ["P. Garcia-Teodoro", "J. Diaz-Verdejo", "G. Mac-Fernndez", "E. Vzquez"], "venue": "Computers & Security, vol. 28, no. 1, pp. 18-28, 2009.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2009}, {"title": "Anomaly detection: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar"], "venue": "ACM Computing Surveys (CSUR), vol. 41, no. 3, p. 15, 2009.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2009}, {"title": "Dryadeparent, an efficient and robust closed attribute tree mining algorithm", "author": ["A. Termier", "M. Rousset", "M. Sebag", "K. Ohara", "T. Washio", "H. Motoda"], "venue": "IEEE Transactions on Knowledge and Data Engineering, vol. 20, no. 3, pp. 300-320, 2008.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2008}, {"title": "Cmtreeminer: Mining both closed and maximal frequent subtrees", "author": ["Y. Chi", "Y. Yang", "Y. Xia", "R. Muntz"], "venue": "Advances in Knowledge Discovery and Data Mining, pp. 63-73, 2004.", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2004}, {"title": "Analysis of the Wikipedia category graph for NLP applications", "author": ["T. Zesch", "I. Gurevych"], "venue": "Proceedings of the TextGraphs-2 Workshop (NAACL-HLT\u201907), pp. 1-8, 2007.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "Other systems interact with the Web service in a manner prescribed by its description using SOAP messages, typically conveyed using the hypertext transport protocol (HTTP) with an XML serialization in conjunction with other Web-related standards [1].", "startOffset": 246, "endOffset": 249}, {"referenceID": 1, "context": "In [3], attacks on Web services are classified into three main classes: (1) infrastructure attacks, which are attacks related to web servers where the Web services reside and also the attacks related to the transport protocol used for exchanging the Web services\u2019 request, (2) Web services attacks, that are native to the actual technology fueling Web services, such as WSDL scanning, and (3) XML content attacks, which can be any type of XML-based, content-driven threat that employ the tactic of embedding malicious content with a legitimate XML document.", "startOffset": 3, "endOffset": 6}, {"referenceID": 2, "context": "In [4], security problems of XML Web services are investigated and the result of their studies is presented as eight categories of possible attacks on Web services.", "startOffset": 3, "endOffset": 6}, {"referenceID": 2, "context": "The categories are as follows [4]:", "startOffset": 30, "endOffset": 33}, {"referenceID": 3, "context": "OASIS, a nonprofit consortium in charge of developing open standards for information society, proposed WS-Security which is a set of enhancements to SOAP messaging to provide message integrity and confidentiality [6].", "startOffset": 213, "endOffset": 216}, {"referenceID": 2, "context": "Although WSSecurity has improved the security of SOAP messages, it was the base of new threats such as denial of service (DoS) [4].", "startOffset": 127, "endOffset": 130}, {"referenceID": 4, "context": "Any set of actions that attempt to compromise the integrity, confidentiality, or availability (CIA) of a resource is termed as an intrusion [7].", "startOffset": 140, "endOffset": 143}, {"referenceID": 5, "context": "The concept of association rules was popularized particularly due to [8].", "startOffset": 69, "endOffset": 72}, {"referenceID": 6, "context": "confidence to measure a rule\u2019s interestingness [9].", "startOffset": 47, "endOffset": 50}, {"referenceID": 7, "context": "The element-only XML Information Set (Infoset) content model [11] is considered to get the normal pattern using association rules.", "startOffset": 61, "endOffset": 65}, {"referenceID": 8, "context": "An example of an XML document and its tree-based representation and some sub-trees are shown in the Figure 1 [12].", "startOffset": 109, "endOffset": 113}, {"referenceID": 8, "context": "(a) an XML document example, (b) its tree-based representation, and (c) three induced sub-trees [12]", "startOffset": 96, "endOffset": 100}, {"referenceID": 9, "context": "In [13], an application-level gateway, called Checkway, is suggested to prevent DoS attacks by grammatical validation on SOAP messages before forwarding them to the server.", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "In [14], an intrusion detection and prevention framework is proposed that uses agents as sensors to gather suspected items.", "startOffset": 3, "endOffset": 7}, {"referenceID": 11, "context": "In another work [15], a distributed hierarchical multi-agent system is", "startOffset": 16, "endOffset": 20}, {"referenceID": 12, "context": "There are also researches on XML firewalls, as in [16], where a firewall for Web services was built.", "startOffset": 50, "endOffset": 54}, {"referenceID": 13, "context": "In [17], a simple anomaly-based Web Application Firewall (WAF) is presented.", "startOffset": 3, "endOffset": 7}, {"referenceID": 14, "context": "In [18], architecture of a Web service firewall is proposed that supports authentication and authorization mechanisms.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "In [20], after explaining the security requirements of Web services, it is discussed how different standardization bodies address these requirements.", "startOffset": 3, "endOffset": 7}, {"referenceID": 16, "context": "A survey and taxonomy of different techniques used in such systems is given in [21].", "startOffset": 79, "endOffset": 83}, {"referenceID": 17, "context": "In [22], the architecture of a Web service intrusion detection system is proposed, which encompasses both anomaly detection and misuse detection techniques.", "startOffset": 3, "endOffset": 7}, {"referenceID": 18, "context": "In [23] and [24], a multi-layer architecture for intrusion-tolerant web services is presented that uses single version software fault tolerance concepts in the case of malicious failures.", "startOffset": 3, "endOffset": 7}, {"referenceID": 19, "context": "In [23] and [24], a multi-layer architecture for intrusion-tolerant web services is presented that uses single version software fault tolerance concepts in the case of malicious failures.", "startOffset": 12, "endOffset": 16}, {"referenceID": 20, "context": "There are also vast researches on employing data mining techniques in intrusion detection systems, a survey of which can be found in [25].", "startOffset": 133, "endOffset": 137}, {"referenceID": 21, "context": "In [26], the S-MAS architecture is introduced, which is an adaptive approach for dealing with DoS attacks in Web Service environments.", "startOffset": 3, "endOffset": 7}, {"referenceID": 22, "context": "The approach proposed in [27] makes use of two security testing techniques, namely penetration testing and fault injection, in order to emulate XSS attack against Web services.", "startOffset": 25, "endOffset": 29}, {"referenceID": 23, "context": "Many attempts have been done on automatically saving XML documents in the form of relational object-oriented data [28] or native XML databases [29].", "startOffset": 114, "endOffset": 118}, {"referenceID": 24, "context": "Many attempts have been done on automatically saving XML documents in the form of relational object-oriented data [28] or native XML databases [29].", "startOffset": 143, "endOffset": 147}, {"referenceID": 25, "context": "In [30], it is described that XML mining process is consist of three main phases:", "startOffset": 3, "endOffset": 7}, {"referenceID": 26, "context": "In [31], the key problem of discovering frequent patterns is discussed and the way of adjusting an efficient, scalable, and parallelizable tree pattern mining algorithm to reduce its memory requirements compensating time complexity is described.", "startOffset": 3, "endOffset": 7}, {"referenceID": 23, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 103, "endOffset": 107}, {"referenceID": 27, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 109, "endOffset": 113}, {"referenceID": 28, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 115, "endOffset": 119}, {"referenceID": 29, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 121, "endOffset": 125}, {"referenceID": 30, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 127, "endOffset": 131}, {"referenceID": 31, "context": "In recent years, association rule mining has gained lots of attentions in XML data analysis such as in [28], [32], [33], [34], [35], [36].", "startOffset": 133, "endOffset": 137}, {"referenceID": 28, "context": "In [33], an extension of XQuery for mining association rules, called XMINE RULE was proposed.", "startOffset": 3, "endOffset": 7}, {"referenceID": 29, "context": "In [34], the authors have tried to extract association rules, using only a specially devised hierarchical data structure, called HoPS, without multiple XML data scans or any prior", "startOffset": 3, "endOffset": 7}, {"referenceID": 30, "context": "In [35], tree-based association rules (TAR) were mined from XML documents.", "startOffset": 3, "endOffset": 7}, {"referenceID": 29, "context": "In [34], the mined knowledge is approximate and intentional and is used to provide quick, approximate answers to queries.", "startOffset": 3, "endOffset": 7}, {"referenceID": 32, "context": "On the other hand, the inherit security weakness of SOAP, Universal Description, Discovery and Integration (UDDI) and WSDL, which are the basic building blocks of Web services, can be targets of attacks [37].", "startOffset": 203, "endOffset": 207}, {"referenceID": 3, "context": "To improve the situation, a set of standard extensions of SOAP, called WS-Security [6] was proposed.", "startOffset": 83, "endOffset": 86}, {"referenceID": 33, "context": "There are many approaches to define normal profiles in anomaly detection systems, and one of the most common ones is data mining [38].", "startOffset": 129, "endOffset": 133}, {"referenceID": 34, "context": "At an abstract level, an anomaly is defined as a pattern that does not conform to the expected normal behavior [39].", "startOffset": 111, "endOffset": 115}, {"referenceID": 34, "context": "Based on the labeled data available, anomaly detection methods can be divided into three categories [39]:", "startOffset": 100, "endOffset": 104}, {"referenceID": 29, "context": "According to [34], extracting TARs has two main steps: (1) mining frequent sub-trees from the SOAP messages of the training set and (2) extracting rules from the obtained sub-trees of the previous step.", "startOffset": 13, "endOffset": 17}, {"referenceID": 35, "context": "Taking the algorithm's efficiency into account, the authors of Dryadeparent in [40] showed that their algorithm is the fastest tree mining algorithm available and CMTreeMiner [41] stands in the second position.", "startOffset": 79, "endOffset": 83}, {"referenceID": 36, "context": "Taking the algorithm's efficiency into account, the authors of Dryadeparent in [40] showed that their algorithm is the fastest tree mining algorithm available and CMTreeMiner [41] stands in the second position.", "startOffset": 175, "endOffset": 179}, {"referenceID": 29, "context": "Figure 3 depicts our algorithm of mining TARs from SOAP messages, which is based on TAR extraction algorithm in [34] and also inspired by [30] XML mining", "startOffset": 112, "endOffset": 116}, {"referenceID": 25, "context": "Figure 3 depicts our algorithm of mining TARs from SOAP messages, which is based on TAR extraction algorithm in [34] and also inspired by [30] XML mining", "startOffset": 138, "endOffset": 142}, {"referenceID": 37, "context": "categories graph [42].", "startOffset": 17, "endOffset": 21}], "year": 2016, "abstractText": "Web services are software systems designed for supporting interoperable dynamic crossenterprise interactions. The result of attacks to Web services can be catastrophic and causing the disclosure of enterprises\u2019 confidential data. As new approaches of attacking arise every day, anomaly detection systems seem to be invaluable tools in this context. The aim of this work has been to target the attacks that reside in the Web service layer and the extensible markup language (XML)-structured simple object access protocol (SOAP) messages. After studying the shortcomings of the existing solutions, a new approach for detecting anomalies in Web services is outlined. More specifically, the proposed technique illustrates how to identify anomalies by employing mining methods on XML-structured SOAP messages. This technique also takes the advantages of tree-based association rule mining to extract knowledge in the training phase, which is used in the test phase to detect anomalies. In addition, this novel composition of techniques brings nearly low false alarm rate while maintaining the detection rate reasonably high, which is shown by a case study.", "creator": "Microsoft\u00ae Word 2010"}}}