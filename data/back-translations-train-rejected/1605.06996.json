{"id": "1605.06996", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-May-2016", "title": "Extracting Higher-Order Goals from the Mizar Mathematical Library", "abstract": "Certain constructs allowed in Mizar articles cannot be represented in first-order logic but can be represented in higher-order logic. We describe a way to obtain higher-order theorem proving problems from Mizar articles that make use of these constructs. In particular, higher-order logic is used to represent schemes, a global choice construct and set level binders. The higher-order automated theorem provers Satallax and LEO-II have been run on collections of these problems and the results are discussed.", "histories": [["v1", "Mon, 23 May 2016 12:37:54 GMT  (31kb)", "http://arxiv.org/abs/1605.06996v1", "Accepted to CICM 2016. The final publication will be available at Springer"]], "COMMENTS": "Accepted to CICM 2016. The final publication will be available at Springer", "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["chad brown", "josef urban"], "accepted": false, "id": "1605.06996"}, "pdf": {"name": "1605.06996.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Chad E. Brown", "Josef Urban"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 160 5.06 996v 1 [cs.L O] 23 May 201 6Keywords: formalized mathematics, set theory, higher order logic, automated theorem proofs"}, {"heading": "1 Introduction", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to"}, {"heading": "2 Syntax of Higher-Order Logic", "text": "We give a brief introduction to the syntax of higher order logic (in the form of the simple type theory of the Church \u03b2 \u03b2 \u03b2), so that we can describe the mapping in section 4. To present problems of higher order theorists, the THF0 format is used [9], but we mostly limit ourselves to mathematical representations of higher terms. There are two basic types o (for propositions) and II (for individuals, which are always fixed for us), the remaining types are function types \u03b1\u03b2, where \u03b1 and \u03b2 are types. Type \u03b1\u03b2 is the type of functions from \u03b1 to \u03b2 (and is sometimes written \u03b1 \u2192 \u03b2).We assume that there are infinite variables x at each type \u03b1. Sometimes we write the type as a subscript to make it clear, as in x\u03b1. Likewise, there can be any number of constants c at any type \u03b1."}, {"heading": "3 Idealized Mizar", "text": "To describe the translation of Mizar to higher-order logic, we first give a brief representation of a constant subset of the Mizar language. To provide a complete representation of the Mizar language, we point the reader to [6].To simplify the representation, we assume that some variables and constants of higher-order logic are also variables and constants of the constants of Mizar, and that the translation will simply map variables and constants to itself. Mizar's language is so limited that only variables and constants of certain types can be used: - We call variables of type object variables and invocation constants of type. - For each n-object constant of type, we call variables of simple type."}, {"heading": "4 Mapping Mizar to Higher-Order Logic", "text": "We describe a mapping of M-types, M-propositions, and Mstatements to higher order terms that focus on those aspects that require a higher order. Basically, mapping M-type, M-type, M-term, M-proposition, or Mstatement as a higher order term requires details of Mizar's theory of evidence that goes beyond the scope of this paper. To specify the translation, we must declare a family of higher order constants to be problems. A special relationship in Mizar is affiliation (in), translated as r2 hidden by the MPTP system. For this reason, we include a declared constant of higher order problems."}, {"heading": "5 Experiments", "text": "From four Mizar articles [13,10,12,1], 47 problems were extracted. - SimpFr: Simple reasoning in which the problem contains a Fraenkel term. We consider 245 such problems arising from three Mizar articles [10,12,1]. Since these have proved surprisingly difficult, we also considered \"truncated\" versions of the problems in which the first-order theorem examiner E [8] indicated which axioms he used to find a corresponding first-order proof. - SchJust: For each scheme, justifications (using) were made in a Mizar proof in the MML, a corresponding problem. There are 10192 such problems. - SchPfs: Out of 787 cases, a problem in the ML 610 was pointed out, with the results of the ML 610 not having complete justification."}, {"heading": "1 The THF versions of the problems discussed here are available from", "text": "The question of whether it's a problem, that's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it in the way it's in the way it's in the way it in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it's in the way it in the way it in the way it's in the way it's in the way it's in the way it in the way it's in the way it in the way it's in the way it's in the way it's in the way it in the way it's in the way it in the way it's in the way it in the way it's in the way it in the way it in the way it's in the way it's in the way it in the way it in the way it's in the way it in the way it's in the way it's in the way it in the way it's in the way it's in the way it's in the way it's in the way it in the way it's in the way it in the way it's in the"}, {"heading": "A2: a = x1 and", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A3: P[x1];", "text": "The question that arises is to what extent it is a problem that is a problem in the way that it is a problem, a problem that is a problem in the way that it is a problem, in the way that it is a problem, in the way that it is a problem, in the way that it is a solution, in the way that it is a problem, in the way that it is a solution, in the way that it is a solution, in the way that it is a solution, in the way that it is a solution, and in the way that it is a solution, in the way that it is a solution, in the way that it is a solution, in the way that it is a solution, in the way that it is a solution, in the way that it is a solution."}, {"heading": "6 Conclusion", "text": "The resulting problems seem to be a challenge for higher order theory testers. For example, even some of the simplest problems become difficult when there are too many axioms, so better relevance filtering is needed. Even simple thinking about Fraenkel terms seems to be more difficult than one would expect, and so these examples can provide insights into improvements that automated reasoning can make. There are several ways to translate Fraenkel terms that bind more than one set variable. We have implemented one way and proposed another. Further experiments will probably be helpful in finding a good way to deal with these cases. Problems arising from schema reasoning and complete proof of plans reveal the different strengths and weaknesses of Satallax and LEOII. Hopefully, such problem sets will lead to improvements in higher level automated theory testers. If such reasoning and complete evidence of plans are sufficiently improved, the mixes of LEX and saturation strengths will show up to different purposes."}], "references": [{"title": "On the characteristic and weight of a topological space", "author": ["G. Bancerek"], "venue": "Formalized Mathematics 13(1), 163\u2013169", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2005}, {"title": "The higher-order prover LEO-II", "author": ["C. Benzm\u00fcller", "L.C. Paulson", "N. Sultana", "F. Thei\u00df"], "venue": "Journal of Automated Reasoning 55(4), 389\u2013404", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Reducing higher-order theorem proving to a sequence of SAT problems", "author": ["C.E. Brown"], "venue": "Journal of Automated Reasoning 51(1), 57\u201377", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "A formulation of the simple theory of types", "author": ["A. Church"], "venue": "Journal of Symbolic Logic 5, 56\u201368", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1940}, {"title": "Boolean properties of sets \u2014 definitions (April 2002)", "author": ["L. Committee"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "Mizar in a nutshell", "author": ["A. Grabowski", "A. Kornilowicz", "A. Naumowicz"], "venue": "Journal of Formalized Reasoning 3(2), 153\u2013245", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "A logic programming approach to manipulating formulas and programs", "author": ["D. Miller", "G. Nadathur"], "venue": "IEEE Symposium on Logic Programming. Salt Lake City", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1987}, {"title": "E \u2013 A Brainiac Theorem Prover", "author": ["S. Schulz"], "venue": "Journal of AI Communications 15(2/3), 111\u2013126", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "Automated reasoning in higher-order logic using the TPTP THF infrastructure", "author": ["G. Sutcliffe", "C. Benzm\u00fcller"], "venue": "Journal of Formalized Reasoning 3(1), 1\u201327", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Domains and their Cartesian products", "author": ["A. Trybulec"], "venue": "Formalized Mathematics 1(1), 115\u2013122", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1990}, {"title": "Tarski Grothendieck set theory", "author": ["A. Trybulec"], "venue": "Formalized Mathematics 1(1), 9\u201311", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1990}, {"title": "Subgroup and cosets of subgroups", "author": ["W.A. Trybulec"], "venue": "Formalized Mathematics 1(5), 855\u2013864", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1990}, {"title": "Properties of subsets", "author": ["Z. Trybulec"], "venue": "Formalized Mathematics 1(1), 67\u201371", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1990}, {"title": "MPTP 0.2: Design, Implementation, and Initial Experiments", "author": ["J. Urban"], "venue": "Journal of Automated Reasoning 37(1-2),", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2006}, {"title": "Translating Mizar for first order theorem provers", "author": ["J. Urban"], "venue": "Mathematical Knowledge Management: Second International Conference, MKM 2003 Bertinoro, Italy, February", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2003}, {"title": "MPTP \u2013 motivation, implementation, first experiments", "author": ["J. Urban"], "venue": "Journal of Automated Reasoning 33(3),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2005}], "referenceMentions": [{"referenceID": 14, "context": "The Mizar Problems for Theorem Proving (MPTP) system has been developed and used to extract first-order theorem proving problems from the Mizar Mathematical Library (MML) [15,16,14].", "startOffset": 171, "endOffset": 181}, {"referenceID": 15, "context": "The Mizar Problems for Theorem Proving (MPTP) system has been developed and used to extract first-order theorem proving problems from the Mizar Mathematical Library (MML) [15,16,14].", "startOffset": 171, "endOffset": 181}, {"referenceID": 13, "context": "The Mizar Problems for Theorem Proving (MPTP) system has been developed and used to extract first-order theorem proving problems from the Mizar Mathematical Library (MML) [15,16,14].", "startOffset": 171, "endOffset": 181}, {"referenceID": 5, "context": "In particular, Mizar provides supports for Schemes (allowing some degree of quantification over predicates and functions), Fraenkel terms (allowing sets to be specified using term level binders such as {f(x)|x \u2208 A, p(x)}) and a global choice operator the on types [6].", "startOffset": 264, "endOffset": 267}, {"referenceID": 13, "context": "Additionally, Fraenkel terms and global choice have been made first-order by a process of deanonymization [14].", "startOffset": 106, "endOffset": 110}, {"referenceID": 8, "context": "The resulting system has been used to extract a collection of higher-order theorem proving problems in THF0 format [9].", "startOffset": 115, "endOffset": 118}, {"referenceID": 13, "context": "As in [14] we can partition the", "startOffset": 6, "endOffset": 10}, {"referenceID": 2, "context": "We describe some examples and results from running the higher-order automated theorem provers Satallax [3] and LEO-II [2] on some collections of these problems.", "startOffset": 103, "endOffset": 106}, {"referenceID": 1, "context": "We describe some examples and results from running the higher-order automated theorem provers Satallax [3] and LEO-II [2] on some collections of these problems.", "startOffset": 118, "endOffset": 121}, {"referenceID": 3, "context": "We give a short introduction to the syntax of higher-order logic (in the form of Church\u2019s simple type theory [4]) so that we can describe the mapping in Section 4.", "startOffset": 109, "endOffset": 112}, {"referenceID": 8, "context": "In order to present higher-order problems to theorem provers, the THF0 format is used [9], but we mostly restrict ourselves to mathematical presentations of higher-order terms here.", "startOffset": 86, "endOffset": 89}, {"referenceID": 5, "context": "For a full presentation of the Mizar language, we direct the reader to [6].", "startOffset": 71, "endOffset": 74}, {"referenceID": 4, "context": ") An example of a scheme is Separation: for each set A and predicate P , there is a set X such that x \u2208 X iff x \u2208 A and P (x) [5].", "startOffset": 126, "endOffset": 129}, {"referenceID": 4, "context": "A simple example of a definition of an attribute is empty given in xboole 0 [5]:", "startOffset": 76, "endOffset": 79}, {"referenceID": 12, "context": "The most common example of a mode used in this paper is Element of from the Mizar article subset 1 [13]:", "startOffset": 99, "endOffset": 103}, {"referenceID": 10, "context": "As formulated in Mizar, the scheme asserts that for each set A and each binary relation P on sets, if P is functional, then there is a set X such that x \u2208 X iff there is a y \u2208 A such that P (y, x) [11].", "startOffset": 197, "endOffset": 201}, {"referenceID": 8, "context": "For each scheme proven in the MML, the MPTP system has generated a corresponding higher-order problem in THF0 format [9].", "startOffset": 117, "endOffset": 120}, {"referenceID": 6, "context": "Note that Q is not explicitly given in the problem, but can easily be recovered using pattern unification [7], as we now demonstrate.", "startOffset": 106, "endOffset": 109}, {"referenceID": 12, "context": "From four Mizar articles [13,10,12,1] 47 problems were extracted.", "startOffset": 25, "endOffset": 37}, {"referenceID": 9, "context": "From four Mizar articles [13,10,12,1] 47 problems were extracted.", "startOffset": 25, "endOffset": 37}, {"referenceID": 11, "context": "From four Mizar articles [13,10,12,1] 47 problems were extracted.", "startOffset": 25, "endOffset": 37}, {"referenceID": 0, "context": "From four Mizar articles [13,10,12,1] 47 problems were extracted.", "startOffset": 25, "endOffset": 37}, {"referenceID": 9, "context": "We consider 245 such problems arising from three Mizar articles [10,12,1].", "startOffset": 64, "endOffset": 73}, {"referenceID": 11, "context": "We consider 245 such problems arising from three Mizar articles [10,12,1].", "startOffset": 64, "endOffset": 73}, {"referenceID": 0, "context": "We consider 245 such problems arising from three Mizar articles [10,12,1].", "startOffset": 64, "endOffset": 73}, {"referenceID": 7, "context": "Since these proved to be surprisingly difficult, we also considered \u201cpruned\u201d versions of the problems in which the first-order theorem prover E [8] indicated which axioms it used to find a corresponding first-order proof.", "startOffset": 144, "endOffset": 147}, {"referenceID": 12, "context": "One of the first uses of the global choice operator in Mizar is to define a (first-order) choice operator on sets called choose [13].", "startOffset": 128, "endOffset": 132}, {"referenceID": 11, "context": "Consider the following fragment of a Mizar proof about group theory [12].", "startOffset": 68, "endOffset": 72}, {"referenceID": 9, "context": "Consider the following proof fragment from [10].", "startOffset": 43, "endOffset": 47}, {"referenceID": 9, "context": "Consider the following proof fragment from [10]:", "startOffset": 43, "endOffset": 47}, {"referenceID": 4, "context": "The set operation X \\ Y is defined in an early Mizar article [5], and the following required existence proof is given:", "startOffset": 61, "endOffset": 64}, {"referenceID": 12, "context": "A scheme LEO-II can fully prove but Satallax cannot is the following Mizar scheme [13]:", "startOffset": 82, "endOffset": 86}], "year": 2016, "abstractText": "Certain constructs allowed in Mizar articles cannot be represented in first-order logic but can be represented in higher-order logic. We describe a way to obtain higher-order theorem proving problems from Mizar articles that make use of these constructs. In particular, higherorder logic is used to represent schemes, a global choice construct and set level binders. The higher-order automated theorem provers Satallax and LEO-II have been run on collections of these problems and the results are discussed.", "creator": "LaTeX with hyperref package"}}}