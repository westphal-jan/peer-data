{"id": "1606.02710", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Jun-2016", "title": "A Modified Vortex Search Algorithm for Numerical Function Optimization", "abstract": "The Vortex Search (VS) algorithm is one of the recently proposed metaheuristic algorithms which was inspired from the vortical flow of the stirred fluids. Although the VS algorithm is shown to be a good candidate for the solution of certain optimization problems, it also has some drawbacks. In the VS algorithm, candidate solutions are generated around the current best solution by using a Gaussian distribution at each iteration pass. This provides simplicity to the algorithm but it also leads to some problems along. Especially, for the functions those have a number of local minimum points, to select a single point to generate candidate solutions leads the algorithm to being trapped into a local minimum point. Due to the adaptive step-size adjustment scheme used in the VS algorithm, the locality of the created candidate solutions is increased at each iteration pass. Therefore, if the algorithm cannot escape a local point as quickly as possible, it becomes much more difficult for the algorithm to escape from that point in the latter iterations. In this study, a modified Vortex Search algorithm (MVS) is proposed to overcome above mentioned drawback of the existing VS algorithm. In the MVS algorithm, the candidate solutions are generated around a number of points at each iteration pass. Computational results showed that with the help of this modification the global search ability of the existing VS algorithm is improved and the MVS algorithm outperformed the existing VS algorithm, PSO2011 and ABC algorithms for the benchmark numerical function set.", "histories": [["v1", "Wed, 8 Jun 2016 12:00:28 GMT  (492kb)", "http://arxiv.org/abs/1606.02710v1", "18 pages, 7 figures"]], "COMMENTS": "18 pages, 7 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["berat do\\u{g}an"], "accepted": false, "id": "1606.02710"}, "pdf": {"name": "1606.02710.pdf", "metadata": {"source": "CRF", "title": "A MODIFIED VORTEX SEARCH ALGORITHM FOR NUMERICAL FUNCTION OPTIMIZATION", "authors": ["Berat Do\u011fan"], "emails": [], "sections": [{"heading": null, "text": "DOI: 10.5121 / ijaia.2016.7304 37The Vortex Search (VS) algorithm is one of the recently proposed metaheuristic algorithms inspired by the prevertical flow of stirred liquids. Although the VS algorithm proves to be a good candidate for solving certain optimization problems, it also has some disadvantages. In the VS algorithm, candidate solutions are generated around the current best solution by using a Gaussian distribution in each iteration pass. This offers simplicity to the algorithm, but also leads to some problems. In particular, for functions that have a number of local minimum points, selecting a single point to generate candidate solutions results in the algorithm being trapped in a local minimum point. Due to the adaptive step size adjustment scheme used in the VS algorithm, the locality of the created candidate solutions is increased at each iteration pass."}, {"heading": "1. INTRODUCTION", "text": "In fact, most of them will be able to play by the rules they have set themselves in order to play by the rules."}, {"heading": "2. METHODOLOGY", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1. A Brief Description of the Vortex Search Algorithm", "text": "We are looking at a two-dimensional optimization problem. In a two-dimensional space, a vortex pattern can be modeled by a number of nested circles. Here, the outer (largest) circle of the vortex is first centered on the search space, where the initial center can be calculated by equation. 1.2lowerlimitupperlimit \u00b50 + = (1) In Eq.1, the upper limit and lower limit are randomly generated around the initial center, defining the limited constraints of the problem in d dimensional space. Then, a number of neighboring solutions is calculated (sCt, (t-representation of the iteration index and initial 0 = t) are randomly generated around the initial center 0\u00b5 in d-dimensional space. Here {nkssC k,..., 2,1,) (210 = represents the total number of candidate solutions, and n represents the total number of candidate solutions."}, {"heading": "2.2. The Modified Vortex Search Algorithm", "text": "The VS algorithm creates candidate solutions by a single point at each iteration. At the first iteration = = = = 11 centers, this point is the initial center 0\u00b5, which is determined with the upper and lower limits of the problem, while in this study a modified VS algorithm (MVS) is proposed. In the MVS algorithm, candidate solutions are generated around several centers in each iteration. The search behavior of the MVS algorithm can be thought of as a number of parallel vortices having different centers at each iteration. First, the centers of these multiple vortices are selected as in the VS algorithm. Consider the total number of centers (or vortices) represented by m."}, {"heading": "3. RESULTS", "text": "The proposed MVS algorithm is tested on 50 benchmark functions that were also used in [16] to measure the performance of the VS algorithm. Using the same functions, this study compares the performance of the MVS algorithm with the VS, PSO2011 and ABC algorithms. PSO2011 [25-26] is an extension of the standard PSO algorithm, and the ABC algorithm is a well-known optimization algorithm inspired by the collective behavior of honeybees. Functions used in the experiments are listed in Table 1. For the formulations of the functions listed in Table 1, see Reference [16]."}, {"heading": "3.1. Algorithm Settings", "text": "The acceleration coefficients (1c and 2c) of the PSO2011 algorithm are both set to 1.8 and the inertia coefficient to 0.6, as in [27]. The limit value for the ABC algorithm is set as limit = SN * D, with SN representing the number of food sources and D representing the dimension. The VS algorithm has no additional parameters. Unlike the VS algorithm, the MVS algorithm has parameter m, which represents the total number of centers."}, {"heading": "3.2. Results", "text": "The proposed MVS algorithm is compared with the VS, PSO2011 and ABC algorithms using the 50 benchmark functions specified in Table 1. For each algorithm, 30 different runs are performed, and the mean and best values are recorded; the maximum number of iterations is selected to be 500,000; for the MATLAB \u00ae codes of the PSO2011, ABC, VS and MVS algorithms, different test channels are executed; for the first set of experiments, the results are listed in Table 2; for the MVS algorithm, two different cases are considered; in the first case, the total number of candidate solutions is selected by 50, which means that 10 candidate solutions are generated around each center for 5 = m."}, {"heading": "4. CONCLUSIONS", "text": "This paper presents a modified VS algorithm that improves the global searchability of the existing VS algorithm by using multiple centers for each iteration pass during the candidate solution phase of the algorithm. In the VS algorithm, only one center is used for this purpose, which usually results in the algorithm being trapped in a local minimum point for some of the benchmark functions. Although the complexity of the existing VS algorithm is slightly higher, there is no significant difference between the computing time of the modified VS algorithm and the existing VS algorithm. Calculation results showed that the MVS algorithm exceeds the existing VS algorithm, PSO2011 and ABC algorithms for the numerical set of the benchmark. In future studies, the MVS algorithm will be used to solve some optimization problems in the real world."}], "references": [{"title": "Adaptation in Natural and Artificial Systems, University of Michigan Press", "author": ["J.H. Holland"], "venue": "Ann Arbor, MI,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1975}, {"title": "Differential evolution \u2013 a simple and efficient adaptive scheme for global optimization over continuous spaces", "author": ["R. Storn", "K. Price"], "venue": "Technical report,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1995}, {"title": "Differential evolution \u2013 a simple and efficient heuristic for global optimization over continuous spaces", "author": ["R. Storn", "K. Price"], "venue": "Journal of Global Optimization", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1997}, {"title": "Optimization by Simulated Annealing", "author": ["S. Kirkpatrick", "C.D. Gelatt Jr.", "M.P. Vecchi"], "venue": "Science", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1983}, {"title": "Thermodynamical approach to the traveling salesman problem: An efficient simulation algorithm", "author": ["V. \u010cern\u00fd"], "venue": "Journal of Optimization Theory and Applications,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1985}, {"title": "Optimization, Learning and Natural Algorithms", "author": ["M. Dorigo"], "venue": "PhD thesis, Politecnico di Milano, Italy,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1992}, {"title": "An idea based on honeybee swarm for numerical optimization", "author": ["D. Karaboga"], "venue": "Technical Report TR06,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2005}, {"title": "powerful, A powerful and efficient algorithm for numerical function optimization: artificial bee colony (abc) algorithm", "author": ["D. Karaboga", "B.A. Basturk"], "venue": "Journal of Global Optimization", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Backtracking Search Optimization Algorithm for numerical optimization problems, Applied Mathematics and Computation, Volume 219", "author": ["P. Civicioglu"], "venue": "Issue 15,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2013}, {"title": "A new metaheuristic for optimization: Optics inspired optimization (OIO)", "author": ["A.H. Kashan"], "venue": "Computers & Operations Research, Volume", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2015}, {"title": "Flower pollination algorithm for global optimization, Unconventional computation and natural computation", "author": ["X.S. Yang"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "ODMA: a novel swarm-evolutionary metaheuristic optimizer inspired by open source development model and communities", "author": ["H. Hajipour", "H.B. Khormuji", "H. Rostami"], "venue": "Soft Computing", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "A multi-start central force optimization for global optimization", "author": ["L. Yong", "T. Peng"], "venue": "Applied Soft Computing,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Water wave optimization: A new nature-inspired metaheuristic", "author": ["Z. Yu-Jun"], "venue": "Computers & Operations Research, Volume", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "A new metaheuristic for numerical function optimization: Vortex Search algorithm, Information Sciences", "author": ["B. Do\u011fan", "T. \u00d6lmez"], "venue": "Volume 293,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "Vortex search algorithm for the analog active filter component selection problem, AEU ", "author": ["B. Do\u011fan", "T. \u00d6lmez"], "venue": "International Journal of Electronics and Communications,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2015}, {"title": "Analog filter group delay optimization using the Vortex Search algorithm", "author": ["B. Do\u011fan", "A. Yuksel"], "venue": "Signal Processing and Communications Applications Conference (SIU),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "Modified Off-lattice AB Model for Protein Folding Problem Using the Vortex Search Algorithm", "author": ["B. Do\u011fan", "T. \u00d6lmez"], "venue": "International Journal of Machine Learning and Computing vol. 5,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Fuzzy clustering of ECG beats using a new metaheuristic approach, 2nd International Work-Conference on Bioinformatics and Biomedical Engineering (IWBBIO)", "author": ["B. Do\u011fan", "T. \u00d6lmez"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Special Functions of Mathematics for Engineers", "author": ["L.C. Andrews"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1992}, {"title": "A note on the recursive calculation of incomplete gamma functions", "author": ["W. Gautschi"], "venue": "ACM Trans. Math. Software,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1999}, {"title": "Computing the incomplete Gamma function to arbitrary precision Computational Science and Its Applications ", "author": ["S. Winitzki"], "venue": "ICCSA 2003, of LNCS,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2003}, {"title": "Numerical calculation of incomplete gamma function by the trapezoidal rule, Numer. Math. (Numerische Mathematik", "author": ["G. Allasia", "Besenghi R"], "venue": "Journal of Artificial Intelligence and Applications (IJAIA),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1987}, {"title": "Standard Particle Swarm Optimization", "author": ["M. Clerc"], "venue": "Particle Swarm Central, Tech. Rep., 2012, http://clerc.maurice.free.fr/pso/SPSO_descriptions.pdf, accessed 25 February 2016", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2012}, {"title": "A comparative study of Artificial Bee Colony algorithm, Applied Mathematics and Computation, Volume 214", "author": ["D. Karaboga", "B. Akay"], "venue": "Issue 1,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2009}, {"title": "On the performance of artificial bee colony (abc) algorithm, Applied Soft Computing", "author": ["D. Karaboga", "B. Basturk"], "venue": null, "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2008}, {"title": "Empirical study of particle swarm optimization", "author": ["Y. Shi", "Eberhart R.C"], "venue": "Evolutionary Computation,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 125, "endOffset": 128}, {"referenceID": 1, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 136, "endOffset": 141}, {"referenceID": 2, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 136, "endOffset": 141}, {"referenceID": 3, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 166, "endOffset": 171}, {"referenceID": 4, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 166, "endOffset": 171}, {"referenceID": 5, "context": "Most of these algorithms are nature inspired methods and therefore mimic natural metaphors such as, evolution of species (GA [1] and DE [2-3]), annealing process (SA [4-5]), ant behaviour (ACO [6]), swarm behaviour (PSO [7] and ABC [89]) etc.", "startOffset": 193, "endOffset": 196}, {"referenceID": 8, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 9, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 10, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 11, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 12, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 13, "context": "In [10-15], a number of recently proposed metaheuristics can be found.", "startOffset": 3, "endOffset": 10}, {"referenceID": 14, "context": "The Vortex Search (VS) algorithm [16] is one of these recently proposed metaheuristic algorithms which was inspired from the vortical flow of the stirred fluids.", "startOffset": 33, "endOffset": 37}, {"referenceID": 15, "context": "In some other studies [17-20], the VS algorithm has also been successfully used for the solution of some real-world optimization problems.", "startOffset": 22, "endOffset": 29}, {"referenceID": 16, "context": "In some other studies [17-20], the VS algorithm has also been successfully used for the solution of some real-world optimization problems.", "startOffset": 22, "endOffset": 29}, {"referenceID": 17, "context": "In some other studies [17-20], the VS algorithm has also been successfully used for the solution of some real-world optimization problems.", "startOffset": 22, "endOffset": 29}, {"referenceID": 18, "context": "In some other studies [17-20], the VS algorithm has also been successfully used for the solution of some real-world optimization problems.", "startOffset": 22, "endOffset": 29}, {"referenceID": 14, "context": "The MVS algorithm is again tested by using the 50 benchmark mathematical functions that was used earlier in [16].", "startOffset": 108, "endOffset": 112}, {"referenceID": 14, "context": "Because the SA and PS algorithms showed poor performances in [16], in this study these two algorithms are excluded and the results are compared to the results those obtained by the VS algorithm, PSO2011 and ABC algorithms.", "startOffset": 61, "endOffset": 65}, {"referenceID": 8, "context": "A representative pattern is sketched in Figure 2 for a two-dimensional optimization problem for which the upper and lower limits are between the [-10,10] interval.", "startOffset": 145, "endOffset": 153}, {"referenceID": 19, "context": "6 most commonly arises in probability theory, particularly in those applications involving the chi-square distribution [21].", "startOffset": 119, "endOffset": 123}, {"referenceID": 8, "context": "Let us consider an optimization problem defined within the [-10,10] region.", "startOffset": 59, "endOffset": 67}, {"referenceID": 14, "context": "The proposed MVS algorithm is tested on 50 benchmark functions which were also used in [16] to measure the performance of the VS algorithm.", "startOffset": 87, "endOffset": 91}, {"referenceID": 23, "context": "PSO2011 [25-26] is an extension of the standard PSO algorithm and the ABC algorithm is a well-known optimization algorithm which was inspired from the collective behaviours of honey bees.", "startOffset": 8, "endOffset": 15}, {"referenceID": 14, "context": "For the formulations of the functions listed in Table 1, please refer to the reference [16].", "startOffset": 87, "endOffset": 91}, {"referenceID": 24, "context": "as in [27].", "startOffset": 6, "endOffset": 10}, {"referenceID": 8, "context": ", T+ and T-, as defined in [10]) are examined.", "startOffset": 27, "endOffset": 31}, {"referenceID": 8, "context": "12] 5 0 F2 Step Unimodal Separable [-100, 100] 30 0 F3 Sphere Unimodal Separable [-100, 100] 30 0 F4 SumSquares Unimodal Separable [-10, 10] 30 0 F5 Quartic Unimodal Separable [-1.", "startOffset": 131, "endOffset": 140}, {"referenceID": 8, "context": "5] 5 0 F7 Easom Unimodal Non-Separable [-100, 100] 2 -1 F8 Matyas Unimodal Non-Separable [-10, 10] 2 0 F9 Colville Unimodal Non-Separable [-10, 10] 4 0 F10 Trid6 Unimodal Non-Separable [-D,D] 6 -50 F11 Trid10 Unimodal Non-Separable [-D,D] 10 -210 F12 Zakharov Unimodal Non-Separable [-5,10] 10 0 F13 Powell Unimodal Non-Separable [-4,5] 24 0 F14 Schwefel 2.", "startOffset": 89, "endOffset": 98}, {"referenceID": 8, "context": "5] 5 0 F7 Easom Unimodal Non-Separable [-100, 100] 2 -1 F8 Matyas Unimodal Non-Separable [-10, 10] 2 0 F9 Colville Unimodal Non-Separable [-10, 10] 4 0 F10 Trid6 Unimodal Non-Separable [-D,D] 6 -50 F11 Trid10 Unimodal Non-Separable [-D,D] 10 -210 F12 Zakharov Unimodal Non-Separable [-5,10] 10 0 F13 Powell Unimodal Non-Separable [-4,5] 24 0 F14 Schwefel 2.", "startOffset": 138, "endOffset": 147}, {"referenceID": 8, "context": "5] 5 0 F7 Easom Unimodal Non-Separable [-100, 100] 2 -1 F8 Matyas Unimodal Non-Separable [-10, 10] 2 0 F9 Colville Unimodal Non-Separable [-10, 10] 4 0 F10 Trid6 Unimodal Non-Separable [-D,D] 6 -50 F11 Trid10 Unimodal Non-Separable [-D,D] 10 -210 F12 Zakharov Unimodal Non-Separable [-5,10] 10 0 F13 Powell Unimodal Non-Separable [-4,5] 24 0 F14 Schwefel 2.", "startOffset": 283, "endOffset": 290}, {"referenceID": 4, "context": "5] 5 0 F7 Easom Unimodal Non-Separable [-100, 100] 2 -1 F8 Matyas Unimodal Non-Separable [-10, 10] 2 0 F9 Colville Unimodal Non-Separable [-10, 10] 4 0 F10 Trid6 Unimodal Non-Separable [-D,D] 6 -50 F11 Trid10 Unimodal Non-Separable [-D,D] 10 -210 F12 Zakharov Unimodal Non-Separable [-5,10] 10 0 F13 Powell Unimodal Non-Separable [-4,5] 24 0 F14 Schwefel 2.", "startOffset": 330, "endOffset": 336}, {"referenceID": 8, "context": "22 Unimodal Non-Separable [-10, 10] 30 0", "startOffset": 26, "endOffset": 35}, {"referenceID": 8, "context": "2 Unimodal Non-Separable [-10, 10] 30 0 F16 Rosenbrock Unimodal Non-Separable [-30, 30] 30 0 F17 Dixon-Price Unimodal Non-Separable [-10, 10] 30 0 F18 Foxholes Multimodal Separable [-65.", "startOffset": 25, "endOffset": 34}, {"referenceID": 8, "context": "2 Unimodal Non-Separable [-10, 10] 30 0 F16 Rosenbrock Unimodal Non-Separable [-30, 30] 30 0 F17 Dixon-Price Unimodal Non-Separable [-10, 10] 30 0 F18 Foxholes Multimodal Separable [-65.", "startOffset": 132, "endOffset": 141}, {"referenceID": 8, "context": "998 F19 Branin Multimodal Separable [-5,10]x[0,15] 2 0.", "startOffset": 36, "endOffset": 43}, {"referenceID": 13, "context": "998 F19 Branin Multimodal Separable [-5,10]x[0,15] 2 0.", "startOffset": 44, "endOffset": 50}, {"referenceID": 8, "context": "F21 Booth Multimodal Separable [-10, 10] 2 0", "startOffset": 31, "endOffset": 40}, {"referenceID": 4, "context": "F28 Six Hump Camel Back Multimodal Non-Separable [-5, 5] 2 -1.", "startOffset": 49, "endOffset": 56}, {"referenceID": 8, "context": "F31 Shubert Multimodal Non-Separable [-10, 10] 2 -186.", "startOffset": 37, "endOffset": 46}, {"referenceID": 1, "context": "F32 GoldStein-Price Multimodal Non-Separable [-2, 2] 2 3", "startOffset": 45, "endOffset": 52}, {"referenceID": 4, "context": "F33 Kowalik Multimodal Non-Separable [-5, 5] 4 0.", "startOffset": 37, "endOffset": 44}, {"referenceID": 8, "context": "F34 Shekel5 Multimodal Non-Separable [0, 10] 4 -10.", "startOffset": 37, "endOffset": 44}, {"referenceID": 8, "context": "F35 Shekel7 Multimodal Non-Separable [0, 10] 4 -10.", "startOffset": 37, "endOffset": 44}, {"referenceID": 8, "context": "F36 Shekel10 Multimodal Non-Separable [0, 10] 4 -10.", "startOffset": 38, "endOffset": 45}, {"referenceID": 0, "context": "F39 Hartman3 Multimodal Non-Separable [0, 1] 3 -3.", "startOffset": 38, "endOffset": 44}, {"referenceID": 0, "context": "F40 Hartman6 Multimodal Non-Separable [0, 1] 6 -3.", "startOffset": 38, "endOffset": 44}, {"referenceID": 26, "context": "47 F42 Ackley Multimodal Non-Separable [-32, 32] 30 0", "startOffset": 39, "endOffset": 48}, {"referenceID": 8, "context": "F45 Langerman2 Multimodal Non-Separable [0, 10] 2 -1.", "startOffset": 40, "endOffset": 47}, {"referenceID": 8, "context": "F46 Langerman5 Multimodal Non-Separable [0, 10] 5 -1.", "startOffset": 40, "endOffset": 47}, {"referenceID": 8, "context": "F47 Langerman10 Multimodal Non-Separable [0, 10] 10 NA", "startOffset": 41, "endOffset": 48}, {"referenceID": 25, "context": "In [31], authors stated that after a sufficient value for colony size, any increment in the value does not improve the performance of the ABC algorithm significantly.", "startOffset": 3, "endOffset": 7}, {"referenceID": 25, "context": "For the test problems carried out in [31] colony sizes of 10, 50 and 100 are used for the ABC algorithm.", "startOffset": 37, "endOffset": 41}, {"referenceID": 26, "context": "Similarly, for the PSO algorithm it is reported that, PSO with different population sizes has almost the similar performance which means the performance of PSO is not sensitive to the population size [32].", "startOffset": 200, "endOffset": 204}], "year": 2016, "abstractText": "The Vortex Search (VS) algorithm is one of the recently proposed metaheuristic algorithms which was inspired from the vortical flow of the stirred fluids. Although the VS algorithm is shown to be a good candidate for the solution of certain optimization problems, it also has some drawbacks. In the VS algorithm, candidate solutions are generated around the current best solution by using a Gaussian distribution at each iteration pass. This provides simplicity to the algorithm but it also leads to some problems along. Especially, for the functions those have a number of local minimum points, to select a single point to generate candidate solutions leads the algorithm to being trapped into a local minimum point. Due to the adaptive step-size adjustment scheme used in the VS algorithm, the locality of the created candidate solutions is increased at each iteration pass. Therefore, if the algorithm cannot escape a local point as quickly as possible, it becomes much more difficult for the algorithm to escape from that point in the latter iterations. In this study, a modified Vortex Search algorithm (MVS) is proposed to overcome above mentioned drawback of the existing VS algorithm. In the MVS algorithm, the candidate solutions are generated around a number of points at each iteration pass. Computational results showed that with the help of this modification the global search ability of the existing VS algorithm is improved and the MVS algorithm outperformed the existing VS algorithm, PSO2011 and ABC algorithms for the benchmark numerical function set.", "creator": "PScript5.dll Version 5.2.2"}}}