{"id": "1606.05446", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Jun-2016", "title": "Abducing Compliance of Incomplete Event Logs", "abstract": "The capability to store data about business processes execution in so-called Event Logs has brought to the diffusion of tools for the analysis of process executions and for the assessment of the goodness of a process model. Nonetheless, these tools are often very rigid in dealing with with Event Logs that include incomplete information about the process execution. Thus, while the ability of handling incomplete event data is one of the challenges mentioned in the process mining manifesto, the evaluation of compliance of an execution trace still requires an end-to-end complete trace to be performed.", "histories": [["v1", "Fri, 17 Jun 2016 08:30:28 GMT  (342kb,D)", "http://arxiv.org/abs/1606.05446v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["federico chesani", "riccardo de masellis", "chiara di francescomarino", "chiara ghidini", "paola mello", "marco montali", "sergio tessaris"], "accepted": false, "id": "1606.05446"}, "pdf": {"name": "1606.05446.pdf", "metadata": {"source": "CRF", "title": "Abducing Compliance of Incomplete Event Logs", "authors": ["Federico Chesani", "Riccardo De Masellis", "Chiara Di Francescomarino", "Chiara Ghidini", "Paola Mello", "Marco Montali", "Sergio Tessaris"], "emails": ["federico.chesani@unibo.it,", "paola.mello@unibo.it,", "r.demasellis@fbk.eu,", "dfmchiara@fbk.eu,", "ghidini@fbk.eu,", "tessaris@inf.unibz.it", "montali@inf.unibz.it"], "sections": [{"heading": "1 Introduction", "text": "The proliferation of IT systems for storing process execution in so-called event logs has its origins in the business process community, a quest for tools that offer the possibility of discovering, verifying conformity, and improving process models based on actual behavior. [1] Focusing on conformity, that is, on a scenario in which the goal is to assess how a company's actual behavior relates to execution, is a fundamental notion of adherence to business principles in order to assess the quality of a process model and understand how it relates to the actual behavior of a company that provides the basis for the re-design, governance, and improvisation. [2] The use of event log is hard and potentially erroneously misrealized."}, {"heading": "2 Dealing with Incomplete Event Logs", "text": "To do this, we must first examine what incomplete event logs are (Section 2.1), and then understand how to adapt the notion of compliance to deal with partial data on the conduct of the process (Section 2.2), using a simple example described in this essay using the BPMN language.4 We will focus on structured process models in the sense of [6]. Generally, this is limited to the class of models that consist recursively of entry and exit blocks, in which each cleavage has a corresponding link that corresponds to its species, including pathological patterns that are notoriously difficult to characterize (e.g., nested OR contributions), with coverage covering a wide range of interesting use cases. 5 For clarity, we use BPMN, but our framework is linguistically inconsistent."}, {"heading": "2.1 Classifying Process Execution (In)Completeness", "text": "In fact, he says, he has found himself in a position to take the lead, in the way in which he is able to assert himself and in the way in which he is able to assert himself."}, {"heading": "2.2 Refining the Notion of Compliance", "text": "In our work, we look at prescriptive process models, i.e. models that describe the only acceptable designs, which correspond to the so-called \"de jure\" models in [5] and therefore require a definition of compliance to characterize the degree to which a given track corresponds / complies with the model. Traditional concepts of compliance are typically considered on the assumption that the track is a faithful footprint of reality and requires that the track is an end-to-end valid execution that can be fully reproduced on the process model. We call this notion of compliance strong compliance. Track (1) is an example of a track that is fully compliant with the POS process and requires that strict compliance is too restrictive when the track may be incomplete. In fact, incompleteness in a track impedes the possibility of reproducing compliance on the process model."}, {"heading": "3 Abduction and Incomplete Logs", "text": "Since the goal of this work is to provide automated procedures embedded in a tool that identifies conformant traces in the presence of incomplete event logs, given the prescriptive knowledge contained in a process model, we can schematize the entrance to our problem into three parts: (i) an instance-independent component, the process model described in this paper using BPMN; (ii) an instance-specific component, i.e., the (partial) protocol, and (iii) meta-information attached to the activities in the process model, indicating which are actually always, never, or possibly observable (i.e., logged) in the event log; and the third component is an extension of a typical business process specification that we propose (follow and extend the approach described in [9]) to provide prescriptive information about the (non) observability of activities."}, {"heading": "3.1 The SCIFF in short", "text}, {"heading": "3.2 Encoding Structured Processes and Their Executions in SCIFF", "text": "We want to illustrate how the various components of an (incomplete) event log and structured process activity are captured individually. (A log is a series of tracks, each of which is executed by a series of observed (atomic) events.) Thus, logging the execution of an observable activity in SCIFF is presented as an event, while the hypothesis of the execution of an unobservable activity is represented by a never-observable ABD (see Figure 3a). In the face of an event occurring in T, we use a function that represents the execution of an observable activity (a, T) = {H, T) when an observable activity is represented."}, {"heading": "3.3 Compliance in SCIFF: Declarative Semantics", "text": "We are prepared to provide a formal idea of compliance with the provisions in their various forms, such as is not necessary for our explanation. - We do this by extending the declarative semantics of SCIFF, which is provided in [7] to justify the incompleteness (i.e., the observability of the features). - The structured approach is indeed in accordance with a SCIFF specification S = < KB, A, IC >, where: (i) KB is a logical program [12] that contains the definition of accessory predicates; (ii) A = {ABD / 2}; (ii) IC is a set of ICs that defines the coding in Section 3.2. - A (execution) track and an abductive explanation follows as follows: A Trace T is a set of terms of type H (e, Ti) in which e is a term is described."}, {"heading": "3.4 Dealing with Process Execution (In)Completeness in SCIFF", "text": "We have already illustrated, using the POS example, how definition 4 can be used, on a very abstract level, to address compliance with a partial trace. In this section, we will illustrate in more detail how SCIFF can be used to resolve the three domains of incompleteness identified in Section 2.1.Trace and Event Incompleteness are treated by SCIFF in a uniform manner. In fact, the log / event incompleteness problem boils down to checking whether a given protocol (possibly endowed with incomplete traces / events) is compliant with a prescriptive process model. We consider entering the process model, along with information about the observability of its activities, a maximum length for completed tracks. Compliance is determined by the execution of the SCIFF evidence procedure and the evaluation of possible inductive responses. We proceed as follows: 1. We transform the process model with its observability, metainformation automatically missing in an IFF specification."}, {"heading": "4 Evaluation", "text": "In this context, it should be noted that this is not a purely formal decision, but a purely formal one."}, {"heading": "4.1 Discussion", "text": "The purpose of the experiment was to emphasize the algorithm in marginal cases. In fact, we note that on the one hand, we deliberately nested the model, in particular by adding a loop, which is a source of complexity, and on the other hand, we tested situations that are very unlikely in practice. Wecan certainly assumes that in typical scenarios, the number of (partial) observable activities, which in most cases are performed by humans, usually does not exceed half of the total activities (i.e.% AOA > 50%), and that from the% AOA parameter and the length of the partial track, a good estimate of the limit on the trace length can be made, thus avoiding useless loops (if any) iterations. In such settings, the performance of the seductive procedure is reasonable for the different types of incompleteness. For example, they are sufficient for keeping a few seconds, if at most a single event description is completely unknown, up to about 4.5 minutes, if 4 event descriptions are missing."}, {"heading": "5 Related Work", "text": "The problem of incomplete traces has been addressed by a series of work in the field of process discovery and conformity, some of which [2,3] have addressed the problem of alignment of event logs and procedural / declarative process models [2,3]. Such work examines the search space of possible steps to align the protocol with the model. Our goal is not to manage generic aberrations between models and protocols, but to focus on a specific type of incompleteness: the model is correct and the protocol may be incomplete. We can divide existing work aimed at identifying possible model-conforming \"worlds\" from a series of observations into two groups: quantitative and qualitative approaches, the former relying on the availability of a probable model of execution and knowledge."}, {"heading": "6 Conclusions", "text": "We have presented an inductive framework to support the monitoring of business processes (and in particular compliance verification) by attacking the various forms of incompleteness that may be present in an event log. As for future development, the SCIFF framework is based on first-order logic, paving the way for (i) the inclusion of data [24], (ii) the extension of other types of workflows (e.g. timeframes as in [25]), and (iii) the exploration of probability models to deal with incomplete knowledge."}, {"heading": "18. Rogge-Solti, A., Mans, R.S., van der Aalst, W.M., Weske, M.: Improving documentation by repairing event logs. In: Proc. of PoEM. Springer (2013)", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "19. Bertoli, P., Di Francescomarino, C., Dragoni, M., Ghidini, C.: Reasoning-based techniques for dealing with incomplete business process execution traces. In: Proc. of AI*IA, Springer (2013)", "text": "20. Chesani, F., Mello, P., Montali, M., Storari, S.: Testing the conformity of careful process execution by translating a graphic language into computational logic. In: Proc. of AIME. (2007) 21. Montali, M., Pesic, M., van der Aalst, W.M.P., Chesani, F., Mello, P., Storari, S.: Declarative specification and verification of service choreographies. TWEB 4 (2010) 22. Mian, USA, den Hartog, J., S. Etalle, N.Z.: Testing with incomplete logs. In: Proc. of HotSpot. (2015) 23. Mancarella, P., Terreni, G., Sadri, F., Toni, F., Endriss, U.: The CIFF proof procedure for abductive logic programming with constraints: Theory, implementation and experiments."}], "references": [{"title": "Process mining manifesto", "author": ["van der Aalst", "W.M.P"], "venue": "BPM Workshops, Springer", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Conformance checking using cost-based fitness analysis", "author": ["A. Adriansyah", "B.F. van Dongen", "W.M.P. van der Aalst"], "venue": "Proc. of EDOC, IEEE Computer Society", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Aligning event logs and declarative process models for conformance checking", "author": ["M. De Leoni", "F.M. Maggi", "W.M.P. van der Aalst"], "venue": "Proc. of BPM, Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Abductive logic programming", "author": ["A.C. Kakas", "R.A. Kowalski", "F. Toni"], "venue": "J. Log. Comput. 2", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1992}, {"title": "Process Mining - Discovery, Conformance and Enhancement of Business Processes", "author": ["W.M.P. van der Aalst"], "venue": "Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "On structured workflow modelling", "author": ["B. Kiepuszewski", "A.H.M. ter Hofstede", "C.J. Bussler"], "venue": "Seminal Contributions to Information Systems Engineering. Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Verifiable agent interaction in abductive logic programming: The SCIFF framework", "author": ["M. Alberti", "F. Chesani", "M. Gavanelli", "E. Lamma", "P. Mello", "P. Torroni"], "venue": "ACM Trans. Comput. Log. 9", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "XES Standard Definition", "author": ["I.T.F. on Process Mining"], "venue": "http://www.xesstandard.org/", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Completing workflow traces using action languages", "author": ["C. Di Francescomarino", "C. Ghidini", "S. Tessaris", "I.V. Sandoval"], "venue": "Proc. of CAiSE, Springer", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Abduction and abductive logic programming", "author": ["A.C. Kakas", "P. Mancarella"], "venue": "Proc. of ICLP.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1994}, {"title": "The iff proof procedure for abductive logic programming", "author": ["T.H. Fung", "R.A. Kowalski"], "venue": "J. Log. Program. 33", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "Foundations of Logic Programming, 2nd Edition", "author": ["J.W. Lloyd"], "venue": "Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1987}, {"title": "Negation in logic programming", "author": ["K. Kunen"], "venue": "J. Log. Program. 4", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1987}, {"title": "Negation as Failure", "author": ["K.L. Clark"], "venue": "Logic and Data Bases. Plenum Press", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1978}, {"title": "The semantics of constraint logic programs", "author": ["J. Jaffar", "M.J. Maher", "K. Marriott", "P.J. Stuckey"], "venue": "J. Log. Program. 37", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1998}, {"title": "Specification and Verification of Declarative Open Interaction Models: a Logic-Based Approach", "author": ["M. Montali"], "venue": "Volume 56 of LNBIP. Springer", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "The process model matching contest", "author": ["U Cayoglu"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2013}, {"title": "Improving documentation by repairing event logs", "author": ["A. Rogge-Solti", "R.S. Mans", "W.M. van der Aalst", "M. Weske"], "venue": "Proc. of PoEM. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Reasoning-based techniques for dealing with incomplete business process execution traces", "author": ["P. Bertoli", "C. Di Francescomarino", "M. Dragoni", "C. Ghidini"], "venue": "Proc. of AI*IA, Springer", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Testing careflow process execution conformance by translating a graphical language to computational logic", "author": ["F. Chesani", "P. Mello", "M. Montali", "S. Storari"], "venue": "Proc. of AIME.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2007}, {"title": "Declarative specification and verification of service choreographiess", "author": ["M. Montali", "M. Pesic", "W.M.P. van der Aalst", "F. Chesani", "P. Mello", "S. Storari"], "venue": "TWEB 4", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "Auditing with incomplete logs", "author": ["U.S. Mian", "J. den Hartog", "N.Z.S. Etalle"], "venue": "Proc. of HotSpot.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "The CIFF proof procedure for abductive logic programming with constraints: Theory, implementation and experiments", "author": ["P. Mancarella", "G. Terreni", "F. Sadri", "F. Toni", "U. Endriss"], "venue": "TPLP 9", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2009}, {"title": "Monitoring data-aware business constraints with finite state automata", "author": ["R. De Masellis", "F.M. Maggi", "M. Montali"], "venue": "Proc. of ICSSP, ACM Press", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Managing controlled violation of temporal process constraints", "author": ["A. Kumar", "S. Sabbella", "R. Barton"], "venue": "Business Process Management. Volume 9253 of LNCS. Springer", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 0, "context": "The proliferation of IT systems able to store process executions traces in socalled event logs has originated, in the Business Process community, a quest towards tools that offer the possibility of discovering, checking the conformance and enhancing process models based on actual behaviors [1].", "startOffset": 291, "endOffset": 294}, {"referenceID": 0, "context": "Thus, while the presence of non-monitorable activities (or errors in the logging procedure) makes the ability of handling incomplete event data one of the main challenges of the BP community, as mentioned in the process mining manifesto[1], still trace compliance of an execution ar X iv :1 60 6.", "startOffset": 236, "endOffset": 239}, {"referenceID": 1, "context": "Notable exceptions are [2,3] where trace incompleteness is managed in an algorithmic/heuristic manner using log repair techniques.", "startOffset": 23, "endOffset": 28}, {"referenceID": 2, "context": "Notable exceptions are [2,3] where trace incompleteness is managed in an algorithmic/heuristic manner using log repair techniques.", "startOffset": 23, "endOffset": 28}, {"referenceID": 3, "context": "In this paper, we take an orthogonal approach and throughly address the problem of log incompleteness from a formal/logic-based point of view, adopting an approach based on abduction [4].", "startOffset": 183, "endOffset": 186}, {"referenceID": 4, "context": "This leads us to refine the classical notion of conformance-by-alignment [5] between an execution trace and a process model into strong and conditional compliance, to account for incompleteness.", "startOffset": 73, "endOffset": 76}, {"referenceID": 6, "context": "2); (iii) an encoding of structured process models and of event logs in the SCIFF abductive logic framework [7], and a usage of the SCIFF abductive proof procedure to compute strong, conditional and non- compliance in presence of an incomplete event log (Section 3); and (iv) an evaluation of the proposed framework in an experimental setting (Section 4).", "startOffset": 108, "endOffset": 111}, {"referenceID": 5, "context": "4 We focus on structured process models in the spirit of [6].", "startOffset": 57, "endOffset": 60}, {"referenceID": 7, "context": "In accordance with the IEEE standard XES format for representing event logs [8], in general we can describe an event log as a set of execution traces.", "startOffset": 76, "endOffset": 79}, {"referenceID": 7, "context": "Events are usually described as complex objects containing data about the executed activity, its time stamp, and so on [8].", "startOffset": 119, "endOffset": 122}, {"referenceID": 4, "context": "These corresponds to the so-called \u201cde jure\u201d models in [5], and consequently call for a definition of compliance, so as to characterise the degree to which a given trace conforms/is aligned to the", "startOffset": 55, "endOffset": 58}, {"referenceID": 8, "context": "The third component is an extension of a typical business process specification that we propose (following and extending the approach described in [9]) to provide prescriptive information", "startOffset": 147, "endOffset": 150}, {"referenceID": 9, "context": "Abduction is a non-monotonic reasoning process where hypotheses are made to explain observed facts [10].", "startOffset": 99, "endOffset": 103}, {"referenceID": 3, "context": "Abduction has been introduced in Logic Programming in [4].", "startOffset": 54, "endOffset": 57}, {"referenceID": 6, "context": "In this paper we leverage on the SCIFF abductive logic programming framework [7], an extension of the IFF abductive proof procedure [11].", "startOffset": 77, "endOffset": 80}, {"referenceID": 10, "context": "In this paper we leverage on the SCIFF abductive logic programming framework [7], an extension of the IFF abductive proof procedure [11].", "startOffset": 132, "endOffset": 136}, {"referenceID": 6, "context": "We do so by extending the SCIFF declarative semantics provided in [7] to incorporate log incompleteness (that is, observability features).", "startOffset": 66, "endOffset": 69}, {"referenceID": 11, "context": "A structured process model corresponds to a SCIFF specification S = \u3008KB,A, IC\u3009, where: (i) KB is a Logic Program [12] containing the definition of accessory predicates; (ii) A = {ABD/2,E/2}; (iii) IC is a set of ICs constructed by following the encoding defined in Section 3.", "startOffset": 113, "endOffset": 117}, {"referenceID": 12, "context": "where Comp is the (two-valued) completion of a theory [13], CET stands for Clark Equational Theory [14] and TN is the CLP constraint theory [15] for integers.", "startOffset": 54, "endOffset": 58}, {"referenceID": 13, "context": "where Comp is the (two-valued) completion of a theory [13], CET stands for Clark Equational Theory [14] and TN is the CLP constraint theory [15] for integers.", "startOffset": 99, "endOffset": 103}, {"referenceID": 14, "context": "where Comp is the (two-valued) completion of a theory [13], CET stands for Clark Equational Theory [14] and TN is the CLP constraint theory [15] for integers.", "startOffset": 140, "endOffset": 144}, {"referenceID": 15, "context": "This can be done in the spirit of [16] (where correctness is proven for declarative, constraint-based processes), by arguing that structured processes can be seen as declarative processes that only employ the \u201cchain-response constraint\u201d [16].", "startOffset": 34, "endOffset": 38}, {"referenceID": 15, "context": "This can be done in the spirit of [16] (where correctness is proven for declarative, constraint-based processes), by arguing that structured processes can be seen as declarative processes that only employ the \u201cchain-response constraint\u201d [16].", "startOffset": 237, "endOffset": 241}, {"referenceID": 6, "context": "For step (ii), we rely on [7], where t soundness and completeness of SCIFF w.", "startOffset": 26, "endOffset": 29}, {"referenceID": 16, "context": "As for the model, we choose a real-life process made available within the Process Matching Contest 2013 [17], describing the admission procedure to the", "startOffset": 104, "endOffset": 108}, {"referenceID": 1, "context": "Some of them [2,3] have addressed the problem of aligning event logs and procedural/declarative process models [2,3].", "startOffset": 13, "endOffset": 18}, {"referenceID": 2, "context": "Some of them [2,3] have addressed the problem of aligning event logs and procedural/declarative process models [2,3].", "startOffset": 13, "endOffset": 18}, {"referenceID": 1, "context": "Some of them [2,3] have addressed the problem of aligning event logs and procedural/declarative process models [2,3].", "startOffset": 111, "endOffset": 116}, {"referenceID": 2, "context": "Some of them [2,3] have addressed the problem of aligning event logs and procedural/declarative process models [2,3].", "startOffset": 111, "endOffset": 116}, {"referenceID": 17, "context": "For example, in [18] the authors exploit stochastic Petri nets and Bayesian Networks to recover missing information.", "startOffset": 16, "endOffset": 20}, {"referenceID": 18, "context": "Among these approaches, the issue of reconstructing missing information has been tackled in [19] and in [9], respectively leveraging Satisfiability Modulo Theory, and planning techniques.", "startOffset": 92, "endOffset": 96}, {"referenceID": 8, "context": "Among these approaches, the issue of reconstructing missing information has been tackled in [19] and in [9], respectively leveraging Satisfiability Modulo Theory, and planning techniques.", "startOffset": 104, "endOffset": 107}, {"referenceID": 19, "context": "In [20], a structured workflow language has been defined, with a formal semantics in SCIFF.", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "In [21], SCIFF has been exploited to formalize and reason about the declarative workflow language Declare.", "startOffset": 3, "endOffset": 7}, {"referenceID": 21, "context": "An interesting work where trace compliance is evaluated through abduction is presented in [22].", "startOffset": 90, "endOffset": 94}, {"referenceID": 22, "context": "The adopted abductive framework, CIFF [23], only supports ground abducibles, and ICs are limited to denials.", "startOffset": 38, "endOffset": 42}, {"referenceID": 21, "context": "The work in [22] explores also the dimension of human confirmation of hypotheses, and proposes", "startOffset": 12, "endOffset": 16}, {"referenceID": 23, "context": "Concerning future development, the SCIFF framework is based on first-order logic, thus paving the way towards (i) the incorporation of data [24], (ii) extensions to further types of workflows (e.", "startOffset": 140, "endOffset": 144}, {"referenceID": 24, "context": ", temporal workflows as in [25]), and (iii) towards the investigation of probabilistic models to deal with incompleteness of knowledge.", "startOffset": 27, "endOffset": 31}], "year": 2016, "abstractText": "The capability to store data about business processes execution in so-called Event Logs has brought to the diffusion of tools for the analysis of process executions and for the assessment of the goodness of a process model. Nonetheless, these tools are often very rigid in dealing with with Event Logs that include incomplete information about the process execution. Thus, while the ability of handling incomplete event data is one of the challenges mentioned in the process mining manifesto, the evaluation of compliance of an execution trace still requires an endto-end complete trace to be performed. This paper exploits the power of abduction to provide a flexible, yet computationally effective, framework to deal with different forms of incompleteness in an Event Log. Moreover it proposes a refinement of the classical notion of compliance into strong and conditional compliance to take into account incomplete logs. Finally, performances evaluation in an experimental setting shows the feasibility of the presented approach.", "creator": "LaTeX with hyperref package"}}}