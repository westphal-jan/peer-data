{"id": "1606.05597", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Jun-2016", "title": "Adding Context to Concept Trees", "abstract": "Concept Trees are a type of database that can organise arbitrary textual information using a very simple rule. Each tree tries to represent a single cohesive concept and the trees can link with each other for navigation and semantic purposes. The trees are therefore a type of semantic network and would benefit from having a consistent level of context for each of the nodes. The Concept Tree nodes have a mathematical basis allowing for a consistent build process. These would represent nouns or verbs in a text sentence, for example. New to the design can then be lists of descriptive elements for each of the nodes. The descriptors can also be weighted, but do not have to follow the strict counting rule of the tree nodes. With the new descriptive layers, a much richer type of knowledge can be achieved and still reasoned over automatically. The linking structure of the licas network is very relevant to building the concept trees now and forms the basis for their construction. The concept tree - symbolic neural network relation is also extended further.", "histories": [["v1", "Fri, 17 Jun 2016 17:32:11 GMT  (522kb)", "http://arxiv.org/abs/1606.05597v1", null], ["v2", "Tue, 12 Sep 2017 10:58:32 GMT  (747kb)", "http://arxiv.org/abs/1606.05597v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["kieran greer"], "accepted": false, "id": "1606.05597"}, "pdf": {"name": "1606.05597.pdf", "metadata": {"source": "CRF", "title": "Adding Context to Concept Trees", "authors": ["Kieran Greer"], "emails": [], "sections": [{"heading": null, "text": "The trees are therefore a kind of semantic network and would benefit from a uniform context level for each of the nodes. The concept tree nodes have a mathematical basis that allows a uniform creation process, such as nouns or verbs in a sentence. New in the design are lists of descriptive elements for each of the nodes. Also, the descriptors can be weighted, but do not have to follow the strict counting rule of the tree nodes. With the new description levels, a much richer kind of knowledge can be achieved and yet be thought through automatically. The linking structure of the license network is now very relevant for the construction of the concept trees and forms the basis for their construction. The concept tree - symbolic neuronal network relationship is also widened further. Keywords: concept, tree, context, linking, setic self-organization."}, {"heading": "1 Introduction", "text": "The term \"concept base\" has been used before ([6] or [11], for example) and has been adopted in [4] to describe a database of heterogeneous sources or arbitrary concepts, which would be more similar to an OO database than a relational database, for example. The term \"concept\" can be used to describe a single value or complex entity equally, and thus the concept base can store information from any type of data source. If the information is arbitrary, it is likely that a certain amount of structure must first be added to the information before it can be consistently processed, data mined or reconsidered. A formal and mathematical process for this work has been described in [3], where tree-like structures could be constructed to represent the more arbitrary concept groups that are presented. A concept tree is essentially and AND / OR diagram of related concepts nodes in the sense that all nodes would be contained in one path, but different branches can be selected."}, {"heading": "2 Concept Trees", "text": "The concept trees have already been described in [3] and again in [2] They start with a base node that is extended by branches of related nodes. A strict rule on the number of branches does not allow a branch node to have a higher number than the parent node. Indeed, this is the case if the tree is always updated from the base but may not be the case if the tree can be updated from other places. Thus, as part of the construction process, trees can be divided into two or more parts, where connections between the parts can be maintained to help navigate between related concepts. The paper [3] contains a more formal set of rules that would help to normalize the concept base and also to update and restructure it. Figure 1 is an example of what a concept base with three trees might look like. Since \"prank milk\" is important for more than one tree, it is a separate tree that is linked to mechanisms by the other concepts (M)."}, {"heading": "2.1 Adding New Trees", "text": "There are several ways to analyze the text stream, including statistical analysis of the most popular words that can be used as base nodes; or possibly simply analyzing each sentence separately and adding it as it is. Natural language is already highly structured and intelligent, and would therefore transfer part of that structure to the concept base. If a new tree instance is added, some terms might overlap with existing trees. If only one word term overlaps, then the trees probably should not be merged, but separate instances should be created. Therefore, one question is whether two or three word sequences should be assigned to an existing tree, or whether individual instances should always be created. Merging trees as part of the first construction phase would require a parameter, but ultimately that is what would be desired. However, the trees can be removed or merged during periodic database updates."}, {"heading": "2.2 Contextual Descriptors", "text": "A new suggestion for this paper is that the tree nodes should only be nouns or verbs. These are more solid and static concepts of the real world, as opposed to the more transitory descriptive ones. Therefore, the nouns and verbs would form the static tree structure. Each node would then be allowed to have any number of descriptors - adjectives for nouns and adverbs for verbs. For reasons of simplicity and a clear process, the descriptors can only be linked to other descriptors and do not specify a new structure itself. They would also be moved or restructured with the parent concept. As shown in Figure 1, there is a black cat, but the cat could also be white, tabby or whatever. Also, a thirsty boy who might also be hungry. Thus, this kind of context could completely change the meaning and could lead to a requirement that different trees have different lines in order to link different terms. If the descriptor or context nodes are more closely related to the structure of the trees, then they may not have to follow the structure of the other parent nodes, but they must be more rigid."}, {"heading": "3 Related Work", "text": "This paper is based on the author's earlier papers [2] - [5]. In particular, [2] and [3] describe the concept trees and interaction of symbolic neural networks, while [4] describe the symbolic neural network and the query language to be used. In the book [5], the original conceptual concepts are described, including the permanent and dynamic links that are now part of the conceptual base. [7] The software was written using the licas system [7], as well as OpenNLP [9] and WordNet [1] [8]. Two previous examples of other conceptual databases are [6] and [11]. Since the conceptual base is also a kind of semantic network, a reference to this would be [10]."}, {"heading": "4 Query language", "text": "A query can take the form of a token list of words, which can be read as a natural language from a text sequence, for example. If plaintext is read, some pre-processing can help. As with constructing the concept base, the more common words or punctuations can be removed first, where licas [7] classes can help. OpenNLP [9] was then used to analyze a sentence in associated phrases. Each phrase would then be inserted into the concept base as a single tree structure. To recognize the word types in the group, WordNet [1] [8] was used. Nouns and verbs must be recognized first. If a noun has an adjective language on both sides, it can be added as a descriptor for the noun. If a verb has an adverb on both sides, it can be added as a correct search query."}, {"heading": "4.1 Symbolic Neural Network", "text": "The other half of the design is the symbolic neural network of [4], which also mentions the query language. This model was more autonomous and experiential, but it was able to use the same kind of query construct, with the idea that when all the query parts are found, they can be grouped or combined into a global top node that is representative of them. Food, for example, can be grouped into a recipe. So, while the research of this paper is to link the individual tree parts together for multiple query constraints, they could be transferred to the symbolic network, which then regroupes them into a global concept with some meaning or meaning. Of course, this connects the two types of constructs together, and there are even small or local circuits (cycles) in the trees themselves that could help confirm the example."}, {"heading": "5 Computer Program and Test Scenarios", "text": "A test program was written in the Java programming language. It does not fully implement the concept base in terms of restructuring rules, but it allows trees to be added and then searched; it can read a text document, break it down into sentences, remove the additional formatting, and then use OpenNLP to construct any phrase or phrase; WordNet then helps to analyze this into concepts with related descriptors; each phrase is then submitted to the concept base and added as a tree structure; a similar process can be used to update the concept base so that links can be created; another set of text sets, for example, can be analyzed and used in the same way to search for information or knowledge about the concept base trees; tree groups that meet the criteria can be retrieved and related links can be updated; this is still a query process, but the process that a human could use would require some information or knowledge to be returned."}, {"heading": "5.1 Example Scenario", "text": "A very simple example would be parsing the sentence \"Jack was wearing a white shirt and blue trousers.\" If this sentence were included in the concept base and a query for [shirt white] [pants?], the tree structure [shirt white] [pants blue] would return, suggesting that the pants are blue. Likewise, a question such as \"was something blue worn with a white shirt?\" or [shirt white] [? -blue] could be asked and would not necessarily require a search of the entire database. If descriptors are linked, then a blue descriptor associated with the white descriptor of the shirt node can indicate a concept node that could contain relevant information."}, {"heading": "6 Conclusions", "text": "The query structure of a horn clause [4] also seems appropriate, at least for a simpler solution, and the idea of an attribute name and value is the same as the concept name and the descriptor of this essay. The concept tree - neural network structure of [2] or [3] was also developed when it became clear that the two parts work very well together. It has always been suggested that positive feedback would be a good way to dynamically update links. In [5] it came from queries over a distributed network and it is a similar scenario in this essay. A human-based decision to approve a query result can add intelligence that is missing in the system. This update or amplification process then provides an automatic mechanism for the symbolic neural network to regroup the concept groups into some kind of larger global concept."}], "references": [{"title": "ed.) WordNet: An Electronic Lexical Database", "author": ["C. Fellbaum"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1998}, {"title": "New Ideas for Brain Modelling", "author": ["K. Greer"], "venue": "Intelligent Systems in Science and Information", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2014}, {"title": "Concept Trees: Building Dynamic Concepts from Semi-Structured Data using Nature-Inspired Methods", "author": ["K. Greer"], "venue": "Studies in Fuzziness and Soft Computing, Springer-Verlag, Germany,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Symbolic Neural Networks for Clustering Higher-Level Concepts", "author": ["K. Greer"], "venue": "NAUN International Journal of Computers, Issue 3,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Thinking Networks \u2013 the Large and Small of it: Autonomic and Reasoning Processes for Information Networks, published with LuLu.com, 2008, ISBN: 1440433275", "author": ["K. Greer"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "ConceptBase - A Deductive Object Base Manager", "author": ["M. Jarke", "S. Eherer", "R. Gallersdorfer", "M.A. Jeusfeld", "M. Staudt"], "venue": "Journal on Intelligent Information Systems,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1995}, {"title": "WordNet: A Lexical Database for English", "author": ["G.A. Miller"], "venue": "Communications of the ACM,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1995}, {"title": "Principles of Semantic Networks: Explorations in the representation of knowledge", "author": ["J.F. Sowa"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Automatic Construction of a Lexical Attribute Knowledge Base", "author": ["J. Zhao", "Y. Gao", "H. Liu", "R. Lu"], "venue": "KSEM", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}], "referenceMentions": [{"referenceID": 5, "context": "The term \u2018concept base\u2019 has been used previously ([6] or [11], for example) and has been adopted in [4] to describe a database of heterogeneous sources or arbitrary concepts.", "startOffset": 50, "endOffset": 53}, {"referenceID": 8, "context": "The term \u2018concept base\u2019 has been used previously ([6] or [11], for example) and has been adopted in [4] to describe a database of heterogeneous sources or arbitrary concepts.", "startOffset": 57, "endOffset": 61}, {"referenceID": 3, "context": "The term \u2018concept base\u2019 has been used previously ([6] or [11], for example) and has been adopted in [4] to describe a database of heterogeneous sources or arbitrary concepts.", "startOffset": 100, "endOffset": 103}, {"referenceID": 2, "context": "A formal and mathematical process for doing this was described in [3], where tree-like structures could be built to represent the more arbitrary concept groups that are presented.", "startOffset": 66, "endOffset": 69}, {"referenceID": 4, "context": "To keep the structure flexible, the dynamic linking mechanism [5] can be used to link descriptors.", "startOffset": 62, "endOffset": 65}, {"referenceID": 4, "context": "The linking structure of the licas [5][7] network is very relevant in building the concept trees now and forms the basis for their construction.", "startOffset": 35, "endOffset": 38}, {"referenceID": 3, "context": "As part of a more complete system, the relation with the symbolic neural network [4] is developed again in the following sections.", "startOffset": 81, "endOffset": 84}, {"referenceID": 2, "context": "The concept trees have been described previously in [3] and again in [2].", "startOffset": 52, "endOffset": 55}, {"referenceID": 1, "context": "The concept trees have been described previously in [3] and again in [2].", "startOffset": 69, "endOffset": 72}, {"referenceID": 2, "context": "The paper [3] gives a more formal set of rules that would help to build the concept base in a normalised way and also how to update and re-structure it.", "startOffset": 10, "endOffset": 13}, {"referenceID": 4, "context": "The linking mechanisms are mostly dynamic, where the frequency counts are already that way and so there is probably no reason to replace that with the 3-level linking mechanism [5].", "startOffset": 177, "endOffset": 180}, {"referenceID": 1, "context": "This paper is based on the earlier papers by the author [2]-[5].", "startOffset": 56, "endOffset": 59}, {"referenceID": 4, "context": "This paper is based on the earlier papers by the author [2]-[5].", "startOffset": 60, "endOffset": 63}, {"referenceID": 1, "context": "In particular, [2] and [3] describe the concept trees and symbolic neural network working together, while [4] describes the symbolic neural network and the query language that is to be used.", "startOffset": 15, "endOffset": 18}, {"referenceID": 2, "context": "In particular, [2] and [3] describe the concept trees and symbolic neural network working together, while [4] describes the symbolic neural network and the query language that is to be used.", "startOffset": 23, "endOffset": 26}, {"referenceID": 3, "context": "In particular, [2] and [3] describe the concept trees and symbolic neural network working together, while [4] describes the symbolic neural network and the query language that is to be used.", "startOffset": 106, "endOffset": 109}, {"referenceID": 4, "context": "The book [5] writes about the original linking ideas, including the permanent and dynamic links that are now part of the concept base.", "startOffset": 9, "endOffset": 12}, {"referenceID": 0, "context": "The software has been written with the help of the licas system [7] and also OpenNLP [9] and WordNet [1][8].", "startOffset": 101, "endOffset": 104}, {"referenceID": 6, "context": "The software has been written with the help of the licas system [7] and also OpenNLP [9] and WordNet [1][8].", "startOffset": 104, "endOffset": 107}, {"referenceID": 5, "context": "Two earlier examples of other concept databases include [6] and [11].", "startOffset": 56, "endOffset": 59}, {"referenceID": 8, "context": "Two earlier examples of other concept databases include [6] and [11].", "startOffset": 64, "endOffset": 68}, {"referenceID": 7, "context": "As the concept base is also a type of semantic network, one reference for that would be [10].", "startOffset": 88, "endOffset": 92}, {"referenceID": 0, "context": "To recognise the word types in the group, WordNet [1][8] was used.", "startOffset": 50, "endOffset": 53}, {"referenceID": 6, "context": "To recognise the word types in the group, WordNet [1][8] was used.", "startOffset": 53, "endOffset": 56}, {"referenceID": 3, "context": "With tokenised word sequences, a Horn clause [4] might be an appropriate query construct and would keep things relatively simple, although, changing the minor features in the implementation can change what a query result would be.", "startOffset": 45, "endOffset": 48}, {"referenceID": 3, "context": "The other half of the design is the symbolic neural network of [4], where that paper also mentions the query language.", "startOffset": 63, "endOffset": 66}, {"referenceID": 3, "context": "The query structure of a Horn clause [4] also looks appropriate, at least for a more simple solution and the idea of an attribute name and value is the same as the concept name and descriptor of this paper.", "startOffset": 37, "endOffset": 40}, {"referenceID": 1, "context": "The concept tree \u2013 neural network structure of [2] or [3] has also been developed as it becomes clear that the two parts work very well together.", "startOffset": 47, "endOffset": 50}, {"referenceID": 2, "context": "The concept tree \u2013 neural network structure of [2] or [3] has also been developed as it becomes clear that the two parts work very well together.", "startOffset": 54, "endOffset": 57}, {"referenceID": 4, "context": "In [5] it was from queries over a distributed network and it is a similar scenario in this paper.", "startOffset": 3, "endOffset": 6}], "year": 2016, "abstractText": "Concept Trees are a type of database that can organise arbitrary textual information using a very simple rule. Each tree tries to represent a single cohesive concept and the trees can link with each other for navigation and semantic purposes. The trees are therefore a type of semantic network and would benefit from having a consistent level of context for each of the nodes. The Concept Tree nodes have a mathematical basis allowing for a consistent build process. These would represent nouns or verbs in a text sentence, for example. New to the design can then be lists of descriptive elements for each of the nodes. The descriptors can also be weighted, but do not have to follow the strict counting rule of the tree nodes. With the new descriptive layers, a much richer type of knowledge can be achieved and still reasoned over automatically. The linking structure of the licas network is very relevant to building the concept trees now and forms the basis for their construction. The concept tree symbolic neural network relation is also extended further.", "creator": "Microsoft\u00ae Word 2010"}}}