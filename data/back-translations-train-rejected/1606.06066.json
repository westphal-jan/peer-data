{"id": "1606.06066", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Jun-2016", "title": "Mining Local Process Models", "abstract": "In this paper we describe a method to discover frequent behavioral patterns in event logs. We express these patterns as \\emph{local process models}. Local process model mining can be positioned in-between process discovery and episode / sequential pattern mining. The technique presented in this paper is able to learn behavioral patterns involving sequential composition, concurrency, choice and loop, like in process mining. However, we do not look at start-to-end models, which distinguishes our approach from process discovery and creates a link to episode / sequential pattern mining. We propose an incremental procedure for building local process models capturing frequent patterns based on so-called process trees. We propose five quality dimensions and corresponding metrics for local process models, given an event log. We show monotonicity properties for some quality dimensions, enabling a speedup of local process model discovery through pruning. We demonstrate through a real life case study that mining local patterns allows us to get insights in processes where regular start-to-end process discovery techniques are only able to learn unstructured, flower-like, models.", "histories": [["v1", "Mon, 20 Jun 2016 11:28:26 GMT  (202kb,D)", "https://arxiv.org/abs/1606.06066v1", null], ["v2", "Tue, 16 May 2017 17:23:10 GMT  (1923kb)", "http://arxiv.org/abs/1606.06066v2", "Published in Elsevier's Journal of Innovation in Digital Ecosystems, Special Issue on Data Mining"]], "reviews": [], "SUBJECTS": "cs.DB cs.LG", "authors": ["niek tax", "natalia sidorova", "reinder haakma", "wil m p van der aalst"], "accepted": false, "id": "1606.06066"}, "pdf": {"name": "1606.06066.pdf", "metadata": {"source": "CRF", "title": "Mining Local Process Models", "authors": ["Niek Tax", "Natalia Sidorova", "Reinder Haakma", "Wil M. P. van der Aalst"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 160 6.06 066v 2 [cs.D B] 16 May 2In this paper, we describe a method for discovering common behavioural patterns in event logs. We express these patterns as local process models. Local process model mining can be positioned between process discovery and episode / sequence pattern mining. However, the technique presented in this paper is capable of learning behavioural patterns that include sequential composition, contemporaneity, selection and loop, as in process mining. However, we do not propose start-to-end models that distinguish our approach from process discovery and establish a link to episode / sequence pattern mining. We propose a step-by-step process for creating local process models that capture frequent patterns on so-called process trees. We propose five quality dimensions and corresponding metrics for local process models that are determined from an event log. We demonstrate monotonization characteristics for some quality cutting models that allow for acceleration by local process dimensions."}, {"heading": "1. Introduction", "text": "This year, it will be able to put itself at the top of the group."}, {"heading": "2. Preliminaries", "text": "In this section, we introduce the following terms: (1), (1), (2), (2), (2), (3), (3), (3), (3), (4), (4), (4), (4), (4), (5), (5), (5), (5), (7), (7), (7), (7), (7), (7), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8, (8), (8), (8), (8), (8), (8), (8), (8), (8), (8), (8, (8), (8), (8), (8), (8, (8), (8), (8), (8), (8), (8), (8, (8), (8), 8, (8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8), 8 (8, 8, 8, 8, 8, 8 (8, 8, 8, 8, 8, 8), 8 (8, 8, 8, 8, 8, 8, 8, 8 (8, 8, 8, 8, 8), 8, 8, 8, 8 (8, 8, 8, 8, 8, 8, 8, 8, 8 (8, 8), 8, 8, 8, 8, 8, 8, 8, 8, 8 (8, 8, 8, 8"}, {"heading": "3. Related Work", "text": "In fact, it is such that we are able to claim that we are able to claim that we are able to establish ourselves in the world, and that we are able to claim that we are in the world, that we are able to claim that we are in the world, that we are in the world, in which we live, in which we live, in the world in which we live, in which we live, in the world in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live in which we live, in which we live in which we live, in which we live, in which we live in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we live, in which we live, in which we live, in which we live, in which we live in which we live, in which we live, in which we are able, in which we live, in which we live, in which we are able"}, {"heading": "4. Local Process Model Discovery Approach", "text": "A local procedural model (LPM) aims to describe the behavior of people in the region, i.e., it is smaller than they are. (LPM) It is not possible to describe the behavior of people in the region. (LPM) It is not possible to capture the behavior of people in the region. (LPM) It is not possible to investigate the behavior of people in the region. (LN) It is not able to investigate the behavior of people in the region. (LPM) It is not able to investigate the behavior of people in the region. (LN) It is in the region. (LN) It is a local process consisting of four main steps. (1) It is a first step in the region. (LPM) It is a first step in the region. (LPM) It is a second step in the region. (LPM) It is a second step in the region. (LPM) It is a second step in the region. (LPM) It is a second step in the region. (LPM) It is a second step in the region."}, {"heading": "5. Quality Criteria & Metrics", "text": "Suppose that we have an oracular function that generates a segmentation of a given track. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are lying a set of quality criteria for an event. (LPM) We assume that we are discussing a set of quality criteria for an event. (LPM) We are discussing a number of quality criteria for an event. (PM) We are discussing a number of quality criteria for an event. (PM) We are discussing a number of PM for an event."}, {"heading": "5.1. Local Process Model Selection & Ranking", "text": "The defined quality dimensions and indicators are used to select and rank local process models generated by the recursive approach to process tree exploration. Often, there is a simultaneous interest in several quality criteria. A local process model with high support, which has a low determinism score (e.g. a small flower pattern), generates little insight into the process, while a deterministic pattern with low support does not describe the behavior in the protocol very well. Thus, it is possible to set thresholds per dimension. It is also useful to rank patterns over quality criteria based on a weighted average. Appropriate weighting of quality dimensions depends on the business issues and the situation."}, {"heading": "5.2. Monotonicity Properties & Pruning", "text": "Often one is not interested in local process models with low support, confidence or determinism. Setting a minimum threshold for these quality criteria allows us to crop off those parts of the search space that we know that extensions of a local process model can never meet the criteria due to monotonicity, which leads to an acceleration of the proposed recursive process of tree detection. Cutting based on monotonicity is similar to the cut performed in the well-known Apriori algorithm [36] and other algorithms inspired by the Apriori algorithm, such as [3]. Any expansion of the process tree P in which a leaf node a-P is replaced by a subtree \u2192 (a, b), (b, a, b) or (a, b) for each Apriori algorithm is guaranteed to be less frequent, i.e. less support has than P. The underlying intuition is that the expansion will require additional alignment requirements, which may result in a search for a trab-P-not-Track (P-Track)."}, {"heading": "6. Alignment-Based Evaluation of Local Process Models", "text": "It is a question of the extent to which it will be able to hide itself in a position to put itself in the role of others, in which it will be a question of whether and to what extent it will be able to put itself in the role of others, and about the question to what extent it will be able to put itself in the role of others, in the role of others, in the role of others, in which the role of others, in which the role of others, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself, in which it places itself in which it places itself, in which it places itself in which it places itself, in which it places itself in which it places itself, which it places itself in which it places itself in which it places itself, which it places itself in which it places itself in which it, which it places itself in which it places itself in which it places itself in which it, which it places itself in which it places itself in which it, which it places itself in which it places itself in which it places itself in which it, which it places itself in which it places itself in which it, which it places itself in which it places itself in which it, which it places itself in which it places itself in which it places itself in which it, which it places itself in which it places itself in which it, which it places itself in which it places itself in which it places itself in which it, which it places itself in which it places itself in which it places itself in which it places itself in which it places itself in which it does not, which it places itself in which it places itself in which it places itself in which it places itself in which it does not, in which it does not, in which it places itself in which it does not, in which it places itself in which it places itself in which it places itself in which it does not, in which it does not, in which it places itself in which it does not, in which it places itself which it"}, {"heading": "6.1. Determinism on Petri nets", "text": "Each transition triggered in a petri net corresponds to a change in the marker of the net. Table 1 shows the transitions triggered in the alignment of Figure 6c. The bottom line represents the number of transitions activated in the petri net when the transition was triggered. When t3 was triggered, the petri net was in a marker in which both t2 and t3 were activated.The determinism of the net corresponds to a divided by the average number of activated transitions during the repetition. In the example determinism (LN, L) = 1012."}, {"heading": "7. Case Studies", "text": "We now evaluate the proposed method for obtaining local process models on the basis of two real datasets."}, {"heading": "7.1. BPIC \u201912 Data Set", "text": "This year, it is at an all-time high in the history of the European Union."}, {"heading": "7.2. Comparison with Related Techniques", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "8. Conclusion & Future Work", "text": "This paper presents a method for discovering local process models that can express the same rich set of relationships between activities as business process models, but describe common fragments, rather than complete start-to-end processes. We presented five quality criteria and corresponding metrics that quantify the degree of representativeness of a local process model for an event log. We describe the monotonicity properties of quality metrics that can be used to narrow the search space and speed up calculation. We illustrate through two case studies of real-world process models that the proposed method allows the user to obtain process insights in the form of valuable patterns when the degree of randomness / variance of event data prevents traditional process discovery techniques from discovering a structured start-to-end process model. Furthermore, the proposed approach to discovering local process models is able to detect long-term dependencies with which most process models have process discovery difficulties as a result of a local process discovery model."}], "references": [{"title": "Discovery of frequent episodes in event sequences", "author": ["H. Mannila", "H. Toivonen", "A.I. Verkamo"], "venue": "Data Mining and Knowledge Discovery 1 (3) ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1997}, {"title": "Mining sequential patterns", "author": ["R. Agrawal", "R. Srikant"], "venue": "in: Proceedings of the 11th International Conference on Data Engineering (ICDE), IEEE", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1995}, {"title": "Discovering unbounded episodes in sequential data", "author": ["G. Casas-Garriga"], "venue": "in: Proceedings of the 7th European Conference on Principles and Practice of Knowledge Discovery in Databases (PKDD), Vol. 7, Springer Science & Business Media", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "Detection of significant sets of episodes in event sequences", "author": ["M. Atallah", "W. Szpankowski", "R. Gwadera"], "venue": "in: Proceedings of the 4th IEEE International Conference on Data Mining (ICDM), IEEE", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2004}, {"title": "Petri nets: an introduction", "author": ["W. Reisig"], "venue": "Vol. 4, Springer Science & Business Media", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2012}, {"title": "Flexible evolutionary algorithms for mining structured process models", "author": ["J.C.A.M. Buijs"], "venue": "Ph.D. thesis, PhD thesis. Eindhoven, The Netherlands: Technische Universiteit Eindhoven, 2014 ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "A tutorial on hidden markov models and selected applications in speech recognition", "author": ["L.R. Rabiner"], "venue": "Proceedings of the IEEE 77 (2) ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1989}, {"title": "Learning task-dependent distributed representations by backpropagation through structure", "author": ["C. Goller", "A. Kuchler"], "venue": "in: Neural Networks, 1996., IEEE International Conference on, Vol. 1, IEEE", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1996}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural computation 9 (8) ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "W", "author": ["S.J.J. Leemans", "D. Fahland"], "venue": "M. P. van der Aalst, Discovering blockstructured process models from event logs - a constructive approach, in: Application and Theory of Petri Nets and Concurrency, Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "PrefixSpan: mining sequential patterns efficiently by prefix-projected pattern growth", "author": ["J. Pei", "J. Han", "B. Mortazavi-Asl", "H. Pinto", "Q. Chen", "U. Dayal", "M.-C. Hsu"], "venue": "in: Proceedings of the 17th International Conference on Data Engineering (ICDE), IEEE", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2001}, {"title": "SPMF: a java open-source pattern mining library", "author": ["P. Fournier-Viger", "A. Gomariz", "T. Gueniche", "A. Soltani", "C.-W. Wu", "V.S. Tseng"], "venue": "The Journal of Machine Learning Research 15 (1) ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "B", "author": ["J.C.A.M. Buijs"], "venue": "F. van Dongen, W. M. P. van der Aalst, A genetic algorithm for discovering process trees, in: Proceedings of the 2012 IEEE Congress on Evolutionary Computation (CEC), IEEE", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "Semantische Proze\u00dfmodellierung auf der Grundlage\u201d Ereignisgesteuerter Proze\u00dfketten (EPK)", "author": ["G. Keller", "A.-W. Scheer", "M. N\u00fcttgens"], "venue": "Institut f\u00fcr Wirtschaftsinformatik", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1992}, {"title": "W", "author": ["M. Leemans"], "venue": "M. P. van der Aalst, Discovery of frequent episodes in event logs, in: Data-Driven Process Discovery and Analysis, Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Sequential patterns postprocessing for structural relation patterns mining", "author": ["J. Lu", "W. Chen", "O. Adjei", "M. Keech"], "venue": "Strategic Advancements in Utilizing Data Mining and Warehousing Technologies: New Concepts and Developments ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2009}, {"title": "Sequential patterns graph and its construction algorithm", "author": ["J. Lu", "X.-F. Wang", "O. Adjei", "F. Hussain"], "venue": "Chinese Journal of Computers 27 (6) ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2004}, {"title": "Graph-based modelling of concurrent sequential patterns", "author": ["J. Lu", "W. Chen", "M. Keech"], "venue": "Exploring Advances in Interdisciplinary Data Mining and Analytics: New Trends ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Hierarchical business process clustering", "author": ["J.-Y. Jung", "J. Bae", "L. Liu"], "venue": "in: Proceedings of the 2008 IEEE International Conference on Services Computing (SCC), Vol. 2, IEEE", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2008}, {"title": "Mining usage patterns from a repository of scientific workflows", "author": ["C. Diamantini", "D. Potena", "E. Storti"], "venue": "in: Proceedings of the 27th Annual ACM Symposium on Applied Computing (SAC), ACM", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2012}, {"title": "Pattern discovery from innovation processes", "author": ["C. Diamantini", "L. Genga", "D. Potena", "E. Storti"], "venue": "in: Proceedings of the 2013 International Conference on Collaboration Technologies and Systems (CTS), IEEE", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2013}, {"title": "Behavioral process mining for unstructured processes", "author": ["C. Diamantini", "L. Genga", "D. Potena"], "venue": "Journal of Intelligent Information Systems ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2016}, {"title": "W", "author": ["B.F. Van Dongen"], "venue": "M. P. Van der Aalst, Multi-phase process mining: Building instance graphs, in: International Conference on Conceptual Modeling, Springer", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2004}, {"title": "W", "author": ["M. Song", "C.W. G\u00fcnther"], "venue": "M. P. Van der Aalst, Trace clustering in process mining, in: Business Process Management Workshops, Springer", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2008}, {"title": "Context aware trace clustering: Towards improving process mining results", "author": ["R.P. Jagadeesh Chandra Bose", "W.M.P. van der Aalst"], "venue": "in: Proceedings of the 2009 SIAM International Conference on Data Mining,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2009}, {"title": "Mining usage scenarios in business processes: Outlier-aware discovery and run-time prediction", "author": ["F. Folino", "G. Greco", "A. Guzzo", "L. Pontieri"], "venue": "Data & Knowledge Engineering 70 (12) ", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2011}, {"title": "W", "author": ["M. Pesic", "H. Schonenberg"], "venue": "M. P. Van der Aalst, Declare: Full support for loosely-structured processes, in: Enterprise Distributed Object Computing Conference, 2007. EDOC 2007. 11th IEEE International, IEEE", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2007}, {"title": "Mining the organisational perspective in agile business processes", "author": ["S. Sch\u00f6nig", "C. Cabanillas", "S. Jablonski", "J. Mendling"], "venue": "in: Enterprise, Business- Process and Information Systems Modeling, Springer", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2015}, {"title": "W", "author": ["F.M. Maggi", "A.J. Mooij"], "venue": "M. P. Van der Aalst, User-guided discovery of declarative process models, in: Computational Intelligence and Data Mining (CIDM), 2011 IEEE Symposium on, IEEE", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2011}, {"title": "The automated discovery of hybrid processes", "author": ["F.M. Maggi", "T. Slaats", "H.A. Reijers"], "venue": "in: Business Process Management, Springer", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2014}, {"title": "W", "author": ["C.W. G\u00fcnther"], "venue": "M. P. Van Der Aalst, Fuzzy mining\u2013adaptive process simplification based on multi-perspective metrics, in: Business Process Management, Springer", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}, {"title": "R", "author": ["R. Agrawal"], "venue": "Srikant, et al., Fast algorithms for mining association rules, in: Proceedings of the 20th International Conference on Very Large Data Bases (VLDB), Vol. 1215, Morgan Kaufmann", "citeRegEx": "36", "shortCiteRegEx": null, "year": 1994}, {"title": "Replaying history on process models for conformance checking and performance analysis, Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery", "author": ["W.M.P. van der Aalst", "A. Adriansyah", "B.F. van Dongen"], "venue": null, "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2012}, {"title": "KDD-cup 2000 organizers\u2019 report: Peeling the onion", "author": ["R. Kohavi", "C.E. Brodley", "B. Frasca", "L. Mason", "Z. Zheng"], "venue": "ACM SIGKDD Explorations Newsletter 2 (2) ", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2000}], "referenceMentions": [{"referenceID": 0, "context": "A different perspective on mining patterns in event sequences can be found in the data mining field, where the episode mining [2] and sequential pattern mining [3] subfields focus on finding frequent patterns that are local, not necessarily describing the whole event sequences from start to end.", "startOffset": 126, "endOffset": 129}, {"referenceID": 1, "context": "A different perspective on mining patterns in event sequences can be found in the data mining field, where the episode mining [2] and sequential pattern mining [3] subfields focus on finding frequent patterns that are local, not necessarily describing the whole event sequences from start to end.", "startOffset": 160, "endOffset": 163}, {"referenceID": 0, "context": "been used to analyze telecommunication networks [2], web navigational logs [2, 4], and retail sales transactions [5].", "startOffset": 48, "endOffset": 51}, {"referenceID": 0, "context": "been used to analyze telecommunication networks [2], web navigational logs [2, 4], and retail sales transactions [5].", "startOffset": 75, "endOffset": 81}, {"referenceID": 2, "context": "been used to analyze telecommunication networks [2], web navigational logs [2, 4], and retail sales transactions [5].", "startOffset": 75, "endOffset": 81}, {"referenceID": 3, "context": "been used to analyze telecommunication networks [2], web navigational logs [2, 4], and retail sales transactions [5].", "startOffset": 113, "endOffset": 116}, {"referenceID": 9, "context": "(c) The Petri net discovered on L with the Inductive Miner algorithm [12].", "startOffset": 69, "endOffset": 73}, {"referenceID": 10, "context": "(d) The sequential patterns discovered on L with the PrefixSpan algorithm [13].", "startOffset": 74, "endOffset": 78}, {"referenceID": 4, "context": "Sequential pattern mining and episode mining are limited to the discovery of sequential orderings or partially ordered sets of events, while process discovery methods aim to discover a larger set of event relations, including sequential orderings, (exclusive) choice relations, concurrency, and loops, represented in process models such as Petri nets [6], BPMN [7], and process trees [8].", "startOffset": 351, "endOffset": 354}, {"referenceID": 5, "context": "Sequential pattern mining and episode mining are limited to the discovery of sequential orderings or partially ordered sets of events, while process discovery methods aim to discover a larger set of event relations, including sequential orderings, (exclusive) choice relations, concurrency, and loops, represented in process models such as Petri nets [6], BPMN [7], and process trees [8].", "startOffset": 384, "endOffset": 387}, {"referenceID": 6, "context": "Process models that can be discovered with process discovery methods distinguish themselves from more traditional sequence mining methods like Hidden Markov Models [9] and Recurrent Neural Networks [10, 11] in that process models can be visually represented and their visual representation can be used for communication between process stakeholders.", "startOffset": 164, "endOffset": 167}, {"referenceID": 7, "context": "Process models that can be discovered with process discovery methods distinguish themselves from more traditional sequence mining methods like Hidden Markov Models [9] and Recurrent Neural Networks [10, 11] in that process models can be visually represented and their visual representation can be used for communication between process stakeholders.", "startOffset": 198, "endOffset": 206}, {"referenceID": 8, "context": "Process models that can be discovered with process discovery methods distinguish themselves from more traditional sequence mining methods like Hidden Markov Models [9] and Recurrent Neural Networks [10, 11] in that process models can be visually represented and their visual representation can be used for communication between process stakeholders.", "startOffset": 198, "endOffset": 206}, {"referenceID": 9, "context": "Applying discovery algorithms, like the Inductive Miner [12], yields models allowing for any sequence of events (Figure 1c).", "startOffset": 56, "endOffset": 60}, {"referenceID": 11, "context": "When we apply any sequential pattern mining algorithm using a threshold of six occurrences, we obtain the seven length-three sequential patterns depicted in Figure 1d (results obtained using the SPMF [14] implementation of the PrefixSpan algorithm [13]).", "startOffset": 200, "endOffset": 204}, {"referenceID": 10, "context": "When we apply any sequential pattern mining algorithm using a threshold of six occurrences, we obtain the seven length-three sequential patterns depicted in Figure 1d (results obtained using the SPMF [14] implementation of the PrefixSpan algorithm [13]).", "startOffset": 248, "endOffset": 252}, {"referenceID": 12, "context": "We leverage process trees [15] to search for local process models, and describe a way to recursively explore candidate process trees up to a certain model size.", "startOffset": 26, "endOffset": 30}, {"referenceID": 13, "context": "In fact, results can also be visualized as BPMN [7], EPC [16], UML activity diagram [17], or UML statechart diagram [17].", "startOffset": 57, "endOffset": 61}, {"referenceID": 12, "context": "A different process representation is a process tree [15].", "startOffset": 53, "endOffset": 57}, {"referenceID": 14, "context": "ProM\u2019s Episode Miner [18] is a method that can be considered to be inbetween episode mining and process mining, as it discovers a collection of patterns from an event log where each pattern consists of partial order constructs.", "startOffset": 21, "endOffset": 25}, {"referenceID": 15, "context": "propose a method called Post Sequential Patterns Mining (PSPM) [19] that takes a input a set of sequential patterns and post-processes them into a single graph consisting of sequential and exclusive choice constructs, which they call a Sequential Pattern Graph (SGP) [20].", "startOffset": 63, "endOffset": 67}, {"referenceID": 16, "context": "propose a method called Post Sequential Patterns Mining (PSPM) [19] that takes a input a set of sequential patterns and post-processes them into a single graph consisting of sequential and exclusive choice constructs, which they call a Sequential Pattern Graph (SGP) [20].", "startOffset": 267, "endOffset": 271}, {"referenceID": 17, "context": "adds the capability to mine concurrency relations [21].", "startOffset": 50, "endOffset": 54}, {"referenceID": 18, "context": "[22] describe a method to mine frequent patterns from a collection of process models by transforming each business process to a vector format and then applying agglomerative clustering.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[23, 24] take a similar approach, but apply graph clustering techniques instead of a traditional clustering approach.", "startOffset": 0, "endOffset": 8}, {"referenceID": 20, "context": "[23, 24] take a similar approach, but apply graph clustering techniques instead of a traditional clustering approach.", "startOffset": 0, "endOffset": 8}, {"referenceID": 21, "context": "[25] describe a method to mine frequent patterns in process model notation through a two step approach.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "First each trace from the event log is transformed into a so called instance graph [26], which is graph representation of a trace that shows which steps in the trace are performed sequentially and which steps are performed in parallel (i.", "startOffset": 83, "endOffset": 87}, {"referenceID": 21, "context": "[25], while they can be discovered with LPM discovery.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "The techniques developed in the area of trace clustering [27, 28, 29, 30] are related to LPM discovery in the sense that both aim to enable extraction of process insight from event logs where the process is too unstructured for existing process discovery techniques to find a structured process model.", "startOffset": 57, "endOffset": 73}, {"referenceID": 24, "context": "The techniques developed in the area of trace clustering [27, 28, 29, 30] are related to LPM discovery in the sense that both aim to enable extraction of process insight from event logs where the process is too unstructured for existing process discovery techniques to find a structured process model.", "startOffset": 57, "endOffset": 73}, {"referenceID": 25, "context": "The techniques developed in the area of trace clustering [27, 28, 29, 30] are related to LPM discovery in the sense that both aim to enable extraction of process insight from event logs where the process is too unstructured for existing process discovery techniques to find a structured process model.", "startOffset": 57, "endOffset": 73}, {"referenceID": 26, "context": "Declarative process models, such as Declare [31], define the allowed behavior through constraints that must be respected while carrying out the process.", "startOffset": 44, "endOffset": 48}, {"referenceID": 27, "context": "Two examples of process discovery approaches that generate declarative process models are the DPIL Miner [32] and the Declare Miner [33].", "startOffset": 105, "endOffset": 109}, {"referenceID": 28, "context": "Two examples of process discovery approaches that generate declarative process models are the DPIL Miner [32] and the Declare Miner [33].", "startOffset": 132, "endOffset": 136}, {"referenceID": 29, "context": "Hybrid process discovery [34] aims at discovering a process model that consists partially of procedural process model constructs and partially of declarative process model constructs.", "startOffset": 25, "endOffset": 29}, {"referenceID": 30, "context": "The Fuzzy Miner [35] is a process discovery technique developed to deal with complex and flexible process models.", "startOffset": 16, "endOffset": 20}, {"referenceID": 31, "context": "Pruning based on monotonicity is similar to the pruning performed in the well-known Apriori algorithm [36], and other algorithms inspired by the Apriori algorithm, such as [3].", "startOffset": 102, "endOffset": 106}, {"referenceID": 1, "context": "Pruning based on monotonicity is similar to the pruning performed in the well-known Apriori algorithm [36], and other algorithms inspired by the Apriori algorithm, such as [3].", "startOffset": 172, "endOffset": 175}, {"referenceID": 32, "context": "Important for the definition of \u03bbLN is the notion of alignments [37], which aims to find a sequence of model firings starting at the initial marking and ending in a final marking that is an optimal approximation of the behavior in the event", "startOffset": 64, "endOffset": 68}, {"referenceID": 28, "context": "We start with the Declare miner [33], which mines a set of binary constraints from the data based on a set of constraint templates.", "startOffset": 32, "endOffset": 36}, {"referenceID": 28, "context": "Figure 9b shows the result of the Declare miner [33] on the BPI\u201912 resource 10939 event log with a support threshold of 90%, requiring that the constraints hold in 90% of the cases.", "startOffset": 48, "endOffset": 52}, {"referenceID": 28, "context": "Figure 9: (a) The result of the Declare miner [33] with a support threshold of 80% on the BPI\u201912 resource 10939 event log.", "startOffset": 46, "endOffset": 50}, {"referenceID": 30, "context": "Figure 10: Result of the Fuzzy miner [35] with default parameters on the BPI\u201912 resource 10939 event log.", "startOffset": 37, "endOffset": 41}, {"referenceID": 14, "context": "Figure 11: The first four episodes discovered by ProM\u2019s Episode Miner [18] on the BPI\u201912 resource 10939 event log.", "startOffset": 70, "endOffset": 74}, {"referenceID": 33, "context": "More detailed information on the Gazelle data set can be found in [39].", "startOffset": 66, "endOffset": 70}, {"referenceID": 10, "context": "We compare the local process models found on this data set with the sequential patterns obtained with the well-known sequential pattern mining algorithm PrefixSpan [13] as implemented in the SPMF [14] sequential pattern mining library.", "startOffset": 164, "endOffset": 168}, {"referenceID": 11, "context": "We compare the local process models found on this data set with the sequential patterns obtained with the well-known sequential pattern mining algorithm PrefixSpan [13] as implemented in the SPMF [14] sequential pattern mining library.", "startOffset": 196, "endOffset": 200}], "year": 2017, "abstractText": "In this paper we describe a method to discover frequent behavioral patterns in event logs. We express these patterns as local process models. Local process model mining can be positioned in-between process discovery and episode / sequential pattern mining. The technique presented in this paper is able to learn behavioral patterns involving sequential composition, concurrency, choice and loop, like in process mining. However, we do not look at start-to-end models, which distinguishes our approach from process discovery and creates a link to episode / sequential pattern mining. We propose an incremental procedure for building local process models capturing frequent patterns based on so-called process trees. We propose five quality dimensions and corresponding metrics for local process models, given an event log. We show monotonicity properties for some quality dimensions, enabling a speedup of local process model discovery through pruning. We demonstrate through a real life case study that mining local patterns allows us to get insights in processes where regular start-to-end process discovery techniques are only able to learn unstructured, flower-like, models.", "creator": "LaTeX with hyperref package"}}}