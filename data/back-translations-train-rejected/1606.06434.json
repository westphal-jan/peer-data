{"id": "1606.06434", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Jun-2016", "title": "The Schema Editor of OpenIoT for Semantic Sensor Networks", "abstract": "Ontologies provide conceptual abstractions over data, in domains such as the Internet of Things, in a way that sensor data can be harvested and interpreted by people and applications. The Semantic Sensor Network (SSN) ontology is the de-facto standard for semantic representation of sensor observations and metadata, and it is used at the core of the open source platform for the Internet of Things, OpenIoT. In this paper we present a Schema Editor that provides an intuitive web interface for defining new types of sensors, and concrete instances of them, using the SSN ontology as the core model. This editor is fully integrated with the OpenIoT platform for generating virtual sensor descriptions and automating their semantic annotation and registration process.", "histories": [["v1", "Tue, 21 Jun 2016 06:20:22 GMT  (1060kb,D)", "http://arxiv.org/abs/1606.06434v1", "First Joint International Workshop on SEMANTIC SENSOR NETWORKS AND TERRA COGNITA, The 14th International Semantic Web Conference Workshops, October 11-15, 2015"]], "COMMENTS": "First Joint International Workshop on SEMANTIC SENSOR NETWORKS AND TERRA COGNITA, The 14th International Semantic Web Conference Workshops, October 11-15, 2015", "reviews": [], "SUBJECTS": "cs.AI cs.HC", "authors": ["prem prakash jayaraman", "jean-paul calbimonte", "hoan nguyen mau quoc"], "accepted": false, "id": "1606.06434"}, "pdf": {"name": "1606.06434.pdf", "metadata": {"source": "CRF", "title": "The Schema Editor of OpenIoT for Semantic Sensor Networks", "authors": ["Prem Prakash Jayaraman", "Jean-Paul Calbimonte", "Nguyen Mau Quoc"], "emails": ["prem.jayaraman@rmit.edu.au", "name.surname@epfl.ch", "hoan.quoc@insight-centre.org"], "sections": [{"heading": "1 Motivation", "text": "This year, it has come to the point that it has never come as far as it has this year."}, {"heading": "2 Sensor Schema Editor", "text": "The Sensor Schema Editor supports the average user in annotating sensors and sensor-related data using the OpenIoT Ontology and Linked Data principles. The interface automates the generation of RDF descriptions for sensor node information transmitted by users. Consider, for example, an IoT deployment where dozens of WeatherStation sensors are deployed in a specific geographical area. OpenIoT [4] displays all sensors and observations using ontological concepts. Figure 1, for example, represents a description of a sensor type that follows the SSN-based OpenIoT ontology. A sensor (e.g. WeatherStation) measures air temperature and humidity and has some predefined accuracy and frequency parameters that are typically defined by the manufacturer specification or configuration. This sensor type represents an extension of the lintology we present on this specific application lineup of sensors (based on the ones we present in this application lineup)."}, {"heading": "3 Sensor Schema Editor Implementation", "text": "The Sensor Schema Editor4 consists of two components: 1) a web-based interface (Sensor Type and Instance Editors) and 2) a backend server. The web interface is developed in Java using the JSF framework. The backend is also developed in Java and uses the Restlet Framework (http: / / restlet.org /). The current implementation of the Sensor Schema Editor is able to generate new sensor types and instances based on the OpenIoT ontology."}, {"heading": "3.1 Sensor Type Editor", "text": "Figure 3 introduces the Sensor Type Editor, an easy-to-use intuitive user interface that allows inexperienced users to define new sensor types. It supports the following concepts for defining a new sensor type. Sensor Type Name / ID: A friendly name for the new sensor type. Observed Property: A property observed by the new sensor type. The observed relationship is used to define the relationship between a sensor and its property. The editor allows the assignment of a sensor to several observed properties. Measurement Capability: Gathers measurement properties, especially accuracy and frequency. Accuracy is the consistency between the value of an observation and the true value of the observed quality. Frequency is the smallest possible time between one observation and the next. 4 Available as part of OpenIoT on Github: https: / / github.com / OpenIotRegister / Register Register Register / Register Register: The means of generating the respective sensor type or type is also used in the RDF."}, {"heading": "3.2 Sensor Instance Editor", "text": "The OpenIoT Sensor Instance Editor uses the previously created sensor type definition to generate a concrete (used) sensor instance. The instance is a representation of the actual physical / virtual sensor. Figure 4 provides a screenshot of the sensor instance editor. The instance contains the following information: Sensor name: the identification of the sensor used, e.g. demo weatherstation Owner / Description: Provides a sensor description, including the owner of the sensor. Location: The physical position of the sensor (based on a map). Feature of interest: This is used within the OpenIoT ontology to dynamically link the sensor instance to a domain ontology, e.g. demo weatherstation refers to the observed characteristic of the crop stock. Observed properties: These are extracted from the sensor type definition. The user can combine the unit of the measurement (e.g. the Kelvin function or the characteristic order of the SMN) with the sensor component specified temperature and the SN."}, {"heading": "4 Conclusions", "text": "In this paper, we introduced a web-based sensor schema editor that helps users define new types of sensors, extending the underlying ontology and creating instances in the form of linked data, using SSN ontology as the core model. This editor is part of the OpenIoT open source platform for the development and deployment of IoT, bridging the gap between the know-how of IoT system administrators and the SSN-based ontology model that governs the components of OpenIoT. In the future, we plan to adapt further parameters to the sensor description (e.g. custom measurement capabilities) and add more complex validation mechanisms that warn the user when the schemas produced might cause conflicts in the ontology model. In addition, we plan to allow mass generation of instances in cases where a large number of sensor instances need to be created."}, {"heading": "1. Butt, A.S., Haller, A., Liu, S., Xie, L.: Activeraul: A web form-based user interface to create and maintain rdf data. In: International Semantic Web Conference (Posters", "text": "& Demos. vol. 1035, pp. 117-120 (2013) 2. Compton, M.e.a.: The ssn ontology of the w3c semantic sensor network incubator group. Web Semantics: Science, Services and Agents on the WWW 17, 25-32 (2012) 3. Knublauch, H., Fergerson, R.W., Noy, N.F., Musen, M.A.: The prot\u00e9g\u00e9 owl plugin: An open development environment for semantic web applications. In: The Semantic Web-ISWC 2004, pp. 229-243. Springer (2004) 4. Soldatos, J., Kefalakis, N., Hauswirth, M., Serrano, M., Calbimonte, J.P., Riahi, M., Aberer, K., Jayaraman, P.P., Zaslavsky, A., \u017darko, I.P., et al.: Open iot: Internet-Source of the Things in the Cloud (2015)."}], "references": [{"title": "Activeraul: A web form-based user interface to create and maintain rdf data", "author": ["A.S. Butt", "A. Haller", "S. Liu", "L. Xie"], "venue": "International Semantic Web Conference (Posters & Demos. vol. 1035, pp. 117\u2013120", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "The ssn ontology of the w3c semantic sensor network incubator group", "author": ["Compton", "M.e.a."], "venue": "Web Semantics: Science, Services and Agents on the WWW 17, 25\u201332", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "The prot\u00e9g\u00e9 owl plugin: An open development environment for semantic web applications", "author": ["H. Knublauch", "R.W. Fergerson", "N.F. Noy", "M.A. Musen"], "venue": "The Semantic Web\u2013ISWC 2004, pp. 229\u2013243. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Openiot: Open source internet-of-things in the cloud", "author": ["J. Soldatos", "N. Kefalakis", "M. Hauswirth", "M. Serrano", "J.P. Calbimonte", "M. Riahi", "K. Aberer", "P.P. Jayaraman", "A. Zaslavsky", "\u017darko", "I.P"], "venue": "Interoperability and Open-Source Solutions for the Internet of Things, pp. 13\u201325. Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 1, "context": "integration of all these modules is possible thanks to the use of the OpenIoT ontology, which is based on the SSN ontology [2].", "startOffset": 123, "endOffset": 126}, {"referenceID": 2, "context": "Prot\u00e9g\u00e9 [3]) are suitable for defining, modifying and customizing ontologies, but they require users to be familiar with ontology modeling and the basics of description logics.", "startOffset": 8, "endOffset": 11}, {"referenceID": 0, "context": "A novel feature of the Sensor Schema Editor compared to other UI-based ontology editors [1] is that it is a fully functional, implemented prototype completely integrated with the OpenIoT system.", "startOffset": 88, "endOffset": 91}, {"referenceID": 3, "context": "In OpenIoT [4], all sensors and observations are represented in terms of ontological concepts.", "startOffset": 11, "endOffset": 14}], "year": 2016, "abstractText": "Ontologies provide conceptual abstractions over data, in domains such as the Internet of Things, in a way that sensor data can be harvested and interpreted by people and applications. The Semantic Sensor Network (SSN) ontology is the de-facto standard for semantic representation of sensor observations and metadata, and it is used at the core of the open source platform for the Internet of Things, OpenIoT. In this paper we present a Schema Editor that provides an intuitive web interface for defining new types of sensors, and concrete instances of them, using the SSN ontology as the core model. This editor is fully integrated with the OpenIoT platform for generating virtual sensor descriptions and automating their semantic annotation and registration process.", "creator": "LaTeX with hyperref package"}}}