{"id": "1606.07233", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2016", "title": "Adaptive Task Assignment in Online Learning Environments", "abstract": "With the increasing popularity of online learning, intelligent tutoring systems are regaining increased attention. In this paper, we introduce adaptive algorithms for personalized assignment of learning tasks to student so that to improve his performance in online learning environments. As main contribution of this paper, we propose a a novel Skill-Based Task Selector (SBTS) algorithm which is able to approximate a student's skill level based on his performance and consequently suggest adequate assignments. The SBTS is inspired by the class of multi-armed bandit algorithms. However, in contrast to standard multi-armed bandit approaches, the SBTS aims at acquiring two criteria related to student learning, namely: which topics should the student work on, and what level of difficulty should the task be. The SBTS centers on innovative reward and punishment schemes in a task and skill matrix based on the student behaviour.", "histories": [["v1", "Thu, 23 Jun 2016 09:09:49 GMT  (1754kb,D)", "http://arxiv.org/abs/1606.07233v1", "6th International Conference on Web Intelligence"]], "COMMENTS": "6th International Conference on Web Intelligence", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["per-arne", "ersen", "christian kr{\\aa}kevik", "morten goodwin", "anis yazidi"], "accepted": false, "id": "1606.07233"}, "pdf": {"name": "1606.07233.pdf", "metadata": {"source": "CRF", "title": "Adaptive Task Assignment in Online Learning Environments", "authors": ["Per-Arne Andersen", "Christian Kr\u00e5kevik", "Morten Goodwin", "Anis Yazidi"], "emails": ["morten.goodwin@uia.no", "anis.yazidi@hioa.no", "permissions@acm.org."], "sections": [{"heading": null, "text": "The algorithm is evaluated on the basis of a practical scenario from a basic Java programming course. SBTS is able to adapt quickly and accurately to the composite student skills - even with a variety of student models. Keywords Online Learning; Intelligent Tutoring System; Adaptive Learning Permission to make digital or printed copies of all or part of this work for personal or student use is granted free of charge, provided that copies are not made or distributed for profit or commercial purposes, and that copies bear this notice and the full quote on the first page. Copyrights for components of this work owned by others than ACM must be respected. Credit card abstraction is permitted."}, {"heading": "1. INTRODUCTION", "text": "With the dramatic increase in the world's population, online learning is becoming a major driving force in today's education systems. It is common at many universities to find classes of several hundred students with just one teacher. This lack of resources makes personalized \"one-to-one\" teaching difficult or virtually impossible. Students can reach their full potential because the assigned tasks are general and not tailored to their specific needs and skills. Several studies show that personalized learning is the key to increased fulfillment of potential [13]. One possible solution to the latter problem is to resort to advances in AI so that the teaching process is personalized. Loosely defined as: \"The automation of activities that we associate with human thinking, problem solving, and learning\" (Belleman, 1978)."}, {"heading": "1.1 Context and motivation of our study", "text": "One reason for this is the diversity of the group, which usually leads to teaching methods that fit a subset of students well, but not the whole group. First, they load their hands into a learning management system (LMS) and wait for the teacher's approval. This asynchronous environment has several challenges, namely that it has a long wait time between the students \"work and the feedback. (2) Makes the teacher perform robotic tasks such as correcting many assignments instead of spending time with the students. (3) The asynchronous environment has several challenges, namely that it has a long wait time between work and feedback."}, {"heading": "2. STATE OF ART", "text": "This year, it has reached the point where it will be able to leave the country without being able to leave it."}, {"heading": "3. APPROACH", "text": "The algorithm is based on the principles of the MAB algorithm. It uses a punishment / reward system to balance exploration and exploitation to find a suitable task for the student. The algorithm consists of the following components. Knowledge matrix contains information about the expected knowledge of the student. Punishment and reward All functions related to learning rate, punishment and rewards. Task generation Responsible for creating task sets."}, {"heading": "3.1 Skill-based Task Selection (SBTS)", "text": "The algorithm stores the estimate of student knowledge in a task and qualification matrix. The prototype of this algorithm has eight lines and ten columns in the matrix. Each line describes a topic in the context of programming. We chose some logical names for these lines: if, for, while, methods, classes, exclusions, gui and reflection. One column represents the qualification level or the difficulty of each individual topic. In this implementation, each line topic has ten different difficulty levels. The topics are sorted by difficulty levels, from if to reflection. It should be noted that the algorithm has no knowledge of what the topics are, if for example... reflection. It only has knowledge of the order, which means that for a more advanced level than if, and so on. This means that all other topics can be selected without affecting the algorithm. This means that this is different from working with previous categories than MAX is possible."}, {"heading": "3.2 Punishment and rewards", "text": "The algorithm uses reward and punishment functions to adapt to each individual student by decreasing or increasing the percentage value in each cell of the knowledge matrix. Cell selection is based on a static pattern, and this pattern can be configured to include additional cells in both directions. By default, the algorithm includes the selected cell and a single adjacent cell in the X and Y axes. For the reward function, these cells are located on the right side of the matrix, while punishment includes the left cell. Figure 3 shows a visual representation of the behavior during reward and punishment. The algorithm pushes the student \"down and right\" and \"up and left\" during the reward function during punishment. This behavior forces the learning pattern into a diagonally shaped pattern from (0, IF) to (9, REFLECTION)."}, {"heading": "3.3 Skill level and adaption", "text": "An essential feature of the algorithm is the adjustment process. The algorithm should behave differently from student to student. This is defined by the use of independent qualification levels. The qualification level is an approximation of academic knowledge \u2212 and is presented as a decimal value. The variable is used to calculate reward and punishment severity. If a student tries to solve a difficult task, the result would be a much higher increase in progress compared to solving an easier task. The qualification level is defined by the progress in the knowledge matrix and can be interpreted as a distribution of percentages in the matrix. In the above example (Figure 4), the colored range represents the expected knowledge area based on the current qualification level. Green cells represent the best selection, with less relevant tasks at both ends. It is also possible for the algorithm to calculate the qualification level inaccurately. In the above case, the qualification level is significantly higher than the best selection."}, {"heading": "3.4 Environment", "text": "That's why it's come to the point where it's never come to this, \"he said."}, {"heading": "4. DISCUSSION", "text": "In this section, our findings and results are presented: this is a combination of graphs and empirical values that show that our algorithm is capable of assigning incremental tasks to a student and \"learning\" the AI to achieve different skill levels. In other words, how well is the SBTS able to adapt to the complex environment? The first priority of the test phase was to validate the algorithm. To this end, we conducted a test in which the progress of a student is represented throughout the matrix. The result of this test shows a correlation between the skill level and the student's success rate. We can therefore validate the algorithm as it indicates an increase in skill level depending on the student's chances of success.The different percentages are well connected to a grade scale. For example, the higher difficulty levels 4-5 require an average success rate of 80-100."}, {"heading": "4.1 Case 1 - Static Environment", "text": "This number is compared with a static variable, and if the random number is higher than the static number that the student fails, this gave us the opportunity to investigate how far a good student and a bad student would progress without interfering with each other. Note that this test does not take into account the experience gained in completing the tasks and should only be used as a reference for how far that particular student can get on the basis of a percentage. It also gives us the opportunity to check how the algorithm behaves on a static model. Two charts are presented, one with a static percentage of 70% (good student) and 20% (bad student). Figures 9 and 8 show the average of bad and good students. Students make progress by moving from the category to the category and skill level to the skill level. Each skill level is represented by a chart. This is in many ways a visual representation of Figure 3. Shows that the most students achieve the fastest progress since the 8 is the most expected."}, {"heading": "4.2 Case 2 - Static epsilon", "text": "Parameters - 1000 students, 200 assignments, 100 iterations The next test is based on a static Epsilon value, where we give the student a static chance of success in exploring. This test gives us a bit more information than Test-1, because it uses the student matrix and allows us to take into account the knowledge gained from previous assignments. In this test, the percentages are the same as the previous one (20% for bad and 70% for good), because we wanted to explore whether the student has made more progress than he has acquired the ability to apply previous knowledge.Figure 10 and Figure 11 clearly show that the student is improving the learning rate slightly. We now visualize a student who is able to apply the previous knowledge and also has a pretty good chance of \"guessing\" when he needs to explore an optimal solution (in MAB terms). The same goes for the \"bathroom student,\" who dramatically increases the end result."}, {"heading": "4.3 Case 3 - Dynamic epsilon greedy", "text": "Parameters - 1000 students, 200 assignments, 100 iterations In this example, we use a high number of assignments and students to see how far the average student will get at each level. It is important to remember that due to the random state of Epsilon selection, the test will contain both good and bad students, explaining why some will be able to reach a higher level than others. Figure 12 shows that students adapt and develop how each task is answered. Each student starts at skill level zero and moves toward higher difficulty. On average, each student receives a score of more than 70% in each of the early topics. The curve shape and smoothness changes in the various graphs, indicating several important factors."}, {"heading": "4.4 Future Improvements", "text": "Decay is a method in which a task is selected with less probability if it is selected during the selection phase of the algorithm. It is thought that this would greatly improve the selection phase of the algorithm, as it would reduce the probability of getting recurring tasks. Decay is already implemented, but the current implementation penalizes the selected cell significantly more than originally planned, resulting in a selected cell being selected only once and the student making less progress than expected by the algorithm. Here, the challenge is to find a good formula to punish the selected cell and reward the surrounding cells without noticeably darkening the qualification matrix."}, {"heading": "5. CONCLUSION", "text": "We have proposed two algorithms to improve the ITS system that are inspired by the MAB problem: an algorithm to understand student behavior and assign appropriate tasks, and another algorithm to simulate the complexity of student behavior. Our paradigm involves creating a random walk through a grid to select the tasks. Our solution is probably ready for practical testing in the classroom. This would provide valuable test and validation data for further research."}, {"heading": "6. REFERENCES", "text": "[1] V. Barr and M. Guzdial. Advice on teaching cs, andthe learnability of programming languages 70s. Communications of the ACM, 58 (3): 8-9, 2015. [2] R. E. Bellman et al. An introduction to artificial intelligence, 7 (2): Can computers think? Boyd & Fraser Publishing Company, 1978. [3] P.-Y. O. Benjamin Clement, Didier Roy. Multi-armed bandits for intelligent tutoring systems. [4] B. S. Bloom. The 2 sigma problem: The search formethods of group instruction as effective as one-to-one tutoring. Educational researcher, 13 (6): 4-16, 1984. P. Brusilovsky and E. Milla. n. User models for adaptive hypermedia and adaptive education systems. In The adaptive web, pp. 3-53. Springer-Verlag, 2007. [6] B. Clement, D. Ouyer."}], "references": [{"title": "Advice on teaching cs, and  the learnability of programming languages", "author": ["V. Barr", "M. Guzdial"], "venue": "Communications of the ACM,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2015}, {"title": "An introduction to artificial intelligence: Can computers think", "author": ["R.E. Bellman"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1978}, {"title": "Multi-armed bandits for intelligent tutoring systems", "author": ["P.-Y.O. Benjamin Clement", "Didier Roy"], "venue": "Journal of Educational Data Mining,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "The 2 sigma problem: The search for  methods of group instruction as effective as one-to-one tutoring", "author": ["B.S. Bloom"], "venue": "Educational researcher,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1984}, {"title": "User models for adaptive hypermedia and adaptive educational systems", "author": ["P. Brusilovsky", "E. Mill\u00e1n"], "venue": "In The adaptive web,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}, {"title": "Online optimization of teaching sequences with multi-armed bandits", "author": ["B. Clement", "D. Roy", "P.-Y. Oudeyer", "M. Lopes"], "venue": "In 7th International Conference on Educational Data Mining,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Educating programming students for the industry", "author": ["M. Goodwin", "C. Auby", "R. Andersen", "V. Barstad"], "venue": "Digital Media in Teaching and its Added Value,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Teaching programming to large student groups through test driven development", "author": ["M. Goodwin", "T. Drange"], "venue": "In the International Conference on Computer Supported Education (CSEDU),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Experiences with efficient methodologies for teaching computer programming to geoscientists", "author": ["C.T. Jacobs", "G.J. Gorman", "L. Craig"], "venue": "arXiv preprint arXiv:1505.05425,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Ask-elle: A haskell tutor. In 21st Century Learning for 21st Century Skills, pages 453\u2013458", "author": ["J. Jeuring", "A. Gerdes", "B. Heeren"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "The impact on individualizing student models on necessary practice opportunities", "author": ["J.I. Lee", "E. Brunskill"], "venue": "International Educational Data Mining Society,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "Student motivation to learn", "author": ["L.S. Lumsden"], "venue": "eric digest, number", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1994}, {"title": "Personalised learning: building a new relationship with schools. In Speech by the Minister of State for School Standards to the North of England", "author": ["D. Miliband"], "venue": "Education Conference,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2004}, {"title": "Bayesian networks for student model engineering", "author": ["E. Mill\u00e1n", "T. Loboda", "J.L. P\u00e9rez-de-la Cruz"], "venue": "Computers & Education,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Difficulties in learning and teaching programming views of students and tutors", "author": ["I. Milne", "G. Rowe"], "venue": "Education and Information technologies,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2002}, {"title": "Advances in intelligent tutoring systems, volume 308", "author": ["R. Nkambou", "R. Mizoguchi", "J. Bourdeau"], "venue": "Springer Science & Business Media,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Modeling Individualization in a Bayesian Networks IMplementation of Knowledge Tracing", "author": ["N.T. Pardos", "Z.A. Heffernan"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2010}, {"title": "Intelligent tutoring systems: Lessons learned", "author": ["J. Psotka", "L.D. Massey", "S.A. Mutter"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1988}, {"title": "What do teachers teach in introductory programming", "author": ["C. Schulte", "J. Bennedsen"], "venue": "In Proceedings of the second international workshop on Computing education research,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2006}, {"title": "Intelligent tutoring systems", "author": ["D. Sleeman", "J.S. Brown"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1982}, {"title": "Individualized bayesian knowledge tracing models", "author": ["M.V. Yudelson", "K.R. Koedinger", "G.J. Gordon"], "venue": "In Artificial intelligence in education,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2013}, {"title": "An affective learning environment for java", "author": ["R. Zatarain Cabada", "M.L. Barron Estrada", "F. Gonzalez Hernandez", "R. Oramas Bustillos"], "venue": "In 2015 International Conference on Advanced Learning Technologies (ICALT),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2015}], "referenceMentions": [{"referenceID": 12, "context": "Several studies show that personalised learning is the key to increased fulfillment of potential [13].", "startOffset": 97, "endOffset": 101}, {"referenceID": 1, "context": "Loosely, AI is defined as: \u201cThe automation of activities that we associate with human thinking, activities such as decision-making, problem solving and learning\u201d (Belleman, 1978)[2].", "startOffset": 178, "endOffset": 181}, {"referenceID": 19, "context": "Some of the first mentions of an Intelligent Tutoring System (ITS) dates back to 1982 [20], where D.", "startOffset": 86, "endOffset": 90}, {"referenceID": 3, "context": "[4] published a study demonstrating that individual tutoring is twice as effective as group teaching.", "startOffset": 0, "endOffset": 3}, {"referenceID": 15, "context": "This boosted the interest for researches to pursue working on the ultimate goal of providing a system as good as a teacher and to supply each student with his/her own virtual tutor [16].", "startOffset": 181, "endOffset": 185}, {"referenceID": 17, "context": "struction or feedback to learners\u201d [18].", "startOffset": 35, "endOffset": 39}, {"referenceID": 18, "context": "Teaching programming to large student groups is challenging [19, 15, 1, 9].", "startOffset": 60, "endOffset": 74}, {"referenceID": 14, "context": "Teaching programming to large student groups is challenging [19, 15, 1, 9].", "startOffset": 60, "endOffset": 74}, {"referenceID": 0, "context": "Teaching programming to large student groups is challenging [19, 15, 1, 9].", "startOffset": 60, "endOffset": 74}, {"referenceID": 8, "context": "Teaching programming to large student groups is challenging [19, 15, 1, 9].", "startOffset": 60, "endOffset": 74}, {"referenceID": 7, "context": "The official description states that the goal of the project is to establish new tutoring technology for students enrolled in programming courses [8][7].", "startOffset": 146, "endOffset": 149}, {"referenceID": 6, "context": "The official description states that the goal of the project is to establish new tutoring technology for students enrolled in programming courses [8][7].", "startOffset": 149, "endOffset": 152}, {"referenceID": 13, "context": "An approach for such a model (from now referred to as the student model) is represented in some form in every paper [14][3][6][5] reviewed.", "startOffset": 116, "endOffset": 120}, {"referenceID": 2, "context": "An approach for such a model (from now referred to as the student model) is represented in some form in every paper [14][3][6][5] reviewed.", "startOffset": 120, "endOffset": 123}, {"referenceID": 5, "context": "An approach for such a model (from now referred to as the student model) is represented in some form in every paper [14][3][6][5] reviewed.", "startOffset": 123, "endOffset": 126}, {"referenceID": 4, "context": "An approach for such a model (from now referred to as the student model) is represented in some form in every paper [14][3][6][5] reviewed.", "startOffset": 126, "endOffset": 129}, {"referenceID": 2, "context": "As an example of this, we can review the work reported in [3] where the authors resort to a combination of a student model and a cognitive model to create a tutoring model.", "startOffset": 58, "endOffset": 61}, {"referenceID": 10, "context": "The paper also suggests the use of POMDPs is mostly used on a population of students, not individuals, and this approach has been proven to be suboptimal in an ITS setting [11][3].", "startOffset": 172, "endOffset": 176}, {"referenceID": 2, "context": "The paper also suggests the use of POMDPs is mostly used on a population of students, not individuals, and this approach has been proven to be suboptimal in an ITS setting [11][3].", "startOffset": 176, "endOffset": 179}, {"referenceID": 16, "context": "There are strong indicators that BKT models accounting for the student variance is superior to the BK model [17][21].", "startOffset": 108, "endOffset": 112}, {"referenceID": 20, "context": "There are strong indicators that BKT models accounting for the student variance is superior to the BK model [17][21].", "startOffset": 112, "endOffset": 116}, {"referenceID": 2, "context": "This partially eliminates the criticism given by [3].", "startOffset": 49, "endOffset": 52}, {"referenceID": 11, "context": "[12] investigated the optimal strategy for motivation, and found that one of the main keystones for a motivational experience is task mastery.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "This is backed up by [3] who proposes a solution where the student is presented with tasks that are neither too easy nor too hard, but slightly beyond their current abilities.", "startOffset": 21, "endOffset": 24}, {"referenceID": 2, "context": "We propose a solution where each student starts with a predefined optimal-difficulty based on the findings in [3] which adapts over time and changes the learning-rate based on the student answers.", "startOffset": 110, "endOffset": 113}, {"referenceID": 2, "context": "We have looked at several candidates in this study, including multi armed bandits [3], bayesian-networks [14] and neuralnetworks [22], each with its own advantages.", "startOffset": 82, "endOffset": 85}, {"referenceID": 13, "context": "We have looked at several candidates in this study, including multi armed bandits [3], bayesian-networks [14] and neuralnetworks [22], each with its own advantages.", "startOffset": 105, "endOffset": 109}, {"referenceID": 21, "context": "We have looked at several candidates in this study, including multi armed bandits [3], bayesian-networks [14] and neuralnetworks [22], each with its own advantages.", "startOffset": 129, "endOffset": 133}, {"referenceID": 2, "context": "These systems are shown to be reliable and good, but comprehensive data models are required so as to achieve optimal operation [3].", "startOffset": 127, "endOffset": 130}, {"referenceID": 2, "context": "The paper [3] proposes a MAB for seven to eight years old school-children learning to decompose numbers while manipulating money.", "startOffset": 10, "endOffset": 13}, {"referenceID": 21, "context": "As representative studies, we identified Java Sensei [22] (sep 2015) and ASK-ELLE [10] (2012).", "startOffset": 53, "endOffset": 57}, {"referenceID": 9, "context": "As representative studies, we identified Java Sensei [22] (sep 2015) and ASK-ELLE [10] (2012).", "startOffset": 82, "endOffset": 86}, {"referenceID": 2, "context": "Even though a generic solution is presented in [3] relying on MAB, actual implementations for such a system in the context of programming has not been found.", "startOffset": 47, "endOffset": 50}, {"referenceID": 2, "context": "Note that this is notably different than previous work using MAB [3] since our approach is probabilistic, it allows choosing all categories according to some probability in line with how confident we are that the student has mastered the area.", "startOffset": 65, "endOffset": 68}], "year": 2016, "abstractText": "With the increasing popularity of online learning, intelligent tutoring systems are regaining increased attention. In this paper, we introduce adaptive algorithms for personalized assignment of learning tasks to student so that to improve his performance in online learning environments. As main contribution of this paper, we propose a a novel SkillBased Task Selector (SBTS) algorithm which is able to approximate a student\u2019s skill level based on his performance and consequently suggest adequate assignments. The SBTS is inspired by the class of multi-armed bandit algorithms. However, in contrast to standard multi-armed bandit approaches, the SBTS aims at acquiring two criteria related to student learning, namely: which topics should the student work on, and what level of difficulty should the task be. The SBTS centers on innovative reward and punishment schemes in a task and skill matrix based on the student behaviour. To verify the algorithm, the complex student behaviour is modelled using a neighbour node selection approach based on empirical estimations of a students learning curve. The algorithm is evaluated with a practical scenario from a basic java programming course. The SBTS is able to quickly and accurately adapt to the composite student competency \u2014 even with a multitude of student models.", "creator": "LaTeX with hyperref package"}}}