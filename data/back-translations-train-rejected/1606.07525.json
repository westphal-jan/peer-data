{"id": "1606.07525", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Jun-2016", "title": "Relating Knowledge and Coordinated Action: The Knowledge of Preconditions Principle", "abstract": "The Knowledge of Preconditions principle (KoP) is proposed as a widely applicable connection between knowledge and action in multi-agent systems. Roughly speaking, it asserts that if some condition is a necessary condition for performing a given action A, then knowing that this condition holds is also a necessary condition for performing A. Since the specifications of tasks often involve necessary conditions for actions, the KoP principle shows that such specifications induce knowledge preconditions for the actions. Distributed protocols or multi-agent plans that satisfy the specifications must ensure that this knowledge be attained, and that it is detected by the agents as a condition for action. The knowledge of preconditions principle is formalised in the runs and systems framework, and is proven to hold in a wide class of settings. Well-known connections between knowledge and coordinated action are extended and shown to derive directly from the KoP principle: a \"common knowledge of preconditions\" principle is established showing that common knowledge is a necessary condition for performing simultaneous actions, and a \"nested knowledge of preconditions\" principle is proven, showing that coordinating actions to be performed in linear temporal order requires a corresponding form of nested knowledge.", "histories": [["v1", "Fri, 24 Jun 2016 00:32:41 GMT  (75kb,D)", "http://arxiv.org/abs/1606.07525v1", "In Proceedings TARK 2015,arXiv:1606.07295"]], "COMMENTS": "In Proceedings TARK 2015,arXiv:1606.07295", "reviews": [], "SUBJECTS": "cs.MA cs.AI cs.DC cs.LO", "authors": ["yoram moses"], "accepted": false, "id": "1606.07525"}, "pdf": {"name": "1606.07525.pdf", "metadata": {"source": "CRF", "title": "Relating Knowledge and Coordinated Action: The Knowledge of Preconditions Principle", "authors": ["Yoram Moses"], "emails": ["moses@ee.technion.ac.il"], "sections": [{"heading": null, "text": "R. Ramanujam (ed.): TARK 2015 EPTCS 215, 2016, pp. 231-245, doi: 10.4204 / EPTCS.215.17c \u00a9 Yoram Moses This work is licensed under the Creative Commons Attribution License.Relating Knowledge and Coordinated Action: The Knowledge of Preconditions PrincipleYoram Moses - Israel Institute of Technologymoses @ ee.technion.acilThe Knowledge of Preconditions Principle (KoP) is proposed as a widely applicable link between knowledge and action in multi-agent systems. Roughly speaking, it states that if a condition is a necessary condition for the execution of a particular action, knowledge thereof is also a necessary condition for the execution of tasks. Since the specifications of tasks often include necessary conditions for action, the KoP principle shows that such specifications create knowledge preconditions for the actions, the shared protocols or plans must be determined by the co-agent principle that the knowledge is a common principle that the co-principle is based on the co-action principle."}, {"heading": "1 Introduction", "text": "While epistemology, the study of knowledge, has been an interesting topic in philosophical circles for centuries and perhaps even millennia, it has experienced a hectic activity and application in other fields such as AI [19], game theory [2], and distributed computing [13] over the past half century. At least in the latter two areas, a particular, information-based concept of knowledge plays a prominent and useful role. This paper suggests an essential link between knowledge and action in such environments.The use of doesi (\u03b1) to designate \"Agent i executes actions\" and Ki\u0442 to designate that Agent i knows the fact, the connection can be intuitively formulated as follows: Knowledge of Predictive Principles (KoP): If \"is a necessary condition for doesi (\u03b1), then Ki\u0442 is a necessary condition for doesi (\u03b1). This statement seems deceptively simple."}, {"heading": "75 100 80 100", "text": "This paper is structured as follows: Section 1.1 illustrates the central role of knowledge in a natural application of distributed systems. Section 1.2 provides a high-level discussion of knowledge about the preconditions principle and its link to coordinated action. In Section 2, we review and discuss the modelling of knowledge based on the runs and system models of distributed systems [10]. A formal declaration and proof of the preconditions of the KoP are provided in Section 3. Subsequently, Section 4 uses the CoP to establish a common knowledge of the preconditions principle. It is stated that in order to carry out coordinated action at the same time, actors must first acquire a common knowledge of the preconditions of the actions. An example of their application is provided in Section 4.1. Section 5 represents an additional use of the KoP and shows that the coordination of a sequence of actions in a prescribed chronological order requires knowledge of their preconditions."}, {"heading": "1.1 The Case for Knowledge in Distributed Systems", "text": "Why should knowledge play a central role in distributed computing? As shown in [13], most people who design this knowledge, or even try to study the workings of a distributed protocol, are quick to speak in terms of knowledge, to make statements such as \"as soon as the process receives an acknowledgement, he knows that the other process is ready.\" An essential aspect of distributed systems is the fact that an agent chooses what action can be performed based on the local information available to him, which typically provides only a partial overview of the overall state of the system. To get a sense of the role of knowledge in distributed systems, consider the following example. Example 1. Given that a distributed network is modeled by a graph, with agents located at the nodes, and the edges available for communication candidates (see Figure 1). In the problem we call Computing the Max (or CTM for short), each agent begins with a natural number as a starting vi.N."}, {"heading": "1.2 KoP and Coordination", "text": "The fact that Max = c is a necessary condition for printing c is an essential feature of the CTM problem, which may not be paid for. We have argued that in fact K1 (Max = c) is a necessary condition for printing c, as the KoP would suggest, but this is just one example. Consider an example 2. Consider a bank whose ATMs are designed so that an ATM can only dispense cash to a customer whose account has a sufficiently large positive balance. Along comes Alice, who has a great positive balance and is trying to get a modest sum from the ATM. However, on this day the ATM is unable to communicate with the rest of the bank and refuses to pay Alice. Despite the fact that the ATM frustrates her creditworthiness and rejects her request. Apparently, given its specification, the ATM has no choice."}, {"heading": "2 Modeling Knowledge Using Runs and Systems", "text": "A global state is an \"instantaneous snapshot\" of the system at a given time. Let G designate a set of global states. Time is identified by the natural numbers N = {0,1,2,...}. A run is a function r: N \u2192 G that links a global state to any moment of time. Thus, r (0) is the initial state of the run, r (1) is the next global state, and so on. A system is a series of runs. The same global state can appear in different runs, and in some systems it may even appear more than once in the same run. A central term in our framework is that of the local state of an agent, whose role is to gather the local information of the agent at a given time. (The exact details of the local state depend on the application. It could be the complete content of an agent at a given time, or the complete sequence that it represents for that particular state."}, {"heading": "2.1 Syntax and Semantics", "text": "We are interested in a propositional logic of knowledge in which propositional facts and epistemic facts can be viewed from a single point. Facts are considered true or false at one point (r, t) in relation to a system. Formally, one considers a set of primitive suggestions and a set of P = {1,.., n} of agents in the system, we define a propository language L Kn () by \"closing\" it by negating \"\u00ac\" and conjunction, as well as among knowledge operators Ki for all i-P (see [14]). Thus, for example, if p, q and q are primitive suggestions and i, j and P are agents, then Ki p \"K\" jq is a formula in L Kn. Typically, we omit the sentences and call L Kn the language for knowledge with n agents.In a multi-agent system, facts about the world, as well as the knowledge that agents have, can be dynamically changed from one point to another."}, {"heading": "3 Formalizing the Knowledge of Preconditions Principle", "text": "Intuitively, the KoP states that if a certain condition is necessary for an agent to perform an action, the agent must actually know why he should act. In other words, knowledge is also a necessary condition for performing the action. We formalize the claim and prove it as follows. We say that it is a necessary condition for action if (R, r, t) is local action if (R, t) local action is possible. (R) Obviously, the customer's good credit standing is a necessary condition for issuing cash. That is, assuming that a bank is correctly implementing an ATM protocol that fulfills the credit requirement. Then, in System R, consisting of the totality of all possible (ongoing) bank transactions, good credit is a necessary condition for receiving cash."}, {"heading": "4 Coordinating Simultaneous Actions", "text": "Remember that the language L Kn contains formulas in which knowledge operators can be nested into arbitrary finite depths. It is sometimes useful to consider a state of knowledge called common knowledge, which goes beyond any particular nested formula. Intuitively, a fact is universally known when everyone knows that every man knows the fact that every man knows common knowledge, by any finite depth. Common knowledge has a number of equivalent definitions, one of which is as follows: Definition 4.1 (common knowledge). Fix a set of agents G and a fact. We point out the fact that common knowledge to G. Its truth at points of a system R is defined by: (R, r, t) = CG2."}, {"heading": "4.1 Common Knowledge and the Firing Squad Problem", "text": "In this case, fire fighting can stand for a simultaneous change in a database that takes place at different points in the system, or it must take place at other points in the system."}, {"heading": "5 Temporally Ordering Actions", "text": "So far, we have seen two essential links between knowledge and coordinated action: the execution of actions requires knowledge of their necessary conditions, and the execution of simultaneous actions requires common knowledge of their necessary conditions. We now expand the connection between states of knowledge and coordination by showing that the temporal order of actions depends on the degree to which we acquire knowledge of necessary conditions. Following [5] we define temporally ordered actions: Definition 5.1 (Ben Zvi and Moses) is a necessary condition for actions < 1,. Let us observe that this definition does not force action j to occur in a run in which the action j \u2212 1 occurs. Rather, if an action j is performed in a given run, it must be preceded by all actions."}, {"heading": "6 Discussion", "text": "In other words, they will be able to demonstrate that they are able, that they are able to assert themselves and that they are able to assert themselves."}], "references": [{"title": "Distributed Computing: Fundamentals, Simulations and Advanced Topics", "author": ["Hagit Attiya", "Jennifer Welch"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "Agreeing to disagree", "author": ["R.J. Aumann"], "venue": "Annals of Statistics", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1976}, {"title": "Agent-Time Epistemics and Coordination", "author": ["Ido Ben-Zvi", "Yoram Moses"], "venue": "Proceedings of ICLA, pp. 97\u2013108,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "The Shape of Reactive Coordination Tasks", "author": ["Ido Ben-Zvi", "Yoram Moses"], "venue": "Proceedings of TARK, TARK XIV,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Beyond Lamport\u2019s Happened-before: On Time Bounds and the Ordering of Events in Distributed Systems", "author": ["Ido Ben-Zvi", "Yoram Moses"], "venue": "J. ACM 61(2),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "How processes learn", "author": ["K.M. Chandy", "J. Misra"], "venue": "Distributed Computing", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1986}, {"title": "An optimal self-stabilizing firing squad", "author": ["Danny Dolev", "Ezra N Hoch", "Yoram Moses"], "venue": "SIAM Journal on Computing", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Knowledge and common knowledge in a Byzantine environment: crash failures", "author": ["C. Dwork", "Y. Moses"], "venue": "Information and Computation", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1990}, {"title": "Reasoning about Knowledge", "author": ["R. Fagin", "J.Y. Halpern", "Y. Moses", "M.Y. Vardi"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Common knowledge revisited", "author": ["Ronald Fagin", "Joseph Y. Halpern", "Yoram Moses", "Vardi. Moshe Y"], "venue": "Annals of Pure and Applied Logic", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "Timely common knowledge: Characterising asymmetric distributed coordination via vectorial fixed points", "author": ["Y Gonczarowski", "Y Moses"], "venue": "Proceedings of TARK XIV", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Knowledge and Common Knowledge in a Distributed Environment", "author": ["J.Y. Halpern", "Y. Moses"], "venue": "Journal of the ACM 37(3),", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1990}, {"title": "A guide to completeness and complexity for modal logics of knowledge and belief", "author": ["J.Y. Halpern", "Y. Moses"], "venue": "Artificial Intelligence", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1992}, {"title": "A Characterization of Eventual Byzantine Agreement", "author": ["Joseph Y. Halpern", "Yoram Moses", "Orli Waarts"], "venue": "SIAM J. Comput", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2001}, {"title": "Transforming worst-case optimal solutions for simultaneous tasks into all-case optimal solutions", "author": ["Maurice P Herlihy", "Yoram Moses", "Mark R Tuttle"], "venue": "Proceedings of the 30th annual ACM SIGACT-SIGOPS symposium on Principles of distributed computing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Distributed Systems-Towards a Formal Approach", "author": ["G\u00e9rard Le Lann"], "venue": "IFIP Congress,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1977}, {"title": "Convention, A Philosophical Study", "author": ["D. Lewis"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1969}, {"title": "Continuous consensus via common knowledge", "author": ["Tal Mizrahi", "Yoram Moses"], "venue": "Distributed Computing", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2008}, {"title": "Continuous consensus with ambiguous failures", "author": ["Tal Mizrahi", "Yoram Moses"], "venue": "Distributed Computing and Networking,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "Programming simultaneous actions using common knowledge", "author": ["Y. Moses", "M.R. Tuttle"], "venue": "Algorithmica 3,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1988}, {"title": "Consistent coordination and continual common knowledge", "author": ["G. Neiger"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1990}, {"title": "Common knowledge and consistent simultaneous coordination", "author": ["G. Neiger", "M.R. Tuttle"], "venue": "Distributed Computing", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1993}, {"title": "Using knowledge to optimally achieve coordination in distributed systems", "author": ["Gil Neiger", "Rida A Bazzi"], "venue": "Theoretical computer science", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1999}, {"title": "Levels of knowledge in distributed computing", "author": ["R. Parikh", "P. Krasucki"], "venue": "Sa\u0304dhana\u0304", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1992}, {"title": "Implementing fault-tolerant services using the state machine approach: A tutorial", "author": ["Fred B Schneider"], "venue": "ACM Computing Surveys (CSUR) 22(4),", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1990}, {"title": "Reexamination of the perfectness concept for equilibrium points in extensive games", "author": ["R. Selten"], "venue": "International Journal of Game Theory", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1975}], "referenceMentions": [{"referenceID": 1, "context": "While epistemology, the study of knowledge, has been a topic of interest in philosophical circles for centuries and perhaps even millennia, in the last half century it has seen a flurry of activity and applications in other fields such as AI [19], game theory [2] and distributed computing [13].", "startOffset": 260, "endOffset": 263}, {"referenceID": 11, "context": "While epistemology, the study of knowledge, has been a topic of interest in philosophical circles for centuries and perhaps even millennia, in the last half century it has seen a flurry of activity and applications in other fields such as AI [19], game theory [2] and distributed computing [13].", "startOffset": 290, "endOffset": 294}, {"referenceID": 8, "context": "In Section 2 we review and discuss the modelling of knowledge in the runs and systems model of distributed systems based on [10].", "startOffset": 124, "endOffset": 128}, {"referenceID": 11, "context": "Why should knowledge play a central role in distributed computing? As pointed out in [13], most everyone who designs or even just tries to study the workings of a distributed protocol is quickly found talking in terms of knowledge, making statements such as \u201conce the process receives an acknowledgement, it knows that the other process is ready.", "startOffset": 85, "endOffset": 89}, {"referenceID": 0, "context": "In fact, a central problem called Leader Election, for example, is often solved by computing a node with maximal ID [1, 17].", "startOffset": 116, "endOffset": 123}, {"referenceID": 15, "context": "In fact, a central problem called Leader Election, for example, is often solved by computing a node with maximal ID [1, 17].", "startOffset": 116, "endOffset": 123}, {"referenceID": 24, "context": "This is quite different from common practice in engineering distributed implementations [28].", "startOffset": 88, "endOffset": 92}, {"referenceID": 3, "context": "Indeed, if \u03c8 is a necessary condition for \u03b1B, then Alice must know that \u201cBob knew \u03c8 at least 5 time steps ago\u201d when she acts, since knowing \u03c8 is a necessary condition for Bob\u2019s performing \u03b1B (see [4, 5]).", "startOffset": 196, "endOffset": 202}, {"referenceID": 4, "context": "Indeed, if \u03c8 is a necessary condition for \u03b1B, then Alice must know that \u201cBob knew \u03c8 at least 5 time steps ago\u201d when she acts, since knowing \u03c8 is a necessary condition for Bob\u2019s performing \u03b1B (see [4, 5]).", "startOffset": 196, "endOffset": 202}, {"referenceID": 8, "context": "We now review the runs and systems model of knowledge of [10, 13].", "startOffset": 57, "endOffset": 65}, {"referenceID": 11, "context": "We now review the runs and systems model of knowledge of [10, 13].", "startOffset": 57, "endOffset": 65}, {"referenceID": 8, "context": "The interested reader should consult [10] for more details.", "startOffset": 37, "endOffset": 41}, {"referenceID": 12, "context": ",n} of the agents in the system, we define a propositional language L K n (\u03a6) by closing \u03a6 under negation \u2018\u00ac\u2019 and conjunction \u2018\u2227\u2019, as well as under knowledge operators Ki for all i \u2208 P (see [14]).", "startOffset": 190, "endOffset": 194}, {"referenceID": 12, "context": "1, the \u2248i relations are equivalence relations, each knowledge operator Ki satisfies the S5 axiom system [14].", "startOffset": 104, "endOffset": 108}, {"referenceID": 8, "context": "They correspond in that (R,r, t) |= \u03c6 iff MR,(r, t) |= \u03c6 is guaranteed for all (r, t) \u2208 Pts(R) = SR and \u03c6 \u2208L K n (\u03a6) (for details, see [10]).", "startOffset": 135, "endOffset": 139}, {"referenceID": 8, "context": "The formalism of [10] defines protocols as explicit objects, and defines contexts that describe the possible initial states and the model of computation.", "startOffset": 17, "endOffset": 21}, {"referenceID": 16, "context": "Common knowledge, a term coined by Lewis in [18], plays an important role in the analysis of games [2], distributed systems [13], and many other multi-agent settings.", "startOffset": 44, "endOffset": 48}, {"referenceID": 1, "context": "Common knowledge, a term coined by Lewis in [18], plays an important role in the analysis of games [2], distributed systems [13], and many other multi-agent settings.", "startOffset": 99, "endOffset": 102}, {"referenceID": 11, "context": "Common knowledge, a term coined by Lewis in [18], plays an important role in the analysis of games [2], distributed systems [13], and many other multi-agent settings.", "startOffset": 124, "endOffset": 128}, {"referenceID": 5, "context": "Since common knowledge requires infinitely many facts to hold, it is not a priori obvious that CG\u03c6 can be attained at a reasonable cost, or even whether it can ever be attained at all, in settings of interest (see [7, 10, 13]).", "startOffset": 214, "endOffset": 225}, {"referenceID": 8, "context": "Since common knowledge requires infinitely many facts to hold, it is not a priori obvious that CG\u03c6 can be attained at a reasonable cost, or even whether it can ever be attained at all, in settings of interest (see [7, 10, 13]).", "startOffset": 214, "endOffset": 225}, {"referenceID": 11, "context": "Since common knowledge requires infinitely many facts to hold, it is not a priori obvious that CG\u03c6 can be attained at a reasonable cost, or even whether it can ever be attained at all, in settings of interest (see [7, 10, 13]).", "startOffset": 214, "endOffset": 225}, {"referenceID": 9, "context": "It is well-known (see [11, 13]) that common knowledge of a fact is observed simultaneously at all agents it involves.", "startOffset": 22, "endOffset": 30}, {"referenceID": 11, "context": "It is well-known (see [11, 13]) that common knowledge of a fact is observed simultaneously at all agents it involves.", "startOffset": 22, "endOffset": 30}, {"referenceID": 6, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 7, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 14, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 17, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 18, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 19, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 20, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 22, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 21, "context": "There is an extensive literature on using common knowledge to obtain optimal protocols for simultaneous tasks [8, 9, 16, 20, 21, 23, 24, 26, 25].", "startOffset": 110, "endOffset": 144}, {"referenceID": 11, "context": "Moreover, one of the main insights from the analysis of [13] and of [11] is that when simultaneous actions are performed, the participating agents have common knowledge that they are being performed.", "startOffset": 56, "endOffset": 60}, {"referenceID": 9, "context": "Moreover, one of the main insights from the analysis of [13] and of [11] is that when simultaneous actions are performed, the participating agents have common knowledge that they are being performed.", "startOffset": 68, "endOffset": 72}, {"referenceID": 4, "context": "Following [5], we define temporally ordered actions:", "startOffset": 10, "endOffset": 13}, {"referenceID": 8, "context": "The notion of perfect recall, capturing the assumption that agents remember all events that they take part in, is popular in the analysis of games and multi-agent systems [10, 29].", "startOffset": 171, "endOffset": 179}, {"referenceID": 25, "context": "The notion of perfect recall, capturing the assumption that agents remember all events that they take part in, is popular in the analysis of games and multi-agent systems [10, 29].", "startOffset": 171, "endOffset": 179}, {"referenceID": 4, "context": "3 was proved in [5].", "startOffset": 16, "endOffset": 19}, {"referenceID": 5, "context": "Indeed, in a seminal paper [7], Chandy and Misra showed that in asynchronous systems R, if (R,r, t) |= \u00ac\u03c6 and at a time t \u2032 > t (R,r, t \u2032) |= K jK j\u22121 \u00b7 \u00b7 \u00b7K1\u03c6 , then there must be a message chain in the run r between times t and t \u2032, passing through the agents 1,2,.", "startOffset": 27, "endOffset": 30}, {"referenceID": 4, "context": "More recently, Ben Zvi and Moses extended Chandy and Misra\u2019s work to systems in which communication is not asynchronous, but rather agents may have access to clocks and the transmission time for each of the channels is bounded [5].", "startOffset": 227, "endOffset": 230}, {"referenceID": 23, "context": "Finally, Parikh and Krasucki analyze the ability to create levels of knowledge consisting of collections of nested knowledge formulas in [27].", "startOffset": 137, "endOffset": 141}, {"referenceID": 13, "context": "The work of [6] complements an earlier work by Halpern, Moses and Waarts [15], in which a fixed point analysis of optimal consensus was obtained.", "startOffset": 73, "endOffset": 77}, {"referenceID": 10, "context": "Gonczarowski and Moses used the KoP to analyze the epistemic requirements of more general forms of coordination [12].", "startOffset": 112, "endOffset": 116}, {"referenceID": 2, "context": "The papers [3, 4, 5, 12] together can all be viewed as making use of the KoP to provide insights into the interaction between time and communication for coordinating actions in a distributed and multi-agent system.", "startOffset": 11, "endOffset": 24}, {"referenceID": 3, "context": "The papers [3, 4, 5, 12] together can all be viewed as making use of the KoP to provide insights into the interaction between time and communication for coordinating actions in a distributed and multi-agent system.", "startOffset": 11, "endOffset": 24}, {"referenceID": 4, "context": "The papers [3, 4, 5, 12] together can all be viewed as making use of the KoP to provide insights into the interaction between time and communication for coordinating actions in a distributed and multi-agent system.", "startOffset": 11, "endOffset": 24}, {"referenceID": 10, "context": "The papers [3, 4, 5, 12] together can all be viewed as making use of the KoP to provide insights into the interaction between time and communication for coordinating actions in a distributed and multi-agent system.", "startOffset": 11, "endOffset": 24}], "year": 2016, "abstractText": "The Knowledge of Preconditions principle (KoP) is proposed as a widely applicable connection between knowledge and action in multi-agent systems. Roughly speaking, it asserts that if some condition \u03c6 is a necessary condition for performing a given action \u03b1 , then knowing \u03c6 is also a necessary condition for performing \u03b1 . Since the specifications of tasks often involve necessary conditions for actions, the KoP principle shows that such specifications induce knowledge preconditions for the actions. Distributed protocols or multi-agent plans that satisfy the specifications must ensure that this knowledge be attained, and that it is detected by the agents as a condition for action. The knowledge of preconditions principle is formalised in the runs and systems framework, and is proven to hold in a wide class of settings. Well-known connections between knowledge and coordinated action are extended and shown to derive directly from the KoP principle: a common knowledge of preconditions principle is established showing that common knowledge is a necessary condition for performing simultaneous actions, and a nested knowledge of preconditions principle is proven, showing that coordinating actions to be performed in linear temporal order requires a corresponding form of nested knowledge.", "creator": "LaTeX with hyperref package"}}}