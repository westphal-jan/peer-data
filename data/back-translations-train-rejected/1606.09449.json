{"id": "1606.09449", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jun-2016", "title": "Clique-Width and Directed Width Measures for Answer-Set Programming", "abstract": "Disjunctive Answer Set Programming (ASP) is a powerful declarative programming paradigm whose main decision problems are located on the second level of the polynomial hierarchy. Identifying tractable fragments and developing efficient algorithms for such fragments are thus important objectives in order to complement the sophisticated ASP systems available to date. Hard problems can become tractable if some problem parameter is bounded by a fixed constant; such problems are then called fixed-parameter tractable (FPT). While several FPT results for ASP exist, parameters that relate to directed or signed graphs representing the program at hand have been neglected so far. In this paper, we first give some negative observations showing that directed width measures on the dependency graph of a program do not lead to FPT results. We then consider the graph parameter of signed clique-width and present a novel dynamic programming algorithm that is FPT w.r.t. this parameter. Clique-width is more general than the well-known treewidth, and, to the best of our knowledge, ours is the first FPT algorithm for bounded clique-width for reasoning problems beyond SAT.", "histories": [["v1", "Thu, 30 Jun 2016 12:14:33 GMT  (40kb)", "https://arxiv.org/abs/1606.09449v1", "A short version of this paper has been accepted to ECAI 2016"], ["v2", "Fri, 30 Dec 2016 12:00:28 GMT  (40kb)", "http://arxiv.org/abs/1606.09449v2", "A short version of this paper has been accepted to ECAI 2016 and TAASP 2016"]], "COMMENTS": "A short version of this paper has been accepted to ECAI 2016", "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.DS", "authors": ["bernhard bliem", "sebastian ordyniak", "stefan woltran"], "accepted": false, "id": "1606.09449"}, "pdf": {"name": "1606.09449.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["(bliem@dbai.tuwien.ac.at)", "(sordyniak@gmail.com)", "(woltran@dbai.tuwien.ac.at)"], "sections": [{"heading": null, "text": "ar Xiv: 160 6.09 449v 2 [cs.A I] 3 0D ec2 01"}, {"heading": "1 Introduction", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "2 Preliminaries", "text": "An undirected graph G is a tuple (V) that goes from G (V) -V (V) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V (G) -V) -V (G) -V (G) -V) -V (G) -V (G) -V) -V (D) is a tuple (V) where V or V (D) is the vertex group and A (D) is the strongly connected component of a diagram D."}, {"heading": "3 Directed Width Measures", "text": "Since many representations of ASP programs with respect to steered graphs are based on a certain \"proximity to the city,\" it is natural to consider parameters for ASP that are relevant to steered graphs. (Over the last two decades, various steered graph graphs have been introduced that are more suitable for steered graphs than for steered graphs on which they are based.) Since these widths are usually smaller than steered graphs, it is worth considering them for problems that have already set parameters. In particular, all these measures are zero to steered acyclic graphs (DAGs), but the fidelity width of DAGs can be arbitrarily high."}, {"heading": "4 Clique-Width", "text": "The results in [31] imply that limiting the clique width of the signed incidence diagram for one program leads to tractability. [31] The results in [31] imply that limiting the clique width of the signed incidence diagram leads to tractability for one program. [40] The labeling of the label-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-labels-@-@-@-@ labels-@-@-@-@ labels-@-@-@-@-@-@ labels-@-@-@-@-@-@-@-@ labels-@-@-@-@-@-@ labels-@-@-@-@-@-@ labels-@-@-@-@-labels-@-@-@-@-@-@-@-@-@-@ labels-@-@-@-@-@-@-@-@-labels-@-@-@-@-@-@-@-@-@-@-labels-@-@-@-@-@-@-@-@-@-@-@-@-@-@ labels-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@"}, {"heading": "4.1 Algorithms", "text": "In this section, we provide our dynamic programming algorithms for deciding on the existence of a response set. Let's start with the classical semantics for programs where it is sufficient to adjust the algorithm for SAT only slightly by [27] (a simplified version of it).For the semantics of the response set, we expand this algorithm to take into account the intrinsically higher complexity of this semantics. Both algorithms follow the same basic principles by using a k-expression corpus that defines a program in the following way: We assign to certain objects any suppression of \u03c3 and manipulate these objects in a bottom-up traverse of the Parse tree of the k expression, so that the objects at the root of the parse tree then provide the information necessary to decide the problem in question."}, {"heading": "4.1.1 Classical Semantics", "text": "Definition 3: A tuple Q = (T, F, U) with T, F, U and Q (Q, U) with Q (Q, U). Definition 3: A tuple Q = (T, F, U) with Q (Q, U). Definition 3: A tuple Q = (Q, U). Definition 3: A tuple Q = (T, F, U). Definition 3: A tuple Q = (Q, U). Definition 3: A tuple Q = (Q, U). Definition 3: D (T, F, U). Definition 3: D). Definition 3: D). Definition 3: D). Definition 3: D). Definition 3: D). Definition 3: D). Definition 3: D."}, {"heading": "4.1.2 Answer-Set Semantics", "text": "For complete disjunctive ASP we need a more comprehensive data structure. Definitionboth \"(both\" both \"both\" both \"Q (both\" Q (Q (both \"Q (Q (both)\" both \"Q (Q (both),\" Q (both), \"Q (Q (both), Q (Q (both), Q (Q (both), Q (Q (both), Q (both), Q (Q (Q (both)), Q (both), Q (Q (Q (both))), Q (Q (both))"}, {"heading": "4.2 The Role of Signs for Results on Clique-Width", "text": "We have shown that the ASP parameterized by the clique width of the signed incidence diagram has only two similar characters. As the clique width of the (unsigned) incidence diagram is usually smaller than (and always as high as) the clique width of the signed incidence diagram (Proposition 2), an FPT result w.r.t. A similar situation is known for the satisfaction problem of the propositional formulas (SAT), which was first shown in the clique width of the signed incidence diagram, and the authors suspect that the same should already apply to the unsigned version."}, {"heading": "5 Conclusion", "text": "In this paper, we have contributed to the parameterized complexity analysis of ASP. First, we made some negative observations that show that most directed width measurements (applied to the dependency graph or incidence graph of a program) do not lead to FPT results. On the other hand, we have converted a theoretical traceability result (implicit from previous work [31]) for the parameter clique width (applied to the signed incidence graph of a program) into a novel dynamic programming algorithm. The algorithm is applicable to any program whenever a defining k expression is given. It is expected that the algorithm runs efficiently, especially for small k, i.e. programs where the signed incidence graph has a small client width."}], "references": [{"title": "A trichotomy for regular simple path queries on graphs", "author": ["G. Bagan", "A. Bonifati", "B. Groz"], "venue": "Proc. PODS, pages 261\u2013272. ACM,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Answer set based design of knowledge systems", "author": ["M. Balduccini", "M. Gelfond", "M. Nogueira"], "venue": "Ann. Math. Artif. Intell., 47(1-2):183\u2013219,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Directed path-width and monotonicity in digraph searching", "author": ["J. Bar\u00e1t"], "venue": "Graphs and Combinatorics, 22(2): 161\u2013172,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2006}, {"title": "A hierarchy of tractable subsets for computing stable models", "author": ["R. Ben-Eliyahu"], "venue": "J. Artif. Intell. Res. (JAIR), 5:27\u201352,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1996}, {"title": "Propositional semantics for disjunctive logic programs", "author": ["R. Ben-Eliyahu", "R. Dechter"], "venue": "Ann. Math. Artif. Intell., 12(1-2):53\u201387,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1994}, {"title": "The dag-width of directed graphs", "author": ["D. Berwanger", "A. Dawar", "P. Hunter", "S. Kreutzer", "J. Obdrz\u00e1lek"], "venue": "Journal of Combinatorial Theory, Series B, 102(4):900\u2013923,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2012}, {"title": "A tourist guide through treewidth", "author": ["H.L. Bodlaender"], "venue": "Acta Cybernetica, 11:1\u201321,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1993}, {"title": "Approximating treewidth, pathwidth, frontsize, and shortest elimination tree", "author": ["H.L. Bodlaender", "J.R. Gilbert", "H. Hafsteinsson", "T. Kloks"], "venue": "J. Algorithms, 18(2):238\u2013255,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1995}, {"title": "Decomposition theorems and model-checking for the modal \u03bc-calculus", "author": ["M. Boja\u0144czyk", "C. Dittmann", "S. Kreutzer"], "venue": "Proc. CLS/LICS, pages 17:1\u201317:10. ACM,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Answer set programming at a glance", "author": ["G. Brewka", "T. Eiter", "M. Truszczy\u0144ski"], "venue": "Comm. ACM, 54(12): 92\u2013103,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "Transition graphs and the star height problem", "author": ["R.S. Cohen"], "venue": "Proc. of the 9th Annual Symposium on Switching and Automata Theory, pages 383\u2013394. IEEE Computer Society,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1968}, {"title": "On the relationship between clique-width and treewidth", "author": ["D.G. Corneil", "U. Rotics"], "venue": "SIAM J. Comput., 34(4):825\u2013847,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}, {"title": "Recognizability and second-order definability for sets of finite graphs", "author": ["B. Courcelle"], "venue": "Technical Report I-8634, Universit\u00e9 de Bordeaux,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1987}, {"title": "Graph rewriting: an algebraic and logic approach", "author": ["B. Courcelle"], "venue": "Handbook of theoretical computer science, Vol. B, pages 193\u2013242. Elsevier Science Publishers, North-Holland, Amsterdam,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1990}, {"title": "Upper bounds to the clique-width of graphs", "author": ["B. Courcelle", "S. Olariu"], "venue": "Discr. Appl. Math., 101(1-3): 77\u2013114,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2000}, {"title": "Context-free handle-rewriting hypergraph grammars", "author": ["B. Courcelle", "J. Engelfriet", "G. Rozenberg"], "venue": "Proc. Graph-Grammars, volume 532 of LNCS, pages 253\u2013268,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1991}, {"title": "Handle-rewriting hypergraph grammars", "author": ["B. Courcelle", "J. Engelfriet", "G. Rozenberg"], "venue": "JCSS, 46(2):218\u2013 270,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1993}, {"title": "Linear time solvable optimization problems on graphs of bounded clique-width", "author": ["B. Courcelle", "J.A. Makowsky", "U. Rotics"], "venue": "Theory Comput. Syst., 33(2):125\u2013150,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2000}, {"title": "Parameterized Algorithms", "author": ["M. Cygan", "F.V. Fomin", "L. Kowalik", "D. Lokshtanov", "D. Marx", "M. Pilipczuk", "M. Pilipczuk", "S. Saurabh"], "venue": "Springer,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Quantitative Graph Theory, chapter Width-Measures for Directed Graphs and Algorithmic Applications", "author": ["M. Dehmer", "F. Emmert-Streib", "editors"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Graph Theory, 4th Edition, volume 173 of Graduate texts in mathematics", "author": ["R. Diestel"], "venue": "Springer,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Fundamentals of Parameterized Complexity", "author": ["R.G. Downey", "M.R. Fellows"], "venue": "Texts in Computer Science. Springer,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2013}, {"title": "Reasoning in argumentation frameworks of bounded cliquewidth", "author": ["W. Dvor\u00e1k", "S. Szeider", "S. Woltran"], "venue": "Proc. COMMA, volume 216 of Frontiers in Artificial Intelligence and Applications, pages 219\u2013230. IOS Press,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "On the computational cost of disjunctive logic programming: Propositional case", "author": ["T. Eiter", "G. Gottlob"], "venue": "Ann. Math. Artif. Intell., 15(3\u20134):289\u2013323,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1995}, {"title": "Clique-width is NP-complete", "author": ["M.R. Fellows", "F.A. Rosamond", "U. Rotics", "S. Szeider"], "venue": "SIAM J. Discrete Math., 23(2):909\u2013939,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2009}, {"title": "Backdoors to tractable answer set programming", "author": ["J. Fichte", "S. Szeider"], "venue": "Artif. Intell., 220:64\u2013103,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2015}, {"title": "Counting truth assignments of formulas of bounded tree-width or clique-width", "author": ["E. Fischer", "J.A. Makowsky", "E.R. Ravve"], "venue": "Discr. Appl. Math., 156(4):511\u2013529,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2008}, {"title": "Answer Set Solving in Practice", "author": ["M. Gebser", "R. Kaminski", "B. Kaufmann", "T. Schaub"], "venue": "Synthesis Lectures on Artificial Intelligence and Machine Learning. Morgan & Claypool Publishers,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2012}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["M. Gelfond", "V. Lifschitz"], "venue": "New Generation Comput., 9(3/4):365\u2013386,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1991}, {"title": "LIFO-search: A min-max theorem and a searching game for cycle-rank and tree-depth", "author": ["A.C. Giannopoulou", "P. Hunter", "D.M. Thilikos"], "venue": "Discrete Applied Mathematics, 160(15):2089\u20132097,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}, {"title": "Bounded treewidth as a key to tractability of knowledge representation and reasoning", "author": ["G. Gottlob", "R. Pichler", "F. Wei"], "venue": "Artif. Intell., 174(1):105\u2013132,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "Digraph complexity measures and applications in formal language theory", "author": ["H. Gruber"], "venue": "Discrete Mathematics & Theoretical Computer Science, 14(2):189\u2013204,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2012}, {"title": "Exhaustively characterizing feasible logic models of a signaling network using answer set programming", "author": ["C. Guziolowski", "S. Videla", "F. Eduati", "S. Thiele", "T. Cokelaer", "A. Siegel", "J. Saez-Rodriguez"], "venue": "Bioinformatics, 29(18):2320\u20132326, 2013. doi: 10.1093/bioinformatics/btt393. Erratum see Bioinformatics 30, 13,", "citeRegEx": "33", "shortCiteRegEx": null, "year": 1942}, {"title": "A SAT approach to clique-width", "author": ["M. Heule", "S. Szeider"], "venue": "ACM Trans. Comput. Log., 16(3):24,", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2015}, {"title": "Digraph measures: Kelly decompositions, games, and orderings", "author": ["P. Hunter", "S. Kreutzer"], "venue": "TCS, 399(3): 206\u2013219,", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2008}, {"title": "Answer-set programming with bounded treewidth", "author": ["M. Jakl", "R. Pichler", "S. Woltran"], "venue": "Proc. IJCAI, pages 816\u2013822,", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2009}, {"title": "Directed tree-width", "author": ["T. Johnson", "N. Robertson", "P.D. Seymour", "R. Thomas"], "venue": "Journal of Combinatorial Theory, Series B, 82(1):138\u2013154,", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2001}, {"title": "Directed width measures and monotonicity of directed graph searching", "author": ["L. Kaiser", "S. Kreutzer", "R. Rabinovich", "S. Siebertz"], "venue": "CoRR, abs/1408.4745,", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2014}, {"title": "Recent developments on graphs of bounded clique-width", "author": ["M. Kaminski", "V.V. Lozin", "M. Milanic"], "venue": "Discrete Applied Mathematics, 157(12):2747\u20132761,", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2009}, {"title": "The rank-width of directed graphs", "author": ["M.M. Kant\u00e9"], "venue": "CoRR, abs/0709.1433,", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2007}, {"title": "Fixed-parameter algorithms for finding minimal models", "author": ["M. Lackner", "A. Pfandler"], "venue": "Proc. KR, pages 85\u201395. AAAI Press,", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2012}, {"title": "On odd and even cycles in normal logic programs", "author": ["F. Lin", "X. Zhao"], "venue": "Proc. AAAI, pages 80\u201385. AAAI Press / The MIT Press,", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2004}, {"title": "Fixed-parameter complexity of semantics for logic programs", "author": ["Z. Lonc", "M. Truszczy\u0144ski"], "venue": "ACM Trans. Comput. Log., 4(1):91\u2013119,", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2003}, {"title": "Stable Models and an Alternative Logic Programming Paradigm", "author": ["V.W. Marek", "M. Truszczy\u0144ski"], "venue": "The Logic Programming Paradigm \u2013 A 25-Year Perspective, pages 375\u2013398. Springer Verlag,", "citeRegEx": "44", "shortCiteRegEx": null, "year": 1999}, {"title": "A dynamic-programming based ASP-solver", "author": ["M. Morak", "R. Pichler", "S. R\u00fcmmele", "S. Woltran"], "venue": "Proc. JELIA\u201910, pages 369\u2013372,", "citeRegEx": "45", "shortCiteRegEx": null, "year": 2010}, {"title": "Satisfiability of acyclic and almost acyclic CNF formulas", "author": ["S. Ordyniak", "D. Paulusma", "S. Szeider"], "venue": "TCS, 481:85\u201399,", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2013}, {"title": "Approximating clique-width and branch-width", "author": ["S. Oum", "P. Seymour"], "venue": "J. Combin. Theory Ser. B, 96(4): 514\u2013528,", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2006}, {"title": "On the parameterized complexity of the fixed alphabet shortest common supersequence and longest common subsequence problems", "author": ["K. Pietrzak"], "venue": "JCSS, 67(4):757\u2013771,", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2003}, {"title": "Team-building with answer set programming in the Gioia-Tauro seaport", "author": ["F. Ricca", "G. Grasso", "M. Alviano", "M. Manna", "V. Lio", "S. Iiritano", "N. Leone"], "venue": "TPLP, 12:361\u2013381, 4", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2012}, {"title": "D-width: A more natural measure for directed tree width", "author": ["M.A. Safari"], "venue": "Proc. MFCS, volume 3618 of LNCS, pages 745\u2013756. Springer,", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2005}, {"title": "Model counting for formulas of bounded clique-width", "author": ["F. Slivovsky", "S. Szeider"], "venue": "Proc. ISAAC, volume 8283 of LNCS, pages 677\u2013687. Springer,", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2013}, {"title": "Developing a declarative rule language for applications in product configuration", "author": ["T. Soininen", "I. Niemel\u00e4"], "venue": "Proc. PADL, volume 1551 of LNCS, pages 305\u2013319. Springer Verlag,", "citeRegEx": "52", "shortCiteRegEx": null, "year": 1998}, {"title": "Word problems requiring exponential time", "author": ["L.J. Stockmeyer", "A.R. Meyer"], "venue": "Proc. Theory of Computing, pages 1\u20139. ACM,", "citeRegEx": "53", "shortCiteRegEx": null, "year": 1973}, {"title": "Trichotomy and dichotomy results on the complexity of reasoning with disjunctive logic programs", "author": ["M. Truszczy\u0144ski"], "venue": "TPLP, 11(6):881\u2013904,", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 9, "context": "Disjunctive Answer Set Programming (ASP) [10, 29, 44] is an active field of AI providing a declarative formalism for solving hard computational problems.", "startOffset": 41, "endOffset": 53}, {"referenceID": 28, "context": "Disjunctive Answer Set Programming (ASP) [10, 29, 44] is an active field of AI providing a declarative formalism for solving hard computational problems.", "startOffset": 41, "endOffset": 53}, {"referenceID": 43, "context": "Disjunctive Answer Set Programming (ASP) [10, 29, 44] is an active field of AI providing a declarative formalism for solving hard computational problems.", "startOffset": 41, "endOffset": 53}, {"referenceID": 27, "context": "Thanks to the high sophistication of modern solvers [28], ASP was successfully used in several applications, including product configuration [52], decision support for space shuttle flight controllers [2], team scheduling [49], and bio-informatics [33].", "startOffset": 52, "endOffset": 56}, {"referenceID": 51, "context": "Thanks to the high sophistication of modern solvers [28], ASP was successfully used in several applications, including product configuration [52], decision support for space shuttle flight controllers [2], team scheduling [49], and bio-informatics [33].", "startOffset": 141, "endOffset": 145}, {"referenceID": 1, "context": "Thanks to the high sophistication of modern solvers [28], ASP was successfully used in several applications, including product configuration [52], decision support for space shuttle flight controllers [2], team scheduling [49], and bio-informatics [33].", "startOffset": 201, "endOffset": 204}, {"referenceID": 48, "context": "Thanks to the high sophistication of modern solvers [28], ASP was successfully used in several applications, including product configuration [52], decision support for space shuttle flight controllers [2], team scheduling [49], and bio-informatics [33].", "startOffset": 222, "endOffset": 226}, {"referenceID": 32, "context": "Thanks to the high sophistication of modern solvers [28], ASP was successfully used in several applications, including product configuration [52], decision support for space shuttle flight controllers [2], team scheduling [49], and bio-informatics [33].", "startOffset": 248, "endOffset": 252}, {"referenceID": 23, "context": "Since the main decision problems of propositional ASP are located at the second level of the polynomial hierarchy [24, 54], the quest for easier fragments are important research contributions that could lead to improvements in ASP systems.", "startOffset": 114, "endOffset": 122}, {"referenceID": 53, "context": "Since the main decision problems of propositional ASP are located at the second level of the polynomial hierarchy [24, 54], the quest for easier fragments are important research contributions that could lead to improvements in ASP systems.", "startOffset": 114, "endOffset": 122}, {"referenceID": 21, "context": "An interesting approach to dealing with intractable problems comes from parameterized complexity theory [22] and is based on the fact that many hard problems become polynomial-time tractable if some problem parameter is bounded by a fixed constant.", "startOffset": 104, "endOffset": 108}, {"referenceID": 42, "context": "Results in this direction for the ASP domain include [43] (parameter: size of answer sets), [42] (number of cycles), [5] (length of longest cycles), [4] (number of non-Horn rules), and [26] (backdoors).", "startOffset": 53, "endOffset": 57}, {"referenceID": 41, "context": "Results in this direction for the ASP domain include [43] (parameter: size of answer sets), [42] (number of cycles), [5] (length of longest cycles), [4] (number of non-Horn rules), and [26] (backdoors).", "startOffset": 92, "endOffset": 96}, {"referenceID": 4, "context": "Results in this direction for the ASP domain include [43] (parameter: size of answer sets), [42] (number of cycles), [5] (length of longest cycles), [4] (number of non-Horn rules), and [26] (backdoors).", "startOffset": 117, "endOffset": 120}, {"referenceID": 3, "context": "Results in this direction for the ASP domain include [43] (parameter: size of answer sets), [42] (number of cycles), [5] (length of longest cycles), [4] (number of non-Horn rules), and [26] (backdoors).", "startOffset": 149, "endOffset": 152}, {"referenceID": 25, "context": "Results in this direction for the ASP domain include [43] (parameter: size of answer sets), [42] (number of cycles), [5] (length of longest cycles), [4] (number of non-Horn rules), and [26] (backdoors).", "startOffset": 185, "endOffset": 189}, {"referenceID": 40, "context": ", [41].", "startOffset": 2, "endOffset": 6}, {"referenceID": 2, "context": "Over the past two decades, various width measures for directed graphs have been introduced [3, 6, 35, 37, 50].", "startOffset": 91, "endOffset": 109}, {"referenceID": 5, "context": "Over the past two decades, various width measures for directed graphs have been introduced [3, 6, 35, 37, 50].", "startOffset": 91, "endOffset": 109}, {"referenceID": 34, "context": "Over the past two decades, various width measures for directed graphs have been introduced [3, 6, 35, 37, 50].", "startOffset": 91, "endOffset": 109}, {"referenceID": 36, "context": "Over the past two decades, various width measures for directed graphs have been introduced [3, 6, 35, 37, 50].", "startOffset": 91, "endOffset": 109}, {"referenceID": 49, "context": "Over the past two decades, various width measures for directed graphs have been introduced [3, 6, 35, 37, 50].", "startOffset": 91, "endOffset": 109}, {"referenceID": 6, "context": ", the popular parameter of treewidth [7].", "startOffset": 37, "endOffset": 40}, {"referenceID": 36, "context": "Prominent applications of directed width measures include the k-Disjoint Path Problem [37], query evaluation in graph databases [1], and model checking [9].", "startOffset": 86, "endOffset": 90}, {"referenceID": 0, "context": "Prominent applications of directed width measures include the k-Disjoint Path Problem [37], query evaluation in graph databases [1], and model checking [9].", "startOffset": 128, "endOffset": 131}, {"referenceID": 8, "context": "Prominent applications of directed width measures include the k-Disjoint Path Problem [37], query evaluation in graph databases [1], and model checking [9].", "startOffset": 152, "endOffset": 155}, {"referenceID": 14, "context": "Another graph parameter for capturing the structural complexity of a graph is clique-width [15\u201317].", "startOffset": 91, "endOffset": 98}, {"referenceID": 15, "context": "Another graph parameter for capturing the structural complexity of a graph is clique-width [15\u201317].", "startOffset": 91, "endOffset": 98}, {"referenceID": 16, "context": "Another graph parameter for capturing the structural complexity of a graph is clique-width [15\u201317].", "startOffset": 91, "endOffset": 98}, {"referenceID": 11, "context": "In contrast, graphs with bounded treewidth also have bounded clique-width [12, 15].", "startOffset": 74, "endOffset": 82}, {"referenceID": 14, "context": "In contrast, graphs with bounded treewidth also have bounded clique-width [12, 15].", "startOffset": 74, "endOffset": 82}, {"referenceID": 17, "context": "By means of a meta-theorem due to Courcelle, Makowsky, and Rotics [18], one can solve any graph problem that can be expressed in Monadic Second-Order Logic with quantification on vertex sets (MSO1) in linear time for graphs of bounded clique-width.", "startOffset": 66, "endOffset": 70}, {"referenceID": 12, "context": "This result is similar to Courcelle\u2019s theorem [13, 14] for graphs of bounded treewidth, which has been used for the FPT result for ASP w.", "startOffset": 46, "endOffset": 54}, {"referenceID": 13, "context": "This result is similar to Courcelle\u2019s theorem [13, 14] for graphs of bounded treewidth, which has been used for the FPT result for ASP w.", "startOffset": 46, "endOffset": 54}, {"referenceID": 30, "context": "treewidth [31].", "startOffset": 10, "endOffset": 14}, {"referenceID": 30, "context": "Since the formula given in [31] is in MSO1, the FPT result for ASP applies also to signed clique-width.", "startOffset": 27, "endOffset": 31}, {"referenceID": 24, "context": "Clique-width is NP-hard to compute [25], which might be considered as an obstacle toward practical applications.", "startOffset": 35, "endOffset": 39}, {"referenceID": 39, "context": "However, one can check in polynomial time whether the width of a graph is bounded by a fixed k [40, 47].", "startOffset": 95, "endOffset": 103}, {"referenceID": 46, "context": "However, one can check in polynomial time whether the width of a graph is bounded by a fixed k [40, 47].", "startOffset": 95, "endOffset": 103}, {"referenceID": 33, "context": "Recently, SAT solvers have been used to obtain sequences of vertex partitions that correspond to cwd-expressions [34] for a given graph.", "startOffset": 113, "endOffset": 117}, {"referenceID": 30, "context": "In contrast to treewidth where the FPT result from [31] has been used for designing [36] and implementing [45] a dynamic programming algorithm, to the best of our knowledge there are no algorithms yet that explicitly exploit the fixedparameter tractability of ASP on bounded clique-width.", "startOffset": 51, "endOffset": 55}, {"referenceID": 35, "context": "In contrast to treewidth where the FPT result from [31] has been used for designing [36] and implementing [45] a dynamic programming algorithm, to the best of our knowledge there are no algorithms yet that explicitly exploit the fixedparameter tractability of ASP on bounded clique-width.", "startOffset": 84, "endOffset": 88}, {"referenceID": 44, "context": "In contrast to treewidth where the FPT result from [31] has been used for designing [36] and implementing [45] a dynamic programming algorithm, to the best of our knowledge there are no algorithms yet that explicitly exploit the fixedparameter tractability of ASP on bounded clique-width.", "startOffset": 106, "endOffset": 110}, {"referenceID": 22, "context": "In fact, we are not aware of any FPT algorithm for bounded clique-width for a reasoning problem located on the second level of the polynomial hierarchy (except [23] from the area of abstract argumentation).", "startOffset": 160, "endOffset": 164}, {"referenceID": 26, "context": "We do so by suitably generalizing the seminal approach of [27] for the SAT problem.", "startOffset": 58, "endOffset": 62}, {"referenceID": 20, "context": "We use standard graph terminology, see for instance the handbook [21].", "startOffset": 65, "endOffset": 69}, {"referenceID": 21, "context": "In parameterized algorithmics [22] the runtime of an algorithm is studied with respect to a parameter k \u2208 N and input size n.", "startOffset": 30, "endOffset": 34}, {"referenceID": 0, "context": "The class W[1] captures parameterized intractability and contains all problems that are FPTreducible to PARTITIONED CLIQUE when parameterized by the size of the solution.", "startOffset": 11, "endOffset": 14}, {"referenceID": 0, "context": "Showing W[1]-hardness for a problem rules out the existence of an FPT-algorithm under the usual assumption FPT 6= W[1].", "startOffset": 9, "endOffset": 12}, {"referenceID": 0, "context": "Showing W[1]-hardness for a problem rules out the existence of an FPT-algorithm under the usual assumption FPT 6= W[1].", "startOffset": 115, "endOffset": 118}, {"referenceID": 28, "context": "Following [29], M \u2286 A(\u03a0) is an answer set of \u03a0 if M \u2208 Mods(\u03a0) and for no N ( M , we have N \u2208 Mods(\u03a0 ).", "startOffset": 10, "endOffset": 14}, {"referenceID": 23, "context": "As shown by Eiter and Gottlob, this problem is \u03a32 -complete [24].", "startOffset": 60, "endOffset": 64}, {"referenceID": 25, "context": "The dependency graph of \u03a0, denoted by DEP(\u03a0), is the directed graph with vertex set A(\u03a0) and that contains an arc (x, y) if there is a rule r \u2208 R(\u03a0) such that either x \u2208 h(r) and y \u2208 p(r) \u222a n(r) or x, y \u2208 h(r) [26].", "startOffset": 210, "endOffset": 214}, {"referenceID": 36, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 51, "endOffset": 55}, {"referenceID": 2, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 76, "endOffset": 79}, {"referenceID": 5, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 91, "endOffset": 94}, {"referenceID": 34, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 107, "endOffset": 111}, {"referenceID": 49, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 125, "endOffset": 129}, {"referenceID": 19, "context": "The most prominent of those are directed treewidth [37], directed pathwidth [3], DAG-width [6], Kellywidth [35], and D-width [50] (see also [20]).", "startOffset": 140, "endOffset": 144}, {"referenceID": 10, "context": "To state our results in the most general manner, we will employ the parameter cycle-rank [11].", "startOffset": 89, "endOffset": 93}, {"referenceID": 31, "context": "Since the cycle-rank is always greater or equal to any of the above mentioned directed width measures [32, 38], any (parameterized) hardness result obtained for cycle-rank carries over to the aforementioned width measures for directed graphs.", "startOffset": 102, "endOffset": 110}, {"referenceID": 37, "context": "Since the cycle-rank is always greater or equal to any of the above mentioned directed width measures [32, 38], any (parameterized) hardness result obtained for cycle-rank carries over to the aforementioned width measures for directed graphs.", "startOffset": 102, "endOffset": 110}, {"referenceID": 29, "context": ", [30]) that the cycle-rank of UND(D) is equal to the treedepth of DI(D), i.", "startOffset": 2, "endOffset": 6}, {"referenceID": 7, "context": ", the underlying undirected graph of D, and that the treedepth is always an upper bound for the pathwidth and the treewidth of an undirected graph [8].", "startOffset": 147, "endOffset": 150}, {"referenceID": 23, "context": "For our hardness results, we employ the reduction given in [24] showing that ASP consistency is \u03a32 -hard in general.", "startOffset": 59, "endOffset": 63}, {"referenceID": 52, "context": "As checking validity of QBF 2,\u2203 formulas is \u03a3 P 2 -complete [53], this reduction shows that ASP is \u03a3 P 2 -hard.", "startOffset": 60, "endOffset": 64}, {"referenceID": 35, "context": "This is in contrast to our second graphical representation of ASP, the incidence graph, for which it is known that ASP is fixed-parameter tractable parameterized by the treewidth [36].", "startOffset": 179, "endOffset": 183}, {"referenceID": 30, "context": "The results in [31] imply that bounding the clique-width of the signed incidence graph of a program leads to tractability.", "startOffset": 15, "endOffset": 19}, {"referenceID": 18, "context": "However, such algorithms are primarily of theoretical interest due to huge constant factors, and for actually solving problems, it is preferable to explicitly design dynamic programming algorithms [19].", "startOffset": 197, "endOffset": 201}, {"referenceID": 38, "context": "Then, the clique-width of SINC(\u03a0n) is at least the clique-width of the n \u00d7 n grid G, which grows with n [39].", "startOffset": 104, "endOffset": 108}, {"referenceID": 26, "context": "We start with the classical semantics for programs, where it is sufficient to just slightly adapt (a simplified version of) the algorithm for SAT by [27].", "startOffset": 149, "endOffset": 153}, {"referenceID": 26, "context": "A similar situation is known for the satisfiability problem of propositional formulas (SAT), which was first shown in [27] to be FPT parameterized by the clique-width of the signed incidence graph, and the authors conjectured that the same should hold already for the unsigned version.", "startOffset": 118, "endOffset": 122}, {"referenceID": 45, "context": "Surprisingly, this turned out not to be the case [46].", "startOffset": 49, "endOffset": 53}, {"referenceID": 0, "context": "Let L \u2286 {h, p, n} with |L| > 1 and L 6= {h, n}, then ASP is W[1]-hard parameterized by the clique-width of SINCL(\u03a0).", "startOffset": 61, "endOffset": 64}, {"referenceID": 0, "context": "We show the result by a parameterized reduction from the W [1]-complete problem PARTITIONED CLIQUE [48].", "startOffset": 59, "endOffset": 62}, {"referenceID": 47, "context": "We show the result by a parameterized reduction from the W [1]-complete problem PARTITIONED CLIQUE [48].", "startOffset": 99, "endOffset": 103}, {"referenceID": 30, "context": "On the other hand, we turned a theoretical tractability result (which implicitly follows from previous work [31]) for the parameter clique-width (applied to the signed incidence graph of a program) into a novel dynamic programming algorithm.", "startOffset": 108, "endOffset": 112}, {"referenceID": 50, "context": "Another open question is whether ASP parameterized by the clique-width of the unsigned incidence graph is in the class XP (as is the case for SAT [51]).", "startOffset": 146, "endOffset": 150}], "year": 2017, "abstractText": "Disjunctive Answer Set Programming (ASP) is a powerful declarative programming paradigm whose main decision problems are located on the second level of the polynomial hierarchy. Identifying tractable fragments and developing efficient algorithms for such fragments are thus important objectives in order to complement the sophisticated ASP systems available to date. Hard problems can become tractable if some problem parameter is bounded by a fixed constant; such problems are then called fixed-parameter tractable (FPT). While several FPT results for ASP exist, parameters that relate to directed or signed graphs representing the program at hand have been neglected so far. In this paper, we first give some negative observations showing that directed width measures on the dependency graph of a program do not lead to FPT results. We then consider the graph parameter of signed clique-width and present a novel dynamic programming algorithm that is FPT w.r.t. this parameter. Clique-width is more general than the well-known treewidth, and, to the best of our knowledge, ours is the first FPT algorithm for bounded clique-width for reasoning problems beyond SAT.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}