{"id": "1607.04324", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Apr-2016", "title": "Random-Key Cuckoo Search for the Travelling Salesman Problem", "abstract": "Combinatorial optimization problems are typically NP-hard, and thus very challenging to solve. In this paper, we present the random key cuckoo search (RKCS) algorithm for solving the famous Travelling Salesman Problem (TSP). We used a simplified random-key encoding scheme to pass from a continuous space (real numbers) to a combinatorial space. We also consider the displacement of a solution in both spaces using Levy flights. The performance of the proposed RKCS is tested against a set of benchmarks of symmetric TSP from the well-known TSPLIB library. The results of the tests show that RKCS is superior to some other metaheuristic algorithms.", "histories": [["v1", "Thu, 14 Apr 2016 12:40:50 GMT  (776kb)", "http://arxiv.org/abs/1607.04324v1", "13 pages, 6 figures"]], "COMMENTS": "13 pages, 6 figures", "reviews": [], "SUBJECTS": "cs.NE cs.AI", "authors": ["aziz ouaarab", "b ahiod", "xin-she yang"], "accepted": false, "id": "1607.04324"}, "pdf": {"name": "1607.04324.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 160 7.04 324v 1"}, {"heading": "1 Introduction", "text": "This year it has come to the point that it has never come to the point where we will be able to put ourselves at the top, \"he said."}, {"heading": "2 Cuckoo Search Algorithm", "text": "Some cuckoo species may exhibit so-called brood parasitism as an aggressive reproductive strategy. This most studied and discussed trait is that cuckoos lay eggs in a previously observed nest of another species in order to allow host birds to hatch and breed their young cuckoos. From an evolutionary perspective, cuckoo flights aim to increase the likelihood of survival and reduce the likelihood of abandoning host bird eggs [16]. Cuckoo bird behavior is successfully imitated in the cuckoo search algorithm in combination with Le vy flights in order to effectively seek a better and optimal survival strategy. Le flights [3], named by the French mathematician Paul Le-vy, represent a model of random walks characterized by their stride lengths obeying a power distribution of wings. Several scientific studies have shown that the search for prey often follows the same small steps as those typically followed by hunters."}, {"heading": "3 Travelling Salesman Problem", "text": "To simplify the statement of the traveling vendor, we can assume that we have a list of M cities that must be visited by a vendor and return to the starting city. To calculate the best tour in terms of distance, some rules or assumptions can be used before we start the trip. However, each city on the list must be visited exactly once, and for each pair of cities, since the distance between the two cities is known. This problem is commonly referred to as \"The traveling vendor's problem.\" The TSP can formally be called: Let C = {c1,., cm} be a set of M cities, E = (ci, cj): i, j): The problem is commonly referred to as \"The traveling vendor's problem,\" and dcicj is a cost measurement associated with the edge (ci, cj). The goal of the TSP is to find the minimum length of a closed tour that each city visits. Cities ci, ci."}, {"heading": "4 Random-Key Encoding Scheme", "text": "The random encoding scheme [1] is a technique for transforming a position in a continuous space and transforming it into a combinatorial one. It uses a vector of real numbers by associating each number with a weight. These weights are used to generate a combination as a solution.The evenly drawn real random numbers from [0, 1) result in a vector shown in Fig. 4. On the other hand, the combinatorial vector is composed of integers ordered by the weight of real numbers in the first vector, as shown below (Fig. 4):"}, {"heading": "5 Random Key CS for TSP", "text": "Random keys are a coding scheme that was used early on with genetic algorithms to sequence and optimize problems of Bean [1]. It is based on real random numbers in a continuous space to code solutions in a combinatorial space. These random numbers, presented as tags, are generated from [0.1) m space, m being the size of the TSP instance to be solved (or the dimension of that space). In this case, our approach expands this idea by performing Le'vy flight distributions to generate the random numbers, which provides an improved way to balance the search for solutions in both local and global areas. Therefore, in this work we will use both random passages and Le-vy flights [23] whose increments are selected from a probability distribution with a power-right tail."}, {"heading": "5.1 Solution Representation", "text": "Figure 2 and algorithm 2 represent the steps for generating a TSP solution by means of random keys. First, agents are randomly placed according to their real values in [0, 1]. Each agent has an integer index regardless of its ascending order among other agents in the linked list. All agents are ordered according to their weight (real numbers) and their indices together form an initial solution of the TSP instance. This essentially means that the integer / agent indices here correspond to the order of the city index and the order of the agents is the order of the visiting order of the cities. Algorithm 2: for i = 1 to m ai (i = 1,..., m); 2: for i = 1 to m do 3: Way a random real number in [0.1) for agents ai; 4: End for 5: for i = 1 to m do 6: Get the order of the agent cities according to its weight; The end for 7 = 1 is for 1 m"}, {"heading": "5.2 Displacement", "text": "The process of generating new solutions by a disturbance in real space can lead to some problems when these agents begin to move in another area [0, 1). Such movements can affect the order of the agents in the linked list and therefore a new TSP solution can be generated, as shown in Fig. 3. The displacement of each agent is directed directly by Le vy flights. The sequence of each city is changed by small disturbances or large jumps according to the values generated in their weights by Le vy flights. Our approach here is essentially based on two types of search steps: 1) global search conducted in solution areas guided by the movements (after Le vy flights) of the agents; 2) local search that recognizes the best solutions in the areas found by the agents. Combining local and global search steps can improve performance. In short, RKCS starts with a search for new promising areas, we can show the best solutions in this area and combine the small steps to intensify the diversification in these areas."}, {"heading": "5.3 Local Search", "text": "After finding a new area by Le \u0301 vy flights, a local search is performed to find the best solution in that area. 2-opt move [6] is used for this local search if two edges in the TSP solution are removed and the two newly created paths are reconnected, in another possible way, as in Fig. 4. In minimization, this is only done if the new tour is shorter than the current one. Obviously, this process is repeated until no further improvement is possible or when a certain number of steps are achieved. The steepest descent (algorithm 4) is a simple local search method that is easy to capture in a local minimum and generally cannot find a good quality solution. We choose this simplified method of local search \"steepest descent\" to show the performance of CS combined with RK. It allows us to generate good-quality STE solutions without introducing an advanced local search method. \u2212 Algorithm 4: The steepest descent method of the local search \"steepest descent\" (1: STE: x: xS: x: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE: STE"}, {"heading": "5.4 RKCS Algorithm", "text": "Using the same steps of Improved CS [14] and as summarized in Algorithm 1, RKCS generates the initial random solution or population before starting the search process as explained in Fig. 2 and Algorithm 2. Generating a random initial population is intended to show how RKCS can find good solutions in the search space without using any improvement before the process.The second phase triggers the PC portion of intelligent cuckoos. These cuckoos begin by exploring new areas from the current solutions. As shown in Fig. 3, they use Le-vy flights to move in real space and interpret this step to have a new TSP solution in the new area.The second step is to find a good solution in this area according to Algorithm 4.After-Part Phase, RKCS uses a cuckoo to search for a new good solution that starts from the best solution of the population."}, {"heading": "6 Experimental results", "text": "The parameter values used in the experiments of the RKCS algorithm are shown in Table 1.Table 2, the test results of the RKCS algorithm for solving some benchmark instances of the symmetrical TSP from the TSPLIB library [18]. The first column corresponds to the name of the distances with their optimum in brackets. The column \"Best\" shows the length of the best solution found by RKCS, the column \"Average\" indicates the average solution found by RKCS. The column \"Worst\" shows the length of the worst solution with its optimum in brackets. The column \"Best\" shows the length of the best solution found by RKCS. These results confirm that the proposed approach is able to find good or optimal solution for the distances tested."}, {"heading": "7 Conclusion", "text": "In this proposed approach, we used the random encoding scheme combined with the cuckoo search to develop the random algorithm to solve TSP. By examining the standard TSP instances, we can confirm that the proposed approach is very efficient and can achieve good results. Random keys have been used to switch between the continuous and combinatorial search space, which allows the cuckoo search to provide a good search mechanism with a fine balance between intensification and diversification. However, RKCS can be modified or improved in many ways. For example, it can be useful to adapt the agent's movements to some existing or new motion operators in combinatorial space. In addition, algorithm-dependent parameter matching can also be fruitful [28], which may offer further research topics to see if the proposed approach can be further improved. TSP is expected to be used to solve other routing problems, such as bleeding problem 15."}], "references": [{"title": "Genetic algorithms and random keys for sequencing and optimization", "author": ["J. Bean"], "venue": "ORSA journal on computing", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1994}, {"title": "Metaheuristics in combinatorial optimization: Overview and conceptual comparison", "author": ["C. Blum", "A. Roli"], "venue": "ACM Computing Surveys (CSUR) 35(3),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "L\u00e9vy flights in dobe ju/?hoansi foraging patterns", "author": ["C.T. Brown", "L.S. Liebovitch", "R. Glendon"], "venue": "Human Ecology 35(1),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Hybrid gravitational search algorithm with random-key encoding scheme combined with simulated annealing", "author": ["H. Chen", "S. Li", "Z. Tang"], "venue": "Int J Comput Sci Netw Security 11,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "The asymmetric traveling salesman problem: Algorithms, instance generators, and tests", "author": ["J. Cirasella", "D.S. Johnson", "L.A. McGeoch", "W. Zhang"], "venue": "In: Algorithm Engineering and Experimentation,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "A method for solving traveling-salesman problems", "author": ["G. Croes"], "venue": "Operations Research 6(6),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1958}, {"title": "Traveling Salesman Problem, Theory and Applications", "author": ["D. Davendra"], "venue": "InTech", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "The traveling salesman problem and its variations, vol", "author": ["G. Gutin", "A.P. Punnen"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2002}, {"title": "Approximation algorithms for NP-hard problems", "author": ["D.S. Hochbaum"], "venue": "PWS Publishing Co", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1996}, {"title": "The traveling salesman problem: a guided tour of combinatorial optimization, vol", "author": ["E.L. Lawler", "J.K. Lenstra", "A.R. Kan", "D.B. Shmoys"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1985}, {"title": "Some simple applications of the travelling salesman problem", "author": ["J.K. Lenstra", "A.R. Kan"], "venue": "Operational Research Quarterly pp", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1975}, {"title": "Cuckoo search algorithm for optimization problems-a literature review", "author": ["A. Mohamad", "A.M. Zain", "N.E.N. Bazin", "A. Udin"], "venue": "Applied Mechanics and Materials 421,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "A process prediction model based on cuckoo algorithm for abrasive waterjet machining", "author": ["A. Mohamad", "A.M. Zain", "N.E.N. Bazin", "A. Udin"], "venue": "Journal of Intelligent Manufacturing pp", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Improved and discrete cuckoo search for solving the travelling salesman problem", "author": ["A. Ouaarab", "B. Ahiod", "X.S. Yang"], "venue": "Cuckoo Search and Firefly Algorithm,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "A novel discrete cuckoo search algorithm for spherical traveling salesman problem. Applied mathematics & information sciences", "author": ["X. Ouyang", "Y. Zhou", "Q. Luo", "H. Chen"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "The Traveling Salesman: Computational Solutions for TSP Applications", "author": ["G. Reinelt"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1994}, {"title": "A hybrid random-key genetic algorithm for a symmetric travelling salesman problem", "author": ["F. Samanlioglu", "M.B. Kurz", "W.G. Ferrell", "S. Tangudu"], "venue": "International Journal of Operational Research 2(1),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2007}, {"title": "L\u00e9vy flights and related topics in physics", "author": ["M.F. Shlesinger", "G.M. Zaslavsky", "U. Frisch"], "venue": "Levy flights and related topics in Physics, vol", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1995}, {"title": "A random-key genetic algorithm for the generalized traveling salesman problem", "author": ["L.V. Snyder", "M.S. Daskin"], "venue": "European Journal of Operational Research 174(1),", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2006}, {"title": "Engineering Optimization: An Introduction with Metaheuristic Applications", "author": ["X.S. Yang"], "venue": "Wiley, USA", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2010}, {"title": "Nature-Inspired Metaheuristic Algorithms", "author": ["X.S. Yang"], "venue": "Luniver Press", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}, {"title": "Cuckoo Searcha and Firefly Algorithm: Theory and Applications", "author": ["X.S. Yang"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2013}, {"title": "Cuckoo search via l\u00e9vy flights", "author": ["X.S. Yang", "S. Deb"], "venue": "Nature & Biologically Inspired Computing,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2009}, {"title": "Engineering optimisation by cuckoo search", "author": ["X.S. Yang", "S. Deb"], "venue": "International Journal of Mathematical Modelling and Numerical Optimisation", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2010}, {"title": "Multiobjective cuckoo search for design optimization", "author": ["X.S. Yang", "S. Deb"], "venue": "Computers & Operations Research", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "A framework for self-tuning optimization algorithms", "author": ["X.S. Yang", "S. Deb", "M. Loomes", "M. Karamanoglu"], "venue": "Neural Computing & Applications", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2013}], "referenceMentions": [{"referenceID": 8, "context": "In fact, they cannot be solved efficiently by any known algorithm in a practically short time scale when the size of the problem is moderately large [9].", "startOffset": 149, "endOffset": 152}, {"referenceID": 9, "context": "An example of these problems is the travelling salesman problem [10] in which a salesperson has to visit a list of cities exactly once, and returning to the departure city, with the aim of minimizing the total travelled distance or the overall cost of the trip.", "startOffset": 64, "endOffset": 68}, {"referenceID": 1, "context": "Approximate algorithms such as metaheuristics [2] are actually the best choice to solve many combinatorial optimization problems.", "startOffset": 46, "endOffset": 49}, {"referenceID": 19, "context": "Metaheuristics are usually simple to implement; however, they are often capable to solve complex problems and can thus be adapted to solve problems with diverse objective function properties, either continuous, discrete or mixed, including many real-world optimization problems, from engineering to artificial intelligence [22].", "startOffset": 323, "endOffset": 327}, {"referenceID": 16, "context": "TSP is solved with random keys by various metaheuristics [19, 4].", "startOffset": 57, "endOffset": 64}, {"referenceID": 3, "context": "TSP is solved with random keys by various metaheuristics [19, 4].", "startOffset": 57, "endOffset": 64}, {"referenceID": 22, "context": "This work presents a novel approach using Cuckoo Search algorithm (CS)[25], based on random keys [1], with a simple local search procedure to solve TSP.", "startOffset": 70, "endOffset": 74}, {"referenceID": 0, "context": "This work presents a novel approach using Cuckoo Search algorithm (CS)[25], based on random keys [1], with a simple local search procedure to solve TSP.", "startOffset": 97, "endOffset": 100}, {"referenceID": 2, "context": "L\u00e9vy flights [3], named by the French mathematician Paul L\u00e9vy, represent a model of random walks characterized by their step lengths which obey a power-law distribution.", "startOffset": 13, "endOffset": 16}, {"referenceID": 2, "context": "This model is commonly presented by small random steps followed occasionally by large jumps [3, 20].", "startOffset": 92, "endOffset": 99}, {"referenceID": 17, "context": "This model is commonly presented by small random steps followed occasionally by large jumps [3, 20].", "startOffset": 92, "endOffset": 99}, {"referenceID": 21, "context": "It has been shown that CS can be very efficient in dealing with highly nonlinear optimization problems [24, 27, 26, 13, 12].", "startOffset": 103, "endOffset": 123}, {"referenceID": 24, "context": "It has been shown that CS can be very efficient in dealing with highly nonlinear optimization problems [24, 27, 26, 13, 12].", "startOffset": 103, "endOffset": 123}, {"referenceID": 23, "context": "It has been shown that CS can be very efficient in dealing with highly nonlinear optimization problems [24, 27, 26, 13, 12].", "startOffset": 103, "endOffset": 123}, {"referenceID": 12, "context": "It has been shown that CS can be very efficient in dealing with highly nonlinear optimization problems [24, 27, 26, 13, 12].", "startOffset": 103, "endOffset": 123}, {"referenceID": 11, "context": "It has been shown that CS can be very efficient in dealing with highly nonlinear optimization problems [24, 27, 26, 13, 12].", "startOffset": 103, "endOffset": 123}, {"referenceID": 0, "context": "CS is summarized as the following ideal rules: (1) each cuckoo lays one egg at a time and selects a nest randomly; (2) the best nest with the highest quality of egg can pass onto the new generations; (3) the number of host nests is fixed, and the egg laid by a cuckoo can be discovered by the host bird with a probability pa \u2208 [0, 1].", "startOffset": 327, "endOffset": 333}, {"referenceID": 22, "context": "L\u00e9vy flights have an infinite variance with an infinite mean [25].", "startOffset": 61, "endOffset": 65}, {"referenceID": 13, "context": "In this approach we have taken as a basis an improved version of CS [14].", "startOffset": 68, "endOffset": 72}, {"referenceID": 6, "context": "The TSP can be stated formally [7] as: Let C = {c1, .", "startOffset": 31, "endOffset": 34}, {"referenceID": 7, "context": "A tour can be represented as a cyclic permutation [8] \u03c0 = (\u03c0(1), \u03c0(2), .", "startOffset": 50, "endOffset": 53}, {"referenceID": 10, "context": "and Reinelt [11, 17] gave some reviews of direct and indirect applications of TSP in several industrial and technological fields, such as drilling problem of printed circuit boards (PCBs), overhauling gas turbine engines, X-ray crystallography, computer wiring, order-picking problem in warehouses, vehicle routing, and mask plotting in PCB production.", "startOffset": 12, "endOffset": 20}, {"referenceID": 15, "context": "and Reinelt [11, 17] gave some reviews of direct and indirect applications of TSP in several industrial and technological fields, such as drilling problem of printed circuit boards (PCBs), overhauling gas turbine engines, X-ray crystallography, computer wiring, order-picking problem in warehouses, vehicle routing, and mask plotting in PCB production.", "startOffset": 12, "endOffset": 20}, {"referenceID": 0, "context": "Random-key encoding scheme [1] is a technique that can be used to transform a position in a continuous space and convert it into a combinatorial one.", "startOffset": 27, "endOffset": 30}, {"referenceID": 0, "context": "Random keys are an encoding scheme which was used early with genetic algorithms for sequencing and optimization problems by Bean [1].", "startOffset": 129, "endOffset": 132}, {"referenceID": 20, "context": "In this work, we will thus use both random walks and L\u00e9vy flights [23] whose step lengths are chosen from a probability distribution with a power-law tail.", "startOffset": 66, "endOffset": 70}, {"referenceID": 5, "context": "For this local search, 2-opt move [6] is used where it removes two edges in the TSP solution and reconnects the new two created paths, in a different possible way as showed in Fig.", "startOffset": 34, "endOffset": 37}, {"referenceID": 13, "context": "Using the same steps of Improved CS [14] and as summarized in Algorithm 1, before starting the search process, RKCS generates the random initial solution or population as explained in Fig.", "startOffset": 36, "endOffset": 40}, {"referenceID": 3, "context": "The RKCS experimental results are then compared with all other algorithms tested in \u2018Hybrid Gravitational Search Algorithm with Random-key Encoding Scheme Combined with Simulated Annealing\u2019 [4].", "startOffset": 190, "endOffset": 193}, {"referenceID": 3, "context": "Table 3: Comparison of experimental results of RKCS with all algorithms cited in [4] Instances eil51 st70 rd100 pr124 rat195 Best 426 675 7910 59030 2323 Average GA 2.", "startOffset": 81, "endOffset": 84}, {"referenceID": 25, "context": "In addition, the tuning of algorithm-dependent parameters can be also fruitful [28], which may provide further research topics to see if the proposed approach can be further", "startOffset": 79, "endOffset": 83}, {"referenceID": 4, "context": "We can also generalize this work to solve some kinds of TSP problems such as Asymmetric [5] , Spherical [15] and generalized [21] TSP.", "startOffset": 88, "endOffset": 91}, {"referenceID": 14, "context": "We can also generalize this work to solve some kinds of TSP problems such as Asymmetric [5] , Spherical [15] and generalized [21] TSP.", "startOffset": 104, "endOffset": 108}, {"referenceID": 18, "context": "We can also generalize this work to solve some kinds of TSP problems such as Asymmetric [5] , Spherical [15] and generalized [21] TSP.", "startOffset": 125, "endOffset": 129}], "year": 2016, "abstractText": "Combinatorial optimization problems are typically NP-hard, and thus very challenging to solve. In this paper, we present the random key cuckoo search (RKCS) algorithm for solving the famous Travelling Salesman Problem (TSP). We used a simplified random-key encoding scheme to pass from a continuous space (real numbers) to a combinatorial space. We also consider the displacement of a solution in both spaces using L\u00e9vy flights. The performance of the proposed RKCS is tested against a set of benchmarks of symmetric TSP from the well-known TSPLIB library. The results of the tests show that RKCS is superior to some other metaheuristic algorithms.", "creator": "LaTeX with hyperref package"}}}