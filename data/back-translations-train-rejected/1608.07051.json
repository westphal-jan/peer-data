{"id": "1608.07051", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Aug-2016", "title": "Learning Points and Routes to Recommend Trajectories", "abstract": "The problem of recommending tours to travellers is an important and broadly studied area. Suggested solutions include various approaches of points-of-interest (POI) recommendation and route planning. We consider the task of recommending a sequence of POIs, that simultaneously uses information about POIs and routes. Our approach unifies the treatment of various sources of information by representing them as features in machine learning algorithms, enabling us to learn from past behaviour. Information about POIs are used to learn a POI ranking model that accounts for the start and end points of tours. Data about previous trajectories are used for learning transition patterns between POIs that enable us to recommend probable routes. In addition, a probabilistic model is proposed to combine the results of POI ranking and the POI to POI transitions. We propose a new F$_1$ score on pairs of POIs that capture the order of visits. Empirical results show that our approach improves on recent methods, and demonstrate that combining points and routes enables better trajectory recommendations.", "histories": [["v1", "Thu, 25 Aug 2016 08:39:47 GMT  (599kb,D)", "http://arxiv.org/abs/1608.07051v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.IR", "authors": ["dawei chen", "cheng soon ong", "lexing xie"], "accepted": false, "id": "1608.07051"}, "pdf": {"name": "1608.07051.pdf", "metadata": {"source": "CRF", "title": "Learning Points and Routes to Recommend Trajectories", "authors": ["Dawei Chen", "Cheng Soon Ong", "Lexing Xie"], "emails": ["lexing.xie}@anu.edu.au"], "sections": [{"heading": null, "text": "The problem of recommending itineraries to travelers is an important and thoroughly studied area. Suggested solutions include various approaches to point-of-interest (POI) recommendations and route planning. We consider the task of recommending a sequence of POIs that uses information about POIs and routes at the same time. Our approach combines the treatment of different sources of information by presenting them as features in machine learning algorithms that allow us to learn from past behavior. Information about POIs is used to learn a POI ranking model that takes into account the start and end point of tours. Data on past paths are used to learn transition patterns between POIs that allow us to recommend likely routes. In addition, a probability model is proposed to combine the results of the POI ranking and POI transitions."}, {"heading": "1 Introduction", "text": "This year, more than ever before in the history of the city, where it is so far that it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a place, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year, a year"}, {"heading": "2 POI, Query and Transition", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "3 Tour Recommendation", "text": "In this section we first describe the recommendations of points and routes, then we discuss how they can be combined, and finally we propose a method to avoid sections."}, {"heading": "3.1 POI Ranking and Route Planning", "text": "A naive approach would be to recommend trajectories based only on the popularity of POIs, i.e. we always propose the most popular POIs with the top k, which are most popular for all visitors due to the start and end place.We call this basic approach PoiPopularity, and its only adaptation to a particular query is to match k to the desired length. On the other hand, we can use the entire set of POI characteristics described in Section 2 to learn a ranking of POIs with rankSVM, with linear kernel and L2 loss [12], min wTw + C, pi, pj, q, q, Q max (0, 1 \u2212 wT, q, q) 2, where w is the parameter vector, C > 0 is a regularization constant, P is the set of POIs ranked, Q is the quantity of POIs ranked, Q is the quantity wq, the quantity wt \u2212 q, \u2212 q is the quantity \u2212 q."}, {"heading": "3.2 Combine Ranking and Transition", "text": "We want to use both the point ranking and the transitions, i.e. we recommend a path q that maximizes the score of their POIs and their transition probability at the same time. First, we transform the ranking values Rj, q of the POI pj in relation to the query q into a probability distribution using the Softmax function PR (pj | q) = exp (Rj, q) \u2211 i exp (Ri, q), (1) An option to find a path that simultaneously maximizes the ranking probabilities of their POIs and their transition probability is to optimize the following target: argmax T, PL, L, k = 2 logPR (pk | q) + (1 \u2212 \u03b1) L \u2212 1 \u00b2 k = 1 logP (pk + 1 | pk) that the ranking value (pk) and the transition point (pk, pL = pe and pk, P)."}, {"heading": "3.3 Avoiding sub-tours", "text": "Trajectories recommended by Markov (Section 3.1) and Rank + Markov (Section 3.2) = 1 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 3 = 2 = 2 = 3 = 3 = 3 = 3 = 3 = 3 = 3 = 2 + 2 = 2 = 2 + 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 3 = 2 + 2 = 2 = 2 = 2 = 2 = 3 = 2 = 3 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 3 = 3 = 2 + 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 2 + 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 3 = 3 = 3 = 2 + 3 = 2 + 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2 = 2"}, {"heading": "4 Experiment on Flickr Photos", "text": "We evaluate the above algorithms on datasets with trajectories extracted from Flickr photos [23], in five cities, namely Edinburgh, Glasgow, Melbourne, Osaka and Toronto, with statistics presented in Table 1. The Melbourne dataset is based on approaches suggested in previous work [5, 14], and the other four datasets are provided by Lim et al. [14] We use leave-one-out cross validations to evaluate different trajectory recommendation algorithms, i.e. in tests on a trajectory all other trajectories are used for training. We compare with a number of basic approaches such as Random, which naively selects POIs (without substitution) from the specified P\\ {ps to form a trajectory, and PoiPopularity (Section 3.1), which recommends trajectories based on the popularity of POIs."}, {"heading": "4.1 Performance metrics", "text": "A commonly used measure for evaluating POI and trajectory recommendation is the F1 score for points, which represents the harmonious mean of accuracy and retrieval of POIs in the trajectory [14]. Although it is good at measuring whether POIs are recommended correctly, the F1 score in points ignores the order of visits (a) Left: F1 = 1.0, pairs F1 = 0.83 (b) Right: F1 = 1.0, pairs F1 = 0.86 Figure 3: Examples of F1 vs pairs F1 as the benchmark. Solid Grey: ground truth; blue: recommended trajectories. See Section 4.1 for Detaile.between POIs. We propose a new metric pair F1 that takes into account both the POI identity and the order of visits by measuring the F1 score of each pair of POIs, regardless of whether they are adjacent to each other or not in the trajectory, pairs F1 = 2 pair pair + pair, the pair pair and the pair pair and the pair are the pair pair and the pair respectively."}, {"heading": "4.2 Results", "text": "It is obvious that algorithms collecting information about the problem (Table 2) exceed the random baseline in terms of both metrics on all five sets of data. Algorithms based on POI ranking perform strongly in terms of both metrics, examining POI data and querying specific characteristics. PoiRank significantly improves on PoiPopularity and PersTour by using more features. In contrast, Markov, who only uses POI transitions, does not perform well. Algorithms with ranking information (Rank + MarkovPath and Rank + MarkovPath) always perform better than their respective variants with transition information alone (Markov and MarkovPath).We can see from Table 3 that in relation to F1, MarkovPath and Rank + MarkovPath perform data verification."}, {"heading": "4.3 An Illustrative Example", "text": "Figure 4 illustrates an example from Edinburgh. Soil Truth is a path of length 4 that starts at a POI of category structures, visits two intermediate POIs of category structures and culture, and ends at a POI of category structures. PersTour's recommended route is a tour with 11 POIs, as shown in Figure 4 (a), without visiting any of the desired intermediate POIs. PoiRank (Figure 4 (b) recommended a tour with correct POI, but with completely different routes. On the other hand, Markov (Figure 4 (c) missed a POI, but one of the intermediate routes is consistent with soil truthfulness. The best recommendation, as shown in Figure 4 (d), is exactly the same points and routes as the soil truthfulness, which is reached in this case by Rank + MarkovPath."}, {"heading": "5 Discussion and Conclusion", "text": "In this paper, we propose an approach to recommend trajectories by jointly optimizing point preferences and routes, as opposed to related work that considers only POI or Nextlocation recommendations. Point preferences are learned by ranking by POI and query functions, and factored transition probabilities between POIs are learned from previous trajectories extracted from social media. We examine the Maximum Probability Sequence approach (which can recommend sub-tours) and propose an improved sequence recommendation methodology. Of course, our feature-driven approach allows learning the combination of POI rankings and routes. We argue that performance should be measured in terms of the sequence of visits of POIs and propose a new PairsF1 metric. We evaluate our touch recommendation approaches empirically using five data sets extracted from Flickr photos, and show that our method improves both in terms of traditional formula 1 and our proposed performance measurement."}, {"heading": "Acknowledgements", "text": "We thank Kwan Hui Lim for kindly providing his R code to reproduce his experiments. This work is supported in part by the Australian Research Council through the Discovery Project program DP140102185."}, {"heading": "A POI Features for Ranking", "text": "In fact, the fact is that most of them will be able to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight."}, {"heading": "B Transition Probabilities", "text": "We calculate the POI-POI transition matrix by factoring the transition probabilities from POI pi to POI pj as a product of the transition probabilities between pairs of individual POI characteristics shown in Table 6.POI characteristics as described in Section 2 \u2022 Transition matrices of individual characteristics are calculated with maximum probability, i.e. the number of transitions for each pair of characteristics is then calculated by normalizing each line, adding zeros before normalization. Figure 7 visualizes the transition matrices for individual POI characteristics in Melbourne. The POI-POI transition matrix is calculated by taking the Kronecker product of transition matrices for each characteristic, and then updating it with the following limitations: 1In our experiments, the normality of the group (= 1) that we prevent self-transition ability is zero by setting the probability from (pi to pi)."}, {"heading": "C Experiment", "text": "It is not the first time that a user has made a POI visit after the time in which the user has left a POI, approximately the time in which a POI visit is approximated by the user, approximately the time in which he makes a POI visit, approximately the time in which a user approximates a POI picture from the time in which the user accepted a POI visit. In addition, the consequence of the POI visits in multiple parts is after the time gap between successive POI visits, and the POI visits in each piece is temporally linked to form a trajectory [5, 14].C.2 ParametersWe use a 0.5 trade-off parameter for PersTours and the tour tour."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "The problem of recommending tours to travellers is an impor-<lb>tant and broadly studied area. Suggested solutions include<lb>various approaches of points-of-interest (POI) recommenda-<lb>tion and route planning. We consider the task of recommend-<lb>ing a sequence of POIs, that simultaneously uses information<lb>about POIs and routes. Our approach unifies the treatment<lb>of various sources of information by representing them as fea-<lb>tures in machine learning algorithms, enabling us to learn<lb>from past behaviour. Information about POIs are used to<lb>learn a POI ranking model that accounts for the start and<lb>end points of tours. Data about previous trajectories are used<lb>for learning transition patterns between POIs that enable us<lb>to recommend probable routes. In addition, a probabilistic<lb>model is proposed to combine the results of POI ranking and<lb>the POI to POI transitions. We propose a new F1 score on<lb>pairs of POIs that capture the order of visits. Empirical re-<lb>sults show that our approach improves on recent methods,<lb>and demonstrate that combining points and routes enables<lb>better trajectory recommendations.", "creator": "LaTeX with hyperref package"}}}