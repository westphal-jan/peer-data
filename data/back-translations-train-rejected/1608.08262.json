{"id": "1608.08262", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Aug-2016", "title": "Vicious Circle Principle and Formation of Sets in ASP Based Languages", "abstract": "The paper continues the investigation of Poincare and Russel's Vicious Circle Principle (VCP) in the context of the design of logic programming languages with sets. We expand previously introduced language Alog with aggregates by allowing infinite sets and several additional set related constructs useful for knowledge representation and teaching. In addition, we propose an alternative formalization of the original VCP and incorporate it into the semantics of new language, Slog+, which allows more liberal construction of sets and their use in programming rules. We show that, for programs without disjunction and infinite sets, the formal semantics of aggregates in Slog+ coincides with that of several other known languages. Their intuitive and formal semantics, however, are based on quite different ideas and seem to be more involved than that of Slog+.", "histories": [["v1", "Mon, 29 Aug 2016 21:58:07 GMT  (35kb)", "http://arxiv.org/abs/1608.08262v1", "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016"]], "COMMENTS": "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["michael gelfond", "yuanlin zhang"], "accepted": false, "id": "1608.08262"}, "pdf": {"name": "1608.08262.pdf", "metadata": {"source": "CRF", "title": "Vicious Circle Principle and Formation of Sets in ASP Based Languages", "authors": ["Michael Gelfond", "Yuanlin Zhang"], "emails": ["y.zhang}@ttu.edu"], "sections": [{"heading": null, "text": "ar Xiv: 160 8.08 262v 1 [cs.A I] 2 9A ug"}, {"heading": "1 Introduction", "text": "This paper is a continuation of the work begun in [15] with the introduction of Alog - a version of Answer Set Prolog (ASP). [15] It is even useful that there are two different approaches. (However, it is not possible that the semantics of Alog fully refers to the rationality principle of ASP [12] with the adaptation of the principle of the vicious circle (VCP) to the arguments introduced by Poincare and Russell [29,31] in their attempt to resolve the paradoxes of set theory. In Alog, the latter is used to deal with the formation of sets and their legitimate use in program rules. To understand the difficulties raised by Alog, we consider the following programs: Example 1. P0 consisting of a rule: p (1): - Map {X: p: p: p}}}}., consisting of rules: p: - p: - p (0). p (0): - p: - 1."}, {"heading": "2.1 Syntax", "text": "Let us be a (possibly sorted) signature with a finite collection of predicates and function symbols and (possibly infinite) collection of object constants, and let A be a finite collection of symbols used to denote functions from arithmetic terms in integers. Terms and literals about signatures are defined as usual and are called regular. Regular terms are called floors if they contain no variables and no occurrence of symbols for arithmetic functions. Likewise, let us refer to an expression {X: cond} (1) where cond} (1) is a finite collection of regular literals, and X: p is the list of variables that occur in cond as a set name. It is read as a set of all objects in the program that are assumed to satisfy conform. Variables from X: cond} (1) are often referred to as set variables, which are set variables in the standard form."}, {"heading": "2.2 Semantics", "text": "This year it has come to the point that it has never come as far as this year."}, {"heading": "4 Properties of VCP Based Extensions of ASP", "text": "In this section we give some basic characteristics of Alog and Slog + programs. Propositions 1 and 2 ensure that, as in regular ASP, the responses of Alog programs are shaped by the rationality principle. Proposition 3 is the Alog / Slog + version of the Splitting Set Theorem - a basic technical tool used in the theoretical investigation of ASP and its extensions. Definition 1: Rle Satisfaction and Supportedness. Be an Alog or Slog + response to a basic program. Then- A satisfies any rule r of A and its extensions. - If there is a rule r of A so that the body is satisfied by R and the response of S is only an Alog or Slog + response to a basic program."}, {"heading": "5 Related Work", "text": "There are several approaches to introducing aggregates in logical programming languages under the semantics response theorems [17,10,24,23,22,26,27,7,8,25,34,18,33,21,6,20,39,16,32,15,9,2]. In addition to this work, our paper was substantially influenced by the original work on VCP in set theory and the principles of language design advocated by Dijkstra, Hoare, Wirth and others. Harrison et al., who explained the semantics of some gringo constructs with respect to Truszczynski's infinite formulas [37], led to their inclusion in Alog and Slog +. The notion of alog set reduction was influenced by the reduction introduced to define the semantics of epistemic specification in [11]. The recent work of Alviano and Faber has helped us realize the close relationship between alog and slog and argument theory."}, {"heading": "6 Conclusion", "text": "The paper is part of a series of works aimed at developing an answer to the question of representation. Although we want to have a language that is suitable for serious use, our main focus is on teaching, which requires an additional premium on clarity and simplicity of language design. In particular, we believe that the syntax of the language is simpler than that of most popular aggregated languages implemented in Clingo and other similar systems. In particular, we focus on a language that extends the standard sentence by aggregates. We argue that the syntax of the language is simpler than that of the most popular aggregated languages."}], "references": [{"title": "Stable model semantics of abstract dialectical frameworks revisited: A logic programming perspective", "author": ["M. Alviano", "W. Faber"], "venue": "Proceedings of the 21st International Joint Conference on Artificial Intelligence. IJCAI Organization, Buenos Aires, Argentina. pp. 2684\u20132690", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "Complexity and compilation of gz-aggregates in answer set programming", "author": ["M. Alviano", "N. Leone"], "venue": "Theory and Practice of Logic Programming 15(4-5), 574\u2013587", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Abstract dialectical frameworks revisited", "author": ["G. Brewka", "S. Ellmauthaler", "H. Strass", "J.P. Wallner", "S. Woltran"], "venue": "Proceedings of the Twenty-Third international joint conference on Artificial Intelligence. pp. 803\u2013809. AAAI Press", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "Intensional sets in CLP", "author": ["A. Dovier", "E. Pontelli", "G. Rossi"], "venue": "Logic Programming, 19th International Conference, ICLP 2003, Mumbai, India, December 9-13, 2003, Proceedings. pp. 284\u2013299", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games", "author": ["P.M. Dung"], "venue": "Artificial intelligence 77(2), 321\u2013357", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1995}, {"title": "Semantics and complexity of recursive aggregates in answer set programming", "author": ["W. Faber", "G. Pfeifer", "N. Leone"], "venue": "Artificial Intelligence 175(1), 278\u2013298", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "Answer sets for propositional theories", "author": ["P. Ferraris"], "venue": "LPNMR. pp. 119\u2013131", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2005}, {"title": "Weight constraints as nested expressions", "author": ["P. Ferraris", "V. Lifschitz"], "venue": "TPLP 5(1-2), 45\u201374", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2005}, {"title": "Abstract gringo", "author": ["M. Gebser", "A. Harrison", "R. Kaminski", "V. Lifschitz", "T. Schaub"], "venue": "Theory and Practice of Logic Programming 15(4-5), 449\u2013463", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Representing Knowledge in A-Prolog", "author": ["M. Gelfond"], "venue": "Kakas, A.C., Sadri, F. (eds.) Computational Logic: Logic Programming and Beyond, Essays in Honour of Robert A. Kowalski, Part II. vol. 2408, pp. 413\u2013451. Springer Verlag, Berlin", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2002}, {"title": "New semantics for epistemic specifications", "author": ["M. Gelfond"], "venue": "Logic Programming and Nonmonotonic Reasoning, pp. 260\u2013265. Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Knowledge Representation, Reasoning, and the Design of Intelligent Agents", "author": ["M. Gelfond", "Y. Kahl"], "venue": "Cambridge University Press", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["M. Gelfond", "V. Lifschitz"], "venue": "New Generation Computing 9(3/4), 365\u2013386", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1991}, {"title": "On consistency and completeness of autoepistemic theories", "author": ["M. Gelfond", "H. Przymusinska"], "venue": "Fundam. Inf. 16(1)", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1992}, {"title": "Vicious circle principle and logic programs with aggregates", "author": ["M. Gelfond", "Y. Zhang"], "venue": "TPLP 14(4-5),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "The semantics of gringo and infinitary propositional formulas", "author": ["A.J. Harrison", "V. Lifschitz", "F. Yang"], "venue": "KR", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Semantics of logic programs with aggregates", "author": ["D.B. Kemp", "P.J. Stuckey"], "venue": "ISLP. vol. 91, pp. 387\u2013401. Citeseer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1991}, {"title": "A reductive semantics for counting and choice in answer set programming", "author": ["J. Lee", "V. Lifschitz", "R. Palla"], "venue": "Proceedings of the Twenty-Third AAAI Conference on Artificial Intelligence,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "Splitting a logic program", "author": ["V. Lifschitz", "H. Turner"], "venue": "Proceedings of the 11th International Conference on Logic Programming (ICLP94). pp. 23\u201338", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1994}, {"title": "Strong equivalence of logic programs with abstract constraint atoms", "author": ["G. Liu", "R. Goebel", "T. Janhunen", "I. Niemel\u00e4", "J.H. You"], "venue": "Logic Programming and Nonmonotonic Reasoning, pp. 161\u2013173. Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Logic programs with abstract constraint atoms: The role of computations", "author": ["L. Liu", "E. Pontelli", "T.C. Son", "M. Truszczynski"], "venue": "Artif. Intell. 174(3-4), 295\u2013315", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "Set constraints in logic programming", "author": ["V.W. Marek", "J.B. Remmel"], "venue": "Logic Programming and Nonmonotonic Reasoning, pp. 167\u2013179. Springer", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2004}, {"title": "Logic programs with abstract constraint atoms", "author": ["V.W. Marek", "M. Truszczynski"], "venue": "AAAI. vol. 4, pp. 86\u201391", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2004}, {"title": "Extending and implementing the stable model semantics", "author": ["I. Niemela", "P. Simons", "T. Soininen"], "venue": "Artificial Intelligence 138(1\u20132), 181\u2013234", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2002}, {"title": "Well-fouded and stable semantics of logic programs with aggregates", "author": ["N. Pelov", "M. Denecker", "M. Bruynooghe"], "venue": "Theory and Practice of Logic Programming 7, 355\u2013375", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2007}, {"title": "Semantics of logic programs with aggregates", "author": ["N. Pelov"], "venue": "Ph.D. thesis, Katholieke Universiteit Leuven, Leuven, Belgium", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2004}, {"title": "Partial stable models for logic programs with aggregates", "author": ["N. Pelov", "M. Denecker", "M. Bruynooghe"], "venue": "LPNMR. pp. 207\u2013219", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2004}, {"title": "Semantics of disjunctive programs with monotone aggregates - an operator-based approach", "author": ["N. Pelov", "M. Truszczynski"], "venue": "NMR. pp. 327\u2013334", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2004}, {"title": "Les mathematiques et la logique", "author": ["H. Poincare"], "venue": "Review de metaphysique et de morale 14, 294\u2013317", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1906}, {"title": "Answer sets for logic programs with arbitrary abstract constraint atoms", "author": ["E. Pontelli", "T.C. Son", "P.H. Tu"], "venue": "CoRR abs/1110.2205", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2011}, {"title": "Mathematical logic as based on the theory of types", "author": ["B. Russell"], "venue": "American Journal of Mathematics 30(3), 222\u2013262", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1908}, {"title": "Flp answer set semantics without circular justifications for general logic programs", "author": ["Y.D. Shen", "K. Wang", "T. Eiter", "M. Fink", "C. Redl", "T. Krennwallner", "J. Deng"], "venue": "Artificial Intelligence 213, 1\u201341", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2014}, {"title": "Characterizations of stable model semantics for logic programs with arbitrary constraint atoms", "author": ["Y. Shen", "J. You", "L. Yuan"], "venue": "TPLP 9(4), 529\u2013564", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2009}, {"title": "A constructive semantic characterization of aggregates in answer set programming", "author": ["T.C. Son", "E. Pontelli"], "venue": "TPLP 7(3), 355\u2013375", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2007}, {"title": "Answer sets for logic programs with arbitrary abstract constraint atoms", "author": ["T.C. Son", "E. Pontelli", "P.H. Tu"], "venue": "J. Artif. Intell. Res. (JAIR) 29, 353\u2013389", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}, {"title": "Approximating operators and semantics for abstract dialectical frameworks", "author": ["H. Strass"], "venue": "Artificial Intelligence 205, 39\u201370", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2013}, {"title": "Connecting first-order asp and the logic fo (id) through reducts", "author": ["M. Truszczynski"], "venue": "Correct Reasoning, pp. 543\u2013559. Springer", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2012}, {"title": "Splitting a default theory", "author": ["H. Turner"], "venue": "Proceedings of the Thirteenth National Conference on Artificial Intelligence and Eighth Innovative Applications of Artificial Intelligence Conference, AAAI 96, IAAI 96, Portland, Oregon, August 4-8, 1996, Volume 1. pp. 645\u2013651", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1996}, {"title": "A well-founded semantics for basic logic programs with arbitrary abstract constraint atoms", "author": ["Y. Wang", "F. Lin", "M. Zhang", "J.H. You"], "venue": "AAAI", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 14, "context": "This paper is the continuation of work started in [15] with introduction of Alog \u2013 a version of Answer Set Prolog (ASP) with aggregates.", "startOffset": 50, "endOffset": 54}, {"referenceID": 11, "context": "The semantics of Alog combines the Rationality Principle of ASP [12] with the adaptation of the Vicious Circle Principle (VCP) introduced by Poincare and Russel [29,31] in their attempt to resolve paradoxes of set theory.", "startOffset": 64, "endOffset": 68}, {"referenceID": 28, "context": "The semantics of Alog combines the Rationality Principle of ASP [12] with the adaptation of the Vicious Circle Principle (VCP) introduced by Poincare and Russel [29,31] in their attempt to resolve paradoxes of set theory.", "startOffset": 161, "endOffset": 168}, {"referenceID": 30, "context": "The semantics of Alog combines the Rationality Principle of ASP [12] with the adaptation of the Vicious Circle Principle (VCP) introduced by Poincare and Russel [29,31] in their attempt to resolve paradoxes of set theory.", "startOffset": 161, "endOffset": 168}, {"referenceID": 5, "context": "To the best of our knowledge all ASP based semantics, including that of [6,34,15]) view P0 as a bad specification.", "startOffset": 72, "endOffset": 81}, {"referenceID": 33, "context": "To the best of our knowledge all ASP based semantics, including that of [6,34,15]) view P0 as a bad specification.", "startOffset": 72, "endOffset": 81}, {"referenceID": 14, "context": "To the best of our knowledge all ASP based semantics, including that of [6,34,15]) view P0 as a bad specification.", "startOffset": 72, "endOffset": 81}, {"referenceID": 5, "context": "[6] views P1 as a reasonable specification having one answer set \u2013 {p(0), p(1)}.", "startOffset": 0, "endOffset": 3}, {"referenceID": 33, "context": "According to [34,15] P1 is inconsistent.", "startOffset": 13, "endOffset": 20}, {"referenceID": 14, "context": "According to [34,15] P1 is inconsistent.", "startOffset": 13, "endOffset": 20}, {"referenceID": 33, "context": "(The name of the new language is explained by its close relationship with language Slog [34] \u2013 see Theorem 2).", "startOffset": 88, "endOffset": 92}, {"referenceID": 14, "context": "Rules containing non-bound occurrences of variables are considered as shorthands for their ground instantiations (for details see [15]).", "startOffset": 130, "endOffset": 134}, {"referenceID": 12, "context": "To define the semantics of Alog programs we first notice that the standard definition of answer set from [13] is applicable to programs with infinite rules.", "startOffset": 105, "endOffset": 109}, {"referenceID": 9, "context": "(The definition is similar to that presented in [10]).", "startOffset": 48, "endOffset": 52}, {"referenceID": 23, "context": "The use of a set introduction rule p \u2286 S \u2190 body is very similar to that of choice rule {p(X\u0304) : q(X\u0304)} \u2190 body of [24] implemented in Clingo and other similar systems.", "startOffset": 113, "endOffset": 117}, {"referenceID": 34, "context": "As shown in [35] Slog has sufficient expressive power to formalize complex forms of recursion, including that used in the Company Control Problem [6].", "startOffset": 12, "endOffset": 16}, {"referenceID": 5, "context": "As shown in [35] Slog has sufficient expressive power to formalize complex forms of recursion, including that used in the Company Control Problem [6].", "startOffset": 146, "endOffset": 149}, {"referenceID": 5, "context": "In Slog (and hence in Slog and F log (the language defined in [6])) it has an answer set {p(1)}.", "startOffset": 62, "endOffset": 65}, {"referenceID": 13, "context": "Proposition 3 is the Alog/Slog version of the Splitting Set Theorem \u2013 basic technical tool used in theoretical investigations of ASP and its extensions [14,19,38].", "startOffset": 152, "endOffset": 162}, {"referenceID": 18, "context": "Proposition 3 is the Alog/Slog version of the Splitting Set Theorem \u2013 basic technical tool used in theoretical investigations of ASP and its extensions [14,19,38].", "startOffset": 152, "endOffset": 162}, {"referenceID": 37, "context": "Proposition 3 is the Alog/Slog version of the Splitting Set Theorem \u2013 basic technical tool used in theoretical investigations of ASP and its extensions [14,19,38].", "startOffset": 152, "endOffset": 162}, {"referenceID": 16, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 9, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 23, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 22, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 21, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 25, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 26, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 27, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 6, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 7, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 24, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 33, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 17, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 32, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 20, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 5, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 29, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 19, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 38, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 15, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 31, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 14, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 8, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 1, "context": "There are multiple approaches to introducing aggregates in logic programming languages under the answer sets semantics [17,10,24,23,22,26,27,28,7,8,25,34,18,33,21,6,30,20,39,16,32,15,9,2].", "startOffset": 119, "endOffset": 187}, {"referenceID": 15, "context": "Harrison et al\u2019s work [16] explaining the semantics of some constructs of gringo in terms of infinitary formulas of Truszczynski [37] led to their inclusion in Alog and Slog.", "startOffset": 22, "endOffset": 26}, {"referenceID": 36, "context": "Harrison et al\u2019s work [16] explaining the semantics of some constructs of gringo in terms of infinitary formulas of Truszczynski [37] led to their inclusion in Alog and Slog.", "startOffset": 129, "endOffset": 133}, {"referenceID": 10, "context": "The notion of set reduct of Alog was influenced by the reduct introduced for defining the semantics of Epistemic Specification in [11].", "startOffset": 130, "endOffset": 134}, {"referenceID": 0, "context": "Recent work by Alviano and Faber [1] helped us to realize the close relationship between Alog and Slog and Argumentation theory [5,3,36] which certainly deserves further investigation, as well as provided us with additional knowledge about Alog.", "startOffset": 33, "endOffset": 36}, {"referenceID": 4, "context": "Recent work by Alviano and Faber [1] helped us to realize the close relationship between Alog and Slog and Argumentation theory [5,3,36] which certainly deserves further investigation, as well as provided us with additional knowledge about Alog.", "startOffset": 128, "endOffset": 136}, {"referenceID": 2, "context": "Recent work by Alviano and Faber [1] helped us to realize the close relationship between Alog and Slog and Argumentation theory [5,3,36] which certainly deserves further investigation, as well as provided us with additional knowledge about Alog.", "startOffset": 128, "endOffset": 136}, {"referenceID": 35, "context": "Recent work by Alviano and Faber [1] helped us to realize the close relationship between Alog and Slog and Argumentation theory [5,3,36] which certainly deserves further investigation, as well as provided us with additional knowledge about Alog.", "startOffset": 128, "endOffset": 136}, {"referenceID": 32, "context": "[33] and Liu et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] propose equivalent semantics for disjunctive constraint programs (i.", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "We conjecture that when we adapt our definition of Slog semantics to disjunctive constraint programs, it will coincide with that of [33,20].", "startOffset": 132, "endOffset": 139}, {"referenceID": 19, "context": "We conjecture that when we adapt our definition of Slog semantics to disjunctive constraint programs, it will coincide with that of [33,20].", "startOffset": 132, "endOffset": 139}, {"referenceID": 14, "context": "In our earlier paper [15] we concentrated on a language Alog expanding standard Answer Set Prolog by aggregates.", "startOffset": 21, "endOffset": 25}, {"referenceID": 3, "context": "Other constructs such as set operations and rules with variables ranging over sets (in the style of [4]), etc.", "startOffset": 100, "endOffset": 103}], "year": 2016, "abstractText": "The paper continues the investigation of Poincare and Russel\u2019s Vicious Circle Principle (VCP) in the context of the design of logic programming languages with sets. We expand previously introduced language Alog with aggregates by allowing infinite sets and several additional set related constructs useful for knowledge representation and teaching. In addition, we propose an alternative formalization of the original VCP and incorporate it into the semantics of new language, Slog, which allows more liberal construction of sets and their use in programming rules. We show that, for programs without disjunction and infinite sets, the formal semantics of aggregates in Slog coincides with that of several other known languages. Their intuitive and formal semantics, however, are based on quite different ideas and seem to be more involved than that of Slog.", "creator": "LaTeX with hyperref package"}}}