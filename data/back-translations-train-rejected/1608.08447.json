{"id": "1608.08447", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Aug-2016", "title": "BreakID: Static Symmetry Breaking for ASP (System Description)", "abstract": "Symmetry breaking has been proven to be an efficient preprocessing technique for satisfiability solving (SAT). In this paper, we port the state-of-the-art SAT symmetry breaker BreakID to answer set programming (ASP). The result is a lightweight tool that can be plugged in between the grounding and the solving phases that are common when modelling in ASP. We compare our tool with sbass, the current state-of-the-art symmetry breaker for ASP.", "histories": [["v1", "Tue, 30 Aug 2016 13:47:41 GMT  (427kb,D)", "http://arxiv.org/abs/1608.08447v1", "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016"]], "COMMENTS": "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jo devriendt", "bart bogaerts"], "accepted": false, "id": "1608.08447"}, "pdf": {"name": "1608.08447.pdf", "metadata": {"source": "CRF", "title": "BreakID: Static Symmetry Breaking for ASP (System Description)", "authors": ["Jo Devriendt", "Bart Bogaerts"], "emails": ["firstname.lastname@cs.kuleuven.be"], "sections": [{"heading": "1 Introduction", "text": "This year is the highest in the history of the country."}, {"heading": "2 Preliminaries", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Answer Set Programming", "text": "A vocabulary is a set of symbols, also called atoms; vocabulary is denoted by \u03c3, \u03c4. A dictionary is an atom or its negation. An interpretation I of the vocabulary \u03a3 is a subset of \u03a3. Expressive formulas and the satisfaction relationship between formulas and interpretations are defined as usual. A logic program P via vocabulary \u03a3 is a set of rules r of formh1, \u00b7 \u00b7 \u00b7 hl 270, a1, and the formula a1, \u00b7 a sugar body, (1) in which hi's, ai's and bi's are atoms in \u03a3. Formula h1, f, \u00b7 hl is denoted as head of r, denotes head (r), and formula a1, \u00b7 \u00b7 \u00b7 \u00b7 a model of b1, \u00b7 \u00b7 \u00b7 \u00b7 bm, the body of r, denotes the body of r, denoted body (r). A program is denoted as normal (or positive) if l = 13 (resp. if all rules are written for m)."}, {"heading": "A weight atom", "text": "g \u2264 sum {l1 = wi,.., lf = wf} \u2264 k (where l1,.., lf is to be taken literally and f, g, k, wi-N) is fulfilled if g \u2264 \u2211 {i | I | = li} wi \u2264 k. Sometimes the \"g \u2264\" or \"\u2264 k\" parts of cardinality or weight atoms are dropped. In this case, the obvious semantics applies: the atom is satisfied for each lower / upper limit. For example, the cardinality atom \u2264 # {l1,..., lf} is satisfied whenever g \u2264 # i | I | = li}. An election rule is a rule with a cardinality atom in the head, i.e. a rule of the form g \u2264 # {l1,., lf} \u2264 k \u2012 a1 \u2012 \u00b7 \u00b7 \u00b7 \u00b7 I | = li}."}, {"heading": "2.2 Symmetry", "text": "We extend \u03c0 to dictionary books: \u03c0 (\u00ac a) = \u00ac (\u03c0 (a)), on rules: \u03c0 (h1) \u00b7 \u00b7 \u00b7 hhl (a1) \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7"}, {"heading": "2.3 Graph Automorphisms", "text": "A colored graph is a tuple G = (V, E, c), where V is a set whose elements we call nodes, E is a binary relationship to V; elements of E are called edges, and c is a figure V \u2192 C for a certain set C. The elements of C are called colors. An auto-morphism of G is an image of p: V \u2192 V, so the following two conditions apply: - (u, v) and only if (\u03c0 (u), \u03c0 (v)). The complexity of this problem is strongly suspected between P and NP [6]. Several tools are available to solve this problem, including Saucy [21], sobriety [25], and bliss [20]."}, {"heading": "3 Symmetry Breaking for ASP", "text": "As mentioned in the introduction, symmetry breakage typically consists of three steps. - First, a colored diagram G is created so that the automorphisms of G correspond to the symmetries of P. - Second, a series of generators of the automorphism group G. - Third, a set of symmetry-breaking constraints based on G. In the second step, any chart automorphism tool can be used. Shatter [2], sbass, and BreakID use Saucy for this task. We discuss how to approach the first and last step in the following subsections. 4 In some texts, the term symmetry is reserved for what we call syntactic symmetric.5"}, {"heading": "3.1 Colored Graph Encoding", "text": "This is the only rule that we adopt. - For each rule that we as head (r) and body (r) below.Node head (r) is colored and not as a body (r). Our graph is undirected and the edges are colored as follows: - Each rule is colored with two knots as head (r) and body (r) below.Node head (r) is colored and not as a body (r). - Each rule is colored with others. - For each rule of the form (1) in P, each rule is connected to the shape (r). Each knot is connected to head (r), each knot is connected to body (r), each knot is connected to body (r)."}, {"heading": "3.2 Symmetry Breaking Constraints", "text": "A classical approach to static symmetry refraction is the construction of Lex leader constraints. Definition 1 (Lex leader constraint [9]) Let \u03c6 be a formula over \u03a3, \u03c0 a symmetry of \u03c6, \u0432 \u03a3 an order over \u03a3, and \u0445 the induced lexicographic order over the series of interpretations over \u03a3. \"A formula LL\u03c0 over \u03a3\" is a Lex leader constraint for \u03c0, if for each \u03a3 interpretation I, there is a \u03a3 \"extension of I that satisfies LL\u03c0 iff I. In other words, any interpretation whose symmetrical image is smaller than \u03c0 is invalidated by LL\u03c0. It is easy to see that the conjunction of LL\u03c0 is in some way a symmetry that breaks a sound (but not necessarily complete) symmetry for everyone else."}, {"heading": "4 Experiments", "text": "In this section we compare experimentally sbass and BreakID using Clapp 3.1.4 as solver and Gringo 4.5.5 as grounder. We compare the number of solved instances for a set of four symmetrical decision problems and a set of two symmetrical optimization problems from the ASP competition 2013 [3]."}, {"heading": "4.1 Setup", "text": "The four decision-making processes in our system are pigeons that are graceful and queens.pigeons is a set of 16 unsatisfactory drawer instances in which n pigeons are placed in n-1 different holes.10Crew is a set of 42 unsatisfactory flight instances in which a minimum number of aircraft is detectable, the instances are interchangeable, resulting in a large symmetry group.10Crew members have a series of unsatisfactory flight times in which the flight capacity must be demonstrated."}, {"heading": "4.2 Decision problem results", "text": "This year it is more than ever before."}, {"heading": "4.3 Optimization problem results", "text": "Figure 3 shows the relative objective value of the best solution found after 50000s search time for standstill and valves. Although BreakID recognizes and breaks significant symmetry for both problems and often concludes that valves are interchangeable, the resulting symmetry fraction limitations do not appear to significantly improve the final objective value for these two benchmark families. Nevertheless, the resulting objective value is virtually identical. For valves, the objective value 13 for the run of BreakID was improved in 11 cases, while it has deteriorated in 5 cases, giving BreakID a small advantage over brackets. Considering the number of cases for which optimisation has been proven, both approaches were able to demonstrate optimality for 5 instances and 15 instances of valves, we conclude that our symmetry fraction approach to optimization problems and valves is still detectable and fracture symmetry, but the resulting velocities are small."}, {"heading": "5 Discussion and Conclusion", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "Acknowledgements", "text": "This research was supported by the GOA 13 / 010 Research Fund KU Leuven and the FWO (Research Foundation - Flanders) projects G.0489.10, G.0357.12 and G.0922.13. Bart Bogaerts is supported by the Finnish Center of Excellence in Computational Inference Research (COIN), which is funded by the Finnish Academy (grant number 251170)."}], "references": [{"title": "Solving difficult SAT instances in the presence of symmetry", "author": ["F. Aloul", "A. Ramani", "I. Markov", "K. Sakallah"], "venue": "Proceedings of DAC. pp. 731\u2013736", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2002}, {"title": "Efficient symmetry breaking for Boolean satisfiability", "author": ["F.A. Aloul", "K.A. Sakallah", "I.L. Markov"], "venue": "IEEE Transactions on Computers 55(5), 549\u2013558", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "The fourth Answer Set Programming competition: Preliminary report", "author": ["M. Alviano", "F. Calimeri", "G. Charwat", "M. Dao-Tran", "C. Dodaro", "G. Ianni", "T. Krennwallner", "M. Kronegger", "J. Oetsch", "A. Pfandler", "J. P\u00fchrer", "C. Redl", "F. Ricca", "P. Schneider", "M. Schwengerer", "L.K. Spendier", "J.P. Wallner", "G. Xiao"], "venue": "Proceedings of LPNMR. pp. 42\u201353", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "WASP: A native ASP solver based on constraint learning", "author": ["M. Alviano", "C. Dodaro", "W. Faber", "N. Leone", "F. Ricca"], "venue": "Proceedings of LPNMR. pp. 54\u201366", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Predicting learnt clauses quality in modern SAT solvers", "author": ["G. Audemard", "L. Simon"], "venue": "Boutilier, C. (ed.) Proceedings of IJCAI. pp. 399\u2013404", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "Handbook of Combinatorics, chap", "author": ["L. Babai"], "venue": "Automorphism groups, isomorphism, reconstruction, pp. 1447\u20131540. Elsevier", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1995}, {"title": "The 2013 international SAT competition", "author": ["A. Balint", "A. Belov", "M.J. Heule", "M. J\u00e4rvisalo"], "venue": "satcompetition.org/2013", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Normalizing cardinality rules using merging and sorting constructions", "author": ["J. Bomanson", "T. Janhunen"], "venue": "Proceedings of LPNMR. pp. 187\u2013199", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "Symmetry-Breaking Predicates for Search Problems", "author": ["J.M. Crawford", "M.L. Ginsberg", "E.M. Luks", "A. Roy"], "venue": "Proceedings of KR. pp. 148\u2013159", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1996}, {"title": "Predicate logic as a modelling language: The IDP system", "author": ["B. De Cat", "B. Bogaerts", "M. Bruynooghe", "G. Janssens", "M. Denecker"], "venue": "CoRR abs/1401.6312v2", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2016}, {"title": "Model expansion in the presence of function symbols using constraint programming", "author": ["B. De Cat", "B. Bogaerts", "J. Devriendt", "M. Denecker"], "venue": "Proceedings of ICTAI. pp", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "A logic of nonmonotone inductive definitions", "author": ["M. Denecker", "E. Ternovska"], "venue": "ACM Trans. Comput. Log. 9(2), 14:1\u201314:52", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "BreakIDGlucose: On the importance of row symmetry in SAT", "author": ["J. Devriendt", "B. Bogaerts", "M. Bruynooghe"], "venue": "Proceedings of CSPSAT", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2014}, {"title": "Improved static symmetry breaking for SAT", "author": ["J. Devriendt", "B. Bogaerts", "M. Bruynooghe", "M. Denecker"], "venue": "Proceedings of SAT. pp. 104\u2013122", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2016}, {"title": "Symmetry-breaking answer set solving", "author": ["C. Drescher", "O. Tifrea", "T. Walsh"], "venue": "AI Communications 24(2), 177\u2013194", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Conflict-driven answer set solving: From theory to practice", "author": ["M. Gebser", "B. Kaufmann", "T. Schaub"], "venue": "AIJ 187, 52\u201389", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}, {"title": "GrinGo: A new grounder for Answer Set Programming", "author": ["M. Gebser", "T. Schaub", "S. Thiele"], "venue": "Proceedings of LPNMR. pp. 266\u2013271", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2007}, {"title": "The stable model semantics for logic programming", "author": ["M. Gelfond", "V. Lifschitz"], "venue": "Proceedings of ICLP/SLP. pp. 1070\u20131080", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1988}, {"title": "The 2016 international SAT competition", "author": ["M. Heule", "M. J\u00e4rvisalo", "T. Balyo"], "venue": "http: //baldur.iti.kit.edu/sat-competition-2016", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2016}, {"title": "Engineering an efficient canonical labeling tool for large and sparse graphs", "author": ["T. Junttila", "P. Kaski"], "venue": "Proceedings of the Ninth Workshop on Algorithm Engineering and Experiments and the Fourth Workshop on Analytic Algorithms and Combinatorics. pp. 135\u2013149", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2007}, {"title": "Symmetry and satisfiability: An update", "author": ["H. Katebi", "K.A. Sakallah", "I.L. Markov"], "venue": "Proceedings of SAT. pp. 113\u2013127", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "Answer set planning", "author": ["V. Lifschitz"], "venue": "Proceedings of ICLP. pp. 23\u201337", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1999}, {"title": "Stable models and an alternative logic programming paradigm", "author": ["V. Marek", "M. Truszczy\u0144ski"], "venue": "The Logic Programming Paradigm: A 25-Year Perspective, pp. 375\u2013 398. Springer-Verlag", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}, {"title": "GRASP: A search algorithm for propositional satisfiability", "author": ["J.P. Marques-Silva", "K.A. Sakallah"], "venue": "IEEE Transactions on Computers 48(5), 506\u2013521", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1999}, {"title": "Practical graph isomorphism, {II", "author": ["B.D. McKay", "A. Piperno"], "venue": "Journal of Symbolic Computation 60(0), 94 \u2013 112", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "Logic programs with stable model semantics as a constraint programming paradigm", "author": ["I. Niemel\u00e4"], "venue": "Ann. Math. Artif. Intell. 25(3-4), 241\u2013273", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1999}, {"title": "Improving SAT solvers by exploiting empirical characteristics of CDCL", "author": ["C. Oh"], "venue": null, "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2015}, {"title": "Symchaff: exploiting symmetry in a structure-aware satisfiability solver", "author": ["A. Sabharwal"], "venue": "Constraints 14(4), 478\u2013505", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2009}, {"title": "Symmetry and satisfiability", "author": ["K.A. Sakallah"], "venue": "Handbook of Satisfiability 185, 289\u2013 338", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2009}, {"title": "Dynamic symmetry breaking by simulating zykov contraction", "author": ["B. Schaafsma", "M.J. Heule", "H. Maaren"], "venue": "Proceedings of SAT. pp. 223\u2013236", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "The well-founded semantics for general logic programs", "author": ["A. Van Gelder", "K.A. Ross", "J.S. Schlipf"], "venue": "J. ACM 38(3), 620\u2013650", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1991}, {"title": "Compositional derivation of symmetries for constraint satisfaction", "author": ["P. Van Hentenryck", "P. Flener", "J. Pearson", "M. \u00c5gren"], "venue": "Proceedings of SARA. pp. 234\u2013247", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2005}, {"title": "Symmetry breaking constraints: Recent results", "author": ["T. Walsh"], "venue": "CoRR abs/1204.3348", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 15, "context": "In fact, many (if not all) modern ASP solvers [16, 4, 11] are based on conflict-driven clause learning (CDCL) [24], a technique first developed for SAT.", "startOffset": 46, "endOffset": 57}, {"referenceID": 3, "context": "In fact, many (if not all) modern ASP solvers [16, 4, 11] are based on conflict-driven clause learning (CDCL) [24], a technique first developed for SAT.", "startOffset": 46, "endOffset": 57}, {"referenceID": 10, "context": "In fact, many (if not all) modern ASP solvers [16, 4, 11] are based on conflict-driven clause learning (CDCL) [24], a technique first developed for SAT.", "startOffset": 46, "endOffset": 57}, {"referenceID": 23, "context": "In fact, many (if not all) modern ASP solvers [16, 4, 11] are based on conflict-driven clause learning (CDCL) [24], a technique first developed for SAT.", "startOffset": 110, "endOffset": 114}, {"referenceID": 13, "context": "In this paper, we port a recently introduced symmetry breaking preprocessor, BreakID [14] to ASP.", "startOffset": 85, "endOffset": 89}, {"referenceID": 12, "context": "A first version of BreakID was developed in 2013 [13].", "startOffset": 49, "endOffset": 53}, {"referenceID": 6, "context": "This version won a gold medal on the 2013 SAT competition [7] in combination with the SAT solver Glucose 2.", "startOffset": 58, "endOffset": 61}, {"referenceID": 4, "context": "1 [5].", "startOffset": 2, "endOffset": 5}, {"referenceID": 13, "context": "The latest version of BreakID was developed in 2015 [14] and won the gold medal in the no limit track of the 2016 SAT competition [19] in combination with the SAT solver COMiniSatPS [27].", "startOffset": 52, "endOffset": 56}, {"referenceID": 18, "context": "The latest version of BreakID was developed in 2015 [14] and won the gold medal in the no limit track of the 2016 SAT competition [19] in combination with the SAT solver COMiniSatPS [27].", "startOffset": 130, "endOffset": 134}, {"referenceID": 26, "context": "The latest version of BreakID was developed in 2015 [14] and won the gold medal in the no limit track of the 2016 SAT competition [19] in combination with the SAT solver COMiniSatPS [27].", "startOffset": 182, "endOffset": 186}, {"referenceID": 1, "context": "The most wellknown symmetry breaker for SAT is Shatter [2].", "startOffset": 55, "endOffset": 58}, {"referenceID": 20, "context": "Shatter works by (i) transforming a SAT theory into a colored graph whose automorphisms correspond to symmetries of the theory, (ii) calling a graph automorphism detection tool such as Saucy [21] to obtain a set of generators of the symmetry group, and (iii) adding constraints that break each of the generators returned by the previous step.", "startOffset": 191, "endOffset": 195}, {"referenceID": 13, "context": "Good choices for these two parameters strongly influence the breaking power and the size of the resulting constraints [14] .", "startOffset": 118, "endOffset": 122}, {"referenceID": 14, "context": "The techniques from Shatter have been ported to ASP by the ASP symmetry breaker sbass [15].", "startOffset": 86, "endOffset": 90}, {"referenceID": 13, "context": "For the third step (generating symmetry breaking constraints), we use all of the improvements that are already present in the SAT-version of BreakID [14].", "startOffset": 149, "endOffset": 153}, {"referenceID": 17, "context": "An interpretation I is a stable model or an answer set of P if it is a \u2286-minimal model of P [18].", "startOffset": 92, "endOffset": 96}, {"referenceID": 22, "context": "This observation gave birth to the field of answer set programming [23, 26, 22].", "startOffset": 67, "endOffset": 79}, {"referenceID": 25, "context": "This observation gave birth to the field of answer set programming [23, 26, 22].", "startOffset": 67, "endOffset": 79}, {"referenceID": 21, "context": "This observation gave birth to the field of answer set programming [23, 26, 22].", "startOffset": 67, "endOffset": 79}, {"referenceID": 7, "context": "These language constructs can all be translated to normal rules [8].", "startOffset": 64, "endOffset": 67}, {"referenceID": 32, "context": "If \u03a0 is a symmetry group, then a set of constraints \u03c8 is sound if for each interpretation I there exists at least one symmetry \u03c0 \u2208 \u03a0 such that \u03c0(I) satisfies \u03c8; \u03c8 is complete if for each assignment \u03b1 there exists at most one symmetry \u03c0 \u2208 \u03a0 such that \u03c0(\u03b1) satisfies \u03c8 [34].", "startOffset": 267, "endOffset": 271}, {"referenceID": 5, "context": "The complexity of this problem is conjectured to be strictly in between P and NP [6].", "startOffset": 81, "endOffset": 84}, {"referenceID": 20, "context": "Several tools are available to tackle this problem, including Saucy [21], nauty [25] and bliss [20].", "startOffset": 68, "endOffset": 72}, {"referenceID": 24, "context": "Several tools are available to tackle this problem, including Saucy [21], nauty [25] and bliss [20].", "startOffset": 80, "endOffset": 84}, {"referenceID": 19, "context": "Several tools are available to tackle this problem, including Saucy [21], nauty [25] and bliss [20].", "startOffset": 95, "endOffset": 99}, {"referenceID": 1, "context": "Shatter [2], sbass and BreakID make use of Saucy for this task.", "startOffset": 8, "endOffset": 11}, {"referenceID": 14, "context": "As for encoding a logic program as a colored graph, our approach is very close to the one introduced by sbass [15] (we discuss and justify the differences below).", "startOffset": 110, "endOffset": 114}, {"referenceID": 16, "context": "As a result, our tool supports the full Lparse-Smodels intermediate language as documented in [31] and additionally, the rule type \u201c8\u201d used by gringo [17] to represent disjunctive rules.", "startOffset": 150, "endOffset": 154}, {"referenceID": 8, "context": "Definition 1 (Lex-leader constraint [9]).", "startOffset": 36, "endOffset": 39}, {"referenceID": 0, "context": "[1].", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "The drawback of this approach is discussed extensively in the work that introduced BreakID [14].", "startOffset": 91, "endOffset": 95}, {"referenceID": 28, "context": "\u2013 A slightly better encoding of the lex-leader constraints can be used [29].", "startOffset": 71, "endOffset": 75}, {"referenceID": 2, "context": "We compare the number of solved instances for a set of four symmetric decision problems, and a set of two symmetric optimization problems from the 2013\u2019s ASP competition [3].", "startOffset": 170, "endOffset": 173}, {"referenceID": 2, "context": "graceful consists of 60 satisfiable and unsatisfiable graceful graph instances, taken from 2013\u2019s ASP competition [3].", "startOffset": 114, "endOffset": 117}, {"referenceID": 2, "context": "Both problems\u2019 models and instances are taken from 2013\u2019s ASP competition [3], but manual symmetry breaking constraints were removed from the ASP specification.", "startOffset": 74, "endOffset": 77}, {"referenceID": 14, "context": "[15].", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15].", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "This is consistent with our previous findings [14], where we argued that deriving better symmetry breaking clauses incurs extra overhead.", "startOffset": 46, "endOffset": 50}, {"referenceID": 29, "context": "For instance, in SAT and constraint programming, dynamic symmetry breaking is well-studied [30, 13, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 12, "context": "For instance, in SAT and constraint programming, dynamic symmetry breaking is well-studied [30, 13, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 27, "context": "For instance, in SAT and constraint programming, dynamic symmetry breaking is well-studied [30, 13, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 31, "context": "In constraint programming, work has been done on composing the symmetry properties of global constraints into a symmetry group of the original problem [33].", "startOffset": 151, "endOffset": 155}, {"referenceID": 9, "context": "Recently, we proposed first-order symmetry detection and breaking algorithms for the IDP system [10], a system whose input language relates closely to ASP.", "startOffset": 96, "endOffset": 100}, {"referenceID": 30, "context": "They are equally applicable for instance to the well-founded semantics [32], and hence apply as well to the logic FO(ID) [12] (which combines logic programs under the well-founded semantics with propositional theories).", "startOffset": 71, "endOffset": 75}, {"referenceID": 11, "context": "They are equally applicable for instance to the well-founded semantics [32], and hence apply as well to the logic FO(ID) [12] (which combines logic programs under the well-founded semantics with propositional theories).", "startOffset": 121, "endOffset": 125}], "year": 2016, "abstractText": "Symmetry breaking has been proven to be an efficient preprocessing technique for satisfiability solving (SAT). In this paper, we port the state-of-the-art SAT symmetry breaker BreakID to answer set programming (ASP). The result is a lightweight tool that can be plugged in between the grounding and the solving phases that are common when modelling in ASP. We compare our tool with sbass, the current stateof-the-art symmetry breaker for ASP.", "creator": "TeX"}}}