{"id": "1609.00030", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-Aug-2016", "title": "PDDL+ Planning via Constraint Answer Set Programming", "abstract": "PDDL+ is an extension of PDDL that enables modelling planning domains with mixed discrete-continuous dynamics. In this paper we present a new approach to PDDL+ planning based on Constraint Answer Set Programming (CASP), i.e. ASP rules plus numerical constraints. To the best of our knowledge, ours is the first attempt to link PDDL+ planning and logic programming. We provide an encoding of PDDL+ models into CASP problems. The encoding can handle non-linear hybrid domains, and represents a solid basis for applying logic programming to PDDL+ planning. As a case study, we consider the EZCSP CASP solver and obtain promising results on a set of PDDL+ benchmark problems.", "histories": [["v1", "Wed, 31 Aug 2016 20:38:30 GMT  (392kb,D)", "http://arxiv.org/abs/1609.00030v1", "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016"]], "COMMENTS": "Paper presented at the 9th Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP 2016), New York City, USA, 16 October 2016", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["marcello balduccini", "daniele magazzeni", "marco maratea"], "accepted": false, "id": "1609.00030"}, "pdf": {"name": "1609.00030.pdf", "metadata": {"source": "CRF", "title": "PDDL+ Planning via Constraint Answer Set Programming", "authors": ["Marcello Balduccini", "Daniele Magazzeni", "Marco Maratea"], "emails": ["marcello.balduccini@gmail.com", "daniele.magazzeni@kcl.ac.uk", "marco@dibris.unige.it"], "sections": [{"heading": "1 Introduction", "text": "Hybrid domain planning is a challenging problem that has received increasing attention in the planning community, mainly motivated by the need to model real domains. In fact, in addition to classical planning, hybrid domains allow modeling of continuous behavior with continuous variables that evolve over time. PDDL + [7] is the extension of the PDDL language that allows modeling of domains with mixed discrete and continuous dynamics, through continuous processes and exogenous events. Various techniques and tools have been proposed to deal with hybrid domains (as described in Section 6), but few of them are able to handle the full set of PDDL + features. This motivates the search for new ways to handle PDDL +. To this end, we are investigating the feasibility of an approach to PDDL + planning based on constraints, the D1 programming (CASP) [i.e. numeric set of rules and ASP] constraints."}, {"heading": "2 Background", "text": "Planning strives to select and organize activities in order to achieve specific objectives. A planner uses a domain model that describes the actions through their pre- and post-conditions, and a starting state along with a target condition. It then searches for a path through the induced state space, which means that a plan can synchronize the activities between controlled devices and external events. Definition 1 (Planning Instance [3]): A planning instance is a pair in which the induced state space can be given formal semantics as a time-controlled hybrid automation, which means that a plan can synchronize the activities between controlled devices and external events. A planning instance is a pair in which the action space can be given a formal semantics, where Dom = (Fs, Rs, Artigkeit) is a tuple consisting of a finite set of function symbols Fs, a finite set of relation symbols Rs, a finite set of actions."}, {"heading": "3 Encoding PDDL+ Models into CASP Problems", "text": "It's about the question of how far it's going to be about the way it's going to affect the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to be about the way it's going to feel and the way it's going to be about the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to look like it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to look and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it's going to feel and the way it"}, {"heading": "4 Case Study", "text": "For our study, we focused on a specific incarnation of CASP, called EZCSP [1]."}, {"heading": "5 Experimental Results", "text": "\"We did an empirical evaluation of the performance we achieved with our approach.\" It was a comparison with the state-of-the-art PDDL + planners dReal, UPMurphi, and SMTPlan +. \"It was a complex problem focused only on plan-non-existence.\" The experimental setup used a VMWare workstation 12 virtual machine with a sinful core of an i7-4790K CPU around 4.00GHz and Fedora 22 bit. The version of EZCSP was 1.7.4, with gringo 3.0.5, clasp 3.1.3, B-Prolog 7.5, and GAMS 24.5.7. The B-Prolog was used for all linear problems and GAMS for the non-linear ones. The other systems used were dReal 2.15.11, UPMurphi 3.0.2, and SMTPlan + (public version as of Jul 7, 2016)."}, {"heading": "6 Related Work", "text": "To the best of our knowledge, our first attempt is to combine PDDL + planning and logic programming. Various techniques and tools have been proposed to deal with hybrid domains with other techniques, most of which are unable to handle the full set of PDDL + functions, namely non-linear domains with processes and happenings. dReach [4], for example, uses SMT to plan in hybrid systems, but does not provide direct translation from PDDL + and does not handle exogenous events. SMTPlan + [5] is another approach based on a translation into SMT, but supports the full PDDL + language and excels in our evaluation. A number of approaches have been proposed from the model review and control communities (e.g. [3]). Similarly, falsifying hybrid systems seeks to steer the search towards error states that can be easily resolved as planning problems."}, {"heading": "7 Conclusions", "text": "We have presented a novel approach to PDDL + planning, based on CASP languages, which provides a solid foundation for applying logical programming to PDDL + planning. Experiments in known areas, some of which involve non-linear continuous change, have shown that our approach outperforms most comparable, state-of-the-art PDDL + planners. Based on our approach to CASP, it is also possible to expand it to address uncertainties about the initial situation or the impact of actions and to solve thought tasks other than planning. In the future, we plan to investigate these aspects and conduct a thorough algorithmic and architectural comparison with SMTPlan +."}], "references": [{"title": "Representing Constraint Satisfaction Problems in Answer Set Programming", "author": ["M. Balduccini"], "venue": "ICLP09 Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP09)", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2009}, {"title": "Towards an Integration of Answer Set and Constraint Solving", "author": ["S. Baselice", "P.A. Bonatti", "M. Gelfond"], "venue": "Proceedings of ICLP 2005", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2005}, {"title": "Planning as model checking in hybrid domains", "author": ["S. Bogomolov", "D. Magazzeni", "A. Podelski", "M. Wehrle"], "venue": "Proceedings of the Twenty-Eighth AAAI Conference on Artificial Intelligence. pp. 2228\u20132234", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Smt-based nonlinear PDDL+ planning", "author": ["D. Bryce", "S. Gao", "D.J. Musliner", "R.P. Goldman"], "venue": "Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}, {"title": "A compilation of the full PDDL+ language into SMT", "author": ["M. Cashmore", "M. Fox", "D. Long", "D. Magazzeni"], "venue": "Proceedings of the Twenty-Sixth International Conference on Automated Planning and Scheduling (ICAPS)", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "UPMurphi: A tool for universal planning on PDDL+ problems", "author": ["G. Della Penna", "D. Magazzeni", "F. Mercorio", "B. Intrigila"], "venue": "Proceedings of the 19th International Conference on Automated Planning and Scheduling (ICAPS)", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Modelling mixed discrete-continuous domains for planning", "author": ["M. Fox", "D. Long"], "venue": "Journal of Artificial Intelligence Research 27, 235\u2013297", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Relating constraint answer set programming languages and algorithms", "author": ["Y. Lierler"], "venue": "Artificial Intelligence 207, 1\u201322", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "Processes and continuous change in a SAT-based planner", "author": ["J.A. Shin", "E. Davis"], "venue": "Artificial Intelligence 166(1-2), 194\u2013253", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}], "referenceMentions": [{"referenceID": 6, "context": "PDDL+ [7] is the extension of the PDDL language that allows for modelling domains with mixed discrete-continuous dynamics, through continuous processes and exogenous events.", "startOffset": 6, "endOffset": 9}, {"referenceID": 1, "context": "To this aim, in this paper we investigate the viability of an approach to PDDL+ planning based on Constraint Answer Set Programming (CASP) [2], i.", "startOffset": 139, "endOffset": 142}, {"referenceID": 5, "context": "In our encoding, continuous invariants are checked at discretized timepoints, and, following the discretize and validate approach [6], the VAL tool is used to check whether the candidate solutions are valid or whether granularity needs to be increased.", "startOffset": 130, "endOffset": 133}, {"referenceID": 0, "context": "As a case study, we use the CASP solver EZCSP [1].", "startOffset": 46, "endOffset": 49}, {"referenceID": 2, "context": "Definition 1 (Planning Instance [3]).", "startOffset": 32, "endOffset": 35}, {"referenceID": 5, "context": "Finally, the \u03b5-separation6 is handled, as in [6], by post-processing the plan.", "startOffset": 45, "endOffset": 48}, {"referenceID": 0, "context": "For our case study, we have focused on a specific incarnation of CASP, called EZCSP [1].", "startOffset": 84, "endOffset": 87}, {"referenceID": 3, "context": "Encodings of the generator and car domains [4] were created as described above, and the architecture of the EZCSP solver was expanded to ensure soundness of the algorithm (see below).", "startOffset": 43, "endOffset": 46}, {"referenceID": 3, "context": "These are well-known PDDL+ domains and were used as the benchmark set in [4].", "startOffset": 73, "endOffset": 76}, {"referenceID": 3, "context": "The comparison with dReal was based on finding a single plan with a given maximum time step, as discussed in [4].", "startOffset": 109, "endOffset": 112}, {"referenceID": 3, "context": "It should be noted that this is different from the approach used in [4], where a simpler, but less physically accurate model was used.", "startOffset": 68, "endOffset": 71}, {"referenceID": 3, "context": "For a fair comparison with [4], the simpler model was used in reproducing the results for dReal.", "startOffset": 27, "endOffset": 30}, {"referenceID": 3, "context": "For instance, dReach [4] leverages SMT to plan in hybrid systems, but does not provide a direct translation from PDDL+ and does not handle exogenous events.", "startOffset": 21, "endOffset": 24}, {"referenceID": 4, "context": "SMTPlan+ [5] is another approach based on a translation to SMT, but it supports the full PDDL+ language, and featured excellent performance in our evaluation.", "startOffset": 9, "endOffset": 12}, {"referenceID": 2, "context": ", [3]).", "startOffset": 2, "endOffset": 5}, {"referenceID": 5, "context": "UPMurphi [6] is capable of handling the full set of PDDL+ features, although it is very limited in scalability as it performs blind search.", "startOffset": 9, "endOffset": 12}, {"referenceID": 8, "context": "The approach proposed in this paper is similar to TM-LPSAT [9].", "startOffset": 59, "endOffset": 62}, {"referenceID": 7, "context": "For what concerns CASP solvers, a high level view of the languages and solving techniques can be found in [8].", "startOffset": 106, "endOffset": 109}], "year": 2016, "abstractText": "PDDL+ is an extension of PDDL that enables modelling planning domains with mixed discrete-continuous dynamics. In this paper we present a new approach to PDDL+ planning based on Constraint Answer Set Programming (CASP), i.e. ASP rules plus numerical constraints. To the best of our knowledge, ours is the first attempt to link PDDL+ planning and logic programming. We provide an encoding of PDDL+ models into CASP problems. The encoding can handle non-linear hybrid domains, and represents a solid basis for applying logic programming to PDDL+ planning. As a case study, we consider the EZCSP CASP solver and obtain promising results on a set of PDDL+ benchmark problems.", "creator": "LaTeX with hyperref package"}}}