{"id": "1609.03437", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Sep-2016", "title": "First-Order Bayesian Network Specifications Capture the Complexity Class PP", "abstract": "The point of this note is to prove that a language is in the complexity class PP if and only if the strings of the language encode valid inferences in a Bayesian network defined using function-free first-order logic with equality.", "histories": [["v1", "Mon, 12 Sep 2016 15:11:58 GMT  (8kb)", "http://arxiv.org/abs/1609.03437v1", "7 pages, 1 figure"]], "COMMENTS": "7 pages, 1 figure", "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.LO", "authors": ["fabio gagliardi cozman"], "accepted": false, "id": "1609.03437"}, "pdf": {"name": "1609.03437.pdf", "metadata": {"source": "CRF", "title": "First-Order Bayesian Network Specifications Capture the Complexity Class PP", "authors": ["Fabio G. Cozman"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 160 9.03 437v 1 [cs.A I] 1 2Se p20 16"}, {"heading": "First-Order Bayesian Network Specifications", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Capture the Complexity Class PP", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Fabio G. Cozman", "text": "September 13, 2016"}, {"heading": "1 Introduction", "text": "The purpose of this note is to prove that a language belongs to the complexity class PP if and only if the strings of the language encode valid conclusions in a Bayesian network defined with equality by a dysfunctional first-order logic. Before this statement can be specified, a number of definitions are required. Section 2 summarizes the necessary background and Section 3 defines first-order Bayesian network specifications and the complexity class PP. Section 4 describes and proves the former."}, {"heading": "2 Background", "text": "We look at input strings in the alphabet (0, 1); that is, a string is a sequence of 0s and 1s. A language is a set of strings; a complexity class is a set of languages. A language is decided by a Turing machine if the machine accepts any string in the language and does not reject any string in the language. That is, all formulas we consider to be well-formed formulas of the first order are structures that can be decided by a non-deterministic Turing machine with a polynomial time limit. We focus on non-functional first order logic with equality (referred to as FFFO)."}, {"heading": "3 First-order Bayesian network specifications and", "text": "The complexity class PPWe start with the definition of our two main characters: on the one hand, we have Bayesian networks specified by FFFO; on the other hand, we have the complexity class PP.It will now be convenient to consider any grounded predicate r (a) as a random variable once we have a fixed vocabulary and a fixed domain. So, if we have a domain D, we understand r (a) as a function of all possible interpretations of the vocabulary, so that r (a) (I) yields 1 if r (a) is true in the interpretation I, and 0 otherwise."}, {"heading": "3.1 First-order Bayesian network specifications", "text": "A first-order Bayesian network specification is a directed graph where each node is a predicate and each root node r is associated with a probable rating, while each first-order non-root node s (x) is associated with a formula (the definition of s) (x), where \u03c6 (x) is a formula in the FFFO with free variables x. A first-order Bayesian network specification can be grounded into a unique Bayesian network: 1. by making each grounding of the predicates, 2. by dictating the grounded rating P (r) with each grounding r (a) of the roots, if they are a grounded rating P (a) = 1) = \u03b1; 3. by grounding each s (a) of the grounding s (a) of the predicates s (a) of the grounded definition P (a) of the grounded rating P (r), if they are a grounded rating P (a) = 1 friend, each of which is a dedededeed (D), each of which is a friend (D), each of which is a dedededededededeed (P), and each of each of which is a friend (P), each of each of each of which is a dedededededeed a)."}, {"heading": "3.2 Probabilistic Turing machines and the complexity class", "text": "We can imagine that there is a special class of non-deterrent Turing machines that actually does not accept a particular band, but only accepts it. If a Turing machine is such that its transition function boards to a nonsingleton band are not specified, the transition is selected with uniform probability within that set, then the Turing machine is a probable Turing machine. The complexity of the computational probabilities of a phenomenon that can be simulated by a probable Turing machine in polynomial time, with an error probability of less than 1 / 2 for all input strings. Language is in PP, if and only if there is a polynomial computational probability, so that a string is in the language, and only if more than half of the computational paths of the machine end in the acceptance of the state when the string is the input."}], "references": [{"title": "Finite model theory and descriptive complexity", "author": ["Erich Gr\u00e4del"], "venue": "Finite Model Theory and Its Applications,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Descriptive complexity of#P functions", "author": ["Sanjeev Saluja", "K.V. Subrahmanyam", "Madhukar N. Thakur"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1995}], "referenceMentions": [{"referenceID": 0, "context": "We collect a number of definitions here [1, 2], so as to fix our terminology and notation.", "startOffset": 40, "endOffset": 46}, {"referenceID": 0, "context": "As an example, consider the following formula of ESO as discussed by Gr\u00e4del [1]:", "startOffset": 76, "endOffset": 79}, {"referenceID": 0, "context": "To prove the other direction, we must adapt the proof of Fagin\u2019s theorem as described by Gr\u00e4del [1], along the same lines as the proof of Theorem 1 by Saluja et al.", "startOffset": 96, "endOffset": 99}, {"referenceID": 1, "context": "[3].", "startOffset": 0, "endOffset": 3}], "year": 2016, "abstractText": "The point of this note is to prove that a language is in the complexity class PP if and only if the strings of the language encode valid inferences in a Bayesian network defined using function-free first-order logic with equality. Before this statement can be made precise, a number of definitions are needed. Section 2 summarizes the necessary background and Section 3 defines first-order Bayesian network specifications and the complexity class PP. Section 4 states and proves the former captures the latter.", "creator": "LaTeX with hyperref package"}}}