{"id": "1609.03438", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Sep-2016", "title": "Reactive Multi-Context Systems: Heterogeneous Reasoning in Dynamic Environments", "abstract": "In this paper we introduce reactive multi-context systems (rMCSs), a framework for reactive reasoning in the presence of heterogeneous knowledge sources. In particular, we show how to integrate data streams into multi-context systems (MCSs) and how to model the dynamics of the systems, based on two types of bridge rules. We illustrate how several typical problems arising in the context of stream reasoning can be handled using our framework. Reasoning based on multiple knowledge sources that need to be integrated faces the problem of potential inconsistencies. We discuss various methods for handling inconsistencies, with a special focus on non-existence of equilibria. In particular, we show how methods developed for managed MCSs can be generalized to rMCSs. We also study the issue of nondeterminism in rMCSs. One way of avoiding nondeterminism is by applying an alternative, skeptical semantics. We show how such a semantics, called well-founded semantics, can be defined for rMCSs, and what the effect of using this semantics instead of the original one is. We investigate the complexity of various reasoning problems related to rMCSs. Finally, we discuss related work, with a special focus on two of the most relevant approaches w.r.t. stream reasoning, namely LARS and STARQL.", "histories": [["v1", "Mon, 12 Sep 2016 15:12:00 GMT  (333kb,D)", "https://arxiv.org/abs/1609.03438v1", null], ["v2", "Fri, 9 Dec 2016 11:20:56 GMT  (335kb,D)", "http://arxiv.org/abs/1609.03438v2", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["gerhard brewka", "stefan ellmauthaler", "ricardo gon\\c{c}alves", "matthias knorr", "jo\\~ao leite", "j\\\"org p\\\"uhrer"], "accepted": false, "id": "1609.03438"}, "pdf": {"name": "1609.03438.pdf", "metadata": {"source": "CRF", "title": "Reactive Multi-Context Systems: Heterogeneous Reasoning in Dynamic Environments", "authors": ["Gerhard Brewka", "Stefan Ellmauthaler", "Ricardo Gon\u00e7alves", "Matthias Knorr", "Jo\u00e3o Leite", "J\u00f6rg P\u00fchrer"], "emails": ["brewka@informatik.uni-leipzig.de", "ellmauthaler@informatik.uni-leipzig.de", "rjrg@fct.unl.pt", "mkn@fct.unl.pt", "jleite@fct.unl.pt", "puehrer@informatik.uni-leipzig.de"], "sections": [{"heading": null, "text": "In this paper, we present reactive multi-context systems (rMCSs), a framework for reactive thinking in the presence of heterogeneous knowledge sources. In particular, we show how data flows can be integrated into multi-context systems (MCSs) and how the dynamics of systems can be modelled on the basis of two types of bridge rules. We show how several typical problems arising in the context of arguing data flows can be handled within our framework. Reasoning based on multiple knowledge sources that need to be integrated faces the problem of potential inconsistencies. We discuss various methods for dealing with inconsistencies, with particular emphasis on the non-existence of equilibria. In particular, we show how methods developed for managed MCSs can be generalised to rMCSs. We also examine the problem of non-determinism in rMCSs. One way to avoid non-determinism is to apply alternative, sceptical semantics, as we show reasoned semantics."}, {"heading": "1. Introduction", "text": "The broad and increasing availability of machine-processed data and knowledge - driven by initiatives such as the Semantic Web, Linked Open Data, and the Internet of Things, among others - has prepared the ground and calls for a new class of dynamic approaches and significant improvements in the presentation of the underlying concepts. Email addresses: brewka @ informatik.uni-leipzig.de, which describe different adaptations of multi-context systems for dynamic environments dealing with different languages (Gerhard Brewka), ellmauthaler @ informatik.pt (Gerhard Knorr), jleite @ fct.unl.pt (Stefan Ellmauthaler), rjrg @ fct.pt (Ricardo Gonc, mkn @ fct.pt)."}, {"heading": "2. Reactive Multi-Context Systems", "text": "The reactive multi-context systems (rMCSs) make the basic ideas of managed multi-context systems (mMCSs), the foundations of which we have described as possible foundations, [10] which extend to multi-context systems (MCSs) as defined by Brewka and pus. [10] In particular, similar to mMCSs, we will use a management function and bridge rules that allow conflict resolution between contexts as well as a fine-grained declarative specification of the flow of information between contexts. In order not to unnecessarily burden the reader with repetitive material, we will wait for the details of mMCSs before remembering the details. It will be clear from the presentation when new concepts / ideas are presented specifically for rMCSs."}, {"heading": "3. Modeling with rMCSs", "text": "The current example indicates that rMCSs can integrate different formalities and deal with a dynamic environment that is important. < < < < / a > < / a > < / a > < / a > < / a > \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \""}, {"heading": "4. Inconsistency Management", "text": "This year, it is more than ever in the history of the city, where it is so far that it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place, where it is a place."}, {"heading": "5. Non-Determinism and Well-Founded Semantics", "text": "The second source, however, requires that the entire rMCS be taken into account in the elimination of non-determinism, which can be achieved by introducing preference functions, as proposed by Ellmauthaler [16]. One could also apply the preference for language to contexts whose semantics can return multiple sets of beliefs for the same knowledge base, and on the other hand, the flow of information between contexts defined by bridge rules can be considered a source of non-determinism. < Since this leads to multiple equilibriums and thus generates exponentially many equilibrium flows, this may be undesirable in practice, which is why it is important under which conditions non-determinism can be circumvented. < The first source of non-determinism depends exclusively on the choice of contexts that occur in the rMCS, i.e. They can be avoided if the determination / design of the rMCS is called into question. The second source, however, requires the total non-determinism to be considered in the elimination of the rMCS."}, {"heading": "6. Complexity", "text": "In this section, we will examine the complexity of answering questions about equilibrium issues, which we weigh up to a certain extent."}, {"heading": "EXPTIME EXPTIME EXPTIME", "text": "This year, it has reached the point where it is not even in a position to take the lead."}, {"heading": "7. Related Work", "text": "In this area, we are in a position to seek a solution that meets the needs of the people."}, {"heading": "LARS", "text": "The logical framework for the analysis of Reasoning over Streams (LARS) [7] aims to provide a formal declarative logical language for arguing with streams. LARS is a rules-based formalism whose linguistic properties provide not only different means to refer to a specific arrival time, but also a novel window operator, thus providing a flexible mechanism for representation and reasoning with views on streaming data. Next, we will give an overview of this language and show how to use LARS within an rMCS.The LARS language is constructed using a series of atoms defined by dismediate joint sets of predicates P and constant C as usual, with P divided into two disjoint subsets, the extensively predicts PE, and the intensive predicates PI. The former is to be used for input streams, and the latter for intermediate and output streams j. j, j, j, j, j, j, j, j, j, j, k, j, j, j, j, k, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, j, n."}, {"heading": "STARQL", "text": "STARQL (pronounced Star-Q-L) [36], a framework for ontology-based flow thinking, is developed within the Optique Project [37], which is equipped with a stream query language inspired by the RDF query language SPARQL [29]. Streams in this framework come in the form of time-stamped descriptive logic assertions (so-called ABox assertions). Both input and response from STARQL queries are streams of this kind. Unlike the related language, continuous SPARQL (C-SPARQL) [6], STARQL goes beyond RDF semantics and allows DL argumentation. A STARQL selection expression is structured as follows. SELECT selectClause (~ x, ~ y) FROM list OfWindowedStreamExpressions USING listOfResources"}, {"heading": "WHERE \u03a8(~x)", "text": "For a comprehensive description of the syntax and semantics of STARQL, we refer to Optique Deliverable 5.1 [36]. We use an example (partially from [36]) to explain components of STARQL queries and to describe the core aspects relevant to us. It is based on the following STARQL query, which generates an output current S _ out that displays temperature sensors whose readings have risen monotonously in the last two seconds."}, {"heading": "CREATE STREAM S_out AS", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "SELECT {?sens rdf:type MonIncTemp}<NOW>", "text": "FROM S 0s < - [NOW-2s, NOW] - > 1s USING STATIC ABOX <\\ protect\\ vrule width0pt\\ protect\\ href {http: / / example.org / Astatic} {http: / / example.org / Astatic} >, TBOX <\\ protect\\ vrule width0pt\\ protect\\ href {http: / / example.org / TBox} {http: / / example.org / TBox} > WHERE {? sens rdf: type TempSensor} SEQUENCE BY StdSeq AS SEQ1 HAVING FORALL i < = j in SEQ1, x, y:"}, {"heading": "IF ( { ?sens rd ?x }<i> AND { ?sens rd ?y }<j> )", "text": "THEN? x < =? yThe input stream considered contains measured values from sensors s0, s1: S = {rd (s0, 90) < 0s > rd (s1, 30) < 0s > rd (s0, 93) < 1s > rd (s1, 32) < 1s > rd (s0, 94) < 2s > rd (s0, 91) < 3s > rd (s0, 93) < 4s > rd (s0, 95) < 5s >} In addition, the TBox at http: / example.org / TBox contains the axiom"}, {"heading": "BurnerTipTempSensor v TempSensor", "text": "In fact, it is a case of a kind of plague that is able to put itself at the top of society. (...) In fact, it is a case of people being able to put themselves at the top of society. (...) In fact, it is a case of being able to put themselves at the top of society. (...) In fact, it is a case of being able to put themselves at the top of society. (...) In fact, it is a case of being able to put themselves at the top of society. (...)"}, {"heading": "7.2. EVOLP", "text": "The framework of the EVOLP [2] evolutionary logic programs is a powerful approach to modelling updates of the (propositional) generalized logic programs}, {"heading": "8. Conclusions", "text": "This year it is more than ever before."}, {"heading": "Acknowledgements", "text": "G. Brewka, S. Ellmauthaler and J. Pu \u00bc hrer were partially supported by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) within the funding programmes BR-1817 / 7-1 and FOR 1513. R. Gonc alves, M. Knorr and J. Leite were partially supported by the Fundac-a-para-Cie ncia e a Tecnologia (FCT) within the NOVA LINCS project (UID / CEC / 04516 / 2013). Furthermore, R. Gonc alves was partially supported by the FCT funding SFRH / BPD / 100906 / 2014 and M. Knorr by the FCT funding SFRH / BPD / 86970 / 2012."}, {"heading": "Appendix A. rMCSs as a Turing Machine Service", "text": "To demonstrate the expressiveness of the rCSs and to prove that Proposition 9 is an rMCSMTM = Q = q q q q = Q Q = Q (Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q (Q = Q = Q = Q = Q = Q Q = Q = Q = Q (Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q (Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q = Q"}], "references": [{"title": "Dynamic updates of non-monotonic knowledge bases", "author": ["J. Alferes", "J. Leite", "L. Pereira", "H. Przymusinska", "T. Przymusinski"], "venue": "J. Log. Program.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2000}, {"title": "Evolving logic programs", "author": ["Jos\u00e9 J\u00falio Alferes", "Antonio Brogi", "Jo\u00e3o Alexandre Leite", "Lu\u0131\u0301s Moniz Pereira"], "venue": "Logics in Artificial Intelligence, European Conference,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "Stream reasoning and complex event processing in ETALIS", "author": ["D. Anicic", "S. Rudolph", "P. Fodor", "N. Stojanovic"], "venue": "Semantic Web,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Consistent query answers in inconsistent databases", "author": ["Marcelo Arenas", "Leopoldo E. Bertossi", "Jan Chomicki"], "venue": "Proceedings of the Eighteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, May 31 - June", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1999}, {"title": "The Description Logic Handbook: Theory, Implementation, and Applications", "author": ["Franz Baader", "Diego Calvanese", "Deborah L. McGuinness", "Daniele Nardi", "Peter F. Patel-Schneider", "editors"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}, {"title": "C-SPARQL: a continuous query language for RDF data streams", "author": ["D. Barbieri", "D. Braga", "S. Ceri", "E. Della Valle", "M. Grossniklaus"], "venue": "Int. J. Semantic Computing,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "LARS: A logicbased framework for analyzing reasoning over streams", "author": ["Harald Beck", "Minh Dao-Tran", "Thomas Eiter", "Michael Fink"], "venue": "Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence, January", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Towards reactive multi-context systems", "author": ["Gerhard Brewka"], "venue": "Proceedings of the 12th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201913),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Equilibria in heterogeneous nonmonotonic multi-context systems", "author": ["Gerhard Brewka", "Thomas Eiter"], "venue": "In Proceedings of the Twenty-Second AAAI Conference on Artificial Intelligence, July 22-26,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Managed multi-context systems", "author": ["Gerhard Brewka", "Thomas Eiter", "Michael Fink", "Antonius Weinzierl"], "venue": "Proceedings of the 22nd International Joint Conference on Artificial Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Multi-context systems for reactive reasoning in dynamic environments", "author": ["Gerhard Brewka", "Stefan Ellmauthaler", "J\u00f6rg P\u00fchrer"], "venue": "In ECAI 2014 - 21st European Conference on Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Contextual default reasoning", "author": ["Gerhard Brewka", "Floris Roelofsen", "Luciano Serafini"], "venue": "Proceedings of the 20th International Joint Conference on Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "Strong and weak constraints in disjunctive datalog", "author": ["Francesco Buccafurri", "Nicola Leone", "Pasquale Rullo"], "venue": "Logic Programming and Nonmonotonic Reasoning,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1997}, {"title": "Finding explanations of inconsistency in multi-context systems", "author": ["Thomas Eiter", "Michael Fink", "Peter Sch\u00fcller", "Antonius Weinzierl"], "venue": "Artif. Intell.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Combining answer set programming with description logics for the semantic web", "author": ["Thomas Eiter", "Giovambattista Ianni", "Thomas Lukasiewicz", "Roman Schindlauer", "Hans Tompits"], "venue": "Artif. Intell.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Generalizing multi-context systems for reactive stream reasoning applications", "author": ["Stefan Ellmauthaler"], "venue": "Imperial College Computing Student Workshop, ICCSW 2013, September 26/27,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Asynchronous multi-context systems", "author": ["Stefan Ellmauthaler", "J\u00f6rg P\u00fchrer"], "venue": "Essays Dedicated to Gerhard Brewka on the Occasion of His 60th Birthday,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "Recursive aggregates in disjunctive logic programs: Semantics and complexity", "author": ["Wolfgang Faber", "Nicola Leone", "Gerald Pfeifer"], "venue": "Logics in Artificial Intelligence,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2004}, {"title": "Paraconsistent hybrid theories", "author": ["Michael Fink"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Thirteenth International Conference,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2012}, {"title": "A users guide to gringo, clasp, clingo, and iclingo", "author": ["M. Gebser", "R. Kaminski", "B. Kaufmann", "M. Ostrowski", "T. Schaub", "S. Thiele"], "venue": "Potassco Team,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Stream reasoning with answer set programming: Preliminary report", "author": ["Martin Gebser", "Torsten Grote", "Roland Kaminski", "Philipp Obermeier", "Orkunt Sabuncu", "Torsten Schaub"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Thirteenth International Conference,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "Reactive answer set programming", "author": ["Martin Gebser", "Torsten Grote", "Roland Kaminski", "Torsten Schaub"], "venue": "Logic Programming and Nonmonotonic Reasoning - 11th International Conference,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2011}, {"title": "Classical negation in logic programs and disjunctive databases", "author": ["Michael Gelfond", "Vladimir Lifschitz"], "venue": "New Generation Comput.,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1991}, {"title": "Multilanguage hierarchical logics or: How we can do without modal logics", "author": ["Fausto Giunchiglia", "Luciano Serafini"], "venue": "Artif. Intell.,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1994}, {"title": "Evolving bridge rules in evolving multi-context systems", "author": ["Ricardo Gon\u00e7alves", "Matthias Knorr", "Jo\u00e3o Leite"], "venue": "Computational Logic in Multi-Agent Systems - 15th International Workshop,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Evolving multi-context systems", "author": ["Ricardo Gon\u00e7alves", "Matthias Knorr", "Jo\u00e3o Leite"], "venue": "In ECAI 2014 - 21st European Conference on Artificial Intelligence,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2014}, {"title": "SPARQL 1.1 query language for RDF", "author": ["Steve Harris", "Andy Seaborne"], "venue": "W3C Recommendation,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2013}, {"title": "Efficient paraconsistent reasoning with ontologies and rules", "author": ["Tobias Kaminski", "Matthias Knorr", "Jo\u00e3o Leite"], "venue": "Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2015}, {"title": "Predicting knowledge in an ontology stream", "author": ["Freddy L\u00e9cu\u00e9", "Jeff Z. Pan"], "venue": "Proceedings of the 23rd International Joint Conference on Artificial Intelligence,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2013}, {"title": "On abstract modular inference systems and solvers", "author": ["Yuliya Lierler", "Miroslaw Truszczy\u0144ski"], "venue": "Artif. Intell.,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2016}, {"title": "Generality in artificial intelligence", "author": ["John McCarthy"], "venue": "Commun. ACM,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1987}, {"title": "Reconciling description logics and rules", "author": ["Boris Motik", "Riccardo Rosati"], "venue": "Journal of the ACM,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2010}, {"title": "Preferential multi-context systems", "author": ["Kedian Mu", "Kewen Wang", "Lian Wen"], "venue": "Int. J. Approx. Reasoning,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2016}, {"title": "Executive Summary: A semantics for temporal and stream-based query answering in an OBDA context", "author": ["\u00d6zg\u00fcr L. \u00d6z\u00e7ep", "Ralf M\u00f6ller", "Christian Neuenstadt", "Dmitriy Zheleznayakow", "Evgeny Kharlamov", "Ian Horrocks", "Thomas Hubauer", "Mikhail Roshchin. D"], "venue": "Technical report, Optique FP7-ICT-2011-8-318338 Project,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2013}, {"title": "The Optique Project: Towards OBDA Systems for Industry (Short Paper), volume", "author": ["Mariano Rodriguez-Muro", "Simon Jupp", "Kavitha Srinivas", "editors"], "venue": "CEUR Workshop Proceedings. CEUR-WS.org,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2013}, {"title": "Minimal and absent information in contexts", "author": ["Floris Roelofsen", "Luciano Serafini"], "venue": "Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2005}, {"title": "On updates of hybrid knowledge bases composed of ontologies and rules", "author": ["Martin Slota", "Jo\u00e3o Leite", "Theresa Swift"], "venue": "Artif. Intell.,", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2015}], "referenceMentions": [{"referenceID": 10, "context": "^This paper combines and unifies the results of [11] and [28], two papers by different subsets of the authors describing independent adaptations of multi-context systems for dynamic environments.", "startOffset": 48, "endOffset": 52}, {"referenceID": 25, "context": "^This paper combines and unifies the results of [11] and [28], two papers by different subsets of the authors describing independent adaptations of multi-context systems for dynamic environments.", "startOffset": 57, "endOffset": 61}, {"referenceID": 14, "context": "Whereas some of these formalisms could be combined to form a new, more expressive formalism, with features from its constituents \u2013 such as dl-programs [15] and Hybrid MKNF [34] which, to different extent, combine", "startOffset": 151, "endOffset": 155}, {"referenceID": 31, "context": "Whereas some of these formalisms could be combined to form a new, more expressive formalism, with features from its constituents \u2013 such as dl-programs [15] and Hybrid MKNF [34] which, to different extent, combine", "startOffset": 172, "endOffset": 176}, {"referenceID": 23, "context": "An MCS consists of reasoning units \u2013 called contexts for historical reasons [26] \u2013 where each unit is equipped with a collection of bridge rules.", "startOffset": 76, "endOffset": 80}, {"referenceID": 30, "context": "Advancing work in [25, 33] aiming to integrate different inference systems, monotonic heterogeneous multi-context systems were defined in [26], with reasoning within as well as across monotonic contexts.", "startOffset": 18, "endOffset": 26}, {"referenceID": 23, "context": "Advancing work in [25, 33] aiming to integrate different inference systems, monotonic heterogeneous multi-context systems were defined in [26], with reasoning within as well as across monotonic contexts.", "startOffset": 138, "endOffset": 142}, {"referenceID": 35, "context": "The first, still somewhat limited attempts to include non-monotonic reasoning were done in [38] and [12], where default negation in the rules is used to allow for reasoning based on the absence of information from a context.", "startOffset": 91, "endOffset": 95}, {"referenceID": 11, "context": "The first, still somewhat limited attempts to include non-monotonic reasoning were done in [38] and [12], where default negation in the rules is used to allow for reasoning based on the absence of information from a context.", "startOffset": 100, "endOffset": 104}, {"referenceID": 8, "context": "The non-monotonic MCSs of [9] substantially generalize previous approaches, by accommodating heterogeneous and both monotonic and non-monotonic contexts, hence capable of integrating, among many others, \u201ctypical\u201d monotonic logics like description logics or temporal logics, and non-monotonic formalisms like Reiter\u2019s default logic, logic programs under answer set semantics, circumscription, defeasible logic, or theories in autoepistemic logic.", "startOffset": 26, "endOffset": 29}, {"referenceID": 9, "context": "More recently, the so-called managed MCSs (mMCSs) [10] addressed a limitation of MCSs in the way they integrate knowledge between contexts.", "startOffset": 50, "endOffset": 54}, {"referenceID": 21, "context": "There are some examples of systems developed with the purpose of reacting to streams of incoming information, such as Reactive ASP [23, 22], C-SPARQL [6], Ontology Streams [31] and ETALIS [3], to name only a few.", "startOffset": 131, "endOffset": 139}, {"referenceID": 20, "context": "There are some examples of systems developed with the purpose of reacting to streams of incoming information, such as Reactive ASP [23, 22], C-SPARQL [6], Ontology Streams [31] and ETALIS [3], to name only a few.", "startOffset": 131, "endOffset": 139}, {"referenceID": 5, "context": "There are some examples of systems developed with the purpose of reacting to streams of incoming information, such as Reactive ASP [23, 22], C-SPARQL [6], Ontology Streams [31] and ETALIS [3], to name only a few.", "startOffset": 150, "endOffset": 153}, {"referenceID": 28, "context": "There are some examples of systems developed with the purpose of reacting to streams of incoming information, such as Reactive ASP [23, 22], C-SPARQL [6], Ontology Streams [31] and ETALIS [3], to name only a few.", "startOffset": 172, "endOffset": 176}, {"referenceID": 2, "context": "There are some examples of systems developed with the purpose of reacting to streams of incoming information, such as Reactive ASP [23, 22], C-SPARQL [6], Ontology Streams [31] and ETALIS [3], to name only a few.", "startOffset": 188, "endOffset": 191}, {"referenceID": 1, "context": "EVOLP [2] extends logic programming under answer set semantics with the possibility to specify its evolution, through successive updates, in reaction to external observations.", "startOffset": 6, "endOffset": 9}, {"referenceID": 6, "context": "stream reasoning, namely LARS (Logic-based framework for Analyzing Reasoning over Streams) [7] and STARQL [36].", "startOffset": 91, "endOffset": 94}, {"referenceID": 33, "context": "stream reasoning, namely LARS (Logic-based framework for Analyzing Reasoning over Streams) [7] and STARQL [36].", "startOffset": 106, "endOffset": 110}, {"referenceID": 9, "context": "Reactive multi-context systems (rMCSs) make use of basic ideas from managed multi-context systems (mMCSs) [10] which extend multi-context systems (MCSs) as defined by Brewka and Eiter [9] by management capabilities.", "startOffset": 106, "endOffset": 110}, {"referenceID": 8, "context": "Reactive multi-context systems (rMCSs) make use of basic ideas from managed multi-context systems (mMCSs) [10] which extend multi-context systems (MCSs) as defined by Brewka and Eiter [9] by management capabilities.", "startOffset": 184, "endOffset": 187}, {"referenceID": 4, "context": "Quite similar in spirit are description logics (DLs) as (commonly decidable) fragments of first-order logic [5].", "startOffset": 108, "endOffset": 111}, {"referenceID": 22, "context": "As an example for a non-deterministic formalism, consider logic programs under the answer set semantics [24].", "startOffset": 104, "endOffset": 108}, {"referenceID": 9, "context": "To this end, we make use of a management function similar as in managed multi-context systems [10].", "startOffset": 94, "endOffset": 98}, {"referenceID": 9, "context": "We use a deterministic management function rather than a non-deterministic one as used in mMCS [10].", "startOffset": 95, "endOffset": 99}, {"referenceID": 13, "context": "In [14] the authors addressed the problem of global inconsistency in the context of mMCSs.", "startOffset": 3, "endOffset": 7}, {"referenceID": 13, "context": "These two notions turn out to be dual of each other, and somehow correspond to our notion of repair, the main difference being that, unlike in [14], we opt not to allow the (nonstandard) strengthening of bridge-rule to restore consistency, and, of course, that fact that our repairs need to take into account the dynamic nature of rMCSs.", "startOffset": 143, "endOffset": 147}, {"referenceID": 3, "context": ", in the context of databases [4], there is a special emphasis on seeking repairs that are somehow minimal, the rational being that we want to change things as little as possible to regain consistency.", "startOffset": 30, "endOffset": 33}, {"referenceID": 13, "context": "Repairs could also be extended to allow for the strengthening of bridge rules, besides their elimination, generalizing ideas from [14] and [10] where the extreme case of eliminating the entire body of bridge rules as part of a repair is considered.", "startOffset": 130, "endOffset": 134}, {"referenceID": 9, "context": "Repairs could also be extended to allow for the strengthening of bridge rules, besides their elimination, generalizing ideas from [14] and [10] where the extreme case of eliminating the entire body of bridge rules as part of a repair is considered.", "startOffset": 139, "endOffset": 143}, {"referenceID": 15, "context": ", preference functions as proposed by Ellmauthaler [16].", "startOffset": 51, "endOffset": 55}, {"referenceID": 19, "context": "One might also adopt language constructs for expressing preferences in ASP such as optimization statements [21] or weak constraints [13], which essentially assign a quality measure to equilibria, or, more recently, add a pre-order on the contexts [35].", "startOffset": 107, "endOffset": 111}, {"referenceID": 12, "context": "One might also adopt language constructs for expressing preferences in ASP such as optimization statements [21] or weak constraints [13], which essentially assign a quality measure to equilibria, or, more recently, add a pre-order on the contexts [35].", "startOffset": 132, "endOffset": 136}, {"referenceID": 32, "context": "One might also adopt language constructs for expressing preferences in ASP such as optimization statements [21] or weak constraints [13], which essentially assign a quality measure to equilibria, or, more recently, add a pre-order on the contexts [35].", "startOffset": 247, "endOffset": 251}, {"referenceID": 8, "context": "Alternatively, and inspired by notions developed for MCSs [9], we may consider restrictions on rMCSs such that these non-determinisms do not occur in the first place.", "startOffset": 58, "endOffset": 61}, {"referenceID": 8, "context": "In the following, we transfer these notions from static MCSs in [9] to dynamic rMCSs and discuss under which (non-trivial) conditions they actually can be applied.", "startOffset": 64, "endOffset": 67}, {"referenceID": 8, "context": "2 in [9], which can be transcribed to our setting using a simple rMCS without input languages, a single propositional context C1 (see Ex.", "startOffset": 5, "endOffset": 8}, {"referenceID": 8, "context": "Intuitively, L is reducible, if a) the restriction of L to KB\u2217 is monotonic, and b) there is a reduction function which should not reduce kb further if it already is in KB\u2217, which is antitonic, and by means of which acceptability of a belief set can be checked by the reduction (see also [9]).", "startOffset": 288, "endOffset": 291}, {"referenceID": 22, "context": "At the same time, Lec is reducible using the well-known Gelfond-Lifschitz reduct [24], and clearly none of the bridge rules in BRec can introduce any knowledge base formula (for any kb \u2208 KBec) which is affected by such redec.", "startOffset": 81, "endOffset": 85}, {"referenceID": 8, "context": "As pointed out in [9], for many logics, kbi = kb \u03c9 i holds and the iteration even stops after finitely many steps.", "startOffset": 18, "endOffset": 21}, {"referenceID": 8, "context": "Thus, these new notions also extend the work in [9] from MCSs to mMCSs.", "startOffset": 48, "endOffset": 51}, {"referenceID": 8, "context": "This is why we now introduce the well-founded semantics for reducible rMCSs M following the ideas in [9].", "startOffset": 101, "endOffset": 104}, {"referenceID": 13, "context": "[14]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "Hardness holds because being able to solve Q\u2203, respectively the co-problem of Q\u2200, one can decide equilibrium existence for managed MCSs which is hard for the same complexity classes [10] given hardness for the context complexity of the managed MCS.", "startOffset": 182, "endOffset": 186}, {"referenceID": 29, "context": "An interesting example of the latter type are Lierler and Truszczy\u0144ski\u2019s abstract modular systems [32].", "startOffset": 98, "endOffset": 102}, {"referenceID": 6, "context": "Since rMCSs have been designed for applications involving stream reasoning, we will first consider two recent approaches for stream reasoning, namely LARS [7] and STARQL [36].", "startOffset": 155, "endOffset": 158}, {"referenceID": 33, "context": "Since rMCSs have been designed for applications involving stream reasoning, we will first consider two recent approaches for stream reasoning, namely LARS [7] and STARQL [36].", "startOffset": 170, "endOffset": 174}, {"referenceID": 1, "context": "Then, we establish the relationship to EVOLP [2], a framework that focuses on dynamics in the form of updates in the restricted setting of generalized logic programs building on similar notions as the operator next used for rMCSs.", "startOffset": 45, "endOffset": 48}, {"referenceID": 16, "context": "Moreover, we compare our formalism with asynchronous multi-context systems [18], as well as with reactive ASP [23, 8].", "startOffset": 75, "endOffset": 79}, {"referenceID": 21, "context": "Moreover, we compare our formalism with asynchronous multi-context systems [18], as well as with reactive ASP [23, 8].", "startOffset": 110, "endOffset": 117}, {"referenceID": 7, "context": "Moreover, we compare our formalism with asynchronous multi-context systems [18], as well as with reactive ASP [23, 8].", "startOffset": 110, "endOffset": 117}, {"referenceID": 6, "context": "In the following, we relate rMCSs to two recently proposed frameworks [7, 36] for stream reasoning by demonstrating how tasks suited for these approaches can be solved by an rMCS.", "startOffset": 70, "endOffset": 77}, {"referenceID": 33, "context": "In the following, we relate rMCSs to two recently proposed frameworks [7, 36] for stream reasoning by demonstrating how tasks suited for these approaches can be solved by an rMCS.", "startOffset": 70, "endOffset": 77}, {"referenceID": 6, "context": ", between the equilibrium semantics of rMCS and the FLP semantics used in [7]) rather than giving insight into how we can model stream reasoning tasks in the respective approaches.", "startOffset": 74, "endOffset": 77}, {"referenceID": 6, "context": "LARS The Logic-based framework for Analyzing Reasoning over Streams (LARS) [7] aims at providing a formal declarative logical language for reasoning with streams.", "startOffset": 75, "endOffset": 78}, {"referenceID": 6, "context": "Among the operators presented in [7] are, for example, time-based operators \u03c4 , which allow focusing on the last n time instants of a given stream, or the partition-based operators idx,n p , which first split the stream into substreams and then allow focusing on the last n tuples of a particular substream.", "startOffset": 33, "endOffset": 36}, {"referenceID": 6, "context": "Consider a simplified version of the example in [7] that models a scenario where we want to reason about a tram network, including, for example, the prediction of the expected arrival time of a tram at some stop.", "startOffset": 48, "endOffset": 51}, {"referenceID": 17, "context": "The semantics of LARS is based on the FLP semantics of logic programs [19].", "startOffset": 70, "endOffset": 74}, {"referenceID": 33, "context": "STARQL STARQL (pronounced Star-Q-L) [36], a framework for ontology-based stream reasoning, is developed within the Optique Project [37] that comes with a stream query language inspired by the RDF query language SPARQL [29].", "startOffset": 36, "endOffset": 40}, {"referenceID": 34, "context": "STARQL STARQL (pronounced Star-Q-L) [36], a framework for ontology-based stream reasoning, is developed within the Optique Project [37] that comes with a stream query language inspired by the RDF query language SPARQL [29].", "startOffset": 131, "endOffset": 135}, {"referenceID": 26, "context": "STARQL STARQL (pronounced Star-Q-L) [36], a framework for ontology-based stream reasoning, is developed within the Optique Project [37] that comes with a stream query language inspired by the RDF query language SPARQL [29].", "startOffset": 218, "endOffset": 222}, {"referenceID": 5, "context": "Unlike the related language continuous SPARQL (C-SPARQL) [6], STARQL goes beyond RDF semantics and allows for DL reasoning.", "startOffset": 57, "endOffset": 60}, {"referenceID": 33, "context": "1 [36].", "startOffset": 2, "endOffset": 6}, {"referenceID": 33, "context": "We make use of an example (partly taken from [36]) to explain components of STARQL queries and to describe the core aspects that are relevant for us.", "startOffset": 45, "endOffset": 49}, {"referenceID": 1, "context": "The framework of evolving logic programs EVOLP [2] is a powerful approach for modeling updates of (propositional) generalized logic programs.", "startOffset": 47, "endOffset": 50}, {"referenceID": 0, "context": "Each self-evolution can be represented by a sequence of programs, each program corresponding to a state, and these sequences of programs can be treated as in Dynamic Logic Programs (DLPs) [1].", "startOffset": 188, "endOffset": 191}, {"referenceID": 0, "context": "Here, these intuitions about DLPs are sufficient, and we point to [1] for more details.", "startOffset": 66, "endOffset": 69}, {"referenceID": 21, "context": "Closely related to EVOLP are the two frameworks of Reactive ASP, one implemented as a solver oclingo [23] and one described in [8].", "startOffset": 101, "endOffset": 105}, {"referenceID": 7, "context": "Closely related to EVOLP are the two frameworks of Reactive ASP, one implemented as a solver oclingo [23] and one described in [8].", "startOffset": 127, "endOffset": 130}, {"referenceID": 7, "context": "Reactive ASP as described in [8] can be seen as a more straightforward generalization of EVOLP where operations other than assert for self-updating a program are permitted.", "startOffset": 29, "endOffset": 32}, {"referenceID": 7, "context": "Since EVOLP can be captured by rMCSs, and since rMCSs permit several (evolution) operations in the head of bridge rules, it should be clear that Reactive ASP as described in [8] can be captured by rMCSs.", "startOffset": 174, "endOffset": 177}, {"referenceID": 16, "context": "Asynchronous multi-context systems (aMCSs) are a framework for loosely coupling knowledge representation formalisms and services [18].", "startOffset": 129, "endOffset": 133}, {"referenceID": 16, "context": "A setup to simulate an rMCS by an aMCS has been presented in [18].", "startOffset": 61, "endOffset": 65}, {"referenceID": 36, "context": "Other real world use cases of an even larger scale can be handled as well, such as the one described in [39] where the customs service needs to assess imported cargo for a variety of risk factors including terrorism, narcotics, food and consumer safety, pest infestation, tariff violations, and intellectual property rights.", "startOffset": 104, "endOffset": 108}, {"referenceID": 36, "context": "In [39], all this extensive knowledge is encoded in ontologies based on description logics and logic programming rules under the answer set semantics, and rMCSs naturally cover these formalisms as shown, e.", "startOffset": 3, "endOffset": 7}, {"referenceID": 36, "context": "And, unlike [39], this flexibility is achieved without having to ensure or to test whether the integrated heterogeneous knowledge is organized in so-called layers.", "startOffset": 12, "endOffset": 16}, {"referenceID": 6, "context": "Most importantly, we have shown that rMCSs can capture two relevant approaches in stream reasoning, namely LARS [7] and STARQL [36], thus showcasing that rMCSs are indeed \u201cdefined in the right way\u201d for the intended integration of constant streams of data.", "startOffset": 112, "endOffset": 115}, {"referenceID": 33, "context": "Most importantly, we have shown that rMCSs can capture two relevant approaches in stream reasoning, namely LARS [7] and STARQL [36], thus showcasing that rMCSs are indeed \u201cdefined in the right way\u201d for the intended integration of constant streams of data.", "startOffset": 127, "endOffset": 131}, {"referenceID": 19, "context": "Namely, one might adopt language constructs for expressing preferences in ASP such as optimization statements [21] or weak constraints [13], which assign a quality measure to equilibria.", "startOffset": 110, "endOffset": 114}, {"referenceID": 12, "context": "Namely, one might adopt language constructs for expressing preferences in ASP such as optimization statements [21] or weak constraints [13], which assign a quality measure to equilibria.", "startOffset": 135, "endOffset": 139}, {"referenceID": 18, "context": "An alternative to deal with inconsistent states is to follow a paraconsistent approach, as proposed for hybrid knowledge bases in [20, 30].", "startOffset": 130, "endOffset": 138}, {"referenceID": 27, "context": "An alternative to deal with inconsistent states is to follow a paraconsistent approach, as proposed for hybrid knowledge bases in [20, 30].", "startOffset": 130, "endOffset": 138}, {"referenceID": 1, "context": "Also, following the idea of EVOLP [2] as explored in [27], we could allow the bridge rules to change with time, strengthening the evolving and adaptation capabilities of rMCSs.", "startOffset": 34, "endOffset": 37}, {"referenceID": 24, "context": "Also, following the idea of EVOLP [2] as explored in [27], we could allow the bridge rules to change with time, strengthening the evolving and adaptation capabilities of rMCSs.", "startOffset": 53, "endOffset": 57}, {"referenceID": 16, "context": "We would also like to establish bridges to asynchronous MCSs [18], a framework for loosely coupling knowledge representation formalisms whose semantics assumes that every context delivers output whenever available.", "startOffset": 61, "endOffset": 65}], "year": 2016, "abstractText": "In this paper, we introduce reactive multi-context systems (rMCSs), a framework for reactive reasoning in the presence of heterogeneous knowledge sources. In particular, we show how to integrate data streams into multi-context systems (MCSs) and how to model the dynamics of the systems, based on two types of bridge rules. We illustrate how several typical problems arising in the context of stream reasoning can be handled using our framework. Reasoning based on multiple knowledge sources that need to be integrated faces the problem of potential inconsistencies. We discuss various methods for handling inconsistencies, with a special focus on non-existence of equilibria. In particular, we show how methods developed for managed MCSs can be generalized to rMCSs. We also study the issue of nondeterminism in rMCSs. One way of avoiding nondeterminism is by applying an alternative, skeptical semantics. We show how such a semantics, called well-founded semantics, can be defined for rMCSs, and what the effect of using this semantics instead of the original one is. We investigate the complexity of various reasoning problems related to rMCSs. Finally, we discuss related work, with a special focus on two of the most relevant approaches w.r.t. stream reasoning, namely LARS and STARQL.", "creator": "LaTeX with hyperref package"}}}