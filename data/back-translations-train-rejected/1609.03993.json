{"id": "1609.03993", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Sep-2016", "title": "A Generic Bet-and-run Strategy for Speeding Up Traveling Salesperson and Minimum Vertex Cover", "abstract": "A common strategy for improving optimization algorithms is to restart the algorithm when it is believed to be trapped in an inferior part of the search space. However, while specific restart strategies have been developed for specific problems (and specific algorithms), restarts are typically not regarded as a general tool to speed up an optimization algorithm. In fact, many optimization algorithms do not employ restarts at all.", "histories": [["v1", "Tue, 13 Sep 2016 19:36:45 GMT  (747kb,D)", "http://arxiv.org/abs/1609.03993v1", "15 pages"]], "COMMENTS": "15 pages", "reviews": [], "SUBJECTS": "cs.AI cs.DS", "authors": ["tobias friedrich", "timo k\\\"otzing", "markus wagner"], "accepted": false, "id": "1609.03993"}, "pdf": {"name": "1609.03993.pdf", "metadata": {"source": "CRF", "title": "A Generic Bet-and-run Strategy for Speeding Up Traveling Salesperson and Minimum Vertex Cover\u2217", "authors": ["Tobias Friedrich", "Timo K\u00f6tzing", "Markus Wagner"], "emails": [], "sections": [{"heading": null, "text": "Recently, bet-and-run has been introduced in the context of mixed-integer programming, where we first run a number of short runs with randomized initial conditions and then continue the most promising run of them. In this article, we look at two classic combinatorial NP optimization problems, wandering vendors and minimal vertebrae, and examine the effectiveness of various bet-and-run strategies. In particular, our restart strategies do not take into account problem knowledge and are not tailored to the optimization algorithm, so they can be used off the shelf. We observe that cutting-edge solutions to these problems can greatly benefit from reboots on standard benchmark instances."}, {"heading": "1 Introduction", "text": "The same goes for stochastic algorithms and randomized search heuristics: if we are not satisfied with the result, we could simply try to restart the algorithm over and over again. However, while this is well known, very few algorithms directly integrate such restart strategies. We assume that this is due to the strategy under consideration. This work was also supported by the ARC Discovery Early Career Research Award DE160100850.ar Xiv: 160 9.03 993v 1 [csadded complexity of design of an appropriate restart strategy that is beneficial for the algorithm.Hence, it would be beneficial to have a generic framework for restart strategies that is not overly dependent on the exact algorithms or the problem under consideration. In this paper, we want to show that there are restart strategies that are beneficial in a variety of settings."}, {"heading": "2 Problems and Benchmarks", "text": "Below, we briefly present the two complete NP problems that we consider to be overarching problems, as well as the corresponding problems that we identify in these areas (that is, we have a minimum of data that we apply in this area) (that is, we have a minimum of data that we have in the cities.) The cost of visiting the cities in the order of permutation and then returning to the countries of origin (1) is minimized. Applications of the traveling Salesman problem are, of course, in areas such as planning and logistics [19], but they are encountered in a large number of other domains; the Bixby, Chvatal and Cook textbook [3] gives an overview of the various areas that we have encountered in areas such as planning and logistics."}, {"heading": "3 Restart Strategies", "text": "In fact, we are able to outdo ourselves, \"he said in an interview with\" Welt am Sonntag \":\" I don't think we will be able to outdo ourselves. \"And he added:\" I don't think we will be able to outdo ourselves. \""}, {"heading": "5 Cross Problem Study", "text": "This year, it has reached the point where it will be able to retaliate."}, {"heading": "6 Conclusions and Future Work", "text": "We are investigating a generic bet-and-run restart strategy that can easily be implemented as additional speed-up heuristics to solve difficult optimization problems. We demonstrate its efficiency using two classic NP complete optimization problems with state-of-the-art solvers. Our experiments show a significant advantage of bet-and-run strategies for all problems. Overall, the best strategy was RESTARTS401%, which performs 40 short cycles with a time limit of 1% of the total time budget in the first phase, and then uses the remaining 60% of the total time budget to continue the best run of the first phase. The universal sequence of Luby et al. [17] proved to be inferior. The gain that our bet-and-run strategy achieves varies depending on the optimization problem under investigation. Profit is significant for both TSP and MVC. As the two problem areas are structurally different, we generally expect strategies to be helpful."}], "references": [{"title": "Scalable parallel algorithms for FPT problems", "author": ["F.N. Abu-Khzam", "M.A. Langston", "P. Shanbhag", "C.T. Symons"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Chained Lin-Kernighan for large traveling salesman problems", "author": ["D.L. Applegate", "W.J. Cook", "A. Rohe"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "The Traveling Salesman Problem: A Computational Study: A Computational Study", "author": ["D.L. Applegate", "R.E. Bixby", "V. Chvatal", "W.J. Cook"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Proceedings of the 18th International Conference on Principles and Practice of Constraint Programming (CP), chapter Refining Restarts Strategies for SAT and UNSAT", "author": ["G. Audemard", "L. Simon"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Adaptive restart strategies for conflict driven SAT solvers", "author": ["A. Biere"], "venue": "In Proceedings of the 11th International Conference on Theory and Applications of Satisfiability Testing (SAT),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Mona Lisa TSP Challenge (Website)", "author": ["R. Bosch"], "venue": "http://www.math. uwaterloo.ca/tsp/data/ml/monalisa.html,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Balance between complexity and quality: Local search for minimum vertex cover in massive graphs", "author": ["S. Cai"], "venue": "Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence (IJ- CAI),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Local Search for Minimum Vertex Cover (Website)", "author": ["S. Cai"], "venue": "http://lcs. ios.ac.cn/ \u0303caisw/MVC.html,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Numvc: An efficient local search algorithm for minimum vertex cover", "author": ["S. Cai", "K. Su", "C. Luo", "A. Sattar"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Parallel restarted search", "author": ["A.A. Cir\u00e9", "S. Kadioglu", "M. Sellmann"], "venue": "In Proceedings of the Twenty-Eighth AAAI Conference on Artificial Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "The Traveling Salesperson Problem: Downloads (Website)", "author": ["W. Cook"], "venue": "http://www.math.uwaterloo.ca/tsp/concorde/downloads/ downloads.htm,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "Money for nothing: Speeding up evolutionary algorithms through better initialization", "author": ["A. de Perthuis de Laillevault", "B. Doerr", "C. Doerr"], "venue": "In Proceedings of the Annual Conference on Genetic and Evolutionary Computation (GECCO),", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "Exploiting erraticism in search", "author": ["M. Fischetti", "M. Monaci"], "venue": "Operations Research,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Experimental analysis of approximation algorithms for the vertex cover and set covering problems", "author": ["F.C. Gomes", "C.N. Meneses", "P.M. Pardalos", "G.V.R. Viana"], "venue": "Compututers and Operations Research,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2006}, {"title": "The effect of restarts on the efficiency of clause learning", "author": ["J. Huang"], "venue": "In Proceedings of the 20th International Joint Conference on Artifical Intelligence (IJCAI),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Iterated local search: Framework and applications", "author": ["H.R. Loureno", "O.C. Martin", "T. St\u00fctzle"], "venue": "Handbook of Metaheuristics,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Optimal speedup of Las Vegas algorithms", "author": ["M. Luby", "A. Sinclair", "D. Zuckerman"], "venue": "Information Processing Letters,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1993}, {"title": "Multi-start methods", "author": ["R. Mart"], "venue": "Handbook of Metaheuristics,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2003}, {"title": "Scheduling periodic customer visits for a traveling salesperson", "author": ["M. Polacek", "K.F. Doerner", "R.F. Hartl", "G. Kiechle", "M. Reimann"], "venue": "European Journal of Operational Research,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2007}, {"title": "TSPLIB \u2013 A Traveling Salesman Problem Library", "author": ["G. Reinelt"], "venue": "ORSA Journal on Computing,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1991}, {"title": "Symmetric traveling salesman problem: TSP data (Website)", "author": ["G. Reinelt"], "venue": "http: //comopt.ifi.uni-heidelberg.de/software/TSPLIB95/tsp/,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "The Network Data Repository with Interactive Graph Analytics and Visualization (Website)", "author": ["R.A. Rossi", "N.K. Ahmed"], "venue": "http:// networkrepository.com,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2015}, {"title": "A rigorous runtime analysis for quasi-random restarts and decreasing stepsize", "author": ["M. Schoenauer", "F. Teytaud", "O. Teytaud"], "venue": "In Artificial Evolution,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}], "referenceMentions": [{"referenceID": 15, "context": "While thish is well-known [16, 18], very few algorithms directly incorporate such restart strategies.", "startOffset": 26, "endOffset": 34}, {"referenceID": 17, "context": "While thish is well-known [16, 18], very few algorithms directly incorporate such restart strategies.", "startOffset": 26, "endOffset": 34}, {"referenceID": 16, "context": "For example, Luby, Sinclair, and Zuckerman [17] showed that, for Las Vegas algorithms with known run time distribution, there is an optimal stopping time in order to minimize the expected running time.", "startOffset": 43, "endOffset": 47}, {"referenceID": 17, "context": "A gentle introduction to practical approaches for such restart strategies is given by Mart [18] and Loureno et al.", "startOffset": 91, "endOffset": 95}, {"referenceID": 15, "context": "[16], and a recent theoretical result is presented by Schoenauer, Teytaud, and Teytaud [23].", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[16], and a recent theoretical result is presented by Schoenauer, Teytaud, and Teytaud [23].", "startOffset": 87, "endOffset": 91}, {"referenceID": 4, "context": "Particularly for the satisfiability problem (SAT), there are several studies that make an empirical comparison of a number of restart policies [5, 15].", "startOffset": 143, "endOffset": 150}, {"referenceID": 14, "context": "Particularly for the satisfiability problem (SAT), there are several studies that make an empirical comparison of a number of restart policies [5, 15].", "startOffset": 143, "endOffset": 150}, {"referenceID": 9, "context": "In the context of satisfiability problems this might be unsurprising as state-of-the-art SAT and CSP solvers often speed up their search by learning \u201cno-goods\u201d during backtracking [10].", "startOffset": 180, "endOffset": 184}, {"referenceID": 12, "context": "Extending these two classical strategies, Fischetti and Monaci [13] investigated the use of the following bet-and-run strategy with a total time limit t:", "startOffset": 63, "endOffset": 67}, {"referenceID": 12, "context": "Fischetti and Monaci [13] experimentally studied such a bet-and-run strategy for mixed-integer programming.", "startOffset": 21, "endOffset": 25}, {"referenceID": 11, "context": "de Perthuis de Laillevault, Doerr, and Doerr [12] have recently shown that a bet-andrun strategy can also benefit asymptotically from larger k: For the pseudo-boolean test function ONEMAX it was proven that choosing k > 1 decreases the O(n log n) expected run time of the (1+1) evolutionary algorithm by an additive term of \u03a9( \u221a n) [12].", "startOffset": 45, "endOffset": 49}, {"referenceID": 11, "context": "de Perthuis de Laillevault, Doerr, and Doerr [12] have recently shown that a bet-andrun strategy can also benefit asymptotically from larger k: For the pseudo-boolean test function ONEMAX it was proven that choosing k > 1 decreases the O(n log n) expected run time of the (1+1) evolutionary algorithm by an additive term of \u03a9( \u221a n) [12].", "startOffset": 332, "endOffset": 336}, {"referenceID": 18, "context": "Applications of the traveling salesperson problem arise naturally in areas like planning and logistics [19], but they are also encountered in a large number of other domains; the textbook by Applegate, Bixby, Chvatal, and Cook [3] gives an overview of such encounters, listing areas as diverse as genome sequencing, drilling problems, aiming telescopes, and data clustering.", "startOffset": 103, "endOffset": 107}, {"referenceID": 2, "context": "Applications of the traveling salesperson problem arise naturally in areas like planning and logistics [19], but they are also encountered in a large number of other domains; the textbook by Applegate, Bixby, Chvatal, and Cook [3] gives an overview of such encounters, listing areas as diverse as genome sequencing, drilling problems, aiming telescopes, and data clustering.", "startOffset": 227, "endOffset": 230}, {"referenceID": 1, "context": "We use the Chained-Lin-Kernighan (CLK) heuristic [2], a state-of-the-art incomplete solver for the Traveling Salesperson problem.", "startOffset": 49, "endOffset": 52}, {"referenceID": 10, "context": "The CLK code is available online [11].", "startOffset": 33, "endOffset": 37}, {"referenceID": 19, "context": "The TSPlib is a classic repository of TSP instances [20], which are available online [21].", "startOffset": 52, "endOffset": 56}, {"referenceID": 20, "context": "The TSPlib is a classic repository of TSP instances [20], which are available online [21].", "startOffset": 85, "endOffset": 89}, {"referenceID": 5, "context": "For our first investigations, we pick from TSPlib the nine largest symmetric instances which have between 5,934 and 85,900 cities, and the Mona Lisa TSP Challenge instance [6], which contains 100,000 cities.", "startOffset": 172, "endOffset": 175}, {"referenceID": 13, "context": "Applications of the vertex cover problem arise in various areas like network security, scheduling and VLSI design [14].", "startOffset": 114, "endOffset": 118}, {"referenceID": 0, "context": "This has a range of applications in bioinformatics and biology, such as identifying related protein sequences [1].", "startOffset": 110, "endOffset": 113}, {"referenceID": 6, "context": "We choose FASTVC [7] over the popular NUMVC [9] as a solver for the minimum vertex cover problem as it works better for massive graphs.", "startOffset": 17, "endOffset": 20}, {"referenceID": 8, "context": "We choose FASTVC [7] over the popular NUMVC [9] as a solver for the minimum vertex cover problem as it works better for massive graphs.", "startOffset": 44, "endOffset": 47}, {"referenceID": 7, "context": "The code of FASTVC is available online [8].", "startOffset": 39, "endOffset": 42}, {"referenceID": 6, "context": "For our initial experimental investigations, we select from the 86 instances used by Cai [7] the 10 instances for which FASTVC outperforms NUMVC the most.", "startOffset": 89, "endOffset": 92}, {"referenceID": 21, "context": "All instances are available online [22].", "startOffset": 35, "endOffset": 39}, {"referenceID": 16, "context": "[17] for defining a kind of restart strategy with different lengths in an attempt to be more robust with respect to choosing the right time s for the initial runs.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] define a simple universal strategy, defined as an (infinite) sequence indicating how many time units should be used for each run.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] turned out inferior compared to restarts of fixed length,", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "which matches the earlier studies on the decision version of SAT/UNSAT problems by Audemard and Simon [4].", "startOffset": 102, "endOffset": 105}, {"referenceID": 6, "context": "We apply it to the 86 MVC instances used in [7], which come from 10 categories of networks, and to the 111 symmetric TSP instances from TSPlib, which cover geographical instances as well as circuit board layouts.", "startOffset": 44, "endOffset": 47}, {"referenceID": 16, "context": "[17] turned out inferior.", "startOffset": 0, "endOffset": 4}], "year": 2016, "abstractText": "A common strategy for improving optimization algorithms is to restart the algorithm when it is believed to be trapped in an inferior part of the search space. However, while specific restart strategies have been developed for specific problems (and specific algorithms), restarts are typically not regarded as a general tool to speed up an optimization algorithm. In fact, many optimization algorithms do not employ restarts at all. Recently, bet-and-run was introduced in the context of mixed-integer programming, where first a number of short runs with randomized initial conditions is made, and then the most promising run of these is continued. In this article, we consider two classical NP-complete combinatorial optimization problems, traveling salesperson and minimum vertex cover, and study the effectiveness of different bet-and-run strategies. In particular, our restart strategies do not take any problem knowledge into account, nor are tailored to the optimization algorithm. Therefore, they can be used off-the-shelf. We observe that state-of-the-art solvers for these problems can benefit significantly from restarts on standard benchmark instances.", "creator": "LaTeX with hyperref package"}}}