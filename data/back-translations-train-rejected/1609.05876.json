{"id": "1609.05876", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Sep-2016", "title": "On the Phase Transition of Finding a Biclique in a larger Bipartite Graph", "abstract": "We report on the phase transition of finding a complete subgraph, of specified dimensions, in a bipartite graph. Finding a complete subgraph in a bipartite graph is a problem that has growing attention in several domains, including bioinformatics, social network analysis and domain clustering. A key step for a successful phase transition study is identifying a suitable order parameter, when none is known. To this purpose, we have applied a decision tree classifier to real-world instances of this problem, in order to understand what problem features separate an instance that is hard to solve from those that is not. We have successfully identified one such order parameter and with it the phase transition of finding a complete bipartite subgraph of specified dimensions. Our phase transition study shows an easy-to-hard-to-easy-to-hard-to-easy pattern. Further, our results indicate that the hardest instances are in a region where it is more likely that the corresponding bipartite graph will have a complete subgraph of specified dimensions, a positive answer. By contrast, instances with a negative answer are more likely to appear in a region where the computational cost is negligible. This behaviour is remarkably similar for problems of a number of different sizes.", "histories": [["v1", "Mon, 19 Sep 2016 19:22:08 GMT  (291kb)", "http://arxiv.org/abs/1609.05876v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CC", "authors": ["roberto alonso", "ra\\'ul monroy", "eduardo aguirre"], "accepted": false, "id": "1609.05876"}, "pdf": {"name": "1609.05876.pdf", "metadata": {"source": "CRF", "title": "On the Phase Transition of Finding a Biclique in a larger Bipartite Graph", "authors": ["Roberto Alonso", "Ra\u00fal Monroy", "Eduardo Aguirre"], "emails": ["roberto.alonso@itesm.mx,", "raulm@itesm.mx,", "eduardo.aguirre@itesm.mx"], "sections": [{"heading": null, "text": "ar Xiv: 160 9.05 876v 1 [cs.A I] 1 9We report on the phase transition in the search for a full subgraph with specified dimensions in a two-sided graph. Finding a full subgraph in a two-sided graph is a problem that is receiving increasing attention in several areas, including bioinformatics, social networking analysis, and domain clustering. A key step for a successful phase transition study is identifying a suitable job parameter when none is known. To this end, we have applied a decision tree classifier to real instances of this problem to understand what problem features separate one hard-to-solve instance from others. We have successfully identified such a job parameter, and thus the phase transition when finding a full two-sided subgraph with specified dimensions. Our phase transition study shows an easy-to-easy-to-to-solve instance from other hard-to-to-to-to-light patterns lying in a region where our biblical substances are likely to show the most difficult results."}, {"heading": "1. Introduction", "text": "In fact, most people who have lived in the United States in recent years are able to understand the world and why they are able to change and change the world. In fact, it is so that they are able to change and change the world. In fact, it is so that they are able to change the world. In fact, it is so that they are able to change and change the world. In fact, it is so that they are able to change and change the world. In fact, it is so that they are able to change and change the world."}, {"heading": "2. Bicliques", "text": "First, we will present the symbols used by this document, defining the problem of finding a biclique in a larger two-page diagram. Second, we will present the decision version of the problem to be examined, namely finding a biclique with specified dimensions in a larger two-page diagram. Third, we will present a way to compare the biclique. Finally, we will introduce the grammar matrix, which makes it possible to efficiently determine whether a maximum biclique exists."}, {"heading": "2.1. Bipartite Graphs and Complexity of Finding a Biclique", "text": "Formally speaking, G = (U, V, E) should be a two-part graph, with resolved groups of vertices, U and V, and such that for each edge (u, v, E) we have this u-U and v-V. A biclique in G is a subset of the vertex, we denote gG (U, V), so that U-U, V-V, and so that for each u-U, V-V the edge (u, V) is complete. The complexity of searching for a biclique was originally discussed in the work of Yannakis et al. in [11]. There, authors proved that finding a biclique with the limitation that | U-U, V-V \"the edge is complete. Later, working people [12, 13] proved that the NP complexity of searching for a biclique also applies to other limitations, such as specifying a maximum number of vertices, a maximum number of U- points, a balanced problem, a number of vertices, or an exact number of vertices, a corrected number of U- 11."}, {"heading": "2.2. Finding a Biclique with Specified Dimensions t and z: a Decision Problem", "text": "Now the decision problem to find a biclique with predefined dimensions is defined as follows: INSTANCE: A two-sided graph G = (U, V, E), two positive integers, t and e.g. QUESTION: Is there a biclique in G, gG (U \u2032, V \u2032), with | U \u2032 | \u2265 t and | V \u2032 | \u2265 z? Since a graph can contain several bicliques, we present a comparison below. This formulation will be used later in the phase transition study."}, {"heading": "2.3. Size-/Weight-Maximal Biclique", "text": "Let G = (U, V, E) be a two-part graph and let gG (U \u2032, V \u2032), with U \u2032 U and V \u2032 V, be a two-part graph. Then let's call the weight and size of gG (U \u2032, V \u2032). Let GG denote all possible bicliques in G. Then a two-part graph is called the maximum weight (or size maximum) GG if there is no gG (U \u2032, V \u2032) or GG, so that | U \u2032 | < | U \u2032 | (resp. | V \u2032 | < | V \u2032 \u2032 |). A two-part graph G using an adaptation matrix Q. From the gram matrix of Q it is possible to get insight into the graph, as we show below."}, {"heading": "2.4. The Adjacency Matrix and the Gram Matrix", "text": "Let G = (U, V, E) be a two-part diagram. We use I, J,. stand for indexing sets and write UI = {ui: u, U, i, I} to denote the nodes in U, indexed by I; likewise, VJ = {vj: v, V, j, J} denotes the nodes in V, indexed by J. Then there is an adjacent matrix, Q is such that Q (i, j) = 1 implies that there is an edge (ui, vj). Now we can calculate the gram matrix called gram (Q) and given by Q \u00d7 Q. In particular gram (Q) is symmetrical, and such that the lower (or upper) triangle matrix contains information that all the unique bicliques with the weight of two, including the one biclique matrix, are implied."}, {"heading": "3. Standard Methodology for a Phase Transition Study", "text": "In fact, it is such that most of them are able to move into another world, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they live, in which they live, in which they live in the world, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live."}, {"heading": "4. On Identifying an Order Parameter for the Problem of Finding a Biclique", "text": "To identify an order parameter, we have characterized real-world examples for which it is possible to find a biclique with little effort, and those that cannot. To this end, we have used C4.5, which builds a decision tree from a training set that contains already classified diagram examples. This tree can be divided into decision rules that explain what makes an instance a class. In the following, we first describe our working data set, and then how C4.5 was applied to it to find an order parameter."}, {"heading": "4.1. Dataset Construction", "text": "In fact, a DNS resolution process involves an agent interrogating a domain to translate it into an IP address. Then, by observing DNS processes, we constructed a graph G = (U, V, E) in which the sentence U denotes IP addresses, the sentence V denotes URLs, and (U, V) E represents the action of the agent u over domain v, namely the process of translation. From this bipartite graph, it is possible to observe bicliques (since we tend to visit the same websites).This type of real process involves a large and dynamic graph following a free network."}, {"heading": "4.2. Features Used to Characterize a Graph", "text": "We insist that in selecting all these characteristics we were driven by determining an order parameter and that they all capture the probability of an instance that is HART. These characteristics are: \u2022 | U |: the cardinality of U. \u2022 | V |: the cardinality of V. \u2022 | E |: the cardinality of E. \u2022 An estimate of the total number of object combinations that must be attempted to search for bicliques, the so-called comb (G). Take a diagram G, calculate grams (Q) and then search for the three highest values of the lower triangular gram matrix and multiply these values. \u2022 The ratio (| U | V |) / w, we call the social degree of W. \u2022 The weight U \u00b2 of a maximum weight biclique in G. \u2022 The size V \u00b2 of a maximum size biclique in G. \u2022 The number of 2-weight bicliques, calculated from grams (Q) \u2022 And also the number of 2-in G."}, {"heading": "4.3. Construction of the Classifier", "text": "We have created seven classification trees, of which one per selected w is taken into account in our data set. The basis of this design decision is the observation whether and if so, how the number of observations is part of the job parameter. We have created each classifier by means of ten-fold cross-validation. Roughly speaking, we first randomly selected 90% of the training set, then we obtained a classification tree from this data using C4.5 as implemented in Weka [18]. Secondly, we tested the tree for the remaining 10% of the instances. Thirdly, we repeated this procedure ten times. Finally, we selected the best classification tree and validated it on the test set. The corresponding results are reported below."}, {"heading": "4.4. An Evaluation of the Classification Tree Performance", "text": "The false positive rate (FPR) is the rate at which the classifier erroneously classifies a HARD instance as EASY, and the false negative rate (FNR) is reversed. Usually, there is a trade-off between these rates. Note how the FPR grows with the number of observations, which is explained by the greater the number of observations, the greater the proportion of instances referred to as HARD. This means that both the training and validation are not balanced in the dataset. Therefore, it is more likely that a HARD instance is incorrectly classified. More thoroughly, we have evaluated the performance of our classifier using Receiver Operating Characteristic (ROC) curves (see Figure 1). A ROC curve is a parametric curve generated by varying a threshold and calculating both the FPR and the FNR curve."}, {"heading": "4.5. Order Parameter Discovery from the Classification Tree", "text": "The classification trees that we have obtained for all datasets are remarkably similar, regardless of the number of observations w. Figure 3 shows the one for a collection of graphs with w = 250 observations. In general, the rules extracted from these classification trees show that the characteristics that separate a HARD instance from an EASY instance are cardinality | V \u2032 | of the size-maximum biclique (referred to as zmax), the number of edges in the graph | E |, the number of 2-weighing bicliques (referred to as Freqt), cardinality | U | and cardinality | V |. We also noted that a large number of HARD instances are covered by a rule, namely: designation instance HARD, if cardinality V \u2032 of the sizemaxal biclique and cardinality | V | are each greater than 3 and 57. We constructed a classifier of the type HARD with no reference to this rule, i.e. we differentiate between the number of the icles in this classification, i.e., the number of these instances in this rule is only 4."}, {"heading": "5. An Algorithm to Compute Bicliques", "text": "To perform our phase transition study, we used algorithm 1,2, which returns a biclique with the size z and maximum weight, if any, together with the computational costs, given a graph and a positive integer z. The function adjacentTo (V) returns a series of vertices U \u00b2, with all u \u00b2 U \u00b2 bordering V. Note that the algorithm returns a biclique, if any, in lines 8-9; otherwise, it does not return a solution. Also, note that the biclique found by the algorithm is maximum weight. This does not add computational costs to the problem, since our measure of computational effort shown below uses the other metric. Furthermore, there is knowledge of the cardinality of a maximum weight biclique obtained from grams (Q \u00b2), so the search for a biclique is greater than the weight maximum, which is negligible under our algorithm."}, {"heading": "6. The Phase Transition of Finding a Biclique in larger Bipartite Graph", "text": "We are now ready to present the Phase Transition. First, in Section 6.1 we present our results for the decision problem as introduced in Section 2.2. Next, in Section 6.2 we present an alternative Phase Transition where the problem is now transformed into the search for a maximum size biclique with maximum weight."}, {"heading": "6.1. Phase Transition of the Decision Problem of Finding a Biclique", "text": "Figures 5 - 9 show the phase transition, in which we specified the size z to determine the costs."}, {"heading": "6.2. Maximal Bicliques", "text": "< 5 - 9 result from the combination of results obtained for a number of problem cases, some of which are solvable and others not. To convey the behavior for both classes separately, it is standard in the literature to find optimal solutions for the problem; then set the parameter z (which must be searched for) so that at a known \"distance\" d def = zmax \u2212 z it assumes the optimal solution for each problem, where zmax is the size of the maximum size biclique in a given instance. Consequently, at d = 0, 1, 2,. bicliques are guaranteed to be found if z \u2264 zmax \u2212 z; in fact at d = 0 only maximum size bicliques are output. However, at d = \u2212 1, \u2212 2, no bicliques are found at all. So we have applied our algorithm to each instance, whereby it finds a maximum size biclique. For this step, we have slightly modified our algorithm."}, {"heading": "7. Conclusions and Indications for Further Work", "text": "In this work, we focused on the identification of the phase transition, which separates simple and hard instances in the problem of finding a full bipartite subgraph into a larger bipartite graph, namely a biclique. This problem naturally arises in several contexts (e.g. bioinformatics, social network analysis, document classification, etc.), but little effort has been made to understand its phase transition. In order to perform this work, we took a 4-step approach: First, the selection of the job parameter can be made by proposing a new methodology that makes use of a classifier to identify parameter candidates. Second, in our experiment, we look at instances that arise in the context of a DNS server. Real-world instances can be much more difficult to synthesize similar problems. Third, we have used a backtracking-based approach to solve problem instances and measure the computational effort involved."}], "references": [{"title": "Where the really hard problems are", "author": ["P. Cheeseman", "B. Kanefsky", "W.M. Taylor"], "venue": "in: J. Mylopoulos, R. Reiter (Eds.), Proceedings of the 12th International Joint Conference on Artificial Intelligence, IJCAI, Morgan Kaufmann", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1991}, {"title": "Phase transitions from real computational problems", "author": ["I.P. Gent", "T. Walsh"], "venue": "in: Proceedings of the 8th International Symposium on Artificial Intelligence", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1995}, {"title": "Phase transitions and the search problem", "author": ["T. Hogg", "B.A. Huberman", "C.P. Williams"], "venue": "Artificial Intelligence 81 (1\u20132) ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1996}, {"title": "A new look at the easy-hard-easy pattern of combinatorial search difficulty", "author": ["D.L. Mammen", "T. Hogg"], "venue": "Journal of Artificial Intelligence Research 7 ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1997}, {"title": "Asymptotic and finite size parameters for phase transitions: Hamiltonian circuit as a case study", "author": ["J. Frank", "I.P. Gent", "T. Walsh"], "venue": "Information Processing Letters 65 ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1998}, {"title": "The hardest random SAT problems", "author": ["I.P. Gent", "T. Walsh"], "venue": "in: B. Nebel, L. Dreschler-Fischer (Eds.), Proceedings of the 18th German Annual Conference on Artificial Intelligence, KI-94, Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1994}, {"title": "On finding bicliques in bipartite graphs: a novel algorithm and its application to the integration of diverse biological data types", "author": ["Y. Zhang", "C. Phillips", "G. Rogers", "E. Baker", "E. Chesler", "M. Langston"], "venue": "BMC Bioinformatics 15 (1) ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "A graphtheoretical approach for pattern discovery in epidemiological research", "author": ["R. Mushlin", "A. Kershenbaum", "S. Gallagher", "T. Rebbeck"], "venue": "IBM Syst J 46 ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "Obtaining maximal concatenated phylogenetic data sets from large sequence databases", "author": ["M. Sanderson", "A. Driskell", "R. Ree", "O. Eulenstein", "S. Langley"], "venue": "Mol Biol Evol 20 (7) ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2003}, {"title": "A social network based model to detect anomalies on DNS servers", "author": ["R. Alonso"], "venue": "Ph.D. thesis, Tecnol\u00f3gico de Monterrey ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Node-and edge-deletion np-complete problems", "author": ["M. Yannakakis"], "venue": "in: Proceedings of the Tenth Annual ACM Symposium on Theory of Computing, STOC \u201978, ACM, New York, NY, USA", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1978}, {"title": "On bipartite and multipartite clique problems", "author": ["M. Dawande", "P. Keskinocak", "J.M. Swaminathan", "S. Tayur"], "venue": "J. Algorithms 41 (2) ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2001}, {"title": "The maximum edge biclique problem is np-complete", "author": ["R. Peeters"], "venue": "Discrete Applied Mathematics 131 (3) ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "On the NP-completeness of computing the commonality amongst the objects upon which a collection of agents has performed an action", "author": ["R. Alonso", "R. Monroy"], "venue": "Computacion y Sistemas 17 (4) ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "The TSP phase transition", "author": ["I.P. Gent", "T. Walsh"], "venue": "Artificial Intelligence 88 (1\u20132) ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1996}, {"title": "Scaling effects in the CSP phase transition", "author": ["I.P. Gent", "E. MacIntyre", "P. Prosser", "T. Walsh"], "venue": "in: U. Montanari, F. Rossi (Eds.), Principles and Practice of Constraint Programming, CP \u201995, Springer", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1995}, {"title": "Phase transitions and annealed theories: Number partitioning as a case study", "author": ["I.P. Gent", "T. Walsh"], "venue": "in: W. Wahlster (Ed.), Proceedings of the Twelfth European Conference on Artificial Intelligence, ECAI\u201996, John Wiley & Sons", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1996}, {"title": "Data Mining: Practical Machine Learning Tools and Techniques", "author": ["I.H. Witten", "E. Frank"], "venue": "2nd Edition, Morgan Kaufmann Series in Data Management Systems, Morgan Kaufmann", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2005}, {"title": "The SAT phase transition", "author": ["I.P. Gent", "T. Walsh"], "venue": "in: A. G. Cohn (Ed.), Proceedings of the Eleventh European Conference on Artificial Intelligence, ECAI\u201994, John Wiley & Sons", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1994}, {"title": "Phase transition in the bandwidth minimization problem", "author": ["N. Rangel-Valdez", "J. Torres-Jimenez"], "venue": "in: A. Hern\u00e1ndez-Aguirre, R. Monroy-Borja, C. A. Reyes-Gar\u0107\u0131a (Eds.), Proceedings of the 8th Mexican International Conference on Artificial Intelligence, MICAI \u201909, Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "Using cloud computing MapReduce operations to detect DDoS attacks on DNS servers", "author": ["L. Trejo", "R. Monroy", "R. Alonso", "A. Avila", "M. Maqueo", "J. Vazquez", "E. Sanchez"], "venue": "in: A. Proenca, A. Pina, J. Gar\u0107\u0131a-Tobio, L. Ribeiro (Eds.), Proceedings of the 4th Iberian Grid Infrastructure Conference 2010, IBERGRID\u201910, Netbiblo", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "[1] showed that, for any NP-complete problem, there exists a phase transition that separates easy instances from hard ones, and that this phase transition can be found as one varies an order parameter 1 around one or more critical values.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3, 4, 5, 6].", "startOffset": 0, "endOffset": 12}, {"referenceID": 3, "context": "[3, 4, 5, 6].", "startOffset": 0, "endOffset": 12}, {"referenceID": 4, "context": "[3, 4, 5, 6].", "startOffset": 0, "endOffset": 12}, {"referenceID": 5, "context": "[3, 4, 5, 6].", "startOffset": 0, "endOffset": 12}, {"referenceID": 6, "context": "[7, 8, 9]) where researchers have proposed several algorithms to compute bicliques.", "startOffset": 0, "endOffset": 9}, {"referenceID": 7, "context": "[7, 8, 9]) where researchers have proposed several algorithms to compute bicliques.", "startOffset": 0, "endOffset": 9}, {"referenceID": 8, "context": "[7, 8, 9]) where researchers have proposed several algorithms to compute bicliques.", "startOffset": 0, "endOffset": 9}, {"referenceID": 6, "context": "[7] has recently reported an improvement, with respect to other methods, in enumerating all the bicliques in a graph in a real-world dataset.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "Then, as shown by Alonso [10], the number and structure of such bicliques are severely broken apart upon an abnormal event, e.", "startOffset": 25, "endOffset": 29}, {"referenceID": 0, "context": "Following standard convention, we use \u201corder parameter\u201d to refer to a parameter that controls the complexity of finding a solution to a given problem instance [1], instead of using the more appropriate term control parameter [2].", "startOffset": 159, "endOffset": 162}, {"referenceID": 1, "context": "Following standard convention, we use \u201corder parameter\u201d to refer to a parameter that controls the complexity of finding a solution to a given problem instance [1], instead of using the more appropriate term control parameter [2].", "startOffset": 225, "endOffset": 228}, {"referenceID": 10, "context": "in [11].", "startOffset": 3, "endOffset": 7}, {"referenceID": 11, "context": "like [12, 13] have proven that the NP-completeness of finding a biclique also holds for other restrictions, such as specifying a maximum number of edges, a maximum number of vertices, or specifying a maximum edge weight.", "startOffset": 5, "endOffset": 13}, {"referenceID": 12, "context": "like [12, 13] have proven that the NP-completeness of finding a biclique also holds for other restrictions, such as specifying a maximum number of edges, a maximum number of vertices, or specifying a maximum edge weight.", "startOffset": 5, "endOffset": 13}, {"referenceID": 10, "context": "Particularly, the version of the problem for which we demand |U | = |V | is called balanced biclique [11], and that where |U | = t and |V | = z, for given t and z, is called exact node cardinality decision [12].", "startOffset": 101, "endOffset": 105}, {"referenceID": 11, "context": "Particularly, the version of the problem for which we demand |U | = |V | is called balanced biclique [11], and that where |U | = t and |V | = z, for given t and z, is called exact node cardinality decision [12].", "startOffset": 206, "endOffset": 210}, {"referenceID": 13, "context": "Recently, Alonso and Monroy [14] have proven that finding a biclique such that |U | \u2265 t and |V | \u2265 z vertices, for given t and z, is also NP-complete.", "startOffset": 28, "endOffset": 32}, {"referenceID": 0, "context": ", travelling salesman [1, 15]): the cost of finding a solution increases at first, but then decreases later on to small values back again.", "startOffset": 22, "endOffset": 29}, {"referenceID": 14, "context": ", travelling salesman [1, 15]): the cost of finding a solution increases at first, but then decreases later on to small values back again.", "startOffset": 22, "endOffset": 29}, {"referenceID": 15, "context": "constraint satisfaction [16]) have been found to have similar cost, regardless of the size of the instance, as long as the instance is scaled.", "startOffset": 24, "endOffset": 28}, {"referenceID": 0, "context": "As pointed out by [1], using a different order parameter yields a different phase transition.", "startOffset": 18, "endOffset": 21}, {"referenceID": 16, "context": "Gent and Walsh [17] used an annealed theory to determine an order parameter for the phase transition of number partitioning.", "startOffset": 15, "endOffset": 19}, {"referenceID": 9, "context": "From this bipartite graph it is possible to observe bicliques (since we tend to visit the same websites), as shown in [10].", "startOffset": 118, "endOffset": 122}, {"referenceID": 17, "context": "5, as implemented in Weka [18].", "startOffset": 26, "endOffset": 30}, {"referenceID": 0, "context": "Let zmax denote the cardinality of a size-maximal biclique, then \u03c0 def = zmax/|V |, with \u03c0 \u2208 [0, 1].", "startOffset": 93, "endOffset": 99}, {"referenceID": 18, "context": "Following [19, 16, 15], we used the number of combinations explored as a measure of computational expense.", "startOffset": 10, "endOffset": 22}, {"referenceID": 15, "context": "Following [19, 16, 15], we used the number of combinations explored as a measure of computational expense.", "startOffset": 10, "endOffset": 22}, {"referenceID": 14, "context": "Following [19, 16, 15], we used the number of combinations explored as a measure of computational expense.", "startOffset": 10, "endOffset": 22}, {"referenceID": 19, "context": "in [20]).", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "To address this, we are currently working on using a MapReduce approach following an approach similar as in [21].", "startOffset": 108, "endOffset": 112}], "year": 2016, "abstractText": "We report on the phase transition of finding a complete subgraph, of specified dimensions, in a bipartite graph. Finding a complete subgraph in a bipartite graph is a problem that has growing attention in several domains, including bioinformatics, social network analysis and domain clustering. A key step for a successful phase transition study is identifying a suitable order parameter, when none is known. To this purpose, we have applied a decision tree classifier to real-world instances of this problem, in order to understand what problem features separate an instance that is hard to solve from those that is not. We have successfully identified one such order parameter and with it the phase transition of finding a complete bipartite subgraph of specified dimensions. Our phase transition study shows an easy-to-hard-to-easy-to-hard-toeasy pattern. Further, our results indicate that the hardest instances are in a region where it is more likely that the corresponding bipartite graph will have a complete subgraph of specified dimensions, a positive answer. By contrast, instances with a negative answer are more likely to appear in a region where the computational cost is negligible. This behaviour is remarkably similar for problems of a number of different sizes.", "creator": "LaTeX with hyperref package"}}}