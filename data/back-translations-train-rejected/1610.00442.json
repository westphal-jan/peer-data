{"id": "1610.00442", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Oct-2016", "title": "A Probability Distribution Strategy with Efficient Clause Selection for Hard Max-SAT Formulas", "abstract": "Many real-world problems involving constraints can be regarded as instances of the Max-SAT problem, which is the optimization variant of the classic satisfiability problem. In this paper, we propose a novel probabilistic approach for Max-SAT called ProMS. Our algorithm relies on a stochastic local search strategy using a novel probability distribution function with two strategies for picking variables, one based on available information and another purely random one. Moreover, while most previous algorithms based on WalkSAT choose unsatisfied clauses randomly, we introduce a novel clause selection strategy to improve our algorithm. Experimental results illustrate that ProMS outperforms many state-of-the-art stochastic local search solvers on hard unweighted random Max-SAT benchmarks.", "histories": [["v1", "Mon, 3 Oct 2016 08:30:47 GMT  (207kb)", "http://arxiv.org/abs/1610.00442v1", "11 pages, 3 tables"]], "COMMENTS": "11 pages, 3 tables", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["sixue liu", "yulong ceng", "gerard de melo"], "accepted": false, "id": "1610.00442"}, "pdf": {"name": "1610.00442.pdf", "metadata": {"source": "CRF", "title": "A Probability Distribution Strategy with Efficient Clause Selection for Hard Max-SAT Formulas", "authors": ["Sixue Liu", "Yulong Ceng", "Gerard de Melo"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 161 0.00 442v 1 [cs.A I] 3 Oct 2"}, {"heading": "1 Introduction", "text": "Many of these tasks can be trivially reduced to the Max SAT problem. Examples include learning the structure of a Markov network [9], detecting multiple agents [20], and automated planning and planning [19]. Given a number of variables and constraints in the form of clauses converted to cyclical normal form (CNF), the goal in MaxSAT is to find an allocation that maximizes the number of satisfactory clauses. Unfortunately, the problem is NP-hard, and for the Max 3 SAT variant (limited to clauses of size 3), it is difficult to find optimal solutions within a factor of 7 / 8. Max SAT algorithms are often categorized as fully."}, {"heading": "2 Variable selection for Max-SAT", "text": "The problem with the Max SAT formula is that each clause minimizes the number of unsatisfied clauses. We use CU to specify the amount of unsatisfied clauses. We also define r = m / n as the ratio of clauses to variables, where n is the total number of Boolean variables and m is the total number of Boolean variables and m is the total number of Boolean variables and m is the total number of Boolean variables."}, {"heading": "3 ProMS algorithm", "text": "As specified in Algorithm 1, ProMS first randomly generates a complete assignment and then repeatedly selects a variable and reverses it, up to a maximum number of steps. At each step, once a clause is selected, the incident variables become probable p according to a distribution function f. We then update the current assignment. If the number of unsatisfactory clauses is now lower than for the previous best assignment \u03b1 \u0445, we update the variables in question to be the current assignment. Ultimately, the best found assignment will return.2One naive way to show this is to list all (mc) combinations of violated clauses, to fix the variables in them, and to check the satisfaction of the remaining formulas using a SAT algorithm. For this analysis, we do not consider specific algorithms, but only aim to theoretically characterize their existence."}, {"heading": "3.1 Variable selection probabilities", "text": "Following our analysis in section 2, we select the variable v for flipping based on the make values m (v) and the break values b (v), while m (v) is not used in algorithms such as WalkSAT and probSAT for the SAT problem. In particular, we define f (v) = m (v) \u0445 (1 + b (v) \u03b7, where \u0432, \u03b7 are parameters. Based on the scoring function f, our algorithm iterates over the variable v and selects it with probabilityp (v) = {f (v) \u03c4 (c) \u03c4 (c) \u2264 1 | c | otherwise (3), where \u03c4 (c) = \u2211 v \u0644c f (v) denotes the score of a clause c and \u03b4 is a threshold parameter. If the creative (c) is very low, which means that all occurring variables have high break values and there are therefore no promising variables, each variable within the set is chosen with probability of equal superiority, with pure variable v being used for variable diversification (v)."}, {"heading": "3.2 Make/break computation", "text": "Instead of calculating interrupt values as needed in each iteration (the non-caching scheme), the XOR caching technique includes the step-by-step maintenance of interrupt values with the XOR scheme optimization, which is 20% faster than the standard caching implementation [4]. However, non-caching can be quite successful [18], because for the WalkSAT family, if the current interrupt value exceeds the minimum interrupt value, the calculation can be terminated. These two schemes are only for SAT problems with short clauses. In our algorithm, both the values m (v) and the interrupt values b (v) must be calculated. In our experiments, we took into account all four combinations: \u2022 MCBC: the original implementation, in which both m (v) and b (v) are calculated with XOR caching \u2022 MCBN: Calculation of the interrupt value (we use the NV) for the interrupt scheme (the MV) and MV (the MV)."}, {"heading": "3.3 Clause selection", "text": "Studies of the WalkSAT family algorithms focused on the variable picking strategy. Just recently, with probSAT, the strategy of selecting dissatisfied clauses was further investigated [3]. This work proposed to implement pseudo-width first search (PBFS) instead of random selection (RS) to select dissatisfied clauses. Dissatisfied clauses CU are usually implemented as an array with dynamic length m to store the actual clauses, and a position array to record the indices of dissatisfied clauses. In each update step, when a dissatisfied clause becomes dissatisfied, one adds the new dissatisfied clause to the end of the array, the increment m and the updating of the position array array array array array array (the brake step arrays). If a clause is satisfied, it is dissatisfied with the last element in the array, and the position field is updated (the Make step is updated the new step of the dissatisfied step arrays is added to the end of the step arrays)."}, {"heading": "4 Experiments", "text": "We now describe a series of experiments that evaluate make-break calculations and selection strategies for ProMS clauses and compare them with the winners of recent Max-SAT evaluations."}, {"heading": "4.1 Experimental setup", "text": "All benchmarks in our experiment are unweighted instances from the following two particularly hard problem areas. 1. High ranges based on benchmarks: This is an important model for generating Max SAT problems in situations that are due to the degree of satisfaction. 2. High expansion of the incidence diagrams of a CNF implies a high resolution width. 3. In the Max SAT evaluation, high ranges are distinguished between the performance of different solution approaches, while the results of other classes are rather close. 4. Ratio 4 from the 2015 Max SAT evaluation as our first class, including 25 instances of 250 variables and 25 of 300 variables. The remaining classes are generated by the author, 400, 600 variables and the same ratio as our first class."}, {"heading": "4.2 Results", "text": "In fact, the fact is that most of us will be able to move to another world, in which we are able, in which we are able, in which we are able to move, and in which we are able to change the world, \"he said in an interview with the New York Times."}, {"heading": "5 Conclusions and future work", "text": "We have introduced a novel Max-SAT algorithm called ProMS. Unlike most previous Max-SAT approaches, ProMS avoids a greedy strategy in favor of a more likely one. In contrast to probabilistic SAT solvers like probSAT, ProMS relies heavily on make values in its search. Our results show that these are critical for variable selection, especially when combined with an additional pure random mode to limit its impact. Furthermore, selecting the second oldest paragraph instead of a random one further improves the quality of the search space studied. We note that ProMS significantly outperforms its competitors in tough problem situations, including solvers with configuration testing whose robustness has been demonstrated in several areas of combinatorial search. One drawback is that the deviation in our runtimes was also much greater than with other approaches, due to the strong randomness in our algorithm. Fortunately, this can be resolved with a paralleled version of our solution behavior parameters in a way that extends the parameters of our wide-time strategy."}], "references": [{"title": "Inference rules in local search for max-sat", "author": ["A. Abram\u00e9", "D. Habet"], "venue": "IEEE 24th International Conference on Tools with Artificial Intelligence, ICTAI 2012, pages 207\u2013214", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Generating hard SAT/CSP instances using expander graphs", "author": ["C. Ans\u00f3tegui", "R. B\u00e9jar", "C. Fern\u00e1ndez", "C. Mateu"], "venue": "Proceedings of the Twenty-Third AAAI Conference on Artificial Intelligence, pages 1442\u20131443", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2008}, {"title": "Engineering stochastic local search for the satisfiability problem", "author": ["A. Balint"], "venue": "PhD thesis, Universit\u00e4t Ulm. Fakult\u00e4t f\u00fcr Ingenieurwissenschaften und Informatik", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Improving implementation of SLS solvers for SAT and new heuristics for k-sat with long clauses", "author": ["A. Balint", "A. Biere", "A. Fr\u00f6hlich", "U. Sch\u00f6ning"], "venue": "Theory and Applications of Satisfiability Testing - SAT 2014 - 17th International Conference, pages 302\u2013316", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Choosing probability distributions for stochastic local search and the role of make versus break", "author": ["A. Balint", "U. Sch\u00f6ning"], "venue": "Theory and Applications of Satisfiability Testing\u2013SAT 2012, pages 16\u201329. Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2012}, {"title": "Generating hard instances for maxsat", "author": ["R. B\u00e9jar", "A. Cabiscol", "F. Many\u00e0", "J. Planes"], "venue": "ISMVL 2009, 39th International Symposium on Multiple-Valued Logic, pages 191\u2013195", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "and H", "author": ["A. Biere", "M. Heule"], "venue": "van Maaren. Handbook of satisfiability, volume 185. ios press", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Configuration checking with aspiration in local search for SAT", "author": ["S. Cai", "K. Su"], "venue": "Proceedings of the Twenty-Sixth AAAI Conference on Artificial Intelligence.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning chordal markov networks by constraint satisfaction", "author": ["J. Corander", "T. Janhunen", "J. Rintanen", "H.J. Nyman", "J. Pensar"], "venue": "Advances in Neural Information Processing Systems 26: 27th Annual Conference on Neural Information Processing Systems 2013, pages 1349\u20131357", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Elements of information theory", "author": ["T.M. Cover", "J.A. Thomas"], "venue": "John Wiley & Sons", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Some optimal inapproximability results", "author": ["J. H\u00e5stad"], "venue": "Journal of the ACM (JACM), 48(4):798\u2013859", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2001}, {"title": "Diversification and determinism in local search for satisfiability", "author": ["C.M. Li", "W.Q. Huang"], "venue": "Theory and Applications of Satisfiability Testing, pages 158\u2013172. Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}, {"title": "CCLS: an efficient local search algorithm for weighted maximum satisfiability", "author": ["C. Luo", "S. Cai", "W. Wu", "Z. Jie", "K. Su"], "venue": "IEEE Trans. Computers, 64(7):1830\u20131843", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "Double configuration checking in stochastic local search for satisfiability", "author": ["C. Luo", "S. Cai", "W. Wu", "K. Su"], "venue": "Twenty-Eighth AAAI Conference on Artificial Intelligence", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Noise strategies for improving local search", "author": ["B. Selman", "H.A. Kautz", "B. Cohen"], "venue": "AAAI, volume 94, pages 337\u2013343", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1994}, {"title": "A new method for solving hard satisfiability problems", "author": ["B. Selman", "H. Levesque", "D. Mitchell"], "venue": "Proceedings of the Tenth National Conference on Artificial Intelligence, AAAI 1992, pages 440\u2013446. AAAI Press", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1992}, {"title": "Iterated robust tabu search for MAX-SAT", "author": ["K. Smyth", "H.H. Hoos", "T. St\u00fctzle"], "venue": "Advances in Artificial Intelligence, pages 129\u2013144. Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}, {"title": "UBCSAT: An implementation and experimentation environment for SLS algorithms for SAT and MAX-SAT", "author": ["D.A. Tompkins", "H.H. Hoos"], "venue": "Theory and Applications of Satisfiability Testing, pages 306\u2013320. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2005}, {"title": "Learning action models from plan examples using weighted MAX-SAT", "author": ["Q. Yang", "K. Wu", "Y. Jiang"], "venue": "Artif. Intell., 171(2-3):107\u2013143", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2007}, {"title": "Action-model based multi-agent plan recognition", "author": ["H.H. Zhuo", "Q. Yang", "S. Kambhampati"], "venue": "Advances in Neural Information Processing Systems 25: 26th Annual Conference on Neural Information Processing Systems 2012, pages 377\u2013385", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 8, "context": "Examples include learning the structure of a Markov network [9], multi-agent plan recognition [20], and automated planning and scheduling [19].", "startOffset": 60, "endOffset": 63}, {"referenceID": 19, "context": "Examples include learning the structure of a Markov network [9], multi-agent plan recognition [20], and automated planning and scheduling [19].", "startOffset": 94, "endOffset": 98}, {"referenceID": 18, "context": "Examples include learning the structure of a Markov network [9], multi-agent plan recognition [20], and automated planning and scheduling [19].", "startOffset": 138, "endOffset": 142}, {"referenceID": 10, "context": "Unfortunately, the problem is NP-hard, and for the Max-3-SAT variant (limited to clauses of size 3), it is hard to approximate optimal solutions within a factor of more than 7/8 [11].", "startOffset": 178, "endOffset": 182}, {"referenceID": 15, "context": "For the incomplete category of both regular SAT and Max-SAT, a number of stochastic local search (SLS) algorithms have been proposed, including GSAT [16], WalkSAT [15], probSAT [5], and configuration checking (CC) [8, 14].", "startOffset": 149, "endOffset": 153}, {"referenceID": 14, "context": "For the incomplete category of both regular SAT and Max-SAT, a number of stochastic local search (SLS) algorithms have been proposed, including GSAT [16], WalkSAT [15], probSAT [5], and configuration checking (CC) [8, 14].", "startOffset": 163, "endOffset": 167}, {"referenceID": 4, "context": "For the incomplete category of both regular SAT and Max-SAT, a number of stochastic local search (SLS) algorithms have been proposed, including GSAT [16], WalkSAT [15], probSAT [5], and configuration checking (CC) [8, 14].", "startOffset": 177, "endOffset": 180}, {"referenceID": 7, "context": "For the incomplete category of both regular SAT and Max-SAT, a number of stochastic local search (SLS) algorithms have been proposed, including GSAT [16], WalkSAT [15], probSAT [5], and configuration checking (CC) [8, 14].", "startOffset": 214, "endOffset": 221}, {"referenceID": 13, "context": "For the incomplete category of both regular SAT and Max-SAT, a number of stochastic local search (SLS) algorithms have been proposed, including GSAT [16], WalkSAT [15], probSAT [5], and configuration checking (CC) [8, 14].", "startOffset": 214, "endOffset": 221}, {"referenceID": 16, "context": "For Max-SAT, Iterated Robust Tabu Search [17] was ranked first in the Max-SAT Evaluation 2012, but, overall, the results were not particularly good.", "startOffset": 41, "endOffset": 45}, {"referenceID": 12, "context": "Demonstrating that ideas from incomplete algorithms for SAT can be applied to Max-SAT, a variant of CC named CCLS [13] was ranked highest in the Unweighted Random track of the Max-SAT Evaluations 2013 and 2015, respectively, improving considerably over previous results.", "startOffset": 114, "endOffset": 118}, {"referenceID": 4, "context": "Thus, successful SAT methods [5, 15] choose variables v using a function of the form f(v) = g(b(v)), i.", "startOffset": 29, "endOffset": 36}, {"referenceID": 14, "context": "Thus, successful SAT methods [5, 15] choose variables v using a function of the form f(v) = g(b(v)), i.", "startOffset": 29, "endOffset": 36}, {"referenceID": 9, "context": "1 1\u2212\u03bb (1\u2212\u03bb)m [10], we obtain", "startOffset": 13, "endOffset": 17}, {"referenceID": 6, "context": "064n, and this is extremely easy to be reached by modern solvers [7].", "startOffset": 65, "endOffset": 68}, {"referenceID": 11, "context": "Such a purely random selection is also used for diversification in dynamic local search [12].", "startOffset": 88, "endOffset": 92}, {"referenceID": 3, "context": "Instead of computing break values on demand in every iteration (the non-caching scheme), the XOR-caching technique involves maintaining the break values incrementally with XOR scheme optimization, which is 20% faster than the standard caching implementation [4].", "startOffset": 258, "endOffset": 261}, {"referenceID": 17, "context": "Non-caching, however, can be quite successful [18], because for the WalkSAT family, when the current break value exceeds the minimal break value encountered, the computation can be terminated.", "startOffset": 46, "endOffset": 50}, {"referenceID": 2, "context": "Only recently with probSAT was the strategy of selecting unsatisfied clauses investigated further [3].", "startOffset": 98, "endOffset": 101}, {"referenceID": 5, "context": "High girth model based benchmarks: This is an important model for generating Max-SAT problem instances due to the degree of difficulty for satisfication [6].", "startOffset": 153, "endOffset": 156}, {"referenceID": 1, "context": "A high expansion of the incidence graph of a CNF implies high resolution width [2].", "startOffset": 79, "endOffset": 82}, {"referenceID": 0, "context": "We use the latest binary, provided by its author [1].", "startOffset": 49, "endOffset": 52}, {"referenceID": 12, "context": "\u2022 CCLS2015: CCLS [13] placed first in the Incomplete Solvers track of the Max-SAT Evaluation 2015 \u201cUnweighted Random\u201d track.", "startOffset": 17, "endOffset": 21}], "year": 2016, "abstractText": "Many real-world problems involving constraints can be regarded as instances of the Max-SAT problem, which is the optimization variant of the classic satisfiability problem. In this paper, we propose a novel probabilistic approach for Max-SAT called ProMS. Our algorithm relies on a stochastic local search strategy using a novel probability distribution function with two strategies for picking variables, one based on available information and another purely random one. Moreover, while most previous algorithms based on WalkSAT choose unsatisfied clauses randomly, we introduce a novel clause selection strategy to improve our algorithm. Experimental results illustrate that ProMS outperforms many state-of-the-art stochastic local search solvers on hard unweighted random Max-SAT benchmarks.", "creator": "LaTeX with hyperref package"}}}