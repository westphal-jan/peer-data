{"id": "1610.04872", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Oct-2016", "title": "Fault Detection Engine in Intelligent Predictive Analytics Platform for DCIM", "abstract": "With the advancement of huge data generation and data handling capability, Machine Learning and Probabilistic modelling enables an immense opportunity to employ predictive analytics platform in high security critical industries namely data centers, electricity grids, utilities, airport etc. where downtime minimization is one of the primary objectives. This paper proposes a novel, complete architecture of an intelligent predictive analytics platform, Fault Engine, for huge device network connected with electrical/information flow. Three unique modules, here proposed, seamlessly integrate with available technology stack of data handling and connect with middleware to produce online intelligent prediction in critical failure scenarios. The Markov Failure module predicts the severity of a failure along with survival probability of a device at any given instances. The Root Cause Analysis model indicates probable devices as potential root cause employing Bayesian probability assignment and topological sort. Finally, a community detection algorithm produces correlated clusters of device in terms of failure probability which will further narrow down the search space of finding route cause. The whole Engine has been tested with different size of network with simulated failure environments and shows its potential to be scalable in real-time implementation.", "histories": [["v1", "Sun, 16 Oct 2016 15:14:36 GMT  (1166kb)", "http://arxiv.org/abs/1610.04872v1", "Accepted in 4th International Conference on Business Analytics and Intelligence (ICBAI 2016)"]], "COMMENTS": "Accepted in 4th International Conference on Business Analytics and Intelligence (ICBAI 2016)", "reviews": [], "SUBJECTS": "cs.AI cs.DC", "authors": ["bodhisattwa prasad majumder", "ayan sengupta", "sajal jain", "parikshit bhaduri"], "accepted": false, "id": "1610.04872"}, "pdf": {"name": "1610.04872.pdf", "metadata": {"source": "CRF", "title": "Fault Detection Engine in Intelligent Predictive Analytics Platform for DCIM", "authors": ["Bodhisattwa Prasad Majumder", "Ayan Sengupta", "Sajal Jain", "Parikshit Bhaduri"], "emails": ["sajalj2017}@email.iimcal.ac.in,", "parikshit.bhaduri@greenfieldsoft.com"], "sections": [{"heading": null, "text": "* Appropriate authoritarian Learning and Probabilistic Modeling provides an immense opportunity to deploy predictive analytics platforms in highly security-critical industries, namely, data centers, power grids, utilities, airports, etc., where downtime minimization is one of the primary objectives. In this paper, a novel, complete architecture of an intelligent predictive analytics platform, Fault Engine, is proposed for a vast network of devices connected to the electrical / information flow. Three unique modules proposed here blend seamlessly into the available stack of data processing technology and connect to middleware to create intelligent online predictions in critical error scenarios. The Markov Failure Module predicts the severity of a failure along with the survival probability of a device at any given time. The root cause analysis model shows probable devices as a potential cause for the use of probability reliability community search algorithms to further determine the cause of a failure."}, {"heading": "Keywords: Markov Model, Recovery function, Weibull, Root Cause Analysis, Correlated Clustering", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "II. PROBLEM STATEMENT AND OBJECTIVES", "text": "This post contributes to a complete stack design of the predictive analytics platform in the DCIM software. \u2022 The main contribution of this post is: \u2022 The computing unit model, fault engine, which uses the log data of all affected devices in the device chain and uses a Markov process-based error model to predict whether the failure is permanent or temporary and therefore triggers an alarm of reasonable severity. It also indicates the recovery probability at a given time after the fault occurs. \u2022 The engine identifies the causal devices in a failure situation. It assigns the devices the probability of being a probable cause, narrowing the search space for the DC management team. \u2022 The engine is able to identify communities of correlated devices based on the correlated errors."}, {"heading": "III. LITERATURE SURVEY", "text": "Although several previous papers [8, 3, 17] discussed error management in the distributed system, the integrated correlated alarm module with error prediction to our knowledge is not yet included in the literature. Markov error model was described in [18] with an assumption of exponential distribution that fails to predict the time-dependent probability of restoring a device after an error. Indeed, the generalized assumption of the Weibull distribution and its parameter estimation from available log data, which allows the fault engine to predict the time-dependent recovery probability at any time after the error, is a useful extension of work [18]. Moreover, the Bajesian probability mapping and topologically sorted list of probable causes give a unique taste in terms of real-time implementation and producing conclusions. The community detection algorithm has been discussed for several applications [19], but to the best of our knowledge it has never been used in a network to group devices based on a failure."}, {"heading": "IV. FAULT ENGINE", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "IV.A. Permanent and Transient Failure Detection using Markov Failure Model", "text": "The alarms for individual devices are not possible if they exceed the already specified threshold for the parameters of the device, but they do not guarantee that the failure is permanent while there is an increase in the alarms. (The fault machine concepts of the Markov model, which prevail in the distributed control panel, therefore require a robust and intelligent alarm module that is able to increase the alarms based on the severity of the failure i.e.) Three states are active (A), Transient Failure (T) and Permanent Failure (P). It is intuitive and obvious that a device can transfer from an active state to a transient state, and vice versa."}, {"heading": "IV.B. Root Cause Analysis using Polling and Trap", "text": "It is less than a year since an agreement was reached between the two countries."}, {"heading": "IV.C. Root Cause Analysis with Correlated Alarm System", "text": "This year it is as far as never before in the history of the Federal Republic of Germany."}, {"heading": "V. EXPERIMENTAL SETUP AND RESULTS", "text": "Most of the DCIM software does not store the data of the actual cause when it is detected with manual monitoring. [11] The predictive system was not included in any of the DCIM software, as to the best of our knowledge. We have developed an experimental design with the technical expertise of Greenfield Software, a leading DCIM software company. We have developed a performance chain that acts as a node. (Fig. 4) The network represents a generic power chain [11] in DCIM. The directed graph in the figure shows the hierarchy or preference of the devices to be in the chain. The higher order more critical denotes the chain. We have analyzed a case of PDU failure due to input power surge. Alarm logs were observed for all devices below PDU2 after real-life case."}, {"heading": "VI. TIME AND SPACE COMPLEXITY ANALYSIS", "text": "In fact, it is so that most of them are able to surpass themselves, and that they also do so. (...) In fact, it is so that they are able to survive themselves. \"(...)\" It is so, as if. \"(...)\" It is so, as if. \"(...)\" It is so, as if. \"(...)\" It is so, as if. \"(...)\" It is so, as if. \"(...)\" (...) \"It is so, as if.\" (...) \"(...)\" It is so, as if. \"(...)\" (...) \"It is so, as if.\" (...) \"(...)\" (\"(\"). \"(\") \"(It is.\" (\")\" (It is. \"(\") \"(It is.\" (\")\" (It is. \"(\") \"(It is.\" (\")\" (It is. \"(\") \"(It is.\" (\")\" (It is. \"(\") \"(It is.\" (\")\" (It is. \"(.\") \"(It is.\" (\")\" (. \")\" (It is. \"(\") \"(It is.\" (. \")\" (It is. \"(.)\" (. \")\" (It is."}, {"heading": "VII. BUSINESS IMPORTANCE AND CONCLUSION", "text": "The failure of Delta and similar failures in critical infrastructure have increased the need to predict failure before it occurs. Therefore, companies turn to predictive analytics to better understand the failure pattern of devices so that they can take the necessary steps to prevent failures. Apart from the scalability of the fault engine, it provides a number of direct and indirect business implications when used closely with DCIM or a distributed system monitoring software. The overall design is customizable to integrate into any similar software system such as DCIM and therefore immediately evokes immense applicability. Some of the indicative business implications have been presented here. \u2022 The predictive analytics platform will help the customer to continuously monitor all devices to take preventive action based on the likelihood of output, saving huge operating costs that may be covered before the acute failure scenario. \u2022 The predictive system will allow the user to understand the severity of a device's predictive action prior to the ability to take short-term CIM correction of a predictive action or to be able on the basis of an actual failure scenario."}], "references": [{"title": "DCell: A Scalable and Fault-tolerant Network Structure for Data Centers", "author": ["C. Guo", "H. Wu", "K. Tan", "L. Shi", "Y. Zhang", "S. Lu"], "venue": "In Proceedings of the ACM SIGCOMM 2008 conference on Data communication,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "Algorithm 97: Shortest Path", "author": ["Floyd", "Robert W. (June"], "venue": "Communications of the ACM", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1962}, {"title": "On the vector representation of the reachability in planar directed graphs", "author": ["T Kameda"], "venue": "Information Processing Letters,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1975}, {"title": "Undirected single source shortest paths with positive integer weights in linear time", "author": ["Mikkel Thorup"], "venue": "Journal of the ACM,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1999}, {"title": "Probabilistic Failure Detection for Efficient Distributed Storage Maintenance", "author": ["Tian et. al"], "venue": "IEEE symposium of Reliable Distributed System,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "A Comparative Analysis of Community Detection Algorithms on Artificial Networks", "author": ["Z Yang"], "venue": "Scientific Report 6,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "Though several previous work [8, 3, 17] discusses about the failure management in distributed system, but the integrated correlated alarm module with fault prediction is not reported in the literature yet, in our best knowledge.", "startOffset": 29, "endOffset": 39}, {"referenceID": 4, "context": "The Markov failure model have been reported in [18] with an assumption of exponential distribution which lacks to predict the time-dependent probability of recovery of a device at any instance after failure.", "startOffset": 47, "endOffset": 51}, {"referenceID": 4, "context": "The generalized assumption of Weibull distribution and its parameter estimation from available log data to enable the Fault Engine to predict the time dependent recovery probability at any time instance after the failure is indeed a meaningful extension of work [18].", "startOffset": 262, "endOffset": 266}, {"referenceID": 5, "context": "The community detection algorithm have been discussed for several applications [19], but in our best knowledge, it never has been used in a network to cluster devices based correlated failure.", "startOffset": 79, "endOffset": 83}, {"referenceID": 4, "context": "The fault engine conceptualizes a Markov Model, prevalent in distributed system control [18] which assumes three state for each device.", "startOffset": 88, "endOffset": 92}, {"referenceID": 4, "context": "The idea extends the work in [18] employing a more generalized version of stochastic recovery behavior.", "startOffset": 29, "endOffset": 33}, {"referenceID": 1, "context": "Floyd-Warshall [4], Thorup [15], Kameda\u2019s algorithm [14] for calculating all pair reachability in a network.", "startOffset": 15, "endOffset": 18}, {"referenceID": 3, "context": "Floyd-Warshall [4], Thorup [15], Kameda\u2019s algorithm [14] for calculating all pair reachability in a network.", "startOffset": 27, "endOffset": 31}, {"referenceID": 2, "context": "Floyd-Warshall [4], Thorup [15], Kameda\u2019s algorithm [14] for calculating all pair reachability in a network.", "startOffset": 52, "endOffset": 56}], "year": 2016, "abstractText": "With the advancement of huge data generation and data handling capability, Machine Learning and Probabilistic modelling enables an immense opportunity to employ predictive analytics platform in high security critical industries namely data centers, electricity grids, utilities, airport etc. where downtime minimization is one of the primary objectives. This paper proposes a novel, complete architecture of an intelligent predictive analytics platform, Fault Engine, for huge device network connected with electrical/information flow. Three unique modules, here proposed, seamlessly integrate with available technology stack of data handling and connect with middleware to produce online intelligent prediction in critical failure scenarios. The Markov Failure module predicts the severity of a failure along with survival probability of a device at any given instances. The Root Cause Analysis model indicates probable devices as potential root cause employing Bayesian probability assignment and topological sort. Finally, a community detection algorithm produces correlated clusters of device in terms of failure probability which will further narrow down the search space of finding route cause. The whole Engine has been tested with different size of network with simulated failure environments and shows its potential to be scalable in real-time implementation.", "creator": "Microsoft\u00ae Word 2013"}}}