{"id": "1610.05452", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Oct-2016", "title": "Makespan Optimal Solving of Cooperative Path-Finding via Reductions to Propositional Satisfiability", "abstract": "The problem of makespan optimal solving of cooperative path finding (CPF) is addressed in this paper. The task in CPF is to relocate a group of agents in a non-colliding way so that each agent eventually reaches its goal location from the given initial location. The abstraction adopted in this work assumes that agents are discrete items moving in an undirected graph by traversing edges. Makespan optimal solving of CPF means to generate solutions that are as short as possi-ble in terms of the total number of time steps required for the execution of the solution.", "histories": [["v1", "Tue, 18 Oct 2016 06:42:45 GMT  (1852kb)", "http://arxiv.org/abs/1610.05452v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["pavel surynek"], "accepted": false, "id": "1610.05452"}, "pdf": {"name": "1610.05452.pdf", "metadata": {"source": "META", "title": "Makespan Optimal Solving of Cooperative Path-Finding", "authors": ["Pavel Surynek"], "emails": ["pavel.surynek@aist.go.jp"], "sections": [{"heading": null, "text": "The abstraction used in this paper assumes that agents are discrete objects that move in an undirected diagram by crossing edges. Makespan-optimal CPF solution means generating solutions that are as short as possible in terms of the total number of time steps required to execute the solution. We show that reducing CPF to propositional satisfiability (SAT) is a viable option to obtain macespan-optimal solutions. Several codes of CPF into propositional formulas are proposed and evaluated experimentally, and the evaluation shows that the SAT-based CPF solution significantly outperforms other macespan-optimal methods in very confined situations (environments densely occupied by agents). Keywords: cooperative pathfinding (CPF), propositional satisfaction fiability (SAT-based CPF solution), time-controlled means-extended, multipespan-1."}, {"heading": "1. Introduction and Motivation", "text": "In fact, it is a purely reactionary project, capable of changing and transforming the world."}, {"heading": "2. Context of Related Works", "text": "There are several alternatives to solving CPF by reducing it to SAT. There are existing algorithms that are based on finding optimal or near-optimal solutions. Recent contributions include OD + ID [23], a combination of A * and powerful agent independence euristics, and ICTS [21], which applies the concept of cost increase (without Makespan, the total cost of the solution is optimized). Other approaches resolve conflicts between robot trajectories when avoidance is necessary [5, 8, 34]. Fast polynomial time algorithms for generating suboptimal solutions include PUSH AND ROTATE [37, 38] and other algorithms when their solution is dramatically far from the optimal solution."}, {"heading": "3. Background", "text": "In fact, the fact is that most of them will be able to decide whether they will be able to play by the rules or whether they will be able to play by the rules. In fact, the fact is that they will be able to play by the rules."}, {"heading": "4. Solving CPF Optimally through Propositional Satisfiability", "text": "The question we are asking ourselves is how to achieve an optimal strategy in order to achieve an optimal strategy. (The approach that we are proposing here is very different.) (The approach that we are proposing here is very different.) (The approach that we are proposing here is very different.) (The approach to the approach that is able to construct such a formula is so that one can obtain the optimal recipe for the given CPF by questioning several strategies whether it is satisfactory with different strategies.) Different strategies of choosing the strategies for choosing the strategies exist in order to obtain the optimal formulation. (The simplest and most efficient solution that one is able.)"}, {"heading": "4.1. Time Expansion Graphs", "text": "In fact, it is as if it is a \"normal\" person who is able to assert himself, who is able to assert himself, who is able to assert himself, who is able to assert himself, who is able to assert himself, it is necessary that he be able to assert himself, to be able to assert himself."}, {"heading": "4.2. Propositional Encodings Based on Time Expansion Graphs", "text": "The concept of time expansion diagram represents an important step towards designing a propositional formula that is satisfactory only if the given CPF has a solution with a given macro range. Furthermore, we need such a formula where a corresponding CPF solution can be extracted from its satisfactory evaluation. Time expansion diagram can be used as the basis for such a formula, as it can capture all arrangements of agents via the graph for modeling the environment in all time steps up to the given last step."}, {"heading": "4.2.1. INVERSE Propositional Encoding", "text": "In fact, it is a matter of a way in which people are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they are able, in which they must be able, in which they must be able."}, {"heading": "4.2.2. ALL-DIFFERENT Propositional Encoding", "text": "In fact, it is the case that most of them are able to abide by the rules that they have imposed on themselves. (...) In fact, it is the case that they are able to abide by the rules. (...) In fact, it is the case that they are able to abide by the rules. (...) In fact, it is the case that they are able to abide by the rules. (...) In fact, it is the case that they are able to abide by the rules. (...) In fact, it is the case that they are able to abide by the rules. \"(...)"}, {"heading": "4.2.3. MATCHING Propositional Encoding", "text": "In fact, most people are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...) Most of them are able to survive on their own. (...)"}, {"heading": "4.2.4. DIRECT/SIMPLIFIED Propositional Encoding", "text": "In fact, the fact is that most of them are able to orient themselves in a different direction than the other direction they are going in. In the other direction they have gone, it is that they are going in the other direction, in the direction they have gone, in the other direction, in the direction they have gone."}, {"heading": "4.3. Summary of the Size Complexity of Propositional Encodings", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "4.3.1. Knowledge Compilation \u2013 Distance Heuristics", "text": "In fact, the distance to the agent's starting position is greater than the time elapsed in the agent's starting position. (...) The time span just described is greater than the time remaining for the given time level. (...) Knowledge of the agent's position in the position of the time span can never be visited by the agent. (...) The time span just described can be easily formalized. (...) Knowledge of these opaque depressions can exclude the agent's position. (...)"}, {"heading": "5. Experimental Evaluation", "text": "The experimental evaluation focused on measuring the actual size of proposed encodings and measuring runtime when using encodings for an optimal CPF solution. The solution method, presented as Algorithm 1, was used as the core framework for our makespan-optimized CPF solution technology (i.e., the sequential strategy for querying the SAT solution was used), while the proposed individual propositional encodings can be considered as its interchangeable modules. The SAT solution itself was linked to the solution technology as another external module. All implemented encodings used a built-in heuristic distance, which is discussed in Section 4.3.1. (INVERSE) and MATCHING encoding in ALL-DIFFERENT encoding in DIRECT / SIMPLIFIED encoding (30) (31) con (prommal) and PERF-1."}, {"heading": "5.1. Benchmark Setup", "text": "We followed the benchmark setup proposed by Silver in [20]. Four interconnected networks of different sizes were used to model environments in test cases, ranging in size from 6, 6 to 12, with 20% of randomly selected vertices occupied by obstacles (obstacle was represented by a missing vertice in the grid - see Figure 6. Initial and target alignment of agents was random - the random alignment of agents was achieved by placing agents individually, while the position was uniformly randomly selected from the remaining unoccupied vertices. In run-time tests, only solvable cases were taken into account. To enable full reproducibility of the presented results, all source codes and experimental data were published online at: http: / / ktiml.mff.cuni.cz / ~ surynek / research / j-encoding-2015."}, {"heading": "5.2. Encoding Size Evaluation", "text": "It is only a matter of time before an agreement is reached."}, {"heading": "5.3. Runtime Evaluation", "text": "This year it is more than ever before in the history of the city."}, {"heading": "5.4. Solution Quality Evaluation", "text": "This year, we have reached the point where we are able to find a country in which it is a country, a country in which it is not a country, but a country in which it is a country."}, {"heading": "6. Conclusions", "text": "Several propositional encodings of the Cooperative Way Finding Problem (CPF) have been initiated with the intention of modelling the environment over time so that the arrangements of the agents can be represented up to a certain end point. These graphs are indispensable for building propositive formulas in which a solution for a particular CPF is found with the specified number of time steps."}, {"heading": "Acknowledgments", "text": "This work is supported by the Czech-Israeli Cooperation Project No 8G15027 and the Charles University within the framework of the PRVOUK (Section P46) and UNCE projects. The author thanks the research team of Ben-Gurion University in Israel under the direction of ArielFelner and Roni Stern, as well as the student members of the team Guni Sharon and Eli Boyarski for providing the source code for carrying out the presented experiments."}], "references": [{"title": "Network flows: theory, algorithms, and applications", "author": ["R.K. Ahuja", "T.L. Magnanti", "J.B. Orlin"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1993}, {"title": "The Glucose SAT Solver", "author": ["G. Audemard", "L. Simon"], "venue": "http://labri.fr/perso/lsimon/glucose/,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Relaxing the Relaxed Exist-Step Parallel Planning Semantics", "author": ["T. Balyo"], "venue": "Proceedings of the 26th IEEE International Conference on Tools with Artificial Intelligence (ICTAI", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Suboptimal Variants of the Conflict-Based Search Algorithm for the Multi-Agent Pathfinding Problem", "author": ["M. Barer", "G. Sharon", "R. Stern", "A. Felner"], "venue": "ECAI 2014 - 21st European Conference on Artificial Intelligence (ECAI", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Consistency Checking of All Different Constraints over Bit-Vectors within a SAT Solver", "author": ["A. Biere", "R. Brummayer"], "venue": "Proceedings of Formal Methods in Computer-Aided Design (FMCAD", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "Multi-agent RRT: sampling-based cooperative pathfinding", "author": ["M. \u010c\u00e1p", "P. Nov\u00e1k", "J. Vok\u0159\u00ednek", "M. P\u011bchou\u010dek"], "venue": "International conference on Autonomous Agents and Multi-Agent Systems (AAMAS", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "A General Formal Framework for Pathfinding Problems with Multiple Agents", "author": ["E. Erdem", "D.G. Kisa", "U. \u00d6ztok", "P. Sch\u00fcller"], "venue": "Proceedings of the 27th AAAI Conference on Artificial Intelligence (AAAI", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "A Novel Transition Based Encoding Scheme for Planning as Satisfiability", "author": ["R. Huang", "Y. Chen", "W. Zhang"], "venue": "Proceedings of the 24th AAAI Conference on Artificial Intelligence (AAAI", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2010}, {"title": "Unifying SAT-based and Graph-based Planning", "author": ["H. Kautz", "B. Selman"], "venue": "Proceedings of the 16th International Joint Conference on Artificial Intelligence (IJCAI", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "Collision Avoidance in Multiple-Ship Situations by Distributed Local Search", "author": ["D. Kim", "K. Hirayama", "Park", "G.-K"], "venue": "Journal of Advanced Computational Intelligence and Intelligent Informatics (JACIII), Volume", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2014}, {"title": "Coordinating Pebble Motion on Graphs, the Diameter of Permutation Groups, and Applications", "author": ["D. Kornhauser", "G.L. Miller", "P.G. Spirakis"], "venue": "Proceedings of the 25th Annual Symposium on Foundations of Computer Science (FOCS", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1984}, {"title": "Cooperative manipulation and transportation with aerial robots", "author": ["N. Michael", "J. Fink", "V. Kumar"], "venue": "Autonomous Robots,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "Finding a Shortest Solution for the N \u00d7 N Extension of the 15PUZZLE Is Intractable", "author": ["D. Ratner", "M.K. Warmuth"], "venue": "Proceedings of the 5th National Conference on Artificial Intelligence (AAAI", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1986}, {"title": "Planning as satisfiability: parallel plans and algorithms for plan search", "author": ["J. Rintanen", "K. Heljanko", "I. Niemel\u0308a"], "venue": "Artificial Intelligence, Volume", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "Graph Decomlocation for Efficient Multi-Robot Path Planning", "author": ["M.R.K. Ryan"], "venue": "Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2007}, {"title": "Exploiting Subgraph Structure in Multi-Robot Path Planning", "author": ["M.R.K. Ryan"], "venue": "Journal of Artificial Intelligence Research (JAIR), Volume", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2008}, {"title": "Cooperative Pathfinding", "author": ["D. Silver"], "venue": "Proceedings of the 1st Artificial Intelligence and Interactive Digital Entertainment Conference (AIIDE", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2005}, {"title": "The increasing cost tree search for optimal multi-agent pathfinding", "author": ["G. Sharon", "R. Stern", "M. Goldenberg", "A. Felner"], "venue": "Artificial Intelligence,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2013}, {"title": "Conflict-based search for optimal multiagent pathfinding", "author": ["G. Sharon", "R. Stern", "A. Felner", "N.R. Sturtevant"], "venue": "Artificial Intelligence,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2015}, {"title": "Complete Algorithms for Cooperative Pathfinding Problems", "author": ["T.S. Standley", "R.E. Korf"], "venue": "Proceedings of Proceedings of the 22nd International Joint Conference on Artificial Intelligence (IJCAI", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2011}, {"title": "Benchmarks for Grid-Based Pathfinding", "author": ["N.R. Sturtevant"], "venue": "IEEE Transactions on Computational Intelligence and AI in Games, Volume", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2012}, {"title": "Towards Optimal Cooperative Path Planning in Hard Setups through Satisfiability Solving", "author": ["P. Surynek"], "venue": "Proceedings of 12th Pacific Rim International Conference on Artificial Intelligence (PRICAI", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2012}, {"title": "On Propositional Encodings of Cooperative Path-Finding", "author": ["P. Surynek"], "venue": "Proceedings of the 24th International Conference on Tools with Artificial Intelligence (ICTAI", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2012}, {"title": "Mutex reasoning in cooperative path finding modeled as propositional satisfiability", "author": ["P. Surynek"], "venue": "Proceedings of the 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "Solving Abstract Cooperative Path-Finding in Densely Populated Environments", "author": ["P. Surynek"], "venue": "Computational Intelligence (COIN),", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2014}, {"title": "Compact Representations of Cooperative Path-Finding as SAT Based on Matchings in Bipartite Graphs", "author": ["P. Surynek"], "venue": "Proceedings of the 26th International Conference on Tools with Artificial Intelligence (ICTAI", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2014}, {"title": "A Simple Approach to Solving Cooperative Path-Finding as Propositional Satisfiability Works Well", "author": ["P. Surynek"], "venue": "Proceedings of the 13th Pacific Rim International Conference on Artificial Intelligence (PRICAI", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "Simple Direct Propositional Encoding of Cooperative Path Finding Simplified Yet More", "author": ["P. Surynek"], "venue": "Proceedings of the 13th Mexican International Conference on Artificial Intelligence (MICAI", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2014}, {"title": "On the Complexity of Optimal Parallel Cooperative Path-Finding", "author": ["P. Surynek"], "venue": "Fundamenta Informaticae, Volume 137,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2015}, {"title": "On the complexity of derivation in propositional calculus. Structures in Constructive Mathematics and Mathematical Logic, Part II, Seminars in Mathematics (translated from Russian)", "author": ["G.S. Tseitin"], "venue": "Steklov Mathematical Institute,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1968}, {"title": "Subdimensional expansion for multirobot path planning", "author": ["G. Wagner", "H. Choset"], "venue": "Artificial Intelligence,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2015}, {"title": "Planning as satisfiability with relaxed exist-step plans", "author": ["M. Wehrle", "J. Rintanen"], "venue": "Proceedings of the 20th Australian Joint Conference on Artificial Intelligence,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2007}, {"title": "Introduction to Graph Theory", "author": ["D.B. West"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2000}, {"title": "Push and rotate: cooperative multi-agent path planning", "author": ["B. de Wilde", "A. ter Mors", "C. Witteveen"], "venue": "Proceedings of the International conference on Autonomous Agents and Multi-Agent Systems (AAMAS", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2013}, {"title": "Push and Rotate: a Complete Multi-agent Pathfinding Algorithm", "author": ["B. de Wilde", "A.W. ter Mors", "C. Witteveen"], "venue": "Journal of Artificial Intelligence Research (JAIR), Volume", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2014}, {"title": "Structure and Intractability of Optimal Multi-Robot Path Planning on Graphs", "author": ["J. Yu", "S.M. LaValle"], "venue": "Proceedings of the 27th AAAI Conference on Artificial Intelligence (AAAI", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2013}], "referenceMentions": [{"referenceID": 10, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 31, "endOffset": 43}, {"referenceID": 19, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 31, "endOffset": 43}, {"referenceID": 21, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 31, "endOffset": 43}, {"referenceID": 17, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 89, "endOffset": 105}, {"referenceID": 18, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 89, "endOffset": 105}, {"referenceID": 33, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 89, "endOffset": 105}, {"referenceID": 34, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 89, "endOffset": 105}, {"referenceID": 14, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 145, "endOffset": 153}, {"referenceID": 15, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 145, "endOffset": 153}, {"referenceID": 10, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 191, "endOffset": 199}, {"referenceID": 12, "context": "Cooperative path-finding - CPF [14, 23, 25] (also known as multi-agent path finding MAPF [21, 22, 37, 38] or as multi-robot path planning - MRPP [18, 19] or as pebble motion on a graph - PMG [14, 16]) is an abstraction for many real-file tasks where the goal is to relocate some objects that spatially interacts with each other.", "startOffset": 191, "endOffset": 199}, {"referenceID": 14, "context": "A graph theoretical abstraction, where the environment in which agents are moving is modeled as an undirected graph, is often adopted [18, 20].", "startOffset": 134, "endOffset": 142}, {"referenceID": 16, "context": "A graph theoretical abstraction, where the environment in which agents are moving is modeled as an undirected graph, is often adopted [18, 20].", "startOffset": 134, "endOffset": 142}, {"referenceID": 24, "context": "Note that various versions of the problem may have different conditions on movements - sometimes it is for instance allowed to move agents in a train like manner [28] or even rotate agents around cycle without any unoccupied vertex in the cycle [39].", "startOffset": 162, "endOffset": 166}, {"referenceID": 35, "context": "Note that various versions of the problem may have different conditions on movements - sometimes it is for instance allowed to move agents in a train like manner [28] or even rotate agents around cycle without any unoccupied vertex in the cycle [39].", "startOffset": 245, "endOffset": 249}, {"referenceID": 20, "context": "There are many practical motivations for CPF ranging from unit navigation in computer games [24] to item relocation in automated storage (see KIVA robots [13]).", "startOffset": 92, "endOffset": 96}, {"referenceID": 9, "context": "Interesting motivations can be also found in traffic where problems like vessel avoidance at sea are of great practical importance [12].", "startOffset": 131, "endOffset": 135}, {"referenceID": 11, "context": "An analogical challenge appears in the air where availability of drones implies need for developing cooperative air traffic control mechanisms [15].", "startOffset": 143, "endOffset": 147}, {"referenceID": 19, "context": "Particularly we are dealing with so-called makespan optimal solving of CPF [23, 29], which means to find a solution of a makespan as short as possible.", "startOffset": 75, "endOffset": 83}, {"referenceID": 25, "context": "Particularly we are dealing with so-called makespan optimal solving of CPF [23, 29], which means to find a solution of a makespan as short as possible.", "startOffset": 75, "endOffset": 83}, {"referenceID": 12, "context": "It is known that finding makespan optimal solutions to CPF is a difficult problem, namely it is NP-hard [16, 32, 39].", "startOffset": 104, "endOffset": 116}, {"referenceID": 28, "context": "It is known that finding makespan optimal solutions to CPF is a difficult problem, namely it is NP-hard [16, 32, 39].", "startOffset": 104, "endOffset": 116}, {"referenceID": 35, "context": "It is known that finding makespan optimal solutions to CPF is a difficult problem, namely it is NP-hard [16, 32, 39].", "startOffset": 104, "endOffset": 116}, {"referenceID": 1, "context": "Moreover, the reduction allows exploiting the power of modern SAT solvers [2, 3] in CPF solving.", "startOffset": 74, "endOffset": 80}, {"referenceID": 8, "context": "They are based on a so-called time expansion of the graph that models the environment [11, 26] so that the formula can represent all the possible arrangements of agents at all the time steps up to the given final time step.", "startOffset": 86, "endOffset": 94}, {"referenceID": 22, "context": "They are based on a so-called time expansion of the graph that models the environment [11, 26] so that the formula can represent all the possible arrangements of agents at all the time steps up to the given final time step.", "startOffset": 86, "endOffset": 94}, {"referenceID": 16, "context": "The seminal work in this category is represented by Silver\u2019s WHCA* algorithm [20] which is a variant of A* search where cooperation among agents is incorporated.", "startOffset": 77, "endOffset": 81}, {"referenceID": 19, "context": "Recent contributions include OD+ID [23], which is a combination of A* and powerful agent independence detection heuristics, and ICTS [21] which employs the concept of increasing cost tree (instead of makespan, the total cost of solution is optimized).", "startOffset": 35, "endOffset": 39}, {"referenceID": 17, "context": "Recent contributions include OD+ID [23], which is a combination of A* and powerful agent independence detection heuristics, and ICTS [21] which employs the concept of increasing cost tree (instead of makespan, the total cost of solution is optimized).", "startOffset": 133, "endOffset": 137}, {"referenceID": 3, "context": "Other approaches resolve conflicts among robot trajectories when avoidance is necessary [5, 8, 34].", "startOffset": 88, "endOffset": 98}, {"referenceID": 5, "context": "Other approaches resolve conflicts among robot trajectories when avoidance is necessary [5, 8, 34].", "startOffset": 88, "endOffset": 98}, {"referenceID": 30, "context": "Other approaches resolve conflicts among robot trajectories when avoidance is necessary [5, 8, 34].", "startOffset": 88, "endOffset": 98}, {"referenceID": 33, "context": "Fast polynomial time algorithms for generating makespan suboptimal solutions include PUSH-AND-ROTATE [37, 38] and other algorithms [28].", "startOffset": 101, "endOffset": 109}, {"referenceID": 34, "context": "Fast polynomial time algorithms for generating makespan suboptimal solutions include PUSH-AND-ROTATE [37, 38] and other algorithms [28].", "startOffset": 101, "endOffset": 109}, {"referenceID": 24, "context": "Fast polynomial time algorithms for generating makespan suboptimal solutions include PUSH-AND-ROTATE [37, 38] and other algorithms [28].", "startOffset": 131, "endOffset": 135}, {"referenceID": 6, "context": "Translation of CPF to a different formalism, namely to answer set programming (ASP), has been suggested in [9].", "startOffset": 107, "endOffset": 110}, {"referenceID": 35, "context": "Integer programming (IP) as the target formalism has been also used [39].", "startOffset": 68, "endOffset": 72}, {"referenceID": 7, "context": "The choice of SAT as the target formalism is very common in domain independent planning where the idea of time expansion [10, 11] and its reductions [4, 35] are studied.", "startOffset": 121, "endOffset": 129}, {"referenceID": 8, "context": "The choice of SAT as the target formalism is very common in domain independent planning where the idea of time expansion [10, 11] and its reductions [4, 35] are studied.", "startOffset": 121, "endOffset": 129}, {"referenceID": 2, "context": "The choice of SAT as the target formalism is very common in domain independent planning where the idea of time expansion [10, 11] and its reductions [4, 35] are studied.", "startOffset": 149, "endOffset": 156}, {"referenceID": 31, "context": "The choice of SAT as the target formalism is very common in domain independent planning where the idea of time expansion [10, 11] and its reductions [4, 35] are studied.", "startOffset": 149, "endOffset": 156}, {"referenceID": 12, "context": "It is known that the decision variant of CPF is NP-complete, hence finding makespan optimal solution to CPF is NP-hard [16].", "startOffset": 119, "endOffset": 123}, {"referenceID": 0, "context": "The approach we are suggesting here employs propositional satisfiability (SAT) [1] solving as the key technology.", "startOffset": 79, "endOffset": 82}, {"referenceID": 8, "context": "The sequential increasing strategy is also used in domain independent planners such as SATPLAN [11], SASE [10] and others.", "startOffset": 95, "endOffset": 99}, {"referenceID": 7, "context": "The sequential increasing strategy is also used in domain independent planners such as SATPLAN [11], SASE [10] and others.", "startOffset": 106, "endOffset": 110}, {"referenceID": 13, "context": "The focus here is on SAT encoding while querying strategies are out of scope of the paper; though let us mention that in depth study of querying strategies is given in [17].", "startOffset": 168, "endOffset": 172}, {"referenceID": 10, "context": "Nevertheless, the solving process can be easily made complete by checking instance solvability prior to SAT-based optimization by some fast polynomial time algorithm such as those described in [14, 28, 38].", "startOffset": 193, "endOffset": 205}, {"referenceID": 24, "context": "Nevertheless, the solving process can be easily made complete by checking instance solvability prior to SAT-based optimization by some fast polynomial time algorithm such as those described in [14, 28, 38].", "startOffset": 193, "endOffset": 205}, {"referenceID": 34, "context": "Nevertheless, the solving process can be easily made complete by checking instance solvability prior to SAT-based optimization by some fast polynomial time algorithm such as those described in [14, 28, 38].", "startOffset": 193, "endOffset": 205}, {"referenceID": 1, "context": "The important advantage of solving CPF as SAT is that there exist many powerful solvers for SAT [2, 3] implementing numerous advanced techniques such as intelligent search space pruning and learning.", "startOffset": 96, "endOffset": 102}, {"referenceID": 29, "context": "The above elementary constructions are put together to represent constraints (4) \u2013 (6) using Tseitin\u2019s encoding [33] which introduces auxiliary propositional variables to the encoding.", "startOffset": 112, "endOffset": 116}, {"referenceID": 0, "context": "domain state variables are encoded using the scheme introduced in [1].", "startOffset": 66, "endOffset": 69}, {"referenceID": 0, "context": "We observed that vertex disjoint non-overlapping paths in time expansion graph resemble a commodity flow [1] in a network of time expansion graph where vertices and edges are assigned unit capacities.", "startOffset": 105, "endOffset": 108}, {"referenceID": 26, "context": "While the design of variables is extremely simple in the DIRECT encoding, the set of constraints is more complex as summarized in the following definition [30].", "startOffset": 155, "endOffset": 159}, {"referenceID": 32, "context": "The second assumption tells the graph is sparse and can be intuitively compared to planar graphs [36] that are very common in practice.", "startOffset": 97, "endOffset": 101}, {"referenceID": 1, "context": "0 SAT solver [2] in our tests, which is justified by the fact that this SAT solver ranked among the winners in recent SAT Competitions [3] in the category of hard combinatorial problems to which we consider CPF belongs as well.", "startOffset": 13, "endOffset": 16}, {"referenceID": 16, "context": "We followed benchmark setup suggested by Silver in [20].", "startOffset": 51, "endOffset": 55}, {"referenceID": 19, "context": "We re-implemented A*-based OD+ID CPF solving procedure [23] in C++ with the objective function for minimizing the makespan and compared it with our SAT based solving method in order to provide broader picture regarding the runtime evaluation.", "startOffset": 55, "endOffset": 59}, {"referenceID": 17, "context": "The total number of moves is also considered as an objective function in several approaches to CPF solving such as [21, 22].", "startOffset": 115, "endOffset": 123}, {"referenceID": 18, "context": "The total number of moves is also considered as an objective function in several approaches to CPF solving such as [21, 22].", "startOffset": 115, "endOffset": 123}], "year": 2016, "abstractText": "The problem of makespan optimal solving of cooperative path finding (CPF) is addressed in this paper. The task in CPF is to relocate a group of agents in a non-colliding way so that each agent eventually reaches its goal location from the given initial location. The abstraction adopted in this work assumes that agents are discrete items moving in an undirected graph by traversing edges. Makespan optimal solving of CPF means to generate solutions that are as short as possible in terms of the total number of time steps required for the execution of the solution. We show that reducing CPF to propositional satisfiability (SAT) represents a viable option for obtaining makespan optimal solutions. Several encodings of CPF into propositional formulae are suggested and experimentally evaluated. The evaluation indicates that SAT based CPF solving outperforms other makespan optimal methods significantly in highly constrained situations (environments that are densely occupied by agents).", "creator": "Microsoft\u00ae Word 2016"}}}