{"id": "1611.00138", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Nov-2016", "title": "MusicMood: Predicting the mood of music from song lyrics using machine learning", "abstract": "Sentiment prediction of contemporary music can have a wide-range of applications in modern society, for instance, selecting music for public institutions such as hospitals or restaurants to potentially improve the emotional well-being of personnel, patients, and customers, respectively. In this project, music recommendation system built upon on a naive Bayes classifier, trained to predict the sentiment of songs based on song lyrics alone. The experimental results show that music corresponding to a happy mood can be detected with high precision based on text features obtained from song lyrics.", "histories": [["v1", "Tue, 1 Nov 2016 06:05:49 GMT  (2201kb,D)", "http://arxiv.org/abs/1611.00138v1", "9 pages, 5 figures"]], "COMMENTS": "9 pages, 5 figures", "reviews": [], "SUBJECTS": "cs.LG cs.CL cs.IR", "authors": ["sebastian raschka"], "accepted": false, "id": "1611.00138"}, "pdf": {"name": "1611.00138.pdf", "metadata": {"source": "CRF", "title": "MusicMood: Predicting the mood of music from song lyrics using machine learning", "authors": ["Sebastian Raschka"], "emails": ["mail@sebastianraschka.com"], "sections": [{"heading": "1 Introduction", "text": "In fact, most of them will be able to move to a different world in which they are able to escape than to another world in which they are able to escape."}, {"heading": "2 Methods", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1 Data Acquisition", "text": "A random sub-sample of 10,000 songs was downloaded from the Million Song Dataset [3] in HDF5 format. Using the song titles and performer information provided from these HDF5 files, custom code was written to download the corresponding lyrics from LyricWikia [2]. Songs for which no lyrics were available - songs that were either instrumental or not stored in the LyricWikia database - were removed from the dataset. Choosing to acquire the lyrics in an unprocessed format from the musiXmatch dataset was necessary to compare various extraction and pre-processing steps. The custom code based on the Python NLTK library [5] was written to identify non-English song texts and to remove those songs from the dataset, with the majority support based on the counting of English words versus non-English songs automatically assigned to a data set of 2,000 song-associated words in this application."}, {"heading": "2.2 Feature Extraction", "text": "Prior to tokenizing the lyrics, a dictionary model [8] (a fixed-size multiset where the order of words has no meaning) was used to convert the lyrics into feature vectors. Further processing of the feature vectors includes selecting different n-gram sequences (n, 1, 2, 3), removing stop words based on a stop word list from the Python NLTK library [5], and using the Porter-Stemming algorithm [20] for suffix stripping. In addition, different representations of the word count in the feature vectors for each song text were used, such as binarization, term frequency (tf) calculation and term frequency inverse document frequency (tf-idf) calculation. The term frequency inverse document (tf-idf) is used to calculate the frequency (f-f), the total number (terf), the total number (terf), the (terf), the (terf), the (terf), the total number (terf)."}, {"heading": "2.3 Model Selection", "text": "Given the general notation of the posterior probability for naive Bayes classification P (3) and callback = TPTP + FN. (4) (TP = number of true positives, FP = number of false negatives, and FN = number of false negatives, (2) where precision = TPTP + FP (3) and callback = TPTP + FN. (4) (TP = number of true positives, FP = number of false negatives + callback, (2) where the general notation of the posterior probability for naive Bayes classification P (xi) = P (xi | prediction of probabilities) \u00b7 P (xi | prediction of probability) \u00b7 P (prediction of probability) \u00b7 P (prediction of probability) \u00b7 P (prediction of probability) \u00b7 prediction of the given probability (prediction of probability) \u00b7 prediction (prediction of naive Bayes classification) = prediction of probability)."}, {"heading": "2.4 Software", "text": "The Python libraries NumPy [26] and scikit-learn [19] were used for model training and evaluation, the libraries seaborn [29] and matplotlib [12] for visualization. All data, code for model training and evaluation, and the final web app are available at https: / / github.com / rasbt / musicmood."}, {"heading": "2.5 Experimental Setup", "text": "After manually assigning mood labels and random sampling, the training dataset consisted of happy (44.6%) and sad (55.4%) songs; the number of happy and sad songs in the validation dataset was the same (Table 1). Model selection was performed using grid search and 10x cross validation on the 1000-song training dataset to optimize performance measured by F1 Score.The final model was trained using the entire training dataset; performance was evaluated using the 200-song validation dataset by measuring the characteristic range of the receiver under the curve (ROC auc), accuracy, precision, memory and F1 Score.For the initial model selection, the grid search was performed using three separate naive Bayes models to select the best possible combination of feature extraction and selection approaches and parameters for each model."}, {"heading": "3 Results", "text": "Word cloud visualizations of the most common words in the training data set show an overlap between the most common words (love, knowledge, coming) between the cheerful and sad songs (Figure 2).The grouping of the songs by year of release shows that the random 1000-song partial sample from the Million Song Dataset tends towards more recent releases (Figure 3 A); interestingly, the proportion of sad songs increases over time (Figure 3 B).After searching for three separate naive Bayes classification models, the performance was almost the same as in Figure 4A. The most powerful model was a multinomically naive Bayes classifier (average ROC-Auc 0.75) with a 1-gram tf-idf feature representation after using Porter-Stemming for suffix stripping and additional stop-word removal. Further evaluations showed that the matching of the Word Maximum Smoothing Parameter of the absolute Suffix parameter, the 489 Term Removal and the Term Removal of the training parameter 4pping had a negative effect."}, {"heading": "4 Discussion", "text": "Explorative data analysis of the training corpus showed that the proportion of sad songs increases over the years (Figure 3. However, it must be taken into account that the distribution of songs per year tends strongly towards newer releases and older music is underrepresented in the training sample. However, the obvious trend is still interesting and suggests that modern society may be exposed to a greater number of sad songs than previous generations, which makes a music recommendation system that can be used as a mood filter particularly interesting. All three of the different naive Bayes models optimized via the grid search showed better performance when stopwords were removed from the texts (Figure 4). The higher ROC auc score of the model trained on tf-idf feature vectors suggests that the text corpus still contained several non-relevant words that were common among both happy and sad songs as it can be seen in the word clouds (Figure?)."}, {"heading": "5 Conclusion", "text": "Results have shown that a naive Bayes model applied to mood-classifying lyrics can predict the positive class (happiness) with high accuracy, which can be useful for filtering a large music library for happy music at a low false positive rate. A music library filtered in this way could continue to be used as input for genre classification to filter music according to different tastes. Planned future work will include extensions of the Web Mood Classification application to include morelyrics to assess whether the predictive power of the classifier can be improved in the face of a larger dataset."}], "references": [{"title": "NLTK: the natural language toolkit", "author": ["Steven Bird"], "venue": "In Proceedings of the COLING/ACL on Interactive presentation sessions,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "On the optimality of the simple Bayesian classifier under zero-one loss", "author": ["Pedro Domingos", "Michael Pazzani"], "venue": "Machine learning,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1997}, {"title": "Twitter sentiment classification using distant supervision", "author": ["Alec Go", "Richa Bhayani", "Lei Huang"], "venue": "CS224N Project Report,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Comparing SVM and Naive Bayes classifiers for text categorization with Wikitology as knowledge enrichment", "author": ["Sundus Hassan", "Muhammad Rafi", "Muhammad Shahid Shaikh"], "venue": "In Multitopic Conference (INMIC),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Towards Instrument Segmentation for Music Content Description a Critical Review of Instrument Classification Techniques", "author": ["Perfecto Herrera", "X. Amatriain", "E. Batlle", "Xavier Serra"], "venue": "International Conference on Music Information Retrieval,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2000}, {"title": "Genre classification for million song dataset using confidence-based classifiers combination", "author": ["Yajie Hu", "Mitsunori Ogihara"], "venue": "In Proceedings of the 35th international ACM SIGIR conference on Research and development in information retrieval,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "Matplotlib: A 2D graphics environment", "author": ["J D Hunter"], "venue": "Computing In Science & Engineering,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "Automatic mood classification for music", "author": ["Pieter Kanters"], "venue": "PhD thesis,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Music artist style identification by semi-supervised learning from both lyrics and content", "author": ["Tao Li", "Mitsunori Ogihara"], "venue": "In International Multimedia Conference: Proceedings of the 12 th annual ACM international conference on Multimedia,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "A comparative study on content-based music genre classification", "author": ["Tao Li", "Mitsunori Ogihara", "Qi Li"], "venue": "In Proceedings of the 26th annual international ACM SIGIR conference on Research and development in informaion retrieval,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2003}, {"title": "Automatic mood detection and tracking of music audio signals", "author": ["Lie Lu", "Dan Liu", "Hong-Jiang Zhang"], "venue": "IEEE Transactions on audio, speech, and language processing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2006}, {"title": "Introduction to information retrieval, volume 1", "author": ["Christopher D Manning", "Prabhakar Raghavan", "Hinrich Sch\u00fctze"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2008}, {"title": "A Study of Musical Instrument Classification Using Gaussian Mixture Models and Support Vector Machines", "author": ["Janet Marques", "Pedro J. Moreno"], "venue": "COMPAQ CORPORATION, CAMBRIDGE RESEARCH LABORATORY,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1999}, {"title": "An algorithm for suffix stripping", "author": ["Martin F Porter"], "venue": "Program: electronic library and information systems,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1980}, {"title": "A Bayesian approach to filtering junk e-mail", "author": ["Mehran Sahami", "Susan Dumais", "David Heckerman", "Eric Horvitz"], "venue": "In Learning for Text Categorization: Papers from the 1998 workshop,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1998}, {"title": "The psychological functions of music listening", "author": ["Thomas Sch\u00e4fer", "Peter Sedlmeier", "Christine St\u00e4dtler", "David Huron"], "venue": "Frontiers in psychology,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2013}, {"title": "Mining microblogs to infer music artist similarity and cultural listening patterns", "author": ["Markus Schedl", "David Hauger"], "venue": "In Proceedings of the 21st international conference companion on World Wide Web,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}, {"title": "Modeling Musical Emotion Dynamics with Conditional Random Fields", "author": ["Erik M Schmidt", "Youngmoo E Kim"], "venue": "In ISMIR,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}, {"title": "Musical genre classification of audio signals", "author": ["George Tzanetakis", "Perry Cook"], "venue": "Speech and Audio Processing, IEEE transactions on,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2002}, {"title": "The numpy array: a structure for efficient numerical computation", "author": ["Stefan Van Der Walt", "S Chris Colbert", "Gael Varoquaux"], "venue": "Computing in Science & Engineering,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2011}, {"title": "Automatic Mood Classification Using TF* IDF Based on Lyrics", "author": ["Menno Van Zaanen", "Pieter Kanters"], "venue": "In ISMIR,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2010}, {"title": "Emotion induction through music: A review of the musical mood induction procedure", "author": ["Daniel V\u00e4stfj\u00e4ll"], "venue": "Musicae Scientiae,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2002}], "referenceMentions": [{"referenceID": 4, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 107, "endOffset": 115}, {"referenceID": 12, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 107, "endOffset": 115}, {"referenceID": 8, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 134, "endOffset": 142}, {"referenceID": 16, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 134, "endOffset": 142}, {"referenceID": 10, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 152, "endOffset": 164}, {"referenceID": 7, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 152, "endOffset": 164}, {"referenceID": 20, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 152, "endOffset": 164}, {"referenceID": 18, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 175, "endOffset": 183}, {"referenceID": 9, "context": "Many applications using machine learning algorithms have been developed to categorize music by instruments [10, 18] artist similarity [14, 23], emotion [16, 13, 27], or genre [25, 15].", "startOffset": 175, "endOffset": 183}, {"referenceID": 15, "context": "Psychological studies have shown that listening to music is one of the most popular activities in leisure time and that it has an enhancing effect on the social cohesion, emotional state, and mood of the listeners [22, 28].", "startOffset": 214, "endOffset": 222}, {"referenceID": 21, "context": "Psychological studies have shown that listening to music is one of the most popular activities in leisure time and that it has an enhancing effect on the social cohesion, emotional state, and mood of the listeners [22, 28].", "startOffset": 214, "endOffset": 222}, {"referenceID": 1, "context": "A naive Bayes model was chosen for the lyric classification since naive Bayes classifiers are known to perform well given small sample sizes [6] and are successfully being used for similar binary text classification tasks such as e-mail spam detection [21].", "startOffset": 141, "endOffset": 144}, {"referenceID": 14, "context": "A naive Bayes model was chosen for the lyric classification since naive Bayes classifiers are known to perform well given small sample sizes [6] and are successfully being used for similar binary text classification tasks such as e-mail spam detection [21].", "startOffset": 252, "endOffset": 256}, {"referenceID": 5, "context": "A subset of the Million Song Dataset [11] is divided into a training and a validation dataset.", "startOffset": 37, "endOffset": 41}, {"referenceID": 3, "context": "have shown that the performance of naive Bayes classifiers for text categorization is comparable to Support Vector machines [9, 7], while being computationally more efficient for batch and on-line learning.", "startOffset": 124, "endOffset": 130}, {"referenceID": 2, "context": "have shown that the performance of naive Bayes classifiers for text categorization is comparable to Support Vector machines [9, 7], while being computationally more efficient for batch and on-line learning.", "startOffset": 124, "endOffset": 130}, {"referenceID": 17, "context": "Applications of crowdsourcing approaches to collect mood ratings in Arousal-Valence (A-V) space have been designed [24], and other music mood datasets are available [21] as well; however, datasets that are providing ground truth mood labels for music are typically covering very vast and diverse sets of mood labels, which cannot be transferred to a binary categorization into happy and sad in an unambiguous manner.", "startOffset": 115, "endOffset": 119}, {"referenceID": 14, "context": "Applications of crowdsourcing approaches to collect mood ratings in Arousal-Valence (A-V) space have been designed [24], and other music mood datasets are available [21] as well; however, datasets that are providing ground truth mood labels for music are typically covering very vast and diverse sets of mood labels, which cannot be transferred to a binary categorization into happy and sad in an unambiguous manner.", "startOffset": 165, "endOffset": 169}, {"referenceID": 0, "context": "Custom code based on the Python NLTK library [5] was written to identify non-English lyrics and remove these songs from the dataset using majority support based on the counts of English words vs.", "startOffset": 45, "endOffset": 48}, {"referenceID": 0, "context": "Further processing of the feature vectors include the choice of different n-gram sequences (n \u2208 {1, 2, 3}), stop word removal based on a stop word list from the Python NLTK library [5], and usage of the Porter stemming algorithm [20] for suffix stripping.", "startOffset": 181, "endOffset": 184}, {"referenceID": 13, "context": "Further processing of the feature vectors include the choice of different n-gram sequences (n \u2208 {1, 2, 3}), stop word removal based on a stop word list from the Python NLTK library [5], and usage of the Porter stemming algorithm [20] for suffix stripping.", "startOffset": 229, "endOffset": 233}, {"referenceID": 11, "context": "Lastly, dfy is the number of lyrics in the training dataset that belong to class wj , \u03b1 is the additive smoothing parameter [17], and n is the number of elements in the feature vector.", "startOffset": 124, "endOffset": 128}, {"referenceID": 19, "context": "4 Software The Python libraries NumPy [26] and scikit-learn [19] were used for model training and model evaluation; the libraries seaborn [29] and matplotlib [12] were used for visualization.", "startOffset": 38, "endOffset": 42}, {"referenceID": 6, "context": "4 Software The Python libraries NumPy [26] and scikit-learn [19] were used for model training and model evaluation; the libraries seaborn [29] and matplotlib [12] were used for visualization.", "startOffset": 158, "endOffset": 162}], "year": 2016, "abstractText": "Sentiment prediction of contemporary music can have a wide-range of applications in modern society, for instance, selecting music for public institutions such as hospitals or restaurants to potentially improve the emotional well-being of personnel, patients, and customers, respectively. In this project, music recommendation system built upon on a naive Bayes classifier, trained to predict the sentiment of songs based on song lyrics alone. The experimental results show that music corresponding to a happy mood can be detected with high precision based on text features obtained from song lyrics.", "creator": "LaTeX with hyperref package"}}}