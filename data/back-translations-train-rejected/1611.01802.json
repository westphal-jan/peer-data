{"id": "1611.01802", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Nov-2016", "title": "Self-Wiring Question Answering Systems", "abstract": "Question answering (QA) has been the subject of a resurgence over the past years. The said resurgence has led to a multitude of question answering (QA) systems being developed both by companies and research facilities. While a few components of QA systems get reused across implementations, most systems do not leverage the full potential of component reuse. Hence, the development of QA systems is currently still a tedious and time-consuming process. We address the challenge of accelerating the creation of novel or tailored QA systems by presenting a concept for a self-wiring approach to composing QA systems. Our approach will allow the reuse of existing, web-based QA systems or modules while developing new QA platforms. To this end, it will rely on QA modules being described using the Web Ontology Language. Based on these descriptions, our approach will be able to automatically compose QA systems using a data-driven approach automatically.", "histories": [["v1", "Sun, 6 Nov 2016 16:08:21 GMT  (183kb,D)", "https://arxiv.org/abs/1611.01802v1", "6 pages, 1 figure, pre-print in lncs"], ["v2", "Tue, 8 Nov 2016 17:27:39 GMT  (183kb,D)", "http://arxiv.org/abs/1611.01802v2", "6 pages, 1 figure, pre-print in lncs"]], "COMMENTS": "6 pages, 1 figure, pre-print in lncs", "reviews": [], "SUBJECTS": "cs.AI cs.CL cs.IR", "authors": ["ricardo usbeck", "jonathan huthmann", "nico duldhardt", "axel-cyrille ngonga ngomo"], "accepted": false, "id": "1611.01802"}, "pdf": {"name": "1611.01802.pdf", "metadata": {"source": "CRF", "title": "Self-Wiring Question Answering Systems", "authors": ["Ricardo Usbeck", "Jonathan Huthmann", "Nico Duldhardt"], "emails": ["usbeck@informatik.uni-leipzig.de", "ngonga@informatik.uni-leipzig.de"], "sections": [{"heading": null, "text": "Keywords: answering questions, presentation and processing of content, system composition, work in progress"}, {"heading": "1 Introduction", "text": "Most approaches are based on basic modules such as named entity recognition and linkers, POS taggers, SPARQL executors or graphics modules. However, most research and industry teams need to start from scratch with the implementation of a QA system. (1) These dependencies could be used to build and evaluate existing modules. (1) This shows that the problem is being addressed by this work. (2) It shows the dependencies between the components of 6 QA systems, 10, 12, 6."}, {"heading": "2 Related Work", "text": "One of the earliest works is openQA [6], which is a modular open source framework for implementing QA systems. openQA, the authors claim, enables teaching of different architectures and methods. openQA [3] is another open source approach that uses a multilingual QA skeleton, a domain-independent ontology. the underlying SOA architecture enables teaching of different architectures and methods. QALL-ME [4] is another open source approach for multilingual QA, a domain-independent ontology."}, {"heading": "3 Approach", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Preliminaries", "text": "In the following, we formally describe our QA architecture of self-wiring. We designate K = {(s, p, o) | s (U-B), p-U, o-i (U-B-L)} as an RDF knowledge base, if U is the set of all Internationalized Resource Identifiers (IRIs), B is the set of all empty nodes, and L is the set of all literals that follow the RDF algebra.1 Our self-wiring architecture consists essentially of two parts: messages, m, and modules. We call each input or output of a module a message. Each message contains RDF that contains information about the input query, and must adhere to an OWL class expression C from a knowledge base K: \u00b5 = (C), C-K, \u00b5-M (1) messages are handled by modules."}, {"heading": "3.2 System Construction", "text": "By using the formal definition, each pipeline generated begins with a module \u03c6start with\u03c6start = (q, \u2205, \u00b50, URIi, mapi), (5) where \u00b50 is an initial message, i.e. a question. Formally, this means that you can be connected to anything that is called v C in this case, where C is any OWL class. So let q be our formal input for start modules. To find out whether the output of module \u03c6i is suitable for module \u03c6j, our system evaluates the expressions of the OWL class describing the input and output of modules \u03c6i and \u03c6j. It essentially checks where the output (\u03c6i) v input (\u03c6j), i.e., whether \u03c6j would be able to handle the output of Khali. Given this simple operator that allows two modules to be connected together, we can now define a refining operator that aims to find the input of modules as a complete solution to the AG (i.e., the input of the idea behind the AG)."}, {"heading": "3.3 Supported Vocabularies", "text": "Currently, our extensible, self-wired system uses 5 ontologies, which are mainly used for programming natural languages. First, there is NIF, the Natural Language Programming Interchange Language, which is commonly used by tools for identifying and linking named entities [13], and second, Open Annotation, a W3C initiative to comment on any web content3. In addition, we are able to use QANARY ontology, a relatively new vocabulary developed for QA. Finally, we will use Framenet [1] for its ability to suspend relationships, as well as Earmark ontology 4, which is used in the state-of-the-art machine reader FRED [4]."}, {"heading": "4 Conclusion", "text": "Our approach is capable of detecting all possible QA pipelines, thus enabling researchers and developers to focus on specific modules for improvement or improvement. Currently, our next step is to operate a linkage framework across these ontologies in order to be able to link more module readings. In the future, our approach will be able to use provenance-based pipeline construction, that is, service modules add information to messages that leave provenance data on the processed message, enabling users to prevent or force the creation of a pipeline by using a specific processing step. In addition, it will improve itself, i.e. slow services with high response time, while multi-user requests can be identified while composition and thus QR modules are generated."}], "references": [{"title": "FN goes NIF: Integrating FrameNet in the NLP Interchange Format", "author": ["V. Alexiev", "G. Casamayor"], "venue": "In Linked Data in Linguistics", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "A service-oriented search framework for full text, geospatial and semantic search", "author": ["A. Both", "A.-C.N. Ngonga", "R. Usbeck", "D. Lukovnikov", "C. Lemke", "M. Speicher"], "venue": "SEMANTiCS,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2014}, {"title": "The qall-me framework: A specifiable-domain multilingual question answering architecture", "author": ["O. Ferrandez", "C. Spurk", "M. Kouylekov", "I. Dornescu", "S. Ferrandez", "M. Negri", "R. Izquierdo", "D. Tomas", "C. Orasan", "G. Neumann"], "venue": "Journal of Web Semantics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Mongiov\u0300\u0131. Semantic Web Machine Reading with FRED", "author": ["A. Gangemi", "V. Presutti", "D. Reforgiato Recupero", "A.G. Nuzzolese", "F. Draicchio"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2016}, {"title": "Survey on challenges of question answering in the semantic web", "author": ["K. H\u00f6ffner", "S. Walter", "E. Marx", "J. Lehmann", "A. Ngonga", "R. Usbeck"], "venue": "Semantic Web Journal,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2016}, {"title": "Towards an open question answering architecture", "author": ["E. Marx", "R. Usbeck", "A.-C.N. Ngonga", "K. H\u00f6ffner", "J. Lehmann", "S. Auer"], "venue": "SEMANTiCS,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Qanus: An open-source question-answering platform", "author": ["J.-P. Ng", "M.-Y. Kan"], "venue": "arXiv preprint arXiv:1501.00311,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Sina: Semantic interpretation of user queries for question answering on interlinked data", "author": ["S. Shekarpour", "E. Marx", "A.-C.N. Ngomo", "S. Auer"], "venue": "Journal of Web Semantics,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Qanary\u2013the fast track to creating a question answering system with linked data technology", "author": ["K. Singh", "A. Both", "D. Diefenbach", "S. Shekarpour", "D. Cherix", "C. Lange"], "venue": "In ESWC,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2016}, {"title": "Template-based question answering over RDF data", "author": ["C. Unger", "L. B\u00fchmann", "J. Lehmann", "A.N. Ngomo", "D. Gerber", "P. Cimiano"], "venue": "In 21st WWW conference,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "6th open challenge on question answering over linked data (qald-6)", "author": ["C. Unger", "A. Ngonga", "E. Cabrio"], "venue": "In The Semantic Web: ESWC 2016 Challenges.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2016}, {"title": "HAWK \u2013 hybrid question answering using linked data", "author": ["R. Usbeck", "A.-C. Ngomo", "L. B\u00fchmann", "C. Unger"], "venue": "In ESWC,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "GERBIL \u2013 general entity annotation benchmark framework", "author": ["R. Usbeck", "M. R\u00f6der", "A.-C. Ngonga Ngomo", "C. Baron", "A. Both", "M. Br\u00fcmmer", "D. Ceccarelli", "M. Cornolti", "D. Cherix", "B. Eickmann", "P. Ferragina", "C. Lemke", "A. Moro", "R. Navigli", "F. Piccinno", "G. Rizzo", "H. Sack", "R. Speck", "R. Troncy", "J. Waitelonis", "L. Wesemann"], "venue": "WWW conference,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "The pragmatic proof: Hypermedia API composition and execution", "author": ["R. Verborgh", "D. Arndt", "S.V. Hoecke", "J.D. Roo", "G. Mels", "T. Steiner", "J. Gabarr\u00f3"], "venue": "CoRR, abs/1512.07780,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Building optimal information systems automatically: Configuration space exploration for biomedical information systems", "author": ["Z. Yang", "E. Garduno", "Y. Fang", "A. Maiberg", "C. McCormack", "E. Nyberg"], "venue": "In 22nd ACM CIKM,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}], "referenceMentions": [{"referenceID": 10, "context": "More than 20 QA approaches have been solely proposed to the QALD challenge series [11] over the past 6 years.", "startOffset": 82, "endOffset": 86}, {"referenceID": 4, "context": "Most approaches rely on basic modules such as Named Entity Recognizers and linkers, POS-Taggers, SPARQL-executers or graph-traversal modules [5].", "startOffset": 141, "endOffset": 144}, {"referenceID": 7, "context": "It shows dependencies between the components of 6 QA systems [8, 10, 12, 6, 2].", "startOffset": 61, "endOffset": 78}, {"referenceID": 9, "context": "It shows dependencies between the components of 6 QA systems [8, 10, 12, 6, 2].", "startOffset": 61, "endOffset": 78}, {"referenceID": 11, "context": "It shows dependencies between the components of 6 QA systems [8, 10, 12, 6, 2].", "startOffset": 61, "endOffset": 78}, {"referenceID": 5, "context": "It shows dependencies between the components of 6 QA systems [8, 10, 12, 6, 2].", "startOffset": 61, "endOffset": 78}, {"referenceID": 1, "context": "It shows dependencies between the components of 6 QA systems [8, 10, 12, 6, 2].", "startOffset": 61, "endOffset": 78}, {"referenceID": 5, "context": "One of the earliest works is openQA [6] which is a modular open-source framework for implementing QA systems.", "startOffset": 36, "endOffset": 39}, {"referenceID": 2, "context": "QALL-ME [3] is another open source approach using an architecture skeleton for multilingual QA, a domain- as well as a domain-independent ontology.", "startOffset": 8, "endOffset": 11}, {"referenceID": 14, "context": "The open source system OAQA [15] aims at advancing the engineering of QA systems by following architectural commitments to components for interchangeability.", "startOffset": 28, "endOffset": 32}, {"referenceID": 6, "context": "QANUS [7] is a not disclosed QA framework for the rapid development of novel QA systems as well as a baseline system for benchmarking.", "startOffset": 6, "endOffset": 9}, {"referenceID": 1, "context": "[2] described a first semantic approach towards coupling components together via RDF to tailor search pipelines using semantic, geospatial and full text search modules.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "QANARY [9] is the first real implementation of a semantic approach towards generating QA systems from components.", "startOffset": 7, "endOffset": 10}, {"referenceID": 13, "context": "[14] developed RestDesc which allows for the automatic composition of HyperMedia APIs driven by RDF and Reasoning over N3.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "First, there is NIF, the Natural Language Programming Interchange Language which is commonly by Named Entity Recognition and Linking tools [13] and second Open Annotation, a W3C initiative to annotate any web content.", "startOffset": 139, "endOffset": 143}, {"referenceID": 0, "context": "Finally, we will make use of Framenet [1] due to its capability to annotate relations as well as the Earmark ontology used in the state-of-the-art machine reader FRED [4].", "startOffset": 38, "endOffset": 41}, {"referenceID": 3, "context": "Finally, we will make use of Framenet [1] due to its capability to annotate relations as well as the Earmark ontology used in the state-of-the-art machine reader FRED [4].", "startOffset": 167, "endOffset": 170}], "year": 2016, "abstractText": "Question answering (QA) has been the subject of a resurgence over the past years. The said resurgence has led to a multitude of question answering (QA) systems being developed both by companies and research facilities. While a few components of QA systems get reused across implementations, most systems do not leverage the full potential of component reuse. Hence, the development of QA systems is currently still a tedious and time-consuming process. We address the challenge of accelerating the creation of novel or tailored QA systems by presenting a concept for a self-wiring approach to composing QA systems. Our approach will allow the reuse of existing, web-based QA systems or modules while developing new QA platforms. To this end, it will rely on QA modules being described using the Web Ontology Language. Based on these descriptions, our approach will be able to automatically compose QA systems using a data-driven approach automatically.", "creator": "TeX"}}}