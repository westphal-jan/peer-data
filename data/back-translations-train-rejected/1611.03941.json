{"id": "1611.03941", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Nov-2016", "title": "Anomaly Detection in Bitcoin Network Using Unsupervised Learning Methods", "abstract": "The problem of anomaly detection has been studied for a long time. In short, anomalies are abnormal or unlikely things. In financial networks, thieves and illegal activities are often anomalous in nature. Members of a network want to detect anomalies as soon as possible to prevent them from harming the network's community and integrity. Many Machine Learning techniques have been proposed to deal with this problem; some results appear to be quite promising but there is no obvious superior method. In this paper, we consider anomaly detection particular to the Bitcoin transaction network. Our goal is to detect which users and transactions are the most suspicious; in this case, anomalous behavior is a proxy for suspicious behavior. To this end, we use three unsupervised learning methods including k-means clustering, Mahalanobis distance, and Unsupervised Support Vector Machine (SVM) on two graphs generated by the Bitcoin transaction network: one graph has users as nodes, and the other has transactions as nodes.", "histories": [["v1", "Sat, 12 Nov 2016 02:39:41 GMT  (72kb,D)", "http://arxiv.org/abs/1611.03941v1", null], ["v2", "Sat, 25 Feb 2017 00:56:26 GMT  (97kb,D)", "http://arxiv.org/abs/1611.03941v2", null]], "reviews": [], "SUBJECTS": "cs.LG cs.CR", "authors": ["thai pham", "steven lee"], "accepted": false, "id": "1611.03941"}, "pdf": {"name": "1611.03941.pdf", "metadata": {"source": "META", "title": "Anomaly Detection in Bitcoin Network Using  Unsupervised Learning Methods", "authors": ["Thai T. Pham", "Steven Lee"], "emails": ["thaipham@stanford.edu", "slee2010@stanford.edu"], "sections": [{"heading": "1. Introduction", "text": "With respect to financial transaction networks, anomalies may include those that perform fraudulent transactions. In these networks, a common goal is to detect these anomalies or suspicious activity in that anonymous network where nodes (i.e. users, transactions) are not flagged and there is no confirmation of whether a particular node is actually conducting illegal activity or not. In this project, we focus in particular on the problem of detecting anomalies or suspicious activity in that anonymous network where nodes (i.e. users, transactions) are not flagged and there is no confirmation of whether a particular node is actually conducting illegal activity or not. In this project, we focus in particular on the problem of detecting anomalies in the Bitcoin transaction network, which is related to investigating fraud detection in all types of financial transaction systems."}, {"heading": "2. Methods", "text": "In this section we describe data collection and parsing. Then we describe the extraction of features and finally we provide mathematical explanations for the unattended learning techniques we use."}, {"heading": "2.1. Data Collection and Parsing", "text": "All Bitcoin transactions are documented in a public register Xiv: 161 1.03 941v 1 [cs.L G] 12 Nov 201 6 and are located in the currency unit Bitcoin (BTC). The record contains all Bitcoin transactions, starting with the creation of the network until April 7, 2013. For each transaction, there may be multiple sender and recipient addresses. In addition, multiple addresses may belong to a single user. Finally, the users are also anonymous, as there are no names or personal information associated with a particular user.The record is quite extensive: there are 6, 336, 769 users with 37, 450, 461 transactions. We analyze the data in two ways. The first way we will call the user graph is quite intuitive: users (where each user has a list of addresses) are nodes and transactions between users are edges. The second way we will identify the raster transactions we will call between our normal transaction models, both of which Bitcoin will help us identify as suspicious."}, {"heading": "2.2. Feature Extraction", "text": "To use k-mean as a baseline, we calculate the Mahalanobis distance, use an uncontrolled SVM, for each node in the diagram we extract a set of features. In each of the diagrams representations of the data (mentioned above), we extract the following 12 features. Remember that even with the same names the features mean different things for the two representations. \u2022 In-degree, out-degree, unique in-degree, unique out-degree, clustering coefficient \u2022 Average in-transaction, average time intervals between in-transactions, average time intervals between out-transactions, \u2022 Balance, creation date, active duration 2.3. Unsupervised Learning Techniques2.3.1. k-mean ClusteringThe purpose of k-mean clustering method is to partition m-points (i.e. m-nodes in the diagram), which we translate into K-groups of similar features."}, {"heading": "2.3.2. Mahalanobis Distance Based Method", "text": "This method is based on the assumption of the multivariate Gaussian distribution.Specifically, we proceed from the training set (x1,..., xm), where xi-Rn (again n = 6 for user diagram and n = 3 for transaction diagram) is drawn from the multivariate normal distributionp (x; \u00b5, \u03a3) = 1 (2\u03c0) n 2 | \u03a3 | 12exp (\u2212 12 (x \u2212 \u00b5) T\u03a3 \u2212 1 (x \u2212 \u00b5)).The normal parameter adjustment method (MLE) implies that \u00b5 and \u03c3 can be estimated by \u00b5 = 1m m \u2211 i = 1 xi. Note that our data are not labeled, so that we train and recognize on the same dataset."}, {"heading": "2.3.3. Unsupervised SVM", "text": "The usual SVM method does not work here because our data is not labeled, so we will use a modified version of it. We will also use the kernel trick to use an endless dimensional range of functions. We also assume that the training set (x1,..., xm) in which xi-Rn is used for all, i.e., we start with the primary optimization problem: min w, \u03c1 (12 wTw) s.t. wTxi [..., m.A new test example x is labeled as a character (wTx \u2212 \u03c1). The point x labeled (\u2212 1) is labeled as an anomaly. Note that the data are not linearly separable, so we must use a soft margin SVM. However, we will not use the constant C as in the usual soft margin SVM due to its difficulty in interpretation. Instead, we will follow [3] the RIS SVM method as a follow min. 12 [Tww]."}, {"heading": "3. Evaluation Methods", "text": "Due to the nature of the network-like data set we have at our disposal, we propose three evaluation methods. \u2022 Using the k mean as a starting point, we can calculate the relative distances between the detected outliers and the centroids. If these values are small, we conclude that our methods are not good enough. We call this \"visualization evaluation.\" \u2022 Because we present our data in two ways, whereby nodes and edges are somehow exchanged, we can test the consistency of our methods by checking if suspicious users have detected suspicious transactions themselves. We call this \"dual evaluation.\" Specifically, we can use the user diagram to determine the top N-user outliers and get the top M-transaction outliers with the transaction diagram. In this essay, we select N = M = 100. Then we determine XN - the amount of transactions corresponding to the top N-node outliers and YM-users."}, {"heading": "4. Results", "text": "The \u03bd-SVM method takes a long time, and since we are currently unable to use techniques such as GPU-parallel computation, we will limit our data set to 100,000 data points for all methods."}, {"heading": "4.1. k-Means Clustering", "text": "Using the k-mean cluster metric in [5], we find that setting k = 7 minimizes cross-cluster entropy for the user graph and k = 8 for the transaction graph. (Figure 1.) For the sake of the dual evaluation method, we choose k = 7 for both graph types."}, {"heading": "4.2. Mahalanobis Distance Based Method", "text": "Now we use the Mahalanobis method for two types of diagrams. (Figures 2-3.) The detected anomalies seem to appear at the edge of the diagram, indicating that abnormal activity is usually extreme."}, {"heading": "4.3. Unsupervised SVM", "text": "We now perform the method Unsupervised (one - class) \u03bd-SVM for two graph types. Let's start with the identification of the optimal hyperparameter \u03bd. On the basis of the evaluation section, we select \u03bd, which returns the largest values of A1 and A2. It turns out that the optimal \u03bd is about 0.005. (Figure 4.) Now, with \u03bd = 0.005, the \u03bd-SVM method gives us the detected anomalies for both types of graph representations in Figures 5 and 6. The suspicious users and transactions suggested by the method Unsupervised SVM seem to be quite similar to those proposed by the distance-based method Mahalanobis. Both usually appear at the outer edges of the graphs."}, {"heading": "5. Evaluation Results", "text": "For each graph type (user and transaction) and for each method (Mahalanobis and Unsupervised SVM), we calculate the average of detected anomalies distances to corresponding centroids over maximum distances from these centroids to their points considered signed for the top 100 outliers. For the Mahalanobis method, we get 0.7619 for the user graph and 0.8277 for the transaction graph. For the uncontrolled SVM method, we get 0.7192 for the user graph and 0.8584 for the transaction graph. These values are as large as we have been expecting since observations in the results section, the detected anomalies appear as extreme points. \u2022 For the Mahalanobis distance-based method, we calculate A1 and A2 based on 0.02495 and 0.026316, respectively, giving mDE = 0.025633. Although this small value is fairly small, we do not get a transaction-based method of 4- and M4- that we do not get a surprise from the transaction type."}, {"heading": "6. Future Studies", "text": "We propose parallelizing the calculation to enable faster outlier detection using a GPU, which will require significant work, such as introducing thread security into learning methods, but will allow us to analyze the entire data set of approximately 38 million transactions."}, {"heading": "7. Conclusions", "text": "In this paper, we have examined the Bitcoin network. We first represent the data with two main focuses: users and transactions. Then, we use three major social networking techniques to detect anomalies that are potentially abnormal users and transactions. Although the match ratios are not high, we are able to detect two known cases of theft and one known case of loss, out of the 30 known cases we have. References [1] https: / / bitcoin.org / en / [2] Lloyd, Stuart P. (1982), Quantization of minimum squares in PCM, IEEE transactions on information theory 28 (2): 129-137. [3] B. Scholkopf, J. Platt, J. Shawe-Taylor, A. J. Smola, and R. C. Williamson.Estimating the support of a high-dimensional distribution. Neural Computation on Information Theory 28 (2): 129-137. [4] Scholkopf B. C. Taylor, J. Plata-A. Shawe-stimsional."}], "references": [{"title": "Least squares quantization in PCM", "author": ["Lloyd", "Stuart P"], "venue": "IEEE Transactions on Information Theory", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1982}, {"title": "Williamson.Estimating the support of a high-dimensional distribution", "author": ["B. Sch\u00f6lkopf", "J. Platt", "J. Shawe-Taylor", "A.J. Smola", "R. C"], "venue": "Neural Computation,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2001}, {"title": "Sequential minimal optimization: A fast algorithm for training support vector machines", "author": ["J. Platt"], "venue": "Technical Report MSR-TR-98-14, Microsoft Research,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1998}, {"title": "K-means Clustering versus Validation Measures: A Data Distribution Perspective", "author": ["H Xiong"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "The algorithm in details can be found in [2].", "startOffset": 41, "endOffset": 44}, {"referenceID": 1, "context": "Instead, we follow [3] to use \u03bd-SVM method as follows.", "startOffset": 19, "endOffset": 22}, {"referenceID": 1, "context": "Following [3] again, we can write the corresponding dual problem using the Kernel trick:", "startOffset": 10, "endOffset": 13}, {"referenceID": 2, "context": "To solve for this optimization problem efficiently, we can use SMO method ([4]).", "startOffset": 75, "endOffset": 78}, {"referenceID": 3, "context": "Using the k-means clustering metric in [5] we find that setting k = 7 minimizes cross-cluster entropy for the user graph and k = 8 for the transaction graph.", "startOffset": 39, "endOffset": 42}], "year": 2017, "abstractText": "The problem of anomaly detection has been studied for a long time. In short, anomalies are abnormal or unlikely things. In financial networks, thieves and illegal activities are often anomalous in nature. Members of a network want to detect anomalies as soon as possible to prevent them from harming the network\u2019s community and integrity. Many Machine Learning techniques have been proposed to deal with this problem; some results appear to be quite promising but there is no obvious superior method. In this paper, we consider anomaly detection particular to the Bitcoin transaction network. Our goal is to detect which users and transactions are the most suspicious; in this case, anomalous behavior is a proxy for suspicious behavior. To this end, we use three unsupervised learning methods including k-means clustering, Mahalanobis distance, and Unsupervised Support Vector Machine (SVM) on two graphs generated by the Bitcoin transaction network: one graph has users as nodes, and the other has transactions as nodes.", "creator": "LaTeX with hyperref package"}}}