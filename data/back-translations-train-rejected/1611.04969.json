{"id": "1611.04969", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Nov-2016", "title": "An integrated Graphical User Interface for Debugging Answer Set Programs", "abstract": "Answer Set Programming (ASP) is an expressive knowledge representation and reasoning framework. Due to its rather simple syntax paired with high-performance solvers, ASP is interesting for industrial applications. However, to err is human and thus debugging is an important activity during the development process. Therefore, tools for debugging non-ground answer set programs are needed. In this paper, we present a new graphical debugging interface for non-ground answer set programs. The tool is based on the recently-introduced DWASP approach for debugging and it simplifies the interaction with the debugger. Furthermore, the debugging interface is integrated in ASPIDE, a rich IDE for answer set programs. With our extension ASPIDE turns into a full-fledged IDE by offering debugging support.", "histories": [["v1", "Tue, 15 Nov 2016 18:11:43 GMT  (190kb,D)", "http://arxiv.org/abs/1611.04969v1", "Paper presented at the 1st Workshop on Trends and Applications of Answer Set Programming (TAASP 2016), Klagenfurt, Austria, 26 September 2016, 15 pages, LaTeX, 5 figures"]], "COMMENTS": "Paper presented at the 1st Workshop on Trends and Applications of Answer Set Programming (TAASP 2016), Klagenfurt, Austria, 26 September 2016, 15 pages, LaTeX, 5 figures", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["philip gasteiger", "carmine dodaro", "benjamin musitsch", "kristian reale", "francesco ricca", "konstantin schekotihin"], "accepted": false, "id": "1611.04969"}, "pdf": {"name": "1611.04969.pdf", "metadata": {"source": "CRF", "title": "An integrated Graphical User Interface for Debugging Answer Set Programs", "authors": ["Philip Gasteiger", "Carmine Dodaro", "Benjamin Musitsch", "Kristian Reale", "Francesco Ricca", "Konstantin Schekotihin"], "emails": ["firstname.lastname@aau.at", "lastname@mat.unical.it"], "sections": [{"heading": null, "text": "Keywords: Answer Set Programming, ASP, debugging, graphical debugging"}, {"heading": "1 Introduction", "text": "In fact, most of them will be able to play by the rules they have given themselves, and they will be able to play by the rules they have given themselves."}, {"heading": "2 Answer Set Programming", "text": "In this section, we will recall the syntax and semantics of response set programming. In addition, some features of response set programs required for our debugging methodology will be briefly introduced."}, {"heading": "2.1 Syntax.", "text": "A disjunctive logic program (DLP) is a finite set of rules of Forma}, {"heading": "2.2 Semantics.", "text": "An interpretation is a set of terrestrial atoms if for each rule r-G with B (r) M applies a positive literal l (its supplement l). Let I1 and I2 be two interpretations, then I1 + I2 if and only if for each atom a-G applies that a-I2. In view of the terrestrial atoms b (r) G with B (r) M it applies that H (r), b (e) M 6 =. Let I1 and I2 be two interpretations, then I1 + I2 if and only if for each atom a-I1 applies that a-I2. In view of the terrestrial atoms b (G) of a DLP and an interpretation I, a reduction of b (G).G w.r.t. I is an earth program, b (i) a deletion of all rules b (G) of a DLP and an interpretation I, a reduction of b (G).i."}, {"heading": "3 Debugging Approach", "text": "In this section, we present the debugging approach proposed in [10], which is implemented within the ASP solver WASP [1]. First, the basic idea of the approach is presented on an abstract level in Section 3.1. Subsequently, Section 3.2 outlines a way to integrate the approach into an ASP solver."}, {"heading": "3.1 Idea", "text": "When developing a program, a small instance is often used to test it. (To verify the accuracy of the results obtained from the ASP solution, the expected solution of the example instance must be determined manually. (a) There is no answer to the question of whether there is an answer to the question of whether there is an answer to the question of whether there is an answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example instance. (a) There is no answer to the example inconferences. (c) There is no answer to the example inconferences. (c) There is no answer to the example inconferences."}, {"heading": "3.2 The DWASP Strategy", "text": "In this section, we will focus on how to integrate the debugging approach within an ASP solution process."}, {"heading": "4 The DWASP System", "text": "In this section, we first give an overview of the debugging system and the interaction between the components, and then describe in detail the graphical user interface DWASP-GUI. We also present the communication protocol between the GUI and the debugger. Finally, we introduce the integration with an integrated development environment for ASP, called ASPIDE [15]. Our system consists of three components: GRINGO-WRAPPER - the debugging grounder, the solver DWASP and the graphical user interface DWASP-GUI, as shown in Fig. 1. The user interacts with DWASP-GUI and provides a program and a test case T. If the test case fails, i.e. the solver DWASP is incoherent, a new debugging session is started."}, {"heading": "4.1 User Interface DWASP-GUI", "text": "A screenshot of the DWASP GUI is shown in Fig. 2. In the workspace view and in the test case view, all files containing the program encodings or test cases are listed. Furthermore, the query view (due to space limitations of the GUI) contains a maximum of nine atoms, the truth values of which are requested by the user. The user answers a query by either ticking or cross-checking the button and clicking Send. Afterwards, DWASP recalculates the unsatisfactory core and presents the results to the user. When debugging a program, all rules contained in the current unsatisfactory core are highlighted in red. If you hover the cursor over such a rule, all substitutions and basic versions of the rules are displayed in a popup.3 Note that simplifications of GRINGO are disabled [10]."}, {"heading": "4.2 Integration with ASPIDE", "text": "We integrated the DWASP GUI graphical user interface into the ASPIDE integrated development environment [15]. The test and debugging workflow is illustrated by the program shown in Example 1. In Fig. 3, we present a screenshot of ASPIDE with a workspace where the program is loaded. The test case some _ model.test uses an assertion from ASPIDE [14] that checks if there is a response. When running the test case some _ model.test, the IDE tells us that the test case has failed, as shown in Fig. 4. To start the DWASP system, we click the Debug button. Now we get the DWASP-GUI interface as shown in Fig. 5, where we debug the faulty program as described in the previous section. Finally, we click Back to ASPIDE, which brings us back to ASPIDE, highlighting the faulty rule as well."}, {"heading": "5 Related Work", "text": "This year, it has reached the point where it will be able to leave the country without being able to leave it."}, {"heading": "6 Conclusion", "text": "The new interface improves the user experience when debugging ASP programs with DWASP, a process that was previously only possible via a command-line interface. In fact, in addition to the usual advantages offered by visual tools, the query function is much more user-friendly, since the user can simply select answers by clicking on specific buttons, and multiple possible answers are presented to the user in a convenient list. Multiple test cases can easily be loaded into the interface, and multiple debugging sessions can be run seamlessly on the same cases as needed. Problematic rules are also outlined immediately in the text editor, so that the user is immediately notified of errors from the interface."}], "references": [{"title": "Optimization Methods for the Partner Units Problem", "author": ["M. Aschinger", "C. Drescher", "G. Friedrich", "G. Gottlob", "P. Jeavons", "A. Ryabokon", "E. Thorstensen"], "venue": "CPAIOR. pp. 4\u201319", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Logic programs with consistency-restoring rules", "author": ["M. Balduccini", "M. Gelfond"], "venue": "AAAI Spring Symposium. pp. 9\u201318", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2003}, {"title": "Debugging Logic Programs under the Answer Set Semantics", "author": ["M. Brain", "M.D. Vos"], "venue": "Workshop on ASP. pp. 141\u2013152", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Answer set programming at a glance", "author": ["G. Brewka", "T. Eiter", "M. Truszczynski"], "venue": "Commun. ACM 54(12), 92\u2013103", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Sealion: An eclipse-based IDE for answer-set programming with advanced debugging support", "author": ["P. Busoniu", "J. Oetsch", "J. P\u00fchrer", "P. Skocovsky", "H. Tompits"], "venue": "TPLP 13(4-5),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Design and results of the fifth answer set programming competition", "author": ["F. Calimeri", "M. Gebser", "M. Maratea", "F. Ricca"], "venue": "Artif. Intell. 231, 151\u2013181", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "Logic Programming and Nonmonotonic Reasoning - 13th International Conference, LPNMR 2015, Lexington, KY, USA, September 27-30, 2015", "author": ["F. Calimeri", "G. Ianni", "Truszczynski", "M. (eds."], "venue": "Proceedings, Lecture Notes in Computer Science, vol. 9345. Springer", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "A web-based ide for idp", "author": ["I. Dasseville", "G. Janssens"], "venue": "International Workshop on User-Oriented Logic Programming (IULP 2015), Proceedings. http://iulp2015.unileipzig.de/#papers", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Allotment problem in travel industry: A solution based on ASP", "author": ["C. Dodaro", "N. Leone", "B. Nardi", "F. Ricca"], "venue": "ten Cate, B., Mileo, A. (eds.) Web Reasoning and Rule Systems - 9th International Conference, RR 2015, Berlin, Germany, August 4-5, 2015, Proceedings. Lecture Notes in Computer Science, vol. 9209, pp. 77\u201392. Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Temporal induction by incremental SAT solving", "author": ["N. E\u00e9n", "N. S\u00f6rensson"], "venue": "Electr. Notes Theor. Comput. Sci. 89(4), 543\u2013560", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2003}, {"title": "Disjunctive datalog", "author": ["T. Eiter", "G. Gottlob", "H. Mannila"], "venue": "ACM TODS 22(3), 364\u2013418", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1997}, {"title": "Unit testing in ASPIDE", "author": ["O. Febbraro", "N. Leone", "K. Reale", "F. Ricca"], "venue": "Tompits, H., Abreu, S., Oetsch, J., P\u00fchrer, J., Seipel, D., Umeda, M., Wolf, A. (eds.) Applications of Declarative Programming and Knowledge Management - 19th International Conference, INAP 2011, and 25th Workshop on Logic Programming, WLP 2011, Vienna, Austria, September 28-30, 2011, Revised Selected Papers. Lecture Notes in Computer Science, vol. 7773, pp. 345\u2013364. Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "ASPIDE: integrated development environment for answer set programming", "author": ["O. Febbraro", "K. Reale", "F. Ricca"], "venue": "Delgrande, J.P., Faber, W. (eds.) Logic Programming and Nonmonotonic Reasoning - 11th International Conference, LPNMR 2011, Vancouver, Canada, May 16-19, 2011. Proceedings. Lecture Notes in Computer Science, vol. 6645, pp. 317\u2013330. Springer", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Answer Set Solving in Practice", "author": ["M. Gebser", "R. Kaminski", "B. Kaufmann", "T. Schaub"], "venue": "Synthesis Lectures on Artificial Intelligence and Machine Learning, Morgan & Claypool Publishers", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}, {"title": "A meta-programming technique for debugging answer-set programs", "author": ["M. Gebser", "J. P\u00fchrer", "T. Schaub", "H. Tompits"], "venue": "AAAI. pp. 448\u2013453", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2008}, {"title": "ASP at work: Spin-off and applications of the DLV system", "author": ["G. Grasso", "N. Leone", "M. Manna", "F. Ricca"], "venue": "LNCS. vol. 6565, pp. 432\u2013451", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2011}, {"title": "Debugging ASP using ILP", "author": ["T. Li", "M.D. Vos", "J. Padget", "K. Satoh", "T. Balke"], "venue": "Proceedings of the Technical Communications of the 31st International Conference on Logic Programming (ICLP 2015), Cork, Ireland, August 31 - September 4, 2015. CEUR Workshop Proceedings, vol. 1433. CEUR-WS.org", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Towards Debugging of Answer-Set Programs in the Language PSpb", "author": ["A. Mikitiuk", "E. Moseley", "M. Truszczynski"], "venue": "IC-AI. pp. 635\u2013640", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2007}, {"title": "Stepping through an Answer-Set Program", "author": ["J. Oetsch", "J. P\u00fchrer", "H. Tompits"], "venue": "LPNMR. pp. 134\u2013147", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Catching the Ouroboros: On Debugging Non-ground Answer-Set Programs", "author": ["J. Oetsch", "J. P\u00fchrer", "H. Tompits"], "venue": "TPLP 10(4-6), 2010", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2010}, {"title": "Catching the ouroboros: On debugging non-ground answerset programs", "author": ["J. Oetsch", "J. P\u00fchrer", "H. Tompits"], "venue": "TPLP 10(4-6), 513\u2013529", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "An integrated graphic tool for developing and testing dlv programs", "author": ["S. Perri", "F. Ricca", "G. Terracina", "D. Cianni", "P. Veltri"], "venue": "SEA Workshop. pp. 86\u2013100", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2007}, {"title": "Debugging Non-ground ASP Programs with Choice Rules, Cardinality and Weight Constraints", "author": ["A. Polleres", "M. Fr\u00fchst\u00fcck", "G. Schenner", "G. Friedrich"], "venue": "LPNMR, pp. 452\u2013464", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2013}, {"title": "Justifications for logic programs under answer set semantics", "author": ["E. Pontelli", "T.C. Son", "O. El-Khatib"], "venue": "TPLP 9(1), 1\u201356", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "A Theory of Diagnosis from First Principles", "author": ["R. Reiter"], "venue": "Artif. Intell. 32(1), 57\u201395", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1987}, {"title": "Characterising and explaining inconsistency in logic programs", "author": ["C. Schulz", "K. Satoh", "F. Toni"], "venue": "Logic Programming and Nonmonotonic Reasoning - 13th International Conference, LPNMR 2015, Lexington, KY, USA, September 27-30, 2015. Proceedings. Lecture Notes in Computer Science, vol. 9345, pp. 467\u2013479. Springer", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2015}, {"title": "Interactive query-based debugging of ASP programs", "author": ["K. Shchekotykhin"], "venue": "AAAI. pp. 1597\u20131603", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2015}, {"title": "Debugging Inconsistent Answer Set Programs", "author": ["T. Syrj\u00e4nen"], "venue": "NMR. pp. 77\u201384", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2006}, {"title": "Validating SAT solvers using an independent resolution-based checker: Practical implementations and other applications", "author": ["L. Zhang", "S. Malik"], "venue": "2003 Design, Automation and Test in Europe Conference and Exposition (DATE 2003), 3-7 March 2003, Munich, Germany. pp. 10880\u201310885. IEEE Computer Society", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 3, "context": "Answer Set Programming (ASP) [5] is a declarative programming paradigm proposed in the area of logic programming and non-monotonic reasoning.", "startOffset": 29, "endOffset": 32}, {"referenceID": 10, "context": "Computational problems of comparatively high complexity can be modeled in the expressive language of ASP [13], which provides a clear separation between the specification of a problem and the computation of its solutions by an ASP solver.", "startOffset": 105, "endOffset": 109}, {"referenceID": 0, "context": "The rather simple syntax of ASP paired with high-performance solvers makes ASP a valuable tool for developing complex research and industrial applications [2,7,11,18].", "startOffset": 155, "endOffset": 166}, {"referenceID": 5, "context": "The rather simple syntax of ASP paired with high-performance solvers makes ASP a valuable tool for developing complex research and industrial applications [2,7,11,18].", "startOffset": 155, "endOffset": 166}, {"referenceID": 8, "context": "The rather simple syntax of ASP paired with high-performance solvers makes ASP a valuable tool for developing complex research and industrial applications [2,7,11,18].", "startOffset": 155, "endOffset": 166}, {"referenceID": 15, "context": "The rather simple syntax of ASP paired with high-performance solvers makes ASP a valuable tool for developing complex research and industrial applications [2,7,11,18].", "startOffset": 155, "endOffset": 166}, {"referenceID": 15, "context": "Namely, ASP programs are flexible, intuitive, extensible and easy to maintain [18].", "startOffset": 78, "endOffset": 82}, {"referenceID": 2, "context": "For this reason, several methodologies and tools have been proposed in the last few years for debugging ASP programs [4,17,22,21,26], with the goal of making the development process faster and more comfortable.", "startOffset": 117, "endOffset": 132}, {"referenceID": 14, "context": "For this reason, several methodologies and tools have been proposed in the last few years for debugging ASP programs [4,17,22,21,26], with the goal of making the development process faster and more comfortable.", "startOffset": 117, "endOffset": 132}, {"referenceID": 19, "context": "For this reason, several methodologies and tools have been proposed in the last few years for debugging ASP programs [4,17,22,21,26], with the goal of making the development process faster and more comfortable.", "startOffset": 117, "endOffset": 132}, {"referenceID": 18, "context": "For this reason, several methodologies and tools have been proposed in the last few years for debugging ASP programs [4,17,22,21,26], with the goal of making the development process faster and more comfortable.", "startOffset": 117, "endOffset": 132}, {"referenceID": 23, "context": "For this reason, several methodologies and tools have been proposed in the last few years for debugging ASP programs [4,17,22,21,26], with the goal of making the development process faster and more comfortable.", "startOffset": 117, "endOffset": 132}, {"referenceID": 19, "context": "new approach overcomes the limits [22] of state-of-the-art debuggers based on metaprogramming [17,22], which suffer from a grounding blow-up problem.", "startOffset": 34, "endOffset": 38}, {"referenceID": 14, "context": "new approach overcomes the limits [22] of state-of-the-art debuggers based on metaprogramming [17,22], which suffer from a grounding blow-up problem.", "startOffset": 94, "endOffset": 101}, {"referenceID": 19, "context": "new approach overcomes the limits [22] of state-of-the-art debuggers based on metaprogramming [17,22], which suffer from a grounding blow-up problem.", "startOffset": 94, "endOffset": 101}, {"referenceID": 12, "context": "Following this trend, the debugging approaches for ASP have been usually integrated in programming environment such as ASPIDE [15] or SeaLion [6,23].", "startOffset": 126, "endOffset": 130}, {"referenceID": 4, "context": "Following this trend, the debugging approaches for ASP have been usually integrated in programming environment such as ASPIDE [15] or SeaLion [6,23].", "startOffset": 142, "endOffset": 148}, {"referenceID": 20, "context": "Following this trend, the debugging approaches for ASP have been usually integrated in programming environment such as ASPIDE [15] or SeaLion [6,23].", "startOffset": 142, "endOffset": 148}, {"referenceID": 11, "context": "Indeed ASPIDE provides a unit-testing framework [14] that was connected with DWASP to automatically generate failing test cases for the debugger.", "startOffset": 48, "endOffset": 52}, {"referenceID": 20, "context": "Example 1 (ASP conference system [23]).", "startOffset": 33, "endOffset": 37}, {"referenceID": 28, "context": "We implement this debugging strategy by using the concepts of solving under assumption and unsatisfiable cores [32] as described in the next section.", "startOffset": 111, "endOffset": 115}, {"referenceID": 9, "context": "For instance, the solving-under-assumptions feature [12] implemented in modern ASP solvers [1,16] is used to compute an unsatisfiable core.", "startOffset": 52, "endOffset": 56}, {"referenceID": 13, "context": "For instance, the solving-under-assumptions feature [12] implemented in modern ASP solvers [1,16] is used to compute an unsatisfiable core.", "startOffset": 91, "endOffset": 97}, {"referenceID": 12, "context": "Finally, the integration with an integrated development environment for ASP, called ASPIDE [15], is presented.", "startOffset": 91, "endOffset": 95}, {"referenceID": 12, "context": "We integrated the graphical user interface DWASP-GUI inside the integrated development environment ASPIDE [15].", "startOffset": 106, "endOffset": 110}, {"referenceID": 11, "context": "test uses an assertion of ASPIDE [14] that checks whether some answer set exists.", "startOffset": 33, "endOffset": 37}, {"referenceID": 21, "context": "The DLV debugger developed in [24] is an example of an integrated approach.", "startOffset": 30, "endOffset": 34}, {"referenceID": 2, "context": "IDEAS [4] is another procedural approach aiming at two types of problems: (a) why a set of atoms S is in an answer set M and (b) why S is not in any answer set.", "startOffset": 6, "endOffset": 9}, {"referenceID": 27, "context": "An approach used in SMDEBUG [31] addresses debugging of incoherent non-disjunctive ASP programs by adaption of model-based diagnosis [27].", "startOffset": 28, "endOffset": 32}, {"referenceID": 24, "context": "An approach used in SMDEBUG [31] addresses debugging of incoherent non-disjunctive ASP programs by adaption of model-based diagnosis [27].", "startOffset": 133, "endOffset": 137}, {"referenceID": 14, "context": "The SPOCK [17] and OUROBOROS [22,25] debuggers extend SMDEBUG by enabling identification of problems connected with unfounded sets.", "startOffset": 10, "endOffset": 14}, {"referenceID": 19, "context": "The SPOCK [17] and OUROBOROS [22,25] debuggers extend SMDEBUG by enabling identification of problems connected with unfounded sets.", "startOffset": 29, "endOffset": 36}, {"referenceID": 22, "context": "The SPOCK [17] and OUROBOROS [22,25] debuggers extend SMDEBUG by enabling identification of problems connected with unfounded sets.", "startOffset": 29, "endOffset": 36}, {"referenceID": 26, "context": "Moreover, our approach generalizes the interactive query-based method built on top of SPOCK [30] by enabling its application to non-ground programs.", "startOffset": 92, "endOffset": 96}, {"referenceID": 1, "context": "There are other approaches enabling faults localization in ASP, but not directly comparable with DWASP, include Consistency-Restoring Prolog [3], translation of ASP programs to natural language [20], visualization of justifications for an answer set [26] as well as stepping thought an ASP program [21].", "startOffset": 141, "endOffset": 144}, {"referenceID": 17, "context": "There are other approaches enabling faults localization in ASP, but not directly comparable with DWASP, include Consistency-Restoring Prolog [3], translation of ASP programs to natural language [20], visualization of justifications for an answer set [26] as well as stepping thought an ASP program [21].", "startOffset": 194, "endOffset": 198}, {"referenceID": 23, "context": "There are other approaches enabling faults localization in ASP, but not directly comparable with DWASP, include Consistency-Restoring Prolog [3], translation of ASP programs to natural language [20], visualization of justifications for an answer set [26] as well as stepping thought an ASP program [21].", "startOffset": 250, "endOffset": 254}, {"referenceID": 18, "context": "There are other approaches enabling faults localization in ASP, but not directly comparable with DWASP, include Consistency-Restoring Prolog [3], translation of ASP programs to natural language [20], visualization of justifications for an answer set [26] as well as stepping thought an ASP program [21].", "startOffset": 298, "endOffset": 302}, {"referenceID": 7, "context": "In [9] a web-based programming environment for the IDP system is presented.", "startOffset": 3, "endOffset": 6}, {"referenceID": 7, "context": "However, [9] applies it to a different language and it does feature a question-answering schema that is fundamental for reducing the set of buggy rules.", "startOffset": 9, "endOffset": 12}, {"referenceID": 16, "context": "In [19], the authors present a debugging technique for normal ASP programs that is based on inductive logic programming (ILP) and test cases.", "startOffset": 3, "endOffset": 7}, {"referenceID": 25, "context": "In [28] a different approach to debugging ASP programs is presented, and the reason of an incoherence is studied in terms of a set of culprits (atoms) using semantics which are weaker than the answer set semantics.", "startOffset": 3, "endOffset": 7}], "year": 2016, "abstractText": "Answer Set Programming (ASP) is an expressive knowledge representation and reasoning framework. Due to its rather simple syntax paired with high-performance solvers, ASP is interesting for industrial applications. However, to err is human and thus debugging is an important activity during the development process. Therefore, tools for debugging non-ground answer set programs are needed. In this paper, we present a new graphical debugging interface for non-ground answer set programs. The tool is based on the recently-introduced DWASP approach for debugging and it simplifies the interaction with the debugger. Furthermore, the debugging interface is integrated in ASPIDE, a rich IDE for answer set programs. With our extension ASPIDE turns into a full-fledged IDE by offering debugging support.", "creator": "LaTeX with hyperref package"}}}