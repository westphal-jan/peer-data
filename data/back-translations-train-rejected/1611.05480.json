{"id": "1611.05480", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Nov-2016", "title": "Solving Cold-Start Problem in Large-scale Recommendation Engines: A Deep Learning Approach", "abstract": "Collaborative Filtering (CF) is widely used in large-scale recommendation engines because of its efficiency, accuracy and scalability. However, in practice, the fact that recommendation engines based on CF require interactions between users and items before making recommendations, make it inappropriate for new items which haven't been exposed to the end users to interact with. This is known as the cold-start problem. In this paper we introduce a novel approach which employs deep learning to tackle this problem in any CF based recommendation engine. One of the most important features of the proposed technique is the fact that it can be applied on top of any existing CF based recommendation engine without changing the CF core. We successfully applied this technique to overcome the item cold-start problem in Careerbuilder's CF based recommendation engine. Our experiments show that the proposed technique is very efficient to resolve the cold-start problem while maintaining high accuracy of the CF recommendations.", "histories": [["v1", "Wed, 16 Nov 2016 22:03:04 GMT  (488kb,D)", "http://arxiv.org/abs/1611.05480v1", "in Big Data, IEEE International Conference on, 2016"]], "COMMENTS": "in Big Data, IEEE International Conference on, 2016", "reviews": [], "SUBJECTS": "cs.IR cs.LG", "authors": ["jianbo yuan", "walid shalaby", "mohammed korayem", "david lin", "khalifeh aljadda", "jiebo luo"], "accepted": false, "id": "1611.05480"}, "pdf": {"name": "1611.05480.pdf", "metadata": {"source": "CRF", "title": "Solving Cold-Start Problem in Large-scale Recommendation Engines: A Deep Learning Approach", "authors": ["Jianbo Yuan", "Walid Shalaby", "Mohammed Korayem", "David Lin", "Khalifeh AlJadda", "Jiebo Luo"], "emails": ["jluo@cs.rochester.edu", "wshalaby@uncc.edu", "khalifeh.aljadda@careerbuilder.com"], "sections": [{"heading": null, "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "II. RELATED WORK", "text": "The main goal for the Recommendation Systems (RSs) is to provide a user with content that he / she wants by making the relevance or evaluation of that content based on information about the users and the articles [1], [9]. The cold start issue is one of the biggest challenges in RSs design and delivery. Cold start occurs when either new users or new articles are introduced into the system. In this situation, there would be no behavioral data (reviews, purchases, clicks, etc.) for CF to function properly. Addressing cold start is inevitable in modern RSs for two reasons: 1) the item and the user pools change on a daily basis, and 2) CF is considered as a state-of-the-art referral technique, but it requires significant behavioral data in order to work properly. Therefore, it is important to promote new articles as quickly as possible in order to establish linkages between them and users to improve the CF performance one after the other."}, {"heading": "III. BACKGROUND", "text": "Collaborative filtering is one of the most successful techniques for creating RSs because of its independence from the content of the recommendations recommended by users and which they apply in many areas of application. (F) Collaborative filtering is one of the most successful techniques for creating RSs used by users. (F) Collaborative filtering is one of the most important methods used by users because of its independence from the content recommended by users. (F) Each entry in R represents the rating of users. (F) The role of CF algorithms is to perform empty entries in the analysis of existing entries. (F) The early generation of CF algorithms are memory-based (a.k.a) techniques based on neighborhood. (16), [F] These techniques work by measuring the similarities between the users."}, {"heading": "IV. METHODOLOGY", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "A. Problem Description", "text": "Due to many shortcomings of the CB recommendations, however, most domains prefer CF, which CF cannot provide, due to the accuracy and variety of results. Nevertheless, the cold start problem continues to affect a significant number of new articles. The recommendation engine is considered to be one of the most important channels to engage users with articles and to reactivate them when they leave a website via recommendation mails. Therefore, articles that have no chance of being recommended due to the cold start problem lose this important channel of exposure to end users. Therefore, we propose a new technique that takes CF into account in dynamic areas with frequent occurrence of new articles by using a Deep Learning Matcher (DLM). DLM is used to pair each new article with an existing article, which has behavioural data (such as ratings). This repair will make it possible to consider the new articles in CF before they interact with these new articles."}, {"heading": "B. Proposed Framework", "text": "In conventional CF-based recommendation engines (Figure 2-a), the only elements that can be considered for recommendations are those with behavioural data (i.e. users interact with these articles by rating, buying, clicking, etc.), however, any new article without such behavioural data cannot be part of the recommendations generated by CF. Our proposed system shown in Figure 2-b adds a new module that can be thought of as a plug-in associated with each new article ix with an article that has behavioural data iy, we call this process coupling. Once this pairing is done, each pair (ix, iy) is considered as one element, so that if article iy is selected for a recommendation by CF, point ix (the new element without behavioural data) will also appear with this recommendation. Therefore, the accuracy of the pairing is very important, as the pairing of irrelevant elements brings noise into the recommendations."}, {"heading": "C. Document Embedding and Matching", "text": "Given the importance of precise pairs (similar pairs) for the overall quality of the recommendations that are subsequently generated by CF, we tried standard document similarity techniques such as Term Frequency-Inverse Document Frequency (tf-idf) and Latent Dirichlet Allocation (LDA), but the results were not promising. Therefore, we built a Deep Learning Matcher (DLM) that significantly outperforms all other techniques. Our DLM was built using doc2vec, which is considered to be a current, state-of-the-art deep learning algorithm for embedding and matching documents. Unlike lexical features, the information extracted from each word is distributed along a word window in distributed representations (known as word2vec and doc2vec functions), as shown in Figure 3 [8]."}, {"heading": "D. Contextual Features Enrichment", "text": "Simple use of large-scale documents in the models is hardly good enough to learn a good representation of the documents [36]. The doc2vec model can semantically learn very good representations of the documents. However, in some areas such as job boards, many documents can share important overlapping content such as company or service descriptions, while overshadowing the important context including differentiated information such as requirements or qualifications. For example, in job boards 90% of a job description can be dedicated to the description to describe the company and its values and culture, while only 10% describe the requirements for the work. In such a scenario, doc2vec generates almost the same representation for two jobs advertised by the same company, but they are completely different from the job requirements. To solve this problem, we submit each document with contextual features, including the classification and the location of the document. Furthermore, in our section, since not all parts of a document (job posting) are equally important to measure this document's similarity to our own NP."}, {"heading": "V. EXPERIMENT AND RESULTS", "text": "In order to validate and evaluate the proposed technique, we have applied our approach to CareerBuilder's CF-based referral engine. CareerBuilder operates one of the largest job boards in the world and has an extensive and growing global presence with millions of job openings, more than 60 million actively searchable CVs, over a billion searchable documents and more than one million searches per hour. In its referral engine, Careerbuilder strives to recommend the right job to the right person at the right time. However, the cold start problem at Careerbuilder is very serious, as thousands of new jobs are advertised every day and it is important for the employers who have advertised these jobs to receive applications from job seekers within a short period of time. Recommendation is an important channel of workplace exposure, so new jobs lose a chance to be exposed through this important channel. In this section, we will discuss the various experiments we are conducting to evaluate the solution of the cold start problem with our technique."}, {"heading": "A. Job-to-Job (J2J) Matcher", "text": "eSi rf\u00fc ide nlrsrrteeteeteeteeteeteeteerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr"}, {"heading": "B. Case Study", "text": "The job-to-job matcher compared documents that were similar to each other admirably, but compared to the source job in the left column, we encountered challenges with documents that were roughly 70% or more of the same content, based on company descriptions such as background, benefits, and values. As the example in Table IV shows, the HVAC technician with banquet host in the middle was matched with completely different qualifications and requirements, due to the fact that the document is similar to what it was before. In this example, 25% of the document is actually different, which still allows for poor recommendations that are very similar and recommended. To counteract this, we add contextual features that have helped reduce and push down similarity values for these edge-edged documents. In the right column, instead, HVAC mechanics were returned when we highlighted the differences within the document. In our section, the contextual characteristics of the documents proved to be highly similar to each other in filtering features."}, {"heading": "VI. CONCLUSIONS AND FUTURE WORK", "text": "Collaborative filtering is commonly used in recommendation systems for applications in the real world, but suffers from the cold start problem, where new companies cannot be recommended or receive recommendations including users and articles. To solve the cold start problem, we build an item-to-item deep learning matcher based on the similarities of the document we learned from the state-of-the-art document and which embed the model doc2vec. The performance of the similarities at the document level, which the doc2vec model has contextual features, significantly exceeds the basic models and can be executed daily, which meets the requirements of our practical application. Our approach can be integrated into any existing CF-based recommendation engine, without having to modify the CF core. To prove the efficiency, scalability and accuracy of the proposed technique, we apply it based on the CF-based recommendation engine of the careerbuilder, which is used to obtain model-based solutions for a million more jobs as we recommend for this calculation model during a large scale job search."}], "references": [{"title": "Recommender systems survey", "author": ["Jes\u00fas Bobadilla", "Fernando Ortega", "Antonio Hernando", "Abraham Guti\u00e9rrez"], "venue": "Knowledge-Based Systems,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Recommender system application developments: a survey", "author": ["Jie Lu", "Dianshuang Wu", "Mingsong Mao", "Wei Wang", "Guangquan Zhang"], "venue": "Decision Support Systems,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "Content-based recommender systems: State of the art and trends", "author": ["Pasquale Lops", "Marco De Gemmis", "Giovanni Semeraro"], "venue": "In Recommender systems handbook,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "A survey of collaborative filtering techniques", "author": ["Xiaoyuan Su", "Taghi M Khoshgoftaar"], "venue": "Advances in artificial intelligence,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Content-based recommender systems", "author": ["Charu C Aggarwal"], "venue": "In Recommender Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2016}, {"title": "Content-based recommendation systems. In The adaptive web, pages 325\u2013341", "author": ["Michael J Pazzani", "Daniel Billsus"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Semantics-aware contentbased recommender systems", "author": ["Marco de Gemmis", "Pasquale Lops", "Cataldo Musto", "Fedelucio Narducci", "Giovanni Semeraro"], "venue": "In Recommender Systems Handbook,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Distributed representations of sentences and documents", "author": ["Quoc V Le", "Tomas Mikolov"], "venue": "In ICML,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Toward the next generation of recommender systems: A survey of the state-of-the-art and possible extensions. Knowledge and Data Engineering", "author": ["Gediminas Adomavicius", "Alexander Tuzhilin"], "venue": "IEEE Transactions on,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Item cold-start recommendations: learning local collective embeddings", "author": ["Martin Saveski", "Amin Mantrach"], "venue": "In Proceedings of the 8th ACM Conference on Recommender systems,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Methods and metrics for cold-start recommendations", "author": ["Andrew I Schein", "Alexandrin Popescul", "Lyle H Ungar", "David M Pennock"], "venue": "In Proceedings of the 25th annual international ACM SIGIR conference on Research and development in information retrieval,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2002}, {"title": "Integrating trust and similarity to ameliorate the data sparsity and cold start for recommender systems", "author": ["Guibing Guo"], "venue": "In Proceedings of the 7th ACM conference on Recommender systems,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "A collaborative filtering approach to mitigate the new user cold start problem", "author": ["Jes\u00faS Bobadilla", "Fernando Ortega", "Antonio Hernando", "Jes\u00faS Bernal"], "venue": "Knowledge-Based Systems,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Combining content and collaboration in text filtering", "author": ["Ian Soboroff", "Charles Nicholas"], "venue": "In Proceedings of the IJCAI,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1999}, {"title": "Indexing by latent semantic analysis", "author": ["Scott Deerwester", "Susan T Dumais", "George W Furnas", "Thomas K Landauer", "Richard Harshman"], "venue": "Journal of the American society for information science,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1990}, {"title": "Grouplens: an open architecture for collaborative filtering of netnews", "author": ["Paul Resnick", "Neophytos Iacovou", "Mitesh Suchak", "Peter Bergstrom", "John Riedl"], "venue": "In Proceedings of the 1994 ACM conference on Computer supported cooperative work,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1994}, {"title": "Grouplens: applying collaborative filtering to usenet news", "author": ["Joseph A Konstan", "Bradley N Miller", "David Maltz", "Jonathan L Herlocker", "Lee R Gordon", "John Riedl"], "venue": "Communications of the ACM,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1997}, {"title": "Item-based collaborative filtering recommendation algorithms", "author": ["Badrul Sarwar", "George Karypis", "Joseph Konstan", "John Riedl"], "venue": "In Proceedings of the 10th international conference on World Wide Web,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2001}, {"title": "Item-based top-n recommendation algorithms", "author": ["Mukund Deshpande", "George Karypis"], "venue": "ACM Transactions on Information Systems (TOIS),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2004}, {"title": "Amazon. com recommendations: Item-to-item collaborative filtering", "author": ["Greg Linden", "Brent Smith", "Jeremy York"], "venue": "IEEE Internet computing,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2003}, {"title": "Empirical analysis of predictive algorithms for collaborative filtering", "author": ["John S Breese", "David Heckerman", "Carl Kadie"], "venue": "In Proceedings of the Fourteenth conference on Uncertainty in artificial intelligence,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1998}, {"title": "Collaborative filtering with the simple bayesian classifier", "author": ["Koji Miyahara", "Michael J Pazzani"], "venue": "In Pacific Rim International conference on artificial intelligence,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2000}, {"title": "Collaborative filtering for multi-class data using belief nets algorithms", "author": ["Xiaoyuan Su", "Taghi M Khoshgoftaar"], "venue": "In 2006 18th IEEE International Conference on Tools with Artificial Intelligence", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2006}, {"title": "Clustering methods for collaborative filtering", "author": ["Lyle H Ungar", "Dean P Foster"], "venue": "In AAAI workshop on recommendation systems,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1998}, {"title": "Rectree: An efficient collaborative filtering method", "author": ["Sonny Han Seng Chee", "Jiawei Han", "Ke Wang"], "venue": "In International Conference on Data Warehousing and Knowledge Discovery,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2001}, {"title": "Latent semantic models for collaborative filtering", "author": ["Thomas Hofmann"], "venue": "ACM Transactions on Information Systems (TOIS),", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2004}, {"title": "Learning collaborative information filters", "author": ["Daniel Billsus", "Michael J Pazzani"], "venue": "In Icml,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1998}, {"title": "Large-scale parallel collaborative filtering for the netflix prize", "author": ["Yunhong Zhou", "Dennis Wilkinson", "Robert Schreiber", "Rong Pan"], "venue": "In International Conference on Algorithmic Applications in Management,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2008}, {"title": "Matrix factorization techniques for recommender systems", "author": ["Yehuda Koren", "Robert Bell", "Chris Volinsky"], "venue": null, "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2009}, {"title": "Collaborative filtering using a regression-based approach", "author": ["Slobodan Vucetic", "Zoran Obradovic"], "venue": "Knowledge and Information Systems,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2005}, {"title": "An mdp-based recommender system", "author": ["Guy Shani", "David Heckerman", "Ronen I Brafman"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2005}, {"title": "Model-based collaborative filtering", "author": ["Charu C Aggarwal"], "venue": "In Recommender Systems,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2016}, {"title": "Word representations: a simple and general method for semi-supervised learning. In Proceedings of the 48th annual meeting of the association for computational linguistics, pages 384\u2013394", "author": ["Joseph Turian", "Lev Ratinov", "Yoshua Bengio"], "venue": "Association for Computational Linguistics,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2010}, {"title": "Latent dirichlet allocation", "author": ["David M Blei", "Andrew Y Ng", "Michael I Jordan"], "venue": "Journal of machine Learning research,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2003}, {"title": "Learning word vectors for sentiment analysis", "author": ["Andrew L Maas", "Raymond E Daly", "Peter T Pham", "Dan Huang", "Andrew Y Ng", "Christopher Potts"], "venue": "In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2011}, {"title": "A neural knowledge language model", "author": ["Sunging Ahn", "Heeyoul Choi", "Tanel P\u00e4rnamaa", "Yoshua Bengio"], "venue": "arXiv preprint arXiv:1608.00318,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2016}, {"title": "Query sense disambiguation leveraging large scale user behavioral data", "author": ["Mohammed Korayem", "Camilo Ortiz", "Khalifeh AlJadda", "Trey Grainger"], "venue": "In IEEE International Conference on Big Data (Big Data", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2015}, {"title": "Software Framework for Topic Modelling with Large Corpora", "author": ["Radim \u0158eh\u016f\u0159ek", "Petr Sojka"], "venue": "In Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "of interest to individual users and subsequently suggest these items to them as recommendations [1], [2].", "startOffset": 96, "endOffset": 99}, {"referenceID": 1, "context": "of interest to individual users and subsequently suggest these items to them as recommendations [1], [2].", "startOffset": 101, "endOffset": 104}, {"referenceID": 1, "context": "Applications domains of RSs include: \u201ce-government, e-business, e-commerce/eshopping, e-library, e-learning, e-tourism, e-resource services and e-group activities\u201d [2].", "startOffset": 164, "endOffset": 167}, {"referenceID": 1, "context": "deployment platforms emerged over years to include, besides the classical Web-based platform, other modern platforms like mobile, TV, and radio [2].", "startOffset": 144, "endOffset": 147}, {"referenceID": 0, "context": "Depending on the application domain and the deployment platform, dozens of techniques and methods have been proposed to address cross-domain and cross-platform scalability and quality challenges [1], [3], [4].", "startOffset": 195, "endOffset": 198}, {"referenceID": 2, "context": "Depending on the application domain and the deployment platform, dozens of techniques and methods have been proposed to address cross-domain and cross-platform scalability and quality challenges [1], [3], [4].", "startOffset": 200, "endOffset": 203}, {"referenceID": 3, "context": "Depending on the application domain and the deployment platform, dozens of techniques and methods have been proposed to address cross-domain and cross-platform scalability and quality challenges [1], [3], [4].", "startOffset": 205, "endOffset": 208}, {"referenceID": 4, "context": "CB techniques work by measuring or predicting the similarity between profiles of the items (attributes/descriptions) and profiles of the users\u2019 (attributes/descriptions of past preferred items) [5], [6].", "startOffset": 194, "endOffset": 197}, {"referenceID": 5, "context": "CB techniques work by measuring or predicting the similarity between profiles of the items (attributes/descriptions) and profiles of the users\u2019 (attributes/descriptions of past preferred items) [5], [6].", "startOffset": 199, "endOffset": 202}, {"referenceID": 6, "context": "Item description, on the other hand, is typically textual which makes the similarity scoring more challenging due to language ambiguity raising the need for semanticaware CB systems [7].", "startOffset": 182, "endOffset": 185}, {"referenceID": 3, "context": "Unlike CB methods which recommend items that are similar to what target user liked in the past, CF methods leverage preferences of other similar users in order to make recommendations to the target user [4], [5].", "startOffset": 203, "endOffset": 206}, {"referenceID": 4, "context": "Unlike CB methods which recommend items that are similar to what target user liked in the past, CF methods leverage preferences of other similar users in order to make recommendations to the target user [4], [5].", "startOffset": 208, "endOffset": 211}, {"referenceID": 7, "context": "Our solution utilizes a state-of-the-art deep learning document embedding algorithms (also known as doc2vec) [8].", "startOffset": 109, "endOffset": 112}, {"referenceID": 0, "context": "The main objective for the Recommendation Systems (RSs) is providing a user with content he/she would like by estimating the relevancy or the rating of these contents based on the information about users and the items [1], [9].", "startOffset": 218, "endOffset": 221}, {"referenceID": 8, "context": "The main objective for the Recommendation Systems (RSs) is providing a user with content he/she would like by estimating the relevancy or the rating of these contents based on the information about users and the items [1], [9].", "startOffset": 223, "endOffset": 226}, {"referenceID": 9, "context": "Addressing cold-start is inevitable in modern RSs for two reasons [10]:", "startOffset": 66, "endOffset": 70}, {"referenceID": 9, "context": "Several methods have been introduced to address the coldstart and the data sparsity problems [10]\u2013[14].", "startOffset": 93, "endOffset": 97}, {"referenceID": 13, "context": "Several methods have been introduced to address the coldstart and the data sparsity problems [10]\u2013[14].", "startOffset": 98, "endOffset": 102}, {"referenceID": 9, "context": "Saveski and Mantrach [10] proposed Local Collective Embeddings", "startOffset": 21, "endOffset": 25}, {"referenceID": 13, "context": "Soboroff and Nicholas [14] utilized", "startOffset": 22, "endOffset": 26}, {"referenceID": 14, "context": "Latent Semantic Indexing (LSI) [15] in order to create topical representations of user profiles in the latent space.", "startOffset": 31, "endOffset": 35}, {"referenceID": 13, "context": "Similar to [14], Schein et al.", "startOffset": 11, "endOffset": 15}, {"referenceID": 10, "context": "[11] proposed an approach that creates a joint distribution of", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "Collaborative Filtering is one of the most successful techniques to building RSs due to their independence from the content of items being recommended, which make them easy to create and use across many application domains [4].", "startOffset": 223, "endOffset": 226}, {"referenceID": 15, "context": "a neighborhood-based) techniques [16], [17].", "startOffset": 33, "endOffset": 37}, {"referenceID": 16, "context": "a neighborhood-based) techniques [16], [17].", "startOffset": 39, "endOffset": 43}, {"referenceID": 17, "context": "After finding these similar neighbors, recommendations are generated by choosing the top-K items similar to a given item in case of itembased recommendations, or by aggregating the correlation scores of items liked by similar users in case of user-based recommendations [18]\u2013[20].", "startOffset": 270, "endOffset": 274}, {"referenceID": 19, "context": "After finding these similar neighbors, recommendations are generated by choosing the top-K items similar to a given item in case of itembased recommendations, or by aggregating the correlation scores of items liked by similar users in case of user-based recommendations [18]\u2013[20].", "startOffset": 275, "endOffset": 279}, {"referenceID": 17, "context": "The choice of the similarity or correlation metric has a major contribution to the quality of recommendations [18].", "startOffset": 110, "endOffset": 114}, {"referenceID": 20, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 85, "endOffset": 89}, {"referenceID": 22, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 90, "endOffset": 94}, {"referenceID": 23, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 107, "endOffset": 111}, {"referenceID": 24, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 113, "endOffset": 117}, {"referenceID": 25, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 144, "endOffset": 148}, {"referenceID": 26, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 185, "endOffset": 189}, {"referenceID": 27, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 223, "endOffset": 227}, {"referenceID": 28, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 229, "endOffset": 233}, {"referenceID": 29, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 252, "endOffset": 256}, {"referenceID": 30, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 291, "endOffset": 295}, {"referenceID": 31, "context": "Several algorithms were proposed to generate such models including Bayesian networks [21]\u2013[23], clustering [24], [25], latent semantic analysis [26], Singular Value Decomposition (SVD) [27], Alternating Least Squares (ALS) [28], [29] regression models [30], Markov Decision Processes (MDPs) [31], and others [32].", "startOffset": 308, "endOffset": 312}, {"referenceID": 32, "context": "Another important aspect to understand this work is how to represent documents in the vector space to measure similarity [33].", "startOffset": 121, "endOffset": 125}, {"referenceID": 33, "context": "Topic models such as Latent Dirichlet Allocation (LDA) are also used as features in document classification problems such as sentiment analysis and have shown promising results [34], [35].", "startOffset": 177, "endOffset": 181}, {"referenceID": 34, "context": "Topic models such as Latent Dirichlet Allocation (LDA) are also used as features in document classification problems such as sentiment analysis and have shown promising results [34], [35].", "startOffset": 183, "endOffset": 187}, {"referenceID": 33, "context": "Latent Dirichlet Allocation: LDA is a probabilistic model which learns P (z|w), distribution of a latent topic variable z given a word w [34].", "startOffset": 137, "endOffset": 141}, {"referenceID": 7, "context": "each word is distributed all along a word window in distributed representations (as known as word2vec and doc2vec feature) as shown in Figure 3 [8].", "startOffset": 144, "endOffset": 147}, {"referenceID": 35, "context": "Simply using documents that are in a large scale into the models is hardly good enough for learning a good representation of the documents [36].", "startOffset": 139, "endOffset": 143}, {"referenceID": 36, "context": "All experiments used a sample of 1,147,725 classified jobs from our dataset [37].", "startOffset": 76, "endOffset": 80}, {"referenceID": 37, "context": "[38] to generate tf-idf model and train LDA and doc2vec models.", "startOffset": 0, "endOffset": 4}], "year": 2016, "abstractText": "Collaborative Filtering (CF) is widely used in large-scale recommendation engines because of its efficiency, accuracy and scalability. However, in practice, the fact that recommendation engines based on CF require interactions between users and items before making recommendations, make it inappropriate for new items which haven\u2019t been exposed to the end users to interact with. This is known as the cold-start problem. In this paper we introduce a novel approach which employs deep learning to tackle this problem in any CF based recommendation engine. One of the most important features of the proposed technique is the fact that it can be applied on top of any existing CF based recommendation engine without changing the CF core. We successfully applied this technique to overcome the item cold-start problem in Careerbuilder\u2019s CF based recommendation engine. Our experiments show that the proposed technique is very efficient to resolve the coldstart problem while maintaining high accuracy of the CF recommendations. Keywords-Deep Learning; Cold-Start; Recommendation System; Document Similarity; Job Search", "creator": "TeX"}}}