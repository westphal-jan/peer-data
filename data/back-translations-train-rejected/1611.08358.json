{"id": "1611.08358", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Nov-2016", "title": "Kannada Spell Checker with Sandhi Splitter", "abstract": "Spelling errors are introduced in text either during typing, or when the user does not know the correct phoneme or grapheme. If a language contains complex words like sandhi where two or more morphemes join based on some rules, spell checking becomes very tedious. In such situations, having a spell checker with sandhi splitter which alerts the user by flagging the errors and providing suggestions is very useful. A novel algorithm of sandhi splitting is proposed in this paper. The sandhi splitter can split about 7000 most common sandhi words in Kannada language used as test samples. The sandhi splitter was integrated with a Kannada spell checker and a mechanism for generating suggestions was added. A comprehensive, platform independent, standalone spell checker with sandhi splitter application software was thus developed and tested extensively for its efficiency and correctness. A comparative analysis of this spell checker with sandhi splitter was made and results concluded that the Kannada spell checker with sandhi splitter has an improved performance. It is twice as fast, 200 times more space efficient, and it is 90% accurate in case of complex nouns and 50% accurate for complex verbs. Such a spell checker with sandhi splitter will be of foremost significance in machine translation systems, voice processing, etc. This is the first sandhi splitter in Kannada and the advantage of the novel algorithm is that, it can be extended to all Indian languages.", "histories": [["v1", "Fri, 25 Nov 2016 06:18:29 GMT  (461kb)", "http://arxiv.org/abs/1611.08358v1", "7 pages, 10 figures"]], "COMMENTS": "7 pages, 10 figures", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["a n akshatha", "chandana g upadhyaya", "rajashekara s murthy"], "accepted": false, "id": "1611.08358"}, "pdf": {"name": "1611.08358.pdf", "metadata": {"source": "CRF", "title": "Kannada Spell Checker with Sandhi Splitter", "authors": ["Chandana G Upadhyaya"], "emails": [], "sections": [{"heading": null, "text": "In fact, it is the case that most of them are in a position to move into another world, in which they are able to discover another world, in which they move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they, in which they live, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they live, in which they are, in which they live, in which they are, in which they are, in which they live, in which they are, in which they are, in which they live, in which they are, in which they are, in which they live, in which they are, in which they live, in which they are, in which they are, in which they are, in which they live, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in"}, {"heading": "A. Samaasa, and Jodi Pada", "text": "Samaasa is also known as a nominal compound. Morphologically, a samaasa has each noun or adjective in its stem form, with only the last element receiving the fall diffraction. Examples of samaasa are \"peetaMbara\" and \"vRukoodara.\" A Jodi Pada is a phonetic bond of two independent morphemes separated by a dash used in the Kannada dialect. Examples of Jodi Pada are \"mane-maTha\" and \"Deevaru-diMDaru.\""}, {"heading": "B. Sandhi", "text": "Sandhi means \"connect.\" In Sandhi formation at the word boundary, several phonological processes take place to create the complex word or the Sandhi word. During this connecting process, one or both operations occur at the word boundary: A new letter appears at the word boundary. A letter disappears at the end of the first word (prefix) or at the beginning of the second word (suffix) at the word boundary. Sandhis have a series of specific rules defined in Panini's Ashtadhyayi [2]. Sandhis occur on the basis of the last letter in the prefix and the first letter in the suffix. Based on the first letter in the suffix, Panini classifies the Sandhis as a vowel (svvara) and consonants (vyaMjana) Sandhi in Sanskrit. The Kannada language matches all Sandhis in Sanskrit and has three other Sandhis that are limited to kannadas."}, {"heading": "C. Sandhi Splitter and Spell Checker", "text": "A Sandhi Splitter is the one that separates the constituent words of a Sandhi word by using a comprehensive dictionary and Sandhi rules. As most words in a language get their meaning based on the context, Sandhi Splitting is sometimes context-based and therefore represents an ambiguity in machine processing. In manual processing, based on understanding the language, this ambiguity can be solved. Having a machine learn the context and use the grammar rules accordingly is a major challenge. As Kannada is a partly phonetic language, there are partial similarities between graphics and phonemes. This gives an enormous margin for spelling errors. The use of ottakshara and mahapRaNas also contributes to the spelling errors. This makes it necessary to spell check for Kannada.A spell checker is a piece of software that checks whether the word is spelled correctly and the word is spelled incorrectly."}, {"heading": "II. RELATED WORK AND BACKGROUND", "text": "The French scientist Gerard Huet has developed an online tool called \"Sanskrit Reader Companion\" to segment and label simple Sanskrit phrases [3]. To segment the words, the tool uses simple de-concatenation, which in most cases provides multiple outputs. University of Hyderabad, JNU-Hyderabad, IIITHyderabad, Sanskrit Academy Hyderabad, Poornaprajna Vidyapeetha Bangalore, Rashtriya Sanskrit Vidyapeetha Tirupathi and JRR Sanskrit University Jaipur have jointly developed an online Sanskrit Sandhi splitter."}, {"heading": "A. Sanskrit Sandhis", "text": "Savarna Deergha Sandhi: Pan rule \"akaHsavarnee deerghaHa,\" which means if the prefix ends with a / i / u / R and the suffix begins with aa / ii / uu / RR, the Sandhi word has at the word boundary aa / ii / uu / RR. For example, deeva + aalaya = deevaalaya (a + aa = aa) Guna Sandhi: Pan rule \"aadguNaHa.\" Gunasandhi is identified if the prefix ends with a / aa and the suffix begins with i / ii or u / uu, and the Sandhi word contains ee / oo or at the word boundary. E.g. suurya + udaya = suuryoodaya (a + u = oo) Vriddhi Sandhi: Pan rule \"Vriddhireechi\" and the suffix \"Mani.\" Vriddhi Sandhi is identified when the prefix / i ends with a / i."}, {"heading": "B. Kannada Sandhis", "text": "Loopa Sandhi: Loopa Sandhi is identified when the last vowel is omitted at the word boundary, without restriction of the first or last letters of the two native Kannada prefix and suffix words. E.g. uuru + uuru = uuruuru Aagama Sandhi: Aagama Sandhi is identified when the letter \"y\" or \"v\" is introduced at the word boundary of two native Kannada prefix and suffix words. E.g. mara + annu = maravannu Aadeesha Sandhi: Aadeesha Sandhi is identified when the letters \"k,\" \"t,\" \"b\" in the first position of the suffix are replaced by \"g,\" \"d,\" \"b\" or in a Sandhi word. E.g. maLe + kaala = maLegaala"}, {"heading": "IV. DICTIONARY AND MORPHOLOGICAL ANALYZER", "text": "A dictionary containing only the basic words and not compound words is necessary and sufficient for the spell-checking with sandhi splitter described in this essay. A list containing all possible inflections that verbs and nouns can take in descending order of priority is required to recognize and remove the inflections so that the word is preserved in its original form."}, {"heading": "A. Directed Acyclic Word Graph (DAWG)", "text": "A Directed Acyclic Word Graph, or DAWG, provides dictionary-like read-only objects. String data in a DAWG requires 200 times less memory than in a standard dictionary while maintaining comparable raw search speed [9]. It also provides fast advanced methods such as prefix search. These properties of DAWG are highly prized and useful for implementing spell checking with Sandhi splitter. In a method where prefix words are read from left to right and the suffix is read from right to left, an inverted DAWG structure would be helpful. A reverse DAWG is obtained by reversing the word and constructing a DAWG structure of that inverted word. Since DAWG supports fast prefix search, an inverted DAWG provides fast methods for searching for suffix."}, {"heading": "B. Morphological Analyzer", "text": "A vibhakti pratyaya is a case marker consisting of a letter or bunch of letters attached to the end of a word. The morphological analyzer discussed in this essay can identify all seven vibhakti pratyayas in Kannada, along with the gender and plural markers. A dissected Kannada word will always be in the following form: [root word] [plural marker] [pratyaya] In morphological analysis, the word is scanned from right to right until a valid vibhakti pratyaya is found. Although the emphasis is on nouns, a similar approach can be used to build an exhaustive morphological analyzer for all forms of verbs. There is a chance that the Sandhis will occur when the root word is joined with the pratyayas."}, {"heading": "V. DESIGN AND IMPLEMENTATION", "text": "The concept of \"ottakshara,\" which represents one consonant immediately after another without an intermediate vowel in Kannada, makes it difficult to process the Kannada text in Unicode format. Therefore, romanization is necessary. There are several types of romanization, and in this essay the romanization technique proposed by Prof. Kavi Narayana Murthy was adopted [10]."}, {"heading": "A. Sandhi Splitter", "text": "In fact, it is very likely that it is a matter of a way in which the possible divisions are generated and evaluated in order to invent a deergha and two consecutive consonants that are able to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be in a position to be able to generate a prefix and a suffix in a position to be in a position to be able to find what they are able to be in a position to be in a position to be in a position."}, {"heading": "B. Spell Checker", "text": "Spell Checking with Sandhi Splitter checks the given word for spelling errors and generates suggestions for misspelled words. Spelling errors in a corpus are mostly random, and usually only one or two letters in a word are affected [11]. Levenshtein spacing is used to create a list of suggestions for a misspelled word. Levenshtein spacing between two words is the minimum number of one-character editions such as inserts, deletions, or substitutions that are required to turn one word into another [12]. Spell Checking with Sandhi Splitter can spell check and suggest for all words with single character errors. Two main spell-checking scenarios with Sandhi Splitter are: 1) Word is found in the dictionary: If the word is found in the dictionary, the word is spelled correctly in the Sandhi Splitter. 2) Word is not found in the dictionary: If the word is not true, then the word is not true."}, {"heading": "C. Generating Suggestions", "text": "In fact, most of these words are a kind of suffix based on an expected prefix and whose rules are based on the Sandhi dot. A valid split would produce a valid prefix and a suffix suffix. All words that begin with the suffix begin with the first letter of the suffix given by the Sandhi rules and whose rules are applied to the Sandhi dot. A valid split would produce a valid prefix and a misspelt suffix suffix. All words that begin with the first letter of the suffix are applied by the Levenshtein spacing."}, {"heading": "VI. EXPERIMENT AND RESULTS", "text": "The time and space efficiency of the spell checker with Sandhi Splitter is measured and compared to other conventional spell checkers. Sandhi Splitter for Dictionaries is highly spatially efficient and takes up 200 times less space than a spell checker with linear memory structures. Sandhi Splitter spell checker has been tested with a test sample of about 700 denominators and verbs and their various infections. A verb takes up about 80 infections, while a verb has about 10 infections. Verbs change drastically when there is an infection that makes it difficult to spell check with Sandhi Splitter. Sandhi Splitter spell checker has improved performance by 90%."}], "references": [{"title": "V\u00e4rldens 100 st\u00f6rsta spr\u00e5k 2007\" (The World's 100 Largest Languages", "author": ["Mikael Parkvall"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "A Paninian Sandhi Analyzer for Sanskrit", "author": ["Kumar", "Sachin", "Girish Nath Jha"], "venue": "In the Souvenir Abstracts of Platinum Jubilee International Conference of the Linguistic Society of India,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "Binary codes capable of correcting deletions, insertions, and reversals.", "author": ["V.I. Levenshtein"], "venue": "Doklady Akademii Nauk SSSR", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1965}], "referenceMentions": [{"referenceID": 0, "context": "Kannada has roughly 40 million native speakers and it is one of the 40 most spoken languages in the world [1].", "startOffset": 106, "endOffset": 109}, {"referenceID": 1, "context": "The input is split at every point to output all possible combinations [5].", "startOffset": 70, "endOffset": 73}, {"referenceID": 2, "context": "The Levenshtein distance between two words is the minimum number of single-character edits like insertions, deletions or substitutions required to change one word into the other [12].", "startOffset": 178, "endOffset": 182}], "year": 2016, "abstractText": "Spelling errors are introduced in text either during typing, or when the user does not know the correct phoneme or grapheme. If a language contains complex words like sandhi where two or more morphemes join based on some rules, spell checking becomes very tedious. In such situations, having a spell checker with sandhi splitter which alerts the user by flagging the errors and providing suggestions is very useful. A novel algorithm of sandhi splitting is proposed in this paper. The sandhi splitter can split about 7000 most common sandhi words in Kannada language used as test samples. The sandhi splitter was integrated with a Kannada spell checker and a mechanism for generating suggestions was added. A comprehensive, platform independent, standalone spell checker with sandhi splitter application software was thus developed and tested extensively for its efficiency and correctness. A comparative analysis of this spell checker with sandhi splitter was made and results concluded that the Kannada spell checker with sandhi splitter has an improved performance. It is twice as fast, 200 times more space efficient, and it is 90% accurate in case of complex nouns and 50% accurate for complex verbs. Such a spell checker with sandhi splitter will be of foremost significance in machine translation systems, voice processing, etc. This is the first sandhi splitter in Kannada and the advantage of the novel algorithm is that, it can be extended to all Indian languages. Keywords\u2014 Natural language processing; Morphology; Computational linguistics; Sandhi splitter; Spell checke.", "creator": "Microsoft\u00ae Word 2013"}}}