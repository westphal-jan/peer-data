{"id": "1611.10215", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Nov-2016", "title": "Unit Commitment using Nearest Neighbor as a Short-Term Proxy", "abstract": "We devise the Unit Commitment Nearest Neighbor (UCNN) algorithm to be used as a proxy for quickly approximating outcomes of short-term decisions, to make tractable hierarchical long-term assessment and planning for large power systems. Experimental results on an updated version of IEEE-RTS96 show high accuracy measured on operational cost, achieved in run-times that are lower in several orders of magnitude than the traditional approach.", "histories": [["v1", "Wed, 30 Nov 2016 15:24:55 GMT  (2988kb,D)", "http://arxiv.org/abs/1611.10215v1", "Package contains both original article, and its supplementary material, in two separate files"], ["v2", "Wed, 18 Oct 2017 19:29:49 GMT  (3058kb,D)", "http://arxiv.org/abs/1611.10215v2", "Package contains both original article, and its supplementary material, in two separate files"]], "COMMENTS": "Package contains both original article, and its supplementary material, in two separate files", "reviews": [], "SUBJECTS": "cs.LG cs.AI", "authors": ["gal dalal", "elad gilboa", "shie mannor", "louis wehenkel"], "accepted": false, "id": "1611.10215"}, "pdf": {"name": "1611.10215.pdf", "metadata": {"source": "CRF", "title": "Unit Commitment using Nearest Neighbor as a Short-Term Proxy", "authors": ["Gal Dalal", "Elad Gilboa", "Shie Mannor", "Louis Wehenkel"], "emails": ["gald@tx.technion.ac.il,", "egilboa@tx.technion.ac.il,", "shie@ee.technion.ac.il", "L.Wehenkel@ulg.ac.be"], "sections": [{"heading": null, "text": "In fact, the fact is that most of them are only a very small group, able to survive on their own, without being able to survive on their own."}, {"heading": "A. Contribution", "text": "In large networks, approximate proxy methods are needed to evaluate costs and reliability while at the same time carrying out long-term planning. We therefore introduce the following concept - learning a proxy to approximate short-term decision outcomes, thereby reducing the dependence of long-term assessment on accurate short-term decision simulations; ergo, which enables a comprehensible assessment method. We use a well-known machine learning algorithm - the classification of the nearest neighbors [5]. We call it UCNN. Therefore, the methodology is based on a simple concept - the creation of a large and varied data set containing samples of the environment and network conditions together with their respective UC solution. Consequently, when evaluating an outage schedule instead of solving the multiple UC problem instances required to simulate the decisions made, we simply choose between the pre-calculated UC solutions selected for the application of the UC solution (a solution with the narrowest UV 151 2V)."}, {"heading": "B. Related work", "text": "The literature contains several papers in which machine learning is used to predict the results of decision-making processes in power grids through solutions for multiple input conditions; such methods are referred to as monitored learning algorithms. We limit our analysis to the problem of generating (re-) planning and reserve activation. In [6] frequency and active power time series are used to determine whether the activation of generator reserve is satisfactory or not. In this application, the manual labeling of data by experts is required, and there are only four possible classes. Reliability is maximized in [7] by learning a function that evaluates the effects of rescheduling. The intended output is a policy that dynamically maps system states to rescheduling measures. Reference [8] uses monitored learning to find recourse strategies in generation management, by learning a training set using Monte Carlo simulation of load generation disturbances, and then observing a similar recourse strategy to deal with them."}, {"heading": "II. UNIT COMMITMENT NEAREST NEIGHBOR CLASSIFICATION", "text": "We begin by defining the exact UC solution; the notations are taken from [4]. In our context, the optimal UC decision u \u0445 p (ys, um) is the solution to the following optimization problem: u \u0445 p (ys, um) = argmin up. Up (um) Cp (ys, um, up), (1) where there is a long-term planning action dictating the topology of the network, e.g. a default plan that determines which assets are offline; Up (um) is the compilation of feasible UC schedules relating to um; Cp is the total cost of UC consisting of generation, startup, wind limitation and load reduction costs; ys is the daily forecast of hourly generation and demand for renewable nodes. We continue to use the following notation C-p (ys, um) = Cp (ys, um, u-p)."}, {"heading": "A. Supervised learning algorithm", "text": "In general, supervised learning in the context of machine learning is the problem of predicting an output value (or designation l) as a function of input (x), based on a learning set {(xj, lj)} nj = 1 consisting of a number of n input-output pairs. In this thesis, x = (ys, um) the input will be an optimization problem in UC, and l = (u, p (ys, um) will be its solution. We will now show how to use a known and popular classification algorithm - the closest neighbor (NN) [12] - to construct a proxy that ignores the need to obtain an accurate MILP solution for (ys, um). Instead, we get approximate solutions (u, p (ys, um), C, p (ys, um)."}, {"heading": "B. Step one - training set generation", "text": "To apply supervised learning, we must first build a large set of pre-solved attachment problems, a process we call the generation of training sets. To do this, we must first generate a set {xj = (yjs, ujm)} nj = 1 from input factors drawn from the expected boundary distribution during the long-term planning process, and solve each of them precisely; i.e., by solution (1) and use (2) obtain their output label lj = (u \u0445 p (y j s, u j m), C \u0445 p (y j s, u j m)."}, {"heading": "C. Step two - definition of features and distance measure", "text": "After the training set has been created, the prediction for each new sample x = (ys, um) is performed to determine the associated designation l (x) = (u-p (x), C-p (x)). In the NN method, this is based on the selection of a distance measurement defined by a selected characteristic space defined by mapping the original input x to a vector \u03c6 (x). In view of the forecast and maintenance plan x = (ys, um), the daily conditions used for the UC problem are 24 hours per bus demand and wind generation forecasts Dd.a (x), where nl is the number of transmission lines x, Wd.a (x), where nl, nw is the number of loads and wind generators and the daily grid topology topd.a (x), the optimization of the grid topology topd.W (x), its meaning (0, 1}, the transmission lines nx, where nx is in the nx and n."}, {"heading": "D. Step three - prediction of outputs for a new sample", "text": "The prediction of the output for a new sample x = (ys, um) is done by first finding the index of the study sample that comes closest to it in the attribute space, namely by calculating NN (x) = argminj \u0442 {1,..., n} |?? (x) \u2212? (xj) |?, and then by setting (u), p (x), p (x), p (x), p (x), p (x), p (x), p (x), p (x)) = lNN (x)."}, {"heading": "III. EXPERIMENTS", "text": "We start by explaining the indicators used in our evaluation method to test the merits of UCNN, and then present our experimental results."}, {"heading": "A. Evaluation methodology", "text": "From the perspective of machine learning, the problem introduced is not a standard classification problem, where an algorithm is assessed by its probability of correctly classifying samples. In our case, naming a sample means selecting the optimal UC schedule for it and, at the same time, predicting the corresponding costs. However, there is no obvious technique for comparing two UC schemes; they are therefore presented in binary matrices, which can vary widely in standard metrics such as Manhattan distance, but are practically identical in terms of operation, depending on the network test and the choice of generator representation. A non-standard evaluation method is therefore required in our setting. To evaluate our UCNN algorithm, we evaluate the quality of its results solely on the cost criterion; for the abbreviation, we misuse notations and specify in C: p (x) the \"exact\" optimal costs from (2) for a day-to-day network condition x. To assess the quality of the UCNN algorithm-cost ratio, we use the CNN algorithm exclusively."}, {"heading": "B. Experimental results", "text": "In fact, it is so that most of them are able to survive themselves, and that they are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...) Most of them are able to survive themselves. (...)"}, {"heading": "C. Additional investigation and further experiments", "text": "Our investigation of UCNN has been broadened in several directions, which we summarize briefly for compactness reasons. First, we experimented with a second test case, IEEE-RTS79, which is similar in spirit to the modifications described in paragraph III. Results show practically identical behavior for both networks in all simulations. In order to achieve the same error-free results as shown in Figures 2 and 3, IEEE-RTS96 required a training set size approximately 2.5 times greater than for IEEE-RTS79. This supports our assertion that larger networks require more recalculation. Second, we compared our method with N-1 safe UC; primarily the difference is in runtime. Adding N-1 constraints results in precise solution times greater in magnitude than the non-N1 case. Therefore, we achieve a run-time improvement of three orders of magnitude by using CNN, which makes the relevance for this case even stronger than the only one we perform in addition to the cost."}, {"heading": "IV. CONCLUSION", "text": "In this paper, we argue that accuracy compared to the runtime trade-off can sometimes not be solved by focusing exclusively on the former. We use the power of machine learning and present the notion of a proxy - a mechanism that approximates short-term results of decision-making in a hierarchical setting, thereby facilitating a comprehensible evaluation methodology. The potential overall increase in CPU time is the fundamental advantage of this method when used in the context of long-term evaluation / control applications. This gain is essentially composed of the ratio between the total number of UC programs to be solved in the long-term evaluation process and the size of the UCNN training set. As shown in [4], the required number of UC solutions can be greater or greater in magnitude than the training sets used in Section III, resulting in an immense CPU time acceleration. Even if efficient data structures such as treadle search are subjected to the Nx1000 metric problem, but the need to implement the entire Nx1000 metric component is subjected to the Nxit."}, {"heading": "I. EXACT UNIT COMMITMENT FORMULATION", "text": "In the case of DC current flows, the reactive potentials are to be derived from the problem and the real current flows. (1) The exact standard definition of the problem is as follows: u \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S.\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S. S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S\" S \"S."}, {"heading": "II. TEST-CASE MODIFICATIONS", "text": "The IEEE RTS-79 and IEEE RTS-96 test cases used in this thesis have been slightly modified to create several \"bottlenecks\" in the networks, thus creating conditions for a variant series of UC planning costs and reliability levels with relatively short simulation time. Fig.1 illustrates the network modifications and the selection of considered failures for the IEEE-RTS79 network. The same modifications and failures have been replicated for each of the three identical zones of the IEEE-RTS96 network and are not explicitly listed for reasons of brevity. In addition, failures in three transmission lines between the three zones of IEEE-RTS96 have also been considered. IEEE-RTS79 network modifications include: 1) removal of the transmission line between bus 1 and 2. 2) shifting the loads from buses 1 and 2 to buses 4."}, {"heading": "III. DAILY CONDITIONS DISTRIBUTIONS", "text": "The generation of the training and test kits involves a sampling procedure of the UC inputs x from a certain distribution PX (x). We sample the daily wind energy Wd.a, the daily load Dd.a and the daily network topology topd.a. Provided details of the models used for these probable processes are provided, together with the data underlying them.1) Wind energy distribution: Wind energy capacities are taken from [3], together with their daily mean value profile. The wind process means that \u00b5w (t) by the formula \u00b5w (t) = \u00b5w (tD) \u00b7 pw, annually (tM), where the wind energy capacities are taken from [3], together with their daily mean value profile from the time of day tD, and pw, yearly (tM), the annual wind energy profile is relative to its peak value in the month tM of the year, with the wind energy deviation from the daily wind capacity (M) being the daily average wind capacity (D)."}], "references": [{"title": "Matpower: Steady-state operations, planning, and analysis tools for power systems research and education", "author": ["R.D. Zimmerman", "C.E. Murillo-S\u00e1nchez", "R.J. Thomas"], "venue": "Power Systems, IEEE Transactions on, vol. 26, no. 1, pp. 12\u201319, 2011.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Renewable energy analysis lab", "author": ["E.E.D. University of Washington"], "venue": "http://www.ee.washington.edu/research/real/library.html.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 0}], "referenceMentions": [{"referenceID": 1, "context": "[1]\u2013[3].", "startOffset": 4, "endOffset": 7}], "year": 2016, "abstractText": "We devise the Unit Commitment Nearest Neighbor (UCNN) algorithm to be used as a proxy for quickly approximating outcomes of short-term decisions, to make tractable hierarchical long-term assessment and planning for large power systems. Experimental results on an updated version of IEEE-RTS96 show high accuracy measured on operational cost, achieved in runtimes that are lower in several orders of magnitude than the traditional approach.", "creator": "LaTeX with hyperref package"}}}