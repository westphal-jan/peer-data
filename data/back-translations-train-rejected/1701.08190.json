{"id": "1701.08190", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jan-2017", "title": "Comparative Study Of Data Mining Query Languages", "abstract": "Since formulation of Inductive Database (IDB) problem, several Data Mining (DM) languages have been proposed, confirming that KDD process could be supported via inductive queries (IQ) answering. This paper reviews the existing DM languages. We are presenting important primitives of the DM language and classifying our languages according to primitives' satisfaction. In addition, we presented languages' syntaxes and tried to apply each one to a database sample to test a set of KDD operations. This study allows us to highlight languages capabilities and limits, which is very useful for future work and perspectives.", "histories": [["v1", "Fri, 27 Jan 2017 21:00:19 GMT  (382kb)", "http://arxiv.org/abs/1701.08190v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB", "authors": ["mohamed anis bach tobji"], "accepted": false, "id": "1701.08190"}, "pdf": {"name": "1701.08190.pdf", "metadata": {"source": "CRF", "title": "COMPARATIVE STUDY OF DATA MINING QUERY LANGUAGES", "authors": ["Mohamed Anis Bach Tobji"], "emails": [], "sections": [{"heading": null, "text": "Since the problem of the Inductive Database (IDB) was formulated, several Data Mining (DM) languages have been proposed, which confirm that the KDD process could be supported by answering inductive questions (IQ). In this paper, the existing DM languages are reviewed. We present important primitives of the DM language and classify our languages according to primitive satisfaction criteria. In addition, we presented language syntax and tried to apply each one to a database sample in order to test a series of KDD operations. This study allows us to demonstrate language skills and boundaries, which is very useful for future work and perspectives."}, {"heading": "KEYWORDS", "text": "Knowledge discovery from databases, inductive databases, data mining languages."}, {"heading": "1. INTRODUCTION", "text": "IDB is a new generation of databases introduced in (Imielinski and Mannila, 1996) as a framework of KDD (Fayyad et al., 1996). An inductive database contains data and patterns that are extracted from it. Databases are generally supported by the SQL language, but IDBs are supported by a DM Query Language that enables KDD operations (mainly data selection, data preprocessing, pattern mining and pattern retrieval). However, the development of a theoretical framework is interesting and has been the subject of much research (Boulicaut et al., 1999), (De Raedt, 2003), (Dan Lee and De Raedt, 2003), (De Raedt et al., 2004). However, there is no clear definition or formalization, e.g. an algebra language that could be a basis for a standard DM query language. Indeed, the KDD community would replicate the success of QL languages based on Midd, Codd and Cocras in 1970."}, {"heading": "2. INDUCTIVE QUERY LANGUAGE PRIMITIVES", "text": "Data Mining Query Language Primitive definition is a basic problem. Once primitives are defined, designing a good DM Query Language becomes easier. In this section, we give the primitives as defined in (Han and Kamber, 2000), (Botta et al, 2004), and Language Works (Imielinski et al, 1999), (Meo et al, 2002), (Han et al, 1996), (Morzy and Zakrzewic, 1997), (Netz et al, 2000), and (Elfeky et al, 2000). A Data Mining Query Language must offer the following: - Data selection: It is naturally satisfied when the language SQL nests. Language must request data. - Pre-processing task: Providing pre-processing operations (sampling, discrediting, data cleansing, etc.) - Specification of background knowledge: Queriery Patterns: Background knowledge about data mining, which is the most specific application of the Qain, the result of which is:"}, {"heading": "3. THE COMPARATIVE TABLE", "text": "In this section, we will examine six DM query languages. We will present these languages according to a series of properties that correspond to the primitives defined in the previous section. Thus, we classify the languages in a table so that rows correspond to the properties and columns to the languages. Each cell (crossing of a property Pi and a language Lj) is the satisfaction level of the property Pi by the language Lj (see Table 1). Table 1 consists of two parts. In the first, each language is described in general (language authors, design, year, etc.) In the second part, we will present the functionalities provided by each language as explained above."}, {"heading": "4. DATA MINING QUERY LANGUAGES IN ACTION", "text": "In this section, we will examine the possibilities of DM query languages and present the syntax of each language. In addition, we have provided a database example about the sale of supermarkets (see Table 2) and tried to write some queries to perform KDD operations that reverse the DM step, mainly to extract association rules, since their removal is provided by all languages."}, {"heading": "4.1. MSQL", "text": "MSQL has four main queries: - Create Encoding: This query allows you to discredit continuous attributes. - This query allows you to create association rules stored in a suitable table. - SelectRules: This query allows you to select association rules. - This is very important for following up on thematic patterns. - We are satisfied with these operators that allow an overlap between data and association rules."}, {"heading": "BEGIN", "text": "(MIN, 499.1), (500,599.2), (600,699.3), (700,799.4), (800, MAX, 5), 0 END; Association Rules Mining In this step, we want to reduce Association Rules with the following form: Individual Revenue. Association Rules Support and Trust are set at 2 or 0.5, respectively. To accomplish this task, we write this MSQL query: GETRULES (TRANSACTION _ VIEW) IN TRANSACTION _ RB WO BODY {(A = 1) OR (B = 1) OR (C = 1)} ANDCONFUENT IS {(INCOME = *)} AND SUPORT > 2 AND CONFIDENCE > = 0,5"}, {"heading": "USING DSCRT_INCOME FOR INCOME;", "text": "The resulting association rules are stored in table transaction _ rb (see table 4). Post-processing In this step, we try to cross data and patterns mined in the previous step, provided we want to extract data that violates all association rules and whose bodies have point A; this is the appropriate query: INSERT INTO CROSS _ OVER AS SELECT * FROM TRANSACTION _ VIEW WHERE VIOLATES ALL (SELECTRULES (TRANSACTION _ RB) WHERE BODY HAS {(A = 1)}); Table CROSS _ OVER is composed of transactions t2, t4, t5, t9 and t10; these tuples violate rule A in the body. Rules with bodies that are not contained in any other rules that have the same head. SELECTRULES _ OVER consists of transactions tA, t9, t4 and t9."}, {"heading": "4.2. DMQL", "text": "DMQL defines an association rule as a relationship between two predicate sets. In a predicate P (X, v) P is an attribute, X is a variable, and v is a value that belongs to the attribute domain. Therefore, the ABCD association rule is equivalent to item (X, A) ^ item (X, B) item (X, C) ^ item (X, D).The most important DMQL query allows mining patterns. Here we present their syntax: USE DATABASE (DATABASE _ NAME) {USE HIERARCHY (HIERARCHY _ NAME) FOR (ATTRIBUTE)} FIND ASSOCIATIONS [AS (RULE _ NAME)] FROM (RELATION (S)) [WHERE (CONDITION _ NAME) FOR (ORDER _ LIST) {AS (RULE _ NAME)] FIND ASSOCIATIONS [AS (RULE _ NAME)] FROM (RELATION (S _ NAME)) [WHERE (CONDITION _ NAME) FOR (ORDER _ LIST) {DATE _ SHUTTRED _ SHUTTH = THUD _ SHUD) rule."}, {"heading": "Illustration", "text": "In this section we try to repeat the same operations performed for MSQL. Pre-processing With DMQL it is possible to discredit continuous attributes by querying the concept hierarchy: DEFINE HIERARCHY INCOME _ HIERARCHY FOR INCOME ON TRANSACTION AS LEVEL1: {MIN... 499} $< $LEVEL0: ALL LEVEL1: {500... 599} $< $LEVEL0: ALL LEVEL1: {600... 699} $< $LEVEL0: ALL LEVEL1: {700... 799} $< $LEVEL0: ALL LEVEL1: {800... 599} $< $LEVEL1: {600... 699} $< $LEVEL0: ALL LEVEL1: {700... 799} < ALL LEVEL1: {LEVELLEVEL1}: {1}"}, {"heading": "WITH SUPPORT THRESHOLD=25% WITH CONFIDENCE THRESHOLD=50%;", "text": "In metapaterns, symbol \"+\" means that we are looking for rules whose bodies consist of one or more elements. In Table 5 we present association rules that are extracted by the previous query. We distinguish three tables: the right, the middle and the left side are each used to represent rule heads, rules bodies and relationships between the two set of rules tables. Post-processing DMQL does not provide a cross-over query. Post-processing operations are feasible via SQL query tables. Theses queries are very complex, it is not explicit for beginners SQL users.We have tried to write queries (1) that violate all rules that select the element in their bodies and (2) that select all maximum rules. We have tried to simplify queries, but the result remains complex for novice SQL users."}, {"heading": "4.3. MINE RULE", "text": "MINE RULE is another DM Query Language. Its main query syntax is the following: MINE RULE < RULETABLENAME > AS SELECT DISTINCT [< CARDSPEC >] < ATTRBLIST > AS BODY, [< CARDSPEC >] < ATTRBLIST > AS HEAD [, SUPPORT] [WHERE < WHERECLAUSE >] FROM < FROMLIST > [WHERE < WHERECLAUSE >] GROUP BY < ATTRBLIST > et claube > [HAVING < HAVINGCLAUSE > PLES >] [CLUSTER BY < ATTRBLIST > [HAVINGLAUSE < GUMCLUSE] > EXTLES >."}, {"heading": "Illustration", "text": "We illustrate MINE RULE for the same data mining operations that were performed in the previous language sections. Pre-processing of the data selection is possible because MINE RULE SQL nests. However, MINE RULE does not offer a discrediting operator. Discretion is done via the SQL function TRUNC (Income, 2), which rounds up income values. For example, incomes correspond to between 500 and 599,500. Association rule Mining We formulate the corresponding MINE RULE query that the rules of the mine association exceed the offered threshold of 25% and the confidence threshold of 50%, and with bodies consisting of items and head of income. MINE RULE TRANSACTION _ RB AS SELECT DISTINCT 1.. N ITTINCT AS BODY, 1.. 1 TRUNC (INCOME, 2) HEONPROPROPROPOMER = STUSTENTCOMENT."}, {"heading": "4.4. MineSQL", "text": "MineSQL is an SQL extension for data mining in relational databases. MineSQL queries mainly target mine association rules and also extract characteristic rules. Language provides a new data type called RULE, which is used to store and manage rules. An attribute of type RULE has four components: body elements, set of header elements, and trust values. There are also several functions of type RULE, such as support (r), trust (r), body (r), which returns the support and body of the rule. There are also two operators that allow SATISFIED BY and VIOLATED BY to cross-over between data and patterns."}, {"heading": "Illustration", "text": "We perform the same data mining operations via MineSQL queries. Pre-processingLike DMQL and MINE RULE, MineSQL doesn't offer discrediting query, but discrediting can be done by specifying hierarchies (or taxonomy, as some authors call it). CREATE INCOME _ HIERARCHY (NODE \"AGE _ DSCT,\" LEAF [MIN... 499] REFERENCE 1, LEAF [500... 599] REFERENCE 2, LEAF [600... 699] REFERENCE 3, LEAF [700...] REFERENCE 4, REFERENCE 4, LEB] REFERENCE [800... REFERENCE 5] REN RENT RENT RENT RENT RENT RENT RENT RENT REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN REN"}, {"heading": "4.5. DMX", "text": "In fact, most people are able to decide for themselves what they want and what they want."}, {"heading": "4.6. ODMQL", "text": "The data mining language supports the specification of four rule types: characteristic rules, discrimination rules, classification rules and association rules. The set of relevant data is specified by the WITH RELEVANCE TO clause. ODMQL also supports specifying some types of thresholds according to the mining rule type and allows the user to define conception hierarchies for the attributes of the scheme. Conceptual hierarchies could be created, modified and dropped. The general syntax of ODMQL queries (mining rules and processing concepts) is the following: MINE FOR < rule _ specification > WITH RELEVANCE TO < QS _ Attributes > FROM < variable _ declaration > IltL."}, {"heading": "5. DISCUSSION", "text": "The goal is to reflect on the achievements and limitations of the state of the art. We realize that these are the only languages in which man is able to hide. In these processes, there is also a need for sampling techniques, errors and missteps related to the processing of data. The step that follows the processing of data is that of all languages. All of them focus on mining patterns of Dataset, DMQL and ODMQL offer different types of patterns that play an important role."}], "references": [{"title": "Query Languages Supporting Descriptive Rule Mining : a Comparative Study. In Database Technologies for Data Mining - Discovering Knowledge with", "author": ["M. Botta", "Boulicaut", "J-F", "C. Masson", "R Meo"], "venue": "Inductive Queries,", "citeRegEx": "Botta et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Botta et al\\.", "year": 2004}, {"title": "Modeling KDD processes within the inductive database", "author": ["Boulicaut", "J-F", "M. Klemettinen", "H. Mannila"], "venue": "Proceedings of the 1st International Conference on Data Warehousing and Knowledge Discovery", "citeRegEx": "Boulicaut et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Boulicaut et al\\.", "year": 1999}, {"title": "A Relational Model of Data for Large Shared Data", "author": ["E. Codd"], "venue": "Banks, 1970. ACM", "citeRegEx": "Codd,? \\Q1970\\E", "shortCiteRegEx": "Codd", "year": 1970}, {"title": "An Algebra for Inductive Query Evaluation", "author": ["S. Dan Lee", "L De Raedt"], "venue": "In Proceedings of the 2nd Workshop on Knowledge Discovery in Inductive Database (KDID\u201f03)", "citeRegEx": "Lee and Raedt,? \\Q2003\\E", "shortCiteRegEx": "Lee and Raedt", "year": 2003}, {"title": "A Theory of Inductive Query Answering", "author": ["L. Raedt", "M Jaeger", "S. Dan Lee", "H Mannila"], "venue": "In Second IEEE International Conference on Data Mining (ICDM'02),", "citeRegEx": "Raedt et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Raedt et al\\.", "year": 2002}, {"title": "ODMQL: Object Data Mining Query Language", "author": ["Elfeky", "M-G", "Saad", "A-A", "Fouad S-A"], "venue": "Lecture Notes in Computer Science 1944 (LNCS),", "citeRegEx": "Elfeky et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Elfeky et al\\.", "year": 2000}, {"title": "From Data Mining to Knowledge Discovery: An Overview", "author": ["U. Fayyad", "G. Piatetsky-Shapiro", "P Smyth"], "venue": "Advances in Knowledge Discovery and Data Mining,", "citeRegEx": "Fayyad et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Fayyad et al\\.", "year": 1996}, {"title": "Data Mining: The Next 10 Years", "author": ["U. Fayyad", "G. Piatetsky-Shapiro", "R Uthurusamy"], "venue": "SIGKDD Explorations,", "citeRegEx": "Fayyad et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Fayyad et al\\.", "year": 2003}, {"title": "DMQL : A Data Mining Query Language for Relational Databases", "author": ["J. Han", "Y. Fu", "W. Wang", "K. Koperski", "O Zaiane"], "venue": "Proc. ACM SIGMOD Workshop DMKD\u201f96,", "citeRegEx": "Han et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Han et al\\.", "year": 1996}, {"title": "DBMiner : A System for Data Mining Knowledge in Large Relational Databases", "author": ["J. Han", "Y. Fu", "J. Wang", "W. Chiang", "K. Gong", "K. Koperski", "D. Li", "Y. Lu", "A. Rajan", "N. Stefanovic", "B. Xia", "O Za\u00efane"], "venue": "Proceedings of International Conference on Knowledge Discovery in Databases and Data mining (KDD\u201f96),", "citeRegEx": "Han et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Han et al\\.", "year": 1996}, {"title": "Data Mining : Concepts and Techniques", "author": ["J. Han", "M Kamber"], "venue": null, "citeRegEx": "Han and Kamber,? \\Q2000\\E", "shortCiteRegEx": "Han and Kamber", "year": 2000}, {"title": "The Molecular Feature Miner MOLFEA", "author": ["C. Helma", "S. Kramer", "L De Raedt"], "venue": "Proceedings of the Beilstein Workshop", "citeRegEx": "Helma et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Helma et al\\.", "year": 2002}, {"title": "A database perspective on knowledge discovery", "author": ["T. Imielinski", "H Mannila"], "venue": "Communications of the ACM,", "citeRegEx": "Imielinski and Mannila,? \\Q1996\\E", "shortCiteRegEx": "Imielinski and Mannila", "year": 1996}, {"title": "MSQL : A Query Language for Database Mining", "author": ["T. Imielinski", "A Virmani"], "venue": "Data Mining and Knowledge Discovery,", "citeRegEx": "Imielinski and Virmani,? \\Q1999\\E", "shortCiteRegEx": "Imielinski and Virmani", "year": 1999}, {"title": "Constraint-Based Discovery and Inductive Queries: Application to Association Rule Mining", "author": ["B. Jeudy", "Boulicaut", "J-F"], "venue": "In Proceedings of the European Science Foundation Exploratory Workshop on Pattern Detection and Discovery in Data", "citeRegEx": "Jeudy et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Jeudy et al\\.", "year": 2002}, {"title": "The Development of the Inductive Database System VINLEN: A Review of Current Research", "author": ["K. Kaufman", "Michalski", "R-S"], "venue": "Intelligent Information Systems,", "citeRegEx": "Kaufman et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Kaufman et al\\.", "year": 2003}, {"title": "A New SQL-like Operator for Mining Association Rules", "author": ["R. Meo", "G. Psaila", "S Ceri"], "venue": "In Proc", "citeRegEx": "Meo et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Meo et al\\.", "year": 1996}, {"title": "SQL-Like Language for Database Mining.In 1st International Conference on Advances in Databases and Information Systems, St. Petersburg", "author": ["T. Morzy", "M Zakrzewicz"], "venue": null, "citeRegEx": "Morzy and Zakrzewicz,? \\Q1997\\E", "shortCiteRegEx": "Morzy and Zakrzewicz", "year": 1997}, {"title": "Integration of Data Mining and Relational Databases", "author": ["A. Netz", "S. Chaudhuri", "J. Bernhardt", "U Fayyad"], "venue": "In Proc", "citeRegEx": "Netz et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Netz et al\\.", "year": 2000}, {"title": "Towards constrained co-clustering in ordered 0/1 data sets", "author": ["R. Pensa", "C. Robardet", "Boulicaut", "J-F"], "venue": "Proceedings of the 16th International Symposium on Methodologies for Intelligent Systems ISMIS'06,", "citeRegEx": "Pensa et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Pensa et al\\.", "year": 2006}, {"title": "Data Mining with SQL SERVER 2005. Wiley Publishing, Inc, Indianapolis", "author": ["Tang", "Z-H", "J MacLennan"], "venue": null, "citeRegEx": "Tang et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2005}], "referenceMentions": [{"referenceID": 12, "context": "IDB is a new generation of databases introduced in (Imielinski and Mannila, 1996) as a framework of KDD (Fayyad et al, 1996).", "startOffset": 51, "endOffset": 81}, {"referenceID": 2, "context": "In fact, the KDD community would reproduce the success of SQL based on Codd\u201fs algebra (Codd, 1970).", "startOffset": 86, "endOffset": 98}, {"referenceID": 13, "context": "In this section we give the primitives as defined in (Han and Kamber,2000), (Botta et al, 2004), and languages papers (Imielinski and Virmani, 1999), (Meo et al, 2002), (Han et al,1996), (Morzy and Zakrzewic, 1997), (Netz et al,2000) and (Elfeky et al, 2000).", "startOffset": 118, "endOffset": 148}], "year": 2017, "abstractText": "Since formulation of Inductive Database (IDB) problem, several Data Mining (DM) languages have been proposed, confirming that KDD process could be supported via inductive queries (IQ) answering. This paper reviews the existing DM languages. We are presenting important primitives of the DM language and classifying our languages according to primitives\u201f satisfaction. In addition, we presented languages\u201f syntaxes and tried to apply each one to a database sample to test a set of KDD operations. This study allows us to highlight languages capabilities and limits, which is very useful for future work and perspectives.", "creator": "Microsoft\u00ae Word 2010"}}}