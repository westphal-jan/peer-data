{"id": "1701.08466", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jan-2017", "title": "Predicting SMT Solver Performance for Software Verification", "abstract": "The Why3 IDE and verification system facilitates the use of a wide range of Satisfiability Modulo Theories (SMT) solvers through a driver-based architecture. We present Where4: a portfolio-based approach to discharge Why3 proof obligations. We use data analysis and machine learning techniques on static metrics derived from program source code. Our approach benefits software engineers by providing a single utility to delegate proof obligations to the solvers most likely to return a useful result. It does this in a time-efficient way using existing Why3 and solver installations - without requiring low-level knowledge about SMT solver operation from the user.", "histories": [["v1", "Mon, 30 Jan 2017 03:32:24 GMT  (104kb,D)", "http://arxiv.org/abs/1701.08466v1", "In Proceedings F-IDE 2016,arXiv:1701.07925"]], "COMMENTS": "In Proceedings F-IDE 2016,arXiv:1701.07925", "reviews": [], "SUBJECTS": "cs.SE cs.LG cs.LO", "authors": ["andrew healy", "rosemary monahan", "james f power"], "accepted": false, "id": "1701.08466"}, "pdf": {"name": "1701.08466.pdf", "metadata": {"source": "CRF", "title": "Predicting SMT Solver Performance for Software Verification", "authors": ["Andrew Healy", "Rosemary Monahan", "James F. Power"], "emails": ["ahealy@cs.nuim.ie", "rosemary@cs.nuim.ie", "jpower@cs.nuim.ie"], "sections": [{"heading": null, "text": "C. Dubois, P. Masci, D. Me'ry (ed.): F-IDE 2016 EPTCS 240, 2017, pp. 20-37, doi: 10.4204 / EPTCS.240.2c \u00a9 A. Healy, R. Monahan & J. F. Power This work is licensed under the Creative Commons Attribution License.Predicting SMT Solver Performance for Software VerificationAndrew Healy Rosemary Monahan James F. Power Dept. of Computer Science, Maynooth, Irlandahealy @ cs.nuim.ie rosemary @ cs.nuim.ie jpower @ cs.nuim.ieThe Why3 IDE and Verification System enables the use of a wide range of Modulo Theories (SMT) solvers through a driver-based architecture. We present Where4: a portfolio-based approach to fulfilling Why3 evidentiary obligations. We use data analysis and machine learning techniques to derive the highest possible knowledge from the source code."}, {"heading": "1 Introduction", "text": "This year, it has reached the stage where it will be able to take the lead."}, {"heading": "2 System Overview and Data Preparation", "text": "Due to the wide range of input languages used by software verification systems, a standardized benchmark repository of verification programs does not yet exist [8]. For our study, we chose the 128 sample programs included in the Why3 distribution (version 0.87.1) as our corpus for training and testing purposes. The programs in this repository are written in WhyML, a dialect of ML with additional specification syntax and verified libraries. Many of the programs are solutions to problems encountered in software verification contests such as VerifyThis [12], VSTTE [26] and COST [14]. Other programs are implementations of benchmarks proposed by the VACID-0 initiative [29]. It is our assumption that these programs represent representative software verification work, such as VerifyThis [12], VSTTE [26] and other VACTE [14] initiatives proposed by the VACID."}, {"heading": "2.1 Problem Quantification: predictor and response variables", "text": "Two sets of data must be collected within the framework of supervised machine learning [31]: the independent / predictor variables used as input for both training and testing phases, and the dependent / response variables 1The latest version - 201506 - is not officially supported by Why3, but is the only version available 2We did not use Yices2 because its lack of quantifier support makes it unsuitable for software verifications that correspond to the basics during training. Of the 128 programs in our data set, 25% were held back for system evaluation (Section 5), and the remaining 75% (96 WhyML programs, 768 targets) were used for training and 4-fold cross-validation."}, {"heading": "2.1.1 Independent/Predictor Variables", "text": "Fig. 2 lists the predictor variables used in our study, all of which are (integer) indicators that can be calculated by analyzing a Why3 proof obligation and are similar to the syntax metadata category for evidentiary obligations in TPTP format [34]. To construct a feature vector from each task sent to the solvers, we traverse the abstract syntax tree (AST) for each target and each lemma, counting the number of each syntactical characteristic we find along the way. We focus on targets and lemmas as they generate evidential obligations, with axioms and predicates providing a logical context. In this respect, our feature extraction algorithm bears similarities to the method used by Why3 to calculate targets [11]. These form strings are used internally by Why3 as an identifying fingerprint."}, {"heading": "2.1.2 Dependent/Response Variables", "text": "Our assessment of a solver's performance depends on two factors: the time it takes to calculate this result, and whether the solver has actually achieved the goal. To measure the time it takes each solver to find an answer, we have used a measurement system specifically designed for use in competitive environments, the Benchexec [9] framework was developed by the organizers of SVCOMP. To account for accidental errors in execution, we have recorded the CPU time, time and memory requirements of the software verification tools."}, {"heading": "3 Choosing a prediction model", "text": "Given a Why3 target, a ranking of solvers can be achieved by sorting the costs for each solver. In invisible cases, two approaches of prediction can be used: (1) classification - predicting the final ranking directly - and (2) regression - predicting the results of each solver individually and deriving a ranking from these predictions. With eight solvers, there are 8! possible rankings. Many of these rankings have been observed very rarely or did not appear at all in the training data. Such an unbalanced dataset is not suitable for accurate classification, which leads us to track the regression. Seven regression models have been evaluated. (3) Linear regression, Ridge regression, K-Nearest Neighbors, Decision Trees, Random Forests (with and without discretion) and the regression variant."}, {"heading": "3.1 Evaluating the prediction models", "text": "The second numeric column of Table 2 shows the normalized discredited cumulative gains (nDCG) commonly used to evaluate the accuracy of rankings in the domains of the search engine and the e-commerce recipient system [24]. Here, emphasis is placed on correctly predicting positions that are higher in the ranking order. For a general ranking of length p, it is formulated as: nDCGp = DCGp IDCGp system domains in which DCGp = p-1 2reli \u2212 1 log2 (i + 1) Here, reli refers to the relevance of the element i in relation to a ranking of length p, and we take the relevance of each solver in relation to its ranking index."}, {"heading": "3.2 Discussion: choosing a prediction model", "text": "This year, it is closer than ever before in the history of the country."}, {"heading": "5 Evaluating Where4\u2019s performance on test data", "text": "The evaluation of Where4 is based on a test set of 32 WhyML files, 77 theories, 263 goals (which represent 25% of the total record set). < A > S \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s. \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \""}, {"heading": "5.4 Threats to Validity", "text": "We categorize threats as either internal or external threats. Internal threats refer to influences that can affect the response variable without the researcher's knowledge and endanger the conclusions about the cause of the experimental results [37]. Threats to external validity are conditions that limit the generalizability and reproducibility of an experiment."}, {"heading": "5.4.1 Internal", "text": "The biggest threat to the internal validity of our work is the selection bias. All of our training and testing samples come from the same source. We have taken care to share the data on a file basis for training and testing purposes, ensuring that Where4 was not trained on a target that belongs to the same theory or file as any other target used for testing. The results of executing the solvers on our dataset are unbalanced, there were far more valid answers than any other answer. No target in our dataset provided an answer from Invalid to any of the 8 solvers. This is a serious problem, as Where4 would not be able to detect such a target in real-world use. In future work, we hope to use the TPTP benchmark library to address these issues. Benchmarks in this library come from a diverse range of contributors who work in numerous problem areas [35] and are not as specific to the Why3 suite of software examples."}, {"heading": "5.4.2 External", "text": "The generalisability of our results is limited by the fact that all dependent variables were measured on a single machine.4 We believe that the number of individual responses for each solver on a different machine with similar specifications would not vary dramatically. By examining the results if each solver was given a 60-second time span (Fig. 3), the rate of increase for valid / invalid results was much lower than that for unknown / failure outcomes. Previous results are more important for calculating the cost value for each solution target pairing. Timings of individual targets are likely to vary widely (even between independent versions on the same machine), and we assume that although the actual time values on each other machine would be quite different, the order of their timings would remain relatively stable. A \"typical\" software development scenario could involve a user verifying a single file with a small number of resulting targets: certainly much smaller than the size of our test set (263) would be better suited to such a setting of four."}, {"heading": "5.5 Discussion", "text": "By looking at the responses to our three evaluation criteria, we can make claims about the success of Where4. The response to EC1, Where4 \"s performance compared to individual SMT solvers is positive. Indeed, a small improvement in valid / invalid responses results from the use of only the top-rated solver, while a much larger increase can be seen by making the full ranking of solvers available for use. The time penalty associated with calling a number of solvers for an undetectable burden of proof is mitigated by the use of a cost threshold. Careful use of this threshold can offset the time-consuming trade-off: in our test set of 263 POs, the use of a threshold of 7 results in 192 valid answers - an increase of 15 over the single best solver - in a reasonable average time per PO (both valid and otherwise)."}, {"heading": "6 Comparison with Related Work", "text": "The need for a standard set of benchmarks for the various software systems is a recurring problem in the literature [8]. The benefits of such a benchmark suite are identified by the SMTLIB project. [9] The performance of SMT solvers has improved significantly in recent years, including the standardization of an input language and the use of standard benchmark programs in competitions. [9] The TPTP library has similar goals, but a wider range of theory subjects specializing in numerical problems, as well as the use of general SAT solvers. [9] The TPTPTP library was developed specifically for the rigorous subject."}, {"heading": "7 Conclusion and Future Work", "text": "Users without knowledge of SMT solvers can demonstrate a greater number of goals in a shorter time by delegating to Where4 than by randomly selecting solvers. Although some of the results of Where4 are disappointing, we believe that the Why3 platform has great potential for machine learning-based portfolio solutions. We are encouraged by the performance of a theoretical best strategy and the convenience such a tool would offer Why3 users. The number of potential instructions for this work is large: parallel solutions, minimal datasets for practical local training, larger and more general datasets for increased generalizability, and so on. The TPTP repository represents a great source of evidentiary duties that can be translated into the local language Why. The number of goals detectable by Where4 could be increased by identifying which goals need to be simplified in order to be transferable for an SMT solver."}], "references": [{"title": "SUNNY-CP: A Sequential CP Portfolio Solver", "author": ["Roberto Amadini", "Maurizio Gabbrielli", "Jacopo Mauro"], "venue": "ACM Symposium on Applied Computing,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2015}, {"title": "Boogie: A Modular Reusable Verifier for Object-Oriented Programs", "author": ["Mike Barnett", "Bor-Yuh Evan Chang", "Robert DeLine", "Bart Jacobs", "K. Rustan M. Leino"], "venue": "Formal Methods for Components and Objects: 4th International Symposium,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "The Spec# Programming System: An Overview. In: Construction and Analysis of Safe, Secure and Interoperable Smart devices", "author": ["Mike Barnett", "K. Rustan M. Leino", "Wolfram Schulte"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "The Satisfiability Modulo Theories Library (SMT-LIB). Available at http://www.smt-lib.org", "author": ["Clark Barrett", "Aaron Stump", "Cesare Tinelli"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "Status Report on Software Verification. In: Tools and Algorithms for the Construction and Analysis of Systems, Grenoble, France", "author": ["Dirk Beyer"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Evaluating Software Verification Systems: Benchmarks and Competitions (Dagstuhl Reports 14171)", "author": ["Dirk Beyer", "Marieke Huisman", "Vladimir Klebanov", "Rosemary Monahan"], "venue": "Dagstuhl Reports", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Benchmarking and Resource Measurement. In: Model Checking Software - 22nd International Symposium, SPIN 2015, Stellenbosch", "author": ["Dirk Beyer", "Stefan L\u00f6we", "Philipp Wendler"], "venue": "South Africa,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Urban (2016): A Learning-Based Fact Selector for Isabelle/HOL", "author": ["Jasmin Christian Blanchette", "David Greenaway", "Cezary Kaliszyk", "Daniel K\u00fchlwein", "Josef"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2016}, {"title": "Preserving User Proofs across Specification Changes", "author": ["Fran\u00e7ois Bobot", "Jean-Christophe Filli\u00e2tre", "Claude March\u00e9", "Guillaume Melquiond", "Andrei Paskevich"], "venue": "5th International Conference,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Let\u2019s verify this with Why3", "author": ["Fran\u00e7ois Bobot", "Jean-Christophe Filli\u00e2tre", "Claude March\u00e9", "Andrei Paskevich"], "venue": "International Journal on Software Tools for Technology Transfer", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "A survey on multi-output regression", "author": ["Hanen Borchani", "Gherardo Varando", "Concha Bielza", "Pedro"], "venue": "Larranaga", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "The COST IC0701 Verification Competition", "author": ["Thorsten Bormer", "Marc Brockschmidt", "Dino Distefano", "Gidon Ernst", "Jean-Christophe Filli\u00e2tre", "Radu Grigore", "Marieke Huisman", "Vladimir Klebanov", "Claude March\u00e9", "Rosemary Monahan", "Wojciech Mostowski", "Nadia Polikarpova", "Christoph Scheben", "Gerhard Schellhorn", "Bogdan Tofan", "Julian Tschannen", "Mattias Ulbrich"], "venue": "Formal Verification of Object-Oriented Software,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "veriT: An Open, Trustable and Efficient SMT-Solver", "author": ["Thomas Bouton", "Diego Caminha B. de Oliveira", "David D\u00e9harbe", "Pascal Fontaine"], "venue": "In: 22nd International Conference on Automated Deduction,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "The Alt-Ergo automatic theorem prover. Available at http: //alt-ergo.lri.fr", "author": ["Sylvain Conchon", "\u00c9velyne Contejean"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2008}, {"title": "Empirical Software Metrics for Benchmarking of Verification Tools", "author": ["Yulia Demyanova", "Thomas Pani", "Helmut Veith", "Florian Zuleger"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "The Yices SMT Solver. Available at http://yices.csl. sri.com/papers/tool-paper.pdf", "author": ["Bruno Dutertre", "Leonardo de Moura"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2006}, {"title": "2016): Rodin Platform Why3 Plug-In", "author": ["Alexei Iliasov", "Paulius Stankaitis", "David Adjepon-Yamoah", "Alexander Romanovsky"], "venue": "ABZ", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2016}, {"title": "IR Research: Systems, Interaction, Evaluation and Theories", "author": ["Kalervo J\u00e4rvelin"], "venue": "SIGIR Forum 45(2),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2012}, {"title": "Learning-Assisted Automated Reasoning with Flyspeck", "author": ["Cezary Kaliszyk", "Josef"], "venue": "Journal of Automated Reasoning", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2014}, {"title": "The 1st Verified Software Competition: Experience Report", "author": ["Vladimir Klebanov", "Peter M\u00fcller", "Natarajan Shankar", "Gary T. Leavens", "Valentin W\u00fcstholz", "Eyad Alkassar", "Rob Arthan", "Derek Bronish", "Rod Chapman", "Ernie Cohen", "Mark Hillebrand", "Bart Jacobs", "K. Rustan M. Leino", "Rosemary Monahan", "Frank Piessens", "Nadia Polikarpova", "Tom Ridge", "Jan Smans", "Stephan Tobies", "Thomas Tuerk", "Mattias Ulbrich", "Benjamin Wei\u00df"], "venue": "FM 2011: 17th International Symposium on Formal Methods,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2011}, {"title": "Machine Learning in Proof General: Interfacing Interfaces", "author": ["Ekaterina Komendantskaya", "J\u00f3nathan Heras", "Gudmund Grov"], "venue": "In: 10th International Workshop On User Interfaces for Theorem Provers, Bremen, Germany,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "Dafny: An Automatic Program Verifier for Functional Correctness. In: Logic for Programming, Artificial Intelligence, and Reasoning: 16th International Conference, Dakar, Senegal", "author": ["K. Rustan M. Leino"], "venue": "pp. 348\u2013370,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2010}, {"title": "VACID-0: Verification of Ample Correctness of Invariants of Data-structures, Edition", "author": ["K. Rustan M. Leino", "Micha\u0142 Moskal"], "venue": "Tools and Experiments Workshop at VSTTE. Available at https://www", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2010}, {"title": "Measuring computer performance: a practitioner\u2019s guide", "author": ["David J Lilja"], "venue": null, "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2000}, {"title": "Using casebased reasoning in an algorithm portfolio for constraint solving", "author": ["Eoin O\u2019Mahony", "Emmanuel Hebrard", "Alan Holland", "Conor Nugent", "Barry O\u2019Sullivan"], "venue": "Irish Conference on Artificial Intelligence and Cognitive Science,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2008}, {"title": "Scikit-learn: Machine Learning in Python", "author": ["Fabian Pedregosa", "Ga\u00ebl Varoquaux", "Alexandre Gramfort", "Vincent Michel", "Bertrand Thirion", "Olivier Grisel", "Mathieu Blondel", "Peter Prettenhofer", "Ron Weiss", "Vincent Dubourg", "Jake Vanderplas", "Alexandre Passos", "David Cournapeau", "Mathieu Brucher", "Mathieu Perrot", "\u00c9douard Duchesnay"], "venue": "Journal of Machine Learning Research", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2011}, {"title": "The TPTP Problem Library", "author": ["Geoff Sutcliffe", "Christian Suttner"], "venue": "Journal Automated Reasoning", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1998}, {"title": "Evaluating general purpose automated theorem proving systems", "author": ["Geoff Sutcliffe", "Christian Suttner"], "venue": "Artificial Intelligence", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2001}, {"title": "MUX: algorithm selection for software model checkers", "author": ["Varun Tulsian", "Aditya Kanade", "Rahul Kumar", "Akash Lal", "Aditya V. Nori"], "venue": "Working Conference on Mining Software Repositories,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2014}, {"title": "SATzilla: Portfolio-based Algorithm Selection for SAT", "author": ["Lin Xu", "Frank Hutter", "Holger H. Hoos", "Kevin Leyton-Brown"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2008}], "referenceMentions": [{"referenceID": 2, "context": "Examples of systems which follow this model are Spec# [3] and Dafny [28] which use the Boogie [2] intermediate language and the Z3 [19] SMT solver.", "startOffset": 54, "endOffset": 57}, {"referenceID": 21, "context": "Examples of systems which follow this model are Spec# [3] and Dafny [28] which use the Boogie [2] intermediate language and the Z3 [19] SMT solver.", "startOffset": 68, "endOffset": 72}, {"referenceID": 1, "context": "Examples of systems which follow this model are Spec# [3] and Dafny [28] which use the Boogie [2] intermediate language and the Z3 [19] SMT solver.", "startOffset": 94, "endOffset": 97}, {"referenceID": 29, "context": "This technique has been successfully implemented in the SAT solver domain by SATzilla [38] and for model-checkers [20][36].", "startOffset": 86, "endOffset": 90}, {"referenceID": 14, "context": "This technique has been successfully implemented in the SAT solver domain by SATzilla [38] and for model-checkers [20][36].", "startOffset": 114, "endOffset": 118}, {"referenceID": 28, "context": "This technique has been successfully implemented in the SAT solver domain by SATzilla [38] and for model-checkers [20][36].", "startOffset": 118, "endOffset": 122}, {"referenceID": 5, "context": "Due to the diverse range of input languages used by software verification systems, a standardised benchmark repository of verification programs does not yet exist [8].", "startOffset": 163, "endOffset": 166}, {"referenceID": 9, "context": "Many of the programs are solutions to problems posed at software verification competitions such as VerifyThis [12], VSTTE [26] and COST [14].", "startOffset": 110, "endOffset": 114}, {"referenceID": 19, "context": "Many of the programs are solutions to problems posed at software verification competitions such as VerifyThis [12], VSTTE [26] and COST [14].", "startOffset": 122, "endOffset": 126}, {"referenceID": 11, "context": "Many of the programs are solutions to problems posed at software verification competitions such as VerifyThis [12], VSTTE [26] and COST [14].", "startOffset": 136, "endOffset": 140}, {"referenceID": 22, "context": "Other programs are implementations of benchmarks proposed by the VACID-0 [29] initiative.", "startOffset": 73, "endOffset": 77}, {"referenceID": 13, "context": "We used six current, general-purpose SMT solvers supported by Why3: Alt-Ergo [18] versions 0.", "startOffset": 77, "endOffset": 81}, {"referenceID": 12, "context": "4, veriT [15], ver.", "startOffset": 9, "endOffset": 13}, {"referenceID": 15, "context": "2015061, Yices [21] ver.", "startOffset": 15, "endOffset": 19}, {"referenceID": 26, "context": "All of these are (integer-valued) metrics that can be calculated by analysing a Why3 proof obligation, and are similar to the Syntax metadata category for proof obligations written in the TPTP format [34].", "startOffset": 200, "endOffset": 204}, {"referenceID": 8, "context": "Our feature extraction algorithm has similarities in this respect to the method used by Why3 for computing goal \u201cshapes\u201d [11].", "startOffset": 121, "endOffset": 125}, {"referenceID": 6, "context": "The BenchExec [9] framework was developed by the organisers of the SVCOMP [7] software verification competition to reliably measure CPU time, wall-clock time and memory usage of software verification tools.", "startOffset": 14, "endOffset": 17}, {"referenceID": 4, "context": "The BenchExec [9] framework was developed by the organisers of the SVCOMP [7] software verification competition to reliably measure CPU time, wall-clock time and memory usage of software verification tools.", "startOffset": 74, "endOffset": 77}, {"referenceID": 23, "context": "measurement introduced at each execution, we used the methodology described by Lilja [30] to obtain an approximation of the true mean time.", "startOffset": 85, "endOffset": 89}, {"referenceID": 27, "context": "To establish a realistic time limit value, we find each solver\u2019s \u201cPeter Principle Point\u201d [35].", "startOffset": 89, "endOffset": 93}, {"referenceID": 25, "context": "3We used the Python Sci-kit Learn [33] implementations of these models", "startOffset": 34, "endOffset": 38}, {"referenceID": 17, "context": "The second numeric column of Table 2 shows the Normalised Discounted Cumulative Gain (nDCG), which is commonly used to evaluate the accuracy of rankings in the search engine and e-commerce recommender system domains [24].", "startOffset": 216, "endOffset": 220}, {"referenceID": 10, "context": "An interesting feature of all the best-performing models in Table 2 is their ability to predict multi-output variables [13].", "startOffset": 119, "endOffset": 123}, {"referenceID": 7, "context": "Where4\u2019s interaction with Why3 is inspired by the use of machine learning in the Sledgehammer tool [10] which allows the use of SMT solvers in the interactive theorem prover Isabelle/HOL.", "startOffset": 99, "endOffset": 103}, {"referenceID": 0, "context": "We implement a \u201cpre-solving\u201d heuristic commonly used by portfolio solvers [1][38]: a single solver is called with a short time limit before feature extraction and solver rank prediction takes place.", "startOffset": 74, "endOffset": 77}, {"referenceID": 29, "context": "We implement a \u201cpre-solving\u201d heuristic commonly used by portfolio solvers [1][38]: a single solver is called with a short time limit before feature extraction and solver rank prediction takes place.", "startOffset": 77, "endOffset": 81}, {"referenceID": 27, "context": "The benchmarks in this library come from a diverse range of contributors working in numerous problem domains [35] and are not as specific to software verification as the Why3 suite of examples.", "startOffset": 109, "endOffset": 113}, {"referenceID": 14, "context": "Why logic language (in contrast to related work on model checkers which use the general-purpose C language [20][36]).", "startOffset": 107, "endOffset": 111}, {"referenceID": 28, "context": "Why logic language (in contrast to related work on model checkers which use the general-purpose C language [20][36]).", "startOffset": 111, "endOffset": 115}, {"referenceID": 1, "context": "We made the decision to keep the choice of independent variables simple in order to increase generalisability to other formalisms such as Microsoft\u2019s Boogie [2] intermediate language.", "startOffset": 157, "endOffset": 160}, {"referenceID": 5, "context": "Comparing verification systems: The need for a standard set of benchmarks for the diverse range of software systems is a recurring issue in the literature [8].", "startOffset": 155, "endOffset": 158}, {"referenceID": 3, "context": "The benefits of such a benchmark suite are identified by the SMTLIB [5] project.", "startOffset": 68, "endOffset": 71}, {"referenceID": 4, "context": "The performance of SMT solvers has significantly improved in recent years due in part to the standardisation of an input language and the use of standard benchmark programs in competitions [17][7].", "startOffset": 193, "endOffset": 196}, {"referenceID": 26, "context": "The TPTP (Thousands of Problems for Theorem Provers) project [34] has similar aims but a wider scope: targeting theorem provers which specialise in numerical problems as well as general-purpose SAT and SMT solvers.", "startOffset": 61, "endOffset": 65}, {"referenceID": 27, "context": "The TPTP library is specifically designed for the rigorous experimental comparison of solvers [35].", "startOffset": 94, "endOffset": 98}, {"referenceID": 29, "context": "Portfolio solvers: Portfolio-solving approaches have been implemented successfully in the SAT domain by SATzilla [38] and the constraint satisfaction / optimisation community by tools such as CPHydra [32] and sunny-cp [1].", "startOffset": 113, "endOffset": 117}, {"referenceID": 24, "context": "Portfolio solvers: Portfolio-solving approaches have been implemented successfully in the SAT domain by SATzilla [38] and the constraint satisfaction / optimisation community by tools such as CPHydra [32] and sunny-cp [1].", "startOffset": 200, "endOffset": 204}, {"referenceID": 0, "context": "Portfolio solvers: Portfolio-solving approaches have been implemented successfully in the SAT domain by SATzilla [38] and the constraint satisfaction / optimisation community by tools such as CPHydra [32] and sunny-cp [1].", "startOffset": 218, "endOffset": 221}, {"referenceID": 4, "context": "Numerous studies have used the SVCOMP [7] benchmark suite of C programs for model checkers to train portfolio solvers [36][20].", "startOffset": 38, "endOffset": 41}, {"referenceID": 28, "context": "Numerous studies have used the SVCOMP [7] benchmark suite of C programs for model checkers to train portfolio solvers [36][20].", "startOffset": 118, "endOffset": 122}, {"referenceID": 14, "context": "Numerous studies have used the SVCOMP [7] benchmark suite of C programs for model checkers to train portfolio solvers [36][20].", "startOffset": 122, "endOffset": 126}, {"referenceID": 28, "context": "These particular studies have been predicated on the use of Support Vector Machines (SVM) with only a cursory use of linear regression [36].", "startOffset": 135, "endOffset": 139}, {"referenceID": 16, "context": "The need for a strategy to delegate Why3 goals to appropriate SMT solvers is stated in recent work looking at verification systems on cloud infrastructures [23].", "startOffset": 156, "endOffset": 160}, {"referenceID": 18, "context": "Machine Learning in Formal Methods: The FlySpec [25] corpus of proofs has been the basis for a growing number of tools integrating interactive theorem provers with machine-learning based factselection.", "startOffset": 48, "endOffset": 52}, {"referenceID": 7, "context": "The MaSh engine in Sledgehammer [10] is a related example.", "startOffset": 32, "endOffset": 36}, {"referenceID": 20, "context": "ML4PG (Machine Learning for Proof General) [27] also uses clustering techniques to guide the user for interactive theorem proving.", "startOffset": 43, "endOffset": 47}], "year": 2017, "abstractText": "The Why3 IDE and verification system facilitates the use of a wide range of Satisfiability Modulo Theories (SMT) solvers through a driver-based architecture. We present Where4: a portfolio-based approach to discharge Why3 proof obligations. We use data analysis and machine learning techniques on static metrics derived from program source code. Our approach benefits software engineers by providing a single utility to delegate proof obligations to the solvers most likely to return a useful result. It does this in a time-efficient way using existing Why3 and solver installations \u2014 without requiring low-level knowledge about SMT solver operation from the user.", "creator": "LaTeX with hyperref package"}}}