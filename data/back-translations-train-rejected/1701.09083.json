{"id": "1701.09083", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Jan-2017", "title": "Efficient Rank Aggregation via Lehmer Codes", "abstract": "We propose a novel rank aggregation method based on converting permutations into their corresponding Lehmer codes or other subdiagonal images. Lehmer codes, also known as inversion vectors, are vector representations of permutations in which each coordinate can take values not restricted by the values of other coordinates. This transformation allows for decoupling of the coordinates and for performing aggregation via simple scalar median or mode computations. We present simulation results illustrating the performance of this completely parallelizable approach and analytically prove that both the mode and median aggregation procedure recover the correct centroid aggregate with small sample complexity when the permutations are drawn according to the well-known Mallows models. The proposed Lehmer code approach may also be used on partial rankings, with similar performance guarantees.", "histories": [["v1", "Sat, 28 Jan 2017 19:28:29 GMT  (426kb)", "http://arxiv.org/abs/1701.09083v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.AI", "authors": ["pan li", "arya mazumdar", "olgica milenkovic"], "accepted": false, "id": "1701.09083"}, "pdf": {"name": "1701.09083.pdf", "metadata": {"source": "CRF", "title": "Efficient Rank Aggregation via Lehmer Codes", "authors": ["Pan Li", "Arya Mazumdar", "Olgica Milenkovic"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 170 1.09 083v 1 [cs.L G] January 28, 2017We propose a novel ranking method based on the conversion of permutations into their corresponding Lehmer codes or other subdiagonal images. Lehmer codes, also known as inversion vectors, are vector representations of permutations in which each coordinate can assume values that are not limited by the values of other coordinates. This transformation enables the decoupling of coordinates and the execution of aggregation using simple scalar median or mode calculations. We present simulation results that illustrate the performance of this fully parallelisable approach and analytically prove that both the mode and the median aggregation method restore correct centrifugation with low sample complexity when the permutations are drawn according to the known Mallows models. The proposed Lehmer code approach can also be applied to partial rankings with similar performance guarantees."}, {"heading": "1 Introduction", "text": "Ranking aggregation is a family of problems related to the use of different ranking information, and it arises in applications as diverse as social selection, meta-search, natural language processing, bioinformatics, and information retrieval [1, 2, 3]. The rankings observed are either linear orders (permutations) or partial (element-based) rankings. It is sometimes assumed that rankings take the form of a set of pairs of comparisons [4, 5]. Note that many massive ordinal datasets arise from ratings rather than actual comparisons. Rating aggregation, rather than averaging ratings, is justified by the fact that most ratings have different rating scales. \"As an example, the rating of three users might indicate that the user liked the element, while the rating of three by another user might indicate that the user did not like the element."}, {"heading": "2 Mathematical Preliminaries", "text": "Let's call S a series of n elements that we assume, without loss of generality, rank higher than y (Q > Q = Q = Q). < A ranking is a sequence of a subset of elements Q of [n] according to a predefined rule. If Q = [n], we refer to the order as permutation. If a ranking binds all unranked elements to the last position, we refer to them as a partial ranking (weak or bucket-by-bucket order). Sub-rankings can be used to complete the ranking of elements in [n] in various ways [16], binding all unranked elements to the last position. Rigorously, a permutation is a double order of elements: [n] \u2192 Permutations above [n] form the symmetrical group of the order n!"}, {"heading": "3 Aggregation Algorithms", "text": "Suppose we have to summarize a set of m-rankings determined by the number of votes. (\u03c31, \u03c32,., \u03c3m), \u03c3k-Sn, 1 \u2264 k \u2264 m. Aggregation can be performed using the distance-related Kemeny-Young model, in which one searches for a ranking order that reduces the cumulative Kendall rankings (Kemeny). (Note: If the number of votes includes only one permutation, a permutation is required; if the number of rankings includes partial rankings, we allow either a permutation or a partial ranking.) The LCA method under the Kendall distance is used in Algorithm 2. Note that each step of the algorithms can be performed in parallel. If no parallelization is used, the first step O (mn) takes time."}, {"heading": "4 Analysis of the Mallows Model", "text": "Next, we offer a theoretical performance analysis of the LCA algorithm assuming that rankings are generated according to the Mallows and generalized Mallows model. < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < &lt"}, {"heading": "5 Performance Evaluation", "text": "Next, we evaluate the performance of the LCA algorithms using experimental methods and compare them with those of other rankings = 9 synthetic and real data sets. For comparative analysis, we select the Fas-Pivot and FasLP-Pivot (LP) methods [9], InsertionSort with Comparison (InsertionComp) [8], and the optimal Spearman Footrule Distance Aggregator (Spearman) [10]. For the randomized algorithms Fas-Pivot and FasLP-Pivot, the pivot is randomly selected in each iteration. For InsertionSort with Comparison, the order of the elements is randomly selected. Furthermore, for all three methods, the procedure is executed five times and the best solution is selected. For Fas-Pivot and FasLP-Pivot, we have chosen the better result of the Pick-A-m and the given method."}, {"heading": "A Proof of Lemma 4.2", "text": "Before we continue with the proof, we would like to notice that some ideas in our discharge through Lemma 10.7 from [27] were motivated. We assume that n > j \u2265 i and that we want to prove the statement 1 (the second case, if 0 < i can be similarly handled). If i = 1, is the underlying relationship exactly the same as???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"}, {"heading": "B Proof of Lemma 4.3", "text": "Suppose that n > j \u2265 i = > and that we want to prove statement 1 (the case if 0 < j \u2264 i can be handled similarly). Suppose that removing a fixed number of elements in S of the lowest (or highest) rank does not change the probability of the ranking of the remaining elements (see Lemma F.1 for proof). Therefore, we can assume that removing a fixed number of elements in S of the lowest (or highest) rank in the ranking does not change the probability of the ranking with the remaining elements (see Lemma F.1 for proof)."}, {"heading": "C Proof of Lemma 4.5", "text": "s transform the inequality into another element. If two subsets of the elements A, A, D and A, A and if u have a has1 for all, then it is sufficient to prove only the first assertion. The left side of the first inequality corresponds to the probability of the event that the element u is in the t-th position or lower within the group of elements in A. The right side of the inequality corresponds to the probability of the event that the element is in the t-th position, and the bottom side of the group of elements in the A. The right side of the inequality corresponds to the probability that the element is in the t-th position, and the bottom side of the group of the elements in the A. The right side of the inequality corresponds to the probability that the element is in the x-th position."}, {"heading": "D Proof of Lemma 4.7", "text": "To make it more convenient, we put Lemma 4.7 first. Lemma D.1. Let us simply say: \"Q\" = \"Q\" = \"Q\" = \"W\" and let \"A\" be a subset of elements that contain an element. Let \"A\" = \"A\" - \"A\" - \"A\" - \"O\" - \"A\" - \"A\" - \"A\" - \"A\": x \"6 = u,\" \"A\" (x) - \"Q\" - \"0\" - \"A.\" - \"A.\" - \"A.\" - \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. O. O. O. O. O. O. O. O. O. O. \"O. O. O. O. O. O. O. O.\" O. O. O. O. O. O. O. O. O. O. O. O. O. O. O. O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O. \"O.\" O."}, {"heading": "E Proof of the Main Results", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "E.1 Proof for permutation aggregation", "text": "We say that the LCA algorithm succeeds if \u03c3 = \u03c30 or equivalent, if c-\u03c3 = c\u03c30. Given that c-\u03c3 (1) = 0 = c\u03c30 (1) uses the union boundary, we arrive at P [\u03c3 = \u03c30] = P [c-\u03c3 = c\u03c30] \u2265 1 \u2212 n \u2212 1 \u2211 t = 2P [c-t) 6 = c\u03c30 (t)]. In Section 4, we explained that the algorithm can be regarded on the basis of the Lehmer code c-T as a form of insertion sort in which, during the tenth iteration, one places the element t at the (t \u2212 c-t) -th position above the subset of elements St = [t]. With this specific selection of the subset of St, we have St (t) = t-c-t (t-c) -th position over the subset of elements St = [t-t]."}, {"heading": "E.1.1 Proof of Theorem 4.1 (Mode)", "text": "In view of the fact that we aggregate with the mode function, we have an upper limit for P [\u03c3St (t) 6 = \u03c30, St (t)] = P [D (t)].For this purpose, we have q = 1: n \u2212 11 + \u03c63: n, so that if we have an upper limit for P [\u03c3St (t) 6 = \u03c30, St (t) = P [Xk (i) = 1] = P [Xk (i) = 1 < 1 + \u03c6n, q < 1. Starting from Lemma 4.3 in the main text, we have P [Xk (i) = 1] = P [Xk (i) = 1 \u2212 \u2212 P = 1] = 1 P [Xk (i) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P [Xk (i) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P [Xk (t)) = 1 P [Xk (t) = 1 P [Xk (t)) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P) = 1 P [Xk (t) = 1 P [Xk (t) = 1 P) = 1 P [Xk) = 1 P [Xk (t) = 1 P) = 1 P [Xk (t) = 1 P) = 1 P [Xk) = 1 P [Xk [Xk (t) = 1 P) = 1 P) = 1 P [Xk [Xk (t) = 1 P) = 1 P [Xk (t) = 1 P) = 1 P [Xk) = 1 P [Xk [Xk (t) = 1) = 1 P) = 1 P [Xk) = 1 P [Xk [Xk [Xk (t) = 1) = 1) = 1 P) = 1 P) = 1 P [Xk [Xk [Xk) = 1] = 1) = 1) = 1 P [Xk [Xk) = 1]"}, {"heading": "E.1.2 Proof of Theorem 4.3 (Median)", "text": "Let us leave Yk (j0) = j0 j = 1 Xk (j). Since we use the median to form the aggregate, we have to note that \u03c3St (t) = min {j: 1 m \u2211 k [m] Yk (j) \u2265 0.5}. According to Lemma 4.5 of the main text, we have P [Yk (i) = 1 \u2212 P [\u03c3k, A (x) > i] \u2265 1 \u2212 \u03c6, while P [Yk (i \u2212 1) = 1] = P [\u03c3k, A (x) < i] \u2264. Thus, if we have GDP < 0.5 using Hoffings, we have P [Dt] \u2264 P1m \u00b2 k [m] Yk (i) < 0.5 + P1m \u00b2 k [m] Yk (i \u2212 1) > 0.5 \u2264 2e \u2212 2m (1 \u2212 2 \u2212 2) \u2264. Consequently, for m > c log 2ndged with c = 2 \u2212 2 > \u00b2 (2) > p (2)."}, {"heading": "E.2 Proof of the Performance Guarantees for Partial Ranking Aggregation", "text": "n n n n n (n) n n n n n n (n) n n n n n n n (n) n n n (n) n n n (n) n n n n n n n n (n) n n (n) n n (n) n n n n n n n (n) n n (n) n (n) n n n (n) n n (n) n n n n n n n n n n n n n (n) n (n) n n (n) n (n) n (n) n n n (n) n n n (n) n (n) n n (n) n (n) n n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n (n) n n (n) n (n) n (n) n n n (n) n n n (n) n n n n (n) n n n (n) n n (n) n n n (n) n n n n n (n) n n n n (n) n n n n n n (n) n n n (n) n n n n n (n) n n n n n n n n (t) n (t) n n n n (t) n n n n n n n) n n n (t) n n n n n (t) n n n n (t) n n n n n n (t) n n n n n n) n n n n n n n n n n (t n n n n n n n n n (t) n n (t) n n n n n n n n (t) n n n n n n n n n n n n n n (t n n) n n n n n n n n n n n n n (t n) n n n n) n n n n n n n n n n n n (t n n n n n n n n n n n n n n n n n (n n n n n n n n) n n n n n n) n n n n n n n n n n n n n n n n n n n n n n n n n n"}, {"heading": "E.2.1 Proof of Theorem 4.6 (Median)", "text": "As we use the Median s \u00b2 s \u00b2 s \u00b2 s \u00b2 s s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s s s \u00b2 s s \u00b2 s s \u00b2 s s s \u00b2 s s \u00b2 s s s \u00b2 s s \u00b2 s s \u00b2 s s s \u00b2 s s s \u00b2 s \u00b2 s s s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s \u00b2 s s \u00b2 s \u00b2 s s s \u00b2 s s s \u00b2 s s s \u00b2 s s \u00b2 s s s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s s \u00b2 s s s \u00b2 s \u00b2 s s s s \u00b2 s \u00b2 s s \u00b2 s \u00b2 s s s \u00b2 s \u00b2 s s \u00b2 s s \u00b2 s s s \u00b2 s \u00b2 s s s \u00b2 s s s s \u00b2 s s s \u00b2 s s s \u00b2 s s \u00b2 s s s \u00b2 s s \u00b2 s s s \u00b2 s s s s s \u00b2 s s s \u00b2 s s s s \u00b2 s s s \u00b2 s s s \u00b2 s s s s s \u00b2 s s s s s s s s \u00b2 s s s s s \u00b2 s s s s s s \u00b2 s s s s s s s s \u00b2 s s s s s s s \u00b2 s s s s s s s s s s s s s s s s s \u00b2 s s s s s s s s s s s s s s s s s s s s s \u00b2 s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s s."}, {"heading": "F Other Lemmas and Proofs", "text": "Lemma F. 1. Let \u03c30 be a precedence over S and let A'S be such that A contains the elements that rank highest in \u03c30. Suffice it to prove the result for A = {x}, where x is the element that ranks highest in \u03c30, since this result can be applied inductively. Look at all permutations in such a way that for \u03c3S / {x} = \u03c0 and some j \u00b2 [S |] a Has\u03c3 \u2212 1 (t) = \u03c0 \u2212 1 (t), 1 \u2264 t < j, \u03c0 \u2212 1 (t \u2212 1), j < t \u2264 | S |, x, t = j.For the simplicity of notation we use to denote a permutation with the above property. Then we use P [\u0445- S / {x} = Indicator = Indication."}, {"heading": "G Supplementary Algorithms", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "G.1 Efficient Algorithms for Computing the Mode/Median for Partial Ranking Aggregation", "text": "\u00b2 In section 3 of the main text, which deals with the partial ranking of the evaluations, we pointed out that the option function Vx (y) and thus also the mode / median c (y) can be efficiently calculated. Algorithm VII.1 of this text explains how to efficiently calculate Vx (y), provided that for fixed k, x, vk \u2192 x (y) over a continuous interval, or more precisely if [x \u2212 c\u03c3k (x), x \u2212 c\u03c3 \u2032 k (x) is positive. Algorithm VII.1 has the complexity O (m + x) and the calculation of the mode / median of component c (x) takes O (x) time. Therefore, the total complexity of the main text for partial evaluations is equal to O (mn + n2). (algorithm VII.1: Calculation / median of component c (x) c (x) \u2212 v \u2212 v \u2212 v \u2212 vy (y) is positive over [vx \u2212 c, c + k] for partial evaluations \u2212 v (k)."}, {"heading": "G.2 A Kemeny-Distance Optimal Algorithm for Transforming Permutations into Partial Rankings", "text": "In section 3 of the main text, which refers to partial-rank aggregation, we have pointed out that the permutation results of algorithm 2 can be converted into a partial-rank order. \u2212 In the description of the algorithm, we have used a = (a, a + 1,..., b) where a, b \u00b2 Z, b \u00b2 n \u00b2. For a vector V, we have used V (a: b) to (V (a), V (a + 1), Bucki (b). Buckizer has complexity O (mn2 + n3).Algorithm VII.2: Transforms a permutation into a partial-rank order, the Kemeny-Distance Optimal Input: Permutation-Distance Optimal Input: Permutation, sentence partial-rank order VII.2: (1, 1) Buckizer Size O (mn2 + n3).2: Transforms a permutation into a partial-distance, which is Valeny-Distance."}], "references": [{"title": "Learning to rank using gradient descent", "author": ["Chris Burges", "Tal Shaked", "Erin Renshaw", "Ari Lazier", "Matt Deeds", "Nicole Hamilton", "Greg Hullender"], "venue": "Proceedings of the 22nd international conference on Machine learning. ACM, 2005, pp. 89\u201396.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2005}, {"title": "Learning to rank for information retrieval", "author": ["Tie-Yan Liu"], "venue": "Foundations and Trends in Information Retrieval, vol. 3, no. 3, pp. 225\u2013331, 2009.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "Hydra: gene prioritization via hybrid distancescore rank aggregation", "author": ["Minji Kim", "Farzad Farnoud", "Olgica Milenkovic"], "venue": "Bioinformatics, p. btu766, 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Iterative ranking from pair-wise comparisons", "author": ["Sahand Negahban", "Sewoong Oh", "Devavrat Shah"], "venue": "Advances in Neural Information Processing Systems, 2012, pp. 2474\u20132482.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Pairwise ranking aggregation in a crowdsourced setting", "author": ["Xi Chen", "Paul N Bennett", "Kevyn Collins-Thompson", "Eric Horvitz"], "venue": "Proceedings of the sixth ACM international conference on Web search and data mining. ACM, 2013, pp. 193\u2013202.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Mathematics without numbers", "author": ["John G Kemeny"], "venue": "Daedalus, vol. 88, no. 4, pp. 577\u2013591, 1959.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1959}, {"title": "A computational study of the kemeny rule for preference aggregation", "author": ["Andrew Davenport", "Jayant Kalagnanam"], "venue": "AAAI, 2004, vol. 4, pp. 697\u2013702.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "Rank aggregation revisited", "author": ["Cynthia Dwork", "Ravi Kumar", "Moni Naor", "D Sivakumar"], "venue": "2001.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2001}, {"title": "Aggregating inconsistent information: ranking and clustering", "author": ["Nir Ailon", "Moses Charikar", "Alantha Newman"], "venue": "Journal of the ACM (JACM), vol. 55, no. 5, pp. 23, 2008.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Spearman\u2019s footrule as a measure of disarray", "author": ["Persi Diaconis", "Ronald L Graham"], "venue": "Journal of the Royal Statistical Society. Series B (Methodological), pp. 262\u2013268, 1977.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1977}, {"title": "How to rank with few errors", "author": ["Claire Kenyon-Mathieu", "Warren Schudy"], "venue": "Proceedings of the thirty-ninth annual ACM symposium on Theory of computing. ACM, 2007, pp. 95\u2013103.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "Probability models and statistical analyses for ranking data, vol", "author": ["Michael A Fligner", "Joseph S Verducci"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1993}, {"title": "Efficient bayesian inference for generalized bradley\u2013terry models", "author": ["Francois Caron", "Arnaud Doucet"], "venue": "Journal of Computational and Graphical Statistics, vol. 21, no. 1, pp. 174\u2013196, 2012.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning mallows models with pairwise preferences", "author": ["Tyler Lu", "Craig Boutilier"], "venue": "Proceedings of the 28th International Conference on Machine Learning (ICML-11), 2011, pp. 145\u2013152.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Cranking: Combining rankings using conditional probability models on permutations", "author": ["Guy Lebanon", "John Lafferty"], "venue": "ICML. Citeseer, 2002, vol. 2, pp. 363\u2013370.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "Comparing and aggregating rankings with ties", "author": ["Ronald Fagin", "Ravi Kumar", "Mohammad Mahdian", "D Sivakumar", "Erik Vee"], "venue": "Proceedings of the twenty-third ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems. ACM, 2004, pp. 47\u201358.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2004}, {"title": "Enumerative combinatorics, Number 49", "author": ["Richard P Stanley"], "venue": "Cambridge university press,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2011}, {"title": "Linear-time ranking of permutations", "author": ["Martin Mare\u0161", "Milan Straka"], "venue": "Algorithms\u2013ESA 2007, pp. 187\u2013193. Springer, 2007.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}, {"title": "Ranking and unranking permutations in linear time", "author": ["Wendy Myrvold", "Frank Ruskey"], "venue": "Information Processing Letters, vol. 79, no. 6, pp. 281\u2013284, 2001.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2001}, {"title": "Lehmer code transforms and mahonian statistics on permutations", "author": ["Vincent Vajnovszki"], "venue": "Discrete Mathematics, vol. 313, no. 5, pp. 581\u2013589, 2013.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Ordering by weighted number of wins gives a good ranking for weighted tournaments", "author": ["Don Coppersmith", "Lisa Fleischer", "Atri Rudra"], "venue": "Proceedings of the seventeenth annual ACM-SIAM symposium on Discrete algorithm. Society for Industrial and Applied Mathematics, 2006, pp. 776\u2013 782. 11", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2006}, {"title": "Rank aggregation methods for the web", "author": ["Cynthia Dwork", "Ravi Kumar", "Moni Naor", "Dandapani Sivakumar"], "venue": "Proceedings of the 10th international conference on World Wide Web. ACM, 2001, pp. 613\u2013622.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2001}, {"title": "Efficient large-scale graph analysis in mapreduce", "author": ["Karthik Kambatla", "Georgios Kollias", "Ananth Grama"], "venue": "2012.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2012}, {"title": "Nantonac collaborative filtering: recommendation based on order responses", "author": ["Toshihiro Kamishima"], "venue": "Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2003, pp. 583\u2013588.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2003}, {"title": "Eigentaste: A constant time collaborative filtering algorithm", "author": ["Ken Goldberg", "Theresa Roeder", "Dhruv Gupta", "Chris Perkins"], "venue": "Information Retrieval, vol. 4, no. 2, pp. 133\u2013151, 2001.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2001}, {"title": "The movielens datasets: History and context", "author": ["F Maxwell Harper", "Joseph A Konstan"], "venue": "ACM Transactions on Interactive Intelligent Systems (TiiS), vol. 5, no. 4, pp. 19, 2016.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "Rank aggregation is a family of problems concerned with fusing disparate ranking information, and it arises in application areas as diverse as social choice, meta-search, natural language processing, bioinformatics, and information retrieval [1, 2, 3].", "startOffset": 242, "endOffset": 251}, {"referenceID": 1, "context": "Rank aggregation is a family of problems concerned with fusing disparate ranking information, and it arises in application areas as diverse as social choice, meta-search, natural language processing, bioinformatics, and information retrieval [1, 2, 3].", "startOffset": 242, "endOffset": 251}, {"referenceID": 2, "context": "Rank aggregation is a family of problems concerned with fusing disparate ranking information, and it arises in application areas as diverse as social choice, meta-search, natural language processing, bioinformatics, and information retrieval [1, 2, 3].", "startOffset": 242, "endOffset": 251}, {"referenceID": 3, "context": "Sometimes, rankings are assumed to be of the form of a set of pairwise comparisons [4, 5].", "startOffset": 83, "endOffset": 89}, {"referenceID": 4, "context": "Sometimes, rankings are assumed to be of the form of a set of pairwise comparisons [4, 5].", "startOffset": 83, "endOffset": 89}, {"referenceID": 5, "context": "For the case of partial rankings, the distance of choice is the Kemeny distance [6].", "startOffset": 80, "endOffset": 83}, {"referenceID": 6, "context": "It is well known that for a wide range of distance functions, learning the underlying models and aggregating rankings is computationally hard [7].", "startOffset": 142, "endOffset": 145}, {"referenceID": 7, "context": "Nevertheless, for the case when the distance measure is the Kendall \u03c4 distance, a number of approximation algorithms have been developed that offer various trade-offs between quality of aggregation and computational complexity [8, 9].", "startOffset": 227, "endOffset": 233}, {"referenceID": 8, "context": "Nevertheless, for the case when the distance measure is the Kendall \u03c4 distance, a number of approximation algorithms have been developed that offer various trade-offs between quality of aggregation and computational complexity [8, 9].", "startOffset": 227, "endOffset": 233}, {"referenceID": 9, "context": "The techniques used for aggregating permutations in a given set include randomly choosing a permutation from the set (PICK-A-PERM), pivoting via random selections of elements and divide-and-conquer approaches (FAS-PIVOT), Markov chain methods akin to PageRank, and minimum weight graph matching methods exploiting the fact that the Kendall \u03c4 distance is well-approximated by the Spearman footrule distance (SM) [10].", "startOffset": 411, "endOffset": 415}, {"referenceID": 8, "context": "Methods with provable performance guarantees \u2013 PICK-A-PERM, FAS-PIVOT, and SM \u2013 give a 2-approximation for the objective function, although combinations thereof are known to improve the constant to 11/7 or 4/3 [9].", "startOffset": 210, "endOffset": 213}, {"referenceID": 10, "context": "There also exists a polynomial time approximation scheme (PTAS) for the aggregation problem [11].", "startOffset": 92, "endOffset": 96}, {"referenceID": 11, "context": "In many cases, a performance analysis on probabilistic models [12] such as the Plackett-Luce model [13] or the Mallows model [14, 15], is intractable.", "startOffset": 62, "endOffset": 66}, {"referenceID": 12, "context": "In many cases, a performance analysis on probabilistic models [12] such as the Plackett-Luce model [13] or the Mallows model [14, 15], is intractable.", "startOffset": 99, "endOffset": 103}, {"referenceID": 13, "context": "In many cases, a performance analysis on probabilistic models [12] such as the Plackett-Luce model [13] or the Mallows model [14, 15], is intractable.", "startOffset": 125, "endOffset": 133}, {"referenceID": 14, "context": "In many cases, a performance analysis on probabilistic models [12] such as the Plackett-Luce model [13] or the Mallows model [14, 15], is intractable.", "startOffset": 125, "endOffset": 133}, {"referenceID": 15, "context": "Partial rankings may be used to complete rankings of subsets of element in [n] in a number of different ways [16], one being to tie all unranked elements at the last position.", "startOffset": 109, "endOffset": 113}, {"referenceID": 15, "context": "We use a similar set of definitions for partial rankings [16].", "startOffset": 57, "endOffset": 61}, {"referenceID": 15, "context": "A partial ranking is often represented using buckets, and is in this context referred to as a bucket order [16].", "startOffset": 107, "endOffset": 111}, {"referenceID": 9, "context": "A number of distance functions between permutations are known from the social choice, learning and discrete mathematics literature [10].", "startOffset": 131, "endOffset": 135}, {"referenceID": 16, "context": ", any permutation \u03c0 \u2208 Sn can be converted into another permutation \u03c3 \u2208 Sn through a sequence of transpositions (adjacent transpositions) [17].", "startOffset": 137, "endOffset": 141}, {"referenceID": 9, "context": "A well known result by Diaconis and Graham [10] asserts that d\u03c4 (\u03c0, \u03c3) \u2264 dS(\u03c0, \u03c3) \u2264 2d\u03c4 (\u03c0, \u03c3).", "startOffset": 43, "endOffset": 47}, {"referenceID": 15, "context": "(2) The Kemeny distance includes a component equal to the Kendal \u03c4 distance between the linear chains in the partial rankings, and another, scaled component that characterizes the distance of tied pairs of elements [16].", "startOffset": 215, "endOffset": 219}, {"referenceID": 15, "context": "The Spearman footrule distance may also be defined to apply to partial rankings [16], and it equals the sum of the absolute differences between \u201cpositions\u201d of elements in the partial rankings.", "startOffset": 80, "endOffset": 84}, {"referenceID": 15, "context": "The above defined Spearman distance is a 2-approximation for the Kemeny distance between two partial rankings [16].", "startOffset": 110, "endOffset": 114}, {"referenceID": 0, "context": "a word of the form c\u03c3 \u2208 Cn , {0} \u00d7 [0, 1]\u00d7 [0, 2]\u00d7 \u00b7 \u00b7 \u00b7 \u00d7 [0, n\u2212 1], where for i = 1, .", "startOffset": 35, "endOffset": 41}, {"referenceID": 1, "context": "a word of the form c\u03c3 \u2208 Cn , {0} \u00d7 [0, 1]\u00d7 [0, 2]\u00d7 \u00b7 \u00b7 \u00b7 \u00d7 [0, n\u2212 1], where for i = 1, .", "startOffset": 43, "endOffset": 49}, {"referenceID": 17, "context": "e 1 2 3 4 5 6 7 8 9 \u03c3 2 1 4 5 7 3 6 9 8 c\u03c3 0 1 0 0 0 3 1 0 1 It is well known that the Lehmer code is bijective, and that the encoding and decoding algorithms have linear complexity (n) [18, 19].", "startOffset": 186, "endOffset": 194}, {"referenceID": 18, "context": "e 1 2 3 4 5 6 7 8 9 \u03c3 2 1 4 5 7 3 6 9 8 c\u03c3 0 1 0 0 0 3 1 0 1 It is well known that the Lehmer code is bijective, and that the encoding and decoding algorithms have linear complexity (n) [18, 19].", "startOffset": 186, "endOffset": 194}, {"referenceID": 19, "context": "An overview of such codes and their relationship to Mahonian statistics on permutations may be found in [20].", "startOffset": 104, "endOffset": 108}, {"referenceID": 17, "context": "If no parallelization is used, the first step requires O(mn) time, given that the Lehmer codes may be computed in O(n) time [18, 19].", "startOffset": 124, "endOffset": 132}, {"referenceID": 18, "context": "If no parallelization is used, the first step requires O(mn) time, given that the Lehmer codes may be computed in O(n) time [18, 19].", "startOffset": 124, "endOffset": 132}, {"referenceID": 0, "context": "For permutations, the aggregation procedure may be viewed as specialized voting: The ranking \u03c3k casts a vote to rank x at position x\u2212 c\u03c3k(x), for the case that only elements \u2264 x are considered (A vote corresponds to some score confined to [0, 1]).", "startOffset": 239, "endOffset": 245}, {"referenceID": 20, "context": "One example of a positional method is Borda\u2019s algorithm, which is known to produce a 5-approximation to the Kemeny-Young problem for permutations [21].", "startOffset": 146, "endOffset": 150}, {"referenceID": 21, "context": "It also offers significant reductions in computational time compared to the Spearman footrule method, which reduces to solving a weighted bipartite matching problem and hence has complexity at least O(mn + n) [22], or O(mn) when implemented in MapReduce [23].", "startOffset": 209, "endOffset": 213}, {"referenceID": 22, "context": "It also offers significant reductions in computational time compared to the Spearman footrule method, which reduces to solving a weighted bipartite matching problem and hence has complexity at least O(mn + n) [22], or O(mn) when implemented in MapReduce [23].", "startOffset": 254, "endOffset": 258}, {"referenceID": 7, "context": "A related type of aggregation is based on InsertionSort [8, 22].", "startOffset": 56, "endOffset": 63}, {"referenceID": 21, "context": "A related type of aggregation is based on InsertionSort [8, 22].", "startOffset": 56, "endOffset": 63}, {"referenceID": 7, "context": "The authors of [8] proposed setting \u03c3St(t) to", "startOffset": 15, "endOffset": 18}, {"referenceID": 8, "context": "For comparative analysis, we choose the Fas-Pivot and FasLP-Pivot (LP) methods [9], InsertionSort with Comparison (InsertionComp) from [8], and the optimal Spearman Footrule distance aggregator (Spearman) [10].", "startOffset": 79, "endOffset": 82}, {"referenceID": 7, "context": "For comparative analysis, we choose the Fas-Pivot and FasLP-Pivot (LP) methods [9], InsertionSort with Comparison (InsertionComp) from [8], and the optimal Spearman Footrule distance aggregator (Spearman) [10].", "startOffset": 135, "endOffset": 138}, {"referenceID": 9, "context": "For comparative analysis, we choose the Fas-Pivot and FasLP-Pivot (LP) methods [9], InsertionSort with Comparison (InsertionComp) from [8], and the optimal Spearman Footrule distance aggregator (Spearman) [10].", "startOffset": 205, "endOffset": 209}, {"referenceID": 8, "context": "For Fas-Pivot and FasLP-Pivot, we chose the better result of Pick-A-Perm and the given method, as suggested in [9].", "startOffset": 111, "endOffset": 114}, {"referenceID": 0, "context": "The variance parameter was chosen according to \u03c6 = e, where \u03bb is allowed to vary in [0, 1].", "startOffset": 84, "endOffset": 90}, {"referenceID": 23, "context": "To test the permutation LCA aggregation algorithms, we used the Sushi ranking dataset [24] and the Jester dataset [25].", "startOffset": 86, "endOffset": 90}, {"referenceID": 24, "context": "To test the permutation LCA aggregation algorithms, we used the Sushi ranking dataset [24] and the Jester dataset [25].", "startOffset": 114, "endOffset": 118}, {"referenceID": 24, "context": "To test our partial ranking aggregation algorithms, we used the complete Jester dataset [25] and the Movielens dataset [26].", "startOffset": 88, "endOffset": 92}, {"referenceID": 25, "context": "To test our partial ranking aggregation algorithms, we used the complete Jester dataset [25] and the Movielens dataset [26].", "startOffset": 119, "endOffset": 123}, {"referenceID": 4, "context": "The scores are integers in [5], so that many ties are present.", "startOffset": 27, "endOffset": 30}, {"referenceID": 0, "context": "[1] Chris Burges, Tal Shaked, Erin Renshaw, Ari Lazier, Matt Deeds, Nicole Hamilton, and Greg Hullender, \u201cLearning to rank using gradient descent,\u201d in Proceedings of the 22nd international conference on Machine learning.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] Tie-Yan Liu, \u201cLearning to rank for information retrieval,\u201d Foundations and Trends in Information Retrieval, vol.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] Minji Kim, Farzad Farnoud, and Olgica Milenkovic, \u201cHydra: gene prioritization via hybrid distancescore rank aggregation,\u201d Bioinformatics, p.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] Sahand Negahban, Sewoong Oh, and Devavrat Shah, \u201cIterative ranking from pair-wise comparisons,\u201d in Advances in Neural Information Processing Systems, 2012, pp.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] Xi Chen, Paul N Bennett, Kevyn Collins-Thompson, and Eric Horvitz, \u201cPairwise ranking aggregation in a crowdsourced setting,\u201d in Proceedings of the sixth ACM international conference on Web search and data mining.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] John G Kemeny, \u201cMathematics without numbers,\u201d Daedalus, vol.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] Andrew Davenport and Jayant Kalagnanam, \u201cA computational study of the kemeny rule for preference aggregation,\u201d in AAAI, 2004, vol.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] Cynthia Dwork, Ravi Kumar, Moni Naor, and D Sivakumar, \u201cRank aggregation revisited,\u201d 2001.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] Nir Ailon, Moses Charikar, and Alantha Newman, \u201cAggregating inconsistent information: ranking and clustering,\u201d Journal of the ACM (JACM), vol.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] Persi Diaconis and Ronald L Graham, \u201cSpearman\u2019s footrule as a measure of disarray,\u201d Journal of the Royal Statistical Society.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] Claire Kenyon-Mathieu and Warren Schudy, \u201cHow to rank with few errors,\u201d in Proceedings of the thirty-ninth annual ACM symposium on Theory of computing.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] Michael A Fligner and Joseph S Verducci, Probability models and statistical analyses for ranking data, vol.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] Francois Caron and Arnaud Doucet, \u201cEfficient bayesian inference for generalized bradley\u2013terry models,\u201d Journal of Computational and Graphical Statistics, vol.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] Tyler Lu and Craig Boutilier, \u201cLearning mallows models with pairwise preferences,\u201d in Proceedings of the 28th International Conference on Machine Learning (ICML-11), 2011, pp.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15] Guy Lebanon and John Lafferty, \u201cCranking: Combining rankings using conditional probability models on permutations,\u201d in ICML.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] Ronald Fagin, Ravi Kumar, Mohammad Mahdian, D Sivakumar, and Erik Vee, \u201cComparing and aggregating rankings with ties,\u201d in Proceedings of the twenty-third ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] Richard P Stanley, Enumerative combinatorics, Number 49.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18] Martin Mare\u0161 and Milan Straka, \u201cLinear-time ranking of permutations,\u201d in Algorithms\u2013ESA 2007, pp.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[19] Wendy Myrvold and Frank Ruskey, \u201cRanking and unranking permutations in linear time,\u201d Information Processing Letters, vol.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] Vincent Vajnovszki, \u201cLehmer code transforms and mahonian statistics on permutations,\u201d Discrete Mathematics, vol.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] Don Coppersmith, Lisa Fleischer, and Atri Rudra, \u201cOrdering by weighted number of wins gives a good ranking for weighted tournaments,\u201d in Proceedings of the seventeenth annual ACM-SIAM symposium on Discrete algorithm.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[22] Cynthia Dwork, Ravi Kumar, Moni Naor, and Dandapani Sivakumar, \u201cRank aggregation methods for the web,\u201d in Proceedings of the 10th international conference on World Wide Web.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[23] Karthik Kambatla, Georgios Kollias, and Ananth Grama, \u201cEfficient large-scale graph analysis in mapreduce,\u201d 2012.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[24] Toshihiro Kamishima, \u201cNantonac collaborative filtering: recommendation based on order responses,\u201d in Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[25] Ken Goldberg, Theresa Roeder, Dhruv Gupta, and Chris Perkins, \u201cEigentaste: A constant time collaborative filtering algorithm,\u201d Information Retrieval, vol.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[26] F Maxwell Harper and Joseph A Konstan, \u201cThe movielens datasets: History and context,\u201d ACM Transactions on Interactive Intelligent Systems (TiiS), vol.", "startOffset": 0, "endOffset": 4}], "year": 2017, "abstractText": "We propose a novel rank aggregation method based on converting permutations into their corresponding Lehmer codes or other subdiagonal images. Lehmer codes, also known as inversion vectors, are vector representations of permutations in which each coordinate can take values not restricted by the values of other coordinates. This transformation allows for decoupling of the coordinates and for performing aggregation via simple scalar median or mode computations. We present simulation results illustrating the performance of this completely parallelizable approach and analytically prove that both the mode and median aggregation procedure recover the correct centroid aggregate with small sample complexity when the permutations are drawn according to the well-known Mallows models. The proposed Lehmer code approach may also be used on partial rankings, with similar performance guarantees.", "creator": "LaTeX with hyperref package"}}}