{"id": "1702.02737", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Feb-2017", "title": "Mining User/Movie Preferred Features Based on Reviews for Video Recommendation System", "abstract": "In this work, we present an approach for mining user preferences and recommendation based on reviews. There have been various studies worked on recommendation problem. However, most of the studies beyond one aspect user generated- content such as user ratings, user feedback and so on to state user preferences. There is a prob- lem in one aspect mining is lacking for stating user preferences. As a demonstration, in collaborative filter recommendation, we try to figure out the preference trend of crowded users, then use that trend to predict current user preference. Therefore, there is a gap between real user preferences and the trend of the crowded people. Additionally, user preferences can be addressed from mining user reviews since user often comment about various aspects of products. To solve this problem, we mainly focus on mining product aspects and user aspects inside user reviews to directly state user preferences. We also take into account Social Network Analysis for cold-start item problem. With cold-start user problem, collaborative filter algorithm is employed in our work. The framework is general enough to be applied to different recommendation domains. Theoretically, our method would achieve a significant enhancement.", "histories": [["v1", "Thu, 9 Feb 2017 08:03:16 GMT  (191kb)", "http://arxiv.org/abs/1702.02737v1", "The 2nd Workshop on Future Researches of Computer Science and Engineering, Kyungpook National University, pp. 21-24, 2014"]], "COMMENTS": "The 2nd Workshop on Future Researches of Computer Science and Engineering, Kyungpook National University, pp. 21-24, 2014", "reviews": [], "SUBJECTS": "cs.IR cs.CL", "authors": ["xuan-son vu", "seong-bae park"], "accepted": false, "id": "1702.02737"}, "pdf": {"name": "1702.02737.pdf", "metadata": {"source": "CRF", "title": "Mining User/Movie Preferred Features Based on Reviews for Video Recommendation System", "authors": ["Xuan-Son Vu", "Seong-Bae Park"], "emails": ["sonvx@sejong.knu.ac.kr", "sbpark@sejong.knu.ac.kr"], "sections": [{"heading": null, "text": "Keywords: Opinion Mining, Sentiment Aspect Analysis, System Recommendation"}, {"heading": "1 Introduction", "text": "Sites such as Amazon.com, IMDb.com allow users to comment on a variety of content, such as news articles. These \"crowdsourced\" comments are highly engaging because they reflect the views and opinions of real users. Furthermore, there are very few studies of movie reviews that use movie ratings. Therefore, in this work we focus on user ratings on government user preferences for recommendations. However, the main challenge with user-generated comments is that people praise and criticize various aspects of the goal within a review, such as the noise level of a computer or the taste of a dish. Figure 1 refers to the aspects of a new blockbuster movie as \"Captain Philips.\" Based on other aspects, the viewer has a different opinion that we consider sufficient."}, {"heading": "2 Related Work", "text": "In this section we will show here the previous studies on user aspects of mining, some studies using film reviews as a recommendation and how they differ from our work. There have been some studies on the consideration of reviews for recommendations, among others [1; 2; 3]. The most consistent approach to our work is the work of Hariri et al. [1], who presented material designated as LDA to derive contexts based on review mining and combine it with users \"review history for recommendations. However, their work requires monitored data, which is difficult to achieve. Overall, there are three significant differences in our work from others, including: (1) in our work, LDA is used to indicate preferred characteristics for both users and films based on reviews, (2) we treat and solve cold start problems in our approach, and (3) we apply our approach empirically to the first large user reviews collected for recommendations."}, {"heading": "3 Proposed Framework", "text": "In this section, we briefly describe our approach. Due to the page limitation of this short essay, we cannot explain our approach in more detail."}, {"heading": "3.1 Framework overview", "text": "The workflow of our system is comprehensively illustrated in Figure 2, which consists of 8 important processing steps: 1) modelling the overall model for all ratings in the corpus; 2) obtaining all user ratings in the corpus; 3) inferring user preferences by using a global model; 4) using collaborative filters between users to find mutual reference preferences to solve the cold start user problem; 5) obtaining tweets information for cold start movies; 6) inference movies by using a global model achieved in Step 2; 7) using similarity measurements (e.g. cosmic similarity) to find the similarity between user function settings and movie features; and 8) generating top-k movies to recommend them to the user."}, {"heading": "3.2 Stating User Feature Preferences", "text": "For users who have sufficient information (enough ratings), we construct their feature preferences from their reviews to the movies. When a user writes a comment, he / she basically comments on item characteristics, which are referred to in [2] as feature opinion pairs. However, in [2], Feng et al. discover features of items based on part-of-speech, which reduces the accuracy of traits detected, since many words are tagged with the same tag but are not traits of Item. Therefore, LDA is used in our work to detect these traits. Obviously, some low-noise traits are also recognized by LDA, but their percentage will be lower than the true traits since pre-processing. For cold-start users, we will deal with them in detail in subsection 4.1."}, {"heading": "3.3 Stating Movie Feature Preferences", "text": "All reviews of a film are considered an invisible document to the global theme model. By referring to the global theme model, preferred features of the film are achieved. For the film that has only limited reviews, we resolve it by taking into account the information of social networks as described in Section 4.2."}, {"heading": "4 Cold-start problem", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1 Cold-start User Recommendation", "text": "Since our approach focuses mainly on recommendations for IMDb users based on their rating data, in this case, our cold start user is the user who has an insufficient rating (e.g.: user has a short rating). Essentially, we use a collaborative filtering method from user to user to find cross-referenced features between users. To ensure that the cold start user has enough information for recommendations, we will describe in more detail on the full paper."}, {"heading": "4.2 Cold-start Movie Recommendation", "text": "We found that the producers of the incoming films posted a lot of information about the films on Twitter. Furthermore, there are many Twitter users who follow the films and post some tweets about the films. Table 1 shows the dominance of tweets over IMDb reviews within a month of the release of the film \"American Hustle.\" In [4] Lin et al. also show that despite the cold start, there is still information about the article, especially on social networks like Twitter. Therefore, we collect tweets from users of cold films on Twitter to get enough film reviews. This step is described in more detail in our full essay."}, {"heading": "5 Experiment", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1 Dataset", "text": "In [5] Andrew et al. published the first large record of film reviews containing 50,000 reviews with corresponding review information. However, there is no information on the owner (one person who wrote the review) of the corresponding reviews. For this reason, we have re-collected data, including ratings, ratings and the identity of the owner, using the IMDb URLs attached to the corpus. Statistics of the data set collected are shown in Figure 2."}, {"heading": "5.2 Exploiting Movie Preferred Features", "text": "Figure 3 shows three first preferred features of movie reviews in the dataset. Here, LDA with Gibb sampling from Phan et al. [6] is used to exploit preferred features of movies with 50 themes in 1000 iterations."}, {"heading": "5.3 Evaluation Methodology", "text": "The data set as described in 5.1 serves to carry out the experiment. Considering that a user has to watch a target film (which is his / her target selection), the experimental goal is to judge whether the target selection can be found in the recommendation list when he / she is presented. To this end, we have specifically adopted the leave-one-out rating scheme [3]. That is, during each round we have excluded one reviewer from the data set and conducted tests on it. In fact, the excluded reviewer must meet two \"new user selection criteria,\" so that the product purchased by the reviewer can be viewed as the target selection of the new user when measuring the recommendation accuracy of the algorithm: 1) s / he has the highest number of ratings relative to the other users, and 2) his / her rating on the applied films is positive (i.e. from 7 to 10), indicating that he / she will be selected from a particular time set (i.e., we have selected the films with our 1000% of the above data set to complete a selection)."}, {"heading": "6 Conclusion", "text": "In this paper, we have presented an in-depth study of the use of user ratings for referral tasks. Our main contributions to the paper cover four aspects: (1) proposals for a method to determine user opinion on aspects, (2) solving cold start article recommendations by using social network analysis to enrich article information, (3) the application of collaborative filtering of cold start user problems by identifying collaborative opinion among massive users, and (4) the publication of a first large review dataset with ratings and comments from large anonymous reviewers on IMDb. Future studies will first, use the evaluation method to prove our approach. Second, we manage to propose a generative model for simultaneously using user preference features and movie preferred features, so we can reduce the complexity of reference steps and take advantage of features in advance."}], "references": [{"title": "Context-aware recommendation based on review mining", "author": ["Negar Hariri", "Bamshad Mobasher", "Robin Burke", "Yong Zheng"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2011}, {"title": "Recommendation based on mining product reviewers preference similarity network", "author": ["Feng Wang", "Li Chen"], "venue": "SNA-KDD Workshop,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Compound critiques for conversational recommender systems", "author": ["B. Smyth", "L. McGinty", "J. Reilly", "K. Mc- Carthy"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "Addressing cold-start in app recommendation: Latent user models constructed from twitter followers", "author": ["J. Lin", "K. Sugiyama", "Kan M.-Y", "Chua T.-S"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Learning word vectors for sentiment analysis", "author": ["Andrew L. Maas", "Raymond E. Daly", "Peter T. Pham", "Dan Huang", "Andrew Y. Ng", "Christopher Potts"], "venue": "In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Learning to classify short and sparse text &  web with hidden topics from large-scale data collections", "author": ["X.H. Phan", "L.M. Nguyen", "S. Horiguchi"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "[1], that presented labeled-LDA to infer contexts based on review mining and combining them with user rating history for recommendation.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Basically, when a user writes a comment, s/he will comment about their opinions on item features that called feature-opinion pairs in [2].", "startOffset": 134, "endOffset": 137}, {"referenceID": 1, "context": "However, in [2], Feng et al.", "startOffset": 12, "endOffset": 15}, {"referenceID": 3, "context": "In [4], Lin et al.", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "In [5], Andrew et al.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "[6] is employed to exploit movie preferred features with 50 topics in 1000 iterations.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "For this goal, we concretely adopted the leave-one out evaluation scheme [3].", "startOffset": 73, "endOffset": 76}], "year": 0, "abstractText": "In this work, we present an approach for mining user preferences and recommendation based on reviews. There have been various studies worked on recommendation problem. However, most of the studies beyond one aspect user generatedcontent such as user ratings, user feedback and so on to state user preferences. There is a problem in one aspect mining is lacking for stating user preferences. As a demonstration, in collaborative filter recommendation, we try to figure out the preference trend of crowded users, then use that trend to predict current user preference. Therefore, there is a gap between real user preferences and the trend of the crowded people. Additionally, user preferences can be addressed from mining user reviews since user often comment about various aspects of products. To solve this problem, we mainly focus on mining product aspects and user aspects inside user reviews to directly state user preferences. We also take into account Social Network Analysis for coldstart item problem. With cold-start user problem, collaborative filter algorithm is employed in our work. The framework is general enough to be applied to different recommendation domains. Theoretically, our method would achieve a significant enhancement.", "creator": "cairo 1.14.6 (http://cairographics.org)"}}}