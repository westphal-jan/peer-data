{"id": "1702.05383", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Feb-2017", "title": "Theorem Proving Based on Semantics of DNA Strand Graph", "abstract": "Because of several technological limitations of traditional silicon based computing, for past few years a paradigm shift, from silicon to carbon, is occurring in computational world. DNA computing has been considered to be quite promising in solving computational and reasoning problems by using DNA strands. Resolution, an important aspect of automated theorem proving and mathematical logic, is a rule of inference which leads to proof by contradiction technique for sentences in propositional logic and first-order logic. This can also be called refutation theorem-proving. In this paper we have shown how the theorem proving with resolution refutation by DNA computation can be represented by the semantics of process calculus and strand graph.", "histories": [["v1", "Wed, 15 Feb 2017 11:12:34 GMT  (386kb)", "http://arxiv.org/abs/1702.05383v1", "25 pages,12 figures"]], "COMMENTS": "25 pages,12 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["kumar s ray", "mandrita mondal"], "accepted": false, "id": "1702.05383"}, "pdf": {"name": "1702.05383.pdf", "metadata": {"source": "CRF", "title": "Theorem Proving Based on Semantics of DNA Strand Graph", "authors": ["KUMAR S. RAY"], "emails": ["ksray@isical.ac.in", "mandritamondal@gmail.com"], "sections": [{"heading": null, "text": "In recent years, the computer world has undergone a paradigm shift from silicon to carbon. DNA computing is considered to be promising in solving calculation and thought problems by using DNA strands. Resolution, an important aspect of automated theorem proof and mathematical logic, is a follow-up rule that leads to evidence by contradiction techniques for propositions in propositional logic and first-order logic. This can also be called a refutation theorem. In this paper, we have shown how the theory proof with resolution refutation by DNA computing can be represented by the semantics of process calculation and strand graphics. Keywords: theory proof, resolution refutation, strand diagram, process calculation, DNA computing, statement logy, proof by contradiction, strand shift."}, {"heading": "1. Introduction", "text": "In fact, most of them are able to survive on their own, and they see themselves able to survive on their own."}, {"heading": "2. The Resolution Principle in Propositional Logic", "text": "It turns out that it is a logical consequence of a series of hypotheses that are either true or false, but not both. In this work, we become theorems with unspecified truth values such as P, Q, R. These variables can be associated with logical attachments, for example with logical attachments, and (disjunction) is a statement that is either true or false, but not both. Propositional variable refers to arbitrary statements with unspecified truth value such as P, Q, R. These variables can be associated with logical attachments, and (disjunction). A propositional variable or its negation is called literally. For example, if P is a propositional variable, then both are dictionaries."}, {"heading": "3. Syntax and Semantics of Process Calculus and Strand Graph", "text": "In DNA computing, DNA strands are used to perform the calculation. DNA strands are the rings that contain four DNA bases, i.e. A, T, G, C. Formal language theory, which deals with DNA strands, is used to model, simulate and analyze the simultaneous communication processes of DNA computation. Thus, there is a similarity between the generative grammar of formal language theory and the self-assembly and ligation of DNA strands. Both generate new strands from earlier strands that follow some predefined rules. Thus, the architecture of a model of DNA computation of formal language is widely appreciated. The mechanism of displacement in DNA strands with rich secondary structures can be modeled, simulated and analyzed by using a newly defined language of Petersen, Lakin and Phillips et."}, {"heading": "3.1. Strand Graph", "text": "In the previous section, we described the syntax and semantics of the secondary structures of the complex implementation of the complex processes of DNA calculation. Thus, there are only a limited number of limitations of the process in the implementation of different rules, which consist in the implementation of different rules in the implementation of different principles and principles. However, there are some limitations of the process in the implementation of different rules, which are characterized by the complexity of the pattern in arbitrary process contexts. To overcome this problem, Petersen et. al., 2016] represents the concept of the string graph.Graphs are mathematical structures that are used to model paired relationships. The graphic structures are formed by edges or nodes connected by edges. In a diagram, if there is no distinction between the two nodes associated with each edge, the graph is referred to as an indirect graph. In directed graph, each edge has a specific direction of a different node."}, {"heading": "V = {1, 2, 3, 4}.", "text": "length = {1 \u2192 3, 2 \u2192 3, 3 \u2192 3, 4 \u2192 3}. color = {1 \u2192 1, 2 \u2192 2, 3 \u2192 3, 4 \u2192 4}. A = {(1, 1), (2, 3), {(1, 2), (2, 2), {(1, 2), (3, 2), {(1, 3), (3, 1), {(2,1), (4, 3)}, {(2, 2), (4, 2), {(3, 2), (4, 2)}, {(3, 3), (4, 1). toehold = {(1, 1), (2, 3)} \u2192 true, {(1, 1, 1)} \u2192 true, {(2, 1, 1), (2, 1), (2, 2), (4, 2, 2), (3), (3)."}, {"heading": "E = {(1, 1), (2, 3)}, {(1, 2), (2, 2)}, {(3, 2), (4, 2)}, {(3, 3), (4, 1)}.", "text": "s use the program of toehold-mediated four-way strand shift and branch migration with P. P = < 7 > | < 5 > | < X > = <. ^! V! 7 / ^ \u043c > | < 7. (7) The tp function ignores all bindings from a particular domain. For example, tp (V! 7) = b. The first strand, < 7 > = < ^ > representing the program P, is G = (V, length, color, A, toehold, E).The tp function ignores all bindings from a particular domain. (V! 7) = b. The first strand, < 7 > = <. ^! V! 7 / ^ > the domain has three domains."}, {"heading": "3.1.1. Semantics of reduction rules", "text": "In fact, it is as if it were an infinite time, in which it is at a time when the world is not yet in order, at a time when the world is not yet in order, at a time when the world is not yet in order, in which the world is not yet in order, in which the world is not yet in order, in which the world is not yet in order, in which the world is still in order, in which the world is not in order, in which the world is not yet in order, in which the world is not in order, in which it is not yet in order, in which the world is not in order, in which the world is not yet in order, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in which it, in it, in which it, in it, in which it, in which it, in it, in which it, in which it, in it, in which it, in which it, in it, in which it, in which it, in it, in which it, in it, in which it, in which it, in which it, in it, in which it, in it, in which it, in which it, in it, in which it, in it, in which it, in which it, in it, in which it, in it, in which it, in it, in which it, in it, in which it, in which it, in it, in which it, in which it, in which it, in it, in which it, in it, in which it, in which it, in which it, in which it, in it, in which it, in it, in which it, in it, in which it, in it, in which it, in which it, in which it, in it, in which it, in which it, in which it, in it, in which it, in which it, in which it, in it, in which it, in it, in which it, in which it, in which it, in it, in which it, in which it, in which it"}, {"heading": "3.1.2. Graphical illustration of reduction rules", "text": "Fig. 7 illustrates the entire mechanism of toe-mediated four-way strand displacement and branch migration, which is interpreted graphically in Fig. 8. In this section we will illustrate (Fig. 9) how the reduction rules in DNA strand diagram G work, as in Fig. 8. In Section 2 of this article we have discussed theorem proofs with resolution refutation logic. Section 3 illustrates the syntax and semantics of process calculation and DNA strand diagram. In the next section we will show how theorem proofs can be performed with resolution refutation by DNA calculation. We will implement process calculation and strand diagram in the area of theorem proof."}, {"heading": "4. Theorem Proving Based on Process Calculus and DNA Strand Graph Semantics", "text": "Refuting the resolution or proof by contradiction proves a theorem by negating the theorem to be proven. If the theory tester produced by propositional resolution proves the inconsistency of the negated goal with the given set of premises, this implies that the original goal is consistent. Thus, the principle of rebutting the resolution is applied to prove the unsatisfaction of a set of clauses. In Figure 1 of Section 2, we have shown the trigger tree of a sentence S, which contains six clauses. In Section 4.1, we will encode the above set of clauses relating to DNA strands. We will show how the theory proof by resolution refutation can be performed in DNA computation using DNA strands and elementary operations to manipulate the strands. In Section 4.2, the theory proof is encoded by process calculation."}, {"heading": "4.1. Theorem proving by resolution refutation in DNA computation", "text": "In this case, it is possible for the individual sequences to be encoded by satisfying ten-base-long DNA oligonucleotides; the negation of each sequence is encoded by the complementary sequence of the corresponding DNA strands; the sequence is encoded by the sequence of the individual sequences; the sequence is encoded by the sequence of the individual sequences; the sequence is characterized by the sequence of the individual sequences; and the sequence is characterized by the sequence of the individual sequences."}, {"heading": "4.2. Theorem proving by resolution refutation coded by process calculus", "text": "In this section we will encode theorems that are refuted by resolution. & & & > > > Q and semantics that are in Section 3. We must prove the unsatisfaction of the clauses. & > > & > Q * & > & > Q * & > | & > Q and semantics that are in Section 3. We must prove the unsatisfaction of the clauses. < S1 > | RB > | < S2 > | < S3 > | < S4 > | < S5 > | & lt; S6 > lt; S6 > lt; P = < S = < S1 >; S2 >; S2 >; S3 >; S3 >; S4 >; S4 >; S5 >; S5 >; & ltlt; S6 \"S5.\" & ltlt; S6 \"S6.\""}, {"heading": "4.3. Theorem proving by resolution refutation using DNA strand graph and reduction rules", "text": "This section is the graphical representation of program P, which was described by method calculation using program codes in the previous section. Unsatisfaction of the set of sections S is demonstrated by the DNA strand graph T. Program P code is first represented by the expression P = < \u0445 > | < \u0445 > | < \u0445 > | < \u043c > | < > > > > > The graphic representation of program P is shown in Fig. 11.Six strands of P are represented by six vertices in T (fig. 11). Different arbitrary colors are assigned to the vertices in the diagram. DNA strand domains are represented by the positions placed on the arrow-pointing vertices according to their occurrence. All edges of the strand graph T are permissible edges. As all DNA sequences are assigned individually at the starting point of the program, i.e. the set of the current edges is empty."}, {"heading": "A = {(1, 1), (5, 1)},{(1, 2), (3, 1)},{(1, 3), (2, 3)},{(2, 1), (6, 1)},{(2,", "text": "2), (4, 1).toehold = \u2205. E = \u2205. In Fig. 12, the entire mechanism of theorem proof is represented by refuting the resolution by means of DNA strands by strand diagram T. In Fig. 12, the permissible edges are drawn by blue lines. Initially, the set of current edges E is empty, so all edges are allowable.The second side (domain Q *) of vertex 1 and the only side (Q) of vertex 3 are not pre-allocated and open to each other. Therefore, according to rule (GB), in the first step of the program, the permissible edge connecting these two edges is converted into the current edge.The current edge is drawn by red line.All remaining permissible edges of the vertex 3 are converted into current edges in a few steps according to the reduction rule (GB).Finally, all edges of the diagram are included in the resulting graphical structure. This indicates that the clause is the final strand of DNA."}, {"heading": "5. Conclusion", "text": "The chemical potential and flexibility of DNA strands have been used to model theorem evidence through resolution refutation.Formal language theory in the form of process calculations has been successfully used as a tool for modeling and analyzing DNA operations performed for theorem evidence in propositional logic, and the model based on formal language theory is efficiently interpreted through DNA strand graphics for better simulation.This new approach can be extended to design and modeling other expert systems based on first-order logic and unclear predictive logic."}], "references": [{"title": "Molecular computation of solutions to combinatorial problems", "author": ["L. Adleman"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1994}, {"title": "Bio-inspired computing: constituents and challenges", "author": ["R. Akerkar", "P.S. Sajja"], "venue": "International Journal of Bio-inspired Computation,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Programmable and autonomous computing machine made of biomolecules", "author": ["Y. Benenson", "T. Paz-Elizur", "R. Adar", "E. Keinan", "Z. Livneh", "E. Shapiro"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2001}, {"title": "Symbolic logic and mechanical theorem proving", "author": ["C.L. Chang", "R.C.T. Lee"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1997}, {"title": "Molecular Solutions for the Subset-sum Problem on DNA-based Supercomputing", "author": ["W.L. Chang", "M. Ho", "M. Guo"], "venue": "BioSystems, Vol. 73,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2004}, {"title": "DNA hairpins: Fuel for autonomous DNA devices", "author": ["S.J. Green", "D. Lubrich", "A.J. Turberfield"], "venue": "Biophysical Journal,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "DNA Implementation of Theorem Proving with Resolution Refutation in Propositional Logic. Revised Papers from the 8th International Workshop on DNA Based Computers: DNA Computing (DNA8)", "author": ["I.H. Lee", "J.Y. Park", "H.M. Jang", "Y.G. Chai", "Zhang B. T"], "venue": "Masami Hagiya and Azuma Ohuchi (Eds.). Springer-Verlag,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2002}, {"title": "A strand graph semantics for DNAbased computation", "author": ["R.L. Petersen", "M.R. Lakin", "A. Phillips"], "venue": "Theoretical Computer Science", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2016}, {"title": "Similarity-based Fuzzy Reasoning by DNA Computing", "author": ["K.S. Ray", "M. Mondal"], "venue": "International Journal of Bio-inspired Computation,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Classification of SODAR data by DNA computing", "author": ["K.S. Ray", "M. Mondal"], "venue": "New Mathematics and Natural Computation,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Logical inference by DNA strand algebra", "author": ["K.S. Ray", "M. Mondal"], "venue": "New Mathematics and Natural Computation,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2016}, {"title": "Design and self-assembly of two-dimensional DNA", "author": ["E. Winfree", "F. Liu", "L.A. Wenzler", "N.C. Seeman"], "venue": "crystals. Nature,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1998}, {"title": "A comparative study on Similarity based fuzzy reasoning method", "author": ["D.S. Yeung", "E.C.C. Tsang"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1997}, {"title": "Dynamic DNA nanotechnology using stranddisplacement reactions", "author": ["D.Y. Zhang", "G. Seelig"], "venue": "Nature Chemistry,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}], "referenceMentions": [], "year": 2017, "abstractText": "Because of several technological limitations of traditional silicon based computing, for past few years a paradigm shift, from silicon to carbon, is occurring in computational world. DNA computing has been considered to be quite promising in solving computational and reasoning problems by using DNA strands. Resolution, an important aspect of automated theorem proving and mathematical logic, is a rule of inference which leads to proof by contradiction technique for sentences in propositional logic and first-order logic. This can also be called refutation theoremproving. In this paper we have shown how the theorem proving with resolution refutation by DNA computation can be represented by the semantics of process calculus and strand graph.", "creator": "PDF24 Creator"}}}