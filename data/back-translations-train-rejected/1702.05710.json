{"id": "1702.05710", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Feb-2017", "title": "Polynomial Time Efficient Construction Heuristics for Vertex Separation Minimization Problem", "abstract": "Vertex Separation Minimization Problem (VSMP) consists of finding a layout of a graph G = (V,E) which minimizes the maximum vertex cut or separation of a layout. It is an NP-complete problem in general for which metaheuristic techniques can be applied to find near optimal solution. VSMP has applications in VLSI design, graph drawing and computer language compiler design. VSMP is polynomially solvable for grids, trees, permutation graphs and cographs. Construction heuristics play a very important role in the metaheuristic techniques as they are responsible for generating initial solutions which lead to fast convergence. In this paper, we have proposed three construction heuristics H1, H2 and H3 and performed experiments on Grids, Small graphs, Trees and Harwell Boeing graphs, totaling 248 instances of graphs. Experiments reveal that H1, H2 and H3 are able to achieve best results for 88.71%, 43.5% and 37.1% of the total instances respectively while the best construction heuristic in the literature achieves the best solution for 39.9% of the total instances. We have also compared the results with the state-of-the-art metaheuristic GVNS and observed that the proposed construction heuristics improves the results for some of the input instances. It was found that GVNS obtained best results for 82.9% instances of all input instances and the heuristic H1 obtained best results for 82.3% of all input instances.", "histories": [["v1", "Sun, 19 Feb 2017 07:19:52 GMT  (16kb,D)", "http://arxiv.org/abs/1702.05710v1", "The paper will appear in the proceedings of International Conference on Current Trends in Graph Theory and Computation which will be published in Electronic Notes on Discrete Mathematics (ENDM)"]], "COMMENTS": "The paper will appear in the proceedings of International Conference on Current Trends in Graph Theory and Computation which will be published in Electronic Notes on Discrete Mathematics (ENDM)", "reviews": [], "SUBJECTS": "cs.DS cs.AI", "authors": ["pallavi jain", "gur saran", "kamal srivastava"], "accepted": false, "id": "1702.05710"}, "pdf": {"name": "1702.05710.pdf", "metadata": {"source": "CRF", "title": "Polynomial Time Efficient Construction Heuristics for Vertex Separation Minimization Problem", "authors": ["Pallavi Jain", "Gur Saran", "Kamal Srivastava"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "It has been shown that it is the best way, which is able to hide itself in the position. (G) It is the best way, which is able to hide itself in the position. (G) It is the best way, which is able to hide itself. (G) It is the best way, which is able to hide itself in the position. (G) It is the best way, in which it is able to hide itself in the position. (G) It is the best way, in which the world is able. (G) It is the best way, which is able to hide itself in the position. (G) It is the best way, in which it is able to hide itself in the position. (G) It is the best way, in which the world is able. (G) It is the best way, in which the world is able. (G) It is the best way, in which it is able to hide itself in the position. (G) It is the best way, in which the world is able to hide itself in the world. (G) It is the best way, in which the world is able to hide. (G) It is the best way, in which the world is able to hide. (G) It is the best way, in which is the best way, in which the best way, in which the world is able to hide. (G). (G) It is the best way, in which is the best way, in which the best way, in which the world is the best way, in which the world is able to hide. (G). (G) It is the best way, in which is the best way, in which is the best way, in which the world in which is the world, in the world, in the world, in the world, in the world, in the world, in the world in the world, in the world, in the world in the world, in the world in the world, in the world, in the world in the world, in and in the world in and in the world in and in the world in the world, in and in the world, in and in the world in the world, in the world in and in the world in and in the world, in and in the world, in and in the world in and in the world in the world, in and in the world in and in the world in"}, {"heading": "2 Construction Heuristics", "text": "In this section, three construction euristics are proposed: These heuristics construct a layout by iteratively adding vertices to an initially empty layout. In each iteration, heuristic H 1 attempts to place a vertex u in the partial layout, minimizing its contribution, as well as the proportion of vertices already placed in the partial layout. The motivation behind H 2 and H 3 is that if adjacent vertices are placed closely, they contribute to fewer regions. To minimize the number of regions to which a vertex contributes, vertices of a lesser degree are placed in the first place in the partial layout. In the following sections, we describe the three construction euristics that are essentially greedy methods."}, {"heading": "2.1 Heuristic H 1", "text": "This procedure is outlined in algorithm 1. Let the layout be the (partial) layout under construction. Unvisited is the set of vertices of diagram G. The time complexity of H 1 is O (n2 \u00b7 \u2206 (G))."}, {"heading": "2.2 Heuristic H 2", "text": "Algorithm 2 presents heuristic H 2. Time complexity of heuristics H 2 is O (n2 \u00b7 log n).Step 1: unvisited = {1,..., n} Step 2: Select a vertex v that is not visited, so dG (v) is least Step 3: Layout = (v) Step 4: unvisited = unvisited Step 5: while | layout | 6 = n Step 6: S = {v'layout: v borders the least number of vertex in unvisited] Step 7: P = {w \u00b2 unvisited: w borders the largest number of vertex in S} Step 8: Q = {u \u00b2 P: u borders the least number of vertex in unvisited] Step 9: Select v \u00b2 Q randomly Step 10: Layout = (Layout, v) Step 11: unvisited = {v} Step 12: Figure 2: Heuristics 1: Heuristic H 1:"}, {"heading": "2.3 Heuristic H 3", "text": "This heuristics is similar to H 2, but in contrast to the selection in step 9 of heuristics H 2, a vertex v is preferred in the partially constructed arrangement with the lowest precision (v). The temporal complexity of H 3 corresponds to H 2."}, {"heading": "3 Computational Experiments", "text": "In this section we present the calculation experiments carried out to test the effectiveness of the proposed construction euristics, the code was implemented in Matlab 7.0, and all the experiments were carried out on an Intel i3-based system with 4GB RAM. The experiment to compare construction euristics was carried out on the four instances previously used for this problem [3]. The test kit includes Small, Harwell-Boeing (HB) diagrams, Grids and Trees. Since GVNS has been tested on Harwell-Boeing (HB) diagrams, Grids and Trees in the literature, construction euristics H 1 and GVNS are therefore only compared on these instances. The sequence of diagrams ranges from 9 to 2916. For each heuristic H 1, H 2 and H 3, 30 runs were performed and the best value of vertex separation recorded."}, {"heading": "3.1 Comparison between Construction Heuristics", "text": "In this section, the proposed construction euristics are compared with those available in the literature. Random represents a randomly generated solution = 71. C 1 and C 2 are the construction euristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4. Heuristics H 1, H 2 and H 3 were presented in this essay. Table 1 represents the average vertex separation for different construction euristics. The average vertex separation across all instances is indicated in the last column \"average.\" The results show that H 1 exceeds all heuristics. Table 2 shows the number of the best solution achieved with each heuristics. In the last column \"Sum\" the total number of instances for which heuristics achieve the best value is represented: H 3, number in bold: S 3, indicates that the value achieved with each heuristic is equal to 1. in this column 7H = the best result in 220."}, {"heading": "3.2 Comparison between H 1 and GVNS", "text": "In this section, the best structural euristics H 1 is compared with the metaheuristic General Variable Neighbouhood Strategy (GVNS) [5]. The average apex separation achieved by GVNS and H 1 is in Table 3. Figures in bold are the minimum in this column. Results show that H 1 performs better for trees, while the performance of GVNS is good for HB instances. Looking at the average across all instances, the performance of GVNS and H 1 is comparable. Table 4 shows the number of best solutions achieved for each hay ristics. For grids, GVNS and H 1 can both achieve optimal results. For trees, GVNS achieved optimal results in 40 out of 50 cases, while H 1 achieved optimal results in all tree cases. In the case of HB instances, GVNS achieved best results in 44 out of 62 cases, while H 1 achieved optimal results in 33 cases."}, {"heading": "4 Conclusion", "text": "In this paper, we have proposed three polynomic time construction euristics and compared them with other construction euristics. It has been observed that this construction euristics outperforms other construction euristics stated in the literature. H 1, the most powerful construction euristics, has also been compared with modern metaheuristic GVNS. This construction euristics achieves the best results in a greater number of cases than GVNS. Since a good initial population is expected to converge more quickly to an approximately optimal / optimal solution, the initial solutions generated with this construction euristics will lead to high-quality solutions in every metaheuristics."}], "references": [{"title": "Sanchez-Oro, Variable Neighborhood Search for the Vertex Separation Problem", "author": ["Duarte A", "L.F. Escudero", "R. Marti", "N. Mladenovic", "J.J.J. Pantrigo"], "venue": "Computers and Operations Research", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Comparative Study on Costructive Heuristics for the Vertex Separation Problem, Design of Intelligent Systems Based on Fuzzy Logic, Neural Networks and Nature-Inspired Optimization", "author": ["Garcia N. C", "H.J.F. Huacuja", "J.A.M. Flores", "R.A.P. Rangel", "J.J.G. Barbosa", "J.M.C. Valadez"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Addenda to the Survey of Layout Problems, Bulletin of the EATCS", "author": ["J. Petit"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Combining intensification and diversification strategies in VNS. An application to the Vertex Separation Problem", "author": ["Sanchez-Oro J", "J.J. Pantrigo", "A. Duarte"], "venue": "Computers and Operations Research", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}], "referenceMentions": [{"referenceID": 2, "context": "Vertex Separation minimization problem (VSMP) is to find a layout \u03c6\u2217 \u2208 \u03a6(G) of a graph G = (V,E) which minimizes the vertex separation (VS ) where V S = maxi\u2208[|V |] \u03b4(i, \u03c6,G) for a layout \u03c6 where, \u03b4(i, \u03c6,G) = |u \u2208 L(i, \u03c6,G) : \u2203v \u2208 R(i, \u03c6,G) \u2227 (u, v) \u2208 E(G)|, L(i, \u03c6,G) = {u \u2208 V : \u03c6(u) \u2264 i} and R(i, \u03c6,G) = {u \u2208 V : \u03c6(u) > i} [1, 4].", "startOffset": 325, "endOffset": 331}, {"referenceID": 0, "context": "VSMP is NP-complete in general and has applications in VLSI design, graph drawing and computer language compiler design [2].", "startOffset": 120, "endOffset": 123}, {"referenceID": 2, "context": "VSMP is polynomially solvable for grids, trees, permutation graphs and cographs [1, 4].", "startOffset": 80, "endOffset": 86}, {"referenceID": 0, "context": "This problem has been explored using metaheuristics namely, variable neighbourhood search by [2, 5]", "startOffset": 93, "endOffset": 99}, {"referenceID": 3, "context": "This problem has been explored using metaheuristics namely, variable neighbourhood search by [2, 5]", "startOffset": 93, "endOffset": 99}, {"referenceID": 1, "context": "[3] highlight the importance of construction heuristics in metaheuristics.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "We have also compared the results of H 1 with the state-of-the-art metaheuristic general variable neighbourhood search (GVNS) [5] and observed that the proposed construction heuristics improves the results for some of the input instances.", "startOffset": 126, "endOffset": 129}, {"referenceID": 1, "context": "The experiment to compare the construction heuristics was performed on the four sets of instances previously used for this problem [3].", "startOffset": 131, "endOffset": 134}, {"referenceID": 0, "context": "C 1 and C 2 are the construction heuristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4 have been proposed in [3].", "startOffset": 56, "endOffset": 59}, {"referenceID": 1, "context": "C 1 and C 2 are the construction heuristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4 have been proposed in [3].", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "In this section, the best performing construction heuristic H 1 is compared with the metaheuristic General Variable Neighbouhood Strategy (GVNS) [5].", "startOffset": 145, "endOffset": 148}, {"referenceID": 3, "context": "Table 3: Average vertex separation for GVNS [5] and H 1 Heuristics Grid(52) Tree(50) HB(62) Average GVNS 28.", "startOffset": 44, "endOffset": 47}], "year": 2017, "abstractText": "Vertex Separation Minimization Problem (VSMP) consists of finding a layout of a graph G = (V,E) which minimizes the maximum vertex cut or separation of a layout. It is an NPcomplete problem in general for which metaheuristic techniques can be applied to find near optimal solution. VSMP has applications in VLSI design, graph drawing and computer language compiler design. VSMP is polynomially solvable for grids, trees, permutation graphs and cographs. Construction heuristics play a very important role in the metaheuristic techniques as they are responsible for generating initial solutions which lead to fast convergence. In this paper, we have proposed three construction heuristics H 1, H 2 and H 3 and performed experiments on Grids, Small graphs, Trees and Harwell Boeing graphs, totaling 248 instances of graphs. Experiments reveal that H 1, H 2 and H 3 are able to achieve best results for 88.71%, 43.5% and 37.1% of the total instances respectively while the best construction heuristic in the literature achieves the best solution for 39.9% of the total instances. We have also compared the results with the state-of-the-art metaheuristic GVNS and observed that the proposed construction heuristics improves the results for some of the input instances. It was found that GVNS obtained best results for 82.9% instances of all input instances and the heuristic H 1 obtained best results for 82.3% of all input instances.", "creator": "LaTeX with hyperref package"}}}