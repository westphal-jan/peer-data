{"id": "1702.06970", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Feb-2017", "title": "A Realistic Dataset for the Smart Home Device Scheduling Problem for DCOPs", "abstract": "The field of Distributed Constraint Optimization has gained momentum in recent years thanks to its ability to address various applications related to multi-agent cooperation. While techniques to solve Distributed Constraint Optimization Problems (DCOPs) are abundant and have matured substantially since the field inception, the number of DCOP realistic applications and benchmark used to asses the performance of DCOP algorithms is lagging behind. To contrast this background we (i) introduce the Smart Home Device Scheduling (SHDS) problem, which describe the problem of coordinating smart devices schedules across multiple homes as a multi-agent system, (ii) detail the physical models adopted to simulate smart sensors, smart actuators, and homes environments, and (iii) introduce a DCOP realistic benchmark for SHDS problems.", "histories": [["v1", "Wed, 22 Feb 2017 19:10:30 GMT  (615kb,D)", "http://arxiv.org/abs/1702.06970v1", "15 pages, OPTMAS17"]], "COMMENTS": "15 pages, OPTMAS17", "reviews": [], "SUBJECTS": "cs.AI cs.DC", "authors": ["william kluegel", "muhammad aamir iqbal", "ferdinando fioretto", "william yeoh", "enrico pontelli"], "accepted": false, "id": "1702.06970"}, "pdf": {"name": "1702.06970.pdf", "metadata": {"source": "CRF", "title": "A Realistic Dataset for the Smart Home Device Scheduling Problem for DCOPs", "authors": ["William Kluegel", "Muhammad Aamir Iqbal", "Ferdinando Fioretto", "William Yeoh", "Enrico Pontelli"], "emails": ["wkluegel@cs.nmsu.edu,", "miqbal@cs.nmsu.edu,", "wyeoh@cs.nmsu.edu,", "epontell@cs.nmsu.edu,", "fioretto@umich.edu"], "sections": [{"heading": "1 Introduction", "text": "[11,15,18] While techniques for solving PS and COP problems have emerged as one of the leading models of action for controlling the autonomous behavior of actors, where both algorithms and communication models are driven by the structure of the specific problem. [11,15,18] Since the research problem involves a variety of algorithms, it has been proposed to solve and typically classify DCOPs as complete or incomplete based on whether they can guarantee the optimal solution or whether they act as the optimum for shorter execution times. Furthermore, each of these classes can be divided into different groups depending on the degree of locality used by the algorithms (e.g. partial centralization). [9,10,16] The way local information is updated (e.g. synchronous execution times). [5,8,11], and the nature of the exploration process adopted (e.g., search-based on [9,11,19], or sampling-based procedures [13,6]."}, {"heading": "2 Scheduling Device in Smart Homes", "text": "A Smart Home Device Scheduling (SHDS) problem is defined by the tuple < H, Z, L, PH, PZ, H, \u03b8 >, where: H = {h1, h2,..} is a neighborhood of smart homes that is able to communicate with each other; Z = hi, HZi is a series of smart homes, where Zi is the number of devices in the Smart Home Hi (e.g. vacuum cleaner robot, smart thermostat); L = hi, HLi is a series of locations where Li is the number of locations in the Smart Home Hi (e.g. living room, kitchen); PH is the number of state properties of the Smart Home (e.g. cleanliness, temperature); PZ is the amount of state properties of the devices (e.g. battery charge for a vacuum cleaner robot); H is the planning horizon of the problem. We use T = {1, H} the number of time points; T = the number of state properties of the vacuum cleaner; H is the number of states (e.g.)."}, {"heading": "2.1 Smart Devices", "text": "For each house, the set of smart appliances Zi is divided into a set of actuators Ai and a set of sensors Si. Actuators can influence the state of the house (e.g. heaters and ovens can influence the temperature in the house) and possibly their own condition (e.g. vacuum cleaner robots deplete their battery power while running). On the other hand, sensors monitor the state of the house. Each appliance z-Zi of a house is defined by a tuple < 'z, az, \u03b3Hz, \u03b3Zz >, where \"z-Li\" denotes the relevant position in the house that it can act or perceive, Az is the set of measures it can perform, zHz: Az \u2192 2PH maps the actions of the appliance to the relevant state characteristics of the house, and Zz: Zz: Z: Z \u2192 2PZ maps the actions of the appliance to its relevant state characteristics. We will use the following example during this paper.1."}, {"heading": "2.2 Device Schedules", "text": "To control the energy profile of a smart home, we need to describe the behavior of smart devices that operate in the smart home over time. We formalize this concept with the term \"device time intervals.\" We use \"tz-az\" to denote the action of the device z in time step t, and \"tz-X\" to denote the series of actions of the devices in the time interval from \"ta\" to \"tb.\" Consider Figure 1 (left). The top line of Figure 1 (left) shows a possible schedule < R, R, C, C, R, R, C, R > is a sequence of actions for the devices in \"X\" within the time interval from \"ta\" to \"tb.\" Consider Figure 1 (left) as possible targets < R, C, R >, R > for the devices in \"X,\" C, R > for a vacuum cleaner from \"1400 hrs, each time step being 30 minutes."}, {"heading": "2.3 Scheduling Rules", "text": "We define two types of planning rules: Active Planning Rules (ASRs), which define user-defined targets for a desired state of the house (e.g. the battery charge of a vacuum cleaner robot is always between 0% and 100%), and Passive Planning Rules (PSRs), which define implicit constraints on equipment that must always be kept (e.g. the battery charge of a vacuum cleaner robot is always between 0% and 100%). We provide a formal description of the grammar of the planning rules in Section 3.4.Example 2. The planning rule (1) describes a target state in which the living room floor is at least 75% clean (i.e., at least 75% of the floor is cleaned by a vacuum cleaner robot) to 1800 hours: Living room cleanliness before 1800 (1) zv Battery Charge before 1800 (1) zv Battery Charge before 0 always (2) zv Battery Charge before 100 always (3) and Planning Rules (3)."}, {"heading": "2.4 Feasibility of Schedules", "text": "To ensure that a target state can be achieved over the desired timeframe, the system uses a predictive model of the various state properties. This predictive model captures the evolution of a state property over time and how such state ownership is affected by a certain joint action of the relevant actuators. We describe the details of the physical predictive models used to generate our benchmark, defined in Section 3.3.Definition 2 (Prediction Model). A predictive model for a state property (either the home or a device) is a function."}, {"heading": "2.5 Optimization Objective", "text": "In addition to the search for practicable time plans, the goal of the SHDS problem is to optimize the total cost of energy consumption. Each action of a device z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z"}, {"heading": "2.6 DCOP Mapping", "text": "The SHDS problem can be assigned to a DCOP as follows: \u2022 AGENTS: Each actor ai-A in the DCOP is assigned to a home hi-H. \u2022 VARIABLES and DOMAINS: Each actor ai controls the following set of variables: \u2022 For each actor z-Ai and each time step t-T, a variable xti, z whose domain is the action set in Az. The sensors in Si are considered to be always active and are therefore not directly controlled by the actor. \u2022 An auxiliary interface variable x-tj whose domain is the set {0,...., 0-Z-Z-Z (a), which represents the aggregate energy consumed by all devices in the house at any time. \u2022 CONSTRAINTS: There are three types of limitations: \u2022 Local soft restrictions (i.e., restrictions that include only variable energy costs weighted in each step)."}, {"heading": "3 Model Parameters and Realistic Data Set Generation", "text": "This section describes the parameters and models used to generate our SHDS datasets. First, we describe the structural parameters of the house, which in turn are used to calculate the predictive models of the house. Next, we report on a detailed list of the smart devices used in our datasets and discuss their power consumption and impact on the living environment. Then, we describe the predictive models used to record changes in the living environment and device states. Finally, we report on the BNF for the planning rules introduced in Section 2.3 and the pricing scheme applied in our experiments."}, {"heading": "3.1 House Structural Parameters", "text": "We consider three house sizes (small, medium and large), and the floor plans for three house structures are shown in Figure 2. Our house structure model simplifies the floor plans shown in Figure 2 by ignoring the interior walls. This abstraction is sufficient to capture the richness of the predictive models introduced in Section 2.4. Table 1 reports on the parameters of the houses used in our SHDS dataset, the house sizes are expressed in meters (L x W), the wall height is assumed to be 2.4 m, and the window surface to be the area of the walls covered with windows. [17] The total heat transfer coefficient (also referred to as the U value) describes how well a building element dissipates heat. It is defined as the heat transfer rate (in watts) by an area (m2) of a structure divided by the temperature difference within the structure [15]. The wall material is assumed to be a 150mm high heat transfer coefficient of U2.9 kg (80 watts) with a heat transfer coefficient of 3.3 walls."}, {"heading": "3.2 Smart Devices", "text": "In this section, we report on the complete list of smart devices (sensors and actuators) used by smart homes in our SHDS datasets. Sensors Table 2 reports on the sensors used in our SHDS problem. For each sensor, we report an identifier (ID), state property (see Section 2.1), which it detects, and its location in the house. All sensors are considered to be permanently active and record a single state property at a location (e.g. an air temperature sensor is located in a house, a charge sensor is located on a device). Actuators Table 3 reports on the list of actuators. It tabulates the actuator type and its model, its possible actions, power consumption (in kWh), the state properties affected by each of its action, and the effects on the associated prediction models in small, medium, and large house sizes. The latter represent the incremental size that defines the physical action of the actuator, as the equilibrium effect of the system is in the 4."}, {"heading": "3.3 Physical models", "text": "In this section, we describe the physical models used to calculate the effective values of the actuators. (see Table 3) These values, in turn, are used within the SHDS prediction models as described in Equation (4). (Dis) Charging / discharging model that we apply to our battery-powered devices is as follows: For a given battery with a charging / discharging efficiency of the battery, the charging time of the battery b + \u03b1 (expressed in KWh), voltage Vb, and electrical charge Eb (expressed in amperes-hour (Ah), and the assumption of a 100% charging / discharging efficiency of the battery is assumed, the charging time of the battery b + \u03b1 and the time of discharge are respectively expressed as: b + \u03b1 = Eb C +; b \u2212 \u03b1 = Eb C \u2212 \u03b1) expressed in hours, (11) expressed in hours in which C + C and C \u2212 respectively the charging time in the use."}, {"heading": "3.4 Scheduling Rules", "text": "The full Backus Naur Form (BNF) for the Smart Home Hi-H Planning Rules introduced in Section 2.2 < Rules >.... = < Simple Rule > | < Simple Rule > < Simple Rule > < Active Rule > < Passive Rule > < Active Rule >.... = < Location > < State Property > < Location > < State Property > < Ratio > < Time > < Time > < Location > < Location > < State Property > < Location > < State Property > < Location > = \"< State Property > < Ratio > < PZ < Ratio > < PZ < T > for all units; < < < < T for all units < < < < T for all units < < < < T for all units."}, {"heading": "3.5 Pricing Schema", "text": "For the evaluation of our SHDS records, we have implemented a pricing scheme used by Pacific Gas & Electric Co. for its customers in parts of California, 3 comprising 7 tiers ranging from $0.198 per kWh to $0.849 per kWh (see Table 53 at https: / / goo.gl / vOeNqj)."}, {"heading": "4 SHDS Dataset", "text": "We now introduce a dataset for the SHDS problem for DCOPs and calculate the density of houses in each city. The average density (in houses per square kilometer) is 718 in Des Moines, 1357 in Boston, and 3766 in San Francisco. For each city, we have created a 200m x 200m grid in which the distance between houses is 20m, and randomly placed houses in this grid until the density of the density recorded is the same. We then divided the city into k (= | H |) coalitions in which each house can communicate with all the houses in its coalition. Finally, we ensure that there are no two coalitions in this grid until the density is identical to the density recorded. Tables 9, 10, and 11 each report on the dates of Des Moines, Boston, and San Francisco, in which we generate the number of agents - down to the largest (83) summarized (schematics) within the respective rules (23)."}, {"heading": "5 Conclusions", "text": "With the proliferation of smart devices, the automation of smart home scheduling can be a powerful tool for demand-side management within the Smart Grid Vision. In this Paper4, we adopt the JaCoP Solver (http: / / www.jacop.eu /), which we proposed for the Smart Home Device Scheduling (SHDS) problem, which formalizes the problem of device planning and coordination in multiple smart homes as a multi-agent system and its allocation to a DCOP. In addition, we described in detail the physical models used to model the sensors and actuators of the Smart Home, as well as the physical model, which regulates the effects of device actions on the characteristics of the home (e.g. temperature, cleanliness). Finally, we reported on a realistic dataset for the SHDS problem for DCOPs, which includes 2351 cases of increasing difficulty."}], "references": [{"title": "Decentralised coordination of low-power embedded devices using the Max-Sum algorithm", "author": ["A. Farinelli", "A. Rogers", "A. Petcu", "N. Jennings"], "venue": "In AAMAS, pages 639\u2013646,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "A dynamic programming-based MCMC framework for solving DCOPs with GPUs", "author": ["F. Fioretto", "W. Yeoh", "E. Pontelli"], "venue": "In Proceedings of the International Conference on Principles and Practice of Constraint Programming (CP), pages 813\u2013831,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "A multiagent system approach to scheduling devices in smart homes", "author": ["F. Fioretto", "W. Yeoh", "E. Pontelli"], "venue": "In AAMAS, page (to appear),", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2017}, {"title": "Asynchronous Forward-Bounding for distributed COPs", "author": ["A. Gershman", "A. Meisels", "R. Zivan"], "venue": "JAIR, 34:61\u201388,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2009}, {"title": "Distributed partial constraint satisfaction problem", "author": ["K. Hirayama", "M. Yokoo"], "venue": "In CP, pages 222\u2013236,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1997}, {"title": "Solving distributed constraint optimization problems using cooperative mediation", "author": ["R. Mailler", "V. Lesser"], "venue": "In AAMAS, pages 438\u2013445,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2004}, {"title": "ADOPT: Asynchronous distributed constraint optimization with quality guarantees", "author": ["P. Modi", "W.-M. Shen", "M. Tambe", "M. Yokoo"], "venue": "AIJ, 161(1\u20132):149\u2013180,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2005}, {"title": "Distributed Gibbs: A memory-bounded samplingbased DCOP algorithm", "author": ["D.T. Nguyen", "W. Yeoh", "H.C. Lau"], "venue": "In AAMAS, pages 167\u2013174,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "DUCT: An upper confidence bound approach to distributed constraint optimization problems", "author": ["B. Ottens", "C. Dimitrakakis", "B. Faltings"], "venue": "In AAAI, pages 528\u2013534,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Quality guarantees on k-optimal solutions for distributed constraint optimization problems", "author": ["J. Pearce", "M. Tambe"], "venue": "In IJCAI, pages 1446\u20131451,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "A scalable method for multiagent constraint optimization", "author": ["A. Petcu", "B. Faltings"], "venue": "In IJCAI, pages 1413\u20131420,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2005}, {"title": "PC-DPOP: A new partial centralization algorithm for distributed optimization", "author": ["A. Petcu", "B. Faltings", "R. Mailler"], "venue": "In IJCAI, pages 167\u2013172,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2007}, {"title": "Principles of Heating, Ventilation and Air Conditioning in Buildingss", "author": ["J.E.M.J. W", "Braun"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "Distributed problem solving", "author": ["W. Yeoh", "M. Yokoo"], "venue": "AI Magazine, 33(3):53\u201365,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Distributed stochastic search and distributed breakout: Properties, comparison and applications to constraint optimization problems in sensor networks", "author": ["W. Zhang", "G. Wang", "Z. Xing", "L. Wittenberg"], "venue": "AIJ, 161(1\u20132):55\u201387,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2005}], "referenceMentions": [{"referenceID": 6, "context": "Distributed Constraint Optimization Problems (DCOPs) [11,15,18] have emerged as one of the prominent agent models to govern the agents\u2019 autonomous behavior, where both algorithms and communication models are driven by the structure of the specific problem.", "startOffset": 53, "endOffset": 63}, {"referenceID": 10, "context": "Distributed Constraint Optimization Problems (DCOPs) [11,15,18] have emerged as one of the prominent agent models to govern the agents\u2019 autonomous behavior, where both algorithms and communication models are driven by the structure of the specific problem.", "startOffset": 53, "endOffset": 63}, {"referenceID": 13, "context": "Distributed Constraint Optimization Problems (DCOPs) [11,15,18] have emerged as one of the prominent agent models to govern the agents\u2019 autonomous behavior, where both algorithms and communication models are driven by the structure of the specific problem.", "startOffset": 53, "endOffset": 63}, {"referenceID": 4, "context": ", partial centralization) [9,10,16], the way local information is updated (e.", "startOffset": 26, "endOffset": 35}, {"referenceID": 5, "context": ", partial centralization) [9,10,16], the way local information is updated (e.", "startOffset": 26, "endOffset": 35}, {"referenceID": 11, "context": ", partial centralization) [9,10,16], the way local information is updated (e.", "startOffset": 26, "endOffset": 35}, {"referenceID": 5, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 14, "endOffset": 24}, {"referenceID": 9, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 14, "endOffset": 24}, {"referenceID": 10, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 14, "endOffset": 24}, {"referenceID": 0, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 41, "endOffset": 49}, {"referenceID": 3, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 41, "endOffset": 49}, {"referenceID": 6, "context": ", synchronous [10,14,15] or asynchronous [5,8,11]), and the type of exploration process adopted (e.", "startOffset": 41, "endOffset": 49}, {"referenceID": 4, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 15, "endOffset": 24}, {"referenceID": 6, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 15, "endOffset": 24}, {"referenceID": 14, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 15, "endOffset": 24}, {"referenceID": 10, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 42, "endOffset": 48}, {"referenceID": 0, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 42, "endOffset": 48}, {"referenceID": 8, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 68, "endOffset": 77}, {"referenceID": 7, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 68, "endOffset": 77}, {"referenceID": 1, "context": ", search-based [9,11,19], inference-based [15,5], or sampling-based [13,12,6]).", "startOffset": 68, "endOffset": 77}, {"referenceID": 2, "context": "Motivated by these issues, we recently introduced the Smart Home Device Scheduling (SHDS) problem [7], which formalizes the problem of coordinating smart devices ar X iv :1 70 2.", "startOffset": 98, "endOffset": 101}, {"referenceID": 6, "context": "DCOP A Distributed Constraint Optimization Problem (DCOP) [11,18] is described by a tuple \u3008X ,D,F ,A, \u03b1\u3009, where: X = {x1, .", "startOffset": 58, "endOffset": 65}, {"referenceID": 13, "context": "DCOP A Distributed Constraint Optimization Problem (DCOP) [11,18] is described by a tuple \u3008X ,D,F ,A, \u03b1\u3009, where: X = {x1, .", "startOffset": 58, "endOffset": 65}, {"referenceID": 12, "context": "It is defined as the rate of heat transfer (in watts) through one unit area (m) of a structure divided by the difference in temperature across the structure [17].", "startOffset": 157, "endOffset": 161}, {"referenceID": 12, "context": "These are commonly adopted materials in the US house construction industry [17].", "startOffset": 75, "endOffset": 79}, {"referenceID": 12, "context": "We assume a background load consumption which account of a medium-size refrigerator (120W ), a wireless router (6W ), and a set of light bulbs (collectively 40W ) [17].", "startOffset": 163, "endOffset": 167}, {"referenceID": 12, "context": "The heat gain from the background house appliances is computed according to [17](Table 9.", "startOffset": 76, "endOffset": 80}, {"referenceID": 12, "context": "We consider the heat gain from people within the house, and computed as in [17](Table 9.", "startOffset": 75, "endOffset": 79}, {"referenceID": 12, "context": "Air Temperature Model The air temperature predictive model is computed following standard principle of heating and ventilation [17] and described as follows.", "startOffset": 127, "endOffset": 131}, {"referenceID": 12, "context": "24 following [17].", "startOffset": 13, "endOffset": 17}, {"referenceID": 9, "context": "Room air temperature r \u2208 {\u2264, <,=, >,\u2265} g1 \u2208 [14, 28] \u3008time\u3009 Room floor cleanliness r \u2208 {=, >,\u2265} g2 \u2208 [0, 100] \u3008time\u3009", "startOffset": 44, "endOffset": 52}, {"referenceID": 5, "context": "Electric Vehicle charge r \u2208 {=, >,\u2265} g3 \u2208 [0, 100] \u3008time\u3009 Water heater temperature r \u2208 {\u2264, <,=, >,\u2265} g4 \u2208 [10, 45] \u3008time\u3009", "startOffset": 106, "endOffset": 114}], "year": 2017, "abstractText": "The field of Distributed Constraint Optimization has gained momentum in recent years thanks to its ability to address various applications related to multi-agent cooperation. While techniques to solve Distributed Constraint Optimization Problems (DCOPs) are abundant and have matured substantially since the field inception, the number of DCOP realistic applications and benchmark used to asses the performance of DCOP algorithms is lagging behind. To contrast this background we (i) introduce the Smart Home Device Scheduling (SHDS) problem, which describe the problem of coordinating smart devices schedules across multiple homes as a multi-agent system, (ii) detail the physical models adopted to simulate smart sensors, smart actuators, and homes environments, and (iii) introduce a DCOP realistic benchmark for SHDS problems.", "creator": "LaTeX with hyperref package"}}}