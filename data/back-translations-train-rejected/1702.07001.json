{"id": "1702.07001", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Feb-2017", "title": "Theoretical and Experimental Analysis of the Canadian Traveler Problem", "abstract": "Devising an optimal strategy for navigation in a partially observable environment is one of the key objectives in AI. One of the problem in this context is the Canadian Traveler Problem (CTP). CTP is a navigation problem where an agent is tasked to travel from source to target in a partially observable weighted graph, whose edge might be blocked with a certain probability and observing such blockage occurs only when reaching upon one of the edges end points. The goal is to find a strategy that minimizes the expected travel cost. The problem is known to be P$\\#$ hard. In this work we study the CTP theoretically and empirically. First, we study the Dep-CTP, a CTP variant we introduce which assumes dependencies between the edges status. We show that Dep-CTP is intractable, and further we analyze two of its subclasses on disjoint paths graph. Second, we develop a general algorithm Gen-PAO that optimally solve the CTP. Gen-PAO is capable of solving two other types of CTP called Sensing-CTP and Expensive-Edges CTP. Since the CTP is intractable, Gen-PAO use some pruning methods to reduce the space search for the optimal solution. We also define some variants of Gen-PAO, compare their performance and show some benefits of Gen-PAO over existing work.", "histories": [["v1", "Wed, 22 Feb 2017 20:57:29 GMT  (1343kb)", "http://arxiv.org/abs/1702.07001v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["doron zarchy"], "accepted": false, "id": "1702.07001"}, "pdf": {"name": "1702.07001.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "One of the problems in this context is the Canadian Traveler Problem (CTP). CTP is a navigation problem in which an agent is assigned to travel from the source to the destination in a partially observable, weighted chart, the edge of which could be blocked with a certain probability, and such a blockage occurs only when he reaches one of the endpoints of the edge. The goal is to find a strategy that minimizes the expected travel costs. The problem is known as P # hard. In this paper, we examine the CTP theoretically and empirically. First, we study the Dep-CTP, a CTP variant we introduced that assumes dependencies between edge status. We show that Dep-CTP is intractable, and then we analyze two of its subclasses on disjunct paths. Second, we develop a general algorithm that optimally solves the CTP status."}, {"heading": "1 Introduction 3", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2 Background 6", "text": "To this end, a committee of inquiry has also been set up to examine whether the data is from the past."}, {"heading": "3 Theoretical Analysis of CTP 39", "text": "3.1 CTP with dependencies........................... 39 3.2 CTP forward curve........................ 50 3.3 CTP-PATH-DEP......................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................"}, {"heading": "4 Generalizing PAO* 83", "text": "4.1 General spread AO *.............. 834.1.1 Gene PAO heuristics............... 84 4.1.2 Removal of double nodes....................."}, {"heading": "5 Empirical Results 91", "text": "5.1 Graph uncertainty variation.............. 91 5.2 Gene PAO heuristic estimate............................................................................................................................................................................................................................................. 975.3 Open probability variation........."}, {"heading": "6 Summary 103", "text": "This year it is more than ever before."}, {"heading": "2.1 Markov Decision Process", "text": "A Markov Decision Process (MDP) is a framework for sequential stochastic decision problems with a fully observable environment. (Formally, MDP is defined by the tuple < S, T, R >, where S is a finite series of states in which S describes the environment in a specific time step. (A, A, S, S, S, S, S) is the transition function in which T (s, a, s) describes the probability of entering a state s s s s s s s s s s s. (S, S, S, S, S) the procedure is a series of measures. (S, S, S, S, S, S, S) is the reward function indicating the reward function. (s, s, s, s, s) which is received by the transfer of state usefulness. (S, S, S, S, S) after the implementation of measures a s.6CHAPTER 2. BACKGROUND 7In each time step the state chooses an action."}, {"heading": "2.1.1 Policy Iteration", "text": "The algorithm is based on two steps: The first step is the evaluation, in which the algorithm evaluates the values of the states given a set of measures for each state by: V \u03c0ki + 1 (s) \u2190 s \u00b2 T (s, \u03c0k (s), s \u00b2) [R (s, \u03c0k (s), s \u00b2) + \u03b3V \u03c0ki (s \u00b2)] This can be achieved by solving a series of linear equations. After the values for the given measures have been calculated, the algorithm performs the second step: Improvement. The algorithm checks whether it can improve the policy by choosing a new measure for the state. If such a measure exists, the policy performs the new measure."}, {"heading": "2.2 Partially Observable Markov Decision Process", "text": "A partially observable Markov decision-making process (POMDP) is a generalization of the standard MDP, so that the environment is not fully observable and allows for imperfect information about the current state of the environment. In the real world, input may not always be exactly where the data can be received with a noise. In robot navigation, for example, the robot will receive its input through sensors that do not accurately describe the environment. Such problems arise in a wide range of application technologies, including assistive technologies, mobile robotics, and preference cellicitation. Of course, many of the real POMDP problems are modeled by a continuous state and observations. For example, in a robot navigation task, the state will correspond to coordinates in space and the observations can correspond to the distance measured by a common approach."}, {"heading": "2.2.1 Value Iteration", "text": "Defining the probability update and the reward function for the faith state, we can turn the POMDP into a faith state MDP by transforming the CHAPTER 2nd BACKGROUND 13POMDP problem into a fully observable MDP, in which the faith state of the POMDP is reduced to the simple state of the MDP. Here, the MDP is continuous and over | S | dimensional state space. The transformation allows the application of a value function for each faith state b is the reward for the best action plus the discounted expected reward of the resulting faith state V (b, a) + \u03b3 b, b \u00b2 b \u00b2 b, b \u00b2 V (bao)]. This means that the value of the faith state b is the reward for the best action plus the discounted expected reward of the resulting faith state V (bao), where b \u00b2 o is the unique faith state, the solution to the value of the faith state b is the reward for the best action plus the discounted expected reward of the resulting faith state V (bao), where b \u00b2 o is the optimized faith state, the solution to the advertisement state, o \u00b2, o \u00b2, o \u00b2, o - a solution."}, {"heading": "2.3 The Canadian Traveler Problem", "text": "In fact, it is a matter of a way in which it is a matter of a way in which people are able to put themselves in the world, in which they are able to change the world, and in which people are able to change the world, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change, to change. \""}, {"heading": "2.3.1 CTP with Dependencies in Disjoint Path Graphs", "text": "Since CTP gene is extremely complicated, we will focus on some special cases w.r.t. the topology of graph G. Specifically, we will examine the basic CTP without remote sensing, where G is a disjoint path graph (w.r.t. s, t). Since this case is known to be solvable in closed form in polynomial time, we will generalize it to the case where edges are dependent and edge weights are binary (blocked / unblocked) random variables. Thus, we will consider CTP-DEP, defined by 5-fold (G, W, w, s, t), where G is an undirected CTP graph, W is a Bayes network representing the edge blocking distribution model, w is a function that denotes the edge weights (for unblocked edges), and s, t are the start and target verticles respectively linked as DECAPT2, as we will show the optimum CTP fade for both cases, as the 17P is the optimum one for both cases."}, {"heading": "2.4 AND/OR Graphs", "text}, {"heading": "2.4.1 AO*", "text": "This year, it is more than ever before until it is able to retaliate."}, {"heading": "2.4.2 CTP and AND/OR graphs", "text": "Graphic is a natural structure for the representation of the state space of CTP zi zi, where the policy of CTP is not able to realize all relevant storylines and storylines. (D) Graphic Graphic Graphic is the answer to the question whether the storylines and storylines that can be found in the individual storylines and storylines of the individual storylines are defined by a certain vertex. (D) Graphic Graphic Graphios Graphios is the way in which the storylines and storylines of the individual storylines in the individual storylines and storylines storylines are defined by a particular vertex. (D) Storylines Graphios Graphios Graphios is the way in which the storylines and storylines of the individual storylines in the individual storylines and storylines are defined by a particular vertex. (D) The AND knots represent the storylines, since the CTP is a 2."}, {"heading": "2.5 Models for the Canadian Traveler Problem", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.5.1 POMDP for CTP", "text": "In this section we show that CTP can be modeled by POMDP. Let I = = (G, P, w, s, t) be an instance of basic CTP, and I \u2032 = (G, P, w, SC, s, s, t) be an instance of CTP-with-sensing, where G = (V, E). Let POMDP M = (S, A, Tr, R, Z, O, s0), we show how I and I'be modeled by M as follows: CHAPTER 2. BACKGROUND 25CHAPTER 2. BACKGROUND 26actions, in which agent that performs a = Sense (e), senses an edge e E. This action can be performed by any vertex v."}, {"heading": "2.5.2 Belief State for Representing the Environment of CTP", "text": "s) who is in a position to be in a position to be in a position to be in a position in which she is in a position to be in a position to be in a position in which she is in a position to be in a position to be in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in a position in which she is in which she is in a position in which she is in a position in which she is in which she is in a position in which she is in a position in which she is in which she is in a position in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in a position in which she is in which she is in which she is in a position in which she is in a position in which she is in which she is in which she is in a position in which she is in which she is in which she is in which she is in a position."}, {"heading": "2.5.3 Belief MDP for CTP", "text": "b), b), b), b), b), b), b), b), b), b), b), b), b), b), b (b), b), b), b), b), b), b (b), b (b), b (b), b (b), b (b), b (b), b), b), b), b), b (b), b), b (b), b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b (b), b), b (b), b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b (b), b (b), b, b (b), b (b), b (b), b (b), b (b), b (b), b (b), b), b (b), b (b), b (b), b), b (b), b (b), b (b), b (b), b), b (b), b (b), b (b), b (b), b), b (b), b, b (b), b (b), b), b, b, b (b), b, b (b), b, b, b, b), b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b, b), b, b, b, b, b, b, b, b"}, {"heading": "2.6 Related Work", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.6.1 Different Variation of CTP", "text": "In the absence of approximate solutions, various versions of special classes of graphs have been proposed where the exact solution can be found in polynomial time. [2] have examined the case of recoverable CTP, where each vertex is associated with a specific recovery time to reopen any blocked edge that comes with it. If an agent finds a blocked edge e, he can either traverse another edge or wait for a period of time to check whether e has been opened. The basic CTP is a special case of recoverable CTP where all recovery times are infinitely large. There are two variations of recoverable CTP, deterministic and pochastical. In deterministic variation, the assumption is that the number of edges that can be blocked is limited. In stochastic variation, each edge is associated with a probability that it will be blocked while assuming that the recovery time is not relative to the travel time."}, {"heading": "2.6.2 Disjoint Path Graphs", "text": "The proof is based on the property that commits the optimal policy, which guarantees that when an agent follows a path, the optimal action is continued until the goal is reached, it reaches a blocked edge. The optimal policy of the CTP is on the disjoint path to pursue the paths through their sequence. The optimal policy of the CTP on the disjoint path is that the paths through their sequence of Di-parameters is connected to every path in G. The optimal policy is to continue the path until reaching the goal, unless it reaches a blocked edge. The optimal policy of the CTP is on the disjoint path to pursue the paths."}, {"heading": "2.6.3 CTP with Sensing", "text": "The CTP with scanning is a more difficult problem than the basic CTP, since a simple reduction of actions can be constructed from any CTP instance: The graphics of the basic CTP is the graphics of the CTP with scanning, but the scanning costs of all edges are large enough that scanning an edge is never worthwhile. As such, the expected costs of the two optimal strategies are equivalent. [3] Heuristic search algorithms To facilitate the search for a solution to the CTP with scanning, some heuristic-based algorithms have been proposed. However, the algorithms do not offer an optimal solution, they can be much simpler. [4] have proposed the FSSN algorithm, which is based on the heuristic assumption of free space [4] assumes that edges are consistent unless it is specifically known that the FSSN policy never leads to a path leading to a path from one of the senor to one of the senx, but to one of the senx."}, {"heading": "2.6.4 Propagating AO*", "text": "AO * takes advantage of heuristic search to avoid undesirable states. However, in many situations, AO * examines far more states than necessary. AO * (PAO *) [1] prevalence is an extension of AO * that takes a step forward to facilitate the search. PAO * propagates heuristic values on a larger scale, minimizing the expansion of non-terminal nodes. PAO * is based on a specific variation of the AO * algorithm; Ferguson et al. constructed an algorithm that solves a variation of the CTP, in which most of the graph (edges) can be observed, so that only a single unknown edge (called squeeze point) can occur on a vertex (in the original paper, the squeeze points are called \"faces\"). As such, each random node (AND node) solves the reproductive value that the child is progressing."}, {"heading": "3.1 CTP with Dependencies", "text": "\"It is not as if it were an imperfect solution.\" \"It is not as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"It is as if.\" \"\" It is as if. \"\" \"It is as if.\" \"\" It is as if. \"\" \"It is as if.\" \"\" It is as if. \".\" \"\". \"\" \"It is as if...\" \"...\" \"\" \"...\" \"...\" \"........\" \"........\"... \"\"........ \"\"... \"\"........ \"\" \"\"... \"...\" \"\"... \"\" \"\"... \"\" \"\" \"...\" \"\" \"\" \".\" \"\" \""}, {"heading": "3.2 CTP-Forward-Arcs", "text": "Let's make G = (V, E) a dissatisfied path of CTP-PATHDEP and W = (X, Y). \"Let's make G = (V, E) a dissatisfied path of CTP-PATHDEP and W = (G, Y).\" Let's make it so that the CTP-PATH-PATH-DEP is a special case of CTP-DEP if eij is closer to s than eic definition 3.2.2. CTP-DEP-Dependency (CTP-FOR-DEP) is a special case of CTP-DEP, so that all arcs in W are forward arcs.Theorem 3.2.3. CTP-FOR-DEP is solvable in polynomial time.Proof."}, {"heading": "3.3 CTP-PATH-DEP", "text": "The definition 3.1.CTP-DEP of F is satisfactory."}, {"heading": "3.4 Theoretical Properties of Belief-MDP for CTP", "text": "In the following we will define an instance I = (G, P, s, t) where G = (V, E) is. < E, BDP MS = (B, A, Tr, R, b0) of I where S is the state rate of I.4.1. < E, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, B, O."}, {"heading": "4.1 General Propagation AO*", "text": "In many cases, PAO * drastically reduces runtime by reducing the state space, but assumes that each vertex is connected to at most one unknown edge, so that each AND node in the AND / OR diagram has at most two successors. We introduce the generalized AO * propagation algorithm (Gen-PAO for short), a generalization of PAO * that does not require any prior knowledge of the diagram (except for the edges that occur to s, which are always defined as open). Gen-PAO also triggers the sensing CTP. Each sampling action is associated with a sampling AND node, with each sensor node having only two child nodes for the two possible states of the detected edge (Open / Blocked). This variant is extremely harder than the basic CTP, since the agent scans any unknown edge in any state, and therefore has two child nodes for the two possible states of the detected edge (Open / Blocked)."}, {"heading": "4.1.1 Gen-PAO Heuristics", "text": "Similar to AO * and PAO *, each iteration of Gen-PAO is based on two phases: b), b), b), b), b), c), c), c), c), c), c), c), c), c), c), c), c), c), c), c \", c\", c \", c\", c \", c\", c \", c\", c \"c, c, c, c\" c, c, c, c, c, \"c, c, c,\" c, c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c, c, c, c,\" c, c, c, \"c, c, c, c,\" c, c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c, c,\" c, \"c,\" c, \"c,\" c, \"c, c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,\" c, \"c,"}, {"heading": "4.1.2 Eliminating Duplicate Nodes", "text": "In most cases, Gen-PAO extends the same node more than once. (This can lead to high memory and runtime consumption when generated on large graphs.) If the Gen-PAO-EDN (short for Gen-PAO Elimination Duplicate Nodes) algorithm, a variation of CHAPTER 4: for all (zi) algorithms 4.2 Heuristic methods for Gen-PAO procedures propBlocked (NodeSet Z, Node z) -1: ZB-ClassBlocked (Z) -2: for all (zi) algorithms 4.2: if MoreBlocked (z) and h (zi) > h (zi) then 4: h (zi).end if 6: end forprocedure propOpen (NodeSet Z, ZO) -2: 2."}, {"heading": "5.1 Varying the Uncertainty of the Graph", "text": "In the first two experiments, we investigated how the uncertainty of the graph affects the performance of AO * (Section 2.4), GenPAO (Section 4.1) and AO-EDN (Section 4.1.2). The performance of each algorithm was measured for different graph quantities in which each graph has a different number of unknown edges. To ensure that the experiments can be performed within a reasonable timeframe, the parameters were chosen so that a single run does not take more than a few minutes. EMPIRICAL RESULTS 92Figure 5.1 compares the performance of the algorithms with the instances of the basic CTP. Figure 5.1a and Figure 5.1b show the change in execution time and in the size of AND / OR."}, {"heading": "5.2 Gen-PAO Heuristic Estimate", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.2.1 Experimental Setting", "text": "We now define a variant of the Canadian Traveler problem called Expensive Edges CTP = > > Cost Point (Exp-CTP for short). Exp-CTP is defined as CTP, except that each edge e-E can be expensive / cheap instead of blocked / unblocked. Formally, Exp-Edge CTP is a 6x I = (G, P, w, s, DC) where G = (V, E) is a graph, P and w the probability and cost functions over the edges, s, t-V are the start and finish points, and DC is a positive real number. P (e) denotes the probability that e is cheap and 1 \u2212 P (e) the probability that e is expensive. An agent can track edge e-E, whether cheap or expensive."}, {"heading": "5.2.2 Varying the Sensing Cost", "text": "To determine the effect of sampling costs on the performance of the algorithms, we performed several runs with different fixed sampling costs (sampling costs were the same for all edges) on a graph consisting of 8 corners and 13 edges (10 edges are unknown). In all experiments, the probability of all unknown edges was set at 0.5. Figure 5.3a shows the change in sampling costs as sampling costs rise from 0.1 to 1.1. This result indicates that the size of the AND / OR graph (generated by all variants of Gen-PAO) decreases as sampling costs increase. We believe that this can be attributed to the increased number of extended states in the AND / OR graph resulting from the low sampling costs in which the sampling action deteriorates. Specifically, there is a limit m, so that any sampling effort below m always prefers scything actions."}, {"heading": "5.2.3 Varying the Open Probability", "text": "In this experiment, we investigated the effects of the distribution over the edges on the performance of the variants of gene-PAO-EDN (Section 4.1.2). To perform a simple experiment analyzing this effect, we configured the graph so that all unknown edges were open with the same value of fixed probability, called open probability, which is given as input. Figure 5.4 illustrates the performance of the various heuristics on a graph consisting of 19 unknown edges for DC = 7 and DC = 9. Figures 5.4a and 5.4c show the change in the size of the AND / OR graph as open probability. Figure 5.4 shows the performance of the various heuristics on a graph consisting of 19 unknown edges for DC = 7 and DC = 9. Figures 5.4c show the change in the size of the AND / OR graph as open probability, which rises from 0.1 to 0.9. These results indicate that for all algorithms, there is an open probability of the Op = 45.3 and 4p = 0.5."}, {"heading": "5.3 Value of Clairvoyance", "text": "In order to obtain a general indication of the overall value of the information, we examined the ratio (see Papadimitriou 1991), designated by RV, on instances of basic CTP and Exp-CTP. RV is defined as C \u0445 AS, where the expected costs of optimal policy and AS are the expected costs of optimal policy, since the graph is fully observable (can also be described as the expected costs of policy)."}, {"heading": "6.1 Contributions", "text": "In this paper we have theoretically and empirically investigated the Canadian traveller problem. Theoretically, the following theories have been proven: \u2022 Correlated CTP is at least as severe as sensing CTP. \u2022 CTP-PATH-DEP is NP-hard. \u2022 CTP-FOR-DEP can be solved in polynomial time. \u2022 Properties of faith MDP for CTP. The main aspect of practical analysis is the framework of Gen-PAO, in which his most important contributions are: \u2022 Gen-PAO extends the PAO * algorithm so that it is not limited to specific types of diagrams. \u2022 Gen-PAO optimally solves instances of Exp-CTP and CTP sensing in addition to basic CTP.103CHAPTER 6. SUMMARY 104 \u2022 Two heuristics HBlocked and HOpen have been proposed."}, {"heading": "6.2 Future work", "text": "Much remains to be done in the theoretical analysis of CTP, especially in the classification of other subclasses of CTP. On a practical level, Gen-PAO can be further modified to solve other types of CTP such as correlated CTP and multiagenic CTP. In addition, we believe that Gen-PAO can be further improved by targeting other types of POMDP problems. It may be worthwhile to improve the performance of Gen-PAO by introducing heuristics that specialize in certain types of diagrams."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Devising an optimal strategy for navigation in a partially observable environment is one of the key objectives in AI. One of the problem in this context is the Canadian Traveler Problem (CTP). CTP is a navigation problem where an agent is tasked to travel from source to target in a partially observable weighted graph, whose edge might be blocked with a certain probability and observing such blockage occurs only when reaching upon one of the edges end points. The goal is to find a strategy that minimizes the expected travel cost. The problem is known to be P# hard. In this work we study the CTP theoretically and empirically. First, we study the Dep-CTP, a CTP variant we introduce which assumes dependencies between the edges status. We show that Dep-CTP is intractable, and further we analyze two of its subclasses on disjoint paths graph. Second, we develop a general algorithm that optimally solve the CTP called General Propagating AO* (Gen-PAO). GenPAO is capable of solving two other types of CTP called Sensing-CTP and Expensive-Edges CTP. Since the CTP is intractable, Gen-PAO use some pruning methods to reduce the space search for the optimal solution. We also define some variants of Gen-PAO, compare their performance and show some benefits of Gen-PAO over existing work.", "creator": "LaTeX with hyperref package"}}}