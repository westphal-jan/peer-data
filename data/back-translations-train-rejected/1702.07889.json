{"id": "1702.07889", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Feb-2017", "title": "Contractibility for Open Global Constraints", "abstract": "Open forms of global constraints allow the addition of new variables to an argument during the execution of a constraint program. Such forms are needed for difficult constraint programming problems where problem construction and problem solving are interleaved, and fit naturally within constraint logic programming. However, in general, filtering that is sound for a global constraint can be unsound when the constraint is open. This paper provides a simple characterization, called contractibility, of the constraints where filtering remains sound when the constraint is open. With this characterization we can easily determine whether a constraint has this property or not. In the latter case, we can use it to derive a contractible approximation to the constraint. We demonstrate this work on both hard and soft constraints. In the process, we formulate two general classes of soft constraints.", "histories": [["v1", "Sat, 25 Feb 2017 13:12:26 GMT  (63kb)", "http://arxiv.org/abs/1702.07889v1", "Under consideration in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "Under consideration in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["michael j maher"], "accepted": false, "id": "1702.07889"}, "pdf": {"name": "1702.07889.pdf", "metadata": {"source": "CRF", "title": "Contractibility for Open Global Constraints", "authors": ["Michael J. Maher"], "emails": ["michael.maher@reasoning.org.au"], "sections": [{"heading": null, "text": "ar Xiv: 170 2.07 889v 1 [cs.L O] 2Taking into account theory and practice of logical programming (TPLP).KEYWORDS: global constraints; open constraints; soft constraints"}, {"heading": "1 Introduction", "text": "In fact, it is the case that most of us are in a position to outdo ourselves, both in terms of the way in which they move and in terms of the way in which they move, as well as in terms of the way in which they move, as well as in terms of the way in which they move, in terms of the way in which they move, in the way in which they move, in the way in which they move, in the way in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they, in which they, in which they live, in which they, in which they live, in which they, in which they, in which they live, in which they live, in which they, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in which they are, in"}, {"heading": "2 Background", "text": "The reader assumes that he has a basic knowledge of the limitations of programming, CSPs, global limitations and filtering as described in (Dechter 2003; Rossi et al. 2006; Beldiceanu et al. 2005).For the purposes of this essay, a global limitation is a relationship over a single set of variables. Other arguments of a limitation are considered parameters and are assumed to be fixed before they are executed. In this essay, a sequence of variables is designated, alternately, by ~ X or [X1,.], Xn. We do not make a priority limitation to the variables that may participate in the sequence. In most work on global limitations, we assume that no variable will appear more than once in a single limitation. There are some specific global limitations that we define for completeness. These and other global limitations are widely discussed."}, {"heading": "3 Open Constraints", "text": "There are many dynamic processes in nature, but to which we would like to apply limitation techniques produced by three materials. (Barta \u0301 k 1999) describes a class of complex processing environments where there may be alternative processing methods, different production formulas, and alternative raw materials. However, in addition to the core products of the processes, there may be by-products and co-products that require further processing. Some examples of products can be post-processed or recycled. In such environments, process planning must be dynamic: additional tasks may arise from re-processing, and additional raw materials may arise. Many production environments have these properties. Consider sugar cane processing, for example. Juice is extracted from the sugar cane and clarified before it is restricted."}, {"heading": "4 Contractibility", "text": "We would like to extend a constraint C ([X1,..., Xn]) with an additional variable Y to C ([X1,..., Xn, Y]). We would like to filter the smaller constraint without knowing whether it is extended to Y or further, and without creating a selection point. If we can do this, we have a kind of monotonicity property of C. Definition 2 We say that a constraint C ([X1,.,., Xn]) is contractible if there is a number m that for all n \u2265 m we have C ([X1,., Xn, Y]) \u2192 C ([X1,., Xn]) is the least designated such a property as a contractibility threshold. For this paper, we only consider constraints with a contractibility threshold of 0.1."}, {"heading": "Proof", "text": "This means that a solution is not expected. (......................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................."}, {"heading": "Proof", "text": "By repeatedly applying the definition of contractility, we have this C ([X1,.., Xn, ~ Y]) \u2192 C ([X1,.., Xn]. It immediately follows that C is monotonous with respect to a particular D. Conversely, any rating for ~ X ~ Y can be represented by a domain D in which each D (Xi) and D (Yi) is a singleton. Then, monotonicity with respect to D implies C (~ X ~ Y) \u2192 C (~ X) with respect to that rating. If C is monotonous with respect to each domain D, then C (~ X) \u2192 C (~ X) with respect to each rating. That is, C is contractible. We are now applying ways in which a constraint can be constructed to ensure that it is contractible."}, {"heading": "Proof", "text": "The relationship between C ([X1,. ~ ~ ~ ~ ~, Xn, Y]) and C ([X1,.., Xn]) is divided into cases using the definition of C. If n \u2212 p \u2212 k + 2 is not negative and divisible by j thenC ([X1,.., Xn]). If n \u2212 p \u2212 k + 2 is negative or not divisible by j, then there is no additional application of C ([X1,..., Xn]). If C ([Xn \u2212 k + 2,., Xn]). If n \u2212 p \u2212 k + 2 is negative or not divisible by j, then there is no additional application of C \u2032 andC ([X1,.., Y])."}, {"heading": "Proof", "text": "It is easy to see that C (X1, X1, XY] \u2194 C (X1,..., Xn]) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1, X1) (X1) (X1, X1) (X1) (X1)) (X1) (X1) (X1)) (X1) (X1)) (X1) (X1)) (X1) (X1) (X1)) (X1) (X1) (X1) (X1)) (X1) (X1)) (X1)) (X1) (X1))) (X1)) (X1)) (X1) (X1) (X1)))) ((X1)))) (X1) (X1)))"}, {"heading": "Proof", "text": "We can consider C as a constraint that limits C \u00b2 to the sequence ~ X in which C \u00b2 (X1,..., Xn] actually applies if n < k and C \u00b2 ([X1,..,., Xn] implicitly implements C (X1,.., Xk) if n \u00b2. Note that C (X1,., Xk) \u2192 and therefore C \u00b2 (X1,., Xn) is implemented where Xk \u00b2 is implemented. Note that n \u00b2 -1 we clearly have C \u00b2 ([X1,.,., X.]. Xn \u00b2 is implemented where X. (Xn,.,.,.,.,.) is essentially a different language. Suppose Ci ([X1,.,., Y])) \u2192 Ci (Xn,."}, {"heading": "Proof", "text": "Suppose C is contractile. If \u03c3 is a solution of C ([X1,..., Xn, Y]), then through contractility the restriction of \u03c3 to X1... Xn is a solution of C ([X1,.., Xn]). Thus, the solution theorem is closed by prefix.Suppose S is closed by prefix.For each solution of C ([X1,..., Xn, Y]) we know that the restriction of \u03c3 to X1.... Xn is a solution of C ([X1,., Xn]). Since this is valid for each solution, we have C ([X1,.., Xn, Y]). C ([X1,., Xn]), that is, C is contractible."}, {"heading": "5 Classifying Constraints", "text": "However, we can sketch and demonstrate some principles that in most cases make it easy to classify a global constraint as contractile or unclassifiable. In general, constraints based on counting with a lower limit (or equality) cannot be contractile. We can recognize this by pointing out that any non-trivial lower constraint on the number of things in a sequence (or fulfilled by a sequence) can be violated by a prefix of the sequence. This was already done in (Barta \u0301 k 2003), where the sum constraint: ni = 1 Xi = N proved to be non-monotonous, but the argument applies to a wide range of constraints. For example, peak counts the number of peaks in a sequence, but a prefix of negative contraction is not."}, {"heading": "Proof", "text": "If it is a non-diminishing accumulation function, whenever f (~ XY) \u2264 Z is contractible, we must also have many other descriptions (~ X), so there must be a clear sequence of values ~ X and a value Y, so that f (~ XY) < f (~ X). The probative power of the second and third parts is similar, so the constraints of the second and third parts are similar, so the constraints of the second and third parts are similar."}, {"heading": "6 Approximating Constraints", "text": "If a constraint is uncontractable, the closed distributor of that constraint is unsound as the distributor of the open constraint. However, according to a proposal by (Barta \u0301 k 2003), we can implement a contractable open constraint C (~ X) by executing a safe contractable approximation Capp from C until ~ X is closed, and then replace Capp with C for the rest of the execution. To apply this approach, we need to identify a contractable language that contains the language of C, and a propagator Capp that implements it. A language L is an approximation of a constraint C, if LC L. An approximation L is contractable iff L is prefix-closed. A contractable approximation of La to a language L is narrow if for all contractable languages L \u2032, if La L \u2032 L is then an approximation of L."}, {"heading": "Proof", "text": "Consider any prefix w of a word wu-L (A). wu describes a path in A that ends at a final state. Therefore, w is accepted by A-P (L (A). Let's say w is accepted by A-A. By constructing A-W, a path in A is described that ends at a state Q on a path to a final state of A. Let's be a word that corresponds to a path from Q to a final state. Then, wu is accepted by A and therefore w is a prefix of a word in L (A). Thus, we can construct A-P as follows. Let's treat the automaton A as a directed graph with the states as vertices and where each transition from Q1 to Q2 is represented by an edge from Q1 to Q2."}, {"heading": "Proof", "text": "(A) We only show the construction when G is presented in Chomsky normal form, and leave the generalization to any grammar and the verification of its correctness to the reader. (A) We only show the construction when G is presented in Chomsky normal form, and leave the generalization to any grammar and the verification of its correctness to the reader. (A) We only show the construction in which the production rules have the form A \u2192 BC or A \u2192 a or S \u00b2, in which A, B and C are endsymbols, a set of endsymbols, a set of endsymbols, and the empty word is the empty word. (N) We define G, \"T,\" S, \"where the production rules are the form A.\" (A) and C. \"(A) is a set of endsymbols, a set of endsymbols, a set of endsymbols, and the empty word is the empty word. (A) We define\" G, \"T,\" S. \""}, {"heading": "Proof", "text": "Since Capp is consistent, the domain consistency of Capp for ~ X is equivalent to an open dconsistency for C (~ X). This follows from the fact that Capp is the prefix closure of C, and therefore any support for an open D consistency for C (~ X) has a corresponding prefix that supports the domain consistency of Capp (~ X) for ~ X. Once ~ X is closed, the domain consistency for ~ X is identical to the D consistency for C (~ X). Similar results for consistency conditions can be obtained with results other than domain consistency. All that is required is to define the corresponding open consistency."}, {"heading": "7 Contractibility of Soft Constraints", "text": "In fact, it is the case that most of them are able to abide by the rules that they have imposed on themselves. (...) Most of them are able to abide by the rules. (...) Most of them are not able to abide by the rules. (...) Most of them are not able to abide by the rules. (...) Most of them are not able to abide by the rules. (...) Most of them are not able to abide by the rules. (...) Most of them are not able to abide by the rules. (...) Most of them are able to abide by the rules. (...) Most of them are not able to abide by the rules. (...)"}, {"heading": "7.1 Decomposition-based Violation Measures", "text": "Many hard constraints can be broken down into elementary constraints, whether natural (such as the decomposition of AllDifferent into imbalances) or constructed, as in (Bessiere et al. 2009). Violation measures can be constructed by combining the violations of each elementary impediment (van Hoeve et al. 2006), the value-oriented level of injury for GCC (Petit et al. 2001; van Hoeve et al. 2006), the soft equilibrium condition measures (Maher et al. 2008) and the soft cumulative impediment (Petit et al. 2006), the value-oriented level of injury for GCC (Petit et al. 2001; van Hoeve et al. 2006), the soft equilibrium condition measures (Maher et al. 2008) and the soft cumulative impediment (Petit and Poder 2009), the value-oriented measure for AllDifferent and the GCC (Me. Tivier et al. 2007; Me."}, {"heading": "7 This latter measure expresses the smallest perturbation ~c of the values for the variables needed", "text": "The definition is a function that requires a constraint C with a certain type T and a sequence of variables ~ X to a tuple (~ X, S, w). The definition 6 A is a function that constrains C with a certain type T and a sequence of variables ~ X to a tuple (~ X, S, w) where a collection of new variables, T \u2032 s is an extension of T to ~ U, and (S, w) is a properly weighted set of elementary contexts via ~ X."}, {"heading": "Proof", "text": "Let's say one formula (~ X ~ Li) is converted to another (~ X) = 0 iff minv \u2032 comb (e (v \u2032, decomp (C (~ X))) = 0 iff for some v \u2032, comp (c \u00b2), decomp (C (~ X)), decomp (c \u00b2), decomp (c \u00b2), decomp (C \u00b2), decomp (C \u00b2), decomp (C \u00b2), decomp (C \u00b2), decomp (C \u00b2), decomp (C \u00b2))))), iff v \u00b2, decomp (C \u00b2), iff v \u00b2, decomp (C \u00b2), c \u00b2, c \u00b2, c \u00b2, c \u00b2, c), c \u00b2, c \u00b2), c \u00b2), c \u00b2), c \u00b2."}, {"heading": "Proof", "text": "There is a substitution condition that the identity to ~ X and Maps ~ U is (in general). There is a substitution condition that the identity to ~ X and Maps ~ U is. (S1, w1). It is a substitution condition. (S1, w1). (S2, w1). (S1, w1). (S1, w1). (S1, w1). (S1, w1). (S1, w1). (S1, w1). (S1). (S1. Sw1. (.). (S1). (S1). (S1). (S1). (S1). (S1, w1). (S1). (Sw1). (Sw1). (Sw1). (Sw1). (Sw1). (Sw1). (Sw1. (S1). (Sw1). (Sw1). (Sw1). (Sw1). (Sw1). (S1). (Sw1). (S1). (S1)."}, {"heading": "Proof", "text": "Let's consider the extension from ~ X to ~ XY and a rating v to ~ XY ~ V. Let < \u03c6 > be the semantic embedding, then apply to any elementary constraint c-S1\u03b8, e (v, ({c}, w1\u03b8)) \u2264 comb (e (v, \u03c6 (c)))), hence e (v-S1, w1))) = e (v, (S1, w1) \u03b8))) = comb (c-S1\u03b8e (v, w1\u03b8)))))). Therefore, e (v-S1, w1) = e (v-S1, w1) = comb (v, w2))). Since comb is monotonic, comb (e-S1), comb (v-S1, w1)."}, {"heading": "7.2 Edit-based Violation Measures", "text": "There are many possible processing steps, but the usual ones are: replacing one letter for another to insert one letter to delete one letter, and transposing two adjacent letters. Object-based measurements of (Beldiceanu and Petit 2004) are processing steps where deletion is the only processing step. (van Hoeve et al. 2006), a processing measure where substitution is the only machining operation. Object-based measurements of (Beldiceanu and Petit 2004) are processing steps where deletion is the only machining step. (van Hoeve et al. 2006), a machining measure that uses substitution, insertion and deletion. To address a wide range of processing steps, we do not allow negative measurements."}, {"heading": "Proof", "text": "Thus it is possible that a word of P (L) iff w, a word of P (L) iff w, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff, a word of P (L) iff."}, {"heading": "Proof", "text": "Suppose that \u03b2 + \u03b3 \u2264 2\u03b4 and consider any processing sequence that replaces a = \u03b2 \u00b2 b \u00b2. We can assume (Lemma 17) that the processing operations are grouped: deletions, then transpositions, substitutions and finally insertions. Suppose that a letter a involved in a transposition also participates in another processing operation. Then, the second operation is either a different transposition or a substitution. In the first case, let us consider all the translation operations applied to a. The effect of these processing operations is to move a letter from position i to position j. This sequence can be replaced by deleting one at position i and inserting one at position j. The revised processing sequence has lower or equal costs because \u03b2 + \u03b3 \u2264 2\u043c and we assume that at least two transpositions are contained in one position j."}, {"heading": "Proof", "text": "Consider for each word w an input that reaches the minimum infringement m \u2032 (w). Let ns, ni, nd, not be the number of the respective operations used in the input. Then, m \u2032 (w) = \u03b1 \u2032 ns + \u03b2 \u2032 ni + \u03b3 \u2032 nd + \u03b4 \u2032 nt \u2265 \u03b1ns + \u03b2ni + \u03b3nd + \u03b4nt \u2265 m (w). Consequently, m (w) \u2264 m \u00b2 (w).Lemma 20 Let m1 and m2 be processing-based infringement measures with the same weights for languages L1 and L2, respectively. If L1 L2 then for all words w, m1 (w) \u2265 m2 (w)."}, {"heading": "Proof", "text": "For each word w, each input in L1 is also an input in L2. Since an edit-based infringement measure minimizes across all inputs, we must have m1 (w) \u2265 m2 (w). In many cases, edit-based infringement measures result in contractable soft constraints. Theorem 21 Let Cs be a soft constraint with an open edit-based infringement measure and assume that min {\u03b1, \u03b2, \u03b3} \u2264 \u03b4.Then C is contractable."}, {"heading": "Proof", "text": "Consider the sequence of edits that transforms an instance of ~ ~ XY into an element ~ b of P (LC) at minimal cost. By Lemma 17, we can assume that all deletions take place before all transpositions, and all insertions and substitutions occur after all transpositions. We will now identify changes to this sequence of edits that transform an element of P (LC) at lower (or equal) costs than the original sequence. If a sequence of edits that do not include transformations is deleted in the original sequence, then the sequence of edits that omit this sequence of editions is transformed at lower or equal costs. Otherwise, if a sequence of edits is not involved in a transposition, then the sequence of edits that do not include transformations is a prefix of ~ b (which is an element of P (LC). The sequence has lower or equal costs, as there is a sub-sequence of editions that is a possibility of processing."}, {"heading": "Proof", "text": "If \u03b1, \u03b2 or \u03b3 is 0, then the condition of Theorem 21 is met and, consequently, Cs is contractable. If \u03b4 0, transpositions can place the letters in a word in any order, without cost. Letter C ([X1,..., Xn]) \u2194 \u03c0C ([X\u03c0 (1),.., X\u03c0 (n))), where the disjunction across all permutations \u03c0 from 1.. n. Then, the infringement measure m of C is equal to the infringement measure m \u00b2 of C \u2032, where m \u00b2 uses the same weights as m C \u2032 is job-free and, as a consequence 22, contractable. From these results, we see that soft restrictions are contractable on the basis of a wide range of processing measures. However, if tranpositions are allowed and have a comparatively low cost, a machining conditional restriction on the basis of machining restrictions can lead to a restriction that is not contractable on the basis B (the basis of Contractable Example B is a)."}, {"heading": "8 Contractible Approximations of Soft Constraints", "text": "As with hard restraints, if a soft restraint is not contractable, we can use a contractable approximation as the basis for filtering while the constraint is open. We formulate the concept of close approximation for soft restraints of the form m (~ X) \u2264 Z as follows. An infringement measure m1 is an approximation of the infringement measure m if for all words ~ a, m1 (~ a) \u2264 m (~ a). We order the infringement measures with the meaningful extension of the sequence to the reals: m1 \u2264 m2 iff, m1 (~ a) \u2264 m2 (~ a). A contractable approximation m1 to an infringement measure m is narrow if for all contractable functions m, if m1 \u2264 m2 then m2 = m1 ~. In the face of two contractable approximations m1 (~ a) \u2264 m if a contractable approximation measure m1 is more than we are contractable."}, {"heading": "Proof", "text": "Consider a sequence: ~ a and a letter: c. m \u043a (~ ac) = inf ~ b m (~ ac ~ b) \u2265 infc ~ b m (~ ac ~ b) \u2265 inf {m (~ a), infc ~ b m (~ ac ~ b) = m \u0445 (~ a). Imagine that any function k is a strictly contractable approximation than m. For some then is: a, k (~ a) > m \u0445 (~ a), i.e. k (~ a) > inf ~ b m (~ a). Therefore, there is a strictly contractable approximation to k (~ a) > m (~ a ~ d)."}, {"heading": "8.1 Decomposition-based Violation Measures", "text": "One way to get a contractile approach to a decomposition-related soft constraint is to ignore parts of a decomposition that cause uncontractility. A weakening of a decomposition of a constraint C (~ X) is a function that maps for each sequence ~ X the decomposition (~ X, ~ U, T, S, w) to (~ X, ~ U, T, S, w) where (S \u2032, w \u2032) is an underweighted amount of (S, w \u2032). For this weakened decomposition, we can apply the sufficient condition of theorem 15.sentence 25: Consider a decomposition measure m for a constraint C (~ X) and a weakening W of decomposition. Assumption m is defined by a monotonic combination function. If for each sequence ~ X the weakening of the decomposition of C (~ X) can be semantically embedded in the weakening of the decomposition of Y (the contractility can then be defined by X.)"}, {"heading": "Proof", "text": "However, there is no guarantee that there will be a good approximation; in the worst case, there could be only a trivial approximation where all are ignored by C (~ X). Nevertheless, it seems to be essentially useful if there is an irrevocable decomposition condition. It deals with a decomposition of global cardinality, which in (Bessiere et al.) Example 8 Consider the global cardinality constraint GCC (~ X, ~ u) with type T, which turns each map into 1."}, {"heading": "8.2 Edit-based Violation Measures", "text": "Remember that a treatment-based injury measure is contractable if \u03b4 \u2265 min {\u03b1, \u03b3} (Theorem 21). If \u03b4 < min {\u03b1, \u03b3} then m is contractable and we must consider contractable approximations. We can provide generic contractable approximations for treatment-based soft limitations by modifying weights so that they comply with the sufficient conditions of Theorem 21 and logical 23.sentence 26. Let m provide an open treatment-based injury measure for a limitation C with weights \u03b1, \u03b3, \u03b4, \u03b4, \u03b4, etc. Then the following injury measures are contractable approximation measures for C.1. m1 based on weights \u03b4, \u03b2 proportionality measure for a restriction C with weights \u03b1, \u03b2, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CSS, CS, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C, C."}, {"heading": "Proof", "text": "It then follows from the definition of m5 that m4, m4, m4, m3, m3, m3, m3, m3, m3, m3, m3, m3, m3, m3, m3, m3, m4, m4, m5, m5, m5, m4, m5, m5, m5, m5, m5, m5, m5, m5, m5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5 m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5 m5, m5, m5, m5 m5, m5, m5 m5, m5, m5 m4, m4, m3, m3, m3, m3, m3, m3, m3, m3, m4, m3, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m4, m5, m5, m5, m5, m5, m5, m5, m5 m5, m5, m5, m5 m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5, m5 m5, m5, m5, m5, m5, m5, m5, m5 m5, m5, m5, m5, m5, m5 m5, m5, m5 m5, m5, m5, m5, m5, m5, m5, m5, m"}, {"heading": "Proof", "text": "If for all words u, m (wu) \u2265 m (w) then infu m (wu) \u2265 m (w). So m * (w) \u2265 m (w). Da m * approaches m, m * (w) \u2264 m (w). Hence m * (w) = m (w).Now we show that the closest contiguous approximation m * to a processing-based measure of injury m generally cannot be expressed as a proper processing-based measure of injury. Theorem 28 There is an open processing-based measure of injury m for a language L, so its closest contiguous approximation cannot be expressed as a proper processing-based measure of injury for any language."}, {"heading": "Proof", "text": "Consider the alphabet \u03a3 = {a, b, c, d}. As in example 9, let's leave L = (abc) \u0432 (so P (L) = L \u00b2 s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\" s \"s\""}, {"heading": "9 Discussion", "text": "This directly affects the characterization of the contractility and the definition of open D consistency. However, when there are additions at both ends, the contractility requires both closures that correspond to the closure involving subwords. 12 Restrictions such as sequence and contiguity are, of course, all job-free closures. On the other hand, the lexicographic order requires both closures that correspond to the closure involving subwords. 12 Restrictions such as sequence and contiguity are subword-closed, that is, they are subword-closed. on the other hand, the lexicographic order Connection Connection Connection Connection Connection Connection Connection Connection Connection Connection-closed, but not suffix-closed, that is, they are contractable when variables are added to the right but not when variables are on the left.If additional variables are inserted anywhere within the connectivity."}, {"heading": "10 Conclusions", "text": "We have introduced the concept of the contractibility of global constraints that ensure that the distribution of constraints on closed restraints is safe, and have characterized them in linguistic terms. However, the concept of contractibility is remarkably robust, but it is based only on the relationship or language that defines the constraint. Therefore, it is independent of the form of the used distributor (monolithic or disassembled) and the consistency condition (if any) that characterizes the distribution. The distribution of constraints appears to be central to the reuse of constraints that apply to open distribution. If a constraint is contractive, we only need to modify a closed distributor to support the distribution of variables. If a constraint is irrevocable, we need a contractive approach to the distribution of constraints that are limited to the use of constraints while the constraints are limited."}, {"heading": "Acknowledgements", "text": "Thanks to the speakers of this paper and previous conference papers, whose thorough reviews and detailed commentary improved this work. Work in this work was carried out largely during the time the author was employed by NICTA."}, {"heading": "Optimization Problems, First International Conference, CPAIOR 2004, Nice, France,", "text": "In the Proceedings of the 9th National Conference on Artificial Intelligence, Anaheim, CA, USA, July 14-19, 1991, Volume 1. 221-226.Bessiere, C., Brito, I., Gutierrez, P., and Meseguer, P. 2014. Global Restrictions in Distributed Restrictions Satisfaction and Optimization. Comput. J. 57, 6., 906-923.Bessiere, C., Hebrard, E., Hnich, B., Kiziltan, Z., and Walt, T. 2008. SLIDE: A Useful Special Case of CARDPATH Restriction. In ECAI 2008 - 18th European Conference on Artificial Intelligence, Patras, Greece, July 21-25, 2008, Proceedings."}, {"heading": "ACM Trans. Comput. Log. 11, 4.", "text": "Chaudhuri, S. and Vardi en, N. Y. 1993. Optimization of Real Conjunctive Intelligence, S. and TessiA. queries. In Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, May 25-28, 1993, Washington, DC, USA. 59-70.Colcombet, T. 2009. Theory of Stabilization Monoids and Regular Cost Functions. In Automata, Languages and Programming, 36th Internatilonal Colloquium, ICALP 2009, Rhodes, Greece, July 5-12, 2009, Proceedings, Part II. 139-150.Cormen, T. H. E., Rivest, R. L., and Stein, C. 2001. Introduction to Algorithms, Second Edition. The MIT Press and McGraw-Hill Book Company.Debruyne, R., R., Ferrand, G., Jussien, N., Lesaint, W. S. Ouis, A, 2003."}, {"heading": "In Principles and Practice of Constraint Programming - CP 2004, 10th International", "text": "In Proc. Workshop on Rule-Based Constrability and Programing.Maher, M. J. 2009a. Local consistency for extended CSPs. Theor. Comput. Sci. 410, 46, 4769-4783.Maher, M. J. 2009b. Open constraints in a boundable world. Sci. 410, 4769-4783.Maher, M. J. 2009b. Open constraints in a boundable world."}, {"heading": "Problems, Third International Conference, CPAIOR 2006, Cork, Ireland, May 31 - June", "text": "2, 2006, Proceedings. 244-257. Verfaillie, G. and Jussien, N. 2005. Constraint solving in unsafe and dynamic environments: A survey. Constraints 10, 3, 253-281."}], "references": [{"title": "Dynamic constraint models for planning and scheduling problems", "author": ["R. Bart\u00e1k"], "venue": "New Trends in Contraints. 237\u2013255.", "citeRegEx": "Bart\u00e1k,? 1999", "shortCiteRegEx": "Bart\u00e1k", "year": 1999}, {"title": "Dynamic global constraints in backtracking based environments", "author": ["R. Bart\u00e1k"], "venue": "Annals OR 118, 1-4, 101\u2013119.", "citeRegEx": "Bart\u00e1k,? 2003", "shortCiteRegEx": "Bart\u00e1k", "year": 2003}, {"title": "Revisiting the cardinality operator and introducing the cardinality-path constraint family", "author": ["N. Beldiceanu", "M. Carlsson"], "venue": "Logic Programming, 17th International Conference, ICLP 2001, Paphos, Cyprus, November 26 - December 1, 2001, Proceedings. 59\u201373.", "citeRegEx": "Beldiceanu and Carlsson,? 2001", "shortCiteRegEx": "Beldiceanu and Carlsson", "year": 2001}, {"title": "Global constraint catalog", "author": ["N. Beldiceanu", "M. Carlsson", "Rampon", "J.-X."], "venue": "Tech. Rep. T2005:08, SICS. Current version available at http://sofdem.github.io/gccat/.", "citeRegEx": "Beldiceanu et al\\.,? 2005", "shortCiteRegEx": "Beldiceanu et al\\.", "year": 2005}, {"title": "Introducing global constraints in CHIP", "author": ["N. Beldiceanu", "E. Contejean"], "venue": "Mathematical Computer Modelling 20, 12, 97\u2013123.", "citeRegEx": "Beldiceanu and Contejean,? 1994", "shortCiteRegEx": "Beldiceanu and Contejean", "year": 1994}, {"title": "Cost evaluation of soft global constraints", "author": ["N. Beldiceanu", "T. Petit"], "venue": "Integration of AI and OR Techniques in Constraint Programming for Combinatorial Optimization Problems, First International Conference, CPAIOR 2004, Nice, France, April 20-22, 2004, Proceedings. 80\u201395.", "citeRegEx": "Beldiceanu and Petit,? 2004", "shortCiteRegEx": "Beldiceanu and Petit", "year": 2004}, {"title": "Arc-consistency in dynamic constraint satisfaction problems", "author": ["C. Bessi\u00e8re"], "venue": "Proceedings of the 9th National Conference on Artificial Intelligence, Anaheim, CA, USA, July 14-19, 1991, Volume 1. 221\u2013226.", "citeRegEx": "Bessi\u00e8re,? 1991", "shortCiteRegEx": "Bessi\u00e8re", "year": 1991}, {"title": "Global constraints in distributed constraint satisfaction and optimization", "author": ["C. Bessiere", "I. Brito", "P. Gutierrez", "P. Meseguer"], "venue": "Comput. J. 57, 6, 906\u2013923.", "citeRegEx": "Bessiere et al\\.,? 2014", "shortCiteRegEx": "Bessiere et al\\.", "year": 2014}, {"title": "SLIDE: A useful special case of the CARDPATH constraint", "author": ["C. Bessiere", "E. Hebrard", "B. Hnich", "Z. Kiziltan", "T. Walsh"], "venue": "ECAI 2008 - 18th European Conference on Artificial Intelligence, Patras, Greece, July 21-25, 2008, Proceedings. 475\u2013479.", "citeRegEx": "Bessiere et al\\.,? 2008", "shortCiteRegEx": "Bessiere et al\\.", "year": 2008}, {"title": "Decompositions of all different, global cardinality and related constraints", "author": ["C. Bessiere", "G. Katsirelos", "N. Narodytska", "C. Quimper", "T. Walsh"], "venue": "IJCAI 2009, Proceedings of the 21st International Joint Conference on Artificial Intelligence, Pasadena, California, USA, July 11-17, 2009. 419\u2013424.", "citeRegEx": "Bessiere et al\\.,? 2009", "shortCiteRegEx": "Bessiere et al\\.", "year": 2009}, {"title": "Semiring-based constraint satisfaction and optimization", "author": ["S. Bistarelli", "U. Montanari", "F. Rossi"], "venue": "J. ACM 44, 2, 201\u2013236.", "citeRegEx": "Bistarelli et al\\.,? 1997", "shortCiteRegEx": "Bistarelli et al\\.", "year": 1997}, {"title": "Constraint hierarchies", "author": ["A. Borning", "B.N. Freeman-Benson", "M. Wilson"], "venue": "Lisp and Symbolic Computation 5, 3, 223\u2013270.", "citeRegEx": "Borning et al\\.,? 1992", "shortCiteRegEx": "Borning et al\\.", "year": 1992}, {"title": "Constraint hierarchies and logic programming", "author": ["A. Borning", "M.J. Maher", "A. Martindale", "M. Wilson"], "venue": "Logic Programming, Proceedings of the Sixth International Conference, Lisbon, Portugal, June 19-23, 1989. 149\u2013164.", "citeRegEx": "Borning et al\\.,? 1989", "shortCiteRegEx": "Borning et al\\.", "year": 1989}, {"title": "Decision problems for convex languages", "author": ["J.A. Brzozowski", "J. Shallit", "Z. Xu"], "venue": "Language and Automata Theory and Applications, Third International Conference, LATA 2009, Tarragona, Spain, April 2-8, 2009. Proceedings. 247\u2013258.", "citeRegEx": "Brzozowski et al\\.,? 2009", "shortCiteRegEx": "Brzozowski et al\\.", "year": 2009}, {"title": "Optimal implementation of conjunctive queries in relational data bases", "author": ["A.K. Chandra", "P.M. Merlin"], "venue": "Proceedings of the 9th Annual ACM Symposium on Theory of Computing, May 4-6, 1977, Boulder, Colorado, USA. 77\u201390.", "citeRegEx": "Chandra and Merlin,? 1977", "shortCiteRegEx": "Chandra and Merlin", "year": 1977}, {"title": "Quantitative languages", "author": ["K. Chatterjee", "L. Doyen", "T.A. Henzinger"], "venue": "ACM Trans. Comput. Log. 11, 4.", "citeRegEx": "Chatterjee et al\\.,? 2010", "shortCiteRegEx": "Chatterjee et al\\.", "year": 2010}, {"title": "Optimization of Real conjunctive queries", "author": ["S. Chaudhuri", "M.Y. Vardi"], "venue": "Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, May 25-28, 1993, Washington, DC, USA. 59\u201370.", "citeRegEx": "Chaudhuri and Vardi,? 1993", "shortCiteRegEx": "Chaudhuri and Vardi", "year": 1993}, {"title": "The theory of stabilisation monoids and regular cost functions", "author": ["T. Colcombet"], "venue": "Automata, Languages and Programming, 36th Internatilonal Colloquium, ICALP 2009, Rhodes, Greece, July 5-12, 2009, Proceedings, Part II. 139\u2013150.", "citeRegEx": "Colcombet,? 2009", "shortCiteRegEx": "Colcombet", "year": 2009}, {"title": "Introduction to Algorithms, Second Edition", "author": ["T.H. Cormen", "C.E. Leiserson", "R.L. Rivest", "C. Stein"], "venue": "The MIT Press and McGraw-Hill Book Company.", "citeRegEx": "Cormen et al\\.,? 2001", "shortCiteRegEx": "Cormen et al\\.", "year": 2001}, {"title": "Correctness of constraint retraction algorithms", "author": ["R. Debruyne", "G. Ferrand", "N. Jussien", "W. Lesaint", "S. Ouis", "A. Tessier"], "venue": "Proceedings of the Sixteenth International Florida Artificial Intelligence Research Society Conference, May 12-14, 2003, St. Augustine, Florida, USA. 172\u2013176.", "citeRegEx": "Debruyne et al\\.,? 2003", "shortCiteRegEx": "Debruyne et al\\.", "year": 2003}, {"title": "Constraint processing", "author": ["R. Dechter"], "venue": "Elsevier Morgan Kaufmann.", "citeRegEx": "Dechter,? 2003", "shortCiteRegEx": "Dechter", "year": 2003}, {"title": "Belief maintenance in dynamic constraint networks", "author": ["R. Dechter", "A. Dechter"], "venue": "Proceedings of the 7th National Conference on Artificial Intelligence. St. Paul, MN, August 21-26, 1988. 37\u201342.", "citeRegEx": "Dechter and Dechter,? 1988", "shortCiteRegEx": "Dechter and Dechter", "year": 1988}, {"title": "Open constraint satisfaction", "author": ["B. Faltings", "S. Macho-Gonzalez"], "venue": "Principles and Practice of Constraint Programming - CP 2002, 8th International Conference, CP 2002, Ithaca, NY, USA, September 9-13, 2002, Proceedings. 356\u2013370.", "citeRegEx": "Faltings and Macho.Gonzalez,? 2002", "shortCiteRegEx": "Faltings and Macho.Gonzalez", "year": 2002}, {"title": "Open constraint programming", "author": ["B. Faltings", "S. Macho-Gonzalez"], "venue": "Artif. Intell. 161, 1-2, 181\u2013208.", "citeRegEx": "Faltings and Macho.Gonzalez,? 2005", "shortCiteRegEx": "Faltings and Macho.Gonzalez", "year": 2005}, {"title": "Global constraints for lexicographic orderings", "author": ["A.M. Frisch", "B. Hnich", "Z. Kiziltan", "I. Miguel", "T. Walsh"], "venue": "Principles and Practice of Constraint Programming - CP 2002, 8th International Conference, CP 2002, Ithaca, NY, USA, September 9-13, 2002, Proceedings. 93\u2013108.", "citeRegEx": "Frisch et al\\.,? 2002", "shortCiteRegEx": "Frisch et al\\.", "year": 2002}, {"title": "Dealing with incomplete", "author": ["M. Gavanelli", "E. Lamma", "P. Mello", "M. Milano"], "venue": null, "citeRegEx": "Gavanelli et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Gavanelli et al\\.", "year": 2005}, {"title": "Constraint retraction in CLP(FD): formal framework and performance results", "author": ["Y. Georget", "P. Codognet", "F. Rossi"], "venue": "Constraints 4, 1, 5\u201342.", "citeRegEx": "Georget et al\\.,? 1999", "shortCiteRegEx": "Georget et al\\.", "year": 1999}, {"title": "Interval propagation to reason about sets: Definition and implementation of a practical language", "author": ["C. Gervet"], "venue": "Constraints 1, 3, 191\u2013244.", "citeRegEx": "Gervet,? 1997", "shortCiteRegEx": "Gervet", "year": 1997}, {"title": "Underestimating the cost of a soft constraint is dangerous: revisiting the edit-distance based soft regular constraint", "author": ["J. He", "P. Flener", "J. Pearson"], "venue": "J. Heuristics 19, 5, 729\u2013756.", "citeRegEx": "He et al\\.,? 2013", "shortCiteRegEx": "He et al\\.", "year": 2013}, {"title": "Incremental search in constraint logic programming", "author": ["P.V. Hentenryck", "T.L. Provost"], "venue": "New Generation Comput. 9, 3/4, 257\u2013276.", "citeRegEx": "Hentenryck and Provost,? 1991", "shortCiteRegEx": "Hentenryck and Provost", "year": 1991}, {"title": "Introduction to Automata Theory Languages and Computation", "author": ["J. Hopcroft", "J. Ullman"], "venue": "Addison-Wesley.", "citeRegEx": "Hopcroft and Ullman,? 1979", "shortCiteRegEx": "Hopcroft and Ullman", "year": 1979}, {"title": "Containment of conjunctive queries: Beyond relations as sets", "author": ["Y.E. Ioannidis", "R. Ramakrishnan"], "venue": "ACM Trans. Database Syst. 20, 3, 288\u2013324.", "citeRegEx": "Ioannidis and Ramakrishnan,? 1995", "shortCiteRegEx": "Ioannidis and Ramakrishnan", "year": 1995}, {"title": "Constraint logic programming: A survey", "author": ["J. Jaffar", "M.J. Maher"], "venue": "J. Log. Program. 19/20, 503\u2013581.", "citeRegEx": "Jaffar and Maher,? 1994", "shortCiteRegEx": "Jaffar and Maher", "year": 1994}, {"title": "On conjunctive queries containing inequalities", "author": ["A.C. Klug"], "venue": "Journal of ACM 35, 1, 146\u2013160.", "citeRegEx": "Klug,? 1988", "shortCiteRegEx": "Klug", "year": 1988}, {"title": "Constraint programming on infinite data streams", "author": ["A. Lallouet", "Y.C. Law", "J.H. Lee", "C.F.K. Siu"], "venue": "IJCAI 2011, Proceedings of the 22nd International Joint Conference on Artificial Intelligence, Barcelona, Catalonia, Spain, July 16-22, 2011. 597\u2013604.", "citeRegEx": "Lallouet et al\\.,? 2011", "shortCiteRegEx": "Lallouet et al\\.", "year": 2011}, {"title": "Global constraints for integer and set value precedence", "author": ["Y.C. Law", "J.H. Lee"], "venue": "Principles and Practice of Constraint Programming - CP 2004, 10th International Conference, CP 2004, Toronto, Canada, September 27 - October 1, 2004, Proceedings. 362\u2013376.", "citeRegEx": "Law and Lee,? 2004", "shortCiteRegEx": "Law and Lee", "year": 2004}, {"title": "Equivalences of logic programs", "author": ["M.J. Maher"], "venue": "Foundations of Deductive Databases and Logic Programming. Morgan Kaufmann, 627\u2013658.", "citeRegEx": "Maher,? 1988", "shortCiteRegEx": "Maher", "year": 1988}, {"title": "A logic programming view of CLP", "author": ["M.J. Maher"], "venue": "Logic Programming, Proceedings of the Tenth International Conference on Logic Programming, Budapest, Hungary, June 21-25, 1993. 737\u2013753.", "citeRegEx": "Maher,? 1993", "shortCiteRegEx": "Maher", "year": 1993}, {"title": "Analysis of a global contiguity constraint", "author": ["M.J. Maher"], "venue": "Proc. Workshop on Rule-Based Constraint Reasoning and Programming.", "citeRegEx": "Maher,? 2002", "shortCiteRegEx": "Maher", "year": 2002}, {"title": "Local consistency for extended CSPs", "author": ["M.J. Maher"], "venue": "Theor. Comput. Sci. 410, 46, 4769\u20134783.", "citeRegEx": "Maher,? 2009a", "shortCiteRegEx": "Maher", "year": 2009}, {"title": "Open constraints in a boundable world", "author": ["M.J. Maher"], "venue": "Integration of AI and OR Techniques in Constraint Programming for Combinatorial Optimization Problems, 6th International Conference, CPAIOR 2009, Pittsburgh, PA, USA, May 27-31, 2009, Proceedings. 163\u2013177.", "citeRegEx": "Maher,? 2009b", "shortCiteRegEx": "Maher", "year": 2009}, {"title": "Open contractible global constraints", "author": ["M.J. Maher"], "venue": "IJCAI 2009, Proceedings of the 21st International Joint Conference on Artificial Intelligence, Pasadena, California, USA, July 11-17, 2009. 578\u2013583.", "citeRegEx": "Maher,? 2009c", "shortCiteRegEx": "Maher", "year": 2009}, {"title": "SOGgy constraints: Soft open global constraints", "author": ["M.J. Maher"], "venue": "Principles and Practice of Constraint Programming - CP 2009, 15th International Conference, CP 2009, Lisbon, Portugal, September 20-24, 2009, Proceedings. 584\u2013591.", "citeRegEx": "Maher,? 2009d", "shortCiteRegEx": "Maher", "year": 2009}, {"title": "Contractibility and contractible approximations of soft global constraints", "author": ["M.J. Maher"], "venue": "Technical Communications of the 26th International Conference on Logic Programming, ICLP 2010, July 16-19, 2010, Edinburgh, Scotland, UK. 114\u2013123.", "citeRegEx": "Maher,? 2010", "shortCiteRegEx": "Maher", "year": 2010}, {"title": "Flow-based propagators for the SEQUENCE and related global constraints", "author": ["M.J. Maher", "N. Narodytska", "C. Quimper", "T. Walsh"], "venue": "Principles and Practice of Constraint Programming, 14th International Conference, CP 2008, Sydney, Australia, September 14-18, 2008. Proceedings. 159\u2013174.", "citeRegEx": "Maher et al\\.,? 2008", "shortCiteRegEx": "Maher et al\\.", "year": 2008}, {"title": "Expanding query power in constraint logic programming languages", "author": ["M.J. Maher", "P.J. Stuckey"], "venue": "Logic Programming, Proceedings of the North American Conference 1989, Cleveland, Ohio, USA, October 16-20, 1989. 2 Volumes. 20\u201336.", "citeRegEx": "Maher and Stuckey,? 1989", "shortCiteRegEx": "Maher and Stuckey", "year": 1989}, {"title": "All different: Softening alldifferent in weighted csps", "author": ["J. M\u00e9tivier", "P. Boizumault", "S. Loudni"], "venue": "19th IEEE International Conference on Tools with Artificial Intelligence (ICTAI 2007), October 29-31, 2007, Patras, Greece, Volume 1. 223\u2013230.", "citeRegEx": "M\u00e9tivier et al\\.,? 2007", "shortCiteRegEx": "M\u00e9tivier et al\\.", "year": 2007}, {"title": "Softening gcc and regular with preferences", "author": ["J. M\u00e9tivier", "P. Boizumault", "S. Loudni"], "venue": "Proceedings of the 2009 ACM Symposium on Applied Computing (SAC), Honolulu, Hawaii, USA, March 9-12, 2009. 1392\u20131396.", "citeRegEx": "M\u00e9tivier et al\\.,? 2009", "shortCiteRegEx": "M\u00e9tivier et al\\.", "year": 2009}, {"title": "Dynamic constraint satisfaction problems", "author": ["S. Mittal", "B. Falkenhainer"], "venue": "Proceedings of the 8th National Conference on Artificial Intelligence. Boston, Massachusetts, July 29 - August 3, 1990, 2 Volumes. 25\u201332.", "citeRegEx": "Mittal and Falkenhainer,? 1990", "shortCiteRegEx": "Mittal and Falkenhainer", "year": 1990}, {"title": "Minizinc: Towards a standard CP modelling language", "author": ["N. Nethercote", "P.J. Stuckey", "R. Becket", "S. Brand", "G.J. Duck", "G. Tack"], "venue": "Principles and Practice of Constraint Programming - CP 2007, 13th International Conference, CP 2007, Providence, RI, USA, September 23-27, 2007, Proceedings. 529\u2013543.", "citeRegEx": "Nethercote et al\\.,? 2007", "shortCiteRegEx": "Nethercote et al\\.", "year": 2007}, {"title": "Automatic generation of music programs", "author": ["F. Pachet", "P. Roy"], "venue": "Principles and Practice of Constraint Programming - CP\u201999, 5th International Conference, Alexandria, Virginia, USA, October 11-14, 1999, Proceedings. 331\u2013345.", "citeRegEx": "Pachet and Roy,? 1999", "shortCiteRegEx": "Pachet and Roy", "year": 1999}, {"title": "A regular language membership constraint for finite sequences of variables", "author": ["G. Pesant"], "venue": "Principles and Practice of Constraint Programming - CP 2004, 10th International Conference, CP 2004, Toronto, Canada, September 27 - October 1, 2004, Proceedings. 482\u2013495.", "citeRegEx": "Pesant,? 2004", "shortCiteRegEx": "Pesant", "year": 2004}, {"title": "The soft cumulative constraint", "author": ["T. Petit", "E. Poder"], "venue": "CoRR abs/0907.0939.", "citeRegEx": "Petit and Poder,? 2009", "shortCiteRegEx": "Petit and Poder", "year": 2009}, {"title": "Specific filtering algorithms for overconstrained problems", "author": ["T. Petit", "J. R\u00e9gin", "C. Bessi\u00e8re"], "venue": "Principles and Practice of Constraint Programming - CP 2001, 7th International Conference, CP 2001, Paphos, Cyprus, November 26 - December 1, 2001, Proceedings. 451\u2013463.", "citeRegEx": "Petit et al\\.,? 2001", "shortCiteRegEx": "Petit et al\\.", "year": 2001}, {"title": "Global grammar constraints", "author": ["C. Quimper", "T. Walsh"], "venue": "Principles and Practice of Constraint Programming - CP 2006, 12th International Conference, CP 2006, Nantes, France, September 25-29, 2006, Proceedings. 751\u2013755.", "citeRegEx": "Quimper and Walsh,? 2006", "shortCiteRegEx": "Quimper and Walsh", "year": 2006}, {"title": "A filtering algorithm for constraints of difference in csps", "author": ["J. R\u00e9gin"], "venue": "Proceedings of the 12th National Conference on Artificial Intelligence, Seattle, WA, USA, July 31 August 4, 1994, Volume 1. 362\u2013367.", "citeRegEx": "R\u00e9gin,? 1994", "shortCiteRegEx": "R\u00e9gin", "year": 1994}, {"title": "Generalized arc consistency for global cardinality constraint", "author": ["J. R\u00e9gin"], "venue": "Proceedings of the Thirteenth National Conference on Artificial Intelligence and Eighth Innovative Applications of Artificial Intelligence Conference, AAAI 96, IAAI 96, Portland, Oregon, August 4-8, 1996, Volume 1. 209\u2013215.", "citeRegEx": "R\u00e9gin,? 1996", "shortCiteRegEx": "R\u00e9gin", "year": 1996}, {"title": "Valued constraint satisfaction problems: Hard and easy problems", "author": ["T. Schiex", "H. Fargier", "G. Verfaillie"], "venue": "Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, IJCAI 95, Montr\u00e9al Qu\u00e9bec, Canada, August 2025 1995, 2 Volumes. 631\u2013639.", "citeRegEx": "Schiex et al\\.,? 1995", "shortCiteRegEx": "Schiex et al\\.", "year": 1995}, {"title": "Weakly monotonic propagators", "author": ["C. Schulte", "G. Tack"], "venue": "Principles and", "citeRegEx": "Schulte and Tack,? 2009", "shortCiteRegEx": "Schulte and Tack", "year": 2009}, {"title": "The theory of grammar constraints", "author": ["M. Sellmann"], "venue": "Principles and Practice of Constraint Programming - CP 2006, 12th International Conference, CP 2006, Nantes, France, September 25-29, 2006, Proceedings. 530\u2013544.", "citeRegEx": "Sellmann,? 2006", "shortCiteRegEx": "Sellmann", "year": 2006}, {"title": "On global warming: Flow-based soft global constraints", "author": ["W.J. van Hoeve", "G. Pesant", "L. Rousseau"], "venue": "J. Heuristics", "citeRegEx": "Hoeve et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Hoeve et al\\.", "year": 2006}, {"title": "Open constraints in a closed world", "author": ["W.J. van Hoeve", "J. R\u00e9gin"], "venue": "Third International Conference,", "citeRegEx": "Hoeve and R\u00e9gin,? \\Q2006\\E", "shortCiteRegEx": "Hoeve and R\u00e9gin", "year": 2006}, {"title": "Constraint solving in uncertain and dynamic environments: A survey", "author": ["G. Verfaillie", "N. Jussien"], "venue": "Constraints 10, 3, 253\u2013281.", "citeRegEx": "Verfaillie and Jussien,? 2005", "shortCiteRegEx": "Verfaillie and Jussien", "year": 2005}], "referenceMentions": [{"referenceID": 32, "context": "Constraint Logic Programming (CLP) (Jaffar and Maher 1994) provides the ability to add variables and constraints to a constraint store during the course of an execution.", "startOffset": 35, "endOffset": 58}, {"referenceID": 48, "context": "This is true of configuration problems and scheduling problems that involve process-dependent activities (Mittal and Falkenhainer 1990; Bart\u00e1k 2003).", "startOffset": 105, "endOffset": 148}, {"referenceID": 1, "context": "This is true of configuration problems and scheduling problems that involve process-dependent activities (Mittal and Falkenhainer 1990; Bart\u00e1k 2003).", "startOffset": 105, "endOffset": 148}, {"referenceID": 49, "context": "Thus CLP is particularly well-suited for such problems, in contrast to compilation-based modelling languages such as MiniZinc (Nethercote et al. 2007) where all variables and constraints must be fixed at compilation time.", "startOffset": 126, "endOffset": 150}, {"referenceID": 41, "context": "This paper incorporates results announced in (Maher 2009c; Maher 2009b; Maher 2009d; Maher 2010).", "startOffset": 45, "endOffset": 96}, {"referenceID": 40, "context": "This paper incorporates results announced in (Maher 2009c; Maher 2009b; Maher 2009d; Maher 2010).", "startOffset": 45, "endOffset": 96}, {"referenceID": 42, "context": "This paper incorporates results announced in (Maher 2009c; Maher 2009b; Maher 2009d; Maher 2010).", "startOffset": 45, "endOffset": 96}, {"referenceID": 43, "context": "This paper incorporates results announced in (Maher 2009c; Maher 2009b; Maher 2009d; Maher 2010).", "startOffset": 45, "endOffset": 96}, {"referenceID": 20, "context": "The reader is assumed to have a basic knowledge of constraint programming, CSPs, global constraints, and filtering, as might be found in (Dechter 2003; Rossi et al. 2006; Beldiceanu et al. 2005).", "startOffset": 137, "endOffset": 194}, {"referenceID": 3, "context": "The reader is assumed to have a basic knowledge of constraint programming, CSPs, global constraints, and filtering, as might be found in (Dechter 2003; Rossi et al. 2006; Beldiceanu et al. 2005).", "startOffset": 137, "endOffset": 194}, {"referenceID": 3, "context": "These and other global constraints are discussed more completely in (Beldiceanu et al. 2005) and the references therein.", "startOffset": 68, "endOffset": 92}, {"referenceID": 55, "context": ", Xn]) (R\u00e9gin 1994) states that the variables X1, .", "startOffset": 7, "endOffset": 19}, {"referenceID": 56, "context": ", Xn]) (R\u00e9gin 1996) states that, for every i, the value vi occurs be-", "startOffset": 7, "endOffset": 19}, {"referenceID": 50, "context": ", Xn], N) (Pachet and Roy 1999) states that there are exactly N distinct values in X1, .", "startOffset": 10, "endOffset": 31}, {"referenceID": 51, "context": ", Xn]) (Pesant 2004) states that the value of the list of variables, when considered as a word, is accepted by the automaton A.", "startOffset": 7, "endOffset": 20}, {"referenceID": 54, "context": ", Xn]) (Quimper and Walsh 2006; Sellmann 2006) (called Grammar in (Quimper and Walsh 2006)) states that the value of the list of variables, when considered as a word, is generated by the context-free grammar G.", "startOffset": 7, "endOffset": 46}, {"referenceID": 59, "context": ", Xn]) (Quimper and Walsh 2006; Sellmann 2006) (called Grammar in (Quimper and Walsh 2006)) states that the value of the list of variables, when considered as a word, is generated by the context-free grammar G.", "startOffset": 7, "endOffset": 46}, {"referenceID": 54, "context": ", Xn]) (Quimper and Walsh 2006; Sellmann 2006) (called Grammar in (Quimper and Walsh 2006)) states that the value of the list of variables, when considered as a word, is generated by the context-free grammar G.", "startOffset": 66, "endOffset": 90}, {"referenceID": 4, "context": ", Xn], ~v) (Beldiceanu and Contejean 1994) states that any consecutive sequence of k variables Xj , .", "startOffset": 11, "endOffset": 42}, {"referenceID": 2, "context": ", Xn]) (Beldiceanu and Carlsson 2001) states that the sum of any consecutive sequence of k variables lies between l and u.", "startOffset": 7, "endOffset": 37}, {"referenceID": 38, "context": ", Xn]) (Maher 2002) states that the variables Xi take values from {0, 1} and the variables taking the value 1 are consecutive.", "startOffset": 7, "endOffset": 19}, {"referenceID": 24, "context": ", Zn] (Frisch et al. 2002) states that the sequence of X variables is lexicographically less than or equal to the sequence of Z variables, where we assume some ordering on the underlying values.", "startOffset": 6, "endOffset": 26}, {"referenceID": 35, "context": "The precedence constraint s \u227a ~ X t (Law and Lee 2004) states that if t appears in the sequence ~ X then s appears at a lower index.", "startOffset": 36, "endOffset": 54}, {"referenceID": 30, "context": "When it is convenient, we will describe languages with Kleene regular expressions (Hopcroft and Ullman 1979).", "startOffset": 82, "endOffset": 108}, {"referenceID": 0, "context": "(Bart\u00e1k 1999) describes a class of complex processing environments where there may be alternative processing routes, different production formulas and alternative raw materials.", "startOffset": 0, "endOffset": 13}, {"referenceID": 1, "context": "(Bart\u00e1k 2003) first formulated this issue and described a straightforward model: the constraint involves a sequence of variables to which variables may be added.", "startOffset": 0, "endOffset": 13}, {"referenceID": 1, "context": "(Bart\u00e1k 2003) outlined a generic implementation technique to make open versions for the class ofmonotonic global constraints.", "startOffset": 0, "endOffset": 13}, {"referenceID": 22, "context": "2 The terminology \u201copen constraint satisfaction problem\u201d was introduced by (Faltings and Macho-Gonzalez 2002; Faltings and Macho-Gonzalez 2005).", "startOffset": 75, "endOffset": 143}, {"referenceID": 23, "context": "2 The terminology \u201copen constraint satisfaction problem\u201d was introduced by (Faltings and Macho-Gonzalez 2002; Faltings and Macho-Gonzalez 2005).", "startOffset": 75, "endOffset": 143}, {"referenceID": 27, "context": "See (Gervet 1997).", "startOffset": 4, "endOffset": 17}, {"referenceID": 40, "context": "The third model (Maher 2009b) is, in some ways, intermediate between that of (Bart\u00e1k 2003) and (van Hoeve and R\u00e9gin 2006).", "startOffset": 16, "endOffset": 29}, {"referenceID": 1, "context": "The third model (Maher 2009b) is, in some ways, intermediate between that of (Bart\u00e1k 2003) and (van Hoeve and R\u00e9gin 2006).", "startOffset": 77, "endOffset": 90}, {"referenceID": 40, "context": "It is equivalent to a weak form of the model of (Maher 2009b) where there are no restrictions on N .", "startOffset": 48, "endOffset": 61}, {"referenceID": 40, "context": "Some results are given in (Maher 2009b) for the model treated there.", "startOffset": 26, "endOffset": 39}, {"referenceID": 21, "context": "Constraint programming with open constraints is a special case of dynamic CSPs in the broad sense described in (Dechter and Dechter 1988).", "startOffset": 111, "endOffset": 137}, {"referenceID": 29, "context": "Work on dynamic CSPs has focussed on the addition and retraction of constraints (Hentenryck and Provost 1991; Bessi\u00e8re 1991; Georget et al. 1999; Debruyne et al. 2003).", "startOffset": 80, "endOffset": 167}, {"referenceID": 6, "context": "Work on dynamic CSPs has focussed on the addition and retraction of constraints (Hentenryck and Provost 1991; Bessi\u00e8re 1991; Georget et al. 1999; Debruyne et al. 2003).", "startOffset": 80, "endOffset": 167}, {"referenceID": 26, "context": "Work on dynamic CSPs has focussed on the addition and retraction of constraints (Hentenryck and Provost 1991; Bessi\u00e8re 1991; Georget et al. 1999; Debruyne et al. 2003).", "startOffset": 80, "endOffset": 167}, {"referenceID": 19, "context": "Work on dynamic CSPs has focussed on the addition and retraction of constraints (Hentenryck and Provost 1991; Bessi\u00e8re 1991; Georget et al. 1999; Debruyne et al. 2003).", "startOffset": 80, "endOffset": 167}, {"referenceID": 62, "context": "See (Verfaillie and Jussien 2005) for a survey on dynamic constraint solving.", "startOffset": 4, "endOffset": 33}, {"referenceID": 48, "context": "Work on conditional CSPs, initiated in (Mittal and Falkenhainer 1990), addresses contingent variables by explicitly embedding the contingent nature within a CSP, but that work does not address the addition of variables to constraints.", "startOffset": 39, "endOffset": 69}, {"referenceID": 23, "context": "Other forms of dynamism have been addressed in the context of constraints by allowing variable domains to be initially incomplete and expand over time (Faltings and Macho-Gonzalez 2005; Gavanelli et al. 2005), or by formulating constraints over a stream of values (Lallouet et al.", "startOffset": 151, "endOffset": 208}, {"referenceID": 25, "context": "Other forms of dynamism have been addressed in the context of constraints by allowing variable domains to be initially incomplete and expand over time (Faltings and Macho-Gonzalez 2005; Gavanelli et al. 2005), or by formulating constraints over a stream of values (Lallouet et al.", "startOffset": 151, "endOffset": 208}, {"referenceID": 34, "context": "2005), or by formulating constraints over a stream of values (Lallouet et al. 2011).", "startOffset": 61, "endOffset": 83}, {"referenceID": 18, "context": "The property is akin to the \u201coptimal substructure\u201d property that is a pre-requisite for the use of dynamic programming in optimization problems (Cormen et al. 2001) which requires that optimal solutions of a problem also solve subproblems optimally.", "startOffset": 144, "endOffset": 164}, {"referenceID": 58, "context": "Complete checking can be considered a minimal requirement for filtering methods (Schulte and Tack 2009).", "startOffset": 80, "endOffset": 103}, {"referenceID": 1, "context": "The notion of contractibility is a variation of Bart\u00e1k\u2019s monotonicity (Bart\u00e1k 2003) where we do not explicitly discuss variable domains.", "startOffset": 70, "endOffset": 83}, {"referenceID": 39, "context": "Hence it is not tied to domain-based reasoning; it is equally compatible with the more general framework of (Maher 2009a).", "startOffset": 108, "endOffset": 121}, {"referenceID": 8, "context": "The Slidej meta-constraint (Bessiere et al. 2008) can be used to define several constraints on a sequence of variables.", "startOffset": 27, "endOffset": 49}, {"referenceID": 38, "context": "For example, Contiguity is implemented in (Maher 2002) essentially as", "startOffset": 42, "endOffset": 54}, {"referenceID": 8, "context": "Similarly, ( ~ X \u2264lex ~ Y ) is encoded in (Bessiere et al. 2008) essentially as", "startOffset": 42, "endOffset": 64}, {"referenceID": 8, "context": "However, it is notable that the Regular constraint is not contractible, despite the implementation in terms of Slide outlined in (Bessiere et al. 2008).", "startOffset": 129, "endOffset": 151}, {"referenceID": 1, "context": "This was already touched upon in (Bart\u00e1k 2003), where the Sum constraint \u2211n i=1 Xi = N was shown to be non-monotonic, but the argument holds for a wide range of constraints.", "startOffset": 33, "endOffset": 46}, {"referenceID": 3, "context": "This result can be used to establish that Peak, and HighestPeak are not contractible and that NoPeak is contractible, but it also applies to many other counting and summing constraints in (Beldiceanu et al. 2005).", "startOffset": 188, "endOffset": 212}, {"referenceID": 3, "context": "A quick survey of (Beldiceanu et al. 2005) suggests that most current global constraints are not contractible, although we have noted several useful constraints that are contractible.", "startOffset": 18, "endOffset": 42}, {"referenceID": 1, "context": "However, following a proposal of (Bart\u00e1k 2003), we can implement an uncontractible open constraint C( ~ X) by executing a safe contractible approximation Capp of C until ~ X is closed, and then replacing Capp by C for the remainder of the execution.", "startOffset": 33, "endOffset": 46}, {"referenceID": 13, "context": "This improves on a result of (Brzozowski et al. 2009).", "startOffset": 29, "endOffset": 53}, {"referenceID": 13, "context": "It is shown in (Brzozowski et al. 2009) that this problem is PSPACE-complete.", "startOffset": 15, "endOffset": 39}, {"referenceID": 13, "context": "The problem is undecidable for languages defined by context-free grammars (Brzozowski et al. 2009).", "startOffset": 74, "endOffset": 98}, {"referenceID": 1, "context": "As discussed in (Bart\u00e1k 2003), a constraint \u2211n i=1 Xi = N where the Xi\u2019s must be non-negative is not monotonic but is approximated by the constraint \u2211n i=1 Xi \u2264 N .", "startOffset": 16, "endOffset": 29}, {"referenceID": 41, "context": "Some more detailed analysis of this similarity of propagators for C and Capp, for several constraints C, appears in (Maher 2009c) and (for a slightly different model of open constraint) (Maher 2009b).", "startOffset": 116, "endOffset": 129}, {"referenceID": 40, "context": "Some more detailed analysis of this similarity of propagators for C and Capp, for several constraints C, appears in (Maher 2009c) and (for a slightly different model of open constraint) (Maher 2009b).", "startOffset": 186, "endOffset": 199}, {"referenceID": 1, "context": "Recall that under Bart\u00e1k\u2019s proposal (Bart\u00e1k 2003), a closed propagator for Capp is dynamised to handle extensions of the sequence of variables (possibly through his generic dynamisation).", "startOffset": 36, "endOffset": 49}, {"referenceID": 53, "context": "We consider \u201csoft\u201d global constraints in the style of (Petit et al. 2001).", "startOffset": 54, "endOffset": 73}, {"referenceID": 53, "context": "6 Also called violation cost (Petit et al. 2001).", "startOffset": 29, "endOffset": 48}, {"referenceID": 42, "context": "There are three broad classes of violation measures (Maher 2009d): those based on constraint decomposition, edit distance, and graph properties.", "startOffset": 52, "endOffset": 65}, {"referenceID": 5, "context": "The richness of the graph property framework (Beldiceanu and Petit 2004) makes it difficult to obtain broad results on contractibility.", "startOffset": 45, "endOffset": 72}, {"referenceID": 42, "context": "A somewhat narrow sufficient condition for contractability of soft constraints defined by graph property-based violation measures is presented in (Maher 2009d).", "startOffset": 146, "endOffset": 159}, {"referenceID": 9, "context": "Many hard constraints can be decomposed into elementary constraints, whether naturally (such as the decomposition of AllDifferent into disequalities) or by a construction, as in (Bessiere et al. 2009).", "startOffset": 178, "endOffset": 200}, {"referenceID": 53, "context": "We define a general class of decompositionbased violation measures that includes as special cases: primal graph based violation costs (Petit et al. 2001), decomposition-based violation measures of (van Hoeve et al.", "startOffset": 134, "endOffset": 153}, {"referenceID": 53, "context": "2006), the value-based violation measure for GCC (Petit et al. 2001; van Hoeve et al. 2006), the measures used for the soft Sequence constraint (Maher et al.", "startOffset": 49, "endOffset": 91}, {"referenceID": 44, "context": "2006), the measures used for the soft Sequence constraint (Maher et al. 2008) and the soft Cumulative constraint (Petit and Poder 2009), the weighted measures for AllDifferent and GCC (M\u00e9tivier et al.", "startOffset": 58, "endOffset": 77}, {"referenceID": 52, "context": "2008) and the soft Cumulative constraint (Petit and Poder 2009), the weighted measures for AllDifferent and GCC (M\u00e9tivier et al.", "startOffset": 41, "endOffset": 63}, {"referenceID": 46, "context": "2008) and the soft Cumulative constraint (Petit and Poder 2009), the weighted measures for AllDifferent and GCC (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009), and the class of decomposition-based measures discussed in (Maher 2009d).", "startOffset": 112, "endOffset": 156}, {"referenceID": 47, "context": "2008) and the soft Cumulative constraint (Petit and Poder 2009), the weighted measures for AllDifferent and GCC (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009), and the class of decomposition-based measures discussed in (Maher 2009d).", "startOffset": 112, "endOffset": 156}, {"referenceID": 42, "context": "2009), and the class of decomposition-based measures discussed in (Maher 2009d).", "startOffset": 66, "endOffset": 79}, {"referenceID": 9, "context": "For example, it permits using the decomposition of AllDifferent( ~ X) into disequalities when | ~ X| is odd, and a decomposition from (Bessiere et al. 2009) (see Example 6) when | ~ X| is even.", "startOffset": 134, "endOffset": 156}, {"referenceID": 11, "context": "This definition was inspired by the formulation of hierarchical constraints in (Borning et al. 1992; Borning et al. 1989).", "startOffset": 79, "endOffset": 121}, {"referenceID": 12, "context": "This definition was inspired by the formulation of hierarchical constraints in (Borning et al. 1992; Borning et al. 1989).", "startOffset": 79, "endOffset": 121}, {"referenceID": 53, "context": "The violation counting decomposition measures of (Petit et al. 2001; van Hoeve et al. 2006) can be obtained when the error function e(v, c) returns 0 if v satisfies c and 1 otherwise, and the combining function is summation.", "startOffset": 49, "endOffset": 91}, {"referenceID": 53, "context": "The value-based measures of (Petit et al. 2001; van Hoeve et al. 2006; Maher et al. 2008; Petit and Poder 2009) also use summation as the combining function, but use an error function that returns the amount by which the constraint c is violated by the valuation v.", "startOffset": 28, "endOffset": 111}, {"referenceID": 44, "context": "The value-based measures of (Petit et al. 2001; van Hoeve et al. 2006; Maher et al. 2008; Petit and Poder 2009) also use summation as the combining function, but use an error function that returns the amount by which the constraint c is violated by the valuation v.", "startOffset": 28, "endOffset": 111}, {"referenceID": 52, "context": "The value-based measures of (Petit et al. 2001; van Hoeve et al. 2006; Maher et al. 2008; Petit and Poder 2009) also use summation as the combining function, but use an error function that returns the amount by which the constraint c is violated by the valuation v.", "startOffset": 28, "endOffset": 111}, {"referenceID": 11, "context": "If we use maximization or the sum of squares in place of summation we have new violation measures similar to the worst-case-better and least-squares-better comparators of (Borning et al. 1992; Borning et al. 1989).", "startOffset": 171, "endOffset": 213}, {"referenceID": 12, "context": "If we use maximization or the sum of squares in place of summation we have new violation measures similar to the worst-case-better and least-squares-better comparators of (Borning et al. 1992; Borning et al. 1989).", "startOffset": 171, "endOffset": 213}, {"referenceID": 14, "context": "Covering has some similarity to characterizations of containment of conjunctive relational database queries (Chandra and Merlin 1977), (constraint) logic programming rule subsumption (Maher 1988; Maher 1993), and sufficient conditions for query containment under bag semantics (Chaudhuri and Vardi 1993; Ioannidis and Ramakrishnan 1995).", "startOffset": 108, "endOffset": 133}, {"referenceID": 36, "context": "Covering has some similarity to characterizations of containment of conjunctive relational database queries (Chandra and Merlin 1977), (constraint) logic programming rule subsumption (Maher 1988; Maher 1993), and sufficient conditions for query containment under bag semantics (Chaudhuri and Vardi 1993; Ioannidis and Ramakrishnan 1995).", "startOffset": 183, "endOffset": 207}, {"referenceID": 37, "context": "Covering has some similarity to characterizations of containment of conjunctive relational database queries (Chandra and Merlin 1977), (constraint) logic programming rule subsumption (Maher 1988; Maher 1993), and sufficient conditions for query containment under bag semantics (Chaudhuri and Vardi 1993; Ioannidis and Ramakrishnan 1995).", "startOffset": 183, "endOffset": 207}, {"referenceID": 16, "context": "Covering has some similarity to characterizations of containment of conjunctive relational database queries (Chandra and Merlin 1977), (constraint) logic programming rule subsumption (Maher 1988; Maher 1993), and sufficient conditions for query containment under bag semantics (Chaudhuri and Vardi 1993; Ioannidis and Ramakrishnan 1995).", "startOffset": 277, "endOffset": 336}, {"referenceID": 31, "context": "Covering has some similarity to characterizations of containment of conjunctive relational database queries (Chandra and Merlin 1977), (constraint) logic programming rule subsumption (Maher 1988; Maher 1993), and sufficient conditions for query containment under bag semantics (Chaudhuri and Vardi 1993; Ioannidis and Ramakrishnan 1995).", "startOffset": 277, "endOffset": 336}, {"referenceID": 38, "context": "Example 4 Contiguity is implemented in (Maher 2002) essentially by the decomposition", "startOffset": 39, "endOffset": 51}, {"referenceID": 9, "context": ") A second example is given by a decomposition ofAllDifferent given in (Bessiere et al. 2009).", "startOffset": 71, "endOffset": 93}, {"referenceID": 33, "context": "constraints) (Klug 1988; Maher 1993).", "startOffset": 13, "endOffset": 36}, {"referenceID": 37, "context": "constraints) (Klug 1988; Maher 1993).", "startOffset": 13, "endOffset": 36}, {"referenceID": 53, "context": "This class includes the variable-based violation measures (Petit et al. 2001; van Hoeve et al. 2006), since such measures are simply edit distances where substitution is the only edit operation.", "startOffset": 58, "endOffset": 100}, {"referenceID": 5, "context": "The object-based measures of (Beldiceanu and Petit 2004) are edit distances where deletion is the only edit operation.", "startOffset": 29, "endOffset": 56}, {"referenceID": 42, "context": "The property that each letter is edited at most once is important for network flow implementations of propagators such as the propagators for soft Regular in (van Hoeve et al. 2006; Maher 2009d).", "startOffset": 158, "endOffset": 194}, {"referenceID": 53, "context": "Thus the variable-based measures (Petit et al. 2001; van Hoeve et al. 2006), the object-based measures (Beldiceanu and Petit 2004), and the edit-based measures of (van Hoeve et al.", "startOffset": 33, "endOffset": 75}, {"referenceID": 5, "context": "2006), the object-based measures (Beldiceanu and Petit 2004), and the edit-based measures of (van Hoeve et al.", "startOffset": 33, "endOffset": 60}, {"referenceID": 9, "context": "It employs a decomposition of the global cardinality constraintGCC given in (Bessiere et al. 2009).", "startOffset": 76, "endOffset": 98}, {"referenceID": 9, "context": "To define the decomposition of (Bessiere et al. 2009) we need to introduce variables Ailu of type {0, 1} and Nlu of type non-negative integers, and elementary constraints as follows.", "startOffset": 31, "endOffset": 53}, {"referenceID": 28, "context": "It is demonstrated in (He et al. 2013) that using an approximation of the violation measure of a closed edit-based soft constraint can lead to incorrect answers to constraint problems.", "startOffset": 22, "endOffset": 38}, {"referenceID": 40, "context": "In (Maher 2009b) a dual notion to contractibility, called extensibility, is investigated.", "startOffset": 3, "endOffset": 16}, {"referenceID": 57, "context": "For example, the Valued CSP (Schiex et al. 1995) and the Semi-Ring CSP (Bistarelli et al.", "startOffset": 28, "endOffset": 48}, {"referenceID": 10, "context": "1995) and the Semi-Ring CSP (Bistarelli et al. 1997) frameworks define a soft constraint essentially as a function from valuations to an ordered set (the set may be partially ordered in the case of SCSPs) that might be considered a violation measure.", "startOffset": 28, "endOffset": 52}, {"referenceID": 46, "context": "Weighted violation measures are used in (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 40, "endOffset": 84}, {"referenceID": 47, "context": "Weighted violation measures are used in (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 40, "endOffset": 84}, {"referenceID": 46, "context": "As noted earlier, the decomposition measures presented here generalize the weighted decomposition measures for \u03a3-AllDifferent and \u03a3-GCC (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 136, "endOffset": 180}, {"referenceID": 47, "context": "As noted earlier, the decomposition measures presented here generalize the weighted decomposition measures for \u03a3-AllDifferent and \u03a3-GCC (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 136, "endOffset": 180}, {"referenceID": 46, "context": "However, the edit-based violation measures presented here do not generalize the weighted edit distance for \u03a3-AllDifferent and \u03a3-Regular of (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 139, "endOffset": 183}, {"referenceID": 47, "context": "However, the edit-based violation measures presented here do not generalize the weighted edit distance for \u03a3-AllDifferent and \u03a3-Regular of (M\u00e9tivier et al. 2007; M\u00e9tivier et al. 2009).", "startOffset": 139, "endOffset": 183}, {"referenceID": 45, "context": "Violation measures play a similar role to query measures (Maher and Stuckey 1989) that were used to specify preferences on query solutions in a CLP system.", "startOffset": 57, "endOffset": 81}, {"referenceID": 45, "context": "In this context, contractible violation measures are similar to pruning measures in (Maher and Stuckey 1989) in that both are non-decreasing functions, although over different domains, and both permit the safe pruning of search trees.", "startOffset": 84, "endOffset": 108}, {"referenceID": 7, "context": "Contractible global soft constraints are amenable to a nested representation (Bessiere et al. 2014) in a distributed constraint optimization setting, which has significant performance gains over other representations (Bessiere et al.", "startOffset": 77, "endOffset": 99}, {"referenceID": 7, "context": "2014) in a distributed constraint optimization setting, which has significant performance gains over other representations (Bessiere et al. 2014).", "startOffset": 123, "endOffset": 145}, {"referenceID": 15, "context": "Finally, we note that the semantics of soft constraints are examples of quantitative languages, in the terminology of (Chatterjee et al. 2010).", "startOffset": 118, "endOffset": 142}, {"referenceID": 15, "context": "However, (Chatterjee et al. 2010) focuses on languages of infinite words defined via automata, so the results of (Chatterjee et al.", "startOffset": 9, "endOffset": 33}, {"referenceID": 15, "context": "2010) focuses on languages of infinite words defined via automata, so the results of (Chatterjee et al. 2010) do not seem to have application to the subject of this paper.", "startOffset": 85, "endOffset": 109}, {"referenceID": 17, "context": "In (Colcombet 2009) a notion of cost function on languages of finite words is used but this is only used to define equivalence classes and is not related to this paper.", "startOffset": 3, "endOffset": 19}], "year": 2017, "abstractText": "Open forms of global constraints allow the addition of new variables to an argument during the execution of a constraint program. Such forms are needed for difficult constraint programming problems where problem construction and problem solving are interleaved, and fit naturally within constraint logic programming. However, in general, filtering that is sound for a global constraint can be unsound when the constraint is open. This paper provides a simple characterization, called contractibility, of the constraints where filtering remains sound when the constraint is open. With this characterization we can easily determine whether a constraint has this property or not. In the latter case, we can use it to derive a contractible approximation to the constraint. We demonstrate this work on both hard and soft constraints. In the process, we formulate two general classes of soft constraints. Under consideration in Theory and Practice of Logic Programming (TPLP).", "creator": "LaTeX with hyperref package"}}}