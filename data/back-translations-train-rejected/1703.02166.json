{"id": "1703.02166", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Mar-2017", "title": "Building a Syllable Database to Solve the Problem of Khmer Word Segmentation", "abstract": "Word segmentation is a basic problem in natural language processing. With the languages having the complex writing system like the Khmer language in Southern of Vietnam, this problem really very intractable, posing the significant challenges. Although there are some experts in Vietnam as well as international having deeply researched this problem, there are still no reasonable results meeting the demand, in particular, no treated thoroughly the ambiguous phenomenon, in the process of Khmer language processing so far. This paper present a solution based on the syllable division into component clusters using two syllable models proposed, thereby building a Khmer syllable database, is still not actually available. This method using a lexical database updated from the online Khmer dictionaries and some supported dictionaries serving role of training data and complementary linguistic characteristics. Each component cluster is labelled and located by the first and last letter to identify entirety a syllable. This approach is workable and the test results achieve high accuracy, eliminate the ambiguity, contribute to solving the problem of word segmentation and applying efficiency in Khmer language processing.", "histories": [["v1", "Tue, 7 Mar 2017 01:13:39 GMT  (235kb)", "http://arxiv.org/abs/1703.02166v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["nam tran van"], "accepted": false, "id": "1703.02166"}, "pdf": {"name": "1703.02166.pdf", "metadata": {"source": "CRF", "title": "BUILDING A SYLLABLE DATABASE TO SOLVE THE PROBLEM OF KHMER WORD SEGMENTATION", "authors": ["Tran Van Nam", "Nguyen Thi Hue", "Phan Huy Khanh"], "emails": [], "sections": [{"heading": null, "text": "DOI: 10.5121 / ijnlc.2017.6101 1Word segmentation is a fundamental problem in the processing of natural language. Although there are some experts in Vietnam as well as international experts who have thoroughly researched this problem, there are still no reasonable results to meet the demand, in particular no thorough treatment of the ambiguous phenomenon in the process of Khmer language processing. This paper represents a solution based on the division of syllables into component clusters with two suggested syllable models, thus creating a Khmer syllable database that is not yet really available. This method uses a lexical database updated by the Online Khmer dictionaries, and some supported dictionaries that serve the role of training data and complementary linguistic features. Each component cluster is labeled and localized by the first and last letter to identify the entirety of a syllable."}, {"heading": "1. INTRODUCTION", "text": "In fact, most of them are able to survive on their own."}, {"heading": "2. CHARACTERISTICS OF KHMER WRITING SYSTEM", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "2.1. An introduction to Khmer language", "text": "The Khmer language reaches up to 150 Mon-Khmer in Southeast Asia, spread mainly in Cambodia, Thailand. In Vietnam, in addition to the Khmer living in South Vietnam, there are 19 ethnic groups that have the same language MonKhmer, which are scattered mainly in the central highlands such as Bana, XeDang, Koho, Hre, Mnong, Stieng, Cotu, etc. These languages have so far been practically unexplored in the field of natural language processing. Khmer language is monosyllabic, speechless (no dialectic signs such as Vietnamese, Lao and Thai), borrowed from many languages, including Sanskrit, Thai, Cham, Chinese, Vietnamese, including France, Portugal [2] [5]. In Vietnam, the young Khmer generation has borrowed many Vietnamese words."}, {"heading": "2.2. Khmer alphabet", "text": "The Khmer alphabet has over 120 characters, including consonants, vowels and signs. TABLE I introduces 33 consonants: 15 consonants, the O [] and 18 consonants spoken O [o]. Only the consonant in voice O does not have the leg sign, the 32 remaining consonants have all the spaces that control syllabic formation [1] [3] [7] [14]. In our research, we conventionally used the leg sign that precedes the consonant so that the computer can recognize them in consonant combinations."}, {"heading": "2.3. Khmer syllable formation", "text": "In reality, there are three types of single word formation: semisyllables as a whole (I), a syllable as a whole (I), or two syllables as a whole (I). A compound word has at least two single words. In the case of a compound word with two syllables, only one of the two syllables has meaning. There are four possible combinations in syllables: a consonant is combined with another consonant as a whole (he); a phrase consists of a group of words with at least three syllables. Khmer syllable formation is very complex. There are four possible combinations in syllables: a consonant is combined with another consonant as a whole (he); a consonant consists of a group of words with at least three syllables."}, {"heading": "3. BUILDING THE SYLLABLE DATABASE", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1. Proposing the Khmer syllabble models", "text": "Based on the specific characteristics of the Khmer writing system, we propose two syllable models: simple combination (SC) and cluster combination (CC). Therefore, we use the following convention: - [X] means that the character X can be missing (option). - (X) means that the character X is at the initial position of the cluster when it is in the same group Yor Z."}, {"heading": "3.1.1. SC, the simple combination to syllable formation", "text": "The SC model determines the single syllable combination with a maximum of two consecutive letters. Each syllable in this model has the form V [C], where V is an independent vowel and C is a consonant. The following table IV illustrates the syllables formed by one or two letters:"}, {"heading": "3.1.2. CC, the complex combination to syllable formation", "text": "The CC model determines the syllable combination in the form of three-component clusters placed behind a C consonant < beginning > < middle > < end >: < beginning > = C [X1] [X2] [X3] [X4] < middle > = (Y5) [Y6] (Y7) [Y8] [Y9] < end > = (Z10) [Z11] [Z12] Where: - C, Y5, Z10, Z11 are consonants. - X2, X3, Y7, Y8 consonants with leg signs. - X4, Y9 dependent vowel. - X1 is the beginning of the syllable. - Y6 is the sign or overlapping consonant. - Z12 is the common sign that ends the syllable. -Table V. Below illustrates some typical cases of identifying characters occurring in a syllable according to the CC model."}, {"heading": "3.1.3. Applying Khmer syllable models", "text": "Both models SC and CC use the characteristic characters to identify arbitrary component clusters that are the beginning, the center, or the end of a syllable."}, {"heading": "3.2. Building the syllable database", "text": "0illustrates the solution of using two models SC and CC to build the Khmer SDB. The solutions use 7 databases (DB) from (1) to (7). Input (1) is an LDB that contains Khmer vocabulary in the social sector, not containing or borrowed words or other non-textual components. The fonts Unicode and DaunPenh are used due to their popularity and are currently available. This LDB contained 48,947 vocabulary entries, which are updated by some online Khmer dictionaries [13] [14]. The entries are arranged in the dictionary order (ABC), which may consist of individual words, compound words or phrases. The use of the solutions is summarized in five steps:"}, {"heading": "3.2.1. Dividing into component clusters", "text": "With the SC or CC models, each LDB entry was divided into syllables in this step, identifying each character at the beginning (V or C), in the middle (Y5), or at the end position (Z10) of an emerging component cluster from which a new syllable can be formed. Thus, for example, the entry \"Information Technology\" is divided into 8 component clusters:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ((((((((((((((((((("}, {"heading": "3.2.2. Data preprocessing", "text": "In fact, most of them are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "3.2.3. Assigning position label for all component clusters", "text": "In general, each entry of LDB is the form: W = A1A2... Am, where Ai, i = 1.. m, is a syllable, m \u2265 1 Ai = C1C2... Ck, where Cj, j = 1.. k, is a component cluster, i = 1.. m in entry W. It is necessary to find the starting position and the ending position of Ai, which contain k clusters of Cj, j = 1.. k, vowels or characters. (D) s, to find the beginning position and the end position of Ai, which contain k clusters of Cj, j = 1.. k, vowels or characters. (D) The summary tj is the name of each syllable Cj, i = 1.. m in entry W. It is necessary to find the starting position of Ai and the end position of Ai, the k cluster of Cj, j = 1.. r, Cr, Cl, e \"s.\" s"}, {"heading": "3.2.4. Identifying the syllable limits", "text": "When the process of marking identifies ambiguous clusters, the identification system matches this cluster with the data of TDB (4). All reasonable clusters found are transferred to syllable boundaries based on the position of the cluster in syllables. For example, the syllable splits into three clusters that cause ambiguity, and can be called \"L\" (LL), \"L\" (RR), \"L\" (LR) or \"L\" (LR), \"L\" (RR) or \"L\" (RR). If the system does not find the characteristic characters to identify syllables, it uses (5) to make the match. If all clusters Cj in each syllable Ai are designated as the corresponding position, the system combines all the designations assigned to one complete syllable, and then this syllable Ai is updated into the definitive Khmer SDB (ABDB), which is divided into two consecutive syllables."}, {"heading": "3.2.5. Completing the syllable database", "text": "First of all, the content of (7) consists of all syllables of (6). The update process is carried out after the markup position for all component clusters and the determination of syllable boundaries by means of (5) is completed. In the following Table XI, the syllables separated by some entries in LDB (1) are fully updated in (7)."}, {"heading": "3.3. Assessment", "text": "After performing the test on our PC system, we invite two Khmer experts, who are currently teaching researchers at Tra Vinh University, to test and evaluate the results independently of each other. The evaluation is the calculation of the percentage (%) of completely correct syllables, which is updated in (7).TABLE XII gives the evaluation results of two experts offered. The construction of the SDS (7) with two models SM and CM achieves convincing results. The percentage of automatic division is only 92.3% correct for these two reasons. Firstly, the LDB (1), some of the entries containing the words from Pali and Sanskrit do not have the syllable structure of the Khmer. In order to achieve better results, it is necessary to manually correct all these borrowed words occurring in the LDB (1) according to the case used. Afterwards, update all these results again in (1)."}, {"heading": "4. CONCLUSION", "text": "The proposal to use two models SC and CC to build the SDS is feasible. The solution allows the division of an entry from LDB (1) into component clusters stored in (2) with the required pre-treatment step, the marking of their position using three specific DB from (3) to (5) and the storage of all marked clusters in temporary DB (6). After the last step, the determination of syllable boundaries of (6), the high precision of the test results is really achieved, with the ability to effectively solve the ambiguity. The application of this solution offers the possibility of effectively solving the WS problem from Khmer documents. This Khmer SDS is the first available result that provides for a more universal use for various purposes, resolving not only the WS problem, but also some other problems such as spell checking, document classification, document analysis, etc. This is an important contribution to the Khmer language processing process."}, {"heading": "ACKNOWLEDGEMENTS", "text": "Without the support of two Khmer experts at Tra Vinh University, Tang Van Thon and Nguyen Ngoc Chau, in reviewing the test results in our research, this article would not have appeared."}], "references": [{"title": "Khmer Language Grammar, First Edition of Royal Academic of Cambodia", "author": ["K. Sok"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "C\u00e1c ti\u1ebfp c\u1eadn t\u00e1ch t\u1eeb ti\u1ebfng Khmer d\u00f9ng trong c\u01a1 s\u1edf d\u1eef li\u1ec7u v\u0103n b\u1ea3n", "author": ["Ly Vattana"], "venue": "Ta\u0323p chi\u0301 Khoa ho\u0323c \u0110HQGHN, Khoa ho\u0323c Tu\u031b\u0323 nhie\u0302n va\u0300 Co\u0302ng nghe\u0323\u0302", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Ch\u1eeb, V\u0169 \u0110\u1ee9c Nghi\u1ec7u, Ho\u00e0ng Tr\u1ecdng Phi\u1ebfn", "author": ["Mai Ng\u1ecdc"], "venue": "NXB Gia\u0301o du\u0323c", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1997}, {"title": "Khmer word segmentation based on bi-directional maximal matching for plaintext and microsoft word document. Asia-Pacific Signal and Information Processing", "author": ["Narin Bi", "Nguonly Taing"], "venue": "Association Annual Summit and Conference,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Which units for acoustic and language modeling for Khmer automatic speech recognition. International Workshop on Spoken Languages Technologies for Under-Ressourced Languages (SLTU'08)", "author": ["Sopheap Seng", "Sethserey Sam", "Viet-Bac Le", "Brigitte Bigi", "Laurent Besacier"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "T\u00e1ch t\u1eeb ti\u1ebfng L\u00e0o s\u1eed d\u1ee5ng kho ng\u1eef v\u1ef1ng k\u1ebft h\u1ee3p v\u1edbi c\u00e1c \u0111\u1eb7c tr\u01b0ng ng\u1eef ph\u00e1p ti\u1ebfng L\u00e0o. H\u1ed9i th\u1ea3o qu\u1ed1c gia l\u1ea7n th\u1ee9 XVI, 14-15/11/2013", "author": ["Villavon Souksan", "Phan Huy Kh\u00e1nh"], "venue": "International Journal on Natural Language Computing (IJNLC)", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Kh\u1eed b\u1ecf nh\u1eadp nh\u1eb1ng trong b\u00e0i to\u00e1n t\u00e1ch t\u1eeb ti\u1ebfng L\u00e0o", "author": ["Villavon Souksan", "Phan Huy Kh\u00e1nh"], "venue": "Ta\u0323p chi\u0301 Khoa ho\u0323c & Co\u0302ng nghe\u0323\u0302 \u0110H \u0110a\u0300 Na\u0306\u0303ng", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Khmer Word (2015) Segmentation Using Conditional Random Fields", "author": ["Vichet Chea", "Ye Kyaw Thu", "Chenchen Ding", "Masao Utiyama", "Andrew Finch", "Eiichiro Sumita"], "venue": "In Khmer Natural Language Processing,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Chinese Word Segmentation Based on Maximum Matching and Word Binding Force", "author": ["C. Chan P. Wong"], "venue": "Proceedings of Coling 96,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1996}, {"title": "C\u00e1c  ph\u01b0\u01a1ng ph\u00e1p t\u00e1ch t\u1eeb ti\u1ebfng Th\u00e1i, tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc Chulalongkorn, Th\u00e1i Land", "author": ["Paisarn Charoenpornsawat"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "Vietnamese Word Segmentation, pp", "author": ["Dinh Dien", "Hoang Kiem", "Nguyen Van Toan"], "venue": "The 6th Natural Language Processing Pacific Rim Symposium,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2001}, {"title": "Building an Annotated English-Vietnamese parallel Corpus", "author": ["Dien Dinh"], "venue": "MKS: A Journal of Southeast Asian Linguistics and Languages,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2005}, {"title": "C\u00e1ch phi\u00ean \u00e2m ch\u1eef Khmer theo Ng\u1eef \u00e2m ch\u1eef Vi\u1ec7t va C\u00e1ch phi\u00ean \u00e2m ch\u1eef Vi\u1ebft theo Ng\u1eef \u00e2m ch\u1eef Khmer\u201d, NXB V\u0103n h\u00f3a D\u00e2n t\u1ed9c", "author": ["Sang S\u1ebft"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2016}, {"title": "T\u1eeb v\u00e0 C\u00e1c ph\u01b0\u01a1ng th\u1ee9c c\u1ea5u t\u1ea1o t\u1eeb trong ti\u1ebfng Khmer, NXB Campuchia", "author": ["Chan Som Nop"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}], "referenceMentions": [{"referenceID": 1, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 192, "endOffset": 195}, {"referenceID": 3, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 195, "endOffset": 198}, {"referenceID": 5, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 198, "endOffset": 201}, {"referenceID": 6, "context": "Several methods have been proposed and familiar as the maximum matching method, finding the conditional random field, learning machine, support vector machines, hidden Markov models and so on [4][6][8][9].", "startOffset": 201, "endOffset": 204}, {"referenceID": 0, "context": "There are many ways to syllable formation, causing the ambiguity in orthography and meanings [1][2][3][24].", "startOffset": 99, "endOffset": 102}, {"referenceID": 3, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 242, "endOffset": 245}, {"referenceID": 4, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 245, "endOffset": 248}, {"referenceID": 7, "context": "The second approach seeks to separate complete words (single or compound) in a sentence in three ways: basing on statistical frequency of the words, using existing vocabulary in a lexical database (LDB), or the combination of these both ways [6][7][10][11].", "startOffset": 248, "endOffset": 252}, {"referenceID": 5, "context": "In approach based on the words, an other method proposed is building graphs analyzing sentences [8].", "startOffset": 96, "endOffset": 99}, {"referenceID": 4, "context": "This method identifies new words by searching, analyzing lists which may correspond to the shortest paths on a graph [7].", "startOffset": 117, "endOffset": 120}, {"referenceID": 2, "context": "These languages are so far not virtually researched in the domain of natural language processing The Khmer language is monosyllable, voiceless (no dialcritical marks like Vietnamese, Laotian and Thai), borrowed from many languages, including Sanskrit, Thai, Cham, Chinese, Vietnamese, including France, Portugal [2][5].", "startOffset": 315, "endOffset": 318}, {"referenceID": 0, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 137, "endOffset": 140}, {"referenceID": 4, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 140, "endOffset": 143}, {"referenceID": 10, "context": "Only the consonant \u17a1 in voice O has not the leg sign, the 32 remaining consonants all have leg signs, dominant the syllable formation [1][3][7][14].", "startOffset": 143, "endOffset": 147}, {"referenceID": 9, "context": "7 dictionaries [13][14].", "startOffset": 15, "endOffset": 19}, {"referenceID": 10, "context": "7 dictionaries [13][14].", "startOffset": 19, "endOffset": 23}, {"referenceID": 8, "context": "Usually, there are two typing methods: normal typing and NIDA typing [12].", "startOffset": 69, "endOffset": 73}], "year": 2017, "abstractText": "Word segmentation is a basic problem in natural language processing. With the languages having the complex writing system like the Khmer language in Southern of Vietnam, this problem really very intractable, posing the significant challenges. Although there are some experts in Vietnam as well as international having deeply researched this problem, there are still no reasonable results meeting the demand, in particular, no treated thoroughly the ambiguous phenomenon, in the process of Khmer language processing so far. This paper present a solution based on the syllable division into component clusters using two syllable models proposed, thereby building a Khmer syllable database, is still not actually available. This method using a lexical database updated from the online Khmer dictionaries and some supported dictionaries serving role of training data and complementary linguistic characteristics. Each component cluster is labelled and located by the first and last letter to identify entirety a syllable. This approach is workable and the test results achieve high accuracy, eliminate the ambiguity, contribute to solving the problem of word segmentation and applying efficiency in Khmer language processing.", "creator": "PScript5.dll Version 5.2.2"}}}