{"id": "1703.02375", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Mar-2017", "title": "Graph sketching-based Space-efficient Data Clustering", "abstract": "In this paper, we address the problem of recovering arbitrary-shaped data clusters from massive datasets. We present DBMSTClu a new density-based non-parametric method working on a limited number of linear measurements i.e. a sketched version of the similarity graph $G$ between the $N$ objects to cluster. Unlike $k$-means, $k$-medians or $k$-medoids algorithms, it does not fail at distinguishing clusters with particular structures. No input parameter is needed contrarily to DBSCAN or the Spectral Clustering method. DBMSTClu as a graph-based technique relies on the similarity graph $G$ which costs theoretically $O(N^2)$ in memory. However, our algorithm follows the dynamic semi-streaming model by handling $G$ as a stream of edge weight updates and sketches it in one pass over the data into a compact structure requiring $O(\\operatorname{poly} \\operatorname{log} (N))$ space. Thanks to the property of the Minimum Spanning Tree (MST) for expressing the underlying structure of a graph, our algorithm successfully detects the right number of non-convex clusters by recovering an approximate MST from the graph sketch of $G$. We provide theoretical guarantees on the quality of the clustering partition and also demonstrate its advantage over the existing state-of-the-art on several datasets.", "histories": [["v1", "Tue, 7 Mar 2017 13:43:45 GMT  (1467kb,D)", "https://arxiv.org/abs/1703.02375v1", null], ["v2", "Thu, 23 Mar 2017 13:11:52 GMT  (1624kb,D)", "http://arxiv.org/abs/1703.02375v2", null], ["v3", "Mon, 4 Sep 2017 07:58:04 GMT  (5526kb,D)", "http://arxiv.org/abs/1703.02375v3", null]], "reviews": [], "SUBJECTS": "cs.LG cs.DS", "authors": ["anne morvan", "krzysztof choromanski", "c\\'edric gouy-pailler", "jamal atif"], "accepted": false, "id": "1703.02375"}, "pdf": {"name": "1703.02375.pdf", "metadata": {"source": "CRF", "title": "Graph sketching-based Space-efficient Data Clustering", "authors": ["Anne Morvan", "Krzysztof Choromanski", "C\u00e9dric Gouy-Pailler", "Jamal Atif"], "emails": ["anne.morvan@cea.fr."], "sections": [{"heading": "1 Introduction", "text": "Objects belonging to the same cluster are expected to be more similar to each other than objects belonging to different clusters. There are a variety of algorithms that perform this task. Methods such as k-means (Lloyd [1982]), k-medians (Jain and Dubes [1988]) or k-medoids (Kaufman and Rousseeuw [1987]) are useful unless the number and shape of clusters are unknown, which unfortunately is often the case in the real world. They are typically unable to find clusters with a non-convex shape. Although DBSCAN et al.) does not have these disadvantages, the resulting cluster formation still depends on the parameter values chosen. One of the successful approaches is based on a set of N data {x1,."}, {"heading": "2 Related work", "text": "In fact, most of them will be able to play by the rules that they have set themselves, and they will be able to play by the rules that they have set themselves in order to play by the rules."}, {"heading": "3 Context, notations and graph sketching preprocessing step", "text": "(Consider a dataset with N points. Either the underlying network already exists, or it is assumed that a diagram G can be created between points where points of the dataset are vertices and weighted edges express the distances between these objects. In both cases, this can be the Euclidean distance. In both cases, the diagram on which the proposed DBMSTClu algorithm is applied should follow this definition: Definition 3.1 (diagram G = (V, E)) A diagram G = (V, E) consists of a series of vertices or nodes V and a series of edges E V \u00b7 V. The nodes or edges are not assigned attributes, but the diagram is undirected, but weighted. The weight w at an edge between nodes i and j - if this edge exists - corresponds to the normalized predefined distance between i and j, see below; w < w; w = E. and w = the sets of N | E and V, respectively."}, {"heading": "3.1 Streaming graph sketching and recovery of an approximate MST", "text": "It is not only the way in which the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the basis of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data on the level of the data."}, {"heading": "4 The proposed MST-based graph clustering method: DBMST-", "text": ""}, {"heading": "4.1 Principle", "text": "Let us consider a dataset of N dots. After the sketching phase, an approximate MST is further called T with N \u2212 1 edges s.t. [N \u2212 1], 0 < wi \u2264 1. Our density-based clustering method DBMSTClu relies exclusively on this object by making some cuts between the edges of the tree s.t. K \u2212 1 cuts lead to K clusters that are better than the O (N2) of SC. The time complexity of DBMSTClu is O (N3), which is significantly less implied than the O (N3). After a cut, the obtained clusters can serve as subtrees of the initial T and the analysis of their qualities only on the basis of those contained in these subtrees."}, {"heading": "4.2 Quality of clusters", "text": "The most important results are the following: 1) DBMSTClu differs significantly from the na\u00efve approach of SEMST in that it prefers most cuts that do not necessarily correspond to the heaviest edge (Prop. 1 and 2). 2) As long as the current partition contains at least one cluster with a negative validity index, DBMSTClu will find the highest edge that does not necessarily correspond to the heaviest edge (Prop. 2: splitDBCV I). 2) As long as the current partition contains at least one cluster with a negative validity index, DBMSTClu will find the highest edge. 3: while splitDBCV I < 1.0 do 4: temp cut. None; temp DBCV I: do 6: newCluster for each cut candidate list."}, {"heading": "5 Experiments", "text": "This year it is more than ever before."}, {"heading": "6 Conclusion", "text": "In this thesis, we presented DBMSTClu with a novel, space-efficient, density-based clustering algorithm that operates only on a minimum spanning tree (MST) of the deviation graph G: The spatial cost is O (N) with N of the number of data points. What makes the method particularly interesting is the fact that DBMSTClu2https: / / archive.ics.uci.edu / ml / datasets / mushroomis is not parametric, unlike most existing clustering methods: it automatically determines the correct number of non-convex clusters. Although the approach is essentially independent of the sketching phase, its robustness was evaluated as input by using an approximate MST of the sketched G, not by the exact MST itself. The graph is dynamically calculated as new edge weight updates are received in just one pass over the data."}, {"heading": "Acknowledgements", "text": "We would like to thank Mario Lucic for the fruitful private conversation and for working with Krzysztof Choromanski on the sketch extension during his internship at Google."}], "references": [{"title": "A framework for clustering evolving data streams", "author": ["C.C. Aggarwal", "J. Han", "J. Wang", "P.S. Yu"], "venue": "In Proceedings of the 29th International Conference on Very Large Data Bases - Volume 29,", "citeRegEx": "Aggarwal et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Aggarwal et al\\.", "year": 2003}, {"title": "Analyzing graph structure via linear measurements", "author": ["K.J. Ahn", "S. Guha", "A. McGregor"], "venue": "In Proceedings of the Twenty-third Annual ACM-SIAM Symposium on Discrete Algorithms,", "citeRegEx": "Ahn et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ahn et al\\.", "year": 2012}, {"title": "Graph sketches: Sparsification, spanners, and subgraphs", "author": ["K.J. Ahn", "S. Guha", "A. McGregor"], "venue": "In Proceedings of the 31st ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of Database Systems,", "citeRegEx": "Ahn et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ahn et al\\.", "year": 2012}, {"title": "Spectral Sparsification in Dynamic Graph Streams, pages 1\u201310", "author": ["K.J. Ahn", "S. Guha", "A. McGregor"], "venue": null, "citeRegEx": "Ahn et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Ahn et al\\.", "year": 2013}, {"title": "Streaming k-means approximation", "author": ["N. Ailon", "R. Jaiswal", "C. Monteleoni"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Ailon et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ailon et al\\.", "year": 2009}, {"title": "Breaking the small cluster barrier of graph clustering", "author": ["N. Ailon", "Y. Chen", "H. Xu"], "venue": "CoRR, abs/1302.4549,", "citeRegEx": "Ailon et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Ailon et al\\.", "year": 2013}, {"title": "Clustering algorithms based on minimum and maximum spanning trees", "author": ["T. Asano", "B. Bhattacharya", "M. Keil", "F. Yao"], "venue": "In Proceedings of the Fourth Annual Symposium on Computational Geometry,", "citeRegEx": "Asano et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Asano et al\\.", "year": 1988}, {"title": "Topological graph sketching for incremental and scalable analytics", "author": ["B. Bandyopadhyay", "D. Fuhry", "A. Chakrabarti", "S. Parthasarathy"], "venue": "In Proceedings of the 25th ACM International on Conference on Information and Knowledge Management, CIKM", "citeRegEx": "Bandyopadhyay et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Bandyopadhyay et al\\.", "year": 2016}, {"title": "Space- and time-efficient algorithm for maintaining dense subgraphs on one-pass dynamic streams", "author": ["S. Bhattacharya", "M. Henzinger", "D. Nanongkai", "C. Tsourakakis"], "venue": "In Proceedings of the Forty-seventh Annual ACM Symposium on Theory of Computing,", "citeRegEx": "Bhattacharya et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bhattacharya et al\\.", "year": 2015}, {"title": "Density-based clustering over an evolving data stream with noise", "author": ["F. Cao", "M. Ester", "W. Qian", "A. Zhou"], "venue": "SIAM Conference on Data Mining,", "citeRegEx": "Cao et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Cao et al\\.", "year": 2006}, {"title": "Clustering sparse graphs", "author": ["Y. Chen", "S. Sanghavi", "H. Xu"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Chen et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2012}, {"title": "Clustering sparse graphs", "author": ["Y. Chen", "S. Sanghavi", "H. Xu"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Chen et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2012}, {"title": "Clustering partially observed graphs via convex optimization", "author": ["Y. Chen", "A. Jalali", "S. Sanghavi", "H. Xu"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "Weighted graph clustering with non-uniform uncertainties", "author": ["Y. Chen", "S.H. Lim", "H. Xu"], "venue": "In Proceedings of the 31st International Conference on International Conference on Machine Learning - Volume 32,", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "Algorithms for graph partitioning on the planted partition model", "author": ["A. Condon", "R.M. Karp"], "venue": "Random Struct. Algorithms,", "citeRegEx": "Condon and Karp.,? \\Q2001\\E", "shortCiteRegEx": "Condon and Karp.", "year": 2001}, {"title": "A unifying framework for l0-sampling algorithms", "author": ["G. Cormode", "D. Firmani"], "venue": "Distributed and Parallel Databases,", "citeRegEx": "Cormode and Firmani.,? \\Q2014\\E", "shortCiteRegEx": "Cormode and Firmani.", "year": 2014}, {"title": "A density-based algorithm for discovering clusters in large spatial databases with noise. pages 226\u2013231", "author": ["M. Ester", "H. Kriegel", "J. Sander", "X. Xu"], "venue": null, "citeRegEx": "Ester et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Ester et al\\.", "year": 1996}, {"title": "Dengraph: A density-based community detection algorithm", "author": ["T. Falkowski", "A. Barth", "M. Spiliopoulou"], "venue": "In Proceedings of the IEEE/WIC/ACM International Conference on Web Intelligence,", "citeRegEx": "Falkowski et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Falkowski et al\\.", "year": 2007}, {"title": "Community structure in social and biological networks", "author": ["M. Girvan", "M.E.J. Newman"], "venue": "Proceedings of the National Academy of Sciences of the United States of America,", "citeRegEx": "Girvan and Newman.,? \\Q2002\\E", "shortCiteRegEx": "Girvan and Newman.", "year": 2002}, {"title": "Minimum spanning tree based clustering algorithms", "author": ["O. Grygorash", "Y. Zhou", "Z. Jorgensen"], "venue": "18th IEEE International Conference on Tools with Artificial Intelligence", "citeRegEx": "Grygorash et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Grygorash et al\\.", "year": 2006}, {"title": "Cure: An efficient clustering algorithm for large databases", "author": ["S. Guha", "R. Rastogi", "K. Shim"], "venue": "Inf. Syst.,", "citeRegEx": "Guha et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Guha et al\\.", "year": 2001}, {"title": "Stochastic blockmodels: First steps", "author": ["P.W. Holland", "K.B. Laskey", "S. Leinhardt"], "venue": "Social Networks,", "citeRegEx": "Holland et al\\.,? \\Q1983\\E", "shortCiteRegEx": "Holland et al\\.", "year": 1983}, {"title": "Dynamic graph stream algorithms in $o(n)$", "author": ["Z. Huang", "P. Peng"], "venue": "space. CoRR,", "citeRegEx": "Huang and Peng.,? \\Q2016\\E", "shortCiteRegEx": "Huang and Peng.", "year": 2016}, {"title": "Algorithms for Clustering Data. Prentice-Hall, Inc", "author": ["A. Jain", "R. Dubes"], "venue": "Upper Saddle River, NJ,", "citeRegEx": "Jain and Dubes.,? \\Q1988\\E", "shortCiteRegEx": "Jain and Dubes.", "year": 1988}, {"title": "Clustering by means of medoids. Statistical Data Analysis Based on the L1\u2013Norm and Related Methods, pages 405\u2013416", "author": ["L. Kaufman", "P. Rousseeuw"], "venue": "IEEE Trans. Inf. Theor.,", "citeRegEx": "Kaufman and Rousseeuw.,? \\Q1987\\E", "shortCiteRegEx": "Kaufman and Rousseeuw.", "year": 1987}, {"title": "Density-based clustering validation", "author": ["D. Moulavi", "P.A. Jaskowiak", "R.J.G.B. Campello", "A. Zimek", "J. Sander"], "venue": "In Proceedings of the 2014 SIAM International Conference on Data Mining,", "citeRegEx": "Moulavi et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Moulavi et al\\.", "year": 2014}, {"title": "Data streams: Algorithms and applications", "author": ["S. Muthukrishnan"], "venue": "Found. Trends Theor. Comput. Sci.,", "citeRegEx": "Muthukrishnan.,? \\Q2005\\E", "shortCiteRegEx": "Muthukrishnan.", "year": 2005}, {"title": "Spectral methods for graph clustering - a survey", "author": ["M. Nascimento", "A. de Carvalho"], "venue": "European Journal of Operational Research,", "citeRegEx": "Nascimento and Carvalho.,? \\Q2011\\E", "shortCiteRegEx": "Nascimento and Carvalho.", "year": 2011}, {"title": "Finding dense clusters via \u201dlow rank + sparse", "author": ["S. Oymak", "B. Hassibi"], "venue": "decomposition. CoRR,", "citeRegEx": "Oymak and Hassibi.,? \\Q2011\\E", "shortCiteRegEx": "Oymak and Hassibi.", "year": 2011}, {"title": "Spectral clustering and the high-dimensional stochastic blockmodel", "author": ["K. Rohe", "S. Chatterjee", "B. Yu"], "venue": "Ann. Statist., 39(4):1878\u20131915,", "citeRegEx": "Rohe et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Rohe et al\\.", "year": 2011}, {"title": "Silhouettes: A graphical aid to the interpretation and validation of cluster analysis", "author": ["P.J. Rousseeuw"], "venue": "Journal of Computational and Applied Mathematics,", "citeRegEx": "Rousseeuw.,? \\Q1987\\E", "shortCiteRegEx": "Rousseeuw.", "year": 1987}, {"title": "Survey: Graph clustering", "author": ["S.E. Schaeffer"], "venue": "Comput. Sci. Rev.,", "citeRegEx": "Schaeffer.,? \\Q2007\\E", "shortCiteRegEx": "Schaeffer.", "year": 2007}, {"title": "Clustering gene expression data using a graph-theoretic approach: an application of minimum spanning trees", "author": ["Y. Xu", "V. Olman", "D. Xu"], "venue": null, "citeRegEx": "Xu et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Xu et al\\.", "year": 2002}, {"title": "Graph-theoretical methods for detecting and describing gestalt clusters", "author": ["C.T. Zahn"], "venue": "IEEE Trans. Comput.,", "citeRegEx": "Zahn.,? \\Q1971\\E", "shortCiteRegEx": "Zahn.", "year": 1971}], "referenceMentions": [{"referenceID": 22, "context": "Methods like k-means (Lloyd [1982]), k-medians (Jain and Dubes [1988]) or k-medoids (Kaufman and Rousseeuw [1987]) are useful unless the number and the shape of clusters are unknown which is unfortunately often the case in real-world applications.", "startOffset": 48, "endOffset": 70}, {"referenceID": 22, "context": "Methods like k-means (Lloyd [1982]), k-medians (Jain and Dubes [1988]) or k-medoids (Kaufman and Rousseeuw [1987]) are useful unless the number and the shape of clusters are unknown which is unfortunately often the case in real-world applications.", "startOffset": 48, "endOffset": 114}, {"referenceID": 16, "context": "Although DBSCAN (Ester et al. [1996]) does not have these disadvantages, its resulting clustering still depends on the chosen parameter values.", "startOffset": 17, "endOffset": 37}, {"referenceID": 23, "context": "Over the last decade, it has been established that the dynamic streaming model (Muthukrishnan [2005]) associated with linear sketching techniques (Ahn et al.", "startOffset": 80, "endOffset": 101}, {"referenceID": 1, "context": "Over the last decade, it has been established that the dynamic streaming model (Muthukrishnan [2005]) associated with linear sketching techniques (Ahn et al. [2012a]) - also suitable for distributed processing -, is a good way for tackling this last issue.", "startOffset": 147, "endOffset": 166}, {"referenceID": 19, "context": "General graph clustering The approach of graph representation of the data leads to the extensive literature over graph clustering - related to graph partitioning and community detection - (Schaeffer [2007]).", "startOffset": 189, "endOffset": 206}, {"referenceID": 10, "context": "A widely used method to detect communities is the Edge Betweenness Clustering (Girvan and Newman [2002]) which is a hierarchical divisive algorithm removing iteratively edges with the highest edge betweenness.", "startOffset": 79, "endOffset": 104}, {"referenceID": 10, "context": "From the clustering methods point of view, DenGraph (Falkowski et al. [2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al.", "startOffset": 53, "endOffset": 77}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes.", "startOffset": 92, "endOffset": 112}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes. Recent works include also approaches from convex optimization using low-rank decomposition of the adjacency matrix (Oymak and Hassibi [2011], Chen et al.", "startOffset": 92, "endOffset": 335}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes. Recent works include also approaches from convex optimization using low-rank decomposition of the adjacency matrix (Oymak and Hassibi [2011], Chen et al. [2012a,b, 2014a,b]). These methods bring theoretically guarantees about the exact recovery of the ground truth clustering for the Stochastic Block Model (Holland et al. [1983], Condon and Karp [2001], Rohe et al.", "startOffset": 92, "endOffset": 524}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes. Recent works include also approaches from convex optimization using low-rank decomposition of the adjacency matrix (Oymak and Hassibi [2011], Chen et al. [2012a,b, 2014a,b]). These methods bring theoretically guarantees about the exact recovery of the ground truth clustering for the Stochastic Block Model (Holland et al. [1983], Condon and Karp [2001], Rohe et al.", "startOffset": 92, "endOffset": 548}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes. Recent works include also approaches from convex optimization using low-rank decomposition of the adjacency matrix (Oymak and Hassibi [2011], Chen et al. [2012a,b, 2014a,b]). These methods bring theoretically guarantees about the exact recovery of the ground truth clustering for the Stochastic Block Model (Holland et al. [1983], Condon and Karp [2001], Rohe et al. [2011]) but demand to compute the eigendecomposition of a N \u00d7N matrix (resp.", "startOffset": 92, "endOffset": 568}, {"referenceID": 4, "context": "[2007]) proposes a graph version of DBSCAN which is able to deal with noise while work from Ailon et al. [2013] focuses on the problem of recovering clusters with considerably dissimilar sizes. Recent works include also approaches from convex optimization using low-rank decomposition of the adjacency matrix (Oymak and Hassibi [2011], Chen et al. [2012a,b, 2014a,b]). These methods bring theoretically guarantees about the exact recovery of the ground truth clustering for the Stochastic Block Model (Holland et al. [1983], Condon and Karp [2001], Rohe et al. [2011]) but demand to compute the eigendecomposition of a N \u00d7N matrix (resp. O(N) and O(N) for time and space complexity). Moreover they are restricted to unweighted graphs (weights in the work from Chen et al. [2014b] are about uncertainty of existence of an edge, not a distance between points).", "startOffset": 92, "endOffset": 780}, {"referenceID": 33, "context": "The first one Standard Euclidean MST (SEMST) is from Zahn [1971] and given a number of expected clusters, consists in deleting the heaviest edges from the Euclidean MST of the considered graph but this completely fails when the intra-cluster distance is lower than the inter-clusters one.", "startOffset": 53, "endOffset": 65}, {"referenceID": 6, "context": "MST-based clustering methods (Asano et al. [1988], Grygorash et al.", "startOffset": 30, "endOffset": 50}, {"referenceID": 6, "context": "MST-based clustering methods (Asano et al. [1988], Grygorash et al. [2006]) have been developed and can be classified into the group of density-based methods.", "startOffset": 30, "endOffset": 75}, {"referenceID": 6, "context": "MST-based clustering methods (Asano et al. [1988], Grygorash et al. [2006]) have been developed and can be classified into the group of density-based methods. MSDR (Grygorash et al. [2006]) relies on the mean and the standard deviation of edge weights within clusters but will encourage clusters with points far from each other as soon as they are equally \u201dfar\u201d.", "startOffset": 30, "endOffset": 189}, {"referenceID": 6, "context": "MST-based clustering methods (Asano et al. [1988], Grygorash et al. [2006]) have been developed and can be classified into the group of density-based methods. MSDR (Grygorash et al. [2006]) relies on the mean and the standard deviation of edge weights within clusters but will encourage clusters with points far from each other as soon as they are equally \u201dfar\u201d. Moreover, it does not handle clusters with less than three points. In practice, MST-based clustering algorithms have been successfully applied in bioinformatics (Xu et al. [2002]) and image color segmentation (Grygorash et al.", "startOffset": 30, "endOffset": 542}, {"referenceID": 6, "context": "MST-based clustering methods (Asano et al. [1988], Grygorash et al. [2006]) have been developed and can be classified into the group of density-based methods. MSDR (Grygorash et al. [2006]) relies on the mean and the standard deviation of edge weights within clusters but will encourage clusters with points far from each other as soon as they are equally \u201dfar\u201d. Moreover, it does not handle clusters with less than three points. In practice, MST-based clustering algorithms have been successfully applied in bioinformatics (Xu et al. [2002]) and image color segmentation (Grygorash et al. [2006]).", "startOffset": 30, "endOffset": 597}, {"referenceID": 1, "context": "Graph sketching The work from Ahn et al. [2012a] is at the origin of graph sketches study by giving dynamic semi-streaming methods for recovering different properties of graphs (MST, connectivity, bipartiteness, etc.", "startOffset": 30, "endOffset": 49}, {"referenceID": 1, "context": "Graph sketching The work from Ahn et al. [2012a] is at the origin of graph sketches study by giving dynamic semi-streaming methods for recovering different properties of graphs (MST, connectivity, bipartiteness, etc.) and has lead to numerous works since, with among others Ahn et al. [2012b, 2013], Bhattacharya et al. [2015], Huang and Peng [2016], Bandyopadhyay et al.", "startOffset": 30, "endOffset": 327}, {"referenceID": 1, "context": "Graph sketching The work from Ahn et al. [2012a] is at the origin of graph sketches study by giving dynamic semi-streaming methods for recovering different properties of graphs (MST, connectivity, bipartiteness, etc.) and has lead to numerous works since, with among others Ahn et al. [2012b, 2013], Bhattacharya et al. [2015], Huang and Peng [2016], Bandyopadhyay et al.", "startOffset": 30, "endOffset": 350}, {"referenceID": 1, "context": "Graph sketching The work from Ahn et al. [2012a] is at the origin of graph sketches study by giving dynamic semi-streaming methods for recovering different properties of graphs (MST, connectivity, bipartiteness, etc.) and has lead to numerous works since, with among others Ahn et al. [2012b, 2013], Bhattacharya et al. [2015], Huang and Peng [2016], Bandyopadhyay et al. [2016].", "startOffset": 30, "endOffset": 379}, {"referenceID": 3, "context": "Space-efficient clustering algorithms Streaming k-means (Ailon et al. [2009]) is a one-pass streaming method for the k-means problem but still fails to detect clusters with non-convex shape since only the centroid point of each cluster is stored.", "startOffset": 57, "endOffset": 77}, {"referenceID": 3, "context": "Space-efficient clustering algorithms Streaming k-means (Ailon et al. [2009]) is a one-pass streaming method for the k-means problem but still fails to detect clusters with non-convex shape since only the centroid point of each cluster is stored. This is not the case of CURE algorithm (Guha et al. [2001]) which represents each cluster as a random sample of data points contained in it but this offline method has a prohibitive time complexity of O(N log(N)) not suitable for large datasets.", "startOffset": 57, "endOffset": 306}, {"referenceID": 0, "context": "More time-efficient, CluStream (Aggarwal et al. [2003]) and DenStream (Cao et al.", "startOffset": 32, "endOffset": 55}, {"referenceID": 0, "context": "More time-efficient, CluStream (Aggarwal et al. [2003]) and DenStream (Cao et al. [2006]) create microclusters based on local densities in an online fashion and aggregate them later to build bigger clusters in offline steps.", "startOffset": 32, "endOffset": 89}, {"referenceID": 26, "context": "1 Streaming graph sketching and recovery of an approximate MST Processing data in the dynamic streaming model (Muthukrishnan [2005]) for graph sketching implies the following: 1) The graph should be handled as a stream s of edge weight updates: s = (a1, .", "startOffset": 111, "endOffset": 132}, {"referenceID": 1, "context": "Algorithm from Ahn et al. [2012a] satisfies these conditions and is used here to produce in an online fashion a limited number of linear measurements summarizing edge weights of G, as new data aj are read from the stream s of edge weight updates.", "startOffset": 15, "endOffset": 34}, {"referenceID": 1, "context": "Algorithm from Ahn et al. [2012a] satisfies these conditions and is used here to produce in an online fashion a limited number of linear measurements summarizing edge weights of G, as new data aj are read from the stream s of edge weight updates. Its general principle is briefly described here. For a given small 1, G is seen as a set of unweighted subgraphs Gk containing all the edges with weight lower than (1 + 1) , hence Gk \u2282 Gk+1. The Gk are embodied as N virtual vectors v \u2208 {\u22121, 0, 1} for i \u2208 [N ] expressing for each node the belonging to an existing edge: for j \u2208 [M ], 0 if node i is not in ej , 1 (resp. \u22121) if ej exists and i is its left (resp. right) node. All v are described at L different \u201dlevels\u201d, i.e. L copies of the true vectors are made with some entries randomly set to zero s.t. the v get sparser as the corresponding level l \u2208 [L] increases. The v for each level are explicitly coded in memory by three counters: \u03c6 = \u2211M j=1 v (i),l j ; \u03b9 = \u2211M j=1 j v (i),l j ; \u03c4 = \u2211M j=1 v (i),l j z j mod p, with p a suitably large prime and z \u2208 Zp. The resulting compact data structure further named sketch enables to draw almost uniformly at random a nonzero weighted edge among Gk at any time among the levels vectors v (i),l which are 1-sparse (with exactly one nonzero coefficient) thanks to `0-sampling (Cormode and Firmani [2014]): Definition 3.", "startOffset": 15, "endOffset": 1348}, {"referenceID": 1, "context": "Algorithm from Ahn et al. [2012a] satisfies these conditions and is used here to produce in an online fashion a limited number of linear measurements summarizing edge weights of G, as new data aj are read from the stream s of edge weight updates. Its general principle is briefly described here. For a given small 1, G is seen as a set of unweighted subgraphs Gk containing all the edges with weight lower than (1 + 1) , hence Gk \u2282 Gk+1. The Gk are embodied as N virtual vectors v \u2208 {\u22121, 0, 1} for i \u2208 [N ] expressing for each node the belonging to an existing edge: for j \u2208 [M ], 0 if node i is not in ej , 1 (resp. \u22121) if ej exists and i is its left (resp. right) node. All v are described at L different \u201dlevels\u201d, i.e. L copies of the true vectors are made with some entries randomly set to zero s.t. the v get sparser as the corresponding level l \u2208 [L] increases. The v for each level are explicitly coded in memory by three counters: \u03c6 = \u2211M j=1 v (i),l j ; \u03b9 = \u2211M j=1 j v (i),l j ; \u03c4 = \u2211M j=1 v (i),l j z j mod p, with p a suitably large prime and z \u2208 Zp. The resulting compact data structure further named sketch enables to draw almost uniformly at random a nonzero weighted edge among Gk at any time among the levels vectors v (i),l which are 1-sparse (with exactly one nonzero coefficient) thanks to `0-sampling (Cormode and Firmani [2014]): Definition 3.2 (`0-sampling) An ( , \u03b4) `0-sampler for a nonzero vector x \u2208 R fails with a probability at most \u03b4 or returns some i \u2208 [n] with probability (1\u00b1 ) 1 | supp x| where suppx = {i \u2208 [n] | xi 6= 0}. The sketch requires O(N polylog(N)) space (or more precisely O(N logN)). It follows that the sketching is technically semi-streamed but in practice only one pass over the data is needed and the space cost is significantly lower than the theoretical O(N) bound. Note that the time cost for each update of the sketch is polylog(N). In the same work, Ahn et al. [2012a] also proposed an algorithm to compute approximately in a single-pass the weight of a MST by appropriate samplings from the sketch with O(N polylog(N)) time complexity.", "startOffset": 15, "endOffset": 1923}, {"referenceID": 1, "context": "Algorithm from Ahn et al. [2012a] satisfies these conditions and is used here to produce in an online fashion a limited number of linear measurements summarizing edge weights of G, as new data aj are read from the stream s of edge weight updates. Its general principle is briefly described here. For a given small 1, G is seen as a set of unweighted subgraphs Gk containing all the edges with weight lower than (1 + 1) , hence Gk \u2282 Gk+1. The Gk are embodied as N virtual vectors v \u2208 {\u22121, 0, 1} for i \u2208 [N ] expressing for each node the belonging to an existing edge: for j \u2208 [M ], 0 if node i is not in ej , 1 (resp. \u22121) if ej exists and i is its left (resp. right) node. All v are described at L different \u201dlevels\u201d, i.e. L copies of the true vectors are made with some entries randomly set to zero s.t. the v get sparser as the corresponding level l \u2208 [L] increases. The v for each level are explicitly coded in memory by three counters: \u03c6 = \u2211M j=1 v (i),l j ; \u03b9 = \u2211M j=1 j v (i),l j ; \u03c4 = \u2211M j=1 v (i),l j z j mod p, with p a suitably large prime and z \u2208 Zp. The resulting compact data structure further named sketch enables to draw almost uniformly at random a nonzero weighted edge among Gk at any time among the levels vectors v (i),l which are 1-sparse (with exactly one nonzero coefficient) thanks to `0-sampling (Cormode and Firmani [2014]): Definition 3.2 (`0-sampling) An ( , \u03b4) `0-sampler for a nonzero vector x \u2208 R fails with a probability at most \u03b4 or returns some i \u2208 [n] with probability (1\u00b1 ) 1 | supp x| where suppx = {i \u2208 [n] | xi 6= 0}. The sketch requires O(N polylog(N)) space (or more precisely O(N logN)). It follows that the sketching is technically semi-streamed but in practice only one pass over the data is needed and the space cost is significantly lower than the theoretical O(N) bound. Note that the time cost for each update of the sketch is polylog(N). In the same work, Ahn et al. [2012a] also proposed an algorithm to compute approximately in a single-pass the weight of a MST by appropriate samplings from the sketch with O(N polylog(N)) time complexity. Here an extended method is applied for obtaining rather an approximate MST - and not simply its weight - by registering edges as they are sampled. Referring to the proof of Lemma 3.4 in Ahn et al. [2012a], the approach is simply justified by applying Kruskal\u2019s algorithm where edges with lower weights are first sampled.", "startOffset": 15, "endOffset": 2296}, {"referenceID": 25, "context": "The previously defined quantities are significantly distinct from the separation and sparseness defined in Moulavi et al. [2014]. Indeed, firstly, their quantities are not well defined for special cases when clusters have less than four nodes or a partition contains only one cluster.", "startOffset": 107, "endOffset": 129}, {"referenceID": 25, "context": "The previously defined quantities are significantly distinct from the separation and sparseness defined in Moulavi et al. [2014]. Indeed, firstly, their quantities are not well defined for special cases when clusters have less than four nodes or a partition contains only one cluster. Secondly, differentiating internal and external nodes or edges like they do does not enable to properly recover easy clusters like the three convex blobs from Fig. 5. Moreover, our DBCVI differs from the Silhouette Coefficient from Rousseeuw [1987]. Although this is based on close concepts like tightness and also separation, the global coefficient is based on the average values of Silhouette coefficients of each point, while our computation of DBCVI begins at the cluster level.", "startOffset": 107, "endOffset": 534}, {"referenceID": 16, "context": "The results of DBMSTClu are compared with two other algorithms: DBSCAN (Ester et al. [1996]) which competes with DBMSTClu regarding time and space complexities (resp.", "startOffset": 72, "endOffset": 92}, {"referenceID": 16, "context": "The results of DBMSTClu are compared with two other algorithms: DBSCAN (Ester et al. [1996]) which competes with DBMSTClu regarding time and space complexities (resp. O(N) in the worst case and O(N) when the distance matrix is not stored) and a naive approach of a MST-based algorithm. The latter called Standard Euclidean MST (SEMST) (Zahn [1971]) cuts the K \u2212 1 heaviest edges of the standard Euclidean MST given a targeted number of clusters K.", "startOffset": 72, "endOffset": 348}], "year": 2017, "abstractText": "In this paper, we address the problem of recovering arbitrary-shaped data clusters from datasets while facing high space constraints, as this is for instance the case in the Internet of Things environment when analysis algorithms are directly deployed on resources-limited mobile devices collecting the data. We present DBMSTClu a new density-based non-parametric method working on a limited number of linear measurements i.e. a sketched version of the dissimilarity graph G between the N objects to cluster. Unlike k-means, k-medians or k-medoids algorithms, it does not fail at distinguishing clusters with particular structures. No input parameter is needed contrarily to DBSCAN or the Spectral Clustering method. DBMSTClu as a graph-based technique relies on the dissimilarity graph G which costs theoretically O(N) in memory. However, our algorithm follows the dynamic semi-streaming model by handling G as a stream of edge weight updates and sketches it in one pass over the data into a compact structure requiring O(N polylog(N)) space. Thanks to the property of the Minimum Spanning Tree (MST) for expressing the underlying structure of a graph, our algorithm successfully detects the right number of non-convex clusters by recovering an approximate MST from the graph sketch of G. We provide theoretical guarantees on the quality of the clustering partition and also demonstrate its advantage over the existing state-of-the-art on several datasets.", "creator": "LaTeX with hyperref package"}}}