{"id": "1703.05614", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Mar-2017", "title": "ParaGraphE: A Library for Parallel Knowledge Graph Embedding", "abstract": "Knowledge graph embedding aims at translating the knowledge graph into numerical representations by transforming the entities and relations into con- tinuous low-dimensional vectors. Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implemen- tations of them are time-consuming for large-scale knowledge graphs. Here, we design a unified parallel framework to parallelize these methods, which achieves a significant time reduction without in uencing the accuracy. We name our framework as ParaGraphE, which provides a library for parallel knowledge graph embedding. The source code can be downloaded from https: //github.com/LIBBLE/LIBBLE-MultiThread/tree/master/ParaGraphE.", "histories": [["v1", "Thu, 16 Mar 2017 13:36:41 GMT  (201kb,D)", "https://arxiv.org/abs/1703.05614v1", null], ["v2", "Fri, 31 Mar 2017 06:15:48 GMT  (201kb,D)", "http://arxiv.org/abs/1703.05614v2", null], ["v3", "Wed, 5 Apr 2017 02:56:45 GMT  (201kb,D)", "http://arxiv.org/abs/1703.05614v3", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["xiao-fan niu", "wu-jun li"], "accepted": false, "id": "1703.05614"}, "pdf": {"name": "1703.05614.pdf", "metadata": {"source": "CRF", "title": "ParaGraphE: A Library for Parallel Knowledge Graph Embedding", "authors": ["Xiao-Fan Niu", "Wu-Jun Li"], "emails": ["niuxf@lamda.nju.edu.cn,", "liwujun@nju.edu.cn"], "sections": [{"heading": "1 Introduction", "text": "A knowledge diagram contains a set of units called E and a set of relationships called R. Every knowledge in a knowledge diagram is presented in three forms (head, designation, tail), which is typically referred to as (h, r, t), with h, t, E, and r, meaning that h has a relationship to t.Knowledge Diagram usually suffers from incompleteness. A major task of knowledge diagram research is to complete this problem by coding units and relationships into continuous low-dimensional vectors based on existing observed triples. Traditional methods based on logic and symbols are neither traceable nor robust to deal with large-scale knowledge diagrams. Recently, the embedding of knowledge diagrams has been introduced to solve this problem by encrypting entities and relationships into continuous low-dimensional vectors and to conduct considerations in a simple linear algebra way."}, {"heading": "2 Implemented Methods", "text": "We first present the uniform framework of our parallel implementations and then point out the detailed differences between the different methods."}, {"heading": "2.1 Framework", "text": "All of the above methods attempt to minimize a margin-based loss of rank, which can be formulated as follows: L = \u2211 (h, r, t) \u0445 S \u2211 (h, r, t) \u0445 S \u2032 [s (h, r, t) + \u03b3 \u2212 s (h, r, t)] + (1) s.t. Some constraints where S is a set of golden (positive) triples, S \u2032 is a set of corrupt (negative) triples, which are usually constructed by replacing h or t of a golden triple (h, r, t) with another entity, is the margin, s (h, r, t) the score function of triples (h, r, t), which are differently defined in different methods. the unified parallel learning frames of ParaGraphE are shown in algorithm 1.Algorithm 1.Algorithm 1 ParaGraphEInitialization: p-Threads, embedding of each entity and relationship differently defined. (h, r, t) The unified parallel learning frames of ParaGraphE are shown in Eternity, Eternity, Eternity, Eternity, Eternity, Eternity, Eternity, 1, Eternity, Eternity, Eternity, Eternity; 1; Eternity, Eternity, Eternity, Eternity."}, {"heading": "2.2 Implemented Methods", "text": "There is no method with a similar margin-based rank loss in (1). - > All of these methods can be used with the loss in (1), (2), (3), (3), (3), (4), (4), (4), (4), (4), (4), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5, (5), (5, (5), (5), (5, (5), (5), (5), (5), (5), (5), (5), (5, (5), (5), (5), (5), (5), (5), (5), (5), (5), ("}, {"heading": "3 Experiment Results", "text": "We use 10 threads to perform the experiments on two widely used knowledge graph datasets WN18 and FB15k. Table 1 lists the statistics of these two datasets. Metrics for evaluation include those popular metrics used in existing knowledge graph for embedding papers. They are: \u2022 mr: the value of the mean. The results of the experiments are shown in Table 2 and Table 3. Here, \"raw\" denotes the metrics calculated on all corrupt triangles, \"filter\" denotes the metrics calculated on corrupt triangles without which already exist in knowledge graph. We can also find that all accuracy is very close to the accuracy reported in the original papers, with the exception of SphereE on FB15k, where the original paper shows only a result using a polynomial core. We can also find that our implementations are much faster than the changes in the original papers in the FB15k at the initial datasets."}, {"heading": "4 Conclusion", "text": "We have developed a unified framework called ParaGraphE to parallelise methods for embedding knowledge graphs. Our implementation of several existing methods can achieve significant time savings without affecting accuracy. In our future work, we will implement additional methods for embedding knowledge graphs with the ParaGraphE framework. Furthermore, in addition to knowledge graphs, ParaGraphE is in fact generic enough to be applied to other types of graphs that will also be empirically evaluated in our future work."}], "references": [{"title": "Translating embeddings for modeling multi-relational data", "author": ["Antoine Bordes", "Nicolas Usunier", "Alberto Garcia-Duran", "Jason Weston", "Oksana Yakhnenko"], "venue": "In NIPS,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Knowledge graph embedding via dynamic mapping matrix", "author": ["Guoliang Ji", "Shizhu He", "Liheng Xu", "Kang Liu", "Jun Zhao"], "venue": "In ACL,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "Learning entity and relation embeddings for knowledge graph completion", "author": ["Yankai Lin", "Zhiyuan Liu", "Maosong Sun", "Yang Liu", "Xuan Zhu"], "venue": "In AAAI,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Hogwild: A lock-free approach to parallelizing stochastic gradient descent", "author": ["Benjamin Recht", "Christopher Re", "Stephen Wright", "Feng Niu"], "venue": "In NIPS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Knowledge graph embedding by translating on hyperplanes", "author": ["Zhen Wang", "Jianwen Zhang", "Jianlin Feng", "Zheng Chen"], "venue": "In AAAI,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "From one point to a manifold: Knowledge graph embedding for precise link prediction", "author": ["Han Xiao", "Minlie Huang", "Hao Yu", "Xiaoyan Zhu"], "venue": "In IJCAI,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2016}, {"title": "Lock-free optimization for nonconvex problems", "author": ["Shen-Yi Zhao", "Gong-Duo Zhang", "Wu-Jun Li"], "venue": "In AAAI,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2017}], "referenceMentions": [{"referenceID": 0, "context": "Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs.", "startOffset": 23, "endOffset": 38}, {"referenceID": 4, "context": "Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs.", "startOffset": 23, "endOffset": 38}, {"referenceID": 2, "context": "Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs.", "startOffset": 23, "endOffset": 38}, {"referenceID": 1, "context": "Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs.", "startOffset": 23, "endOffset": 38}, {"referenceID": 5, "context": "Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs.", "startOffset": 23, "endOffset": 38}, {"referenceID": 0, "context": "Some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 69, "endOffset": 72}, {"referenceID": 4, "context": "Some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 81, "endOffset": 84}, {"referenceID": 2, "context": "Some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 93, "endOffset": 96}, {"referenceID": 1, "context": "Some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 105, "endOffset": 108}, {"referenceID": 5, "context": "Some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 123, "endOffset": 126}, {"referenceID": 3, "context": "ParaGraphE is implemented based on the lock-free strategies in [4, 7].", "startOffset": 63, "endOffset": 69}, {"referenceID": 6, "context": "ParaGraphE is implemented based on the lock-free strategies in [4, 7].", "startOffset": 63, "endOffset": 69}, {"referenceID": 0, "context": "Here, we implement some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 88, "endOffset": 91}, {"referenceID": 4, "context": "Here, we implement some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 100, "endOffset": 103}, {"referenceID": 2, "context": "Here, we implement some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 112, "endOffset": 115}, {"referenceID": 1, "context": "Here, we implement some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 124, "endOffset": 127}, {"referenceID": 5, "context": "Here, we implement some representative knowledge graph embedding methods include TransE [1], TransH [5], TransR [3], TransD [2] and ManifoldE [6].", "startOffset": 142, "endOffset": 145}, {"referenceID": 0, "context": "\u2022 TransE [1]:", "startOffset": 9, "endOffset": 12}, {"referenceID": 4, "context": "\u2022 TransH [5]: \u2013 embeddings: k-dimensional vectors h, t for entities h, t.", "startOffset": 9, "endOffset": 12}, {"referenceID": 2, "context": "\u2022 TransR [3]: \u2013 embeddings: k-dimensional vector h, t for entities h, t.", "startOffset": 9, "endOffset": 12}, {"referenceID": 1, "context": "\u2022 TransD [2]: \u2013 embeddings: Two vectors are associated with each entity and relation, i.", "startOffset": 9, "endOffset": 12}, {"referenceID": 5, "context": "\u2013 score function: s(h, r, t) = \u2016(h + hphrp) + r\u2212 (t + tptrp))\u2016 \u2013 constraints: \u2016h\u20162 = 1, \u2016t\u20162 = 1, \u2016r\u20162 = 1, \u2016h + hphrp\u20162 \u2264 1, \u2016t + tp trp\u20162 \u2264 1 \u2022 SphereE [6]: \u2013 embeddings: k-dimensional vectors for both entities and relations, i.", "startOffset": 154, "endOffset": 157}, {"referenceID": 5, "context": "Note that SphereE is an implementation for the method \u201csphere\u201d of the ManifoldE [6].", "startOffset": 80, "endOffset": 83}], "year": 2017, "abstractText": "Knowledge graph embedding aims at translating the knowledge graph into numerical representations by transforming the entities and relations into continuous low-dimensional vectors. Recently, many methods [1, 5, 3, 2, 6] have been proposed to deal with this problem, but existing single-thread implementations of them are time-consuming for large-scale knowledge graphs. Here, we design a unified parallel framework to parallelize these methods, which achieves a significant time reduction without influencing the accuracy. We name our framework as ParaGraphE, which provides a library for parallel knowledge graph embedding. The source code can be downloaded from https: //github.com/LIBBLE/LIBBLE-MultiThread/tree/master/ParaGraphE.", "creator": "LaTeX with hyperref package"}}}