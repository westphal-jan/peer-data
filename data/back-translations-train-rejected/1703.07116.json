{"id": "1703.07116", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Mar-2017", "title": "Interest-Driven Discovery of Local Process Models", "abstract": "Local Process Models (LPM) describe structured fragments of process behavior occurring in the context of less structured business processes. Traditional LPM discovery aims to generate a collection of process models that describe highly frequent behavior, but these models do not always provide useful answers for questions posed by process analysts aiming at business process improvement. We propose a framework for goal-driven LPM discovery, based on utility functions and constraints. We describe four scopes on which these utility functions and constrains can be defined, and show that utility functions and constraints on different scopes can be combined to form composite utility functions/constraints. Finally, we demonstrate the applicability of our approach by presenting several actionable business insights discovered with LPM discovery on two real life data sets.", "histories": [["v1", "Tue, 21 Mar 2017 09:57:59 GMT  (919kb,D)", "http://arxiv.org/abs/1703.07116v1", "submitted to the International Conference on Business Process Management (BPM) 2017"]], "COMMENTS": "submitted to the International Conference on Business Process Management (BPM) 2017", "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["niek tax", "benjamin dalmas", "natalia sidorova", "wil m p van der aalst", "sylvie norre"], "accepted": false, "id": "1703.07116"}, "pdf": {"name": "1703.07116.pdf", "metadata": {"source": "CRF", "title": "Interest-Driven Discovery of Local Process Models", "authors": ["Niek Tax", "Benjamin Dalmas", "Natalia Sidorova", "Wil M.P. van der Aalst", "Sylvie Norre"], "emails": ["n.tax@tue.nl", "n.sidorova@tue.nl", "w.m.p.v.d.aalst@tue.nl", "benjamin.dalmas@isima.fr", "sylvie.norre@isima.fr"], "sections": [{"heading": null, "text": "Tags: Process Discovery, Pattern Mining, Goal-driven Data Mining"}, {"heading": "1 Introduction", "text": "In fact, it is not that it is a real process that involves the discovery of a particular process, in which this model accurately describes the process. The process models obtained in this process provide insight into what is going on in the process, and can be used as a starting point for further analysis, e.g. for checking compliance with rules and regulations. Many algorithms have been proposed for the discovery of processes, e.g. for the dissemination of data that take place in this process. (see Section 2) One type of process discovery is the Local Process Process Model (LPM)."}, {"heading": "2 Related Work", "text": "In this section we will discuss two related areas of work. First, we will discuss existing work in process discovery and position the discovery of a Local Process Model (LPM) in the process discovery landscape. Second, we will discuss related work in the field of pattern mining."}, {"heading": "2.1 Process Discovery", "text": "Process discovery techniques can be divided into several dimensions: Some process discovery techniques detect formal process models in which the behavior allowed by the model is formally defined, while others detect informal process models with unclear semantics. Orthogonally, process discovery algorithms can be classified in end-to-end techniques (global) that generate models that fully describe logged processes from beginning to end, and pattern-based (local) techniques that generate models that only partially describe the behavior of the protocol. Table 1 provides a classification of some existing process discovery techniques and shows that LPM discovery is the only technique available that provides both formal and local models."}, {"heading": "2.2 Interest-driven Pattern Mining", "text": "LPMs are able to express a richer set of relationships (e.g. loops, XOR constructs, parallelism) than sequential pattern mining techniques, which are limited to sequential construction. Dismantling patterns driven by an analyst's interest is known in pattern mining as highly usable pattern mining. Several highly usable sequential pattern mining algorithms have been proposed [23,9,24]. Sequential pattern mining techniques use as input a sequence database, a concept closely related to event logs in process mining. Sequence databases consist of sequence databases consisting of task sequences (so-called items). Some methods of pattern mining additionally require the timestamp of each item to be logged. Sequence databases are not as rich as event logs in process mining, where many data attributes are used for both cases and for events."}, {"heading": "3 Basic Definitions", "text": "In this section, we present notations on event logs, petri nets, and local process models (LPMs) that will be used in later sections of this paper."}, {"heading": "3.1 Events, Traces, and Event Logs", "text": "For a given setA \u0445 denotes the set of all sequences overA and \u03c3 = > activity of a certain function. < a1, a2,.. an > is a sequence of length n in which \u03c3 (i) = ai. < > the empty sequence and \u03c31\u03c32 the concatenation of sequences \u03c31 and \u03c32. A is the projection of all possible event identifiers onto A, e.g. < a, b, b, c > {a, c} = < a, c >.Let E is the event universe, i.e. the set of all possible event identifiers. We assume that events are characterized by different properties, e.g. an event has a timestamp corresponding to an activity, is executed by a certain resource, etc. However, we do not impose specific properties that we assume that two of these properties are the activity and the timestamp of an event, i.e. there is a function: E \u2192 A that is assigned to each activity."}, {"heading": "3.2 Petri nets", "text": "A process model commonly used in the process mining area is the Petri net. < NP is a finite set of places, T is a finite set of transitions, T is a finite set of transitions, and T is a finite set of transitions, so P-T assigns a marking of transitions. (P-T) B is a set of directed arcs designated as flow relations. (P-M is a finite set of transitions representing activities, and \": T 9-M is a marking function that assigns a marking of transitions. (T-T) is a set of transitions, i.e. t-T with 6-dom (l), are referred to as transitions or invisible transitions."}, {"heading": "3.3 Local Process Models", "text": "LPMs [22] are process models that only partially describe the behavior in the event log and focus on frequently observed behavior. < LPMs typically describe the behavior of only up to 5 activities. < LPMs can be represented in any process tag. [22] The search space of process models is determined depending on the event log. We define LPMS (L) as a set of possible LPMs that can be created for a given event log. We refer the reader to [22] PM for a detailed description of the search space LPMS (L). To evaluate a given LPM on a given event log L, its segment L is first projected onto activity L."}, {"heading": "4 Local Process Model Constraints and Utility Functions", "text": "The discovery of Local Process Models (LPMs) can be tailored to the business needs of process analysts by using a combination of constraints and utility functions. Restrictions can be used, for example, to find fragments of process behavior that result in a loan application being rejected, or to find fragments that only describe loan applications above e15K and never those below. Utility functions can be used to detect LPMs that associate insight into the fragments of process behavior with high financial costs or long time delays. Restrictions are requirements that the LPM must meet, so we define constraints as functions that exist in a requirement and the 0 when they are not held. In a general sense, they are defined as functions c: X \u2192 {0} where X is the scope on which the function works. We distinguish four different scopes on which the X can be defined: trace level (T), event level (E), and model (A) level (E) activity."}, {"heading": "4.1 Trace-level Constraints and Utility Functions", "text": "Trace-level utility functions are the most general class of utility functions that are defined on the event log. Trace-level utility functions calculate the utility of an LPM, by aggregate the utility over the trace-fragments that fit the LPM behavior and allow the utility of fitting trace fragment to dependence in the events in the trace fragment, their event properties, and properties of the case itself. Trace-level utility function is a function f (L, L, L, LPM) that are the utility of the fitting trace fragments in \u0445L, LPM. Consider the LPM of Figure 3a, the example log consisting of one trace-level in Figure 3b, and the segmentation of \u03c3 on the LPM traints, which have a case."}, {"heading": "4.2 Event-level Constraints and Utility Functions", "text": "Event-level utility functions and constraints can be used when the business question of the process stakeholder concerns certain event properties (PMM), but not the trace context of these events. Such utility functions can be used, for example, to detect LPMs that describe fragments of process behavior at high financial costs. Restrictions at this level can be used, for example, to limit LPMs that merely describe events executed by certain resources, or in certain periods of time. An event-level utility function is a function f (events (L), events (L, LPM)) that formulates more complex utility functions and constraints, but at the same time makes it more difficult to formulate such functions compared to the more limited utility at the event level. An event-level utility function is a function f (events, LPM) that specifies the utility value of an event (PM, LPM) that is not the utility value of the appropriate utility of the corresponding events in cost, LPM, LPM, LPM, LPM, LPM, LPM, and LPM functions."}, {"heading": "4.3 Activity-level Constraints and Utility Functions", "text": "Activities-level functions and constraints define the benefits of an LPM based on the frequency of occurrence of each activity in Log L and Log L, LPM. Activities-level functions can be used, for example, by the process analyst to determine that he is more interested in some high-impact activities (e.g. litigation, security breaches, etc.) than others, resulting in LPMs that describe the frequent behavior before and after such events. In activity-level constraints, the process analyst can set a hard constraint on the occurrence of activities; the stakeholder / analyst can specify a function fa1 (Activities (L), Activities (HL, LPM)) that specifies how interested he is in each activity. Note that a service function of equal importance is assigned to all activities, e.g. fa (Activities (L), Activities (HL, LPM)) = | Activities (HL, LPM)), which represent a support-based LPM discovery, as described in [22]."}, {"heading": "4.4 Model-level Utility Constraints and Utility Functions", "text": "They are in the form fm (LPM) and cm (LPM), i.e. they are independent of the protocol and only of the LPM itself. For example, if a process analyst wants to analyze the behavior that leads to the execution of a particular activity he is interested in, he can use a constraint at the model level that forces all elements of L (LPM) to be associated with a.Generally, we are interested in models that somehow represent the event log. Therefore, utilization functions and constraints at the model level alone are often not very useful, but they become useful when combined with utilization functions and constraints at the event log, i.e. at the activity level, event level, or trace level."}, {"heading": "4.5 Composite Utility Functions", "text": "At the beginning of this section, we have defined the utility of an LPM for a given event log as follows: u (L, LPM) = 1 ci (L, LPM) \u00b7 \u2211 k = 1 fj (L, LPM) The individual constraints ci and the individual supply functions fi can be defined at any of the levels discussed in the previous sections to form a composite, possibly multi-level supply function. Overall benefit u is defined as an unweighted sum relative to the individual supply functions fi. Note that this still allows the process analyst to prioritize one supply function over another, since weights can be included as part of the supply function itself by multiplying the supply function with a constant. The framework of supply functions and constraints presented generalizes the method described in [22], and all LPM quality metrics presented there are instantiations of supply functions as terminal benefit functions, which represent a minimum activity function at the level of an event."}, {"heading": "5 Case Studies", "text": "In this section, we describe two case studies on real-life event logs: the first comes from an IT service desk of a large Dutch financial institution, the second from the Italian police's fines procedure."}, {"heading": "5.1 IT Service Desk", "text": "This is because both cases are related to this incident. & # 8222; It is an incident that relates to an operator who either solves the problem himself or provides a colleague with more knowledge. & # 8220; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10; & # 10;"}, {"heading": "5.2 Traffic Fines", "text": "This year, it has come to the point where it will be able to take the lead, \"he said.\" It's like it's a reactionary country, \"he said.\" But it's not like it's a country, it's a country, it's a country, \"he said.\" It's like it's a country, it's a country, it's a country. \""}, {"heading": "6 Conclusions & Future Work", "text": "This paper presents a framework of utility functions and constraints for Local Process Models (LPMs) that allows for combinations of utility functions and constraints at different levels: at the activity, event, tracking, and model levels. We formalize utility functions at each of the levels and provide examples of how they can be used. Finally, using event logs, we show that the utility functions and constraints can be used to find insightful LPMs that cannot be retrieved with existing support-based LPM discoveries. For example, if a model allows one activity to be executed while several executions of one are observed in the protocol, different alignments are possible depending on the choice of one for the synchronous move and the protocol. However, these events do not necessarily have the same benefit. Therefore, the benefit of the LPM depends on the alignment returned by the algorithm."}], "references": [{"title": "Process mining: data science in action", "author": ["W.M.P. van der Aalst"], "venue": "Springer-Verlag Berlin Heidelberg", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Conformance checking using cost-based fitness analysis", "author": ["A. Adriansyah", "B.F. van Dongen", "W.M.P. van der Aalst"], "venue": "Proceedings of the 15th IEEE Enterprise Distributed Object Computing Conference. pp. 55\u201364. IEEE", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Process mining based on regions of languages", "author": ["R. Bergenthum", "J. Desel", "R. Lorenz", "S. Mauser"], "venue": "International Conference on Business Process Management. pp. 375\u2013383. Springer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "The ProM framework: A new era in process mining tool support", "author": ["B.F. van Dongen", "A.K.A. de Medeiros", "H.M.W. Verbeek", "Weijters", "A.J.M.M.", "W.M.P. van der Aalst"], "venue": "International Conference on Application and Theory of Petri Nets. pp. 444\u2013454. Springer Berlin Heidelberg", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Fuzzy mining\u2013adaptive process simplification based on multi-perspective metrics", "author": ["C.W. G\u00fcnther", "W.M.P. van der Aalst"], "venue": "International Conference on Business Process Management. pp. 328\u2013343. Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Frequent pattern mining: current status and future directions", "author": ["J. Han", "H. Cheng", "D. Xin", "X. Yan"], "venue": "Data Mining and Knowledge Discovery 15(1), 55\u201386", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2007}, {"title": "Semantische Proze\u00dfmodellierung auf der Grundlage\u201d Ereignisgesteuerter Proze\u00dfketten", "author": ["G. Keller", "A.W. Scheer", "M. N\u00fcttgens"], "venue": "Inst. f\u00fcr Wirtschaftsinformatik", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1992}, {"title": "Applying the maximum utility measure in high utility sequential pattern mining", "author": ["G.C. Lan", "T.P. Hong", "V.S. Tseng", "S.L. Wang"], "venue": "Expert Systems with Applications 41(11), 5071\u20135081", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Discovery of frequent episodes in event logs", "author": ["M. Leemans", "W.M.P. van der Aalst"], "venue": "International Symposium on Data-Driven Process Discovery and Analysis. pp. 1\u201331. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Discovering block-structured process models from event logs containing infrequent behaviour", "author": ["S.J.J. Leemans", "D. Fahland", "W.M.P. van der Aalst"], "venue": "International Conference on Business Process Management. pp. 66\u201378. Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "Efficient process model discovery using maximal pattern mining", "author": ["V. Liesaputra", "S. Yongchareon", "S. Chaisiri"], "venue": "International Conference on Business Process Management. pp. 441\u2013456. Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "User-guided discovery of declarative process models", "author": ["F.M. Maggi", "A.J. Mooij", "W.M.P. van der Aalst"], "venue": "Proceedings of the IEEE Symposium on Computational Intelligence and Data Mining. pp. 192\u2013199. IEEE", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2011}, {"title": "Redesigning business processes: a methodology based on simulation and process mining techniques", "author": ["L. M\u0103ru\u015fter", "van Beest", "N.R.T.P."], "venue": "Knowledge and Information Systems 21(3), 267", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2009}, {"title": "Petri nets: Properties, analysis and applications", "author": ["T. Murata"], "venue": "Proceedings of the IEEE 77(4), 541\u2013580", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1989}, {"title": "Constraint-based sequential pattern mining: the patterngrowth methods", "author": ["J. Pei", "J. Han", "W. Wang"], "venue": "Journal of Intelligent Information Systems 28(2), 133\u2013160", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2007}, {"title": "Where did I misbehave? diagnostic information in compliance checking", "author": ["E. Ramezani", "D. Fahland", "W.M.P. van der Aalst"], "venue": "International conference on Business Process Management. pp. 262\u2013278. Springer", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Objective-oriented utility-based association mining", "author": ["Y.D. Shen", "Z. Zhang", "Q. Yang"], "venue": "Proceedings of the IEEE International Conference on Data Mining. pp. 426\u2013433. IEEE", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2003}, {"title": "Mining sequential patterns: Generalizations and performance improvements", "author": ["R. Srikant", "R. Agrawal"], "venue": "International Conference on Extending Database Technology. pp. 1\u201317. Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1996}, {"title": "Heuristic approaches for generating local process models through log projections", "author": ["N. Tax", "N. Sidorova", "W.M.P. van der Aalst", "R. Haakma"], "venue": "2016 IEEE Symposium on Computational Intelligence and Data Mining. pp. 1\u20138. IEEE", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2016}, {"title": "Mining local process models", "author": ["N. Tax", "N. Sidorova", "R. Haakma", "W.M.P. van der Aalst"], "venue": "Journal of Innovation in Digital Ecosystems 3(2), 183\u2013196", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2016}, {"title": "USpan: an efficient algorithm for mining high utility sequential patterns", "author": ["J. Yin", "Z. Zheng", "L. Cao"], "venue": "Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining. pp. 660\u2013668. ACM", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2012}, {"title": "Efficiently mining top-k high utility sequential patterns", "author": ["J. Yin", "Z. Zheng", "L. Cao", "Y. Song", "W. Wei"], "venue": "Proceedings of the IEEE 13th International Conference on Data Mining. pp. 1259\u20131264. IEEE", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Process Mining [1] has emerged as a new discipline aiming at the improvement of business processes through the analysis of event data recorded by information systems.", "startOffset": 15, "endOffset": 18}, {"referenceID": 12, "context": "bottleneck analysis [14], and checking compliance with rules and regulations [18].", "startOffset": 20, "endOffset": 24}, {"referenceID": 15, "context": "bottleneck analysis [14], and checking compliance with rules and regulations [18].", "startOffset": 77, "endOffset": 81}, {"referenceID": 2, "context": ", [3,13,11,12,5] (see Section 2).", "startOffset": 2, "endOffset": 16}, {"referenceID": 11, "context": ", [3,13,11,12,5] (see Section 2).", "startOffset": 2, "endOffset": 16}, {"referenceID": 9, "context": ", [3,13,11,12,5] (see Section 2).", "startOffset": 2, "endOffset": 16}, {"referenceID": 10, "context": ", [3,13,11,12,5] (see Section 2).", "startOffset": 2, "endOffset": 16}, {"referenceID": 4, "context": ", [3,13,11,12,5] (see Section 2).", "startOffset": 2, "endOffset": 16}, {"referenceID": 19, "context": "One type of process discovery is Local Process Model (LPM) discovery [22,21], which is concerned with the discovery of a ranking of process models, where each individual LPM describes only a subset of the process activities.", "startOffset": 69, "endOffset": 76}, {"referenceID": 18, "context": "One type of process discovery is Local Process Model (LPM) discovery [22,21], which is concerned with the discovery of a ranking of process models, where each individual LPM describes only a subset of the process activities.", "startOffset": 69, "endOffset": 76}, {"referenceID": 13, "context": "Petri net [15], BPMN [16], or UML activity diagram [7]).", "startOffset": 10, "endOffset": 14}, {"referenceID": 5, "context": "LPMs aim to describe frequent local pieces of behavior, therefore, LPMs can be seen as a special form of frequent pattern mining [6] where each pattern is a process model.", "startOffset": 129, "endOffset": 132}, {"referenceID": 17, "context": "However, LPMs are not limited to subsequences [20] or episodes [10].", "startOffset": 46, "endOffset": 50}, {"referenceID": 8, "context": "However, LPMs are not limited to subsequences [20] or episodes [10].", "startOffset": 63, "endOffset": 67}, {"referenceID": 16, "context": "[19] were the first to introduce utility-based itemset mining.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "Since then, utility-based pattern mining has spread to different types of pattern mining, including sequential pattern mining [23].", "startOffset": 126, "endOffset": 130}, {"referenceID": 19, "context": "Existing support-based LPM discovery [22] would not be able to discover Figure 1b because of its low frequency, motivating the need for utility-based LPM discovery.", "startOffset": 37, "endOffset": 41}, {"referenceID": 3, "context": "The techniques described in this paper have been implemented in the ProM process mining framework [4] as part of the LocalProcessModelDiscovery package.", "startOffset": 98, "endOffset": 101}, {"referenceID": 11, "context": "Declare Miner[13] Formal Global Language-based regions [3] Formal Global", "startOffset": 13, "endOffset": 17}, {"referenceID": 2, "context": "Declare Miner[13] Formal Global Language-based regions [3] Formal Global", "startOffset": 55, "endOffset": 58}, {"referenceID": 9, "context": "Inductive Miner [11] Formal Global LPM Discovery [22] Formal Local Fuzzy Miner [5] Informal Global Episode Miner [10] Informal Local", "startOffset": 16, "endOffset": 20}, {"referenceID": 19, "context": "Inductive Miner [11] Formal Global LPM Discovery [22] Formal Local Fuzzy Miner [5] Informal Global Episode Miner [10] Informal Local", "startOffset": 49, "endOffset": 53}, {"referenceID": 4, "context": "Inductive Miner [11] Formal Global LPM Discovery [22] Formal Local Fuzzy Miner [5] Informal Global Episode Miner [10] Informal Local", "startOffset": 79, "endOffset": 82}, {"referenceID": 8, "context": "Inductive Miner [11] Formal Global LPM Discovery [22] Formal Local Fuzzy Miner [5] Informal Global Episode Miner [10] Informal Local", "startOffset": 113, "endOffset": 117}, {"referenceID": 20, "context": "Several high-utility sequential pattern mining algorithms have been proposed [23,9,24].", "startOffset": 77, "endOffset": 86}, {"referenceID": 7, "context": "Several high-utility sequential pattern mining algorithms have been proposed [23,9,24].", "startOffset": 77, "endOffset": 86}, {"referenceID": 21, "context": "Several high-utility sequential pattern mining algorithms have been proposed [23,9,24].", "startOffset": 77, "endOffset": 86}, {"referenceID": 14, "context": "[17] provides a categorization of pattern constraints, consisting of four types of constraints on the ordering of items in the pattern and two types of constraints on the timestamps of the items in the log that are instances of a pattern.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "The class diagram in Figure 2 is obtained from [1] and it conceptualizes basic logging concepts in process mining.", "startOffset": 47, "endOffset": 50}, {"referenceID": 13, "context": "We refer the interested reader to [15] for a more thorough introduction of Petri nets.", "startOffset": 34, "endOffset": 38}, {"referenceID": 19, "context": "LPMs [22] are process models that describe the behavior seen in the event log only partially, focusing on frequently observed behavior.", "startOffset": 5, "endOffset": 9}, {"referenceID": 6, "context": "LPMs can be represented in any process modeling notation, such as BPMN [16], UML [7], or EPC [8].", "startOffset": 93, "endOffset": 96}, {"referenceID": 19, "context": "A technique to generate a ranked collection of LPMs through iterative expansion of candidate process models is proposed in [22].", "startOffset": 123, "endOffset": 127}, {"referenceID": 19, "context": "We refer the reader to [22] for a detailed description of search space LPMS (L).", "startOffset": 23, "endOffset": 27}, {"referenceID": 1, "context": "An alignment-based [2] implementation of such a segmentation function \u0393 is proposed in [22].", "startOffset": 19, "endOffset": 22}, {"referenceID": 19, "context": "An alignment-based [2] implementation of such a segmentation function \u0393 is proposed in [22].", "startOffset": 87, "endOffset": 91}, {"referenceID": 19, "context": "Where the original LPM discovery method [22] selects and ranks LPMs based on support, utility allows for goal-oriented selection and ranking, i.", "startOffset": 40, "endOffset": 44}, {"referenceID": 19, "context": ", f(activities(L), activities(\u0393L,LPM )) = |activities(\u0393L,LPM )|, results in support-based LPM discovery as described in [22].", "startOffset": 120, "endOffset": 124}, {"referenceID": 19, "context": "The presented framework of utility functions and constraints generalizes the method described in [22] and all LPM quality metrics presented there are instantiations of utility functions.", "startOffset": 97, "endOffset": 101}, {"referenceID": 19, "context": "The minimum threshold for support as proposed in [22] is an example of an activity-level constraint.", "startOffset": 49, "endOffset": 53}, {"referenceID": 19, "context": "Another quality metric introduced in [22] is determinism, which is inversely proportional to the average number of enabled transitions in LPM during replay of the aligned event log.", "startOffset": 37, "endOffset": 41}], "year": 2017, "abstractText": "Local Process Models (LPM) describe structured fragments of process behavior occurring in the context of less structured business processes. Traditional LPM discovery aims to generate a collection of process models that describe highly frequent behavior, but these models do not always provide useful answers for questions posed by process analysts aiming at business process improvement. We propose a framework for goal-driven LPM discovery, based on utility functions and constraints. We describe four scopes on which these utility functions and constrains can be defined, and show that utility functions and constraints on different scopes can be combined to form composite utility functions/constraints. Finally, we demonstrate the applicability of our approach by presenting several actionable business insights discovered with LPM discovery on two real life data sets.", "creator": "LaTeX with hyperref package"}}}