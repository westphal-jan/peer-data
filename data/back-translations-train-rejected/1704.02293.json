{"id": "1704.02293", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Apr-2017", "title": "Comparison of Global Algorithms in Word Sense Disambiguation", "abstract": "This article compares four probabilistic algorithms (global algorithms) for Word Sense Disambiguation (WSD) in terms of the number of scorer calls (local algo- rithm) and the F1 score as determined by a gold-standard scorer. Two algorithms come from the state of the art, a Simulated Annealing Algorithm (SAA) and a Genetic Algorithm (GA) as well as two algorithms that we first adapt from WSD that are state of the art probabilistic search algorithms, namely a Cuckoo search algorithm (CSA) and a Bat Search algorithm (BS). As WSD requires to evaluate exponentially many word sense combinations (with branching factors of up to 6 or more), probabilistic algorithms allow to find approximate solution in a tractable time by sampling the search space. We find that CSA, GA and SA all eventually converge to similar results (0.98 F1 score), but CSA gets there faster (in fewer scorer calls) and reaches up to 0.95 F1 before SA in fewer scorer calls. In BA a strict convergence criterion prevents it from reaching above 0.89 F1.", "histories": [["v1", "Fri, 7 Apr 2017 17:04:51 GMT  (1725kb,D)", "http://arxiv.org/abs/1704.02293v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["lo\\\"ic vial", "andon tchechmedjiev", "didier schwab"], "accepted": false, "id": "1704.02293"}, "pdf": {"name": "1704.02293.pdf", "metadata": {"source": "CRF", "title": "Comparison of Global Algorithms in Word Sense Disambiguation", "authors": ["Lo\u0131\u0308c Vial", "Andon Tchechmedjiev", "Didier Schwab"], "emails": ["Didier.Schwab}@imag.fr"], "sections": [{"heading": null, "text": "This article compares four probability algorithms (global algorithms) for Word Sense Disambiguation (WSD) in terms of the number of goal calls (local algorithm) and the F1 score, which is determined by a gold standard goalscorer. Two algorithms are state-of-the-art, namely a Simulated Annealing Algorithm (SAA) and a Genetic Algorithm (GA), as well as two algorithms that we first adapt from the WSD, which correspond to the state-of-the-art probability search algorithms, namely a Cuckoo Search Algorithm (CSA) and a Bat Search Algorithm (BS). Since WSD has to evaluate exponentially many word sense combinations (with branchable factors of up to 6 or more), probability algorithms enable the approximate solution to be found in a traceable time by sampling the search space."}, {"heading": "1. Introduction", "text": "This year, the time has come for an agreement to be reached, and it will only take a few days."}, {"heading": "2. Similarity-based Word Sense Disambiguation", "text": "A local algorithm gives a measure of similarity between two pairs of (word / sense). For example, we expect a smaller value than if we calculate the similarity between the pair (algorithm / piece of code) and (bugs / insect). We expect the similarity between the pair (algorithm / piece of code) and (errors / errors in a system) to be measured. Then, a global algorithm measures this local similarity to achieve the actual disamination of a complete document."}, {"heading": "3. Existing Probabilistic Global Algorithms for WSD", "text": "Many experiments comparing heuristic global algorithms for disambiguation have been carried out. In particular, we can take note of the work of Schwab et al. [9, 10], in which an SAA and a GA (Neighbourhood / Local Search Approaches) were implemented for the WSD problem, with the aim of comparing them with an ant colony algorithm (a constructive approach). We will reuse the existing implementations of SAA and GA to compare them with the two new algorithms that we have adapted for WSD. SAA and GA are briefly described below. All data and programs are available on the accompanying page of this article."}, {"heading": "3.1. The Simulated Annealing Algorithm", "text": "Simulated annealing for Word Sense Disambiguation was introduced by Cowie et al. [1]. This approach is inspired by the metallurgical annealing process, in which the robustness of the metal is increased by controlling the speed of cooling. [3] In the context of WSD, the \"metal\" is simply the configuration of all (word / sense) pairs in the text. The algorithm works in cycles. Each cycle consists of iterations. Each iteration involves a single random change in the configuration: the sense assigned to a random word in the text is randomly changed to another sense (uniform distribution) and the score of the modified configuration is calculated. If the new configuration has a higher value than the configuration prior to the modification, it replaces the previous configuration. Otherwise, we calculate a probability to still accept the new configuration despite having a lower score."}, {"heading": "3.2. The Genetic Algorithm", "text": "Genetic algorithms are evolutionary algorithms based on the principle of natural selection of species, in particular \"survival of the fittest.\" The idea of GA is to search space configurations as individuals in a population.GA starts with an initial population in which a certain number of the fittest individuals (as assessed by the fitness function) is crossed with each other (crossover operation), i.e. parts of the configurations are swapped between two individuals. Subsequently, a certain number of random changes (mutation operators) is applied to the population (as in SAA, but repeated). Finally, a subset of the fittest persons is selected and retained (elitism).Variants of GA copy the best individual in relation to their fitness in the new population. A convergence criterion is used to determine when the population is converged and when there are no more advantageous evolutions that take place. GA was first configured by Gelkh al Point function of SD [Where is the configuration] and the population is the configuration."}, {"heading": "4. Two New Global Algorithms for WSD", "text": "Of the non-quantum probabilistic search algorithms, Bat Search and Cuckoo Search offer the best overall performance (speed relative to approximate quality), both invented by Xin-She Yang. Since these algorithms have never been adapted to WSD, and given that they are better than other similar algorithms in many applications, we have decided to propose an adaptation to solve the WSD problem. We will describe them, their benefits and our implementation as global algorithms for WSD below."}, {"heading": "4.1. The Bat Algorithm", "text": "The bat algorithm was originally introduced by Yang [13] and is inspired by the way bats move through echolocation to locate and capture prayers. These bats emit a very loud ultrasonic pulse (inaudible to humans) and listen for the echo that bounces back at the boundaries of the environment and the objects in it to determine their position and the position of their prey. A sonic pulse is characterized by its frequency, emission rate and volume. Depending on the situation and context, there are different sonic pulses. When the bat goes hunting, the volume is highest and the emission rate is very low (rough sketch of the environment). Once a prey is located, the battery lowers the volume and increases the emission rate to precisely track the prey. The peculiarity of this algorithm is its ability to quickly move into a promising region of the search area and simultaneously explore alternative areas."}, {"heading": "4.1.1. Description of the Algorithm", "text": "The behavior is highly configurable by many parameters. The minimum and maximum frequency fmin, fmax of the sound pulse of the bats define the scale of motion speed of the bats. Large values are better suited for large spaces. The minimum and maximum \u03bbmin, the maximum loudness of the sound pulses have an impact on the width of the local search. \u03b1 and \u03b3 are threshold parameters that are to be influenced if the bat decides to merge into a local solution if it is close enough to its \"prey\" (if its score is better than the current best score). Let the bat be the best score B the bat of the best fit rate. Let the number of all bats B and a bat B be. Let the frequency r (min, max) be the current bat in the iteration and let the bat be the best score B the bat of the best fit rate. Let the bat score be the fitness function \u2192 the bat of a bat evaluated by a R B."}, {"heading": "4.2. The Cuckoo Search Algorithm", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.2.1. General idea", "text": "The cuckoo search algorithm is another creation of Yang. [14] The idea stems from the aggressive reproductive strategy of some cuckoo birds: they lay their eggs in the nests of other host birds (other species). If the host bird later discovers that a foreign egg has laid its nest, it will either discard it or simply leave its nest to build another one elsewhere."}, {"heading": "4.2.2. Description of the Algorithm", "text": "The cuckoo search is described in the pseudo code of algorithm 2.Algorithm 1: Bat algorithm Pseudocode Create a population of bats; For each bat is assigned a random position, a zero velocity, a random pulse rate, a random pulse loudness, and a random pulse rate; while the stop condition is not met, the bats are ranked and find the best according to the objective function; for each bat update the pulse rate, the position, and the speed of the bat: f = r (fmin, fmax) \u03bd = \u03bd + (p (bbest) \u2212 p (bcurrent) \u00b7 fp (bcurrent) = p (bcurrent) + \u03bdif r (\u2212 1, 1) > then randomly fly around the best batp (bcurrent) + r (\u2212 1, 1) \u00b7 p (bcurrent) > (bcurrent) > (best) > bp (best) b\u00b7 b\u00b7 b\u00b7 best (best) and fastest b\u00b7 p (best) (b\u00b7 p)."}, {"heading": "4.2.3. The Importance of Le\u0301vy Flights", "text": "A basic aspect of the cuckoo search is the use of the Le-vy flights to determine the movements of the cuckoos (sample of the search area).A Le-vy flight is a random walk after a Le-vy distribution.The Le-vy distribution is an interesting probability distribution.The Le-vy distribution returns most of the values of the Age Algorithm 2: Cuckoo search algorithm Pseudo-code Generates a population of n cuckoos; while the convergence criterion is not fulfilled, drag a cuckoo i under n randomly (uniformly); move the cuckoo pseudo-randomly after a Le flight; select another cuckoo under n randomly (uniformly); replace j with i-Score (i) > Score (j); sort the cuckoo according to its score; replace the worst scores after a Le flight; replace the cuckoo with the best (uniformly); replace the cuckoo with the best (uniformly) score."}, {"heading": "4.3. Adaptation to WSD", "text": "In order to implement these algorithms as global algorithms for WSD, we need to make a number of assumptions and changes to the original algorithms. The original algorithms specify the movement of bats or cuckoos using a vector with real coordinates (characterized by a direction and a norm).Since WSD is a discrete problem, there is no definition of what a movement means, as a vector with real coordinates must be adapted. Moreover, all the senses are semantically clear and independent and there is no significant relative distance between them, making the transition from sense # 1 to sense # 2 no less significant than the transition from sense # 1 to sense # 4. In the lexical database WordNet 3.1, for example, the sense # 1 of the term \"mouse\" corresponds to the animal, whereas the sense # 2, # 3 and # 4 is the \"Appendix # 4,\" \"a person who is in the middle\" and \"a computer device,\" which is a problem that is closer to the city # 3 than the space."}, {"heading": "5. Comparing Global Algorithms", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "5.1. Method", "text": "We compared the four algorithms to the rating corpus of the coarse-grained English All-Word WSD task of the SemEval 2007 campaign [8]. The corpus consists of 5 sense-based annotated texts from different areas and sources: \u2022 The first, second and third texts are from the Wall Street Journal and are 368, 379 and 500 words long respectively. \u2022 The fourth text is the entirety of the Wikipedia entry for computer programming and is 677 words long. \u2022 The fifth text is an excerpt from Amy Steedman's novel \"Knights of the Art\" and is 345 words long. The campaign includes a reference comment to calculate how good a particular configuration is in relation to the F1 score. \u2022 The two criteria we use for our rating are the F1 score of the results in terms of the number of calls to the scoring function, as we want to get the best solutions in the shortest time."}, {"heading": "5.1.1. The Choice of the Configuration Scorer", "text": "As we explained in the introduction, a global algorithm is a method for effectively exploring the space of possible configurations without testing every single possibility of a pair (word / sense) in a document. 2http: / / getalp.imag.fr / static / wsd / Vial-et-al-global-howto / To do this, a global algorithm needs a configuration corridor that helps to evaluate the quality of a configuration by giving a score value for a configuration to see whether one configuration is objectively better or worse than another. A classic objective function is to use a semantic measure of similarity and sum up all the paired similarities between selected senses in a configuration. In previous implementations of SAA and GA for WSD, for example, the read similarity measurement consists of calculating the overlap between the definitions of the senses [4]."}, {"heading": "5.1.2. Parameters Tuning", "text": "Both BA and CSA have numerous parameters that need to be adjusted for each specific problem and have a significant impact on the result. In our implementation of the algorithms we have the following parameters: \u2022 The BA has 7 parameters: the number of bats, the minimum frequency of their sound pulses, the maximum frequency of their sound pulses, the minimum loudness of their sound pulses, the maximum loudness of their sound pulses, the smoothing coefficients \u03b1 and \u03b3. \u2022 The CSA has 4 parameters: the number of cuckoos, the number of cuckoos destroyed per iteration, the position parameters of the Le vy distribution and the scale parameters of the Le vy distribution. \u2022 The GA has 3 parameters: the size of the basic population, the rate of crossing and the mutation rate. \u2022 The SAA has 2 parameters: the cooling rate, the number of iterations, the initial probability of acceptance (the initial probability of the initial probability we have to automatically estimate the initial temperature of 4000)."}, {"heading": "5.1.3. Evaluation", "text": "Once we have found the optimal parameters for each algorithm, we evaluate its efficiency by comparing the best configuration value (F1 score) that you can get depending on the number of calls to the scorer (200, 800, 2000 and 4000). For each algorithm and each goal threshold, we run the algorithm 100 times and record the average F1 score across the entire body and the 100 runs compared to the average number of evaluations of the goal scoring function."}, {"heading": "5.2. Results and Discussion", "text": "The results of the optimal parameter estimation are presented in Table 1 for the bat algorithm, in Table 2 for the cuckoo search, in Table 3 for the genetic algorithm and in Table 4 with several thresholds for the number of calls to the scorer as a convergence criterion. # Calls to the scorer # Cuckoos # Cuckoos destroyed Le \u0301 vy scale."}, {"heading": "200 100 0.02 0.01", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "800 100 0.01 0.01", "text": "Figure 1 presents the average total results for all algorithms for 200 (Figure 1a), 800 (Figure 1b), 2000 (Figure 1c) and 4000 (Figure 1d) gate calls. Given that with 4000 calls the appearance of the diagrams indicates that convergence has not occurred. So we do two additional executions with a limit of 8000 (Figure 1e) and 16000 (Figure 1f) gate calls, with the same parameters as the run with the limit at 4000 gate calls. We see that the progression of the average number of tornadoes remains the same compared, so we do a comprehensive analysis across all experiments. Lower limits on the number of tornadoes are seen as different \"zoom levels\" at the beginning of the execution."}, {"heading": "6. Conclusion", "text": "In this thesis, we adapt two state-of-the-art probabilistic search algorithms as global algorithms that solve the problem of Word Sense Disambiguation: a bat algorithm and a cuckoo search algorithm. Furthermore, we adapt the cuckoo search to perform parameter estimates for probabilistic global WSD algorithms. We compare the two algorithms with two existing implementations of classic probabilistic optimization algorithms, a simulated annealing algorithm and a genetic algorithm. We perform a comparative evaluation using the parameters calculated from the gold standard of the Semeval 2007 Task 7 WSD task against the number of calls to the scoring function. We used an oracle objective function to evaluate only the impact of the global algorithm on the results, instead of letting the heuristic scoring function also have an impact. We note that CSA, SA and GA easily overtake all scoring parameters for around 16,000 calls to CSA and that CSA converge easily after 4000 calls."}, {"heading": "Appendix A.1. Number of call to the scorer : 200", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Appendix A. Detailed results of the parameter estimation", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Appendix A.2. Number of call to the scorer : 800", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Appendix A.3. Number of call to the scorer : 2000", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Appendix B. Implementation details", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "Appendix B.1. The Bat Algorithm", "text": "It is not the first time that the US government has taken such a step. (...) It is not the first time that the US has taken such a step. (...) It is not the first time that the US has taken such a step. (...) It is not the first time that the US has taken such a step. (...) It is not the first time that the US has taken such a step. (...) It is not the first time that the US has taken such a step. (...) It is not the second time that the US has taken such a step. (...) It is the first time that the US has taken such a step. (...)"}, {"heading": "Appendix B.2. The Cuckoo Search Algorithm", "text": "C o n f i g u r a t i o n run (Document document) {f o r (i n t i = 0; i < nes tsNumber; i +) {n e e s s s [i] = new Nest (); n e (! s t o p C o n d i t i o n. s ()) {i n t i = RandomFly (); i n t = RandomFly (); i n t = RandomFly. n e (n s) n n n n n n n n n n s (s) n n n n n n n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (s) n (t) n (s) n (t) n (s) n (t) n (t) n (t) n (t) n (s) n (t) n (s) n (t) n (t) n (s) n (t) n (s) n (t) n (t) n (s) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (s n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t (t) n (t) n (t) n (t) n (t) n (t (t) n (t) n (t) n (s n (t) n (t) n (t) n (t) n (t) n (t) n (s (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n (t) n"}], "references": [{"title": "Lexical disambiguation using simulated annealing", "author": ["J. Cowie", "J. Guthrie", "L. Guthrie"], "venue": "aou\u0302t", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1992}, {"title": "Evolutionary approach to natural language wsd through global coherence optimization", "author": ["A. Gelbukh", "G. Sidorov", "S.Y. Han"], "venue": "WSEAS Transactions on Communications", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "Simulated annealing: theory and applications", "author": ["P. Laarhoven", "E. Aarts"], "venue": "Mathematics and its applications. D. Reidel. URL http://books.google.com/books?id=-IgUab6Dp_IC", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1987}, {"title": "Automatic sense disambiguation using machine readable dictionaries: how to tell a pine cone from an ice cream", "author": ["M. Lesk"], "venue": "cone. SIGDOC,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1986}, {"title": "On a Test of Whether one of Two Random Variables is Stochastically Larger than the Other", "author": ["H.B. Mann", "D.R. Whitney"], "venue": "The Annals of Mathematical Statistics", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1947}, {"title": "Equation of state calculations by fast computing machines", "author": ["N. Metropolis", "A.W. Rosenbluth", "M.N. Rosenbluth", "A.H. Teller", "E. Teller"], "venue": "The Journal of Chemical Physics", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1953}, {"title": "A semantic concordance", "author": ["G.A. Miller", "C. Leacock", "R. Tengi", "R.T. Bunker"], "venue": "Proceedings of the Workshop on Human Language Technology. HLT \u201993. Association for Computational Linguistics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1993}, {"title": "D\u00e9sambigu\u0131\u0308sation lexicale de textes : efficacit\u00e9 qualitative et temporelle d\u2019un algorithme \u00e0 colonies de fourmis", "author": ["D. Schwab", "J. Goulian", "A. Tchechmedjiev"], "venue": "TAL", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Worst-case complexity and empirical evaluation of artificial intelligence methods for unsupervised word sense disambiguation", "author": ["D. Schwab", "J. Goulian", "A. Tchechmedjiev"], "venue": "Int. J. Web Engineering and Technology", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2013}, {"title": "Parameter estimation under uncertainty with simulated annealing applied to an ant colony based probabilistic wsd algorithm", "author": ["A. Tchechmedjiev", "D. Schwab", "J. Goulian", "G. S\u00e9rasset"], "venue": "Proceedings of the 1st International Workshop on Optimization Techniques for Human Language Technology", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "Using sense-annotated corpora for lexical expansion to improve knowledge-based relatedness measures. In: LREC 2016 (10th Edition of its Language Resources and Evaluation Conference)", "author": ["L. Vial", "A. Tchechmedjiev", "D. Schwab"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2016}, {"title": "A new metaheuristic bat-inspired algorithm", "author": ["Yang", "X.-S"], "venue": "Nature Inspired Cooperative Strategies for Optimization,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}], "referenceMentions": [{"referenceID": 6, "context": "Moreover, a supervised classifier requires at least 1000 examples/word to achieve a stable performance, while there are at most 200/word in the largest sense-annotated corpora [7].", "startOffset": 176, "endOffset": 179}, {"referenceID": 10, "context": "While there are few prospects for improvement with supervised system, similarity-based systems offer many avenues for improvement even for English (the best resourced language) [12].", "startOffset": 177, "endOffset": 181}, {"referenceID": 8, "context": "[10].", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[9, 10], where a SAA and a GA (neighbourhood/local search approaches) were implemented for the WSD problem, with the objective of comparing them to an Ant Colony Algorithm (a constructive approach).", "startOffset": 0, "endOffset": 7}, {"referenceID": 8, "context": "[9, 10], where a SAA and a GA (neighbourhood/local search approaches) were implemented for the WSD problem, with the objective of comparing them to an Ant Colony Algorithm (a constructive approach).", "startOffset": 0, "endOffset": 7}, {"referenceID": 0, "context": "[1].", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "This approach is inspired by the annealing process in metallurgy, where the sturdiness of the metal is increased by controlling the rate of cooling applied to it [3].", "startOffset": 162, "endOffset": 165}, {"referenceID": 5, "context": "Simulated annealing is a particular instance of the Metropolis-Hastings algorithm [6].", "startOffset": 82, "endOffset": 85}, {"referenceID": 1, "context": "[2] where the population is a set of configurations, and the fitness function is the configuration scorer.", "startOffset": 0, "endOffset": 3}, {"referenceID": 11, "context": "The Bat Algorithm The Bat Algorithm was originally introduced by Yang [13] and is inspired by they way bats move through echolocation in order to locate and capture pray.", "startOffset": 70, "endOffset": 74}, {"referenceID": 3, "context": "For example, in previous implementation of SAA and GA for WSD, the Lesk similarity measure that calculates the overlap between the definitions of senses [4] was used.", "startOffset": 153, "endOffset": 156}, {"referenceID": 4, "context": "100\u20131000) in order to obtain a representative sample of the distribution of possible answers, and use the MannWhitney-U statistical test [5] in addition to the score similarly to the modified Simulated Annealing algorithm used for parameter estimation by Tchechmedjiev et al.", "startOffset": 137, "endOffset": 140}, {"referenceID": 9, "context": "[11].", "startOffset": 0, "endOffset": 4}], "year": 2017, "abstractText": "This article compares four probabilistic algorithms (global algorithms) for Word Sense Disambiguation (WSD) in terms of the number of scorer calls (local algorithm) and the F1 score as determined by a gold-standard scorer. Two algorithms come from the state of the art, a Simulated Annealing Algorithm (SAA) and a Genetic Algorithm (GA) as well as two algorithms that we first adapt from WSD that are state of the art probabilistic search algorithms, namely a Cuckoo search algorithm (CSA) and a Bat Search algorithm (BS). As WSD requires to evaluate exponentially many word sense combinations (with branching factors of up to 6 or more), probabilistic algorithms allow to find approximate solution in a tractable time by sampling the search space. We find that CSA, GA and SA all eventually converge to similar results (0.98 F1 score), but CSA gets there faster (in fewer scorer calls) and reaches up to 0.95 F1 before SA in fewer scorer calls. In BA a strict convergence criterion prevents it from reaching above 0.89 F1.", "creator": "LaTeX with hyperref package"}}}