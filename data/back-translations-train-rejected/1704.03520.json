{"id": "1704.03520", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Apr-2017", "title": "Unsupervised Event Abstraction using Pattern Abstraction and Local Process Models", "abstract": "Process mining analyzes business processes based on events stored in event logs. However, some recorded events may correspond to activities on a very low level of abstraction. When events are recorded on a too low level of granularity, process discovery methods tend to generate overgeneralizing process models. Grouping low-level events to higher level activities, i.e., event abstraction, can be used to discover better process models. Existing event abstraction methods are mainly based on common sub-sequences and clustering techniques. In this paper, we propose to first discover local process models and then use those models to lift the event log to a higher level of abstraction. Our conjecture is that process models discovered on the obtained high-level event log return process models of higher quality: their fitness and precision scores are more balanced. We show this with preliminary results on several real-life event logs.", "histories": [["v1", "Tue, 11 Apr 2017 20:08:14 GMT  (481kb,D)", "http://arxiv.org/abs/1704.03520v1", null], ["v2", "Tue, 16 May 2017 16:48:18 GMT  (613kb,D)", "http://arxiv.org/abs/1704.03520v2", "Accepted at Enabling Business Transformation by Business Process Modeling, Development, and Support Working Conference 2017 (BPMDS)"]], "reviews": [], "SUBJECTS": "cs.DB cs.AI cs.CL", "authors": ["felix mannhardt", "niek tax"], "accepted": false, "id": "1704.03520"}, "pdf": {"name": "1704.03520.pdf", "metadata": {"source": "CRF", "title": "Unsupervised Event Abstraction using Pattern Abstraction and Local Process Models", "authors": ["Felix Mannhardt"], "emails": ["f.mannhardt@tue.nl", "n.tax@tue.nl"], "sections": [{"heading": null, "text": "Tags: Process Discovery, Unsupervised Learning, Event Abstraction"}, {"heading": "1 Introduction", "text": "In fact, most people who are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move."}, {"heading": "2 Preliminaries", "text": "In this section, we present concepts used in later sections of this paper. < > denotes the set of all sequences over a set X and \u03c3 = < a1, a2,... a > a sequence of length n, with \u03c3 (i) = ai. < > is the empty sequence. In the context of process logs, we assume the set of all process activities specified. An event e in an event log is the occurrence of an activity e. We call a sequence of events. < > is the sequence of events. < > an event log L is a finite set of tracks. The event log L = [< a, c > 2, c > 3] consists of 2 events. < an event log L is a tranchain of tracks. < a, b, c > and three transcripts."}, {"heading": "2.1 Local Process Models", "text": "LPMs [14] are process models that describe the behavior seen in the event log > > PM = > Activities that focus on commonly observed behavior. Typically, LPMs describe the behavior of only up to 5 activities. LPMs can be represented in any process modeling notation, such as BPMN, UML, or EPC. We define LPMS (L) as a set of possible LPMs that can be created for a particular event log. We refer the reader to [14] for a detailed description of the LPMS (L) search space. To evaluate a specific LPM on a given event log L, its traces LPMS (L) are first compared to the set of possible LPMs that can be constructed for a specific event log L."}, {"heading": "2.2 Pattern-based Abstraction", "text": "An overview of the pattern-based abstraction method proposed in [9] is presented in Figure 2. Input is an event log and a series of activity patterns. Each activity pattern is a process model that represents the behavior expected for performing a high-level activity. In addition, mapping activities to high-level lifecycle transitions of activity is required, i.e.: T 6 \u2192 LT with e.g. LT = {start, complete}. By mapping the event log, information can be obtained about when activities started and when they were completed that can be used by some process detection algorithms such as [8]. Activity patterns are assembled into an abstraction model and then an alignment technique is used to obtain a high-level event log. By using the alignment technology, we can capture approximate executions of activity patterns such as [8]. We then use the alignment information to create those high-level events that we have aligned with the PM, only to create a high-level event alignment function."}, {"heading": "3 Unsupervised Abstraction Technique", "text": "Fig. 3 provides an overview of our unattended abstraction method. We use discovered LPMs to replace the domain knowledge originally used in the pattern-based event abstraction method. First, we discover a fixed number of LPMs based on the ranking suggested in [14]. Then, we use these LPMs as activity patterns and obtain a high-level event log using the abstraction method described in [9]. Based on the high-level event log, we discover a high-level process model that uses existing methods such as the inductive miner (IM) [7]. For example, take LPM N1 shown in Fig. 1, and assume that LPM N1 represents the behavior of some high-level activity H. Three executions (i.e., GPM segments) of LPM N1 are in the track of the plane in which we performed the high-level activity three times H."}, {"heading": "4 Preliminary Results and Discussion", "text": "In order to be able to deal with the computational complexity of LPM mining for logs with many activities, LPMs are discovered using activity clusters based on Markov clustering, as proposed in [12]. As proposed in [10], we extend high-level activities in the discovered process model with the corresponding LPMs to provide a fair comparison based on the low-level event log. [7] The resulting advanced process model can be applied to low-level events using existing techniques that determine the quality of the models in terms of fitness and precision [2]. Figure 4 shows the f-score of process models that were rarely detected with the IM [7] process detection algorithm with 20% noise filtering. Horizontally, it shows the results for different LPM diversity thresholds (0.2 to 0.9). Vertically, it shows the results for five different event logs: the BPI challenge 2013 prelogs (Log), Log (I) and Log (C), Log (5), Log (Log), Log (5), Log), Log (5), Log)."}, {"heading": "5 Conclusions and Future Work", "text": "In this paper, using five real-world event logs, we have shown that the abstraction approach applied prior to the discovery of the process can lead to more precise process models. [8] We have found that (1) the number of LPMs to be used for abstraction, (2) the diversity threshold, and (3) the composition method that leads to the discovery of good process models depend greatly on the event log on which the technique is applied. In future work, we will explore this interplay between event log properties and the parameters of the abstraction approach needed to find good process models. We want to apply this insight into the relationship between parameter settings of the abstraction technique and the properties of the event log in a technique that can abstract an event log completely automatically, without the need for manual parameter adjustment."}], "references": [{"title": "Process mining: data science in action", "author": ["W.M.P. van der Aalst"], "venue": "Springer", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Replaying history on process models for conformance checking and performance analysis", "author": ["W.M.P. van der Aalst", "A. Adriansyah", "B.F. van Dongen"], "venue": "WIREs Data Min. Knowl. Discovery 2(2), 182\u2013192", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "Workflow mining: Discovering process models from event logs", "author": ["W.M.P. van der Aalst", "T. Weijters", "L. Maruster"], "venue": "IEEE Trans. Knowl. Data Eng. 16(9), 1128\u20131142", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Bridging abstraction layers in process mining by automated matching of events and activities", "author": ["T. Baier", "J. Mendling"], "venue": "BPM, LNCS, vol. 8094, pp. 17\u201332. Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "BPMN miner: automated discovery of BPMN process models with hierarchical structure", "author": ["R. Conforti", "M. Dumas", "L. Gar\u0107\u0131a-Ba\u00f1uelos", "M. La Rosa"], "venue": "Information Systems 56, 284\u2013303", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "Activity mining by global trace segmentation", "author": ["C.W. G\u00fcnther", "A. Rozinat", "W.M.P. van der Aalst"], "venue": "BPM. pp. 128\u2013139. Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Discovering block-structured process models from event logs containing infrequent behaviour", "author": ["S.J.J. Leemans", "D. Fahland", "W.M.P. van der Aalst"], "venue": "BPM. LNBIP, vol. 171, pp. 66\u201378. Springer", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Using life cycle information in process discovery", "author": ["S.J.J. Leemans", "D. Fahland", "W.M.P. van der Aalst"], "venue": "BPM. LNBIP, vol. 256, pp. 204\u2013217. Springer", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "From low-level events to activities - a pattern-based approach", "author": ["F. Mannhardt", "M. de Leoni", "H.A. Reijers", "W.M. van der Aalst", "P.J. Toussaint"], "venue": "BPM. LNCS, vol. 9850, pp. 125\u2013141. Springer", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2016}, {"title": "Petri nets: an introduction, vol", "author": ["W. Reisig"], "venue": "4. Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2012}, {"title": "Heuristic approaches for generating local process models through log projections", "author": ["N. Tax", "N. Sidorova", "W.M.P. van der Aalst", "R. Haakma"], "venue": "CIDM. pp. 1\u20138. IEEE", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}, {"title": "Event abstraction for process mining using supervised learning techniques", "author": ["N. Tax", "N. Sidorova", "R. Haakma", "W.M.P. van der Aalst"], "venue": "IntelliSys. IEEE", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Mining local process models", "author": ["N. Tax", "N. Sidorova", "R. Haakma", "W.M. van der Aalst"], "venue": "Journal of Innovation in Digital Ecosystems 3(2), 183\u2013196", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2016}, {"title": "Process discovery using integer linear programming", "author": ["van der Werf", "J.M.E.M.", "B.F. van Dongen", "C.A.J. Hurkens", "A. Serebrenik"], "venue": "Fundamenta Informaticae 94(3), 387\u2013 412", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}], "referenceMentions": [{"referenceID": 0, "context": "Process mining [1] is a fast growing research discipline that concerns the analysis of events that are logged during the execution of a business process.", "startOffset": 15, "endOffset": 18}, {"referenceID": 4, "context": "A variety of process discovery techniques have been developed over the years [5,7,3,15], generating process models in different notations, such as Petri nets [11], EPC, and BPMN.", "startOffset": 77, "endOffset": 87}, {"referenceID": 6, "context": "A variety of process discovery techniques have been developed over the years [5,7,3,15], generating process models in different notations, such as Petri nets [11], EPC, and BPMN.", "startOffset": 77, "endOffset": 87}, {"referenceID": 2, "context": "A variety of process discovery techniques have been developed over the years [5,7,3,15], generating process models in different notations, such as Petri nets [11], EPC, and BPMN.", "startOffset": 77, "endOffset": 87}, {"referenceID": 13, "context": "A variety of process discovery techniques have been developed over the years [5,7,3,15], generating process models in different notations, such as Petri nets [11], EPC, and BPMN.", "startOffset": 77, "endOffset": 87}, {"referenceID": 9, "context": "A variety of process discovery techniques have been developed over the years [5,7,3,15], generating process models in different notations, such as Petri nets [11], EPC, and BPMN.", "startOffset": 158, "endOffset": 162}, {"referenceID": 3, "context": "can be an n:m-relation between the recorded events and the business activities [4,6].", "startOffset": 79, "endOffset": 84}, {"referenceID": 5, "context": "can be an n:m-relation between the recorded events and the business activities [4,6].", "startOffset": 79, "endOffset": 84}, {"referenceID": 11, "context": ", process models with low precision) [13].", "startOffset": 37, "endOffset": 41}, {"referenceID": 8, "context": "A recent approach to abstract recorded events to business activities [9] uses activity patterns to capture the domain knowledge about the relation between the high-level activities and the low-level recorded events.", "startOffset": 69, "endOffset": 72}, {"referenceID": 12, "context": "Local Process Model (LPM) discovery [14,12] is a technique to automatically discover frequent patterns of process behavior (i.", "startOffset": 36, "endOffset": 43}, {"referenceID": 10, "context": "Local Process Model (LPM) discovery [14,12] is a technique to automatically discover frequent patterns of process behavior (i.", "startOffset": 36, "endOffset": 43}, {"referenceID": 12, "context": "Each LPM discovered by the LPM discovery method [14,12] is assumed to represent a business activity.", "startOffset": 48, "endOffset": 55}, {"referenceID": 10, "context": "Each LPM discovered by the LPM discovery method [14,12] is assumed to represent a business activity.", "startOffset": 48, "endOffset": 55}, {"referenceID": 8, "context": "The LPMs are used as activity patterns of the event abstraction method in [9].", "startOffset": 74, "endOffset": 77}, {"referenceID": 9, "context": "We refer to [11] for a comprehensive introduction of Petri nets.", "startOffset": 12, "endOffset": 16}, {"referenceID": 12, "context": "LPMs [14] are process models that describe the behavior seen in the event log only partially, focusing on frequently observed behavior.", "startOffset": 5, "endOffset": 9}, {"referenceID": 12, "context": "A technique to generate a ranked collection of LPMs through iterative expansion of candidate process models is proposed in [14].", "startOffset": 123, "endOffset": 127}, {"referenceID": 12, "context": "We refer the reader to [14] for a detailed description of search space LPMS (L).", "startOffset": 23, "endOffset": 27}, {"referenceID": 8, "context": "An overview of the pattern-based abstraction method [9].", "startOffset": 52, "endOffset": 55}, {"referenceID": 1, "context": "An alignment-based [2] implementation of \u0393 , as well as a method to rank and select LPMs based on their support, i.", "startOffset": 19, "endOffset": 22}, {"referenceID": 12, "context": ", the number of events in \u0393L,LPM , is described in [14].", "startOffset": 51, "endOffset": 55}, {"referenceID": 8, "context": "An overview of the pattern-based abstraction method proposed in [9] is depicted in Fig.", "startOffset": 64, "endOffset": 67}, {"referenceID": 7, "context": "Mapping \u03b8 allows to obtain information on when activities started and when they were completed, which some process discovery algorithms, such as [8], are able to leverage.", "startOffset": 145, "endOffset": 148}, {"referenceID": 12, "context": "LPMs High-level Log High-level Model discover [14] abstract [9] discover [7]", "startOffset": 46, "endOffset": 50}, {"referenceID": 8, "context": "LPMs High-level Log High-level Model discover [14] abstract [9] discover [7]", "startOffset": 60, "endOffset": 63}, {"referenceID": 6, "context": "LPMs High-level Log High-level Model discover [14] abstract [9] discover [7]", "startOffset": 73, "endOffset": 76}, {"referenceID": 12, "context": "First, we discover a fixed number of LPMs based on the ranking proposed in [14].", "startOffset": 75, "endOffset": 79}, {"referenceID": 8, "context": "Then, we use those LPMs as activity patterns and obtain a high-level event log with the abstraction method described in [9].", "startOffset": 120, "endOffset": 123}, {"referenceID": 6, "context": "Based on the high-level event log, we discover a high-level process model using existing methods such as the Inductive Miner (IM) [7].", "startOffset": 130, "endOffset": 133}, {"referenceID": 12, "context": "The LPM ranking obtained with the LPM discovery approach [14] is based on support (i.", "startOffset": 57, "endOffset": 61}, {"referenceID": 8, "context": "In work [9] several composition functions are presented that allow fine grained control of the interaction between activities.", "startOffset": 8, "endOffset": 11}, {"referenceID": 10, "context": "To be able to deal with the computational complexity of LPM mining for logs with many activities, we discover LPMs using activity clustering based on Markov clustering, as proposed in [12].", "startOffset": 184, "endOffset": 188}, {"referenceID": 1, "context": "The resulting expanded process model can be related to the low-level events with existing techniques that determine the models quality in terms of fitness and precision [2].", "startOffset": 169, "endOffset": 172}, {"referenceID": 6, "context": "4 shows the f-score of the process models discovered with the IM infrequent [7] process discovery algorithm with 20% noise filtering.", "startOffset": 76, "endOffset": 79}], "year": 2017, "abstractText": "Process mining analyzes business processes based on events stored in event logs. However, some recorded events may correspond to activities on a very low level of abstraction. When events are recorded on a too low level of granularity, process discovery methods tend to generate overgeneralizing process models. Grouping low-level events to higher level activities, i.e., event abstraction, can be used to discover better process models. Existing event abstraction methods are mainly based on common sub-sequences and clustering techniques. In this paper, we propose to first discover local process models and then use those models to lift the event log to a higher level of abstraction. Our conjecture is that process models discovered on the obtained high-level event log return process models of higher quality: their fitness and precision scores are more balanced. We show this with preliminary results on several real-life event logs.", "creator": "LaTeX with hyperref package"}}}