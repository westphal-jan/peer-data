{"id": "1704.07538", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Apr-2017", "title": "Path Planning with Kinematic Constraints for Robot Groups", "abstract": "Path planning for multiple robots is well studied in the AI and robotics communities. For a given discretized environment, robots need to find collision-free paths to a set of specified goal locations. Robots can be fully anonymous, non-anonymous, or organized in groups. Although powerful solvers for this abstract problem exist, they make simplifying assumptions by ignoring kinematic constraints, making it difficult to use the resulting plans on actual robots. In this paper, we present a solution which takes kinematic constraints, such as maximum velocities, into account, while guaranteeing a user-specified minimum safety distance between robots. We demonstrate our approach in simulation and on real robots in 2D and 3D environments.", "histories": [["v1", "Tue, 25 Apr 2017 04:52:09 GMT  (492kb,D)", "http://arxiv.org/abs/1704.07538v1", "Published in Southern California Robotics Symposium 2016"]], "COMMENTS": "Published in Southern California Robotics Symposium 2016", "reviews": [], "SUBJECTS": "cs.AI cs.RO", "authors": ["wolfgang h\\\"onig", "t k satish kumar", "liron cohen", "hang ma", "sven koenig", "nora ayanian"], "accepted": false, "id": "1704.07538"}, "pdf": {"name": "1704.07538.pdf", "metadata": {"source": "CRF", "title": "Path Planning With Kinematic Constraints For Robot Groups", "authors": ["Wolfgang H\u00f6nig", "T. K. Satish Kumar", "Liron Cohen", "Hang Ma", "Sven Koenig", "Nora Ayanian"], "emails": ["whoenig@usc.edu,", "tkskwork@gmail.com,", "hangma@usc.edu.", "lcohen@usc.edu.", "skoenig@usc.edu.", "ayanian@usc.edu."], "sections": [{"heading": null, "text": "This year, it has reached the point where there is only one person who is able to establish himself in the region."}, {"heading": "II. TAPF", "text": "We get an undirected graph G1 = (V1, E1) and K multi-agent groups {group1, group2,.., groupK} in which groupi consists of interchangeable robots {ai1, ai2,.., aiKi} for all i {1, 2,.., K}. Each robot a j has a unique starting point sij, V1, and the i-th group has a series of unique destinations {gi1, gi2,.., giKi}. A solution to the TAPF problem finds K permutations, one for each group to assign a unique starting point to each robot and a collision-free path for each robot to navigate from its starting point to the assigned destination. A more precise mathematical description is given in [1]. The macespan is the total time until the last robot reaches its destination. < a solution is optimal if the hierarchy is minimal."}, {"heading": "III. STN", "text": "The output of the TAPF solver is a series of synchronized paths, provided that robots can cross the edges of the unit length in unit time. To include kinematic constraints such as maximum speeds of the different robots, we use a Temporal Plan Graph (TPG), which captures the partial sequence of events determined by the TAPF solver. More formally, the TPG is an acyclic graph G2 = (V2, E2) in which each vertex V2 represents an event and each edge < u, v > E2 indicates that u should be planned before the TAPF solver. In the TAPF case, there are two types of temporal precedent. First, the precedent that captures the site visit order for each robot individually can be limited. Second, the TAPF solution synchronizes the paths between robots to avoid conflicts."}, {"heading": "IV. EXPERIMENTS", "text": "We implement TAPF and MAPF solvers as well as various variants of the STN framework in C + +. For performance evaluation, we randomly generate 10 x 10 x 5 cards with different numbers of robots, groups and obstacles and measure how long the TAPF solver takes to find an optimal solution. For example, a scenario with 150 obstacles and 100 robots in 5 groups can be solved on goods hardware within about 5 s. The time it takes for the STN to calculate a solution varies depending on the method and desired safety distance. Interestingly, in the general case of a large safety distance, the runtime is shorter, because in this case fewer markers are needed. In a warehouse-like domain with 100 robots, it takes 4 s to calculate a solution.We have tested our approach in the simulation with the VREP robot simulator for different drive robots, 6-legged robots and quadroppers."}, {"heading": "V. CONCLUSION", "text": "We presented an approach for using powerful solvers from the AI community to multi-agent pathfinding on actual robots that obey kinematic constraints. Although not shown here, our approach to makeover is optimal under certain conditions. We demonstrate the applicability of our approach through simulation and real robots. In the future, we would like to test our framework on physical quadrocopters and add an execution monitoring framework that leverages the \"slack\" of the STN to avoid costly rescheduling in the event of inaccurate execution."}], "references": [{"title": "Optimal target assignment and path finding for teams of agents", "author": ["H. Ma", "S. Koenig"], "venue": "International Conference on Autonomous Agents and Multiagent Systems, 2016.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Multiagent path finding with payload transfers and the package-exchange robot-routing problem", "author": ["H. Ma", "C. Tovey", "G. Sharon", "T.K.S. Kumar", "S. Koenig"], "venue": "AAAI Conference on Artificial Intelligence, 2016.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "Multi-agent path finding with kinematic constraints", "author": ["W. H\u00f6nig", "T.K.S. Kumar", "L. Cohen", "H. Ma", "H. Xu", "N. Ayanian", "S. Koenig"], "venue": "International Conference on Automated Planning and Scheduling, 2016.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2016}, {"title": "Formation change for robot groups in occluded environments", "author": ["W. H\u00f6nig", "T.K.S. Kumar", "H. Ma", "S. Koenig", "N. Ayanian"], "venue": "IEEE/RSJ International Conference on Intelligent Robots and Systems, 2016.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "Solvers from the AI community for Multi-Agent PathFinding (MAPF) problems and Target-Allocation and PathFinding (TAPF) problems are able to solve instances with hundreds of agents [1].", "startOffset": 180, "endOffset": 183}, {"referenceID": 0, "context": "A more rigorous mathematical description is given in [1].", "startOffset": 53, "endOffset": 56}, {"referenceID": 1, "context": "However, in general, it is NPhard to approximate an optimal solution within any constant factor less than 4/3 [2].", "startOffset": 110, "endOffset": 113}, {"referenceID": 0, "context": "a hierarchical approach, where the lower level uses a maxflow algorithm and the higher level uses a best-first search, which tries to resolve conflicts as they occur [1].", "startOffset": 166, "endOffset": 169}, {"referenceID": 2, "context": "An LP-solver can be used to optimize for maximum throughput or minimum makespan [3].", "startOffset": 80, "endOffset": 83}, {"referenceID": 3, "context": "If the desired safety distance divides the edge length, the problem can be solved with a user-specified edgelength in strongly polynomial time by using a shortest path algorithm [4].", "startOffset": 178, "endOffset": 181}], "year": 2017, "abstractText": "Path planning for multiple robots is well studied in the AI and robotics communities. For a given discretized environment, robots need to find collision-free paths to a set of specified goal locations. Robots can be fully anonymous, non-anonymous, or organized in groups. Although powerful solvers for this abstract problem exist, they make simplifying assumptions by ignoring kinematic constraints, making it difficult to use the resulting plans on actual robots. In this paper, we present a solution which takes kinematic constraints, such as maximum velocities, into account, while guaranteeing a user-specified minimum safety distance between robots. We demonstrate our approach in simulation and on real robots in 2D and 3D environments.", "creator": "LaTeX with hyperref package"}}}