{"id": "1705.00211", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Apr-2017", "title": "A Partitioning Algorithm for Detecting Eventuality Coincidence in Temporal Double recurrence", "abstract": "A logical theory of regular double or multiple recurrence of eventualities, which are regular patterns of occurrences that are repeated, in time, has been developed within the context of temporal reasoning that enabled reasoning about the problem of coincidence. i.e. if two complex eventualities, or eventuality sequences consisting respectively of component eventualities x0, x1,....,xr and y0, y1, ..,ys both recur over an interval k and all eventualities are of fixed durations, is there a subinterval of k over which the occurrence xp and yq for p between 1 and r and q between 1 and s coincide. We present the ideas behind a new algorithm for detecting the coincidence of eventualities xp and yq within a cycle of the double recurrence of x and y. The algorithm is based on the novel concept of gcd partitions that requires the partitioning of each of the incidences of both x and y into eventuality sequences each of which components have a duration that is equal to the greatest common divisor of the durations of x and y. The worst case running time of the partitioning algorithm is linear in the maximum of the duration of x and that of y, while the worst case running time of an algorithm exploring a complete cycle is quadratic in the durations of x and y. Hence the partitioning algorithm works faster than the cyclical exploration in the worst case.", "histories": [["v1", "Sat, 29 Apr 2017 16:31:58 GMT  (299kb)", "http://arxiv.org/abs/1705.00211v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["b o akinkunmi"], "accepted": false, "id": "1705.00211"}, "pdf": {"name": "1705.00211.pdf", "metadata": {"source": "CRF", "title": "Partitioning Algorithm for Detecting Eventuality Coincidence in Temporal Double recurrence", "authors": ["B.O. Akinkunmi"], "emails": [], "sections": [{"heading": null, "text": "Thus, if two complex contingencies (or contingency sequences), each consisting of contingencies of components x0, x1,...., xr, and y0, y1,.., both occur over an interval k, and all contingencies are of fixed duration, there is a subinterval of k over which the occurrence of xp and yq for 1 p r and 1 q s coincide. We present the ideas behind a new algorithm for detecting the contingencies xp and yq within a cycle of double repetition of x and y. The algorithm is based on the novel concept of GCD partitions that require partitioning each of the incidences of x and the contingencies of x."}, {"heading": "1. Introduction", "text": "This year, it has reached the stage where it will be able to take the lead."}, {"heading": "3. Maximal Truths, Sequences and Recurrences", "text": "reD eaJrh hacu ide eaJrh, a \"nn so ibs.\" nreD \"iDe eaJrh\" n, \"a so iwr es nvo nlrhea,\" a so iwr \"i.\" n \"D\" iDe eeisrlrdteeVnlrteeu, \"n os\" nvo, \"nlrteew ew os,\" n os. \"s\" iDe eeisrmtS, \"a\" n, \"a\" a \"os os\" nvo, \"iwr\" e, \"e\". \"nI\" e \"nI\" nI \"n,\" n \"a,\" n \",\" n \",\" n \",\" n \",\" n \",\" n \",\" n \"\", \"n\" \",\" n, \"n,\" \"\" \",\" \",\" \"lrsasasasD,\", \"\" D, \"D,\", \"D,\", \"D,\", \",\" sase, \",\" D, \"D,\", \",\" D, \",\" D, \",\", \",\" sase, \",\" D, \",\" D, \",\", \"sasD,\", \",\", \",\" sasD, \",\" D, \",\", \",\", \",\" sase, \",\", \",\" sasD, \",\", \"D,\", \",\", \",\", \"sasD,\", \",\", \",\", \",\" sasD, \",\""}, {"heading": "So for example, to say x recurs over an interval j in Koomen\u2019s theory, one writes as a logical", "text": "\"For the first time in the history of the world, the world is a place where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can live, where people can work, where people can work, where people can work, where people can work, where people can work, where people can work, where people can work, where people can work, where people can work, where people can work.\""}, {"heading": "3.2 Formal statement of the \u201ccoincidence\u201d problem and an initial solution", "text": "We are now better equipped to formally define the random problem, and the problem is presented as follows: For two sequences of contingencies seq (x0,.. xs-1) and seq (y0.. yt-1), which are repeated over an interval j that is longer than a cycle. Can we find any subinterval of j within the boundaries of [1.. s] and [1.. t], respectively, over which both xp and yq are applicable? In the logical language we have developed, our problem is to follow the truth or falsehood of the following assertion for some specific sequences x and y, ordinals p and q within the boundaries of the ordinals in the sequences and intervals k. Is it the case that MRT (x, y, k) j Intrel (j, within, k) TT (xp + yq, j) TT (xp + gd partitions)?"}, {"heading": "4. Partitions and GCD- partitions", "text": "We begin with the formal introduction of the concept of the partition for an eventuality, which is central to the results q in this section. (Definition 4.1 (Partition of a sequence contingency) For each contingency x we define its partition, like any other contingency, y, which is maximally true in each interval on which x is maximally true, and such that the duration of each interval in which y is true corresponds to the duration of each interval. (Part 3) MT (x, k) MT (y, k) From the above definition, the following theorems follow x x x x. Theorem 4.2 If we define an eventuality w as a partition of another contingency x, and x is true in an interval interval of intervals intervals."}, {"heading": "5. A Solution based on gcd partitions", "text": "This year it will be so far that it will be able to call the mentionlcihsrcnlrVo rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the f\u00fc the f\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the f\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the f\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf\u00fc the rf"}, {"heading": "6. The Algorithm", "text": "Instead of strictly understanding this algorithm from the point of view of the propagation of constraints, as was done in Section 5.1 above, it can be assumed that each pair of events of wr and zs, for each r and s from the gcd partition, will be maximally true both in a subinterval of each cycle of duplicate repetitions. Thus, to know whether xp and yq ever coincide or not within a cycle, we can treat the relationships between events of xp and any events that are not separated within a period of x, namely between events of yq and any events that are not separated within a period of y, since the relationships between xp and the common interval of whichwr and zs are both maximally true. If a coincidence occurs under these conditions, it will occur in each cycle, and if we try to identify all possible events of wr and zolls that do not differ from each other."}, {"heading": "If within any cycle  of the double recurrence of x and y with a gcd partition w, z, any occurrence of xp starts or overlaps some occurrence of wr and any incidence yq starts or", "text": "Overlaps zs, then there is a sub-interval over which an incidence of xp + yq truex, y, p, q, w, z.MRI (x, y,) (x, y) Gpart (x, y, w, z) (r, x. intrel (x, within,) (Intrel ((((wr, x) overlap (xp, x))))) (s, y) (s, y) (s, y) (Intrel ((((yq, y)) begins (zs, y))) Intrel (((yq, y))) Intrel (((yq, y))) (MT (zs, y)) Intrel (yq, y) Overlaps (zs, y))"}, {"heading": "If within any cycle  of the double recurrence of x and y with a gcd partition w, z, any occurrence of xp finishes some occurrence of wr and any incidence of yq starts zs, and the sum of the durations of the incidences of xp and yq is greater than the gcd of incidences of x and y,", "text": ", then there is a partial interval over which an incidence of xp + yq applies. q (q) q (q, p, w, z.MRT (x, y,) (x, y) Intrel (subs j) Gpart (x, y, z) (q, q (q) q (q, q) Intrel (x, inside,) (Intrel (((xp, x) x x (x) x, y. Intrel (y, y), begins (zs, (zs, y)) dur (xp, y)) x (yq, y) x (x, y) Intrel (y, inside,). Intrel (((((yq, y), y), begins (z) dur (xp), x (x), x (x), x (x), Intrel (x), dur (y), y (y), Intrel (x)."}, {"heading": "If within any cycle  of the double recurrence of x and y, with a gcd partition w, z, if an incidence of wr overlaps an incidence of xp and an incidence of yq is contained in an incidence", "text": "of zs and the incidences of yq and zs have an auxiliary interval that meets the incidence of yq and is shorter than the common interval of the incidences of xp and wr, then there is a correspondence between xp and yq within the cycle. Intrel (x, y, p, q, w, z.MRI (x, y,) (x, y) Intrel (subs j) Gpart (x, y, w, z) r, x. Intrel (x, within,) Intrel (((((wr, x), overlaps, (xp, x) s, y. Intrel (y, within,) (intrel (((zs, y))), contains, (yq, y) Aux (((zs, y), (yq, y), overlaps, (xp, x), j), Intrel (y, within,) (ztres, y)."}, {"heading": "If within any cycle  of the double recurrence of x and y with a gcd partition w, z, if an incidence of xp starts an incidence of wr and an incidence of yq starts an incidence of zs, OR if an incidence of xp finishes an incidence of wr and an incidence of yq finishes an incidence of", "text": "zs, then there is a coincidence between xp and yq within the cycle z. x, q, q, q, w, z.MRT (x, y,) (x, y) gpart (x, y, z) r, s, x, y. intrel (x, q)) (Intrel ((xp, x), Intrel (x, x), begins, (wr, x, y), begins, (zs, y) (Intrel (xp, x), ends, (wr, x), Intrel (x), Intrel (x), Intrel (x, y), Intrel (k, y))) (Intrel (xp, x), x), Intrel (x), Intrel (x), Intrel (x, Intrel, Intrel, x, x, (x), Intrel (x, Intrel, Intrel, x), x, x, (x), Intrel (x), x, Intrel (x), x, x, (x), Intrel (x), x, Intrel (x), x, x, (x), x, x, (x), x, x, x, x, x, x, x, x, x, x, x, x), x, x, x, x, x, x, x, x, x, x), x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, (x, x, x, x, x, x, x, x, x, x, (x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x"}, {"heading": "7. Summary and Conclusions", "text": "The significance of the random problem has been discussed; an algorithm that detects random occurrences based on the property of the gcd partition (w and z) will match at most within each cycle. Algorithm 6.1 then determines the randomness of xp and yq within a cycle by finding a pair of the components of the gcd partition of x and y, the maximum randomness implying that the occurrences of xp and yq within a cycle match. The solution presented here is more efficient than the one presented in [2] at worst. It is important to re-emphasize the contingencies defined here as against variable or blurred durations."}, {"heading": "Appendix B (The Create Algorithms)", "text": "(x.dur), x.dur (x), x.dur (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x (x), x (x), x (x), x (x), x (x), x (x), x (x), x (x (x), x (x), x (x), x (x), x (x (x), x (x), x (x), x (x), x (x (x), x (x), x (x (x), x (x), x (x (x), x (x), x (x (x), x (x (x), x (x), x (x (x), x (x), x (x), x (x (x), x (x x), x (x (x), x, x (x), x (x (x), x, x (x, x, x (x), x, x (x), x, x (x x (x), x, x (x, x, x (x), x, x, x (x, x, x, x, x, x, x (x x x, x, x, x, x, x (x x), x, x, x, x x, x x x, x, x, x x"}], "references": [{"title": "Osofisan, Temporal properties of repetitive entities", "author": ["A.O.B.O. Akinkunmi"], "venue": "Artificial Intelligence Review", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "Problem of Coincidence in a Theory of Temporal Double recurrence", "author": ["B.O. Akinkunmi Th"], "venue": "Journal of Applied Logic, 15:46-68, May", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "Maintaining knowledge about temporal intervals", "author": ["J.F. Allen"], "venue": "Communications of the ACM", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1983}, {"title": "Towards a general theory of action and time", "author": ["J.F. Allen"], "venue": "Artificial Intelligence, 23(2) : 123-154,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1984}, {"title": "Temporal Database Management", "author": ["T.L. Dean", "D.V. McDermott"], "venue": "Artificial Intelligence", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1987}, {"title": "Operators vs Arguments: The Ins and Outs of Reification", "author": ["A. Galton"], "venue": "Synthese, 150(3): 415-441,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Reasoning about Recurrence", "author": ["Johannes A.G.M..Koomen"], "venue": "Ph.D. thesis, Department of Computer Science, University of Rochester,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1989}, {"title": "Reasoning about recurrence, International Journal of Intelligent Systems", "author": ["Johannes A.G.M. Koomen"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1991}, {"title": "Mathematical methods in Large-scale Computing Units", "author": ["D.H. Lehmer"], "venue": "Harvard University Computation Laboratory Annals, 26:.141-146,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1951}, {"title": "A temporal logic for reasoning about processes and plans", "author": ["D. McDermott"], "venue": "Cognitive Science, 6 pp. 101-155,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1982}], "referenceMentions": [{"referenceID": 0, "context": "The problem of temporal recurrence is known in knowledge representation [1, 8, 9].", "startOffset": 72, "endOffset": 81}, {"referenceID": 6, "context": "The problem of temporal recurrence is known in knowledge representation [1, 8, 9].", "startOffset": 72, "endOffset": 81}, {"referenceID": 7, "context": "The problem of temporal recurrence is known in knowledge representation [1, 8, 9].", "startOffset": 72, "endOffset": 81}, {"referenceID": 1, "context": "The problem of coincidence in double and regular temporal recurrence was introduced in [2].", "startOffset": 87, "endOffset": 90}, {"referenceID": 6, "context": "Our interest in this problem has been motivated by the need to enable a planner/scheduler cope with reasoning about the possible occurrence of the preconditions of an action in the context of double recurrence as opposed to a single recurrence addressed in [8].", "startOffset": 257, "endOffset": 260}, {"referenceID": 1, "context": "In that regard, the main result of [2] is that if a coincidence for those eventualities would exist at all, one must happen within every cycle of double recurrence.", "startOffset": 35, "endOffset": 38}, {"referenceID": 6, "context": "4 The problems described above are examples of the coincidence problem which arises in contexts described by an extension of Koomen\u2019s parlance [8, 9] as \u201cdouble recurrence\u201d.", "startOffset": 143, "endOffset": 149}, {"referenceID": 7, "context": "4 The problems described above are examples of the coincidence problem which arises in contexts described by an extension of Koomen\u2019s parlance [8, 9] as \u201cdouble recurrence\u201d.", "startOffset": 143, "endOffset": 149}, {"referenceID": 1, "context": "As such it has been shown that any search for coincidence within an interval over which double recurrence take place can be narrowed down to any arbitrary cycle[2].", "startOffset": 160, "endOffset": 163}, {"referenceID": 1, "context": "This paper uses the same language of the reified first order logic used in [2] which notation is briefly presented in section 2.", "startOffset": 75, "endOffset": 78}, {"referenceID": 1, "context": "The paper ends with an algorithmic analysis of the two main algorithms involved in the proposed solution and compares their performance with the simple temporal projection algorithm proposed in [2].", "startOffset": 194, "endOffset": 197}, {"referenceID": 1, "context": "It is exactly the same language used in [2].", "startOffset": 40, "endOffset": 43}, {"referenceID": 2, "context": "A time interval is time unit over which a proposition may be regarded as being either true or false[3, 4].", "startOffset": 99, "endOffset": 105}, {"referenceID": 3, "context": "A time interval is time unit over which a proposition may be regarded as being either true or false[3, 4].", "startOffset": 99, "endOffset": 105}, {"referenceID": 4, "context": "In some literature a time interval is regarded as a pair of time points[5].", "startOffset": 71, "endOffset": 74}, {"referenceID": 5, "context": "[7].", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "We use the predicates here as used in [8] i.", "startOffset": 38, "endOffset": 41}, {"referenceID": 2, "context": "2 Interval Calculus Allen [3] formulated the interval calculus, as a means of representing time, along with a computationally efficient reasoning algorithm based on constraint propagation.", "startOffset": 26, "endOffset": 29}, {"referenceID": 9, "context": "Allen had argued that time points proposed earlier by McDermott [11], was inadequate.", "startOffset": 64, "endOffset": 68}, {"referenceID": 6, "context": "This concept is referred to in this paper as in [8], as the cover of the two intervals.", "startOffset": 48, "endOffset": 51}, {"referenceID": 0, "context": "cover*(tm) = m \uf0db (dim(tm) = 1 \uf0d9 m = tm[1]) \uf0da (dim(tm) > 1 \uf0d9 Intrel(tm[1] starts m) \uf0d9 Intrel(tm[dim(tm)] ends m)", "startOffset": 38, "endOffset": 41}, {"referenceID": 0, "context": "cover*(tm) = m \uf0db (dim(tm) = 1 \uf0d9 m = tm[1]) \uf0da (dim(tm) > 1 \uf0d9 Intrel(tm[1] starts m) \uf0d9 Intrel(tm[dim(tm)] ends m)", "startOffset": 69, "endOffset": 72}, {"referenceID": 0, "context": "The following theorem from the literature[1], presents an interesting result about the temporal relations between each incidences of xp and yq within each cycle.", "startOffset": 41, "endOffset": 44}, {"referenceID": 1, "context": "The solution presented here is shown to be more efficient than the one presented in [2] in the worst case.", "startOffset": 84, "endOffset": 87}], "year": 2017, "abstractText": "A logical theory of regular double (or multiple) recurrence of eventualities (which are regular patterns of occurrences that are repeated) in time, has been developed within the context of temporal reasoning that enabled reasoning about the problem of coincidence. i.e. if two complex eventualities (or eventuality sequences) consisting respectively of component eventualities x0, x1,....,xr and y0, y1, ..,ys both recur over an interval k and all eventualities are of fixed durations, is there a subinterval of k over which the occurrence xp and yq for 1\uf0a3 p \uf0a3 r and 1\uf0a3 q \uf0a3 s coincide. We present the ideas behind a new algorithm for detecting the coincidence of eventualities xp and yq within a cycle of the double recurrence of x and y. The algorithm is based on the novel concept of gcd-partitions that requires the partitioning of each of the incidences of both x and y into eventuality sequences each of which components have a duration that is equal to the greatest common divisor of the durations of x and y. The main idea behind the algorithm is the fact that there exists a subinterval of the cycle of double recurrence over which any pair of component eventualities from the gcd-partitions of x and y, are fully incident. Thus we only need determine whether or not a coincidence happens during one of those intervals when such a pair from the gcd-partition, with which xp and yq are non-disjoint for each of the incidences of x and y, fully coincide. The gcd-partitioning of a double recurrence significantly reduces the search space that one needs to explore while looking for the coincidence of xp and yq from a cycle of multiple recurrence to two periods of x and y. The worst-case running time of the partitioning algorithm is linear in the maximum of the durations of x and y, while the worst case running time of an algorithm exploring a complete cycle is quadratic in the durations of x and y. Hence the partitioning algorithm works faster than the cyclical exploration in the worst case.", "creator": "Microsoft\u00ae Office Word 2007"}}}