{"id": "1705.00341", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Apr-2017", "title": "Deriving Quests from Open World Mechanics", "abstract": "Open world games present players with more freedom than games with linear progression structures. However, without clearly-defined objectives, they often leave players without a sense of purpose. Most of the time, quests and objectives are hand-authored and overlaid atop an open world's mechanics. But what if they could be generated organically from the gameplay itself? The goal of our project was to develop a model of the mechanics in Minecraft that could be used to determine the ideal placement of objectives in an open world setting. We formalized the game logic of Minecraft in terms of logical rules that can be manipulated in two ways: they may be executed to generate graphs representative of the player experience when playing an open world game with little developer direction; and they may be statically analyzed to determine dependency orderings, feedback loops, and bottlenecks. These analyses may then be used to place achievements on gameplay actions algorithmically.", "histories": [["v1", "Sun, 30 Apr 2017 16:47:57 GMT  (672kb,D)", "http://arxiv.org/abs/1705.00341v1", "To appear at Foundations of Digital Games (FDG) 2017"]], "COMMENTS": "To appear at Foundations of Digital Games (FDG) 2017", "reviews": [], "SUBJECTS": "cs.MM cs.AI", "authors": ["ryan alexander", "chris martens"], "accepted": false, "id": "1705.00341"}, "pdf": {"name": "1705.00341.pdf", "metadata": {"source": "CRF", "title": "Deriving\u0083ests from Open World Mechanics", "authors": ["Ryan Alexander", "Chris Martens"], "emails": ["rjalexan@ncsu.edu", "martens@csc.ncsu.edu", "permissions@acm.org."], "sections": [{"heading": null, "text": "KEYWORDS Procedural Content Generation, Quests, Minecra, Game Modeling ACM Reference format: Ryan Alexander and Chris Martens.. Deriving ests from Open World Mechanics. In Proceedings of Foundations of Digital Games Conference, Cape Cod, MA, August 2017 (FDG2017), 6 pages. DOI:"}, {"heading": "1 INTRODUCTION", "text": "In an open world game, players enjoy a great deal of autonomy in choosing a complex system of mechanics, explorable spaces and objectives. Instead of experiencing a prescribed linear (or partially ordered) progression of challenges and actions orchestrated by a game designer, players are free to experiment with the consequences of game mechanics and show more creativity in deciding what to do to develop their own goals. In the context of Jesper Juul [6], the open world games are brought more to the fore than the opening up of a wide area of game mechanics, rather than in providing a sequential world of experience. Minecra is a popular example of such a game, whose open world mechanics are supported."}, {"heading": "2 RELATEDWORK", "text": "On a broad level, the context for this work is the field of procedural content creation (PCG).Within this field, we observe an interest in algorithms that are able to create artifacts, generate different content in a particular way, such as creating dynamics on the one hand and generating room for manoeuvre on the other. Others have also observed that PCG has traditionally been centered on content that develops on the other side of the level."}, {"heading": "3 BACKGROUND", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Emergence and Progression in Minecra", "text": "Origin and progression are terms used by Jesper Juul [6] to describe two different ways of playing. Progression structures oblige the player through a structured series of goals or quests. Emergent Play revolves around the naturally occurring events that arise from a small number of simple rules. There are disadvantages to both methods used in isolation: games of pure progress can feel \"railroad-like\" to the player, and they also require more time from the developers to give the desired experience, while pure-rise games overwhelm players with the vast space of possibilities at their disposal, or alternatively they become bored with no clear direction for progress. Many games, such as Minecra, use elements of both: they offer a simple set of open-ended mechanics for exploratory play, while at the same time adding quests and achievements to give the player a sense of progression."}, {"heading": "3.2 ests, Achievements, and Objectives", "text": "So far, we have used the terms quest, performance system, and objective placement relatively interchangeably. In this work, we are adopting a simplified notion of quest, which essentially means a subset of the nodes in a gameplay trace that the game system recognizes as progress (e.g., \"success messages\"), with the goal of simply communicating the fact that the player should be trying to reach performance nodes. We do not examine these communication mechanisms in detail (e.g., Minecra's performance tree conveys a lot of information about the interdependence of achievements, while in some games the way in which achievements are accomplished is completely opaque)."}, {"heading": "3.3 Ceptre", "text": "We have developed our formal model of Minecra mechanics in Ceptre [8], which allows us to present game logic at a high level, quickly prototypically, but strictly and formally. Ceptre is a rules-based specification language that describes how program states (e.g. game states) can develop. Each Ceptre rule consists of a one-hand page (LHS), its input, and a right-hand side (RHS), its results. A set of rules is interpreted by multiple rewrites: an initial state is provided, a set of prediction codes. en, each execution step involves selecting a rule that might be in its current state, and ringing this rule, meaning that the elements in the multiset that matches the LHS rule are replaced."}, {"heading": "4 A FORMAL MODEL OF MINECRAFT", "text": "In this section, we discuss the Minecra rules we represent and how they are formalized in Ceptre.First, we encode various facts about the world, such as the amount of materials carried by the player, which tools she has built from which materials, and so on, as predicates in Ceptre. e-mapping from predicate to Minecra state is shown in Table 1. Note that predicates with arguments in Ceptre are not represented with brackets, but with adjacent ones, such as Pred Arg."}, {"heading": "4.1 Rules", "text": "In fact, most of them will be able to move to another world, where they will be able to move to another world, where they will be able to move to another world, where they will be able to move to where they are."}, {"heading": "5 TRACE ANALYSIS", "text": "In order to understand how the rules relate to each other, the program was conducted both autonomously and interactively."}, {"heading": "6 STATIC ANALYSIS", "text": "We have two methods based on the organization of segments that rely on the static analysis of the LHS for each rule. We have created a static dependency curve between the rules, in which an edge is recorded between the two sides that they are rewarded with their achievements."}, {"heading": "7 CONCLUSION", "text": "If we take a rough look at our formalization and analysis of the rules of Minecra in Ceptre, we have shown that it is possible to algorithmically rediscover handwritten progression structures from the open world mechanics of the game. is process can help to explain and identify the ideal performance placement in the open world. e algorithmic discoveries we have made about system dynamics are consistent with achievements written manually for Minecra. In future work, we hope to apply this process of deriving progression structures from mechanics to other games, especially those that do not yet have manually written quests or achievements. We also intend to develop alternative performance placement strategies and compare them with the two sort-based strategies. e ultimate goal of such a research program is to improve the meaning of the player in open games themselves by potentially providing better objectives for the game."}], "references": [{"title": "\u008ce quest in a generated world", "author": ["Calvin Ashmore", "Michael Nitsche"], "venue": "In Proc. 2007 Digital Games Research Assoc.(DiGRA) Conference: Situated Play", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Integrating emergence and progression", "author": ["Joris Dormans"], "venue": "In \u008aink Design Play: Proceedings of the 2011 Digital Games Research Association Conference, Hilversum the Netherlands", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Generating missions and spaces for adaptable play experiences", "author": ["Joris Dormans", "Sander Bakkes"], "venue": "IEEE Transactions on Computational Intelligence and AI in Games 3,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Minecra\u0089, beyond construction and survival. Well Played: a journal on video games, value and meaning", "author": ["Sean Duncan"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Procedural generation of narrative puzzles in adventure games: \u008ce puzzle-dice system", "author": ["Clara Fern\u00e1ndez-Vara", "Alec \u008comson"], "venue": "In Proceedings of the \u008ae third workshop on Procedural Content Generation in Games. ACM,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "Half-Real: Video Games between Real Rules and Fictional Worlds", "author": ["Jesper Juul"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "General video game level generation", "author": ["Ahmed Khalifa", "Diego Perez-Liebana", "Simon M Lucas", "Julian Togelius"], "venue": "In Proceedings of the 2016 on Genetic and Evolutionary Computation Conference", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "Ceptre: A Language for Modeling Generative Interactive Systems. In Arti\u0080cial Intelligence and Interactive Digital Entertainment", "author": ["Chris Martens"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "A case study of expressively constrainable level design automation tools for a puzzle game", "author": ["Adam M Smith", "Erik Andersen", "Michael Mateas", "Zoran Popovi\u0107"], "venue": "In Proceedings of the International Conference on the Foundations of Digital Games. ACM,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Making quests playable: Choices, CRPGs, and the Grail framework", "author": ["Anne Sullivan", "Michael Mateas", "Noah Wardrip-Fruin"], "venue": "Leonardo Electronic Almanac 17,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}], "referenceMentions": [{"referenceID": 5, "context": "In the framework of Jesper Juul [6], open world games emphasize emergence over progression: they are more interested in opening a wide space of explorable consequences of the game\u2019s mechanics than in delivering a speci\u0080c sequential experience.", "startOffset": 32, "endOffset": 35}, {"referenceID": 8, "context": "Within this \u0080eld, we observe a shi\u0089 in interest from algorithms that can create artbitrary, varied content to those that can generate to \u0080t a spec\u0080cation, such as the argument for generating with ASP [9], a framework whose primary edge is its rich constraint speci\u0080cation capabilities.", "startOffset": 200, "endOffset": 203}, {"referenceID": 9, "context": "For instance, the Grail framework [10] addresses the problem of constructing quests whose goals may have emergent solutions ar X iv :1 70 5.", "startOffset": 34, "endOffset": 38}, {"referenceID": 4, "context": "Likewise, the Symon project [5] procedurally generates fetchquest-style narrative puzzles from a \u0083exible de\u0080nition of object interactions.", "startOffset": 28, "endOffset": 31}, {"referenceID": 2, "context": "\u008ce \u201cmission/space\u201d dichotomy [3] explicitly formulates the inte-", "startOffset": 29, "endOffset": 32}, {"referenceID": 1, "context": "First author Dormans also provides a more thorough theoretical account of integrating emergence and progression [2].", "startOffset": 112, "endOffset": 115}, {"referenceID": 6, "context": "Recent interest in general level generation [7] poses a problem quite similar to the one we are addressing: how can a program, given a game\u2019s mechanics (speci\u0080ed in VGDL), generate a level (including a goal condition) for the game? In this framework, the level serves as the progression structure (an initial condition and a goal) whereas the games rules, speci\u0080ed in terms of which entities exist, their properties, and how they interact with other properties, create emergence.", "startOffset": 44, "endOffset": 47}, {"referenceID": 0, "context": "Finally, others have considered the problem of the quest in a generated world [1], which is similar to the idea of generating quests for an open world in that what a player can do within the world is not known at the outset.", "startOffset": 78, "endOffset": 81}, {"referenceID": 5, "context": "Emergence and progression are terms used by Jesper Juul [6] to describe two di\u0082erent modes of gameplay.", "startOffset": 56, "endOffset": 59}, {"referenceID": 3, "context": "Upon spawning into the game, players have \u201cno clear idea of what he or she can do within the world\u201d [4].", "startOffset": 100, "endOffset": 103}, {"referenceID": 7, "context": "created our formal model of Minecra\u0089\u2019s mechanics in Ceptre [8], which allows us to represent game logic in a high-level, quickly-", "startOffset": 59, "endOffset": 62}], "year": 2017, "abstractText": "Open world games present players with more freedom than games with linear progression structures. However, without clearly-de\u0080ned objectives, they o\u0089en leave players without a sense of purpose. Most of the time, quests and objectives are hand-authored and overlaid atop an open world\u2019s mechanics. But what if they could be generated organically from the gameplay itself? \u008ce goal of our project was to develop a model of the mechanics in Minecra\u0089 that could be used to determine the ideal placement of objectives in an open world se\u008aing. We formalized the game logic of Minecra\u0089 in terms of logical rules that can be manipulated in two ways: they may be executed to generate graphs representative of the player experience when playing an open world game with li\u008ale developer direction; and they may be statically analyzed to determine dependency orderings, feedback loops, and bo\u008alenecks. \u008cese analyses may then be used to place achievements on gameplay actions algorithmically.", "creator": "LaTeX with hyperref package"}}}