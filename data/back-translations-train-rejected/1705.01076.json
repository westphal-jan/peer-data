{"id": "1705.01076", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-May-2017", "title": "An improved Ant Colony System for the Sequential Ordering Problem", "abstract": "It is not rare that the performance of one metaheuristic algorithm can be improved by incorporating ideas taken from another. In this article we present how Simulated Annealing (SA) can be used to improve the efficiency of the Ant Colony System (ACS) and Enhanced ACS when solving the Sequential Ordering Problem (SOP). Moreover, we show how the very same ideas can be applied to improve the convergence of a dedicated local search, i.e. the SOP-3-exchange algorithm. A statistical analysis of the proposed algorithms both in terms of finding suitable parameter values and the quality of the generated solutions is presented based on a series of computational experiments conducted on SOP instances from the well-known TSPLIB and SOPLIB2006 repositories. The proposed ACS-SA and EACS-SA algorithms often generate solutions of better quality than the ACS and EACS, respectively. Moreover, the EACS-SA algorithm combined with the proposed SOP-3-exchange-SA local search was able to find 10 new best solutions for the SOP instances from the SOPLIB2006 repository, thus improving the state-of-the-art results as known from the literature. Overall, the best known or improved solutions were found in 41 out of 48 cases.", "histories": [["v1", "Tue, 2 May 2017 17:17:26 GMT  (248kb,D)", "http://arxiv.org/abs/1705.01076v1", "30 pages, 8 tables, 11 figures"]], "COMMENTS": "30 pages, 8 tables, 11 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["rafa{\\l} skinderowicz"], "accepted": false, "id": "1705.01076"}, "pdf": {"name": "1705.01076.pdf", "metadata": {"source": "CRF", "title": "An improved Ant Colony System for the Sequential Ordering Problem", "authors": ["Rafa\u0142 Skinderowicza"], "emails": ["rafal.skinderowicz@us.edu.pl"], "sections": [{"heading": null, "text": "It is not uncommon that the performance of a metaheuristic algorithm can be improved by incorporating ideas from other areas. In this article, we show how Simulated Annealing (SA) can be used to improve the efficiency of the Ant Colony System (ACS) and the Enhanced ACS in solving the Sequential Ordering Problem (SOP). Furthermore, we show how exactly the same ideas can be applied to improve the convergence of a dedicated local search, i.e. the SOP-3 exchange algorithm. A statistical analysis of the proposed algorithms both in terms of finding suitable parameter values and the quality of the generated solutions is based on a series of computer experiments conducted on SOP instances from the well-known TSPLIB and SOPLIB2006 repositories. The proposed ACS-SA and EACS-SA algorithms generate solutions of better quality than the GesAACS-2006 and SOIBS-SOBS-2006 composite SOIBS-SOBS solutions combined with the best-known SOP-3 solutions."}, {"heading": "1. Introduction", "text": "In recent years, a large number of metaheuristic optimization algorithms (MOAs) have been proposed, some of which have been developed on the basis of natural phenomena [24], such as the ant colonial system algorithm, inspired by the feeding behavior of certain ant species, and Simulated Annealing (SA) with some metallurgical ideas [37, 11]. Metaheuristics is often used to find solutions of acceptable quality to difficult combinatorial optimization problems, especially NP-complete problems. A good example is the sequential ordering problem (SOP), which consists of finding a minimum weight of Hamiltonian paths on a directed graph with weights subject to priority restrictions between the nodes. Although MOAs are less time-consuming than the exact approaches, they differ in their efficiency, which can sometimes be improved by combining ideas from other MOAs. E-mail address: falra.widerjinski @ raindue.pl (01.7.jc)"}, {"heading": "1.1. Contributions", "text": "The proposed solution is simple to implement and does not increase the asymptotic complexity of the algorithms. In addition, we have developed a modified version of the SOP-3 Exchange Local Search (LS) algorithms, as proposed by Gambardella et al. [21] for the SOP. The modification, in turn, incorporates ideas from the SA to allow the algorithm to escape the local Optima. A thorough experimental evaluation of a number of SOP instances from known data sets confirms the efficiency of the proposed algorithms. In fact, in several cases we have obtained results of better quality than those from the state-of-the-art procedure in the literature [23, 26]. The work is organized as follows: Section 2 focuses on improving the efficiency of the ACS (and related algorithms), with some of the SOP-4 approach briefly describing the SOP convergence with the recently conducted SOP-3 convergence."}, {"heading": "2. Related work", "text": "Most of them relate to pheromone updating rules and parameter tuning. Hassani et al. [15] proposed a modified global pheromone updating rule for the ACS, in which not only the world's best but also all ants with inferior solutions could update the pheromone with a probability calculated according to the SA acceptance rule. [7] The initial temperature was arbitrarily set to 100 and an exponential cooling plan was applied. Limited computer experiments showed that in most cases the algorithm produced better results than the Ant system. Bouhafs et al. [8] proposed a two-phase approach based on the SA and ACS to solve the capacity location-routing problem. The SA was used to find facility locations, while the ACS was used to solve the appropriate location-routing problem. In most cases, the algorithm was the most capable of finding the best-known solutions to the ACO, and in most cases the jargon-based solutions to the ACO was used."}, {"heading": "2.1. Sequential Ordering Problem", "text": "In this context, it should be noted that this is not an individual case, but a case in which it is an individual case. In this case, it is an individual case in which it is an individual case. In this case, it is a case in which it is an individual case. In this case, it is a case in which a person is involved in another person. In this case, it is a case in which it is a person who is involved in another person."}, {"heading": "3. Improving ACS Convergence with Simulated Annealing", "text": "It is a population-based meta-heuristic algorithm that is often used to solve difficult combinatorial and continuous optimization problems. In general, it does not guarantee that the optimal solution will be found, but solutions that are often of good quality (for practical use). In ACO, a number of artificial agents (ants) will iteratively construct complete solutions to an optimization problem. An ant starts with an empty solution and in subsequent steps expands it with components that are selected from the set of all available components. Each component has an assigned pheromone pathway and a heuristic value. The higher product of pheromone concentration (value) and the heuristic value is the higher probability that they will communicate from ant.In nature, ants indirectly communicate with each other by depositing small amounts of chemical substances called pheromones."}, {"heading": "3.1. Enhanced ACS", "text": "The Enhanced ACS algorithm proposed by Gambardella et al. is an efficient metaheuristic for the SOP [22]. It differs from the ACS in two respects. The first is a modified solution phase that focuses much more on the best solution found so far. Only when the node is already part of the constructed solution, does the ant consider other nodes, i.e. it selects the node that follows the current node in the best solution (if the random number q is lower than the parameter q0). Only when the node is already part of the constructed solution, does it select the edge with the maximum pheromone product and heuristic values. If q q0 is used, the selection process from the ACS is used. The parameter q0 usually has a value of 0.9 or higher, hence this modification significantly accelerates the construction process, although it limits the exploration capability of the EACS."}, {"heading": "3.2. Simulated Annealing", "text": "Simulated annealing is one of the most well-known general metaheuristic optimization methods. It was inspired by the Monte Carlo method for sensing the states of a (physical) thermodynamic system. In the SA, a solution to the optimized problem corresponds to a state of the thermodynamic system, and its quality corresponds to the current energy of the system [39]. SA works as follows: Starting from an initial solution X0, a sequence of solutions (Xi), X-S is generated, with S representing a series of practicable solutions. In the face of a current solution Xi, a solution candidate Yi is generated and its cost C (Yi) is calculated. The next solution Xi + 1 is selected accordingly: Xi + 1 = Yi, if C (Yi) < C (Xi), Yi, with the probability pi, if C (Yi), a solution Xi (Xi) is reached, and the probability that the state Tilium is fast. (5) The probability pi = exponential (Yi) is most \u2212 C (Xi), where the temperature is similar to the physical one > i (C)."}, {"heading": "3.3. Combining ACS with Simulated Annealing", "text": "The ACS generally offers a better convergence speed than the Ant System or ACO [12]. This results, among other things, from the more exploitative solution construction process and the global pheromone update rule, which focuses on the best solution found so far. This usually speeds up the process of finding lower quality solutions, but also makes escaping local minima very difficult. Simulated annealing, on the other hand, offers a simple solution to escape from local minima. We suggest how to combine the ACS search process to maintain its exploitation orientation. The proposed algorithm, ACS with the ACS-SA in short form, can be summarized as follows. The ACS search process is guided (in part) by pheromone trace values. At the end of each iteration, the global pheromone update rule increases the values of the pheromone updates according to the components (edges) of the current best solution (global)."}, {"heading": "3.4. Combining Enhanced ACS with the SA", "text": "As described in paragraph 3.1, the EACS differs only slightly from the ACS. The differences are slight and concern the solution process and the LS application, so it is easy to apply exactly the same ideas to integrate the SA into the EACS as in the proposed ACS-SA algorithm. Due to its exploitative behavior (i.e. compared to the ACS), the EACS is even more vulnerable to being trapped in the local minimums, so it should also benefit from the SA component. The resulting algorithm is henceforth referred to as EACS-SA."}, {"heading": "4. Efficient Local Search for the SOP", "text": "Although ACS, MMAS and related algorithms compete with other nature-inspired metaheuristics, their convergence can be improved by a problem-specific local search [14]. In combination with the LS, the ACS is responsible for the search for a candidate solution, while the goal of the LS is to improve it through small changes that lead to a neighboring solution of better quality. In this section, we start with a description of the state-of-the-art LS heuristics for the SOP and later propose a modified version that includes the SA component."}, {"heading": "4.1. SOP-3-exchange", "text": "In fact, it is a very rare disease, and it is only a very rare disease."}, {"heading": "4.2. Improving SOP-3-exchange Efficiency with SA", "text": "The SOP-3 exchange LS is efficient in improving the solutions generated by the ants; however, the improvement process is greedy and only better (downhill) to be accepted. It makes it possible to achieve a local optimum quickly; but it also makes it impossible to find a better solution that would require at least an increase. Similar to our idea to include the SA in the ACS and EACS algorithms, we propose to include the SA decision-making process in the SOP-3 exchange in order to make it more exploratory. The proposed change is easy to implement, as it only needs to modify the greedy state to accept a given subpath exchange in the forward-looking search for a path-3 exchange (line 12 in Figure 5). The pseudo code of the proposed modification is presented in Fig. 6 The decision whether to accept the proposed move (subpath exchange) is based on the change."}, {"heading": "5. Computational Experiments", "text": "In the first part of the experiments, we focused on the efficiency of the alone used ACS-SA and EACS-SA, i.e. without the problem specific LS. In the second part, the focus was on the efficiency of the algorithms coupled with the SOP-3 exchange and SOP-3 exchange SA LS heuristics. ACS and EACS require the definition of a number of parameters. Based on preliminary calculations and suggestions from the literature, we used the following settings in our experiments: Number of ants, m = 10; \u03b2 = 0.5; \u0432 = 0.01 and \u03c1 = 0.1 and local or global pheromone evaporation ratio; q0 = n \u2212 20n, where n is the size of the problem. Calculations were repeated 30 times for each configuration of the parameter values and the problem."}, {"heading": "5.1. ACS-SA Parameter Tuning", "text": "The first part of the experiments focused on the behaviour of the ACS-SA algorithm as a function of the values of the SA-related parameters. The proposed ACS-SA algorithm uses a simple exponential cooling plan Tk = T0 \u00b7 \u03bbk, where \u03bb < 1 is the cooling factor and T0 is the initial temperature. Although the exponential cooling plan does not guarantee convergence to a global optimum, it has the advantage that it is easy to implement and often performs well in practice [31]. Preliminary calculations showed that the most important factor for the performance of the ACS-SA was the \u03bb parameter, which directly influences the rate of SA convergence, and the best performance was observed for short-term / longer runtimes, for which the probability of accepting poorer quality solutions and thus escaping local minimums remained relatively high for a long time."}, {"heading": "A \u2013 0.9970 1.0 0.3863 0.9740 0.9595 0.0004- 0.4397 0.0205+", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "B 0.9970 \u2013 0.9765 0.8856 1.0 1.0 0.0093- 0.9155 0.0010+", "text": "In fact, the \u03bb value could be calculated on the basis of the total number of iterations when used in practice [31]. A number of \"promising\" values were selected for a more thorough investigation, namely \u03bb = 0.999, 0.9995, 0.9999}. The initial temperature T0 was calculated for each problem instance during the initialization phase, so that the probability of accepting a worse solution (an upward trend) at the beginning is approximately the same as the specified probability (a parameter, independent of a problem instance). The mean difference between the successive solutions was estimated on the basis of a sample of randomly generated solutions, so that the probability of a worse solution (an upward trend step) at the beginning is roughly the same. In our experiments we looked at \u03b3 {0.1, 0.5, 0.9} which lead to a total number of 9 combinations of magnitudes. The algorithms were executed for a total of 14 SOP instances from the TSP53.5B, 53.5B, 53.3, 73.5B, 53.53.5B, 53.53.3, 3, 73.53.5B, 53.53.53.5B, 53.53.53.3."}, {"heading": "5.2. ACS-SA and EACS-SA Performance", "text": "The first experiment showed that the SA component actually had a significant impact on the convergence of the ACSSA search. In the subsequent experiment, we focused on a comparison between ACS-SA relative to the ACS. We also looked at the EACS and EACS combined with the SA (EACS-SA). Both ACS-SA and EACS-SA were selected with \u03bb = 0.9999 and = 0.1, based on the previous experiment. To make the comparison fair, all algorithms were executed with a time limit of 60 seconds of the CPU time. Although the limit was relatively low, it was sufficient to detect differences in the performance of the algorithms. A total of 20 SOP instances of different sizes emerged from the TSPLIB repository.The box plots of the mean solution error are clearly visible in Fig. 8 and Fig. 9. The differences between the quality of the solutions generated by the algorithms."}, {"heading": "5.3. SOP-3-exchange-SA Parameter Tuning", "text": "Similar to ACS-SA and EACS-SA, the SOP-3-exchange-SA algorithm has two additional SA-related parameters, \u03bbLS and \u03b3LS. Based on preliminary calculations, several values were selected for further investigation, namely \u03bbLS-3-exchange-SA, 0.95, 0.99} and GP-LS, {0.1, 0.5, 0.9}. All 12 combinations of parameter values were taken into account. For each combination, the EACS algorithm with SOP-3-exchange-SA was executed using a set of 14 size differences between 400 and 700 values selected from the SOPLIB2006 repository, namely: R.400.100.15, R.400.1000.15, R.400.1000.30, R.500.1000.15, R.7000.15, R.500.1000.15."}, {"heading": "5.4. Comparison of algorithms", "text": "The last part of the experiments concerned the performance of ACS, ACS-SA, EACS and EACSSA together with the LS algorithms, i.e. SOP-3-Exchange and SOP-3-Exchange-SA. This results in a total of 8 algorithm combinations. To make the comparison fair, the algorithms were executed with the same time limit of 120 seconds and the same parameters (where appropriate). The algorithms were applied to SOP instances (a total of 48) from the SOPLIB2006 repository [35]. It is worth pointing out that the EACS-3 stock exchange + 0.0000.00ltltltltltltltltltltlt.1 - & 000.000001 - & 000.0000000001 - & 000000000000001 - & 0000000000001 - & 000000000000001 - & 000000000000001 - & 00000000000000001 - & 000000000000001 - & 00000000000000001 - & 000000000000- & 000000000000- & 0000- & 000000- & 00000000- & 0000000000- & 000000000000- & 0000- & 00000000- & 00000000- & 000000000000- & 00000000- & 00000000- & 0000000000- & 00000000- & 0000- & 00000000000000- & 0000000000- & 00000000- & 0000000000- & 000000- & 00000000001 & 0000000000- & 00000000- & 000000000000- & 0000001 & 00000000001 & 000000001 & 0000000000000000- & 0000000000- & 000000000000001 & 00000000001 & 00000000000000- & 0000000000- & 000000000000- & 000000000000001 & 000000000000- & 00- & 0000000000"}, {"heading": "6. Summary", "text": "The Ant Colony System and especially its extended version (EACS) are competitive metaheuristics whose efficiency has been demonstrated in a number of cases [14, 21, 23]. Nevertheless, we have shown that the search process of the ACS and EACS captured algorithms can still be improved with ideas from Simulated Annealing. Specifically, instead of increasing pheromone values based on the current best solution, the proposed pheromone solution, based on the current best solution, is not necessarily the current best solution, as it is selected, as it is probabilistically selected using the Metropolis criterion from the SA. This change weakens the exploitative focus of the ACS and EACS, thereby increasing the chance of escaping the local optimism. Computational experiments on a number of SOP instances from the TSPLIB repository and subsequent statistical analyses have shown that in most cases the resulting ACS-SA are significantly better."}], "references": [{"title": "A hybrid particle swarm optimization approach for the sequential ordering problem", "author": ["Davide Anghinolfi", "Roberto Montemanni", "Massimo Paolucci", "Luca Maria Gambardella"], "venue": "Computers & OR,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2011}, {"title": "Hamiltonian path problems in the on-line optimization of flexible manufacturing systems", "author": ["Norbert Ascheuer"], "venue": "PhD thesis, Technische Universita\u0308t Berlin,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1995}, {"title": "Atiqullah. An efficient simple cooling schedule for simulated annealing", "author": ["M. Mir"], "venue": "Computational Science and Its Applications - ICCSA 2004, International Conference,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2004}, {"title": "Hybrid ant colony systems for course timetabling problems", "author": ["Masri Binti Ayob", "Ghaith M. Jaradat"], "venue": "In Proceedings of the 2nd Conference on Data Mining and Optimization,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Parallel-machine scheduling problems with sequencedependent setup times using an aco, {SA} and {VNS} hybrid algorithm", "author": ["J. Behnamian", "M. Zandieh", "S.M.T. Fatemi Ghomi"], "venue": "Expert Systems with Applications,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Fast algorithms for geometric traveling salesman problems", "author": ["Jon Louis Bentley"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1992}, {"title": "A combination of simulated annealing and ant colony system for the capacitated location-routing problem", "author": ["Lyamine Bouhafs", "Amir Hajjam", "Abder Koukam"], "venue": "Knowledge-Based Intelligent Information and Engineering Systems, 10th International Conference,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2006}, {"title": "Rough large deviation estimates for simulated annealing: Application to exponential schedules", "author": ["OLIVIER CATONI"], "venue": "The Annals of Probability,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1992}, {"title": "A hybrid ant colony system for vehicle routing problem with time windows", "author": ["Chia-Ho Chen", "Ching-Jung Ting"], "venue": "Journal of the Eastern Asia Society for Transportation Studies,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Solving the traveling salesman problem based on the genetic simulated annealing ant colony system with particle swarm optimization techniques", "author": ["Shyi-Ming Chen", "Chih-Yao Chien"], "venue": "Expert Syst. Appl.,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Implementing a parallel simulated annealing algorithm", "author": ["Zbigniew J. Czech", "Wojciech Mikanik", "Rafal Skinderowicz"], "venue": "Parallel Processing and Applied Mathematics, 8th International Conference,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "Ant colony system: a cooperative learning approach to the traveling salesman problem", "author": ["Marco Dorigo", "Luca Maria Gambardella"], "venue": "IEEE Trans. Evolutionary Computation,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1997}, {"title": "Ant system: optimization by a colony of cooperating agents", "author": ["Marco Dorigo", "Vittorio Maniezzo", "Alberto Colorni"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics, Part B,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1996}, {"title": "Ant colony optimization", "author": ["Marco Dorigo", "Thomas St\u00fctzle"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "A hybrid ant colony system approach for the capacitated vehicle routing problem and the capacitated vehicle routing problem with time windows", "author": ["Amir Hajjam El Hassani", "Abder Koukam", "Lyamine Bouhafs"], "venue": "INTECH Open Access Publisher,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "An inexact algorithm for the sequential ordering problem", "author": ["LF Escudero"], "venue": "European Journal of Operational Research,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1988}, {"title": "A lagrangian relax-and-cut approach for the sequential ordering problem with precedence relationships", "author": ["LF Escudero", "Monique Guignard", "Kavindra Malik"], "venue": "Annals of Operations Research,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1994}, {"title": "A lagrangian relax-and-cut approach for the sequential ordering problem with precedence relationships", "author": ["L.F. Escudero", "Monique Guignard", "Kavindra Malik"], "venue": "Annals of Operations Research,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1994}, {"title": "A less exploitative variation of the enhanced ant colony system applied to SOP", "author": ["Ahmed Ezzat", "Ashraf M. Abdelbar"], "venue": "In Proceedings of the IEEE Congress on Evolutionary Computation,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "A bare-bones ant colony optimization algorithm that performs competitively on the sequential ordering problem", "author": ["Ahmed Ezzat", "Ashraf M. Abdelbar", "Donald C. Wunsch II"], "venue": "Memetic Computing,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "An ant colony system hybridized with a new local search for the sequential ordering problem", "author": ["Luca Maria Gambardella", "Marco Dorigo"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2000}, {"title": "An enhanced ant colony system for the sequential ordering problem", "author": ["Luca Maria Gambardella", "Roberto Montemanni", "Dennis Weyland"], "venue": "Operations Research Proceedings", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "Coupling ant colony systems with strong local searches", "author": ["Luca Maria Gambardella", "Roberto Montemanni", "Dennis Weyland"], "venue": "European Journal of Operational Research,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}, {"title": "Handbook of metaheuristics, volume 57", "author": ["Fred W Glover", "Gary A Kochenberger"], "venue": "Springer Science & Business Media,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2006}, {"title": "On extended formulations for the precedence constrained asymmetric traveling salesman problem", "author": ["Luis Gouveia", "Pierre Pesneau"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2006}, {"title": "Load-dependent and precedence-based models for pickup and delivery problems", "author": ["Luis Gouveia", "Mario Ruthmair"], "venue": "Computers & OR,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2015}, {"title": "A cooperative parallel rollout algorithm for the sequential ordering problem", "author": ["Francesca Guerriero", "M. Mancini"], "venue": "Parallel Computing,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2003}, {"title": "An effective implementation of K-opt moves for the Lin-Kernighan TSP heuristic", "author": ["Keld Helsgaun"], "venue": "PhD thesis, Roskilde University. Department of Computer Science,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2006}, {"title": "Solving the sequential ordering problem with automatically generated lower bounds", "author": ["Istv\u00e1n T Hern\u00e1dv\u00f6lgyi"], "venue": "In Operations Research Proceedings", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2003}, {"title": "Nonparametric statistical methods", "author": ["Myles Hollander", "Douglas A Wolfe", "Eric Chicken"], "venue": null, "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2013}, {"title": "Simulated annealing: Practice versus theory", "author": ["Lester Ingber"], "venue": "Mathematical and computer modelling,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 1993}, {"title": "Hybrid ant systems for the dynamic facility layout problem", "author": ["Alan R. McKendall Jr.", "Jin Shang"], "venue": "Computers & OR,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2006}, {"title": "An efficient simulated annealing schedule", "author": ["Jimmy Lam"], "venue": "Yale University,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1988}, {"title": "A friedman-type rank test for main effects in a two-factor anova", "author": ["Gregory A Mack", "John H Skillings"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1980}, {"title": "A heuristic manipulation technique for the sequential ordering problem", "author": ["Roberto Montemanni", "D.H. Smith", "Luca Maria Gambardella"], "venue": "Computers & OR,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2008}, {"title": "A comparison of two exact algorithms for the sequential ordering problem", "author": ["Vassilis Papapanagiotou", "J Jamal", "Roberto Montemanni", "Ghassan Shobaki", "Luca Maria Gambardella"], "venue": "In Systems, Process and Control (ICSPC),", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2015}, {"title": "A survey on parallel ant colony optimization", "author": ["Mart\u00edn Pedemonte", "Sergio Nesmachnow", "H\u00e9ctor Cancela"], "venue": "Appl. Soft Comput.,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2011}, {"title": "Candidate set strategies for ant colony optimisation", "author": ["Marcus Randall", "James Montgomery"], "venue": "In Ant Algorithms, Third International Workshop,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2002}, {"title": "An efficient general cooling schedule for simulated annealing", "author": ["F Romeo", "Vincentelli Ak Sangiovanni", "Md Huang"], "venue": "PROCEEDING OF IEEE INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN,", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 1986}, {"title": "Handbook of parametric and nonparametric statistical procedures", "author": ["David J Sheskin"], "venue": null, "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2003}, {"title": "The gpu-based parallel ant colony system", "author": ["Rafal Skinderowicz"], "venue": "J. Parallel Distrib. Comput.,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2016}, {"title": "A hybrid simulated annealing approach to handle energy resource management considering an intensive use of electric vehicles", "author": ["Tiago Sousa", "Zita Vale", "Joao Paulo Carvalho", "Tiago Pinto", "Hugo Morais"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2014}, {"title": "A hybrid intrusion detection approach using ant colony system and simulated annealing (acs-sa)", "author": ["Guendouzi Wassila", "Boukra Abdelmadjid"], "venue": "In Proceedings of the International Conference on Intelligent Information Processing, Security and Advanced Communication,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2015}, {"title": "Combining the ant system algorithm and simulated annealing for 3d/2d fixed-outline floorplanning", "author": ["Qi Xu", "Song Chen", "Bin Li"], "venue": "Appl. Soft Comput.,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2016}], "referenceMentions": [{"referenceID": 23, "context": "In recent years, a large number of metaheuristic optimization algorithms (MOAs) has been proposed, and some of these were created based on inspiration drawn from natural phenomena [24].", "startOffset": 180, "endOffset": 184}, {"referenceID": 36, "context": "Examples of these are the Ant Colony System algorithm that was inspired by the foraging behavior of certain species of ants and Simulated Annealing (SA) with some ideas taken from metallurgy [37, 11].", "startOffset": 191, "endOffset": 199}, {"referenceID": 10, "context": "Examples of these are the Ant Colony System algorithm that was inspired by the foraging behavior of certain species of ants and Simulated Annealing (SA) with some ideas taken from metallurgy [37, 11].", "startOffset": 191, "endOffset": 199}, {"referenceID": 20, "context": "[21] for the SOP.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "In fact, in several cases we obtained results of a better quality than those from state-of-the-art methods in the literature [23, 26].", "startOffset": 125, "endOffset": 133}, {"referenceID": 25, "context": "In fact, in several cases we obtained results of a better quality than those from state-of-the-art methods in the literature [23, 26].", "startOffset": 125, "endOffset": 133}, {"referenceID": 14, "context": "[15] proposed a modified global pheromone update rule for the ACS in which not only the global best ant but also all ants with inferior solutions may update the pheromone with probability calculated according to the acceptance rule of the SA.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "[7] proposed a two-phase approach based on the SA and ACS to solve the Capacitated Location-Routing Problem.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] proposed a hybrid of the ACO, SA and Variable Neighborhood Search algorithms for solving parallel-machine scheduling problems.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "A successful combination of the ACS and the SA was proposed by Ayob and Jaradat [4] for solving course timetabling problems.", "startOffset": 80, "endOffset": 83}, {"referenceID": 42, "context": "The SA was again used as the LS for the ACS by Wassila and Boukra [43].", "startOffset": 66, "endOffset": 70}, {"referenceID": 8, "context": "Similarly, the SA played the role of an LS improving the results generated by the ants in the ACS solving the Vehicle Routing Problem with Time Windows [9].", "startOffset": 152, "endOffset": 155}, {"referenceID": 9, "context": "Chen and Chien [10] proposed a complex hybrid of four metaheuristics, namely of the Genetic Algorithm, SA, ACS, and the Particle Swarm Optimization, for solving the TSP.", "startOffset": 15, "endOffset": 19}, {"referenceID": 43, "context": "[44] the solutions generated by the ant system were later improved by the SA when solving the 3D/2D fixed-outline floor planning problem.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "McKendall and Shang [32] used the SA as the LS method in one of their Hybrid Ant System algorithms for solving the dynamic facility layout problem.", "startOffset": 20, "endOffset": 24}, {"referenceID": 41, "context": "Similarly, the solutions generated by the ACO were a starting point for the SA solving the problem of managing energy resources considering intensive use of electric vehicles [42].", "startOffset": 175, "endOffset": 179}, {"referenceID": 16, "context": "The goal is to minimize the total makespan [17].", "startOffset": 43, "endOffset": 47}, {"referenceID": 1, "context": "Other real-world problems that can be modeled as an instance of the SOP include the Single Vehicle Routing Problem with pick-up and delivery constraints or the routing of a stacker crane in an automatic storage system [2].", "startOffset": 218, "endOffset": 221}, {"referenceID": 28, "context": "On the other hand, the precedence constraints may limit the number of feasible solutions, which can be beneficial for the exact methods, such as the branch-and-cut [29].", "startOffset": 164, "endOffset": 168}, {"referenceID": 25, "context": "All of the SOP instances from the SOPLIB2006 repository with the largest relative number of precedence constraints (60%) were solved to optimality, whereas those in which the constraints concerned 15% percent of all edges remained unsolved [26].", "startOffset": 240, "endOffset": 244}, {"referenceID": 15, "context": "[16].", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "applied Lagrangian Relaxation to solve the SOP, which the authors called the Relax-and-Cut algorithm [18].", "startOffset": 101, "endOffset": 105}, {"referenceID": 28, "context": "proposed a branch-and-bound algorithm with the lower bounds obtained from homomorphic abstractions of the original states space [29].", "startOffset": 128, "endOffset": 132}, {"referenceID": 24, "context": "proposed a cutting plane algorithm with the SOP formulations involving additional exponential-sized sets of inequalities [25].", "startOffset": 121, "endOffset": 125}, {"referenceID": 25, "context": "Later, Guveia and Ruthmair solved to optimality several SOP instances from the SOPLIB2006 repository by using the branch-and-cut algorithms combined with several preprocessing methods, heuristics, and separation routines [26].", "startOffset": 221, "endOffset": 225}, {"referenceID": 26, "context": "Guerriero and Mancini proposed a parallel roll-out heuristic in which several threads simultaneously visit different portions of the solution space and periodically exchange information about the solutions found [27].", "startOffset": 212, "endOffset": 216}, {"referenceID": 20, "context": "proposed a combination of the Ant Colony System and a novel LS procedure called the SOP-3-exchange [21].", "startOffset": 99, "endOffset": 103}, {"referenceID": 34, "context": "added to the HAS-SOP a Heuristic Manipulation Technique which creates and adds artificial precedence constraints to the original problem [35].", "startOffset": 137, "endOffset": 141}, {"referenceID": 0, "context": "[1].", "startOffset": 0, "endOffset": 3}, {"referenceID": 20, "context": "The algorithm was able to improve many of the best results presented in [21, 35].", "startOffset": 72, "endOffset": 80}, {"referenceID": 34, "context": "The algorithm was able to improve many of the best results presented in [21, 35].", "startOffset": 72, "endOffset": 80}, {"referenceID": 21, "context": ", basing their findings on an analysis of the drawbacks of the HAS-SOP algorithm, proposed an improved ACS version called the Enhanced Ant Colony System (EACS) [22].", "startOffset": 160, "endOffset": 164}, {"referenceID": 0, "context": "[1] and to date remains one of the most efficient methods for solving the SOP.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "In general, it does not guarantee that the optimal solution will be found, but solutions that are found are often of good enough quality (for practical use) [14].", "startOffset": 157, "endOffset": 161}, {"referenceID": 11, "context": "pheromone trails is usually called a pheromone memory and plays a crucial role in the performance of the ACO family of algorithms [12, 14].", "startOffset": 130, "endOffset": 138}, {"referenceID": 13, "context": "pheromone trails is usually called a pheromone memory and plays a crucial role in the performance of the ACO family of algorithms [12, 14].", "startOffset": 130, "endOffset": 138}, {"referenceID": 12, "context": "[13].", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "In the ACS the ant located at node i selects a next node j according to a pseudo-random proportional rule [14]:", "startOffset": 106, "endOffset": 110}, {"referenceID": 13, "context": "9 and above) leads to good quality results in a shorter period of time as compared to the base ACO algorithm [14].", "startOffset": 109, "endOffset": 113}, {"referenceID": 20, "context": "2 [21].", "startOffset": 2, "endOffset": 6}, {"referenceID": 13, "context": "The global best solution is used during the global pheromone update because it leads to slightly better solutions than the iteration best solution [14].", "startOffset": 147, "endOffset": 151}, {"referenceID": 11, "context": "The size of the candidate set is usually in the range of 10 to 25 [12, 14].", "startOffset": 66, "endOffset": 74}, {"referenceID": 13, "context": "The size of the candidate set is usually in the range of 10 to 25 [12, 14].", "startOffset": 66, "endOffset": 74}, {"referenceID": 37, "context": "Randall and Montgomery [38] investigated the idea of dynamic candidate set updates for the TSP and the Quadratic Assignment Problem (QAP).", "startOffset": 23, "endOffset": 27}, {"referenceID": 21, "context": "is an efficient metaheuristic for the SOP [22].", "startOffset": 42, "endOffset": 46}, {"referenceID": 22, "context": "9 or higher, hence this modification significantly speeds up the construction process although it limits the exploration capability of the EACS, and without a strong LS, it achieves results of lower quality than the ACS [23].", "startOffset": 220, "endOffset": 224}, {"referenceID": 18, "context": "A slightly modified version of the EACS was proposed by Ezzat [19].", "startOffset": 62, "endOffset": 66}, {"referenceID": 19, "context": "adapted the EigenAnt algorithm to solve the SOP [20].", "startOffset": 48, "endOffset": 52}, {"referenceID": 38, "context": "In the SA, a solution to the optimized problem is equivalent to a state of the thermodynamic system, and its quality corresponds to the system\u2019s current energy [39].", "startOffset": 160, "endOffset": 164}, {"referenceID": 7, "context": "Nevertheless, it is useful in practice because it is easy to implement and often leads to good quality solutions if the computation time is limited [8].", "startOffset": 148, "endOffset": 151}, {"referenceID": 38, "context": "[39] and the efficient cooling schedule by Lam [33].", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[39] and the efficient cooling schedule by Lam [33].", "startOffset": 47, "endOffset": 51}, {"referenceID": 11, "context": "The ACS generally offers a better convergence speed than the Ant System or ACO [12].", "startOffset": 79, "endOffset": 83}, {"referenceID": 0, "context": "4 routeAnt(j)[1]\u2190 U{1,#nodes} // Start from randomly selected nodes", "startOffset": 13, "endOffset": 16}, {"referenceID": 0, "context": "13 local_pheromone_update(routeAnt(j)[#nodes], routeAnt(j)[1]) 14 end 15 local_best \u2190 select_best(routeAnt(1), routeAnt(2), .", "startOffset": 58, "endOffset": 61}, {"referenceID": 32, "context": "an adaptive cooling schedule by Lam [33], could be applied.", "startOffset": 36, "endOffset": 40}, {"referenceID": 2, "context": "In our work we applied the idea of an adaptive temperature calculation which was proposed in [3].", "startOffset": 93, "endOffset": 96}, {"referenceID": 13, "context": "Even though the ACS, MMAS and related algorithms perform competitively to other nature inspired metaheuristics their convergence can still be improved with a problem-specific local search [14].", "startOffset": 188, "endOffset": 192}, {"referenceID": 20, "context": "[21] proposed an efficient LS heuristic for the SOP called the SOP-3-exchange.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "This operation is usually called k-exchange, and the value of k can be fixed (typically 2 or 3) or can vary as in the Lin-Kernighan heuristic [28].", "startOffset": 142, "endOffset": 146}, {"referenceID": 20, "context": "Because the cost of a k-opt move should be calculated in a constant time an efficient implementation of the k-opt heuristic for the SOP should be restricted only to path-preserving exchanges [21].", "startOffset": 191, "endOffset": 195}, {"referenceID": 20, "context": "[21].", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] consists of forward and backward searches for feasible path-preserving-3-exchanges.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] proposed two additional changes to reduce the algorithm\u2019s computation time.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "This version was named OR-exchange [21].", "startOffset": 35, "endOffset": 39}, {"referenceID": 5, "context": "Don\u2019t look bits is a data structure that was proposed by Bentley [6] which works as follows.", "startOffset": 65, "endOffset": 68}, {"referenceID": 30, "context": "Although the exponential cooling schedule does not guarantee convergence to a global optimum, it has the advantage of being easy to implement and often performs well in practice [31].", "startOffset": 178, "endOffset": 182}, {"referenceID": 29, "context": "05 [30].", "startOffset": 3, "endOffset": 7}, {"referenceID": 30, "context": "In fact, the \u03bb value could be calculated based on the total number of iterations if used in practice [31].", "startOffset": 101, "endOffset": 105}, {"referenceID": 29, "context": "The proposed experimental design can be viewed as a two-way (two-factor) layout in which the main factor is the combination of \u03bb and \u03b3 values, while the second factor (also called a blocking factor) is the problem instance (13 instances in our case) [30].", "startOffset": 250, "endOffset": 254}, {"referenceID": 33, "context": "A suitable non-parametric (distribution-free) statistical test was proposed by Mack and Skillings and is an equivalent of a parametric two-way ANOVA [34].", "startOffset": 149, "endOffset": 153}, {"referenceID": 29, "context": "05 in our case) [30].", "startOffset": 16, "endOffset": 20}, {"referenceID": 29, "context": "Skillings [30, 34].", "startOffset": 10, "endOffset": 18}, {"referenceID": 33, "context": "Skillings [30, 34].", "startOffset": 10, "endOffset": 18}, {"referenceID": 39, "context": "05) [40].", "startOffset": 4, "endOffset": 8}, {"referenceID": 29, "context": "A post-hoc multiple comparison test by Mack and Skillings [30] was applied to find out for which values of the parameters the results were of better quality.", "startOffset": 58, "endOffset": 62}, {"referenceID": 34, "context": "The algorithms were run on SOP instances (48 in total) from the SOPLIB2006 repository [35].", "startOffset": 86, "endOffset": 90}, {"referenceID": 22, "context": "It is worth noting, that the EACS with the SOP-3-exchange is the current state-of-the-art metaheuristic for the SOP [23].", "startOffset": 116, "endOffset": 120}, {"referenceID": 29, "context": "05 [30].", "startOffset": 3, "endOffset": 7}, {"referenceID": 29, "context": "05 [30].", "startOffset": 3, "endOffset": 7}, {"referenceID": 29, "context": "Rejection of the null hypothesis allows us to apply a post-hoc test (also proposed by Mack and Skillings [30]) to perform a pairwise comparison of the algorithms.", "startOffset": 105, "endOffset": 109}, {"referenceID": 25, "context": "The table also contains the values of the best-known solutions; some of which were obtained by Gouveia and Ruthmair by using an exact method (branch-and-cut) [26] and by Papapanagiotou et al.", "startOffset": 158, "endOffset": 162}, {"referenceID": 35, "context": "[36], while the rest by metaheuristics, including the EACS with the SOP3-exchange [23].", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[36], while the rest by metaheuristics, including the EACS with the SOP3-exchange [23].", "startOffset": 82, "endOffset": 86}, {"referenceID": 34, "context": "Table 5: Sample mean and standard deviation values for the EACS and EACS-SA algorithms with the SOP-3exchange and SOP-3-exchange-SA LS heuristics obtained for the SOP instances from the SOPLIB2006 repository [35].", "startOffset": 208, "endOffset": 212}, {"referenceID": 34, "context": "Table 6: Best solution values obtained by the EACS and EACS-SA algorithms with the SOP-3-exchange and SOP3-exchange-SA LS heuristics for the SOP instances from the SOPLIB2006 repository [35].", "startOffset": 186, "endOffset": 190}, {"referenceID": 22, "context": "Instance Best known [23, 26, 36] EACS +SOP-3-exchange EACS +SOP-3-exchange-SA EACS-SA +SOP-3-exchange EACS-SA +SOP-3-exchange-SA", "startOffset": 20, "endOffset": 32}, {"referenceID": 25, "context": "Instance Best known [23, 26, 36] EACS +SOP-3-exchange EACS +SOP-3-exchange-SA EACS-SA +SOP-3-exchange EACS-SA +SOP-3-exchange-SA", "startOffset": 20, "endOffset": 32}, {"referenceID": 35, "context": "Instance Best known [23, 26, 36] EACS +SOP-3-exchange EACS +SOP-3-exchange-SA EACS-SA +SOP-3-exchange EACS-SA +SOP-3-exchange-SA", "startOffset": 20, "endOffset": 32}, {"referenceID": 13, "context": "The Ant Colony System and particularly its enhanced version (EACS) are competitive metaheuristics whose efficiency has been shown in a number of cases [14, 21, 23].", "startOffset": 151, "endOffset": 163}, {"referenceID": 20, "context": "The Ant Colony System and particularly its enhanced version (EACS) are competitive metaheuristics whose efficiency has been shown in a number of cases [14, 21, 23].", "startOffset": 151, "endOffset": 163}, {"referenceID": 22, "context": "The Ant Colony System and particularly its enhanced version (EACS) are competitive metaheuristics whose efficiency has been shown in a number of cases [14, 21, 23].", "startOffset": 151, "endOffset": 163}, {"referenceID": 22, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 25, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 35, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 22, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 25, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 35, "context": "Instance Best known [23, 26, 36] EACS + SOP-3-exchange (I) EACS-SA + SOP-3-exchange-SA (II) p-value Verdict I vs II Avg.", "startOffset": 20, "endOffset": 32}, {"referenceID": 20, "context": "Based on the same SA inspirations, we proposed an enhanced version of the state-of-the-art SOP-3-exchange heuristic by Gambardella [21].", "startOffset": 131, "endOffset": 135}, {"referenceID": 32, "context": "A good candidate seems to be the adaptive cooling schedule that was proposed by Lam [33], although it requires a complex parameter setting and a method of controlling how much the subsequent solutions differ from one another.", "startOffset": 84, "endOffset": 88}, {"referenceID": 40, "context": "The performance of the proposed algorithms in terms of computation time could also be improved with the help of parallel computations, as the ACS is susceptible to parallelization even with modern GPUs [41].", "startOffset": 202, "endOffset": 206}], "year": 2017, "abstractText": "It is not rare that the performance of one metaheuristic algorithm can be improved by incorporating ideas taken from another. In this article we present how Simulated Annealing (SA) can be used to improve the efficiency of the Ant Colony System (ACS) and Enhanced ACS when solving the Sequential Ordering Problem (SOP). Moreover, we show how the very same ideas can be applied to improve the convergence of a dedicated local search, i.e. the SOP-3-exchange algorithm. A statistical analysis of the proposed algorithms both in terms of finding suitable parameter values and the quality of the generated solutions is presented based on a series of computational experiments conducted on SOP instances from the well-known TSPLIB and SOPLIB2006 repositories. The proposed ACS-SA and EACS-SA algorithms often generate solutions of better quality than the ACS and EACS, respectively. Moreover, the EACS-SA algorithm combined with the proposed SOP-3-exchange-SA local search was able to find 10 new best solutions for the SOP instances from the SOPLIB2006 repository, thus improving the state-of-the-art results as known from the literature. Overall, the best known or improved solutions were found in 41 out of 48 cases.", "creator": "LaTeX with hyperref package"}}}