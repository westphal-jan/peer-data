{"id": "1705.04569", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-May-2017", "title": "Clingcon: The Next Generation", "abstract": "We present the third generation of the constraint answer set system clingcon, combining Answer Set Programming (ASP) with finite domain constraint processing (CP). While its predecessors rely on a black-box approach to hybrid solving by integrating the CP solver gecode, the new clingcon system pursues a lazy approach using dedicated constraint propagators to extend propagation in the underlying ASP solver clasp. No extension is needed for parsing and grounding clingcon's hybrid modeling language since both can be accommodated by the new generic theory handling capabilities of the ASP grounder gringo. As a whole, clingcon 3 is thus an extension of the ASP system clingo 5, which itself relies on the grounder gringo and the solver clasp. The new approach of clingcon offers a seamless integration of CP propagation into ASP solving that benefits from the whole spectrum of clasp's reasoning modes, including for instance multi-shot solving and advanced optimization techniques. This is accomplished by a lazy approach that unfolds the representation of constraints and adds it to that of the logic program only when needed. Although the unfolding is usually dictated by the constraint propagators during solving, it can already be partially (or even totally) done during preprocessing. Moreover, clingcon's constraint preprocessing and propagation incorporate several well established CP techniques that greatly improve its performance. We demonstrate this via an extensive empirical evaluation contrasting, first, the various techniques in the context of CSP solving and, second, the new clingcon system with other hybrid ASP systems. Under consideration in Theory and Practice of Logic Programming (TPLP)", "histories": [["v1", "Fri, 12 May 2017 13:57:31 GMT  (87kb)", "http://arxiv.org/abs/1705.04569v1", "Under consideration in Theory and Practice of Logic Programming (TPLP)"]], "COMMENTS": "Under consideration in Theory and Practice of Logic Programming (TPLP)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mutsunori banbara", "benjamin kaufmann", "max ostrowski", "torsten schaub"], "accepted": false, "id": "1705.04569"}, "pdf": {"name": "1705.04569.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Mutsunori Banbara", "Torsten Schaub", "Benjamin Kaufmann", "Max Ostrowski"], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 170 5.04 569v 1 [cs.A I] 1 2gramming (ASP) with finite domain constraint processing (CP) While its predecessors relied on a black box approach to the hybrid solution through the integration of the CP solver, the new clingcon system takes a lazy approach with dedicated constraint propagators to extend the propagation in the underlying ASP solver bracket. Overall, clingcon 3 is an extension of the ASP system clingo 5, which relies itself on the grounder gringo and the solver brackets. The new approach of clingcon processing provides a seamless integration of the CP propagation into the ASP solution, benefiting from the full spectrum of the multi-bracket argument module and the multi-bracket."}, {"heading": "1 Introduction", "text": "In fact, most of them are able to set out in search of a new home in which they can move, and in search of a new home in which they can find a new home."}, {"heading": "2 Formal Preliminaries", "text": "In Section 2.1 we start with a gentle introduction to CASP together with some auxiliary concepts. We then present the basics of the CDCL-based ASP solution and show in Section 2.2 how they extend to CASP solutions."}, {"heading": "2.1 Constraint Answer Set Programming", "text": "We believe that a logical program is a system in which there is a system of linear constraints. We consider linear CSPs in which Vis is a set of integral variables, D is a set of corresponding variable domains, and C is a set of linear constraints. However, a logical program P consists of rules of form6a0. We consider the logical program P1: a set of integral variables, D is a set of variable domains, and C is a set of linear constraints."}, {"heading": "2.2 Basics of ASP and CASP Solving", "text": "The basic idea of the CDCL-based ASP solution is to draw conclusions on the way in which they can be drawn in (1) of the Ta-A-A-A-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-B-"}, {"heading": "V \u2032 \u2286 V , and D\u2032 \u2286 D.", "text": "Then B is a solution of \"CP,\" \"C,\" \"C,\" \"C,\" \"C,\" \"B,\" \"V,\" \"V,\" \"D,\" \"CP,\" \"C,\" \"C,\" \"C,\" \"C,\" \"C,\" \"V,\" \"D,\" \"(B). This correspondence well reflects the basic idea of our approach. While the entire set of circulatory goods\" CP \"is treated as usual by the unsubstantiated distributor\" C, \"\" P, \"\" \"\" B, \"\" those that cover the CSP are between the explicit commodities, \"\" C, \"\" \"(V,\" D \") and the implicit ones distributed by the distributors\" C, \"\" C \"(B) and\" V \"(V\" V, \"D\")."}, {"heading": "3.1 Architecture", "text": "This year, it has come to the point where it is a reactionary project that is able to retaliate and retaliate."}, {"heading": "3.2 Language", "text": "In fact, it is such that most of them will be able to move into another world, in which they are able, in which they are able to integrate themselves, and in which they are able, in which they are able, in which they are able, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live"}, {"heading": "3.3 Algorithms", "text": "As already mentioned, clingcon takes a lazy approach to \"small constraints\" in order to benefit from the high performance of larger CDLs."}, {"heading": "3.4 Distinguished Features", "text": "After introducing the algorithmic framework of clingcon 3 = {18, \u2212 8, \u2212 2}, we are now describing some of its specific characteristics. Many of them aim to reduce the size of the domains and the number of variables, while others avoid special functionalities such as global constraints or multi-objective optimization via integer variables or their variables. If we refer below to the truth value of the atoms, we are looking at a partial mapping achieved by propagation and / or preprocessing. We will show how the order of the atoms of v can be represented as its variable v (Thibaut and Stuckey 2009). Consider the view \u2212 5v + 7 together with domain D (v) = {2, 4}. We will show how the order of the atoms of v are used to encode constraints on the view in clingcon. The view \u2212 5v + 7 has the following values in its image: g \u2212 13, \u2212 8, \u2212 2, \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 \u2212 2."}, {"heading": "3.5 Multi-Shot CASP Solving", "text": "As already mentioned, a major design goal of clingcon 3 is extremely useful in dynamic applications to transfer the functionality of clingo to the CASP solution. Multi-shot solving (Gebser et al. 2015) plays a central role in this, because it enables the introduction of a variety of justification methods. Specifically, the multi-shot solution is about solving ever-changing logic programs in an operational manner, which can be controlled by reactive procedures that respond to solving, for example, external changes or earlier approaches to solving. These reactions could result in the addition or withdrawal of rules that the operative approach can incorporate by leaving intact the pristine program parts within the solver. This avoids re-grounding and the benefits of heuristic scores and emergency learning via time.In order to extend the multi-shot solution to CASP, our propagators allow the addition and deletion of restrictions to capture the evolving SPs."}, {"heading": "4 Experiments", "text": "This year it is more than ever before."}, {"heading": "5 Discussion", "text": "This year, it is only a matter of time before such a process takes place."}], "references": [{"title": "Unsatisfiability-based optimization in clasp", "author": ["B. ANDRES", "B. KAUFMANN", "O. MATHEIS", "T. SCHAUB"], "venue": "See Dovier and Santos Costa (2012), 212\u2013221.", "citeRegEx": "ANDRES et al\\.,? 2012", "shortCiteRegEx": "ANDRES et al\\.", "year": 2012}, {"title": "Stable model semantics for founded bounds", "author": ["R. AZIZ", "G. CHU", "P. STUCKEY"], "venue": "Theory and Practice of Logic Programming 13, 4-5, 517\u2013532.", "citeRegEx": "AZIZ et al\\.,? 2013", "shortCiteRegEx": "AZIZ et al\\.", "year": 2013}, {"title": "Representing constraint satisfaction problems in answer set programming", "author": ["M. BALDUCCINI"], "venue": "Proceedings of the Second Workshop on Answer Set Programming and Other Computing Paradigms (ASPOCP\u201909), W. Faber and J. Lee, Eds. 16\u201330.", "citeRegEx": "BALDUCCINI,? 2009", "shortCiteRegEx": "BALDUCCINI", "year": 2009}, {"title": "Integration schemas for constraint answer set programming: a case study", "author": ["M. BALDUCCINI", "Y. LIERLER"], "venue": "Theory and Practice of Logic Programming 13.", "citeRegEx": "BALDUCCINI and LIERLER,? 2013", "shortCiteRegEx": "BALDUCCINI and LIERLER", "year": 2013}, {"title": "PDDL+ planning via constraint answer set programming", "author": ["M. BALDUCCINI", "D. MAGAZZENI", "M. MARATEA"], "venue": "CoRR abs/1609.00030.", "citeRegEx": "BALDUCCINI et al\\.,? 2016", "shortCiteRegEx": "BALDUCCINI et al\\.", "year": 2016}, {"title": "aspartame: Solving constraint satisfaction problems with answer set programming", "author": ["M. BANBARA", "M. GEBSER", "K. INOUE", "M. OSTROWSKI", "A. PEANO", "T. SCHAUB", "T. SOH", "N. TAMURA", "M. WEISE"], "venue": "Proceedings of the Thirteenth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR\u201915), F. Calimeri, G. Ianni, and M. Truszczy\u0144ski, Eds. Lecture Notes in Artificial Intelligence, vol. 9345. Springer-Verlag, 112\u2013126.", "citeRegEx": "BANBARA et al\\.,? 2015", "shortCiteRegEx": "BANBARA et al\\.", "year": 2015}, {"title": "Satisfiability modulo theories", "author": ["C. BARRETT", "R. SEBASTIANI", "S. SESHIA", "C. TINELLI"], "venue": "See Biere et al. (2009), Chapter 26, 825\u2013885.", "citeRegEx": "BARRETT et al\\.,? 2009", "shortCiteRegEx": "BARRETT et al\\.", "year": 2009}, {"title": "Towards an integration of answer set and constraint solving", "author": ["S. BASELICE", "P. BONATTI", "M. GELFOND"], "venue": "Proceedings of the Twenty-first International Conference on Logic Programming (ICLP\u201905), M. Gabbrielli and G. Gupta, Eds. Lecture Notes in Computer Science, vol. 3668. Springer-Verlag, 52\u201366.", "citeRegEx": "BASELICE et al\\.,? 2005", "shortCiteRegEx": "BASELICE et al\\.", "year": 2005}, {"title": "Handbook of Satisfiability", "author": ["A. BIERE", "M. HEULE", "H. VAN MAAREN", "T. WALSH", "Eds."], "venue": "Frontiers in Artificial Intelligence and Applications, vol. 185. IOS Press.", "citeRegEx": "BIERE et al\\.,? 2009", "shortCiteRegEx": "BIERE et al\\.", "year": 2009}, {"title": "Proceedings of the Twenty-fifth IEEE International Conference on Tools with Artificial Intelligence (ICTAI\u201913)", "author": ["A. BRODSKY", "Ed."], "venue": "IEEE Computer Society.", "citeRegEx": "BRODSKY and Ed.,? 2013", "shortCiteRegEx": "BRODSKY and Ed.", "year": 2013}, {"title": "An ASP semantics for default reasoning with constraints", "author": ["P. CABALAR", "R. KAMINSKI", "M. OSTROWSKI", "T. SCHAUB"], "venue": "Proceedings of the Twenty-fifth International Joint Conference on Artificial Intelligence (IJCAI\u201916), R. Kambhampati, Ed. IJCAI/AAAI Press, 1015\u20131021.", "citeRegEx": "CABALAR et al\\.,? 2016", "shortCiteRegEx": "CABALAR et al\\.", "year": 2016}, {"title": "Technical Communications of the Thirty-second International Conference on Logic Programming (ICLP\u201916)", "author": ["M. CARRO", "A. KING", "Eds."], "venue": "Vol. 52. Open Access Series in Informatics (OASIcs).", "citeRegEx": "CARRO et al\\.,? 2016", "shortCiteRegEx": "CARRO et al\\.", "year": 2016}, {"title": "Experimental results on the application of satisfiability algorithms", "author": ["J. CRAWFORD", "A. BAKER"], "venue": null, "citeRegEx": "CRAWFORD and BAKER,? \\Q1994\\E", "shortCiteRegEx": "CRAWFORD and BAKER", "year": 1994}, {"title": "A machine program for theorem-proving", "author": ["M. DAVIS", "G. LOGEMANN", "D. LOVELAND"], "venue": "Communications of the ACM 5, 394\u2013397.", "citeRegEx": "DAVIS et al\\.,? 1962", "shortCiteRegEx": "DAVIS et al\\.", "year": 1962}, {"title": "A computing procedure for quantification theory", "author": ["M. DAVIS", "H. PUTNAM"], "venue": "Journal of the ACM 7, 201\u2013215.", "citeRegEx": "DAVIS and PUTNAM,? 1960", "shortCiteRegEx": "DAVIS and PUTNAM", "year": 1960}, {"title": "Predicate logic as a modelling language: The IDP system", "author": ["B. DE CAT", "B. BOGAERTS", "M. BRUYNOOGHE", "M. DENECKER"], "venue": "CoRR abs/1401.6312.", "citeRegEx": "CAT et al\\.,? 2014", "shortCiteRegEx": "CAT et al\\.", "year": 2014}, {"title": "Model expansion in the presence of function symbols using constraint programming", "author": ["B. DE CAT", "B. BOGAERTS", "J. DEVRIENDT", "M. DENECKER"], "venue": "See Brodsky (2013), 1068\u20131075.", "citeRegEx": "CAT et al\\.,? 2013", "shortCiteRegEx": "CAT et al\\.", "year": 2013}, {"title": "Technical Communications of the Twenty-eighth International Conference on Logic Programming (ICLP\u201912)", "author": ["A. DOVIER", "V. SANTOS COSTA", "Eds."], "venue": "Vol. 17. Leibniz International Proceedings in Informatics (LIPIcs).", "citeRegEx": "DOVIER et al\\.,? 2012", "shortCiteRegEx": "DOVIER et al\\.", "year": 2012}, {"title": "Conflict-driven constraint answer set solving", "author": ["C. DRESCHER"], "venue": "Ph.D. thesis, Computer Science and Engineering, Faculty of Engineering, UNSW.", "citeRegEx": "DRESCHER,? 2015", "shortCiteRegEx": "DRESCHER", "year": 2015}, {"title": "A translational approach to constraint answer set solving", "author": ["C. DRESCHER", "T. WALSH"], "venue": "Theory and Practice of Logic Programming 10, 4-6, 465\u2013480.", "citeRegEx": "DRESCHER and WALSH,? 2010", "shortCiteRegEx": "DRESCHER and WALSH", "year": 2010}, {"title": "Answer set solving with lazy nogood generation", "author": ["C. DRESCHER", "T. WALSH"], "venue": "See Dovier and Santos Costa (2012), 188\u2013200.", "citeRegEx": "DRESCHER and WALSH,? 2012", "shortCiteRegEx": "DRESCHER and WALSH", "year": 2012}, {"title": "Conflict-driven ASP solving with external sources", "author": ["T. EITER", "M. FINK", "T. KRENNWALLNER", "C. REDL"], "venue": "Theory and Practice of Logic Programming 12, 4-5, 659\u2013679.", "citeRegEx": "EITER et al\\.,? 2012", "shortCiteRegEx": "EITER et al\\.", "year": 2012}, {"title": "Half reification and flattening", "author": ["T. FEYDY", "Z. SOMOGYI", "P. STUCKEY"], "venue": "Proceedings of the Seventeenth International Conference on Principles and Practice of Constraint Programming (CP\u201911), J. Lee, Ed. Lecture Notes in Computer Science, vol. 6876. Springer-Verlag, 286\u2013301.", "citeRegEx": "FEYDY et al\\.,? 2011", "shortCiteRegEx": "FEYDY et al\\.", "year": 2011}, {"title": "Theory solving made easy with clingo 5", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "M. OSTROWSKI", "T. SCHAUB", "P. WANKO"], "venue": "See Carro and King (2016), 2:1\u20132:15.", "citeRegEx": "GEBSER et al\\.,? 2016a", "shortCiteRegEx": "GEBSER et al\\.", "year": 2016}, {"title": "Theory solving made easy with clingo 5 (extended version)", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "M. OSTROWSKI", "T. SCHAUB", "P. WANKO"], "venue": "Available at http://www.cs.uni-potsdam.de/wv/publications/. Extended version of (Gebser et al. 2016a).", "citeRegEx": "GEBSER et al\\.,? 2016b", "shortCiteRegEx": "GEBSER et al\\.", "year": 2016}, {"title": "Multi-criteria optimization in answer set programming", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "T. SCHAUB"], "venue": "Technical Communications of the Twenty-seventh International Conference on Logic Programming (ICLP\u201911), J. Gallagher and M. Gelfond, Eds. Vol. 11. Leibniz International Proceedings in Informatics (LIPIcs), 1\u201310.", "citeRegEx": "GEBSER et al\\.,? 2011", "shortCiteRegEx": "GEBSER et al\\.", "year": 2011}, {"title": "Answer Set Solving in Practice", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "T. SCHAUB"], "venue": "Synthesis Lectures on Artificial Intelligence and Machine Learning. Morgan and Claypool Publishers.", "citeRegEx": "GEBSER et al\\.,? 2012", "shortCiteRegEx": "GEBSER et al\\.", "year": 2012}, {"title": "Clingo = ASP + control: Preliminary report", "author": ["M. GEBSER", "R. KAMINSKI", "B. KAUFMANN", "T. SCHAUB"], "venue": "Technical Communications of the Thirtieth International Conference on Logic Programming (ICLP\u201914), M. Leuschel and T. Schrijvers, Eds. Theory and Practice of Logic Programming, Online Supplement, vol. arXiv:1405.3694v1. Available at http://arxiv.org/abs/1405.3694v1.", "citeRegEx": "GEBSER et al\\.,? 2014", "shortCiteRegEx": "GEBSER et al\\.", "year": 2014}, {"title": "Ricochet robots reloaded: A casestudy in multi-shot ASP solving", "author": ["M. GEBSER", "R. KAMINSKI", "P. OBERMEIER", "T. SCHAUB"], "venue": "Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation: Essays Dedicated to Gerhard Brewka on the Occasion of His 60th Birthday, T. Eiter, H. Strass, M. Truszczy\u0144ski, and S. Woltran, Eds. Lecture Notes in Artificial Intelligence, vol. 9060. Springer-Verlag, 17\u201332.", "citeRegEx": "GEBSER et al\\.,? 2015", "shortCiteRegEx": "GEBSER et al\\.", "year": 2015}, {"title": "Conflict-driven answer set solving", "author": ["M. GEBSER", "B. KAUFMANN", "A. NEUMANN", "T. SCHAUB"], "venue": "Proceedings of the Twentieth International Joint Conference on Artificial Intelligence (IJCAI\u201907), M. Veloso, Ed. AAAI/MIT Press, 386\u2013392.", "citeRegEx": "GEBSER et al\\.,? 2007", "shortCiteRegEx": "GEBSER et al\\.", "year": 2007}, {"title": "Multi-threaded ASP solving with clasp", "author": ["M. GEBSER", "B. KAUFMANN", "T. SCHAUB"], "venue": "Theory and Practice of Logic Programming 12, 4-5, 525\u2013545.", "citeRegEx": "GEBSER et al\\.,? 2012", "shortCiteRegEx": "GEBSER et al\\.", "year": 2012}, {"title": "Constraint answer set solving", "author": ["M. GEBSER", "M. OSTROWSKI", "T. SCHAUB"], "venue": "Proceedings of the Twenty-fifth International Conference on Logic Programming (ICLP\u201909), P. Hill and D. Warren, Eds. Lecture Notes in Computer Science, vol. 5649. Springer-Verlag, 235\u2013249.", "citeRegEx": "GEBSER et al\\.,? 2009", "shortCiteRegEx": "GEBSER et al\\.", "year": 2009}, {"title": "Gecode: Generic constraint development environment", "author": ["GECODE TEAM."], "venue": "Available from http://www.gecode.org.", "citeRegEx": "TEAM.,? 2006", "shortCiteRegEx": "TEAM.", "year": 2006}, {"title": "The stable model semantics for logic programming", "author": ["M. GELFOND", "V. LIFSCHITZ"], "venue": "Proceedings of the Fifth International Conference and Symposium of Logic Programming (ICLP\u201988), R. Kowalski and K. Bowen, Eds. MIT Press, 1070\u20131080.", "citeRegEx": "GELFOND and LIFSCHITZ,? 1988", "shortCiteRegEx": "GELFOND and LIFSCHITZ", "year": 1988}, {"title": "Tight integration of non-ground answer set programming and satisfiability modulo theories", "author": ["T. JANHUNEN", "G. LIU", "I. NIEMEL\u00c4"], "venue": "Proceedings of the First Workshop on Grounding and Transformation for Theories with Variables (GTTV\u201911), P. Cabalar, D. Mitchell, D. Pearce, and E. Ternovska, Eds. 1\u201313.", "citeRegEx": "JANHUNEN et al\\.,? 2011", "shortCiteRegEx": "JANHUNEN et al\\.", "year": 2011}, {"title": "SMT-based constraint answer set solver EZSMT (system description)", "author": ["Y. LIERLER", "B. SUSMAN"], "venue": "See Carro and King (2016), 1:1\u20131:15.", "citeRegEx": "LIERLER and SUSMAN,? 2016", "shortCiteRegEx": "LIERLER and SUSMAN", "year": 2016}, {"title": "What is answer set programming? In Proceedings of the Twenty-third National Conference on Artificial Intelligence (AAAI\u201908), D", "author": ["V. LIFSCHITZ"], "venue": "Fox and C. Gomes, Eds. AAAI Press, 1594\u20131597.", "citeRegEx": "LIFSCHITZ,? 2008", "shortCiteRegEx": "LIFSCHITZ", "year": 2008}, {"title": "GRASP: A search algorithm for propositional satisfiability", "author": ["J. MARQUES-SILVA", "K. SAKALLAH"], "venue": "IEEE Transactions on Computers 48, 5, 506\u2013521.", "citeRegEx": "MARQUES.SILVA and SAKALLAH,? 1999", "shortCiteRegEx": "MARQUES.SILVA and SAKALLAH", "year": 1999}, {"title": "Integrating answer set reasoning with constraint solving techniques", "author": ["V. MELLARKOD", "M. GELFOND"], "venue": "Proceedings of the Ninth International Symposium on Functional and Logic Programming (FLOPS\u201908), J. Garrigue and M. Hermenegildo, Eds. Lecture Notes in Computer Science, vol. 4989. Springer-Verlag, 15\u201331.", "citeRegEx": "MELLARKOD and GELFOND,? 2008", "shortCiteRegEx": "MELLARKOD and GELFOND", "year": 2008}, {"title": "Integrating answer set programming and constraint logic programming", "author": ["V. MELLARKOD", "M. GELFOND", "Y. ZHANG"], "venue": "Annals of Mathematics and Artificial Intelligence 53, 1-4, 251\u2013287.", "citeRegEx": "MELLARKOD et al\\.,? 2008", "shortCiteRegEx": "MELLARKOD et al\\.", "year": 2008}, {"title": "Boolean equi-propagation for concise and efficient SAT encodings of combinatorial problems", "author": ["A. METODI", "M. CODISH", "P. STUCKEY"], "venue": "Journal of Artificial Intelligence Research 46, 303\u2013341.", "citeRegEx": "METODI et al\\.,? 2013", "shortCiteRegEx": "METODI et al\\.", "year": 2013}, {"title": "Propagation via lazy clause generation", "author": ["O. OHRIMENKO", "P. STUCKEY", "M. CODISH"], "venue": "Constraints 14, 3, 357\u2013391.", "citeRegEx": "OHRIMENKO et al\\.,? 2009", "shortCiteRegEx": "OHRIMENKO et al\\.", "year": 2009}, {"title": "Modern constraint answer set solving", "author": ["M. OSTROWSKI"], "venue": "Ph.D. thesis, University of Potsdam.", "citeRegEx": "OSTROWSKI,? 2017", "shortCiteRegEx": "OSTROWSKI", "year": 2017}, {"title": "ASP modulo CSP: The clingcon system", "author": ["M. OSTROWSKI", "T. SCHAUB"], "venue": "Theory and Practice of Logic Programming 12, 4-5, 485\u2013503.", "citeRegEx": "OSTROWSKI and SCHAUB,? 2012", "shortCiteRegEx": "OSTROWSKI and SCHAUB", "year": 2012}, {"title": "Handbook of Constraint Programming", "author": ["F. ROSSI", "P. VAN BEEK", "T. WALSH", "Eds."], "venue": "Elsevier Science.", "citeRegEx": "ROSSI et al\\.,? 2006", "shortCiteRegEx": "ROSSI et al\\.", "year": 2006}, {"title": "XML representation of constraint networks: Format XCSP 2.1", "author": ["O. ROUSSEL", "C. LECOUTRE"], "venue": "CoRR abs/0902.2362", "citeRegEx": "ROUSSEL and LECOUTRE,? \\Q2009\\E", "shortCiteRegEx": "ROUSSEL and LECOUTRE", "year": 2009}, {"title": "Views and iterators for generic constraint implementations", "author": ["C. SCHULTE", "G. TACK"], "venue": "Proceedings of the Eleventh International Conference on Principles and Practice of Constraint Programming (CP\u201905), P. van Beek, Ed. Lecture Notes in Computer Science, vol. 3709. Springer-Verlag, 118\u2013132.", "citeRegEx": "SCHULTE and TACK,? 2005", "shortCiteRegEx": "SCHULTE and TACK", "year": 2005}, {"title": "Extending and implementing the stable model semantics", "author": ["P. SIMONS", "I. NIEMEL\u00c4", "T. SOININEN"], "venue": "Artificial Intelligence 138, 1-2, 181\u2013234.", "citeRegEx": "SIMONS et al\\.,? 2002", "shortCiteRegEx": "SIMONS et al\\.", "year": 2002}, {"title": "A SAT-based method for solving the two-dimensional strip packing problem", "author": ["T. SOH", "K. INOUE", "N. TAMURA", "M. BANBARA", "H. NABESHIMA"], "venue": "Fundamenta Informaticae 102, 3-4, 467\u2013487.", "citeRegEx": "SOH et al\\.,? 2010", "shortCiteRegEx": "SOH et al\\.", "year": 2010}, {"title": "Compiling pseudo-boolean constraints to SAT with order encoding", "author": ["N. TAMURA", "M. BANBARA", "SOH", "T."], "venue": "See Brodsky (2013), 1020\u20131027.", "citeRegEx": "TAMURA et al\\.,? 2013", "shortCiteRegEx": "TAMURA et al\\.", "year": 2013}, {"title": "Compiling finite linear CSP into SAT", "author": ["N. TAMURA", "A. TAGA", "S. KITAGAWA", "M. BANBARA"], "venue": "Constraints 14, 2, 254\u2013272.", "citeRegEx": "TAMURA et al\\.,? 2009", "shortCiteRegEx": "TAMURA et al\\.", "year": 2009}, {"title": "Lazy clause generation reengineered", "author": ["F. THIBAUT", "P. STUCKEY"], "venue": "Proceedings of the Fifteenth International Conference on Principles and Practice of Constraint Programming (CP\u201909), I. Gent, Ed. Lecture Notes in Computer Science, vol. 5732. Springer-Verlag, 352\u2013366.", "citeRegEx": "THIBAUT and STUCKEY,? 2009", "shortCiteRegEx": "THIBAUT and STUCKEY", "year": 2009}, {"title": "Solving non-clausal formulas with DPLL search", "author": ["C. THIFFAULT", "F. BACCHUS", "T. WALSH"], "venue": "Proceedings of the Tenth International Conference on Principles and Practice of Constraint Programming (CP\u201904), M. Wallace, Ed. Lecture Notes in Computer Science, vol. 3258. Springer-Verlag, 663\u2013678.", "citeRegEx": "THIFFAULT et al\\.,? 2004", "shortCiteRegEx": "THIFFAULT et al\\.", "year": 2004}, {"title": "SAT versus CSP", "author": ["T. WALSH"], "venue": "Proceedings of the Sixth International Conference on Principles and Practice of Constraint Programming (CP\u201900), R. Dechter, Ed. Lecture Notes in Computer Science, vol. 1894. Springer-Verlag, 441\u2013456.", "citeRegEx": "WALSH,? 2000", "shortCiteRegEx": "WALSH", "year": 2000}, {"title": "Efficient conflict driven learning in a Boolean satisfiability solver", "author": ["L. ZHANG", "C. MADIGAN", "M. MOSKEWICZ", "S. MALIK"], "venue": "Proceedings of the International Conference on Computer-Aided Design (ICCAD\u201901). ACM Press, 279\u2013285.", "citeRegEx": "ZHANG et al\\.,? 2001", "shortCiteRegEx": "ZHANG et al\\.", "year": 2001}], "referenceMentions": [{"referenceID": 36, "context": "The shortcoming of Answer Set Programming (ASP; (Lifschitz 2008)) to succinctly represent variables over large numeric domains has led to the development of several systems enhancing ASP with capabilities for finite domain Constraint Processing (CP; (Rossi et al.", "startOffset": 48, "endOffset": 64}, {"referenceID": 44, "context": "The shortcoming of Answer Set Programming (ASP; (Lifschitz 2008)) to succinctly represent variables over large numeric domains has led to the development of several systems enhancing ASP with capabilities for finite domain Constraint Processing (CP; (Rossi et al. 2006)).", "startOffset": 250, "endOffset": 269}, {"referenceID": 7, "context": "Starting from the seminal work in (Baselice et al. 2005) and the consecutive development of traditional DPLL-style hybrid ASP solvers like adsolver (Mellarkod et al.", "startOffset": 34, "endOffset": 56}, {"referenceID": 39, "context": "2005) and the consecutive development of traditional DPLL-style hybrid ASP solvers like adsolver (Mellarkod et al. 2008), modern hybrid ASP solvers take advantage of CDCL-based solving technology (Marques-Silva and Sakallah 1999; Zhang et al.", "startOffset": 97, "endOffset": 120}, {"referenceID": 37, "context": "2008), modern hybrid ASP solvers take advantage of CDCL-based solving technology (Marques-Silva and Sakallah 1999; Zhang et al. 2001; Gebser et al. 2007) in different ways.", "startOffset": 81, "endOffset": 153}, {"referenceID": 54, "context": "2008), modern hybrid ASP solvers take advantage of CDCL-based solving technology (Marques-Silva and Sakallah 1999; Zhang et al. 2001; Gebser et al. 2007) in different ways.", "startOffset": 81, "endOffset": 153}, {"referenceID": 29, "context": "2008), modern hybrid ASP solvers take advantage of CDCL-based solving technology (Marques-Silva and Sakallah 1999; Zhang et al. 2001; Gebser et al. 2007) in different ways.", "startOffset": 81, "endOffset": 153}, {"referenceID": 3, "context": "Let us illustrate this by describing the approach of three representative Constraint Answer Set Programming (CASP; (Balduccini and Lierler 2013)) systems.", "startOffset": 115, "endOffset": 144}, {"referenceID": 14, "context": "1 Tracing back to the Davis-Putman-Logemann-Loveland procedure (Davis and Putnam 1960; Davis et al. 1962) 2 Standing for: Conflict-Driven Constraint Learning", "startOffset": 63, "endOffset": 105}, {"referenceID": 13, "context": "1 Tracing back to the Davis-Putman-Logemann-Loveland procedure (Davis and Putnam 1960; Davis et al. 1962) 2 Standing for: Conflict-Driven Constraint Learning", "startOffset": 63, "endOffset": 105}, {"referenceID": 6, "context": "A black-box approach is pursued in the two previous clingcon series where the ASP solver clasp is combined with the CP solver gecode (Gecode Team 2006) by following the lazy approach to SMTsolving (Barrett et al. 2009).", "startOffset": 197, "endOffset": 218}, {"referenceID": 5, "context": "A translation-based approach is pursued by the aspartame system (Banbara et al. 2015) where a CSP is fully translated into ASP and then solved by an ASP solver.", "startOffset": 64, "endOffset": 85}, {"referenceID": 50, "context": "This approach follows the one of the CP solver sugar (Tamura et al. 2009) translating CSPs to SAT (Biere et al.", "startOffset": 53, "endOffset": 73}, {"referenceID": 8, "context": "2009) translating CSPs to SAT (Biere et al. 2009).", "startOffset": 30, "endOffset": 49}, {"referenceID": 43, "context": "Also, the granularity induced by an explicit representation of integer variables provides more accurate conflict and propagation information, and approximations for reasons and conflicts as used in the former clingcon system (Ostrowski and Schaub 2012) are made obsolete.", "startOffset": 225, "endOffset": 252}, {"referenceID": 20, "context": "A lazy approach is pursued by the inca system (Drescher and Walsh 2012) where the ASP solver clasp is augmented with dedicated propagators for linear and selected global constraints by following the approach of lazy clause generation (Ohrimenko et al.", "startOffset": 46, "endOffset": 71}, {"referenceID": 41, "context": "A lazy approach is pursued by the inca system (Drescher and Walsh 2012) where the ASP solver clasp is augmented with dedicated propagators for linear and selected global constraints by following the approach of lazy clause generation (Ohrimenko et al. 2009).", "startOffset": 234, "endOffset": 257}, {"referenceID": 51, "context": "However, we take the approach of inca one step further by permitting lazy variable generation (Thibaut and Stuckey 2009) to unfold the vocabulary and the basic inference schemes of the order encoding only when needed.", "startOffset": 94, "endOffset": 120}, {"referenceID": 28, "context": "What is more, clingcon is not restricted to single-shot solving but fully blends in with clingo\u2019s multi-shot solving capabilities (Gebser et al. 2015).", "startOffset": 130, "endOffset": 150}, {"referenceID": 33, "context": "In ASP, the semantics of a logic program is given by its (constraint) stable models (Gelfond and Lifschitz 1988; Gebser et al. 2009).", "startOffset": 84, "endOffset": 132}, {"referenceID": 31, "context": "In ASP, the semantics of a logic program is given by its (constraint) stable models (Gelfond and Lifschitz 1988; Gebser et al. 2009).", "startOffset": 84, "endOffset": 132}, {"referenceID": 18, "context": "Following (Drescher 2015), we call (C, satC(C)) a configuration of (V , D,C).", "startOffset": 10, "endOffset": 25}, {"referenceID": 46, "context": "Following (Schulte and Tack 2005), a view on a variable x is an expression ax + b for integers a, b; its image is defined as img(ax + b) = {ax+ b | x \u2208 D(x)}.", "startOffset": 10, "endOffset": 33}, {"referenceID": 26, "context": "Our description of this approach follows the one given in (Gebser et al. 2012).", "startOffset": 58, "endOffset": 78}, {"referenceID": 26, "context": "Then, according to (Gebser et al. 2012), a set of atoms X is a stable model of a regular logic program P iffX = B \u2229 atom(P ) for a (unique) solutionB of\u2206P \u222a \u039bP .", "startOffset": 19, "endOffset": 39}, {"referenceID": 20, "context": "To address this issue, (Drescher and Walsh 2012) exempt constraint atoms from the respective sets of nogoods and define the variants\u2206P and \u039b C P by replacing atom(P ) in the qualification of (6) and (7) with atom(P ) \\ C.", "startOffset": 23, "endOffset": 48}, {"referenceID": 42, "context": "Then, in (Ostrowski 2017) it is shown that (X,C) is a constraint stable model of a program P wrt (V , D,C) as defined in (Gebser et al.", "startOffset": 9, "endOffset": 25}, {"referenceID": 31, "context": "Then, in (Ostrowski 2017) it is shown that (X,C) is a constraint stable model of a program P wrt (V , D,C) as defined in (Gebser et al. 2009) iff and X = B \u2229 atom(P ) for a (unique) solutionB of\u2206P \u222a \u039b C P \u222a {{Fc} | \u03b3(c) \u2208 satC(C)} \u222a {{Tc} | \u03b3(c) \u2208 satC(C)}.", "startOffset": 121, "endOffset": 141}, {"referenceID": 50, "context": "Similar to logic programs, linear constraints can be represented as sets of nogoods by means of an order encoding (Tamura et al. 2009).", "startOffset": 114, "endOffset": 134}, {"referenceID": 22, "context": "Following (Feydy et al. 2011), a reified constraint is an equivalence \u201cTc \u21d4", "startOffset": 10, "endOffset": 29}, {"referenceID": 23, "context": "(Gebser et al. 2016a)).", "startOffset": 0, "endOffset": 21}, {"referenceID": 50, "context": "Following (Tamura et al. 2009), we then define (av + b \u2264 0) as", "startOffset": 10, "endOffset": 30}, {"referenceID": 31, "context": "Then, (X,C) is a constraint stable model of P wrt (V , D,C) as defined in (Gebser et al. 2009) iff (C, satC(C)) is a configuration for (V , D,C), X = B \u2229 atom(P ) for a (unique) solution", "startOffset": 74, "endOffset": 94}, {"referenceID": 42, "context": "The proof of this theorem is obtained by combining existing characterizations of logic programs in terms of nogoods and similar ones for CSPs in terms of clauses in CNF (Ostrowski 2017).", "startOffset": 169, "endOffset": 185}, {"referenceID": 20, "context": "Following (Drescher and Walsh 2012), a propagator for a set \u0398 of nogoods is a function \u03a0\u0398 mapping a Boolean assignment B to a subset of \u0398 such that for each total assignment B: if \u03b4 \u2286 B for some \u03b4 \u2208 \u0398, then \u03b4 \u2286 B for some \u03b4 \u2208 \u03a0\u0398(B).", "startOffset": 10, "endOffset": 35}, {"referenceID": 24, "context": "The intermediate result of grounding a CASP program is expressed in the aspif format (Gebser et al. 2016b) that accommodates both the regular ASP part of the program as well as its constraint-based extension.", "startOffset": 85, "endOffset": 106}, {"referenceID": 26, "context": "This includes multi-threading (Gebser et al. 2012), unsatisfiable core techniques (Andres et al.", "startOffset": 30, "endOffset": 50}, {"referenceID": 0, "context": "2012), unsatisfiable core techniques (Andres et al. 2012), multi-criteria optimization (Gebser et al.", "startOffset": 37, "endOffset": 57}, {"referenceID": 25, "context": "2012), multi-criteria optimization (Gebser et al. 2011), domain-specific heuristics (Gebser et al.", "startOffset": 35, "endOffset": 55}, {"referenceID": 28, "context": "2013), multi-shot solving (Gebser et al. 2015), and clasp\u2019s reasoning modes like enumeration, intersection and union of models.", "startOffset": 26, "endOffset": 46}, {"referenceID": 23, "context": "As mentioned, the treatment of the extended input language of CASP programs can be mapped onto gringo\u2019s theory language capabilities (Gebser et al. 2016a).", "startOffset": 133, "endOffset": 154}, {"referenceID": 48, "context": "Before delving into further details, let us illustrate the resulting syntax by the CASP program for two dimensional strip packing given in Listing 2, originally due to (Soh et al. 2010).", "startOffset": 168, "endOffset": 185}, {"referenceID": 23, "context": "the interested reader for a general introduction to theory terms and atoms to (Gebser et al. 2016a).", "startOffset": 78, "endOffset": 99}, {"referenceID": 54, "context": "On the one hand, constraint propagators are usually slower than unit propagation, in particular, when dealing with sets of nogoods of moderate size because of modern SAT techniques such as the two-watched-literals scheme (Zhang et al. 2001).", "startOffset": 221, "endOffset": 240}, {"referenceID": 20, "context": "Our algorithmic approach follows the one in (Drescher and Walsh 2012), where a modified CDCL algorithm supporting external propagators is presented.", "startOffset": 44, "endOffset": 69}, {"referenceID": 51, "context": "A view av + b can be represented with the same set of order atoms as its variable v (Thibaut and Stuckey 2009).", "startOffset": 84, "endOffset": 110}, {"referenceID": 50, "context": "Due to the restriction to use variables, according solvers like sugar (Tamura et al. 2009) introduce auxiliary variables v i = 1000vi for 1 \u2264 i \u2264 5.", "startOffset": 70, "endOffset": 90}, {"referenceID": 40, "context": "Our approach to equivalence processing is inspired by Boolean Equipropagation (Metodi et al. 2013), which directly replaces the order atoms of one variable with the other.", "startOffset": 78, "endOffset": 98}, {"referenceID": 53, "context": "The second alternative uses a so-called direct encoding (Walsh 2000).", "startOffset": 56, "endOffset": 68}, {"referenceID": 47, "context": "Furthermore, we add a cardinality constraint (Simons et al. 2002) for each value d to the effect that no two or more variables may have the same value, viz.", "startOffset": 45, "endOffset": 65}, {"referenceID": 49, "context": "Sorting constraints by descending coefficients is known to avoid redundant nogoods in the translation process (Tamura et al. 2013).", "startOffset": 110, "endOffset": 130}, {"referenceID": 52, "context": "This technique is called Don\u2019t Care Propagation (Thiffault et al. 2004).", "startOffset": 48, "endOffset": 71}, {"referenceID": 0, "context": "By using nativeASP minimize statements, clingcon reuses clasp\u2019s branch and bound and unsatisfiable core based techniques (Andres et al. 2012).", "startOffset": 121, "endOffset": 141}, {"referenceID": 27, "context": "A central role in this is played by multi-shot solving (Gebser et al. 2014; Gebser et al. 2015) because it allows for casting manifold reasoning modes.", "startOffset": 55, "endOffset": 95}, {"referenceID": 28, "context": "A central role in this is played by multi-shot solving (Gebser et al. 2014; Gebser et al. 2015) because it allows for casting manifold reasoning modes.", "startOffset": 55, "endOffset": 95}, {"referenceID": 27, "context": "(Gebser et al. 2014)).", "startOffset": 0, "endOffset": 20}, {"referenceID": 27, "context": "Multi-shot solving in clingo relies on two directives (Gebser et al. 2014), the #program directive for regrouping rules and the #external directive for declaring atoms as being external to the program at hand.", "startOffset": 54, "endOffset": 74}, {"referenceID": 27, "context": "Although we reproduce the exemplary Python program from clingo\u2019s example pool in Listing 4, we must refer the reader to (Gebser et al. 2014) for further details.", "startOffset": 120, "endOffset": 140}, {"referenceID": 27, "context": "Listing 4 and (Gebser et al. 2014) for details).", "startOffset": 14, "endOffset": 34}, {"referenceID": 24, "context": "For making this benchmark suite available to the CASP community, we build a converter from flatzinc to the aspif format (Gebser et al. 2016b) used by clingcon; it is called fz2aspif.", "startOffset": 120, "endOffset": 141}, {"referenceID": 49, "context": "Sorting (D , SC ) As we cannot account for all combinations of sorting mechanisms, we evaluate this feature only on the cases discussed in (Tamura et al. 2013).", "startOffset": 139, "endOffset": 159}, {"referenceID": 49, "context": "The alternative sorting recommended in (Tamura et al. 2013) first sorts on larger coefficients and afterwards uses the smaller domain.", "startOffset": 39, "endOffset": 59}, {"referenceID": 19, "context": "\u2022 inca (Drescher and Walsh 2010) with the option --linear-bc, a lazy nogood generating system not supporting lazy variable generation.", "startOffset": 7, "endOffset": 32}, {"referenceID": 43, "context": "\u2022 clingcon 2 (Ostrowski and Schaub 2012), using gecode 3.", "startOffset": 13, "endOffset": 40}, {"referenceID": 3, "context": "24 (Balduccini and Lierler 2013), also pursuing a black-box approach but using CP solver B-Prolog 7.", "startOffset": 3, "endOffset": 32}, {"referenceID": 5, "context": "\u2022 aspartame (Banbara et al. 2015), a system using an eager translation of the constraint part by means of an ASP encoding.", "startOffset": 12, "endOffset": 33}, {"referenceID": 35, "context": "0 (Lierler and Susman 2016), translating CASP programs to SMT, solved by SMT solver z3 4.", "startOffset": 2, "endOffset": 27}, {"referenceID": 48, "context": "The first benchmark class is the two dimensional strip packing problem (Soh et al. 2010); its encoding is shown in Listing 2.", "startOffset": 71, "endOffset": 88}, {"referenceID": 5, "context": "For aspartame, we have taken an encoding provided in (Banbara et al. 2015).", "startOffset": 53, "endOffset": 74}, {"referenceID": 48, "context": "According to (Soh et al. 2010), these results are in accord with dedicated, state of the art systems.", "startOffset": 13, "endOffset": 30}, {"referenceID": 35, "context": "Encodings for clingo, ezcsp, ezsmt and clingcon 2 have been taken from (Lierler and Susman 2016) in combination with instances from the ASP competition.", "startOffset": 71, "endOffset": 96}, {"referenceID": 39, "context": "Groundbreaking work has been done with the systems ac- and adsolver (Mellarkod et al. 2008; Mellarkod and Gelfond 2008) by using an off-the-shelf CP solver.", "startOffset": 68, "endOffset": 119}, {"referenceID": 38, "context": "Groundbreaking work has been done with the systems ac- and adsolver (Mellarkod et al. 2008; Mellarkod and Gelfond 2008) by using an off-the-shelf CP solver.", "startOffset": 68, "endOffset": 119}, {"referenceID": 2, "context": "Still using a black-box CP solver but having a tighter integration into modern CDCL algorithms is common to systems like ezcsp and its extensions (Balduccini 2009; Balduccini and Lierler 2013), dlvhex (Eiter et al.", "startOffset": 146, "endOffset": 192}, {"referenceID": 3, "context": "Still using a black-box CP solver but having a tighter integration into modern CDCL algorithms is common to systems like ezcsp and its extensions (Balduccini 2009; Balduccini and Lierler 2013), dlvhex (Eiter et al.", "startOffset": 146, "endOffset": 192}, {"referenceID": 21, "context": "Still using a black-box CP solver but having a tighter integration into modern CDCL algorithms is common to systems like ezcsp and its extensions (Balduccini 2009; Balduccini and Lierler 2013), dlvhex (Eiter et al. 2012), and clingcon 2 (Gebser et al.", "startOffset": 201, "endOffset": 220}, {"referenceID": 31, "context": "2012), and clingcon 2 (Gebser et al. 2009).", "startOffset": 22, "endOffset": 42}, {"referenceID": 43, "context": "It strengthens propagation and integration (Ostrowski and Schaub 2012) by using filtering", "startOffset": 43, "endOffset": 70}, {"referenceID": 34, "context": "dingo (Janhunen et al. 2011) translates ASP enriched with difference constraints to SMT, ezsmt translates CASP to SMT, and aspartame (Banbara et al.", "startOffset": 6, "endOffset": 28}, {"referenceID": 5, "context": "2011) translates ASP enriched with difference constraints to SMT, ezsmt translates CASP to SMT, and aspartame (Banbara et al. 2015) provides an ASP encoding to translate CP (and CASP) into ASP.", "startOffset": 110, "endOffset": 131}, {"referenceID": 20, "context": "To overcome these problems, inca (Drescher and Walsh 2012) translates constraints on the fly, that is, it relies upon lazy nogood generation, which is strongly inspired by lazy clause generation (Ohrimenko et al.", "startOffset": 33, "endOffset": 58}, {"referenceID": 41, "context": "To overcome these problems, inca (Drescher and Walsh 2012) translates constraints on the fly, that is, it relies upon lazy nogood generation, which is strongly inspired by lazy clause generation (Ohrimenko et al. 2009).", "startOffset": 195, "endOffset": 218}, {"referenceID": 51, "context": "Lazy variable generation (Thibaut and Stuckey 2009) overcomes this problem and is a state of the art technique in CP.", "startOffset": 25, "endOffset": 51}, {"referenceID": 1, "context": "Its semantics has been extended in various ways, as for instance in bound foundedASP (Aziz et al. 2013) or default reasoning with constraints (Cabalar et al.", "startOffset": 85, "endOffset": 103}, {"referenceID": 10, "context": "2013) or default reasoning with constraints (Cabalar et al. 2016).", "startOffset": 44, "endOffset": 65}, {"referenceID": 0, "context": "We also preserved special functionalities of the ASP solver clasp in order to use unsatisfiable core techniques (Andres et al. 2012) and multi-criteria optimization (Gebser et al.", "startOffset": 112, "endOffset": 132}, {"referenceID": 25, "context": "2012) and multi-criteria optimization (Gebser et al. 2011) for integer variables.", "startOffset": 38, "endOffset": 58}, {"referenceID": 4, "context": "Furthermore, we want to use the ability to handle constraints over large domains to tackle complex planning problems (Balduccini et al. 2016).", "startOffset": 117, "endOffset": 141}], "year": 2017, "abstractText": "We present the third generation of the constraint answer set system clingcon, combining Answer Set Programming (ASP) with finite domain constraint processing (CP). While its predecessors rely on a black-box approach to hybrid solving by integrating the CP solver gecode, the new clingcon system pursues a lazy approach using dedicated constraint propagators to extend propagation in the underlying ASP solver clasp. No extension is needed for parsing and grounding clingcon\u2019s hybrid modeling language since both can be accommodated by the new generic theory handling capabilities of the ASP grounder gringo. As a whole, clingcon 3 is thus an extension of the ASP system clingo 5, which itself relies on the grounder gringo and the solver clasp. The new approach of clingcon offers a seamless integration of CP propagation into ASP solving that benefits from the whole spectrum of clasp\u2019s reasoning modes, including for instance multi-shot solving and advanced optimization techniques. This is accomplished by a lazy approach that unfolds the representation of constraints and adds it to that of the logic program only when needed. Although the unfolding is usually dictated by the constraint propagators during solving, it can already be partially (or even totally) done during preprocessing. Moreover, clingcon\u2019s constraint preprocessing and propagation incorporate several well established CP techniques that greatly improve its performance. We demonstrate this via an extensive empirical evaluation contrasting, first, the various techniques in the context of CSP solving and, second, the new clingcon system with other hybrid ASP systems.", "creator": "LaTeX with hyperref package"}}}