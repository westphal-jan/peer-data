{"id": "1705.05316", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-May-2017", "title": "Exploiting the Pruning Power of Strong Local Consistencies Through Parallelization", "abstract": "Local consistencies stronger than arc consistency have received a lot of attention since the early days of CSP research. %because of the strong pruning they can achieve. However, they have not been widely adopted by CSP solvers. This is because applying such consistencies can sometimes result in considerably smaller search tree sizes and therefore in important speed-ups, but in other cases the search space reduction may be small, causing severe run time penalties. Taking advantage of recent advances in parallelization, we propose a novel approach for the application of strong local consistencies (SLCs) that can improve their performance by largely preserving the speed-ups they offer in cases where they are successful, and eliminating the run time penalties in cases where they are unsuccessful. This approach is presented in the form of two search algorithms. Both algorithms consist of a master search process, which is a typical CSP solver, and a number of slave processes, with each one implementing a SLC method. The first algorithm runs the different SLCs synchronously at each node of the search tree explored in the master process, while the second one can run them asynchronously at different nodes of the search tree. Experimental results demonstrate the benefits of the proposed method.", "histories": [["v1", "Mon, 15 May 2017 16:28:00 GMT  (1544kb,D)", "http://arxiv.org/abs/1705.05316v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["minas dasygenis", "kostas stergiou"], "accepted": false, "id": "1705.05316"}, "pdf": {"name": "1705.05316.pdf", "metadata": {"source": "CRF", "title": "Exploiting the Pruning Power of Strong Local Consistencies Through Parallelization", "authors": ["Minas Dasygenis"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "This year, it has come to the point that there is only one time that there is such a process, in which there is such a process."}, {"heading": "2 Background", "text": "In fact, the majority of them are able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to move, to move, to move, to move, to move, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to fight, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move,"}, {"heading": "3 A Synchronous Algorithm", "text": "We will now describe our first search algorithm, which specifies the parallel application of different LCs. We assume that k LCs are available (LC1, LC2,..., LCk) and that LC1, i.e. the default propagation method of the solver, is AC. The search process of the solver, i.e. variable assignments, domain updates, backtracks and AC propagation, runs on a single thread (the main or master thread), which means that the search algorithm explores a single search tree. As we will explain, strong LCs are used to reduce the size of the search tree and thus speed up the solving process. Algorithm 1 describes a synchronous method for the parallel application of strong LCs. This method aims to exploit to a certain extent the filtering power that strong LCs provide, without slowing down the solver down."}, {"heading": "20 else", "text": "21 merge the value deletions of k LCs 22 break23, if there is no value left for xtree level, then 24 tree level \u2190 tree level - 1 / / BACKTRACK"}, {"heading": "25 else", "text": "26 Assign value a to xtree level 27 Tree level \u2190 Tree level + 1 / / GO FORWARD 28 Select the next variable xtree level 29 if tree level is 0 then 30 Return FAILURE"}, {"heading": "31 else", "text": "The parallel calls of the different LCs occur in lines 1-3 (pre-processing) and 14-16 (after each branching decision)."}, {"heading": "4 An Asynchronous Algorithm", "text": "The main difference with algorithm 1 is that LC algorithms executed on different processes are allowed to reach their fixed points and can be executed on different nodes of the search tree at the same time. In the following, we can use the filtering power of strong LCs to a larger Excel. In each call to any LCi, we run tree level as an argument: the level of the search tree in which the call is executed. Since LC1 is an AC, tree level 1 will always specify the current level of the search tree for the master process in which the search mechanism of the solver is run. There is also a variable status associated with any strong LCi. This variable can take values RUNNING and IDLE. If Statei = RUNNING then applies a process currently running DLei, then DLei is LCei."}, {"heading": "27 else break", "text": "28 if fail = TRUE then 29 tree level1 \u2190 BT level 30 domains are restored 31 for any LCi (tree leveli) (1 \u2264 i \u2264 k) s.t. statei = RUNNING and tree leveli \u2265 tree level1 do 32 stop the process of LCi 33 statei \u2190 IDLE"}, {"heading": "34 else", "text": "In fact, it is not that we are in a position to find a solution to this problem. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is not that we are in a position to find a solution. (...) It is that we are in a position to find a solution. (...). (...). (...). (...). (...). (...). (It is. (). (It is.). (It is. (). (It is. (). (It is. (). (It is.). (It is. (). (It is. (). (It is. (). (It is.). (It is. (It is.). (It is. (it is.). (it is. (it is.). (it is. (it is.). (it is.). (it is. (it is.). (it is. (it is.). (it is.). (it is. (it is.). (it is. (it is.). (it is. (it is.). (it is.). (it is. (it is. (it is.). (it is.). (it is. (it is.). (it is. (it is.). (it is.). (it is. (it is.). (it is. (it is. (it is.). (it is. (it is.). (it is.). (it is. (it is.). (it is.). (it is. (it is. (it is.). (it is.). (it is. (it is. (it is.). (it is.). (it is.). (it is. (it is."}, {"heading": "4.1 Extensions of the algorithms", "text": "One shortcoming of the algorithms described above is that only a fraction of the parallelization power that modern machines offer is used by them. This is because the algorithms dedicate a core to each individual LC, and realistically, there will be only a few LCs in each CSP solver. Even in the case of binary constraints, where a whole range of different LCs have been proposed, typical solvers contain only one basic propagation mechanism (e.g. AC) and perhaps one or two stronger methods such as SAC and maxRPC. We will briefly discuss two ideas, one for each algorithm that can be exploited to overcome this constraint, and we intend to implement and test them in the future."}, {"heading": "4.1.1 Sync", "text": "With respect to the Sync algorithm, the full potential of multithreading can be exploited using different dispersion queue arrangements, which can be generated by randomization, as we will explain. First, it is known that the order in which elements of the dispersion queue are processed (e.g. variables or constraints) has an impact on the CPU time that propagation takes. Balafoutis & Stergiou (2011); Boussemart et al. (2004); Wallace & Freuder (1992) have conducted a number of studies on this and a number of heuristics for efficiently arranging the dispersion queue elements, mainly in the case of Arc consistency. Of course, any other dispersion arrangement of the queue can lead to exactly the same values when the particular dispersion algorithm is executed for completion (i.e. until its fixed point is reached)."}, {"heading": "4.1.2 Async", "text": "Assuming that k-1 strong LC is available in addition to the default propagation mechanism, the Async algorithm will use at most k-threads as at any time during the search. One way to use all available threads is as follows: In line 19-21 of algorithm 2, instead of initiating the application only of those LCs whose state is IDLE, we can initiate the application of all LCs as long as available resources are available, which means that at any time during the search, the same LC can be executed on many different nodes of the search hit at the same time. Consider, for example, a case where only a strong LC is available (say, maxRPC). Async starts by applying AC and maxRPC at the root of the search tree. Once the AC algorithm is finished, and assuming that no DWO occurs, the search on the main thread will begin by assigning a variable x and executing the maxPC algorithm at the root at the same time."}, {"heading": "5 Experimental Results", "text": "This year it is more than ever before."}, {"heading": "6 Related Work", "text": "In fact, it is the case that most of them will be able to move into another world, in which they are able to put themselves into another world, in which they are able to move, in which they move, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they, in which they live, in which they, in which they live, in which they, in which they live, in which they, in which they are able to put themselves into another world, in which they are able to put themselves into another world, in which they are able to move, in which they are able to move, in which they live, in which they live, in which they live, in which they live in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live, in which they live,"}, {"heading": "7 Conclusions", "text": "We have presented two new ways to leverage the filtering power of strong LCs without paying a high CPU cost if they are not successful. Algorithm Sync applies strong LCs in parallel to the main propagation mechanism of the solver on each node of the search tree. LC algorithms are stopped as soon as the propagation on the main process is finished or when an LC algorithm detects an error. Algorithm Async can apply different LCs simultaneously on different nodes of the search tree, which can lead to non-chronological traceability of the main solver. Initial experimental results show the potential of our methods. We believe that the work presented here can open up numerous possibilities for parallelizing the propagation of restrictions. Another important contribution of this study is the further motivation of research into strong local consistencies and propagation methods."}], "references": [{"title": "Lazy clause exchange policy for parallel SAT solvers", "author": ["G. Audemard", "L. Simon"], "venue": "In Theory and Applications of Satisfiability Testing - SAT 2014 - 17th International Conference,", "citeRegEx": "Audemard and Simon,? \\Q2014\\E", "shortCiteRegEx": "Audemard and Simon", "year": 2014}, {"title": "New algorithms for max restricted path consistency, Constraints", "author": ["T. Balafoutis", "A. Paparrizou", "K. Stergiou", "T. Walsh"], "venue": null, "citeRegEx": "Balafoutis et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Balafoutis et al\\.", "year": 2011}, {"title": "Exploiting constraint weights for revision ordering in Arc Consistency Algorithms, ECAI-2008", "author": ["T. Balafoutis", "K. Stergiou"], "venue": "Workshop on Modeling and Solving Problems with Constraints,", "citeRegEx": "Balafoutis and Stergiou,? \\Q2008\\E", "shortCiteRegEx": "Balafoutis and Stergiou", "year": 2008}, {"title": "Improving Domain Filtering Using Restricted Path Consistency", "author": ["P. Berlandier"], "venue": "In Proceedings of IEEE CAIA\u201995,", "citeRegEx": "Berlandier,? \\Q1995\\E", "shortCiteRegEx": "Berlandier", "year": 1995}, {"title": "Efficient Algorithms for Singleton Arc Consistency, Constraints", "author": ["C. Bessiere", "S. Cardon", "R. Debruyne", "C. Lecoutre"], "venue": null, "citeRegEx": "Bessiere et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2011}, {"title": "Domain Filtering Consistencies for Nonbinary Constraints", "author": ["C. Bessiere", "K. Stergiou", "T. Walsh"], "venue": "Artificial Intelligence,", "citeRegEx": "Bessiere et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Bessiere et al\\.", "year": 2008}, {"title": "Experiments with Massively Parallel Constraint Solving", "author": ["L. Bordeaux", "Y. Hamadi", "H. Samulowitz"], "venue": "In Proceedings of IJCAI-2009,", "citeRegEx": "Bordeaux et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bordeaux et al\\.", "year": 2009}, {"title": "Revision ordering heuristics for the Constraint Satisfaction Problem, In CP\u201904", "author": ["F. Boussemart", "F. Hemery", "C. Lecoutre"], "venue": "Workshop on Constraint Propagation and Implementation,", "citeRegEx": "Boussemart et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Boussemart et al\\.", "year": 2004}, {"title": "Confidence-Based Work Stealing in Parallel Constraint Programming", "author": ["G. Chu", "C. Schulte", "P. Stuckey"], "venue": "In Proceedings of CP-2009,", "citeRegEx": "Chu et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Chu et al\\.", "year": 2009}, {"title": "Building Portfolios for Parallel Constraint Solving by Varying the Local Consistency Applied", "author": ["M. Dasygenis", "K. Stergiou"], "venue": "In Proceedings of ICTAI-2014,", "citeRegEx": "Dasygenis and Stergiou,? \\Q2014\\E", "shortCiteRegEx": "Dasygenis and Stergiou", "year": 2014}, {"title": "From restricted path consistency to max-restricted path consistency", "author": ["R. Debruyne", "C. Bessiere"], "venue": "In Proceedings of CP\u201997,", "citeRegEx": "Debruyne and Bessiere,? \\Q1997\\E", "shortCiteRegEx": "Debruyne and Bessiere", "year": 1997}, {"title": "Domain Filtering Consistencies", "author": ["R. Debruyne", "C. Bessiere"], "venue": "JAIR, 14:205\u2013", "citeRegEx": "Debruyne and Bessiere,? \\Q2001\\E", "shortCiteRegEx": "Debruyne and Bessiere", "year": 2001}, {"title": "Neighborhood Inverse Consistency Preprocessing", "author": ["E. Freuder", "C. Elfe"], "venue": "In Proceedings of AAAI\u201996,", "citeRegEx": "Freuder and Elfe,? \\Q1996\\E", "shortCiteRegEx": "Freuder and Elfe", "year": 1996}, {"title": "A preliminary review of literature on parallel constraint solving", "author": ["I. Gent", "C. Jefferson", "I. Miguel", "N. Moore", "P. Nightingale", "P. Prosser", "C. Unsworth"], "venue": "In PMCS\u201911 Workshop on Parallel Methods for Constraint Solving,", "citeRegEx": "Gent et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Gent et al\\.", "year": 2011}, {"title": "Scalable Distributed Depth-First Search with Greedy Work Stealing", "author": ["J. Jaffar", "A. Santosa", "R. Yap", "K. Zhu"], "venue": "In Proceedings of ICTAI-2004,", "citeRegEx": "Jaffar et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Jaffar et al\\.", "year": 2004}, {"title": "A filtering process for general constraint satisfaction problems: Achieving pairwise consistency using an associated binary representation", "author": ["P. Janssen", "P. J\u00e9gou", "B. Nouguier", "M.C. Vilarem"], "venue": "In Proceedings of IEEE Workshop on Tools for Artificial Intelligence,", "citeRegEx": "Janssen et al\\.,? \\Q1989\\E", "shortCiteRegEx": "Janssen et al\\.", "year": 1989}, {"title": "On the Consistency of General Constraint Satisfaction Problems", "author": ["P. J\u00e9gou"], "venue": "In Proceedings of AAAI\u201993,", "citeRegEx": "J\u00e9gou,? \\Q1993\\E", "shortCiteRegEx": "J\u00e9gou", "year": 1993}, {"title": "Incorporating Clause Learning in Grid-Based Randomized SAT Solving, JSAT", "author": ["A. Johannes Hyv\u00e4rinen", "T. Junttila", "I. Niemel\u00e4"], "venue": null, "citeRegEx": "Hyv\u00e4rinen et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Hyv\u00e4rinen et al\\.", "year": 2009}, {"title": "A first practical algorithm for high levels of relational consistency", "author": ["S. Karakashian", "R. Woodward", "C. Reeson", "B. Choueiry", "C. Bessiere"], "venue": "In Proceedings of AAAI-2010,", "citeRegEx": "Karakashian et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Karakashian et al\\.", "year": 2010}, {"title": "On the Parallel Complexity of Discrete Relaxation in Constraint Satisfaction", "author": ["S. Kasif"], "venue": "Networks, Artif. Intel.,", "citeRegEx": "Kasif,? \\Q1990\\E", "shortCiteRegEx": "Kasif", "year": 1990}, {"title": "Local Consistency in Parallel Constraint Satisfaction", "author": ["S. Kasif", "A. Delcher"], "venue": "Networks, Artif. Intel.,", "citeRegEx": "Kasif and Delcher,? \\Q1994\\E", "shortCiteRegEx": "Kasif and Delcher", "year": 1994}, {"title": "Second-order consistencies", "author": ["C. Lecoutre", "S. Cardon", "J. Vion"], "venue": "J. Artif. Int. Res.,", "citeRegEx": "Lecoutre et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Lecoutre et al\\.", "year": 2011}, {"title": "Transparent Parallelization of Constraint Programming", "author": ["L. Michel", "A. See", "P. Van Hentenryck"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "Michel et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Michel et al\\.", "year": 2009}, {"title": "A Distributed Arc-Consistency Algorithm", "author": ["T. Nguyen", "Y. Deville"], "venue": "Sci. Comput. Program.,", "citeRegEx": "Nguyen and Deville,? \\Q1998\\E", "shortCiteRegEx": "Nguyen and Deville", "year": 1998}, {"title": "Propagation via lazy clause generation, Constraints", "author": ["O. Ohrimenko", "P. Stuckey", "M. Codish"], "venue": null, "citeRegEx": "Ohrimenko et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ohrimenko et al\\.", "year": 2009}, {"title": "Search Procedures and Parallelism in Constraint Programming", "author": ["L. Perron"], "venue": "In Proceedings of CP-99,", "citeRegEx": "Perron,? \\Q1999\\E", "shortCiteRegEx": "Perron", "year": 1999}, {"title": "Hybrid Algorithms for the Constraint Satisfaction Problem", "author": ["P. Prosser"], "venue": "Computational Intelligence,", "citeRegEx": "Prosser,? \\Q1993\\E", "shortCiteRegEx": "Prosser", "year": 1993}, {"title": "Embarrassingly Parallel Search", "author": ["J.C. R\u00e9gin", "M. Rezgui", "A. Malapert"], "venue": "In Proceedings of CP-2013,", "citeRegEx": "R\u00e9gin et al\\.,? \\Q2013\\E", "shortCiteRegEx": "R\u00e9gin et al\\.", "year": 2013}, {"title": "Combining parallel search and parallel consistency in constraint programming", "author": ["C.C. Rolf", "K. Kuchcinski"], "venue": "In TRICS workshop at CP,", "citeRegEx": "Rolf and Kuchcinski,? \\Q2010\\E", "shortCiteRegEx": "Rolf and Kuchcinski", "year": 2010}, {"title": "Parallel Arc-Consistency for Functional Constraints, In Workshop on Implementation Technology for Programming Languages based on", "author": ["A. Ruiz-Andino", "L. Araujo", "F. Saenz", "J. Ruz"], "venue": null, "citeRegEx": "Ruiz.Andino et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Ruiz.Andino et al\\.", "year": 1998}, {"title": "On the Minimality and Global Consistency of Row-convex", "author": ["P. van Beek", "R. Dechter"], "venue": "Constraint Networks. JACM,", "citeRegEx": "Beek and Dechter,? \\Q1995\\E", "shortCiteRegEx": "Beek and Dechter", "year": 1995}, {"title": "Ordering heuristics for arc consistency algorithms, AI/GI/VI", "author": ["R. Wallace", "E. Freuder"], "venue": null, "citeRegEx": "Wallace and Freuder,? \\Q1992\\E", "shortCiteRegEx": "Wallace and Freuder", "year": 1992}, {"title": "Revisiting Neighborhood Inverse Consistency on Binary CSPs", "author": ["R. Woodward", "S. Karakashian", "B. Choueiry", "C. Bessiere"], "venue": "In Proceedings of CP-2012,", "citeRegEx": "Woodward et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Woodward et al\\.", "year": 2012}, {"title": "A Hybrid Paradigm for Adaptive Parallel Search", "author": ["X. Yun", "S. Epstein"], "venue": "In Proceedings of CP-2012,", "citeRegEx": "Yun and Epstein,? \\Q2012\\E", "shortCiteRegEx": "Yun and Epstein", "year": 2012}], "referenceMentions": [{"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.", "startOffset": 13, "endOffset": 31}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.", "startOffset": 13, "endOffset": 88}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al.", "startOffset": 13, "endOffset": 158}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al. (1989); J\u00e9gou (1993); Karakashian et al.", "startOffset": 13, "endOffset": 181}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al. (1989); J\u00e9gou (1993); Karakashian et al.", "startOffset": 13, "endOffset": 195}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al. (1989); J\u00e9gou (1993); Karakashian et al. (2010); Lecoutre et al.", "startOffset": 13, "endOffset": 222}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al. (1989); J\u00e9gou (1993); Karakashian et al. (2010); Lecoutre et al. (2011); van Beek & Dechter (1995)).", "startOffset": 13, "endOffset": 246}, {"referenceID": 2, "context": "the works by Berlandier (1995); Debruyne & Bessiere (1997, 2001); Freuder & Elfe (1996)) and non-binary constraints (e.g. the works by Bessiere at al. (2008); Janssen et al. (1989); J\u00e9gou (1993); Karakashian et al. (2010); Lecoutre et al. (2011); van Beek & Dechter (1995)).", "startOffset": 13, "endOffset": 273}, {"referenceID": 1, "context": "Despite the wealth of research on strong local consistencies, and the recent advances in algorithms for such consistencies made among others by Balafoutis et al. (2011); Bessiere et al.", "startOffset": 144, "endOffset": 169}, {"referenceID": 1, "context": "Despite the wealth of research on strong local consistencies, and the recent advances in algorithms for such consistencies made among others by Balafoutis et al. (2011); Bessiere et al. (2011); Woodward et al.", "startOffset": 144, "endOffset": 193}, {"referenceID": 1, "context": "Despite the wealth of research on strong local consistencies, and the recent advances in algorithms for such consistencies made among others by Balafoutis et al. (2011); Bessiere et al. (2011); Woodward et al. (2012), they have not been widely adopted by CSP solvers.", "startOffset": 144, "endOffset": 217}, {"referenceID": 25, "context": "CBJ by Prosser (1993)), and although backjumping had been neglected for quite a few years, it has recently gathered attention again through ideas such as lazy clause learning by Ohrimenko et al.", "startOffset": 7, "endOffset": 22}, {"referenceID": 24, "context": "CBJ by Prosser (1993)), and although backjumping had been neglected for quite a few years, it has recently gathered attention again through ideas such as lazy clause learning by Ohrimenko et al. (2009). As we will explain, one of the methods we propose allows for backjumps in a novel way by exploiting the pruning power of strong LCs and parallelization.", "startOffset": 178, "endOffset": 202}, {"referenceID": 7, "context": "There have been quite a few studies on this and a number of heuristics for efficiently ordering the elements of the queue, mainly in the case of arc consistency, have been proposed by Balafoutis & Stergiou (2011); Boussemart et al. (2004); Wallace & Freuder (1992).", "startOffset": 214, "endOffset": 239}, {"referenceID": 7, "context": "There have been quite a few studies on this and a number of heuristics for efficiently ordering the elements of the queue, mainly in the case of arc consistency, have been proposed by Balafoutis & Stergiou (2011); Boussemart et al. (2004); Wallace & Freuder (1992). Of course, any different ordering of the queue results in exactly the same value deletions if the particular propagation algorithm is run to completion (i.", "startOffset": 214, "endOffset": 265}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al.", "startOffset": 13, "endOffset": 36}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al.", "startOffset": 13, "endOffset": 48}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al.", "startOffset": 13, "endOffset": 70}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al.", "startOffset": 13, "endOffset": 92}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al.", "startOffset": 13, "endOffset": 107}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.", "startOffset": 13, "endOffset": 128}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al.", "startOffset": 13, "endOffset": 194}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al.", "startOffset": 13, "endOffset": 223}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al.", "startOffset": 13, "endOffset": 245}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.", "startOffset": 13, "endOffset": 270}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.", "startOffset": 13, "endOffset": 292}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al.", "startOffset": 13, "endOffset": 387}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al.", "startOffset": 13, "endOffset": 413}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990).", "startOffset": 13, "endOffset": 440}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990). Hence, this approach has not been explored as much as the other ones, and it is quite different to our work where each LC algorithm runs on a single processor.", "startOffset": 13, "endOffset": 657}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990). Hence, this approach has not been explored as much as the other ones, and it is quite different to our work where each LC algorithm runs on a single processor. Another common perception that has resulted in limited research on constraint propagation parallelization is that the scalability of this approach is limited by Amdahl\u2019s law: \u201dif propagation consumes 80% of the runtime, then by parallelizing it, even with a massive number of processors, the speed-up that can be obtained will be under 5\u201d, as Bordeaux et al. (2009) explains.", "startOffset": 13, "endOffset": 1184}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990). Hence, this approach has not been explored as much as the other ones, and it is quite different to our work where each LC algorithm runs on a single processor. Another common perception that has resulted in limited research on constraint propagation parallelization is that the scalability of this approach is limited by Amdahl\u2019s law: \u201dif propagation consumes 80% of the runtime, then by parallelizing it, even with a massive number of processors, the speed-up that can be obtained will be under 5\u201d, as Bordeaux et al. (2009) explains. Existing works on parallel constraint propagation have focused on AC and have either been purely theoretical, or any experiments that were conducted, e.g. by Ruiz-Andino et al. (1998) and Nguyen & Deville (2011) either failed to show significant speed-ups or were limited to very few processors.", "startOffset": 13, "endOffset": 1378}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990). Hence, this approach has not been explored as much as the other ones, and it is quite different to our work where each LC algorithm runs on a single processor. Another common perception that has resulted in limited research on constraint propagation parallelization is that the scalability of this approach is limited by Amdahl\u2019s law: \u201dif propagation consumes 80% of the runtime, then by parallelizing it, even with a massive number of processors, the speed-up that can be obtained will be under 5\u201d, as Bordeaux et al. (2009) explains. Existing works on parallel constraint propagation have focused on AC and have either been purely theoretical, or any experiments that were conducted, e.g. by Ruiz-Andino et al. (1998) and Nguyen & Deville (2011) either failed to show significant speed-ups or were limited to very few processors.", "startOffset": 13, "endOffset": 1406}, {"referenceID": 6, "context": "the works by Bordeaux et al. (2009); Chu (2009); Jaffar et al. (2004); Michel et al. (2009); Perron (1999); R\u00e9gin et al. (2013), and solver portfolios, e.g. the works by Audemard & Simon (2014); Dasygenis & Stergiou (2014); Hamadi et al. (2009); Hyv\u00e4rinen et al. (2009); Yun & Epstein (2012), and to a lesser extent, on the parallelization of propagation, e.g. the works by Kasif (1990); Rolf & Kuchcinski (2010); Ruiz-Andino et al. (1998). Regarding the latter direction, which is closer to our work, parallelizing constraint propagation algorithms is a challenging task since most such algorithms are sequential by nature, as demonstrated by Kasif (1990). Hence, this approach has not been explored as much as the other ones, and it is quite different to our work where each LC algorithm runs on a single processor. Another common perception that has resulted in limited research on constraint propagation parallelization is that the scalability of this approach is limited by Amdahl\u2019s law: \u201dif propagation consumes 80% of the runtime, then by parallelizing it, even with a massive number of processors, the speed-up that can be obtained will be under 5\u201d, as Bordeaux et al. (2009) explains. Existing works on parallel constraint propagation have focused on AC and have either been purely theoretical, or any experiments that were conducted, e.g. by Ruiz-Andino et al. (1998) and Nguyen & Deville (2011) either failed to show significant speed-ups or were limited to very few processors. Rolf & Kuchcinski (2010) consider the parallelization of a modern CP solvers\u2019 constraint propagation engine and shows that problems with a large number of (expensive to propagate) global constraints can benefit from parallelization of the propagation mechanism.", "startOffset": 13, "endOffset": 1515}], "year": 2017, "abstractText": "Local consistencies stronger than arc consistency have received a lot of attention since the early days of CSP research. However, they have not been widely adopted by CSP solvers. This is because applying such consistencies can sometimes result in considerably smaller search tree sizes and therefore in important speed-ups, but in other cases the search space reduction may be small, causing severe run time penalties. Taking advantage of recent advances in parallelization, we propose a novel approach for the application of strong local consistencies (SLCs) that can improve their performance by largely preserving the speed-ups they offer in cases where they are successful, and eliminating the run time penalties in cases where they are unsuccessful. This approach is presented in the form of two search algorithms. Both algorithms consist of a master search process, which is a typical CSP solver, and a number of slave processes, with each one implementing a SLC method. The first algorithm runs the different SLCs synchronously at each node of the search tree explored in the master process, while the second one can run them asynchronously at different nodes of the search tree. Experimental results demonstrate the benefits of the proposed method.", "creator": "LaTeX with hyperref package"}}}