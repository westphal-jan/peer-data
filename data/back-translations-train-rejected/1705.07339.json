{"id": "1705.07339", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-May-2017", "title": "Combining tabu search and graph reduction to solve the maximum balanced biclique problem", "abstract": "The Maximum Balanced Biclique Problem is a well-known graph model with relevant applications in diverse domains. This paper introduces a novel algorithm, which combines an effective constraint-based tabu search procedure and two dedicated graph reduction techniques. We verify the effectiveness of the algorithm on 30 classical random benchmark graphs and 25 very large real-life sparse graphs from the popular Koblenz Network Collection (KONECT). The results show that the algorithm improves the best-known results (new lower bounds) for 10 classical benchmarks and obtains the optimal solutions for 14 KONECT instances.", "histories": [["v1", "Sat, 20 May 2017 17:47:31 GMT  (109kb)", "http://arxiv.org/abs/1705.07339v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yi zhou", "jin-kao hao"], "accepted": false, "id": "1705.07339"}, "pdf": {"name": "1705.07339.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Yi Zhou", "Jin-Kao Hao"], "emails": ["zhou@info.univ-angers.fr", "jin-kao.hao@univ-angers.fr"], "sections": [{"heading": null, "text": "ar Xiv: 170 5.07 339v 1 [cs.A I] 2 0M ayThe Maximum Balanced Biclique Problem is a well-known graph model with relevant applications in various fields. In this paper, a novel algorithm is presented that combines an effective constraint-based taboo search method and two special graph reduction techniques. We verify the effectiveness of the algorithm using 30 classic random benchmark diagrams and 25 very large real, sparse diagrams from the popular Koblenz network collection (KONECT). The results show that the algorithm improves the most known results (new lower limits) for 10 classic benchmarks and obtains optimal solutions for 14 KONECT instances. Keywords: heuristics; click problems; graph reduction; taboo search; large graphs."}, {"heading": "1. Introduction", "text": "Considering a bipartite diagram G = (U, V, E) with two approximate vertex sets U, V and an edge set E (U, V, V).Considering that the maximum number of vertices X (X, Y) triggered by the number of vertices X and Y is a complete bipartite diagram. Considering this, (X, Y) is then called a balanced biclique. In other words, the subgraphic diagram triggered by the number of vertices X and Y is a complete bipartite diagram. Considering this, the Maximum Biclique Problem (MBBP) is the search for a balanced biclique (X, Y) of the maximum cardinality of G (X, Y) is called the maximum balanced biclique of size (X, Y)."}, {"heading": "2. Preliminary definitions", "text": "If G = (U, V, E) is a graph divided into two parts, we introduce the following notations and definitions required to describe the proposed approach. - If v (U) is a graph divided into two parts, N (v) denotes a series of vertices adjacent to v, i.e., N (S) is a balanced subset of vertices adjacent to (U) two (U), then N (v) V (U) V, N (S) is a balanced subset of vertices of (U)\\ S adjacent to at least one vertice in S, i.e., N (S) = (i) SN (i) V, N (S) is a balanced subset of Y (U)."}, {"heading": "3. Tabu search with graph reduction", "text": "In this section, we present our proposed TSGR-MBBP algorithm to solve the maximum balanced Biclique problem. TSGR-MBBP is based on the well-known taboo search metaheuristics (Glover & Laguna, 1997), which is specifically adapted to the MBBP problem. As the taboo search is a general method, it is crucial to find a suitable adaptation of the method to the problem under consideration (e.g. (D\u0131'az et al., 2017; Elhedhli et al., 2014; Ma et al., 2017). For our MBBP problem, we proposed the restriction-based taboo search (Section 3.4), which is capable of effectively exploring the search space of slightly unbalanced bicliques. To help the taboo search avoid unpromising search regions, we introduce two graph-based reduction techniques to reduce the given graphs by step (3.6 and 3.5)."}, {"heading": "3.1. Rationale of the proposed approach", "text": "Many real-life networks have millions or even billions of vertices with very low edge density. Existing approaches to solving MBBP rely heavily on complement and adjacent matrix representation. Unfortunately, adding such a massive graph usually results in very high memory consumption, making most existing MBBP approaches impractical. To avoid this difficulty, the proposed algorithm works directly on the given graph, which implies that much less memory is needed to process very large, sparse networks in real life. From an algorithmic perspective, our algorithm seeks iteratively improved solutions through local search combined with graph reduction strategies. Specifically, the algorithm starts from an initial solution (a slightly relaxed balanced biclique) and uses move operators to iteratively improve the solution. Nevertheless, we need to answer a crucial question: how to effectively improve the solution while retaining the two main constraints (ions)."}, {"heading": "3.2. General procedure", "text": "On the basis of the reasoning presented in Section 3.1, we perform Tabu Search with Graph Reduction for MBBP (TSGR-MBBP) (balanced reduction) (balanced reduction) (TSGR-MBBP) (algorithm 1). TSGR-MBBP is an iterated two-phase algorithm with two main components: the Constraint-Based Tabu Search (CBTS) procedure and the Chart Reducing procedure. The CBTS procedure is used to find high-quality bicliques in the relaxed search space (lines 2 and 3), while the Chart Reducing procedure progressively aims at shrinkage without losing optimal solutions.After setting the best biclique (Xb, Y b) procedure to (\u2205) and the best balanced size to 0 (lines 2 and 3), the algorithm is achieved to shrink (stop-4)."}, {"heading": "3.3. Construct random initial solutions", "text": "The random init solution () is used to initialize each restart of TSGR-MBBP with a new biclique. This procedure assumes a trivial solution formed by a random vertex of the set X or Y, which is necessarily connected to all vertices of the other set. Specifically, in the first iteration, a vertex is randomly selected from the number of candidates by adding a vertex v to the set X or Y, with the candidate necessarily attached to all vertices of the other set. Specifically, in the first iteration, a vertex is selected from the number of candidates by adding the number i-XN-i-Y-X-X. The procedure continues until the current candidate set is empty. The temporal complexity of this procedure is limited by O (U-V-V-E)."}, {"heading": "3.4. Constraint-Based Tabu Search", "text": "The CBTS procedure (algorithm 2) is the most important search component of the proposed algorithm. The CBTS iteratively transforms the current solution (biclique) into a neighboring solution, respecting the imbalance limit of 2. The parameter L (a positive integer) is called the taboo search depth, which defines the total number of iterations of the taboo search. The other parameter, \u03b1-R + precision {0}, is a taboo tenure coefficient (see Section 3.4.2). In each iteration, the CBTS applies the \"push\" operator (lines 5-14, see Section 3.4.1), which either adds a vertex of the biclique to the current solution or swaps a vertex of the biclique for a vertex outside the biclique. If the balance deviation exceeds 2 after applying the \"push,\" a repair process is performed to restore the equilibrium of the current biclique (see lines 23-4.15)."}, {"heading": "3.4.1. The push operator", "text": "The \"push\" operator was first proposed for the maximum weight problem (Zhou et al., 2017), where each application of the \"push\" adds a vertex (taken from a candidate) in the clique and expels it from the clique in order to maintain the feasibility of the transformed clique. (In the context of MBBP, a \"push\" operator is chosen (X, Y) with X U and Y V, and without loss of generality, assuming that a vertex v N (Y)\\ X (i.e., N (Y)\\ X)\\ X is the candidate for \"push.\" The \"push\" operator adds Vertex v to X and expels from Y associations that are not adjacent to v. Let (X, Y), denotes the new biclique after the \"push\" operation, then we represent this transformation by (X, Y)."}, {"heading": "3.4.2. Explore the neighbor solutions", "text": "The general \"push\" operator applied to MBBP can insert an arbitrary vertex from the candidate list N (X-Y) into a group X or Y (\"X-X\") and then expose p-0 vertices from the other group. However, for the sake of computational efficiency, only a subset of N (X-Y) is considered for each \"push\" operation. These constraints lead exactly to the two cases introduced at the end of section 3.4.1, so that it adds a vertex to the current solution and at the same time does not remove more than one vertex from the current solution. These constraints lead exactly to the two cases introduced at the end of section 3.4.1. In Algorithm 2, sentence C (line 5) includes the constrained candidate vertibles for \"push.\" Each vertex in C is adjacent to all vertices of X (or Y), or all other vertices of X (or Y)."}, {"heading": "3.4.3. Recover biclique balance", "text": "Remember that with the constraints on candidate vertices, the number of vertices indicated by \"push\" in each iteration is either zero or one. Consequently, it is impossible to strictly balance the biclique with an application of the \"push\" operator. Consequently, each time the balance deviation of the solution is greater than 2, we restore the balance property by applying a repair procedure (lines 15-23). In this repair procedure, vertices are simply removed from the larger sentence (X or Y) of the biclique until the solution is strictly balanced (as (X, Y) \"(u) fall (lines 18 and 22). Again, any falling vertice u is forbidden to join the solution during the period specified by its taboo deviation (tt (T, | X |) when u, tt (Z, | Y) (u)."}, {"heading": "3.4.4. Time complexity", "text": "The CBTS works directly on the input graph and uses the adjacent list representation to store the graph. In view of a solution (X, Y), the time complexity of the construction of Cexpand and Cplateau is limited by O (| N (X-Y) |). The time complexity of the displacement of a vertex (outside the solution or into the solution) is limited by O (M = maxv \u00b2 U \u00b2 V (V) |}. Therefore, the time complexity of an iteration in CBTS is limited by O (| N (X-Y)."}, {"heading": "3.6. Reduction by exact search", "text": "Accurate search algorithms guarantee the optimality of the solution found, but may require prohibitive computational time for large instances. However, since exact search algorithms are able to quickly prove optimality for small graphs, they can still be used as a basis for reducing graphs. In Algorithm 1 (lines 12-18), we show such an approach of exact search for MBBP. If a solution for a subgraph of the current graph has proved optimal, that subgraph can be safely removed from the current graph. Since the optimal value of the subgraph is a lower limit of the original graph, we can use the optimal solution of the subgraph to update the current balanced biclique, which in turn can further reduce the current graph. The exact algorithm used by TSGRMBBP has been used by a known B & B algorithm for the maximum clique problem (Carraghan & A is adapted to the largest part of the algorithm described in 1990 & A)."}, {"heading": "4. Computational assessment", "text": "To comprehensively evaluate the proposed TSGR-MBBP algorithm and its components, we tested our algorithm on two benchmark instances, including both (dense) random diagrams and massive real-life networks."}, {"heading": "4.1. Benchmark", "text": "\u2022 Random Graphs: This set of benchmark instances comprises 30 randomly generated dense graphs. In each graph, the two vertex sets U and V have an equal cardinality (i.e., | U | = | V |) and an edge between a pair of vertices (u, v) and U \u00d7 V with a uniform probability p (0 < p < 1) defining the edge density of the graph. In our study, we used random graphs generated according to the same rule of (Yuan et al., 2015), so that the performance of different algorithms can be compared. For each combination of n \u00b2 {250, 500} and p \u00b2 {0.85, 0.90, 0.95} (n = | V |), 5 instances were generated (a total of 30). These instances are therefore very dense and are referred to as \"G < n > < p > < KDE >.\""}, {"heading": "4.2. Parameter tuning and experimental protocol", "text": "The TSGR-MBBP algorithm has three parameters: L - the taboo search depth = \u03b1 - the coefficient for taboo tenure required by the Constraint Tabu Improve () procedure (Section 3.4); K - the threshold on the number of the subgraph reduction procedure (i.e., by disabling lines 10-20 in algorithm 1).Since the first two parameters (L and \u03b1) are independent of the reduction method, we have changed them to a simplified version of the TSGR-MBBP method (i.e., by disabling lines 10-20 in algorithm 1).We used the automatic parameter configuration packages iRace (Lo'pezIba \"nez al.,\" which implements the Iterated F-Race (IFR) method (IFR).Given L {10, 100, 1000, 5000, 10000}, and \u03b1."}, {"heading": "4.3. Computational results", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.3.1. Random graphs", "text": "In fact, most of them will be able to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move, to move,"}, {"heading": "4.3.2. KONECT networks", "text": "We report in Table 2 on the calculation results of TSGR-MBBP and CPLEX to reduce the load on each graph (\"for 25 CONECT instances.\" For this study, we ignore EA / SM and AL Greedy because the EA / SM code cannot be executed on this graph (EA / SM imposes the input graph, which must be balanced, which is not the case for KONECT instances), while AL Greedy performs very poorly (see Table 1). Columns \"Name,\" \"V | E |\" display the basic information about the original instances. For TSGR-MBBP, columns are \"best (ave)\" and \"Time\" report the same information as in Table 1. \"Columns\" red 1 \"and\" red 2 \"indicate the total number of nodes removed from the original graph.\""}, {"heading": "5. Analysis", "text": "This section presents an empirical analysis of the limited imbalance limitation in connection with the constraint-based taboo search method (Section 3.4) and the advantages of the diagram reduction method (Section 3.5)."}, {"heading": "5.1. Unbalance constraint of Constraint-Based Tabu Search", "text": "The unbalanced deviation from the values we achieved in the first half of the last decade is one of the most important features of the CBTS. To justify this unbalanced deviation, we compare CBTS with two unbalanced deviations. The first version (called \"CBTSI\") removes the unbalanced deviation from the values we achieved in the second half of the last decade. The second version (called \"CBTSI\") represents the unbalanced deviation from the values we achieved in the second half of the last decade."}, {"heading": "5.2. Effectiveness of reduction methods", "text": "In order to gain a full understanding of the behaviour and efficiency of the two procedures, we need to recognise the convergence of the three variants of the procedure."}, {"heading": "6. Conclusions and perspectives", "text": "In fact, it is so that most of them will be able to be able to move and move around. Most of them are able to be able to move around, and most of them are not able to move around. Most of them are able to move around. Most of them are able to be able to move around. Most of them are able to be able to move around. Most of them are not able to move around. Most of them are not able to move around. Most of them are able to be able to move around."}, {"heading": "Acknowledgment", "text": "We thank the authors of (Yuan et al., 2015) for sharing the code of their EA / SM algorithms (2001), which was partially supported by the PGMO project (2014- 0024H) from the Jacques Hadamard Mathematical Foundation (Paris, France). Support for the first author of this work from the China Scholarship Council (2013-2017) is also the maximum recognition of J. Abello, M.G. Resende, S. Sudarsky, J.S. The Latin American Symposium on Theoretical Informatics, Springer, 2002, pp. 598- 612.A.A. Al-Yamani, S. Ramsundar, D. K. Pradhan, A defect tolerance scheme for nanotechnology circuits and systems I: Regular Papers, IEEE Transactions on 54 (11) (2007) 2402-2409.N. Alon, R.A. Duke, H. Lefmann, R. Yuster, The algorithmic problem of the 1994 Algorithque network 1011)."}, {"heading": "Appendix A. The exact search algorithm", "text": "The exact algorithm (algorithm 3 and proc. 4) used in TSGR-MBBP is only two years old. (algorithm 3 and proc. 4) used in TSGR-MBBP is derived from the classic B & B algorithm. (algorithm 3, line 2), which is the best balanced solution ever found in TSGR-MBBP. (X, Y), the best biclique found by the exact algorithm is initialized as a tuple of two empty sentences (algorithm 3, line 3). If there is no better solution than Biclique in the current subgraph (X, Y), the best biclique solution remains empty even after the exact search. In such a case, the real optimal solution is discarded, as we are only interested in solutions that are better than Biclique. The exact algorithm calls a recursive procedure to start (2) and (4)."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "The Maximum Balanced Biclique Problem is a well-known graph model with relevant applications in diverse domains. This paper introduces a novel algorithm, which combines an effective constraint-based tabu search procedure and two dedicated graph reduction techniques. We verify the effectiveness of the algorithm on 30 classical random benchmark graphs and 25 very large real-life sparse graphs from the popular Koblenz Network Collection (KONECT). The results show that the algorithm improves the best-known results (new lower bounds) for 10 classical benchmarks and obtains the optimal solutions for 14 KONECT instances.", "creator": "dvips(k) 5.996 Copyright 2016 Radical Eye Software"}}}