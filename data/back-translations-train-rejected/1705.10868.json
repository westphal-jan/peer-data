{"id": "1705.10868", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-May-2017", "title": "Lifelong Multi-Agent Path Finding for Online Pickup and Delivery Tasks", "abstract": "The multi-agent path-finding (MAPF) problem has recently received a lot of attention. However, it does not capture important characteristics of many real-world domains, such as automated warehouses, where agents are constantly engaged with new tasks. In this paper, we therefore study a lifelong version of the MAPF problem, called the multi-agent pickup and delivery (MAPD) problem. In the MAPD problem, agents have to attend to a stream of delivery tasks in an online setting. One agent has to be assigned to each delivery task. This agent has to first move to a given pickup location and then to a given delivery location while avoiding collisions with other agents. We present two decoupled MAPD algorithms, Token Passing (TP) and Token Passing with Task Swaps (TPTS). Theoretically, we show that they solve all well-formed MAPD instances, a realistic subclass of MAPD instances. Experimentally, we compare them against a centralized strawman MAPD algorithm without this guarantee in a simulated warehouse system. TP can easily be extended to a fully distributed MAPD algorithm and is the best choice when real-time computation is of primary concern since it remains efficient for MAPD instances with hundreds of agents and tasks. TPTS requires limited communication among agents and balances well between TP and the centralized MAPD algorithm.", "histories": [["v1", "Tue, 30 May 2017 21:08:16 GMT  (829kb,D)", "http://arxiv.org/abs/1705.10868v1", "In AAMAS 2017"]], "COMMENTS": "In AAMAS 2017", "reviews": [], "SUBJECTS": "cs.AI cs.MA cs.RO", "authors": ["hang ma", "jiaoyang li", "t k satish kumar", "sven koenig"], "accepted": false, "id": "1705.10868"}, "pdf": {"name": "1705.10868.pdf", "metadata": {"source": "CRF", "title": "Lifelong Multi-Agent Path Finding for Online Pickup and Delivery Tasks\u2217", "authors": ["Hang Ma", "Jiaoyang Li", "Satish Kumar", "Sven Koenig"], "emails": ["hangma@usc.edu", "lijiaoyang13@mails.tsinghua.edu.cn", "tkskwork@gmail.com", "skoenig@usc.edu"], "sections": [{"heading": null, "text": "Keywords Agent Coordination; Multi-Agent Pathfinding; Path Planning; Collection and Delivery Tasks; Assignment of Tasks"}, {"heading": "1. INTRODUCTION", "text": "The views and conclusions mentioned in this document are the authors and should not be interpreted as representative of official policy."}, {"heading": "2. BACKGROUND AND RELATED WORK", "text": "The MAPD problem requires both the assignment of agents to tasks in an online and lifelong setting, as well as the planning of collision-free paths. In a lifelong environment, agents must take care of a stream of tasks. Therefore, agents cannot rest in their goals after performing tasks. In an online environment, tasks can enter the system at any time. Therefore, the assignment of agents to tasks and path planning cannot be done in advance, but must take place in real time during execution. Decentralized assignment of agents to more than one task has previously been investigated in isolation [26, 33, 17]. Decentralized planning of collision-free paths has also been investigated in isolation, including reactive approaches [27] and prioritized approaches [6], but these approaches can lead to dead ends. Planning of collision-free paths has also been investigated in the context of the MAPF problem."}, {"heading": "3. PROBLEM DEFINITION", "text": "In this section, we formalize the MAPD problem and then define well-formed MAPD instances."}, {"heading": "3.1 MAPD Problem", "text": "An instance of the MAPD problem consists of m agent A = {a1, a2.} and an undirected connected graph G = (V, E), whose depressions V correspond to the locations and whose edges E correspond to the connections between the locations that the agents can move along. Let li (t).V denote the location of the agent ai with a discrete time delay. Agent ai begins in its original location li (0).In each time window, the agent must either be in its current location li (t) or move to a neighboring location, that is, li (t).V begins in its original location li (t), li (t).E agents must avoid collisions with each other: (1) Two agents cannot be in the same place, that is, for all agents ai (t) and ai (ai)."}, {"heading": "3.2 Well-Formed MAPD Instances", "text": "Not every MAPD instance is solvable. Figure 1 shows an example with two free agents a1 and a2, where none of the agents can complete the task \u03c41 with pick-up location s1 and delivery location g1. We now provide a sufficient condition that makes MAPD instances solvable, namely to be well formed [2]. The intuition is that agents may only rest (i.e. stay forever) in places designated as end points where they cannot block other agents. Let Vtsk specify the amount of all possible pick-up and-delivery locations of tasks that are called task endpoints. The set vep of the end-points of a MAPD instance contains all the starting locations of agents, all pick-up and-delivery locations of tasks and possibly additional designated parking locations. Let Vtsk specify the amount of all possible pick-up and-delivery locations of tasks that are called task endpoints, all the pick-up and-up locations of tasks and possibly additional designated parking locations of tasks."}, {"heading": "4. DECOUPLED MAPD ALGORITHMS", "text": "In this section, we first present a simple, decoupled MAPD algorithm called Token Passing (TP), and then an improved version called Token Passing with Task Swaps (TPTS), which is more effective. Decoupled MAPD algorithms are those where each agent assigns tasks to itself and calculates its own collision-free paths taking into account some global information."}, {"heading": "4.1 Token Passing (TP)", "text": "The task is a synchronized split memory block that contains the current paths of all agents, task sets, and agent assignments. All MAPD algorithms in this paper, including TP, always assume that an agent rests (that is, it stays forever) in the last position of its path when it reaches the end of its task. Token passing was previously used to develop COBRA [2], which is an MAPF-like algorithm that does not take into account that pick-up or delivery locations can be occupied by tasks that are not performed by agents."}, {"heading": "4.2 Token Passing with Task Swaps (TPTS)", "text": "TP is simple, but can be made more effective. Token Passing with Task Swaps (TPTS) is similar to TP 7, except that its task now includes all unperformed tasks, rather than just all tasks that have not been assigned to agents. This means that an agent with the token can assign not only a task that has not been assigned to an agent, but also a task that has already been assigned to another agent as long as that agent is still moving to the pick-up point of the task. This could be advantageous if the former agent can move to the pick-up point of the task in less time than the second agent, and the second agent is no longer assigned to the task and no longer needs to perform it. Therefore, the first agent sends the token to the second agent so that he can assign himself to a new task. Algorithm 2 shows the pseudo code of TPTS."}, {"heading": "5. CENTRALIZED ALGORITHM", "text": "In this section, we develop a centralized Strawman-MAPD algorithm to their assigned endpoints. Finally, all agents move along their process simultaneously to assess how effective our decoupled MAPD algorithms are. We want CENTRAL to be reasonably efficient and effective, but not require it to be optimally effective or even solve all well-designed MAPD tasks. Agents of a centralized MAPD algorithm can communicate more than TPTS agents, and those of TPTS algorithms need to deliver more than the delivery orders to be in increasing order of effectiveness: TP, TPTS, and CENTRAL tasks are free to communicate. For the same reason, we expect that the MAPD algorithms will be in increasing order of efficiency: CENTRAL, TPTS, and TP.In each timestep, CENTRAL will initially assign endpoints to all agents for all instances and then plan all instances for all instances to be resolved."}, {"heading": "6. EXPERIMENTAL EVALUATION", "text": "In this section, we describe our experimental results on a 2.50 GHz Intel Core i5-2450M laptop with 6GB of RAM. So we are dealing with the time it takes to establish ourselves, both in terms of duration and the way we move, as well as in terms of the way we move."}, {"heading": "7. CONCLUSIONS", "text": "In this paper, we investigated a lifelong version of the Multi-Agent Pathfinder Problem (MAPF), known as the Multi-Agent Pickup and Delivery (MAPD) problem, in order to capture key features of many real-world areas. In the MAPD problem, agents must deal with a stream of delivery tasks in an online setting, switching first to the pickup points of the tasks and then to the delivery points of the tasks, avoiding collisions with other agents. We presented two decoupled MAPD algorithms, Token Passing (TP) and Token Passing with Task Swaps (TPTS). Theoretically, we showed that both MAPD algorithms solve all well-formed MAPD instances. Experimentally, we compared them to the centralized Strawman-MAPD algorithm CENTRAL without this warranty in a simulated warehouse system. MAPD algorithms to increase their macespans and service times are easy to select between MAPD TAPTRAL and MP algorithms."}], "references": [{"title": "ICBS: Improved conflict-based search algorithm for multi-agent pathfinding", "author": ["E. Boyarski", "A. Felner", "R. Stern", "G. Sharon", "D. Tolpin", "O. Betzalel", "S.E. Shimony"], "venue": " agents 100 200 300 400 500 service time 463.25 330.19 301.97 289.08 284.24 runtime 90.83 538.22 1,854.44 3,881.11 6,121.06 0  100  200  300  400  500  600  700  800  900  1000 0 100 200 300 400 500 600 700 800 900 1000 1100  100 200 300 400 500 tasks added Figure 7: The figure shows the experimental results for TP in the large simulated warehouse environment. In International Joint Conference on Artificial Intelligence, pages 740\u2013746", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "Complete decentralized method for on-line multi-robot trajectory planning in well-formed infrastructures", "author": ["M. C\u00e1p", "J. Vok\u0155\u0131nek", "A. Kleiner"], "venue": "International Conference on Automated Planning and Scheduling, pages 324\u2013332", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Improved solvers for bounded-suboptimal multi-agent path finding", "author": ["L. Cohen", "T. Uras", "T.K.S. Kumar", "H. Xu", "N. Ayanian", "S. Koenig"], "venue": "International Joint Conference on Artificial Intelligence, pages 3067\u20133074", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2016}, {"title": "Push and rotate: Cooperative multi-agent path planning", "author": ["B. de Wilde", "A.W. ter Mors", "C. Witteveen"], "venue": "In International Conference on Autonomous Agents and Multi-Agent Systems,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "A general formal framework for pathfinding problems with multiple agents", "author": ["E. Erdem", "D.G. Kisa", "U. Oztok", "P. Schueller"], "venue": "AAAI Conference on Artificial Intelligence, pages 290\u2013296", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "On multiple moving objects", "author": ["M.A. Erdmann", "T. Lozano-P\u00e9rez"], "venue": "Algorithmica, 2:477\u2013521", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1987}, {"title": "Enhanced Partial Expansion A", "author": ["M. Goldenberg", "A. Felner", "R. Stern", "G. Sharon", "N.R. Sturtevant", "R.C. Holte", "J. Schaeffer"], "venue": "Journal of Artificial Intelligence Research, 50:141\u2013187", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Multi-agent path finding with kinematic constraints", "author": ["W. H\u00f6nig", "T.K.S. Kumar", "L. Cohen", "H. Ma", "H. Xu", "N. Ayanian", "S. Koenig"], "venue": "International Conference on Automated Planning and Scheduling, pages 477\u2013485", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "Formation change for robot groups in occluded environments", "author": ["W. H\u00f6nig", "T.K.S. Kumar", "H. Ma", "N. Ayanian", "S. Koenig"], "venue": "IEEE/RSJ International Conference on Intelligent Robots and Systems, pages 4836\u20134842", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2016}, {"title": "A polynomial-time algorithm for non-optimal multi-agent pathfinding", "author": ["M. Khorshid", "R. Holte", "N. Sturtevant"], "venue": "Annual Symposium on Combinatorial Search", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "The Hungarian method for the assignment problem", "author": ["H.W. Kuhn"], "venue": "Naval Research Logistics Quarterly, 2:83\u201397", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1955}, {"title": "Push and Swap: Fast cooperative path-finding with completeness guarantees", "author": ["R. Luna", "K.E. Bekris"], "venue": "International Joint Conference on Artificial Intelligence, pages 294\u2013300", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimal target assignment and path finding for teams of agents", "author": ["H. Ma", "S. Koenig"], "venue": "International Conference on Autonomous Agents and Multiagent Systems, pages 1144\u20131152", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Overview: Generalizations of multi-agent path finding to real-world scenarios", "author": ["H. Ma", "S. Koenig", "N. Ayanian", "L. Cohen", "W. H\u00f6nig", "T.K.S. Kumar", "T. Uras", "H. Xu", "C. Tovey", "G. Sharon"], "venue": "IJCAI-16 Workshop on Multi-Agent Path Finding", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2016}, {"title": "Multi-agent path finding with delay probabilities", "author": ["H. Ma", "T.K.S. Kumar", "S. Koenig"], "venue": "AAAI Conference on Artificial Intelligence", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2017}, {"title": "Multi-agent path finding with payload transfers and the package-exchange robot-routing problem", "author": ["H. Ma", "C. Tovey", "G. Sharon", "T.K.S. Kumar", "S. Koenig"], "venue": "AAAI Conference on Artificial Intelligence, pages 3166\u20133173", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2016}, {"title": "SCRAM: Scalable collision-avoiding role assignment with minimal-makespan for formational positioning", "author": ["P. MacAlpine", "E. Price", "P. Stone"], "venue": "AAAI Conference on Artificial Intelligence, pages 2096\u20132102", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2015}, {"title": "Planning", "author": ["R. Morris", "C. Pasareanu", "K. Luckow", "W. Malik", "H. Ma", "S. Kumar", "S. Koenig"], "venue": "scheduling and monitoring for airport surface operations. In AAAI-16 Workshop on Planning for Hybrid Systems", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2016}, {"title": "Conflict-based search for optimal multi-agent pathfinding", "author": ["G. Sharon", "R. Stern", "A. Felner", "N.R. Sturtevant"], "venue": "Artificial Intelligence, 219:40\u201366", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "The increasing cost tree search for optimal multi-agent pathfinding", "author": ["G. Sharon", "R. Stern", "M. Goldenberg", "A. Felner"], "venue": "Artificial Intelligence, 195:470\u2013495", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Cooperative pathfinding", "author": ["D. Silver"], "venue": "Artificial Intelligence and Interactive Digital Entertainment, pages 117\u2013122", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2005}, {"title": "Complete algorithms for cooperative pathfinding problems", "author": ["T.S. Standley", "R.E. Korf"], "venue": "International Joint Conference on Artificial Intelligence, pages 668\u2013673", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "Improving collaborative pathfinding using map abstraction", "author": ["N.R. Sturtevant", "M. Buro"], "venue": "Artificial Intelligence and Interactive Digital Entertainment, pages 80\u201385", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2006}, {"title": "A novel approach to path planning for multiple robots in bi-connected graphs", "author": ["P. Surynek"], "venue": "IEEE International Conference on Robotics and Automation, pages 3613\u20133619", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2009}, {"title": "Reduced time-expansion graphs and goal decomposition for solving cooperative path finding sub-optimally", "author": ["P. Surynek"], "venue": "International Joint Conference on Artificial Intelligence, pages 1916\u20131922", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2015}, {"title": "The generation of bidding rules for auction-based robot coordination", "author": ["C. Tovey", "M. Lagoudakis", "S. Jain", "S. Koenig"], "venue": "F. S. L. Parker and A. Schultz, editors, Multi-Robot Systems. From Swarms to Intelligent Automata, volume 3, chapter 1, pages 3\u201314. Springer", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2005}, {"title": "Reciprocal collision avoidance with acceleration-velocity obstacles", "author": ["J.P. van den Berg", "J. Snape", "S.J. Guy", "D. Manocha"], "venue": "In IEEE International Conference on Robotics and Automation,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2011}, {"title": "CoBots: Robust symbiotic autonomous mobile service robots", "author": ["M. Veloso", "J. Biswas", "B. Coltin", "S. Rosenthal"], "venue": "International Joint Conference on Artificial Intelligence, pages 4423\u20134429", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2015}, {"title": "Subdimensional Expansion: A Framework for Computationally Tractable Multirobot Path Planning", "author": ["G. Wagner"], "venue": "PhD thesis, Carnegie Mellon University", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2015}, {"title": "MAPP: a scalable multi-agent path planning algorithm with tractability and completeness guarantees", "author": ["K. Wang", "A. Botea"], "venue": "Journal of Artificial Intelligence Research, 42:55\u201390", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2011}, {"title": "R", "author": ["P.R. Wurman"], "venue": "D\u2019Andrea, and M. Mountz. Coordinating hundreds of cooperative, autonomous vehicles in warehouses. AI Magazine, 29(1):9\u201320", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2008}, {"title": "Planning optimal paths for multiple robots on graphs", "author": ["J. Yu", "S.M. LaValle"], "venue": "IEEE International Conference on Robotics and Automation, pages 3612\u20133617", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2013}, {"title": "K-swaps: Cooperative negotiation for solving task-allocation problems", "author": ["X. Zheng", "S. Koenig"], "venue": "International Joint Conference on Artifical Intelligence, pages 373\u2013378", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2009}], "referenceMentions": [{"referenceID": 17, "context": "Examples include aircraft-towing vehicles [18], warehouse robots [31], office robots [28], and game characters in video games [21].", "startOffset": 42, "endOffset": 46}, {"referenceID": 30, "context": "Examples include aircraft-towing vehicles [18], warehouse robots [31], office robots [28], and game characters in video games [21].", "startOffset": 65, "endOffset": 69}, {"referenceID": 27, "context": "Examples include aircraft-towing vehicles [18], warehouse robots [31], office robots [28], and game characters in video games [21].", "startOffset": 85, "endOffset": 89}, {"referenceID": 20, "context": "Examples include aircraft-towing vehicles [18], warehouse robots [31], office robots [28], and game characters in video games [21].", "startOffset": 126, "endOffset": 130}, {"referenceID": 1, "context": "Theoretically, we show that they solve all well-formed MAPD instances [2], a realistic subclass of MAPD instances.", "startOffset": 70, "endOffset": 73}, {"referenceID": 25, "context": "The decentralized assignment of agents to more than one task each has been studied before in isolation [26, 33, 17].", "startOffset": 103, "endOffset": 115}, {"referenceID": 32, "context": "The decentralized assignment of agents to more than one task each has been studied before in isolation [26, 33, 17].", "startOffset": 103, "endOffset": 115}, {"referenceID": 16, "context": "The decentralized assignment of agents to more than one task each has been studied before in isolation [26, 33, 17].", "startOffset": 103, "endOffset": 115}, {"referenceID": 26, "context": "The decentralized planning of collision-free paths has also been studied before in isolation, including with reactive approaches [27] and prioritized approaches [6], but these approaches can result in deadlocks.", "startOffset": 129, "endOffset": 133}, {"referenceID": 5, "context": "The decentralized planning of collision-free paths has also been studied before in isolation, including with reactive approaches [27] and prioritized approaches [6], but these approaches can result in deadlocks.", "startOffset": 161, "endOffset": 164}, {"referenceID": 15, "context": "It is NP-hard to solve optimally for minimizing flowtime (the sum of the number of timesteps required by all agents to reach their destinations and stop moving) and NP-hard to approximate within any constant factor less than 4/3 for minimizing makespan (the timestep when all agents have reached their destinations and stop moving) [16].", "startOffset": 332, "endOffset": 336}, {"referenceID": 24, "context": "It can be solved via reductions to Boolean Satisfiability [25], Integer Linear Programming [32], and Answer Set Programming [5].", "startOffset": 58, "endOffset": 62}, {"referenceID": 31, "context": "It can be solved via reductions to Boolean Satisfiability [25], Integer Linear Programming [32], and Answer Set Programming [5].", "startOffset": 91, "endOffset": 95}, {"referenceID": 4, "context": "It can be solved via reductions to Boolean Satisfiability [25], Integer Linear Programming [32], and Answer Set Programming [5].", "startOffset": 124, "endOffset": 127}, {"referenceID": 21, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 93, "endOffset": 97}, {"referenceID": 6, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 129, "endOffset": 132}, {"referenceID": 19, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 162, "endOffset": 166}, {"referenceID": 28, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 171, "endOffset": 175}, {"referenceID": 18, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 202, "endOffset": 212}, {"referenceID": 0, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 202, "endOffset": 212}, {"referenceID": 2, "context": "Optimal dedicated MAPF algorithms include Independence Detection with Operator Decomposition [22], Enhanced Partial Expansion A* [7], Increasing Cost Tree Search [20], M* [29], and ConflictBased Search [19, 1, 3].", "startOffset": 202, "endOffset": 212}, {"referenceID": 20, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 82, "endOffset": 90}, {"referenceID": 22, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 82, "endOffset": 90}, {"referenceID": 11, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 113, "endOffset": 120}, {"referenceID": 3, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 113, "endOffset": 120}, {"referenceID": 9, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 127, "endOffset": 131}, {"referenceID": 23, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 139, "endOffset": 143}, {"referenceID": 29, "context": "Suboptimal dedicated MAPF algorithms include Windowed-Hierarchical Cooperative A* [21, 23], Push and Swap/Rotate [12, 4], TASS [10], BIBOX [24], and MAPP [30].", "startOffset": 154, "endOffset": 158}, {"referenceID": 7, "context": "The MAPF problem has recently been generalized to more clearly resemble real-world settings [8, 14, 9, 15, 13] but these versions are still one-shot.", "startOffset": 92, "endOffset": 110}, {"referenceID": 13, "context": "The MAPF problem has recently been generalized to more clearly resemble real-world settings [8, 14, 9, 15, 13] but these versions are still one-shot.", "startOffset": 92, "endOffset": 110}, {"referenceID": 8, "context": "The MAPF problem has recently been generalized to more clearly resemble real-world settings [8, 14, 9, 15, 13] but these versions are still one-shot.", "startOffset": 92, "endOffset": 110}, {"referenceID": 14, "context": "The MAPF problem has recently been generalized to more clearly resemble real-world settings [8, 14, 9, 15, 13] but these versions are still one-shot.", "startOffset": 92, "endOffset": 110}, {"referenceID": 12, "context": "The MAPF problem has recently been generalized to more clearly resemble real-world settings [8, 14, 9, 15, 13] but these versions are still one-shot.", "startOffset": 92, "endOffset": 110}, {"referenceID": 1, "context": "We now provide a sufficient condition that makes MAPD instances solvable, namely being well-formed [2].", "startOffset": 99, "endOffset": 102}, {"referenceID": 20, "context": "Token Passing (TP) is based on an idea similar to Cooperative A* [21], where agents plan their paths one after the other.", "startOffset": 65, "endOffset": 69}, {"referenceID": 1, "context": "Token passing has previously been used to develop COBRA [2], which is a MAPF-like algorithm that does not take into account that pickup or delivery locations of tasks can be occupied by agents not executing them and can thus result in deadlocks.", "startOffset": 56, "endOffset": 59}, {"referenceID": 10, "context": "It uses the Hungarian Method [11] for this purpose with the modified costs c(ai, e) for each pair of free agent ai and endpoint e, where c is the number of free agents, C is a sufficiently large constant (for example, the maximum over all costs c(ai, e) plus one), and c(ai, e) = c \u00b7C \u00b7 c(ai, e) if e is a pickup location of a task in T \u2032 and c(ai, e) = c \u00b7 C + c(ai, e) if e is a parking location.", "startOffset": 29, "endOffset": 33}, {"referenceID": 18, "context": "Path Planning CENTRAL uses the optimally effective MAPF algorithm Conflict-Based Search [19] to plan collisionfree paths for all agents from their current locations to their assigned endpoints simultaneously.", "startOffset": 88, "endOffset": 92}], "year": 2017, "abstractText": "The multi-agent path-finding (MAPF) problem has recently received a lot of attention. However, it does not capture important characteristics of many real-world domains, such as automated warehouses, where agents are constantly engaged with new tasks. In this paper, we therefore study a lifelong version of the MAPF problem, called the multiagent pickup and delivery (MAPD) problem. In the MAPD problem, agents have to attend to a stream of delivery tasks in an online setting. One agent has to be assigned to each delivery task. This agent has to first move to a given pickup location and then to a given delivery location while avoiding collisions with other agents. We present two decoupled MAPD algorithms, Token Passing (TP) and Token Passing with Task Swaps (TPTS). Theoretically, we show that they solve all well-formed MAPD instances, a realistic subclass of MAPD instances. Experimentally, we compare them against a centralized strawman MAPD algorithm without this guarantee in a simulated warehouse system. TP can easily be extended to a fully distributed MAPD algorithm and is the best choice when real-time computation is of primary concern since it remains efficient for MAPD instances with hundreds of agents and tasks. TPTS requires limited communication among agents and balances well between TP and the centralized MAPD algorithm.", "creator": "LaTeX with hyperref package"}}}