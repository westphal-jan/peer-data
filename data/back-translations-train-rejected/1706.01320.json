{"id": "1706.01320", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Jun-2017", "title": "3D Pathfinding and Collision Avoidance Using Uneven Search-space Quantization and Visual Cone Search", "abstract": "Pathfinding is a very popular area in computer game development. While two-dimensional (2D) pathfinding is widely applied in most of the popular game engines, little implementation of real three-dimensional (3D) pathfinding can be found. This research presents a dynamic search space optimization algorithm which can be applied to tessellate 3D search space unevenly, significantly reducing the total number of resulting nodes. The algorithm can be used with popular pathfinding algorithms in 3D game engines. Furthermore, a simplified standalone 3D pathfinding algorithm is proposed in this paper. The proposed algorithm relies on ray-casting or line vision to generate a feasible path during runtime without requiring division of the search space into a 3D grid. Both of the proposed algorithms are simulated on Unreal Engine to show innerworkings and resultant path comparison with A*. The advantages and shortcomings of the proposed algorithms are also discussed along with future directions.", "histories": [["v1", "Mon, 5 Jun 2017 13:49:49 GMT  (1040kb)", "http://arxiv.org/abs/1706.01320v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["diptangshu pandit"], "accepted": false, "id": "1706.01320"}, "pdf": {"name": "1706.01320.pdf", "metadata": {"source": "CRF", "title": "3D Pathfinding and Collision Avoidance Using Uneven Search-space Quantization and Visual Cone Search", "authors": ["Diptangshu Pandit"], "emails": ["diptangshu.pandit@nortumbria.ac.uk"], "sections": [{"heading": null, "text": "While two-dimensional (2D) path finding is widely used in most popular game engines, little implementation of real three-dimensional (3D) path finding can be found. This research presents a dynamic search space optimization algorithm that can be applied to the uneven 3D search space, thereby significantly reducing the total number of resulting nodes. The algorithm can be used with popular path finding algorithms in 3D game motors. Furthermore, this paper proposes a simplified standalone 3D path finding algorithm, which relies on beam throw or line vision to generate a feasible path during runtime without requiring the division of the search space into a 3D grid. Both proposed algorithms are simulated on Unreal Engine to show interior work and resulting path comparisons with A *. The advantages and shortcomings of the proposed grid, without the need for a 3D search space, are also discussed during runtime."}, {"heading": "1. Pathfinding", "text": "One of the most important aspects of these games is navigation, which involves how an NPC moves from one point to another on the map within the game. Popular path finding algorithms include Depth-First Search, Breadth-First Search, Iterative Deepening Algorithm, Best First Search, Dijkstra's Algorithm, A * etc. These algorithms work well for flat surfaces. A sample implementation along with pseudo code can be found in the work of Khammapun et.al. [5] Recently, Monte Carlo Tree Search Methods are gaining recognition [6].Complications can arise when the map interface is not flat and continuous. An NPC could jump and avoid obstacles to reach the final destination. Popular game engines such as Unreal Engine 4 (UE4], Unity 3D [8] and CryEngine Engine [9] use navigation networks that use navigation navigation navigation from navigation systems."}, {"heading": "2. 2D vs 3D Pathfinding", "text": "This year, it is more than ever before in the history of the city."}, {"heading": "1. Uneven Search-space Quantization Algorithm", "text": "There are several ways to reduce the search space. Enlarging the unit space that fills the polygon can make the search tree significantly smaller, but this results in inaccurate results. An example is shown in Figure 4, where a large grid is shown on the left and a smaller grid on the right. There are three objects; X, Y, and Z, each of which is surrounded by its erroneously blocked volume due to the grid scaling (highlighted in yellow). The proposed algorithm uses a localized dynamic compromise between higher and lower scales as needed. However, the algorithm is discussed further below. Uneven Search Space Quantization (USQ) Input: l / / Minimum Grid Length / / / Maximum Partition Depth. Result: Grid depth of the connected cube Method: 1: Place a delimiting box (cube) around the search node i.Initialize = 0; c: for each cube depth = < c = < c if any of 8c: < c = an object does not collide with an 8d."}, {"heading": "2. View Cone Search Algorithm", "text": "This year, it is as far as ever in the history of the city, where it is as far as never before in the history of the city."}, {"heading": "Acknowledgement", "text": "I would like to thank Melissa Skinner for her helpful feedback on a draft paper."}], "references": [{"title": "Game {AI}: The State of the Industry", "author": ["D.C. Pottinger", "J.E. Laird"], "venue": "Part Two\u2019, Gamasutra", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2000}, {"title": "Computational intelligence and AI in games: A New IEEE transactions", "author": ["S.M. Lucas"], "venue": "IEEE Trans. Comput. Intell. AI Games, vol. 1, no. 1, pp. 1\u20133", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "AI in Computer Games", "author": ["A. Nareyek"], "venue": "Queue, vol. 1, no. February, pp. 58\u201365", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Game AI: artificial intelligence for 3D path finding", "author": ["Y.C. Hui", "E.C. Prakash", "N.S. Chaudhari"], "venue": "2004 IEEE Reg. 10 Conf. TENCON 2004., vol. B, pp. 306\u2013 309", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2004}, {"title": "Pathfinding of 2D & 3D game real-time strategy with Depth Direction A* algorithm for multi-layer", "author": ["K. Khantanapoka", "K. Chinnasarn"], "venue": "2009 8th International Symposium on Natural Language Processing, SNLP \u201909", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "A survey of Monte Carlo tree search methods", "author": ["C.B. Browne"], "venue": "IEEE Transactions on Computational Intelligence and AI in Games,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Using a genetic algorithm to explore A*-like pathfinding algorithms", "author": ["R. Leigh", "S.J. Louis", "C. Miles"], "venue": "Proc. 2007 IEEE Symp. Comput. Intell. Games, CIG 2007, no. Cig, pp. 72\u201379", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2007}, {"title": "Pathfinder Programmes", "author": ["F.M. J\u00f6nsson"], "venue": "Probat. J., vol. 49, no. 3, pp. 241\u2013242", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2002}, {"title": "Multi-agent pathfinding system implemented on XNA", "author": ["H. Jin", "W. Wu", "Z. Ling"], "venue": "Proceedings - 4th International Conference on Computational Intelligence and Communication Networks, CICN 2012", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "GPU accelerated pathfinding", "author": ["A. Bleiweiss"], "venue": "Proc. 23rd ACM SIGGRAPH/ ..., pp. 65\u201374", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2008}, {"title": "Pathfinding in Games", "author": ["A. Botea", "B. Bouzy", "M. Buro", "C. Bauckhage", "D. Nau"], "venue": "Artif. Comput. Intell. Games,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "The application artificial intelligence (AI) in computer games is gaining popularity rapidly[1]\u2013[3].", "startOffset": 92, "endOffset": 95}, {"referenceID": 2, "context": "The application artificial intelligence (AI) in computer games is gaining popularity rapidly[1]\u2013[3].", "startOffset": 96, "endOffset": 99}, {"referenceID": 3, "context": "Pathfinding and graph traversal are widely used application areas of AI in games [4].", "startOffset": 81, "endOffset": 84}, {"referenceID": 4, "context": "al [5].", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "Recently, Monte Carlo Tree Search Methods are also gaining recognition [6].", "startOffset": 71, "endOffset": 74}, {"referenceID": 4, "context": "Although most of these pseudo 3D navigation strategies are already practiced in many game engines and some related work has been conducted [5], [10]\u2013[14], they lack true 3D pathfinding.", "startOffset": 139, "endOffset": 142}, {"referenceID": 6, "context": "Although most of these pseudo 3D navigation strategies are already practiced in many game engines and some related work has been conducted [5], [10]\u2013[14], they lack true 3D pathfinding.", "startOffset": 144, "endOffset": 148}, {"referenceID": 10, "context": "Although most of these pseudo 3D navigation strategies are already practiced in many game engines and some related work has been conducted [5], [10]\u2013[14], they lack true 3D pathfinding.", "startOffset": 149, "endOffset": 153}], "year": 2017, "abstractText": "Pathfinding is a very popular area in computer game development. While two-dimensional (2D) pathfinding is widely applied in most of the popular game engines, little implementation of real three-dimensional (3D) pathfinding can be found. This research presents a dynamic search space optimization algorithm which can be applied to tessellate 3D search space unevenly, significantly reducing the total number of resulting nodes. The algorithm can be used with popular pathfinding algorithms in 3D game engines. Furthermore, a simplified standalone 3D pathfinding algorithm is proposed in this paper. The proposed algorithm relies on ray-casting or line vision to generate a feasible path during runtime without requiring division of the search space into a 3D grid. Both of the proposed algorithms are simulated on Unreal Engine to show innerworkings and resultant path comparison with A*. The advantages and shortcomings of the proposed algorithms are also discussed along with future directions. Keywords\u20143D, pathfinding, computer game, artificial intelligence, simulation.", "creator": "Microsoft\u00ae Word 2016"}}}