{"id": "1706.01690", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jun-2017", "title": "A Frame Tracking Model for Memory-Enhanced Dialogue Systems", "abstract": "Recently, resources and tasks were proposed to go beyond state tracking in dialogue systems. An example is the frame tracking task, which requires recording multiple frames, one for each user goal set during the dialogue. This allows a user, for instance, to compare items corresponding to different goals. This paper proposes a model which takes as input the list of frames created so far during the dialogue, the current user utterance as well as the dialogue acts, slot types, and slot values associated with this utterance. The model then outputs the frame being referenced by each triple of dialogue act, slot type, and slot value. We show that on the recently published Frames dataset, this model significantly outperforms a previously proposed rule-based baseline. In addition, we propose an extensive analysis of the frame tracking task by dividing it into sub-tasks and assessing their difficulty with respect to our model.", "histories": [["v1", "Tue, 6 Jun 2017 10:48:29 GMT  (132kb,D)", "http://arxiv.org/abs/1706.01690v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["hannes schulz", "jeremie zumer", "layla el asri", "shikhar sharma"], "accepted": false, "id": "1706.01690"}, "pdf": {"name": "1706.01690.pdf", "metadata": {"source": "CRF", "title": "A Frame Tracking Model for Memory-Enhanced Dialogue Systems", "authors": ["Hannes Schulz", "Jeremie Zumer", "Layla El Asri", "Shikhar Sharma"], "emails": ["first.last@microsoft.com"], "sections": [{"heading": "1 Introduction", "text": "In fact, most people who are capable are able to move, to move, to move, to move, to move, to move, to move, to move, to move and to move."}, {"heading": "2 Frame Tracking: An Extension of State Tracking", "text": "In a target-oriented dialog system, two specific components have been added to a framework, namely: the comparison of these user requirements with other user requirements (Singh et al., 2002; Raux et al., 2003; El Asri et al., 2014; Laroche et al., 2011). The State Tracking Challenge (DSTC) dialog frame (Williams et al., 2016) defines this semantic framework with the following components: \u2022 User Restrictions: Slots set by the user to a certain value. \u2022 User Requests: Slots whose values the user wants to know. \u2022 User Search Method: the way the user searches the database (e.g. through restrictions or alternatives). In state tracking, when a new user restriction is set, it overrides the previous one within the framework. In frame tracking, a new user restriction creates and thus there are as many frames as during the dialogs."}, {"heading": "3 Related Work", "text": "As discussed in the previous section, frame tracking ranges from merely tracking the current usage target to tracking all user goals that occur during the dialog. Recently, several approaches to state tracking have attempted to model more complex behaviors than sequential slot filling. The next approach to ours is the Task Lineage-based Dialog State Tracking (TL-DST), proposed by Lee and Stent (2016). TL-DST is a framework that allows multiple tasks to be tracked across different domains. Similar to frame tracking, Lee and Stent suggest learning a dynamic structure of the dialog consisting of multiple frames that correspond to different tasks. TL-DST includes several subtasks, among which is frame parsing, which consists of assigning a set of new dialog files to frames. This refers to frame tracking, except for imposing limitations, such as assigning a dialog to an act and a frame."}, {"heading": "4 Analysis of Frame References", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1 Reasons for Referencing Other Frames", "text": "The data set of frames contains 19986 revolutions, including 10407 revolutions of the user. In 3785 (36%) of these revolutions of the user, the active frame is modified. If the active frame is not modified, the user refers to one or more other frames in 7.5% of revolutions. If we only consider that a dialog system with a traditional state tracker that tracks only a single semantic frame would be able to handle the subset of frame changes that correspond to a pre-defined value (1684 revolutions or 44% of the revolutions in which frame changes occur), the remaining 2102 (56%) revolutions contain user button frame actions. The button frame act indicates when a user switches from the currently active frame to a pre-defined frame. A button frame act directly follows one or sev-1Utterances in which the user notifies the wizard of limitations."}, {"heading": "4.2 Examples", "text": "In this section, we categorize instances of interesting frame-related user behavior and discuss the resulting requirements for a frame tracker. \u2022 Switch to a frame by naming a slot value. \"Oh, the Rome deal sounds much better!,\" \"Can you tell me more about the Frankfurt package?,\" \"I'll take the 13-day trip then!\" In this case, we need to find out which frames match the identified slot values, for example, the destination city in the first example. As there might be several matching frames, we also need to include reception information. \u2022 Switch to a frame without referring directly to it, usually explicitly or implicitly."}, {"heading": "5 Frame Tracking Model", "text": "In the previous section, we have identified various methods by which users refer to past frames or create new ones. In the following sections, we describe a frame tracking model, i.e. a model that takes as input the history of past frames, as well as the current utterance of the user and the dialog files associated with it, and outputs the frame references for each dialog act."}, {"heading": "5.1 Input Encoding", "text": "Our model receives three types of inputs: the frames created before the current rotation, the user dialog of the current rotation acts without frame references, and the expression of the user. We encode these three inputs before passing them on to the network. In particular, frames and dialog files are complex data structures whose encodings are critical to the performance of the model."}, {"heading": "5.1.1 Text Encoding", "text": "We encode the user text and all slot values by tokenizing the string2 and converting each token to letter trigrams3. Each trigram T is represented as an index in a workable trigram dictionary DT."}, {"heading": "5.1.2 Frame Encoding", "text": "In the Frames dataset, each Frame F consists of slot value pairs in which several equivalent values may be present for a slot (e.g. New York and New York) and additional negated values (e.g. if the user says that he does not want to go to a city suggested by the wizard). We encode a string representation of the most recent unnegated value v as described in Section 5.1.1. The slot type is encoded as an index in a slot type dictionary DS. The final frame encoding is the concatenation of all slot value pairs in the frame.In addition to the encoded frames, we also offer two vectors to the model: a hot code fc that marks the frame that was active in the last round (the bold frame in Figure 1) and a hot code fn that marks the frame that is added, e.g., when a new frame is added in the second round (i.e.)."}, {"heading": "5.1.3 Similarity Encoding", "text": "To simplify the learning of pure value matching, we calculate a matrix SL-RN-F that contains the normalized string edit distance of the slot values in the user action to the value of the same slot in each frame, if any."}, {"heading": "5.1.4 Recency Encoding", "text": "We also provide the model with information about the history of the dialog by marking recently added and recently active frames encoded as h\u03c4d or h \u03c4 c. For a frame f inserted in the curve \u03c4f or last active, we set \u00b7 (f) = 0 if \u03c4 < \u03c4f 1 if \u03c4 = \u03c4f\u03b3h\u03c4 \u2212 1 \u00b7 otherwise."}, {"heading": "5.1.5 Act Encoding", "text": "A dialog act in the current turn has the file name \"a\" and a series of arguments. Each argument has a slot type s \"S\" and an optional slot value v. We use a dictionary DA to assign a unique index to each act a, and use the same method as described in Section 5.1.2 to encode slot-value pairs. In addition to the N triples (a, s, v), we encode each act individually, since an act may not have any arguments, but still refers to a frame (see examples of a frame change in Section 4.2)."}, {"heading": "5.2 Output Encoding", "text": "For each triple frame (a, s, v), our model gives a multinomial distribution pasv, F over the frames F and F. In addition, for each act we determine the probability pa, F that F will be referenced by an earlier act. It can be difficult for the model to correctly predict the cases in which the referenced frame is the currently active frame, especially in situations where (a) the slot values do not match and (b) the active frame has been changed by an earlier act within the same revolution. To meet this challenge, we replace all occurrences of the active frame in the target with a special frame with index 0. In the example of Figure 1, the value flex = T would point to this frame 0, since the active frame is changed by an earlier value, in this case the budget. In the loss function, we do not penalize the model for confusing the active frame and the special frame, except for switch frames and frame-generating passages, for which we want the frame to be predicted according to a model."}, {"heading": "5.3 Model Structure", "text": "This year it has come to the point where it will be able to retaliate, \"he said in an interview with the\" Welt am Sonntag. \""}, {"heading": "6 Experiments", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "6.1 Learning Protocol and Metrics", "text": "We train the model by dividing the data set into 10 folds, as described by El Asri et al. (2017). For each fold, we further divide the training corpus into training and validation sets, withholding a random selection of 20% of the dialogues from the training. We use the Adam algorithm (Kingma and Ba, 2014) to minimize the sum of loss for pasv and pa, F, with a learning rate of 10 \u2212 3. Learning is stopped if the minimum validation error has not changed for ten epochs. We compare our model with the simple rules-based baseline described by El Asri et al. (2017). For slot-based predictions (pasv, F), we specify the accuracy over the ten folds of the frame. For act-based predictions (pa, F), i.e. we determine for each act whether the basic truth of the referenced frames is equal as the prediction of the frame alone, with the result of one frame (F = the reference frame)."}, {"heading": "6.2 Comparison with the Baseline", "text": "We continue to analyze the performance difference between our frame tracking model and the rule-based baseline on prediction classes based on a single fold of data. We organize the spins in the test into 11 classes and measure performance by computing accuracy only breaks that fall into the respective class. We first observe that the base model almost completely fails to identify frame changes when a user introduces a new value (4% accuracy over 303 spins), frame changes related to switch frame files that have no slot values, or when a switch frame activity is present in a turn that does not include a bid act. On the other hand, the base model predicts a lack of frame changes (74.3% over 1111 instances) and frame changes after an offer (62.2% over 312 instances). Our model dominates the rule-based baseline on all classes except for predicting frame changes with switch frame activities that do not have slot values."}, {"heading": "6.3 Lesion Studies", "text": "To assess which of the characteristics are useful for the model, we remove the inputs of the model individually and measure the performance of the model. Results are presented in Table 1. We observe that the model ceases to learn (i.e. its performance does not exceed that of the baseline) when the value of the act triples when one of the inputs is removed, except for the new frame history, the new frame candidate and previous frame inputs. Similarly, the model performance suffers when the new frame candidate, all historical data or boxes are removed. We observe that all inputs from the model are used in its predictions for either pasv, F or pa, F."}, {"heading": "7 Discussion", "text": "Dependence on input text means that our method is domain-dependent, and the annotation process for the frames record is costly, so it would be beneficial if we could transfer learned frame-switching behavior to other domains, possibly with existing NLU components. One possible solution might be to standardize the text after the NLU and use anonymous placeholders instead of domain-specific words. Furthermore, our current model assumes a perfect NLU to provide files, slots and values as inputs, which is helpful for isolated research into frame referencing, but both components should work together. For example, we currently assume that a switch-frame act is correctly identified, but we do not know what framework the user wants to move to. In a more realistic pipeline, these decisions are closely linked and also need to be taken into account more of the dialog history."}, {"heading": "7.1 Conclusion", "text": "Based on this analysis, we have designed a frame tracking model that outperforms the baseline of El Asri et al. (2017) by almost 20% relative performance; this model assigns the semantic frames created during the dialog to a new user expression, with each frame corresponding to a target; we analyzed the strengths and weaknesses of the rule-based baseline and our model on different subtasks of frame tracking; our model outperforms the baseline in all but one subtask; we showed that further improvement is needed to match slot values when they are present in many different frames; we have shown that the frame tracking task can be performed effectively by learning from data (our model correctly identifies frame changes in about 3 out of 4 cases); this is a first step toward memory-enhanced dialog systems that understand when a user refers to an older topic in a conversation and provide more detailed advice by understanding the full context of a request."}], "references": [{"title": "Machine learning for", "author": ["nology . Matthew Henderson"], "venue": null, "citeRegEx": "Henderson.,? \\Q2015\\E", "shortCiteRegEx": "Henderson.", "year": 2015}, {"title": "The second dialog state tracking challenge", "author": ["Matthew Henderson", "Blaise Thomson", "Jason D. Williams."], "venue": "Proc. of SIGDIAL.", "citeRegEx": "Henderson et al\\.,? 2014b", "shortCiteRegEx": "Henderson et al\\.", "year": 2014}, {"title": "Learning deep structured semantic models for web search using clickthrough data", "author": ["Po-Sen Huang", "Xiaodong He", "Jianfeng Gao", "Li Deng", "Alex Acero", "Larry Heck."], "venue": "Proc. of ACM . pages 2333\u20132338.", "citeRegEx": "Huang et al\\.,? 2013", "shortCiteRegEx": "Huang et al\\.", "year": 2013}, {"title": "An iterative design methodology for user-friendly natural language office information applications", "author": ["John F. Kelley."], "venue": "ACM Transactions on Information Systems (TOIS) 2(1):26\u201341.", "citeRegEx": "Kelley.,? 1984", "shortCiteRegEx": "Kelley.", "year": 1984}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik Kingma", "Jimmy Ba."], "venue": "arXiv:1412.6980 [cs.LG] .", "citeRegEx": "Kingma and Ba.,? 2014", "shortCiteRegEx": "Kingma and Ba.", "year": 2014}, {"title": "Task lineages: Dialog state tracking for flexible interaction", "author": ["Sungjin Lee", "Amanda Stent."], "venue": "Proc. of SIGDIAL.", "citeRegEx": "Lee and Stent.,? 2016", "shortCiteRegEx": "Lee and Stent.", "year": 2016}, {"title": "Dialog state tracking, a machine reading approach using memory network", "author": ["Julien Perez", "Fei Liu."], "venue": "Proc. of EACL.", "citeRegEx": "Perez and Liu.,? 2016", "shortCiteRegEx": "Perez and Liu.", "year": 2016}, {"title": "LET\u2019s GO: Improving Spoken Dialog Systems for the Elderly and Nonnatives", "author": ["Antoine Raux", "Brian Langner", "Black Alan", "Maxine Eskenazi."], "venue": "Proc. of Eurospeech.", "citeRegEx": "Raux et al\\.,? 2003", "shortCiteRegEx": "Raux et al\\.", "year": 2003}, {"title": "A corpus collection and annotation framework for learning multimodal clarification strategies", "author": ["Verena Rieser", "Ivana Kruijff-Korbayov", "Oliver Lemon."], "venue": "SIGdial Workshop on Discourse and Dialogue.", "citeRegEx": "Rieser et al\\.,? 2005", "shortCiteRegEx": "Rieser et al\\.", "year": 2005}, {"title": "Optimizing dialogue management with reinforcement learning: Experiments with the NJFun system", "author": ["Satinder Singh", "Diane Litman", "Michael Kearns", "Marilyn Walker."], "venue": "Journal of Artificial Intelligence Research 16:105\u2013133.", "citeRegEx": "Singh et al\\.,? 2002", "shortCiteRegEx": "Singh et al\\.", "year": 2002}, {"title": "A Network-based End-to-End Trainable Taskoriented Dialogue System", "author": ["Tsung-Hsien Wen", "David Vandyke", "Nikola Mrksic", "Milica Gasic", "Lina M. Rojas-Barahona", "PeiHao Su", "Stefan Ultes", "Steve Young."], "venue": "arXiv:1604.04562", "citeRegEx": "Wen et al\\.,? 2016", "shortCiteRegEx": "Wen et al\\.", "year": 2016}, {"title": "Memory networks", "author": ["Jason Weston", "Sumit Chopra", "Antoine Bordes."], "venue": "arXiv:1410.3916", "citeRegEx": "Weston et al\\.,? 2014", "shortCiteRegEx": "Weston et al\\.", "year": 2014}, {"title": "The dialog state tracking challenge series: A review", "author": ["Jason D. Williams", "Antoine Raux", "Matthew Henderson."], "venue": "Dialogue and Discourse .", "citeRegEx": "Williams et al\\.,? 2016", "shortCiteRegEx": "Williams et al\\.", "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "Frame tracking is an extension of the state tracking (Henderson, 2015; Williams et al., 2016) task.", "startOffset": 53, "endOffset": 93}, {"referenceID": 12, "context": "Frame tracking is an extension of the state tracking (Henderson, 2015; Williams et al., 2016) task.", "startOffset": 53, "endOffset": 93}, {"referenceID": 9, "context": "In a goal-oriented dialogue system, the state tracker records the user goal in a semantic frame (Singh et al., 2002; Raux et al., 2003; El Asri et al., 2014; Laroche et al., 2011).", "startOffset": 96, "endOffset": 179}, {"referenceID": 7, "context": "In a goal-oriented dialogue system, the state tracker records the user goal in a semantic frame (Singh et al., 2002; Raux et al., 2003; El Asri et al., 2014; Laroche et al., 2011).", "startOffset": 96, "endOffset": 179}, {"referenceID": 12, "context": "The Dialogue State Tracking Challenge (DSTC) (Williams et al., 2016) defines this semantic frame with the following components:", "startOffset": 45, "endOffset": 68}, {"referenceID": 5, "context": "posed by Lee and Stent (2016). TL-DST is a framework that allows keeping track of multiple tasks across different domains.", "startOffset": 9, "endOffset": 30}, {"referenceID": 3, "context": "Lee and Stent (2016) trained their tracking model on datasets released for DSTC (DSTC2 and DSTC3, Henderson et al.", "startOffset": 0, "endOffset": 21}, {"referenceID": 11, "context": "Their state tracker is based on a memory network (Weston et al., 2014) and can answer questions about the user goal at the end of the dialogue.", "startOffset": 49, "endOffset": 70}, {"referenceID": 6, "context": "Another related approach was proposed by Perez and Liu (2016), who re-interpreted the state tracking task as a question-answering task.", "startOffset": 41, "endOffset": 62}, {"referenceID": 2, "context": "We sum the letter trigram embeddings for every token to generate trigram hashes (Huang et al., 2013).", "startOffset": 80, "endOffset": 100}, {"referenceID": 4, "context": "We use the Adam (Kingma and Ba, 2014) algorithm to minimize the sum of the loss for pasv and pa,F , with a learning rate of 10\u22123.", "startOffset": 16, "endOffset": 37}, {"referenceID": 4, "context": "We use the Adam (Kingma and Ba, 2014) algorithm to minimize the sum of the loss for pasv and pa,F , with a learning rate of 10\u22123. Learning is stopped when the minimum validation error has not changed for ten epochs. We compare our model to the simple rule-based baseline described by El Asri et al. (2017).", "startOffset": 17, "endOffset": 306}], "year": 2017, "abstractText": "Recently, resources and tasks were proposed to go beyond state tracking in dialogue systems. An example is the frame tracking task, which requires recording multiple frames, one for each user goal set during the dialogue. This allows a user, for instance, to compare items corresponding to different goals. This paper proposes a model which takes as input the list of frames created so far during the dialogue, the current user utterance as well as the dialogue acts, slot types, and slot values associated with this utterance. The model then outputs the frame being referenced by each triple of dialogue act, slot type, and slot value. We show that on the recently published Frames dataset, this model significantly outperforms a previously proposed rule-based baseline. In addition, we propose an extensive analysis of the frame tracking task by dividing it into sub-tasks and assessing their difficulty with respect to our model.", "creator": "LaTeX with hyperref package"}}}