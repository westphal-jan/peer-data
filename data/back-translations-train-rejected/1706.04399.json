{"id": "1706.04399", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Jun-2017", "title": "Enhanced discrete particle swarm optimization path planning for UAV vision-based surface inspection", "abstract": "In built infrastructure monitoring, an efficient path planning algorithm is essential for robotic inspection of large surfaces using computer vision. In this work, we first formulate the inspection path planning problem as an extended travelling salesman problem (TSP) in which both the coverage and obstacle avoidance were taken into account. An enhanced discrete particle swarm optimization (DPSO) algorithm is then proposed to solve the TSP, with performance improvement by using deterministic initialization, random mutation, and edge exchange. Finally, we take advantage of parallel computing to implement the DPSO in a GPU-based framework so that the computation time can be significantly reduced while keeping the hardware requirement unchanged. To show the effectiveness of the proposed algorithm, experimental results are included for datasets obtained from UAV inspection of an office building and a bridge.", "histories": [["v1", "Wed, 14 Jun 2017 10:40:19 GMT  (7143kb,D)", "http://arxiv.org/abs/1706.04399v1", null]], "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.CV", "authors": ["manh duong phung", "cong hoang quach", "tran hiep dinh", "quang ha"], "accepted": false, "id": "1706.04399"}, "pdf": {"name": "1706.04399.pdf", "metadata": {"source": "CRF", "title": "Enhanced Discrete Particle Swarm Optimization Path Planning for UAV Vision-based Surface Inspection", "authors": ["Manh Duong Phung", "Cong Hoang Quach", "Tran Hiep Dinh", "Quang Hab"], "emails": ["duongpm@vnu.edu.vn", "hoangqc@vnu.edu.vn", "tranhiep.dinh@uts.edu.au", "quang.ha@uts.edu.au"], "sections": [{"heading": null, "text": "When monitoring the built infrastructure, an efficient route planning algorithm for robotic inspection of large areas using computer vision is indispensable. In this work, we first formulate the problem of inspection planning as an extended problem of the moving vendor (TSP), taking into account both the coverage and avoidance of obstacles. Then, an advanced discrete particle swarm optimization (DPSO) algorithm is proposed to solve the TSP, improving performance through deterministic initialization, random mutation, and edge replacement. Finally, we use parallel computing to implement the DPSO in a GPU-based framework, so that computing time can be significantly reduced while the hardware requirements remain unchanged. To demonstrate the effectiveness of the proposed algorithm, experimental results for data sets from the unmanned inspection of an office building and a bridge are included, keywords: wayfinding infrastructure inspection, bridge inspection, optimization."}, {"heading": "1. Introduction", "text": "In fact, it is that most people are able to determine for themselves what they want and what they want. (...) It is not that they are able to determine for themselves. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...)\" It is as if. \"(...\" It is. \"(...)\" It is. \"(It is.\" (...) \"It is.\" (It is.) \"(It is.\" (It is.) \"(It is.\" (It is.) \"(It is.\" (It is.) \"(It is.\" It is. \"(It is.)\" (It is. \"It is.\" (It is.) \"It is.\" (It. \"It is.\" (It is. \"It.\" It. \"It is.\" (It.) \"It is.\" (It is. \"It.\" It is. \"(It.\" It. \"It.\" It. \"It.\" It. \"It.\" It is. \")\" (It is. \"(It.\" It. \"It is.\" It is. \"It is. (It.\" It. \"It.\" It. \")\" (It is. (It. \"It.\" It is. \"It is.\") \"(It is.\" (It is. \"It.\" It is. \")\" (It is. (It. \"It.\") \"(It is.\" (It is. \")\" (It is. (It. \"It is.\" It is. \")\" (It is. (It is. (It. \"It.\") \"It is. (It is.\") \"(It is. (It is.\" it. (It is. \"It.\" It. \"It.\") \"It is. (It is. (It is.\" it. \"It is.\") \"It is."}, {"heading": "2. Problem formulation", "text": "Our ultimate goal is to develop a route planning system for a drone to inspect planar surfaces of largely built-up structures such as buildings or bridges. The sensor used for the inspection is a CCD camera attached to a controllable gimbal. We assume that the 3D model of the structure and the environment is known before the design is complete, for example through the use of laser scanners. The IPP goal is to find the shortest path for navigation of the drone and take photos of the target surfaces so that the captured images can later be processed to detect potential defects or damage. We first consider IPP as an advanced TSP and then solve it with the developed DPSO. This section provides the calculation of point-of-of-view selection and point-to-of-of-of-points, which are fundamental to formulating the expanded TSP problem."}, {"heading": "2.1. Viewpoint selection", "text": "The focal point is the search for a series of camera configurations that together cover the entire surface of interest. Lass P is a finite set of geometric primitives that encompasses the surfaces to be captured. Each geometric primitive corresponds to a plane spot within the camera's field of vision. Lass C is the configuration space, so any possible configuration is aimed at a subset of P. Each configuration corresponds to a position (xi, yi, zi) and orientation (s, i, i) of the camera. In the face of an endless series of C configurations, the viewing selection on one side invokes the minimum number of configurations."}, {"heading": "2.2. Point-to-point pathfinding", "text": "In view of the points of view, the shortest barrier-free path between each pair must be found to form a graph for later processing. Without losing universality, different approaches to motion planning such as roadmap, decoupling, potential field and mathematical programming can be used depending on the drone model and dynamic constraints [29, 30]. Since the majority of drones currently in production are often already equipped with an in-house tracking controller and a waypoint by system, this approach can be simplified to a discrete search that generates a series of waypoints linking two viewpoints and avoiding obstacles. To do this, the working area is initially divided into a grid of voxels. Each voxel has the free or occupied status corresponding to the presence or absence of an object in that voxel."}, {"heading": "2.3. Modelling the IPP as a TSP", "text": "We define each viewpoint as a node, i, and the path between two viewpoints as an edge, eij. The length, lij, the edge eij is the price for the journey from node i to node j, which is determined by (5). If the path between node i and node j is blocked due to obstacles, a virtual path between them is defined and very high costs are assigned to the path. If we define the set of all nodes by V and the set of all edges by E, we restrict the movement of the UAV to the graph G = (V, E). The IPP task now is to find a route that visits each node (viewpoint) exactly once, including the way back to the starting node ii. Let T be the set of these nodes."}, {"heading": "3. Enhanced Discrete Particle Swarm Optimization for Inspection", "text": "Path PlanningParticle swarm optimization (PSO), inspired by the social behavior of flocks of birds or fish, is a population-based stochastic technique for solving optimization problems. In PSO, a finite group of particles is created, each particle seeking the global optimum by moving and developing over generations. First, each particle is assigned a random position and velocity, and then it moves by updating its best previous position, Pk, and the best position of the swarm, Gk. Leave xk or the position and velocity of a particle at generation k. The position and velocity of this particle in the next generation is given by: vk + 1 \u2190 w.vk + 1r1. (Pk \u2212 xk) + 2r2. (Gk \u2212 xk) The best position of a particle at generation k. (11) xk + vk + 1, (12) where w is the inertial coefficient."}, {"heading": "3.1. DPSO approach to the IPP", "text": "Since IPP is defined in (7) - (10) is a discrete optimization problem, advanced algorithms for discrete particle optimization (DPSO) are being developed for our problem, motivated by [35]. To this end, let's start with a sketch of our approach to solving the IPP problem using DPSO with improvements in initialization, mutation, edge replacement and parallel implementation. (1) Let's define the position of the particles as sequences of N + 1 nodes, all different except that the last node must be equal to the first: x = (n1, n2,..., nN, nN + 1), ni \u00b2 of the city as a sequence of N + 1, (13) where N is the number of nodes, N = | V |. Since each sequence is a feasible tour, satisfactory (8) and (9), to minimize the objective function (7), (11) and the speed (we must) for the parameters to be seen."}, {"heading": "3.2. Augmentations to the DPSO", "text": "To accelerate convergence and avoid getting stuck in the local minimum, we propose to improve the optimization performance of the DSO as follows."}, {"heading": "3.2.1. Deterministic initialization", "text": "The swarm in the DPSO, which has no prior knowledge of the search space, is initialized with its particles at random positions. This initialization works well for a relatively small search space. In the case of large structures, the search result largely depends on the starting positions of the particles. Therefore, in order to increase the probability of achieving the global optimum, we propose to use features of vantage points to generate multiple seed particles to facilitate the development of the swarm in the search space. In our application, vantage points are generated based on grid decomposition. Consequently, a return journey, if no obstacles occur, would produce an almost optimal orbit, as shown in Figure 3. Based on this observation, positions for multiple particles are deterministically assigned during the initialization process."}, {"heading": "3.2.2. Random mutation", "text": "Similar to other evolutionary optimization techniques such as the genetic algorithm or the ant colony system, the PSO conducts both exploration and exploitation of the search area. As the particles are initially far apart, they explore different regions in the search area. As the swarm develops over generations, it converges and begins to engage in more exploitation. At this stage, the distances between the particles gradually decrease to the size known as \"swarm collapse\" [34], making many particles almost identical. To avoid the collapse situation and maintain the balance between exploration and exploitation, random mutations are used for particles. Identical particles are filtered after each i-generation, the rest are then sorted according to their cost values. Finally, only one third of the smallest particles are stored for the next generation."}, {"heading": "3.2.3. Edge exchange", "text": "The enhancement is based on the geometric feature for which crossing edges can be exchanged to allow a shorter tour. As 3D cross checking can be difficult, a complete search similar to the 2-opt algorithm is used here to compare any valid combination of edge swapping mechanisms [36]. In this search, any possible edge swapping is evaluated and the one with the greatest improvement is selected. Figure 4 illustrates the case when edge swapping between (2,6) and (3,7) shortens the tour. As this augmentation is mathematically sophisticated, it should only be used when the random mutation makes no difference."}, {"heading": "3.2.4. Parallel implementation on GPU", "text": "Since our optimization algorithms are also based on SIMD, we can use this advantage to implement the proposed DPSO in parallel in GPUs to reduce computing time. Diagram and pseudo code for parallel implementation are shown in Fig. 5 and Fig. 6 respectively. After initialization, parameters of a particle such as speed, position and fitness are calculated in parallel, each particle in a different thread. At the end of each generation, the results are stored in the global memory to update these parameters and then a new parallel calculation round is started. In UAVs, parallel programs can be implemented via the current configuration of an onboard computer with good GPU utilization and low power consumption such as Jetson TK1 with 192 CUDA components (MAPU control) for communication with the motherboard VUleS."}, {"heading": "3.3. Enhanced DPSO Pseudo Code", "text": "s avoidance of obstacles, a selected combination of random and deterministic initialization is performed on a CPU for each particle in the swarm, while its developments, including the calculation of updated particle velocity and position, random mutation and edge exchange, are implemented in parallel on a GPU. Taking full advantage of the advanced DPSO algorithm, the pseudo code for our proposed algorithm is presented in Figure 7, incorporating the aforementioned augmentations."}, {"heading": "4. Experimental results", "text": "The first data set represents one floor of the building with a size of 25 m x 12 m x 8 m. The second data set represents a part of the bridge with pillars and areas with a size of 22 m x 10 m x 4.5 m. Figures 8a and 9a show the data sets in point cloud representation. To apply the IPP algorithm to the data sets, planar surfaces and boundaries must be extracted from them. For this task, we have developed software for the automatic interpretation of sound point cloud data, which is described in detail in [38]. The software uses the Random Sample Consensus (RANSAC) algorithm combined with data from an inertial measuring unit (IMU) to detect the serial surface. The convex envelope algorithm is used to determine its boundaries. The remaining point DDA is linked to three cloud objects located near a 3D structure."}, {"heading": "4.1. Path Generation and DPSO Convergence", "text": "Figures 8c and 9c show the paths generated to inspect three selected surfaces of each dataset. Figures 8d and 9d show the paths when obstacles occur. It is evident that driving back and forth in these paths is predominant, except for significant changes in the occurrence of obstacles or when switching surfaces. Figures 8e and 8f show the front and side views of a zoomable part of the inspection path showing that obstacles have been circumvented. Figures 9e and 9f show similar results for the bridge data. Figure 10 shows the graphs of the fitness value as an objective function of the generation number for the two inspection cases of a building and a bridge. In each diagram, fitness represents the cost of crossing the inspection path. From the DPSO office building dataset, the solution of the extended TSP is derived by solving the number of the surrounding conditions (and the surface conditions of the generations)."}, {"heading": "4.2. Effect of the augmentations on the DPSO", "text": "Table 1 shows the impact of enhancements on performance improvement over DPSO as a percentage using our advanced algorithm. Here, deterministic initialization using the data set from the building inspection results in a significant 2.8-fold improvement in processing time and a slight 1.4% improvement in travel costs. It is noteworthy that computing efficiency in terms of rapid convergence actually results from improving the evolving generations of the swarm through initialization. On the other hand, it is not surprising that edge replacement entails some improvement in travel costs since it uses raw force transposition. Likewise, parallel implementation results in the most significant impact on computation time thanks to the parallel processing capacity utilizing the SIMD function of the DPSO. To show consistency in the effectiveness of the proposed approach, we use our improved DPSO algorithm not only with the conventional DPSO, but also with an ASPS (where ASPS is expressed with an ASPS)."}, {"heading": "5. Conclusion", "text": "In this paper, we have presented an advanced Discrete Particle Optimization (DPSO) algorithm to solve the problem of Inspection Paths (IPP), which is formulated as an advanced problem for the moving vendor (TSP), while taking into account the coverage and avoidance of obstacles. By adding deterministic initialization, random mutations, edge swapping, and parallel implementation on the GPU, the proposed DPSO can significantly improve its performance in terms of both time and travel costs. Validity and effectiveness of the proposed technique will be verified in successful experiments with two real data sets collected through unmanned inspection of an office building and a concrete bridge. In future work, the algorithm for inspecting non-planar surfaces and incorporating online replanning strategies for inspecting built infrastructure will be expanded irregularly."}, {"heading": "Acknowledgments", "text": "The lead author would like to acknowledge an Endeavours Research Fellowship (ERF-PDR-142403-2015) of the Australian government, supported by the University of Technology Sydney Data Arena Research Exhibit Grant 2016 and Vietnam National University Grant QG.16.29."}], "references": [{"title": "Detection of rust defects on steel bridge coatings via digital image recognition", "author": ["K.-W. Liao", "Y.-T. Lee"], "venue": "Automation in Construction 71 (Part 2) ", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Vision-based automated crack detection for bridge inspection", "author": ["C.M. Yeum", "S.J. Dyke"], "venue": "Comp.-Aided Civil and Infrastruct. Engineering 30 (10) ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Long-distance precision inspection method for bridge cracks with image processing", "author": ["G. Li", "S. He", "Y. Ju", "K. Du"], "venue": "Automation in Construction 41 ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Image-based retrieval of concrete crack properties for bridge inspection", "author": ["R. Adhikari", "O. Moselhi", "A. Bagchi"], "venue": "Automation in Construction 39 ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "A novel extended potential field controller for use on aerial robots", "author": ["A.A. Woods", "H.M. La", "Q. Ha"], "venue": "in: Proceedings of the 12th IEEE International Conference on Automation Science and Engineering (CASE)", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Bridge deck delamination identification from unmanned aerial vehicle infrared imagery", "author": ["A. Ellenberg", "A. Kontsos", "F. Moon", "I. Bartoli"], "venue": "Automation in Construction 72 (Part 2) ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "The future of construction automation: Technological disruption and the upcoming ubiquity of robotics", "author": ["T. Bock"], "venue": "Automation in Construction 59 ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Color tracking for multiple robot control using a system-on-programmable-chip", "author": ["Y. Yu", "N. Kwok", "Q. Ha"], "venue": "Automation in Construction 20 ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Past", "author": ["R. Montero", "J. Victores", "S. Martnez", "A. Jardn", "C. Balaguer"], "venue": "present and future of robotic tunnel inspection, Automation in Construction 59 ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Cooperative and geometric learning algorithm (CGLA) for path planning of UAVs with limited information", "author": ["B. Zhang", "W. Liu", "Z. Mao", "J. Liu", "L. Shen"], "venue": "Automatica 50 (3) ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Coverage for robotics - a survey of recent results", "author": ["H. Choset"], "venue": "Annals of Mathematics and Artificial Intelligence 31 ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2001}, {"title": "S", "author": ["H. Choset", "K. Lynch", "S. Hutchinson", "G. Kantor", "W. Burgard", "L. Kavraki"], "venue": "Thrun (Eds.), Principles of Robot Motion: Theory, Algorithms, and Implementation, The MIT Press", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2005}, {"title": "Morse decompositions for coverage tasks", "author": ["E. Acar", "H. Choset", "A. Rizzi", "P. Atkar", "D. Hull"], "venue": "International Journal of Robotics Research 21 (4) ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2002}, {"title": "Real-time planning for covering an initially-unknown spatial environment", "author": ["V. Shivashankar", "R. Jain", "U. Kuter", "D. Nau"], "venue": "in: Proceedings of the Twenty-Fourth International Florida Artificial Intelligence Research Society Conference", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Spiral-stc: an on-line coverage algorithm of grid environments by a mobile robot", "author": ["Y. Gabriely", "E. Rimon"], "venue": "in: Proceedings of the IEEE International Conference in Robotics and Automation (ICRA), Vol. 1", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2002}, {"title": "Three-dimensional coverage planning for an underwater inspection robot", "author": ["B. Englot", "F. Hover"], "venue": "International Journal of Robotics Research 32 (9-10) ", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Active planning for underwater inspection and the benefit of adaptivity", "author": ["G.A. Hollinger", "B. Englot", "F.S. Hover", "U. Mitra", "G.S. Sukhatme"], "venue": "The International Journal of Robotics Research 32 (1) ", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Speeding up coverage queries in 3d multi-goal path planning", "author": ["P. Janousek", "J. Faigl"], "venue": "in: Proceedings of the IEEE International Conference on Robotics and Automation (ICRA)", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Some complexity results for metric view planning problem with traveling cost and visibility range", "author": ["P. Wang", "K. Gupta", "R. Krishnamurti"], "venue": "IEEE Transactions on Automation Science and Engineering 8 (3) ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "View planning and automated data acquisition for three-dimensional modeling of complex sites", "author": ["P.S. Blaer", "P.K. Allen"], "venue": "Journal of Field Robotics 26 (11-12) ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "Planning tours of robotic arms among partitioned goals", "author": ["M. Saha", "T. Roughgarden", "J.-C. Latombe", "G. Snchez-Ante"], "venue": "The International Journal of Robotics Research 25 (3) ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2006}, {"title": "Randomized planning for short inspection paths", "author": ["T. Danner", "L.E. Kavraki"], "venue": "in: Proceedings of the IEEE International Conference on Robotics and Automation (ICRA)", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2000}, {"title": "Planning complex inspection tasks using redundant roadmaps", "author": ["B. Englot", "F. Hover"], "venue": "in: H. I. Christensen, O. Khatib (Eds.), Robotics Research, 23  Vol. 100 of Springer Tracts in Advanced Robotics, Springer International Publishing", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2016}, {"title": "Chained lin-kernighan for large traveling salesman problems", "author": ["D. Applegate", "W. Cook", "A. Rowe"], "venue": "INFORMS Journal on Computing 15 (1) ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2003}, {"title": "Asymptotically optimal inspection planning using systems with differential constraints", "author": ["G. Papadopoulos", "H. Kurniawat", "N. Patrikalakis"], "venue": "in: Proceedings of the IEEE International Conference in Robotics and Automation (ICRA)", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2013}, {"title": "Uncertaintydriven view planning for underwater inspection", "author": ["G. Hollinger", "B. Englot", "F. Hover", "U. Mitra", "G. Sukhatme"], "venue": "in: Proceedings of the IEEE International Conference in Robotics and Automation (ICRA)", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2012}, {"title": "Optimal area covering using genetic algorithms", "author": ["P. Jimenez", "B. Shirinzadeh", "A. Nicholson", "G. Alici"], "venue": "in: Proceedings of the IEEE/ASME International Conference on Advanced Intelligent Mechatronics", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2007}, {"title": "A survey of motion planning algorithms from the perspective of autonomous uav guidance", "author": ["C. Goerzen", "Z. Kong", "B. Mettler"], "venue": "Journal of Intelligent and Robotic Systems 57 (1) ", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2009}, {"title": "Survey of motion planning literature in the presence of uncertainty: Considerations for uav guidance", "author": ["N. Dadkhah", "B. Mettler"], "venue": "Journal of Intelligent & Robotic Systems 65 (1) ", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}, {"title": "M", "author": ["S. Scherer", "S. Singh", "L. Chamberlain"], "venue": "Elgersma, Flying fast and low among obstacles: Methodology and experiments., The International Journal of Robotics Research 27 (5) ", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2008}, {"title": "On-line path generation for unmanned aerial vehicles using b-spline path templates", "author": ["D. Jung", "P. Tsiotras"], "venue": "Journal of Guidance, Control, and Dynamics 36 (6) ", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2013}, {"title": "A formal basis for the heuristic determination of minimum cost paths", "author": ["P. Hart", "N. Nilsson", "B. Raphael"], "venue": "IEEE Transactions on Systems Science and Cybernetics 4 (2) ", "citeRegEx": "33", "shortCiteRegEx": null, "year": 1968}, {"title": "Y", "author": ["J. Kennedy", "R. Eberhart"], "venue": "Shi (Eds.), Swarm Intelligence, Morgan Kaufmann", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2001}, {"title": "Discrete particle swarm optimization", "author": ["M. Clerc"], "venue": "illustrated by the traveling salesman problem, in: G. Onwubolu, B. Babu (Eds.), New Optimization Techniques in Engineering, Vol. 141 of Studies in Fuzziness and Soft Computing, Springer Berlin Heidelberg", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2004}, {"title": "A", "author": ["G. Gutin"], "venue": "Punnen (Eds.), The Traveling Salesman Problem and Its Variations, Springer US", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2007}, {"title": "Performance of the nvidia jetson tk1 in hpc", "author": ["Y. Ukidave", "D. Kaeli", "U. Gupta", "K. Keville"], "venue": "in: 2015 IEEE International Conference on Cluster Computing (CLUSTER)", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2015}, {"title": "Automatic interpretation of unordered point cloud data for UAV navigation in construction", "author": ["M. Phung", "C. Quach", "D. Chu", "N. Nguyen", "T. Dinh", "Q. Ha"], "venue": "in: Proceedings of the 14th International Conference on Control, Automation, Robotics and Vision (ICARCV)", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2016}, {"title": "Ant colony system: a cooperative learning approach to the traveling salesman problem", "author": ["M. Dorigo", "L.M. Gambardella"], "venue": "IEEE Trans. Evolutionary Computation 1 (1) ", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "Over the last decade, much research effort has been devoted to this theme with computer vision becoming an important component of modern Structural Health Monitoring (SHM) systems for built infrastructure such as rust detection of steel bridges [1], crack detection of concrete bridges [2, 3, 4], or bridge condition assessment [5].", "startOffset": 245, "endOffset": 248}, {"referenceID": 1, "context": "Over the last decade, much research effort has been devoted to this theme with computer vision becoming an important component of modern Structural Health Monitoring (SHM) systems for built infrastructure such as rust detection of steel bridges [1], crack detection of concrete bridges [2, 3, 4], or bridge condition assessment [5].", "startOffset": 286, "endOffset": 295}, {"referenceID": 2, "context": "Over the last decade, much research effort has been devoted to this theme with computer vision becoming an important component of modern Structural Health Monitoring (SHM) systems for built infrastructure such as rust detection of steel bridges [1], crack detection of concrete bridges [2, 3, 4], or bridge condition assessment [5].", "startOffset": 286, "endOffset": 295}, {"referenceID": 3, "context": "Over the last decade, much research effort has been devoted to this theme with computer vision becoming an important component of modern Structural Health Monitoring (SHM) systems for built infrastructure such as rust detection of steel bridges [1], crack detection of concrete bridges [2, 3, 4], or bridge condition assessment [5].", "startOffset": 286, "endOffset": 295}, {"referenceID": 4, "context": "In this regard, it is promising to integrate a computer vision system into mobile inspection robots, such as unmanned aerial vehicles (UAVs) [6, 7] or ubiquitous robots [8, 9], especially when dealing with large and hardly accessible structures like tunnels [10].", "startOffset": 141, "endOffset": 147}, {"referenceID": 5, "context": "In this regard, it is promising to integrate a computer vision system into mobile inspection robots, such as unmanned aerial vehicles (UAVs) [6, 7] or ubiquitous robots [8, 9], especially when dealing with large and hardly accessible structures like tunnels [10].", "startOffset": 141, "endOffset": 147}, {"referenceID": 6, "context": "In this regard, it is promising to integrate a computer vision system into mobile inspection robots, such as unmanned aerial vehicles (UAVs) [6, 7] or ubiquitous robots [8, 9], especially when dealing with large and hardly accessible structures like tunnels [10].", "startOffset": 169, "endOffset": 175}, {"referenceID": 7, "context": "In this regard, it is promising to integrate a computer vision system into mobile inspection robots, such as unmanned aerial vehicles (UAVs) [6, 7] or ubiquitous robots [8, 9], especially when dealing with large and hardly accessible structures like tunnels [10].", "startOffset": 169, "endOffset": 175}, {"referenceID": 8, "context": "In this regard, it is promising to integrate a computer vision system into mobile inspection robots, such as unmanned aerial vehicles (UAVs) [6, 7] or ubiquitous robots [8, 9], especially when dealing with large and hardly accessible structures like tunnels [10].", "startOffset": 258, "endOffset": 262}, {"referenceID": 9, "context": "Depending on size of the inspecting region, the trajectory can be planned for multiple robots to coordinately conduct the data collection [11].", "startOffset": 138, "endOffset": 142}, {"referenceID": 10, "context": "The cell shape can be trapezoidal, square, cubic, or customised depending on critical points of Morse functions, often with a uniform size [12, 13, 14].", "startOffset": 139, "endOffset": 151}, {"referenceID": 11, "context": "The cell shape can be trapezoidal, square, cubic, or customised depending on critical points of Morse functions, often with a uniform size [12, 13, 14].", "startOffset": 139, "endOffset": 151}, {"referenceID": 12, "context": "The cell shape can be trapezoidal, square, cubic, or customised depending on critical points of Morse functions, often with a uniform size [12, 13, 14].", "startOffset": 139, "endOffset": 151}, {"referenceID": 13, "context": "heuristic algorithm such as wavefront [15] or spiral spanning tree [16].", "startOffset": 38, "endOffset": 42}, {"referenceID": 14, "context": "heuristic algorithm such as wavefront [15] or spiral spanning tree [16].", "startOffset": 67, "endOffset": 71}, {"referenceID": 15, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 16, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 17, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 18, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 19, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 20, "context": "In this context, the IPP separation approach tackling the non-deterministic polynomial time (NP)hard problems can be divided into two, the art gallery problem that finds the smallest set of viewpoints to cover the whole gallery, and the travelling salesman problem (TSP) that finds the shortest path to visit a set of given cities [17, 18, 19, 20, 21, 22].", "startOffset": 331, "endOffset": 355}, {"referenceID": 21, "context": "Each problem can be solved separately using known methods such as the randomised, incremental algorithm for the art gallery problem [23, 24] and the chained Lin-Kernighan heuristics for the TSP [25].", "startOffset": 132, "endOffset": 140}, {"referenceID": 22, "context": "Each problem can be solved separately using known methods such as the randomised, incremental algorithm for the art gallery problem [23, 24] and the chained Lin-Kernighan heuristics for the TSP [25].", "startOffset": 132, "endOffset": 140}, {"referenceID": 23, "context": "Each problem can be solved separately using known methods such as the randomised, incremental algorithm for the art gallery problem [23, 24] and the chained Lin-Kernighan heuristics for the TSP [25].", "startOffset": 194, "endOffset": 198}, {"referenceID": 24, "context": "Other approaches have focused on sampling the configuration space [26], using submodular objective function [27], or employing genetic algorithms [28] but they often require constraining the robot to certain dynamic models or end with near-optimal solutions.", "startOffset": 66, "endOffset": 70}, {"referenceID": 25, "context": "Other approaches have focused on sampling the configuration space [26], using submodular objective function [27], or employing genetic algorithms [28] but they often require constraining the robot to certain dynamic models or end with near-optimal solutions.", "startOffset": 108, "endOffset": 112}, {"referenceID": 26, "context": "Other approaches have focused on sampling the configuration space [26], using submodular objective function [27], or employing genetic algorithms [28] but they often require constraining the robot to certain dynamic models or end with near-optimal solutions.", "startOffset": 146, "endOffset": 150}, {"referenceID": 27, "context": "Without loss of generality, different motion planning approaches such as roadmap, decoupling, potential field and mathematical programming can be used here depending on the UAV model and dynamic constraints [29, 30].", "startOffset": 207, "endOffset": 215}, {"referenceID": 28, "context": "Without loss of generality, different motion planning approaches such as roadmap, decoupling, potential field and mathematical programming can be used here depending on the UAV model and dynamic constraints [29, 30].", "startOffset": 207, "endOffset": 215}, {"referenceID": 27, "context": "In this work, the hierarchical decoupled approach is employed in which open- and closed-loop controllers operating at a variety of rate are linked together from top to bottom [29, 31, 32].", "startOffset": 175, "endOffset": 187}, {"referenceID": 29, "context": "In this work, the hierarchical decoupled approach is employed in which open- and closed-loop controllers operating at a variety of rate are linked together from top to bottom [29, 31, 32].", "startOffset": 175, "endOffset": 187}, {"referenceID": 30, "context": "In this work, the hierarchical decoupled approach is employed in which open- and closed-loop controllers operating at a variety of rate are linked together from top to bottom [29, 31, 32].", "startOffset": 175, "endOffset": 187}, {"referenceID": 31, "context": "Thus, the A* algorithm [33] can be used to find the shortest path between viewpoints.", "startOffset": 23, "endOffset": 27}, {"referenceID": 32, "context": "Particle swarm optimization (PSO), inspired by social behavior of bird flocking or fish schooling, is a population-based stochastic technique designed for solving optimization problems [34].", "startOffset": 185, "endOffset": 189}, {"referenceID": 0, "context": "where w is the inertial coefficient, \u03c61 is the cognitive coefficient, \u03c62 is the social coefficient, and r1, r2 are random samples of a uniform distribution in the range [0,1].", "startOffset": 169, "endOffset": 174}, {"referenceID": 33, "context": "DPSO approach to the IPP Since the IPP defined in (7) \u2013 (10) is a discrete optimization problem, enhanced algorithms for discrete particle optimization (DPSO) will be developed for our problem, motivated by [35].", "startOffset": 207, "endOffset": 211}, {"referenceID": 32, "context": "At this stage, distances between particles will gradually reduce to the size termed \u201dswarm collapse\u201d [34], whereby many particles will become almost identical.", "startOffset": 101, "endOffset": 105}, {"referenceID": 34, "context": "Here, as 3D cross checking may be difficult, a complete search similarly to the 2-opt algorithm is employed to compare each valid combination of the swapping mechanism for edges [36].", "startOffset": 178, "endOffset": 182}, {"referenceID": 35, "context": "In UAVs, parallel programs can be implemented in recent onboard computers having good GPU capability and low power consumption such as Jetson TK1 with 192 CUDA Cores (Kepler GPU), 5 W [37].", "startOffset": 184, "endOffset": 188}, {"referenceID": 36, "context": "unordered point cloud data described in details in [38].", "startOffset": 51, "endOffset": 55}, {"referenceID": 37, "context": "pare our enhanced DPSO algorithm not only with the conventional DPSO but also with an ant colony system (ACS), where the ACS is implemented as in [39].", "startOffset": 146, "endOffset": 150}], "year": 2017, "abstractText": "In built infrastructure monitoring, an efficient path planning algorithm is essential for robotic inspection of large surfaces using computer vision. In this work, we first formulate the inspection path planning problem as an extended travelling salesman problem (TSP) in which both the coverage and obstacle avoidance were taken into account. An enhanced discrete particle swarm optimisation (DPSO) algorithm is then proposed to solve the TSP, with performance improvement by using deterministic initialisation, random mutation, and edge exchange. Finally, we take advantage of parallel computing to implement the DPSO in a GPU-based framework so that the computation time can be significantly reduced while keeping the hardware requirement unchanged. To show the effectiveness of the proposed algorithm, experimental results are included for datasets obtained from UAV inspection of an office building and a bridge.", "creator": "LaTeX with hyperref package"}}}