{"id": "1706.05059", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jun-2017", "title": "Conjunctions of Among Constraints", "abstract": "Many existing global constraints can be encoded as a conjunction of among constraints. An among constraint holds if the number of the variables in its scope whose value belongs to a prespecified set, which we call its range, is within some given bounds. It is known that domain filtering algorithms can benefit from reasoning about the interaction of among constraints so that values can be filtered out taking into consideration several among constraints simultaneously. The present pa- per embarks into a systematic investigation on the circumstances under which it is possible to obtain efficient and complete domain filtering algorithms for conjunctions of among constraints. We start by observing that restrictions on both the scope and the range of the among constraints are necessary to obtain meaningful results. Then, we derive a domain flow-based filtering algorithm and present several applications. In particular, it is shown that the algorithm unifies and generalizes several previous existing results.", "histories": [["v1", "Thu, 15 Jun 2017 19:51:52 GMT  (35kb)", "http://arxiv.org/abs/1706.05059v1", "15 pages plus appendix"]], "COMMENTS": "15 pages plus appendix", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["victor dalmau"], "accepted": false, "id": "1706.05059"}, "pdf": {"name": "1706.05059.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "ar Xiv: 170 6.05 059v 1 [cs.A I] 1 5Ju n20 17"}, {"heading": "1 Introduction", "text": "This year, it is only a matter of time before an agreement is reached."}, {"heading": "2 Preliminaries", "text": "A conjunction of constraints, (CAC) is a tuple (V, D, L, C) in which V is a finite set whose elements are called variables, D is a finite set which is called domain, L: V \u2192 2D is a figure which transmits each variable v into a subset of D which we designate as its list, and C is a finite set of constraints in which a constraint is an expression of the form under (S, R, min, max), in which S V is designated as the scope of the restriction, R D is designated as the range of the restriction, and min, max are integers which 0 \u2264 \u2264 \u2264 \u2264 | S |.A solution of (V, L, C) is an illustration s, the s (v), L (v), V (v), which is designated for each variable v (V) and min (V).A The variability of constraints, V (V), V (G), V (G, G, G (G), V (G), V (G, G, G, G (G), V (G), V (G, G, G, G, G, G, G (G), G (G, G, G, G, G, G, G, G (G), G (G, G, G, G, G, G, G, G, G, G, G), G (G, G (G, G)."}, {"heading": "3 Network hypergraphs", "text": "A hypergraph H is a tuple, (V (H), E (H)), where V (H) is a finite set whose elements are called nodes, and E (H) is set, whose elements are subsets of V (H) called hyperedges. A hypergraph is completely unimodular if its incidence matrixM is completely unimodular, that is, if each square submatrix of M is a determinant 0, + 1, or \u2212 1. In this paper, we are dealing with a subset of completely unimodular hypergraphs called network hypergraphs. To define a network hypergraph, we need to introduce a few definitions. An oriented tree T is achieved by orienting the edges of an undirected tree. A path p in T is any sequence x1, x2,."}, {"heading": "4 Restricting only the scope or the range", "text": "It seems natural to first ask which tractable parts of the problem can be explained by taking into account the results developed there. Indeed, it follows from a result of Fa \ufffd rnquivst and Jonsson [12] that some mild technical assumptions, if arbitrary ranges are allowed in constraints, can indeed be solved the domain filter problem by applying the results developed there. Indeed, it easily follows that the result of Fa \ufffd rnquivst and Jonsson [12] is that some mild technical assumptions, if arbitrary ranges are allowed in constraints, the domain filter problem can be solved in polynomial time if the hypergraphy of constraints in the tree width is limited (see Appendix A for a precise statement and proof)."}, {"heading": "5 A flow-based algorithm", "text": "We will first deal with the case where D is a boolean, say D = {0}. Therefore, we can assume that any constraint below (S, R, min, max) in C, however, satisfies R = {1}, because if R = {0} it can be reformulated as sub (S, 1), we can easily construct an equivalent instance without variable v.It is easy to construct a system of linear equations whose feasible solutions are the solutions of I. Let v1, vn be the variables of I and let Cj = (Sj, {1}, minj."}, {"heading": "6 Some applications", "text": "The aim of this section is to provide proof that the type of CACs covered by the approach developed in Section 5 are common in practice. To2 In fact, as shown in [30,31], it is only necessary to solve the problem of maximum flow during the first call, so that it could be argued that a more realistic limit is the runtime of the algorithm O (n + m). To this end, we will re-examine several families of CACs for which domain filtering has already been introduced, and show how they can be solved with our algorithm and in some cases generalized. In addition, whenever possible, we will compare the time complexity limits of our algorithm with other state-of-the-art algorithms for the same problem. Like other flow-based algorithms, the algorithm proposed here has a very good time complexity in a branch of the search tree. However, in our comparison we will only consider the cost of calling the algorithm once the total cost of the search is due to the fact that the problem exists below the size of the search."}, {"heading": "6.1 Disjoint constraints", "text": "As an example, we have seen in Example 1 that both can be formulated as a conjunction (V, D, L, C), and the edge representing a hyperedge of the form Cd = Lower (V, {d}, mind, maxd), and the hyperedge representing a hyperedge of the form Cd = Lower (V), and the hyperedge representing a hyperedge of the form Cd = Lower (V), and the hyperedge of the hyperedge HD = V \u00d7 {D}, for each d'D. It is not difficult to see (see Example 4) that the hyperedge T is defined as follows: The node theorem of T consists of a new node-D, where r is a new node. The edge row of T contains an edge of the edge representing an edge of hv-V to r (associated) and from r to each node d (associated)."}, {"heading": "6.2 Domains consisting of subsets", "text": "Consider the following generalization of our setting, in which in a CAC (V, D, L, C) each variable v must be assigned to a subset of L (v) (instead of a single element). In this case, the semantics of the sub-constraint must also be generalized. To avoid confusion, we refer to this variant of the sub-constraint as set under constraint. For example, the symmetric-GCC constraint [21] is exactly a conjunction (V, D, L, C) of those under constraints of the form Among (V, {d}, min, max), where d represents a constraint of the sub-constraint as set under constraint."}, {"heading": "6.3 The sequence constraint", "text": "The sequence constraint [6] corresponds to instances ({v1,.., vn}, D, L, C) with constraints Under ({vi,.., vi + k}, R, min, max), i = 1,.., n \u2212 k for some fixed integers min, max, k, and fixed R D. It is not difficult to see that the hypergraph of the canonical booleanization of the sequence constraint is not a network hypergraph. However, as shown in [26], you get an equivalent instance with a network hypergraph using a different encoding in which for each original variable vi \u0109V a Boolean variable xi is provided, which should be true whenever vi takes a value in R and otherwise wrong. Under this alternative encoding, we get a Boolean instance I consisting of constraints under ({xi,., xi + k}, n)."}, {"heading": "6.4 TFO model", "text": "The TFO model was introduced by Razgon et al. [29] as a generalization of several common global constraints. Formally, a TFO model is a triple model (V, F1, F2), where V is a finite set of vertices, and F1 and F2 are nonempty families of V subsets, so that two sentences belonging to the same family are either resolved or contained in each other. Each sentence Y in F1 and F2 is associated with two nonnegative integers minY, maxY \u2264 | Y | A subset X of V should be valid if minY \u2264 X-Y \u2264 maxY \u2264 maxY for each Y unit F1-F2. The task is to find the largest valid subset. Although the methods introduced in this paper can be generalized to address the optimization version as well, we will only now consider the feasibility problem of finding a valid subset (or reporting that there is no valid subset)."}, {"heading": "6.5 Conjunction of among constraints with full domain", "text": "Some global constraints examined in the literature correspond to conjunctions (V, D, L, C) between constraints where the scope of each constraint is the complete set of variables V. This class, of course, contains the GCC constraint and several others as well, since we do not require R to be a singleton. For example, the Order Distribute constraint introduced by Petit and Re \u0301 gin [28] can be encoded as a conjunction (V, D, L, C) of constraints where domain D has an arbitrary (but fixed) arrangement d1..., d | D | and in any constraint Under (S, R, min, max), S = V, and R in the form {di,..., d | D |}. We will show that the hypergraph of the link between the constraints defining OrderedDistribution is far removed."}, {"heading": "6.6 Adding new among constraints to a GCC constraint", "text": "Let (V, D, L, C) be a conjunction between the constraints that encrypt the GCC constraint (see Example 1) and assume that we are interested in adding several new constraints to it. Generally, we could end up with a hard instance, but depending on the form of the new constraints, we might still be able to maintain tractability. What constraint we could safely add? This question was answered by Re-gin [32]. Specifically, [32] shows that the domain filter problem is still tractable whenever: (a) any new constraint that has been added has scope V and, moreover, the ranges of each pair of new constraints that are separated, or (b) any new constraint that has been added has a reach D and, moreover, the scopes of each pair of new constraints are still tractable whenever: (a) any new constraint that has been added, the scope of each V, and the scope of each pair of V are still beyond the scope."}, {"heading": "Acknowledgments", "text": "The author thanks the anonymous arbitrators for many useful comments. This work was supported by MEIC with funding TIN2016-76573-C21-P and MECD with funding PRX16 / 00266."}, {"heading": "23. Fre\u0301de\u0301ric Lardeux, Eric Monfroy, and Fre\u0301de\u0301ric Saubion. Interleaved alldifferent", "text": "In the Proceedings of AIMSA '08, Re Re Re 390-384, 2008. 24. Jean-Louis Laurie, Re. A Language and a Program for Identifying and Solving Combinatorial Problems. Artif. Intell., 10 (1): Gileve-127, 1978. 25. Dimitris Magos, Ioannis Mourtos, and Gautam Appa. A Polyhedral Approach to the All-Different System. Math. Program., 132 (1-2): 209-260, 2012. 26. Michael J. Maher, Nina Narodytska, Claude-Guy Quimper, and Toby Walsh. Fluent Propagators for the All-Different System. In the Proceedings of CP' 08, pp. 159-174, 2008. 27. A. Oplobedu, J. Marcovitch, and Y."}, {"heading": "Appendix A: Tractable subcases of the domain filtering problem restricting only the scope or the range in the constraints", "text": "The first question we ask ourselves is the following: What subcases of the problem can we explain by looking only at the scopes of the constraints? The scopes that occur in an instance can be characterized by a hypergraph. Specifically, we let I = (V, D, C) be a conjunction between the constraints. The scopes hypergraphs of mine are the hypergraphs of H set with node V (H) = V and that contains a hypergraph for each circumference in C. Formally, E (H) = {S, R, max).C} Let H be a (possibly infinite) set of hypergraphs."}, {"heading": "Appendix B: Proofs of section 6", "text": "The basic term \"snsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnssnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnssnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsnsn"}], "references": [{"title": "Network flows theory, algorithms and applications", "author": ["Ravindra K. Ahuja", "Thomas L. Magnanti", "James B. Orlin"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1993}, {"title": "LP relaxations of multiple all different predicates", "author": ["Gautam Appa", "Dimitris Magos", "Ioannis Mourtos"], "venue": "In Proceedings of CPAIOR\u201904,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2004}, {"title": "On the system of two all different predicates", "author": ["Gautam Appa", "Dimitris Magos", "Ioannis Mourtos"], "venue": "Inf. Process. Lett.,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "Propagating logical combinations of constraints", "author": ["Fahiem Bacchus", "Toby Walsh"], "venue": "In Proceedings of IJCAI\u201905,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2005}, {"title": "A Textbook of Graph Theory", "author": ["R. Balakrishnan", "K Ranganathan"], "venue": "SpringerVerlag (New York),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2000}, {"title": "Introducing global constraints in chip", "author": ["N. Beldiceanu", "E. Contejean"], "venue": "Mathematical and Computer Modelling,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1994}, {"title": "SLIDE: A useful special case of the CARDPATH constraint", "author": ["Christian Bessiere", "Emmanuel Hebrard", "Brahim Hnich", "Zeynep Kiziltan", "Toby Walsh"], "venue": "In Proceedings of ECAI\u201908,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Range and roots: Two common patterns for specifying and propagating counting and occurrence constraints", "author": ["Christian Bessiere", "Emmanuel Hebrard", "Brahim Hnich", "Zeynep Kiziltan", "Toby Walsh"], "venue": "Artif. Intell.,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "Propagating conjunctions of alldifferent constraints", "author": ["Christian Bessiere", "George Katsirelos", "Nina Narodytska", "Claude-Guy Quimper", "Toby Walsh"], "venue": "In Proceedings of AAAI\u201910,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2010}, {"title": "The conjunction of interval among constraints", "author": ["Gilles Chabert", "Sophie Demassey"], "venue": "In Proceedings of CPAIOR\u201912,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "Tree clustering for constraint networks", "author": ["R. Dechter", "J. Pearl"], "venue": "Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1989}, {"title": "Bounded tree-width and csp-related problems", "author": ["Tommy F\u00e4rnqvist", "Peter Jonsson"], "venue": "In Proceedings of ISAAC\u201907,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "Constraint satisfaction problems: Convexity makes alldifferent constraints tractable", "author": ["Michael R. Fellows", "Tobias Friedrich", "Danny Hermelin", "Nina Narodytska", "Frances A. Rosamond"], "venue": "Theor. Comput. Sci.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Parameterized Complexity Theory. Texts in Theoretical Computer Science", "author": ["J\u00f6rg Flum", "Martin Grohe"], "venue": "An EATCS Series. Springer,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2006}, {"title": "Complexity of k-structurated constraint satisfaction problems", "author": ["E.C. Freuder"], "venue": "In Proceedings of AAAI-90,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1990}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["M.R. Garey", "David S. Johnson"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1979}, {"title": "Beyond the flow decomposition barrier", "author": ["Andrew V. Goldberg", "Satish Rao"], "venue": "J. ACM,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1998}, {"title": "A comparison of structural CSP decomposition methods", "author": ["Georg Gottlob", "Nicola Leone", "Francesco Scarcello"], "venue": "Artif. Intell.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2000}, {"title": "The complexity of homomorphism and constraint satisfaction problems seen from the other side", "author": ["Martin Grohe"], "venue": "J. ACM,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2007}, {"title": "An n5/2 algorithm for maximum matchings in bipartite graphs", "author": ["John E. Hopcroft", "Richard M. Karp"], "venue": "SIAM J. Comput.,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1973}, {"title": "Filtering methods for symmetric cardinality constraint", "author": ["Waldemar Kocjan", "Per Kreuger"], "venue": "In Proceedings of CPAIOR\u201904,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}, {"title": "Simultaneous matchings: Hardness and approximation", "author": ["Martin Kutz", "Khaled M. Elbassioni", "Irit Katriel", "Meena Mahajan"], "venue": "J. Comput. Syst. Sci.,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2008}, {"title": "Interleaved alldifferent constraints: CSP vs. SAT approaches", "author": ["Fr\u00e9d\u00e9ric Lardeux", "Eric Monfroy", "Fr\u00e9d\u00e9ric Saubion"], "venue": "In Proceedings of AIMSA\u201908,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2008}, {"title": "A language and a program for stating and solving combinatorial problems", "author": ["Jean-Louis Lauri\u00e8re"], "venue": "Artif. Intell.,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1978}, {"title": "A polyhedral approach to the alldifferent system", "author": ["Dimitris Magos", "Ioannis Mourtos", "Gautam Appa"], "venue": "Math. Program.,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2012}, {"title": "Flowbased propagators for the SEQUENCE and related global constraints", "author": ["Michael J. Maher", "Nina Narodytska", "Claude-Guy Quimper", "Toby Walsh"], "venue": "In Proceedings of CP\u201908,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2008}, {"title": "Toubier. Charme: Un langage industriel de programmation par contraintes, illustr\u1e55ar une application chez renault", "author": ["A. Oplobedu", "J. Marcovitch"], "venue": "In Proceedings of 9th International Workshop on Expert Systems and their Applications,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1989}, {"title": "The ordered distribute constraint", "author": ["Thierry Petit", "Jean-Charles R\u00e9gin"], "venue": "International Journal on Artificial Intelligence Tools,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2011}, {"title": "Generalizing global constraints based on network flows", "author": ["Igor Razgon", "Barry O\u2019Sullivan", "Gregory M. Provan"], "venue": "In Proceedings of CSCLP\u201907,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2007}, {"title": "A filtering algorithm for constraints of difference in csps", "author": ["Jean-Charles R\u00e9gin"], "venue": "In Proceedings of AAAI\u201994,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1994}, {"title": "Generalized arc consistency for global cardinality constraint", "author": ["Jean-Charles R\u00e9gin"], "venue": "In Proceedings of AAAI\u201996,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 1996}, {"title": "Combination of among and cardinality constraints", "author": ["Jean-Charles R\u00e9gin"], "venue": "In Proceedings of CPAIOR\u201905,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2005}, {"title": "The cardinality matrix constraint", "author": ["Jean-Charles R\u00e9gin", "Carla P. Gomes"], "venue": "In Proceedings of CP\u201904,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2004}, {"title": "A filtering algorithm for global sequencing constraints", "author": ["Jean-Charles R\u00e9gin", "Jean-Francois Puget"], "venue": "In Proceedings of CP\u201997,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1997}, {"title": "Depth-first search and linear graph algorithms", "author": ["Robert Endre Tarjan"], "venue": "SIAM J. Comput.,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 1972}, {"title": "Revisiting the sequence constraint", "author": ["Willem Jan van Hoeve", "Gilles Pesant", "Louis-Martin Rousseau", "Ashish Sabharwal"], "venue": "In Proceedings of CP\u201906,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2006}], "referenceMentions": [{"referenceID": 23, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 63, "endOffset": 67}, {"referenceID": 26, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 71, "endOffset": 75}, {"referenceID": 20, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 91, "endOffset": 95}, {"referenceID": 5, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 106, "endOffset": 109}, {"referenceID": 33, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 128, "endOffset": 132}, {"referenceID": 27, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 152, "endOffset": 156}, {"referenceID": 32, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 180, "endOffset": 184}, {"referenceID": 5, "context": "Several constraints studied in the literature including AllDiff[24],GCC[27], Symmetric-GCC [21], Sequence [6], GlobalSequencing [34], OrderedDistribute [28], and CardinalityMatrix [33] can be decomposed as the conjunction of a simpler family of constraints, called among constraints [6].", "startOffset": 283, "endOffset": 286}, {"referenceID": 9, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 49, "endOffset": 59}, {"referenceID": 31, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 49, "endOffset": 59}, {"referenceID": 1, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 2, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 8, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 12, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 21, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 22, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 24, "context": "In consequence,CACs have been previously studied [10,32,38], specially the particular case of conjunctions of AllDiff constraints [2,3,9,13,22,23,25].", "startOffset": 130, "endOffset": 149}, {"referenceID": 31, "context": "Although deciding the satisfiability of an arbitrary conjunction of among constraints is NP-complete [32] this body of work shows that sometimes there are benefits in reasoning about the interaction between the among constraints.", "startOffset": 101, "endOffset": 105}, {"referenceID": 29, "context": "This allows to reformulate the domain filtering problem in terms of flows in a network graph and apply the methodology derived by R\u00e9gin [30,31].", "startOffset": 136, "endOffset": 143}, {"referenceID": 30, "context": "This allows to reformulate the domain filtering problem in terms of flows in a network graph and apply the methodology derived by R\u00e9gin [30,31].", "startOffset": 136, "endOffset": 143}, {"referenceID": 28, "context": "The algorithm thus obtained, although simple, unifies and generalizes existing domain filtering algorithms for several global constraints, including AllDiff, GCC, Sequence, Symmetric-GCC, OrderedDistribute as well as for other problems expressed as conjunctions of among constraints in [29,32].", "startOffset": 286, "endOffset": 293}, {"referenceID": 31, "context": "The algorithm thus obtained, although simple, unifies and generalizes existing domain filtering algorithms for several global constraints, including AllDiff, GCC, Sequence, Symmetric-GCC, OrderedDistribute as well as for other problems expressed as conjunctions of among constraints in [29,32].", "startOffset": 286, "endOffset": 293}, {"referenceID": 30, "context": "The seminal paper in this direction is [31] which identifies several combinations of among and GCC constraints that admit a complete and efficient domain filtering algorithm (see Section 6 for more details).", "startOffset": 39, "endOffset": 43}, {"referenceID": 30, "context": "Our approach is more general as it subsumes the tractable cases introduced in [31].", "startOffset": 78, "endOffset": 82}, {"referenceID": 28, "context": "Another closely related work is [29] where two tractable combinations of boolean CACs, called TFO and 3FO, are identified.", "startOffset": 32, "endOffset": 36}, {"referenceID": 28, "context": "The approach in [29] differs from ours in two aspects: it deals with optimization problem and also considers restricions on the min and max parameters of the among constraints while we only consider restriction on the scope and range.", "startOffset": 16, "endOffset": 20}, {"referenceID": 9, "context": "A different family of CACs has been investigated in [10] although the work in [10] focuses in bound consistency instead of domain consistency.", "startOffset": 52, "endOffset": 56}, {"referenceID": 9, "context": "A different family of CACs has been investigated in [10] although the work in [10] focuses in bound consistency instead of domain consistency.", "startOffset": 78, "endOffset": 82}, {"referenceID": 3, "context": "Other approaches to the design of filtering algorithms for combinations (but not necessarily conjunctions) of global (but not necessarily among) constraints are described in [4,7,8].", "startOffset": 174, "endOffset": 181}, {"referenceID": 6, "context": "Other approaches to the design of filtering algorithms for combinations (but not necessarily conjunctions) of global (but not necessarily among) constraints are described in [4,7,8].", "startOffset": 174, "endOffset": 181}, {"referenceID": 7, "context": "Other approaches to the design of filtering algorithms for combinations (but not necessarily conjunctions) of global (but not necessarily among) constraints are described in [4,7,8].", "startOffset": 174, "endOffset": 181}, {"referenceID": 3, "context": "The method introduced in [4] deals with logical combinations of some primitive constraints but differs substantially from ours in the sense that it cannot capture a single among constraint.", "startOffset": 25, "endOffset": 28}, {"referenceID": 6, "context": "The work reported in [7,8] does not guarantee tractability.", "startOffset": 21, "endOffset": 26}, {"referenceID": 7, "context": "The work reported in [7,8] does not guarantee tractability.", "startOffset": 21, "endOffset": 26}, {"referenceID": 26, "context": "(GCC andAllDiff constraints) The global cardinality constraint, GCC [27] corresponds to instances (V,D,L, C) where all the constraints have the form Among(V, {d},min,max) with d \u2208 D.", "startOffset": 68, "endOffset": 72}, {"referenceID": 31, "context": "It has been shown by R\u00e9gin [32] that the domain filtering problem for CACs is NP-hard.", "startOffset": 27, "endOffset": 31}, {"referenceID": 17, "context": "This question has a close similarity to the study of the so-called structural restrictions of the CSP (see, for example [18] for a survey) and, not surprisingly, it can be solved by applying results developed there.", "startOffset": 120, "endOffset": 124}, {"referenceID": 11, "context": "Indeed, it follows easily from a result of F\u00e4rnquivst and Jonsson [12] that, modulo some mild technical assumptions, if one allows arbitrary ranges in constraints, then the domain filtering problem is solvable in polynomial time if and only if the hypergraph of the scopes of the constraints has bounded tree-width (see Appendix A for precise statement and the proof).", "startOffset": 66, "endOffset": 70}, {"referenceID": 0, "context": "In this case, one can use specific and more efficient methods like the network simplex algorithm (see for example [1]) instead of a general purpose LP solver.", "startOffset": 114, "endOffset": 117}, {"referenceID": 25, "context": "This idea has been used in [26] to obtain a domain filtering algorithm for the Sequence constraint.", "startOffset": 27, "endOffset": 31}, {"referenceID": 25, "context": "More precisely, [26] deals with the particular case of network matrices defined by a directed path.", "startOffset": 16, "endOffset": 20}, {"referenceID": 25, "context": "Our approach draws upon [26] and generalizes it to network matrices defined by arbitrary trees.", "startOffset": 24, "endOffset": 28}, {"referenceID": 29, "context": "R\u00e9gin [30,31] has shown that this later condition can be tested simultaneously for all 1 \u2264 i \u2264 n and d \u2208 {0, 1} by finding a maximal flow and computing the strongly connected components of its residual graph.", "startOffset": 6, "endOffset": 13}, {"referenceID": 30, "context": "R\u00e9gin [30,31] has shown that this later condition can be tested simultaneously for all 1 \u2264 i \u2264 n and d \u2208 {0, 1} by finding a maximal flow and computing the strongly connected components of its residual graph.", "startOffset": 6, "endOffset": 13}, {"referenceID": 16, "context": "integral capacities can be done in time O(min(v, e)e log(v/e) log u) using Goldberg and Rao\u2019s algorithm [17] where v is the number of vertices, e is the number of edges, and u is the maximum capacity of an edge.", "startOffset": 104, "endOffset": 108}, {"referenceID": 34, "context": "Computing the strongly connected components of the residual graph takes O(v + e) time using Tarjan\u2019s algorithm [36].", "startOffset": 111, "endOffset": 115}, {"referenceID": 30, "context": "It was observed again by R\u00e9gin [31] that, in this setting, it is not necessary, to solve the flow problem from scratch at each call, leading to a considerable redution in total time.", "startOffset": 31, "endOffset": 35}, {"referenceID": 30, "context": "Applying the scheme in [31], we obtain that the time complexity down a branch of a search tree of our algorithm is O(n(n+m)).", "startOffset": 23, "endOffset": 27}, {"referenceID": 30, "context": "We ommit the details because they are faily standard (see [31]).", "startOffset": 58, "endOffset": 62}, {"referenceID": 25, "context": "In the first variant, used in [26], one encodes a constraint Cj = (Sj , {1},minj,maxj) with two equations yj + \u2211 vi\u2208Sj xi = maxj , and \u2212zj + \u2211 vi\u2208Sj xi = minj where yj and zj are new slack variables satisfying 0 \u2264 yj, zj .", "startOffset": 30, "endOffset": 34}, {"referenceID": 29, "context": "2 In fact, as shown in [30,31], it is only necessary to solve the max flow problem during the first invocation so it could be argued that a more realistic bound on the running time of the algorithm is O(n+m).", "startOffset": 23, "endOffset": 30}, {"referenceID": 30, "context": "2 In fact, as shown in [30,31], it is only necessary to solve the max flow problem during the first invocation so it could be argued that a more realistic bound on the running time of the algorithm is O(n+m).", "startOffset": 23, "endOffset": 30}, {"referenceID": 30, "context": "R\u00e9gin\u2019s algorithm [31] has a O(|V ||D|) complexity which is better when |V | \u2208 O(|D|) but the comparison between the two bounds is not very meaningfull because it mainly reflects a different choice max flow algorithm.", "startOffset": 18, "endOffset": 22}, {"referenceID": 30, "context": "In particular, the network obtained using the second variant discussed after Lemma 3 is essentially the same described in [31].", "startOffset": 122, "endOffset": 126}, {"referenceID": 29, "context": "In the particular case of the AllDiff constraint, [30] shows how to produce a bipartite matching problem that can be solved using specialized algorithms, such as [20], leading to a total time complexity of O(|V |) which is better than ours.", "startOffset": 50, "endOffset": 54}, {"referenceID": 19, "context": "In the particular case of the AllDiff constraint, [30] shows how to produce a bipartite matching problem that can be solved using specialized algorithms, such as [20], leading to a total time complexity of O(|V |) which is better than ours.", "startOffset": 162, "endOffset": 166}, {"referenceID": 30, "context": "The network flow problem that our algorithm derives for this instance (see Example 3) is almost identical to the one derived in [31].", "startOffset": 128, "endOffset": 132}, {"referenceID": 30, "context": "Indeed, the network obtained in [31] does not have node r and, instead, requires that the demand of nodes t0, t1, t2 is at most one (instead of exactly one).", "startOffset": 32, "endOffset": 36}, {"referenceID": 31, "context": "The particular case in which R \u2229 R = \u2205 has been previously shown in [32] using a different approach.", "startOffset": 68, "endOffset": 72}, {"referenceID": 31, "context": "The proof given in [32] does not construct a flow problem nor gives run-time bounds so we ommit a comparison.", "startOffset": 19, "endOffset": 23}, {"referenceID": 20, "context": "For example, the Symmetric-GCC constraint [21] is precisely a conjunction (V,D,L, C) of set among constraints of the form Among(V, {d},min,max) where d is a singleton which, additionally, might contain constraints of the form Among({v}, D,min,max) restricting the size of the image of a variable v.", "startOffset": 42, "endOffset": 46}, {"referenceID": 20, "context": "The algorithm in [21] follows closely that in [31] for the GCC constraints, and, in particular, has the same time bounds.", "startOffset": 17, "endOffset": 21}, {"referenceID": 30, "context": "The algorithm in [21] follows closely that in [31] for the GCC constraints, and, in particular, has the same time bounds.", "startOffset": 46, "endOffset": 50}, {"referenceID": 20, "context": "Consequently the network flow derived by our algorithm is obtained, again, by adding one extra node with small capacities in the edges to the network introduced in [21].", "startOffset": 164, "endOffset": 168}, {"referenceID": 5, "context": "The Sequence constraint [6] corresponds to instances ({v1, .", "startOffset": 24, "endOffset": 27}, {"referenceID": 25, "context": "However, as shown in [26] one obtains an equivalent instance with a network hypergraph using a different encoding in which for every original variable vi \u2208 V , we have a boolean variable xi which is intended to be true whenever vi takes a value in R and false otherwise.", "startOffset": 21, "endOffset": 25}, {"referenceID": 25, "context": "It is shown in [26] that the hypergraph H of the boolean instance I obtained under this encoding satisfies the so-called consecutive-ones property which implies that H is defined by a tree T consisting of a single directed path.", "startOffset": 15, "endOffset": 19}, {"referenceID": 25, "context": "Indeed, the network flow obtained by our approach is identical to the one derived in [26] if one encodes Among constraints using the first variant discussed after Lemma 3.", "startOffset": 85, "endOffset": 89}, {"referenceID": 25, "context": "By inspecting closely the proof of Lemma 3 this bound can be slightly improved (see Appendix C) to O(n logn logmax) coinciding with the bound given in [26], which is not surprising since both networks are essentially equivalent.", "startOffset": 151, "endOffset": 155}, {"referenceID": 35, "context": "To the best of our knowledge O(n logn logmax) is the best bound among all complete domain consisteny algorithms for the problem, jointly with the algorithm proposed in [37] which, with time complexity O(n2), offers gives better bounds when k \u226a n.", "startOffset": 168, "endOffset": 172}, {"referenceID": 28, "context": "[29] as a generalization of several common global constraints.", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "It turns out that the network introduced in [29] is essentially equivalent to the network flow problem that would be obtained by our approach using the second variant described after Lemma 3.", "startOffset": 44, "endOffset": 48}, {"referenceID": 28, "context": "It is not meaningfull to compare the running time of our algorithm with that of [29] since it deals with an optimization variant.", "startOffset": 80, "endOffset": 84}, {"referenceID": 27, "context": "For example, the OrderedDistribute constraint introduced by Petit and R\u00e9gin [28] can be encoded as conjunction (V,D,L, C) of among constraint where where the domain D has some arbitrary (but fixed) ordering d1, .", "startOffset": 76, "endOffset": 80}, {"referenceID": 27, "context": "In the particular case of OrderedDistribute constraint, the network obtained by our approach is very related to the network introduced in section ([28], Section V.", "startOffset": 147, "endOffset": 151}, {"referenceID": 27, "context": "In particular, a complete filtering algorithm with time complexity O(|V |+ |D|) is given also in [28].", "startOffset": 97, "endOffset": 101}, {"referenceID": 31, "context": "Which among constraint we might safely add? This question has been addressed by R\u00e9gin [32].", "startOffset": 86, "endOffset": 90}, {"referenceID": 31, "context": "In particular, [32] shows that the domain filtering problem is still tractable whenever:", "startOffset": 15, "endOffset": 19}, {"referenceID": 31, "context": "Note that the previous theorem covers cases (a) and (b) from [32] described at the beginning of this section.", "startOffset": 61, "endOffset": 65}, {"referenceID": 31, "context": "The network produced in [32] for the case (a) is essentially equivalent to the one derived by our approach using the second variant described after Lemma 3.", "startOffset": 24, "endOffset": 28}, {"referenceID": 31, "context": "For the case (b) [32] does not construct a flow problem nor gives run-time bounds so we ommit a comparison.", "startOffset": 17, "endOffset": 21}], "year": 2017, "abstractText": "Many existing global constraints can be encoded as a conjunction of among constraints. An among constraint holds if the number of the variables in its scope whose value belongs to a prespecified set, which we call its range, is within some given bounds. It is known that domain filtering algorithms can benefit from reasoning about the interaction of among constraints so that values can be filtered out taking into consideration several among constraints simultaneously. The present paper embarks into a systematic investigation on the circumstances under which it is possible to obtain efficient and complete domain filtering algorithms for conjunctions of among constraints. We start by observing that restrictions on both the scope and the range of the among constraints are necessary to obtain meaningful results. Then, we derive a domain flowbased filtering algorithm and present several applications. In particular, it is shown that the algorithm unifies and generalizes several previous", "creator": "LaTeX with hyperref package"}}}