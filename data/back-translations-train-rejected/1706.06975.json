{"id": "1706.06975", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jun-2017", "title": "On the enumeration of sentences by compactness", "abstract": "Presented is a Julia meta-program that discovers compact theories from data if they exist. It writes candidate theories in Julia and then validates: tossing the bad theories and keeping the good theories. Compactness is measured by a metric: such as the number of space-time derivatives. The underlying algorithm is applicable to a wide variety of combinatorics problems and compactness serves to cut down the search space.", "histories": [["v1", "Thu, 15 Jun 2017 22:57:06 GMT  (19kb,D)", "http://arxiv.org/abs/1706.06975v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mark a stalzer"], "accepted": false, "id": "1706.06975"}, "pdf": {"name": "1706.06975.pdf", "metadata": {"source": "CRF", "title": "On the enumeration of sentences by compactness", "authors": ["Mark A. Stalzer"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "This work flowed from a commentary in the concluding remarks of a recent review (2016) of the work in data-driven scientific discoveries = Julia = = 4. Specifically,... it may be within current computer and algorithmic systems to infer the Maxwell equations directly from the data given the knowledge of vector computation.This short work reports on the recent progress towards this goal in the broader context of combinatorics and there are applications beyond science. The overall goal is to develop methods that can quickly discover compact theories of data. Most data-intensive analysis techniques are based on machine learning or statistics. They are very useful, but do not lead to deep understanding or knowledge.Abstractedly, one considers an alphabet A = [A, B, C,...] where each letter can appear once in a sentence and the length of the alphabet is n. This is a simple combinatory enumeration v that does not lead to deep understanding or understanding."}, {"heading": "2 Algorithm", "text": "The algorithm enumerates phrases of increasing complexity q, whereby q is the sum of the letters q}, {"heading": "3 Motivation", "text": "The underlying motivation was described in the introduction, namely the rediscovery of the Maxwell equations. Here is the decoder ring. The Maxwell equations, up to the constants, are [C], [D], the E, B divergence equations, both of complexity 4; and the field coupling equations of [G, F] and [H, E], of complexity 11. Also the fields of light equations are [I, K] and [J, L], each of complexity 14 [4]. The complexity metric is only 1 + the number of space-time derivatives. There are many possibilities for future development, as briefly listed below. \u2022 Validation and constant determination. Basic constants such as c were known at the time of Maxwell. However, constants can be determined automatically via linear algebra, in this case. \u2022 Larger data and parallelism."}, {"heading": "Acknowledgements", "text": "This research is supported by the Gordon and Betty Moore Foundation through Grant GBMF4915 to the Caltech Center for Data-Driven Discovery (A) (A) (D) (D) (D) (D)) (Discussions with Mr. William Xu of Caltech Math / Computer Science) were \"very helpful.\" The author is Prof. S. G. Djorgovski of Caltech Astronomy and Prof. V. Chandler of KGI Natural Sciences for their support.Appendixjulia > Theos 14-element Array {Set {Char}, N}, 1}: Set {Char} [[Set} (\"A\"], Set (\"B\") Natural Sciences for their support.Appendixjulia > Theos 14-element Array #, Set {Set}, 1}, Set {Set {Char} [Set} (\"C\"], Set (\"D\"), Set (\"E\"), Set (\"E\"), Set (\"E\"), Set (\"E\"), Set (\"E\"), Set (\"E\"), \""}], "references": [{"title": "A preliminary review of influential works in data-driven discovery", "author": ["M. Stalzer", "C. Mentzel"], "venue": "SpringerPlus, (5)1266,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "Julia: A fresh approach to numerical computing", "author": ["J. Bezanson et. al"], "venue": "SIAM Review,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2017}, {"title": "Depth-First Iterative-Deepening: An optimal admissible tree search", "author": ["R.E. Korf"], "venue": "Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1985}, {"title": "Maxwell\u2019s Equations and the Principles of Electromagnetism", "author": ["R. Fitzpatrick"], "venue": "Firewall Media, Sec", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "This work flowed from a comment in the concluding remarks of a recent review (2016) of work in data-driven scientific discovery[1].", "startOffset": 127, "endOffset": 130}, {"referenceID": 1, "context": "The code is written in Julia[2], a relatively recent language (roughly 2012) that is both easy to use and has high performance.", "startOffset": 28, "endOffset": 31}, {"referenceID": 2, "context": "It can be thought of as a form Depth-First Iterative Deepening (DFID)[3] first formalized by R.", "startOffset": 69, "endOffset": 72}, {"referenceID": 0, "context": "The base cases are the singleton theories of a given complexity, so for the alphabet A we have theos[1] = [A, B] and theos[4] = [D, .", "startOffset": 100, "endOffset": 103}, {"referenceID": 3, "context": "The base cases are the singleton theories of a given complexity, so for the alphabet A we have theos[1] = [A, B] and theos[4] = [D, .", "startOffset": 122, "endOffset": 125}, {"referenceID": 3, "context": "Also, the fields equations of light are [I,K] and [J, L], each of complexity 14[4].", "startOffset": 79, "endOffset": 82}, {"referenceID": 1, "context": "# Maximal possible theory size q with user limit MAX_COMP MAX_COMP = 14 max_q = min(sum([a[2] for a in alph]), MAX_COMP)", "startOffset": 90, "endOffset": 93}, {"referenceID": 1, "context": "for a in alph if theos[a[2]] == [] theos[a[2]] = [Set([a[1]])] else push!(theos[a[2]], Set([a[1]])) end end", "startOffset": 24, "endOffset": 27}, {"referenceID": 1, "context": "for a in alph if theos[a[2]] == [] theos[a[2]] = [Set([a[1]])] else push!(theos[a[2]], Set([a[1]])) end end", "startOffset": 42, "endOffset": 45}, {"referenceID": 0, "context": "for a in alph if theos[a[2]] == [] theos[a[2]] = [Set([a[1]])] else push!(theos[a[2]], Set([a[1]])) end end", "startOffset": 56, "endOffset": 59}, {"referenceID": 1, "context": "for a in alph if theos[a[2]] == [] theos[a[2]] = [Set([a[1]])] else push!(theos[a[2]], Set([a[1]])) end end", "startOffset": 81, "endOffset": 84}, {"referenceID": 0, "context": "for a in alph if theos[a[2]] == [] theos[a[2]] = [Set([a[1]])] else push!(theos[a[2]], Set([a[1]])) end end", "startOffset": 93, "endOffset": 96}], "year": 2017, "abstractText": "Presented is a Julia meta-program that discovers compact theories from data if they exist. It writes candidate theories in Julia and then validates: tossing the bad theories and keeping the good theories. Compactness is measured by a metric: such as the number of space-time derivatives. The underlying algorithm is applicable to a wide variety of combinatorics problems and compactness serves to cut down the search space.", "creator": "LaTeX with hyperref package"}}}