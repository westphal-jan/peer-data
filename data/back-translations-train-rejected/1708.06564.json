{"id": "1708.06564", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Aug-2017", "title": "The Continuous Hint Factory - Providing Hints in Vast and Sparsely Populated Edit Distance Spaces", "abstract": "Intelligent tutoring systems can support students in solving multi-step tasks by providing a hint regarding what to do next. However, engineering such next-step hints manually or using an expert model becomes infeasible if the space of possible states is too large. Therefore, several approaches have emerged to infer next-step hints automatically, relying on past student's data. Such hints typically have the form of an edit which could have been performed by capable students in the given situation, based on what past capable students have done. In this contribution we provide a mathematical framework to analyze edit-based hint policies and, based on this theory, propose a novel hint policy to provide edit hints for learning tasks with a vast state space and sparse student data. We call this technique the continuous hint factory because it embeds student data in a continuous space, in which the most likely edit can be inferred in a probabilistic sense, similar to the hint factory.", "histories": [["v1", "Tue, 22 Aug 2017 11:33:46 GMT  (140kb,D)", "http://arxiv.org/abs/1708.06564v1", "Submitted to the Journal of Educational Datamining on 2017-08-12"]], "COMMENTS": "Submitted to the Journal of Educational Datamining on 2017-08-12", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["benjamin paa{\\ss}en", "barbara hammer", "thomas william price", "tiffany barnes", "sebastian gross", "niels pinkwart"], "accepted": false, "id": "1708.06564"}, "pdf": {"name": "1708.06564.pdf", "metadata": {"source": "CRF", "title": "The Continuous Hint Factory - Providing Hints in Vast and Sparsely Populated Edit Distance Spaces", "authors": ["Benjamin Paa\u00dfen", "Barbara Hammer", "Thomas W. Price", "Tiffany Barnes"], "emails": ["bpaassen@techfak.uni-bielefeld.de", "bhammer@techfak.uni-bielefeld.de", "twprice@ncsu.edu", "tmbarnes@ncsu.edu", "sebastian.gross@informatik.hu-berlin.de", "niels.pinkwart@hu-berlin.de"], "sections": [{"heading": null, "text": "1ar Xiv: 1policy to provide edit hints for learning tasks with a huge state space and save student data. We call this technique the continuous message factory because it embeds student data in a continuous space where the most likely processing can be derived in a probable sense, similar to the message factory. In our experimental evaluation, we show that the continuous message factory can predict what capable students would do in solving a multi-level programming task, and that clues provided by the continuous message factory are to some extent consistent with clues given by human tutors in the same situation. Keywords: clues in the next step, message factory, processing distances, computer science education, Gaussian processes."}, {"heading": "1 Introduction", "text": "This year, it is more than ever before in the history of the country in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is not a country, but in which it is a country, in which it is a country, in which it is a country, in which it is a country, in which it is a city and in which it is a country, in which it is a country and in which it is a country."}, {"heading": "2 An integrated view of edit-based hint policies", "text": "This year, it has reached the point where it will be able to leave the country in which it is located in order to establish a country in which it is a country in which it is not a country."}, {"heading": "2.1 Edit Distances and Legal Move Graphs", "text": "In this scenario, we start with a number of possible editing methods that can be applied by students (the editing method for the editing method), then combine these editing methods to find ways of editing that lead to a solution (the legal step diagram), and finally identify the shortest path to a solution that leads us to the idea of editing distances. We begin by defining the editing method of a UML activity diagram task. Figure 1 shows how an initially blank graph can be expanded by various editing methods. Note: Each state in this diagram is a UML diagram, and our editing methods produce new diagrams."}, {"heading": "2.2 Traces and Interaction Networks", "text": "In many cases, legal action is infinite and contains many states that are absurd and highly unlikely to be attended by students. Interaction networks aim to capture the subgraph that is likely relevant to feedback and the rest of the legal motion graph. The relevant subgraph is approximated by analyzing a dataset of actual student activity and records only the states and edits that actually occurred. In other words, an interaction network tries to approximate what students are likely to do by capturing what past students have done [9, 4]. The student data needed to generate an interaction network takes the form of tracks. Inspired by Eagle et al., we define tracks as follows [9]: Definition X are a number of possible states for a learning task and we will edit them to X. Then, a sequence x1, a sequence x1. \""}, {"heading": "2.3 Hint policies", "text": "Remember the definition of a notification policy (Definition 2). We refer to a function that outputs an edit for every possible input state. In the rest of this section, we will provide a brief review of the notification recommendations suggested in the literature. Arguably the simplest suggestion is that of Zimmerman et al., which we introduced above and which always recommends the first editing on the shortest route to the next solution [50]. Such an approach does not even require student data, except for at least one example of a solution. Rivers and Koedinger take a more advanced approach in their Intelligent Teaching Assistant for Programming (ITAP), an intelligent tutoring system for Python programming. [44] Their technique involves the following steps: First, they recall the narrowest solution according to the tree thickness on canonic forms. Second, they use the editing that transforms from the student state into the closest correct state to construct a path."}, {"heading": "3 Continuous Hint Factory", "text": "We define two objectives for each clue generated by our hint-edit policy. First, the clue should appear reasonable to the student requesting it; otherwise, the clue is likely to be ignored [41]. We assume that an action taken by other students in the same situation should appear reasonable to the student requesting a clue. Therefore, creating a reasonable clue involves predicting the most likely editing that students will do in a given situation. Second, the clue should bring the student closer to a solution. To align these two objectives, we recommend the most likely editing that has been done by students who have ended up in the solution. In addition to these two objectives, we want the clue-edit policy to be generalized to other learning tasks and areas. Therefore, our policy does not require information about the states itself, just a way to calculate the distance between them. A policy that would achieve our objectives in densely populated state spaces is the clue-edit, the clue-factory [Learn-Edit-Edit-Edit-Edit-Edit-recommends]."}, {"heading": "3.1 The Edit Distance Space", "text": "For our reference policy, we need a continuous space in which past and present student data are embedded. \"In mathematical terms, this space should be a Euclidean vector space.\" A simple example of such embedding is then shown in Figure 4b. \"In this illustration, the strings\" ab, \"\" aac, \"\" bb, \"and\" bbc \"are embedded in a two-dimensional space in which the two dimensions of the paper are approximately twice as far apart as the distance between the strings on the paper is approximately equal to their edit distance, i.e. strings with a distance of 2, such as\" ab \"and\" aac. \"For example, the distance between\" ab \"and\" abc \"is much greater than the distance between the strings with a distance of\" ab \"and\" aa. \""}, {"heading": "3.2 A Hint Policy in the Edit Distance Space", "text": "Based on theory 2, we know that for a reasonably limited distance d \u00b2, C, there is an embedding in a vector space Y \u00b2 Rs, so that the processed distance corresponds to the Euclidean distance in Y after eigenvalue correction. However, the main advantage of the processing space Y is that the construction of a reference policy for vectors is much simpler than a reference policy for any arbitrarily complicated state. Specifically, we replace the problem of constructing a reference to the distance Y: X \u00b2 with the problem of constructing a reference to the distance Y: Y \u00b2, where Y is a processing method in the processing space X, which we define as follows."}, {"heading": "3.3 Edit pre-image problems", "text": "The problem of finding an original object that relates to a known point in an embedding space is then referred to as the problem in front of the image (3), so that the problem of editing that best corresponds to a recommended editing in the editing zone cannot be solved (3). In this section we provide an approximation of this problem. We would like to emphasize here that such pre-image problems are typically difficult to solve (3) and, to our knowledge, there is no approximation of the editing problem in front of the image that we consider to be a problem of minimization: Starting from the current state of the pupil x, we try to find the editing problem that brings us closest to the recommended state through Gaussian Process Regression (GPR) in the editing Room: min."}, {"heading": "4 Experiments", "text": "In our experiments we examine two research questions: RQ1: How well does the Gaussian process model capture the behavior of able students, i.e. can the Gaussian process predict what an able student would do? RQ2: Do the hints from the continuous clue factory agree with the hints from human tutors?"}, {"heading": "4.1 Modelling Student Behavior", "text": "The first half of the course focused on learning the Snap2 programming language through a curriculum based on the beauty and joy of arithmetic [12]. Here, we focused on the \"Guessing Game\" task, which had the following description: \"The computer selects a random number between 1 and 10 and continuously asks the user to guess the number until they guess correctly.\" Students were not given specific instructions regarding the form of the program. A sample state is presented in Figure 7a. Students worked on this task during class for about an hour, with a teaching assistant (TA) to assist them."}, {"heading": "4.2 Hint Quality", "text": "In the past, we have always sought new paths that would lead us astray, \"he told the Deutsche Presse-Agentur in an interview with the\" S\u00fcddeutsche Zeitung \"(Saturday).\" In the past, we have always sought new paths, \"he said.\" In the past, we have always sought new paths that would lead us astray."}, {"heading": "5 Conclusion", "text": "This work covers two areas. Firstly, we have a mathematical framework for processing contributions within this framework."}, {"heading": "6 Acknowledgement", "text": "This research was funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) as part of the project \"Learning Dynamic Feedback for Intelligent Tutoring Systems\" under funding number HA 2719 / 6-2 and the Excellence Cluster Cognitive Interaction Technology 'CITEC' (EXC 277), Bielefeld University and NSF under funding number 1432156 \"Educational Data Mining for Individualized Instruction in STEM Learning Environments\" with Min Chi & Tiffany Barnes as co-PIs."}], "references": [{"title": "A new paradigm for intelligent tutoring systems: Example-tracing tutors", "author": ["V. Aleven", "B.M. McLaren", "J. Sewall", "K.R. Koedinger"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Help helps, but only so much: Research on help seeking with intelligent tutoring systems", "author": ["V. Aleven", "I. Roll", "B.M. McLaren", "K.R. Koedinger"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2016}, {"title": "Learning to Find Pre-images", "author": ["G.H. Bak\u0131r", "J. Weston", "B. Sch\u00f6lkopf"], "venue": "Proceedings of the 16th International Conference on Neural Information Processing Systems (NIPS", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "Data-Driven Domain Models for Problem Solving, volume 4 of Design Recommendations for Intelligent Tutoring Systems", "author": ["T. Barnes", "B. Mostafavi", "M.J. Eagle"], "venue": "US Army Research Laboratory,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2016}, {"title": "Toward automatic hint generation for logic proof tutoring using historical student data", "author": ["T. Barnes", "J. Stamper"], "venue": "Proceedings of the 9th International Conference on Intelligent Tutoring Systems (ITS", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Random search for hyper-parameter optimization", "author": ["J. Bergstra", "Y. Bengio"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Scale-driven automatic hint generation for coding style", "author": ["R.R. Choudhury", "H. Yin", "A. Fox"], "venue": "Proceedings of the 13th International Conference on Intelligent Tutoring Systems (ITS", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "Evaluation of automatically generated hint feedback", "author": ["M. Eagle", "T. Barnes"], "venue": "Proceedings of the 6th International Conference on Educational Data Mining (EDM", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Interaction networks: Generating high level hints based on network community clustering", "author": ["M. Eagle", "M. Johnson", "T. Barnes"], "venue": "Proceedings of the 5th International Conference on Educational Data Mining (EDM", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Instructional Message Design: Principles from the Behavioral and Cognitive Sciences", "author": ["M.L. Fleming", "W.H. Levie"], "venue": "Educational Technology Publications,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1993}, {"title": "Inferring student coding goals using abstract syntax trees", "author": ["P. Freeman", "I. Watson", "P. Denny"], "venue": "Proceedings of the 24th International Conference on  Preprint as provided by the authors", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2016}, {"title": "The Beauty and Joy of Computing", "author": ["D. Garcia", "B. Harvey", "T. Barnes"], "venue": "ACM Inroads,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "A discipline of dynamic programming over sequence data", "author": ["R. Giegerich", "C. Meyer", "P. Steffen"], "venue": "Science of Computer Programming,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2004}, {"title": "Metric and non-metric proximity transformations at linear costs", "author": ["A. Gisbrecht", "F.-M. Schleif"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Example-based feedback provision using structured solution spaces", "author": ["S. Gross", "B. Mokbel", "B. Hammer", "N. Pinkwart"], "venue": "International Journal on Learning Technologies,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "How do learners behave in help-seeking when given a choice", "author": ["S. Gross", "N. Pinkwart"], "venue": "Proceedings of the 17th International Conference on Artificial Intelligence in Education (AIED", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "Topographic mapping of large dissimilarity data sets", "author": ["B. Hammer", "A. Hasenfuss"], "venue": "Neural Computation,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2010}, {"title": "Writing reusable code feedback at scale with mixedinitiative program synthesis", "author": ["A. Head", "E. Glassman", "G. Soares", "R. Suzuki", "L. Figueredo", "L. D\u2019Antoni", "B. Hartmann"], "venue": "In Proceedings of the Fourth ACM Conference on Learning@Scale (L@S", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2017}, {"title": "Building games to learn from their players: Generating hints in a serious game", "author": ["A. Hicks", "B. Peddycord", "T. Barnes"], "venue": "Proceedings of the 12th International Conference Intelligent Tutoring Systems  Preprint as provided by the authors", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2014}, {"title": "New potentials for data-driven intelligent tutoring system development and optimization", "author": ["K.R. Koedinger", "E. Brunskill", "R.S. Baker", "E.A. McLaughlin", "J. Stamper"], "venue": "AI Magazine,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2013}, {"title": "Data-driven program synthesis for hint generation in programming tutors", "author": ["T. Lazar", "I. Bratko"], "venue": "Proceedings of the 12th International Conference on Intelligent Tutoring Systems (ITS", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2014}, {"title": "A classification of adaptive feedback in educational systems for programming", "author": ["N.-T. Le"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2002}, {"title": "Towards a classification for programming exercises", "author": ["N.-t. Le", "N. Pinkwart"], "venue": "In Proceedings of the 2nd Workshop on AI-supported Education for Computer Science (AIEDCS),", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "Binary codes capable of correcting deletions, insertions, and reversals", "author": ["V.I. Levenshtein"], "venue": "Soviet Physics Doklady,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1965}, {"title": "Concepts, structures, and goals: Redefining ill-definedness", "author": ["C. Lynch", "K.D. Ashley", "N. Pinkwart", "V. Aleven"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2009}, {"title": "Automated personalized feedback in introductory java programming moocs", "author": ["V.J. Marin", "T. Pereira", "S. Sridharan", "C.R. Rivero"], "venue": "In 33rd International IEEE Conference on Data Engineering (ICDE", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2017}, {"title": "Domain-Independent Proximity Measures in Intelligent Tutoring Systems", "author": ["B. Mokbel", "S. Gross", "B. Paa\u00dfen", "N. Pinkwart", "B. Hammer"], "venue": "Proceedings of the 6th International Conference on Educational Data Mining (EDM", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "Authoring tools for advanced technology learning environments: Toward cost-effective adaptive, interactive and intelligent educational software", "author": ["T. Murray", "S. Blessing", "S. Ainsworth"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2003}, {"title": "Expert blind spot: When content knowledge eclipses pedagogical content knowledge", "author": ["M.J. Nathan", "K.R. Koedinger", "M.W. Alibali"], "venue": "In Proceedings of the Third International Conference on Cognitive Science,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2001}, {"title": "Codewebs: Scalable homework search for massive open online programming courses", "author": ["A. Nguyen", "C. Piech", "J. Huang", "L. Guibas"], "venue": "In Proceedings of the 23rd International Conference on World Wide Web (WWW", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "A toolbox for adaptive sequence dissimilarity measures for intelligent tutoring systems", "author": ["B. Paa\u00dfen", "B. Mokbel", "B. Hammer"], "venue": "Proceedings of the 8th International Conference on Educational Data Mining (EDM", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2015}, {"title": "Adaptive structure metrics for automated feedback provision in intelligent tutoring systems", "author": ["B. Paassen", "B. Mokbel", "B. Hammer"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2016}, {"title": "Time Series Prediction for Graphs in Kernel and Dissimilarity Spaces", "author": ["B. Paa\u00dfen", "C. G\u00f6pfert", "B. Hammer"], "venue": "Neural Processing Letters,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2017}, {"title": "The dissimilarity representation for pattern recognition: foundations and applications", "author": ["E. P\u0119kalska"], "venue": "PhD thesis,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2005}, {"title": "Learning program embeddings to propagate feedback on student code", "author": ["C. Piech", "J. Huang", "A. Nguyen", "M. Phulsuksombati", "M. Sahami", "L. Guibas"], "venue": "Proceedings of the 32nd International Conference on Machine Learning (ICML 2015), International Conference on Machine Learning,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2015}, {"title": "Autonomously generating hints by inferring problem solving policies", "author": ["C. Piech", "M. Sahami", "J. Huang", "L. Guibas"], "venue": "Proceedings of the Second ACM Conference on Learning @ Scale (L@S", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2015}, {"title": "An exploration of data-driven hint generation in an open-ended programming problem", "author": ["T.W. Price", "T. Barnes"], "venue": "Workshops Proceedings of the 8th International Conference on Educational Data Mining (EDM", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2015}, {"title": "Generating data-driven hints for open-ended programming", "author": ["T.W. Price", "Y. Dong", "T. Barnes"], "venue": "Proceedings of the 9th International Conference on Educational Data Mining (EDM 2016),", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2016}, {"title": "iSnap: Towards intelligent tutoring in novice programming environments", "author": ["T.W. Price", "Y. Dong", "D. Lipovac"], "venue": "In Proceedings of the 2017 ACM Technical Symposium on Computer Science Education (SIGCSE),", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2017}, {"title": "Evaluation of a data-driven feedback algorithm for open-ended programming", "author": ["T.W. Price", "R. Zhi", "T. Barnes"], "venue": "Proceedings of the 10th International Conference on Educational Datamining (EDM 2017),", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2017}, {"title": "Hint generation under uncertainty: The effect of hint quality on help-seeking behavior", "author": ["T.W. Price", "R. Zhi", "T. Barnes"], "venue": "Proceedings of the 18th International Conference on Artificial Intelligence in Education (AIED", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2017}, {"title": "Gaussian Processes for Machine Learning (Adaptive Computation and Machine Learning)", "author": ["C.E. Rasmussen", "C.K.I. Williams"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2005}, {"title": "A canonicalizing model for building programming tutors", "author": ["K. Rivers", "K.R. Koedinger"], "venue": "Proceedings of the 11th International Conference on Intelligent Tutoring Systems,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2012}, {"title": "Data-driven hint generation in vast solution spaces: a self-improving python programming tutor", "author": ["K. Rivers", "K.R. Koedinger"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2015}, {"title": "Experimental evaluation of automatic hint generation for a logic tutor", "author": ["J.C. Stamper", "T. Barnes", "M. Croy", "M. Eagle"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2012}, {"title": "Introduction to Reinforcement Learning", "author": ["R.S. Sutton", "A.G. Barto"], "venue": null, "citeRegEx": "46", "shortCiteRegEx": "46", "year": 1998}, {"title": "The behavior of tutoring systems", "author": ["K. Van Lehn"], "venue": "International Journal of Artificial Intelligence in Education,", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2006}, {"title": "Clustering student programming assignments to multiply instructor leverage", "author": ["H. Yin", "J. Moghadam", "A. Fox"], "venue": "In Proceedings of the Second ACM Conference on Learning @ Scale (L@S", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 2015}, {"title": "Simple fast algorithms for the editing distance between trees and related problems", "author": ["K. Zhang", "D. Shasha"], "venue": "SIAM Journal on Computing,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 1989}, {"title": "An automated framework for recommending program elements to novices (n)", "author": ["K. Zimmerman", "C.R. Rupakheti"], "venue": "In Proceedings of the 30th IEEE/ACM International Conference on Automated Software Engineering (ASE", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2015}], "referenceMentions": [{"referenceID": 14, "context": "For example, programming tasks require a student to iteratively write, test and refine code that accomplishes a given objective [15, 39, 44].", "startOffset": 128, "endOffset": 140}, {"referenceID": 38, "context": "For example, programming tasks require a student to iteratively write, test and refine code that accomplishes a given objective [15, 39, 44].", "startOffset": 128, "endOffset": 140}, {"referenceID": 43, "context": "For example, programming tasks require a student to iteratively write, test and refine code that accomplishes a given objective [15, 39, 44].", "startOffset": 128, "endOffset": 140}, {"referenceID": 1, "context": "In particular, such a student may benefit from a next-step hint, guiding her toward a more complete and/or more correct version and allowing her to continue working on her own [2].", "startOffset": 176, "endOffset": 179}, {"referenceID": 46, "context": "Many intelligent tutoring systems (ITS) support these multi-step tasks by generating next-step hints to match the student\u2019s current state and her underlying strategy [47].", "startOffset": 166, "endOffset": 170}, {"referenceID": 27, "context": "However, designing such an expert model becomes infeasible if the space of possible states grows too large [28, 20, 44].", "startOffset": 107, "endOffset": 119}, {"referenceID": 19, "context": "However, designing such an expert model becomes infeasible if the space of possible states grows too large [28, 20, 44].", "startOffset": 107, "endOffset": 119}, {"referenceID": 43, "context": "However, designing such an expert model becomes infeasible if the space of possible states grows too large [28, 20, 44].", "startOffset": 107, "endOffset": 119}, {"referenceID": 35, "context": "This is the case for most computer programming tasks because the space of possible programs grows exponentially with the program length and the set of programs which generate the same function is infinite [36].", "startOffset": 205, "endOffset": 209}, {"referenceID": 24, "context": "Other examples are so-called ill-defined domains where explicit domain knowledge is not available or at least very hard to formalize [25].", "startOffset": 133, "endOffset": 137}, {"referenceID": 49, "context": "If a student issues a help request, the system can simply compute the necessary edits from the student\u2019s state to the solution and use one of these edits as a hint [50].", "startOffset": 164, "endOffset": 168}, {"referenceID": 22, "context": "Even though this approach is fairly simple, it is conceptually quite powerful, because the feedback provided is personalized in the sense that the hint a student receives depends on her personal state and is thereby tailored to her specific situation [23].", "startOffset": 251, "endOffset": 255}, {"referenceID": 26, "context": "Another advantage is that this approach needs very little task-specific work on the side of the teachers, because they only need to construct one solution for the task, and can apply a general-purpose edit function which is applicable across tasks or even across domains [27].", "startOffset": 271, "endOffset": 275}, {"referenceID": 44, "context": "In a sense, we combine the probabilistic modelling of the hint factory, a well-established hint approach for densely populated state spaces [45], with the nearest-neighbor-principle commonly used in hint policies for vast and sparsely populated state spaces [16, 44, 50] to achieve a novel approach that extends existing work.", "startOffset": 140, "endOffset": 144}, {"referenceID": 15, "context": "In a sense, we combine the probabilistic modelling of the hint factory, a well-established hint approach for densely populated state spaces [45], with the nearest-neighbor-principle commonly used in hint policies for vast and sparsely populated state spaces [16, 44, 50] to achieve a novel approach that extends existing work.", "startOffset": 258, "endOffset": 270}, {"referenceID": 43, "context": "In a sense, we combine the probabilistic modelling of the hint factory, a well-established hint approach for densely populated state spaces [45], with the nearest-neighbor-principle commonly used in hint policies for vast and sparsely populated state spaces [16, 44, 50] to achieve a novel approach that extends existing work.", "startOffset": 258, "endOffset": 270}, {"referenceID": 49, "context": "In a sense, we combine the probabilistic modelling of the hint factory, a well-established hint approach for densely populated state spaces [45], with the nearest-neighbor-principle commonly used in hint policies for vast and sparsely populated state spaces [16, 44, 50] to achieve a novel approach that extends existing work.", "startOffset": 258, "endOffset": 270}, {"referenceID": 9, "context": "In particular, edit hints lack the capacity to reference underlying concepts which may be helpful for the task or elaborate on these concepts, as suggested by Fleming and Levie [10, 22].", "startOffset": 177, "endOffset": 185}, {"referenceID": 21, "context": "In particular, edit hints lack the capacity to reference underlying concepts which may be helpful for the task or elaborate on these concepts, as suggested by Fleming and Levie [10, 22].", "startOffset": 177, "endOffset": 185}, {"referenceID": 1, "context": "suggest to display these \u201cbottom-out hints\u201d hints only as a last resort after exhausting options for more principle-based hints [2].", "startOffset": 128, "endOffset": 131}, {"referenceID": 1, "context": "Second, bottom-out hints, such as edit hints, may lead to learning gains, if students reflect on the hint and engage in sense-making behavior [2].", "startOffset": 142, "endOffset": 145}, {"referenceID": 1, "context": "Conversely, if students aim to abuse the system, this is not hindered by principle-based hints: students simply skip through them to reach the bottom-out hint [2].", "startOffset": 159, "endOffset": 162}, {"referenceID": 40, "context": "which indicates that edit hints are judged as relevant and interpretable by human tutors [41].", "startOffset": 89, "endOffset": 93}, {"referenceID": 27, "context": "Finally, and most importantly, we argue that more elaborate hint strategies are simply not available in many important learning tasks, because they require hint messages which result from an expert-crafted model, which is infeasible if the space of possible states is vast and includes many different strategies, because the sheer number of different hint messages necessary is too large for human experts to handle [28, 44, 23], or because human experts may overlook strategies that novices might employ (\u201cexpert blind spot\u201d) [29].", "startOffset": 416, "endOffset": 428}, {"referenceID": 43, "context": "Finally, and most importantly, we argue that more elaborate hint strategies are simply not available in many important learning tasks, because they require hint messages which result from an expert-crafted model, which is infeasible if the space of possible states is vast and includes many different strategies, because the sheer number of different hint messages necessary is too large for human experts to handle [28, 44, 23], or because human experts may overlook strategies that novices might employ (\u201cexpert blind spot\u201d) [29].", "startOffset": 416, "endOffset": 428}, {"referenceID": 22, "context": "Finally, and most importantly, we argue that more elaborate hint strategies are simply not available in many important learning tasks, because they require hint messages which result from an expert-crafted model, which is infeasible if the space of possible states is vast and includes many different strategies, because the sheer number of different hint messages necessary is too large for human experts to handle [28, 44, 23], or because human experts may overlook strategies that novices might employ (\u201cexpert blind spot\u201d) [29].", "startOffset": 416, "endOffset": 428}, {"referenceID": 28, "context": "Finally, and most importantly, we argue that more elaborate hint strategies are simply not available in many important learning tasks, because they require hint messages which result from an expert-crafted model, which is infeasible if the space of possible states is vast and includes many different strategies, because the sheer number of different hint messages necessary is too large for human experts to handle [28, 44, 23], or because human experts may overlook strategies that novices might employ (\u201cexpert blind spot\u201d) [29].", "startOffset": 527, "endOffset": 531}, {"referenceID": 15, "context": "For this reason, recent work on hint generation for programming has focused largely on automatic, edit-based hint generation [16, 21, 38, 44, 50].", "startOffset": 125, "endOffset": 145}, {"referenceID": 20, "context": "For this reason, recent work on hint generation for programming has focused largely on automatic, edit-based hint generation [16, 21, 38, 44, 50].", "startOffset": 125, "endOffset": 145}, {"referenceID": 37, "context": "For this reason, recent work on hint generation for programming has focused largely on automatic, edit-based hint generation [16, 21, 38, 44, 50].", "startOffset": 125, "endOffset": 145}, {"referenceID": 43, "context": "For this reason, recent work on hint generation for programming has focused largely on automatic, edit-based hint generation [16, 21, 38, 44, 50].", "startOffset": 125, "endOffset": 145}, {"referenceID": 49, "context": "For this reason, recent work on hint generation for programming has focused largely on automatic, edit-based hint generation [16, 21, 38, 44, 50].", "startOffset": 125, "endOffset": 145}, {"referenceID": 0, "context": "A prime example are the cognitive tutor authoring tools (CTAT) which support the construction of cognitive tutors, in particular example-tracing tutors [1].", "startOffset": 152, "endOffset": 155}, {"referenceID": 19, "context": "With regards to intelligent tutoring systems, this can be seen as a \u201cgold standard\u201d, because the effectiveness of cognitive tutors has been established in classroom studies, as well as their successful application in classrooms across the US [20].", "startOffset": 242, "endOffset": 246}, {"referenceID": 0, "context": "is a task with roughly 20 steps and 6 different paths toward the solution [1].", "startOffset": 74, "endOffset": 77}, {"referenceID": 34, "context": "Another approach is \u201cforce multiplication\u201d, which assumes that a relatively small number of expert-crafted hint messages are available, which are then applied to new situations automatically, thereby \u201cmultiplying the force\u201d of expert work [35].", "startOffset": 239, "endOffset": 243}, {"referenceID": 17, "context": "who apply clustering methods to aggregate many different states and then provide the same hint to all states in the same cluster [18, 48, 7].", "startOffset": 129, "endOffset": 140}, {"referenceID": 47, "context": "who apply clustering methods to aggregate many different states and then provide the same hint to all states in the same cluster [18, 48, 7].", "startOffset": 129, "endOffset": 140}, {"referenceID": 6, "context": "who apply clustering methods to aggregate many different states and then provide the same hint to all states in the same cluster [18, 48, 7].", "startOffset": 129, "endOffset": 140}, {"referenceID": 34, "context": "Then, they train a classifier function via machine learning which decides for any new state whether the hint should be displayed or not [35].", "startOffset": 136, "endOffset": 140}, {"referenceID": 25, "context": "annotate expertcrafted hints with small snippets of Java code for which the given hint makes sense and display the hint whenever the respective snippet is discovered in a student\u2019s state [26].", "startOffset": 187, "endOffset": 191}, {"referenceID": 35, "context": "we call such a function a hint policy [36].", "startOffset": 38, "endOffset": 42}, {"referenceID": 49, "context": "A simple example hint policy is the policy of Zimmerman and Rupakheti, who suggest to return the first edit in the shortest sequence of edits which transforms the input state to a correct solution for the task [50].", "startOffset": 210, "endOffset": 214}, {"referenceID": 23, "context": "As an example, consider the string edit distance [24] which operates on sequences over some alphabet A.", "startOffset": 49, "endOffset": 53}, {"referenceID": 23, "context": "In this case, the overall edit distance can be computed in O(N) using a dynamic programming algorithm [24].", "startOffset": 102, "endOffset": 106}, {"referenceID": 43, "context": "Oftentimes in intelligent tutoring systems, states have the form of trees, for example abstract syntax trees of computer programs [44].", "startOffset": 130, "endOffset": 134}, {"referenceID": 6, "context": "For such data, the tree edit distance algorithm of Zhang and Shasha is a natural fit and has been applied in several contributions [7, 11, 30, 44].", "startOffset": 131, "endOffset": 146}, {"referenceID": 10, "context": "For such data, the tree edit distance algorithm of Zhang and Shasha is a natural fit and has been applied in several contributions [7, 11, 30, 44].", "startOffset": 131, "endOffset": 146}, {"referenceID": 29, "context": "For such data, the tree edit distance algorithm of Zhang and Shasha is a natural fit and has been applied in several contributions [7, 11, 30, 44].", "startOffset": 131, "endOffset": 146}, {"referenceID": 43, "context": "For such data, the tree edit distance algorithm of Zhang and Shasha is a natural fit and has been applied in several contributions [7, 11, 30, 44].", "startOffset": 131, "endOffset": 146}, {"referenceID": 48, "context": "Similarly to the string edit distance, the tree edit distance permits deletion, insertion and replacements of tree nodes, but the algorithm is more complex with O(N) runtime [49].", "startOffset": 174, "endOffset": 178}, {"referenceID": 49, "context": "who compute an edit distance on pq-grams in trees, meaning small subtrees, which results in a considerably faster runtime of O(N \u00b7 log(N)) [50].", "startOffset": 139, "endOffset": 143}, {"referenceID": 26, "context": "have suggested a two-level approach where student states are first decomposed into fragments which may be arbitrarily ordered and fragments are compared using a string edit distance [27, 40].", "startOffset": 182, "endOffset": 190}, {"referenceID": 39, "context": "have suggested a two-level approach where student states are first decomposed into fragments which may be arbitrarily ordered and fragments are compared using a string edit distance [27, 40].", "startOffset": 182, "endOffset": 190}, {"referenceID": 12, "context": ", who devised a generalpurpose O(N) algorithm for string edit distances which supports a broad class of edit sets as well as edit cost functions and relies on the framework of algebraic dynamic programming [13, 32].", "startOffset": 206, "endOffset": 214}, {"referenceID": 31, "context": ", who devised a generalpurpose O(N) algorithm for string edit distances which supports a broad class of edit sets as well as edit cost functions and relies on the framework of algebraic dynamic programming [13, 32].", "startOffset": 206, "endOffset": 214}, {"referenceID": 31, "context": "This approach has also been applied to abstract syntax trees by flattening the trees to sequences of code statements in order of their execution [32].", "startOffset": 145, "endOffset": 149}, {"referenceID": 49, "context": "Consider the hint policy of Zimmerman and Rupakheti mentioned above [50].", "startOffset": 68, "endOffset": 72}, {"referenceID": 42, "context": "Canonicalization is particularly common in the domain of computer programs, where the order of binary relations (such as <) or variable names can be normalized or unreachable code can be removed [43].", "startOffset": 195, "endOffset": 199}, {"referenceID": 34, "context": "in the canonic form [35, 7].", "startOffset": 20, "endOffset": 27}, {"referenceID": 6, "context": "in the canonic form [35, 7].", "startOffset": 20, "endOffset": 27}, {"referenceID": 43, "context": "Another challenge in canonicalization is that edits on the canonic form may not be interpretable to the user directly, such that these edits first need to be aligned with the student\u2019s code, a process that has been dubbed state reification [44].", "startOffset": 240, "endOffset": 244}, {"referenceID": 31, "context": "Instead of mapping two semantically equivalent states x and y to the same canonic form, we could also lower the cost of edits which transform x to y [32].", "startOffset": 149, "endOffset": 153}, {"referenceID": 49, "context": "In summary, the concepts of edit set, legal move graph and edit distance permit us to define a hint policy that is mathematically optimal in the sense that each student will receive a hint which lies on the shortest path to a solution [50].", "startOffset": 235, "endOffset": 239}, {"referenceID": 8, "context": "In other words, an interaction networks tries to approximate what students are likely to do by capturing what past students have done [9, 4].", "startOffset": 134, "endOffset": 140}, {"referenceID": 3, "context": "In other words, an interaction networks tries to approximate what students are likely to do by capturing what past students have done [9, 4].", "startOffset": 134, "endOffset": 140}, {"referenceID": 8, "context": ", we define traces as follows [9]:", "startOffset": 30, "endOffset": 33}, {"referenceID": 42, "context": "For example, the edit sets might be different because students work on a different representation compared to the representation used to compute edit distances, for example due to canonicalization [43, 44].", "startOffset": 197, "endOffset": 205}, {"referenceID": 43, "context": "For example, the edit sets might be different because students work on a different representation compared to the representation used to compute edit distances, for example due to canonicalization [43, 44].", "startOffset": 197, "endOffset": 205}, {"referenceID": 35, "context": "In these cases we have to assume that students may \u201cjump\u201d in the legal move graph from state to state and the exact path they have taken needs to be inferred by the system [36].", "startOffset": 172, "endOffset": 176}, {"referenceID": 49, "context": "we introduced above, which always recommends the first edit on the shortest path to the closest solution [50].", "startOffset": 105, "endOffset": 109}, {"referenceID": 43, "context": "Rivers and Koedinger take a more advanced approach in their Intelligent Teaching Assistant for Programming (ITAP), an intelligent tutoring system for Python programming [44].", "startOffset": 169, "endOffset": 173}, {"referenceID": 43, "context": "Third, of these intermediate states, the one with the highest desirability score is selected for feedback, where the desirability score is a weighted sum of the frequency in past student data, the distance to the student\u2019s state, the number of successful test cases the state passes and the distance to the solution [44].", "startOffset": 316, "endOffset": 320}, {"referenceID": 35, "context": "called Poisson path policy, which recommends the first state on the shortestpath algorithm on a version of the legal move graph which weighted the edges according to the inverse frequency of the target state in the dataset, that is, \u03b2(x, x\u2032) := N/N(x\u2032) where N is the overall number of states submitted by successful students and N(x\u2032) is the number of times x\u2032 was submitted by successful students [36].", "startOffset": 399, "endOffset": 403}, {"referenceID": 15, "context": "If students assume that their current state is correct, but they are looking for a next step, the system recommends an edit toward the successor of the reference state, thereby guiding the student closer to a solution [16].", "startOffset": 218, "endOffset": 222}, {"referenceID": 10, "context": "have taken this view to analyze Python programs and used a weighted tree edit distance to retrieve similar cases [11].", "startOffset": 113, "endOffset": 117}, {"referenceID": 14, "context": "proposed example-based feedback, in which the closest prototypical state in a dataset is retrieved and shown to the student to elicit self-reflection and sense-making in order to improve their own state [15].", "startOffset": 203, "endOffset": 207}, {"referenceID": 20, "context": "The scheme of Lazar and Bratko takes a different approach by applying edits that have been frequent in past student traces to manipulate the current student\u2019s state until an edit is found that achieves better unit test scores [21].", "startOffset": 226, "endOffset": 230}, {"referenceID": 4, "context": "[5] They achieve an optimal hint policy in a precise probabilistic sense by modelling the multi-step learning task as a Markov Decision Process [46].", "startOffset": 0, "endOffset": 3}, {"referenceID": 45, "context": "[5] They achieve an optimal hint policy in a precise probabilistic sense by modelling the multi-step learning task as a Markov Decision Process [46].", "startOffset": 144, "endOffset": 148}, {"referenceID": 4, "context": "The hint factory was originally created as a hint-generation add-on to the DeepThought instruction system for deductive logic [5].", "startOffset": 126, "endOffset": 129}, {"referenceID": 44, "context": "Several studies have demonstrated that the hint factory reduces student dropout and helps students to complete more problems more efficiently [45, 8].", "startOffset": 142, "endOffset": 149}, {"referenceID": 7, "context": "Several studies have demonstrated that the hint factory reduces student dropout and helps students to complete more problems more efficiently [45, 8].", "startOffset": 142, "endOffset": 149}, {"referenceID": 18, "context": "The hint factory has also been applied to further domains, such as the serious game BOTS [19] or the SNAP programming environment [39].", "startOffset": 89, "endOffset": 93}, {"referenceID": 38, "context": "The hint factory has also been applied to further domains, such as the serious game BOTS [19] or the SNAP programming environment [39].", "startOffset": 130, "endOffset": 134}, {"referenceID": 49, "context": "So which edit would be recommended by the different hint policies discussed above? The approach of Zimmerman and Rupakheti (Figure 3a) would just search the shortest path through the legal move graph to the solution and recommend the first edit on that path [50].", "startOffset": 258, "endOffset": 262}, {"referenceID": 15, "context": "The approach of Gross and Pinkwart (Figure 3b) would select the closest state in a previously seen trace and recommend an edit toward the successor in that trace, which would be the edit to the right [16].", "startOffset": 200, "endOffset": 204}, {"referenceID": 4, "context": "Similarly, the hint factory (Figure 3b) would just have information for one trace in that state and thus would also recommend following this trace [5].", "startOffset": 147, "endOffset": 150}, {"referenceID": 35, "context": "(Figure 3c) would search for the shortest path taking into account state frequency in the available trace data [36].", "startOffset": 111, "endOffset": 115}, {"referenceID": 20, "context": "Only edits are recommended which extend the functionality of the previous state by achieving a higher test score [21, 44].", "startOffset": 113, "endOffset": 121}, {"referenceID": 43, "context": "Only edits are recommended which extend the functionality of the previous state by achieving a higher test score [21, 44].", "startOffset": 113, "endOffset": 121}, {"referenceID": 49, "context": "(a) [50] (b) [16, 5]", "startOffset": 4, "endOffset": 8}, {"referenceID": 15, "context": "(a) [50] (b) [16, 5]", "startOffset": 13, "endOffset": 20}, {"referenceID": 4, "context": "(a) [50] (b) [16, 5]", "startOffset": 13, "endOffset": 20}, {"referenceID": 35, "context": "(c) [36] (d) [21, 44]", "startOffset": 4, "endOffset": 8}, {"referenceID": 20, "context": "(c) [36] (d) [21, 44]", "startOffset": 13, "endOffset": 21}, {"referenceID": 43, "context": "(c) [36] (d) [21, 44]", "startOffset": 13, "endOffset": 21}, {"referenceID": 3, "context": "This has been dubbed the hintable subgraph [4].", "startOffset": 43, "endOffset": 46}, {"referenceID": 36, "context": "Indeed, research has shown that for a reasonably small, open-ended programming task, over 90% of states are visited only once, indicating that future students will likely visit states that have not been seen before and may not even be connected to previously seen states in the legal move graph [37]; and the number of unique states remained high even after applying harsh canonicalization [37].", "startOffset": 295, "endOffset": 299}, {"referenceID": 36, "context": "Indeed, research has shown that for a reasonably small, open-ended programming task, over 90% of states are visited only once, indicating that future students will likely visit states that have not been seen before and may not even be connected to previously seen states in the legal move graph [37]; and the number of unique states remained high even after applying harsh canonicalization [37].", "startOffset": 390, "endOffset": 394}, {"referenceID": 37, "context": ", who suggested contextual tree decomposition (CTD) which generates interaction networks only for small modules in the student\u2019s state [38].", "startOffset": 135, "endOffset": 139}, {"referenceID": 39, "context": "A challenge of this approach is that the system generates hints for each module, from which the student must select [40].", "startOffset": 116, "endOffset": 120}, {"referenceID": 32, "context": "who proposed a prediction scheme for data that is given in terms of pairwise dissimilarities [33].", "startOffset": 93, "endOffset": 97}, {"referenceID": 34, "context": "who proposed an embedding of computer programs via neural networks [35].", "startOffset": 67, "endOffset": 71}, {"referenceID": 34, "context": "This matrix MA is the embedding of the code block A [35].", "startOffset": 52, "endOffset": 56}, {"referenceID": 40, "context": "First, the hint should seem reasonable to the student requesting it; otherwise, the hint will likely be ignored [41].", "startOffset": 112, "endOffset": 116}, {"referenceID": 4, "context": "A policy that would achieve our goals in densely populated state spaces is the hint factory [5].", "startOffset": 92, "endOffset": 95}, {"referenceID": 4, "context": "Relying on the theoretical framework of reinforcement learning, the hint factory recommends the edit that is most likely to lead to a solution, given what other students have done in the same situation [5].", "startOffset": 202, "endOffset": 205}, {"referenceID": 32, "context": "Second, we develop a hint policy in this embedding space based on Gaussian process prediction for structured data [33].", "startOffset": 114, "endOffset": 118}, {"referenceID": 16, "context": "Refer to [17, 34].", "startOffset": 9, "endOffset": 17}, {"referenceID": 33, "context": "Refer to [17, 34].", "startOffset": 9, "endOffset": 17}, {"referenceID": 13, "context": "Such techniques convert the matrix of pairwise distances to a matrix of pairwise similarities, decompose this matrix into its Eigenvectors and Eigenvalues, then sets the Eigenvalues to non-negative values and convert the resulting similarity matrix back to a matrix of pairwise distances [14].", "startOffset": 288, "endOffset": 292}, {"referenceID": 15, "context": "This is equivalent to the policy of Gross and Pinkwart [16], which we will use as baseline.", "startOffset": 55, "endOffset": 59}, {"referenceID": 32, "context": "To integrate the edits of multiple students in a probabilistically optimal fashion, we turn to Gaussian Process Regression (GPR) for structured data [33].", "startOffset": 149, "endOffset": 153}, {"referenceID": 41, "context": "For an exact definition of kernel functions for GPR we point to the work of Rasmussen and Williams [42].", "startOffset": 99, "endOffset": 103}, {"referenceID": 41, "context": "5 \u00b7 d(x,y) 2 \u03c82 ) [42].", "startOffset": 18, "endOffset": 22}, {"referenceID": 0, "context": "Figure 6: The output of the radial basis function (RBF) kernel (y-axis) for distances between two states x and y in the range [0, 1] (x-axis) and a lengthscale of \u03c8 = 1 (red line).", "startOffset": 126, "endOffset": 132}, {"referenceID": 32, "context": "[33].", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "The problem of finding an original object which maps to a known point in an embedding space is called a pre-image problem [3], so the problem of finding", "startOffset": 122, "endOffset": 125}, {"referenceID": 2, "context": "We want to emphasize here that such pre-image problems are typically hard to solve [3] and, to our knowledge, no approach exists to date which addresses the edit pre-image problem.", "startOffset": 83, "endOffset": 86}, {"referenceID": 32, "context": "where Z is some constant that does not depend on \u03b4 [33].", "startOffset": 51, "endOffset": 55}, {"referenceID": 4, "context": "As such, our approach combines approaches for dense state spaces with approaches for vast and sparsely populated solution spaces, namely a probabilistic model, similar to the hint factory [5], and the nearestneighbor principle as used by Rivers and Koedinger [44], Zimmerman and Rupakheti [50], as well as Gross and Pinkwart [16].", "startOffset": 188, "endOffset": 191}, {"referenceID": 43, "context": "As such, our approach combines approaches for dense state spaces with approaches for vast and sparsely populated solution spaces, namely a probabilistic model, similar to the hint factory [5], and the nearestneighbor principle as used by Rivers and Koedinger [44], Zimmerman and Rupakheti [50], as well as Gross and Pinkwart [16].", "startOffset": 259, "endOffset": 263}, {"referenceID": 49, "context": "As such, our approach combines approaches for dense state spaces with approaches for vast and sparsely populated solution spaces, namely a probabilistic model, similar to the hint factory [5], and the nearestneighbor principle as used by Rivers and Koedinger [44], Zimmerman and Rupakheti [50], as well as Gross and Pinkwart [16].", "startOffset": 289, "endOffset": 293}, {"referenceID": 15, "context": "As such, our approach combines approaches for dense state spaces with approaches for vast and sparsely populated solution spaces, namely a probabilistic model, similar to the hint factory [5], and the nearestneighbor principle as used by Rivers and Koedinger [44], Zimmerman and Rupakheti [50], as well as Gross and Pinkwart [16].", "startOffset": 325, "endOffset": 329}, {"referenceID": 11, "context": "The first half of the course focused on learning the Snap2 programming language through a curriculum based on the Beauty and Joy of Computing [12].", "startOffset": 142, "endOffset": 146}, {"referenceID": 30, "context": "The edit distance was computed using the TCS Alignment Toolbox [31].", "startOffset": 63, "endOffset": 67}, {"referenceID": 13, "context": "[14].", "startOffset": 0, "endOffset": 4}, {"referenceID": 5, "context": "We selected the length scale \u03c8 and the noise parameter \u03c3\u0303 via random search as suggested by Bergstra and Bengio [6].", "startOffset": 112, "endOffset": 115}, {"referenceID": 15, "context": "which recommends the successor of the next student state in the data base, which is essentially a one-nearest-neighbor hint policy [16]; third, the hint policy of Zimmerman and Rupakheti, which recommends the closest solution, meaning the closest end point in one of the other 46 traces [50].", "startOffset": 131, "endOffset": 135}, {"referenceID": 49, "context": "which recommends the successor of the next student state in the data base, which is essentially a one-nearest-neighbor hint policy [16]; third, the hint policy of Zimmerman and Rupakheti, which recommends the closest solution, meaning the closest end point in one of the other 46 traces [50].", "startOffset": 287, "endOffset": 291}, {"referenceID": 15, "context": "036) 1-NN / [16] 0.", "startOffset": 12, "endOffset": 16}, {"referenceID": 49, "context": "041) [50] 0.", "startOffset": 5, "endOffset": 9}, {"referenceID": 4, "context": "rely on overlap between traces to achieve meaningful approximations of their underlying probability distributions [5, 36].", "startOffset": 114, "endOffset": 121}, {"referenceID": 35, "context": "rely on overlap between traces to achieve meaningful approximations of their underlying probability distributions [5, 36].", "startOffset": 114, "endOffset": 121}, {"referenceID": 20, "context": "Further, we do not have unit tests at our disposal, which prevented us from applying the policies of Rivers and Koedinger or Lazar and Bratko [21, 44].", "startOffset": 142, "endOffset": 150}, {"referenceID": 43, "context": "Further, we do not have unit tests at our disposal, which prevented us from applying the policies of Rivers and Koedinger or Lazar and Bratko [21, 44].", "startOffset": 142, "endOffset": 150}, {"referenceID": 39, "context": "[40].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "They also were asked to grade their hints with a real value in the interval [0, 1] indicating hint quality, taking into account the following criteria: 1) Does the hint follow the strategy of the student? 2) Does the hint conform to the student\u2019s current focus of attention or does it address a different part of the state? 3) Is the hint effective in addressing the problems in the student\u2019s state? 4) Is the hint effective in guiding the student toward a solution? In a second meeting, all tutors met to add ratings for the hints of the other tutors and to address discrepancies in the ratings.", "startOffset": 76, "endOffset": 82}, {"referenceID": 39, "context": "[40].", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "Again, we compare our system with the policy of Gross and Pinkwart [16] and the policy of Zimmerman and Rupakheti [50].", "startOffset": 67, "endOffset": 71}, {"referenceID": 49, "context": "Again, we compare our system with the policy of Gross and Pinkwart [16] and the policy of Zimmerman and Rupakheti [50].", "startOffset": 114, "endOffset": 118}, {"referenceID": 15, "context": "1-NN / [16] 1 0.", "startOffset": 7, "endOffset": 11}, {"referenceID": 49, "context": "[50] 0.", "startOffset": 0, "endOffset": 4}, {"referenceID": 40, "context": "which indicates that students are more likely to seek help and follow hints if early hints provided by the system were useful [41].", "startOffset": 126, "endOffset": 130}, {"referenceID": 1, "context": "After all, better hints from the view of a tutor may not always yield better learning outcomes, due to difficulties in sense-making or lack of prior knowledge on the student\u2019s side [2].", "startOffset": 181, "endOffset": 184}, {"referenceID": 43, "context": "With regards to future work, it appears promising to combine our proposed approach with other work presented in the literature, in particular canonicalization, state re-ification, unit tests and frequency information as suggested by Rivers and Koedinger [44], or more sophisticated edit distances as suggested by Mokbel et al.", "startOffset": 254, "endOffset": 258}, {"referenceID": 26, "context": "[27, 32, 40].", "startOffset": 0, "endOffset": 12}, {"referenceID": 31, "context": "[27, 32, 40].", "startOffset": 0, "endOffset": 12}, {"referenceID": 39, "context": "[27, 32, 40].", "startOffset": 0, "endOffset": 12}], "year": 2017, "abstractText": "Intelligent tutoring systems can support students in solving multistep tasks by providing a hint regarding what to do next. However, engineering such next-step hints manually or using an expert model becomes infeasible if the space of possible states is too large. Therefore, several approaches have emerged to infer next-step hints automatically, relying on past student\u2019s data. Such hints typically have the form of an edit which could have been performed by capable students in the given situation, based on what past capable students have done. In this contribution we provide a mathematical framework to analyze edit-based hint policies and, based on this theory, propose a novel hint 1 ar X iv :1 70 8. 06 56 4v 1 [ cs .A I] 2 2 A ug 2 01 7 Preprint as provided by the authors. 2 policy to provide edit hints for learning tasks with a vast state space and sparse student data. We call this technique the continuous hint factory because it embeds student data in a continuous space, in which the most likely edit can be inferred in a probabilistic sense, similar to", "creator": "LaTeX with hyperref package"}}}