{"id": "1709.01070", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Sep-2017", "title": "Maintaining Ad-Hoc Communication Network in Area Protection Scenarios with Adversarial Agents", "abstract": "We address a problem of area protection in graph-based scenarios with multiple mobile agents where connectivity is maintained among agents to ensure they can communicate. The problem consists of two adversarial teams of agents that move in an undirected graph shared by both teams. Agents are placed in vertices of the graph; at most one agent can occupy a vertex; and they can move into adjacent vertices in a conflict free way. Teams have asymmetric goals: the aim of one team - attackers - is to invade into given area while the aim of the opponent team - defenders - is to protect the area from being entered by attackers by occupying selected vertices. The team of defenders need to maintain connectivity of vertices occupied by its own agents in a visibility graph. The visibility graph models possibility of communication between pairs of vertices.", "histories": [["v1", "Mon, 4 Sep 2017 07:38:17 GMT  (633kb,D)", "http://arxiv.org/abs/1709.01070v1", "arXiv admin note: substantial text overlap witharXiv:1708.07285"]], "COMMENTS": "arXiv admin note: substantial text overlap witharXiv:1708.07285", "reviews": [], "SUBJECTS": "cs.MA cs.AI", "authors": ["marika ivanov\\'a", "pavel surynek", "diep thi ngoc nguyen"], "accepted": false, "id": "1709.01070"}, "pdf": {"name": "1709.01070.pdf", "metadata": {"source": "CRF", "title": "Maintaining Ad-Hoc Communication Network in Area Protection Scenarios with Adversarial Agents", "authors": ["Marika Ivanov\u00e1", "Diep Thi Ngoc Nguyen"], "emails": ["marika.ivanova@uib.no", "pavel.surynek@aist.go.jp,", "diep.nguyen@aist.go.jp"], "sections": [{"heading": null, "text": "In fact, most of them will be able to survive on their own."}, {"heading": "A. Related Work", "text": "APPC, APP, and ACPF share the way in which the movement of agents is treated with the basic variant of the cooperative pathfinding problem - CPF (multi-agent path-finding - MAPF). [4] In CPF, the task is to plan the movement of agents so that each agent achieves its unique goal in a conflict-free manner. Movements of agents in APPC at the low reactive level are planned by some CPF algorithms, in which agents of the own team cooperate, while opposing agents are considered obstacles. There are several CPF algorithms that are both complete and incomplete, as well as optimal and suboptimal among various objective functions. A good compromise between solution quality and solution speed is represented by suboptimal / incomplete search methods derived from the standard A * algorithm. These methods include LRA *, CA *, HCA *, HCA *, HCA * and WHCA * CA *."}, {"heading": "B. Task Decomposition in APPC", "text": "Since APPC is a generalization of the APP, which is itself a mathematically hard problem [10] (i.e. PSPACE-hard), we propose to divide APPC into two different sub-problems from the Defender's perspective: Target Assignment and Communication Maintenance: 1) Target Assignment Problem: This is the main problem addressed in APP. Defenders are initially not assigned to a target and have no information about the intended target of any attacker. We assume that both teams use the same cooperative path-finding algorithm (CPF) to achieve temporarily selected targets in the protected area. The task in this setting is to assign each defender agent to a specific location in the diagram, so that through its Occupation Defenders try to optimize a given objective function."}, {"heading": "C. Contribution", "text": "A hard limitation that can never be violated will be that Defense Agents always form a coherent component.The success of the strategy is measured from the Defender's perspective via an objective function that plays a role of soft constraints (the surface protection cannot be perfect).The following objective functions can be pursued: 1) Maximize the number of target positions that are not captured by the corresponding aggressor 2) Maximize the number of target positions that are not captured by the corresponding attacker within a given timeframe 3) Maximize the sum of distances between the attackers and their corresponding targets 4) Minimize the time spent on the captured targets."}, {"heading": "II. DEFINITIONS AND ASSUMPTIONS", "text": "In APP, we model the environment using an undirected, unweighted diagram G = (V, E). In this work, we limit the instances to 4 connected grid diagrams with possible obstacles. Therefore, the team of attackers and defenders is designated by A = {a1,.., am} and D = {d1,.. dn}. Continuous time is divided into discrete time steps. At any time, the agents are placed in vertices of the diagram so that at most one agent is placed in each vertice. Let Instance: A \u0394D \u2192 V be a uniquely invertable mapping that marks the configuration of the agents at any time, step. Agents can wait or move directly to an adjacent vertible vertex between successive time steps to form the next configuration: t + 1. Compliance with the following rules of motion ensures avoidance of conflicts: \u2022 An agent can only move to an adjacent vertex."}, {"heading": "A. From APP to APPC", "text": "APPC generalizes APP by considering the connectivity constraint. Since we assume that G is always a grid diagram, we can introduce the connectivity constraint in the following way.Consider embedding G in a plane so that all edges are length 1 and each vertex V has coordinates (xv, yv).The physical position lv represents by v is the square unit centered in Cv = (xv, yv). Moreover, O should denote the set of square positions that represent obstacles.Let r be the range of visibility, i.e. the maximum distance between two locations so that two agents can communicate at them. Positions lu and lv can communicate with each other when the line segment CuCv does not intersect and the length of the shortest path from u to v is at most r; in short, lu is visible from lcev and lv is viversa."}, {"heading": "III. TARGET ALLOCATION", "text": "Since the solution of APP is a difficult problem in practice due to its high computational complexity, the methods developed are inaccurate and heuristic. Solutions can be divided into two basic categories: single-level and multi-level. In one-level methods, the targets are assigned to the defenders only once at the beginning, as opposed to multi-level methods, in which the targets can be re-assigned at any time during the course of the agents. Once all defenders are assigned to some targets, they try to get to the desired places with the help of the environment modified LRA * algorithm. This work focuses only on the single-level methods. In all the examined strategies, each actor is assigned exactly one location and each location at most one defender. We describe several simple target assignment strategies and discuss their characteristics."}, {"heading": "A. Random Allocation", "text": "For comparison, we consider a strategy in which each defender is assigned to a random target of an attacker. Neither the position of the agent nor the underlying structure of the grid diagrams are exploited."}, {"heading": "B. Greedy Allocation", "text": "A greedy strategy is a slightly improved approach, taking defenders one by one in a random order and allocating them to their nearest target. Greed and random strategy do not take into account the starting positions of the attackers and do not exploit the structure of the underlying diagram in any way. These two methods always assign defenders to specific attack targets. The advantage of this approach is that if a defender succeeds in achieving his assigned target, he will never be captured by the attacker aiming at that target. This can be useful in scenarios where the number of defenders is similar to the number of attackers. Unfortunately, such a strategy would not be very successful in cases where attackers significantly exceed the number of defenders."}, {"heading": "C. Bottleneck Simulation Allocation", "text": "The idea behind the bottleneck simulation strategy is to gather some information from the map structure and the positions of the attackers and assign corners to defenders that would distract attackers from the protected area as much as possible. The goal is to successfully defend the targets even with a small number of defenders, as shown in Fig. 2. We try to identify strategic bottlenecks and block them from defenders more often. To detect bottlenecks in general, we develop the following simulation strategy using the underlying grid diagram. The basic idea is that attackers, when they move toward the targets, cross bottlenecks more often than other bottlenecks. This observation suggests to simulate the movement of attackers and find corners frequently visited. Since defenders do not share knowledge of the paths the attackers follow, frequently visited corners are determined by a simulation in which the paths of attackers are calculated corners."}, {"heading": "IV. CONNECTIVITY MAINTENANCE", "text": "The requirement to maintain communication capabilities is induced by a connectivity attitude of the subgraph of the visibility graph = = \"defensive\" idea. Therefore, the first task is to create the visibility charts, which depend on the positions of the obstacles in the map and a given range of visibility. Agents obviously move using an adaptation of the LRA * algorithm, which maintains the connectivity of the visibility charts. Paths are designed so that the first step of a defender must lead to a position that induces a connected visibility chart. Defenders follow paths calculated by LRA *, and whenever an agent is about to enter an occupied place, or if the next step would separate the communication subgraph, his path is recalculatedededededed.The movement determined by such an approach will certainly maintain connectivity, but in many instances some defenders will not be able to reach the targets that are assigned to them in such a way as to modify the number of targets."}, {"heading": "V. PRELIMINARY EXPERIMENTS", "text": "The aim of the experimental evaluation is to compare individual strategies associated with their counterparts in the previous section. We would like to find out whether the adaptation improves the success rate of a strategy and how instance types affect its performance. Furthermore, it is likely that the simulation strategy will deteriorate if connectivity is maintained because the identified bottlenecks are far from each other, making communication between countries more difficult. We have implemented all proposed strategies in Java as a prototype."}, {"heading": "B. Experimental results", "text": "The following series of experiments compares random, greedy, simulation strategy and their communication partners in different instance settings. Each of the following tables contains results for a map.Each entry in the following tables shows an average number of attackers who have achieved their goals at the end of the time span. The average is calculated for 10 runs in each context, always using a different random seed. Random and greedy strategies have very similar results in all positions and team relationships. It is obvious and not surprising that with decreasing | D | A | Ratio, the strength of defense strategies decreases. We focused on assessing the impact of the use of communicating agents in implemented target distribution strategies. For each target distribution strategy we compare the standard version and the version with communicating agents. Tab. I shows results for orthogonal spaces map. It can be observed that the use of communicators is beneficial for random strategies that are too weak in the defenders."}], "references": [{"title": "Kilobot: A low cost robot with scalable operations designed for collective behaviors", "author": ["M. Rubenstein", "C. Ahler", "N. Hoff", "A. Cabrera", "R. Nagpal"], "venue": "Robotics and Autonomous Systems, vol. 62, no. 7, pp. 966\u2013 975, 2014.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2014}, {"title": "Adversarial cooperative path-finding: Complexity and algorithms", "author": ["M. Ivanov\u00e1", "P. Surynek"], "venue": "26th IEEE International Conference on Tools with Artificial Intelligence, ICTAI 2014, 2014, pp. 75\u201382.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Multi-robot adversarial patrolling: Facing a full-knowledge opponent", "author": ["N. Agmon", "G.A. Kaminka", "S. Kraus"], "venue": "J. Artif. Intell. Res., vol. 42, pp. 887\u2013916, 2011.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Cooperative pathfinding", "author": ["D. Silver"], "venue": "Proc. of the 1st Artificial Intelligence and Interactive Digital Entertainment Conference, 2005, 2005, pp. 117\u2013122.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Exploiting subgraph structure in multi-robot path planning", "author": ["M.R.K. Ryan"], "venue": "J. Artif. Intell. Res., vol. 31, pp. 497\u2013542, 2008.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "MAPP: a scalable multi-agent path planning algorithm with tractability and completeness guarantees", "author": ["K.C. Wang", "A. Botea"], "venue": "J. Artif. Intell. Res., vol. 42, pp. 55\u201390, 2011.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "Multi-robot area patrol under frequency constraints", "author": ["Y. Elmaliach", "N. Agmon", "G.A. Kaminka"], "venue": "Ann. Math. Artif. Intell., vol. 57, no. 3-4, pp. 293\u2013320, 2009.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Probabilistic pursuit-evasion games: theory, implementation, and experimental evaluation", "author": ["R. Vidal", "O. Shakernia", "H.J. Kim", "D.H. Shim", "S. Sastry"], "venue": "IEEE Trans. Robotics and Autom., vol. 18, no. 5, pp. 662\u2013 669, 2002.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "Evolving beharioral strategies in predators and prey", "author": ["T. Haynes", "S. Sen"], "venue": "Proc. of Adaption and Learning in Multi-Agent Systems, IJCAI\u201995 Workshop, 1995, pp. 113\u2013126.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1995}, {"title": "Area protection in adversarial path-finding scenarios with multiple mobile agents on graphs: a theoretical and experimental study of target-allocation strategies for defense coordination", "author": ["M. Ivanov\u00e1", "P. Surynek"], "venue": "Technical report, arXiv, vol. arXiv:1708.0728, 2017.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2017}, {"title": "Energy-efficient broadcast and multicast trees in wireless networks", "author": ["J.E. Wieselthier", "G.D. Nguyen", "A. Ephremides"], "venue": "Mob. Netw. Appl., vol. 7, no. 6, pp. 481\u2013492, 2002.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2002}], "referenceMentions": [{"referenceID": 0, "context": "1: An example showing Kilobots [1] - small mobile robots", "startOffset": 31, "endOffset": 34}, {"referenceID": 1, "context": "APP itself can be regarded as a modification of known problem of Adversarial Cooperative Path Finding (ACPF) [2] where two teams of agents compete in reaching their target positions.", "startOffset": 109, "endOffset": 112}, {"referenceID": 2, "context": "APPC has many real-life motivations from the domains of access denial operations, robotics with adversarial teams of robots or other type of penetrators [3], and computer games.", "startOffset": 153, "endOffset": 156}, {"referenceID": 3, "context": "APPC, APP, as well as ACPF share the way how movement of agents is treated with the basic variant of cooperative pathfinding problem - CPF (multi-agent path-finding - MAPF) [4]\u2013 [6].", "startOffset": 173, "endOffset": 176}, {"referenceID": 5, "context": "APPC, APP, as well as ACPF share the way how movement of agents is treated with the basic variant of cooperative pathfinding problem - CPF (multi-agent path-finding - MAPF) [4]\u2013 [6].", "startOffset": 178, "endOffset": 181}, {"referenceID": 3, "context": "These methods include LRA*, CA*, HCA*, and WHCA* [4].", "startOffset": 49, "endOffset": 52}, {"referenceID": 6, "context": "These studies often focus on patroling strategies that are robust with respect to various attackers trying to penetrate through the patrol path [7].", "startOffset": 144, "endOffset": 147}, {"referenceID": 7, "context": "Theoretical works related to APP also include studies on pursuit evasion [8] or predator-prey [9] problems.", "startOffset": 73, "endOffset": 76}, {"referenceID": 8, "context": "Theoretical works related to APP also include studies on pursuit evasion [8] or predator-prey [9] problems.", "startOffset": 94, "endOffset": 97}, {"referenceID": 9, "context": "As APPC represents generalization of APP which itself is computationally hard problem [10] (namely PSPACE-hard),", "startOffset": 86, "endOffset": 90}, {"referenceID": 0, "context": "Agents may be equipped by an omnidirectional antenna or visual communication device (such as LEDs and IR sensors [1]), and hence a message reaches all nodes within the communication range of its sender.", "startOffset": 113, "endOffset": 116}, {"referenceID": 10, "context": "This feature is often referred to as wireless advantage [11].", "startOffset": 56, "endOffset": 60}], "year": 2017, "abstractText": "We address a problem of area protection in graphbased scenarios with multiple mobile agents where connectivity is maintained among agents to ensure they can communicate. The problem consists of two adversarial teams of agents that move in an undirected graph shared by both teams. Agents are placed in vertices of the graph; at most one agent can occupy a vertex; and they can move into adjacent vertices in a conflict free way. Teams have asymmetric goals: the aim of one team attackers is to invade into given area while the aim of the opponent team defenders is to protect the area from being entered by attackers by occupying selected vertices. The team of defenders need to maintain connectivity of vertices occupied by its own agents in a visibility graph. The visibility graph models possibility of communication between pairs of vertices. We study strategies for allocating vertices to be occupied by the team of defenders to block attacking agents where connectivity is maintained at the same time. To do this we reserve a subset of defending agents that do not try to block the attackers but instead are placed to support connectivity of the team. The performance of strategies is tested in multiple benchmarks. The success of a strategy is heavily dependent on the type of the instance, and so one of the contributions of this work is that we identify suitable strategies for diverse instance types.", "creator": "LaTeX with hyperref package"}}}