{"id": "1709.02656", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Sep-2017", "title": "Deep Packet: A Novel Approach For Encrypted Traffic Classification Using Deep Learning", "abstract": "Internet traffic classification has become more important with rapid growth of current Internet network and online applications. There have been numerous studies on this topic which have led to many different approaches. Most of these approaches exploit predefined features extracted by an expert in order to classify network traffic. In contrast, in this study, we propose a deep learning based approach which integrate both feature extraction and classification phases into one system. Our proposed scheme, called \"Deep Packet,\" can handle both traffic categorization in which the network traffic is categorize into major classes (e.g. FTP, P2P, etc.) and application identification in which one identify end-user applications (e.g., BitTorrent, Skype, etc.). Contrary to most of the current methods, Deep Packet can identify encrypted traffic and also distinguishes between VPN and non-VPN network traffic. After initial pre-processing phase on data, packets are fed to Deep Packet framework that embeds stacked autoencoder and convolution neural network in order to classify network traffic. Deep packet with CNN as its classification model achieved $F_{1}$ score of $0.95$ in application identification and it also accomplished $F_{1}$ score of $0.97$ in traffic categorization task. To the best of our knowledge, Deep Packet outperforms all of the classification and categorization methods on UNB ISCX VPN-nonVPN dataset.", "histories": [["v1", "Fri, 8 Sep 2017 11:40:37 GMT  (848kb,D)", "http://arxiv.org/abs/1709.02656v1", null], ["v2", "Sun, 24 Sep 2017 12:13:18 GMT  (218kb,D)", "http://arxiv.org/abs/1709.02656v2", null]], "reviews": [], "SUBJECTS": "cs.LG cs.CR cs.NI", "authors": ["mohammad lotfollahi", "ramin shirali", "mahdi jafari siavoshani", "mohammdsadegh saberian"], "accepted": false, "id": "1709.02656"}, "pdf": {"name": "1709.02656.pdf", "metadata": {"source": "CRF", "title": "Deep Packet: A Novel Approach For Encrypted Traffic Classification Using Deep Learning", "authors": ["Mohammad Lotfollahi", "Ramin Shirali", "Mahdi Jafari Siavoshani", "Mohammdsadegh Saberian"], "emails": [], "sections": [{"heading": null, "text": "Most of these approaches use predefined features extracted by an expert to classify network traffic. In contrast, in this study we propose a deep learning approach that integrates both feature extraction and classification phases into one system. Our proposed scheme, called \"Deep Packet,\" can handle both traffic categorization, which categorizes network traffic into important classes (e.g. FTP, P2P, etc.), and application identification, which identifies end-user applications (e.g. BitTorrent, Skype, etc.) Unlike most current methods, Deep Packet can identify encrypted traffic and also distinguish between VPN and non-VPN network traffic. After the initial pre-processing phase, the packets are fed into the Deep Packet Framework, which classifies stacked network encoders and automated network embedding."}, {"heading": "1. Introduction", "text": "In fact, most of them are able to survive themselves if they do not put themselves in a position to survive themselves, and they are able to survive themselves, \"he said in an interview with the New York Times."}, {"heading": "1.1. Related Works", "text": "This year it is more than ever before."}, {"heading": "2. Background", "text": "Below, we provide the background necessary to understand our proposed method for classifying network traffic using deep learning."}, {"heading": "2.1. Neural Networks", "text": "Neural networks (NNs) are computer systems that consist of a number of simple, highly interconnected processing elements that process information through their dynamic state response to external input. [29] In practice, these networks are typically composed of a huge number of building blocks called neurons, where they are interconnected, called connections, and each connection is assigned a weight. During the training process, the NN is fed potentially a huge number of data samples. [30] The widespread learning algorithm used to train such networks (known as back propagation) adjusts the weights to achieve the desired output from the NN. It is known that with more data samples, the superior learning models, including NNs for the classification task, can become better and more powerful [30]. Intuitively, this is because the NN can better approximate the underlying data distribution by observing more samples."}, {"heading": "2.2. Deep Learning", "text": "The Deep Learning Framework can be regarded as a special type of NNs with many (hidden) layers. Nowadays, with the rapid growth of computing power and the availability of graphical processing units (GPUs), the formation of Deep NNs has become plausible. Therefore, researchers from various scientific fields are considering the use of deep learning algorithms in their respective fields of research. It is worth noting that deep learning has achieved groundbreaking results in many areas such as speech recognition [31], machine vision [32] and natural language processing [33]."}, {"heading": "2.3. Autoencoder", "text": "The autoencoder NN is an unattended learning frame that uses back propagation to reconstruct the input at the output while minimizing the reconstruction error (i.e. according to some criteria). Suppose we have a training set {x1, x2,.., xn} where we have xi-Rn for each training data. Then, the goal of the autoencoder is to set yi = xi for i-Rn [1: n]. In view of this objective function, the autoencoder tries to learn a compressed representation of the data set, i.e. it roughly learns the identity function, FW, b (x)'x, where W and b are the total network weights and distort vectors. The first half of the autoencoder, which reduces the dimension of the data, is called the encoder encoder."}, {"heading": "2.4. Convolutional Neural Network", "text": "Convolutionary Neural Networks (CNNs) are another deep learning model in which the extraction of characteristics from the input data is carried out using layers consisting of revolutionary functions; the structure of Convolutionary Networks is inspired by the visual mechanism of living organisms [36]. Similar to other types of deep learning models, the extraction of characteristics plays an important role in Convolutionary Networks. Characteristics extracted in shallower layers of the Convolutionary Network are fed to successive Convolutionary Layers to extract more abstract characteristics. CNNs use neurons with local connections for input, meaning that each neuron is connected to only a limited number of adjacent elements in the input. This characteristic is also inspired by the visual system of animals, in other words: neurons in layer l are connected to a limited number of input neurons in layer l."}, {"heading": "3. Methodology", "text": "In this thesis, we have developed a framework consisting of two deep learning methods, Convolutionary NN and Stacked Autoencoder NN, both for the identification of applications and for the characterization of data traffic. Before training the NNs, we must prepare the network traffic data so that it can be properly fed into NNs. To this end, we prepare a pre-processing phase on the dataset. Fig. 3 shows the general scheme for the proposed method. In the test phase, after loading Packet Capture (pcap) files, the user selects the classification task that is required, namely the identification of applications or the categorization of data traffic. Subsequently, the appropriate type of pre-trained selection of neural networks is performed by the user to complete the required task. The dataset, implementation and design details of the pre-processing phase and architecture of the proposed Ns are explained below."}, {"heading": "3.1. Dataset", "text": "For this work, we use \"ISCX VPN-non VPN traffic dataset\" [10], which consists of the recorded traffic of various applications in pcap format. In this dataset, the captured packets are divided into different pcap files, labeled according to the application that makes up the packets (e.g. Skype) and the specific activity that the application was engaged in during the recording session (e.g. voice calls, chat, file transfer or video calls). For more details about the recorded traffic and the process of traffic generation, see [10]. The dataset also contains packets that were captured via Virtual Private Network (VPN) sessions. A VPN is a private overlay network between distributed sites that works by tunneling traffic over public communication networks (e.g. the Internet). Tunneling IP packets that guarantee secure remote access to servers is the most prominent aspect of VPN PN40 [data traffic is not captured for PN-like the regular VN)."}, {"heading": "3.2. Pre-processing", "text": "The data set was captured on the data link layer, so it contains the Ethernet header. The Data Link header contains information about the physical connection, such as the address of Media Access Control (MAC), which is essential for forwarding frames on the network, but is uninformative in terms of identifying applications or characterizing traffic. Therefore, the Ethernet header is removed first in the pre-processing phase. Transport layer segments, especially Transmission Control Protocol (TCP) or User Datagram Protocol (UDP), vary in header length, the former usually having a header of 20 bytes in length, while the latter has an 8 bytes header. To unify the transport layer segments, we inject zero numbers at the end of the headers of the UDP segment to match them with the TCP headers in length, while the latter has an 8 bytes header."}, {"heading": "3.2.1. Labeling Dataset", "text": "As mentioned in 3.1 above, the pcap files of the dataset are labeled according to the applications and activities they were involved in. However, to identify applications and to characterize the traffic, we need to redefine the labels for each task. To identify applications, all pcap files that are labeled as a specific application, without taking into account the activities and VPN or non-VPN conditions, are grouped into a single file, resulting in 17 different labels in Table 2a. Regarding the characterization of the traffic, we have grouped the recorded traffic of various applications involved in the same activity into a single pcapfile, ignoring the VPN or non-VPN condition as well as the labeling method for the application identification. This results in a 12-class dataset, as shown in Table 2b. If you look at Table 1, you would immediately notice that the dataset is significantly unbalanced between the number of classes and the number of samples."}, {"heading": "3.3. Architectures", "text": "The proposed SAE architecture consists of five completely interconnected layers, stacked on top of each other, each consisting of 400, 300, 200, 100 and 50 neurons. To avoid overfitting problems, after each layer, the drop-out technique is applied with a 25% failure probability [43]. In this technique, some neurons are randomly set to zero during the training phase. Consequently, there is a random number of active neurons with each iteration. For the tasks of identifying the application and traffic categorization, a Softmax classifier of 17 or 12 neurons is added to the last layer of the proposed SAE. Figure 5a illustrates the architecture of the proposed SAE. The second proposed scheme, based on a one-dimensional CNN description, is briefly presented in Figure 5b. As shown in the figure, the proposed CNN layer consists of a one-dimensional 200-dimensional, one-dimensional, five-dimensional filter layer connected to another with a one-dimensional filter layer."}, {"heading": "4. Experimental Results", "text": "To implement our proposed NNs, we have used Kera's library [44] with Tensorflow [45] backend. Each of the proposed models has been trained and evaluated against the independent test set derived from data sets. We have randomly divided the data sets into three different groups: firstly, it is used for training and weight and bias adjustment; secondly, 20% of the samples are used for validation during the training phase; finally, the third set of 20% of data points is used to test the model. To avoid the problem of matching, we have used early stop techniques as soon as the loss functional value remains stationary for validation, so that the network does not bypass the train samples. The training and testing procedure of each network has been performed 5 times, with different moves, tests and validations."}, {"heading": "5. Discussion", "text": "This year, it will be able to fix and fix the mentioned bugs."}, {"heading": "6. Conclusion", "text": "In this article, we introduced Deep Packet, a framework that automatically extracts functions from network traffic by using deep learning algorithms to classify traffic. To our knowledge, Deep Packet is the first traffic classification system to use deep learning algorithms, namely SAE and one-dimensional CNN, that can handle both application identification and traffic categorization tasks to date. Our results showed that Deep Packet exceeds all similar work to \"ISCX VPN-non VPN Traffic Dataset\" in both traffic classification and traffic categorization to date. In addition, we imagine that Deep Packet is the first step toward a general trend toward using deep learning algorithms in traffic classification tasks, due to the state-of-the-art results achieved by Deep Packet. Deep Packet can be modified to handle more complex tasks, such as multi-channel classification, the precise data extraction process from the gate to ultimately automate the traffic classification process."}, {"heading": "7. Refrences", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "8. Appendix", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "8.1. 1D CNN Architecture", "text": "The architecture of the one-dimensional CNN is shown in Fig. 8. It consists of a one-dimensional wave layer with 200 filters of size 5. The filters are entangled with the input vector. The output of this layer would be a two-dimensional tensor with a size of 1500 x 200. This tensor is then fed into the next wave layer, which has 80 filters with 4 x 200 shapes each. Subsequently, a one-dimensional middle pool layer with a pooling region of 2 is applied. The failure technique with a probability of 25% is used. Then the output, which is a tensor with a size of 2 x 80, is squeezed into a one-dimensional vector (flattened). This vector is then fed into several fully connected layers. This fully connected network consists of seven layers with 600, 500, 400, 300, 200, 100 or 50 neurons."}, {"heading": "8.2. Clustering", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "8.2.1. Traffic Characterization Task", "text": "We have performed a hierarchical clustering based on serial normalized confusion matrices for traffic characterization shown in Figures 6c and 6d. Clustering was performed using \"Euclidean\" as distance measurement and Ward.D. Interestingly, two groups uncovered by clustering share traffic in VPN and non-VPN clusters. All VPN traffic is bundled into one cluster, while all non-VPNs are grouped together."}, {"heading": "8.2.2. Application Identification Task", "text": "The hierarchical clustering in Fig. 6b, using \"Euclidean\" as distance measurement and Ward.D as cluster method, reveals similarities between the applications covered by the SAE. Application groups are generally useful in terms of application similarities in the real world. Clustering is shown in Fig. 10."}], "references": [{"title": "Comparison of machine-learning algorithms for classification of vpn network traffic flow using time-related features", "author": ["S. Bagui", "X. Fang", "E. Kalaimannan", "S.C. Bagui", "J. Sheehan"], "venue": "Journal of Cyber Security Technology ", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2017}, {"title": "A survey of payload-based traffic classification approaches", "author": ["M. Finsterbusch", "C. Richter", "E. Rocha", "J.-A. Muller", "K. Hanssgen"], "venue": "IEEE Communications Surveys & Tutorials 16 (2) ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "A survey of methods for encrypted traffic classification and analysis", "author": ["P. Velan", "M. \u010cerm\u00e1k", "P. \u010celeda", "M. Dra\u0161ar"], "venue": "International Journal of Network Management 25 (5) ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}, {"title": "Toward the accurate identification of network applications", "author": ["A.W. Moore", "K. Papagiannaki"], "venue": "in: PAM, Vol. 5, Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2005}, {"title": "A longitudinal study of p2p traffic classification", "author": ["A. Madhukar", "C. Williamson"], "venue": "in: Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, 2006. MASCOTS 2006. 14th IEEE International Symposium on, IEEE", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2006}, {"title": "Deepflow: Hiding anonymous communication traffic in p2p streaming networks", "author": ["J. Lv", "C. Zhu", "S. Tang", "C. Yang"], "venue": "Wuhan University Journal of Natural Sciences 19 (5) ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Can encrypted traffic be identified without port numbers", "author": ["R. Alshammari", "A.N. Zincir-Heywood"], "venue": "ip addresses and payload inspection?, Computer networks 55 (6) ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2011}, {"title": "Blinc: multilevel traffic classification in the dark", "author": ["T. Karagiannis", "K. Papagiannaki", "M. Faloutsos"], "venue": "in: ACM SIGCOMM Computer Communication Review, Vol. 35, ACM", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "Characterization of encrypted and vpn traffic using time-related features", "author": ["G.D. Gil", "A.H. Lashkari", "M. Mamun", "A.A. Ghorbani"], "venue": "in: Proceedings of the 2nd International Conference on Information Systems Security and Privacy ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2016}, {"title": "A multilevel taxonomy and requirements for an optimal traffic-classification model", "author": ["J. Khalife", "A. Hajjar", "J. Diaz-Verdejo"], "venue": "International Journal of Network Management 24 (2) ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Learning deep architectures for ai", "author": ["Y. Bengio"], "venue": "Found. Trends Mach. Learn. 2 (1) ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2009}, {"title": "Deep learning", "author": ["Y. LeCun", "Y. Bengio", "G. Hinton"], "venue": "Nature 521 (7553) ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "Application identification via network traffic classification", "author": ["B. Yamansavascilar", "M.A. Guvensan", "A.G. Yavuz", "M.E. Karsligil"], "venue": "in: Computing, Networking and Communications (ICNC), 2017 International Conference on, IEEE", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2017}, {"title": "Cute: Traffic classification using terms", "author": ["S.H. Yeganeh", "M. Eftekhar", "Y. Ganjali", "R. Keralapura", "A. Nucci"], "venue": "in: Computer Communications and Networks (ICCCN), 2012 21st International Conference on, IEEE", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "Bayesian neural networks for internet traffic classification", "author": ["T. Auld", "A.W. Moore", "S.F. Gull"], "venue": "IEEE Transactions on neural networks 18 (1) ", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2007}, {"title": "Packet classification algorithms: From theory to practice", "author": ["Y. Qi", "L. Xu", "B. Yang", "Y. Xue", "J. Li"], "venue": "in: INFOCOM 2009, IEEE, IEEE", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Accurate", "author": ["S. Sen", "O. Spatscheck", "D. Wang"], "venue": "scalable in-network identification of p2p traffic using application signatures, in: Proceedings of the 13th International Conference on World Wide Web, ACM, New York, NY, USA", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2004}, {"title": "Blindbox: Deep packet inspection over encrypted traffic", "author": ["J. Sherry", "C. Lan", "R.A. Popa", "S. Ratnasamy"], "venue": "in: ACM SIGCOMM Computer Communication Review, Vol. 45, ACM", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Using network motifs to identify application protocols", "author": ["E.G. Allan", "Jr.", "W.H. Turkett", "E.W. Fulp"], "venue": "in: Proceedings of the 28th IEEE Conference on Global Telecommunications,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "Traffic classification through simple statistical fingerprinting", "author": ["M. Crotti", "M. Dusi", "F. Gringoli", "L. Salgarelli"], "venue": "ACM SIGCOMM Computer Communication Review 37 (1) ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "Optimised multi-stage tcp traffic classifier based on packet size distributions", "author": ["X. Wang", "D.J. Parish"], "venue": "in: Communication Theory, Reliability, and Quality of Service (CTRQ), 2010 Third International Conference on, IEEE", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "Internet traffic classification using bayesian analysis techniques", "author": ["A.W. Moore", "D. Zuev"], "venue": "in: ACM SIGMETRICS Performance Evaluation Review, Vol. 33, ACM", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2005}, {"title": "Traffic classification using probabilistic neural networks", "author": ["R. Sun", "B. Yang", "L. Peng", "Z. Chen", "L. Zhang", "S. Jing"], "venue": "in: Natural computation (ICNC), 2010 sixth international conference on, Vol. 4, IEEE", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "Network traffic classification based on kernel self-organizing maps", "author": ["H. Ting", "W. Yong", "T. Xiaoling"], "venue": "in: Intelligent Computing and Integrated Systems (ICISS), 2010 International Conference on, IEEE", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2010}, {"title": "Discriminators for use in flowbased classification", "author": ["A. Moore", "D. Zuev", "M. Crogan"], "venue": "Tech. rep. ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2013}, {"title": "Neural networks primer", "author": ["M. Caudill"], "venue": "part i, AI Expert 2 (12) ", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1987}, {"title": "Sample size planning for classification models", "author": ["C. Beleites", "U. Neugebauer", "T. Bocklitz", "C. Krafft", "J. Popp"], "venue": "Analytica chimica acta 760 ", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2013}, {"title": "G", "author": ["G. Hinton", "L. Deng", "D. Yu"], "venue": "E. Dahl, A.-r. Mohamed, N. Jaitly, A. Senior, V. Vanhoucke, P. Nguyen, T. N. Sainath, et al., Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups, IEEE Signal Processing Magazine 29 (6) ", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2012}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["R. Socher", "A. Perelygin", "J.Y. Wu", "J. Chuang", "C.D. Manning", "A.Y. Ng", "C.P. Potts"], "venue": "in: EMNLP", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2013}, {"title": "Extracting and composing robust features with denoising autoencoders", "author": ["P. Vincent", "H. Larochelle", "Y. Bengio", "P.-A. Manzagol"], "venue": "in: Proceedings of the 25th international conference on Machine learning, ACM", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2008}, {"title": "Greedy layer-wise training of deep networks", "author": ["Y. Bengio", "P. Lamblin", "D. Popovici", "H. Larochelle"], "venue": "in: Advances in neural information processing systems", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}, {"title": "Receptive fields and functional architecture of monkey striate cortex", "author": ["D.H. Hubel", "T.N. Wiesel"], "venue": "The Journal of physiology 195 (1) ", "citeRegEx": "36", "shortCiteRegEx": null, "year": 1968}, {"title": "Deep convolutional neural networks for sentiment analysis of short texts", "author": ["C.N. dos Santos", "M. Gatti"], "venue": "in: Proceedings of the 25th International Conference on Computational Linguistics (COL- ING),", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2014}, {"title": "Predicting the sequence specificities of dna-and rna-binding proteins by 10  deep learning", "author": ["B. Alipanahi", "A. Delong", "M.T. Weirauch", "B.J. Frey"], "venue": "Nature biotechnology 33 (8) ", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2015}, {"title": "Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations", "author": ["H. Lee", "R. Grosse", "R. Ranganath", "A.Y. Ng"], "venue": "in: Proceedings of the 26th Annual International Conference on Machine Learning, ICML \u201909, ACM, New York, NY, USA", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2009}, {"title": "A survey of network virtualization", "author": ["N.M.K. Chowdhury", "R. Boutaba"], "venue": "Computer Networks 54 (5) ", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2010}, {"title": "Tor: The secondgeneration onion router", "author": ["R. Dingledine", "N. Mathewson", "P. Syverson"], "venue": "Tech. rep., Naval Research Lab Washington DC ", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2004}, {"title": "R", "author": ["N. Srivastava", "G.E. Hinton", "A. Krizhevsky", "I. Sutskever"], "venue": "Salakhutdinov, Dropout: a simple way to prevent neural networks from overfitting., Journal of Machine Learning Research 15 (1) ", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2014}, {"title": "TensorFlow: Large-scale machine learning on heterogeneous systems", "author": ["M. Abadi", "A. Agarwal", "P. Barham", "E. Brevdo", "Z. Chen", "C. Citro", "G.S. Corrado", "A. Davis", "J. Dean", "M. Devin", "S. Ghemawat", "I. Goodfellow", "A. Harp", "G. Irving", "M. Isard", "Y. Jia", "R. Jozefowicz", "L. Kaiser", "M. Kudlur", "J. Levenberg", "D. Man\u00e9", "R. Monga", "S. Moore", "D. Murray", "C. Olah", "M. Schuster", "J. Shlens", "B. Steiner", "I. Sutskever", "K. Talwar", "P. Tucker", "V. Vanhoucke", "V. Vasudevan", "F. Vi\u00e9gas", "O. Vinyals", "P. Warden", "M. Wattenberg", "M. Wicke", "Y. Yu", "X. Zheng"], "venue": "software available from tensorflow.org ", "citeRegEx": "45", "shortCiteRegEx": null, "year": 2015}, {"title": "Entropy measures and unconditional security in cryptography", "author": ["C. Cachin"], "venue": null, "citeRegEx": "47", "shortCiteRegEx": "47", "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "Network traffic classification is an important task in modern communication networks [1].", "startOffset": 85, "endOffset": 88}, {"referenceID": 1, "context": ", see [2], [3], [4] and the references therein).", "startOffset": 11, "endOffset": 14}, {"referenceID": 2, "context": ", see [2], [3], [4] and the references therein).", "startOffset": 16, "endOffset": 19}, {"referenceID": 3, "context": "First, according to [5, 6], only 30% to 70% of the current generated traffic can be identified based on the connection\u2019s port numbers.", "startOffset": 20, "endOffset": 26}, {"referenceID": 4, "context": "First, according to [5, 6], only 30% to 70% of the current generated traffic can be identified based on the connection\u2019s port numbers.", "startOffset": 20, "endOffset": 26}, {"referenceID": 2, "context": "Furthermore, the increasing demand for user\u2019s privacy and data encryption has tremendously raised the amount of encrypted traffic in today\u2019s Internet [4].", "startOffset": 150, "endOffset": 153}, {"referenceID": 5, "context": "Finally, many of the Internet service providers (ISPs) block P2P file sharing applications because of their high bandwidth consumption and copyright issues [7].", "startOffset": 156, "endOffset": 159}, {"referenceID": 6, "context": "These applications use protocol embedding to bypass traffic control systems [8].", "startOffset": 76, "endOffset": 79}, {"referenceID": 7, "context": "There have been abundant studies on the network traffic classification subject [9, 10, 5].", "startOffset": 79, "endOffset": 89}, {"referenceID": 8, "context": "There have been abundant studies on the network traffic classification subject [9, 10, 5].", "startOffset": 79, "endOffset": 89}, {"referenceID": 3, "context": "There have been abundant studies on the network traffic classification subject [9, 10, 5].", "startOffset": 79, "endOffset": 89}, {"referenceID": 9, "context": ") [11].", "startOffset": 2, "endOffset": 6}, {"referenceID": 10, "context": "In contrast, this work proposes a method based on the ideas recently developed in the machine learning community, namely, deep learning, [12, 13], to both characterize and identify the network traffic.", "startOffset": 137, "endOffset": 145}, {"referenceID": 11, "context": "In contrast, this work proposes a method based on the ideas recently developed in the machine learning community, namely, deep learning, [12, 13], to both characterize and identify the network traffic.", "startOffset": 137, "endOffset": 145}, {"referenceID": 8, "context": "\u2022 Our proposed method can identify traffic in both granular level (application identification and traffic categorization) with sate-of-the-art results compared to the works conducted on similar dataset [10, 14, 15, 16].", "startOffset": 202, "endOffset": 218}, {"referenceID": 12, "context": "\u2022 Our proposed method can identify traffic in both granular level (application identification and traffic categorization) with sate-of-the-art results compared to the works conducted on similar dataset [10, 14, 15, 16].", "startOffset": 202, "endOffset": 218}, {"referenceID": 13, "context": "\u2022 Our proposed method can identify traffic in both granular level (application identification and traffic categorization) with sate-of-the-art results compared to the works conducted on similar dataset [10, 14, 15, 16].", "startOffset": 202, "endOffset": 218}, {"referenceID": 14, "context": "\u2022 Our proposed method can identify traffic in both granular level (application identification and traffic categorization) with sate-of-the-art results compared to the works conducted on similar dataset [10, 14, 15, 16].", "startOffset": 202, "endOffset": 218}, {"referenceID": 9, "context": "\u2022 Our approach can accurately classify one of the hardest class of applications, known to be P2P [11].", "startOffset": 97, "endOffset": 101}, {"referenceID": 15, "context": "Because of the fast extraction process, this method is often used in firewall and access control list (ACL) [17].", "startOffset": 108, "endOffset": 112}, {"referenceID": 3, "context": "According to [5, 6] only 30% to 70% of the current Internet traffic can be classified using port-based classification methods.", "startOffset": 13, "endOffset": 19}, {"referenceID": 4, "context": "According to [5, 6] only 30% to 70% of the current Internet traffic can be classified using port-based classification methods.", "startOffset": 13, "endOffset": 19}, {"referenceID": 9, "context": "Payload Inspection Techniques: These techniques are based on the analysis of information in the application layer payload of packets [11].", "startOffset": 133, "endOffset": 137}, {"referenceID": 13, "context": ", see [15] and [18]).", "startOffset": 6, "endOffset": 10}, {"referenceID": 16, "context": ", see [15] and [18]).", "startOffset": 15, "endOffset": 19}, {"referenceID": 17, "context": "[19] proposed a new DPI system that can inspect encrypted payload without decryption, thus solved the user privacy issue, but it can only process HTTPS traffic.", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "The oldest graphical techniques are called Graphlets [9].", "startOffset": 53, "endOffset": 56}, {"referenceID": 9, "context": "Every application has its own graphlets which are almost unique for that particular application [11].", "startOffset": 96, "endOffset": 100}, {"referenceID": 18, "context": ", [21], proposed using binary metric which measures weather the host is involved in using an application or not.", "startOffset": 2, "endOffset": 6}, {"referenceID": 19, "context": "[22] proposed protocol fingerprints based on the probability density function (PDF) of packets inter-arrival time and normalized thresholds.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[23] have considered PDF of the packet size.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[16] proposed a Bayesian neural network that was trained to classify most wellknown P2P protocols including Kazaa, BitTorrent, GnuTella, and achieved 99% accuracy.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[24] achieved 96% of accuracy on the same set of applications using a Naive Bayes classifier and the kernel density estimator.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": ", see [25] and [26]).", "startOffset": 6, "endOffset": 10}, {"referenceID": 23, "context": ", see [25] and [26]).", "startOffset": 15, "endOffset": 19}, {"referenceID": 23, "context": "Moreover, it was shown in [26] that the ANN approach can outperform Naive Bayes methods.", "startOffset": 26, "endOffset": 30}, {"referenceID": 8, "context": "[10] used time related features like the duration of the flow, flow bytes per second, forward and backward inter-arrival time and etc.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[14] manually selected 111 flow features described in [27] and achieved 93.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[14] manually selected 111 flow features described in [27] and achieved 93.", "startOffset": 54, "endOffset": 58}, {"referenceID": 25, "context": "Neural networks (NNs) are computing systems made up of a number of simple, highly interconnected processing elements, which process information by their dynamic state response to external inputs [29].", "startOffset": 195, "endOffset": 199}, {"referenceID": 26, "context": "It is known that with more data samples, the supervuied learning models including NNs can become better and more powerful in doing the classification task [30].", "startOffset": 155, "endOffset": 159}, {"referenceID": 27, "context": "It is worth mentioning that deep learning has achieved stateof-the-art results in many fields such as speech recognition [31], machine vision [32], and natural language processing [33].", "startOffset": 121, "endOffset": 125}, {"referenceID": 28, "context": "It is worth mentioning that deep learning has achieved stateof-the-art results in many fields such as speech recognition [31], machine vision [32], and natural language processing [33].", "startOffset": 180, "endOffset": 184}, {"referenceID": 29, "context": "In practice, to obtain a better performance, a more complex architecture and training procedure, called stacked autoencoder (SAE), is proposed [34].", "startOffset": 143, "endOffset": 147}, {"referenceID": 30, "context": "The training procedure of a stacked autoencoder is done in a greedy layer-wise fashion [35].", "startOffset": 87, "endOffset": 91}, {"referenceID": 31, "context": "The structure of convolutional networks is inspired by visual mechanism of living organisms [36].", "startOffset": 92, "endOffset": 96}, {"referenceID": 31, "context": "The subset of neurons in layer l \u2212 1 which act as the input for a neuron in the successive layer are called the receptive field of that particular neuron [36].", "startOffset": 154, "endOffset": 158}, {"referenceID": 32, "context": "CNNs have been applied to different fields including natural language processing [37], computational biology [38], and machine vision [32].", "startOffset": 81, "endOffset": 85}, {"referenceID": 33, "context": "CNNs have been applied to different fields including natural language processing [37], computational biology [38], and machine vision [32].", "startOffset": 109, "endOffset": 113}, {"referenceID": 34, "context": "One of the most interesting application of CNNs is in face recognition[39].", "startOffset": 70, "endOffset": 74}, {"referenceID": 8, "context": "For this work, we use \u201cISCX VPN-nonVPN traffic dataset\u201d [10], that consists of captured traffic of different applications in pcap format files.", "startOffset": 56, "endOffset": 60}, {"referenceID": 8, "context": "For more details on the captured traffic and the traffic generation process, refer to [10].", "startOffset": 86, "endOffset": 90}, {"referenceID": 35, "context": "Tunneling IP packets, guaranteeing secure remote access to servers, is the most prominent aspect of VPNs [40].", "startOffset": 105, "endOffset": 109}, {"referenceID": 36, "context": "\u201d In order to create a private network pathway, Tor builds a circuit of encrypted connections through relays on the network in a way that no individual relay ever knows the complete path that a data packet has taken [41].", "startOffset": 216, "endOffset": 220}, {"referenceID": 37, "context": "In order to prevent over-fitting problem, after each layer the dropout technique with 25% dropout probability is applied [43].", "startOffset": 121, "endOffset": 125}, {"referenceID": 38, "context": "To implement our proposed NNs, we have used Keras library [44] using Tensorflow [45] backend.", "startOffset": 80, "endOffset": 84}, {"referenceID": 33, "context": "1, [38] tried to characterize network traffic using time-related features handcrafted from traffic flows.", "startOffset": 3, "endOffset": 7}, {"referenceID": 12, "context": "[14] exploiteds time-related features to identify end-user application.", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "Ideal encryption technique causes the data to bear most possible entropy [47].", "startOffset": 73, "endOffset": 77}], "year": 2017, "abstractText": "Internet traffic classification has become more important with rapid growth of current Internet network and online applications. There have been numerous studies on this topic which have led to many different approaches. Most of these approaches exploit predefined features extracted by an expert in order to classify network traffic. In contrast, in this study, we propose a deep learning based approach which integrate both feature extraction and classification phases into one system. Our proposed scheme, called \u201cDeep Packet,\u201d can handle both traffic categorization in which the network traffic is categorize into major classes (e.g., FTP, P2P, etc.) and application identification in which one identify end-user applications (e.g., BitTorrent, Skype, etc.). Contrary to most of the current methods, Deep Packet can identify encrypted traffic and also distinguishes between VPN and non-VPN network traffic. After initial pre-processing phase on data, packets are fed to Deep Packet framework that embeds stacked autoencoder and convolution neural network in order to classify network traffic. Deep packet with CNN as its classification model achieved F1 score of 0.95 in application identification and it also accomplished F1 score of 0.97 in traffic categorization task. To the best of our knowledge, Deep Packet outperforms all of the classification and categorization methods on UNB ISCX VPN-nonVPN dataset.", "creator": "LaTeX with hyperref package"}}}