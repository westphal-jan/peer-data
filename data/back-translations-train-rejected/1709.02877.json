{"id": "1709.02877", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Sep-2017", "title": "Variable Annealing Length and Parallelism in Simulated Annealing", "abstract": "In this paper, we propose: (a) a restart schedule for an adaptive simulated annealer, and (b) parallel simulated annealing, with an adaptive and parameter-free annealing schedule. The foundation of our approach is the Modified Lam annealing schedule, which adaptively controls the temperature parameter to track a theoretically ideal rate of acceptance of neighboring states. A sequential implementation of Modified Lam simulated annealing is almost parameter-free. However, it requires prior knowledge of the annealing length. We eliminate this parameter using restarts, with an exponentially increasing schedule of annealing lengths. We then extend this restart schedule to parallel implementation, executing several Modified Lam simulated annealers in parallel, with varying initial annealing lengths, and our proposed parallel annealing length schedule. To validate our approach, we conduct experiments on an NP-Hard scheduling problem with sequence-dependent setup constraints. We compare our approach to fixed length restarts, both sequentially and in parallel. Our results show that our approach can achieve substantial performance gains, throughout the course of the run, demonstrating our approach to be an effective anytime algorithm.", "histories": [["v1", "Fri, 8 Sep 2017 23:05:55 GMT  (99kb,D)", "http://arxiv.org/abs/1709.02877v1", "Tenth International Symposium on Combinatorial Search, pages 2-10. June 2017"]], "COMMENTS": "Tenth International Symposium on Combinatorial Search, pages 2-10. June 2017", "reviews": [], "SUBJECTS": "cs.NE cs.AI cs.DC", "authors": ["vincent a cicirello"], "accepted": false, "id": "1709.02877"}, "pdf": {"name": "1709.02877.pdf", "metadata": {"source": "CRF", "title": "Variable Annealing Length and Parallelism in Simulated Annealing", "authors": ["Vincent A. Cicirello"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "For many people, it is inconceivable that they are able to unfold and that they are able to unfold."}, {"heading": "2 Background", "text": "There are two main categories of parallel SA (Rudolph 1993): namely approaches that implement neighborhood assessments in parallel, and approaches that are essentially parallel implementations of Multistart SA. An example of the first case is the work of Ludwin and Betz, who use a parallel SA for FPGA placement to optimize the critical path length (Ludwin and Betz 2011).They perform several relocation assessments inar Xiv: 170 9.02 877v 1 [cs.N E] 8S ep2 017parallel and use what they call speculative movements; the second type can be called parallel multistart. Although the reboot of some algorithms, such as mountaineers, provides a means to counteract a large number of local optimisations; many have shown that sequential multistart SA is ineffective. A long run of SA the length of time available is typically more effective than adopting the best solution of a shorter series of runners."}, {"heading": "3 Technical Approach", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "3.1 Modified Lam Simulated Annealing", "text": "The basis of our approach is an existing sequential simulated annealer with an adaptive annealing schedule. < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <"}, {"heading": "3.2 Parallel Variable Length Runs", "text": "The modified Lam annex plan is virtually parameter-free. However, it requires the annex length, referred to as MaxEvals in the pseudo-code of Figure 1. It is not always practical to accurately predict the time available for the search. If the run is shorter than you expect, the search would have spent too much time to make effective use of the unexpected extra time, and the insufficient time that a longer run of the A series is typically much better than a restart of the A series. Better performance is expected when all parallel runs of the available time are not known, and can be difficult to accurately predict."}, {"heading": "4 Experiments", "text": "It is not the first time that the EU Commission has taken such a step."}, {"heading": "4.1 Scheduling with Sequence-Dependent Setups", "text": "To validate our approach, we consider a NP-Hard single machine planning problem, characterized by sequence-dependent setups, with the aim of minimizing the weighted delay. NP-Hard is the problem, even if setups are independent of the order placement (Morton and Pentico 1993), and the sequence-dependent setups increase the calculation difficulties by creating a non-order-receiving property of the evaluation function (Sen and Bagchi 1996). The problem is defined as follows and consists of N jobs, J = {1, j2,.,.,. Each job has a weight wk, duedate dk, and processing time pk. Setup times si, which are required before processing when directly following the order placement, and are asymmetric (i.e., si, k 6 = sk, i)."}, {"heading": "4.2 Experimental Design", "text": "We run our experiments on an Ubuntu 14.04 server, with 32 GB of memory and two Intel Xeon L5520 quad-core CPUs (2.27 GHz). The L5520 supports hyper-threading with two threads per core, so that our server has a total of 16 logical cores. We implement our experiments with Java 8 and the Java HotSpot 64-bit server VM. We run experiments in both sequential cases (N = 1) and in parallel. For the parallel runs we consider both N = 4 and N = 8 parallel instances. We note the best solution found in a second interval over 60 seconds. We compare our VAL and P-VAL with Multistart SA with a fixed annealing length (FAL and P-FAL in parallel). We consider several fixed annealing lengths using FAL-1 and P-FAL-1."}, {"heading": "4.3 Sequential Results", "text": "The results for sequential SA are summarized in Figures 2 and 3, which show an average of% \u2206 Opt and% \u2206 OptSum over the entire run time of the 60 seconds. At the beginning of the run, VAL dominates, and then the performance follows approximately the length of each progressively longer solid annealing. However, the performance of VAL then matches the duration of the restart, but the FAL variations overtake it approximately at the time corresponding to the annealing length for which they were tuned. However, since the longer runs of VAL are completed, the performance of VAL matches the duration of the restart. First, VAL versus FAL-1 / 8 is considered. For the first 6 seconds, VAL strongly dominates the extremely significant values (p-values: < 10 \u2212 18). FAL-1 / 8 then exceeds the performance of VAL to a significant level for about 2 seconds (p-value in-second: < 0.0001)."}, {"heading": "4.4 Parallel Results: 4 Parallel Instances", "text": "Figures 5 and 6 show average% -Opt- and% -OptSum values for the duration of the 60-second runs for N = 4 parallel instances. Of the P-FAL variations, P-FAL-1 performs best on both measures at the end of the run. However, the differences at the end of the run between the P-FAL variations are not statistically significant (p-values > 0.13 for% \u2206 Opt and p-values > 0.08 for% \u2206 OptSum). However, at the beginning of the run, P-VAL dominates relative to all fixed annealing lengths. For 90% of the run, P-VAL strongly dominates PFAL-1 and dominates P-FAL-1 / 2 almost half of the run, on both measures and similarly for P-FAL-1 / 4 and P-FAL-1 / 8. But late in the run, P-VAL does not achieve the performance of the fixed annealing lengths as well as in the sequential case."}, {"heading": "4.5 P-VAL and P-VAL-0: 8 Parallel Instances", "text": "Previous, we have pointed out that deficits exist in P-VAL-0 when N > 4. We consider this further here. First, we examine the performance of P-VAL-0 relative to P-VAL-0 in the case of 8 parallel instances. Numbers 7 and 8 show average% \u2206 Opt and% \u2206 OptSum, respectively, for the duration of 60 second runs. P-VAL strongly dominates P-VAL-0 throughout the run, on both metrics, at extremely statistically significant levels (p-values < 0.0001 in every second interval).Why is this the case? For P-VAL-0, restart r of SAi is of length 1000."}, {"heading": "4.6 Parallel Results: 8 Parallel Instances", "text": "Let us now consider N = 8 parallel operations. Figures 11 and 12 show an average of% \u2206 Opt and% \u2206 OptSum for the duration of the 60 seconds, respectively. Each of the P-FAL variations eventually overtakes P-VAL as it approaches its coordinated annealing lengths. For example, P-FAL-1 / 2 overtakes P-VAL on the second page 26 to% \u2206 OptSum and on the second 28 to% \u2206 Opt, and PFAL-1 overtakes P-VAL on the second 51 to% \u0445 OptSum and on the second 56 to% \u2206 Opt. Although not apparent from the scale of diagrams, P-FAL-1 outperforms all other statistically significant levels on both measures. We should expect P-FAL-1 to perform best on the second page, since P-FAL-1 runs several long runs in parallel, with the modified Lam almost consistent with the actual L-side results."}, {"heading": "4.7 On the Efficacy of Reannealing", "text": "So far, all experimental results have used independent restarts of random starting solutions, with no data exchange between parallel instances. We are now investigating what, if any, is gained by restarting previous solutions. Specifically, we are looking at VAL (R), where each restart glows the best running solution, rather than a random solution. P-VAL (R) glows the currently best running solution across all parallel instances. Likewise, FAL-1 / 8 (R) is FAL-1 / 8. At variable annealing lengths, both sequentially and parallel, the performance differences between reburning and random output solutions are not statistically significant, except for the parallel case during the last 15-20 seconds of the run, with both sequential and parallel annealing lengths showing no significant differences between restarting and parallel outputs."}, {"heading": "5 Conclusions", "text": "In this paper, we propose a restart plan for South Africa that uses the modified Lam Incandescent Plan. Our restart plan eliminates the need to know the annealing length from the outset. Based on South Africa's frequently proven characteristic that individual long runs typically exceed several short runs, our restart plan exponentially increases the annealing length. The shorter runs at the beginning allow for quick \"good\" solutions, while the increasing annealing lengths of restarts approximate the end of the mileage of a single long run of SA. Our restart plan supports parallel implementation using parallel, independent SA instances that vary in the initial annealing length, and with exponentially increasing restart lengths. The initial annealing lengths are staggered to ensure that longer runs are already underway as shorter runs are completed. Our goal is to balance the risk with the error in determining the time available."}], "references": [{"title": "and Moser", "author": ["A. Aleti"], "venue": "I.", "citeRegEx": "Aleti and Moser 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "J", "author": ["Boyan"], "venue": "A.", "citeRegEx": "Boyan 1998", "shortCiteRegEx": null, "year": 1998}, {"title": "S", "author": ["V.A. Cicirello", "Smith"], "venue": "F.", "citeRegEx": "Cicirello and Smith 2005", "shortCiteRegEx": null, "year": 2005}, {"title": "Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance", "author": ["V.A. Cicirello 2003a] Cicirello"], "venue": null, "citeRegEx": "Cicirello,? \\Q2003\\E", "shortCiteRegEx": "Cicirello", "year": 2003}, {"title": "Weighted tardiness scheduling with sequence-dependent setups: A benchmark library", "author": ["V.A. Cicirello 2003b] Cicirello"], "venue": "Tech. report, ICL Lab, CMU. http://www. cicirello.org/datasets/wtsds/", "citeRegEx": "Cicirello,? \\Q2003\\E", "shortCiteRegEx": "Cicirello", "year": 2003}, {"title": "2006", "author": ["Cicirello", "V. A"], "venue": "Non-wrapping order crossover: An order preserving crossover operator that respects absolute position. In Proc. GECCO\u201906. ACM. 1125\u2013", "citeRegEx": "Cicirello 2006", "shortCiteRegEx": null, "year": 1131}, {"title": "V", "author": ["Cicirello"], "venue": "A.", "citeRegEx": "Cicirello 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "V", "author": ["Cicirello"], "venue": "A.", "citeRegEx": "Cicirello 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "V", "author": ["Cicirello"], "venue": "A.", "citeRegEx": "Cicirello 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "A", "author": ["Cire"], "venue": "A.; Kadioglu, S.; and Sellmann, M.", "citeRegEx": "Cire. Kadioglu. and Sellmann 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "A", "author": ["Eiben"], "venue": "E.; Hinterding, R.; and Michalewicz, Z.", "citeRegEx": "Eiben. Hinterding. and Michalewicz 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "C", "author": ["Gomes"], "venue": "P.; Selman, B.; Crato, N.; and Kautz, H.", "citeRegEx": "Gomes et al. 2000", "shortCiteRegEx": null, "year": 2000}, {"title": "and Menon", "author": ["S. Jha"], "venue": "V.", "citeRegEx": "Jha and Menon 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "and Delosme", "author": ["J. Lam"], "venue": "J.", "citeRegEx": "Lam and Delosme 1988", "shortCiteRegEx": null, "year": 1988}, {"title": "and Juan", "author": ["Liao", "C.-J."], "venue": "H.-C.", "citeRegEx": "Liao and Juan 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "Neighborhood search procedures for single machine tardiness scheduling with sequencedependent setups", "author": ["Tsou Liao", "C.-J. Huang 2012] Liao", "H.-H. Tsou", "K.-L. Huang"], "venue": "Theoretical Comp. Sci", "citeRegEx": "Liao et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Liao et al\\.", "year": 2012}, {"title": "Optimal speedup of las vegas algorithms. Information Processing Letters 47(4):173\u2013180", "author": ["Sinclair Luby", "M. Zuckerman 1993] Luby", "A. Sinclair", "D. Zuckerman"], "venue": null, "citeRegEx": "Luby et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Luby et al\\.", "year": 1993}, {"title": "and Betz", "author": ["A. Ludwin"], "venue": "V.", "citeRegEx": "Ludwin and Betz 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "D", "author": ["T.E. Morton", "Pentico"], "venue": "W.", "citeRegEx": "Morton and Pentico 1993", "shortCiteRegEx": null, "year": 1993}, {"title": "A", "author": ["Rahimian, F.", "Payberah"], "venue": "H.; Girdzijauskas, S.; Jelasity, M.; and Haridi, S.", "citeRegEx": "Rahimian et al. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "K", "author": ["D.J. Ram", "T.H. Sreenivas", "Subramaniam"], "venue": "G.", "citeRegEx": "Ram. Sreenivas. and Subramaniam 1996", "shortCiteRegEx": null, "year": 1996}, {"title": "and Bagchi", "author": ["A.K. Sen"], "venue": "A.", "citeRegEx": "Sen and Bagchi 1996", "shortCiteRegEx": null, "year": 1996}, {"title": "W", "author": ["Swartz"], "venue": "P.", "citeRegEx": "Swartz 1993", "shortCiteRegEx": null, "year": 1993}, {"title": "and Araki", "author": ["S. Tanaka"], "venue": "M.", "citeRegEx": "Tanaka and Araki 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "When parameter tuning actually is parameter control", "author": ["Preuss Wessing", "S. Rudolph 2011] Wessing", "M. Preuss", "G. Rudolph"], "venue": "In Proc. GECCO,", "citeRegEx": "Wessing et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Wessing et al\\.", "year": 2011}, {"title": "T", "author": ["H. Xu", "Z. L\u00fc", "Cheng"], "venue": "C.", "citeRegEx": "Xu. L\u00fc. and Cheng 2014", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [], "year": 2017, "abstractText": "In this paper, we propose: (a) a restart schedule for an adaptive simulated annealer, and (b) parallel simulated annealing, with an adaptive and parameter-free annealing schedule. The foundation of our approach is the Modified Lam annealing schedule, which adaptively controls the temperature parameter to track a theoretically ideal rate of acceptance of neighboring states. A sequential implementation of Modified Lam simulated annealing is almost parameter-free. However, it requires prior knowledge of the annealing length. We eliminate this parameter using restarts, with an exponentially increasing schedule of annealing lengths. We then extend this restart schedule to parallel implementation, executing several Modified Lam simulated annealers in parallel, with varying initial annealing lengths, and our proposed parallel annealing length schedule. To validate our approach, we conduct experiments on an NP-Hard scheduling problem with sequence-dependent setup constraints. We compare our approach to fixed length restarts, both sequentially and in parallel. Our results show that our approach can achieve substantial performance gains, throughout the course of the run, demonstrating our approach to be an effective anytime algorithm.", "creator": "LaTeX with hyperref package"}}}