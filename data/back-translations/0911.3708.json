{"id": "0911.3708", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Nov-2009", "title": "Manipulability of Single Transferable Vote", "abstract": "For many election rules, it is difficult to calculate successful manipulation, but NP hardness limits only the complexity of the worst cases. Recent theoretical results suggest that manipulation can often be easy in practice. We are empirically investigating the cost of manipulating the Single Transferable Vote (STV) rule, which was one of the first rules that proved to be NP difficult to manipulate. It also seems to be one of the more difficult rules, as it involves multiple ballots, and unlike many other rules, it is difficult for a single agent to manipulate without weighting votes or uncertainty about how the other agents voted. In almost every election in our experiments, it was easy to calculate how a single agent could manipulate the election or prove that manipulation by a single agent was impossible. It remains an interesting open question whether manipulation by a coalition of agents is hard to calculate in practice.", "histories": [["v1", "Thu, 19 Nov 2009 06:23:55 GMT  (83kb,D)", "http://arxiv.org/abs/0911.3708v1", "Proceedings of the CARE'09 International Workshop on Collaborative Agents -- REsearch and Development, Melbourne 2009"]], "COMMENTS": "Proceedings of the CARE'09 International Workshop on Collaborative Agents -- REsearch and Development, Melbourne 2009", "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.GT cs.MA", "authors": ["toby walsh"], "accepted": false, "id": "0911.3708"}, "pdf": {"name": "0911.3708.pdf", "metadata": {"source": "CRF", "title": "Manipulability of Single Transferable Vote", "authors": ["Toby Walsh"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "A simple mechanism for collaborating agents to reach consensus on a plan of action is to vote. One issue is the possibility of agents trying to manipulate such an election by mis-reporting their preferences in order to get a better result. Fortunately, it is often computationally difficult to find a successful manipulation [1]. For example, Bartholdi and Orlin proved that the Single Transferable Vote (STV) rule is NP-hard to manipulate [2]. This remains one of the few commonly used voting rules which is NP-hard to manipulate without weights on the votes, or uncertainty in how the other agents have voted. NP-hardness is only a worst-case result and may not reflect the difficulty of manipulation in practice. Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7]. Most recently, Walsh has suggested that empirical studies might provide insights into the computational complexity of manipulation that can complement such theoretical results [8]. For example, when theoretical analysis is asymptotic, empirical studies can reveal if hidden constants and the finite size of elections met in practice are significant. As a second example, theoretical analysis is often restricted to simple distributions. Manipulation may be very different in practice due to correlations between votes. Walsh\u2019s empirical study was limited to the simple veto rule, weighted votes and elections with only three candidates. In this paper, we relax these assumptions and consider the more complex multi-round STV rule, unweighted votes, and large numbers of candidates.\nOur experiments suggest that we should treat worst-case results about the complexity of manipulating voting rules like STV with some care. It was easy for a single agent to manipulate almost every election in our experiments or to prove that manipulation by a single agent was impossible. In the millions of elections studied, we computed a\nar X\niv :0\n91 1.\n37 08\nv1 [\ncs .A\nI] 1\n9 N\nov 2\n00 9\nmanipulation or proved none exists in a few minutes in each case. Indeed, in most cases, we took just a few seconds. As a result, we conjecture that it may be easy for a single agent to compute a manipulation or prove none exists for any STV election involving a hundred or fewer agents and candidates. Since it may be unreasonable or infeasible for an agent to order totally more candidates, and since elections with more agents are usually not manipulable by a single agent, this suggests that manipulation of the STV rule by a single agent is unlikely to be computationally hard in practice."}, {"heading": "2 Manipulating STV", "text": "Single Transferable Vote (STV) proceeds in a number of rounds. We consider the case of electing a single winner. Each agent totally ranks the candidates. Unless one candidate has a majority of first place votes, we eliminate the candidate with the least number of first place votes. Any ballots placing the eliminated candidate in first place are re-assigned to the second place candidate. We then repeat until one candidate has a majority. STV is used in a wide variety of elections including for the Irish presidency, the Australian House of Representatives, the Academy awards, and many societies and organizations including the American Political Science Association, the International Olympic Committee, and the British Labour Party.\nAs in previous studies, we assume that the agents manipulating the election know all the other votes. The manipulation problem is to decide how the manipulators should vote, perhaps differently to their true preferences, in order for a chosen candidate to win. Amongst voting rules where the winner is polynomial to compute, STV appears to be one of the harder rules to compute how to manipulate. For example, it is NP-hard to manipulate by a single voter if the number of candidates is unbounded and votes are unweighted [2], or by a coalition of voters if there are 3 or more candidates and votes are weighted (or votes are unweighted but there is uncertainty about the votes) [9]. Coleman and Teague give an enumerative method for a coalition of k unweighted voters to compute a manipulation of the STV rule which runs in O(m!(n+mk)) time where n is the number of voters and m is the number of candidates [10]. For a single manipulator, Conitzer gave a method to compute the set of candidates that a single agent can make win a STV election which takes O(n1.62m) time [11]. We improve upon Conitzer\u2019s procedure to compute if a single agent can manipulate a (possibly weighted) STV election to make a desired candidate win. Unlike Conitzer\u2019s procedure, we ignore any election in which the chosen candidate is eliminated, and terminate search as soon as we find any manipulation in which the chosen candidate wins."}, {"heading": "3 Uniform votes", "text": "We start with one of the simplest possible scenarios: elections in which each vote is equally likely. We have one agent trying to manipulate an election of m candidates where n other agents vote. Votes are drawn uniformly at random from all m! possible votes. This is the Impartial Culture (IC) model."}, {"heading": "3.1 Varying number of candidates", "text": "In Figures 1 and 2, we plot the probability that a manipulator can make a random agent win, and the search to compute if this is possible when we fix the number of agents but vary the number of candidates. In this and subsequent experiments, we tested 1000 problems at each point. Unless otherwise indicated, the number of candidates m and the number of agents n are varied in powers of 2 from 1 to 128.\nThe number of agents voting is fixed and we vary the number of candidates. The n fixed votes are uniformly drawn at random from the m! possible votes. The y-axis measures the probability that the manipulator can make a random candidate win.\nAs the number of candidates m increases, the ability of an agent to manipulate the election decreases. Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point. The probability curve resembles the smooth phase transitions seen in polynomial problems like 2-coloring [22] and 1- in-2 satisfiability [23].\nWhilst the cost of computing a manipulation increases exponential with the number of candidates m, the observed scaling is much better than the 1.62m. We can easily compute manipulations for up to 128 candidates. There are perhaps few real world elections with more candidates than this. Note that 1.62m is over 1026 for m = 128. Thus, we appear to be far from the worst case. We fitted the observed data to the model abm and found a good fit with b = 1.008 and a coefficient of determination,R2 = 0.95."}, {"heading": "3.2 Varying number of agents", "text": "In Figures 3 and 4, we plot the probability that a manipulator can make a random agent win, and the cost to compute if this is possible when we fix the number of candidates but vary the number of agents in the election. The ability of an agent to manipulate the election decreases as the number of agents, n increases. Only if there are few votes and\nfew candidates is there a significant chance that the manipulator will be able to change the result. Finding a manipulation or proving none is possible is easy unless we have both a a large number of agents and a large number of candidates. However, in this situation, the chance that the manipulator can change the result is very small."}, {"heading": "4 Urn model", "text": "To study the impact of more correlation between votes, we considered random votes drawn from the Polya Eggenberger urn model [24]. In this model, we have an urn containing all m! possible votes. We draw votes out of the urn at random, and put them back into the urn with a additional votes of the same type (where a is a parameter). As a increases, there is increasing correlation between the votes. This generalizes both the Impartial Culture model (a = 0) and the Impartial Anonymous Culture (a = 1) model. To give a parameter independent of problem size, we consider b = am! . For instance, with b = 1, there is a 50% chance that the second vote is the same as the first.\nIn Figures 5 and 6, we plot the probability that a manipulator can make a random agent win, and the cost to compute if this is possible as we vary the number of candidates in an election where votes are drawn from the Polya Eggenberger urn model. The search cost to compute a manipulation increases exponential with the number of candidates m. However, we can easily compute manipulations for up to 128 candidates and agents. We fitted the observed data to the model abm and found a good fit with b = 1.001 and a coefficient of determination, R2 = 0.99.\nIn Figure 7, we plot the cost to compute a manipulation when we fix the number of candidates but vary the number of agents. As in previous experiments, finding a manipulation or proving none exists is easy even if we have many agents and candidates.\nThe number of candidates is fixed and we vary the number of agents voting.\nThe number of agents voting is fixed and we vary the number of candidates. The n fixed votes are drawn using using the Polya Eggenberger urn model with b = 1. The y-axis measures the probability that the manipulator can make a random candidate win."}, {"heading": "5 Sampling real elections", "text": "Elections met in practice may differ from those sampled so far. There might, for instance, be some votes which are never cast. On the other hand, with the models studied so far every possible vote has a non-zero probability of being seen. We therefore sampled some real voting records [25,26]. Our first experiment uses the votes cast by 10\nThe number of agents voting is fixed and we vary the number of candidates. The y-axis measures the probability that the manipulator can make a random candidate win.\nteams of scientists to select one of 32 different trajectories for NASA\u2019s Mariner spacecraft [27]. Each team ranked the different trajectories based on their scientific value. We sampled these votes. For elections with 10 or fewer agents voting, we simply took a\nrandom subset of the 10 votes. For elections with more than 10 agents voting, we simply sampled the 10 votes with uniform frequency. For elections with 32 or fewer candidates, we simply took a random subset of the 32 candidates. Finally for elections with more than 32 candidates, we duplicated each candidate and assigned them the same ranking. Since STV works on total orders, we then forced each agent to break any ties randomly.\nIn Figures 8 to 10, we plot the probability that a manipulator can make a random agent win, and the cost to compute if this is possible as we vary the number of candidates and agents. Votes are sampled from the NASA experiment as explained earlier. The search needed to compute a manipulation again increases exponential with the number of candidates m. However, the observed scaling is much better than 1.62m. We can easily compute manipulations for up to 128 candidates and agents.\nIn our second experiment, we used votes from a faculty hiring committee at the University of California at Irvine [28]. This dataset had 10 votes for 3 different candidates. We sampled from this in the same ways as from the NASA dataset. Results are reported in Figures 11 and 12. As in the previous experiments, it was easy to find a manipulation or prove that none exists. The observed scaling was again much better than 1.62m."}, {"heading": "6 Related work", "text": "Coleman and Teague proposed algorithms to compute a manipulation for the STV rule [10]. They also conducted an empirical study which demonstrates that only relatively small coalitions are needed to change the elimination order of the STV rule. They observed that most uniform and random elections are not trivially manipulable using a simple greedy heuristic. On the other hand, our results suggest that, for manipulation\nby a single agent, a limited amount of backtracking is needed to find a manipulation or prove that none exists.\nWalsh empirically studied the cost of manipulating the veto rule by a coalition of agents whose votes were weighted [8]. He showed that there was a smooth transition in the probability that a coalition can elect a desired candidate as the size of the manipulating coalition increases. He also showed that it was easy to find manipulations of the veto rule or prove that none exist for many independent and identically distributed votes even when the coalition of manipulators was critical in size. He was able to identify a situation in which manipulation was computationally hard. This is when votes are highly correlated and the election is \u201chung\u201d. However, even a single uncorrelated voter was enough to make manipulation easy again.\nAs indicated, there have been several theoretical results recently that suggest elections are easy to manipulate in practice despite NP-hardness results. For instance, Xia and Conitzer have shown that for a large class of voting rules including STV, as the number of agents grows, either the probability that a coalition can manipulate the result is very small (as the coalition is too small), or the probability that they can easily manipulate the result to make any alternative win is very large [5]. They left open only a small interval in the size for the coalition for which the coalition is large enough to be able to manipulate but not obviously large enough to be able to manipulate the result easily.\nAs a second example, Procaccia and Rosenschein proved that for most scoring rules and a wide variety of distributions over votes, when the size of the coalition is o( \u221a n), the probability that they can change the result tends to 0, and when it is \u03c9( \u221a n), the probability that they can manipulate the result tends to 1 [29]. They also gave a simple greedy procedure that will find a manipulation of a scoring rule in polynomial time with a probability of failure that is an inverse polynomial in n [4]. Friedgut, Kalai and Nisan proved that if the voting rule is neutral and far from dictatorial and there are 3 candidates\nthen there exists an agent for whom a random manipulation succeeds with probability \u2126( 1n ) [6]. Starting from different assumptions, Xia and Conitzer showed that a random manipulation would succeed with probability \u2126( 1n ) for 3 or more candidates for STV, for 4 or more candidates for any scoring rule and for 5 or more candidates for Copeland [7]."}, {"heading": "7 Conclusions", "text": "We have studied empirically whether computational complexity is a barrier to the manipulation for the STV rule. We have looked at a number of different distributions of votes including uniform random votes, correlated votes drawn from an urn model, and votes sampled from some real world elections. We have looked at manipulation by both a single agent, and a coalition of agents who vote in unison. Unlike phase transition behaviour in domains like satisfiability, we did not observe rapid transitions in the manipulability of STV elections that sharpen around a fixed point, but saw instead smooth transitions. We also did not observe hard instances around the transition in manipulability. Indeed, almost every one of the millions of elections in our experiments was easy to manipulate or to prove could not be manipulated. Our results suggest that it may be easy for a single agent to compute a manipulation or prove none is possible for any STV election involving a hundred or fewer of agents and candidates. It would also be interesting to perform a similar empirical study for other voting rules as well as for other types of manipulation and control (e.g. manipulation by a coalition, or control by the addition/deletion of candidates). Two interesting rules to study are maximin and ranked pairs. These two rules have only recently been shown to be NP-hard to manipulate, and are members of the small set of voting rules which are NP-hard to manipulate without weights or uncertainty [30]."}], "references": [{"title": "The computational difficulty of manipulating an election", "author": ["J. Bartholdi", "C. Tovey", "M. Trick"], "venue": "Social Choice and Welfare 6(3)", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1989}, {"title": "Single transferable vote resists strategic voting", "author": ["J. Bartholdi", "J. Orlin"], "venue": "Social Choice and Welfare 8(4)", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1991}, {"title": "Nonexistence of voting rules that are usually hard to manipulate", "author": ["V. Conitzer", "T. Sandholm"], "venue": "Proceedings of the 21st National Conference on AI, Association for Advancement of Artificial Intelligence", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2006}, {"title": "Junta distributions and the average-case complexity of manipulating elections", "author": ["A.D. Procaccia", "J.S. Rosenschein"], "venue": "Journal of Artificial Intelligence Research 28", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2007}, {"title": "Generalized scoring rules and the frequency of coalitional manipulability", "author": ["L. Xia", "V. Conitzer"], "venue": "EC \u201908: Proceedings of the 9th ACM conference on Electronic commerce, New York, NY, USA, ACM", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "Elections can be manipulated often", "author": ["E. Friedgut", "G. Kalai", "N. Nisan"], "venue": "Proc. 49th FOCS, IEEE Computer Society Press", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "A sufficient condition for voting rules to be frequently manipulable", "author": ["L. Xia", "V. Conitzer"], "venue": "EC \u201908: Proceedings of the 9th ACM conference on Electronic commerce, New York, NY, USA, ACM", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Where are the really hard manipulation problems? The phase transition in manipulating the veto rule", "author": ["T. Walsh"], "venue": "Proceedings of 21st IJCAI, International Joint Conference on Artificial Intelligence", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2009}, {"title": "When are elections with few candidates hard to manipulate", "author": ["V. Conitzer", "T. Sandholm", "J. Lang"], "venue": "Journal of the Association for Computing Machinery 54", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2007}, {"title": "On the complexity of manipulating elections", "author": ["T. Coleman", "V. Teague"], "venue": "Proceedings of the 13th The Australasian Theory Symposium (CATS2007).", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2007}, {"title": "Computational Aspects of Preference Aggregation", "author": ["V. Conitzer"], "venue": "PhD thesis, Computer Science Department, Carnegie Mellon University", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "Where the really hard problems are", "author": ["P. Cheeseman", "B. Kanefsky", "W. Taylor"], "venue": "Proceedings of the 12th IJCAI, International Joint Conference on Artificial Intelligence", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1991}, {"title": "Hard and Easy Distributions of SAT Problems", "author": ["D. Mitchell", "B. Selman", "H. Levesque"], "venue": "Proceedings of the 10th National Conference on AI, Association for Advancement of Artificial Intelligence", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1992}, {"title": "The SAT phase transition", "author": ["I. Gent", "T. Walsh"], "venue": "In Cohn, A.G., ed.: Proceedings of 11th ECAI, John Wiley & Sons", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1994}, {"title": "Scaling effects in the CSP phase transition", "author": ["I. Gent", "E. MacIntyre", "P. Prosser", "T. Walsh"], "venue": "1st International Conference on Principles and Practices of Constraint Programming (CP95), Springer-Verlag", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1995}, {"title": "Random constraint satisfaction: Flaws and structure", "author": ["I. Gent", "E. MacIntyre", "P. Prosser", "B. Smith", "T. Walsh"], "venue": "Constraints 6(4)", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2001}, {"title": "Phase transitions and annealed theories: Number partitioning as a case study", "author": ["I. Gent", "T. Walsh"], "venue": "Proceedings of 12th ECAI.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1996}, {"title": "Analysis of heuristics for number partitioning", "author": ["I. Gent", "T. Walsh"], "venue": "Computational Intelligence 14(3)", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1998}, {"title": "Search in a small world", "author": ["T. Walsh"], "venue": "Proceedings of 16th IJCAI, International Joint Conference on Artificial Intelligence", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1999}, {"title": "Search on high degree graphs", "author": ["T. Walsh"], "venue": "Proceedings of 17th IJCAI, International Joint Conference on Artificial Intelligence", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2001}, {"title": "The TSP phase transition", "author": ["I. Gent", "T. Walsh"], "venue": "Artificial Intelligence 88", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1996}, {"title": "Threshold phenomena in random graph colouring and satisfiability", "author": ["D. Achlioptas"], "venue": "PhD thesis, Department of Computer Science, University of Toronto", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1999}, {"title": "From P to NP: COL, XOR, NAE, 1-in-k, and Horn SAT", "author": ["T. Walsh"], "venue": "Proceedings of the 17th National Conference on AI, Association for Advancement of Artificial Intelligence", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2002}, {"title": "Paradox of voting under an urn model: the effect of homogeneity", "author": ["S. Berg"], "venue": "Public Choice 47", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1985}, {"title": "Phase transitions from real computational problems", "author": ["I. Gent", "T. Walsh"], "venue": "Proceedings of the 8th International Symposium on Artificial Intelligence.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1995}, {"title": "Morphing: Combining structure and randomness", "author": ["I. Gent", "H. Hoos", "P. Prosser", "T. Walsh"], "venue": "Proceedings of the 16th National Conference on AI, Association for Advancement of Artificial Intelligence", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1999}, {"title": "An actual application of collective choice theory to the selection of trajectories for the mariner jupiter/saturn 1977 project", "author": ["J. Dyer", "R. Miles"], "venue": "Operations Research 24(2)", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1976}, {"title": "An approach to empirical studies of voting paradoxes: An update and extension", "author": ["J. Dobra"], "venue": "Public Choice 41", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1983}, {"title": "Average-case tractability of manipulation in voting via the fraction of manipulators", "author": ["A.D. Procaccia", "J.S. Rosenschein"], "venue": "Proceedings of 6th Intl. Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS-07).", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2007}, {"title": "Complexity of unweighted coalitional manipulation under some common voting rules", "author": ["L. Xia", "M. Zuckerman", "A. Procaccia", "V. Conitzer", "J. Rosenschein"], "venue": "Proceedings of 21st IJCAI, International Joint Conference on Artificial Intelligence", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}], "referenceMentions": [{"referenceID": 0, "context": "Fortunately, it is often computationally difficult to find a successful manipulation [1].", "startOffset": 85, "endOffset": 88}, {"referenceID": 1, "context": "For example, Bartholdi and Orlin proved that the Single Transferable Vote (STV) rule is NP-hard to manipulate [2].", "startOffset": 110, "endOffset": 113}, {"referenceID": 2, "context": "Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7].", "startOffset": 107, "endOffset": 118}, {"referenceID": 3, "context": "Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7].", "startOffset": 107, "endOffset": 118}, {"referenceID": 4, "context": "Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7].", "startOffset": 107, "endOffset": 118}, {"referenceID": 5, "context": "Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7].", "startOffset": 107, "endOffset": 118}, {"referenceID": 6, "context": "Indeed, a number of recent theoretical results suggest that manipulation can often be computationally easy [3,4,5,6,7].", "startOffset": 107, "endOffset": 118}, {"referenceID": 7, "context": "Most recently, Walsh has suggested that empirical studies might provide insights into the computational complexity of manipulation that can complement such theoretical results [8].", "startOffset": 176, "endOffset": 179}, {"referenceID": 1, "context": "For example, it is NP-hard to manipulate by a single voter if the number of candidates is unbounded and votes are unweighted [2], or by a coalition of voters if there are 3 or more candidates and votes are weighted (or votes are unweighted but there is uncertainty about the votes) [9].", "startOffset": 125, "endOffset": 128}, {"referenceID": 8, "context": "For example, it is NP-hard to manipulate by a single voter if the number of candidates is unbounded and votes are unweighted [2], or by a coalition of voters if there are 3 or more candidates and votes are weighted (or votes are unweighted but there is uncertainty about the votes) [9].", "startOffset": 282, "endOffset": 285}, {"referenceID": 9, "context": "Coleman and Teague give an enumerative method for a coalition of k unweighted voters to compute a manipulation of the STV rule which runs in O(m!(n+mk)) time where n is the number of voters and m is the number of candidates [10].", "startOffset": 224, "endOffset": 228}, {"referenceID": 10, "context": "62) time [11].", "startOffset": 9, "endOffset": 13}, {"referenceID": 11, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 34, "endOffset": 38}, {"referenceID": 12, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 70, "endOffset": 77}, {"referenceID": 13, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 70, "endOffset": 77}, {"referenceID": 14, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 103, "endOffset": 110}, {"referenceID": 15, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 103, "endOffset": 110}, {"referenceID": 16, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 132, "endOffset": 139}, {"referenceID": 17, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 132, "endOffset": 139}, {"referenceID": 18, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 157, "endOffset": 164}, {"referenceID": 19, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 157, "endOffset": 164}, {"referenceID": 20, "context": "Unlike phase transition behaviour [12] in domains like satisfiability [13,14], constraint satisfaction [15,16], number partitioning [17,18], graph colouring [19,20] and the traveling salesperson problem [21], the probability curve does not appear to sharpen to a step function around a fixed point.", "startOffset": 203, "endOffset": 207}, {"referenceID": 21, "context": "The probability curve resembles the smooth phase transitions seen in polynomial problems like 2-coloring [22] and 1in-2 satisfiability [23].", "startOffset": 105, "endOffset": 109}, {"referenceID": 22, "context": "The probability curve resembles the smooth phase transitions seen in polynomial problems like 2-coloring [22] and 1in-2 satisfiability [23].", "startOffset": 135, "endOffset": 139}, {"referenceID": 23, "context": "To study the impact of more correlation between votes, we considered random votes drawn from the Polya Eggenberger urn model [24].", "startOffset": 125, "endOffset": 129}, {"referenceID": 24, "context": "We therefore sampled some real voting records [25,26].", "startOffset": 46, "endOffset": 53}, {"referenceID": 25, "context": "We therefore sampled some real voting records [25,26].", "startOffset": 46, "endOffset": 53}, {"referenceID": 26, "context": "teams of scientists to select one of 32 different trajectories for NASA\u2019s Mariner spacecraft [27].", "startOffset": 93, "endOffset": 97}, {"referenceID": 27, "context": "In our second experiment, we used votes from a faculty hiring committee at the University of California at Irvine [28].", "startOffset": 114, "endOffset": 118}, {"referenceID": 9, "context": "Coleman and Teague proposed algorithms to compute a manipulation for the STV rule [10].", "startOffset": 82, "endOffset": 86}, {"referenceID": 7, "context": "Walsh empirically studied the cost of manipulating the veto rule by a coalition of agents whose votes were weighted [8].", "startOffset": 116, "endOffset": 119}, {"referenceID": 4, "context": "For instance, Xia and Conitzer have shown that for a large class of voting rules including STV, as the number of agents grows, either the probability that a coalition can manipulate the result is very small (as the coalition is too small), or the probability that they can easily manipulate the result to make any alternative win is very large [5].", "startOffset": 344, "endOffset": 347}, {"referenceID": 28, "context": "As a second example, Procaccia and Rosenschein proved that for most scoring rules and a wide variety of distributions over votes, when the size of the coalition is o( \u221a n), the probability that they can change the result tends to 0, and when it is \u03c9( \u221a n), the probability that they can manipulate the result tends to 1 [29].", "startOffset": 320, "endOffset": 324}, {"referenceID": 3, "context": "They also gave a simple greedy procedure that will find a manipulation of a scoring rule in polynomial time with a probability of failure that is an inverse polynomial in n [4].", "startOffset": 173, "endOffset": 176}, {"referenceID": 5, "context": "then there exists an agent for whom a random manipulation succeeds with probability \u03a9( 1 n ) [6].", "startOffset": 93, "endOffset": 96}, {"referenceID": 6, "context": "Starting from different assumptions, Xia and Conitzer showed that a random manipulation would succeed with probability \u03a9( 1 n ) for 3 or more candidates for STV, for 4 or more candidates for any scoring rule and for 5 or more candidates for Copeland [7].", "startOffset": 250, "endOffset": 253}, {"referenceID": 29, "context": "These two rules have only recently been shown to be NP-hard to manipulate, and are members of the small set of voting rules which are NP-hard to manipulate without weights or uncertainty [30].", "startOffset": 187, "endOffset": 191}], "year": 2009, "abstractText": "For many voting rules, it is NP-hard to compute a successful manipulation. However, NP-hardness only bounds the worst-case complexity. Recent theoretical results suggest that manipulation may often be easy in practice. We study empirically the cost of manipulating the single transferable vote (STV) rule. This was one of the first rules shown to be NP-hard to manipulate. It also appears to be one of the harder rules to manipulate since it involves multiple rounds and since, unlike many other rules, it is NP-hard for a single agent to manipulate without weights on the votes or uncertainty about how the other agents have voted. In almost every election in our experiments, it was easy to compute how a single agent could manipulate the election or to prove that manipulation by a single agent was impossible. It remains an interesting open question if manipulation by a coalition of agents is hard to compute in practice.", "creator": "LaTeX with hyperref package"}}}