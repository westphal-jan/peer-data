{"id": "1102.2670", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Feb-2011", "title": "Online Least Squares Estimation with Self-Normalized Processes: An Application to Bandit Problems", "abstract": "The analysis of the online estimation of smallest squares is at the heart of many stochastic sequential decision problems. We use tools from the self-normalized processes to provide a simple and self-contained proof of the tail limit of a vector-weighted martyrdom. We use the tail limit to construct a new, narrower confidence set for estimating the smallest squares.", "histories": [["v1", "Mon, 14 Feb 2011 04:06:31 GMT  (22kb)", "http://arxiv.org/abs/1102.2670v1", "Submitted to the 24th Annual Conference on Learning Theory (COLT 2011)"]], "COMMENTS": "Submitted to the 24th Annual Conference on Learning Theory (COLT 2011)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yasin abbasi-yadkori", "david pal", "csaba szepesvari"], "accepted": false, "id": "1102.2670"}, "pdf": {"name": "1102.2670.pdf", "metadata": {"source": "CRF", "title": "Online Least Squares Estimation with Self-Normalized Processes: An Application to Bandit Problems\u2217", "authors": ["Yasin Abbasi-Yadkori", "Csaba Szepesv\u00e1ri"], "emails": ["abbasiya@cs.ualberta.ca", "dpal@cs.ualberta.ca", "szepesva@cs.ualberta.ca"], "sections": [{"heading": null, "text": "ar X\niv :1\n10 2.\n26 70\nv1 [\ncs .A\nI] 1\n4 Fe\nb 20\n11\nWe apply the confidence sets to several online decision problems, such as the multi-armed and the linearly parametrized bandit problems. The confidence sets are potentially applicable to other problems such as sleeping bandits, generalized linear bandits, and other linear control problems.\nWe improve the regret bound of the Upper Confidence Bound (UCB) algorithm of Auer et al. (2002) and show that its regret is with high-probability a problem dependent constant. In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved."}, {"heading": "1 Introduction", "text": "The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pen\u0303a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Pen\u0303a et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem.\nThe bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem. We show that this leads to improved performance of these algorithms. Our hope is that the new confidence sets can be used to improve the performance of other similar linear decision problems.\nThe multi-armed bandit problem, introduced by Robbins (1952), is a game between the learner and the environment. At each time step, the learner chooses one of K actions and receives a reward which is generated independently at random from a fixed distribution associated with the chosen arm. The objective of the learner is to maximize his total reward. The performance of the learner is evaluated by the regret, which is defined as the difference between his total reward and the total\n\u2217Submitted to the 24th Annual Conference on Learning Theory (COLT 2011)\nreward of the best action. Lai and Robbins (1985) prove a ( \u2211 i6=i\u2217 1/D(pj, pi\u2217) \u2212 o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi\u2217 and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence.\nAuer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret. He used Hoeffding\u2019s inequality to construct confidence intervals and obtained a O((K log T )/\u2206) bound on the expected regret, where \u2206 is the difference between the expected rewards of the best and the second best action. We modify UCB so that it uses our new confidence sets and we show a stronger result. Namely, we show that with probability 1 \u2212 \u03b4, the regret of the modified algorithm is O(K log(1/\u03b4)/\u2206). Seemingly, this result contradicts the lower bound of Lai and Robbins (1985), however our algorithm depends on \u03b4 which it receives as an input. The expected regret of the modified algorithm with \u03b4 = 1/T matches the regret of the original algorithm.\nIn the linear bandit problem, the learner chooses repeatedly actions from a fixed subset of Rd and receives a random reward, expectation of which is a linear function of the action. Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) \u221a\nT log(T/\u03b4)) with probability at most 1 \u2212 \u03b4. We modify their algorithm so that it uses our new confidence sets and we show that its regret is at most O(d log(T ) \u221a T + \u221a\ndT log(T/\u03b4)). Additionally, constants in our bound are smaller, and our bound holds for all T \u2265 1, as opposed the previous one which holds only for sufficiently large T . Dani et al. (2008) prove also a problem dependent regret bound. Namely, they show that the regret of their algorithm is O(d 2\n\u2206 log 2 T log(T/\u03b4)) where \u2206\nis the \u201cgap\u201d as defined in (Dani et al., 2008). For our modified algorithm we prove an improved O( log(1/\u03b4)\u2206 (logT + d log logT ) 2) bound."}, {"heading": "1.1 Notation", "text": "We use \u2016 \u00b7 \u2016 to denote the 2-norm. For a positive definite matrix A \u2208 Rd\u00d7d, the weighted 2-norm is defined by \u2016x\u20162A = x\u22a4Ax, where x \u2208 Rd. The inner product is denoted by \u3008\u00b7, \u00b7\u3009 and the weighted inner-product x\u22a4Ay = \u3008x, y\u3009A. We use \u03bbmin(A) to denote the minimum eigenvalue of the positive definite matrix A. We use A \u227b 0 to denote that A is positive definite, while we use A 0 to denote that it is positive semidefinite. The same notation is used to denote the Loewner partial order of matrices. We shall use ei to denote the i th unit vector, i.e., for all j 6= i, eij = 0 and eii = 1."}, {"heading": "2 Vector-Valued Martingale Tail Inequalities", "text": "Let (Fk; k \u2265 0) be a filtration, (mk; k \u2265 0) be an Rd-valued stochastic process adapted to (Fk), (\u03b7k; k \u2265 1) be a real-valued martingale difference process adapted to (Fk). Assume that \u03b7k is conditionally sub-Gaussian in the sense that there exists some R > 0 such that for any \u03b3 \u2208 R, k \u2265 1,\nE[exp(\u03b3\u03b7k) | Fk\u22121] \u2264 exp ( \u03b32R2\n2\n)\na.s. (1)\nConsider the martingale\nSt =\nt \u2211\nk=1\n\u03b7kmk\u22121 (2)\nand the matrix-valued processes\nVt =\nt \u2211\nk=1\nmk\u22121m \u22a4 k\u22121, V t = V + Vt, t \u2265 0, (3)\nwhere V is an F0-measurable, positive definite matrix. In particular, assume that with probability one, the eigenvalues of V are larger than \u03bb0 > 0 and that \u2016mk\u2016 \u2264 L holds a.s. for any k \u2265 0.\nThe following standard inequality plays a crucial role in the following developments:\nLemma 1. Consider (\u03b7t), (mt) as defined above and let \u03c4 be a stopping time with respect to the filtration (Ft). Let \u03bb \u2208 Rd be arbitrary and consider\nP\u03bbt = exp\n(\nt \u2211\nk=1\n[\n\u03b7k\u3008\u03bb,mk\u22121\u3009 R \u2212 1 2 \u3008\u03bb,mk\u22121\u30092\n]\n)\n.\nThen P\u03c4 is almost surely well-defined and\nE [ P\u03bb\u03c4 ] \u2264 1.\nProof. The proof is standard (and is given only for the sake of completeness). We claim that Pt = P \u03bb t is a supermartingale. Let\nDk = exp\n( \u03b7k\u3008\u03bb,mk\u22121\u3009 R \u2212 1 2 \u3008\u03bb,mk\u22121\u30092 ) .\nObserve that by (1), we have E [Dk |Fk\u22121] \u2264 1. Clearly, Dk is Fk-adapted, as is Pk. Further, E [Pt|Ft\u22121] = E [D1 \u00b7 \u00b7 \u00b7Dt\u22121Dt |Ft\u22121] = D1 \u00b7 \u00b7 \u00b7Dt\u22121 E [Dt |Ft\u22121] \u2264 Pt\u22121,\nshowing that (Pt) is indeed a supermartingale. Now, this immediately leads to the desired result when \u03c4 = t for some deterministic time t. This is based on the fact that the mean of any supermartingale can be bounded by the mean of its first element. In the case of (Pt), for example, we have E [Pt] = E [E [Pt|Ft\u22121]] \u2264 E [Pt\u22121] \u2264 . . . \u2264 E [P0] = E [D0] = 1.\nNow, in order to consider the general case, let St = P\u03c4\u2227t. 1 It is well known that (St) is still a supermartingale with E [St] \u2264 E [S0] = E [P0] = 1. Further, since Pt was nonnegative, so is St. Hence, by the convergence theorem for nonnegative supermartingales, almost surely, limt\u2192\u221e St exists, i.e., P\u03c4 is almost surely well-defined. Further, E [P\u03c4 ] = E [lim inft\u2192\u221e St] \u2264 lim inft\u2192\u221e E [St] \u2264 1 by Fatou\u2019s Lemma.\nBefore stating our main results, we give some recent results, which can essentially be extracted from the paper by Rusmevichientong and Tsitsiklis (2010).\nTheorem 2. Consider the processes (St), (V t) as defined above and let\n\u03ba = \u221a 3 + 2 log((L2 + trace(V ))/\u03bb0). (4)\nThen, for any 0 < \u03b4 < 1, t \u2265 2, with probability at least 1\u2212 \u03b4,\n\u2016St\u2016V \u22121 t\n\u2264 2 \u03ba2R \u221a log t \u221a d log(t) + log(1/\u03b4) . (5)\nWe now show how to strengthen the previous result using the method of mixtures, originally used by Robbins and Siegmund (1970) to evaluate boundary crossing probabilities for Brownian motion.\nTheorem 3 (Self-normalized bound for vector-valued martingales). Let (\u03b7t), (mt), (St), (V t), and (Ft) be as before and let \u03c4 be a stopping time with respect to the filtration (Ft). Assume that V is deterministic. Then, for any 0 < \u03b4 < 1, with probability 1\u2212 \u03b4,\n\u2016S\u03c4\u20162V \u22121 \u03c4\n\u2264 2R2 log ( det(V \u03c4 ) 1/2 det(V ) \u22121/2\n\u03b4\n)\n. (6)\nProof. Without loss of generality, assume that R = 1 (by appropriately scaling St, this can always be achieved). Let\nMt(\u03bb) = exp (\n\u3008\u03bb, St\u3009 \u2212 12 \u2016\u03bb\u2016 2 Vt\n)\n.\nNotice that by Lemma 1, the mean of M\u03c4 (\u03bb) is not larger than one. Let \u039b be a Gaussian random variable which is independent of all the other random variables and whose covariance is V \u22121. Define Mt = E [Mt(\u039b)|F\u221e] . Clearly, we still have E [M\u03c4 ] = E [E [M\u03c4 (\u039b) |\u039b ] ] \u2264 1. Let us calculate Mt: Let f denote the density of \u039b and for a positive definite matrix P let c(P ) = \u221a (2\u03c0)d/ det(P ) = \u222b\nexp(\u2212 12x\u22a4Px)dx. Then,\nMt =\n\u222b\nRd\nexp (\n\u3008\u03bb, St\u3009 \u2212 12 \u2016\u03bb\u2016 2 Vt\n)\nf(\u03bb) d\u03bb\n=\n\u222b\nRd\nexp (\n\u2212 12 \u2225 \u2225\u03bb\u2212 V \u22121t St \u2225 \u2225\n2 Vt + 12 \u2016St\u2016 2 V \u22121 t\n)\nf(\u03bb) d\u03bb\n= 1\nc(V ) exp\n(\n1 2 \u2016St\u2016 2 V \u22121 t\n)\n\u222b\nRd\nexp ( \u2212 12 { \u2225 \u2225\u03bb\u2212 V \u22121t St \u2225 \u2225 2 Vt + \u2016\u03bb\u20162V }) d\u03bb.\n1\u03c4 \u2227 t is a shorthand notation for min(\u03c4, t).\nElementary calculation shows that if P 0, Q \u227b 0,\n\u2016x\u2212 a\u20162P + \u2016x\u2016 2 Q =\n\u2225 \u2225x\u2212 (P +Q)\u22121Pa \u2225 \u2225\n2 P+Q + \u2016a\u20162P \u2212 \u2016Pa\u2016 2 (P+Q)\u22121 .\nTherefore, \u2225\n\u2225\u03bb\u2212 V \u22121t St \u2225 \u2225\n2 Vt + \u2016\u03bb\u20162V = \u2225 \u2225\u03bb\u2212 (V + Vt)\u22121St \u2225 \u2225 2 V+Vt + \u2225 \u2225V \u22121t St \u2225 \u2225 2 Vt \u2212 \u2016St\u20162(V +Vt)\u22121\n= \u2225 \u2225\u03bb\u2212 (V + Vt)\u22121St \u2225 \u2225\n2 V+Vt + \u2016St\u20162V \u22121 t \u2212 \u2016St\u20162(V +Vt)\u22121 ,\nwhich gives\nMt = 1\nc(V ) exp\n(\n1 2 \u2016St\u2016 2 (V +Vt)\u22121\n)\n\u222b\nRd\nexp (\n\u2212 12 \u2225 \u2225\u03bb\u2212 (V + Vt)\u22121St \u2225 \u2225\n2\nV+Vt\n)\nd\u03bb\n= c(V + Vt)\nc(V ) exp\n(\n1 2 \u2016St\u2016 2 (V +Vt)\u22121\n)\n=\n(\ndet(V )\ndet(V + Vt)\n)1/2\nexp (\n1 2 \u2016St\u2016 2 (V +Vt)\u22121\n)\n.\nNow, from E [M\u03c4 ] \u2264 1, we obtain\nP\n( \u2016S\u03c4\u20162(V+V\u03c4 )\u22121 > 2 log ( det(V + V\u03c4 ) 1/2 det(V )1/2 1 \u03b4 )) = P\n\n  \nexp (\n1 2 \u2016S\u03c4\u2016 2 (V+V\u03c4 )\u22121\n)\n\u03b4\u22121 ( det(V + V\u03c4 ) /\ndet(V )\n) 1 2\n> 1\n\n  \n\u2264 E\n\n  \nexp (\n1 2 \u2016S\u03c4\u2016 2 (V +V\u03c4 )\u22121\n)\n\u03b4\u22121 ( det(V + V\u03c4 ) /\ndet(V )\n) 1 2\n\n  \n= E [M\u03c4 ] \u03b4 \u2264 \u03b4, thus finishing the proof.\nCorollary 1 (Uniform Bound). Under the same assumptions as in the previous theorem, for any 0 < \u03b4 < 1, with probability 1\u2212 \u03b4,\n\u2200t \u2265 0, \u2016St\u20162V \u22121 t\n\u2264 2R2 log ( det(V t) 1/2 det(V ) \u22121/2\n\u03b4\n)\n. (7)\nProof. We will use a stopping time construction, which goes back at least to Freedman (1975). Define the bad event\nBt(\u03b4) =\n{\n\u03c9 \u2208 \u2126 : \u2016St\u20162V\u0304 \u22121 t > 2R2 log\n(\ndet(V\u0304t) 1/2 det(V )\u22121/2\n\u03b4\n)}\n(8)\nWe are interested in bounding the probability that \u22c3 t\u22650 Bt(\u03b4) happens. Define \u03c4(\u03c9) = min{t \u2265 0 : \u03c9 \u2208 Bt(\u03b4)}, with the convention that min \u2205 = \u221e. Then, \u03c4 is a stopping time. Further,\n\u22c3\nt\u22650\nBt(\u03b4) = {\u03c9 : \u03c4(\u03c9) < \u221e}.\nThus, by Theorem 3\nP\n\n\n\u22c3\nt\u22650\nBt(\u03b4)\n\n = P (\u03c4 < \u221e)\n= P\n(\n\u2016S\u03c4\u20162V\u0304 \u22121\u03c4 > 2R 2 log\n(\ndet(V\u0304\u03c4 ) 1/2 det(V )\u22121/2\n\u03b4\n) , \u03c4 < \u221e )\n\u2264 P (\n\u2016S\u03c4\u20162V\u0304 \u22121\u03c4 > 2R 2 log\n(\ndet(V\u0304\u03c4 ) 1/2 det(V )\u22121/2\n\u03b4\n))\n\u2264 \u03b4 .\nLet us now turn our attention to understanding the determinant term on the right-hand side of (6).\nLemma 4. We have that\nlog det(V t)\ndetV \u2264\nt \u2211\nk=1\n\u2016mk\u22121\u20162V \u22121 k\u22121 .\nFurther, we have that\nt \u2211\nk=1\n(\n\u2016mk\u22121\u20162V \u22121 k\u22121\n\u2227 1 ) \u2264 2(log det(V t)\u2212 log det V ) \u2264 2(d log((trace(V ) + tL2)/d)\u2212 log detV ).\nFinally, if \u03bb0 \u2265 max(1, L2) then t\n\u2211\nk=1\n\u2016mk\u22121\u20162V \u22121 k\u22121 \u2264 2 log det(V t) det(V ) .\nProof. Elementary algebra gives\ndet(V t) = det(V t\u22121 +mt\u22121m \u22a4 t\u22121) = det(V t\u22121) det(I + V\n\u22121/2 t\u22121 mt\u22121(V \u22121/2 t\u22121 mt\u22121) \u22a4)\n= det(V t\u22121) (1 + \u2016mt\u22121\u20162V \u22121 t\u22121 ) = det(V )\nt \u220f\nk=1\n(\n1 + \u2016mk\u22121\u20162V \u22121 k\u22121\n)\n, (9)\nwhere we used that all the eigenvalues of a matrix of the form I+xx\u22a4 are one except one eigenvalue, which is 1 + \u2016x\u20162 and which corresponds to the eigenvector x. Using log(1 + t) \u2264 t, we can bound log det(V t) by\nlog det(V t) \u2264 log det V + t \u2211\nk=1\n\u2016mk\u22121\u20162V \u22121 k\u22121 .\nCombining x \u2264 2 log(1 + x), which holds when x \u2208 [0, 1], and (9), we get t\n\u2211\nk=1\n(\n\u2016mk\u22121\u20162V \u22121 k\u22121\n\u2227 1 ) \u2264 2 t \u2211\nk=1\nlog (\n1 + \u2016mk\u22121\u20162V \u22121 k\u22121\n)\n= 2(log det(V t)\u2212 log detV ).\nThe trace of V t is bounded by trace(V ) + tL 2, assuming \u2016mk\u2016 \u2264 L. Hence, det(V t) = \u220fd i=1 \u03bbi \u2264 (\ntrace(V )+tL2\nd\n)d\nand therefore,\nlog det(V t) \u2264 d log((trace(V ) + tL2)/d),\nfinishing the proof of the second inequality. The sum \u2211t k=1 \u2016mk\u22121\u2016 2 V \u22121\nk\u22121\ncan itself be upper bounded\nas a function of log det(V t) provided that \u03bb0 is large enough. Notice \u2016mk\u22121\u20162V \u22121 k\u22121 \u2264 \u03bb\u22121min(V k\u22121) \u2016mk\u22121\u2016 2 \u2264 L2/\u03bb0. Hence, we get that if \u03bb0 \u2265 max(1, L2),\nlog det(V t)\ndet V \u2264\nt \u2211\nk=1\n\u2016mk\u22121\u20162V \u22121 k\u22121 \u2264 2 log det(V t) det(V ) .\nMost of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9\u2013B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on \u2211t\nk=1 \u2016mk\u22121\u2016 2 V \u22121\nk\u22121\n, with an essentially\nidentical argument. Alternatively, one can use the bounding technique of Auer (2003) (see the proof of Lemma 13 there on pages 412\u2013413) to derive a bound like \u2211t\nk=1 \u2016mk\u22121\u2016 2 V \u22121\nk\u22121 \u2264 Cd log t for a suitable chosen constant C > 0.\nRemark 5. By combining Corollary 1 and Lemma 4, we get a simple worst case bound that holds with probability 1\u2212 \u03b4:\n\u2200t \u2265 0, \u2016St\u20162V \u22121 t\n\u2264 dR2 log ( trace(V ) + tL2\nd \u03b4\n)\n. (10)\nStill, the new bound is considerably better than the previous one given by Theorem 2. Note that the log(t) factor cannot be removed, as shown by Problem 3, page 203 in the book by de la Pen\u0303a et al. (2009)."}, {"heading": "3 Optional Skipping", "text": "Consider the case when d = 1, mk = \u03b5k \u2208 {0, 1}, i.e., the case of an optional skipping process. Then, using again V = I = 1, V t = 1 + \u2211t k=1 \u03b5k\u22121 def = 1 +Nt and thus the expression studied becomes\n\u2016St\u2016V \u22121 t\n= |\u2211tk=1 \u03b5k\u22121\u03b7k|\u221a\n1 +Nt .\nWe also have\nlog det(V t) =\nt \u2211\nk=1\nlog\n(\n1 + \u03b5k\u22121\n1 +Nk\n) \u2264 t \u2211\nk=1\n\u03b5k\u22121 1 +Nk =\nNt+1 \u2211\nk=1\n1 k \u2264 1+\n\u222b Nt+1\n1\nx\u22121 dx = 1+ log(1+Nt).\nThus, we get, with probability 1\u2212 \u03b4\n\u2200s \u2265 0, \u2223 \u2223 \u2223\n\u2223 \u2223\ns \u2211\nk=1\n\u03b5k\u22121\u03b7k\n\u2223 \u2223 \u2223 \u2223 \u2223 \u2264 \u221a (1 +Ns) ( 1 + 2 log ( (1 +Ns) 1/2 \u03b4 )) . (11)\nIf we apply Doob\u2019s optional skipping and Hoeffding-Azuma, with a union bound (see, e.g., the paper of Bubeck et al. (2008)), we would get, for any 0 < \u03b4 < 1, t \u2265 2, with probability 1\u2212 \u03b4,\n\u2200s \u2208 {0, . . . , t}, \u2223 \u2223 \u2223\n\u2223 \u2223\ns \u2211\nk=1\n\u03b5k\u22121\u03b7k\n\u2223 \u2223 \u2223 \u2223 \u2223 \u2264 \u221a 2Ns log ( 2t \u03b4 ) . (12)\nThe major difference between these bounds is that (12) depends explicitly on t, while (11) does not. This has the positive effect that one need not recompute the bound if Nt does not grow, which helps e.g. in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm. Also, the coefficient of the leading term in (11) under the square root is 1, whereas in (12) it is 2.\nInstead of a union bound, it is possible to use a \u201cpeeling device\u201d to replace the conservative log t factor in the above bound by essentially log log t. This is done e.g. in Garivier and Moulines (2008) in their Theorem 22.2 From their derivations, the following one sided, uniform bound can be extracted (see Remark 24, page 19): For any 0 < \u03b4 < 1, t \u2265 2, with probability 1\u2212 \u03b4,\n\u2200s \u2208 {0, . . . , t}, s \u2211\nk=1\n\u03b5k\u22121\u03b7k \u2264 \u221a\n4Ns 1.99 log\n(\n6 log t\n\u03b4\n)\n. (13)\nAs noted by Garivier and Moulines (2008), due to the law of iterated logarithm, the scaling of the right-hand side as a function of t cannot be improved in the worst-case. However, this leaves open the possibility of deriving a maximal inequality which depends on t only through Nt."}, {"heading": "4 The Multi-Armed Bandit Problem", "text": "Now we turn our attention to the multi-armed bandit problem. Let \u00b5i denote the expected reward of action i and \u2206i = \u00b5\u2217 \u2212 \u00b5i, where \u00b5\u2217 is the expected reward of the optimal action. We assume that if we choose action It in round t, we obtain reward \u00b5It + \u03b7t. Let Ni,t denote the number of times that we have played action i up to time t, and X\u0304i,t denote the average of the rewards received by action i up to time t. From (11) with \u03b4/K instead of \u03b4 and a union bound over the actions, we have the following confidence intervals that hold with probability at least 1\u2212 \u03b4:\n\u2200i \u2208 {1, . . . ,K}, \u2200s \u2208 {1, 2, . . .}, \u2223 \u2223X\u0304i,s \u2212 \u00b5i \u2223 \u2223 \u2264 ci,s , (14) 2They give their theorem as ratios, which they should not, since their inequality then fails to hold for\nNt = 0. However, this is easy to remedy by reformulating their result as we do it here.\nwhere\nci,s =\n\u221a\n1 +Ni,s N2i,s\n(\n1 + 2 log\n(\nK(1 +Ni,s) 1/2\n\u03b4\n))\n.\nModify the UCB Algorithm of Auer et al. (2002) to use the confidence intervals (14) and change the action selection rule accordingly. Hence, at time t, we choose the action\nIt = argmax i X\u0304i,t + ci,t. (15)\nWe call this algorithm UCB(\u03b4).\nTheorem 6. With probability at least 1\u2212\u03b4, the total regret of the UCB(\u03b4) algorithm with the action selection rule (15) is constant and is bounded by\nR(T ) \u2264 \u2211\ni:\u2206i>0\n(\n3\u2206i + 16\n\u2206i log\n2K\n\u2206i\u03b4\n)\n.\nwhere i\u2217 is the index of the optimal action.\nProof. Suppose the confidence intervals do not fail. If we play action i, the upper estimate of the action is above \u00b5\u2217. Hence,\nci,s \u2265 \u2206i 2 .\nSubstituting ci,s and squaring gives\nN2i,s \u2212 1 Ni,s + 1 \u2264 N2i,s Ni,s + 1 \u2264 4 \u22062i ( 1 + 2 log K(1 +Ni,s) 1/2 \u03b4 ) .\nBy using Lemma 8 of Antos et al. (2010), we get that\nNi,s \u2264 3 + 16\n\u22062i log\n2K \u2206i\u03b4 .\nThus, using R(T ) = \u2211 i6=i\u2217 \u2206iNi,T , we get that with probability at least 1 \u2212 \u03b4, the total regret is bounded by\nR(T ) \u2264 \u2211\ni:\u2206i>0\n(\n3\u2206i + 16\n\u2206i log\n2K\n\u2206i\u03b4\n)\n.\nRemark 7. Lai and Robbins (1985) prove that for any suboptimal arm j,\nE [Ni,t] \u2265 log t\nD(pj , p\u2217) ,\nwhere, p\u2217 and pj are the reward density of the optimal arm and arm j respectively, and D is the KD-divergence. This lower bound does not contradict Theorem 6, as Theorem 6 only states a high probability upper bound for the regret. Note that UCB(\u03b4) takes delta as its input. Because with probability \u03b4, the regret in time t can be t, on expectation, the algorithm might have a regret of t\u03b4. Now if we select \u03b4 = 1/t, then we get O(log t) upper bound on the expected regret."}, {"heading": "5 Application to Least Squares Estimation and Linear Bandit Problem", "text": "In this section we first apply Theorem 3 to derive confidence intervals for least-squares estimation, where the covariate process is an arbitrary process and then use these confidence intervals to improve the regret bound of Dani et al. (2008) for the linear bandit problem. In particular, our assumption on the data is as follows:\nAssumption A1 Let (Fi) be a filtration, (x1, y1), . . ., (xt, yt) be a sequence of random variables over Rd \u00d7 R such that xi is Fi-measurable, and yi is Fi+1-measurable (i = 1, 2, . . .). Assume that there exists \u03b8\u2217 \u2208 Rd such that E [yi|Fi] = x\u22a4i \u03b8\u2217, i.e., \u03b5i = yi \u2212 x\u22a4i \u03b8\u2217 is a martingale difference sequence (E [\u03b5i|Fi] = 0, i = 1, 2, . . .) and that \u03b5i is sub-Gaussian: There exists R > 0 such that for any \u03b3 \u2208 R,\nE [exp(\u03b3\u03b5i)|Fi\u22121] \u2264 exp(\u03b32R2/2).\nWe shall call the random variables xi covariates and the random variables yi the responses. Note that the assumption allows any sequential generation of the covariates.\nLet \u03b8\u0302t be the \u2113 2-regularized least-squares estimate of \u03b8\u2217 with regularization parameter \u03bb > 0:\n\u03b8\u0302t = (X \u22a4X + \u03bbI)\u22121X\u22a4Y, \u03b8\u03020 = 0, (16)\nwhere X is the matrix whose rows are x\u22a41 , . . . , x \u22a4 t\u22121 and Y = (y1, . . . , yt\u22121) \u22a4. We further let \u03b5 = (\u03b51, . . . , \u03b5t\u22121) \u22a4.\nWe are interested in deriving a confidence bound on the error of predicting the mean response\nx\u22a4\u03b8\u2217 at an arbitrarily chosen random covariate x using the least-squares predictor x \u22a4\u03b8\u0302t. Using\n\u03b8\u0302t = (X \u22a4X + \u03bbI)\u22121X\u22a4(X\u03b8\u2217 + \u03b5)\n= (X\u22a4X + \u03bbI)\u22121X\u22a4\u03b5+ (X\u22a4X + \u03bbI)\u22121(X\u22a4X + \u03bbI)\u03b8\u2217 \u2212 \u03bb(X\u22a4X + \u03bbI)\u22121\u03b8\u2217 = (X\u22a4X + \u03bbI)\u22121X\u22a4\u03b5+ \u03b8\u2217 \u2212 \u03bb(X\u22a4X + \u03bbI)\u22121\u03b8\u2217 ,\nwe get\nx\u22a4\u03b8\u0302t \u2212 x\u22a4\u03b8\u2217 = x\u22a4(X\u22a4X + \u03bbI)\u22121X\u22a4\u03b5\u2212 \u03bbx\u22a4(X\u22a4X + \u03bbI)\u22121\u03b8\u2217 = \u3008x,X\u22a4\u03b5\u3009V \u22121\nt \u2212 \u03bb\u3008x, \u03b8\u2217\u3009V \u22121 t ,\nwhere Vt = X \u22a4X + \u03bbI. Note that Vt is positive definite (thanks to \u03bb > 0) and hence so is V \u22121 t , so the above inner product is well-defined. Using the Cauchy-Schwartz inequality, we get\n|x\u22a4\u03b8\u0302t \u2212 x\u22a4\u03b8\u2217| \u2264 \u2016x\u2016V \u22121 t\n(\n\u2225 \u2225X\u22a4\u03b5 \u2225 \u2225\nV \u22121 t + \u03bb \u2016\u03b8\u2217\u2016V \u22121 t\n)\n\u2264 \u2016x\u2016V \u22121 t\n(\n\u2225 \u2225X\u22a4\u03b5 \u2225 \u2225\nV \u22121 t\n+ \u03bb1/2 \u2016\u03b8\u2217\u2016 ) ,\nwhere we used that \u2016\u03b8\u2217\u20162V \u22121 t \u2264 1/\u03bbmin(Vt) \u2016\u03b8\u2217\u20162 \u2264 1/\u03bb \u2016\u03b8\u2217\u20162. Fix any 0 < \u03b4 < 1. By Corollary 1, with probability at least 1\u2212 \u03b4,\n\u2200t \u2265 1, \u2225 \u2225X\u22a4\u03b5 \u2225 \u2225\nV \u22121 t\n\u2264 R \u221a 2 log ( det(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n)\n.\nTherefore, on the event where this inequality holds, one also has\n|x\u22a4\u03b8\u0302t \u2212 x\u22a4\u03b8\u2217| \u2264 \u2016x\u2016V \u22121 t\n(\nR\n\u221a\n2 log\n(\ndet(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n) + \u03bb1/2 \u2016\u03b8\u2217\u2016 ) .\nSimilarly, we can derive a worst-case bound. The result is summarized in the following statement:\nTheorem 8. Let (x1, y1), . . . , (xt\u22121, yt\u22121), xi \u2208 Rd, yi \u2208 R satisfy the linear model Assumption A1 with some R > 0, \u03b8\u2217 \u2208 Rd and let (Ft) be the associated filtration. Assume that w.p.1 the covariates satisfy \u2016xi\u2016 \u2264 L, i = 1, . . . , n and \u2016\u03b8\u2217\u2016 \u2264 S. Consider the \u21132-regularized least-squares parameter estimate \u03b8\u0302n with regularization coefficient \u03bb > 0 (cf. (16)). Let x be an arbitary, R d-valued random variable. Let Vt = \u03bbI+ \u2211t\u22121 i=1 xix \u22a4 i be the regularized design matrix underlying the covariates. Then, for any 0 < \u03b4 < 1, with probability at least 1\u2212 \u03b4,\n\u2200t \u2265 1, |x\u22a4\u03b8\u0302t \u2212 x\u22a4\u03b8\u2217| \u2264 \u2016x\u2016V \u22121 t\n(\nR\n\u221a\n2 log\n(\ndet(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n)\n+ \u03bb1/2 S\n)\n. (17)\nSimilarly, with probability 1\u2212 \u03b4,\n\u2200t \u2265 1, |x\u22a4\u03b8\u0302t \u2212 x\u22a4\u03b8\u2217| \u2264 \u2016x\u2016V \u22121 t\n\nR\n\u221a \u221a \u221a \u221ad log (\n1 + tL\u03bb \u03b4\n)\n+ \u03bb1/2 S\n\n . (18)\nRemark 9. We see that \u03bb \u2192 \u221e increases the second term (the \u201cbias term\u201d) in the parenthesis of the estimate. In fact, \u03bb \u2192 \u221e for n fixed gives \u03bb1/2 \u2016x\u2016V \u22121\nt \u2192 const (as it should be). Decreasing \u03bb, on the other hand increases \u2016x\u2016V \u22121\nt\nand the log term, while it decreases the bias term \u03bb1/2S.\nFrom the above result, we immediately obtain confidence bounds for \u03b8\u2217:\nCorollary 10. Under the condition of Theorem 8, with probability at least 1\u2212 \u03b4,\n\u2200t \u2265 1, \u2225 \u2225 \u2225 \u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt \u2264 R\n\u221a\n2 log\n(\ndet(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n)\n+ \u03bb1/2 S.\nAlso, with probability at least 1\u2212 \u03b4,\n\u2200t \u2265 1, \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt \u2264 R\n\u221a \u221a \u221a \u221ad log (\n1 + tL\u03bb \u03b4\n)\n+ \u03bb1/2 S.\nProof. Plugging in x = Vt(\u03b8\u0302t \u2212 \u03b8\u2217) into (17), we get \u2225\n\u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225 2\nVt \u2264\n\u2225 \u2225 \u2225Vt(\u03b8\u0302t \u2212 \u03b8\u2217) \u2225 \u2225 \u2225\nV \u22121 t\n(\nR\n\u221a\n2 log\n(\ndet(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n)\n+ \u03bb1/2 S\n)\n. (19)\nNow, \u2225 \u2225 \u2225Vt(\u03b8\u0302t \u2212 \u03b8\u2217) \u2225 \u2225 \u2225 2\nV \u22121 t\n= \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225 2\nVt and therefore either\n\u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt = 0, in which case the con-\nclusion holds, or we can divide both sides of (19) by \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt to obtain the desired result.\nRemark 11. In fact, the theorem and the corollary are equivalent. To see this note that x\u22a4(\u03b8\u0302t\u2212\u03b8\u2217) = (\u03b8\u0302t \u2212 \u03b8\u2217)\u22a4V 1/2t V \u22121/2t x, thus\nsup x 6=0 |x\u22a4(\u03b8\u0302t \u2212 \u03b8\u2217)| \u2016x\u2016V \u22121\nt\n= \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt .\nRemark 12. The above bound could be compared with a similar bound of Dani et al. (2008) whose bound, under identical conditions, states that (with appropriate initialization) with probability 1\u2212\u03b4,\nfor all t large enough, \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt \u2264 Rmax\n{ \u221a\n128 d log(t) log\n(\nt2\n\u03b4\n)\n, 8\n3 log\n(\nt2\n\u03b4\n)\n}\n, (20)\nwhere large enough means that t satisfies 0 < \u03b4 < t2e\u22121/16. Denote by \u221a\n\u03b2t(\u03b4) the right-hand side in the above bound. The restriction on t comes from the fact that \u03b2t(\u03b4) \u2265 2d(1 + 2 log(t)) is needed in the proof of the last inequality of their Theorem 5.\nOn the other hand, Theorem 2 gives rise to the following result: For any fixed t \u2265 2, for any 0 < \u03b4 < 1, with probability at least 1\u2212 \u03b4,\n\u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt \u2264 2 \u03ba2R\n\u221a log t \u221a d log(t) + log(1/\u03b4) + \u03bb1/2S ,\nwhere \u03ba is as in Theorem 2. To get a uniform bound one can use a union bound with \u03b4t = \u03b4/t 2. Then \u2211\u221e\nt=2 \u03b4t = \u03b4( \u03c02 6 \u2212 1) \u2264 \u03b4. This thus gives that for any 0 < \u03b4 < 1, with probability at least 1\u2212 \u03b4,\nfor all t \u2265 2, \u2225 \u2225 \u2225\u03b8\u0302t \u2212 \u03b8\u2217 \u2225 \u2225 \u2225\nVt \u2264 2 \u03ba2R\n\u221a log t \u221a d log(t) + log(t2/\u03b4) + \u03bb1/2S ,\nThis looks tighter than (20), but is still lagging beyond the result of Corollary 10."}, {"heading": "5.1 The Linear Bandit Problem", "text": "We now turn our attention to the linear bandit problem. Assume the actions lie in D \u2282 Rd and for any x \u2208 D, \u2016x\u20162 \u2264 L. Assume the reward of taking action x \u2208 D has the form of\nht(x) = \u03b8 \u22a4 \u2217 x+ \u03b7t\nand assume \u2200x \u2208 D, \u03b8\u22a4\u2217 x \u2208 [\u22121, 1]. Define the regret by\nR(T ) =\nT \u2211\nt=1\n(\u03b8\u22a4\u2217 x\u2217 \u2212 \u03b8\u22a4\u2217 xt),\nwhere x\u2217 is the optimal action (x\u2217 = argmaxx\u2208D \u03b8 \u22a4 \u2217 x). Define the confidence set\nCt(\u03b4) = { \u03b8 : (\u03b8 \u2212 \u03b8\u0302t)\u22a4Vt(\u03b8 \u2212 \u03b8\u0302t) \u2264 \u03b2t(\u03b4) } , (21)\nwhere\n\u03b2t(\u03b4) =\n(\nR\n\u221a\n2 log\n(\ndet(Vt) 1/2 det(\u03bbI)\u22121/2\n\u03b4\n)\n+ \u03bb1/2 S\n)2\n.\nConsider the ConfidenceBall algorithm of Dani et al. (2008). We use the confidence intervals (21)\nand change the action selection rule accordingly. Hence, at time t, we define \u03b8\u0303t and xt by the following equation:\n(\u03b8\u0303t, xt) = argmax (\u03b8,x)\u2208Ct(\u03b4)\u00d7D\n\u03b8\u22a4x. (22)\nThe algorithm is shown in Table 1.\nTheorem 13. With probability at least 1 \u2212 \u03b4, the regret of the Linear Bandit Algorithm shown in Table 1 satisfies\n\u2200T \u2265 1, R(T ) \u2264 4 \u221a Td log(\u03bb+ TL/d) ( \u03bb1/2S +R \u221a 2 log 1/\u03b4 + d log(1 + TL/(\u03bbd)) ) .\nProof. Lets decompose the instantaneous regret as follows:\nrt = \u03b8 \u22a4 \u2217 x\u2217 \u2212 \u03b8\u22a4\u2217 xt\n\u2264 \u03b8\u0303\u22a4t xt \u2212 \u03b8\u22a4\u2217 xt = (\u03b8\u0303t \u2212 \u03b8\u2217)\u22a4xt = (\u03b8\u0302t \u2212 \u03b8\u2217)\u22a4xt + (\u03b8\u0303t \u2212 \u03b8\u0302t)\u22a4xt \u2264 \u221a\n\u03b2t(\u03b4) \u2016xt\u2016V \u22121 t , (23)\nwhere the last step holds by Cauchy-Schwarz. Using (23) and the fact that rt \u2264 2, we get that rt \u2264 2min( \u221a\n\u03b2t(\u03b4) \u2016xt\u20162V \u22121 t , 1) \u2264 2 \u221a \u03b2t(\u03b4)min(\u2016xt\u20162V \u22121 t , 1).\nThus, with probability at least 1\u2212 \u03b4, \u2200T \u2265 1\nR(T ) \u2264\n\u221a \u221a \u221a \u221aT T \u2211\nt=1\nr2t \u2264\n\u221a \u221a \u221a \u221a8\u03b2TT T \u2211\nt=1\nmin(w2t , 1) \u2264 4 \u221a \u03b2TT log(det(VT ))\n\u2264 4 \u221a Td log(\u03bb+ tL/d) ( \u03bb1/2S +R \u221a 2 log 1/\u03b4 + d log(1 + tL/(\u03bbd)) ) .\nwhere the last two steps follow from Lemma 4."}, {"heading": "5.2 Saving Computation", "text": "The action selection rule (22) is NP-hard in general (Dani et al., 2008). In this section, we show that we essentially need to solve this problem only O(log t) times up to time t and hence saving computations. Algorithm 2 achieves this objective by changing its policy only when the volume of the confidence set is halved and still enjoyes almost the same regret bound as for Algorithm 1.\nTheorem 14. With probability at least 1 \u2212 \u03b4, \u2200T \u2265 1, the regret of the Linear Bandit Algorithm shown in Table 2 satisfies\nR(T ) \u2264 4 \u221a 2Td log(\u03bb+ TL/d) ( \u03bb1/2S +R \u221a 2 log 1/\u03b4 + d log(1 + TL/(\u03bbd)) ) + 4 \u221a d log(T/d).\nFirst, we prove the following lemma:\nLemma 15. Let A, B and C be positive semi-definite matrices such that A = B + C. Then, we have that\nsup x 6=0\nx\u22a4Ax\nx\u22a4Bx \u2264 det(A) det(B) .\nProof. We consider first a simple case. Let A = B + mm\u22a4, B positive definite. Let x 6= 0 be an arbitrary vector. Using the Cauchy-Schwartz inequality, we get\n(x\u22a4m)2 = (x\u22a4B1/2B\u22121/2m)2 \u2264 \u2225 \u2225 \u2225B1/2x \u2225 \u2225 \u2225 2 \u2225 \u2225 \u2225B\u22121/2m \u2225 \u2225 \u2225 2\n= \u2016x\u20162B \u2016m\u2016 2 B\u22121 .\nThus,\nx\u22a4(B +mm\u22a4)x \u2264 x\u22a4Bx+ \u2016x\u20162B \u2016m\u2016 2 B\u22121 = (1 + \u2016m\u2016 2 B\u22121) \u2016x\u2016 2 B\nand so\nx\u22a4Ax x\u22a4Bx \u2264 1 + \u2016m\u20162B\u22121 .\nWe also have that\ndet(A) = det(B +mm\u22a4) = det(B) det(I +B\u22121/2m(B\u22121/2m)\u22a4) = det(B)(1 + \u2016m\u20162B\u22121),\nthus finishing the proof of this case. If A = B +m1m \u22a4 1 + \u00b7 \u00b7 \u00b7+mt\u22121m\u22a4t\u22121, then define Vs = B +m1m\u22a41 + \u00b7 \u00b7 \u00b7+ms\u22121m\u22a4s\u22121 and use\nx\u22a4Ax x\u22a4Bx = x\u22a4Vtx x\u22a4Vt\u22121x x\u22a4Vt\u22121x x\u22a4Vt\u22122x . . . x\u22a4V2x x\u22a4Bx .\nBy the above argument, since all the terms are positive, we get\nx\u22a4Ax\nx\u22a4Bx \u2264 det(Vt)\ndet(Vt\u22121)\ndet(Vt\u22121) det(Vt\u22122) . . . det(V2) det(B) = det(Vt) det(B) = det(A) det(B) .\nThis finishes the proof of this case. Now, if C is a positive definite matrix, then the eigendecomposition of C gives C = U\u22a4\u039bU , where U is orthonormal and \u039b is positive diagonal matrix. This, in fact gives that C can be written as the sum of at most d rank-one matrices, finishing the proof for the general case.\nProof of Theorem 14. Let \u03c4t be the smallest timestep \u2264 t such that xt = x\u03c4t . By an argument similar to the one used in Theorem 13, we have\nrt \u2264 (\u03b8\u0302\u03c4t \u2212 \u03b8\u2217)\u22a4xt + (\u03b8\u0303\u03c4t \u2212 \u03b8\u0302\u03c4t)\u22a4xt.\nWe also have that for all \u03b8 \u2208 C\u03c4t and x, \u2223\n\u2223 \u2223(\u03b8 \u2212 \u03b8\u0302\u03c4t)\u22a4x \u2223 \u2223 \u2223 \u2264 \u2225 \u2225 \u2225V 1/2 t (\u03b8 \u2212 \u03b8\u0302\u03c4 ) \u2225 \u2225 \u2225\n\u221a\nx\u22a4V \u22121t x\n\u2264 \u2225 \u2225 \u2225V 1/2\u03c4t (\u03b8 \u2212 \u03b8\u0302\u03c4t) \u2225 \u2225 \u2225\n\u221a\ndet(Vt)\ndet(V\u03c4t)\n\u221a\nx\u22a4V \u22121t x\n\u2264 \u221a 2 \u2225 \u2225\n\u2225V 1/2\u03c4t (\u03b8 \u2212 \u03b8\u0302\u03c4 ) \u2225 \u2225 \u2225\n\u221a\nx\u22a4V \u22121t x\n\u2264 \u221a\n2\u03b2\u03c4t\n\u221a\nx\u22a4V \u22121t x,\nwhere the second step follows from Lemma 15, and the third step follows from the fact that at time t we have det(Vt) < 2 det(V\u03c4t). The rest of the argument is identical to that of Theorem 13. We conclude that with probability at least 1\u2212 \u03b4, \u2200T \u2265 1,\nR(T ) \u2264 4 \u221a 2Td log(\u03bb+ tL/d) ( \u03bb1/2S +R \u221a 2 log 1/\u03b4 + d log(1 + tL/(\u03bbd)) ) ."}, {"heading": "5.3 Problem Dependent Bound (\u2206 > 0)", "text": "Let \u2206 be as defined in (Dani et al., 2008). In this section we assume that \u2206 > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later.\nTheorem 16 (Stewart and Sun (1990), Corollary 4.9). Let A be a symmetric matrix with eigenvalues \u03bd1 \u2265 \u03bd2 \u2265 . . . \u2265 \u03bdd, E be a symmetric matrix with eigenvalues e1 \u2265 e2 \u2265 . . . \u2265 ed, and V = A+E denote a symmetric perturbation of A such that the eigenvalues of V are \u03bd\u03031 \u2265 \u03bd\u03032 \u2265 . . . \u2265 \u03bd\u0303d. Then, for i = 1, . . . , d, \u03bd\u0303i \u2208 [\u03bdi + ed, \u03bdi + e1]. Theorem 17. Assume that \u2206 > 0 for the gap \u2206 defined in (Dani et al., 2008). Further assume that \u03bb \u2265 1 and S \u2265 1. With probability at least 1 \u2212 \u03b4, \u2200T \u2265 1, the regret of the algorithm shown in Table 1 satisfies\nR(T ) = 16R2\u03bbS2\n\u2206\n(\nlog(LT ) + (d\u2212 1) log 64R 2\u03bbS2L\n\u22062 + 2(d\u2212 1) log\n(\nd log d\u03bb+ TL2\nd + 2 log(1/\u03b4)\n)\n+ 2 log(1/\u03b4)\n)2\n.\nProof. First we bound the regret in terms of log det(VT ). We have that\nR(T ) =\nT \u2211\nt=1\nrt \u2264 T \u2211\nt=1\nr2t \u2206 \u2264 16\u03b2T \u2206 log(det(VT )), (24)\nwhere the first inequality follows from the fact that either rt = 0 or \u2206 < rt, and the second inequality can be extracted from the proof of Theorem 13. Let bt be the number of times we have played a suboptimal action (an action xs for which \u03b8 \u22a4 \u2217 x\u2217 \u2212 \u03b8\u22a4\u2217 xs \u2265 \u2206) up to time t. Next we bound log det(Vt) in terms of bt. We bound the eigenvalues of Vt by using Theorem 16. Let Et =\n\u2211t s:xs 6=x\u2217 xsx \u22a4 s and At = Vt \u2212 Et = (t \u2212 bt)x\u2217x\u22a4\u2217 . The only non-zero eigenvalue of\n(t\u2212 bt)x\u2217x\u22a4\u2217 is (t\u2212 bt)L\u2217, where L\u2217 = x\u22a4\u2217 x\u2217 \u2264 L. Let the eigenvalues of Vt and Et be \u03bb1 \u2265 \u00b7 \u00b7 \u00b7 \u2265 \u03bbd and e1 \u2265 \u00b7 \u00b7 \u00b7 \u2265 ed respectively. By Theorem 16, we have that\n\u03bb1 \u2208 [(t\u2212 bt)L\u2217 + ed, (t\u2212 bt)L\u2217 + e1] and \u2200i \u2208 {2, . . . , d}, \u03bbi \u2208 [ed, e1]. Thus,\ndet(Vt) =\nd \u220f\ni\n\u03bbi \u2264 ((t\u2212 bt)L\u2217 + e1)ed\u221211 \u2264 ((t\u2212 bt)L+ e1)ed\u221211 .\nTherefore, log det(Vt) \u2264 log((t\u2212 bt)L + e1) + (d\u2212 1) log e1. Because trace(E) = \u2211t\ns:xs 6=x\u2217 trace(xsx \u22a4 s ) \u2264 Lbt, we conclude that e1 \u2264 Lbt. Thus,\nlog det(Vt) \u2264 log((t\u2212 bt)L+ Lbt) + (d\u2212 1) log(Lbt) = log(Lt) + (d\u2212 1) log(Lbt). (25)\nWith some calculations, we can show that\n\u03b2t log detVt \u2264 4R2\u03bbS2(2 log(1/\u03b4) + log detVt)2 \u2264 4R2\u03bbS2 ( d log d\u03bb+ tL2\nd + 2 log\n1\n\u03b4\n)2\n, (26)\nwhere the second inequality follows from Lemma 4. Hence,\nbt \u2264 16\u03b2t \u22062 log(det(Vt)) \u2264 64R2\u03bbS2 \u22062\n(\nd log d\u03bb+ tL2\nd + 2 log\n1\n\u03b4\n)2\n, (27)\nwhere the first inequality follows from R(t) \u2265 bt\u2206. Thus, with probability 1\u2212 \u03b4, \u2200T \u2265 1,\nR(T ) \u2264 16\u03b2T \u2206 log(det(VT ))\n\u2264 64R 2\u03bbS2\n\u2206 (log(det(VT )) + 2 log(1/\u03b4))\n2\n\u2264 16R 2\u03bbS2\n\u2206 (log(LT ) + (d\u2212 1) log(LbT ) + 2 log(1/\u03b4))2\n\u2264 16R 2\u03bbS2\n\u2206\n(\nlog(LT ) + (d\u2212 1) log 64R 2\u03bbS2L\n\u22062 + 2(d\u2212 1) log\n(\nd log d\u03bb+ TL2\nd + 2 log(1/\u03b4)\n)\n+ 2 log(1/\u03b4)\n)2\n,\nwhere the first step follows from (24), the second step follows from the first inequality in (26), the third step follows from (25), and the last step follows from the second inequality in (27).\nRemark 18. The problem dependent regret of (Dani et al., 2008) scales like O(d 2 \u2206 log 3 T ), while our bound scales like O( 1\u2206(log 2 T + d logT + d2 log logT ))."}], "references": [{"title": "Active learning in heteroscedastic noise", "author": ["A. Antos", "V. Grover", "Cs. Szepesv\u00e1ri"], "venue": "Theoretical Computer Science,", "citeRegEx": "Antos et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Antos et al\\.", "year": 2010}, {"title": "Online optimization in X-armed bandits", "author": ["S. Bubeck", "R. Munos", "G. Stoltz", "Cs. Szepesv\u00e1ri"], "venue": "Learning Research,", "citeRegEx": "Bubeck et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Bubeck et al\\.", "year": 2003}, {"title": "Stochastic linear optimization under bandit feedback", "author": ["V. Dani", "T.P. Hayes", "S.M. Kakade"], "venue": "Annals of Probability,", "citeRegEx": "Dani et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Dani et al\\.", "year": 2006}, {"title": "Self-normalized processes: Limit theory and Statistical Applications", "author": ["V.H. de la Pe\u00f1a", "T.L. Lai", "Q.-M. Shao"], "venue": "The Annals of Probability,", "citeRegEx": "Pe\u00f1a et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Pe\u00f1a et al\\.", "year": 2009}, {"title": "Asymptotically efficient adaptive allocation rules", "author": ["T.L. Lai", "H. Robbins"], "venue": "Advances in Applied Mathematics,", "citeRegEx": "Lai and Robbins.,? \\Q2008\\E", "shortCiteRegEx": "Lai and Robbins.", "year": 2008}, {"title": "Strong consistency of least squares estimates in multiple regression", "author": ["T.L. Lai", "H. Robbins", "C.Z. Wei"], "venue": "Proceedings of the National Academy of Sciences,", "citeRegEx": "Lai et al\\.,? \\Q1979\\E", "shortCiteRegEx": "Lai et al\\.", "year": 1979}], "referenceMentions": [{"referenceID": 2, "context": "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pe\u00f1a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales.", "startOffset": 31, "endOffset": 994}, {"referenceID": 2, "context": "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pe\u00f1a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Pe\u00f1a et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem.", "startOffset": 31, "endOffset": 1356}, {"referenceID": 2, "context": "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pe\u00f1a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Pe\u00f1a et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem.", "startOffset": 31, "endOffset": 1752}, {"referenceID": 2, "context": "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pe\u00f1a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Pe\u00f1a et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem.", "startOffset": 31, "endOffset": 1819}, {"referenceID": 2, "context": "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Pe\u00f1a et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Pe\u00f1a et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem. We show that this leads to improved performance of these algorithms. Our hope is that the new confidence sets can be used to improve the performance of other similar linear decision problems. The multi-armed bandit problem, introduced by Robbins (1952), is a game between the learner and the environment.", "startOffset": 31, "endOffset": 2124}, {"referenceID": 3, "context": "Lai and Robbins (1985) prove a ( \u2211 i6=i\u2217 1/D(pj, pi\u2217) \u2212 o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi\u2217 and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence.", "startOffset": 0, "endOffset": 23}, {"referenceID": 3, "context": "Lai and Robbins (1985) prove a ( \u2211 i6=i\u2217 1/D(pj, pi\u2217) \u2212 o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi\u2217 and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence. Auer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret.", "startOffset": 0, "endOffset": 287}, {"referenceID": 3, "context": "Lai and Robbins (1985) prove a ( \u2211 i6=i\u2217 1/D(pj, pi\u2217) \u2212 o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi\u2217 and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence. Auer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret. He used Hoeffding\u2019s inequality to construct confidence intervals and obtained a O((K log T )/\u2206) bound on the expected regret, where \u2206 is the difference between the expected rewards of the best and the second best action. We modify UCB so that it uses our new confidence sets and we show a stronger result. Namely, we show that with probability 1 \u2212 \u03b4, the regret of the modified algorithm is O(K log(1/\u03b4)/\u2206). Seemingly, this result contradicts the lower bound of Lai and Robbins (1985), however our algorithm depends on \u03b4 which it receives as an input.", "startOffset": 0, "endOffset": 857}, {"referenceID": 2, "context": "Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) \u221a T log(T/\u03b4)) with probability at most 1 \u2212 \u03b4.", "startOffset": 0, "endOffset": 19}, {"referenceID": 2, "context": "Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) \u221a T log(T/\u03b4)) with probability at most 1 \u2212 \u03b4. We modify their algorithm so that it uses our new confidence sets and we show that its regret is at most O(d log(T ) \u221a T + \u221a dT log(T/\u03b4)). Additionally, constants in our bound are smaller, and our bound holds for all T \u2265 1, as opposed the previous one which holds only for sufficiently large T . Dani et al. (2008) prove also a problem dependent regret bound.", "startOffset": 0, "endOffset": 466}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al.", "startOffset": 57, "endOffset": 76}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.", "startOffset": 57, "endOffset": 135}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.", "startOffset": 57, "endOffset": 155}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)).", "startOffset": 57, "endOffset": 249}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9\u2013B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on \u2211t k=1 \u2016mk\u22121\u2016 2 V \u22121 k\u22121 , with an essentially identical argument.", "startOffset": 57, "endOffset": 319}, {"referenceID": 2, "context": "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9\u2013B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on \u2211t k=1 \u2016mk\u22121\u2016 2 V \u22121 k\u22121 , with an essentially identical argument. Alternatively, one can use the bounding technique of Auer (2003) (see the proof of Lemma 13 there on pages 412\u2013413) to derive a bound like \u2211t k=1 \u2016mk\u22121\u2016 2 V \u22121 k\u22121 \u2264 Cd log t for a suitable chosen constant C > 0.", "startOffset": 57, "endOffset": 472}, {"referenceID": 3, "context": "Note that the log(t) factor cannot be removed, as shown by Problem 3, page 203 in the book by de la Pe\u00f1a et al. (2009). 3 Optional Skipping Consider the case when d = 1, mk = \u03b5k \u2208 {0, 1}, i.", "startOffset": 100, "endOffset": 119}, {"referenceID": 1, "context": ", the paper of Bubeck et al. (2008)), we would get, for any 0 < \u03b4 < 1, t \u2265 2, with probability 1\u2212 \u03b4, \u2200s \u2208 {0, .", "startOffset": 15, "endOffset": 36}, {"referenceID": 1, "context": "in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm.", "startOffset": 16, "endOffset": 37}, {"referenceID": 1, "context": "in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm. Also, the coefficient of the leading term in (11) under the square root is 1, whereas in (12) it is 2. Instead of a union bound, it is possible to use a \u201cpeeling device\u201d to replace the conservative log t factor in the above bound by essentially log log t. This is done e.g. in Garivier and Moulines (2008) in their Theorem 22.", "startOffset": 16, "endOffset": 405}, {"referenceID": 0, "context": "By using Lemma 8 of Antos et al. (2010), we get that Ni,s \u2264 3 + 16 \u2206i log 2K \u2206i\u03b4 .", "startOffset": 20, "endOffset": 40}, {"referenceID": 3, "context": "Lai and Robbins (1985) prove that for any suboptimal arm j, E [Ni,t] \u2265 log t D(pj , p\u2217) , where, p\u2217 and pj are the reward density of the optimal arm and arm j respectively, and D is the KD-divergence.", "startOffset": 0, "endOffset": 23}, {"referenceID": 2, "context": "5 Application to Least Squares Estimation and Linear Bandit Problem In this section we first apply Theorem 3 to derive confidence intervals for least-squares estimation, where the covariate process is an arbitrary process and then use these confidence intervals to improve the regret bound of Dani et al. (2008) for the linear bandit problem.", "startOffset": 293, "endOffset": 312}, {"referenceID": 2, "context": "The above bound could be compared with a similar bound of Dani et al. (2008) whose bound, under identical conditions, states that (with appropriate initialization) with probability 1\u2212\u03b4, for all t large enough, \u2225", "startOffset": 58, "endOffset": 77}, {"referenceID": 2, "context": "Consider the ConfidenceBall algorithm of Dani et al. (2008). We use the confidence intervals (21) and change the action selection rule accordingly.", "startOffset": 41, "endOffset": 60}, {"referenceID": 2, "context": "3 Problem Dependent Bound (\u2206 > 0) Let \u2206 be as defined in (Dani et al., 2008). In this section we assume that \u2206 > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later.", "startOffset": 58, "endOffset": 247}, {"referenceID": 2, "context": "3 Problem Dependent Bound (\u2206 > 0) Let \u2206 be as defined in (Dani et al., 2008). In this section we assume that \u2206 > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later. Theorem 16 (Stewart and Sun (1990), Corollary 4.", "startOffset": 58, "endOffset": 307}], "year": 2011, "abstractText": "We improve the regret bound of the Upper Confidence Bound (UCB) algorithm of Auer et al. (2002) and show that its regret is with high-probability a problem dependent constant. In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved.", "creator": "LaTeX with hyperref package"}}}