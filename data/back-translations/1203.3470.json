{"id": "1203.3470", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Mar-2012", "title": "ALARMS: Alerting and Reasoning Management System for Next Generation Aircraft Hazards", "abstract": "Within the framework of the ALARMS project (ALERting And Reasoning Management System) for NASA, we focus on a central challenge in this environment, namely the fast and efficient handling of aircraft sensor alarms. It is not possible to inform the pilot at all times about the state of all subsystems. Furthermore, there is uncertainty as to the actual state of danger despite the evidence of the alarms, and there is uncertainty as to the effect and duration of the measures taken to remedy these alarms.This paper reports on the first steps in the construction of an application designed for next-generation alerting. In ALARMS, we have identified 60 different aircraft subsystems and 20 different underlying hazards. In this paper, we show how a Bayesian network can be used to derive the state of the underlying hazards based on sensor input. Then, we propose a framework within which an automated system can prepare the dependence of these cases on the pilots using TMS systems.", "histories": [["v1", "Thu, 15 Mar 2012 11:17:56 GMT  (2665kb)", "http://arxiv.org/abs/1203.3470v1", "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)"]], "COMMENTS": "Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["alan s carlin", "nathan schurr", "janusz marecki"], "accepted": false, "id": "1203.3470"}, "pdf": {"name": "1203.3470.pdf", "metadata": {"source": "CRF", "title": "ALARMS: Alerting and Reasoning Management System for Next Generation Aircraft Hazards", "authors": ["Alan S. Carlin", "Nathan Schurr"], "emails": ["acarlin@cs.umass.edu", "nschurr@aptima.com", "marecki@us.ibm.com"], "sections": [{"heading": null, "text": "This paper reports on the first steps in the construction of an application designed to handle Next Generation alerts. In ALARMS, we have identified 60 different aircraft subsystems and 20 different underlying hazards. In this paper, we show how a Bayesian network can be used to derive the state of the underlying hazards, based on the sensor input. Then, we propose a framework whereby an automated system can plan to address these hazards in cooperation with the pilot, using a Time-Dependent Markov Process (TMDP). Different hazards and pilot states will call for different alerting automation plans. We demonstrate this emerging application of Bayesian networks and TMDPs to cockpit automation, for a use case where a small number of hazards are present, and analyze the resulting alerting automation policies."}, {"heading": "1 Introduction", "text": "Next Generation Air Transportation System technologies will introduce new, advanced sensor technologies into the\n\u2217This author conducted this work while at Aptima, Inc.\ncockpit. With the introduction of such systems, the responsibilities of the pilot and the density of air traffic are both expected to dramatically increase (Joint Planning and Development Office, 2007). As a result, the number of potential hazards and relevant information that must be perceived and processed by the pilot will grow. This information is likely to come from a variety of sources, requiring the pilot to integrate this information in order to evaluate hazard potential. Evaluating hazard potential will depend on the consideration of, and differentiation between, immediate (current) hazards and situations requiring re-planning or coordination (future). It will also require reasoning under uncertainty, as the actual state of the world needs to be reasoned from the hazards, and also a plan needs to be constructed for the pilot and artificial aircraft intelligence to handle the hazards, despite uncertainty as to the effectiveness of each, and temporal uncertainty about the duration required to handle each hazard.\nTo support these challenging responsibilities, the pilot has an unambiguous need for an Integrated Alerting and Notification (IAN) system that will continuously monitor multiple sources of interdependent information to evaluate hazard potentials, track multiple potential hazards, provide caution/warning/alerting (CWA) notifications and contextrelevant decision support to the pilot, and determine the best method of presenting this information to ensure that the information can be viewed and used efficiently and effectively. There are two broad challenges that need to be addressed before an IAN system can become operational. First, existing methods cannot reason under uncertainty about the proposed scale of information and hazards in such a time-critical environment (Proctor, 1998; Song and Kuchar, 2003). Specifically, these methods do not provide a robust approach for integrating, interpreting, and providing recommendations that can be generated by the diverse and large set of data expected within the NextGen concept of operations. Second, the interaction between a human pilot and an automated system is complex (Galster, 2003) and also uncertain, and the design of an advanced alerting technology must leverage methods for ensuring effective collaborative performance of the human-system team."}, {"heading": "2 ALARMS Approach", "text": "To address these challenges, we have designed and simulated an ALerting And Reasoning Management System (ALARMS). The ALARMS approach is shown in Figure 1. Hazards exist in the real world, as depicted on the left of the diagram. The sensors on the Flight Deck (current and NextGen) perceive these hazards. In the first phase of the ALARMS effort, Aptima cooperated with the Aircraft Simulation and Hardware-in-the-Loop Lab to identify the hazards and sensor systems, and quantify the relationship between them. The results of this effort will be described in the next section. We used the results of this analysis to construct probability tables for a State Estimation Bayesian Network, labeled \u201dState Estimation\u201d in the Figure 1. The input to the State Estimation Bayesian Network is the alerts issued by the sensor systems on the aircraft. The output is an estimate of the probability and severity estimate of the underlying hazards. Once the hazard and pilot state is estimated, the information is sent to the ALARMS Planning module, which will construct a plan to address the hazards. The Planning module is a TMDP (Time-Dependent Markov Decision Processes) (Boyan and Littman, 2000). The TMDP model can be used to capture both state uncertainty in the environment as well as duration uncertainty in human (pilot) actions (Schurr and Marecki, 2008). Its input is the hazard and pilot states, as well as a Markov model of the effectiveness of the pilot and automation in handling the hazards, given various levels of alert. Its output is a time-dependent plan for addressing the alert. The plan is interpreted by the Stages of Automation module, which interprets the level of automation and decides what level of alerts and options to send to the pilot. This decision will then be sent to the ALARMS interface, which displays the information to the pilot.\nIn this paper, we report on the phase of the ALARMS effort corresponding to the \u201cIntegrated System User Model\u201d in Figure 1. The Integrated System User Model is part of the greater ALARMS effort. Other parts of the ALARMS effort are shown in Figure 1 as well, and involve modeling and predicting human performance. Through Cognitive Work Analysis (CWA) (Vicente, 1999), ALARMS has focused on allowing the system to predict pilot performance in an online fashion. This module is labeled \u201cHuman Performance\u201d in the figure. Whereas we will see that the current work involves a primitive model of pilot state which accounts for the phase of flight, in future work the Pilot State Estimate will be constructed using techniques from the cognitive sciences literature, resulting in a richer pilot state space for the Integrated System User Model (Latorella, 1999). Another, orthogonal task, is labeled \u201cALARMS Interface\u201d in Figure 1. In this task, we are leveraging established human factors design principles to develop an interface that (1) maximizes pilot performance in detecting and responding to a diverse set of threats, and (2) is flexible in its integration with existing NextGen features and the concepts of operations. The interface is being designed to support various stages of automation (Galster, 2003). At low stages, decisions are made almost entirely by the pilot, whereas at high-stages of automation they are made by the system. At medium stages of automation, decisions are cooperative, for example the system may precompute several options for complex maneuvers, and let the pilot select from these options."}, {"heading": "2.1 ALARMS Hazard Matrix", "text": "As the first step in the ALARMS effort, we combined with the Aircraft Simulation and Hardware-in-the-Loop Laboratory to identify (1) Current and Next Generation aircraft\nsystems. (2) Aircraft Hazards. (3) The interaction between systems and hazards. The ALARMS hazard matrix was constructed as a result of this work, and a small portion of this matrix is shown in Figure 3. Each row represents a tool, technology, or system that can issue an alert in the next generation cockpit. Each column represents a potential environment in the hazard. Thus, there is an entry for each case where a sensor can issue an alert for a given hazard.\nEntries also color-coded with labels D/W/C/A (Directive/Warning/Caution/Advisory). These labels, presented in order of decreasing urgency, represent the highest level of alert possible for the sensor/hazard combination. Thus, entries labeled \u201cA\u201d correspond to systems that will only issue low level advisories for that given hazard, whereas entries labeled \u201cW\u201d, such as an Adverse Weather hazard from the Enhanced Ground Proximity Warning System (EGPWS), correspond to systems that are capable of issuing a more urgent warning. Alert level also corresponds to the timeframe in which the hazard must be addressed, according to Figure 2."}, {"heading": "2.2 ALARMS Bayesian Network", "text": "The goal of the ALARMS effort is to construct a plan for handling sensor alerts; however, it is not truly the sensor alerts that must be handled, it is the underlying hazards which they represent. For example, multiple subsystems (such as Vertical Navigation (VNAV) and Cockpit Display of Traffic Information (CDTI)) can issue alerts which relate to an Altitude Deviation hazard. The ALARMS system should deduce that there may be an Altitude Deviation hazard if either of these sensors issue an alert, and the hazard should be more certain and urgent if both systems issue one.\nIn order to model the sensor systems, a Bayesian network was built, as shown in Figure 4. Ovals on the right represent hazards, corresponding to the columns of the ALARMS hazard matrix. Ovals on the left represent hazard alerts from sensors, corresponding to the entries in the hazard matrix. Directionality proceeds from right to left, indicating that hazards cause sensor alerts. However reasoning proceeds from left to right, the sensor output will act as ev-\nidence and the hazard level on the right is deduced. Each entry on both sides can exist at several levels (Advisory, Caution, Warning, Directive), according to the severity of the hazard and the sensor alert.\nThe Bayesian network itself is modeled as noisy-or. The hazard itself can exist at several levels, and the level or severity of the hazard is evidenced by the subsystem alerts. To feed into the next part of the system, a threshold is applied, to find the highest level alert for which there is evidence.\nTo construct the network, the GeNIE (Graphical Network Interface) and SMILE (Structural Modeling, Inference, and Learning Engine) software packages were used, from the Decision Systems Laboratory at the University of Pittsburgh (Druzdzel, 1999)."}, {"heading": "2.3 TMDP Planner", "text": "We now recall the TMDP model and then show how the ALARMS planning module employs it. Time Dependent Markov Decision Processes (TMDPs) (Boyan and Littman, 2000) assume a finite set S of discrete states and a finite set A of actions. When action a \u2208 A is executed in state s \u2208 S, the process transitions with probability P s,a(s\u2032) to some state s\u2032 \u2208 S. The transition itself is not instantaneous; it consumes t units of time with probability ds,as\u2032 (t) where ds,as\u2032 \u2208 D is a probability density function (a.k.a. action duration distribution) for a given s, a, s\u2032. Similarly, the reward Rs,as\u2032 (t) that the transition provides depends on s, a, s\u2032 as well as on the time t at which the process enters state s\u2032. (Note, that t in ds,as\u2032 (t) is the transition duration whereas t in Rs,as\u2032 (t) is the time at which the transition terminates.) A deterministic TMDP policy \u03c0 is therefore a mapping S \u00d7 [0,\u2206] \u2192 A where \u2206 (a.k.a. the deadline) is the earliest point in time after which all the rewardsRs,as\u2032 (t) are zero. Denote by V \u03c0(s, t) the total expected reward for following a policy \u03c0 from state s at time t. (For a given s, V \u03c0(s, t) is often viewed as a continuous value function over t \u2208 [0,\u2206].) The optimal TMDP policy \u03c0\u2217 thus satisfies V \u03c0 \u2217 (s, t) \u2265 V \u03c0(s, t) for all s \u2208 S, t \u2208 [0,\u2206] and \u03c0 6= \u03c0\u2217.\nLet \u03a8 be the set of alert levels (e.g. \u201cNominal\u201d (N), \u201cAdvisory\u201d (A), \u201cCaution\u201d (C), \u201cWarning\u201d (W), or \u201cDirective\u201d (D)), \u03a6 be an ordered set of hazards (e.g. \u201cWeather\u201d (hazard 1), \u201cAltitude Deviation\u201d (hazard 2)) and \u2126 be a set of autonomy levels (e.g. \u201cNo Autonomy\u201d (0), \u201cSome Autonomy\u201d (1), or \u201cFull Autonomy\u201d (2)). A TMDP in ALARMS planing module is instantiated as follows:\n\u2022 States: A state s \u2208 S is a mapping from the hazards to their alert levels. That is, s = (\u03c8\u03c6)\u03c6\u2208\u03a6 is a vector where \u03c8\u03c6 \u2208 \u03a8 is the alert level of hazard \u03c6 \u2208 \u03a6. For example, given three hazards, state s = (N,A,W ) defines that the first hazard is at Nominal level, the second hazard is at Advisory level, and the third haz-\nard is at Warning Level.\n\u2022 Actions: The actions of the ALARMS system represent the different ways in which the system displays the information about the hazards on the pilot\u2019s GUI. In general, the higher the degree of autonomy \u03c9\u03c6 \u2208 \u2126 for a hazard \u03c6 \u2208 \u03a6, the less intrusive the way in which the information about hazard \u03c6 is presented on the pilot\u2019s GUI. An action a \u2208 A is therefore represented by a vector (\u03c9\u03c6)\u03c6\u2208\u03a6. For example, given three hazards, action a = (1, 3, 2) will mark on the pilot\u2019s GUI the information about hazard 1 to be pilot-intensive (autonomy level 1), the information about hazard 2 to be highly automated (autonomy level 3) and the information about hazard 3 to be somewhat automated (autonomy level 2). There is also a special autonomy level 0 reserved for actions that do not address the hazard at all (the pilot is not informed about a hazard and the automation does not address it).\n\u2022 Transitions: ALARMS assumes that all the hazards will eventually be addressed (their alert levels will return to \u201cNominal\u201d (N) values) as a result of human or autonomy actions. That is, for all states s \u2208 S and actions a \u2208 A, P s,a(s\u2032) = 1 only for s\u2032 = (\u03c8\u03c6)\u03c6\u2208\u03a6 such that \u03c8\u03c6 = N for all \u03c6 \u2208 \u03a6. An exception to the above is when the action is not to address the hazard, in which case the state remains the same.\n\u2022 Durations: ALARMS models action duration distributions by assuming that actions at a high level of automation take place quickly whereas actions at a low level of automation (i.e. that involve the pilot) have a longer duration. In essence, an attentive pilot will be more efficient at addressing hazards whereas an\ninattentive or overburdened pilot will perform poorly. As part of the ALARMS effort, profiles of pilot performance have been constructed at various phases of flight. The phase of flight affects pilot attentiveness, which in turn affects the action duration distributions. In the next phase of the ALARMS project, we expect to construct richer models of pilot state, based on Cognitive Work Analysis (CWA).\n\u2022 Rewards: Reward is achieved for addressing the hazard and transitioning back to a nominal state. (Each hazard can have a different reward associated with it.) Actions with a low level of automation (hazards handled by the pilot) accumulate greater reward, whereas actions taken with a higher level of automation (handled by the system, without pilot feedback) achieve a lower level of reward. As actions that provide higher rewards usually take longer to execute, given a time deadline \u2206 after which no rewards can be earned, an optimal TMDP policy must often tradeoff high reward actions for their faster, but lower reward counterparts. We illustrate these trade-offs in the next Section, where optimal TMDP policies are found using the CPH algorithm (Marecki et al., 2007). In this work, we assume low levels of automation represent GUIs that provide more information to the pilot, which achieves higher reward. The assumption is limited to the reward and transition model, which is easily changed if desired."}, {"heading": "3 Application", "text": "We constructed an analysis tool to allow the flight deck designer to understand the behavior of the flight deck for different hazard and pilot states. A picture of the tool can be\nseen in Figure 5. In the example shown, four sensor systems are considered (Weather Radar, Ice Protection, VNAV, and CDTI) which provide alerts. Options for the level of alert (Directive/Warning/Caution/Advisory/None) are configurable through an .xml file. The systems are run through the Bayesian Network to determine the underlying hazard state. Adjustable sliders allow the user to configure the rewards for addressing each hazard. (Since the TMDP reward function is defined using rewards for addressing the actual underlying hazards, instead of the sensor system rewards, the reward for the hazard is merely the maximum of the connected sensor system rewards). Phase of Flight can also be selected to determine the pilot state. Clicking the \u201cRun\u201d button induces the program to perform two actions: (1) It reads in the Bayes Net (in .xml format), and finds the underlying hazards by using the user-selected GUI options as evidence and (2) It builds and solves the underlying TMDP to find an optimal plan that addresses the hazards, and plots the results.\nFor our example problems containing four sensors and two hazards, the Bayesian computation took less than a second, and the CPH solver found the optimal solution in 40.5 seconds. For aircraft deployment, we anticipate producing the TMDP policies for hazard combinations in advance, and at flight time implementing the resulting policies through a lookup table.\nFigure 5 displays the policies for various hazard and pilot states. The horizontal axes in all the plots mark time, and without loss of generality the graphs assume there is a deadline at the 20 second mark. The vertical axes represent the expected value (=sum of expected rewards). Differing actions are plotted in different colors (or can be seen as a break in the graph for those who read this in black and white). The action with the largest expected value for a\ngiven point in time should be executed if a decision is to be made at that point in time.\nConsider the first plot in Figure 5, with two hazards to be addressed: hazard 1 = \u201cWeather\u201d and hazard 2 = \u201cAltitude Deviation\u201d. The TMDP state considered in this plot is (A,N) which means that the \u201cWeather\u201d hazard is in Advisory mode and the \u201cAltitude Deviation\u201d hazard is in Nominal mode. As can be seen, when the deadline is > 5 seconds away, action \u201cL10\u201d (shorthand for \u201cHandle Hazard 1 at automation level 1, Handle Hazard 2 at automation level 0\u201d) is selected, the pilot is expected to handle the \u201cWeather\u201d hazard with some importance and the \u201cAltitude Deviation\u201d hazard with no importance. However, as we approach the deadline, action \u201cL20\u201d is more preferable, as automation level \u201c2\u201d is expected to act more quickly, thus potentially providing reward more quickly. (Note that only the upper envelope, that is the parts of the value functions that are not dominated by other value functions, are shown in the Figure.)\nSubsequent plots in Figure 6 show how the optimal TMDP policy changes when we consider different states. The Figure 6a shows the optimal policy for a state (C,A). Notice, that when the deadline is far away, both hazards are assigned to the pilot (automation level 1, the portion of the curve shown in green). However, as the deadline nears, the system deduces that there is not sufficient time for the pilot to handle both hazards. Consequently, the system assigns the less severe hazard (\u201cAltitude Deviation\u201d) to the automation, shown as the purple portion of the curve on the right of the graph. Conversely in (Figure 6b), when we set a higher relative reward for addressing the \u201cAltitude Deviation\u201d hazard (seen on the number next to the slider bars on the right), as the deadline approaches, the system makes the opposite decision. It assigns the less prioritized (rewarded)\nhazard (\u201cWeather\u201d) to the automation. On the right of the application, under \u201cActions\u201d, we can see that the purple right-portion of the plot now represents \u201cL21\u201d instead of \u201cL12\u201d. Finally, the last plot in Figure 6 shows the effects of changing the phase of flight on the TMDP policy. By changing the phase of flight from \u201cEnroute\u201d to \u201cLand\u201d, the assumptions about the pilot state have changed. During the Landing phase, the pilot is assumed to be less efficient than usual at performing tasks, and thus the cross-over point between actions is shifted left, reflecting the fact that the action with the higher level of automation is favored farther away from the deadline than in the graphs above it. 4 Related Work There are many works on the use of Bayesian networks for diagnosis (Andreassen et al., 1987; Breese et al., 2000). The idea of a time-dependent Markov model was first mentioned in (Boyan and Littman, 2000), and has been adapted\nfor application (Rachelson et al., 2008). Progress towards solving these problems in fast time was made in recent publications (Feng et al., 2004; Li and Littman, 2005; Marecki et al., 2007).\nSystems where MDPs or POMDPs were used for adjustable autonomy include (Scerri et al., 2002; Varakantham et al., 2005). These works did not allow for error checking or further consideration once an assignment was made. Furthermore, the state space was very large, not taking advantage of the TMDP framework, resulting in thousands of states for similarly sized problems.\nAs the cockpit has grown more complicated, numerous work has been published studying the effects on pilots. Cognitive Work Analysis has been used in order to model the effects of varying system states on pilot workload, and the effects of workload on performance (Vicente, 1999).\nMuch work attempts to study the interaction between the human pilot and the automated system and include the levels of automation concept (Galster, 2003; Parasuraman et al., 2000). However, these works have not produced algorithms, whereby the assignment of tasks to pilot and human were varied automatically in a planned manner."}, {"heading": "5 Conclusion", "text": "In the ALARMS project, we have developed several components necessary for operation of aircraft in a NextGen environment. First, a study of existing systems was conducted, and a matrix correlating aircraft sensor output (both legacy and NextGen) with real-world hazards was constructed. Second, this matrix was used to create a Bayesian Network whereby sensor output becomes evidence, and the presence and severity of real-world hazards is derived. Third, a TMDP model was created, allowing the aircraft sensor system to select the appropriate level of automation which best addresses hazards in a time-dependent environment. Finally, a demonstration application was created, linking the applications and thereby producing automation plans directly from the simulated sensor output.\nFuture work will continue in several directions. First, TMDP models will be scaled to handle not just the use cases from the demonstration application, but the whole Bayesian network. Second, work from the cognitive sciences literature will be leveraged to better estimate the pilot state. Third, we will consider the time-sensitive nature of the automated components, as in (Hansen and Zilberstein, 2001). Finally, we will develop a user interface based on levels of automation. Through the combined efforts of hazard state estimation, pilot state estimation, and humanautomation planning, it is our hope to provide a robust, smooth transition to the Next Generation aircraft cockpit."}, {"heading": "6 Acknowledgements", "text": "We would like to thank Gilbert Mizrahi for the graphical interface, and Amy Alexander for helpful guidance on pilot models.\nThis paper is based upon work supported by the National Aeronautics and Space Administration (NASA) under Contract No. NNL08AA20B issued through the Aviation Safety Program and monitored by Kara Latorella, whom the authors wish to thank. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of NASA."}], "references": [{"title": "MUNIN: A causal probabilistic network for interpretation of electromyographic findings", "author": ["S. Andreassen", "M. Woldbye", "B. Falck", "S.K. Andersen"], "venue": "Proceedings of the 10th International Joint Conference on Artificial Intelligence , 366\u2013372. IJCAI.", "citeRegEx": "Andreassen et al\\.,? 1987", "shortCiteRegEx": "Andreassen et al\\.", "year": 1987}, {"title": "Automated decision-analytic diagnosis of thermal performance in gas turbines", "author": ["J. Breese", "E. Horvitz", "M. Peot", "R. Gay", "G. Quentin"], "venue": "Proceedings of the International Gas Tur-", "citeRegEx": "Breese et al\\.,? 1992", "shortCiteRegEx": "Breese et al\\.", "year": 1992}, {"title": "Exact solutions to time", "author": ["J. Engineers. Boyan", "M. Littman"], "venue": null, "citeRegEx": "Boyan and Littman,? \\Q2000\\E", "shortCiteRegEx": "Boyan and Littman", "year": 2000}, {"title": "Monitoring and control", "author": ["E. 2003-0149. Hansen", "S. Zilberstein"], "venue": null, "citeRegEx": "Hansen and Zilberstein,? \\Q2001\\E", "shortCiteRegEx": "Hansen and Zilberstein", "year": 2001}, {"title": "Investigating interruptions: implications", "author": ["K. JPDO. Latorella"], "venue": null, "citeRegEx": "Latorella,? \\Q1999\\E", "shortCiteRegEx": "Latorella", "year": 1999}, {"title": "Lazy approximation for solving", "author": ["Report", "L. NASA. Li", "M. Littman"], "venue": null, "citeRegEx": "Report et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Report et al\\.", "year": 2005}, {"title": "A fast analytical", "author": ["J. AAAI. Marecki", "S. Koenig", "M. Tambe"], "venue": null, "citeRegEx": "Marecki et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Marecki et al\\.", "year": 2007}, {"title": "Adapting an MDP", "author": ["E. Rachelson", "P. Fabiani", "F. Garcia"], "venue": "Week and Space Technology,", "citeRegEx": "Rachelson et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Rachelson et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 2, "context": "The Planning module is a TMDP (Time-Dependent Markov Decision Processes) (Boyan and Littman, 2000).", "startOffset": 73, "endOffset": 98}, {"referenceID": 4, "context": "state which accounts for the phase of flight, in future work the Pilot State Estimate will be constructed using techniques from the cognitive sciences literature, resulting in a richer pilot state space for the Integrated System User Model (Latorella, 1999).", "startOffset": 240, "endOffset": 257}, {"referenceID": 2, "context": "Time Dependent Markov Decision Processes (TMDPs) (Boyan and Littman, 2000) assume a finite set S of discrete states and a finite set A of actions.", "startOffset": 49, "endOffset": 74}, {"referenceID": 6, "context": "next Section, where optimal TMDP policies are found using the CPH algorithm (Marecki et al., 2007).", "startOffset": 76, "endOffset": 98}, {"referenceID": 0, "context": "There are many works on the use of Bayesian networks for diagnosis (Andreassen et al., 1987; Breese et al., 2000).", "startOffset": 67, "endOffset": 113}, {"referenceID": 2, "context": "The idea of a time-dependent Markov model was first mentioned in (Boyan and Littman, 2000), and has been adapted for application (Rachelson et al.", "startOffset": 65, "endOffset": 90}, {"referenceID": 7, "context": "The idea of a time-dependent Markov model was first mentioned in (Boyan and Littman, 2000), and has been adapted for application (Rachelson et al., 2008).", "startOffset": 129, "endOffset": 153}, {"referenceID": 6, "context": "solving these problems in fast time was made in recent publications (Feng et al., 2004; Li and Littman, 2005; Marecki et al., 2007).", "startOffset": 68, "endOffset": 131}, {"referenceID": 3, "context": "Third, we will consider the time-sensitive nature of the automated components, as in (Hansen and Zilberstein, 2001).", "startOffset": 85, "endOffset": 115}], "year": 2010, "abstractText": "The Next Generation Air Transportation System will introduce new, advanced sensor technologies into the cockpit. With the introduction of such systems, the responsibilities of the pilot are expected to dramatically increase. In the ALARMS (ALerting And Reasoning Management System) project for NASA, we focus on a key challenge of this environment, the quick and efficient handling of aircraft sensor alerts. It is infeasible to alert the pilot on the state of all subsystems at all times. Furthermore, there is uncertainty as to the true hazard state despite the evidence of the alerts, and there is uncertainty as to the effect and duration of actions taken to address these alerts. This paper reports on the first steps in the construction of an application designed to handle Next Generation alerts. In ALARMS, we have identified 60 different aircraft subsystems and 20 different underlying hazards. In this paper, we show how a Bayesian network can be used to derive the state of the underlying hazards, based on the sensor input. Then, we propose a framework whereby an automated system can plan to address these hazards in cooperation with the pilot, using a Time-Dependent Markov Process (TMDP). Different hazards and pilot states will call for different alerting automation plans. We demonstrate this emerging application of Bayesian networks and TMDPs to cockpit automation, for a use case where a small number of hazards are present, and analyze the resulting alerting automation policies.", "creator": "TeX"}}}