{"id": "1206.4678", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2012", "title": "Linear Regression with Limited Observation", "abstract": "We look at the most common variants of linear regression, including ride, lasso, and support vector regression, in an environment where the learner is only allowed to observe a fixed number of attributes in each example during training time. We present simple and efficient algorithms for these problems: for lasso and ridge regression, they require the same total number of attributes (up to constants) as full information algorithms to achieve some accuracy. For support vector regression, we need exponentially fewer attributes compared to the state of the art. In this way, we solve an open problem recently raised by Cesa-Bianchi et al. (2010). Experiments show that the theoretical limits are justified by superior performance compared to the state of the art.", "histories": [["v1", "Mon, 18 Jun 2012 15:37:23 GMT  (350kb)", "http://arxiv.org/abs/1206.4678v1", "ICML2012"]], "COMMENTS": "ICML2012", "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["elad hazan", "tomer koren"], "accepted": true, "id": "1206.4678"}, "pdf": {"name": "1206.4678.pdf", "metadata": {"source": "META", "title": "Linear Regression with Limited Observation", "authors": ["Elad Hazan", "Tomer Koren"], "emails": ["ehazan@ie.technion.ac.il", "tomerk@cs.technion.ac.il"], "sections": [{"heading": null, "text": "Experiments show the theoretical bounds to be justified by superior performance compared to the state of the art."}, {"heading": "1. Introduction", "text": "In regression analysis the statistician attempts to learn from examples the underlying variables affecting a given phenomenon. For example, in medical diagnosis a certain combination of conditions reflects whether a patient is afflicted with a certain disease.\nIn certain common regression cases various limitations are placed on the information available from the examples. In the medical example, not all parameters of a certain patient can be measured due to cost, time and patient reluctance.\nIn this paper we study the problem of regression in which only a small subset of the attributes per example can be observed. In this setting, we have access to all attributes and we are required to choose which of them to observe. Recently, Cesa-Bianchi et al. (2010)\nAppearing in Proceedings of the 29 th International Conference on Machine Learning, Edinburgh, Scotland, UK, 2012. Copyright 2012 by the author(s)/owner(s).\nstudied this problem and asked the following interesting question: can we efficiently learn the optimal regressor in the attribute efficient setting with the same total number of attributes as in the unrestricted regression setting? In other words, the question amounts to whether the information limitation hinders our ability to learn efficiently at all. Ideally, one would hope that instead of observing all attributes of every example, one could compensate for fewer attributes by analyzing more examples, but retain the same overall sample and computational complexity.\nIndeed, we answer this question on the affirmative for the main variants of regression: Ridge and Lasso. For support-vector regression we make significant advancement, reducing the parameter dependence by an exponential factor. Our results are summarized in the table below 1, which gives bounds for the number of examples needed to attain an error of \u03b5, such that at most k attributes 2 are viewable per example. We denote by d the dimension of the attribute space.\nOur bounds imply that for reaching a certain accuracy, our algorithms need the same number of attributes as their full information counterparts. In particular, when k = \u2126(d) our bounds coincide with those of full information regression, up to constants (cf. Kakade et al. 2008).\nWe complement these upper bounds and prove that \u2126( d\u03b52 ) attributes are in fact necessary to learn an \u03b5-\n1The previous bounds are due to (Cesa-Bianchi et al., 2010). For SVR, the bound is obtained by additionally incorporating the methods of (Cesa-Bianchi et al., 2011).\n2For SVR, the number of attributes viewed per example is a random variable whose expectation is k.\naccurate Ridge regressor. For Lasso regression, CesaBianchi et al. (2010) proved that \u2126(d\u03b5 ) attributes are necessary, and asked what is the correct dependence on the problem dimension. Our bounds imply that the number of attributes necessary for regression learning grows linearly with the problem dimensions.\nThe algorithms themselves are very simple to implement, and run in linear time. As we show in later sections, these theoretical improvements are clearly visible in experiments on standard datasets."}, {"heading": "1.1. Related work", "text": "The setting of learning with limited attribute observation (LAO) was first put forth in (Ben-David & Dichterman, 1998), who coined the term \u201clearning with restricted focus of attention\u201d. Cesa-Biachi et al. (2010) were the first to discuss linear prediction in the LAO setting, and gave an efficient algorithm (as well as lower bounds) for linear regression, which is the primary focus of this paper."}, {"heading": "2. Setting and Result Statement", "text": ""}, {"heading": "2.1. Linear regression", "text": "In the linear regression problem, each instance is a pair (x, y) of an attributes vector x \u2208 Rd and a target variable y \u2208 R. We assume the standard framework of statistical learning (Haussler, 1992), in which the pairs (x, y) follow a joint probability distribution D over Rd\u00d7R. The goal of the learner is to find a vector w for which the linear rule y\u0302 \u2190 w>x provides a good prediction of the target y. To measure the performance of the prediction, we use a convex loss function `(y\u0302, y) : R2 \u2192 R. The most common choice is the squared loss `(y\u0302, y) = 12 (y\u0302\u2212y)\n2, which stands for the popular leastsquares regression. Hence, in terms of the distribution D, the learner would like to find a regressor w \u2208 Rd with low expected loss, defined as\nLD(w) = E(x, y)\u223cD[`(w >x, y)] . (1)\nThe standard paradigm for learning such regressor is seeking a vector w \u2208 Rd that minimizes a trade-off between the expected loss and an additional regularization term, which is usually a norm of w. An equivalent form of this optimization problem is obtained by replacing the regularization term with a proper constraint, giving rise to the problem\nmin w\u2208Rd\nLD(w) s.t. \u2016w\u2016p 6 B , (2)\nwhere B > 0 is a regularization parameter and p > 1. The main variants of regression differ on the type of\n`p norm constraint as well as the loss functions in the above definition:\n\u2022 Ridge regression: p = 2 and squared loss,\n`(y\u0302, y) = 12 (y\u0302 \u2212 y) 2 .\n\u2022 Lasso regression: p = 1 and squared loss.\n\u2022 Support-vector regression: p = 2 and the \u03b4insensitive absolute loss (Vapnik, 1995),\n`(y\u0302, y) = |y\u0302 \u2212 y|\u03b4 := max{0, |y\u0302 \u2212 y| \u2212 \u03b4} .\nSince the distribution D is unknown, we learn by relying on a training set S = {(xt, yt)}mt=1 of examples, that are assumed to be sampled independently from D. We use the notation `t(w) := `(w\n>xt, yt) to refer to the loss function induced by the instance (xt, yt).\nWe distinguish between two learning scenarios. In the full information setup, the learner has unrestricted access to the entire data set. In the limited attribute observation (LAO) setting, for any given example pair (x, y), the learner can observe y, but only k attributes of x (where k > 1 is a parameter of the problem). The learner can actively choose which attributes to observe."}, {"heading": "2.2. Limitations on LAO regression", "text": "Cesa-Biachi et al. (2010) proved the following sample complexity lower bound on any LAO Lasso regression algorithm.\nTheorem 2.1. Let 0 < \u03b5 < 116 , k > 1 and d > 4k. For any regression algorithm accessing at most k attributes per training example, there exist a distribution D over {x : \u2016x\u2016\u221e 6 1} \u00d7 {\u00b11} and a regressor w? with \u2016w?\u20161 6 1 such that the algorithm must see (in expectation) at least \u2126( dk\u03b5 ) examples in order to learn a linear regressor w with LD(w)\u2212 LD(w?) < \u03b5.\nWe complement this lower bound, by providing a stronger lower bound on the sample complexity of any Ridge regression algorithm, using informationtheoretic arguments. Theorem 2.2. Let \u03b5 = \u2126(1/ \u221a d). For any regression algorithm accessing at most k attributes per training example, there exist a distribution D over {x : \u2016x\u20162 6 1} \u00d7 {\u00b11} and a regressor w? with \u2016w?\u20162 6 1 such that the algorithm must see (in expectation) at least \u2126( dk\u03b52 ) examples in order to learn a linear regressor w, \u2016w\u20162 6 1 with LD(w)\u2212 LD(w?) 6 \u03b5.\nOur algorithm for LAO Ridge regression (see section 3) imply this lower bound to be tight up to constants.\nNote, however, that the bound applies only to a particular regime of the problem parameters 3."}, {"heading": "2.3. Our algorithmic results", "text": "We give efficient regression algorithms that attain the following risk bounds. For our Ridge regression algorithm, we prove the risk bound\nE [LD(w\u0304)] 6 min \u2016w\u201626B LD(w) +O\n( B2 \u221a d\nkm\n) ,\nwhile for our Lasso regression algorithm we establish the bound\nE [LD(w\u0304)] 6 min \u2016w\u201616B LD(w) +O\n( B2 \u221a d log d\nkm\n) .\nHere we use w\u0304 to denote the output of each algorithm on a training set of m examples, and the expectations are taken with respect to the randomization of the algorithms. For Support-vector regression we obtain a risk bound that depends on the desired accuracy \u03b5. Our bound implies that\nm = O\n( d\nk\n) \u00b7 exp ( O ( log2 B\n\u03b5\n)) .\nexamples are needed (in expectation) for obtaining an \u03b5-accurate regressor."}, {"heading": "3. Algorithms for LAO least-squares regression", "text": "In this section we present and analyze our algorithms for Ridge and Lasso regression in the LAO setting. The loss function under consideration here is the squared loss, that is, `t(w) = 1 2 (w\n>xt\u2212 yt)2. For convenience, we show algorithms that use k+1 attributes of each instance, for k > 1 4.\nOur algorithms are iterative and maintain a regressor wt along the iterations. The update of the regressor at iteration t is based on gradient information, and specifically on gt := \u2207`t(wt) that equals (w>t xt\u2212 yt) \u00b7 xt for the squared loss. In the LAO setting, however, we do not have the access to this information, thus we build upon unbiased estimators of the gradients.\n3Indeed, there are (full-information) algorithms that are known to converge in O(1/\u03b5) rate \u2013 see e.g. (Hazan et al., 2007).\n4We note that by our approach it is impossible to learn using a single attribute of each example (i.e., with k = 0), and we are not aware of any algorithm that is able to do so. See (Cesa-Bianchi et al., 2011) for a related impossibility result.\nAlgorithm 1 AERR Parameters: B, \u03b7 > 0 Input: training set S = {(xt, yt)}t\u2208[m] and k > 0 Output: regressor w\u0304 with \u2016w\u0304\u20162 6 B 1: Initialize w1 6= 0, \u2016w1\u20162 6 B arbitrarily 2: for t = 1 to m do 3: for r = 1 to k do 4: Pick it,r \u2208 [d] uniformly and observe xt[it,r] 5: x\u0303t,r \u2190 dxt[it,r] \u00b7 eit,r 6: end for 7: x\u0303t \u2190 1k \u2211k r=1 x\u0303t,r\n8: Choose jt \u2208 [d] with probability wt[j]2/\u2016wt\u201622, and observe xt[jt]\n9: \u03c6\u0303t \u2190 \u2016wt\u201622 xt[jt]/wt[jt]\u2212 yt 10: g\u0303t \u2190 \u03c6\u0303t \u00b7 x\u0303t 11: vt \u2190 wt \u2212 \u03b7g\u0303t 12: wt+1 \u2190 vt \u00b7B/max{\u2016vt\u20162, B} 13: end for 14: w\u0304\u2190 1m \u2211m t=1 wt"}, {"heading": "3.1. Ridge regression", "text": "Recall that in Ridge regression, we are interested in the linear regressor that is the solution to the optimization problem (2) with p = 2, given explicitly as\nmin w\u2208Rd\nLD(w) s.t. \u2016w\u20162 6 B , (3)\nOur algorithm for the LAO setting is based on a randomized Online Gradient Descent (OGD) strategy (Zinkevich, 2003). More specifically, at each iteration t we use a randomized estimator g\u0303t of the gradient gt to update the regressor wt via an additive rule. Our gradient estimators make use of an importance-sampling method inspired by (Clarkson et al., 2010).\nThe pseudo-code of our Attribute Efficient Ridge Regression (AERR) algorithm is given in Algorithm 1. In the following theorem, we show that the regressor learned by our algorithm is competitive with the optimal linear regressor having 2-norm bounded by B.\nTheorem 3.1. Assume the distribution D is such that \u2016x\u20162 6 1 and |y| 6 B with probability 1. Let w\u0304 be the output of AERR, when run with \u03b7 = \u221a k/2dm. Then, \u2016w\u0304\u20162 6 B and for any w? \u2208 Rd with \u2016w?\u20162 6 B,\nE [LD(w\u0304)] 6 LD(w?) + 4B 2\n\u221a 2d\nkm ."}, {"heading": "3.1.1. Analysis", "text": "Theorem 3.1 is a consequence of the following two lemmas. The first lemma is obtained as a result of a standard regret bound for the OGD algorithm (see Zinkevich 2003), applied to the vectors g\u03031, . . . , g\u0303m.\nLemma 3.2. For any \u2016w?\u20162 6 B we have m\u2211 t=1 g\u0303>t (wt \u2212w?) 6 2B2 \u03b7 + \u03b7 2 m\u2211 t=1 \u2016g\u0303t\u201622 . (4)\nThe second lemma shows that the vector g\u0303t is an unbiased estimator of the gradient gt := \u2207`t(wt) at iteration t, and establishes a \u201cvariance\u201d bound for this estimator. To simplify notations, here and in the rest of the paper we use Et[\u00b7] to denote the conditional expectation with respect to all randomness up to time t.\nLemma 3.3. The vector g\u0303t is an unbiased estimator of the gradient gt := \u2207`t(wt), that is Et[g\u0303t] = gt. In addition, for all t we have Et[\u2016g\u0303t\u201622] 6 8B2d/k.\nFor a proof of the lemma, see (Hazan & Koren, 2011). We now turn to prove Theorem 3.1.\nProof (of Theorem 3.1). First note that as \u2016wt\u20162 6 B, we clearly have \u2016w\u0304\u20162 6 B. Taking the expectation of (4) with respect to the randomization of the algorithm, and letting G2 := maxtEt[\u2016g\u0303t\u201622], we obtain\nE [ m\u2211 t=1 g>t (wt \u2212w?) ] 6 2B2 \u03b7 + \u03b7 2 G2m .\nOn the other hand, the convexity of `t gives `t(wt)\u2212 `t(w?) 6 g>t (wt \u2212 w?). Together with the above this implies that for \u03b7 = 2B/G \u221a m,\nE\n[ 1\nm m\u2211 t=1 `t(wt)\n] 6 1\nm m\u2211 t=1 `t(w?) + 2 BG\u221a m .\nTaking the expectation of both sides with respect to the random choice of the training set, and using G 6 2B \u221a 2d/k (according to Lemma 3.3), we get\nE\n[ 1\nm m\u2211 t=1 LD(wt)\n] 6 LD(w?) + 4B 2 \u221a 2d\nkm .\nFinally, recalling the convexity of LD and using Jensen\u2019s inequality, the Theorem follows."}, {"heading": "3.2. Lasso regression", "text": "We now turn to describe our algorithm for Lasso regression in the LAO setting, in which we would like to solve the problem\nmin w\u2208Rd\nLD(w) s.t. \u2016w\u20161 6 B . (5)\nThe algorithm we provide for this problem is based on a stochastic variant of the EG algorithm (Kivinen & Warmuth, 1997), that employs multiplicative updates\nAlgorithm 2 AELR Parameters: B, \u03b7 > 0 Input: training set S = {(xt, yt)}t\u2208[m] and k > 0 Output: regressor w\u0304 with \u2016w\u0304\u20161 6 B 1: Initialize z+1 \u2190 1d , z \u2212 1 \u2190 1d\n2: for t = 1 to m do 3: wt \u2190 (z+t \u2212 z\u2212t ) \u00b7B/(\u2016z+t \u20161 + \u2016z\u2212t \u20161) 4: for r = 1 to k do 5: Pick it,r \u2208 [d] uniformly and observe xt[it,r] 6: x\u0303t,r \u2190 dxt[it,r] \u00b7 eit,r 7: end for 8: x\u0303t \u2190 1k \u2211k r=1 x\u0303t,r 9: Choose jt \u2208 [d] with probability |w[j]|/\u2016w\u20161, and observe xt[jt]\n10: \u03c6\u0303t \u2190 \u2016wt\u20161 sign(wt[jt])xt[jt]\u2212 yt 11: g\u0303t \u2190 \u03c6\u0303t \u00b7 x\u0303t 12: for i = 1 to d do 13: g\u0304t[i]\u2190 clip(g\u0303t[i], 1/\u03b7) 14: z+t+1[i]\u2190 z + t [i] \u00b7 exp(\u2212\u03b7 g\u0304t[i]) 15: z\u2212t+1[i]\u2190 z \u2212 t [i] \u00b7 exp(+\u03b7 g\u0304t[i]) 16: end for 17: end for 18: w\u0304\u2190 1m \u2211m t=1 wt\nbased on an estimation of the gradients \u2207`t. The multiplicative nature of the algorithm, however, makes it highly sensitive to the magnitude of the updates. To make the updates more robust, we \u201cclip\u201d the entries of the gradient estimator so as to prevent them from getting too large. Formally, this is accomplished via the following \u201cclip\u201d operation:\nclip(x, c) := max{min{x, c},\u2212c}\nfor x \u2208 R and c > 0. This clipping has an even stronger effect in the more general setting we consider in Section 4.\nWe give our Attribute Efficient Lasso Regression (AELR) algorithm in Algorithm 2, and establish a corresponding risk bound in the following theorem.\nTheorem 3.4. Assume the distribution D is such that \u2016x\u2016\u221e 6 1 and |y| 6 B with probability 1. Let w\u0304 be the output of AELR, when run with \u03b7 = 14B2 \u221a 2k log 2d 5md , Then, \u2016w\u0304\u20161 6 B and for any w? \u2208 Rd with \u2016w?\u20161 6 B we have\nE [LD(w\u0304)] 6 LD(w?) + 4B 2\n\u221a 10d log 2d\nkm ,\nprovided that m > log 2d."}, {"heading": "3.2.1. Analysis", "text": "In the rest of the section, for a vector v we let v2 denote the vector for which v2[i] = (v[i])2 for all i.\nIn order to prove Theorem 3.4, we first consider the augmented vectors z\u2032t := (z + t , z \u2212 t ) \u2208 R2d and g\u0304\u2032t := (g\u0304t,\u2212g\u0304t) \u2208 R2d, and let pt := z\u2032t/\u2016z\u2032t\u20161. For these vectors, we have the following.\nLemma 3.5. m\u2211 t=1 p>t g\u0304 \u2032 t 6 min i\u2208[2d] m\u2211 t=1 g\u0304\u2032t[i] + log 2d \u03b7 + \u03b7 m\u2211 t=1 p>t (g\u0304 \u2032 t) 2\nThe lemma is a consequence of a second-order regret bound for the Multiplicative-Weights algorithm, essentially due to (Clarkson et al., 2010). By means of this lemma, we establish a risk bound with respect to the \u201cclipped\u201d linear functions g\u0304>t w. Lemma 3.6. Assume that \u2016Et[g\u03032t ]\u2016\u221e 6 G2 for all t, for some G > 0. Then, for any \u2016w?\u20161 6 B, we have\nE [ m\u2211 t=1 g\u0304>t wt ] 6 E [ m\u2211 t=1 g\u0304>t w? ] +B ( log 2d \u03b7 + \u03b7G2m ) Our next step is to relate the risk generated by the linear functions g\u0303>t w, to that generated by the \u201cclipped\u201d functions g\u0304>t w. Lemma 3.7. Assume that \u2016Et[g\u03032t ]\u2016\u221e 6 G2 for all t, for some G > 0. Then, for 0 < \u03b7 6 1/2G we have\nE [ m\u2211 t=1 g\u0303>t wt ] 6 E [ m\u2211 t=1 g\u0304>t wt ] + 4B\u03b7G2m .\nThe final component of the proof is a \u201cvariance\u201d bound, similar to that of Lemma 3.3.\nLemma 3.8. The vector g\u0303t is an unbiased estimator of the gradient gt := \u2207`t(wt), that is Et[g\u0303t] = gt. In addition, for all t we have \u2016Et[g\u0303t]2\u2016\u221e 6 8B2d/k.\nFor the complete proofs, refer to (Hazan & Koren, 2011). We are now ready to prove Theorem 3.4.\nProof (of Theorem 3.4). Since \u2016wt\u20161 6 B for all t, we obtain \u2016w\u0304\u20162 6 B. Next, note that as Et[g\u0303t] = gt, we have E[ \u2211m t=1 g\u0303 > t wt] = E[ \u2211m t=1 g > t wt]. Putting Lemmas 3.6 and 3.7 together, we get for \u03b7 6 1/2G that\nE [ T\u2211 t=1 g>t (wt \u2212w?) ] 6 B ( log 2d \u03b7 + 5\u03b7G2m ) .\nProceeding as in the proof of Theorem 3.1, and choos-\ning \u03b7 = 1G \u221a log 2d 5m , we obtain the bound\nE [LD(w\u0304)] 6 LD(w?) + 2BG\n\u221a 5 log 2d\nm .\nNote that for this choice of \u03b7 we indeed have \u03b7 6 1/2G, as we originally assumed that m > log 2d. Finally, putting G = 2B \u221a 2d/k as implied by Lemma 3.8, we obtain the bound in the statement of the theorem."}, {"heading": "4. Support-vector regression", "text": "In this section we show how our approach can be extended to deal with loss functions other than the squared loss, of the form\n`(w>x, y) = f(w>x\u2212 y) , (6)\n(with f real and convex) and most importantly, with the \u03b4-insensitive absolute loss function of SVR, for which f(x) = |x|\u03b4 := max{|x| \u2212 \u03b4, 0} for some fixed 0 6 \u03b4 6 B (recall that in our results we assume the labels yt have |yt| 6 B). For concreteness, we consider only the 2-norm variant of the problem (as in the standard formulation of SVR)\u2014the results we obtain can be easily adjusted to the 1-norm setting. We overload notation, and keep using the shorthand `t(w) := `(w\n>xt, yt) for referring the loss function induced by the instance (xt, yt).\nIt should be highlighted that our techniques can be adapted to deal with many other common loss functions, including \u201cclassification\u201d losses (i.e., of the form `(w>x, y) = f(y \u00b7 w>x)). Due to its importance and popularity, we chose to describe our method in the context of SVR.\nUnfortunately, there are strong indications that SVR learning (more generally, learning with non-smooth loss function) in the LAO setting is impossible via our approach of unbiased gradient estimations (see CesaBianchi et al. 2011 and the references therein). For that reason, we make two modifications to the learning setting: first, we shall henceforth relax the budget constraint to allow k observed attributes per instance in expectation; and second, we shall aim for biased gradient estimators, instead of unbiased as before.\nTo obtain such biased estimators, we uniformly \u03b5approximate the function f by an analytic function f\u03b5 and learn with the approximate loss function `\u03b5t (w) = f\u03b5(w\n>xt \u2212 yt) instead. Clearly, any \u03b5suboptimal regressor of the approximate problem is an 2\u03b5-suboptimal regressor of the original problem. For learning the approximate problem we use a novel technique, inspired by (Cesa-Bianchi et al., 2011), for estimating gradients of analytic loss functions. Our estimators for\u2207`\u03b5t can then be viewed as biased estimators of \u2207`t (we note, however, that the resulting bias might be quite large).\nProcedure 3 GenEst Parameters: {an}\u221en=0 \u2014 Taylor coefficients of f \u2032 Input: regressor w, instance (x, y) Output: \u03c6\u0302 with E[\u03c6\u0302] = f \u2032(w>x\u2212 y) 1: Let N = d4B2e. 2: Choose n > 0 with probability Pr[n] = (12 ) n+1\n3: if n 6 2 log2N then 4: for r = 1, . . . , n do 5: Choose j \u2208 [d] with probability w[j]2/\u2016w\u201622, and observe x[j] 6: \u03b8\u0303r \u2190 \u2016w\u201622 x[j]/w[j]\u2212 y 7: end for 8: else 9: for r = 1, . . . , n do\n10: Choose j1, . . . , jN \u2208 [d] w.p. w[j]2/\u2016w\u201622, (independently), and observe x[j1], . . . ,x[jN ]\n11: \u03b8\u0303r \u2190 1N \u2211N s=1\u2016w\u201622 x[js]/w[js]\u2212 y 12: end for 13: end if 14: \u03c6\u0302\u2190 2n+1an \u00b7 \u03b8\u03031\u03b8\u03032 \u00b7 \u00b7 \u00b7 \u03b8\u0303n"}, {"heading": "4.1. Estimators for analytic loss functions", "text": "Let f : R \u2192 R be a real, analytic function (on the entire real line). The derivative f \u2032 is thus also analytic and can be expressed as f \u2032(x) = \u2211\u221e n=0 anx\nn where {an} are the Taylor expansion coefficients of f \u2032.\nIn Procedure 3 we give an unbiased estimator of f \u2032(w>x \u2212 y) in the LAO setting, defined in terms of the coefficients {an} of f \u2032. For this estimator, we have the following (proof is omitted).\nLemma 4.1. The estimator \u03c6\u0302 is an unbiased estimator of f \u2032(w>x \u2212 y). Also, assuming \u2016x\u20162 6 1, \u2016w\u20162 6 B and |y| 6 B, the second-moment E[\u03c6\u03022] is upper bounded by exp(O(log2B)), provided that the Taylor series of f \u2032(x) converges absolutely for |x| 6 1. Finally, the expected number of attributes of x used by this estimator is no more than 3."}, {"heading": "4.2. Approximating SVR", "text": "In order to approximate the \u03b4-insensitive absolute loss function, we define\nf\u03b5(x) = \u03b5\n2 \u03c1 ( x\u2212 \u03b4 \u03b5 ) + \u03b5 2 \u03c1 ( x+ \u03b4 \u03b5 ) \u2212 \u03b4\nwhere \u03c1 is expressed in terms of the error function erf,\n\u03c1(x) = x erf(x) + 1\u221a \u03c0 e\u2212x 2 ,\nand consider the approximate loss functions `\u03b5t (w) = f\u03b5(w >xt \u2212 yt). Indeed, we have the following.\nAlgorithm 4 AESVR Parameters: B, \u03b4, \u03b7 > 0 and accuracy \u03b5 > 0 Input: training set S = {(xt, yt)}t\u2208[m] and k > 0 Output: regressor w\u0304 with \u2016w\u0304\u20162 6 B 1: Let a2n = 0 for n > 0, and\na2n+1 = 2\u221a \u03c0 \u00b7 (\u22121) n n!(2n+ 1) , n > 0 (7)\n2: Execute algorithm 1 with lines 8\u20139 replaced by: x\u2032t \u2190 xt/\u03b5 y+t \u2190 (yt + \u03b4)/\u03b5, y\u2212t \u2190 (yt \u2212 \u03b4)/\u03b5 \u03c6\u0303t \u2190 12 [GenEst(wt,x \u2032 t, y + t ) + GenEst(wt,x \u2032 t, y \u2212 t )] 3: Return the output w\u0304 of the algorithm\nClaim 4.2. For any \u03b5 > 0, f\u03b5 is convex, analytic on the entire real line and\nsup x\u2208R |f\u03b5(x)\u2212 |x|\u03b4| 6 \u03b5 .\nThe claim follows easily from the identity |x|\u03b4 = 12 |x\u2212 \u03b4| + 12 |x + \u03b4| \u2212 \u03b4. In addition, for using Procedure 3 we need the following simple observation, that follows immediately from the series expansion of erf(x).\nClaim 4.3. \u03c1\u2032(x) = \u2211\u221e n=0 a2n+1x\n2n+1, with the coefficients {a2n+1}n>0 given in (7).\nWe now give the main result of this section, which is a sample complexity bound for the Attribute Efficient SVR (AESVR) algorithm, given in Algorithm 4.\nTheorem 4.4. Assume the distribution D is such that \u2016x\u20162 6 1 and |y| 6 B with probability 1. Then, for any w? \u2208 Rd with \u2016w?\u20162 6 B, we have E [LD(w\u0304)] 6 LD(w?) + \u03b5 where w\u0304 is the output of AESVR (with \u03b7 properly tuned) on a training set of size\nm = O\n( d\nk\n) \u00b7 exp ( O ( log2 B\n\u03b5\n)) . (8)\nThe algorithm queries at most k+ 6 attributes of each instance in expectation.\nProof. First, note that for the approximate loss functions `\u03b5t we have\n\u2207`\u03b5t (wt) = 12 [ \u03c1\u2032(w>t x \u2032 t \u2212 y+t ) + \u03c1\u2032(w>t x\u2032t \u2212 y\u2212t ) ] \u00b7 xt .\nHence, Lemma 4.1 and Claim 4.3 above imply that g\u0303t in Algorithm 4 is an unbiased estimator of \u2207`\u03b5t (wt). Furthermore, since \u2016x\u2032t\u20162 6 1\u03b5 and |y \u00b1 t | 6 2B\u03b5 , according to the same lemma we have Et[\u03c6\u0303 2 t ] = exp(O(log2 B\u03b5 )). Repeating the proof of Lemma 3.3,\nwe then have\nEt[\u2016g\u0303t\u201622] = Et[\u03c6\u03032t ] \u00b7Et[\u2016x\u0303t\u201622] = exp(O(log 2 B \u03b5 )) \u00b7\nd k .\nReplacing G2 in the proof of theorem 3.1 with the above bound, we get for the output of Algorithm 4,\nE [LD(w\u0304)] 6 LD(w?) + exp(O(log 2 B \u03b5 ))\n\u221a d\nkm ,\nwhich imply that for obtaining an \u03b5-accurate regressor w\u0304 of the approximate problem, it is enough to take m as given in (8). However, claim 4.2 now gives that w\u0304 itself is an 2\u03b5-accurate regressor of the original problem, and the proof is complete."}, {"heading": "5. Experiments", "text": "In this section we give experimental evidence that support our theoretical bounds, and demonstrate the superior performance of our algorithms compared to the state of the art. Naturally, we chose to compare our AERR and AELR algorithms 5 with the AER algorithm of (Cesa-Bianchi et al., 2010). We note that AER is in fact a hybrid algorithm that combines 1- norm and 2-norm regularizations, thus we use it for benchmarking in both the Ridge and Lasso settings.\nWe essentially repeated the experiments of (CesaBianchi et al., 2010) and used the popular MNIST digit recognition dataset (LeCun et al., 1998). Each instance in this dataset is a 28 \u00d7 28 image of a handwritten digit 0\u2212 9. We focused on the \u201c3 vs. 5\u201d task, on a subset of the dataset that consists of the \u201c3\u201d digits (labeled \u22121) and the \u201c5\u201d digits (labeled +1). We applied the regression algorithms to this task by regressing to the labels.\nIn all our experiments, we randomly split the data to training and test sets, and used 10-fold cross-validation for tuning the parameters of each algorithm. Then, we ran each algorithm on increasingly longer prefixes of the dataset and tracked the obtained squared-error on the test set. For faithfully comparing partial- and full-information algorithms, we also recorded the total number of attributes used by each algorithm.\nIn our first experiment, we executed AELR, AER and (offline) Lasso on the \u201c3 vs. 5\u201d task. We allowed both AELR and AER to use only k = 4 pixels of each training image, while giving Lasso unrestricted access to the entire set of attributes (total of 784) of each instance. The results, averaged over 10 runs on\n5The AESVR algorithm is presented mainly for theoretical considerations, and was not implemented in the experiments.\nrandom train/test splits, are presented in Figure 1. Note that the x-axis represents the cumulative number of attributes used for training. The graph ends at roughly 48500 attributes, which is the total number of attributes allowed for the partial-information algorithms. Lasso, however, completes this budget after seeing merely 62 examples.\nAs we see from the results, AELR keeps its test error significantly lower than that of AER along the entire execution, almost bridging the gap with the fullinformation Lasso. Note that the latter has the clear advantage of being an offline algorithm, while both AELR and AER are online in nature. Indeed, when we compared AELR with an online Lasso solver, our algorithm obtained test error almost 10 times better.\nIn the second experiment, we evaluated AERR, AER and Ridge regression on the same task, but now allowing the partial-information algorithms to use as much as k = 56 pixels (which amounts to 2 rows) of each instance. The results of this experiment are given in Figure 2. We see that even if we allow the algorithms to view a considerable number of attributes, the gap between AERR and AER is large."}, {"heading": "6. Conclusions and Open Questions", "text": "We have considered the fundamental problem of statistical regression analysis, and in particular Lasso and Ridge regression, in a setting where the observation upon each training instance is limited to a few attributes, and gave algorithms that improve over the state of the art by a leading order term with respect to the sample complexity. This resolves an open question of (Cesa-Bianchi et al., 2010). The algorithms are efficient, and give a clear experimental advantage in\npreviously-considered benchmarks.\nFor the challenging case of regression with general convex loss functions, we describe exponential improvement in sample complexity, which apply in particular to support-vector regression.\nIt is interesting to resolve the sample complexity gap of 1\u03b5 which still remains for Lasso regression, and to improve upon the pseudo-polynomial factor in \u03b5 for support-vector regression. In addition, establishing analogous bounds for our algorithms that hold with high probability (other than in expectation) appears to be non-trivial, and is left for future work.\nAnother possible direction for future research is adapting our results to the setting of learning with (randomly) missing data, that was recently investigated\u2014 see e.g. (Rostamizadeh et al., 2011; Loh & Wainwright, 2011). The sample complexity bounds our algorithms obtain in this setting are slightly worse than those presented in the current paper, and it is interesting to check if one can do better."}, {"heading": "Acknowledgments", "text": "We thank Shai Shalev-Shwartz for several useful discussions, and the anonymous referees for their detailed comments."}], "references": [{"title": "Learning with restricted focus of attention", "author": ["S. Ben-David", "E. Dichterman"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "Ben.David and Dichterman,? \\Q1998\\E", "shortCiteRegEx": "Ben.David and Dichterman", "year": 1998}, {"title": "Online learning of noisy data", "author": ["N. Cesa-Bianchi", "S. Shalev-Shwartz", "O. Shamir"], "venue": "IEEE Transactions on Information Theory,", "citeRegEx": "Cesa.Bianchi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Cesa.Bianchi et al\\.", "year": 2011}, {"title": "Sublinear optimization for machine learning", "author": ["K.L. Clarkson", "E. Hazan", "D.P. Woodruff"], "venue": "IEEE 51st Annual Symposium on Foundations of Computer Science,", "citeRegEx": "Clarkson et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Clarkson et al\\.", "year": 2010}, {"title": "Decision theoretic generalizations of the PAC model for neural net and other learning applications", "author": ["D. Haussler"], "venue": "Information and computation,", "citeRegEx": "Haussler,? \\Q1992\\E", "shortCiteRegEx": "Haussler", "year": 1992}, {"title": "Optimal algorithms for ridge and lasso regression with partially observed attributes", "author": ["E. Hazan", "T. Koren"], "venue": "Arxiv preprint arXiv:1108.4559,", "citeRegEx": "Hazan and Koren,? \\Q2011\\E", "shortCiteRegEx": "Hazan and Koren", "year": 2011}, {"title": "Logarithmic regret algorithms for online convex optimization", "author": ["E. Hazan", "A. Agarwal", "S. Kale"], "venue": "Machine Learning,", "citeRegEx": "Hazan et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Hazan et al\\.", "year": 2007}, {"title": "On the complexity of linear prediction: Risk bounds, margin bounds, and regularization", "author": ["S.M. Kakade", "K. Sridharan", "A. Tewari"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Kakade et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Kakade et al\\.", "year": 2008}, {"title": "Exponentiated gradient versus gradient descent for linear predictors", "author": ["J. Kivinen", "M.K. Warmuth"], "venue": "Information and Computation,", "citeRegEx": "Kivinen and Warmuth,? \\Q1997\\E", "shortCiteRegEx": "Kivinen and Warmuth", "year": 1997}, {"title": "Gradient-based learning applied to document recognition", "author": ["Y. LeCun", "L. Bottou", "Y. Bengio", "P. Haffner"], "venue": "Proceedings of the IEEE,", "citeRegEx": "LeCun et al\\.,? \\Q1998\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 1998}, {"title": "High-dimensional regression with noisy and missing data: Provable guarantees with non-convexity", "author": ["P.L. Loh", "M.J. Wainwright"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Loh and Wainwright,? \\Q2011\\E", "shortCiteRegEx": "Loh and Wainwright", "year": 2011}, {"title": "Learning with missing features", "author": ["A. Rostamizadeh", "A. Agarwal", "P. Bartlett"], "venue": "In The 27th Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "Rostamizadeh et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Rostamizadeh et al\\.", "year": 2011}, {"title": "The nature of statistical learning theory", "author": ["V.N. Vapnik"], "venue": null, "citeRegEx": "Vapnik,? \\Q1995\\E", "shortCiteRegEx": "Vapnik", "year": 1995}, {"title": "Online convex programming and generalized infinitesimal gradient ascent", "author": ["M. Zinkevich"], "venue": "In Proceedings of the 20th international conference on Machine learning,", "citeRegEx": "Zinkevich,? \\Q2003\\E", "shortCiteRegEx": "Zinkevich", "year": 2003}], "referenceMentions": [{"referenceID": 1, "context": "By that, we resolve an open problem recently posed by Cesa-Bianchi et al. (2010). Experiments show the theoretical bounds to be justified by superior performance compared to the state of the art.", "startOffset": 54, "endOffset": 81}, {"referenceID": 1, "context": "Recently, Cesa-Bianchi et al. (2010)", "startOffset": 10, "endOffset": 37}, {"referenceID": 1, "context": "For SVR, the bound is obtained by additionally incorporating the methods of (Cesa-Bianchi et al., 2011).", "startOffset": 76, "endOffset": 103}, {"referenceID": 3, "context": "We assume the standard framework of statistical learning (Haussler, 1992), in which the pairs (x, y) follow a joint probability distribution D over R\u00d7R.", "startOffset": 57, "endOffset": 73}, {"referenceID": 11, "context": "\u2022 Support-vector regression: p = 2 and the \u03b4insensitive absolute loss (Vapnik, 1995),", "startOffset": 70, "endOffset": 84}, {"referenceID": 5, "context": "(Hazan et al., 2007).", "startOffset": 0, "endOffset": 20}, {"referenceID": 1, "context": "See (Cesa-Bianchi et al., 2011) for a related impossibility result.", "startOffset": 4, "endOffset": 31}, {"referenceID": 12, "context": "Our algorithm for the LAO setting is based on a randomized Online Gradient Descent (OGD) strategy (Zinkevich, 2003).", "startOffset": 98, "endOffset": 115}, {"referenceID": 2, "context": "Our gradient estimators make use of an importance-sampling method inspired by (Clarkson et al., 2010).", "startOffset": 78, "endOffset": 101}, {"referenceID": 2, "context": "The lemma is a consequence of a second-order regret bound for the Multiplicative-Weights algorithm, essentially due to (Clarkson et al., 2010).", "startOffset": 119, "endOffset": 142}, {"referenceID": 1, "context": "For learning the approximate problem we use a novel technique, inspired by (Cesa-Bianchi et al., 2011), for estimating gradients of analytic loss functions.", "startOffset": 75, "endOffset": 102}, {"referenceID": 8, "context": ", 2010) and used the popular MNIST digit recognition dataset (LeCun et al., 1998).", "startOffset": 61, "endOffset": 81}, {"referenceID": 10, "context": "(Rostamizadeh et al., 2011; Loh & Wainwright, 2011).", "startOffset": 0, "endOffset": 51}], "year": 2012, "abstractText": "We consider the most common variants of linear regression, including Ridge, Lasso and Support-vector regression, in a setting where the learner is allowed to observe only a fixed number of attributes of each example at training time. We present simple and efficient algorithms for these problems: for Lasso and Ridge regression they need the same total number of attributes (up to constants) as do full-information algorithms, for reaching a certain accuracy. For Support-vector regression, we require exponentially less attributes compared to the state of the art. By that, we resolve an open problem recently posed by Cesa-Bianchi et al. (2010). Experiments show the theoretical bounds to be justified by superior performance compared to the state of the art.", "creator": "LaTeX with hyperref package"}}}