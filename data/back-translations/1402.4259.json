{"id": "1402.4259", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Feb-2014", "title": "Extracting Networks of Characters and Places from Written Works with CHAPLIN", "abstract": "We propose a tool that is able to collect information about social networks from narrative texts. It is called CHAPLIN, CHAracters and PLaces Interaction Network and is implemented in VB.NET. Characters and locations of narrative works are extracted in a list of raw words. By means of the user interface, the user selects names from them. After this selection, the tool allows the user to enter some parameters and, according to them, creates a network in which the nodes are the characters and places and the edges of their interactions. Edges are labeled by performances. Output is in a GM file written in the DOT scripting language, rendered using the free open source software Graphviz.", "histories": [["v1", "Tue, 18 Feb 2014 09:35:19 GMT  (445kb)", "http://arxiv.org/abs/1402.4259v1", "Keywords: Literary experiments, Networks, Graph Visualization Software, Text Data Analysis"]], "COMMENTS": "Keywords: Literary experiments, Networks, Graph Visualization Software, Text Data Analysis", "reviews": [], "SUBJECTS": "cs.CY cs.CL", "authors": ["roberto marazzato", "amelia carolina sparavigna"], "accepted": false, "id": "1402.4259"}, "pdf": {"name": "1402.4259.pdf", "metadata": {"source": "CRF", "title": "Extracting Networks of Characters and Places from Written Works with CHAPLIN Extracting Networks of Characters and Places from Written Works with CHAPLIN", "authors": ["Roberto Marazzato", "Amelia Carolina Sparavigna"], "emails": [], "sections": [{"heading": null, "text": "texts. Its name is CHAPLIN, CHAracters and PLaces Interaction Network, implemented in VB.NET. Characters and places of the narrative works are extracted in a list of raw words. Aided by the interface, the user selects names out of them. After this choice, the tool allows the user to enter some parameters, and, according to them, creates a network where the nodes are the characters and places, and the edges their interactions. Edges are labelled by performances. The output is a GV file, written in the DOT graph scripting language, which is rendered by means of the free open source software Graphviz.\nKeywords: Literary experiments, Networks, Graph Visualization Software, Text Data Analysis."}, {"heading": "1. Introduction", "text": "The analysis of social network is relevant for several theoretical and applied sciences. Among them, we find the political and the management sciences [1-3], and all the sciences based on the gathering of information. In their frameworks, some questions concerning subjects, objects, places, times and motivations are fundamental to have a plot of actual situations. As remarked in [4], these questions, usually mentioned in the news style as the Five Ws (who, what, where, when and why), are the same the scholars of Literature wish to answer after studying literary works. Any automatic text analysis, as the one we are proposing here, needs to determine what we expect to find in a novel or play, that is, the main characters about whom the work is pivoting, their interactions and also time and places and the motivations of their behaviours. Recently, a Literary Laboratory has been created at Stanford. This laboratory aims obtaining a machine analysis of texts available in digital libraries. People in the Laboratory, founded in 2010 by Matthew Jockers and Franco Moretti, are pursuing literary researches of a digital and quantitative nature, working in a place that we could consider as a modern times version of an ancient scriptorium. One of the projects of the laboratory is the study of plots in terms of the network theory [5-7]. However, other research groups are working on projects of automatic analysis of texts and plots too, and the number of these researches is strongly increasing, due to the importance of the task. We have already mentioned Ref.4, where the authors are proposing an algorithm for inferring social networks, which is outperforming co-occurrence baselines as well as statistical classifiers. It works on an input text where personal and geographical names have been marked up previously. Social relationships are stated by dialogues and locations at which they are active, and by the sentences that attest to these claims. Another approach was proposed in Reference 8; the used method allowed the researchers to take a systematic and wide look at a large corpus of texts. According to [8], this method, which is based on an accurate detection of face-to-face conversations, can be used like a complement of the narrower and deeper analysis performed by literary scholars. In the publication, it is also shown that as the number of characters in a novel grows, so too does the cohesion, interconnectedness and balance of their social network [8].\nBesides the common scope of the previously mentioned publications, the aim of our CHAPLIN software is to provide a friendly tool, able to perform basic descriptive statistics evaluated from correlation concepts, to help the analysis of a literary text. The whole process is automated, except the phase in which human intervention is strictly needed in recognizing characters and places. As we will show, the result is a quite readable graph of character/place network. The name CHAPLIN, CHAracters and PLaces Interaction Network, we gave to the tool is clearly inherited from that of Sir Charles Spencer Chaplin. From the tool we obtain graphs of netwroks that, as the images of the silent films acted by Charlie Chaplin, are information pictures. Like their \u201ctitle cards\u201d, we add to the edges some labels to give quantitative data too."}, {"heading": "2. Purpose of CHAPLIN", "text": "This software project started with the aim of creating a tool to automate the whole process of extracting a meaningful graph representing the network of characters and places from a literary text. It is clear that such automation cannot be complete: a certain amount of human intervention is needed for basic character and place recognition. Thus, another requirement for this tool is supporting literati in this task. The required input is a set of text files stored in a folder, containing the full text of the literary work to process; their content can be viewed as a set\n{ }),...,1(; ciCT i \u2208= (1)\nThe first transformation to do is automatically extracting a well chosen subset of the complete set of words appearing in T, by means of a suitable function X, which at the same time splits each iC into single words and selects them under some reasonable constraint B, such as \u201ctake only words long more than...\u201d, \u201ctake only capitalized words\u201d, compositions of the previous and so on; let's name this set as \u201craw words\u201d:\n{ } ),(),...,1(; BTXwjwW j =\u2208= (2)\nClearly, W contains the names of all characters and places of the work being processed, mixed with many other words; now the user begins his recognition task, in order to extract the names of characters and places, so generating the set\n{ }),...,1(; nknN k \u2208= (3)\nwhere each name\n{ }1),,...,1(;, \u2265\u03bd\u2208= vpvn pkk (4)\nis a set of variants; to each name are associated, through two functions, its main variant and the property of being a character or a place:\n1,:)( kknname \u03bd=\n{ }placecharntype k ,)( \u2208 (5)\nThe use of variants is needed as in many works the single occurrences of a certain name can vary in their form or even appear to be quite different from the main form, for linguistic and/or narrative reasons, such as case and number inflection, epithets and so on.\nThe next step involves finding the occurrences of each variant, grouping them under the corresponding name, so generating a frequency distribution, and the interaction matrix:\n),();( hkk nnIInf = (6)\nEach element of I represents how tight the character/place kn is connected to hn , based on the sum of the values returned by the proximity function\n[ ] RN \u2282\u2192\u2206\u03a0 1,0:)( (7)\nfor each couple of occurrences of a variant of kn and hn in T. In the previous formula, \u2206 is the distance, in words, between the first and the second occurrence. As a proximity function,\n0)(:\n)()(\n1)0(\n2121\n=\u2206\u03a0\u21d2\u2206>\u2206\u2206\u2203\n\u2206\u03a0<\u2206\u03a0\u21d2\u2206>\u2206\n=\u03a0\nss\n(8)\nThe values of I are then obtained by normalizing the above mentioned sums by their maximum value, so that\n[ ] ),(1,0),( hkhk nnnnI \u2200\u2282\u2208 R (9)\nIn the written work could appear a lot of secondary characters and places; in addition to that, some of them could be very weakly linked to each other. In order to avoid very complex and nearly meaningless graphs, one should select only the most relevant ones. By setting a threshold value for the elements of both I and f (let's call them TI and Tf , we obtain two entities which are ready to be represented through a graph:\n{ }\n   \u2265\u2227\u2265\u2227\u2265\u21d0 =\n\u2265\u2208=\nelse\nfnffnfInnInnI nnII\nfnfNnN\nThTkThkhk hk\nT\n0\n)()(),(),( ),(':'\n)'(:''\n(10)\nEach element n' in N' is a node of the graph, carrying its name )'(nname , its type )'(ntype , and\nits narrative strength )'(nf . Only non null elements in I' result in a non oriented edge between\nkn and hn .The constraints imposed to choose the elements from I into I' ensure that no orphan edge will be generated. Orphan nodes, representing meaningful characters or places with scarce connection to others, could occur."}, {"heading": "3. Interface and output", "text": "We implemented CHAPLIN in VB.NET. Fig. 1 reports the user interface, including\n\u2022 Basic commands \u2013 upper part of the window \u2022 Commands used to extract raw words (settings, button) \u2013 just below \u2022 Lists aiding the user in selecting raw words into names\n\u2022 Commands for creating the DOT script graph (settings, button) \u2013 right part of the windows; for a better performance, two separate threshold values have been used for\ncharacters and for places\nThe output is a GV file, written in the DOT graph scripting language [9]. It can be rendered by means of the free open source software Graphviz [10]."}, {"heading": "4. An example: Das Nibelungenlied", "text": "To test the features of CHAPLIN, we decided to process the original version of the epic poem Das Nibelungenlied, in his original early German text (Mittelhochdeutsch). The full text, freely available online [11], consists of 39 chapters (\u00c2ventiuren). Fig. 2 is the graph generated with the following values for the processing parameters:\n35.0\n)(40.0\n)(20.0\n40\n=\n=\n=\n=\u2206\nT\nT\nT\ns\nI\nplacesf\ncharsf (11)\nThe nodes of characters and places have a different colour. The following can be noticed:\n\u2022 Many secondary characters and places don't appear in the graph. \u2022 The protagonist of the poem is Sigfried (S\u00eevrit), but he doesn't obtain the best score as\ncharacter; Hagen von Tronege does, as his action continues after he kills Sigfried.\n\u2022 The starkest link connects Hagen to Tronege (the correspondence of this legendary town to a real place is still discussed by the experts [12]), as he is constantly named with his\ncomplete epithet.\n\u2022 The river Rhine (R\u00ecn), and the city of Worms (Wormez), the capital of the kingdom of Burgundians (at least in this poem), appear as \u201cisolated places\u201d: this means that such\ngeographical elements are linked to \u201ceverything and nothing\u201d, as they are always present in each chapter, but never so strongly connected to any character."}, {"heading": "5. Conclusion", "text": "CHAPLIN applies basic descriptive statistics and correlation concepts to the analysis of a literary text. The whole process is automated, except the phase in which human intervention is strictly needed. The result is a well readable graph where characters and places are plotted as nodes, and the narrative connection between them corresponds to an edge. The importance of each character/place, and the strength of each plotted link are represented by means of a score varying between 0 and 1. The name we gave to this software is clearly inherited from that of Sir Charles Spencer Chaplin. The first version was released on Feb 7, 2014, exactly 100 year after the first appearance of the Tramp (Charlot). It is then an homage we paid to one of the most relevant persons of the seventh art."}], "references": [], "referenceMentions": [], "year": 2014, "abstractText": "We are proposing a tool able to gather information on social networks from narrative texts. Its name is CHAPLIN, CHAracters and PLaces Interaction Network, implemented in VB.NET. Characters and places of the narrative works are extracted in a list of raw words. Aided by the interface, the user selects names out of them. After this choice, the tool allows the user to enter some parameters, and, according to them, creates a network where the nodes are the characters and places, and the edges their interactions. Edges are labelled by performances. The output is a GV file, written in the DOT graph scripting language, which is rendered by means of the free open source software Graphviz.", "creator": "PrimoPDF http://www.primopdf.com"}}}