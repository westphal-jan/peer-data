{"id": "1405.7295", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-May-2014", "title": "On the cost-complexity of multi-context systems", "abstract": "Multi-context systems provide a powerful framework for modelling information aggregation systems with heterogeneous argumentation components, but their execution can incur negligible costs. In this context, we focus on the cost complexity of such systems. To this end, we introduce cost-conscious multi-context systems, an extension of the non-monotonous multi-context system, taking into account the costs of executing semantic operators of the individual contexts. We formulate the concept of cost complexity for consistency and reasoning problems in MCSs. We then deliver a series of results related to gradually growing and narrowing classes of MCSs, and finally introduce a step-by-step cost-reducing algorithm that solves the reasoning problem for defined MCSs.", "histories": [["v1", "Wed, 28 May 2014 16:13:53 GMT  (15kb)", "https://arxiv.org/abs/1405.7295v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["peter nov\\'ak", "cees witteveen"], "accepted": false, "id": "1405.7295"}, "pdf": {"name": "1405.7295.pdf", "metadata": {"source": "CRF", "title": "On the cost-complexity of multi-context systems", "authors": ["Peter Nov\u00e1k"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n40 5.\n72 95\nv1 [\ncs .A\nI] 2\nMulti-context systems provide a powerful framework for modelling informationaggregation systems featuring heterogeneous reasoning components. Their execution can, however, incur non-negligible cost. Here, we focus on cost-complexity of such systems. To that end, we introduce cost-aware multi-context systems, an extension of non-monotonic multi-context systems framework taking into account costs incurred by execution of semantic operators of the individual contexts. We formulate the notion of cost-complexity for consistency and reasoning problems in MCSs. Subsequently, we provide a series of results related to gradually more and more constrained classes of MCSs and finally introduce an incremental costreducing algorithm solving the reasoning problem for definite MCSs."}, {"heading": "1 Introduction", "text": "Deployment of large-scale sensor networks and exploitation of heterogeneous databases concentrating various kinds of information about the real world opens new horizons in real-time information aggregation and processing systems. Sensed information can be instantly cross-validated, fused, reasoned about and further processed in real-time, so as to provide constant and up-to-date situational awareness for people, systems, or organisations. Such knowledge-intensive information-aggregation systems find applications in a range of industrial domains, from marine traffic monitoring to applications in supporting assisted living environments. With the grow of computing power, however, it\u2019s rather the resource costs incurred by running such systems, which pose an obstacle to their deployment, rather than the time-complexity of their execution. Such costs can include network bandwidth, electricity, battery life, but also direct financial costs of accessing 3rd party databases, or utilisation of costly communication channels, such as satellite data-links.\nNon-monotonic multi-context systems (MCS) introduced by Brewka & Eiter (2007) are a powerful framework for interlinking heterogeneous knowledge sources. The framework traces its origins back to the seminal work by Giunchiglia & Serafini (1994) on multi-language hierarchical logics. A multi-context system comprises a number of\nknowledge bases, contexts, each encapsulating a body of information, together with a corresponding mechanism for its semantic interpretation and reasoning with it. The flow of information among the knowledge bases is regulated by a set of bridge rules of the form \u201cif L is true according to the semantics of the context i and ..., then L\u2032 needs to be taken into account by the context j.\u201d Due to the abstraction from the particularities of the internal semantics of the individual contexts and the focus on analysis of the information flow between them in a rigorous manner, multi-context systems provide a suitable abstraction for modelling a wide range of information-aggregation systems, such as those mentioned above.\nConsider an information-aggregation system aiming at surveillance and anomaly detection in maritime traffic. Such a system would source a range of data elements from a deployed large-scale sensor network including radars or antennae and would cross-validate the information with that stored in local or remote databases providing data about vessel types, owners, etc. Similarly, an information-aggregation system supporting an assisted-living environment would continuously sense data about wellbeing of patients from a range of sensors and fuse it with relevant health records, etc. A typical query to such systems could aim at detection whether a vessel, or a patient might need operator\u2019s attention, such as whether a ship might be involved in suspicious activities, or whether a patient is possibly in a life threatening condition. Querying such physical information sources can, however, be relatively costly, while the timecomplexity of reasoning with such components plays a lesser role.\nWe model such information-aggregation systems as multi-context systems as follows. The contexts correspond to information-processing agents and informationsource adapters, each encapsulating a fragment of the information-fusion functionality of the system according to some internal semantics with an attached cost. The contexts are linked to each other by bridge rules prescribing the information flow within the aggregation process, typically from low-level sensory evidence and raw information retrieved from various databases to higher-level hypotheses a user might be interested in.\nTo facilitate such multi-context systems, here we propose the framework of costaware multi-context systems, an extension of the generic framework of non-monotonic multi-context systems (Brewka & Eiter, 2007). Subsequently, after introducing the notion of cost-complexity of algorithms over MCSs, in a series of analyses we provide worst-case cost-complexity upper bounds for problems of consistency and reasoning with general, definite and acyclic MCS. We conclude our discourse with an algorithm for incremental reasoning in definite MCSs, version of which we also implemented and deployed in METIS, a prototype system for maritime traffic surveillance (Hendriks & van de Laar, 2013; Velikova et al., 2014)."}, {"heading": "2 Cost-aware multi-context systems", "text": "We build the framework of cost-aware multi-context systems as an extension of the original non-monotonic multi-context systems by Brewka & Eiter (2007).\nDefinition 1 (logic suite). A logic suite L = (KB,BS,ACC, cost) is composed of the following components:\nKB is the set of well-formed finite knowledge bases ofL. We assume that each element of KB is a finite set and that \u2205 \u2208 KB;\nBS is the set of possible finite belief sets;\nACC : KB \u2192 2BS is a semantic operator which, given a knowledge base kb, returns a set of sets of acceptable beliefs, each with cardinality polynomial in the size of kb; and finally\ncost : KB \u2192 R+ is a cost function assigning to each knowledge base kb \u2208 KB, the cost associated with a single execution of the semantic operator ACC over kb. Consequently, cost(ACC) = maxkb\u2208KB cost(kb) denotes the maximal cost which can be incurred by invocation of ACC over the knowledge bases of KB.\nRelative to the original formulation, the definition above introduces several simplifications. We focus on the subclass of finite non-monotonic multi-context systems, those with finite knowledge bases and bridge rule sets. We also identify the acceptable belief sets returned by the semantic operator ACC with their poly-size kernels (c.f. Brewka & Eiter 2007).\nDefinition 2 (bridge rule). Let L = {L1, . . . , Ln} be a set of logic suites. An Libridge rule over L with 1 \u2264 i \u2264 n, is of the form\ns \u2190\u2212 (c1 : p1), . . . , (cj : pj), not (cj+1 : pj+1), . . . , not (cm : pm)\nwhere ck = 1..n, pk \u2208 Sck is an element of some belief set Sck \u2208 BSck of Lck , and for each kb \u2208 KBi, we have that kb \u222a {s} \u2208 KBi.\nFor a bridge rule r of the above form, head(r) = s and body(r) = {p1, . . . , pm} denote the head and the body of r. We say that literals s and p1, . . . , pn occur in the head and the body of r respectively.\nDefinition 3 (multi-context system). A cost-aware multi-context system (MCS) M = (C1, . . . , Cn) consists of a collection of contextsCi = (Li, br i), whereLi = (KBi,BSi,ACCi, cost i) is a logic suite and br i is a set of Li-bridge rules over {L1, . . . , Ln}.\nThe sets of knowledge bases and belief sets effectively determine the input/output interface languages for a context Ci. To let a context process a new information, a new element needs to be added to its knowledge base. Conversely, retrieving information from a context corresponds to inspecting its belief set.\nIn contrast to the original definition, we do not require a context to have an initial knowledge base, as such \u201cdefault\u201d input to the semantic operator can be contained directly in its semantics, i.e., not necessarily ACC(\u2205) 6= \u2205.\nDefinition 4 (notation). We say that r is a bridge rule of a MCS M = (C1, . . . , Cn) iff there exists i = 1..n, such that the set of bridge rules br i of the context Ci contains r, i.e., r \u2208 br i. We also say that M contains r. Similarly, M contains a set of bridge rules R if it contains every rule r \u2208 R. Finally, for convenience, let R(M) = \u22c3n\ni=1 br i denote the set of bridge rules of M .\nDefinition 5 (belief state and satisfied rules). Let M = (C1, . . . , Cn) be a MCS. A belief state is a tuple S = (S1, . . . , Sn), such that each Si is a an element of BSi. We define set operations on belief states as the corresponding set operations on their respective belief set projections.\nA bridge rule r of the form introduced in Definition 2 is said to be satisfied in a belief state S iff for all i = 1..j we have pi \u2208 Sci and for all k = j + 1..m we have pk 6\u2208 Sck .\nDefinition 6 (equilibrium). A belief state S = (S1, . . . , Sn) of a MCS M = (C1, . . . , Cn) with Ci = (Li, br i) is an equilibrium of M iff for all i = 1..n we have that kbi = {head(r) | r \u2208 br i is a rule satisfied in S} and for each i, we have Si \u2208 ACCi(kbi)."}, {"heading": "3 Reasoning with cost-aware MCSs", "text": "The following definition of consistency and reasoning problems reiterates the original one by Brewka & Eiter.\nDefinition 7 (consistency and reasoning problems). Given a MCS M = (C1, . . . , Cn), the problem of M \u2019s consistency equals to deciding whether there exists an equilibrium S = (S1, . . . Sn) of M .\nGiven an element p, a query, the problem of brave reasoning is to decide whether there is an equilibrium S = (S1, . . . , Sn) of M , such that p \u2208 Si for some i = 1..n. We also say that S entails p. Finally, the problem of cautious reasoning is to decide whether all equilibria of M entail p.\nDue to the opaqueness of the individual contexts in a MCS, an algorithm for deciding a problems of consistency, brave, or cautious reasoning, would in general need to search for a solution by testing various knowledge bases as inputs to contexts, executing their internal semantic operators, and finally check whether the outputs are coherent with the knowledge bases. Informally, the cost incurred by a run of such a computation over the input MCS corresponds to the sum of the costs associated with the series of invocations of the semantic operators of the individual contexts.\nDefinition 8 (cost-complexity). Let A be a deterministic algorithm taking as an input a MCS M and computing a particular belief state state S of M as its output, along the way employing the semantic operators of the individual contexts. Given a series of semantic operator invocations ACCc1 , . . . ,ACCcm performed during A\u2019s execution, CostA(M) = \u2211m\ni=1 cost(ACCci) denotes the sum of the costs of their corresponding invocations. We also say that CostA(M) is a cost-complexity of A\u2019s computation on M .\nThe worst-case cost-complexity of A is a function CostA : N\u00d7N \u2192 N defined by\nCostA(n,m) = max{CostA(M) | M \u2208 Mn,m}\nwhere Mn,m is a set of all MCSs composed of precisely n contexts and m bridge rules. That is, for each M \u2208 Mn,m, we have M = (C1, . . . , Cn), with each Ci comprising bridge rules br i and m = |R(M)| = \u2211n i=1 |br i|.\nIn the restricted case when the number of bridge rules m in an MCS is bounded with respect to the number of its contexts n by some finite factor k \u2208 N, we define CostA(n) = CostA(n, k \u00b7 n).\nConsider a special class of MCSs with uniform unit cost of execution of all semantic operators of their corresponding contexts. For such MCSs, the notion of costcomplexity of algorithms reduces to the notion of time-complexity in terms of the number of invocations of the context semantic operators.\nDefinition 9 (context-independent time complexity). A MCS M = (C1, . . . , Cn) is said to be uniform-cost iff for all i = 1..n, we have cost(ACCi) = 1, with ACCi corresponding to Ci.\nThe context-independent time complexity is defined as CTimeA(M) = CostA(M) = m. Consequently, the context-independent worst-case complexity of A is defined as CTimeA(n,m) = CostA(n,m) over uniform-cost MCSs with n contexts and m bridge rules. CTimeA(n) and CTime(n) are defined accordingly in relation to CostA(n) and Cost(n).\nFinally, we analyse the context-independent time complexity and the cost-complexity of the class of general non-monotonic cost-aware multi-context systems.\nProposition 10 (consistency). Given a uniform-cost MCS M = (C1, . . . , Cn), an upper bound on the worst-case context-independent time complexity of deciding the consistency problem for M , as well as problems of cautious and brave reasoning w.r.t. M for some query p, we have\nCTime(n,m) \u2264 n \u00b7 2m\nwhere m is the number of bridge rules in M . In the case M is not a uniform-cost MCS, an upper bound on the worst-case costcomplexity of deciding the consistency problem for M , as well as problems of cautious and brave reasoning w.r.t. M for some query p, we have\nCost(n,m) \u2264 c \u00b7 CTime(n,m)\nwhere c = maxi=1..n cost(ACCi).\nProof. Consider the following algorithmic schema:\n1. guess the set of bridge rules R to be satisfied in an equilibrium;\n2. construct the knowledge bases kb1, . . . kbn, so that kbi = {head(r) | r \u2208 R};\n3. execute the individual contexts\u2019 semantic operators on the knowledge bases and thus obtain a belief state S; and finally\n4. check whether S is an equilibrium. That is, exactly the rules from R are those satisfied in S.\nIn general, there are at most 2m candidate sets of rules to guess in the step 1 of the nondeterministic schema above. For each of them, we need to invoke at most n semantic operators in the step 3, what in turn incurs a cost of at most c per invocation.\nFor brave and cautious reasoning problems, in the worst case, we need to enumerate all the possible belief states to check whether they are equilibria and additionally whether they entail the query p. Hence, the worst-case cost complexity of reasoning problem equals the one of the consistency problem.\nThe above result is consistent with the complexity analysis of Brewka & Eiter. They show that the time complexity of the decision problems as a step-up over the time complexity of ACC operator: if the context time-complexity is in \u2206Pk , then the time-complexity of deciding the consistency problem lies in \u03a3Pk+1. We abstract away from the context time-complexity and consider it constant (P ), hence the expected step-up corresponds to NP ."}, {"heading": "4 Definite cost-aware MCS", "text": "The cost-complexity characteristics of reasoning with general cost-aware multi-context systems as introduced in the previous section is rather pessimistic. Even brave reasoning incurs in general cost complexity exponential in the size of the information-flow structure of the system. For practical purposes, that can become prohibitive as the size of the system scales. Often, however, information flows of implemented systems feature simpler structure both in terms of the individual contexts, as well as in terms of the underlying flow of information. Definite cost-aware multi-context systems, an adaptation of the notion reducible MCSs (Brewka & Eiter, 2007), provide a suitable model for such systems.\nDefinition 11 (monotonic logic suite). Let L = (KB,BS,ACC, cost) be a logic suite. L is monotonic iff\n1. ACC(kb) is a singleton set for every kb \u2208 KB; and\n2. kb \u2286 kb\u2032, ACC(kb) = {S} and ACC(kb \u2032) = {S\u2032} implies S \u2286 S\u2032.\nDefinition 12 (definite MCS). Let M = (C1, . . . , Cn) be a MCS. We say that M is definite iff\n1. the logic suites L1, . . . , Ln corresponding to the contexts C1, . . . Cn are monotonic; and\n2. none of the bridge rules in any context contains not .\nDefinition 13 (grounded equilibrium). Let M be a definite MCS. S = (S1, . . . , Sn) is the grounded equilibrium of M iff S is the unique set-inclusion minimal equilibrium of M .\nRemark 14. Every definite MCS has exactly one unique equilibrium, which is grounded (Brewka & Eiter, 2007).\nAlgorithm 1 Algorithm for computing the grounded equilibrium of a definite MCS. Input: a definite MCS M = (C1, . . . , Cn) Output: returns the grounded equilibrium of M\n1: let kb0i \u2190 \u2205 for all i = 1..n and S 0 \u2190 (\u2205, . . . , \u2205) 2: k \u2190 0 3: repeat 4: Sk \u2190 (Sk1 , . . . , S k n) with S k i = ACCi(kb k i ) 5: kbk+1 \u2190 (kbk+11 , . . . , kb k+1 n ) with\nkb k+1 i = kb k i \u222a {head(r) | r is satisfied in S k} 6: k \u2190 k + 1 7: until Sk 6= Sk\u22121 8: return Sk\nUnsurprisingly, the cost-complexity of reasoning for definite MCS is significantly lower than for general MCS. The following proposition provides the first upper estimate on the worst-case cost-complexity of the consistency problem in definite MCS.\nProposition 15 (consistency). Given a uniform-cost definite MCS M = (C1, . . . , Cn), an upper bound on the worst-case context-independent time complexity of deciding the consistency problem for M , and thus also the problems of cautious and brave reasoning w.r.t. M for some query p is\nCTime(n,m) \u2264 n \u00b7m\nIn the case M is not a uniform-cost MCS, an upper bound on the worst-case costcomplexity of deciding the consistency problem for M , we have\nCost(n,m) \u2264 c \u00b7 CTime(n,m)\nwhere c = max1=1..n cost(ACCi).\nProof sketch. Consider Algorithm 1. To compute an equilibrium (and thus decide the consistency problem), all contexts have to be invoked at least once. After each iteration either at least one head literal which was not true in the previous iterations becomes true and does not cease afterwards, or no new head literal is inferred. If the latter is the case, the process can stop. Thus, there are at most m rule heads to become true over at most m steps. In every step, there are at most n context being executed. Hence the upper bound.\nCorollary 16. In most instances of implemented systems the number of rules m in a multi-context system will dominate the number of contexts n. Hence the worst-case time-independent complexity would typically be at most quadratic in the number of bridge rules, i.e., CTime(n,m) \u2264 m2 and consequently also Cost(n,m) \u2264 c \u00b7m2.\nNow we turn our attention to the cost-complexity of reasoning in definite MCSs. Since such MCSs have only a single unique equilibrium, the problems of brave and cautious reasoning collapse and in turn we speak only about a reasoning problem. It\nturns out, that the cost-complexity is, similarly to the general MCS case, bound by the cost-complexity of deciding the consistency problem, but in many practical cases can be pushed lower. Before introducing the main result in Proposition 21, we first analyse the structure of information flow leading to supporting the individual belief sets in an equilibrium.\nDefinition 17 (fragmentary MCS). We say that a MCS M \u2032 = (C\u20321, . . . , C \u2032 n) is a MCS fragment of another MCS M = (C1, . . . , Cn) iff for all context C\u2032i = (L \u2032 i, br \u2032 i) and Ci = (Li, br i) with i = 1..n, we have that L\u2032i = Li and br \u2032 i \u2286 br i. We also denote M \u2032 \u2286 M and say that M contains M \u2032. Set operations on MCS fragments are defined as the corresponding set operations on their respective bridge rule sets.\nDefinition 18 (justification). Let M = (C1, . . . , Cn) be a definite MCS with a grounded equilibrium S = (S1, . . . , Sn). A justification for a belief set Si in M is a MCS fragment M \u2032 \u2286 M , such that\n1. M \u2032 has a grounded equilibrium S\u2032 = (S\u20321, . . . , S \u2032 n), with S \u2032 i = Si and S \u2032 j \u2286 Sj\nfor every j 6= i; and\n2. there is no other fragment M \u2032\u2032 \u2286 M \u2032 satisfying the condition 1.\nA justification of a belief set Si in a MCS M corresponds to the minimal set of bridge rules of M which still enable derivation of Si. Justifications are defined w.r.t. a given equilibrium. Support is a complementary syntactic counterpart to the notion of justification.\nDefinition 19 (support). Let M = (C1, . . . , Cn) be a definite MCS. The input signature of a context Ci is a set of literals sig(Ci) = {p | \u2203r \u2208 br i : head(r) = p}. An immediate rule support of a context Ci = (Li, br i) is a set of rules In \u2286 br i, such that for every p \u2208 sig(Ci), there exists a rule r \u2208 In with head(r) = p. Finally, a support for a context Ci = (Li, br i) is a fragment M \u2032 = (C\u20321, . . . , C \u2032 n) of M with C\u2032i = (L \u2032 i, br \u2032 i), such that\n1. br \u2032i contains some rule support In of Ci;\n2. for every context C\u2032j literals of which occur in a body of some bridge rule of M \u2032, M \u2032 contains also a support for C\u2032j . That is, for every rule r \u2208 br \u2032 j , if\n(ck : pk) \u2208 body(r), then M \u2032 contains a support of C\u2032j . Finally,\n3. for every context C\u2032j , we have that br \u2032 j is minimal w.r.t. set inclusion, such that\nthe conditions 1 and 2 are satisfied.\nM(Ci) denotes the set of all supports of Ci. Furthermore, C(Ci) = {C\u2032l | \u2203M \u2032 = (C\u20321, . . . , C \u2032 n) \u2208 M(Ci) and br \u2032 l 6= \u2205} and R(Ci) = {r | \u2203M\n\u2032 \u2208 M(Ci) and r \u2208 R(M \u2032)} denote the sets of contexts and rules respectively supporting Ci in various supports in M .\nNote, there might be several immediate rule supports for a context Ci due to possibly multiple bridge rules with the same head literal. Also, minimality of bridge rule\nsets ensures that for each literal p, there is only a single rule r in a support M \u2032 with p = head(r). In turn, there might be multiple supports for a given context in M .\nThe following proposition relates the syntactic characterisation of sets of rules potentially justifying a given belief set, the support, and the sets of rules serving as an actual justification of the belief set in an already computed belief set.\nProposition 20. Let M = (C1, . . . , Cn) be a definite MCS with a grounded equilibrium S = (S1, . . . , Sn). For every belief set Si of S and each of its justifications Mjust , there exists a support Msupp \u2286 M of Ci, such that Mjust \u2286 Msupp and all the bridge rules of Mjust are satisfied in S.\nProof sketch. For a justification Mjust = (C j 1 , . . . , C j n) of a belief set Si with contexts C j i = (L j i , br j i ), we construct a fragment Msupp of M which will also be a support of Ci in M . Firstly, for every context Cj of M , either there exists an immediate rule support In of Cj , such that In = br just j , or we find an immediate rule support In of Cj , such that br justj \u2286 In . Existence of such a suitable immediate rule support In of Cj is ensured by the minimality of br just j (c.f. Condition 2 of Definition 18), which ensures that for each p \u2208 sig(Cj), there\u2019s at most one rule r satisfied in Mjust with p = head(r), and the construction of immediate supports of a context, which require not only minimality of In (c.f. Condition 3 of Definition 19), but also a full coverage of sig(Cj). We construct a fragment Msupp by simply extending each br just j with one of such suitable immediate rule supports. In a consequence, we have that Mjust \u2286 Msupp and Msupp automatically satisfies the conditions on being a support of Ci stipulated in Definition 19.\nA corollary of the above proposition is that for deciding a reasoning problem over an MCS M and a query p, we only need to consider the contexts and rules relevant to p. That is, those which support the context Ci to which p belongs, because every possible justification of a p-entailing belief set of Ci must be a subset of some support of Ci. Hence, due to monotonicity of contexts of M , we can simply compute the equilibrium of a fragment related to a union of all the possible supports of Ci and check whether it entails p.\nProposition 21. Let M = (C1, . . . , Cn) be a uniform-cost definite MCS and let p be a query, en element of some belief set of Ci. An upper bound on the worst-case context-independent time complexity of brave reasoning w.r.t. M for some query p is\nCTime(n,m) \u2264 \u2223 \u2223C(Ci) \u2223 \u2223 \u00b7 \u2223 \u2223R(Ci) \u2223 \u2223 \u2264 n \u00b7m\nConsequently for the case where M is not a uniform-cost MCS, an upper bound on the worst-case context-independent time complexity of brave reasoning w.r.t. M for some query p is\nCost(n,m) \u2264 c \u00b7 CTime(n,m) \u2264 c \u00b7 \u2223 \u2223C(Ci) \u2223 \u2223 \u00b7 \u2223 \u2223R(Ci) \u2223 \u2223 \u2264 c \u00b7 n \u00b7m\nwhere c = maxCj\u2208C(Ci) cost(ACCj).\nCorollary 22. Similarly to the observation in Corollary 16, in most instances of implemented systems the number of rules m in supports of a given context Ci will dominate the number of contexts n, the worst-case time-independent complexity of reasoning problem would typically be at most quadratic in terms of the number of rules of the relevant support. In the worst-case, though, a support can include all the bridge rules of the original MCS."}, {"heading": "5 Acyclic definite MCS", "text": "Now we turn our attention to multi-context systems which do not contain cycles in the information flow structure induced by their bridge rules. While relatively simplistic, the class of acyclic MCSs is practically important. Many knowledge-intensive systemsof-systems and information-aggregation applications feature a hierarchical structure with raw information sources at the bottom and gradually more and more abstract and higher-level information-processing components towards the top. The hierarchical structure of such systems is dictated by the fact, that such systems capture the knowledge of human experts in a given domain. Typically, the structure of domain knowledge articulated by such experts tends to be relatively simple and hierarchical too, as such structures are easier to understand and manipulate for humans.\nDefinition 23 (stratified definite MCS). Let M = (C1, . . . , Cn) be a definite MCS with contexts C(M) = {C1, . . . , Cn}. A decomposition S = S0, . . . ,Sm of M with Si \u2286 C(M) and Sk \u2229Sl = \u2205 for every k, l = 1..n is a stratification of M iff for each bridge rule r \u2208 br i of a context Ci \u2208 Sk each of its body literals (j : p) \u2208 body(r) corresponds to a context Cj \u2208 Sl with l < k.\nWe say that a stratification S = S0, . . . ,Sm of a MCS M is compact iff there is no other stratification S\u2032 = S\u20320, . . . ,S \u2032 m\u2032 of M , such that there is a context C of M with C \u2208 Si and C \u2208 S\u2032j , while at the same time j < i. A definite MCS M is said to be stratified, or acyclic, iff there exists a stratification of M .\nIn stratified definite MCSs the information flows unidirectionally from contexts without any bridge rules in the stratum S0 (information sources), upwards to higherlevel contexts up to those in the top-most stratum for which there are no bridge rules in the MCS containing elements of their belief states in their respective bodies. Thanks to stratification, we also straightforwardly have that all the contexts involved in supports of a given context C belong to lower strata than C does and at the same time there are no bridge-rule dependencies among the context of a single stratum. This insight leads to the following cost complexity result.\nProposition 24. Given a uniform-cost stratified definite MCS M = (C1, . . . , Cn), an upper bound on the worst-case context-independent time complexity of deciding the consistency problem for M , as well as the reasoning problem w.r.t. M for some query p is\nCTime(n,m) \u2264 n\nAlgorithm 2 Algorithm computing the grounded equilibrium in a definite stratified MCS. Input: a stratified definite MCS M = (C1, . . . , Cn) Output: returns S, the grounded equilibrium of M\n1: compute S = S0, . . . ,Sl, the compact stratification of M 2: S \u2190 (S1, . . . , Sn) with Si \u2190 \u2205 3: for k = 1..l do 4: for each Ci \u2208 Sk do 5: kbi \u2190 {head(r) | r \u2208 br i is applicable in S} 6: update S with Si = ACCi(kbi) 7: end for 8: end for 9: return S\nIn the case M is not a uniform-cost MCS, an upper bound on the worst-case costcomplexity of deciding the consistency problem for M , as well as the reasoning problem w.r.t. M for some query p, we have\nCost(n,m) \u2264 c \u00b7 CTime(n,m) = c \u00b7 n\nwhere c = maxi=1..n cost(ACCi).\nProof. Algorithm 2 computes the grounded equilibrium of a MCS M , hence it decides the consistency problem of M . Its soundness and completeness follows inductively from the following induction hypothesis: Let Sc1 , . . . , Sck be belief sets of contexts Cc1 , . . . , Cck involved in body literals of a union of all immediate rule supports of a context Ci in a stratum Sk. Given a knowledge base kbi = {head(r) | r \u2208 br i and r is satisfied w.r.t. Sc1 , . . . , Sck}, ACCi(kbi) = {Si} is a singleton belief set Ci corresponding to the grounded equilibrium of M . The algorithm evaluates every context of M exactly once, hence its worst-case cost-complexity equals the number of contexts of M ."}, {"heading": "6 Incremental reasoning in definite MCS", "text": "The discourse in previous sections followed the structure of standard results from logic programming reflected in the framework of multi-context systems. Generally, the cost-complexity results followed the known results on computational time complexity of computation of models of logic programs. In this section, we build upon the concepts introduced above and introduce an incremental approach for computing equilibria of cost-aware multi-context systems, which specifically focuses on reduction of cost-complexity of such computation.\nBy exploiting the structure of a given MCS with respect to a given query, the actual cost-complexity of solving the reasoning problem can be often improved upon. Before introducing an actual algorithm reducing the number of context evaluations while computing a solution to a reasoning problem, let us first introduce a notion of a fragment\ndepending on a context. The concept is complementary to the context support (Definition 19), but instead of considering contexts and rules necessary for deriving a belief set of a context Ci, a fragment depending on a context is a fragmentary MCS in which computation of belief sets of all other contexts is influenced, depends on the context Ci. In other words, change in a belief set of Ci can potentially enforce a change in the input knowledge base and thus also a change in the output belief set of the depending contexts.\nDefinition 25 (fragment depending on a context). Let M = (C1, . . . , Cn) be a definite MCS. We say that a fragment M \u2032 = (C\u20321, . . . , C \u2032 n) of M depends on a context Ci of M iff for all contexts C\u2032j we have that (i : p) \u2208 body(r) with r \u2208 br j implies that r \u2208 br \u2032j and at the same time M\n\u2032 contains a fragment M \u2032\u2032 depending on C\u2032j . Given a set of contexts C = Ci1 , . . . , Cik , we say that M\n\u2032 depends precisely on C iff for each context Cij \u2208 C it contains the fragment of M depending on Cij , while at the same time M \u2032is minimal such w.r.t. set inclusion on the sets of bridge rules.\nFor convenience, we define an empty fragment as a fragment with all bridge rule sets empty. We also say, that a context C = (L, br) is valid iff br 6= \u2205.\nProposition below provides an insight into computation required for \u201cextending\u201d a grounded equilibrium of a MCS fragment to a grounded equilibrium of its extension by another fragment.\nProposition 26. Let M = (C1, . . . , Cn) be a definite MCS and M \u2032 be its fragment depending on a context Ci with a grounded equilibrium S\u2032 = (S\u20321, . . . , S \u2032 n). Let also Msupp be a fragment of M depending precisely on the set of contexts valid in Mdiff = M \\M \u2032. Recall, the set of bridge rules corresponding to the i-th context of Mdiff is defined as br diff i = br \u2032 i \\ br i and Msupp is depends precisely on the contexts Ci1 , . . . , Cik , such that br diff ik\n6= \u2205. The grounded equilibrium S = (S1, . . . , Sn) of M can be computed as a union\nS = S\u2032 \u222a Ssupp , where Ssupp is a grounded equilibrium of Msupp .\nProof sketch. M can be decomposed into two fragments disjoint w.r.t. their bridge rules: M \u2032 and M \\M \u2032. In turn, for every context Ci of M , we have that either\n1. its projection in M \\ M \u2032 is a valid context, i.e., there exists at least one bridge rule in its projection in M \\M \u2032; or\n2. its projection in M \\ M \u2032 features an empty set of bridge rules, but the context depends on another context for which 1 is the case, or\n3. all its bridge rules were already contained in M \u2032 and the same holds for all the contexts it is supported by, depends on.\nIn the first case, the belief set of the context Ci needs to be recomputed, since a new literal needs to be possibly added to the context\u2019s knowledge base. Due to monotonicity of logic suites in a definite MCS, it is ensured that the resulting belief set will be a (non-strict) superset of the original one. Should that be the case, also all the contexts depending on it need to be recomputed as well, regardless whether their bridge rules\ncompletely belonged to M \u2032, or not. In the second case, by the same argument the context\u2019s belief set needs to be recomputed as well. Finally, when the context\u2019s bridge rules completely belonged to M \u2032 and it does not depend on any context which needs to be recomputed, its belief set equals the corresponding belief set in the grounded equilibrium of M .\nCorollary 27. Let M1,M2 \u2286 M be fragments of a MCS M . A grounded equilibrium S1 of M1 can be extended to a grounded equilibrium S1,2 of a union M1,2 = M1\u222aM2 as S1,2 = S1 \u222a Sadd , where Sadd is a grounded equilibrium of a fragment of M1,2 depending precisely on the contexts valid in M1 \\M2.\nCorollary 27 is a straightforward reformulation of Proposition 26. We conclude the discourse by exposing Algorithm 3 for incremental reasoning in definite MCSs and exploiting the corollary. It first computes all the supports of the context the query corresponds to and then iteratively selects them one by one and incrementally constructs the fragmentary grounded equilibrium of the input MCS. If during the computation p is derived as an equilibrium of some of the fragments, due to monotonicity of logic suites in a definite MCS, by necessity, the equilibrium of M must also entail p.\nApplied to stratified definite MCS, the algorithm could be further improved by selecting the cheapest fragment of M. That is, one with the lowest equilibrium computation estimate for its corresponding Msupp fragment. In stratified definite MCSs that cost corresponds to the sum of costs of the contexts which need to be recomputed.\nNote, the applicability of the algorithm is constrained to MCS information-flow structures with relatively small overlaps between different supports of the context deriving the query answer. In presence of high redundancy among contexts, that is almost all contexts depend on almost all the other, the algorithm will recompute the whole MCS too often, though. This is, however, seldom the case in implemented systems, such as the maritime traffic surveillance system METIS (Hendriks & van de Laar, 2013)."}, {"heading": "7 Discussion and final remarks", "text": "The motivating premise underlying the presented work is that MCSs are a suitable model for design, implementation and analysis of deployed knowledge-intensive systemsof-systems featuring heterogeneous components. Here, we extend the generic model of multi-context systems with the notion of a cost of executing semantic operators of the individual contexts. The idea is to facilitate system scalability in terms of the incurred costs, be it computational costs, bandwidth, or even financial expenses. Our focus on cost-complexity, rather than computational-complexity of algorithms also presents a novel view on design and deployment of information-aggregation and reasoning systems.\nWe introduced a series of worst-case complexity results for general, definite and stratified MCSs. Some of these results could be still improved upon by taking inspiration from e.g., (Bairakdar et al., 2010), where the authors perform an ear-decomposition of possibly cyclic MCSs, so as to streamline distributed computation of their equilibria. Another inspiration could be to exploit the results stemming from the results\nAlgorithm 3 Incremental reasoning for definite MCSs. Input: a definite MCS M = (C1, . . . , Cn) and a query p corresponding to a context\nCi Output: returns true iff the grounded equilibrium of M entails p\n1: compute the set M of fragments of M supporting Ci 2: Mdone \u2190 an empty fragment of M 3: S \u2190 (S1, . . . , Sn) with Si = \u2205 4: repeat 5: select M \u2032 \u2208 M 6: M \u2190 M\\ {M \u2032} 7: construct Msupp , a fragment of Mdone \u222aM \u2032 precisely depending on the valid contexts of M \u2032 \\Mdone 8: Ssupp \u2190compute the equilibrium of Msupp 9: S \u2190 S \u222a Ssupp\n10: Mdone \u2190 Mdone \u222aM \u2032 11: if S entails p then return true 12: until M = \u2205 13: return false\nby Gottlob, Pichler, & Wei (2006) and analyse the information-flow graph induced by bridge rules of an MCS, in order to exploit the results relating the time-complexity of computation with such systems to the tree-width of the information-flow graph.\nWe already implemented the incremental algorithm for deciding reasoning problems in the context of our work on METIS, a system-of-systems aiming at maritime traffic surveillance and risk assessment of ships sailing in busy coastal waters, such as in the Dutch Exclusive Economic Zone. We describe the system and its reconfiguration component based on ideas described above in a separate submission (Velikova et al., 2014)."}, {"heading": "Acknowledgements", "text": "This work was supported by the Dutch national program COMMIT. The research was carried out as a part of the METIS project under the responsibility of the TNOEmbedded Systems Innovation, with Thales Nederland B.V. as the carrying industrial partner."}], "references": [{"title": "Decomposition of distributed nonmonotonic multi-context systems", "author": ["S.E.-D. Bairakdar", "M. Dao-Tran", "T. Eiter", "M. Fink", "T. Krennwallner"], "venue": "Janhunen, T., and Niemel\u00e4, I., eds., JELIA, volume 6341 of Lecture Notes in Computer Science, 24\u201337. Springer.", "citeRegEx": "Bairakdar et al\\.,? 2010", "shortCiteRegEx": "Bairakdar et al\\.", "year": 2010}, {"title": "Equilibria in heterogeneous nonmonotonic multicontext systems", "author": ["G. Brewka", "T. Eiter"], "venue": "AAAI, 385\u2013390. AAAI Press.", "citeRegEx": "Brewka and Eiter,? 2007", "shortCiteRegEx": "Brewka and Eiter", "year": 2007}, {"title": "Multilanguage hierarchical logics or: How we can do without modal logics", "author": ["F. Giunchiglia", "L. Serafini"], "venue": "Artif. Intell. 65(1):29\u201370.", "citeRegEx": "Giunchiglia and Serafini,? 1994", "shortCiteRegEx": "Giunchiglia and Serafini", "year": 1994}, {"title": "Bounded treewidth as a key to tractability of knowledge representation and reasoning", "author": ["G. Gottlob", "R. Pichler", "F. Wei"], "venue": "AAAI, 250\u2013256. AAAI Press.", "citeRegEx": "Gottlob et al\\.,? 2006", "shortCiteRegEx": "Gottlob et al\\.", "year": 2006}, {"title": "Metis: Dependable cooperative systems for public safety", "author": ["T. Hendriks", "P. van de Laar"], "venue": "Procedia Computer Science", "citeRegEx": "Hendriks and Laar,? \\Q2013\\E", "shortCiteRegEx": "Hendriks and Laar", "year": 2013}, {"title": "METIS: An integrated self-adaptive system for maritime situational awareness", "author": ["M. Velikova", "P. Nov\u00e1k", "B. Huijbrechts", "J. Laarhuis", "J. Hoeksma", "S. Michels"], "venue": "under submission to ECAI 2014.", "citeRegEx": "Velikova et al\\.,? 2014", "shortCiteRegEx": "Velikova et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 5, "context": "We conclude our discourse with an algorithm for incremental reasoning in definite MCSs, version of which we also implemented and deployed in METIS, a prototype system for maritime traffic surveillance (Hendriks & van de Laar, 2013; Velikova et al., 2014).", "startOffset": 201, "endOffset": 254}, {"referenceID": 0, "context": ", (Bairakdar et al., 2010), where the authors perform an ear-decomposition of possibly cyclic MCSs, so as to streamline distributed computation of their equilibria.", "startOffset": 2, "endOffset": 26}, {"referenceID": 5, "context": "We describe the system and its reconfiguration component based on ideas described above in a separate submission (Velikova et al., 2014).", "startOffset": 113, "endOffset": 136}], "year": 2017, "abstractText": "Multi-context systems provide a powerful framework for modelling informationaggregation systems featuring heterogeneous reasoning components. Their execution can, however, incur non-negligible cost. Here, we focus on cost-complexity of such systems. To that end, we introduce cost-aware multi-context systems, an extension of non-monotonic multi-context systems framework taking into account costs incurred by execution of semantic operators of the individual contexts. We formulate the notion of cost-complexity for consistency and reasoning problems in MCSs. Subsequently, we provide a series of results related to gradually more and more constrained classes of MCSs and finally introduce an incremental costreducing algorithm solving the reasoning problem for definite MCSs.", "creator": "LaTeX with hyperref package"}}}