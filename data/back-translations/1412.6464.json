{"id": "1412.6464", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Dec-2014", "title": "Simplified firefly algorithm for 2D image key-points search", "abstract": "In order to identify an object, human eyes first search the visual field for points or areas with specific characteristics, which are used to recognize an image or object. Subsequently, this process could be used as a model for the development of computer algorithms for image recognition. In this paper, the idea is proposed to apply the simplified firefly algorithm to the search for key areas in 2D images. For a series of input test images, the proposed version of the firefly algorithm was examined. Research results will be presented and discussed to demonstrate the efficiency of this evolutionary calculation method.", "histories": [["v1", "Fri, 19 Dec 2014 18:00:11 GMT  (7329kb,D)", "http://arxiv.org/abs/1412.6464v1", "Published version on: 2014 IEEE Symposium on Computational Intelligence for Human-like Intelligence"]], "COMMENTS": "Published version on: 2014 IEEE Symposium on Computational Intelligence for Human-like Intelligence", "reviews": [], "SUBJECTS": "cs.NE cs.AI cs.CV", "authors": ["christian napoli", "giuseppe pappalardo", "emiliano tramontana", "zbigniew marsza{\\l}ek", "dawid po{\\l}ap", "marcin wo\\'zniak"], "accepted": false, "id": "1412.6464"}, "pdf": {"name": "1412.6464.pdf", "metadata": {"source": "CRF", "title": "Simplified firefly algorithm for 2D image key-points search", "authors": ["C. Napoli", "Christian Napoli", "Giuseppe Pappalardo", "Emiliano Tramontana", "Zbigniew Marsza\u0142ek", "Dawid Po\u0142ap", "Marcin Wo\u017aniak"], "emails": ["@inproceedings{Napoli2014Simplified,", "Napoli@dmi.unict.it,", "Pappalardo@dmi.unict.it,", "Tramontana@dmi.unict.it", "Zbigniew.Marszalek@polsl.pl,", "Dawid.Polap@gmail.com,", "Marcin.Wozniak@polsl.pl"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nIn modern computer science, evolutionary computation (EC) is one of most important fields, widely applied in various tasks. There are many applications of EC in sciences and industry. The power of computational intelligence (CI) with dedicated mechanisms is used to simulate even sophisticated phenomenon. EC is efficient for searching optimal solutions, easy to implement and precise. Let us give same examples.\nEC applied to create learning sets for artificial intelligence (AI) control systems is discussed in [1], [2], [3]. Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9]. In [10], [11] and [12], [13] applications of EC methods in dynamic systems positioning and simulation is presented. Optimization of industry processes, i.e. iron cast simulation is shown in [14]. EC methods are also supposed to be more adaptive and efficient in comparison to classic optimization methods, see [15], [16] and [17], [18]. Summing up, EC methods are applied where CI may help to improve data processing. All this gave some inspiration to implement dedicated EC in 2D image processing.\nFirst attempts to apply CI methods in 2D image processing are discussed in [19], [20] and [21]. In [19], [22] some aspects of handwriting preprocessing for artificial intelligence (AI) classification systems are discussed. [20] and [21] show ideas of a novel approach to identify simple objects in 2D images by the use of EC methods. These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin\nmetals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].\nIn this paper we discuss potential efficiency of dedicated firefly algorithm (FA) to search for key areas in 2D input objects. The purpose of the developed algorithm is to find a advanced solution to obtain precise whole-areas recognition by means of a few iterations. Moreover the proposed FA is designed for better efficiency with respect to other similar recognition algorithms, while still being easy to implement thanks to its simplicity.\nThe rest of this paper is structured as follows. Section II gives the background on the Key-Points search and some classical approaches, then introduces the proposed FA solution. Section III describes the implementation of the proposed FA and presents the experimental results. Finally, Section IV draws our conclusions."}, {"heading": "II. KEY-POINTS SEARCH", "text": "In computer image, each classified object consists of points, which have special position and properties. Among them one can name saturation, sharpness, brightness and more. All these features compose an image of the input object that is visible to our eyes. An exemplary model is shown in Fig. 1. By analysing such features it is possible to identify objects. However recognising objects depends on the selection of meaningful key parts of the image. Therefore one may say, that the position of each pixel (each one has measurable coordinates x = (x, y) = (xi,1, xi,2)) and it\u2019s properties (like brightness) are important aspects to make right decision. We decide to recognise some parts or important areas, which can be defined for a computer system. Thus, Key-Point is a pixel in 2D input image, which has peculiar properties making it important for object recognition. Key-Area is containing many key-points that all together compose an object to recognize. In other words, to find the object our eyes search for areas in the picture that contain many points of the same kind. They compose an image of the object, which is being recognized in our brain. This process has some features that may be implemented in\na computer algorithm. CI brings many interesting methods that can help. It is possible to apply EC method, in particular simplified FA, to perform the process of searching keyareas which compose input objects we are looking for. In our experiments we take sample images from open test images database1 to examine. The performed experiments show potential efficiency of dedicated FA in the search for key-areas in various 2D pictures. This makes the presented solution not only efficient but also much easier to implement in comparison to classic methods. 1."}, {"heading": "A. SURF - Classic Attempt", "text": "The classic methods used for key-areas recognition is SURF (Speeded-Up Robust Features) algorithm. This method describe the input image by selecting characteristic key-points. Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34]. In this work we used SURF combining selection of key-points with calculating 64-element vector (descriptor). In the SURF it is applied integrated image and filter approximation of block Hessian determinant. To detect interesting points we used particular Hessian-matrix approximation (for details please see [30] and [31]).\nThe implementd SURF algorithm define Hessian matrix H(x, \u03c3) for point x = (x, y) in 2D image I at scale \u03c3 using formula\nH(x, \u03c3) = [ Lxx(x, \u03c3) Lxy(x, \u03c3) Lxy(x, \u03c3) Lyy(x, \u03c3) ] , (1)\nwhere the notations are: Lxx(x, \u03c3) \u2013 convolution of Gaussian second order derivative \u2202 2\n\u2202x2 . We define approximation Dxx, Dyy and Dxy using formula\ndet(Hap) = DxxDyy \u2212 ( |Lxy(\u03c3)|F |Dxx(\u03c3)|F |Lxx(\u03c3)|F |Dxy(\u03c3)|F Dxy )2 .\n(2)\n1www.imageprocessingplace.com\nThen, the input image is blurred to get DoG (Difference of Gaussian) images, which help to find edges. To localize interesting points it is used non\u2013maximum suppression in 3 \u00d7 3 \u00d7 3 neighborhood (for more results please see also [20] and [21]). Maximum determinant of Hessian matrix is interpolated at scale \u03c3, which helps to differ between first level and each octave. The applied SURF for RGB (RedGreen-Blue) color values model is presented in algorithm 1.\nAlgorithm 1 The SURF method applied to search for keypoints in 2D images\n1: Calculate number of pixels and rows in 2D image, 2: while j < rows do 3: while i < pixels do 4: rowsumj = (Rij) 2 + (Gij) 2 + (Bij)\n2, 5: end while 6: end while 7: Integral image is sum of rowsum, 8: Calculate approximated Hessian value using (1), 9: Build response layers for the image,\n10: while i < pixels do 11: Calculate descriptor vector for each point, 12: Determine orientation, 13: end while 14: Construct descriptor vector for each image point."}, {"heading": "B. SIFT - Classic Attempt", "text": "SIFT (Scale-Invariant Feature Transform) transforms image into scale-invariant coordinates relative to local aspects. This generates features that may densely cover image for full range of scales and locations, please see [35] and [36]. SIFT idea is based on [37], where possibility of matching Harris corners over large image by using correlation window around each corner was discussed (see also [38] and [39] for details). This idea was developed in [40] to general image recognition, where Harris corners were applied to select keypoints by rotationally invariant descriptor of local image regions. However Harris corner detector can be sensitive to changes in image scale, what makes it inefficient in processing images of different sizes. Therefore [41], [35] and [42] extended local feature approach to achieve scale invariance. Then some special features like multidimensional histograms summarizing distribution of measurements useful for recognition of textured objects with deformable shapes were discussed in [43]. Final version of this scale descriptor, less sensitive to local image distortions, was given in [44].\nIn the implemented SIFT, features are first extracted from set of images and stored in memory. Key-point are matched by individually compared examined feature to these previously stored using Euclidean distance of feature vectors. Correct key-points are filtered from set of matches by identifying subsets of interest points that agree on object, it\u2019s\nlocation, scale and orientation. To determine these clusters we perform hash table implementation of generalized Hough transform. Each cluster of features is then subject to further verification. SIFT uses special detector to find scale-space extrema where continuous function is Gaussian. According to [44] we have used L(X, \u03b3D) as scale space of image defined in\nL(X, \u03b3D) = G(X, \u03b3D) \u2217 I(X), (3)\nwhere L(X, \u03b3D) is produced from convolution of variablescale Gaussian G(X, \u03b3D) with input image point. To scale selection is used approximated DoG filter. Then key-point is localized by taking Taylor series expansion of scale-space function\nD( ~X) = D +DTx ~X + 0.5 ~XTDTxx ~X, (4)\nwhere D( ~X) and it\u2019s derivatives are evaluated at image points and T is offset from these points (for details see [45]). Finally after filtering, descriptor operations are performed. Descriptor is local statistic of orientations of the gradient of the Gaussian scale space.\nAlgorithm 2 Simplified SIFT applied to search for keypoints in 2D images\n1: Calculate maximum number of Level, 2: Build DoG pyramid, 3: Find maximum and minimum of Level, 4: Compare vector of pixel with it\u2019s rescaled neighbors, 5: for Each Level of DoG pyramid do 6: Match to sub pixel maximum location, 7: Eliminate edge points, 8: end for 9: Construct keys using interpolated value."}, {"heading": "C. Simplified Firefly Algorithm - A Novel Approach", "text": "Very efficient methods that can be applied in the process of key-areas search are EC algorithms. One of them is simplified firefly algorithm (SFA). It is mapping behavior of flying and blinking insects while searching for a partner. This process, in our simplified version, is applied in 2D images key-areas search.\nSince classic version of FA, first presented in [46] and [47], it was applied in many fields. In [48] chaotic FA was applied in reliability-redundancy optimization. In [49] it is applied to minimum cross entropy threshold selection. In [50] and [51] this method is applied to solve traveling salesman problem and jobs scheduling. It is also efficient in continuous optimization (see [52]) or multimodal optimization (see [53]). While in [54] is presented efficient application of FA in vector quantization. FA is also efficient in neural network training and power systems positioning (see [55] and [56], respectively). Finally some\nimportant aspects of applying FA in the process of image compression are described in [49] and [20]. Where in [20] was discussed idea for potential application of FA classic version in 2D image processing. Therefore here we present SFA method devoted to 2D image processing. Let us now present mathematical model of the SFA algorithm.\nThe SFA is mapping behavior of fireflies in natural conditions. Individuals are described by several biological traits: specific way of flashing, specific way of moving and specific perception of the others. These are mathematically modeled in implementation of SFA as:\n\u2022 \u03b3\u2013light absorption coefficient in given circumstances, \u2022 \u00b5\u2013firefly random motion factor, \u2022 \u03b2pop\u2013firefly attractiveness factor,\nwhich implement behavior of different species of fireflies and natural conditions of the environment. Just as in nature, a firefly goes to the most attractive other one by measuring the intensity of flickers over the distance between them characterized by a suitable metric. In SFA an average distance rij between any two fireflies i and j maps the inverse square law. Attractiveness of individuals decreases with increasing distance rij between them. We also map air absorption of light, which makes fireflies visible to certain distance. Using these we built CI to map the behavior of fireflies. In description of SFA we assume:\n\u2022 All fireflies are unisex, therefore one individual can be attracted to any other firefly regardless of gender, \u2022 Attractiveness is proportional to brightness. Thus, for every two fireflies less clear flashing one will move toward brighter one, \u2022 Attractiveness decreases with increasing distance between individuals, \u2022 If there is no clearer and more visible firefly within the range, then each one will move randomly.\nDistance between any two fireflies i and j situated at points xi and xj in 2D image we define using Cartesian metric\nrtij = \u2016xti \u2212 xtj\u2016 = \u221a\u221a\u221a\u221a 2\u2211 k=1 (xti,k \u2212 xtj,k)2, (5)\nwhere notations in t iteration are: xti, x t j\u2013points in R \u00d7 R space (here pixels coefficients on axis X and Y - see Fig. 1), xti,k, x t k,j\u2013k-th components of the spatial coordinates x t i and xtj that describe each firefly (2D image point) in the space. Attractiveness of firefly i to firefly j decreases with increasing distance. Attractiveness is proportional to intensity of light seen by surrounding individuals and defined as\n\u03b2ij(r t ij) = \u03b2pop \u00b7 e\u2212\u03b3\u00b7(r t ij) 2 , (6)\nwhere notations in t iteration are: \u03b2ij(rtij)\u2013attractiveness of firefly i to firefly j, rtij\u2013distance between firefly i and firefly j, \u03b3\u2013light absorption factor mapping natural conditions, \u03b2pop\u2013firefly attractiveness factor.\nFirefly i motions toward more attractive and clearer flashing individual j using information about other individuals in the population denotes simplified formula\nxt+1i = bx t i + \u03b2ij(r t ij) \u00b7 (xtj \u2212 xti) + \u00b5eic, (7)\nwhere notations in t iteration are: xti, x t j\u2013points in R \u00d7 R space (pixels coefficients on axis X and Y), rtij\u2013distance between fireflies i and j modeled in (5), \u03b2ij(rtij)\u2013attractiveness of firefly i to firefly j modeled in (6), \u00b5\u2013coefficient mapping natural random motion of fireflies, ei\u2013randomized vector changing position of firefly on each axis. Formula (7) is dedicated and simplified version for 2D images. We introduce it for 2D image key-area search. Using only integer values for X and Y coefficients we can precisely move from pixel to pixel. SFA implementation is presented in algorithm 3.\nAlgorithm 3 Simplified FA to search for 2D image keypoints\n1: Define all coefficients: \u03b3\u2013light absorption factor, \u03b2pop\u2013 attractiveness factor, \u00b5\u2013natural random motion factor, number of fireflies and generation\u2013number of iterations in the algorithm, 2: Define fitness function for the algorithm \u2013 properties of pixels to search for according to (8), 3: Create at random initial population of fireflies in the picture, 4: t:=0, 5: while t \u2264 generation do 6: Calculate distance between individuals in population P using (5), 7: Calculate attractiveness for individuals in population P using (6), 8: Evaluate individuals in population P using (8), 9: Create population O: move individuals towards clos-\nest and most attractive individual using (7), 10: Evaluate individuals in population O using (8), 11: Replace best ratio individuals from population P\nwith best ratio individuals from population O, the rest take at random,\n12: Rest of fireflies take at random, 13: Next generation t := t+ 1, 14: end while 15: Best fireflies from the last generation in population\nP are potential key-points in 2D image."}, {"heading": "III. RESEARCH RESULTS", "text": "SFA was applied to search for 2D image key-areas. Each firefly is representing a single pixel (point in 2D input image according to coordinates in Fig. 1). Therefore in this paper we simultaneously change names: pixel, 2D image point and firefly. In each iteration we move entire population to search\nbetween all image points. Fireflies move from pixel to pixel and search for specific areas according to a given criterion. In our experiments we have used simplified fitness function, which reflects brightness and sharpness of the input image points\n\u03a6(xi) = \u03a6((xi,1, xi,2)) = { 0.1 . . . 1 saturation 0 other , (8)\nwhere notation \u03a6(xi) denotes quality of evaluated pixel. This measure reflects a value in the range from 0.0 to 1.0, where color saturation change from black to white. Therefore using SFA with simple fitness function we are to build SFA classifier based on canny or sobel filter (for details on 2D image filtering please see [57]). Using filtering we extract borders of input objects, which will be marked in white on dark background. Therefore these filtered 2D images will be perfect input objects for final SFA classifier. However, here we would like to discuss only the first part of the project. It is SFA efficiency in classifying key-areas in 2D input images.\nWhen fireflies fly for each iterations, they pick pixels with best fitness within the range of their flight. They take position and wait for classification. From all the individuals we take best ratio of them with highest or lowest fitness function value (depending on the experiment). These points (fireflies) are taken to next generation. The rest of population is randomly placed among all input image points, what helps to search entire input object for the points of interest.\nLet us present results of search for quality of pixel defined in (8), using simplified SURF from section II-A, SIFT from section II-B and SFA from section II-C. Simulations were performed for 400 fireflies in 20 generations with set: \u03b2pop = 0.3, \u03b3 = 0.3, \u00b5 = 0.25, best ratio = 35%. We have examined SFA on standard test images downloaded from open test image databases (see section I). Experiments were performed on various types of 2D input pictures: sharp, blurred, landscapes and human postures or faces. Each of resulted key-points (pixels) is marked in red. We have provided some close-ups of classified areas for better presentation. First we present dark areas where \u03a6(xi) = 0 or \u03a6(xi) = 0.1. In second attempt we present bright areas where \u03a6(xi) = 0.9 or \u03a6(xi) = 1."}, {"heading": "A. Dark areas in 2D images", "text": "Let us first present research results for dark objects localization. Dark objects are present in many different images. They can represent objects in landscape (trees, blocks, different constructions, etc.), natural phenomena (tornadoes, shadows, etc.), human figures or human appearance (face features, hair, eyes, etc.).\nIn Fig.2 \u2013 Fig.5 are presented research results for dark key-areas in input images. We can see that SFA can easily find dark objects of different shapes like human posture, human appearance features (hair, eyes, etc.). It is also\nFigure 2. Dark key-points search in sharp and human posture images: in first row on the left simplified SURF result and on the right simplified SIFT result, in the second row SFA result\nefficient in finding some aspects in landscapes. In Fig.4 and Fig.5 are presented research results of searching for shades under trees, buildings, bridges or some other natural phenomena. All these areas were found by SFA correctly."}, {"heading": "B. Bright areas in 2D images", "text": "Let us now present research results for bright objects localization. Bright objects are present in various images. They can represent landscape (bright or lightened constructions, boats, sails, etc.), natural phenomena (clouds, sun, stars, etc.), human figures or human appearance (gray hair, eyes, make-up, bright clothing, etc.).\nIn Fig.6 \u2013 Fig.9 are presented research results for bright key-areas in 2D input images. We can see that SFA can find bright objects of various shapes like human faces or bright clothes (see Fig. 7). It is also efficient in locating bright or lightened constructions like bridges or buildings present in Fig.6 and Fig.9. If compared to SURF, SFA results are better. This method may find more areas that correspond to given criterion in shorter time.\nThis task is more complicated than searching for dark areas. Here the SFA must find bright points among many pixels of similar kind. As the photos were taken during day and all objects of bright properties are lightened in some way. Therefore calculations are slightly more complex. For example in Fig.8 we were looking for bright constructions\nFigure 3. Dark key-points search in sharp and human face images: in first row on the left simplified SURF result and on the right simplified SIFT result, in the second row SFA result\nlike sails or boats located on water, which was also lightened by the Sun. Moreover there were also some clouds on the sky. All these features made processing more complicated. However this can be used as an advance in SFA final classifier based on canny and sobel filter. If applied to filtered 2D images, SFA operates on objects which are filtered and we see only white borders. Therefore recognition process will be easy to perform."}, {"heading": "C. Conclusions", "text": "Application of SFA allows us to easily and reliably find key-areas in examined 2D input images. SFA is efficient when applied to search for areas like human postures, human face appearance (hair or eyes), building or nature elements (trees, dark constructions or nature phenomena like shades). Table I presents comparison and assessments of the examined methods. The grade was given in a scale from - - (what represents weak grade) to + + (what represents high grade). Comparing research results we conclude that calculations performed by SFA are simple. We just use formulas (5) \u2013 (7) to calculate position and perform move of each point in examined 2D input images. SURF and SIFT may present better precision in recognition of input object border line recognition, as it is one of their original purposes. SFA is covering whole recognized objects with points. However SFA, in final 2D classifier will be applied\nFigure 4. Dark key-points search in landscape images: in first row on the left simplified SURF result and on the right simplified SIFT result, in the second row SFA result\nto search for certain objects in 2D input images, therefore we can think of it as a main advantage. Moreover SFA algorithm efficiency is increased if we are looking for key-points with high contrast in relation to surroundings, what will be used in final 2D recognition system based on canny and sobel\nFigure 5. Dark key-points search in sharp landscape images: in first row on the left simplified SURF result and on the right simplified SIFT result, in the second row SFA result\nfilter for SFA input images."}, {"heading": "IV. FINAL REMARKS", "text": "Research presented in this paper show that EC methods are an excellent tool to perform process of key-areas search in 2D images of any kind. It is possible to improve object recognition by application of sophisticated fitness function, which can precisely describe properties of objects and introduction of image filtering. In presented experiments we were looking for sample objects. Recognized points present various, miscellaneous but hypothetical cases. However, in the real applications, identification of objects in 2D images becomes nontrivial problem. Search objects can be not easy to recognize, as discussed for some examples in section III-B due to e.g. wear (expenditure) of elements not enough contrast and environment conditions (lightness, rain, fog etc.). Therefore we will continue research on application of EC methods in the process of 2D image classification to develop the final 2D recognition system based on canny and sobel filter for SFA input images.\nSumming up, presented application of EC methods to search for 2D images key-areas allows to select areas of interest. SFA is efficient and in comparison to classic methods may give better results. At the same time it allows to easily explore entire 2D input image in search for selected objects without many complicated mathematical operations\nFigure 6. Bright key-points search in sharp and human posture images: in first row on the left simplified SURF result and on the right simplified SIFT result, in the second row SFA result\nlike these in classic methods. It is possible to increase efficiency of SFA. If applied to filtered objects located among many other of low brightness, presented SFA may be used as dedicated recognition system for 2D input images. This is second part of the project we are working on. Early results are promising, however the idea needs more research. For example we have implemented the canny and sobel filter also in the GPU parallel version dedicated for SFA recognition. Therefore in the future research we hope to present efficient SFA recognition system for 2D input images based on GPU parallel canny and sobel filter."}], "references": [{"title": "Creating learning sets for control systems using an evolutionary method", "author": ["M. Gabryel", "R.K. Nowicki", "M. Wo\u017aniak"], "venue": "Lecture Notes in Computer Science - SIDE\u20192012, vol. 7269, pp. 206\u2013213, 2012.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "An innovative hybrid neuro-wavelet method for reconstruction of missing data in astronomical photometric surveys", "author": ["G. Capizzi", "C. Napoli", "L. Patern\u00f2"], "venue": "Artificial Intelligence and Soft Computing. Springer Berlin Heidelberg, 2012, pp. 21\u201329.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "Genetic cost optimization of the gi/m/1/n finite-buffer queue with a single vacation policy", "author": ["M. Gabryel", "R.K. Nowicki", "M. Wo\u017aniak", "W.M. Kempa"], "venue": "Lecture Notes in Artificial Intelligence - ICAISC\u20192013, vol. 7895, PART II, pp. 12\u201323, 2013.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "On applying cuckoo search algorithm to positioning gi/m/1/n finite-buffer queue with a single vacation policy", "author": ["M. Wo\u017aniak"], "venue": "Proc. IEEE Mexican International Conference on Artificial Intelligence (MICAI\u20192013), Mexico City, Mexico, 2013, pp. 59\u201364.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Exploiting solar wind time series correlation with magnetospheric response by using an hybrid neuro-wavelet approach", "author": ["C. Napoli", "F. Bonanno", "G. Capizzi"], "venue": "Proceedings of the International Astronomical Union, vol. 6, no. S274, pp. 156\u2013158, 2010.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "On applying evolutionary computation methods to optimization of vacation cycle costs in finite-buffer queue", "author": ["M. Wo\u017aniak", "W.M. Kempa", "M. Gabryel", "R.K. Nowicki", "Z. Shao"], "venue": "Lecture Notes in Artificial Intelligence - ICAISC\u20192014, vol. 8467, PART I, pp. 480\u2013491, 2014.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "A hybrid neuro\u2013wavelet predictor for qos control and stability", "author": ["C. Napoli", "G. Pappalardo", "E. Tramontana"], "venue": "AI* IA 2013: Advances in Artificial Intelligence. Springer International Publishing, 2013, pp. 527\u2013538.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "A finite-buffer queue with single vacation policy - analytical study with evolutionary positioning", "author": ["M. Wo\u017aniak", "W.M. Kempa", "M. Gabryel", "R.K. Nowicki"], "venue": "International Journal of  Applied Mathematics and Computer Science, pp. accepted\u2013in press, 2014.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Analysis of the active module mechatronical systems", "author": ["A. Nowak", "M. Wo\u017aniak"], "venue": "Proc. International Conference Mechanika, Kaunas University of Technology, Liethuanija, 2008, pp. 371\u2013376.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2008}, {"title": "Algorithm for optimization of the active module by the use of genetic algorithm", "author": ["\u2014\u2014"], "venue": "Acta Mechanica Slovaca, vol. 3, no. C, pp. 307\u2013316, 2008.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2008}, {"title": "Optimization of the active vibroisolation system for operator\u2019s cabin with the hydropneumatical element", "author": ["\u2014\u2014"], "venue": "Transactions of the Universities of Ko\u0161ice, vol. 3, pp. 113\u2013116, 2009.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2009}, {"title": "Tackling consistency issues for runtime updating distributed systems", "author": ["F. Banno", "D. Marletta", "G. Pappalardo", "E. Tramontana"], "venue": "Proceedings of International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum (IPDPSW). IEEE, 2010, pp. 1\u20138.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Experimental verification of immune recruitment mechanism and clonal selection algorithm applied for solving the inverse problems of pure metal solidification", "author": ["E. Hetmaniok", "D. S\u0142ota", "A. Zielonka"], "venue": "International Journal of Pure and Applied Mathematics, vol. 85, no. 1, pp. 171\u2013178, 2013.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Optimization of the sizing of a solar thermal electricity plant: Mathematical programming versus genetic algorithms", "author": ["J. Cabello", "J. Cejudo", "M. Luque", "F. Ruiz", "K. Deb", "R. Tewari"], "venue": "Proc. IEEE Congress on Evolutionary Computation (IEEE CEC\u20192009), Trondheim, Norway, May 2009, pp. 1193\u20131200.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Hybrid neural networks architectures for soc and voltage prediction of new generation batteries storage", "author": ["G. Capizzi", "F. Bonanno", "C. Napoli"], "venue": "Clean Electrical Power (ICCEP), 2011 International Conference on. IEEE, 2011, pp. 341\u2013344.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2011}, {"title": "An adaptive particle swarm optimization with multiple adaptive methods", "author": ["M. Hu", "T. Wu", "J.D. Weir"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 17, no. 5, pp. 705\u2013 720, 2013.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Optimal management of various renewable energy sources by a new forecasting method", "author": ["F. Bonanno", "G. Capizzi", "A. Gagliano", "C. Napoli"], "venue": "Power Electronics, Electrical Drives, Automation and Motion (SPEEDAM), 2012 International Symposium on. IEEE, 2012, pp. 934\u2013940.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "On handwriting preprocessing for 2d object recognition systems", "author": ["M. Wo\u017aniak", "D. Po\u0142ap", "Z. Marsza\u0142ek"], "venue": "International Conference on Advances in Information Processing and Communication Technologies - IPCT\u20192014. Santa Barbara, California, USA: The IRED, Seek Digital Library, 2014, pp. 46\u201353.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2014}, {"title": "An idea to apply firefly algorithm in 2d images key-points search", "author": ["M. Wo\u017aniak", "Z. Marsza\u0142ek"], "venue": "Communications in Computer and Information Science - ICIST\u20192014, no. accepted\u2013in press, 2014.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "Basic concept of cuckoo search algorithm for 2d images processing with some research results", "author": ["M. Wo\u017aniak", "D. Po\u0142ap"], "venue": "Proceedings of the 10th International Conference on Signal Processing and Multimedia Applications - SIGMAP\u20192014. SciTePress, 2014, pp. accapted\u2013in press.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "Automatically characterising components with concerns and reducing tangling", "author": ["E. Tramontana"], "venue": "Proceedings of QUORS workshop at Compsac. IEEE, 2013.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2013}, {"title": "Using modularity metrics to assist move method refactoring of large systems", "author": ["C. Napoli", "G. Pappalardo", "E. Tramontana"], "venue": "Seventh International Conference on Complex, Intelligent, and Software Intensive Systems - CISIS 2013, July 2013, pp. 529\u2013534.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2013}, {"title": "AODP: refactoring code to provide advanced aspect-oriented modularization of design patterns", "author": ["R. Giunta", "G. Pappalardo", "E. Tramontana"], "venue": "Proceedings of Symposium on Applied Computing (SAC). ACM, 2012.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2012}, {"title": "Suggesting extract class refactoring opportunities by measuring strength of method interactions", "author": ["G. Pappalardo", "E. Tramontana"], "venue": "Proceedings of Asia Pacific Software Engineering Conference (APSEC). IEEE, December 2013.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2013}, {"title": "A cascade neural network architecture investigating surface plasmon polaritons propagation for thin metals in openmp", "author": ["F. Bonanno", "G. Capizzi", "G.L. Sciuto", "C. Napoli", "G. Pappalardo", "E. Tramontana"], "venue": "Lecture Notes in Artificial Intelligence - ICAISC\u20192014, vol. 8468, PART I, pp. 22\u201333, 2014.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2014}, {"title": "Some remarks on the application of rnn and prnn for the charge-discharge simulation of advanced lithium-ions battery energy storage", "author": ["F. Bonanno", "G. Capizzi", "C. Napoli"], "venue": "Power Electronics, Electrical Drives, Automation and Motion (SPEEDAM), 2012 International Symposium on. IEEE, 2012, pp. 941\u2013945.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2012}, {"title": "Recurrent neural network-based control strategy for battery energy storage in generation systems with intermittent renewable energy sources", "author": ["G. Capizzi", "F. Bonanno", "C. Napoli"], "venue": "Clean Electrical Power (ICCEP), 2011 International Conference on. IEEE, 2011, pp. 336\u2013340.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "A new approach for lead-acid batteries modeling by local cosine", "author": ["\u2014\u2014"], "venue": "Power Electronics Electrical Drives Automation and Motion (SPEEDAM), 2010 International Symposium on. IEEE, 2010, pp. 1074\u20131079.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2010}, {"title": "Speeding up surf", "author": ["P. Abeles"], "venue": "Advances in Visual Computing - LNCS, vol. 8034, pp. 454\u2013464, 2013.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2013}, {"title": "Surf: Speeded up robust features", "author": ["H. Bay", "A. Ess", "T. Tuytelaars", "L.V. Gool"], "venue": "Computer Vision and Image Understanding, vol. 110, no. 3, pp. 346\u2013359, 2008.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2008}, {"title": "Model based pose estimation using surf", "author": ["P. Decker", "D. Paulus"], "venue": "Lecture Notes in Computer Science - ACCV\u20192010, vol. 6469, pp. 11\u201320, 2011.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "An evaluation of open source surf implementations", "author": ["D. Gossow", "P. Decker", "D. Paulus"], "venue": "Lecture Notes in Computer Science - RoboCup\u20192010, vol. 6556, pp. 169\u2013179, 2011.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2010}, {"title": "Annular iris recognition using surf", "author": ["H. Mehrotra", "B. Majhi", "P. Gupta"], "venue": "Lecture Notes in Computer Science - PRMI\u20192009, vol. 5909, pp. 464\u2013469, 2009.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2009}, {"title": "Probabilistic models of appearance for 3-d object recognition", "author": ["A. Pope", "D. Lowe"], "venue": "International Journal of Computer Vision, vol. 40, no. 2, pp. 149\u2013167, 1998.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1998}, {"title": "Global localization using distinctive visual features", "author": ["S. Se", "D. Lowe", "J. Little"], "venue": "ICIROS\u20192002 Proceedings, 2002, pp. 226\u2013231.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2002}, {"title": "Viewbased object recognition using saliency maps", "author": ["Z. Zhang", "R. Deriche", "O. Faugeras", "Q. Luong"], "venue": "Artificial Intelligence, no. 78, pp. 87\u2013119, 1995.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1995}, {"title": "Combining harris interest points and the sift descriptor for fast scale-invariant object recognition", "author": ["P. Azad", "T. Asfour", "R. Dillmann"], "venue": "IROS\u20192009 Proceedings. IEEE, 2009, pp. 4275 \u2013 4280.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2009}, {"title": "Weighted multi-scale image matching based on harris-sift descriptor", "author": ["C. Sun", "J. Wang", "Z. Liu", "J. Li"], "venue": "TELKOMNIKA, vol. 11, no. 10, pp. 5965\u20135972, 2013.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2013}, {"title": "Local gray value invariants for image retrieval", "author": ["C. Schmid", "R. Mohr"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 19, no. 5, pp. 530\u2013534, 1997.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 1997}, {"title": "Large-scale tests of a keyed, appearance-based 3-d object recognition system", "author": ["R. Nelson", "A. Selinger"], "venue": "Vision Research, vol. 38, no. 15, pp. 2469\u20132488, 1998.", "citeRegEx": "41", "shortCiteRegEx": null, "year": 1998}, {"title": "View-based object recognition using saliency maps", "author": ["A. Shokoufandeh", "I. Marsic", "S. Dickinson"], "venue": "Image and Vision Computing, vol. 17, pp. 445\u2013460, 1999.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 1999}, {"title": "Recognition without correspondence using multidimensional receptive field histograms", "author": ["B. Schiele", "J. Crowley"], "venue": "International Journal of Computer Vision, vol. 36, no. 1, pp. 31\u201350, 2000.", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2000}, {"title": "Distinctive image features from scale-invariant keypoints", "author": ["G. Lowe"], "venue": "International Journal of Computer Vision, vol. 60, no. 2, pp. 91\u2013110, 2004.", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2004}, {"title": "Invariant features from interest point groups", "author": ["M. Brown", "D. Lowe"], "venue": "BMVC\u20192002 Proceedings, 2002, pp. 656\u2013 665.", "citeRegEx": "45", "shortCiteRegEx": null, "year": 2002}, {"title": "Engineering Optimization: An Introduction with Metaheuristic Applications", "author": ["X.S. Yang"], "venue": null, "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2010}, {"title": "Firefly algorithms for multimodal optimization", "author": ["\u2014\u2014"], "venue": "Lecture Notes in Computer Science - SAGA\u20192009, vol. 5792, pp. 169\u2013178, 2009.", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2009}, {"title": "A chaotic firefly algorithm applied to reliabilityredundancy optimisation", "author": ["L. dos Santos Coelho", "D.L. de Andrade Bernert", "V.C. Mariani"], "venue": "Proc. IEEE Congress on Evolutionary Computation (IEEE CEC\u20192011), New Orleans, LA, USA, 2011, pp. 517\u2013521.", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2011}, {"title": "Multilevel minimum cross entropy threshold selection based on the firefly algorithm", "author": ["M.H. Horng", "R.J. Liou"], "venue": "Expert Systems with Applications, vol. 38, pp. 14 805\u201314 811, 2011.", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2011}, {"title": "Evolutionary discrete firefly algorithm for travelling salesman problem", "author": ["G.K. Jati", "S. Suyanto"], "venue": "Lecture Notes in Artificial Intelligece - ICAIS\u20192011, vol. 6943, pp. 393\u2013403, 2011.", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2011}, {"title": "Scheduling jobs on grid computing using firefly algorithm", "author": ["A. Yousif", "A.H. Abdullah", "S.M. Nor", "A.A. Abdelaziz"], "venue": "Journal of Theoretical and Applied Information Technology, vol. 33, no. 2, pp. 155\u2013164, 2011.", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2011}, {"title": "Eagle strategy using l\u00e9vy walks and firefly algorithm for stochastic optimization", "author": ["X.S. Yang", "S. Deb"], "venue": "Studies in Computational Intelligence - NICSO\u20192010, vol. 284, pp. 101\u2013 111, 2010.", "citeRegEx": "53", "shortCiteRegEx": null, "year": 2010}, {"title": "Vector quantization using the firefly algorithm for image compression", "author": ["M.H. Horng"], "venue": "Expert Systems with Applications, vol. 39, pp. 1078\u20131091, 2012.", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2012}, {"title": "Analysis of natureinspired firefly algorithm based back-propagation neural network training", "author": ["S. Nandy", "P.P. Sarkar", "A. Das"], "venue": "International Journal of Computer Applications, vol. 43, no. 22, pp. 8\u201316, 2012.", "citeRegEx": "55", "shortCiteRegEx": null, "year": 2012}, {"title": "Unit commitment in deregulated power system using lagrangian firefly algorithm", "author": ["B. Rampriya", "K. Mahadevan", "S. Kannan"], "venue": "Proc. IEEE International Conference on Communication Control and Computing Technologies (ICC- CCT\u20192010), Nadu, India, 2010, pp. 389\u2013393.", "citeRegEx": "56", "shortCiteRegEx": null, "year": 2010}, {"title": "Digital Image Processing: PIKS Inside, 3rd ed", "author": ["W. Pratt"], "venue": null, "citeRegEx": "57", "shortCiteRegEx": "57", "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "EC applied to create learning sets for artificial intelligence (AI) control systems is discussed in [1], [2], [3].", "startOffset": 100, "endOffset": 103}, {"referenceID": 1, "context": "EC applied to create learning sets for artificial intelligence (AI) control systems is discussed in [1], [2], [3].", "startOffset": 105, "endOffset": 108}, {"referenceID": 2, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 87, "endOffset": 90}, {"referenceID": 3, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 92, "endOffset": 95}, {"referenceID": 4, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 97, "endOffset": 100}, {"referenceID": 5, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 105, "endOffset": 108}, {"referenceID": 6, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 110, "endOffset": 113}, {"referenceID": 7, "context": "Some aspects of positioning computing network models by the use of EC are presented in [4], [5], [6] and [7], [8] or [9].", "startOffset": 117, "endOffset": 120}, {"referenceID": 8, "context": "In [10], [11] and [12], [13] applications of EC methods in dynamic systems positioning and simulation is presented.", "startOffset": 3, "endOffset": 7}, {"referenceID": 9, "context": "In [10], [11] and [12], [13] applications of EC methods in dynamic systems positioning and simulation is presented.", "startOffset": 9, "endOffset": 13}, {"referenceID": 10, "context": "In [10], [11] and [12], [13] applications of EC methods in dynamic systems positioning and simulation is presented.", "startOffset": 18, "endOffset": 22}, {"referenceID": 11, "context": "In [10], [11] and [12], [13] applications of EC methods in dynamic systems positioning and simulation is presented.", "startOffset": 24, "endOffset": 28}, {"referenceID": 12, "context": "iron cast simulation is shown in [14].", "startOffset": 33, "endOffset": 37}, {"referenceID": 13, "context": "EC methods are also supposed to be more adaptive and efficient in comparison to classic optimization methods, see [15], [16] and [17], [18].", "startOffset": 114, "endOffset": 118}, {"referenceID": 14, "context": "EC methods are also supposed to be more adaptive and efficient in comparison to classic optimization methods, see [15], [16] and [17], [18].", "startOffset": 120, "endOffset": 124}, {"referenceID": 15, "context": "EC methods are also supposed to be more adaptive and efficient in comparison to classic optimization methods, see [15], [16] and [17], [18].", "startOffset": 129, "endOffset": 133}, {"referenceID": 16, "context": "EC methods are also supposed to be more adaptive and efficient in comparison to classic optimization methods, see [15], [16] and [17], [18].", "startOffset": 135, "endOffset": 139}, {"referenceID": 17, "context": "First attempts to apply CI methods in 2D image processing are discussed in [19], [20] and [21].", "startOffset": 75, "endOffset": 79}, {"referenceID": 18, "context": "First attempts to apply CI methods in 2D image processing are discussed in [19], [20] and [21].", "startOffset": 81, "endOffset": 85}, {"referenceID": 19, "context": "First attempts to apply CI methods in 2D image processing are discussed in [19], [20] and [21].", "startOffset": 90, "endOffset": 94}, {"referenceID": 17, "context": "In [19], [22] some aspects of handwriting preprocessing for artificial intelligence (AI) classification systems are discussed.", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "In [19], [22] some aspects of handwriting preprocessing for artificial intelligence (AI) classification systems are discussed.", "startOffset": 9, "endOffset": 13}, {"referenceID": 18, "context": "[20] and [21] show ideas of a novel approach to identify simple objects in 2D images by the use of EC methods.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] and [21] show ideas of a novel approach to identify simple objects in 2D images by the use of EC methods.", "startOffset": 9, "endOffset": 13}, {"referenceID": 21, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 80, "endOffset": 84}, {"referenceID": 22, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 86, "endOffset": 90}, {"referenceID": 23, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 92, "endOffset": 96}, {"referenceID": 24, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 156, "endOffset": 160}, {"referenceID": 25, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 277, "endOffset": 281}, {"referenceID": 26, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 283, "endOffset": 287}, {"referenceID": 27, "context": "These results can help in move methods refactoring of large systems (please see [23], [24], [25]) and surface plasmon polaritons in thin metals (please see [26]), where we need to identify input objects, as well as an advanced modelling technique for a wide variety of systems [27], [28], [29].", "startOffset": 289, "endOffset": 293}, {"referenceID": 28, "context": "Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34].", "startOffset": 71, "endOffset": 75}, {"referenceID": 29, "context": "Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34].", "startOffset": 77, "endOffset": 81}, {"referenceID": 30, "context": "Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34].", "startOffset": 83, "endOffset": 87}, {"referenceID": 31, "context": "Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34].", "startOffset": 89, "endOffset": 93}, {"referenceID": 32, "context": "Let us give only a short description here, for more details please see [30], [31], [32], [33] or [34].", "startOffset": 97, "endOffset": 101}, {"referenceID": 28, "context": "particular Hessian-matrix approximation (for details please see [30] and [31]).", "startOffset": 64, "endOffset": 68}, {"referenceID": 29, "context": "particular Hessian-matrix approximation (for details please see [30] and [31]).", "startOffset": 73, "endOffset": 77}, {"referenceID": 18, "context": "To localize interesting points it is used non\u2013maximum suppression in 3 \u00d7 3 \u00d7 3 neighborhood (for more results please see also [20] and [21]).", "startOffset": 126, "endOffset": 130}, {"referenceID": 19, "context": "To localize interesting points it is used non\u2013maximum suppression in 3 \u00d7 3 \u00d7 3 neighborhood (for more results please see also [20] and [21]).", "startOffset": 135, "endOffset": 139}, {"referenceID": 33, "context": "This generates features that may densely cover image for full range of scales and locations, please see [35] and [36].", "startOffset": 104, "endOffset": 108}, {"referenceID": 34, "context": "This generates features that may densely cover image for full range of scales and locations, please see [35] and [36].", "startOffset": 113, "endOffset": 117}, {"referenceID": 35, "context": "SIFT idea is based on [37], where possibility of matching Harris corners over large image by using correlation window around each corner was discussed (see also [38] and [39] for details).", "startOffset": 22, "endOffset": 26}, {"referenceID": 36, "context": "SIFT idea is based on [37], where possibility of matching Harris corners over large image by using correlation window around each corner was discussed (see also [38] and [39] for details).", "startOffset": 161, "endOffset": 165}, {"referenceID": 37, "context": "SIFT idea is based on [37], where possibility of matching Harris corners over large image by using correlation window around each corner was discussed (see also [38] and [39] for details).", "startOffset": 170, "endOffset": 174}, {"referenceID": 38, "context": "This idea was developed in [40] to general image recognition, where Harris corners were applied to select keypoints by rotationally invariant descriptor of local image regions.", "startOffset": 27, "endOffset": 31}, {"referenceID": 39, "context": "Therefore [41], [35] and [42] extended local feature approach to achieve scale invariance.", "startOffset": 10, "endOffset": 14}, {"referenceID": 33, "context": "Therefore [41], [35] and [42] extended local feature approach to achieve scale invariance.", "startOffset": 16, "endOffset": 20}, {"referenceID": 40, "context": "Therefore [41], [35] and [42] extended local feature approach to achieve scale invariance.", "startOffset": 25, "endOffset": 29}, {"referenceID": 41, "context": "Then some special features like multidimensional histograms summarizing distribution of measurements useful for recognition of textured objects with deformable shapes were discussed in [43].", "startOffset": 185, "endOffset": 189}, {"referenceID": 42, "context": "Final version of this scale descriptor, less sensitive to local image distortions, was given in [44].", "startOffset": 96, "endOffset": 100}, {"referenceID": 42, "context": "According to [44] we have used L(X, \u03b3D) as scale space of image defined in", "startOffset": 13, "endOffset": 17}, {"referenceID": 43, "context": "where D( ~ X) and it\u2019s derivatives are evaluated at image points and T is offset from these points (for details see [45]).", "startOffset": 116, "endOffset": 120}, {"referenceID": 44, "context": "Since classic version of FA, first presented in [46] and [47], it was applied in many fields.", "startOffset": 48, "endOffset": 52}, {"referenceID": 45, "context": "Since classic version of FA, first presented in [46] and [47], it was applied in many fields.", "startOffset": 57, "endOffset": 61}, {"referenceID": 46, "context": "In [48] chaotic FA was applied in reliability-redundancy optimization.", "startOffset": 3, "endOffset": 7}, {"referenceID": 47, "context": "In [49] it is applied to minimum cross entropy threshold selection.", "startOffset": 3, "endOffset": 7}, {"referenceID": 48, "context": "In [50] and [51] this method is applied to solve traveling salesman problem and jobs scheduling.", "startOffset": 3, "endOffset": 7}, {"referenceID": 49, "context": "In [50] and [51] this method is applied to solve traveling salesman problem and jobs scheduling.", "startOffset": 12, "endOffset": 16}, {"referenceID": 50, "context": "It is also efficient in continuous optimization (see [52]) or multimodal optimization (see [53]).", "startOffset": 91, "endOffset": 95}, {"referenceID": 51, "context": "While in [54] is presented efficient application of FA in vector quantization.", "startOffset": 9, "endOffset": 13}, {"referenceID": 52, "context": "FA is also efficient in neural network training and power systems positioning (see [55] and [56], respectively).", "startOffset": 83, "endOffset": 87}, {"referenceID": 53, "context": "FA is also efficient in neural network training and power systems positioning (see [55] and [56], respectively).", "startOffset": 92, "endOffset": 96}, {"referenceID": 47, "context": "Finally some important aspects of applying FA in the process of image compression are described in [49] and [20].", "startOffset": 99, "endOffset": 103}, {"referenceID": 18, "context": "Finally some important aspects of applying FA in the process of image compression are described in [49] and [20].", "startOffset": 108, "endOffset": 112}, {"referenceID": 18, "context": "Where in [20] was discussed idea for potential application of FA classic version in 2D image processing.", "startOffset": 9, "endOffset": 13}, {"referenceID": 54, "context": "Therefore using SFA with simple fitness function we are to build SFA classifier based on canny or sobel filter (for details on 2D image filtering please see [57]).", "startOffset": 157, "endOffset": 161}], "year": 2014, "abstractText": "In order to identify an object, human eyes firstly search the field of view for points or areas which have particular properties. These properties are used to recognise an image or an object. Then this process could be taken as a model to develop computer algorithms for images identification. This paper proposes the idea of applying the simplified firefly algorithm to search for key-areas in 2D images. For a set of input test images the proposed version of firefly algorithm has been examined. Research results are presented and discussed to show the efficiency of this evolutionary computation method.", "creator": "LaTeX with hyperref package"}}}