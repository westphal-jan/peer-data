{"id": "1503.02351", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Mar-2015", "title": "Fully Connected Deep Structured Networks", "abstract": "Semantic segmentation, in particular, often uses a two-step process. Convolutionary networks are trained to provide good local pixel-by-pixel characteristics, as the second step is traditionally a more global graphical model. In this work, we unify this two-step process into a single common training algorithm. We demonstrate our method of semantic image segmentation and show encouraging results on the challenging PASCAL VOC 2012 dataset.", "histories": [["v1", "Mon, 9 Mar 2015 01:08:00 GMT  (1545kb,D)", "http://arxiv.org/abs/1503.02351v1", null]], "reviews": [], "SUBJECTS": "cs.CV cs.LG", "authors": ["alexander g schwing", "raquel urtasun"], "accepted": false, "id": "1503.02351"}, "pdf": {"name": "1503.02351.pdf", "metadata": {"source": "CRF", "title": "Fully Connected Deep Structured Networks", "authors": ["Alexander G. Schwing", "Raquel Urtasun"], "emails": ["aschwing@cs.toronto.edu", "urtasun@cs.toronto.edu"], "sections": [{"heading": "1 Introduction", "text": "In the past few years, Convolutional Neural Networks (CNNs) have revolutionized computer vision. They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10]. This is mainly due to their high representational power achieved by learning complex, non-linear dependencies.\nIt is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3]. This is perhaps due to the fact that to achieve invariance, pooling operations are performed, often reducing the dimensionality of the prediction. A Markov random field (MRF) is then used as a refinement step in order to obtain segmentations that respect well segment boundaries. The seminal work of [17] showed that inference in fully connected MRFs is possible if the smoothness potentials are Gaussian. Impressive performance was demonstrated in semantic segmentation with hand craft features. Later, [3] extended the unary potentials to incorporate convolutional network features. However, these current approaches train the segmentation models in a piece-wise fashion, fixing the unary weights during learning of the parameters of the pairwise terms which enforce smoothness.\nIn this paper we present an algorithm that is able to train jointly the parameters of the convolutional network defining the unary potentials as well as the smoothness terms taking into account the dependencies between the random variables. We demonstrate the effectiveness of our approach using the dataset of the PASCAL VOC 2012 challenge [9]."}, {"heading": "2 Background", "text": "We begin by describing how to learn probabilistic deep networks which take into account correlations between multiple output variables y = (y1, . . . , yN ) that are of interest to us. Moreover, a valid configuration y \u2208 Y = \u220fN i=1 Yi is assumed to lie in the product space of the discrete variable domains Yi = {1, . . . |Yi|}. For a given data sample x \u2208 X , and a parameter vector w \u2208 RA, the score F of a configuration y \u2208 Y is generally modeled by the mapping F : X \u00d7 Y \u00d7 RA \u2192 R.\nar X\niv :1\n50 3.\n02 35\n1v 1\n[ cs\n.C V\n] 9\nM ar\n2 01\nThe prediction task amounts to finding the configuration\ny\u2217 = arg max y\u0302\u2208Y F (x, y\u0302;w), (1)\nwhich maximizes the score F (x, y\u0302;w). Note that the best scoring configuration y\u2217 is equivalently given as the maximizer of the probability distribution\np(y\u0302 | x,w) \u221d expF (x, y\u0302;w),\nsince the exponential function is a monotone increasing function and the normalization constant is independent of the configuration y\u0302 \u2208 Y , i.e., it is constant indeed. The learning task is concerned with finding a parameter vector\nw\u2217 = arg max w\u2208RA \u220f (x,y)\u2208D p(y | x,w), (2)\nwhich maximizes the likelihood of a given training set D = {(x, y)}. The training set consists of input-output pairs (x, y) which are assumed to be independent and identically distributed. Note that maximizing the likelihood is equivalent to maximizing the cross entropy between the modeled distribution p(y\u0302 | x,w) and a target distribution which places all its mass on the groundtruth configuration y. Throughout this work we make no further assumptions about the dependence of the scoring function F (x, y\u0302;w) on the parameter vector w, i.e., F (x, y\u0302;w) is generally neither convex nor smooth.\nFor problems where the output-space size |Y| = \u220fN\ni=1 |Yi| is in the thousands, we can exactly solve the inference task given in Eq. (1) by searching over all possible output space configurations y\u0302 \u2208 Y . In such a setting, those different configurations are typically referred to as different classes. Similarly, we normalize the distribution p(y\u0302 | x,w) by summing up the exponentiated score expF (x, y\u0302;w) over all possibilities y\u0302 \u2208 Y . This is often referred to as a soft-max computation. Non-convexity and non-smoothness of the learning objective w.r.t. the parameters w is answered with stochastic gradient ascent. For efficiency, the gradient is often computed on a small subset of the training data, i.e., a mini-batch.\nWe summarize the resulting training algorithm in Fig. 1. On a high level it consists of four steps which are iterated until a stopping criterion is met: (i) the forward pass to compute the scoring function F (x, y\u0302;w) for all output space configurations y\u0302 \u2208 Y . (ii) normalizing the scoring function via a soft-max computation to obtain the probability distribution p(y\u0302 | x,w). (iii) computation and back-propagation of the gradient of the loss function, i.e., often the log-likelihood or equivalently the cross-entropy. (iv) an update of the parameters.\nHowever, solving the inference task given in Eq. (1) or the learning problem stated in Eq. (2) is computationally challenging if we consider more complex output spaces Y , e.g., those arising from tasks like image tagging. The situation is even more severe if we target image segmentation where the exponential number of possible output space configurations prevents even storage of F (x, y\u0302;w) \u2200y\u0302 \u2208 Y . Note that this is required in the first line of the algorithm summarized in Fig. 1.\nGiven an exponential amount of possible configurations |Y| = \u220fN\ni=1 |Yi|, how do we represent the scoring function F (x, y\u0302;w) efficiently? Assuming we have an efficient representation, how can we effectively normalize the probability p(y\u0302 | x,w)? One possible answer to those questions was given by Chen et al. [4], who discussed extending log-linear models, i.e., those with a scoring function of\nthe form F (x, y\u0302;w) = w>\u03c6(x, y\u0302), to the more general setting, i.e., an arbitrary dependence of the scoring function F (x, y\u0302;w) on the parameter vector w.\nIn short, [4] assumed the global scoring function F (x, y\u0302;w) to decompose into a sum of local scoring functions fr, each depending on a small subset r \u2286 {1, . . . , N} of variables y\u0302r = (y\u0302i)i\u2208r. All restrictions r required to compute the global function via\nF (x, y\u0302;w) = \u2211 r\u2208R fr(x, y\u0302r;w) (3)\nare subsumed in the set R. If the size of each and every local restriction set r \u2208 R is small, F (x, y\u0302;w) is efficiently representable.\nTo compute the gradient of the log-likelihood cost function, we require a properly normalized distribution p(y\u0302 | x,w), or more specifically its marginals b(x,y),r(y\u0302r) for each restriction r \u2208 R. To this end, message passing type algorithms were employed by [4]. Such an approach is exact if the distribution p(y\u0302 | x,w) is of low tree-width. Otherwise computational complexity is prohibitively large and approximations like loopy belief propagation [26], convex belief propagation [39] or treereweighted message passing [37] are alternatives that were successfully applied.\nThe resulting iterative method of [4] is summarized in Fig. 2. In a first step the forward pass computes all outputs of every local scoring function. Afterwards (approximate) marginals are obtained in a second step, and utilized to compute the derivative of the (approximated) maximum likelihood cost function w.r.t. the parameters w. The following backward pass computes the gradient of the parameters by repeatedly applying the chain-rule according to the definition of the scoring function F (x, y\u0302;w). The gradient is then utilized during the final parameter update.\nNot only does the approach presented by [4] fail if the decomposition assumed in Eq. (3) is not available. But it is also computationally challenging to obtain the required marginals if too many local functions are required. I.e., computation is slow if the number of restrictions |R| is large, e.g., when working with densely connected image segmentation models where every pixel is possibly correlated to every other pixel in the image."}, {"heading": "3 Approach", "text": "Densely connected models were previously considered by [17, 33, 34, 18] and shown to yield impressive results for the image segmentation task. Learning the parameters of densely connected models was considered by Kra\u0308henbu\u0308hl and Koltun [18] in the context of the log-linear setting. Following [4] we aim at extending those fully connected log-linear models to the more general setting of an arbitrary function F (x, y\u0302;w), e.g., a deep convolutional neural network. Note that a similar approach has been recently discussed by [41] in independent work.\nLet us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18]. Before getting into the details we note that the presented approach trades computational complexity of the general method of [4] with a restriction on the pairwise functions fij (i.e., r = {i, j}). Concretely, the local functions fij are assumed to be mixtures of kernels in a feature space as detailed below. For simplicity we assume that local functions of order higher than two are not required to represent our global scoring function F (x, y\u0302;w). Generalizations have however been presented, e.g., by Vineet et al. [34]."}, {"heading": "3.1 Inference", "text": "We begin our discussion by considering the inference task. To obtain a computationally efficient prediction algorithm we use a mean field approximation of the model distribution p(y\u0302 | x,w) for every sample (x, y). More formally, we assume our approximation to factor according to q(x,y)(y\u0302) = \u220fN i=1 q(x,y),i(y\u0302i). Given some parametersw, we employ a forward pass to obtain our local function representations fr(x, y\u0302r;w). Next we compute the single variable marginals q(x,y),i(y\u0302i) by minimizing the Kullback-Leibler (KL) divergence w.r.t. to the assumed factorization of the mean field distribution q(x,y)(y\u0302), i.e.,\nq\u2217(x,y) = arg min q\u2208\u2206 DKL(q(x,y)(y\u0302)||p(y\u0302 | x,w)). (4)\nHereby q \u2208 \u2206 requires q to be a valid probability distribution. Due to non-convexity, only convergence to a stationary point of the KL divergence cost function is guaranteed for sequential block-coordinate updates [38, 16]. More precisely, iterating until convergence through the variables i \u2208 {1, . . . , N} using the closed form update\nq(x,y),i(y\u0302i) \u221d exp fi(y\u0302i, x, w) + \u2211 j\u2208N (i),y\u0302j fij(y\u0302i, y\u0302j , x, w)q(x,y),j(y\u0302j)  , (5) which assumes all marginals but q(x,y),i to be fixed, retrieves a stationary point for the cost function of the program given in Eq. (4). The set of variables neighboring i is denoted N (i). In the case of densely connected variables, the computational bottleneck arises from the second summand which involves \u2211 j\u2208N (i) |Yj | additions. The sum ranges over |N (i)| = N \u2212 1 terms for densely connected structured models. Hence the complexity of an update for a single marginal is of O(N), and updating all N marginals therefore requires O(N2) operations as also discussed by Kra\u0308henbu\u0308hl and Koltun [18].\nImportantly, Kra\u0308henbu\u0308hl and Koltun [17] observed that a high dimensional Gaussian filter can be applied to concurrently update all marginals in O(N). This is achievable when constraining ourselves to pairwise functions being mixtures of M kernels in the feature space as mentioned before. Formally, we require\nfij(y\u0302i, y\u0302j , x, w) = M\u2211 m=1 \u00b5(m)(y\u0302i, y\u0302j , w)k (m)(f\u0302i(x)\u2212 f\u0302j(x)),\nwhere \u00b5(m) is a label compatibility function, k(m) is a kernel function, and f\u0302i(x) are features of variable i depending on the data x.\nHowever, to ensure convergence to a stationary point of the KL divergence cost function for this parallel update, further restrictions on the form of the pairwise functions fij apply. Formally, if the label compatibility functions \u00b5(m) are negative semi-definite \u2200m, and the kernels k(m) are positive definite \u2200m, the KL divergence is readily given as the difference between a concave and a convex term [18]. Hence the concave-convex procedure (CCCP) [40] is directly applicable. We therefore proceed iteratively by first linearizing the concave term at the current location and second minimizing the resulting linearized but convex program.\nAs detailed by Kra\u0308henbu\u0308hl and Koltun [18], and as discussed above, finding the linearization is equivalently solved via filtering in time linear in N . Solving the convex program in its original form requires solving a non-linear system of equations independently for each marginal q(x,y),i(y\u0302i), e.g., via Newton\u2019s method. A further approximation to the cross-entropy term of the KL-divergence relates the efficient filtering based mean field update of the marginals q(x,y),i(y\u0302i) to the corresponding cost function for which a stationary point is found."}, {"heading": "3.2 Learning", "text": "Having observed that mean-field inference can be efficiently addressed with Gaussian filtering, given restrictions on the pairwise functions fij , we now turn our attention to the learning task. As mentioned before we aim at finding a parameter vector w that maximizes the likelihood objective function. Since the exact likelihood is computationally expensive, we use the log-likelihood based on\nthe mean-field marginals. Hence our surrogate loss function L(x,y) for a sample (x, y) with corresponding annotated ground truth labeling y is given by\nL(x,y)(q(x,y)) = \u2212 N\u2211 i=1 log q(x,y),i(yi). (6)\nTo perform a parameter update step we need the gradient of the surrogate loss function w.r.t. the parameters, i.e.,\n\u2202L(x,y) \u2202w = \u2202L(x,y) \u2202q(x,y) \u00b7 \u2202q(x,y) \u2202w . (7)\nThe gradient of the surrogate loss function L(x,y) w.r.t. the marginals is easily obtained from Eq. (6). It is given by\n\u2202L(x,y) \u2202q(x,y),i(y\u0302i) = \u2212 1 q(x,y),i(yi) Jy\u0302i = yiK, (8)\nwhere the Iverson bracket Jy\u0302i = yiK equals one if y\u0302i = yi, and returns zero otherwise. To perform a gradient step during learning, we additionally require the derivatives of the marginals w.r.t. the parameters, i.e., \u2202q(x,y),i(y\u0302i)\u2202w .\nMore carefully investigating the mean-field update given in Eq. (5) reveals a recursive definition. More concretely, the derivative \u2202qt(x,y),i(y\u0302i)\n\u2202w of the marginal q t (x,y),i(y\u0302i) after t iterations depends on\nthe results from earlier iterations. Hence, we obtain the desired result by successively back-tracking through the mean-field iterations from the last iteration back to the first. This direct computation is however computationally expensive. Fortunately, back-substitution into the loss gradient yields an algorithm which requires a total of T back-tracking steps, independent of the number of parameters. We refer the interested reader to [18] for additional details regarding the computation of the gradient \u2202q(x,y),i(y\u0302i)\n\u2202w .\nBut contrasting [18], we no longer assume the unaries to be given by a logistic regression model. Contrasting [3], we don\u2019t assume the unaries to be fixed during CRF parameter updates. Generalizing the gradient of the marginals w.r.t. parameters to arbitrary unaries is straightforward since the gradients are directly given by the marginals. Combined with the gradient of the log-likelihood loss function w.r.t. the marginals, given in Eq. (8), we obtain \u2202L(x,y)\u2202w as the difference between the ground-truth and the predicted marginals. This result is then used for back-propagation through any functional structure which provides the unary scoring functions fi, e.g., convolutional neural networks.\nDerivatives w.r.t. to label compatibility and kernel shape parameters are readily given in [18]. The resulting algorithm is summarized in Fig. 3. In short, we first obtain again our functional representation via a forward pass through any functional network. Subsequently we compute our meanfield marginals via filtering. Afterwards we obtain the gradient of the loss function via an efficient back-tracking. In the next step the gradient of the parameters is computed by back-propagating the gradient of the loss-function using the chain-rule dictated by the definition of the scoring function. In a final step we update the parameters."}, {"heading": "4 Experiments", "text": "We evaluate our approach summarized in Fig. 3 on the dataset of the Pascal VOC 2012 challenge [9]. The task is semantic image segmentation of 21 object classes (including background). The original dataset contains 1464 training, 1449 validation and 1456 test images. In addition to this data we make use of the annotations provided by Hariharan et al. [13], resulting in a total of 10582 training instances. The reported performance is measured using the intersection-over-union metric. Note that we conduct our tests on the 1449 validation set images which were neither used during training nor for fine-tuning."}, {"heading": "4.1 Model", "text": "Our model setup follows [3], i.e., we employ the 16 layer DeepNet model [31]. Just like [3] we first convert the fully connected layers into convolutions as first discussed in [12, 30]. This is useful since we are not interested in a single variable output prediction, but rather aim at learning probability masks. To obtain a larger probability mask we skip downsampling during the last two max-pooling operations. To take into account the skipped downsampling during subsequent convolutions we employ the \u2018a\u0300 trous (with hole) algorithm\u2019 [23]. It takes care of the fact that data is stored in an interleaved way, i.e., in our case convolutions sub-sample the input data by a factor of two or four respectively. To adapt to the 21 object classes we also replace the top layer of the DeepNet model to yield 21 classes for each pixel.\nSimilar to [3] we assume the input size of our network to be of dimension 306\u00d7 306 which results in a 40\u00d740 sized spatial output of the DeepNet which is in our case an intermediate result however. Contrasting [3], we jointly optimize for both unary and CRF parameters using the algorithm presented in Fig. 3. To this end, given images downsampled to a size of 306\u00d7 306, our algorithm first performs a forward pass through the convolutional DeepNet to obtain the 40 \u00d7 40 \u00d7 21 sized class probability maps in an intermediate stage. These intermediate class probability maps are directly up-sampled to the original image dimension using a bi-linear interpolation layer. This yields the actual output of our augmented DeepNet network defining the scoring function F (x, y\u0302, w). Note that the number N of variables y\u0302 = (y\u03021, . . . , y\u0302N ) \u2208 Y is therefore equal to the number of pixels of the original image.\nFor the second step of our algorithm we perform 5 iterations of mean field updates to compute the marginals q(x,y),i(y\u0302i) of the fully connected CRF. Those are then compared to the original groundtruth image segmentations, using as our loss function the sum of cross-entropy terms, i.e., the log-likelihood loss, as specified in Eq. (6). In the third step we back-track through the marginals to obtain a gradient of the loss function. Afterwards we back-propagate the derivatives w.r.t. the unary term through both the bi-linear interpolation and the 16-layer convolutional network. The shape and compatibility parameters of the CRF, detailed below, are updated directly.\nIt was shown independently by many authors [31, 4], that successively increasing the number of parameters during training typically yields better performance due to better initialization of larger models. We therefore train our model in two stages. First, we assume no pairwise connections to be present, i.e., we fine-tune the weights obtained from the DeepNet ImageNet model [31, 29] to the Pascal dataset [9]. Standard parameter settings for a momentum of 0.9, a weight decay of 0.0005 and learning rates of 0.01 and 0.001 for the top and all other layers are employed respectively. Due to the 12GB memory restrictions on the Tesla K40 GPU we use a mini-batch size of 20 images.\nIn a second stage we jointly train the convolutional network parameters as well as the compatibility and shape parameters of the dense CRF arising from the pairwise functions\nfij(y\u0302i, y\u0302j , x, w) = \u00b5(y\u0302i, y\u0302j) 2\u2211 m=1 wmk (m)(f\u0302 (m) i (x)\u2212 f\u0302 (m) j (x)). (9)\nHereby, we employ the Potts potential \u00b5(yi, yj) = Jyi = yjK and the Gaussian kernels given by\nk(m) = exp ( \u22121\n2 (f\n(m) i \u2212 f (m) i ) >\u03a3\u22121m (f\u0302 (m) i \u2212 f\u0302 (m) i )\n) .\nAs indicated in Eq. (9), we use M = 2 kernels, both with diagonal covariance matrix \u03a3m. One containing as features f\u0302i(x) the two-dimensional pixel positions, the other one containing as features the two dimensional pixel positions as well as the three color channels. Hence we obtain a total of nine parameters, i.e., two compatibility parametersw1 andw2 and 2+5 = 7 kernel shape parameters for the diagonal covariance matrices \u03a3m."}, {"heading": "4.2 Results", "text": "As mentioned before, all our results were computed on the validation set of the Pascal VOC dataset. This part of the data was neither used for training nor for fine-tuning.\nUnary performance: We first investigate the performance of the first training stage of the proposed approach, i.e., fine-tuning of the 16 layer DeepNet parameters on the Pascal VOC data. The validation set accuracy is plotted over the number of iterations in Fig. 4 (a). We observe the performance to peak at around 4000 iterations with a mean intersection over union measure of 61.476%. The result reported by [3] for this experiment is 59.80%, i.e., we outperform their unary model by 1.5%.\nJoint training: Next we illustrate the performance of the second step, i.e., joint training of both convolutional network parameters and CRF compatibility and shape parameters. In Fig. 4 (b) we indicate the best obtained unary performance from the first step and visualize the validation and training set performance over the number of iterations. We observe the results to peak quickly after around 20 iterations and remain largely stable thereafter.\nDetails: In Tab. 1 we provide the training and test set accuracies for the 21 individual classes. We observe the \u2018bike\u2019 and \u2018chair\u2019 class to be particularly difficult. For both categories the validation set performance is roughly half of the training set accuracy.\nComparison to baseline: As provided in Tab. 1, the peak validation set performance of our approach is 64.060%, which slightly outperforms the separate training result of 63.74% reported by Chen et al. [3].\nVisual results: We illustrate visual results of our approach in Fig. 5. Our method successfully segments the object if the images are clearly apparent. Noisy images and objects with many variations pose challenges to the presented approach as visualized in Fig. 6. Also, we observe our learnt parameters to generally over-smooth results while being noisy on the boundaries."}, {"heading": "5 Discussion", "text": "We presented a first method that jointly trains convolutional neural networks and fully connected conditional random fields for semantic image segmentation. To this end we generalize [3] to joint training. Note that a method along those lines has also been recently made publicly available in independent work [41]. Whereas the latter combines dense conditional random fields [17] with the fully convolutional networks presented by Long et al. [21], we employ and modify the 16 layer DeepNet architecture presented in work by Simonyan and Zisserman [31].\nIdeas along the lines of joint training were discussed within machine learning and computer vision as early as the 90\u2019s in work done by Bridle [2] and Bottou [1]. More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable. Even more recently, Li and Zemel [20] investigate training with hinge-loss objectives using nonlinear unaries, but the pairwise potentials remain fixed, i.e., no joint training. Domke [7] decomposes the learning objective into logistic regressors which will be computationally expensive in our setting. Tompson et al. [32] propose joint training for pose estimation based on a heuristic approximation which ignores the normalization constant of the model distribution. Joint training of conditional random fields and deep networks was also discussed recently by [4] for graphical models in general. Techniques based on convex and non-convex approximations were described for obtaining marginals in the general non-linear setting."}, {"heading": "6 Conclusion", "text": "We discussed a method for semantic image segmentation that jointly trains convolutional neural networks and conditional random fields. Our approach combines techniques from deep convolutional neural networks with variational mean-field approximations from the graphical model literature. We obtain good results on the challenging Pascal VOC 2012 dataset.\nIn the future we plan to train our method on larger datasets. Additionally we want to investigate training with weakly labeled data."}], "references": [{"title": "Global training of document processing systems using graph transformer networks", "author": ["L. Bottou", "Y. Bengio", "Y. LeCun"], "venue": "Proc. CVPR", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1997}, {"title": "Training stochastic model recognition algorithms as networks can lead to maximum mutual information estimation of parameters", "author": ["J.S. Bridle"], "venue": "Proc. NIPS", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1990}, {"title": "Semantic ImageSegmentation with Deep Convolutional Nets and Fully Connected CRFs", "author": ["L.-C. Chen", "G. Papandreou", "I. Kokkinos", "K. Murphy", "A.L. Yuille"], "venue": "http://arxiv.org/abs/1412.7062", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning Deep Structured Models", "author": ["L.-C. Chen", "A.G. Schwing", "A.L. Yuille", "R. Urtasun"], "venue": "http://arxiv.org/abs/1407.2538", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Natural language processing (almost) from scratch", "author": ["R. Collobert", "J. Weston", "L. Bottou", "M. Karlen", "K. Kavukcuoglu", "P. Kuksa"], "venue": "JMLR", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Neural conditional random fields", "author": ["T.-M.-T. Do", "T. Artieres"], "venue": "Proc. AISTATS", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Structured Learning via Logistic Regression", "author": ["J. Domke"], "venue": "Proc. NIPS", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["J. Donahue", "L.A. Hendrikcs", "S. Guadarrama", "M. Rohrbach", "S. Venugopalan", "K. Saenko", "T. Darrell"], "venue": "http://arxiv.org/abs/1411.4389", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "and A", "author": ["M. Everingham", "L. Van Gool", "C.K.I. Williams", "J. Winn"], "venue": "Zisserman. The PASCAL Visual Object Classes Challenge 2012 ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2012}, {"title": "From captions to visual concepts and back", "author": ["H. Fang", "S. Gupta", "F. Iandola", "R. Srivastava", "L. Deng", "P. Doll\u00e1r", "J. Gao", "X. He", "M. Mitchell", "J.C. Platt", "C.L. Zitnick", "G. Zweig"], "venue": "http://arxiv.org/abs/1411.4952", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["R. Girshick", "J. Donahue", "T. Darrell", "J. Malik"], "venue": "Proc. CVPR", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Fast image scanning with deep max-pooling convolutional neural networks", "author": ["A. Guisti", "D. Ciresan", "J. Masci", "L. Gambardella", "J. Schmidhuber"], "venue": "Proc. ICIP", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "Semantic Contours from Inverse Detectors", "author": ["B. Hariharan", "P. Arbel\u00e1ez", "L. Bourdev", "S. Maji", "J. Malik"], "venue": "Proc. ICCV", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2011}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["A. Karpathy", "L. Fei-Fei"], "venue": "http://arxiv.org/abs/1412.2306", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Multi- modal neural language models", "author": ["R. Kiros", "R. Salahutdinov", "R. Zemel"], "venue": "Proc. ICML", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Probabilistic Graphical Models: Principles and Techniques", "author": ["D. Koller", "N. Friedman"], "venue": "MIT Press", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2009}, {"title": "Efficient inference in fully connected CRFs with Gaussian edge potentials", "author": ["P. Kr\u00e4henb\u00fchl", "V. Koltun"], "venue": "Proc. NIPS", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2011}, {"title": "Parameter Learning and Convergent Inference for Dense Random Fields", "author": ["P. Kr\u00e4henb\u00fchl", "V. Koltun"], "venue": "Proc. ICML", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "ImageNet Classification with Deep Convolutional Neural Networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "Proc. NIPS", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "High Order Regularization for Semi-Supervised Learning of Structured Output Problems", "author": ["Y. Li", "R. Zemel"], "venue": "Proc. ICML", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "Fully Convolutional Networks for Semantic Segmentation", "author": ["J. Long", "E. Shelhamer", "T. Darrell"], "venue": "http://arxiv.org/abs/1411.4038", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "A conditional neural fields model for protein threading", "author": ["J. Ma", "J. Peng", "S. Wang", "J. Xu"], "venue": "Bioinformatics", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2012}, {"title": "A Wavelet Tour of Signal Processing", "author": ["S. Mallat"], "venue": "Academic Press", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}, {"title": "Deep captioning with multimodal recurrent neural networks (m-rnn)", "author": ["J. Mao", "W. Xu", "Y. Yang", "J. Wang", "A.L. Yuille"], "venue": "http://arxiv.org/abs/1412.6632", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Conditional random fields for integrating local discriminative classifiers", "author": ["J. Morris", "E. Fosler-Lussier"], "venue": "IEEE Trans. Audio, Speech, and Language Processing", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2008}, {"title": "Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference", "author": ["J. Pearl"], "venue": "Morgan Kaufmann", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1988}, {"title": "Conditional Neural Fields", "author": ["J. Peng", "L. Bo", "J. Xu"], "venue": "Proc. NIPS", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2009}, {"title": "Backpropagation training for multilayer conditional random field based phone recognition", "author": ["R. Prabhavalkar", "E. Fosler-Lussier"], "venue": "Proc. ICASSP", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "and L", "author": ["O. Russakovsky", "J. Deng", "H. Su", "J. Krause", "S. Satheesh", "S. Ma", "Z. Huang", "A. Karpathy", "A. Khosla", "M. Bernstein", "A.C. Berg"], "venue": "Fei-Fei. ImageNet Large Scale Visual Recognition Challenge", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "OverFeat: Integrated Recognition", "author": ["P. Sermanet", "D. Eigen", "X. Zhang", "M. Mathieu", "R. Fergus", "Y. LeCun"], "venue": "Localization and Detection using Convolutional Networks. In Proc. ICLR", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2014}, {"title": "Very Deep Convolutional Networks for Large-Scale Image Recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "http://arxiv.org/abs/1409.1556", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2014}, {"title": "Joint Training of a Convolutional Network and a Graphical Model for Human Pose Estimation", "author": ["J. Tompson", "A. Jain", "Y. LeCun", "C. Bregler"], "venue": "Proc. NIPS", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2014}, {"title": "Improved initialization and Gaussian mixture pairwise terms for dense random fields with mean-field inference", "author": ["V. Vineet", "J. Warrell", "P. Sturgess", "P.H.S. Torr"], "venue": "Proc. BMVC", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2012}, {"title": "Filter-based mean-field inference for random fields with higherorder terms and product label-spaces", "author": ["V. Vineet", "J. Warrell", "P.H.S. Torr"], "venue": "Proc. ECCV", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2012}, {"title": "Show and tell: A neural image caption generator", "author": ["O. Vinyals", "A. Toshev", "S. Bengio", "D. Erhan"], "venue": "http://arxiv.org/abs/1411.4555", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2014}, {"title": "Computing the Stereo Matching Cost with a Convolutional Neural Network", "author": ["J. \u017dbontar", "Y. LeCun"], "venue": "http://arxiv.org/abs/1409.4326", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2014}, {"title": "Tree-based reparameterization framework for analysis of sum-product and related algorithms", "author": ["M.J. Wainwright", "T. Jaakkola", "A.S. Willsky"], "venue": "Trans. Information Theory", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2003}, {"title": "Graphical models", "author": ["M.J. Wainwright", "M.I. Jordan"], "venue": "exponential families and variational inference. Foundations and Trends in Machine Learning", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2008}, {"title": "MAP Estimation", "author": ["Y. Weiss", "C. Yanover", "T. Meltzer"], "venue": "Linear Programming and Belief Propagation with Convex Free Energies. In Proc. UAI", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2007}, {"title": "The Concave-Convex Procedure (CCCP)", "author": ["A.L. Yuille", "A. Rangarajan"], "venue": "Neural Computation", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2003}, {"title": "Conditional Random Fields as Recurrent Neural Networks", "author": ["S. Zheng", "S. Jayasumana", "B. Romera-Paredes", "V. Vineet", "Z. Su", "D. Du", "C. Huang", "P.H.S. Torr"], "venue": "http://arxiv.org/abs/1502.03240", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 18, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 125, "endOffset": 133}, {"referenceID": 30, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 125, "endOffset": 133}, {"referenceID": 10, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 152, "endOffset": 156}, {"referenceID": 31, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 180, "endOffset": 184}, {"referenceID": 35, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 193, "endOffset": 197}, {"referenceID": 14, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 23, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 34, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 7, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 13, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 9, "context": "They have been shown to achieve state-of-the-art performance in a variety of vision problems, including image classification [19, 31], object detection [11], human pose estimation [32], stereo [36], and caption generation [15, 24, 35, 8, 14, 10].", "startOffset": 222, "endOffset": 245}, {"referenceID": 11, "context": "It is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3].", "startOffset": 107, "endOffset": 126}, {"referenceID": 29, "context": "It is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3].", "startOffset": 107, "endOffset": 126}, {"referenceID": 20, "context": "It is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3].", "startOffset": 107, "endOffset": 126}, {"referenceID": 40, "context": "It is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3].", "startOffset": 107, "endOffset": 126}, {"referenceID": 2, "context": "It is only very recently that convolutional nets have proven also very effective for semantic segmentation [12, 30, 21, 41, 3].", "startOffset": 107, "endOffset": 126}, {"referenceID": 16, "context": "The seminal work of [17] showed that inference in fully connected MRFs is possible if the smoothness potentials are Gaussian.", "startOffset": 20, "endOffset": 24}, {"referenceID": 2, "context": "Later, [3] extended the unary potentials to incorporate convolutional network features.", "startOffset": 7, "endOffset": 10}, {"referenceID": 8, "context": "We demonstrate the effectiveness of our approach using the dataset of the PASCAL VOC 2012 challenge [9].", "startOffset": 100, "endOffset": 103}, {"referenceID": 3, "context": "[4], who discussed extending log-linear models, i.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "In short, [4] assumed the global scoring function F (x, \u0177;w) to decompose into a sum of local scoring functions fr, each depending on a small subset r \u2286 {1, .", "startOffset": 10, "endOffset": 13}, {"referenceID": 3, "context": "To this end, message passing type algorithms were employed by [4].", "startOffset": 62, "endOffset": 65}, {"referenceID": 25, "context": "Otherwise computational complexity is prohibitively large and approximations like loopy belief propagation [26], convex belief propagation [39] or treereweighted message passing [37] are alternatives that were successfully applied.", "startOffset": 107, "endOffset": 111}, {"referenceID": 38, "context": "Otherwise computational complexity is prohibitively large and approximations like loopy belief propagation [26], convex belief propagation [39] or treereweighted message passing [37] are alternatives that were successfully applied.", "startOffset": 139, "endOffset": 143}, {"referenceID": 36, "context": "Otherwise computational complexity is prohibitively large and approximations like loopy belief propagation [26], convex belief propagation [39] or treereweighted message passing [37] are alternatives that were successfully applied.", "startOffset": 178, "endOffset": 182}, {"referenceID": 3, "context": "The resulting iterative method of [4] is summarized in Fig.", "startOffset": 34, "endOffset": 37}, {"referenceID": 3, "context": "Not only does the approach presented by [4] fail if the decomposition assumed in Eq.", "startOffset": 40, "endOffset": 43}, {"referenceID": 16, "context": "Densely connected models were previously considered by [17, 33, 34, 18] and shown to yield impressive results for the image segmentation task.", "startOffset": 55, "endOffset": 71}, {"referenceID": 32, "context": "Densely connected models were previously considered by [17, 33, 34, 18] and shown to yield impressive results for the image segmentation task.", "startOffset": 55, "endOffset": 71}, {"referenceID": 33, "context": "Densely connected models were previously considered by [17, 33, 34, 18] and shown to yield impressive results for the image segmentation task.", "startOffset": 55, "endOffset": 71}, {"referenceID": 17, "context": "Densely connected models were previously considered by [17, 33, 34, 18] and shown to yield impressive results for the image segmentation task.", "startOffset": 55, "endOffset": 71}, {"referenceID": 17, "context": "Learning the parameters of densely connected models was considered by Kr\u00e4henb\u00fchl and Koltun [18] in the context of the log-linear setting.", "startOffset": 92, "endOffset": 96}, {"referenceID": 3, "context": "Following [4] we aim at extending those fully connected log-linear models to the more general setting of an arbitrary function F (x, \u0177;w), e.", "startOffset": 10, "endOffset": 13}, {"referenceID": 40, "context": "Note that a similar approach has been recently discussed by [41] in independent work.", "startOffset": 60, "endOffset": 64}, {"referenceID": 3, "context": "Let us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18].", "startOffset": 90, "endOffset": 93}, {"referenceID": 16, "context": "Let us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18].", "startOffset": 138, "endOffset": 154}, {"referenceID": 32, "context": "Let us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18].", "startOffset": 138, "endOffset": 154}, {"referenceID": 33, "context": "Let us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18].", "startOffset": 138, "endOffset": 154}, {"referenceID": 17, "context": "Let us consider within this section how to efficiently combine deep structured prediction [4] with densely connected probabilistic models [17, 33, 34, 18].", "startOffset": 138, "endOffset": 154}, {"referenceID": 3, "context": "Before getting into the details we note that the presented approach trades computational complexity of the general method of [4] with a restriction on the pairwise functions fij (i.", "startOffset": 125, "endOffset": 128}, {"referenceID": 33, "context": "[34].", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "Due to non-convexity, only convergence to a stationary point of the KL divergence cost function is guaranteed for sequential block-coordinate updates [38, 16].", "startOffset": 150, "endOffset": 158}, {"referenceID": 15, "context": "Due to non-convexity, only convergence to a stationary point of the KL divergence cost function is guaranteed for sequential block-coordinate updates [38, 16].", "startOffset": 150, "endOffset": 158}, {"referenceID": 17, "context": "Hence the complexity of an update for a single marginal is of O(N), and updating all N marginals therefore requires O(N) operations as also discussed by Kr\u00e4henb\u00fchl and Koltun [18].", "startOffset": 175, "endOffset": 179}, {"referenceID": 16, "context": "Importantly, Kr\u00e4henb\u00fchl and Koltun [17] observed that a high dimensional Gaussian filter can be applied to concurrently update all marginals in O(N).", "startOffset": 35, "endOffset": 39}, {"referenceID": 17, "context": "Formally, if the label compatibility functions \u03bc are negative semi-definite \u2200m, and the kernels k are positive definite \u2200m, the KL divergence is readily given as the difference between a concave and a convex term [18].", "startOffset": 213, "endOffset": 217}, {"referenceID": 39, "context": "Hence the concave-convex procedure (CCCP) [40] is directly applicable.", "startOffset": 42, "endOffset": 46}, {"referenceID": 17, "context": "As detailed by Kr\u00e4henb\u00fchl and Koltun [18], and as discussed above, finding the linearization is equivalently solved via filtering in time linear in N .", "startOffset": 37, "endOffset": 41}, {"referenceID": 17, "context": "We refer the interested reader to [18] for additional details regarding the computation of the gradient \u2202q(x,y),i(\u0177i) \u2202w .", "startOffset": 34, "endOffset": 38}, {"referenceID": 17, "context": "But contrasting [18], we no longer assume the unaries to be given by a logistic regression model.", "startOffset": 16, "endOffset": 20}, {"referenceID": 2, "context": "Contrasting [3], we don\u2019t assume the unaries to be fixed during CRF parameter updates.", "startOffset": 12, "endOffset": 15}, {"referenceID": 17, "context": "to label compatibility and kernel shape parameters are readily given in [18].", "startOffset": 72, "endOffset": 76}, {"referenceID": 8, "context": "3 on the dataset of the Pascal VOC 2012 challenge [9].", "startOffset": 50, "endOffset": 53}, {"referenceID": 12, "context": "[13], resulting in a total of 10582 training instances.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "Our model setup follows [3], i.", "startOffset": 24, "endOffset": 27}, {"referenceID": 30, "context": ", we employ the 16 layer DeepNet model [31].", "startOffset": 39, "endOffset": 43}, {"referenceID": 2, "context": "Just like [3] we first convert the fully connected layers into convolutions as first discussed in [12, 30].", "startOffset": 10, "endOffset": 13}, {"referenceID": 11, "context": "Just like [3] we first convert the fully connected layers into convolutions as first discussed in [12, 30].", "startOffset": 98, "endOffset": 106}, {"referenceID": 29, "context": "Just like [3] we first convert the fully connected layers into convolutions as first discussed in [12, 30].", "startOffset": 98, "endOffset": 106}, {"referenceID": 22, "context": "To take into account the skipped downsampling during subsequent convolutions we employ the \u2018\u00e0 trous (with hole) algorithm\u2019 [23].", "startOffset": 123, "endOffset": 127}, {"referenceID": 2, "context": "Similar to [3] we assume the input size of our network to be of dimension 306\u00d7 306 which results in a 40\u00d740 sized spatial output of the DeepNet which is in our case an intermediate result however.", "startOffset": 11, "endOffset": 14}, {"referenceID": 2, "context": "Contrasting [3], we jointly optimize for both unary and CRF parameters using the algorithm presented in Fig.", "startOffset": 12, "endOffset": 15}, {"referenceID": 2, "context": "Data table dog horse mbike person plant sheep sofa train tv Our mean [3] Valid.", "startOffset": 69, "endOffset": 72}, {"referenceID": 2, "context": "[3].", "startOffset": 0, "endOffset": 3}, {"referenceID": 30, "context": "It was shown independently by many authors [31, 4], that successively increasing the number of parameters during training typically yields better performance due to better initialization of larger models.", "startOffset": 43, "endOffset": 50}, {"referenceID": 3, "context": "It was shown independently by many authors [31, 4], that successively increasing the number of parameters during training typically yields better performance due to better initialization of larger models.", "startOffset": 43, "endOffset": 50}, {"referenceID": 30, "context": ", we fine-tune the weights obtained from the DeepNet ImageNet model [31, 29] to the Pascal dataset [9].", "startOffset": 68, "endOffset": 76}, {"referenceID": 28, "context": ", we fine-tune the weights obtained from the DeepNet ImageNet model [31, 29] to the Pascal dataset [9].", "startOffset": 68, "endOffset": 76}, {"referenceID": 8, "context": ", we fine-tune the weights obtained from the DeepNet ImageNet model [31, 29] to the Pascal dataset [9].", "startOffset": 99, "endOffset": 102}, {"referenceID": 2, "context": "The result reported by [3] for this experiment is 59.", "startOffset": 23, "endOffset": 26}, {"referenceID": 2, "context": "[3].", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "To this end we generalize [3] to joint training.", "startOffset": 26, "endOffset": 29}, {"referenceID": 40, "context": "Note that a method along those lines has also been recently made publicly available in independent work [41].", "startOffset": 104, "endOffset": 108}, {"referenceID": 16, "context": "Whereas the latter combines dense conditional random fields [17] with the fully convolutional networks presented by Long et al.", "startOffset": 60, "endOffset": 64}, {"referenceID": 20, "context": "[21], we employ and modify the 16 layer DeepNet architecture presented in work by Simonyan and Zisserman [31].", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[21], we employ and modify the 16 layer DeepNet architecture presented in work by Simonyan and Zisserman [31].", "startOffset": 105, "endOffset": 109}, {"referenceID": 1, "context": "Ideas along the lines of joint training were discussed within machine learning and computer vision as early as the 90\u2019s in work done by Bridle [2] and Bottou [1].", "startOffset": 143, "endOffset": 146}, {"referenceID": 0, "context": "Ideas along the lines of joint training were discussed within machine learning and computer vision as early as the 90\u2019s in work done by Bridle [2] and Bottou [1].", "startOffset": 158, "endOffset": 161}, {"referenceID": 4, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 26, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 21, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 5, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 27, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 24, "context": "More recently [5, 27, 22, 6, 28, 25] incorporate non-linearities into unary potentials but generally assume exact inference to be tractable.", "startOffset": 14, "endOffset": 36}, {"referenceID": 19, "context": "Even more recently, Li and Zemel [20] investigate training with hinge-loss objectives using nonlinear unaries, but the pairwise potentials remain fixed, i.", "startOffset": 33, "endOffset": 37}, {"referenceID": 6, "context": "Domke [7] decomposes the learning objective into logistic regressors which will be computationally expensive in our setting.", "startOffset": 6, "endOffset": 9}, {"referenceID": 31, "context": "[32] propose joint training for pose estimation based on a heuristic approximation which ignores the normalization constant of the model distribution.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "Joint training of conditional random fields and deep networks was also discussed recently by [4] for graphical models in general.", "startOffset": 93, "endOffset": 96}], "year": 2015, "abstractText": "Convolutional neural networks with many layers have recently been shown to achieve excellent results on many high-level tasks such as image classification, object detection and more recently also semantic segmentation. Particularly for semantic segmentation, a two-stage procedure is often employed. Hereby, convolutional networks are trained to provide good local pixel-wise features for the second step being traditionally a more global graphical model. In this work we unify this two-stage process into a single joint training algorithm. We demonstrate our method on the semantic image segmentation task and show encouraging results on the challenging PASCAL VOC 2012 dataset.", "creator": "LaTeX with hyperref package"}}}