{"id": "1503.08275", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Mar-2015", "title": "Energy Management in Storage-Augmented, Grid-Connected Prosumer Buildings and Neighbourhoods Using a Modified Simulated Annealing Optimization", "abstract": "This article presents a modified simulated incandescent optimization approach for the automatic determination of optimal energy management strategies in grid-connected, storage-enlarged, photovoltaic-powered Prosumer buildings and neighborhoods, based on user-specific objectives. To evaluate the modified simulated incandescent optimizer, a series of test scenarios are defined for maximizing self-consumption and the results are compared with a gradient decrease and a search approach for the total state area. Benchmarking against these two reference methods shows that the modified simulated incandescent approach can find significantly better solutions with significantly less computing effort and less processing time than the overall state search approach - which is equal or very close to the global optimum.", "histories": [["v1", "Sat, 28 Mar 2015 07:16:22 GMT  (631kb)", "http://arxiv.org/abs/1503.08275v1", "Computers &amp; Operations Research, 2015"]], "COMMENTS": "Computers &amp; Operations Research, 2015", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["rosemarie velik", "pascal nicolay"], "accepted": false, "id": "1503.08275"}, "pdf": {"name": "1503.08275.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "energy management strategies in grid-connected, storage-augmented, photovoltaics-supplied prosumer buildings and neighbourhoods based on user-specific goals. For evaluating the modified simulated annealing optimizer, a number of test scenarios in the field of energy self-consumption maximization are defined and results are compared to a gradient descent and a total state space search approach. The benchmarking against these two reference methods demonstrates that the modified simulated annealing approach is able to find significantly better solutions than the gradient descent algorithm \u2013 being equal or very close to the global optimum \u2013 with significantly less computational effort and processing time than the total state space search approach.\nIndex Terms\u2014Batteries, Storage, Energy exchange, Energy management, Green buildings, Microgrids, Optimization, Photovoltaic\nsystems, Renewable energy sources, Simulated annealing, Smart grids, Solar energy;\nI. INTRODUCTION\nUR ELECTRICITY production and supply system, having in the last 50 years heavily built on electricity generated by centralized fossil fuel and nuclear power plants, is about to be transformed into a distributed electricity generation system\nconsisting of smaller-scale renewable energy producers like buildings equipped with photovoltaics (and optionally also storage) systems [1], [2]. This massive structural change, accompanied by novel regulatory policies, brings along new challenges in terms of sustainable energy use [3], [4], [5]. In this context, the term \u201csustainable\u201d can have different meanings depending on the concrete objective of the involved stakeholders. Examples for currently envisioned objectives are the maximization of the consumption of locally produced renewable energy, the achievement of energy autonomy, grid stability support, or a maximization of financial benefits [26], [27], [28]. Combinations of objectives are of course also possible. Each of these (sets of) objectives requires a particular \u201cenergy management strategy\u201d. Finding the optimal energy management strategy for each situation is however a task far from trivial and can massively benefit from computational assistance [6], [7], [8]. Optimization algorithms are an effective tool for identifying optimal strategies within complex energy management systems [9], [10].\nIn the context of building and mircrogrid energy management, several computational optimization approaches have already been proposed in literature for different applications. [11] presents an optimization approach for the effective energy management of a HVAC system using a metaheuristic simulation-evolutionary programming coupling method. [12] proposes a particle swarm optimization approach to optimize a control system having the task to improve user comfort and save energy. [13] aims to match load consumption from heating, ventilation, and air conditioning (HVAC) with available energy from a hybridrenewable energy generation and energy storage system. A genetic-algorithm-based optimization approach together with a twopoint estimate method is used to minimize the size of the photovoltaics and wind generation installation as well as the storage capacity to supply the HVAC load. [14] describes a dual evolutionary programming approach for a power system in which software agents co-evolve optimal operational behaviors for a simple microgrid configuration consisting of photovoltaics and conventional energy production sources, a battery storage, and partly controllable loads. [15] uses a genetic algorithm for optimizing the control of a stand-alone hybrid electrical system to achieve cost minimization over system lifetime. The electrical system can include renewable resources (e.g., wind, photovoltaics, hydro), batteries, a fuel cell, an AC generator and an electrolyzer.\nIn this article, we propose a modified simulated annealing approach for finding optimal control strategies for energy management in grid-connected, PV-supplied, storage augmented prosumer buildings and neighbourhoods in dependence of the objectives and goals of the involved stakeholders. To evaluate the performance of this approach, comparisons to a total state space search and a gradient descent method are provided for a range of different test scenarios aiming at an optimization of the local consumption of locally produced photovoltaics energy.\nR. Velik and P. Nicolay are with CTR Carinthian Tech Research, Europastrasse 4/1, 9524 Villach, Austria (e-mail: first.last@ctr.at).\nO"}, {"heading": "II. MATERIALS AND METHODS", "text": ""}, {"heading": "2.1 System Setup and Challenge Definition", "text": "Figure 1 gives an overview about the topology of the system for which an optimal energy management strategy shall be found. It illustrates a neighbourhood of six single-family houses in which each house consists of the following components: (1) a PV system, (2) a battery storage system, (3) household loads, (4) an interface to the neighbour buildings, (5) a grid connection.\nThe arrows between the building blocks indicate the principally possible directions of energy exchange within the system (in the further article referred to as possible \u201cactions\u201d), which are additionally summarized in Table I. Table I furthermore lists the pre-conditions for the execution of each action. In Section 2.4, different test scenarios will be specified and it will be indicated which of the energy exchange options will be supported in each scenario. The task of the energy optimizer developed in this article will be to prioritize/rank this list of supported actions based on the specified objectives of the energy management system (see Section 2.5.1). Optimization will be carried out in a distributed fashion, meaning that for each building, a separate instance of the optimizer is implemented.\nThe action with the ID 1 \u201cDo No More Activity\u201d means that all further actions ranked after this one will be ignored and thus not executed. This can be useful if the execution of certain principally supported actions worsens the optimization result. The actions with the IDs 2, 3, 4, 5, 6, 13, and 14 concern energy flows within a building and from the building to the grid and vice versa. The actions with the IDs 7, 8, 9, 10, 11, and 12 concern energy exchanges between always two specific buildings within the neighbourhood. To allow for such an energy exchange, the two corresponding buildings (the one that provides the energy and the one that consumes it) first have to negotiate and agree on this energy exchange (see also execution pre-conditions specified in Table I). The communication necessary for this negotiation takes place via specific communication channels between the buildings.\nFor our experiments, it was defined that for each action carried out, always the maximal possible amount of energy transfer is foreseen before the next action is considered. For the action \u201cOwn PV Energy to Own Loads\u201d, for instance, this would mean the following: If there is more own PV energy available than needed for the own loads, as much own PV energy is directed to the loads as necessary to cover their supply. Otherwise, if less own PV energy is available than needed for the own load supply, all available own PV energy is directed to the own loads. In analogy, for the action \u201cOwn PV Energy to Own Storage\u201d, this would mean: If more own PV energy is available than needed for completely charging the own storage, the storage is charged by the own PV energy until it is full. Otherwise, if less own PV energy is available than necessary for completely charging the own storage, all available own PV energy is used to charge the storage. In a similar way, this rule of \u201cmaximum possible energy transfer\u201d is applied to all other actions."}, {"heading": "2.2 Data Acquisition and Pre-Processing", "text": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20]. This way, individual load profiles were generated for the 6 households for a period of 30 days with a resolution of one hour. Data were normalized to yield an average load consumption of 16kWh per household and day when averaging over the 30 days period.\nConcerning the PV data acquisition, for each household, the same PV profile was generated for a period of 30 days with a resolution of one hour. Using the same PV profile for each building corresponds to the case that each building roof has the same orientation and tilt angle and the same number and type of PV modules. Such a situation is realistic in newly built residential estates realized by larger construction companies. Again, data were normalized to yield an average PV production of 16kWh per household and day when averaging over the 30 days. Accordingly, when averaging over the period of 30 days, the amount of produced PV energy within each building equaled the amount of energy consumed by its loads, which turned out to simplify data analysis."}, {"heading": "2.3 System Modelling", "text": "Figure 1 gave an overview about the topology of the energy system and its components, which was realized within a Visual Studio C++ simulation. To keep system modelling simple and to allow for an easier analysis of results, efficiency losses of individual components (PV modules, PV and battery inverters, batteries, wiring, etc.) were neglected for the current study. This way, analyses could be performed independent of the performance of currently available technologies, which are in fact changing and improving rapidly at present. This allowed for investigating the theoretically possible upper limits and potentials of the selected energy management strategies independent of any particular technology currently on the market.\nIn the specified test scenarios featuring energy storage (see Section 2.4), analyses were performed with battery storage capacities of 16 kWh per household. This storage size equaled the average amount of daily PV production and load consumption. The value of 16 kWh corresponded to the actually usable capacity, not to the nominal capacity labeled by storage producers. At the beginning of the 30 days test period, all storages were empty."}, {"heading": "2.4 Specified Test Scenarios", "text": "To test the developed optimizers (see Section 2.5.2), five different test scenarios were specified from which the scenarios 3 to 5 were sub-divided into always two further sub-cases. The principal goal of each of the five scenarios was to optimize the local consumption of locally produced PV energy and thus to reduce energy exchange with the grid as far as possible (see Section 2.5.1 for further details). To achieve this objective, for each scenario, different actions can be selected (see Table II).\nIn the scenarios 1 and 3, for instance, each building aims at optimizing its local PV energy consumption individually while in the other cases, an energy exchange with neighbours is supported. In the scenarios 1 and 2, no buffering of PV energy in a battery storage is supported, while the other scenarios allow for such a temporal energy storage. The scenarios 3 to 4 only allow an individual storage use while scenario 5 allows the exchange of energy using the neighbour storages. Furthermore, the scenarios 3b, 4b, 5b support an interaction of the battery storage with the grid (charge storage from grid and feed stored energy into grid) while the other scenarios do not foresee this option."}, {"heading": "2.5 Optimizer", "text": "To find the optimal energy management strategy, i.e. the best action order, for each of the scenarios listed in Table II, the optimizer was split into two blocks with defined interfaces (see Figure 2). Block 1 (depicted on the left) is responsible for the calculation of the optimization function based on the current action order provided by block 2. According to this current action order, the available energy is distributed within the system and a range of corresponding variables are calculated that keep track of the amount of energy directed to each component in each time instant. Based on the values of these variables, the optimization function is calculated (see Section 2.5.1 for details). The result of the optimization function is transmitted to block 2 (depicted on the right), which in further consequence suggests a new action order to block 1. Details about the internal functioning of block 2 are described in Section 2.5.2.1 for the case of the total state space search algorithm, in Section 2.5.2.2 for the gradient descent method, and in Section 2.5.2.3 for the simulated annealing approach.\n2.5.1 Calculation of Optimization Function\nThe principal objective of each of the scenarios described in Table II is the maximization of the consumption of locally produced PV energy within the neighbourhood. To fulfill this principal objective, several sub-objectives have to be fulfilled which all have assigned a certain priority. Table III summarizes each of these sub-objectives, its corresponding optimization variable, and its \u201ctarget value\u201d. The order of the list corresponds to the assigned priorities. Based on these optimization variables, the overall optimization value for the current action order is calculated in two parts (see Table IV).\nPart 1: In accordance with the sub-objective prioritization given in Table III, the first two sub-objectives are translated into pre-conditions for calculating the optimization values of the other four sub-objectives. If a certain action order is NOT able to achieve that those first two optimization variables have the value zero in a certain time instant, the four remaining optimization variables will get assigned the value zero for this time instant (see part 1 of algorithm). This means that they will not contribute to the overall sum of each variable.\nPart 2: As a second step, the four optimization variables calculated in step 1 are summed up using the weighted optimization\nfunction:\nThe weights (w1 to w4) of this function correspond to the priority of each sub-objective as listed in Table III. For our simulations, a factor of always 10 was chosen between each weight (see Table IV, part 2), which proved to yield the desired results.\nThe total state space search approach determines the optimal energy management strategy for a certain set of objectives and possible actions by simply permuting through all possible action orders and calculating the corresponding optimization function value. For our study, this was realized using Alexander Bogomolyn\u2019s unordered permutation algorithm [21].\nAs all possibilities are explored by total state space search, it will always find the globally optimal solution and can thus serve as a reference method for benchmarking the performance of other approaches like our modified simulated annealing algorithm. However, the major disadvantage of the total state space search approach is its high computational complexity [22]. If the optimal action order for a set of x actions shall be found, the computational effort for this task is x factorial (x!) (see Table V). For larger sets of actions, exploring all possible permutations is thus no longer a feasible approach. To cope with the computational complexity of our test scenario 5b for instance, which consisted of 14 actions and thus required to investigate 87,178,000,000 different action combinations, processing had to be distributed over several machines and required a processing time of several months. It is obvious that this is no practicable solution for many applications.\n2.5.2.2 Gradient Descent\nThe standard version of the gradient descent algorithm aims at minimizing a given optimization function by starting from an initial set of parameter values and then iteratively changing those values following the negative direction of the gradient of the function. For our application, this basic strategy was implemented as follows: The algorithm started witch a randomly chosen action order and calculated the optimization function for this action order. In subsequent steps, always two neighbouring positions in the action sequence were switched and the value of the corresponding optimization function was recalculated. The\naction order switch that yielded the largest negative change in the optimization value was taken into account for determining the next action sequence and a new round of \u201cneighbor switching\u201d was started. This process was repeated until a switching of neighbouring positions led to no further improvements in the optimization result.\nWhile the gradient descent algorithm is relatively straightforward to implement and generally \u201cinexpensive\u201d in terms of\nprocessing time, its disadvantage is that it is prone to getting stuck in local minima.\n2.5.2.3 Simulated Annealing\nTo overcome the \u201ccombinatorial explosion problem\u201d of the total state space search algorithm and the gradient descent\u2019s tendency to get trapped in local minima, a modified version of the well-known standard simulated annealing (SA) algorithm [23] was implemented. The structure of the algorithm was based on the SA algorithm published in [24]. The SA algorithm was chosen for its ability to converge efficiently toward the optimum (i.e. maximum or minimum) of a given multivariable function in a large search space.\nStandard Simulated Annealing Approach\nThe particular characteristic and strength of the SA it that it keeps exploring worse solutions throughout the whole optimization process. This means that it does not aim at systematically decreasing the value of a given multivariable function to find its absolute minimum. Instead, it occasionally accepts to degrade its current best solution to keep exploring other areas of the search space. This behavior helps avoiding being stuck in local minima, which is an especially useful property when a large search space, potentially full of local minima, has to be explored.\nThe decision of acceptance or refusal of a worse solution is based on the Metropolis criterion [23]. This criterion makes the acceptance of the solution more likely if the \u2018temperature\u2019 is high and the degradation of the solution is small. The term \u2018temperature\u2019 as used here refers to a parameter that steadily decreases with time over the whole optimization process. It is chosen as an analogy to the physical process of thermal annealing, which is mimicked by the SA algorithm. With the \u2018temperature\u2019 decreasing over time, also the probability for accepting worse solutions is starting to decrease.\nOnce the temperature gets below a certain threshold value, the SA algorithm stops exploring further worse solutions and keeps converging steadily toward the closest minimum in the search space. Accordingly, at the end of the optimization process, the SA algorithm behaves like a gradient descent optimizer [24]. Optimization finally stops if the value to be optimized cannot be further minimized.\nThe exploration of the search space itself proceeds in the following way: For each new iteration cycle, the SA algorithm generates a new value for each of the multivariable function\u2019s variables. These new values are calculated by adding a random quantity to the reference values (or current best solution) of the given variables. The random quantity is usually obtained using a Gaussian random number generator, whose standard deviation (SD) is adjusted beforehand according to the desired exploration range. The set of new values (i.e. the new solution) is then used to compute the multivariable function. If the result is better than the one obtained in the previous iteration, the new solution is kept as the new reference and a new cycle begins. If the result is worse, the Metropolis criterion is applied to accept or refuse the new solution. If accepted, the new solution becomes the new reference and a new cycle begins.\nModified Simulated Annealing Approach\nThe aim of our article was to use the SA method for rearranging action orders until the best possible ranking (i.e. prioritization) of the actions specified in Table II is achieved for a particular scenario according to its set objective(s). For this purpose, some adaptations had to be made to the standard SA algorithm.\nFirst, it was necessary to convert the ranking of an action into a value of a variable, which could change continuously in a\ngiven range.\nSecond, it had to be assured that two actions did not occupy the same position in the ranking. This means that the two\ncorresponding variables cannot have the same value.\nThese two modifications were solved in the following way: Each action got assigned an independent position variable of the data type double. For each variable, the same variation domain was specified equaling the number of selectable actions. For instance, if ten actions were used, the positions of the actions would be given by ten position variables located on a continuous zero-to-ten scale. Initially, the value of the position variables was determined randomly. In consecutive optimization steps, they were altered using a Gaussian random number generator with a specified standard deviation. To avoid that two position variables have exactly the same value, they were checked for equality and altered again if necessary.\nThe following example shall contribute to the clarification of the working principle of our modified simulated annealing algorithm: If for instance three actions have to be ranked, a first ranking is generated by assigning random values between 0 and 3 to each action. This serves as a starting point for the optimization. A possible example for this would be:\naction 1: position variable=1.58\naction 2: position variable=2.25 action 3: position variable=0.57\nwhich would result in the following action ranking:\naction 2 \u2013 action 1 \u2013 action 3\nThis first ranking would be injected into the \u201cCalculation of Optimization Function\u201d block (see Figure 2) to get a first result for the optimization function. The SA algorithm would subsequently alter the values of the three position variables to achieve a minimization of the optimization function, yielding the best possible ranking of actions. For instance, the SA algorithm would yield the following values at the end of the optimization:\naction 1: position variable=0.95 action 2: position variable=2.15 action 3: position variable=2.99\nwhich would result in the following action ranking:\naction 3 \u2013 action 2 \u2013 action 1\nIt has to be stressed that in our modified version of the SA algorithm, the variables are not directly used for the computation of the optimization function. They are first translated into a ranking list of actions. Based on this ranking, certain optimization variables forming part of the optimization function are calculated (see Section 2.5.1). This means that different sets of position variable values can lead to exactly the same ranking result. For instance, the following set of positions:\naction 1: position variable=0.52 action 2: position variable=1.56 action 3: position variable=2.05\nwould also result in the action ranking:\naction 3 \u2013 action 2 \u2013 action 1\nActually, the optimization error only changes in case that ranking positions get swapped. To ensure that the modified SA algorithm does not get stuck in a given non-optimal ranking, this swapping has to be ensured to occur frequently (at least at the beginning of the optimization). To enable frequent swapping, the standard deviation SD has to be large enough and thus has to be adjusted prior to the optimization. In our case, we used a SD of 1.5. This value was the result of a trial and error procedure, conducted over a great number of test optimizations involving different numbers of actions. The theoretical derivation of the optimum SD for this kind of optimization problem will be discussed in future work."}, {"heading": "III. RESULTS AND DISCUSSION", "text": "This section is concerned with illustrating and comparing the results of the modified simulated annealing approach with the total space state search and gradient descent reference methods. For this purpose, Section 3.1 presents the computational effort of these algorithms for the different test scenarios. Section 3.2 comprises a comparison of the found action orders and corresponding optimization values of the algorithms. Section 3.3 illustrates the achieved local PV energy consumption based on the energy management strategies found by the algorithms.\n3.1 Computational Effort of Algorithm\nTable V compares the computational effort of the total state space search algorithm, the gradient descent algorithm, and the modified simulated annealing approach for the different investigated scenarios. As can be seen from Table V, the gradient descent algorithm requires very little computation effort. However, as illustrated in Section 3.2, it shows the drawback of getting stuck in local minima for most of the test scenarios. Accordingly, it proved to be only of limited use for the given application. The total state space search approach works well for small sets of selectable actions. However, for larger sets, it leads to a \u201ccombinatorial explosion\u201d. Accordingly, for finding the best prioritization of 10 or more actions, the modified simulated annealing approach outperformed the total state space search algorithm in terms of computational effort. For the largest investigated action set (scenario 5b with 14 possible actions), the computational effort of the state space search algorithm was 14 factorial (14!), which was 92,458 times higher than the effort of the modified simulated annealing approach.\n5a 12 479001600 25 808200 5b 14 8.7178E+10 29 942900\n3.2 Determined Optimal Action Orders and Corresponding Optimization Values\nThe tables VI and VII summarize the determined optimal action orders and corresponding optimization values for the analyzed algorithms. Actions that were prioritized behind the action \u201cDo No More Activity\u201d are not listed in Table VI as they are irrelevant. Instead their position is marked with an \u2018X\u2019.\nBy running the total state space search optimizer, it could be demonstrated that for the investigated scenarios, more than one action combination can lead to the same optimal solution. Using the total state space search algorithm, all action combinations that led to this optimal solution were annotated. In Table VI, several of these optimal solutions are listed for each scenario exemplarily.\nAs can be seen from Table VI and VII, the gradient descent algorithm only found a globally optimal solution for scenario 1 and scenario 2. In contrast to this, the modified simulated annealing approach was in all but scenario 5 able to find a globally optimal solution. For scenario 5a and 5b, a solution was found that was very close to the global optimum. Only one action (Grid Energy to Own Loads) was prioritized in a not completely optimal order. Concerning the optimization function, this corresponded to an optimization error of 0.03 %. Concerning the scenario\u2019s objective of local PV energy consumption maximization, this resulted in 0.19 kWh (or 1.3 %) less local PV energy consumption per household and day than in case of the global optimum (see Section 3.3).\n3.3 Achieved Local PV Energy Self Consumption\nUsing the action orders determined with the total state space search algorithm, the gradient descent algorithm, and the modified simulated annealing algorithm, the total local PV energy consumption within the neighbourhood was determined as well as the components of which it was made up (see Table VIII and figures 3 to 5).\nAs can be derived from these figures and table, for the scenarios 1 and 2, the same results could be achieved by all three algorithms. For the scenarios 3 and 4, only the total state space search and the modified simulated annealing algorithm found the same optimal solution. As described in Section 3.2, in scenario 5, the total local PV energy consumption within the neighbourhood was slightly lower for the modified simulated annealing solution than for the total state space solution due to a non-optimal prioritization of the action \u201cGrid Energy to Own Loads\u201d. This had the consequence that no stored PV energy was exchanged with the neighbours, which resulted in 1.3 % less local use of stored PV energy within the neighbourhood."}, {"heading": "4 CONCLUSION", "text": "This article presented a modified simulated annealing optimizer for finding optimal energy management strategies in storageaugmented grid-connected renewable prosumer buildings and neighbourhoods. Optimization objective was the maximization of the local consumption of locally produced PV energy. The results of the modified simulated annealing optimizer were evaluated by comparing them against the globally optimal solution determined by a computationally expensive total state space search approach searching through all possible action combinations and the solution obtained by a computationally inexpensive gradient descent algorithm. While the results of the gradient descent algorithm demonstrated the necessity of developing a method not getting easily trapped in local minima, the modified simulated annealing approach found the global optimum in six out of the eight tested scenarios. For the remaining two scenarios, it found a local optimum that was very close to the global optimum (0.03 % error of the optimization function, which translated into 1.3 % less local consumption of locally produced PV energy).\nFor complex scenarios involving many different possible actions, the modified simulated annealing approach proved to be computationally much less expensive than the total state space search method. For the two scenarios with the small remaining optimization error, the computational effort was up to 92,458 times less than the effort for calculating the global optima with the total state space search approach.\nThis demonstrated that the modified simulated annealing approach is a very powerful approach for finding optimal energy management strategies in large search spaces. Further work on this issue targeting also other energy management applications\nwill be addressed in future work. Apart from this, similar as for the modified simulated annealing approach introduced here, the possibility will be explored to also modify other optimization algorithms (e.g. GRASP) to enable them to map action orders to optimization values."}, {"heading": "ACKNOWLEDGMENT", "text": "The work reported in this article has been co-funded by the European Commission within the INTERREG Program for supporting small and medium sized companies (SME) in Italy and Carinthia (Austria) and the Austrian Research Promotion Agency (FFG) within the program Fit4Set (project Vision Step I)."}], "references": [{"title": "Cognitive Architectures as Building Energy Management System for Future Renewable Energy Scenarios \u2013 A Work in Progress Report", "author": ["R. Velik"], "venue": "IJSEI International Journal on Science and Engineering Investigations, vol. 2, no. 17, pp. 68\u201372, June, 2013.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "Towards Automation 2.0: A Neuro-cognitive Model for Environment Recognition, Decision-making, and Action Execution", "author": ["R. Velik", "G. Zucker", "D. Dietrich"], "venue": "EURASIP Journal on Embedded Systems, Special Issue on Networked Embedded Systems for Energy Management and Buildings, vol. 2011, 11 pages, 2011.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimal Operation Strategy of Energy Storage System for Grid-Connected Wind Power Plants", "author": ["Z. Shu", "P. Jirutitijaroen"], "venue": "IEEE Transactions on Sustainable Energy, vol. 5, no. 1, pp. 190-199, 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Short-Term Operation Scheduling in Renewable-Powered Microgrids: A Duality-Based Approach", "author": ["B. Zhao", "Y. Shi", "X. Dong", "W. Luan", "J. Bonemann"], "venue": "IEEE Transactions on Sustainable Energy, vol. 5, no. 1, pp. 209\u2013217, 2014.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Optimal Control and Operation of Grid-Connected Photovoltaic Production Units for Voltage Support in Medium-Voltage Networks", "author": ["A. Bonfiglio", "M. Brignone", "F. Delfino", "R. Procopio"], "venue": "IEEE Transactions on Sustainable Energy, vol. 5, no. 1, pp. 254\u2013263, 2014.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2014}, {"title": "Bio-Inspired Optimization of Sustainable Energy Systems: A Review", "author": ["Y. Zheng", "S. Chen", "Y. Lin", "W. Wang"], "venue": "Mathematical Problems in Engineering, vol. 2013, 12 pages, 2013.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Optimal Microgrid Control and Power-Flow Study With Different Bidding Policies by Using PowerWorld Simulator", "author": ["D. Zhang", "S. Li", "P. Zeng", "C. Zang"], "venue": "IEEE Transactions on Sustainable Energy, vol. 5, no. 1, pp. 282\u2013292, 2014.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Master problem approximations in Dantzig\u2013Wolfe decomposition of variational inequality problems with applications to two energy market models", "author": ["E. \u00c7elebi", "J. Fuller"], "venue": "Computers & Operations Research, vol. 40, no. 11, pp. 2724-2739, 2013.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "A Review on Optimization Modeling of Energy Systems Planning and GHG Emission Mitigation under Uncertainty, Energies", "author": ["Y. Zeng", "Y. Cai", "G. Huang", "J. Dai"], "venue": "vol. 4, pp. 1624-1656, 2011.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Solving discretely constrained, mixed linear complementarity problems with applications in energy", "author": ["S. Gabriel", "A. Conejo", "C. Ruiz", "S. Siddiqui"], "venue": "Computers & Operations Research, vol. 40, no. 5, pp. 1339-1350, 2013.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "HVAC system optimization for energy management by evolutionary programming", "author": ["K. Fong", "V. Hanby", "T. Chow"], "venue": "Energy in Buildings, vol. 38, no. 3, pp. 220\u2013231, 2006.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "A heuristic economic optimizer with emission constraints for building energy management", "author": ["R. Yang", "Z. Wang", "L. Wang"], "venue": "North American Power Symposium, pp. 1\u20136, 2011.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2011}, {"title": "Genetic-Algorithm-Based Optimization Approach for Energy Management", "author": ["A. Arabali", "M. Ghofranik M. Etezadi-Amoli", "M. Fadali"], "venue": "IEEE Transactions on Power Delivery, vol. 28, no. 1, pp. 162\u2013170, 2013.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "An evolutionary programming tool for assessing the operational value of distributed energy resources within restructured electricity industries", "author": ["I. MacGill"], "venue": "Power Engineering Conference, pp. 1\u20136, 2007.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Optimization of control strategies for stand-alone renewable energy systems with hydrogen storage", "author": ["R. Dufo-Lopez", "J. Bernal-Agustin", "J. Contreras"], "venue": "Renewable Energy, vol. 32, no. 7, pp. 1102\u20131126, 2007.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2007}, {"title": "The Smart Energy Demo Project Vision Step I \u2013 Smart City Villach", "author": ["R. Velik", "J. Schmid", "W. Rittsteiger", "A. Karitnig", "D. Wilhelmer", "E. Smole"], "venue": "11th Austrian Photovoltaic Congress, 2013.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2013}, {"title": "Design of a PV-Supplied, Grid-Connected Storage Test Bed for Flexibly Modeling Future Energy Scenarios", "author": ["R. Velik", "K. Kafka", "L. Neumaier", "J. Schmid", "H. Pairitsch", "W. Egger", "J. Silva-Martinz"], "venue": "Smart Grids Week, 2013.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Battery Storage versus Neighbourhood Energy Exchange to Maximize Local Photovoltaics Energy Consumption in Grid-Connected Residential Neighbourhoods", "author": ["R. Velik"], "venue": "IJARER International Journal of Advanced Renewable Energy Research, vol. 2, no. 6, 2013.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "The Influence of Battery Storage Size on Photovoltaics Energy Self-Consumption for Grid-Connected Residential Buildings", "author": ["R. Velik"], "venue": "IJARER International Journal of Advanced Renewable Energy Research, vol. 2, no. 6, 2013.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Renewable Energy Self-Consumption versus Financial Gain Maximization Strategies in Grid-Connected Residential Buildings in a Variable Grid Price Scenario", "author": ["R. Velik"], "venue": "IJARER International Journal of Advanced Renewable Energy Research, vol. 2, no. 6, 2013.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Dynamic Programming Addition Optimization approach for large size multipliers in FPGAs", "author": ["S. Gao", "N. Chabini", "D. Al-Khalili"], "venue": "53rd IEEE International Midwest Symposium on Circuits and Systems, 2010. http://www.bearcave.com/random_hacks/permute.html", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "Simulated annealing", "author": ["D. Bertsimas", "J. Tsitsiklis"], "venue": "Stat. Sci., vol. 8, no. 1, 1993, pp. 10\u201315.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1993}, {"title": "Engineering Optimization: An Introduction with Metaheuristic", "author": ["X. Yang"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2010}, {"title": "Grid-Price-Dependent Energy Management in Microgrids Using a Modified Simulated Annealing Triple-Optimizer", "author": ["R. Velik", "P. Nicolay"], "venue": "Applied Energy,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2014}, {"title": "A Cognitive Decision Agent Architecture for Optimal Energy Management of Microgrids", "author": ["R. Velik", "P. Nicolay"], "venue": "Energy Conversion and Management, Volume", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "East-South-West Orientation of PV Systems and Neighbourhood Energy Exchange to Maximize Local Photovoltaics Energy Consumption", "author": ["R. Velik"], "venue": "International Journal of Renewable Energy Research,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "INTRODUCTION UR ELECTRICITY production and supply system, having in the last 50 years heavily built on electricity generated by centralized fossil fuel and nuclear power plants, is about to be transformed into a distributed electricity generation system consisting of smaller-scale renewable energy producers like buildings equipped with photovoltaics (and optionally also storage) systems [1], [2].", "startOffset": 390, "endOffset": 393}, {"referenceID": 1, "context": "INTRODUCTION UR ELECTRICITY production and supply system, having in the last 50 years heavily built on electricity generated by centralized fossil fuel and nuclear power plants, is about to be transformed into a distributed electricity generation system consisting of smaller-scale renewable energy producers like buildings equipped with photovoltaics (and optionally also storage) systems [1], [2].", "startOffset": 395, "endOffset": 398}, {"referenceID": 2, "context": "This massive structural change, accompanied by novel regulatory policies, brings along new challenges in terms of sustainable energy use [3], [4], [5].", "startOffset": 137, "endOffset": 140}, {"referenceID": 3, "context": "This massive structural change, accompanied by novel regulatory policies, brings along new challenges in terms of sustainable energy use [3], [4], [5].", "startOffset": 142, "endOffset": 145}, {"referenceID": 4, "context": "This massive structural change, accompanied by novel regulatory policies, brings along new challenges in terms of sustainable energy use [3], [4], [5].", "startOffset": 147, "endOffset": 150}, {"referenceID": 23, "context": "Examples for currently envisioned objectives are the maximization of the consumption of locally produced renewable energy, the achievement of energy autonomy, grid stability support, or a maximization of financial benefits [26], [27], [28].", "startOffset": 223, "endOffset": 227}, {"referenceID": 24, "context": "Examples for currently envisioned objectives are the maximization of the consumption of locally produced renewable energy, the achievement of energy autonomy, grid stability support, or a maximization of financial benefits [26], [27], [28].", "startOffset": 229, "endOffset": 233}, {"referenceID": 25, "context": "Examples for currently envisioned objectives are the maximization of the consumption of locally produced renewable energy, the achievement of energy autonomy, grid stability support, or a maximization of financial benefits [26], [27], [28].", "startOffset": 235, "endOffset": 239}, {"referenceID": 5, "context": "Finding the optimal energy management strategy for each situation is however a task far from trivial and can massively benefit from computational assistance [6], [7], [8].", "startOffset": 157, "endOffset": 160}, {"referenceID": 6, "context": "Finding the optimal energy management strategy for each situation is however a task far from trivial and can massively benefit from computational assistance [6], [7], [8].", "startOffset": 162, "endOffset": 165}, {"referenceID": 7, "context": "Finding the optimal energy management strategy for each situation is however a task far from trivial and can massively benefit from computational assistance [6], [7], [8].", "startOffset": 167, "endOffset": 170}, {"referenceID": 8, "context": "Optimization algorithms are an effective tool for identifying optimal strategies within complex energy management systems [9], [10].", "startOffset": 122, "endOffset": 125}, {"referenceID": 9, "context": "Optimization algorithms are an effective tool for identifying optimal strategies within complex energy management systems [9], [10].", "startOffset": 127, "endOffset": 131}, {"referenceID": 10, "context": "[11] presents an optimization approach for the effective energy management of a HVAC system using a metaheuristic simulation-evolutionary programming coupling method.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] proposes a particle swarm optimization approach to optimize a control system having the task to improve user comfort and save energy.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] aims to match load consumption from heating, ventilation, and air conditioning (HVAC) with available energy from a hybridrenewable energy generation and energy storage system.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] describes a dual evolutionary programming approach for a power system in which software agents co-evolve optimal operational behaviors for a simple microgrid configuration consisting of photovoltaics and conventional energy production sources, a battery storage, and partly controllable loads.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15] uses a genetic algorithm for optimizing the control of a stand-alone hybrid electrical system to achieve cost minimization over system lifetime.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20].", "startOffset": 195, "endOffset": 199}, {"referenceID": 16, "context": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20].", "startOffset": 201, "endOffset": 205}, {"referenceID": 17, "context": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20].", "startOffset": 207, "endOffset": 211}, {"referenceID": 18, "context": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20].", "startOffset": 213, "endOffset": 217}, {"referenceID": 19, "context": "For developing and testing the energy optimizer, PV and load curves were acquired using a simple renewable energy data generator developed during the project \u201cVision Step I \u2013 Smart City Villach\u201d [16], [17], [18], [19], [20].", "startOffset": 219, "endOffset": 223}, {"referenceID": 20, "context": "For our study, this was realized using Alexander Bogomolyn\u2019s unordered permutation algorithm [21].", "startOffset": 93, "endOffset": 97}, {"referenceID": 21, "context": "To overcome the \u201ccombinatorial explosion problem\u201d of the total state space search algorithm and the gradient descent\u2019s tendency to get trapped in local minima, a modified version of the well-known standard simulated annealing (SA) algorithm [23] was implemented.", "startOffset": 241, "endOffset": 245}, {"referenceID": 22, "context": "The structure of the algorithm was based on the SA algorithm published in [24].", "startOffset": 74, "endOffset": 78}, {"referenceID": 21, "context": "The decision of acceptance or refusal of a worse solution is based on the Metropolis criterion [23].", "startOffset": 95, "endOffset": 99}, {"referenceID": 22, "context": "Accordingly, at the end of the optimization process, the SA algorithm behaves like a gradient descent optimizer [24].", "startOffset": 112, "endOffset": 116}], "year": 2014, "abstractText": "This article introduces a modified simulated annealing optimization approach for automatically determining optimal energy management strategies in grid-connected, storage-augmented, photovoltaics-supplied prosumer buildings and neighbourhoods based on user-specific goals. For evaluating the modified simulated annealing optimizer, a number of test scenarios in the field of energy self-consumption maximization are defined and results are compared to a gradient descent and a total state space search approach. The benchmarking against these two reference methods demonstrates that the modified simulated annealing approach is able to find significantly better solutions than the gradient descent algorithm \u2013 being equal or very close to the global optimum \u2013 with significantly less computational effort and processing time than the total state space search approach.", "creator": "Microsoft\u00ae Office Word 2007"}}}