{"id": "1504.08248", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Apr-2015", "title": "Frugal Bribery in Voting", "abstract": "Bribery in elections is an important problem in the theory of computational social choice. However, bribery with money in elections is often illegal. Therefore, we introduce the concept of frugal bribery and formulate two new relevant arithmetic problems, which we call frugal bribery and frugal bribery, in order to capture bribery without money in elections. In the proposed model, the bribe woman is frugal and this is captured by her inability to bribe votes of a certain kind, namely, non-vulnerable votes. In the frugal bribery problem, the goal is to get a particular candidate to win the election by changing only vulnerable votes that are subject to budgetary constraints on the bribe. Furthermore, we formulate two natural variants of the Spargal dollar bribery problem, namely uniform-spargal bribery and non-uniform-spargal-bribery, respectively, which are the same.", "histories": [["v1", "Thu, 30 Apr 2015 14:42:34 GMT  (20kb)", "http://arxiv.org/abs/1504.08248v1", "17 pages"], ["v2", "Thu, 24 Nov 2016 16:39:10 GMT  (29kb)", "http://arxiv.org/abs/1504.08248v2", "Fixed one proof and added more explanations to the proofs"], ["v3", "Tue, 28 Feb 2017 16:51:02 GMT  (53kb)", "http://arxiv.org/abs/1504.08248v3", "Full version has been accepted in Theoretical Computer Science"]], "COMMENTS": "17 pages", "reviews": [], "SUBJECTS": "cs.AI cs.MA", "authors": ["palash dey", "neeldhara misra", "y narahari"], "accepted": true, "id": "1504.08248"}, "pdf": {"name": "1504.08248.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["palash@csa.iisc.ernet.in,", "mail@neeldhara.com,", "hari@csa.iisc.ernet.in"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 4.\n08 24\n8v 1\n[ cs\n.A I]\n3 0\nA pr\nBribery in elections is an important problem in computational social choice theory. However, bribery with money is often illegal in elections. Motivated by this, we introduce the notion of frugal bribery and formulate two new pertinent computational problems which we call Frugal-bribery and Frugal$bribery to capture \u2018bribery without money\u2019 in elections. In the proposed model, the briber is frugal in nature and this is captured by her inability to bribe votes of a certain kind, namely, non-vulnerable votes. In the Frugal-bribery problem, the goal is to make a certain candidate win the election by changing only vulnerable votes. In the Frugal-$bribery problem, the vulnerable votes have prices and the goal is to make a certain candidate win the election by changing only vulnerable votes, subject to a budget constraint of the briber. We further formulate two natural variants of the Frugal-$bribery problem namely Uniform-frugal-$bribery and Nonuniform-frugal-$bribery where the prices of the vulnerable votes are, respectively, all the same or different.\nWe study the computational complexity of the above problems for unweighted and weighted elections for several commonly used voting rules. We observe that, even if we have only a small number of candidates, the problems are intractable for all voting rules studied here for weighted elections, with the sole exception of the Frugal-bribery problem for the plurality voting rule. In contrast, we have polynomial time algorithms for the Frugal-bribery problem for plurality, veto, k-approval, k-veto, and plurality with runoff voting rules for unweighted elections. However, the Frugal-$bribery problem is intractable for all the voting rules studied here barring the plurality and the veto voting rules for unweighted elections."}, {"heading": "1 Introduction", "text": "In a typical voting scenario, we have a set of candidates and a set of voters reporting their preferences or votes which are complete rankings of the candidates. A voting rule is a procedure that, given a collection of votes, chooses one candidate as the winner. A set of votes over a set of candidates along with a voting rule is called an election.\nActivities that try to influence voter opinions, in favor of specific candidates, are very common during the time that an election is in progress. For example, in a political election, candidates often conduct elaborate campaigns to promote themselves among a general or targeted audience. Similarly, it is not uncommon for people to protest against, or rally for, a national committee or court that is in the process of approving a particular policy. An extreme illustration of this phenomenon is bribery \u2014 here, the candidates may create financial incentives to sway the voters. Of course, the process of influencing voters may involve costs even without the bribery aspect; for instance, a typical political campaign or rally entails considerable expenditure.\nAll situations involving a systematic attempt to influence voters usually have the following aspects: an external agent, a candidate that the agent wishes to win (or lose) the election, a budget constraint, a cost model for a change of vote, and knowledge of the existing election. The formal computational problem that\narises from these inputs is the following: is it possible to make a distinguished candidate win the election in question by incurring a cost that is within the budget? This is the problem of bribery from a computational perspective. This question, with origins in [Faliszewski et al., 2006,Faliszewski et al., 2009a,Faliszewski et al., 2009b], has been subsequently studied intensely in computational social choice literature. In particular, bribery has been studied under various cost models, for example, uniform price per vote which is known as $Bribery [Faliszewski et al., 2006], nonuniform price per vote [Faliszewski, 2008], nonuniform price per shift of the distinguished candidate per vote which is called the Shift bribery, nonuniform price per swap of candidates per vote which is called the Swap bribery [Elkind et al., 2009]. The campaigning problem has also been studied for various vote models, for example, truncated ballots [Baumeister et al., 2012], soft constraints [Pini et al., 2013], CP-nets [Dorn and Kru\u0308ger, 2014], combinatorial domains [Mattei et al., 2012] and probabilistic lobbying [Erde\u0301lyi et al., 2009]. The bribery problem has also been studied under voting rule uncertainty [Erdelyi et al., 2014]. Faliszewski et al. [Faliszewski et al., 2014] study the complexity of bribery in Bucklin and Fallback voting rules. Xia [Xia, 2012] studies destructive bribery, where the goal of the briber is to change the winner by changing minimum number of votes. Dorn et al. [Dorn and Schlotter, 2012] studies the parameterized complexity of the Swap Bribery problem and Bredereck et al. [Bredereck et al., 2014] explores the parameterized complexity of the Shift Bribery problem for a wide range of parameters. We recall again that the costs and the budgets involved in all the bribery problems above need not necessarily correspond to actual money traded between voters and candidates. They may correspond to any cost in general, for example, the amount of effort or time that the briber needs to spend for each voter."}, {"heading": "1.1 Motivation and Contributions", "text": "In this work, we propose an unusual but effective cost model for the bribery problem. Even the most general cost models that have been studied in the literature fix absolute costs per voter-candidate combination, with no specific consideration to the voters\u2019 opinions about the current winner. We introduce a model where a change of vote is relatively easier to effect if the change causes an outcome that the voter would find desirable. Indeed, if the currently winning candidate is, say, a, and a voter is (truthfully) promised that by changing her vote from c \u227b d \u227b b \u227b a to d \u227b b \u227b c \u227b a, the winner of the election would change from a to d, then this is a change that the voter is likely to be happy to make. While the change does not make her favorite candidate win the election, it does improve the result from her point of view. Thus, given the circumstances (namely that of her least favorite candidate winning the election), the altered vote serves the voter better than the original one.\nWe believe this perspective of voter influence is somewhat more sophisticated than the existing models in the literature. The cost of a change of vote is proportional to the nature of the outcome that the change promises \u2014 the cost is low or nil if the change results in better outcome with respect to the voter\u2019s original ranking, and high or infinity otherwise. A frugal agent only approaches voters of the former category, thus being able to effectively bribe with minimal or no money.\nFormally, let c be the winner of an election and let p (other than c) the candidate whom the briber wishes to make the winner of the election. Now, the voters who prefer c to p will be reluctant to change their votes, and we call these votes non-vulnerable with respect to p \u2014 we do not allow these votes to be changed by the briber, which justifies the frugal nature of the briber. On the other hand, if a voter prefers p to c, then it maybe very easy to convince her to change her vote if doing so makes p win the election. We name these votes vulnerable with respect to p. When p is clear from the context, we simply call these votes non-vulnerable and vulnerable, respectively.\nThe computational problem is to determine whether there are ways to make the candidate p win the election by changing only those votes that are vulnerable with respect to p. We call this problem Frugalbribery. Note that there is no money involved in the Frugal-bribery problem. We also extend this basic model to a more general setting where each vulnerable vote has a certain nonnegative integer price which may correspond to the effort involved in approaching these voters and convincing them to change their votes. We also allow for the specification of a budget constraint, which can be used to model, for example, time constraints. This leads us to define the Frugal-$Bribery problem, where we are required to find vulnerable votes with a total cost that is within the budget; such that these votes can be changed in some way to make p\nwin the election. Note that the Frugal-$Bribery problem can be either uniform or nonuniform depending on whether the prices of the vulnerable votes are all identical or different. If not mentioned otherwise, the prices of the vulnerable votes will be assumed to be nonuniform. We remind that the briber is not allowed to change the non-vulnerable votes in both the Frugal-bribery and the Frugal-$Bribery problems.\nWe study and derive several interesting results on the computational complexity of the Frugal-bribery and the Frugal-$bribery problems with both uniform and nonuniform prices in unweighted as well as weighted elections for many commonly used voting rules. We believe that these problems are important as well as natural specializations of the $Bribery problem and their study has both theoretical and practical impact. The specific contributions of this paper are summarized below.\nUnweighted Elections\nWe have the following results for unweighted elections.\n\u2013 The Frugal-bribery problem is in P for the k-approval, Bucklin, and plurality with runoff voting rules. Also, the Frugal-$bribery problem is in P for the plurality and veto voting rules. In contrast, the Frugal-$bribery problem is in NP-complete (NPC) for the Borda, maximin, Copeland, and STV voting rules [Lemma 3].\n\u2013 The Frugal-bribery problem is in NPC for the Borda voting rule [Theorem 1]. The Frugal$bribery is in NPC for the k-approval for any constant k \u2265 5 [Theorem 2], k-veto for any constant k \u2265 3 [Theorem 3], and a wide class of scoring rules [Theorem 5] even if the price of every vulnerable vote is either 1 or \u221e. Moreover, the Uniform-frugal-$bribery is in NPC for the Borda voting rule even if all the vulnerable votes have uniform price of 1 and the budget is 2 [Theorem 6].\n\u2013 The Frugal-$bribery problem is in P for the k-approval, Bucklin, and plurality with runoff voting rules when the budget is a constant [Theorem 4].\nWeighted Elections\nWe have the following results for weighted elections.\n\u2013 The Frugal-bribery problem is in P for the maximin and Copeland voting rules when we have only three candidates [Lemma 6], and for the plurality voting rule for any number of candidates [Theorem 7].\n\u2013 The Frugal-bribery problem is in NPC for the STV [Theorem 11], plurality with runoff [Corollary 1], and every scoring rule except the plurality voting rule [Lemma 7] for three candidates. The Frugal$bribery problem is in NPC for the plurality voting rule even for three candidates [Theorem 8].\n\u2013 The Frugal-bribery problem is in NPC for the maximin [Theorem 9], Bucklin [Theorem 12], and Copeland [Theorem 10] voting rules when we have only four candidates.\nWe summarize the results in the Table 1."}, {"heading": "1.2 Related Work", "text": "The pioneering work of Faliszewski et al. [Faliszewski et al., 2006] defined and studied the $Bribery problem wherein the input is a set of votes with prices for each vote and the goal is to make some distinguished candidate win the election, subject to a budget constraint of the briber. The Frugal-$bribery problem is the $Bribery problem with the restriction that the price of every non-vulnerable vote is infinite. Also, the Frugal-bribery problem is a specialization of the Frugal $Bribery problem. Hence, whenever the $Bribery problem is computationally easy in a setting, both the Frugal-bribery and the Frugal $Bribery problems are also computationally easy (see Proposition 1 for a more formal proof). However, the $Bribery problem is computationally intractable in most of the settings and this leaves the computational\ncomplexity status of the Frugal-bribery and the Frugal-$bribery problems open in corresponding settings. Hazon et al. [Hazon et al., 2013] introduced and studied persuasion and k-persuasion problems where an external agent suggests votes to vulnerable voters which is beneficial for the vulnerable voters as well as the external agent. It turns out that the persuasion and the k-persuasion problems Turing reduce1 to the Frugal-bribery and the Frugal-$bribery problems respectively (see Proposition 2). Therefore, the polynomial time algorithms we propose in this work imply polynomial time algorithms for the persuasion variants. On the other hand, since the reduction in Proposition 2 from persuasion to frugal bribery is a Turing reduction, the existing NPC results for the persuasion problems do not imply NPC results for the corresponding frugal bribery variants."}, {"heading": "2 Preliminaries", "text": "Let V = {v1, . . . , vn} be the set of all voters and C = {c1, . . . , cm} the set of all candidates. Each voter vi\u2019s vote is a preference \u227bi over the candidates which is a complete order over C. For example, for two candidates a and b, a \u227bi b means that the voter vi prefers a to b. In the paper, whenever we do not specify any order among a set of candidates while describing a vote, the statement/proof is correct in whichever way we fix the order among them. We denote the set of all complete orders over C by L(C). Hence, L(C)n denotes the set of all n-voters\u2019 preference profiles (\u227b1, \u00b7 \u00b7 \u00b7 ,\u227bn). We denote the set {0, 1, 2, \u00b7 \u00b7 \u00b7 } by N, N \\ {0} by N+, and {1, \u00b7 \u00b7 \u00b7 , k} by [k], for any integer k. Let \u228e denote the disjoint union of sets. A map rc : \u228en,|C|\u2208N+L(C)\nn \u2212\u2192 2C \\ {\u2205} is called a voting correspondence. A map t : 2C \\ {\u2205} \u2212\u2192 C is called a tie breaking rule. A commonly used tie breaking rule is the lexicographic tie breaking rule where ties are broken according to a predetermined preference \u227bt\u2208 L(C). A voting rule is r = t \u25e6 rc, where \u25e6 denotes composition of mappings. In many settings, the voters may have positive integer weights. Such an election is called a weighted election. To compute the winner of a weighted election, we replace each vote by as many copies of the vote as its weight and then we apply a voting rule. We assume the elections to be unweighted, if not stated otherwise. Given an election E, we can construct a directed weighted graph GE , called the weighted\n1For Turing reductions, we refer to [Rogers and Rogers, 1967]\nmajority graph, from E. The set of vertices in GE is the set of candidates in E. For any two candidates x and y, the weight of the edge (x, y) is DE(x, y) = NE(x, y) \u2212 NE(y, x), where NE(x, y)(respectively NE(y, x)) is the number of voters who prefer x to y (respectively y to x). A candidate x is called the Condorcet winner in an election E if DE(x, y) > 0 for every other candidate y 6= x. A voting rule is called Condorcet consistent if it selects the Condorcet winner as the winner of the election whenever it exists. A voting rule is called monotonic if improving winner\u2019s position in any vote without changing the ordering among other candidates does not change the winner. Some examples of common voting correspondences are as follows.\n\u2013 Positional scoring rules : A collection of m-dimensional vectors \u2212\u2192sm = (\u03b11, \u03b12, . . . , \u03b1m) \u2208 Rm with \u03b11 \u2265 \u03b12 \u2265 \u00b7 \u00b7 \u00b7 \u2265 \u03b1m and \u03b11 > \u03b1m for every m \u2208 N naturally defines a voting rule - a candidate gets score \u03b1i from a vote if it is placed at the i\nth position, and the score of a candidate is the sum of the scores it receives from all the votes. The winners are the candidates with maximum score. Scoring rules remain unchanged if we multiply every \u03b1i by any constant \u03bb > 0 and/or add any constant \u00b5. Hence, we assume without loss of generality that for any score vector \u2212\u2192sm, there exists a j such that \u03b1j \u2212 \u03b1j+1 = 1 and \u03b1k = 0 for all k > j. We call such a\n\u2212\u2192sm a normalized score vector. If \u03b1i is 1 for i \u2208 [k] and 0 otherwise, then, we get the k-approval voting rule. For the k-veto voting rule, \u03b1i is 0 for i \u2208 [m\u2212 k] and \u22121 otherwise. 1-approval is called the plurality voting rule and 1-veto is called the veto voting rule.\n\u2013 Maximin: The maximin score of a candidate x is miny 6=x DE(x, y). The winners are the candidates with maximum maximin score.\n\u2013 Copeland\u03b1: Given \u03b1 \u2208 [0, 1], the Copeland\u03b1 score of a candidate x is |{y 6= x : DE(x, y) > 0}|+\u03b1|{y 6= x : DE(x, y) = 0}|. The winners are the candidates with maximum Copeland\u03b1 score. If not mentioned otherwise, we will assume \u03b1 to be zero.\n\u2013 Bucklin: A candidate x\u2019s Bucklin score is the minimum number l such that more than half of the voters rank x in their top l positions. The winners are the candidates with lowest Bucklin score.\n\u2013 Plurality with runoff: The top two candidates according to the plurality scores are selected first. The pairwise winner of these two candidates is selected as the winner of the election. This rule is often called the runoff voting rule.\n\u2013 Single Transferable Vote: In Single Transferable Vote (STV), a candidate with the least plurality score is dropped from the election and its votes are transferred to the next preferred candidate. If two or more candidates receive the least plurality score, then a tie breaking rule is used. The candidate that remains after (m\u2212 1) rounds is the winner.\nAmong the above voting correspondences along with any arbitrary lexicographic tie-breaking rule, the scoring rules, maximin, Copeland, and Bucklin voting rules are monotonic and only the maximin and the Copeland voting rules are Condorcet consistent."}, {"heading": "2.1 Problem Definition", "text": "Given an election and a particular candidate, we define the notion of vulnerable votes as follows.\nDefinition 1. (Vulnerable votes) Given a voting rule r, a set of candidates C, a profile of votes \u227b= (\u227b1, . . . ,\u227bn), and a distinguished candidate p in C, we say a vote \u227bi is p-vulnerable if p \u227bi r(\u227b).\nWe note that the definition of vulnerable votes require elections to have exactly one winner. For this reason, we explicitly mention a tie-breaking rule in all our proofs. Recall that, whenever the distinguished candidate is clear from the context, we drop it from the notation. With the above definition of vulnerable votes, we next define the Frugal-bribery problem. Intuitively, the problem is to determine whether a particular candidate can be made winner by changing only the vulnerable votes.\nDefinition 2. (r-Frugal-bribery) Given a voting rule r, a set of candidates C, a preference profile \u227b, and a distinguished candidate p in C, determine whether there is a way to make p win the election by changing only the vulnerable votes.\nThe Frugal-bribery problem is extended to the Frugal-$bribery problem below which involves prices for the vulnerable votes.\nDefinition 3. (r-Frugal-$bribery) Given a voting rule r, a set of candidates C, a preference profile \u227b= (\u227b1, . . . ,\u227bn), a distinguished candidate p in C, a finite budget b, and a price function c : [n] \u2212\u2192 N, determine if there is a way to make p win the election by changing only the vulnerable votes subject to budget constraint b. If the prices of all vulnerable votes are the same then we call the problem uniform-Frugal-$bribery. Otherwise, we call it nonuniform-Frugal-$bribery.\nThe above problems are specializations of the well studied $Bribery problem. Also, theCoalitionalManipulation problem [Bartholdi III et al., 1989, Conitzer et al., 2007], one of the classic problems in computational social choice theory, turns out to be a special case of the Frugal-$bribery problem [see Proposition 1]. For the sake of completeness, we include the definitions of these problems here.\nDefinition 4. (r-$Bribery) [Faliszewski et al., 2009a] Given a voting rule r, a set of candidates C, a preference profile \u227b= (\u227b1, . . . ,\u227bn), a distinguished candidate p in C, a price function c : [n] \u2212\u2192 N, and a budget b, determine if there a way to make p win the election.\nDefinition 5. (Coalitional-Manipulation) [Bartholdi III et al., 1989,Conitzer et al., 2007] Given a voting rule r, a set of candidates C, a preference profile \u227bt= (\u227b1, . . . ,\u227bn) of truthful voters, an integer l, and a distinguished candidate p in C, determine if there exists a l voter preference profile \u227bl such that the candidate p wins uniquely (does not tie with any other candidate) in the profile (\u227bt,\u227bl).\nWe denote an arbitrary instance of the Coalitional-Manipulation problem by (C,\u227bt, l, p). The following proposition shows the relationship among the above problems.\nProposition 1. For every voting rule, Frugal-bribery \u2264P 1 uniform-Frugal-$bribery \u2264P nonuniformFrugal-$bribery \u2264P $Bribery. Also, Coalitional-Manipulation \u2264P nonuniform-Frugal-$bribery.\nProof. Given a Frugal-bribery instance, we construct a Uniform-frugal-$bribery instance by defining the price of every vulnerable vote to be zero and the budget to be zero. Clearly, the two instances are equivalent. Hence, Frugal-bribery \u2264P Uniform-frugal-$bribery.\nUniform-frugal-$bribery \u2264P Nonuniform-frugal-$bribery \u2264P $Bribery follows from the fact that Uniform-frugal-$bribery is a specialization of Nonuniform-frugal-$bribery which in turn is a specialization of $Bribery.\nGiven a Manipulation instance, we construct a Nonuniform-frugal-$bribery instance as follows. Let p be the distinguished candidate of the manipulators and \u227bf= p \u227b others be any arbitrary but fixed ordering of the candidates given in the Manipulation instance. Without loss of generality, we can assume that p does not win if all the manipulators vote \u227bf (Since, this is a polynomially checkable case of Manipulation). We define the vote of the manipulators to be \u227bf , the distinguished candidate of the campaigner to be p, the budget of the campaigner to be zero, the price of the manipulators to be zero and the price of the rest of the vulnerable votes to be one. Clearly, the two instances are equivalent. Hence, Manipulation \u2264P Nonuniform-frugal-$bribery.\nWe can also establish the following relationship between the persuasion (respectively k-persuasion) problem [Hazon et al., 2013] and the Frugal-bribery (respectively Frugal-$bribery) problem. The persuasions differ from the corresponding frugal bribery variants in that the briber has her own preference order, and desires to improve the outcome of the election with respect to her preference order. The following proposition is immediate from the definitions of the problems.\n1The notation A \u2264P B denotes that the problem A polynomial time many-to-one reduces to problem B [Garey and Johnson, 1979].\nProposition 2. For every voting rule, there is a Turing reduction from Persuasion (respectively kpersuasion) to Frugal-bribery (respectively Frugal-$bribery).\nProof. Given an algorithm for the Frugal-bribery problem, we iterate over all possible distinguished candidates to have an algorithm for the persuasion problem.\nGiven an algorithm for the Frugal-$bribery problem, we iterate over all possible distinguished candidates and fix the price of the corresponding vulnerable votes to be one to have an algorithm for the k-persuasion problem."}, {"heading": "3 Unweighted Elections", "text": "We present the results for unweighted elections below.\nLemma 1. The Frugal-bribery problem is in P for the k-approval voting rule for any k, Bucklin, and plurality with runoff voting rules.\nProof. The Manipulation problem is in P for these voting rules [Xia et al., 2009]. Hence, the result follows from Proposition 1.\nLemma 2. The Frugal-$bribery problem is in P for the plurality and veto voting rules.\nProof. The $Bribery problem is in P for the plurality [Faliszewski et al., 2006] and veto [Faliszewski, 2008] voting rules. Hence, the result follows from Proposition 1.\nLemma 3. The Frugal-$bribery problem is in NPC for Borda, maximin, Copeland, and STV voting rules.\nProof. TheManipulation problem is in NPC for the above voting rules. Hence, the result follows from Proposition 1.\nNext, we show that the Frugal-$bribery problem for the k-approval for any constant k \u2265 5, k-veto for any constant k \u2265 3, and a class of scoring rules are in NPC. To this end, we reduce from the Exact Cover by 3-Sets (X3C) problem, which is known to be NPC [Garey and Johnson, 1979]. The X3C problem is defined as follows.\nDefinition 6. (X3C Problem) Given a universe U and t subsets S1, . . . , St \u2282 U with |Si| = 3, \u2200i \u2208 [t], does there exist an index set I \u2286 [t] with |I| = |U|3 such that \u228ei\u2208ISi = U? We denote an arbitrary instance of X3C by (U, {S1, . . . , St}).\nWe now prove that the Frugal-bribery problem is in NPC for the Borda voting rule, by a reduction from X3C. We first provide an informal road map for the proof. To begin with, we would like to define a collection of votes with one vote for every set in the X3C instance. The candidate set will have a candidate for every element in the universe; and two additional candidates p and c, and more dummy candidates as we need them in the construction.\nThe votes corresponding to the sets are engineered to have the following properties: first, they are vulnerable, and second, they have the preferred candidate, say p, at the top position. Now, the winning candidate, say c, is designed to have a Borda score that is (4m/3) more than the score of the preferred candidate, and is also placed in the fifth-last position of all these votes. In particular, a vote corresponding to a set Si will have the following form, where the elements of the universe are arranged in an arbitrary but fixed order:\np \u227b (U \\ Si) \u227b c \u227b z \u227b Si\nSince p is already on the top of all of these votes, a campaigner has no hope of increasing the score of p. Also, the most that the campaigner can decrease the score of c is by four per vote, given the structure of the Borda score vector and the fact that c is at the fifth position from the bottom. Therefore, it will suffice\nif c is \u201cpushed to the bottom\u201d in m/3 votes. Note that every time c is pushed to the bottom, the scores of the elements participating in Si increase. However, a solution may, in general, indulge in changing more than m/3 votes. To ensure that this does not happen, we use additional elements to force a score difference of exactly one between p and the candidates corresponding to the elements of the universe. This ensures that a valid solution cannot afford to increase the score of any candidate corresponding to the universe by more than one; and therefore only m/3 votes are affected. The sets corresponding to the affected votes must form a set cover for the same reason. The challenge is to ensure that we achieve these properties using only non-vulnerable votes. We are now ready to describe the details.\nTheorem 1. The Frugal-bribery problem is in NPC for the Borda voting rule.\nProof. The problem is clearly in NP. To show NP-hardness, we reduce an arbitrary instance of X3C to Frugal-bribery. Let (U, {S1, . . . , St}) be an instance of X3C.\nWe define a Frugal-bribery instance as follows. Let m be the universe size |U |. The candidate set is C = U \u228eD \u228e {p, c, z}, where |D| = 5m. Let us fix any arbitrary order \u227bf among the candidates in U \u228eD. For any subset A \u2282 U \u228e D, let \u2212\u2192 A be the ordering among the candidates in A as defined in \u227bf and \u2190\u2212 A the reverse order of \u2212\u2192 A . For each Si, 1 \u2264 i \u2264 t, we add two votes v1i and v 2 i as follows.\nv1i : p \u227b \u2212\u2192 D \u227b \u2212\u2212\u2212\u2212\u2192 U \\ Si \u227b c \u227b z \u227b \u2212\u2192 Si\nv2i : \u2190\u2212 Si \u227b z \u227b c \u227b \u2190\u2212\u2212\u2212\u2212 U \\ Si \u227b \u2190\u2212 D \u227b p\nLet D 4m 3 \u22122, Dm\u22121, Dm\u22122, D 5m 3 \u22121 \u2282 D be any arbitrary mutually disjoint subsets of D with |D 4m 3 \u22122| = 4m 3 \u2212 2, |Dm\u22121| = m\u2212 1, |Dm\u22122| = m\u2212 2, |D 5m3 \u22121| = 5m 3 \u2212 1. We now add the following two votes \u00b51 and \u00b52.\n\u00b51 : z \u227b c \u227b D 4m 3\n\u22122 \u227b p \u227b Dm\u22121 \u227b \u2212\u2192 U \u227b others\n\u00b52 : \u2190\u2212 U \u227b Dm\u22122 \u227b c \u227b p \u227b D 5m\n3 \u22121 \u227b z \u227b others\nThe distinguished candidate is p. The tie-breaking rule is \u201cp \u227b others\u201d. Hence, the winner is c and thus only the votes in {v1i : 1 \u2264 i \u2264 t} are vulnerable. We claim that the two instances are equivalent. Suppose there exists an index set I \u2286 [t] with |I| = |U|3 such that \u228ei\u2208ISi = U . We replace the votes v 1 i , i \u2208 I with \u03bd 1 i which is defined as follows. \u03bd1i : p \u227b \u2212\u2192 D \u227b \u2212\u2212\u2212\u2212\u2192 U \\ Si \u227b z \u227b \u2212\u2192 Si \u227b c\nThe final score of p is the same as the final scores of c, z, and every candidate in U and more than the score of every candidate in D. This makes p win the election due to the tie-breaking rule.\nTo prove in the other direction, suppose the Frugal-bribery instance is a Yes instance. Notice that, the only vulnerable votes are v1i for every i \u2208 [t]. We assume without loss of generality, that candidate p is placed at the first position in all the changed votes. The votes \u00b51 and \u00b52 ensure that the score of c must decrease by 4m3 for p to win. Hence, there must be at least m 3 votes that are changed since each vote change can reduce the score of c by at most 4. Also, in each vote v1i where the position of c has been changed, the score of z from that vote must increase, since otherwise, there will be at least one candidate x \u2208 Si whose score must increase by two contradicting the fact that p wins the election. However, the score of z can increase by at most m3 . Hence, there will be exactly m 3 votes where c\u2019s score decreases and thus in all those votes, c must come at the last position. We claim that the Si\u2019s corresponding to the changed votes must form an exact set cover. Indeed, otherwise, there will be a candidate in U whose score does not increase and thus there will be some other candidate in U whose score increases by at least two contradicting the fact that p wins the election.\nThe following Lemma has been used before (Lemma 4.2 in [Baumeister et al., 2011]) and we will use it in subsequent proofs.\nLemma 4. Let C = {c1, . . . , cm} \u228eD, (|D| > 0) be a set of candidates and \u2212\u2192\u03b1 a normalized score vector of length |C|. Then, for any given X = (X1, . . . , Xm) \u2208 Zm, there exists \u03bb \u2208 R and a voting profile such that the \u2212\u2192\u03b1 -score of ci is \u03bb +Xi for all 1 \u2264 i \u2264 m, and the score of candidates d \u2208 D is less than \u03bb. Moreover, the number of votes is O(poly(|C| \u00b7\n\u2211m i=1 |Xi|)), where |Xi| denotes the absolute value of Xi.\nNote that, the number of votes used in Lemma 4 is polynomial in m if |D| and |Xi| are polynomials in m for every i \u2208 [m], which indeed is the case for all our proofs that use Lemma 4. Hence, the reductions in the proofs that use Lemma 4 run in polynomial amount of time. We now show the results for various classes of scoring rules.\nTheorem 2. The Frugal-$bribery problem is in NPC for the k-approval voting rule for any constant k \u2265 5, even if the price of every vulnerable vote is either 1 or \u221e.\nProof. The problem is clearly in NP. To show NP-hardness, we reduce an arbitrary instance of X3C to Frugal-$bribery. Let (U, {S1, . . . , St}) be an instance of X3C. We define a Frugal-$bribery instance as follows. The candidate set is C = U \u228eD\u228e {p, q}, where |D| = k\u2212 1. For each Si, 1 \u2264 i \u2264 t, we add a vote vi as follows.\nvi : p \u227b q \u227b Si \ufe38 \ufe37\ufe37 \ufe38\n5 candidates\n\u227b D \u227b others\nBy Lemma 4, we can add poly(|U |) many additional votes to ensure the following scores (denoted by s(\u00b7)).\ns(p) = s(q)\u2212 |U |\n3 , s(p) = s(x)\u2212 1, \u2200x \u2208 U,\ns(p) > s(d) + |U |\n3 , \u2200d \u2208 D\nThe tie-breaking rule is \u201cp \u227b \u00b7 \u00b7 \u00b7 \u201d. The winner is q. The distinguished candidate is p and thus all the votes in {vi : 1 \u2264 i \u2264 t} are vulnerable. The price of every vi is 1 and the price of every other vulnerable vote is \u221e. The budget is |U|3 . We claim that the two instances are equivalent. Suppose there exists an index set I \u2286 [t] with |I| = |U|3 such that \u228ei\u2208ISi = U . We replace the votes vi, i \u2208 I with v \u2032 i as follows.\nv\u2032i : p \u227b D \ufe38 \ufe37\ufe37 \ufe38\nk candidates\n\u227b others\nThis makes the score of p not less than the score of any other candidate and thus p wins. To prove the result in the other direction, suppose the Frugal-$bribery instance is a Yes instance. Then notice that there will be |U|3 votes in {vi : 1 \u2264 i \u2264 t} where the candidate q should not be placed within the top k positions since s(p) = s(q)\u2212 |U|3 and the budget is |U| 3 . We claim that the Si\u2019s corresponding to the vi\u2019s that have been changed must form an exact set cover. Indeed, otherwise, there will be a candidate x \u2208 U , whose score never decreases which contradicts the fact that p wins the election since s(p) = s(x)\u2212 1.\nNext, we have a similar result for the k-veto voting rule.\nTheorem 3. The Frugal-$bribery problem is in NPC for the k-veto voting rule for any constant k \u2265 3, even if the price of every vulnerable vote is either 1 or \u221e.\nProof. The problem is clearly in NP. To show NP-hardness, we reduce an arbitrary instance of X3C to Frugal-$bribery. Let (U, {S1, S2, . . . , St}) be any instance of X3C. We define a Frugal-$bribery instance as follows. The candidate set is C = U \u228eQ\u228e{p, a1, a2, a3, d}, where |Q| = k\u22123. For each Si, 1 \u2264 i \u2264 t, we add a vote vi as follows.\nvi : p \u227b others \u227b Si \u227b Q \ufe38 \ufe37\ufe37 \ufe38\nk candidates\nBy Lemma 4, we can add poly(|U |) many additional votes to ensure the following scores (denoted by s(\u00b7)).\ns(p) > s(d), s(p) = s(x) + 2, \u2200x \u2208 U, s(p) = s(q) + 1, \u2200q \u2208 Q,\ns(p) = s(ai)\u2212 |U |\n3 + 1, \u2200i = 1, 2, 3\nThe tie-breaking rule is \u201ca1 \u227b \u00b7 \u00b7 \u00b7 \u227b p\u201d. The winner is a1. The distinguished candidate is p and thus all the votes in {vi : 1 \u2264 i \u2264 t} are vulnerable. The price of every vi is one and the price of any other vote is \u221e. The budget is |U|3 . We claim that the two instances are equivalent. Suppose there exists an index set I \u2286 {1, . . . , t} with |I| = |U|3 such that \u228ei\u2208ISi = U . We replace the votes vi, i \u2208 I with v \u2032 i as follows.\nv\u2032i : others \u227b a1 \u227b a2 \u227b a3 \u227b Q \ufe38 \ufe37\ufe37 \ufe38\nk candidates\nThe score of each ai decreases by |U| 3 and their final scores are s(p) \u2212 1, since the score of p is not affected by this change. Also the final score of each x \u2208 U is s(p)\u2212 1 since I forms an exact set cover. This makes p win the election.\nTo prove the result in the other direction, suppose the Frugal-$bribery instance is a Yes instance. Then notice that there will be exactly |U|3 votes in vi, 1 \u2264 i \u2264 t, where every aj , j = 1, 2, 3, should come in the last k positions since s(p) = s(aj)\u2212 |U| 3 +1 and the budget is |U| 3 . Notice that, candidates in Q must not be placed within top m \u2212 k positions since s(p) = s(q) + 1, for every q \u2208 Q. Hence, in the votes that have been changed, a1, a2, a3 and all the candidates in Q must occupy the last k positions. We claim that the Si\u2019s corresponding to the vi\u2019s that have been changed must form an exact set cover. If not, then, there must exist a candidate x \u2208 U and two votes vi and vj such that, both vi and vj have been replaced by v\u2032i 6= vi and v\u2032j 6= vj and the candidate x was present within the last k positions in both vi and vj . This makes the score of x at least the score of p which contradicts the fact that p wins.\nHowever, the following result shows a polynomial time algorithm for the Frugal-$bribery problem for the k-approval, Bucklin, and plurality with runoff voting rules, when the budget of the campaigner is a constant.\nTheorem 4. The Frugal-$bribery problem is in P for k-approval, Bucklin, and plurality with runoff voting rules if the budget is a constant.\nProof. Let the budget b be a constant. Then, at most b many vulnerable votes whose price is not zero can be changed since the prices are assumed to be in N. Notice that, we may assume, without loss of generality, that all the vulnerable votes whose price is zero will be changed. We iterate over all the O(nb) many possible vulnerable vote changes and we can solve each one in polynomial amount of time since the Manipulation problem is in P for these voting rules [Xia et al., 2009].\nWe show that the Frugal-$bribery problem is in NPC for a wide class of scoring rules as characterized in the following result.\nTheorem 5. For any positional scoring rule r with score vectors {\u2212\u2192si : i \u2208 N}, if there exists a polynomial function f : N \u2212\u2192 N such that, for every m \u2208 N, f(m) \u2265 2m and in the score vector (\u03b11, . . . , \u03b1f(m)), there exists a 1 \u2264 l \u2264 f(m)\u2212 5 satisfying the following condition:\n\u03b1i \u2212 \u03b1i+1 = \u03b1i+1 \u2212 \u03b1i+2 > 0, \u2200l \u2264 i \u2264 l+ 3\nthen the Frugal-$bribery problem is in NPC for r even if the price of every vulnerable vote is either 1 or \u221e.\nProof. Since the scoring rules remain unchanged if we multiply every \u03b1i by any constant \u03bb > 0 and/or add any constant \u00b5, we can assume the following without loss of generality.\n\u03b1i \u2212 \u03b1i+1 = \u03b1i+1 \u2212 \u03b1i+2 = 1, \u2200l \u2264 i \u2264 l+ 3\nThe problem is clearly in NP. To show NP-hardness, we reduce an arbitrary instance of X3C to Frugal$bribery. Let (U, {S1, . . . , St}) be an instance of X3C. We define a Frugal-$bribery instance as follows. The candidate set is C = U \u228eQ \u228e {p, a, d}, where |Q| = f(|U |)\u2212 l\u2212 4. For each Si = {x, y, z}, 1 \u2264 i \u2264 t, we add a vote vi as follows.\nvi : p \u227b d \u227b others \u227b a \u227b x \u227b y \u227b z \u227b Q \ufe38 \ufe37\ufe37 \ufe38\nl candidates\nBy Lemma 4, we can add poly(|U |) many additional votes to ensure the following scores (denoted by s(\u00b7)).\ns(p) > s(d), s(p) = s(x) + 2, \u2200x \u2208 U,\ns(p) = s(a)\u2212 |U |\n3 + 1, s(p) = s(q)\u2212 1\nThe tie-breaking rule is \u201c\u00b7 \u00b7 \u00b7 \u227b p\u201d. The distinguished candidate is p. The price of every vi is 1 and the price of every other vulnerable vote is \u221e. The budget is |U|3 . We claim that the two instances are equivalent. In the forward direction, there exists an index set I \u2286 [t], |I| = |U|3 , such that \u228ei\u2208ISi = U . We replace the votes vi, i \u2208 I with v\u2032i as follows.\nv\u2032i : p \u227b d \u227b others \u227b x \u227b y \u227b z \u227b a \u227b Q\nThis makes the score of p at least one more than the score of every other candidate and thus p wins. To prove the result in the other direction, suppose there is a way to make p win the election. Notice that, the candidates in Q cannot change their positions in the changed votes and must occupy the last positions due to their score difference with p. Now, we claim that there will be exactly |U|3 votes where the candidate a must be placed at the (l + 4)th position since s(p) = s(a) \u2212 |U|3 + 1 and the budget is |U| 3 . We claim that the Si\u2019s corresponding to the changed votes must form an exact set cover. If not, then there must exist a candidate x \u2208 U whose score has increased by at least two contradicting the fact that p wins the election.\nFor the sake of concreteness, an example of a function f , stated in Theorem 5, that works for the Borda voting rule is f(m) = 2m. Theorem 5 shows that the Frugal-$bribery problem is intractable for the Borda voting rule. However, the following theorem shows the intractability of the uniform-Frugal-$bribery problem for the Borda voting rule, even in a very restricted setting.\nTheorem 6. The uniform-Frugal-$bribery problem is in NPC for the Borda voting rule, even when all the vulnerable votes have a price of 1 and the budget is 2.\nProof. The problem is clearly in NP. To show NP-hardness, we reduce an arbitrary instance of the Manipulation problem for the Borda voting rule with two manipulators to an instance of the uniform-Frugal$bribery problem for the Borda voting rule. Let (C,\u227bt, 2, p) be an arbitrary instance of the Manipulation problem for the Borda voting rule. The corresponding Frugal-$bribery instance is as follows. The candidate set is C\u2032 = C \u228e {d, q}. For each vote vi \u2208\u227bt, we add a vote v\u2032i : vi \u227b d \u227b q. Corresponding to the two manipulators\u2019, we add two more votes \u03bd1, \u03bd2 : \u2212\u2212\u2212\u2212\u2212\u2192 C \\ {p} \u227b d \u227b p \u227b q, where \u2212\u2212\u2212\u2212\u2212\u2192 C \\ {p} is an arbitrary but fixed order of the candidates in C \\{p}. We add more votes to ensure the following score differences (s(\u00b7) and s\u2032(\u00b7) are the score functions for the Manipulation and the uniform-Frugal-$bribery instances respectively).\ns\u2032(p) = \u03bb+ s(p)\u2212 2, s\u2032(x) = \u03bb+ s(x) for every x \u2208 C,\ns\u2032(q) = s\u2032(p)\u2212 2m+ 1, s\u2032(p) > s\u2032(d) + 2m for some \u03bb \u2208 Z\nThis will be achieved as follows. For any two arbitrary candidates a and b, the following two votes increase the score of a by one more than the rest of the candidates except b whose score increases by one less. This construction has been used before [Xia et al., 2010,Davies et al., 2011].\n\u2212\u2192 C1 \u227b a \u227b b \u227b \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 C \\ (C1 \u222a {a, b})\n\u2190\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212 C \\ (C1 \u222a {a, b}) \u227b a \u227b b \u227b \u2190\u2212 C1\nAlso we can ensure that candidate p is always in (m\u221212 , m+1 2 ) positions and the candidate q never immediately follows p in these new votes. The tie-breaking rule is \u201cothers \u227b p\u201d. The distinguished candidate is p. The price of every vulnerable vote is one and the budget is two. We claim that the two instances are equivalent. Suppose the Manipulation instance is a Yes instance. Let u1, u2 be the manipulators\u2019 votes that make p win. In the Frugal-$bribery instance, we replace \u03bdi by \u03bd \u2032 i : p \u227b d \u227b ui \u227b q for i = 1, 2. This makes p win the election. On the other hand, since in all the vulnerable votes except \u03bd1 and \u03bd2, the candidate q never immediately follows candidate p, changing any of these votes can never make p win the election since s\u2032(q) = s\u2032(p)\u2212 2m+ 1 and the budget is two. Hence, the only way p can win the election, if at all possible, is by changing the votes \u03bd1 and \u03bd2. Let a vote \u03bd \u2032 i replaces \u03bdi for i = 1, 2. We can assume, without loss of generality, that p and d are at the first and the second positions respectively in both \u03bd\u20321 and \u03bd \u2032 2. Let ui be the order \u03bd\u2032i restricted only to the candidates in C. This makes p winner of the Manipulation instance since, s\u2032(p) = \u03bb+ s(p)\u2212 2, s\u2032(x) = \u03bb+ s(x) for every x \u2208 C."}, {"heading": "4 Weighted Elections", "text": "Now, we turn our attention to weighted elections.\nLemma 5. The following results follow immediately from the literature [Conitzer et al., 2007] and Proposition 1.\n\u2013 The Frugal-bribery problem is in P for the maximin and the Copeland voting rules for three candidates.\n\u2013 The Frugal-bribery problem is in NPC for any scoring rule except plurality for three candidates.\nLemma 6. The Frugal-bribery problem is in P for the maximin and the Copeland voting rules for three candidates.\nProof. TheManipulation problem is in P for the maximin, Copeland voting rules for three candidates [Conitzer et al., 2007]. Hence, the result follows from Proposition 1.\nLemma 7. The Frugal-bribery problem is in NPC for any scoring rule except plurality for three candidates.\nProof. The same proof for Theorem 6 of [Conitzer et al., 2007] would work here.\nTheorem 7. The Frugal-bribery problem is in P for the plurality voting rule.\nProof. Let p be the distinguished candidate of the campaigner. The greedy strategy of just replacing every vulnerable vote by p \u227b others solves the problem due to the monotonicity property of the plurality voting rule.\nThe Partition problem, which is known to be NPC [Garey and Johnson, 1979], is defined as follows.\nDefinition 7. (Partition Problem) Given a finite multi-set W of positive integers with \u2211\nw\u2208W w = 2K, does there exist a subset W \u2032 \u2282 W such\nthat \u2211\nw\u2208W \u2032 w = K? An arbitrary instance of Partition is denoted by (W, 2K).\nWe define another problem which we call 14 -Partition as below and prove that it is also NPC. We will use this fact in the proof of Theorem 11.\nDefinition 8. ( 14 -Partition Problem) Given a finite multi-set W of positive integers with \u2211\nw\u2208W w = 4K, does there exist a subset W \u2032 \u2282 W such\nthat \u2211\nw\u2208W \u2032 w = K? An arbitrary instance of 1 4 -Partition is denoted by (W, 4K).\nLemma 8. 14 -Partition problem is in NPC.\nProof. The problem is clearly in NP. To show NP-hardness, we reduce the Partition problem to it. Let (W, 2K) be an arbitrary instance of the Partition problem. We can assume, without loss of generality, that 2K /\u2208 W , since otherwise the instance is trivially a no instance. The corresponding 14 -Partition problem instance is defined by (W1, 4K), where W1 = W \u222a {2K}. We claim that the two instances are equivalent. Suppose, the Partition instance is a Yes instance and thus there exists a set W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. This W \u2032 gives a solution to the 14 -Partition instance. To prove the result in the other\nthe other direction, suppose there is a set W \u2032 \u2282 W1 such that \u2211 w\u2208W \u2032 w = K. This W \u2032 gives a solution to the Partition problem instance since 2K /\u2208 W \u2032.\nWe now present the hardness results in weighted elections. We start with the plurality voting rule below.\nTheorem 8. The Frugal-$bribery problem is in NPC for the plurality voting rule for three candidates.\nProof. The problem is clearly in NP. We reduce an arbitrary instance of Partition to an instance of Frugal-$bribery for the plurality voting rule. Let (W, 2K), with W = {w1, . . . , wn} and \u2211n i=1 wi = 2K, be an arbitrary instance of the Partition problem. The candidates are p, a, and b. We will add votes in such a way that makes b win the election. The distinguished candidate is p. For every i \u2208 [n], there is a vote a \u227b p \u227b b of both weight and price wi. There are two votes b \u227b p \u227b a of weight 3K (we do not need to define the price of this vote since it is non-vulnerable) and p \u227b a \u227b b of both weight and price 2K + 1. The tie-breaking rule is \u201ca \u227b b \u227b p\u201d. We define the budget to be K. We claim that the two instances are equivalent.\nSuppose there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. We change the votes corresponding to the weights in W \u2032 to p \u227b a \u227b b. This makes p win the election with a score of 3K + 1. To prove in the other direction, for p to win, its score must increase by at least K. Also, the prices ensure that p\u2019s score can increase by at most K. Hence, p\u2019s score must increase by exactly by K and the only way to achieve this is to increase its score by changing the votes corresponding to the weights in W . Thus, p can win only if there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K.\nNext we show the hardness result for the maximin voting rule.\nTheorem 9. The Frugal-bribery problem is in NPC for the maximin voting rule for four candidates.\nProof. The problem is clearly in NP. We reduce an arbitrary instance of Partition to an instance of Frugal-bribery for the maximin voting rule. Let (W, 2K), with W = {w1, . . . , wn} and \u2211n i=1 wi = 2K, be an arbitrary instance of the Partition problem. The candidates are p, a, b, and c. For every i \u2208 [n], there is a vote p \u227b a \u227b b \u227b c of weight wi. There is one vote c \u227b a \u227b b \u227b p, one b \u227b c \u227b a \u227b p, and one a \u227b c \u227b b \u227b p each of weight K. The tie-breaking rule is \u201cp \u227b a \u227b b \u227b c\u201d. The distinguished candidate is p. Let us call the set of votes corresponding to the weights in W T and the rest of the votes S. Notice that, only the votes in T are vulnerable. We claim that the two instances are equivalent.\nSuppose there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. We change the votes corresponding to the weights in W \u2032 to p \u227b a \u227b b \u227b c. We change the rest of the votes in T to p \u227b b \u227b c \u227b a. The maximin score of every candidate is \u2212K and thus due to the tie-breaking rule, p wins the election.\nOn the other hand, suppose there is a way to change the vulnerable votes, that is the votes in T , that makes p win the election. Without loss of generality, we can assume that all the votes in T place p at top position. First notice that the only way p could win is that the vertices a, b, and c must form a cycle in the weighted majority graph. Otherwise, one of a, b, and c will be a Condorcet winner and thus the winner of\nthe election. Now, we show that the candidate b must defeat the candidate c. If not, then c must defeat b my a margin of K since the maximin score of p is fixed at \u2212K. Also, a must defeat c by a margin of K, otherwise the maximin score of c will be more than \u2212K. This implies that all the votes in T must be p \u227b a \u227b c \u227b b which makes a defeat b. This is a contradiction since the vertices a, b, and c must form a cycle in the weighted majority graph. Hence b must defeat c with a margin of K. This forces every vote in T to prefer b over c. Hence, without loss of generality, we assume that all the votes in T are either p \u227b a \u227b b \u227b c or p \u227b b \u227b c \u227b a, since whenever c is right after a, we can swap a and c and this will only reduce the score of a without affecting the score of any other candidates. If the total weight of the votes p \u227b a \u227b b \u227b c in T is more than K, then DE(c, a) < K, thereby making the maximin score of a more than the maximin score of p. If the total weight of the votes p \u227b a \u227b b \u227b c in T is less than K then, DE(a, b) < K, thereby making the maximin score of b more than the maximin score of p. Thus the total weight of the votes p \u227b a \u227b b \u227b c in T should be exactly K which corresponds to a partition of W .\nWe turn our attention to the Copeland\u03b1 voting rule next.\nTheorem 10. The Frugal-bribery problem is in NPC for the Copeland\u03b1 voting rule for four candidates, whenever \u03b1 \u2208 [0, 1).\nProof. The problem is clearly in NP. We reduce an arbitrary instance of Partition to an instance of Frugal-bribery for the Copeland\u03b1 voting rule. Let (W, 2K), with W = {w1, . . . , wn} and \u2211n i=1 wi = 2K, be an arbitrary instance of the Partition problem. The candidates are p, a, b, and c. For every i \u2208 [n], there is a vote p \u227b a \u227b b \u227b c of weight wi. There are two votes a \u227b p \u227b b \u227b c and c \u227b b \u227b a \u227b p each of weight K + 1. The tie-breaking rule is \u201ca \u227b b \u227b c \u227b p\u201d. The distinguished candidate is p. Let us call the set of votes corresponding to the weights in W be T and the rest of the votes be S. Notice that, only the votes in T are vulnerable. We claim that the two instances are equivalent.\nSuppose there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. We change the votes corresponding to the weights in W \u2032 to p \u227b c \u227b b \u227b a. We change the rest of the votes in T to p \u227b b \u227b c \u227b a. This makes p win the election with a Copeland\u03b1 score of two.\nOn the other hand, suppose there is a way to change the votes in T that makes p win the election. Without loss of generality, we can assume that all the votes in T place p at top position. We will show that one of the three pairwise elections among a, b, and c must be a tie. Suppose not, then a must lose to both b and c, otherwise a wins the election due to the tie-breaking rule. Now, consider the pairwise election between b and c. If b defeats c, then b wins the election due to the tie-breaking rule. If c defeats b, then c wins the election again due to the tie-breaking rule. Hence, one of the pairwise elections among a, b, and c must be a tie. Without loss of generality suppose a and b ties. Then the total weight of the votes that prefer a to b in T must be K which constitutes a partition of W .\nWe now show the hardness result for the STV voting rule.\nTheorem 11. The Frugal-bribery problem is in NPC for the STV voting rule for three candidates.\nProof. The problem is clearly in NP. We reduce an arbitrary instance of 14 -Partition to an instance of Frugal-bribery for the STV voting rule. Let (W, 4K), with W = {w1, . . . , wn} and \u2211n i=1 wi = 4K, be an arbitrary instance of the 14 -Partition problem. The candidates are p, a, and b. For every i \u2208 [n], there is a vote p \u227b a \u227b b of weight wi. There is a vote a \u227b p \u227b b of weight 3K \u2212 1 and a vote b \u227b a \u227b p of weight 2K. The tie-breaking rule is \u201ca \u227b b \u227b p\u201d. The distinguished candidate is p. Let us call the set of votes corresponding to the weights in W T and the rest of the votes be S. Notice that, only the votes in T are vulnerable. We claim that the two instances are equivalent.\nSuppose there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. We change the votes corresponding to the weights in W \u2032 to b \u227b p \u227b a. We do not change the rest of the votes in T . This makes p win the election.\nTo prove the other direction, suppose there is a way to change the votes in T that makes p win the election. First notice that, p can win only if b qualifies for the second round. Hence, the total weight of the votes in T that put b at the first position must be at least K. On the other hand, if the total weight of the votes in T that put b at the first position is strictly more than K, then p does not qualify for the second\nround and thus cannot win the election. Hence the total weight of the votes in T that put b at the first position must be exactly equal to K which constitutes a 14 -Partition of W .\nFor three candidates, the STV voting rule is the same as the plurality with runoff voting rule. Hence, we have the following corollary.\nCorollary 1. The Frugal-bribery problem is in NPC for the plurality with runoff voting rule for three candidates.\nNext we show, that the Frugal-bribery problem for the Bucklin voting rule is in NPC.\nTheorem 12. The Frugal-bribery problem is in NPC for the Bucklin voting rule for four candidates.\nProof. The problem is clearly in NP. We reduce an arbitrary instance of Partition to an instance of Frugal-bribery for the Bucklin voting rule. Let (W, 2K), with W = {w1, . . . , wn} and \u2211n i=1 wi = 2K, be an arbitrary instance of the Partition problem. The candidates are p, a, b, and c. For every i \u2208 [n], there is a vote p \u227b a \u227b b \u227b c of weight wi. There are two votes a \u227b b \u227b p \u227b c and c \u227b b \u227b a \u227b p each of weight K. The tie-breaking rule is \u201cp \u227b a \u227b b \u227b c\u201d. The distinguished candidate is p. Let T denotes the set of votes corresponding to the weights in W and the rest of the votes be S. Notice that, only the votes in T are vulnerable. We claim that the two instances are equivalent.\nSuppose there exists a W \u2032 \u2282 W such that \u2211\nw\u2208W \u2032 w = K. We change the votes corresponding to the weights in W \u2032 to p \u227b a \u227b b \u227b c. We change the rest of the votes in T to p \u227b c \u227b b \u227b a. This makes p win the election with a Bucklin score of three.\nTo prove the result in the other direction, suppose there is a way to change the votes in T that makes p win the election. Without loss of generality, we can assume that all the votes in T place p at the first position. First notice that the Bucklin score of p is already fixed at three. In the votes in T , the candidate b can never be placed at the second position since that will make the Bucklin score of b to be two. Also the total weight of the votes in T that place a in their second position can be at most K. The same holds for c. Hence, the total weight of the votes that place a in their second position will be exactly equal to K which constitutes a partition of W .\nFrom Proposition 1, Lemma 7, Theorem 8 to 12 , and Corollary 1, we get the following corollary.\nCorollary 2. The uniform-Frugal-$bribery and the nonuniform-Frugal-$bribery problems are in NPC for the scoring rules except plurality, STV, and the plurality with runoff voting rules for three candidates and for the maximin, Copeland, and Bucklin voting rules for four candidates."}, {"heading": "5 Conclusion", "text": "We have proposed and studied a sophisticated model of bribery in this work. It turns out that the problems studied in this paper present interesting connections to two of the best studied problems in computational social choice theory, namely Manipulation and $Bribery. We believe that our work has practical appeal as well while it is interesting, on its own, from a purely theoretical point of view.\nA potential and natural direction for future work is to study these problems under various other settings. One obvious setting is to restrict the campaigner\u2019s knowledge about the votes and/or the candidates who will actually turn up. The uncertainty can also arise from the voting rule that will eventually be used among a set of voting rules. Also, studying these problems when the pricing model for vulnerable votes is similar to swap bribery would be another interesting future direction. However, it is not very clear whether a swap bribery like pricing model has any practical motivation in the setting of bribery without money."}], "references": [{"title": "Voting schemes for which it can be difficult to tell who won the election", "author": ["Bartholdi III et al", "J. 1989] Bartholdi III", "C.A. Tovey", "M.A. Trick"], "venue": "Social Choice and Welfare (SCW),", "citeRegEx": "al. et al\\.,? \\Q1989\\E", "shortCiteRegEx": "al. et al\\.", "year": 1989}, {"title": "Campaigns for lazy voters: Truncated ballots", "author": ["Baumeister et al", "D. 2012] Baumeister", "P. Faliszewski", "J. Lang", "J. Rothe"], "venue": "In Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "al. et al\\.,? \\Q2012\\E", "shortCiteRegEx": "al. et al\\.", "year": 2012}, {"title": "Computational complexity of two variants of the possible winner problem. In The 10th International Conference on Autonomous Agents and Multiagent Systems (AAMAS), pages 853\u2013860", "author": ["Baumeister et al", "D. 2011] Baumeister", "M. Roos", "J. Rothe"], "venue": "International Foundation for Autonomous Agents and Multiagent Systems", "citeRegEx": "al. et al\\.,? \\Q2011\\E", "shortCiteRegEx": "al. et al\\.", "year": 2011}, {"title": "Prices matter for the parameterized complexity of shift bribery", "author": ["Bredereck et al", "R. 2014] Bredereck", "J. Chen", "P. Faliszewski", "A. Nichterlein", "R. Niedermeier"], "venue": "In International Conference on Artificial Intelligence (AAAI)", "citeRegEx": "al. et al\\.,? \\Q2014\\E", "shortCiteRegEx": "al. et al\\.", "year": 2014}, {"title": "When are elections with few candidates hard to manipulate", "author": ["Conitzer et al", "V. 2007] Conitzer", "T. Sandholm", "J. Lang"], "venue": "Journal of the ACM (JACM), 54(3):14", "citeRegEx": "al. et al\\.,? \\Q2007\\E", "shortCiteRegEx": "al. et al\\.", "year": 2007}, {"title": "Complexity of and algorithms for Borda manipulation", "author": ["Davies et al", "J. 2011] Davies", "G. Katsirelos", "N. Narodytska", "T. Walsh"], "venue": "In Proceedings of the International Conference on Artificial Intelligence (AAAI),", "citeRegEx": "al. et al\\.,? \\Q2011\\E", "shortCiteRegEx": "al. et al\\.", "year": 2011}, {"title": "On the hardness of bribery variants in voting with CP-Nets", "author": ["Dorn", "Kr\u00fcger", "B. 2014] Dorn", "D. Kr\u00fcger"], "venue": "arXiv preprint arXiv:1410.5186", "citeRegEx": "Dorn et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Dorn et al\\.", "year": 2014}, {"title": "Multivariate complexity analysis of swap bribery", "author": ["Dorn", "Schlotter", "B. 2012] Dorn", "I. Schlotter"], "venue": null, "citeRegEx": "Dorn et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Dorn et al\\.", "year": 2012}, {"title": "Swap bribery", "author": ["Elkind et al", "E. 2009] Elkind", "P. Faliszewski", "A. Slinko"], "venue": "In Proceedings of the 2nd International Symposium on Algorithmic Game Theory (SAGT", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}, {"title": "The complexity of probabilistic lobbying", "author": ["Erd\u00e9lyi et al", "G. 2009] Erd\u00e9lyi", "H. Fernau", "J. Goldsmith", "N. Mattei", "D. Raible", "J. Rothe"], "venue": "In Algorithmic Decision Theory,", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}, {"title": "Bribery and voter control under voting-rule uncertainty", "author": ["Erdelyi et al", "G. 2014] Erdelyi", "E. Hemaspaandra", "L.A. Hemaspaandra"], "venue": "In Proceedings of the 13th International Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "al. et al\\.,? \\Q2014\\E", "shortCiteRegEx": "al. et al\\.", "year": 2014}, {"title": "The complexity of bribery in elections", "author": ["Faliszewski et al", "P. 2006] Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra"], "venue": "In International Conference on Artificial Intelligence (AAAI),", "citeRegEx": "al. et al\\.,? \\Q2006\\E", "shortCiteRegEx": "al. et al\\.", "year": 2006}, {"title": "How hard is bribery in elections", "author": ["Faliszewski et al", "P. 2009a] Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra"], "venue": "Journal of Artificial Intelligence Research (JAIR), 35(2):485", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}, {"title": "Llull and Copeland voting computationally resist bribery and constructive control", "author": ["Faliszewski et al", "P. 2009b] Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra", "J. Rothe"], "venue": "Journal of Artificial Intelligence Research (JAIR),", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}, {"title": "Complexity of manipulation, bribery, and campaign management in bucklin and fallback voting", "author": ["Faliszewski et al", "P. 2014] Faliszewski", "Y. Reisch", "J. Rothe", "L. Schend"], "venue": "In Proceedings of the 13th International Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "al. et al\\.,? \\Q2014\\E", "shortCiteRegEx": "al. et al\\.", "year": 2014}, {"title": "How to change a groups collective decision", "author": ["Hazon et al", "N. 2013] Hazon", "R. Lin", "S. Kraus"], "venue": "In Proceedings of the 23rd International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "al. et al\\.,? \\Q2013\\E", "shortCiteRegEx": "al. et al\\.", "year": 2013}, {"title": "Bribery in voting over combinatorial domains is easy", "author": ["Mattei et al", "N. 2012] Mattei", "M.S. Pini", "K.B. Venable", "F. Rossi"], "venue": "In Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS),", "citeRegEx": "al. et al\\.,? \\Q2012\\E", "shortCiteRegEx": "al. et al\\.", "year": 2012}, {"title": "Bribery in voting with soft constraints", "author": ["Pini et al", "M.S. 2013] Pini", "F. Rossi", "K.B. Venable"], "venue": "In International Conference on Artificial Intelligence (AAAI)", "citeRegEx": "al. et al\\.,? \\Q2013\\E", "shortCiteRegEx": "al. et al\\.", "year": 2013}, {"title": "Theory of recursive functions and effective computability, volume 126", "author": ["Rogers", "H. 1967] Rogers", "H. Rogers"], "venue": null, "citeRegEx": "Rogers et al\\.,? \\Q1967\\E", "shortCiteRegEx": "Rogers et al\\.", "year": 1967}, {"title": "A scheduling approach to coalitional manipulation", "author": ["Xia et al", "L. 2010] Xia", "V. Conitzer", "A.D. Procaccia"], "venue": "In Proceedings of the 11th ACM conference on Electronic Commerce (EC),", "citeRegEx": "al. et al\\.,? \\Q2010\\E", "shortCiteRegEx": "al. et al\\.", "year": 2010}, {"title": "Complexity of unweighted coalitional manipulation under some common voting rules", "author": ["Xia et al", "L. 2009] Xia", "M. Zuckerman", "A.D. Procaccia", "V. Conitzer", "J.S. Rosenschein"], "venue": "In Proceedings of the 21st International Joint Conference on Artificial Intelligence (IJCAI),", "citeRegEx": "al. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "al. et al\\.", "year": 2009}], "referenceMentions": [], "year": 2017, "abstractText": "Bribery in elections is an important problem in computational social choice theory. However, bribery with money is often illegal in elections. Motivated by this, we introduce the notion of frugal bribery and formulate two new pertinent computational problems which we call Frugal-bribery and Frugal$bribery to capture \u2018bribery without money\u2019 in elections. In the proposed model, the briber is frugal in nature and this is captured by her inability to bribe votes of a certain kind, namely, non-vulnerable votes. In the Frugal-bribery problem, the goal is to make a certain candidate win the election by changing only vulnerable votes. In the Frugal-$bribery problem, the vulnerable votes have prices and the goal is to make a certain candidate win the election by changing only vulnerable votes, subject to a budget constraint of the briber. We further formulate two natural variants of the Frugal-$bribery problem namely Uniform-frugal-$bribery and Nonuniform-frugal-$bribery where the prices of the vulnerable votes are, respectively, all the same or different. We study the computational complexity of the above problems for unweighted and weighted elections for several commonly used voting rules. We observe that, even if we have only a small number of candidates, the problems are intractable for all voting rules studied here for weighted elections, with the sole exception of the Frugal-bribery problem for the plurality voting rule. In contrast, we have polynomial time algorithms for the Frugal-bribery problem for plurality, veto, k-approval, k-veto, and plurality with runoff voting rules for unweighted elections. However, the Frugal-$bribery problem is intractable for all the voting rules studied here barring the plurality and the veto voting rules for unweighted elections.", "creator": "LaTeX with hyperref package"}}}