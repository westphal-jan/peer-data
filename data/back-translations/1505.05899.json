{"id": "1505.05899", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-May-2015", "title": "The IBM 2015 English Conversational Telephone Speech Recognition System", "abstract": "Some of the techniques that have been shown to be beneficial are: maxout networks with annealed drop-out rates; networks with a very large output trained on 2000 hours of data; joint modeling of partially unfolded recurrent neural networks and convolutional nets by combining the bottleneck and output layer and retraining the resulting model; and last, sophisticated language model rescoring with exponential and neural network LMs. These techniques result in a word error rate of 8.0% on the Hub5-2000 evaluation test panel, which is 23% better than our previous best published result.", "histories": [["v1", "Thu, 21 May 2015 20:49:32 GMT  (35kb,D)", "http://arxiv.org/abs/1505.05899v1", "Submitted to Interspeech 2015"]], "COMMENTS": "Submitted to Interspeech 2015", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["george saon", "hong-kwang j kuo", "steven rennie", "michael picheny"], "accepted": false, "id": "1505.05899"}, "pdf": {"name": "1505.05899.pdf", "metadata": {"source": "CRF", "title": "The IBM 2015 English Conversational Telephone Speech Recognition System", "authors": ["George Saon", "Hong-Kwang J. Kuo", "Steven Rennie", "Michael Picheny"], "emails": ["gsaon@us.ibm.com"], "sections": [{"heading": "1. Introduction", "text": "Ever since [1] demonstrated the large accuracy gains from using deep neural network acoustic models versus Gaussian mixture models, the Switchboard corpus has become the de facto standard experimental testbed for reporting believable and, more importantly, reproducible results for LVCSR. We surmise that this is because it is the largest publicly available dataset (up to 2300 hours of training data) composed of truly conversational speech and because, in general, techniques which result in improvements on Switchboard tend to work well on both small and large vocabulary tasks. One can think of LDA/STC, VTLN, FMLLR and lattice-based model and feature-space discriminative training which were developed first on Switchboard and then became ubiquitous as prime examples of such techniques.\nSince Switchboard is such a well-studied corpus, we thought we would take a step back and reflect on how far we have come in terms of speech recognition technology. To set the baseline, the human word error rate on this task is estimated to be around 4% [2]. Quoting [2] again, in 1995, \u201ca high-performance HMM recognizer\u201d achieved a 43% WER on Switchboard [3]. In 2000, Cambridge University achieved an at the time impressive error rate of 19.3% during the Hub5e DARPA evaluation [4] which they attributed to \u201ccareful engineering\u201d. At the height of technological development for GMM-based systems, the winning IBM submission scored 15.2% WER during the 2004 DARPA EARS Rich Transcription evaluation [5] largely due to the Attila ASR toolkit [6] and fMPE [7]. Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.\nTo achieve an error rate of 8.0% on this task is not trivial. In our opinion, a successful recipe has to contain several ingredients. The first and most obvious one is to train larger acoustic and language models on more data. The second (a little less\nobvious) is to train neural nets that have diverse architectures and operate on different input representations so that we get accuracy gains from both feature and model combination. Third, extra \u201cspice\u201d such as networks with maxout nonlinearities and exponential and NN language models were also found to significantly lower the error rate of our system. Last but not least, it is our experience that having a strong GMM-HMM baseline system [6, 13] which provides high-quality alignments used for the various speaker adaptation techniques and for DNN crossentropy training helps.\nThe paper is organized as follows: in section 2 we describe the processing steps that are common across all models, in section 3 we present a set of system improvements, and in section 4 we summarize our findings and ponder future opportunities for improvement."}, {"heading": "2. General processing", "text": "Here we describe the common processing steps for all the models detailed in this paper. In particular, we discuss frontend processing, speaker adaptation and neural network training specifics which are largely similar to [14, 13]."}, {"heading": "2.1. Training and test data", "text": "The training data consists of 1975 hours of segmented audio from English telephone conversations between two strangers on a preassigned topic and is divided as follows: 262 hours from the Switchboard 1 data collection, 1698 hours from the Fisher data collection and 15 hours of CallHome audio. The test set is the Hub5 2000 evaluation set and contains two parts: 2.1 hours (21.4K words, 40 speakers) of Switchboard data and 1.6 hours (21.6K words, 40 speakers) of CallHome audio. The decoding vocabulary has 30.5K words and 32.9K pronunciations and all decodings were performed with a 4M 4-gram language model (and rescored with different LMs in subsection 3.4)."}, {"heading": "2.2. Feature extraction", "text": "Speech is coded into 25 ms frames, with a frame-shift of 10 ms. Each frame is represented by a feature vector of 13 VTL-warped perceptual linear prediction (PLP) cepstral coefficients which are mean and variance normalized per conversation side. Every 9 consecutive cepstral frames are spliced together and projected down to 40 dimensions using LDA. The range of this transformation is further diagonalized by means of a global semi-tied covariance transform. Next, the LDA features are transformed with one feature-space MLLR (FMLLR) transform per conversation side at both training and test time. Convolutional nets are trained on VTL-warped logmel features augmented with first and second temporal derivatives. The Mel filterbank has 40 filters and the input to the CNNs are blocks of 11 consecutive 40\u00d73-dimensional frames (as described in [13]).\nar X\niv :1\n50 5.\n05 89\n9v 1\n[ cs\n.C L\n] 2\n1 M\nay 2\n01 5\nIn addition to VTLN and FMLLR, DNNs are adapted to the speaker by appending 100-dimensional i-vectors to every block of 11 FMLLR frames as described in [14]. The i-vectors are extracted using a universal background model given by a GMM with 2048 diagonal covariance mixture components which was trained with maximum likelihood on the speaker-adapted features. The i-vectors are extracted once per conversation side."}, {"heading": "2.3. Neural network training", "text": "All models have sigmoid hidden layers and softmax output layers (except for the models from subsection 3.1) and are trained with 10-15 epochs of SGD on frame-randomized minibatches of 250 frames and a cross-entropy criterion. The targets correspond to the context-dependent HMM states obtained by aligning the audio with a GMM-HMM system with 300K Gaussians trained with maximum likelihood on the FMLLR features. The same alignments are mapped to the leaves of various phonetic decision trees which differ in phone context size (\u00b12 or \u00b13) and number of leaves (16K, 32K and 64K). Prior to CE training, the networks are initialized with layerwise discriminative pretraining as suggested in [1]. Additionally, we applied 20-30 iterations of hessian-free sequence discriminative training (ST) by using the state-based minimum Bayes risk (MBR) objective function as described in [15]. The trained networks are used directly in a hybrid decoding scenario by subtracting the logarithm of the HMM state priors from the log of the DNN output scores."}, {"heading": "3. System improvements", "text": "In this section we discuss specific improvements related to acoustic and language modeling. More concretely, we describe the following techniques: maxout models with annealed dropout (subsection 3.1); training DNNs, CNNs and RNNs with a very large number of outputs (subsection 3.2); improved joint training of convolutional and non-convolutional nets (subsection 3.3); and language model rescoring with exponential and neural network LMs (subsection 3.4)."}, {"heading": "3.1. Maxout networks with annealed dropout", "text": "Maxout networks [16] generalize rectified linear (ReLU, max[0, a]) units, employing non-linearities of the form:\nsj = max i\u2208C(j) ai (1)\nwhere the activations ai = wTi x+ bi are based, as usual, on inner products, and the sets of activations {C(j)} utilized by different hidden units are typically disjoint. Maxout networks are conditionally linear and so avoid the vanishing gradient problem, and are well suited for the dropout training procedure [17], which for a linear model, trains an exponentially sized model ensemble (2D models for input dimension D), whose geometric average can be computed by simply renormalizing at test time.\nMaxout networks for ASR have recently been investigated by several researchers, and found to produce significant gains when training data is limited [18], but negligible gains in our personal experience when the amount of training data exceeds approximately 100 hours. However, recently we showed that by annealing the dropout rate over the course of training, Maxout networks can produce substantial gains, even in big data scenarios [19]. The annealing procedure effectively initializes the ensemble of models being learned at a given iteration with an ensemble of models with lower mean and higher variance in the\nnumber of active units. This stochastic regularization procedure retains the benefits of the standard dropout training procedure (a strong exploration-phase; a preference for population-based predictions) without compromising the capacity of the network being learned.\nTable 1 compares the performance of our annealed dropout Maxout networks (Maxout-AD) to corresponding sigmoidbased DNNs and CNNs from [13] learned using our standard training procedure, using only the SWB-1 training data (262 hours). All Maxout networks utilize 2 filters per hidden unit, and the same number of layers and roughly the same number of parameters per layer as the sigmoid-based DNN/CNN counterparts. Parameter equalization is achieved by having a factor of \u221a 2 more neurons per hidden layer for the maxout nets since the maxout operation reduces the number of outputs by a factor of 2. Note that ReLU networks, in our experience, perform on-par with sigmoid-based DNNs in this data regime. Maxout networks trained with AD (Maxout-AD), on the other hand, show a clear advantage over our traditional networks. Also, note that the convolutional layers of the Maxout-AD CNN have only 128 and 256 feature map outputs, whereas those of the sigmoid CNN has 512/512 outputs. Training of the Maxout-AD CNN with a 512/512 filter configuration is in progress."}, {"heading": "3.2. Networks with very large output layers", "text": "When training on 2000 hours of data, we found it beneficial to increase the number of context-dependent HMM output targets to values that are far larger than commonly reported. To keep the computation and the number of parameters in check, we also had to use a bottleneck layer before the output layer [20] with typically 512 neurons. Back in the days when we were training GMM-based acoustic models, we did not notice accuracy improvements when using more than, say, 10000 HMM states [5]. We conjecture that this is because GMMs are a distributed model and require more data for each state to reliably estimate the mixture components, whereas the DNN output layer is shared between states. This allows DNNs to have a much richer target space. Additionally, we experimented with growing acoustic decision trees where the phonetic context is increased to heptaphones (\u00b13 phones within words and \u00b12 phones across words). This was a distinct feature of our EARS RT\u201904 evaluation system which made a significant difference [5]. The effect of varying the number of outputs and phonetic context is shown in Table 2 for DNNs with 5 hidden layers (4 with 2048 units and 1 with 512 units) trained with 15 passes of cross-entropy on 2000 hours.\nBased on these results, a compromise was struck by choosing models with 32K outputs and pentaphone acoustic context in all subsequent experiments. We have trained three types of models that differ in functionality and input features:\n\u2022 Regular DNNs that operate on 11 spliced 40- dimensional FMLLR frames and 100-dimensional ivectors. These models have 5 hidden sigmoid layers (4 with 2048 units and 1 with 512 units) and their architecture is shown on the left side of Figure 1.\n\u2022 Convolutional neural networks with two convolutional layers with 128 and 256 filters respectively. The CNNs operate on blocks of 11 consecutive VTL-warped 40- dimensional logmel frames augmented with first and second derivatives with 9\u00d79 convolution windows. The convolution and pooling layer configuration is taken from [21] and the architecture is also shown on the left side of Figure 1.\n\u2022 Partially unfolded recurrent neural networks [22] which operate on a sliding window of 6 40-dimensional FMLLR frames (from t . . . t + 5) and 100-dimensional ivectors. The 6-frame window slides backwards in time from t to t \u2212 5 (so that the RNN and the DNN have exactly the same input). The first hidden layer is recurrent and is followed by 4 non-recurrent hidden layers (3 with 2048 neurons and 1 with 512 neurons) and one output layer with 32000 softmax units.\nAll nets are trained with 10-15 passes of cross-entropy on 2000 hours of audio and 30 iterations of sequence discriminative training using Hessian-free optimization [15]. The performance of the individual networks as well as their score fusion combination is shown in Table 3 on the Hub5\u201900 test set (SWB and CallHome parts). For score fusion, we decode with a framelevel sum of the outputs of the nets prior to the softmax with uniform weights."}, {"heading": "3.3. Improved joint training of recurrent and convolutional nets", "text": "In [13], we proposed a method for jointly modeling and training a CNN and a DNN. The crux of the method is to have the first layers be network specific (convolution and pooling for CNN\noperating on spectral features and input layer for DNN operating on PLP-based and i-vector features) and the remaining layers be shared. The outputs of the network-specific layers are merged into one common hidden layer followed by additional (common) hidden layers and one output layer. This graph structure for the joint network extends the standard linear sequence of layers for DNNs (or CNNs). By using this architecture, we reported a 12% relative gain on a Switchboard 300 hours setup over the best single model (from 11.8% for the CNN to 10.4% for the joint CNN/DNN). We also showed that performing score fusion of a CNN and a DNN trained separately achieves a similar WER of 10.5%. Hence, the main benefit of the joint model in [13] over the score fusion approach is the shared computation for the common hidden and output layers which is considerably faster than having to do two separate forward passes.\nA different approach that we are advocating here is to initialize the joint model such that it is equivalent to the score fusion of the separate models. The reasoning behind this is that, after retraining, the objective function for sequence discriminative training can only improve (or, at worst, remain the same). For the case of log-linear score combination of multiple neural networks with the same number (and type) of outputs, this initialization is done by concatenating the individual weight matrices between the bottleneck and output layers and by dividing the resulting matrix by the number of models (assuming uniform weights). An example of a joint CNN/DNN model initialized in such a way is illustrated in Figure 1. For convenience, we have indicated the sizes of the weight matrices in the oval boxes and the dimensionality of the layers is attached to the arrows.\nWe have experimented with jointly training the unfolded RNN and the CNN from subsection 3.2. Two experimental scenarios were considered. The first is where the joint model was initialized with the fusion of the cross-entropy trained RNN and CNN whereas the second uses ST models as the starting point. For both scenarios we generate numerator and denominator lattices with the initial joint model and optimize the lattice-based MBR loss using distributed hessian-free training [15]. In Table 4 we compare the WERs for several systems on the Hub5\u201900 test set (SWB and CallHome parts).\nWe observe that joint modeling and sequence discriminative retraining helps by 0.5% on the CallHome part and only 0.1% on SWB over score fusion of the ST models. Also, the performance of the joint model after sequence training appears to be slightly better for the initialization from CE models (we expected it to be the other way around)."}, {"heading": "3.4. Language model", "text": "In experiments comparing acoustic models reported in previous sections, we used a baseline legacy language model that had been used for previous publications: a 4M 4-gram language model with a vocabulary of 30.5K words. While keeping the vocabulary the same, we rebuilt the LM using publicly available (e.g. LDC) training data, including Switchboard, Fisher, Gigaword, and Broadcast News and Conversations. The most relevant data are the transcripts of the 1975 hour audio data used for training the acoustic model, consisting of about 24M words.\nTo build the new n-gram language model, we trained a 4- gram model with modified Kneser-Ney smoothing [23] for each corpus, and then linearly interpolated the component models with weights chosen to optimize perplexity on a held-out set. Then we applied entropy pruning [24], resulting in a single 4- gram LM consisting of 37M n-grams. This new n-gram LM was used in combination with our best acoustic model to decode and generate word lattices for further LM rescoring experiments. The first two lines of Table 5 show the improvement using this larger n-gram LM trained on more data. The WER improved by 0.5% for SWB and 0.3% for CallHome. Part of this improvement (0.1-0.2%) was due to also using a larger beam for decoding."}, {"heading": "LM WER SWB WER CH", "text": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29]. We built a model M LM on each corpus and interpolated the models, together with the 37M ngram LM. As shown in Table 5, using model M results in an improvement of 0.4% on SWB and 1.0% on CallHome.\nWe built two NNLMs for interpolation. One was trained on just the most relevant data: the 24M word corpus (Switchboard/Fisher/CallHome acoustic transcripts). Another was\ntrained on a 560M word subset of the LM training data: in order to speed up training for this larger set, we employed a hierarchical NNLM approximation [27, 30]. Table 5 shows that, compared with the n-gram LM baseline, interpolating NNLM to model M and n-gram LM results in an improvement of 0.8% on SWB (8.8% to 8.0%) and 1.2% on CallHome (15.3% to 14.1%).\nLastly, in Table 6 we compare our results with those obtained by various other systems from the literature. For clarity, we also specify the type of training data that was used for acoustic modeling in each case."}, {"heading": "4. Discussion", "text": "We have presented a set of improvements to our English Switchboard system that lowered the error rate substantially compared to our previous best result [13]. In decreasing order of importance these are: rescoring with strong language models trained on diverse data sources; joint training of an RNN and a CNN with 32000 outputs on 2000 hours of audio and maxout networks with annealed dropout. We expect additional accuracy gains by training the maxout nets and larger CNNs with a 512/512 filter configuration on all the data.\nExtrapolating from historical trends, we believe that human accuracy on this task can be reached within the next decade. We think that the way to get there will most likely involve an increase of several orders of magnitude in training data and the use of more sophisticated neural network architectures that tightly integrate multiple knowledge sources (acoustics, language, pragmatics, etc.)."}, {"heading": "5. Ackowledgment", "text": "The authors wish to thank the following present and former IBM colleagues: H. Soltau, D. Povey, S. Chen, A. Emami, V. Goel, B. Kingsbury, L. Mangu, B. Ramabhadran, T. Sainath and G. Zweig for significant contributions to the Switchboard system."}, {"heading": "6. References", "text": "[1] F. Seide, G. Li, X. Chien, and D. Yu, \u201cFeature engineering\nin context-dependent deep neural networks for conversational speech transcription,\u201d in Proc. ASRU, 2011.\n[2] R. P. Lippmann, \u201cSpeech recognition by machines and humans,\u201d Speech communication, vol. 22, no. 1, pp. 1\u201315, 1997.\n[3] F. Liu, M. Monkowski, M. Novak, M. Padmanabhan, M. Picheny, and P. Rao, \u201cPerformance of the IBM LVCSR\nsystem on the Switchboard corpus,\u201d in Proceedings of Speech Research Symposium, 1995, p. 189.\n[4] T. Hain, P. Woodland, G. Evermann, and D. Povey, \u201cThe CU-HTK march 2000 HUB5E transcription system,\u201d in Proc. Speech Transcription Workshop, vol. 1. Baltimore, 2000.\n[5] H. Soltau, B. Kingsbury, L. Mangu, D. Povey, G. Saon, and G. Zweig, \u201cThe IBM 2004 conversational telephony system for rich transcription.\u201d in Acoustics, Speech and Signal Processing (ICASSP), 2005 IEEE International Conference on, 2005, pp. 205\u2013208.\n[6] H. Soltau, G. Saon, and B. Kingsbury, \u201cThe IBM Attila speech recognition toolkit,\u201d in Proc. of IEEE Workshop on Spoken Language Technology (SLT), 2010, pp. 97\u2013102.\n[7] D. Povey, B. Kingsbury, L. Mangu, G. Saon, H. Soltau, and G. Zweig, \u201cfMPE: Discriminatively trained features for speech recognition,\u201d in Proc. of ICASSP, 2005, pp. 961\u2013964.\n[8] K. Vesely, A. Ghoshal, L. Burget, and D. Povey, \u201cSequence-discriminative training of deep neural networks,\u201d in Proc. Interspeech, 2013.\n[9] F. Seide, H. Fu, J. Droppo, G. Li, and D. Yu, \u201c1-bit stochastic gradient descent and its application to dataparallel distributed training of speech dnns,\u201d in Fifteenth Annual Conference of the International Speech Communication Association, 2014.\n[10] A. Hannun, C. Case, J. Casper, B. Catanzaro, G. Diamos, E. Elsen, R. Prenger, S. Satheesh, S. Sengupta, A. Coates et al., \u201cDeepspeech: Scaling up end-to-end speech recognition,\u201d arXiv preprint arXiv:1412.5567, 2014.\n[11] P. Zhou, L. Dai, and H. Jiang, \u201cSequence training of multiple deep neural networks for better performance and faster training speed,\u201d in Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, 2014, pp. 5627\u20135631.\n[12] A. L. Maas, A. Y. Hannun, C. T. Lengerich, P. Qi, D. Jurafsky, and A. Y. Ng, \u201cIncreasing deep neural network acoustic model size for large vocabulary continuous speech recognition,\u201d arXiv preprint arXiv:1406.7806, 2014.\n[13] H. Soltau, G. Saon, and T. N. Sainath, \u201cJoint training of convolutional and non-convolutional neural networks,\u201d to Proc. ICASSP, 2014.\n[14] G. Saon, H. Soltau, D. Nahamoo, and M. Picheny, \u201cSpeaker adaptation of neural network acoustic models using i-vectors,\u201d in Proc. ASRU, 2013.\n[15] B. Kingsbury, T. Sainath, and H. Soltau, \u201cScalable minimum Bayes risk training of deep neural network acoustic models using distributed Hessian-free optimization,\u201d in Proc. Interspeech, 2012.\n[16] I. J. Goodfellow, D. Warde-Farley, M. Mirza, A. Courville, and Y. Bengio, \u201cMaxout networks,\u201d arXiv preprint arXiv:1302.4389, 2013.\n[17] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov, \u201cDropout: A simple way to prevent neural networks from overfitting,\u201d The Journal of Machine Learning Research, vol. 15, no. 1, pp. 1929\u20131958, 2014.\n[18] X. Zhang, J. Trmal, D. Povey, and S. Khudanpur, \u201cImproving deep neural network acoustic models using generalized maxout networks,\u201d in Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, 2014, pp. 215\u2013219.\n[19] S. Rennie, V. Goel, and S. Thomas, \u201cAnnealed dropout training of deep networks,\u201d in Spoken Language Technology (SLT), IEEE Workshop on. IEEE, 2014.\n[20] T. Sainath, B. Kingsbury, V. Sindhwani, E. Arisoy, and B. Ramabhadran, \u201cLow-rank matrix factorization for deep neural network training with high-dimensional output targets,\u201d in Proc. of ICASSP, 2013.\n[21] T. N. Sainath, A.-r. Mohamed, B. Kingsbury, and B. Ramabhadran, \u201cDeep convolutional neural networks for LVCSR,\u201d in Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on. IEEE, 2013, pp. 8614\u20138618.\n[22] G. Saon, H. Soltau, A. Emami, and M. Picheny, \u201cUnfolded recurrent neural networks for speech recognition,\u201d in Fifteenth Annual Conference of the International Speech Communication Association, 2014.\n[23] S. F. Chen and J. Goodman, \u201cAn empirical study of smoothing techniques for language modeling,\u201d Computer Speech & Language, vol. 13, no. 4, pp. 359\u2013393, 1999.\n[24] A. Stolcke, \u201cEntropy-based pruning of backoff language models,\u201d in Proc. DARPA Broadcast News Transcription and Understanding Workshop, 1998, pp. 270\u2013274.\n[25] S. F. Chen, \u201cShrinking exponential language models,\u201d in Proc. NAACL-HLT, 2009, pp. 468\u2013476.\n[26] Y. Bengio, R. Ducharme, P. Vincent, and C. Jauvin, \u201cA neural probabilistic language model,\u201d Journal of Machine Learning Research, vol. 3, pp. 1137\u20131155, 2003.\n[27] A. Emami, \u201cA neural syntactic language model,\u201d Ph.D. dissertation, Johns Hopkins University, Baltimore, MD, USA, 2006.\n[28] H. Schwenk, \u201cContinuous space language models,\u201d Computer Speech & Language, vol. 21, no. 3, pp. 492\u2013518, 2007.\n[29] A. Emami and L. Mangu, \u201cEmpirical study of neural network language models for Arabic speech recognition,\u201d in Proc. ASRU, 2007, pp. 147\u2013152.\n[30] H.-K. J. Kuo, E. Ar\u0131soy, A. Emami, and P. Vozila, \u201cLarge scale hierarchical neural network language models,\u201d in Proc. Interspeech, 2012."}], "references": [{"title": "Feature engineering in context-dependent deep neural networks for conversational speech transcription", "author": ["F. Seide", "G. Li", "X. Chien", "D. Yu"], "venue": "Proc. ASRU, 2011.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Speech recognition by machines and humans", "author": ["R.P. Lippmann"], "venue": "Speech communication, vol. 22, no. 1, pp. 1\u201315, 1997.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1997}, {"title": "Performance of the IBM LVCSR  system on the Switchboard corpus", "author": ["F. Liu", "M. Monkowski", "M. Novak", "M. Padmanabhan", "M. Picheny", "P. Rao"], "venue": "Proceedings of Speech Research Symposium, 1995, p. 189.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1995}, {"title": "The CU-HTK march 2000 HUB5E transcription system", "author": ["T. Hain", "P. Woodland", "G. Evermann", "D. Povey"], "venue": "Proc. Speech Transcription Workshop, vol. 1. Baltimore, 2000.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2000}, {"title": "The IBM 2004 conversational telephony system for rich transcription.", "author": ["H. Soltau", "B. Kingsbury", "L. Mangu", "D. Povey", "G. Saon", "G. Zweig"], "venue": "in Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "The IBM Attila speech recognition toolkit", "author": ["H. Soltau", "G. Saon", "B. Kingsbury"], "venue": "Proc. of IEEE Workshop on Spoken Language Technology (SLT), 2010, pp. 97\u2013102.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "fMPE: Discriminatively trained features for speech recognition", "author": ["D. Povey", "B. Kingsbury", "L. Mangu", "G. Saon", "H. Soltau", "G. Zweig"], "venue": "Proc. of ICASSP, 2005, pp. 961\u2013964.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2005}, {"title": "Sequence-discriminative training of deep neural networks", "author": ["K. Vesely", "A. Ghoshal", "L. Burget", "D. Povey"], "venue": "Proc. Interspeech, 2013.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "1-bit stochastic gradient descent and its application to dataparallel distributed training of speech dnns", "author": ["F. Seide", "H. Fu", "J. Droppo", "G. Li", "D. Yu"], "venue": "Fifteenth Annual Conference of the International Speech Communication Association, 2014.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Deepspeech: Scaling up end-to-end speech recognition", "author": ["A. Hannun", "C. Case", "J. Casper", "B. Catanzaro", "G. Diamos", "E. Elsen", "R. Prenger", "S. Satheesh", "S. Sengupta", "A. Coates"], "venue": "arXiv preprint arXiv:1412.5567, 2014.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Sequence training of multiple deep neural networks for better performance and faster training speed", "author": ["P. Zhou", "L. Dai", "H. Jiang"], "venue": "Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, 2014, pp. 5627\u20135631.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Increasing deep neural network acoustic model size for large vocabulary continuous speech recognition", "author": ["A.L. Maas", "A.Y. Hannun", "C.T. Lengerich", "P. Qi", "D. Jurafsky", "A.Y. Ng"], "venue": "arXiv preprint arXiv:1406.7806, 2014.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "Joint training of convolutional and non-convolutional neural networks", "author": ["H. Soltau", "G. Saon", "T.N. Sainath"], "venue": "to Proc. ICASSP, 2014.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2014}, {"title": "Speaker adaptation of neural network acoustic models using i-vectors", "author": ["G. Saon", "H. Soltau", "D. Nahamoo", "M. Picheny"], "venue": "Proc. ASRU, 2013.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Scalable minimum Bayes risk training of deep neural network acoustic models using distributed Hessian-free optimization", "author": ["B. Kingsbury", "T. Sainath", "H. Soltau"], "venue": "Proc. Interspeech, 2012.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "Maxout networks", "author": ["I.J. Goodfellow", "D. Warde-Farley", "M. Mirza", "A. Courville", "Y. Bengio"], "venue": "arXiv preprint arXiv:1302.4389, 2013.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2013}, {"title": "Dropout: A simple way to prevent neural networks from overfitting", "author": ["N. Srivastava", "G. Hinton", "A. Krizhevsky", "I. Sutskever", "R. Salakhutdinov"], "venue": "The Journal of Machine Learning Research, vol. 15, no. 1, pp. 1929\u20131958, 2014.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1929}, {"title": "Improving deep neural network acoustic models using generalized maxout networks", "author": ["X. Zhang", "J. Trmal", "D. Povey", "S. Khudanpur"], "venue": "Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, 2014, pp. 215\u2013219.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Annealed dropout training of deep networks", "author": ["S. Rennie", "V. Goel", "S. Thomas"], "venue": "Spoken Language Technology (SLT), IEEE Workshop on. IEEE, 2014.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2014}, {"title": "Low-rank matrix factorization for deep neural network training with high-dimensional output targets", "author": ["T. Sainath", "B. Kingsbury", "V. Sindhwani", "E. Arisoy", "B. Ramabhadran"], "venue": "Proc. of ICASSP, 2013.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Deep convolutional neural networks for LVCSR", "author": ["T.N. Sainath", "A.-r. Mohamed", "B. Kingsbury", "B. Ramabhadran"], "venue": "Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on. IEEE, 2013, pp. 8614\u20138618.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "Unfolded recurrent neural networks for speech recognition", "author": ["G. Saon", "H. Soltau", "A. Emami", "M. Picheny"], "venue": "Fifteenth Annual Conference of the International Speech Communication Association, 2014.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2014}, {"title": "An empirical study of smoothing techniques for language modeling", "author": ["S.F. Chen", "J. Goodman"], "venue": "Computer Speech & Language, vol. 13, no. 4, pp. 359\u2013393, 1999.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}, {"title": "Entropy-based pruning of backoff language models", "author": ["A. Stolcke"], "venue": "Proc. DARPA Broadcast News Transcription and Understanding Workshop, 1998, pp. 270\u2013274.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1998}, {"title": "Shrinking exponential language models", "author": ["S.F. Chen"], "venue": "Proc. NAACL-HLT, 2009, pp. 468\u2013476.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2009}, {"title": "A neural probabilistic language model", "author": ["Y. Bengio", "R. Ducharme", "P. Vincent", "C. Jauvin"], "venue": "Journal of Machine Learning Research, vol. 3, pp. 1137\u20131155, 2003.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2003}, {"title": "A neural syntactic language model", "author": ["A. Emami"], "venue": "Ph.D. dissertation, Johns Hopkins University, Baltimore, MD, USA, 2006.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2006}, {"title": "Continuous space language models", "author": ["H. Schwenk"], "venue": "Computer Speech & Language, vol. 21, no. 3, pp. 492\u2013518, 2007.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2007}, {"title": "Empirical study of neural network language models for Arabic speech recognition", "author": ["A. Emami", "L. Mangu"], "venue": "Proc. ASRU, 2007, pp. 147\u2013152.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2007}, {"title": "Large scale hierarchical neural network language models", "author": ["H.-K.J. Kuo", "E. Ar\u0131soy", "A. Emami", "P. Vozila"], "venue": "Proc. Interspeech, 2012.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "Ever since [1] demonstrated the large accuracy gains from using deep neural network acoustic models versus Gaussian mixture models, the Switchboard corpus has become the de facto standard experimental testbed for reporting believable and, more importantly, reproducible results for LVCSR.", "startOffset": 11, "endOffset": 14}, {"referenceID": 1, "context": "To set the baseline, the human word error rate on this task is estimated to be around 4% [2].", "startOffset": 89, "endOffset": 92}, {"referenceID": 1, "context": "Quoting [2] again, in 1995, \u201ca high-performance HMM recognizer\u201d achieved a 43% WER on Switchboard [3].", "startOffset": 8, "endOffset": 11}, {"referenceID": 2, "context": "Quoting [2] again, in 1995, \u201ca high-performance HMM recognizer\u201d achieved a 43% WER on Switchboard [3].", "startOffset": 98, "endOffset": 101}, {"referenceID": 3, "context": "3% during the Hub5e DARPA evaluation [4] which they attributed to \u201ccareful engineering\u201d.", "startOffset": 37, "endOffset": 40}, {"referenceID": 4, "context": "2% WER during the 2004 DARPA EARS Rich Transcription evaluation [5] largely due to the Attila ASR toolkit [6] and fMPE [7].", "startOffset": 64, "endOffset": 67}, {"referenceID": 5, "context": "2% WER during the 2004 DARPA EARS Rich Transcription evaluation [5] largely due to the Attila ASR toolkit [6] and fMPE [7].", "startOffset": 106, "endOffset": 109}, {"referenceID": 6, "context": "2% WER during the 2004 DARPA EARS Rich Transcription evaluation [5] largely due to the Attila ASR toolkit [6] and fMPE [7].", "startOffset": 119, "endOffset": 122}, {"referenceID": 7, "context": "Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.", "startOffset": 137, "endOffset": 155}, {"referenceID": 8, "context": "Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.", "startOffset": 137, "endOffset": 155}, {"referenceID": 9, "context": "Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.", "startOffset": 137, "endOffset": 155}, {"referenceID": 10, "context": "Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.", "startOffset": 137, "endOffset": 155}, {"referenceID": 11, "context": "Nowadays, deep neural networks have levelled the playing field and multiple sites can easily reach 12-14% WER using much simpler systems [8, 9, 10, 11, 12] as shown in Table 6.", "startOffset": 137, "endOffset": 155}, {"referenceID": 5, "context": "Last but not least, it is our experience that having a strong GMM-HMM baseline system [6, 13] which provides high-quality alignments used for the various speaker adaptation techniques and for DNN crossentropy training helps.", "startOffset": 86, "endOffset": 93}, {"referenceID": 12, "context": "Last but not least, it is our experience that having a strong GMM-HMM baseline system [6, 13] which provides high-quality alignments used for the various speaker adaptation techniques and for DNN crossentropy training helps.", "startOffset": 86, "endOffset": 93}, {"referenceID": 13, "context": "In particular, we discuss frontend processing, speaker adaptation and neural network training specifics which are largely similar to [14, 13].", "startOffset": 133, "endOffset": 141}, {"referenceID": 12, "context": "In particular, we discuss frontend processing, speaker adaptation and neural network training specifics which are largely similar to [14, 13].", "startOffset": 133, "endOffset": 141}, {"referenceID": 12, "context": "The Mel filterbank has 40 filters and the input to the CNNs are blocks of 11 consecutive 40\u00d73-dimensional frames (as described in [13]).", "startOffset": 130, "endOffset": 134}, {"referenceID": 13, "context": "In addition to VTLN and FMLLR, DNNs are adapted to the speaker by appending 100-dimensional i-vectors to every block of 11 FMLLR frames as described in [14].", "startOffset": 152, "endOffset": 156}, {"referenceID": 0, "context": "Prior to CE training, the networks are initialized with layerwise discriminative pretraining as suggested in [1].", "startOffset": 109, "endOffset": 112}, {"referenceID": 14, "context": "Additionally, we applied 20-30 iterations of hessian-free sequence discriminative training (ST) by using the state-based minimum Bayes risk (MBR) objective function as described in [15].", "startOffset": 181, "endOffset": 185}, {"referenceID": 15, "context": "Maxout networks [16] generalize rectified linear (ReLU, max[0, a]) units, employing non-linearities of the form:", "startOffset": 16, "endOffset": 20}, {"referenceID": 16, "context": "Maxout networks are conditionally linear and so avoid the vanishing gradient problem, and are well suited for the dropout training procedure [17], which for a linear model, trains an exponentially sized model ensemble (2 models for input dimension D), whose geometric average can be computed by simply renormalizing at test time.", "startOffset": 141, "endOffset": 145}, {"referenceID": 17, "context": "Maxout networks for ASR have recently been investigated by several researchers, and found to produce significant gains when training data is limited [18], but negligible gains in our personal experience when the amount of training data exceeds approximately 100 hours.", "startOffset": 149, "endOffset": 153}, {"referenceID": 18, "context": "However, recently we showed that by annealing the dropout rate over the course of training, Maxout networks can produce substantial gains, even in big data scenarios [19].", "startOffset": 166, "endOffset": 170}, {"referenceID": 12, "context": "Table 1 compares the performance of our annealed dropout Maxout networks (Maxout-AD) to corresponding sigmoidbased DNNs and CNNs from [13] learned using our standard training procedure, using only the SWB-1 training data (262 hours).", "startOffset": 134, "endOffset": 138}, {"referenceID": 19, "context": "To keep the computation and the number of parameters in check, we also had to use a bottleneck layer before the output layer [20] with typically 512 neurons.", "startOffset": 125, "endOffset": 129}, {"referenceID": 4, "context": "Back in the days when we were training GMM-based acoustic models, we did not notice accuracy improvements when using more than, say, 10000 HMM states [5].", "startOffset": 150, "endOffset": 153}, {"referenceID": 4, "context": "This was a distinct feature of our EARS RT\u201904 evaluation system which made a significant difference [5].", "startOffset": 100, "endOffset": 103}, {"referenceID": 20, "context": "The convolution and pooling layer configuration is taken from [21] and the architecture is also shown on the left side of Figure 1.", "startOffset": 62, "endOffset": 66}, {"referenceID": 21, "context": "\u2022 Partially unfolded recurrent neural networks [22] which operate on a sliding window of 6 40-dimensional FMLLR frames (from t .", "startOffset": 47, "endOffset": 51}, {"referenceID": 14, "context": "All nets are trained with 10-15 passes of cross-entropy on 2000 hours of audio and 30 iterations of sequence discriminative training using Hessian-free optimization [15].", "startOffset": 165, "endOffset": 169}, {"referenceID": 12, "context": "In [13], we proposed a method for jointly modeling and training a CNN and a DNN.", "startOffset": 3, "endOffset": 7}, {"referenceID": 12, "context": "Hence, the main benefit of the joint model in [13] over the score fusion approach is the shared computation for the common hidden and output layers which is considerably faster than having to do two separate forward passes.", "startOffset": 46, "endOffset": 50}, {"referenceID": 14, "context": "For both scenarios we generate numerator and denominator lattices with the initial joint model and optimize the lattice-based MBR loss using distributed hessian-free training [15].", "startOffset": 175, "endOffset": 179}, {"referenceID": 22, "context": "To build the new n-gram language model, we trained a 4gram model with modified Kneser-Ney smoothing [23] for each corpus, and then linearly interpolated the component models with weights chosen to optimize perplexity on a held-out set.", "startOffset": 100, "endOffset": 104}, {"referenceID": 23, "context": "Then we applied entropy pruning [24], resulting in a single 4gram LM consisting of 37M n-grams.", "startOffset": 32, "endOffset": 36}, {"referenceID": 24, "context": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29].", "startOffset": 85, "endOffset": 89}, {"referenceID": 25, "context": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29].", "startOffset": 119, "endOffset": 135}, {"referenceID": 26, "context": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29].", "startOffset": 119, "endOffset": 135}, {"referenceID": 27, "context": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29].", "startOffset": 119, "endOffset": 135}, {"referenceID": 28, "context": "For LM rescoring, we used two types of LMs: model M, a class-based exponential model [25] and neural network LM (NNLM) [26, 27, 28, 29].", "startOffset": 119, "endOffset": 135}, {"referenceID": 26, "context": "Another was trained on a 560M word subset of the LM training data: in order to speed up training for this larger set, we employed a hierarchical NNLM approximation [27, 30].", "startOffset": 164, "endOffset": 172}, {"referenceID": 29, "context": "Another was trained on a 560M word subset of the LM training data: in order to speed up training for this larger set, we employed a hierarchical NNLM approximation [27, 30].", "startOffset": 164, "endOffset": 172}, {"referenceID": 7, "context": "[8] SWB 12.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] SWB+Fisher+other 13.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] SWB+Fisher 12.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] SWB 14.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] SWB 14.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] SWB+Fisher 15.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] SWB 10.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "1% CallHome WER is not reported in [13]).", "startOffset": 35, "endOffset": 39}, {"referenceID": 12, "context": "We have presented a set of improvements to our English Switchboard system that lowered the error rate substantially compared to our previous best result [13].", "startOffset": 153, "endOffset": 157}], "year": 2015, "abstractText": "We describe the latest improvements to the IBM English conversational telephone speech recognition system. Some of the techniques that were found beneficial are: maxout networks with annealed dropout rates; networks with a very large number of outputs trained on 2000 hours of data; joint modeling of partially unfolded recurrent neural networks and convolutional nets by combining the bottleneck and output layers and retraining the resulting model; and lastly, sophisticated language model rescoring with exponential and neural network LMs. These techniques result in an 8.0% word error rate on the Switchboard part of the Hub5-2000 evaluation test set which is 23% relative better than our previous best published result.", "creator": "LaTeX with hyperref package"}}}