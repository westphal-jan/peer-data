{"id": "1506.08349", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Jun-2015", "title": "Improved Deep Speaker Feature Learning for Text-Dependent Speaker Recognition", "abstract": "This approach has recently been applied to text-based speech recognition tasks and shows reasonable performance gains in combination with the traditional i-vector approach. Although promising, the existing d-vector implementation still cannot compete with the i-vector baseline. In this paper, two improvements to the deep learning approach are presented: a phonetic DNN structure to normalize telephone variation and a new scoring approach based on dynamic time warping (DTW). Experiments on a text-based speech recognition task have shown that the proposed methods can provide a significant performance improvement over the existing d-vector implementation.", "histories": [["v1", "Sun, 28 Jun 2015 03:32:02 GMT  (1438kb,D)", "http://arxiv.org/abs/1506.08349v1", "arXiv admin note: substantial text overlap witharXiv:1505.06427"]], "COMMENTS": "arXiv admin note: substantial text overlap witharXiv:1505.06427", "reviews": [], "SUBJECTS": "cs.CL cs.LG cs.NE", "authors": ["lantian li", "yiye lin", "zhiyong zhang", "dong wang"], "accepted": false, "id": "1506.08349"}, "pdf": {"name": "1506.08349.pdf", "metadata": {"source": "CRF", "title": "Improved Deep Speaker Feature Learning for Text-Dependent Speaker Recognition", "authors": ["Lantian Li", "Yiye Lin", "Zhiyong Zhang", "Dong Wang"], "emails": ["lilt@cslt.riit.tsinghua.edu.cn;", "lyy@cslt.riit.tsinghua.edu.cn;", "zhangzy@cslt.riit.tsinghua.edu.cn;", "wangdong99@mails.tsinghua.edu.cn"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nMost modern speaker recognition systems are based on human-crafted acoustic features, for example the Mel frequency cepstral coefficients (MFCC). A problem of the MFCC (and other primary features) is that it involves plethora information besides the speaker identity, such as phone content, channels, noises, etc. These heterogeneous and noisy information convolve together, making it difficult to be used for either speech recognition or speaker recognition. All modern speaker recognition systems rely on a statical model to \u2018purify\u2019 the desired speaker information. For example, in the famous Gaussian mixture model-universal background model (GMMUBM) framework [1], the acoustic space is divided into subspaces in the form of Gaussian components, and each subspace roughly represents a phone. By formulating the speaker recognition task as subtasks on the phone subspaces, the GMM-UBM model can largely eliminate the impact of phone content and other acoustic factors. This idea is shared by many advanced techniques derived from GMM-UBM, including the joint factor analysis (JFA) [2] and the i-vector model [3].\nIn spite of the great success, the GMM-UBM approach and the related methods are still limited by the lack of discriminative capability of the acoustic features. Some researchers proposed solutions based on discriminative models. For example, the SVM approach for GMM-UBMs [4] and the PLDA approach for i-vectors [5]. All these discriminative methods achieved remarkable success. Another direction is to look for more task-oriented features, i.e., features that are more discriminative for speaker recognition [6]. Although it seems to be straightforward, this \u2018feature engineering\u2019 turns out to be\nhighly difficult. A major reason, in our mind, is that most of the proposed delicate features are human-crafted and therefore tend to be fragile in practical usage.\nRecent research on deep learning offers a new idea of \u2018feature learning\u2019. It has been shown that with a deep neural network (DNN), task-oriented features can be learned layer by layer from very raw input. For example in automatic speech recognition (ASR), phone-discriminative features can be learned from spectra or filter bank energies (Fbanks). This learned features are very powerful and have defeated the MFCC that has dominated in ASR for several decades [7]. This capability of DNNs in learning task-oriented features can be utilized to learn speaker-discriminative features as well. A recent study shows that this is possible at least on text-dependent tasks [8]. The authors reported that reasonable performance can be achieved with the DNN-learned feature, and additional performance gains can be obtained by combining the DNNbased approach and the i-vector approach.\nAlthough the DNN-based feature learning shows great potential, the existing implementation still can not compete with the i-vector baseline. There are at least two drawbacks with the current implementation: First, the DNN model does not use any information about the phone content, which leads to difficulty when inferring speaker-discriminative features; second, the evaluation (speaker scoring) is based on speaker vectors (so called \u2018d-vectors\u2019), which are derived by averaging the frame-wise DNN features. This simple average ignores the temporal constraint that is highly important for text-dependent tasks. Note that for tasks with a fixed test phrase, the two drawbacks are closely linked to each other.\nThis paper follows the work in [8] and provides two enhancements for the DNN-based feature learning: First, phone posteriors are involved in the DNN input so that speakerdiscriminative features can be learned easier by alleviating the impact of phone variation; second, two scoring methods that consider the temporal constraint are proposed: segmentation pooling and dynamic time warping (DTW) [9].\nThe rest of the paper is organized as follows. Section II describes some related work, and Section III presents the DNN-based feature learning. The new methods are proposed in Section IV and the experiments are presented in Section V. Finally, Section VI concludes this paper and discusses some future work.\nar X\niv :1\n50 6.\n08 34\n9v 1\n[ cs\n.C L\n] 2\n8 Ju\nn 20\n15"}, {"heading": "II. RELATED WORK", "text": "This paper follows the work in [8] and provides several extensions. Particularly, the speaker identity in [8] is represented by a d-vector derived by average pooling, which is quite neat and efficient, but loses much information of the test signal, such as the distributional property and the temporal constraint. One of the main contribution of this paper is to investigate how to utilize the temporal constraint in the DNN-based approach.\nThe DNN model has been studied in speaker recognition in several ways. For example, in [10], DNNs trained for ASR were used to replace the UBM model to derive the acoustic statistics for i-vector models. In [11], a DNN was used to replace PLDA to improve discriminative capability of i-vectors. All these methods rely on the generative framework, i.e., the i-vector model. The DNN-based feature learning presented in this paper is purely discriminative, without any generative model involved."}, {"heading": "III. DNN-BASED FEATURE LEARNING", "text": "It is well-known that DNNs can learn task-oriented features from raw input layer by layer. This property has been employed in ASR where phone-discriminative features are learned from very low-level features such as Fbanks or even spectra [7]. It has been shown that with a well-trained DNN, variations irrelevant to the learning task can be gradually eliminated when the feature propagates through the DNN structure layer by layer. This feature learning is so powerful that in ASR, the primary Fbank feature has defeated the MFCC feature that was carefully designed by people and dominated in ASR for several decades.\nThis property can be also employed to learn speakerdiscriminative features. Actually researchers have put much effort in searching for features that are more discriminative for speakers [6], but the effort is mostly vain and the MFCC is still the most popular choice. The success of DNNs in ASR suggests a new direction, that speaker-discriminative features can be learned from data instead of being crafted by hand. The learning can be easily done and the process is rather similar as in ASR, with the only difference that in speaker recognition, the learning goal is to discriminate different speakers.\nFig. 1 presents the DNN structure used in this work for speaker-discriminative feature learning. Following the convention of ASR, the input layer involves a window of 20- dimensional Fbanks. The window size is set to 21, which was found to be optimal in our work. The DNN structure involves 4 hidden layers, and each consists of 200 units. The units of the output layer correspond to the speakers in the training data, and the number is 80 in our experiment. The 1-hot encoding scheme is used to label the target, and the training criterion is set to cross entropy. The learning rate is set to 0.008 at the beginning, and is halved whenever no improvement on a cross-validation (CV) set is found. The training process stops when the learning rate is too small and the improvement on the CV set is too marginal. Once the DNN has been trained successfully, the speaker-discriminative features can be read from the last hidden layer.\nIn the test phase, the features are extracted for all frames of the given utterance. To derive utterance-based representations, an average pooling approach was used in [8], where the framelevel features are averaged and the resultant vector is used to represent the speaker. This vector is called \u2018d-vector\u2019 in [8],\nand we adopt this name in this work. The same methods used for i-vectors can be used for d-vectors to conduct the test, for example by computing the cosine distance or the PLDA score."}, {"heading": "A. Comparison between i-vectors and d-vectors", "text": "The two kinds of speaker vectors, the d-vector and the ivector, are fundamentally different. I-vectors are based on a linear Gaussian model, for which the learning is unsupervised and the learning criterion is maximum likelihood on acoustic features; in contrast, d-vectors are based on neural networks, for which the learning is supervised, and the learning criterion is maximum discrimination for speakers. This difference leads to several advantages with d-vectors: First, it is a \u2018discriminative\u2019 vector, which represents speakers by removing speakerirrelevant variance, and so sensitive to speakers and invariant to other disturbance; second, it is a \u2018local\u2019 speaker description that uses only local context, so can be inferred from very short utterances; third, it relies on \u2018universal\u2019 data to learn the DNN model, which makes it possible to learn from large amounts of data that are task-independent.\nIV. IMPROVED DEEP FEATURE LEARNING There are several limitations in the implementation of the feature learning paradigm presented in the previous section. First, it does not involve any prior knowledge in model training, for example phone identities. Second, the simple average pooling does not consider the temporal information which is particularly important for text-dependent recognition tasks. Several approaches are proposed in this section to address these problems."}, {"heading": "A. Phone-dependent training", "text": "A potential problem of the DNN-based feature learning described in the previous section is that it is a \u2018blind learning\u2019, i.e., the features are learned from raw data without any prior knowledge. This means that the learning purely relies on the complex deep structure of the DNN model and a large amount of data to discover speaker-discriminative patterns. If the training data is abundant, this is often not a problem;\nhowever in tasks with a limited amount of data, for instance the text-dependent task in our hand, this blind learning tends to be difficult because there are too many speaker-irrelevant variations involved in the raw data, particularly phone contents.\nA possible solution is to supply the DNN model extra information about which phone is spoken at each frame. This can be simply achieved by adding a phone indicator in the DNN input. However, it is often not easy to get the phone alignment in practice. An alternative way is to supply a vector of phone posterior probabilities for each frame, which is a \u2018soft\u2019 phone alignment and can be easily obtained from a phone-discriminative model. In this work, we choose to use a DNN model that was trained for ASR to produce the phone posteriors. Fig. 1 illustrates how the phone posteriors are involved in the DNN structure. The training process does not change for the new structure."}, {"heading": "B. Segment pooling and dynamic time warping", "text": "Text-dependent speaker recognition is essentially a sequential pattern matching problem, but the current d-vector approach derives speaker identities as single vectors by average pooling, and then formulates speaker recognition as vector matching. This is certainly not ideal as the temporal constraint is totally ignored when deriving the speaker vector. A possible solution is to segment an enrollment/test utterance into several pieces, and derive the speaker vector for each piece. The speaker identity of the utterance is then represented by the sequence of the piece-wise speaker vectors, and speaker matching is conducted by matching the corresponding vector sequences. This paper adopts a simple sequence matching approach: the two sequences are assumed to be identical in length, and the matching is conducted piece by piece independently. Finally the matching score takes the average of scores on all the pieces.\nNote that for the i-vector approach, this segmentation method is not feasible, since i-vectors are inferred from feature distributions and so the piece-wised solution simply degrades the quality of the i-vector of each piece. For d-vectors, this approach is totally fine as they are inferred from local context\nand the segmentation does not impact quality of the piece-wise d-vectors very much.\nA more theoretical treatment is based on dynamic time warping (DTW) [1]. The DTW algorithm is a principle way to measure similarities between two variable-length temporal sequences. In the most simple sense, DTW searches for an optimal path that matches two sequences with the lowest cost, by employing the dynamic programming (DP) method to reduce the search complexity. In our task, the DNN-extracted features of an utterance are treated as a temporal sequence. In test, the sequence derived from the enrollment utterance and the sequence derived from the test utterance are matched by DTW, where the cosine distance is used to measure the similarity between two frame-level DNN features. Principally, segment pooling can be regarded as a special case of DTW, where the two sequences are in the same length, and the matching between the two sequences is piece-wise."}, {"heading": "V. EXPERIMENTS", "text": ""}, {"heading": "A. Database", "text": "The experiments are performed on a database that involves a limited set of short phrases. The entire database contains recordings of 10 short phrases from 100 speakers (gender balanced), and each phrase contains 2 \u223c 5 Chinese characters. For each speaker, every phrase is recorded 15 times, amounting to 150 utterances per speaker.\nThe training set involves 80 randomly selected speakers, which results in 12000 utterances in total. To prevent overfitting, a cross-validation (CV) set containing 1000 utterances is selected from the training data, and the remaining 11000 utterances are used for model training, including the DNN model in the d-vector approach, and the UBM, the T matrix, the LDA and PLDA model in the i-vector approach.\nThe evaluation set consists of the remaining 20 speakers. The evaluation is performed for each particular phrase. For each phrase, there are 44850 trails, including 2100 target trails and 42750 non-target trials. For the sake of neat presentation, we report the results with 5 short phrases and use \u2018Pn\u2019 to denote the n-th phrase. The conclusions obtained here generalize well to other phrases."}, {"heading": "B. Baseline", "text": "Two baseline systems are built, one is based on i-vectors and the other is based on d-vectors. The acoustic features of the i-vector system are 39-dimensional MFCCs, which consist of 13 static components (including C0) and the first- and secondorder derivatives. The number of Gaussian components of the UBM is 128, and the dimension of the i-vector is 200. The d-vector baseline uses the DNN structure shown in Fig. 1. The average pooling is used to derive d-vectors. The acoustic features are 40-dimensional Fbanks, with the left and right 10 frames concatenated together. The frame-level features are extracted from the last hidden layer, and the dimension is 200.\nTable I presents the results in terms of equal error rate (EER). It can be seen that the i-vector system generally outperforms the d-vector system in a significant way. Particularly, the discriminative methods (LDA and PLDA) clearly improves the i-vector system, however for the d-vector system, no improvement was found by these methods. This is not surprising, since the d-vectors have been discriminative by themselves. For this reason, LDA and PLDA are not considered any more for d-vectors in the following experiments."}, {"heading": "C. phone-dependent learning", "text": "In this experiment, the phone posteriors are included in the DNN input, as shown in Fig. 2. The phone posteriors are produced by a DNN model that was trained for ASR with a Chinese database consisting of 6000 hours of speech data. The phone set consists of 66 toneless initial and finals in Chinese, plus the silence phone. The results are shown in the second row of Table II, denoted by \u2018DNN+PT\u2019. It can be seen that the phone-dependent training leads to marginal but consistent performance improvement for the d-vector system."}, {"heading": "D. Segment pooling and DTW", "text": "As presented in Section IV, the segment pooling approach segments an input utterance into n pieces, and derives a dvector for each piece. The scoring is conducted on the piecewise d-vectors independently, and the average of scores on these pieces is taken as the utterance-level score. The results are shown in Fig. 3, where seg-n means that each utterance is segmented into n pieces. It can be seen that segment pooling offers clear performance improvement.\nFor a more clear comparison, the EER results with 3 segments are shown in Table II, denoted by \u2018DNN+PT+SEG\u2019. It is clear to see that by the segmentation, significant performance is obtained.\nThe DTW results are shown in the fourth row of Table II, denoted by \u2018DNN+PT+DTW\u2019. It can be observed that DTW generally outperforms segment pooling."}, {"heading": "E. System combination", "text": "Following [8], we combine the best i-vector system (PLDA) and the best d-vector system (DNN+PT+DTW). The combination is simply done by interpolating the scores obtained from the two systems: \u03b1siv + (1 \u2212 \u03b1)sdv , where siv and sdv are scores from the i-vector and d-vector systems respectively, and \u03b1 is the interpolation factor. The EER results with the optimal \u03b1 are shown in Table III. It can be seen that the combination leads to the best performance we can obtain so far."}, {"heading": "VI. CONCLUSIONS", "text": "This paper presented several enhancements for the DNNbased feature learning approach in speaker recognition. We presented a phone-dependent DNN model to supply phonetic information when learning speaker features, and proposed two scoring methods based on a segment pooling and DTW respectively to leverage temporal constraints. These extensions significantly improved performance of the d-vector system. Future work involves investigating more complicated statistical models for d-vectors, and use large amounts of data to learn more powerful speaker-discriminative features."}], "references": [{"title": "Speaker verification using adapted gaussian mixture models", "author": ["D. Reynolds", "T. Quatieri", "R. Dunn"], "venue": "Digital Signal Processing, vol. 10, no. 1, pp. 19\u201341, 2000.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2000}, {"title": "Joint factor analysis versus eigenchannels in speaker recognition", "author": ["P. Kenny", "G. Boulianne", "P. Ouellet", "P. Dumouchel"], "venue": "IEEE Transactions on Audio, Speech, and Language Processing, vol. 15, pp. 1435\u20131447, 2007.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Speaker and session variability in gmm-based speaker verification", "author": ["\u2014\u2014"], "venue": "IEEE Transactions on Audio, Speech, and Language Processing, vol. 15, pp. 1448\u20131460, 2007.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "Support vector machines using gmm supervectors for speaker verification", "author": ["W. Campbell", "D. Sturim", "D. Reynolds"], "venue": "Signal Processing Letters, IEEE, vol. 13, no. 5, pp. 308\u2013311, 2006.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "Probabilistic linear discriminant analysis", "author": ["S. Ioffe"], "venue": "Computer Vision ECCV 2006, Springer Berlin Heidelberg, pp. 531\u2013542, 2006.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2006}, {"title": "An overview of text-independent speaker recognition: From features to supervectors", "author": ["T. Kinnunen", "H. Li"], "venue": "Speech communication, vol. 52, no. 1, pp. 12\u201340, 2010.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Improving wideband speech recognition using mixed-bandwidth training data in cd-dnn-hmm", "author": ["J. Li", "D. Yu", "J. Huang", "Y. Gong"], "venue": "SLT, pp. 131\u2013136, 2012.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "Deep neural networks for small footprint text-dependent speaker verification", "author": ["V. Ehsan", "L. Xin", "M. Erik", "L.M. Ignacio", "G.-D. Javier"], "venue": "IEEE International Conference on Acoustic, Speech and Signal Processing (ICASSP), vol. 28, no. 4, pp. 357\u2013366, 2014.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "Using dynamic time warping to find patterns in time series", "author": ["D. Berndt", "J. Clifford"], "venue": "KDD workshop, vol. 10, no. 16, pp. 359\u2013370, 1994.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1994}, {"title": "Deep neural networks for extracting baum-welch statistics for speaker recognition", "author": ["P. Kenny", "V. Gupta", "T. Stafylakis", "P. Ouellet", "J. Alam"], "venue": "Odyssey, 2014.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Discriminative scoring for speaker recognition based on i-vectors", "author": ["J. Wang", "D. Wang", "Z.-W. Zhu", "T. Zheng", "F. Song"], "venue": "APSIPA, 2014.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "For example, in the famous Gaussian mixture model-universal background model (GMMUBM) framework [1], the acoustic space is divided into subspaces in the form of Gaussian components, and each subspace roughly represents a phone.", "startOffset": 96, "endOffset": 99}, {"referenceID": 1, "context": "This idea is shared by many advanced techniques derived from GMM-UBM, including the joint factor analysis (JFA) [2] and the i-vector model [3].", "startOffset": 112, "endOffset": 115}, {"referenceID": 2, "context": "This idea is shared by many advanced techniques derived from GMM-UBM, including the joint factor analysis (JFA) [2] and the i-vector model [3].", "startOffset": 139, "endOffset": 142}, {"referenceID": 3, "context": "For example, the SVM approach for GMM-UBMs [4] and the PLDA approach for i-vectors [5].", "startOffset": 43, "endOffset": 46}, {"referenceID": 4, "context": "For example, the SVM approach for GMM-UBMs [4] and the PLDA approach for i-vectors [5].", "startOffset": 83, "endOffset": 86}, {"referenceID": 5, "context": ", features that are more discriminative for speaker recognition [6].", "startOffset": 64, "endOffset": 67}, {"referenceID": 6, "context": "This learned features are very powerful and have defeated the MFCC that has dominated in ASR for several decades [7].", "startOffset": 113, "endOffset": 116}, {"referenceID": 7, "context": "A recent study shows that this is possible at least on text-dependent tasks [8].", "startOffset": 76, "endOffset": 79}, {"referenceID": 7, "context": "This paper follows the work in [8] and provides two enhancements for the DNN-based feature learning: First, phone posteriors are involved in the DNN input so that speakerdiscriminative features can be learned easier by alleviating the impact of phone variation; second, two scoring methods that consider the temporal constraint are proposed: segmentation pooling and dynamic time warping (DTW) [9].", "startOffset": 31, "endOffset": 34}, {"referenceID": 8, "context": "This paper follows the work in [8] and provides two enhancements for the DNN-based feature learning: First, phone posteriors are involved in the DNN input so that speakerdiscriminative features can be learned easier by alleviating the impact of phone variation; second, two scoring methods that consider the temporal constraint are proposed: segmentation pooling and dynamic time warping (DTW) [9].", "startOffset": 394, "endOffset": 397}, {"referenceID": 7, "context": "This paper follows the work in [8] and provides several extensions.", "startOffset": 31, "endOffset": 34}, {"referenceID": 7, "context": "Particularly, the speaker identity in [8] is represented by a d-vector derived by average pooling, which is quite neat and efficient, but loses much information of the test signal, such as the distributional property and the temporal constraint.", "startOffset": 38, "endOffset": 41}, {"referenceID": 9, "context": "For example, in [10], DNNs trained for ASR were used to replace the UBM model to derive the acoustic statistics for i-vector models.", "startOffset": 16, "endOffset": 20}, {"referenceID": 10, "context": "In [11], a DNN was used to replace PLDA to improve discriminative capability of i-vectors.", "startOffset": 3, "endOffset": 7}, {"referenceID": 6, "context": "This property has been employed in ASR where phone-discriminative features are learned from very low-level features such as Fbanks or even spectra [7].", "startOffset": 147, "endOffset": 150}, {"referenceID": 5, "context": "Actually researchers have put much effort in searching for features that are more discriminative for speakers [6], but the effort is mostly vain and the MFCC is still the most popular choice.", "startOffset": 110, "endOffset": 113}, {"referenceID": 7, "context": "To derive utterance-based representations, an average pooling approach was used in [8], where the framelevel features are averaged and the resultant vector is used to represent the speaker.", "startOffset": 83, "endOffset": 86}, {"referenceID": 7, "context": "This vector is called \u2018d-vector\u2019 in [8], Fbank", "startOffset": 36, "endOffset": 39}, {"referenceID": 0, "context": "A more theoretical treatment is based on dynamic time warping (DTW) [1].", "startOffset": 68, "endOffset": 71}, {"referenceID": 7, "context": "Following [8], we combine the best i-vector system (PLDA) and the best d-vector system (DNN+PT+DTW).", "startOffset": 10, "endOffset": 13}], "year": 2015, "abstractText": "A deep learning approach has been proposed recently to derive speaker identifies (d-vector) by a deep neural network (DNN). This approach has been applied to text-dependent speaker recognition tasks and shows reasonable performance gains when combined with the conventional i-vector approach. Although promising, the existing d-vector implementation still can not compete with the i-vector baseline. This paper presents two improvements for the deep learning approach: a phonedependent DNN structure to normalize phone variation, and a new scoring approach based on dynamic time warping (DTW). Experiments on a text-dependent speaker recognition task demonstrated that the proposed methods can provide considerable performance improvement over the existing d-vector implementation.", "creator": "LaTeX with hyperref package"}}}