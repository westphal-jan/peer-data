{"id": "1602.02617", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Feb-2016", "title": "Adaptive imputation of missing values for incomplete pattern classification", "abstract": "In the classification of incomplete patterns, the missing values can either play a decisive role in determining the class or have little (or no) influence on the classification results depending on the context. We propose for incomplete patterns a classification method with adaptive attribution of missing values based on faith function theory. First, we try to classify the object (incomplete pattern) based only on the available attribute values. As a basic principle, we assume that the lack of information is not decisive for the classification if a particular class can only be found for the object based on the available information. In this case, the object is assigned to this special class. However, if the object cannot be classified without ambiguity, this means that the missing values play a major role in achieving a precise classification. In this case, the missing values are assigned on the basis of the K-nearest neighboring class (K-NN) and the self-organizing map (SOM) techniques, and the pattern is then edited with the classification.", "histories": [["v1", "Mon, 8 Feb 2016 15:52:08 GMT  (439kb,D)", "http://arxiv.org/abs/1602.02617v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["zhun-ga liu", "quan pan", "jean dezert", "arnaud martin"], "accepted": false, "id": "1602.02617"}, "pdf": {"name": "1602.02617.pdf", "metadata": {"source": "CRF", "title": "Adaptive imputation of missing values for incomplete pattern classification", "authors": ["Zhun-ga Liu", "Quan Pan", "Jean Dezert", "Arnaud Martin"], "emails": ["liuzhunga@nwpu.edu.cn", "jean.dezert@onera.fr", "Arnaud.Martin@univ-rennes1.fr"], "sections": [{"heading": null, "text": "In classification of incomplete pattern, the missing values can either play a crucial role in the class determination, or have only little influence (or eventually none) on the classification results according to the context. We propose a credal classification method for incomplete pattern with adaptive imputation of missing values based on belief function theory. At first, we try to classify the object (incomplete pattern) based only on the available attribute values. As underlying principle, we assume that the missing information is not crucial for the classification if a specific class for the object can be found using only the available information. In this case, the object is committed to this particular class. However, if the object cannot be classified without ambiguity, it means that the missing values play a main role for achieving an accurate classification. In this case, the missing values will be imputed based on the K-nearest neighbor (K-NN) and self-organizing map (SOM) techniques, and the edited pattern with the imputation is then classified. The (original or edited) pattern is respectively classified according to each training class, and the classification results represented by basic belief assignments are fused with proper combination rules for making the credal classification. The object is allowed to belong with different masses of belief to the specific classes and meta-classes (which are particular disjunctions of several single classes). The credal classification captures well the uncertainty and imprecision of classification, and reduces effectively the rate of misclassifications thanks to the introduction of meta-classes. The effectiveness of the proposed method with respect to other classical methods is demonstrated based on several experiments using artificial and real data sets.\nKeywords: belief function, classification, missing values, SOM, K-NN.\nar X\niv :1\n60 2.\n02 61\n7v 1\n[ cs\n.A I]\n8 F\n2 I. INTRODUCTION\nIn many practical classification problems, the available information for making object classification is partial (incomplete) because some attribute values can be missing due to various reasons (e.g. the failure or dysfunctioning of the sensors providing information, or partial observation of object of interest because of some occultation phenomenon, etc). So it is crucial to develop efficient techniques to classify as best as possible the objects with missing attribute values (incomplete pattern), and the search for a solution of this problem remains an important research topic in the pattern classification field [1], [2]. Some more details about pattern classification can be found in [3], [4].\nThere have been many approaches developed for classifying the incomplete patterns [1], and they can be broadly grouped into four different types. The first (simplest) one is to remove directly the patterns with missing values, and the classifier is designed only for the complete patterns. This method is acceptable when the incomplete data set is only a very small subset (e.g. less than 5%) of the whole data set, but it cannot effectively classify the pattern with missing values. The second type is the modelbased techniques [5]. The probability density function (PDF) of the input data (complete and incomplete cases) is estimated at first by means of some procedures, and then the object is classified using bayesian reasoning. For instance, the expectation-maximization (EM) algorithm have been applied to many problems involving missing data for training Gaussian mixture models [5]. In the model-based methods, it must make assumptions about the joint distribution of all the variables in the model, but the suitable distributions sometimes are hard to obtain. The third type classifiers are designed to directly handle incomplete pattern without imputing the missing values, such as neural network ensemble methods [6], decision trees [7], fuzzy approaches [8] and support vector machine classifier [9]. The last type is the often used imputation (estimation) method. The missing values are filled with proper estimations [10] at first, and then the edited patterns are classified using the normal classifier (for the complete pattern). The missing values and pattern classification are treated separately in these methods. Many works have been devoted to the imputation of missing data, and the imputation can be done either by the statistical methods, e.g. mean imputation [11], regress imputation [2], etc, or by machine learning methods, e.g. K-nearest neighbors imputation (KNNI) [12], Fuzzy c-means (FCM) imputation (FCMI) [13], [14], Self-organizing map imputation (SOMI) [15], etc. In KNNI, the missing values are estimated using K-nearest neighbors of object in training data space. In FCMI, the missing values are imputed according to the clustering centers of FCM and taking into account the distances of the object to these centers [13], [14]. In SOMI [15], the best match node (unit) of incomplete pattern can be found ignoring the missing values, and the imputation of the missing values\n3 is computed based on the weights of the activation group of nodes including the best match node and its close neighbors. These existing methods usually attempt to classify the object into a particular class with maximal probability or likelihood measure. However, the estimation of missing values is in general quite uncertain, and the different imputations of missing values can yield very different classification results, which prevent us to correctly commit the object into a particular class.\nBelief function theory (BFT), also called Dempster-Shafer theory (DST) [16] and its extension [17], [18] offer a mathematical framework for modeling uncertainty and imprecise information [19]. BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc. Some classifiers for the complete pattern based on DST have been developed by Den\u0153ux and his collaborators to come up with the evidential K-nearest neighbors (EK-NN) [21], evidential neural network (ENN) [27], etc. The extra ignorance element represented by the disjunction of all the elements in the whole frame of discernment is introduced in these classifiers to capture the totally ignorant information. However, the partial imprecision, which is very important in the classification, is not well characterized. We have proposed credal classifiers [23], [24] for complete pattern considering all the possible meta-classes (i.e. the particular disjunctions of several singleton classes) to model the partial imprecise information. The credal classification allows the objects to belong (with different masses of belief) not only to the singleton classes, but also to any set of classes corresponding to the metaclasses. In [23], a belief-based K-nearest neighbor classifier (BK-NN) has been presented, and the credal classification of object is done according to the distances between the object and its K nearest neighbors as well as two given (acceptance and rejection) distance thresholds. The K-NN classifier generally takes big computation burden, and this is not convenient for real application. Thus, a simple credal classification rule (CCR) [24] has been further developed, and the belief value of object associated with different classes (i.e. singleton classes and selected meta-classes) is directly calculated by the distance to the center of corresponding class and the distinguishability degree (w.r.t. object) of the singleton classes involved in the meta-class. The location of center of meta-class in CCR is considered with the same (similar) distance to all the involved singleton classes\u2019 centers. Moreover, when the training data is not available, we have also proposed several credal clustering methods [30]\u2013[32] in different cases. Nevertheless, these previous credal classification methods are mainly for dealing with complete pattern without taking into account the missing values.\nIn our recent work, a prototype-based credal classification (PCC) [25] method for the incomplete patterns has been introduced to capture the imprecise information caused by the missing values. The object hard to\n4 correctly classify are committed to a suitable meta-class by PCC, which well characterizes the imprecision of classification due to absence of part attributes and also reduces the misclassification errors. In PCC, the missing values in all the incomplete patterns are imputed using prototype of each class center, and the edited pattern with each imputation is respectively classified by a standard classifier (for complete pattern). With PCC, one obtains c pieces of classification results for each incomplete pattern in a c class problem, and the global fusion of the c results is given for the credal classification. Unfortunately, PCC classifier is computationally greedy and time-consuming, and the imputation of missing values based on class prototype is not so precise. In order to overcome the limitations of PCC, we propose a new credal classification method for incomplete pattern with adaptive imputation of missing values, and it can be called Credal Classification with Adaptive Imputation (CCAI) for short.\nThe pattern to classify usually consists of multiple attributes. Sometimes, the class of the pattern can be precisely determined using only a part (a subset) of the available attributes, and it implies that the other attributes are redundant and in fact unnecessary for the classification. So a new method of credal classification with adaptive imputation strategy (i.e. CCAI) for missing values is proposed. In CCAI, we attempt to classify the object only using the known attributes value at first. If a specific classification result is obtained, it very likely means that the missing values are not very necessary for the classification, and we directly take the decision on the class of the object based on this result. However, if the object cannot be clearly classified with the available information, it indicates that the missing information included in the missing attribute values is probably very crucial for making the classification. In this case, we present a sophisticated classification strategy for the edition of pattern based on the proper imputation of missing values.\nK-nearest neighbors-based imputation method usually provides pretty good performances for the estimation of missing values, but the its main drawback is the big computational burden. To reduce the computational burden, Self-Organizing Map (SOM) [38] is applied in each class, and the optimized weighting vectors are used to represent the corresponding class. Then, the K nearest weighting vectors of the object in each class are respectively employed to estimate the missing values. For the classification of original incomplete pattern (without imputation of missing values) or the edited pattern (with imputation of missing values), we adopt the ensemble classifier approach. One can respectively get the simple classification result according to each training class, and each classification result is represented by a simple basic belief assignment (BBA) including two focal elements (i.e. singleton class and ignorant class) only. The belief of the object belonging to each class is calculated based on the distance to the\n5 corresponding prototype, and the other belief is committed to the ignorant element. The fusion (ensemble) of these multiple BBA\u2019s is then used to determine the class of the object. If the object is directly classified using only the known values, Dempster-Shafer1 (DS) fusion rule [16] is applied because of the simplicity of this rule and also because the BBA\u2019s to fuse are usually in low conflict. In this case, a specific result is obtained with DS rule. Otherwise, a new fusion rule inspired by Dubois and Prade (DP) rule [39] is used to classify the edited pattern with proper imputation of its missing values. Because the estimation of the missing values can be quite uncertain, it naturally induces an imprecise classification. So the partial conflicting beliefs will be kept and committed to the associated meta-classes in this new rule to reasonably reveal the potential imprecision of the classification result.\nIn this paper, we present an credal classification method with adaptive imputation of missing values based on belief function theory for dealing with the incomplete patterns, and it is organized as follows. The basics of belief function theory and Self-Organizing Map is briefly recalled in section II. The new credal classification method for incomplete patterns is presented in the section III, and the proposed method is then tested and evaluated in section IV compared with several other classical methods. The paper is concluded in the final."}, {"heading": "II. BACKGROUND KNOWLEDGE", "text": "Belief function theory (BFT) can well characterize the uncertain and imprecise information, and it is used in this work for the classification of patterns. SOM technique is employed to find the optimized weighting vectors which are used to represent the corresponding class, and this can reduce the computation burden in the estimation of the missing values based on K-NN method. So the basic knowledge on BFT and SOM will be briefly recalled."}, {"heading": "A. Basis of belief function theory", "text": "The Belief Function Theory (BFT) introduced by Glenn Shafer is also known as Dempster-Shafer Theory (DST), or the Mathematical Theory of Evidence [16]\u2013[18]. Let us consider a frame of discernment consisting of c exclusive and exhaustive hypotheses (classes) denoted by \u2126 = {\u03c9i, i = 1, 2, . . . , c}. The power-set of \u2126 denoted 2\u2126 is the set of all the subsets of \u2126, empty set included. For example, if \u2126 = {\u03c91, \u03c92, \u03c93}, then 2\u2126 = {\u2205, \u03c91, \u03c92, \u03c93, \u03c91\u222a\u03c92, \u03c91\u222a\u03c93, \u03c92\u222a\u03c93,\u2126}. In the classification problem, the singleton element (e.g. \u03c9i) represents a specific class. In this work, the disjunction (union) of several\n1Although the rule has been proposed originally by Arthur Dempster, we prefer to call it Dempster-Shafer rule because it has been widely promoted by Shafer in [16].\n6 singleton elements is called a meta-class which characterizes the partial ignorance of classification. Examples of meta-classes are \u03c9i\u222a\u03c9j , or \u03c9i\u222a\u03c9j \u222a\u03c9k. In BFT, one object can be associated with different singleton elements as well as with sets of elements according to a basic belief assignment (BBA), which\nis a function m(.) from 2\u2126 to [0, 1] satisfying m(\u2205) = 0 and the normalization condition \u2211 A\u22082\u2126 m(A) = 1. The subsets A of \u2126 such that m(A) > 0 are called the focal elements of the belief mass m(.).\nThe credal classification (or partitioning) [29] is defined as n-tuple M = (m1, \u00b7 \u00b7 \u00b7 ,mn) of BBA\u2019s, where mi is the basic belief assignment of the object xi \u2208 X , i = 1, . . . , n associated with the different elements in the power-set 2\u0398. The credal classification allows the objects to belong to the specific classes and the sets of classes corresponding to meta-classes with different belief mass assignments. The credal classification can well model the imprecise and uncertain information thanks to the introduction of metaclass.\nFor combining multiple sources of evidence represented by a set of BBA\u2019s, the well-known Dempster\u2019s rule [16] is still widely used, even if its justification is an open debate and questionable in the community [40], [41]. The combination of two BBA\u2019s m1(.) and m2(.) over 2\u2126 is done with DS rule of combination defined by mDS(\u2205) = 0 and for A 6= \u2205, B, C \u2208 2\u2126 by\nmDS(A) =\n\u2211 B\u2229C=A m1(B)m2(C)\n1\u2212 \u2211\nB\u2229C=\u2205 m1(B)m2(C)\n(1)\nDS rule is commutative and associative, and makes a compromise between the specificity and complexity for the combination of BBA\u2019s. With this rule, all the conflicting beliefs \u2211\nB\u2229C=\u2205 m1(B)m2(C) are propor-\ntionally redistributed back to the focal elements through a classical normalization step. However, this redistribution can yield unreasonable results in the high conflicting cases [40], as well as in some special low conflicting cases as well [41]. That is why different rules of combination have emerged to overcome its limitations. Among the possible alternatives of DS rule, we find Smets\u2019 conjunctive rule (used in his transferable belief model (TBM) [18]), Dubois-Prade (DP) rule [39], and more recently the more complex Proportional Conflict Redistributions (PCR) rules [42]. Unfortunately, DP and PCR rules are less appealing from implementation standpoint since they are not associative, and they become complex to use when more than two BBA\u2019s have to be combined altogether.\n7"}, {"heading": "B. Overview of Self-Organizing Map", "text": "Self-Organizing Map (SOM) (also called Kohonen map) [38] introduced by Teuvo Kohonen is a type of artificial neural network (ANN), and it is trained by unsupervised learning method. SOM defines a mapping from the input space to a low-dimensional (typically two-dimensional) grid of M \u00d7N nodes. So it allows to approximate the feature space dimension (e.g. a real input vector x \u2208 Rp) into a projected 2D space, and it is still able to preserve the topological properties of the input space using a neighborhood function. Thus, SOM is very useful for visualizing low-dimensional views of high-dimensional data by a non linear projection.\nThe node at position (i, j), i = 1, . . .M, j = 1, . . . , N corresponds to a weighting vector denoted by \u03c3(i, j) \u2208 Rp. An input vector x \u2208 Rp is to be compared to each \u03c3(i, j), and the neuron whose weighting vector is the most close (similar) to x according to a given metric is called the best matching unit (BMU), which is defined as the output of SOM with respect to x. In real applications, the Euclidean distance is usually used to compare x and \u03c3(i, j). The input pattern x can be mapped onto the SOM at location (i, j) where \u03c3(i, j) is with the minimal distance to x. It is considered that the SOM achieves a non-uniform quantization that transforms x to \u03c3x by minimizing the given metric (e.g. distance measure) [43].\nIn SOM, the competitive learning is adopted, and the training algorithm is iterative. The initial values of the weighting vectors \u03c3 may be set randomly, but they will converge to a stable value at the end of the training process. When an input vector is fed to the network, its Euclidean distance to all weight vectors is computed. Then the BMU whose weight vector is most similar to the input vector is found, and the weights of the BMU and neurons close to it in the SOM grid are adjusted towards the input vector. The magnitude of the change decreases with time and with distance (within the grid) from the BMU. The detailed information about SOM can be found in [38].\nIn this work, SOM is applied in each training class to obtain the optimized weighting vectors that are used to represent the corresponding class. The number of the weighting vectors is much smaller than the original samples in the associated training class. We will utilize these weighting vectors rather than the original samples to estimate the missing values in the object (incomplete pattern), and this could effectively reduce the computation burden."}, {"heading": "III. CREDAL CLASSIFICATION OF INCOMPLETE PATTERN", "text": "Our new method consists of two main steps. In the first step, the object (incomplete pattern) is directly classified according to the known attribute values only, and the missing values are ignored. If one can get a\n8 specific classification result, the classification procedure is done because the available attribute information is sufficient for making the classification. But if the class of the object cannot be clearly identified in the first step, it means that the unavailable information included in the missing values is likely crucial for the classification. In this case, one has to enter in the second step of the method to classify the object with a proper imputation of missing values. In the classification procedure, the original or edited pattern will be respectively classified according to each class of training data. The global fusion of these classification results, which can be considered as multiple sources of evidence represented by BBA\u2019s, is then used for the credal classification of the object. Our new method for credal classification of incomplete pattern with adaptive imputation of missing values is referred as Credal Classification with Adaptive Imputation, or just as CCAI for conciseness. CCAI is based on belief function theory, which can well manage the uncertain and imprecise information caused by the missing values in the classification."}, {"heading": "A. First step: Direct classification of incomplete pattern using the available data", "text": "Let us consider a set of test patterns (samples) X = {x1, . . . ,xn} to be classified based on a set of labeled training patterns Y = {y1, . . . ,ys} over the frame of discernment \u2126 = {\u03c91, . . . , \u03c9c}. In this work, we focus on the classification of incomplete pattern in which some attribute values are absent. So we consider all the test patterns (e.g. xi, i = 1, . . . , n) with several missing values. The training data set Y may also have incomplete patterns in some applications. However, if the incomplete patterns take a very small amount say less than 5% in the training data set, they can be ignored in the classification. If the percentage of incomplete patterns is big, the missing values must usually be estimated at first, and the classifier will be trained using the edited (complete) patterns. In the real applications, one can also just choose the complete labeled patterns to include in the training data set when the training information is sufficient. So for simplicity and convenience, we consider that the labeled samples (e.g. yj, j = 1, . . . , s) of the training set Y are all complete patterns in the sequel.\nIn the first step of classification, the incomplete pattern say xi will be respectively classified according to each training class by a normal classifier (for dealing with the complete pattern) at first, and all the missing values are ignored here. In this work, we adopt a very simple classification method2 for the convenience of computation, and xi is directly classified based on the distance to the prototype of each class.\nThe prototype of each class {o1, . . . ,oc} corresponding to {\u03c91, . . . , \u03c9c} is given by the arithmetic 2Many other normal classifiers (e.g. K-NN) can be selected here depending on the preference of user, and we propose to use this simple\nclassification method because of its low computation complexity.\n9 average vector of the training patterns in the same class. Mathematically, the prototype is computed for g = 1, . . . , c by\nog = 1\nNg \u2211 yj\u2208\u03c9g yj (2)\nwhere Ng is the number of the training samples in the class \u03c9g.\nIn a c-class problem, one can get c pieces of simple classification result for xi according to each class of training data, and each result is represented by a simple BBA\u2019s including two focal elements, i.e. the singleton class and the ignorant class (\u2126) to characterize the full ignorance. The belief of xi belonging to class \u03c9g is computed based on the distance between xi and the corresponding prototype og. Normalized Euclidean distance as eq. (4) is adopted here to deal with the anisotropic class, and the missing values are ignored in the calculation of this distance. The other mass of belief is assigned to the ignorant class \u2126. Therefore, the BBA\u2019s construction is done by m og i (\u03c9g) = e \u2212\u03b7dig\nm og i (\u2126) = 1\u2212 e\u2212\u03b7dig\n(3)\nwith\ndig = \u221a\u221a\u221a\u221a1 p p\u2211 j=1 ( xij \u2212 ogj \u03b4gj )2 (4)\nand\n\u03b4gj =\n\u221a 1\nNg \u2211 yi\u2208\u03c9g (yij \u2212 ogj)2 (5)\nwhere xij is value of xi in j-th dimension, and yij is value of yi in j-th dimension. p is the number of available attribute values in the object xi. The coefficient 1/p is necessary to normalize the distance value because each test sample can have a different number of missing values. \u03b4gj is the average distance of all training samples in class \u03c9g to the prototype og in j-th dimension. Ng is the number of training samples in \u03c9g. \u03b7 is a tuning parameter, and the bigger \u03b7 generally yields smaller mass of belief on the specific class wg. It is usually recommended to take \u03b7 \u2208 [0.5, 0.8] according to our various tests, and \u03b7 = 0.7 can be considered as default value.\nObviously, the smaller distance measure, the bigger mass of belief on the singleton class. This particular structure of BBA\u2019s indicates that we can just confirm the degree of the object xi associated with the specific class \u03c9g only according to training data in \u03c9g. The other mass of belief reflects the level of belief one has on full ignorance, and it is committed to the ignorant class \u2126. Similarly, one calculates c independent\n10\nBBA\u2019s mogi (\u03c9g), g = 1, . . . , c based on the different training classes.\nBefore combining these c BBA\u2019s, we examine whether a specific classification result can be derived from these c BBA\u2019s. This is done as follows: if it holds that mo1sti (\u03c91st) = argmaxg(m og i (\u03c9g)), then the object will be considered to belong very likely to the class \u03c91st, which obtains the biggest mass of belief in the c BBA\u2019s. The class with the second biggest mass of belief is denoted \u03c92nd.\nThe distinguishability degree \u03c7i \u2208 (0, 1] of an object xi associated with different classes is defined by:\n\u03c7i = mo2ndi (\u03c92nd)\nmomaxi (\u03c9max) (6)\nLet be a chosen small positive distinguishability threshold value in (0, 1]. If the condition \u03c7i \u2264 is satisfied, it means that all the classes involved in the computation of \u03c7i can be clearly distinguished of xi. In this case, it is very likely to obtain a specific classification result from the fusion of the c BBA\u2019s. The condition \u03c7i \u2264 also indicates that the available attribute information is sufficient for making the classification of the object, and the imputation of the missing values is not necessary. If \u03c7i \u2264 condition holds, the c BBA\u2019s are directly combined with DS rule to obtain the final classification results of the object because DS rule usually produces specific combination result with acceptable computation burden in the low conflicting case. In such case, the meta-class is not included in the fusion result, because these different classes are considered distinguishable based on the condition of distinguishability. Moreover, the mass of belief of the full ignorance class \u2126, which represents the noisy data (outliers), can be proportionally redistributed to other singleton classes for more specific results if one knows a priori that the noisy data is not involved.\nIf the distinguishability condition \u03c7i \u2264 is not satisfied, it means that the classes \u03c91st and \u03c92nd cannot be clearly distinguished for the object with respect to the chosen threshold value , indicating that missing attribute values play almost surely a crucial role in the classification. In this case, the missing values must be properly imputed to recover the unavailable attribute information before entering the classification procedure. This is the Step 2 of our method which is explained in the next subsection."}, {"heading": "B. Second step: Classification of incomplete pattern with imputation of missing values", "text": "1) Multiple estimation of missing values: In the estimation of the missing attribute values, there exist various methods. Particularly, the K-NN imputation method generally provides good performance. However, the main drawback of KNN method is its big computational burden, since one needs to calculate the distances of the object with all the training samples. Inspired by [43], we propose to use the Self\n11\nOrganized Map (SOM) technique [38] to reduce the computational complexity. SOM can be applied in each class of training data, and then M \u00d7 N weighting vectors will be obtained after the optimization procedure. These optimized weighting vectors allow to characterize well the topological features of the whole class, and they will be used to represent the corresponding data class. The number of the weighting vectors is usually small (e.g. 5\u00d7 6). So the K nearest neighbors of the test pattern associated with these weighting vectors in the SOM can be easily found with low computational complexity3. The selected weighting vector no. k in the class \u03c9g, g = 1, . . . , c is denoted \u03c3 \u03c9g k , for k = 1, . . . , K.\nIn each class, the K selected close weighting vectors provide different contributions (weight) in the estimation of missing values, and the weight p\u03c9gik of each vector is defined based on the distance between the object xi and weighting vector \u03c3 \u03c9g k .\np \u03c9g ik = e\n(\u2212\u03bbd\u03c9gik ) (7)\nwith\n\u03bb = cNM(cNM \u2212 1) 2 \u2211 i,j d(\u03c3i, \u03c3j) (8)\nwhere d\u03c9gik is the Euclidean distance between xi and the neighbor o \u03c9g k ignoring the missing values, and 1 \u03bb is the average distance between each pair of weighting vectors produced by SOM in all the classes; c is the number of classes; M \u00d7N is the number of weighting vectors obtained by SOM in each class; and d(\u03c3i, \u03c3j) is the Euclidean distance between any two weighting vectors \u03c3i and \u03c3j .\nThe weighted mean value y\u0302\u03c9gi of the selected K weighting vectors in class training class \u03c9g will be\nused for the imputation of missing values. It is calculated by\ny\u0302 \u03c9g i =\nK\u2211 k=1 p \u03c9g ik \u03c3 \u03c9g k\nK\u2211 k=1 p \u03c9g ik\n(9)\nThe missing values in xi will be filled by the values of y\u0302 \u03c9g i in the same dimensions. By doing this, we\nget the edited pattern x\u03c9gi according to the training class \u03c9g.\nThen x\u03c9gi will be simply classified only based on the training data in \u03c9g as similarly done in the direct\nclassification of incomplete pattern using eq. (3) of Step 1 for convenience4.\n3 The training of SOM using the labeled patterns becomes time consuming when the number of labeled patterns is big, but fortunately it can be done off-line. In our experiments, the running time performance shown in the results doesn\u2019t include the computational time spent for the off-line procedures.\n4Of course, some other sophisticated classifiers can also be applied here according to the selection of user, but the choice of classifier is not the main purpose of this work.\n12\nThe classification of xi with the estimation of missing values is also respectively done based on the other training classes according to this procedure. For a c-class problem, there are c training classes, and therefore one can get c pieces of classification results with respect to one object.\n2) Ensemble classifier for credal classification: These c pieces of results obtained by each class of training data in a c-class problem are considered with different weights, since the estimations of the missing values according to different classes have different reliabilities. The weighting factor of the classification result associated with the class wg can be defined by the sum of the weights of the K selected SOM weighting vectors for the contributions to the missing values imputation in \u03c9g, which is given by\n\u03c1 \u03c9g i = K\u2211 k=1 p \u03c9g ik (10)\nThe result with the biggest weighting factor \u03c1\u03c9maxi is considered as the most reliable, because one assumes that the object must belong to one of the labeled classes (i.e. wg, g = 1, . . . , c). So the biggest weighting factor will be normalized as one. The other relative weighting factors are defined by:\n\u03b1\u0302 \u03c9g i =\n\u03c1 \u03c9g i\n\u03c1\u03c9maxi (11)\nIf the condition5 \u03b1\u0302\u03c9gi < is satisfied, the corresponding estimation of the missing values and the classification result are not very reliable. Very likely, the object does not belong to this class. It is implicitly assumed that the object can belong to only one class in reality. If this result whose relative weighting factor is very small (w.r.t. ) is still considered useful, it will be (more or less) harmful for the final classification of the object. So if the condition \u03b1\u0302wgi < holds, then the relative weighting factor is set to zero. More precisely, we will take\n\u03b1 \u03c9g i =  0, if \u03b1\u0302\u03c9gi < \u03c1 \u03c9g i\n\u03c1\u03c9maxi , otherwise.\n(12)\nAfter the estimation of weighting (discounting) factors \u03b1\u03c9gi , the c classification results (the BBA\u2019s\nm og i (.)) are classically discounted [16] by m\u0302 og i (\u03c9g) = \u03b1 \u03c9g i m og i (\u03c9g)\nm\u0302 og i (\u2126) = 1\u2212 \u03b1 \u03c9g i + \u03b1 \u03c9g i m og i (\u2126)\n(13)\nThese discounted BBA\u2019s will be globally combined to get the credal classification result. If \u03b1\u03c9gi = 0, 5 The threshold is the same as in section III-A, because it is also used to measure the distinguishability degree here.\n13\none gets m\u0302ogi (\u2126) = 1, and this fully ignorant (vacuous) BBA plays a neutral role in the global fusion process for the final classification of the object.\nAlthough we have done our best to estimate the missing values, the estimation can be quite imprecise when the estimations are obtained from different class with the similar weighting factors, and the different estimations probably lead to distinct classification results. In such case, we prefer to cautiously keep (rather to ignore) the uncertainty, and maintain the uncertainty in the classification result. Such uncertainty can be well reflected by the conflict of these classification results represented by the BBA\u2019s. DS rule is not suitable here, because all the conflicting beliefs are distributed to other focal elements. A particular combination rule inspired by DP rule is introduced here to fuse these BBA\u2019s according to the current context. In our new rule, the partial conflicting beliefs are prudently transferred to the proper meta-class to reveal the imprecision degree of the classification caused by the missing values. This new rule of combination is defined by:  mi(\u03c9g) = m\u0302 og i (\u03c9g) \u220f j 6=g m\u0302 oj i (\u2126) mi(A) = \u220f\u22c3\nj \u03c9j=A\nm\u0302 oj i (\u03c9j) \u220f k 6=j m\u0302oki (\u2126) (14)\nThe test pattern can be classified according to the fusion results, and the object is considered belonging to the class (singleton class or meta-class) with the maximum mass of belief. This is called hard credal classification. If one object is classified to a particular class, it means that this object has been correctly classified with the proper imputation of missing values. If one object is committed to a meta-class (e.g. A \u222a B), it means that we just know that this object belongs to one of the specific classes (e.g. A or B) included in the meta-class, but we cannot specify which one. This case can happen when the missing values are essential for the accurate classification of this object, but the missing values cannot be estimated very well according to the context, and different estimations will induce the classification of the object into distinct classes (e.g. A or B).\nFor convenience, Fig. 1 shows the functional flowchart of this new CCAI method.\nGuideline for tuning of the parameters and \u03b7: The tuning of parameters \u03b7 and is very important in the application of CCAI. \u03b7 in eq. (3) is associated with the calculation of mass of belief on the specific class, and the bigger \u03b7 value will lead to smaller mass of belief committed to the specific class. Based on our various tests, we advise to take \u03b7 \u2208 [0.5, 0.8], and the value \u03b7 = 0.7 can be taken as the default value. The parameter is the threshold to tune for changing the classification strategy. It is also used\n14\nin Eq. (12) for the calculation of the discounting factor. The bigger will make fewer objects going to the sophisticated classification procedure with the imputation of missing values, and it also forces more discounting factors to zero according to Eq. (12), which implies that fewer simple classification results obtained based on each class can be useful in the global fusion step. So the bigger will makes fewer objects committed to the meta-classes (corresponding to the low imprecision of classification), but it increases the risk of misclassification error. should be tuned according to the compromise one can accept between the misclassification error and imprecision (non specificity of classification decision). One can\n15\nalso apply the cross validation [44] (e.g. leave-one-out method) in the training data space to find a suitable threshold, and the missing values in the test samples are randomly distributed in all the dimensions."}, {"heading": "IV. EXPERIMENTS", "text": "Three experiments with artificial and real data sets have been used to test the performance of this new CCAI method compared with the K-NN imputation (KNNI) method [12], FCM imputation (FCMI) method [13], [14], SOM imputation (SOMI) [15] method and our previous credal classification PCC method [25]. SOM technique is also employed in the second step of CCAI method, but CCAI is different from the previous SOMI method. In SOMI method, SOM is applied for the whole training data set, and the missing values are precisely estimated based on an activation group composed of the best match node (unit) of input pattern and its close neighbors. Then, the edited pattern with the imputation of missing values can be classified using a standard classifier. Nevertheless, SOM is not involved in the first step of CCAI, and the object is directly classified ignoring the missing values. In the second step of CCAI, SOM is respectively applied in each training class, and multiple estimations of missing values can be obtained based on the input pattern\u2019s K nearest weighting vectors corresponding to nodes of SOM in each class. Then different classification results will be produced according to different estimations, and these results are globally fused for final classification. The conflicting information committed to the meta-class is kept in the fusion to characterize the imprecision of classification in CCAI, but this cannot be done in SOMI. These different methods have been programmed and tested with MatlabTM software.\nThe evidential neural network classifier (ENN) [27] is adopted in the sequel experiments to classify the edited pattern with the estimated values in PCC, KNNI and FCMI, since ENN produce generally good results in the classification6. The evidential K-nearest neighbor (EK-NN) method [21] is also used to classify the edited pattern in Experiment 3 with real data for comparison. The parameters of ENN and EK-NN can be automatically optimized as explained in [27] and [22]. In SOMI, we use the M\u00d7N = 6\u00d78 nodes for mapping the whole input data set consisting of all the training classes to the 2-dimensional grid, and it has good performance. In the applications of PCC, the tuning parameter can be tuned according to the imprecision rate one can accept. In CCAI, a small number of the nodes in the 2-dimensional grid of SOM is given by M \u00d7N = 3\u00d7 4 for each class, and we take the value of K = N = 4 in K-NN for the imputation of missing values. This seems to provide good result in the sequel experiments. In order to show the ability of CCAI and PCC to deal with the meta-classes, the hard credal classification is applied, and the class of each object is decided according to the criterion of the maximal mass of belief. 6Other traditional classifiers for complete pattern can also be selected here according to the actual application.\n16\nIn our simulations, the misclassification is declared (counted) for one object truly originated from \u03c9i if it is classified into A with \u03c9i \u2229 A = \u2205. If \u03c9i \u2229 A 6= \u2205 and A 6= \u03c9i then it will be considered as an imprecise classification. The error rate denoted by Re is calculated by Re = Ne/T , where Ne is number of misclassification errors, and T is the number of objects under test. The imprecision rate denoted by Rij is calculated by Rij = Nij/T , where Nij is number of objects committed to the meta-classes with the cardinality value j. In our experiments, the classification of object is generally uncertain (imprecise) among a very small number (e.g. 2) of classes, and we only take Ri2 here since there is no object committed to the meta-class including three or more specific classes."}, {"heading": "A. Experiment 1 (artificial data set)", "text": "In the first experiment, we show the interest of credal classification based on belief functions with respect to the traditional classification working with probability framework. A 3-class data set \u2126 = {\u03c91, \u03c92, \u03c93} obtained from three 2-D uniform distributions shown by Fig. 2 is considered here. Each class has 200 training samples and 200 test samples, and there are 600 training samples and 600 test samples in total. The uniform distributions of the three classes are characterized by the following interval bounds:\nx-label interval y-label interval\n\u03c91 (5, 65) (5, 25) \u03c92 (95, 155) (5, 25) \u03c93 (50, 110) (50, 70)\nThe values in the second dimension corresponding to y-coordinate of test samples are all missing. So test samples are classified according to the only one available value in the first dimension corresponding to x-coordinate.\nSeveral different methods like FCMI, KNNI, SOMI have been applied here for comparison with CCAI as shown by Fig. 3-(a)\u20133-(f). Particularly, the classification result obtained using the (first or second) single step of CCAI (denoted by SCCAI) are also given as in Fig. 3-(d)\u20133-(e). In the first step of CCAI, the direct classification is done without imputation of missing value, whereas the object is classified with imputation of missing values in all incomplete patterns by the only second step of CCAI.\nA particular value of K = 9 is selected in the classifier K-NN imputation method7. For notation conciseness, we have denoted \u03c9te , \u03c9test, \u03c9tr , \u03c9training and \u03c9i,...,k , \u03c9i \u222a . . . \u222a \u03c9k. The error rate (in %), imprecision rate (in %) and computation time (Sec.) are specified in the caption of each subfigure.\n7In fact, the choice of K ranking from 7 to 15 does not affect seriously the results.\n17\nBecause the y value in the test sample is missing, the class w3 appears partially overlapped with the classes \u03c91 and \u03c92 on their margins according to the value of x-coordinate as shown in Fig. 3-(a). The missing value of the samples in the overlapped parts can be filled by quite different estimations obtained from different classes with the almost same reliabilities. For example, the estimation of the missing values of the objects in the right margin of \u03c91 and the left margin of \u03c93 can be obtained according to the training class \u03c91 or \u03c93. The edited pattern with the estimation from \u03c91 will be classified into class \u03c91, whereas it will be committed to class \u03c93 if the estimation is drawn from \u03c93. It is similar to the test samples in the left margin of \u03c92 and the right margin of \u03c93. This indicates that the missing value play a crucial rule in the classification of these objects, but unfortunately the estimation of these involved missing values are\n18\nquite uncertain according to context. So these objects are prudently classified into the proper meta-class (e.g. \u03c91 \u222a \u03c93 and \u03c92 \u222a \u03c93) by CCAI. The CCAI results indicate that these objects belong to one of the specific classes included in the meta-classes, but these specific classes cannot be clearly distinguished by\n19\nthe object based only on the available values. If one wants to get more precise and accurate classification results, one needs to request for additional resources for gathering more useful information. The other objects in the left margin of \u03c91, right margin of \u03c92 and middle of \u03c93 can be correctly classified based on the only known value in x-coordinate, and it is not necessary to estimate the missing value for the classification of these objects in CCAI. However, all the test samples are classified into specific classes by the traditional methods KNNI and FCMI, and this causes many errors due to the limitation of probability framework. If we just apply the first step of SCCAI without imputation of the missing value and directly classify all the objects using the only known value (i.e. value in x-coordinate), it produces bigger error rate than the other methods, and this indicates that the imputation procedure is important to improve the accuracy of classification. If only the second step of SCCAI is done with imputation of the missing values in all incomplete patterns, it causes high imprecision rate that is not an efficient solution, and it takes much longer computation time than CCAI. CCAI with the adaptive imputation strategy can well balance the error rate, imprecision rate and computation burden. CCAI consisting of two steps generally produces smaller error rate than KNNI, FCMI and SOMI thanks to the use of meta-classes. Meanwhile, the computational time of CCAI is similar to that of FCMI, and is much shorter than KNNI because of the introduction of SOM technique in the estimation of missing values. It shows that the computational complexity of CCAI is relatively low. This simple example shows the interest and the potential of the credal classification obtained with CCAI method."}, {"heading": "B. Experiment 2 (artificial data set)", "text": "In this second experiment, we evaluate the performance of CCAI method using a 4D data set which includes 3 classes \u03c91, \u03c92, and \u03c93. The artificial data are generated from three 4D Gaussian distributions characterized by the following means vectors and covariance matrices (I denotes the 4\u00d74 identity matrix):\n\u00b51 = (10, 50, 100, 100) T ,\u03a31 = 10 \u00b7 I \u00b52 = (30, 40, 50, 90) T ,\u03a32 = 15 \u00b7 I \u00b53 = (20, 80, 90, 130) T ,\u03a33 = 12 \u00b7 I\nWe have used g training samples, and g test samples (for g = 500, and g = 1000) in each class. So there are total N = 3\u00d7 g training samples and N = 3\u00d7 g test samples. Each test sample has n missing values (for n = 1, 2, 3), and the missing component value is randomly distributed in every dimension. Three other methods KNNI, FCMI, SOMI and PCC are also applied here for the performances comparison. For\n20\neach pair (N, n), the reported error rates, imprecision rates and running time (sec.) are the averages over 10 trials performed with 10 independent random generation of the data sets. For KNNI, the values of K ranging from 5 to 20 neighbors have been tested, and the mean error rate with K \u2208 [5, 20] is given in Table I. In PCC method, the parameter has been optimized to obtain an acceptable compromise between error rate and the imprecision degree. ENN is adopted to classify the edited pattern with imputation of missing values in FCMI, KNNI, SOMI and PCC.\nThe classification results of the applied methods (i.e. FCMI, KNNI, SOMI, PCC and CCAI) have been shown in Table I. Our proposed CCAI method produces the lowest error rate, since some objects hard to correctly classify because of the missing values have been committed to the proper meta-class. Meanwhile, CCAI takes the shortest computation time compared with the other methods. This is because that some incomplete patterns are directly classified ignoring the missing values, which are considered unimportant for the classification. However, the missing values in each pattern are all imputed by other methods, and this needs more computations and thus increases the computational time. Moreover, one can see that KNNI takes the longest time, and this is the main drawback of K-NN based method. The K-NN strategy is also adopted in CCAI, but we use a few optimized weighting vectors acquired by SOM technique to represent the whole training data class. Thus, we just need to calculate the distances between the object and these obtained weighting vectors rather than all the training samples, which reduces a lot the computation burden."}, {"heading": "C. Experiment 3 (real data set)", "text": "Nine well known real data sets8 available from UCI Machine Learning Repository [45] are used in this experiment to evaluate the performance of CCAI with respect to KNNI, FCMI, SOMI and PCC. Both ENN and EK-NN are employed here as standard classifier to classify the edited patterns. Moreover, the\n8We select seven classes from Yeast data set, because the last three classes (i.e. VAC POX and ERL) contain quite few samples.\n21\nsingle (1st and 2nd) step procedure of CCAI (SCCAI) has been also applied here for comparison. In the first step of SCCAI, the object is directly classified using the only available attributes without imputation procedure, whereas all the missing values are imputed before the classification in the second step of SCCAI. The basic information of these used real data sets is given in Table II. In Hepatitis data set, many patterns have already contained missing values. The patterns with missing values are considered as test samples, and the others are used as training samples. There is no missing values in the other seven original data sets, and it is assumed that n values are missing completely at random in all dimensions of each test sample. The cross validation is performed for these seven data sets, and we use the simplest 2-fold cross validation9 here, since it has the advantage that the training and test sets are both large, and each sample is used for both training and testing on each fold. The 2-fold cross validation has been repeated 10 times, and the average error rate Re and imprecision rate Ri (for PCC and CCAI) of the different methods are given in Table III. Particularly, the reported classification result of KNNI is the average with K value ranging from 5 to 15. For the notation conciseness, the selected classifier (SC) is denoted by A=EK-NN, B=ENN in Table III. For the method of single step of CCAI (SCCAI), A represents the first step of SCCAI, and B represents the second step of SCCAI.\nOne can see in Table III that the credal classification of PCC and CCAI always produce the lower error rate than the traditional FCMI, KNNI and SOMI methods, since some objects that cannot be correctly classified using only the available attribute values have been properly committed to the meta-classes, which can well reveal the imprecision of classification. The selected classifiers (i.e. EK-NN and ENN) for classification of edited patterns in FCMI, KNNI, SOMI and PCC are usually with the similar performance\n9More precisely, the samples in each class are randomly assigned to two sets S1 and S2 having equal size. Then we train on S1 and test on S2, and reciprocally.\n22\nin many cases10, but it is known that the K-NN based method generally has big computation burden. The choice of EK-NN and ENN should be made according to the actual condition in real applications. In CCAI, some objects with the imputation of missing values are still classified into the meta-class. It indicates that these missing values play a crucial role in the classification, but the estimation of these missing values is no very good. In other words, the missing values can be filled with the similar reliabilities by different estimated data, which lead to distinct classification results. So we have to cautiously assign them to the meta-class to reduce the risk of misclassification. Compared with our previous method PCC, this new method CCAI generally provide better performance with lower error rate and imprecision rate, and it is mainly because more accurate estimation method (i.e. SOM+KNN) for missing values is adopted in CCAI. However, if only the first step of SCCAI is applied, it produces more misclassification errors that other methods due to the absence of imputation of missing data. Whereas, the imprecision rate will be quite high if only the second step of SCCAI is adopted because all the conflicting beliefs caused in the combination procedure are transferred to the meta-classes. So CCAI with adaptive imputation of missing values can provide a good compromise between the error and imprecision. This third experiment using real data sets shows the effectiveness and interest of this new CCAI method with respect to other methods."}, {"heading": "V. CONCLUSION", "text": "A new credal classification method with adaptive imputation of missing values (called CCAI) for dealing with incomplete pattern has been presented based on belief function theory. In the first step of CCAI method, some objects (incomplete pattern) are directly classified ignoring the missing values if the specific classification result can be obtained, which effectively reduces the computation complexity because it avoids the imputation of the missing values. However, if the available information is not sufficient to achieve a specific classification of the object in the first step, we estimate (recover) the missing values before entering the classification procedure in a second step. The SOM and K-NN techniques are applied to make the estimation of missing attributes with a good compromise between the estimation accuracy and computation burden. The credal classification in this work allows the object to belong to different singleton classes and meta-class (i.e. disjunction of several classes) with different masses of belief. Once the object is committed to a meta-class (e.g. A\u222aB), it means that the missing values cannot be accurately recovered according to the context, and the estimation is not very good. Different estimations will lead the object to distinct classes (e.g. A or B) involved in the meta-class. So some other sources of information will be required to achieve more precise classification of the object if necessary. The credal classification is 10EK-NN outperforms ENN sometimes, but ENN can be better in some other cases.\n23\nable to well capture the imprecision of classification thanks to the meta-class and it effectively reduces the misclassification errors. The effectiveness and interest of the proposed CCAI method have been evaluated on three distinct experiments using artificial and real data sets."}], "references": [{"title": "Pattern classification with missing data: a review", "author": ["P. Garcia-Laencina", "J. Sancho-Gomez", "A. Figueiras-Vidal"], "venue": "Neural Comput Appl. Vol. 19, pp. 263\u2013282", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2010}, {"title": "Statistical Analysis with Missing Data", "author": ["R.J. Little", "D.B. Rubin"], "venue": "John Wiley & Sons, New York, 1987 ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Pattern Classification", "author": ["R.O. Duda", "P.E. Hart", "D.G. Stork"], "venue": "2 edition, Wiley-Interscience", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2000}, {"title": "Pattern recognition and machine learning", "author": ["C.M. Bishop"], "venue": "Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2007}, {"title": "Supervised learning from incomplete data via an EM approach", "author": ["Z. Ghahramani", "M.I. Jordan"], "venue": "In: Cowan JD et al. (Eds) Adv. Neural Inf. Process., Morgan Kaufmann Publishers Inc., Vol. 6, pp. 120\u2013127", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1994}, {"title": "Dealing with missing values in neural network-based diagnostic systems", "author": ["P.K. Sharpe", "R.J. Solly"], "venue": "Neural Comput Appl Vol. 3(2):73\u201377", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1995}, {"title": "Induction of decision trees", "author": ["J.R. Quinlan"], "venue": "Machine Learning,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1986}, {"title": "Fuzzy C-means clustering of incomplete data", "author": ["R.J. Hathaway", "J.C. Bezdek"], "venue": "IEEE Trans. Syst Man Cybern:B Cybern, Vol.31(5): 735\u2013744", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2001}, {"title": "Handling missing values in support vector machine classifiers", "author": ["K. Pelckmans", "J.D. Brabanter", "J.A.K. Suykens", "B.D. Moor"], "venue": "Neural Networks, Vol. 18, No. 5\u20136, pp. 684\u2013692", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "Impact of imputation of missing values on classification error for discrete data", "author": ["A. Farhangfar", "L. Kurgan", "J. Dy"], "venue": "Pattern Recognition Vol. 41, pp. 3692\u20133705", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2008}, {"title": "Imputing missing values: The effect on the accuracy of classification", "author": ["D.J. Mundfrom", "A. Whitcomb"], "venue": "Multiple Linear Regression Viewpoints. Vol. 25, No.1, pp. 13\u201319", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1998}, {"title": "A Study of K-Nearest Neighbour as an Imputation Method", "author": ["G. Batista", "M.C. Monard"], "venue": "Proc. of Second International Conference on Hybrid Intelligent Systems (IOS Press, v. 87), pp. 251\u2013260", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2002}, {"title": "Towards missing data imputation: a study of fuzzy k-means clustering method, In: 4th international conference of rough sets and current trends in computing (RSCTC04), pp 573\u2013579", "author": ["D. Li", "J.Deogun", "W. Spaulding", "B. Shuart"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "Self-organizing map for data imputation and correction in surveys", "author": ["F. Fessant", "S. Midenet"], "venue": "Neural Comput. Appl., Vol. 10, No. 4, pp. 300\u2013310", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "A mathematical theory of evidence", "author": ["G. Shafer"], "venue": "Princeton Univ. Press", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1976}, {"title": "The combination of evidence in the transferable belief model", "author": ["P. Smets"], "venue": "IEEE Trans. on Pattern Anal. and Mach. Intell.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1990}, {"title": "Support vector regression of membership functions and belief functions - Application for pattern recognition", "author": ["H. Laanaya", "A. Martin", "D. Aboutajdine", "A. Khenchaf"], "venue": "Information Fusion, Vol. 11, No. 4, pp. 338\u2013350", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2010}, {"title": "A k-nearest neighbor classification rule based on Dempster-Shafer Theory", "author": ["T. Den\u0153ux"], "venue": "IEEE Trans. Systems, Man and Cybernetics, Vol. 25, No. 5, pp. 804\u2013813", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1995}, {"title": "An evidence-theoretic k-NN rule with parameter optimization", "author": ["L.M. Zouhal", "T. Den\u0153ux"], "venue": "IEEE Trans. Systems, Man and Cybernetics - Part C, Vol. 28, No. 2, pp. 263\u2013271", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1998}, {"title": "A new belief-based K-nearest neighbor classification method", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert"], "venue": "Pattern Recognition,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2013}, {"title": "Credal classification rule for uncertain data based on belief functions", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert", "G. Mercier"], "venue": "Pattern Recognition,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "Classification using belief functions: relationship between case-based and model-based approaches", "author": ["T. Den\u0153ux", "P. Smets"], "venue": "IEEE Trans. on Systems, Man and Cybernetics, Part B: Vol. 36, No. 6, pp. 1395\u20131406", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2006}, {"title": "A neural network classifier based on Dempster-Shafer theory", "author": ["T. Den\u0153ux"], "venue": "IEEE Trans. on Systems, Man and Cybernetics A, Vol. 30, No. 2, pp. 131\u2013150", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2000}, {"title": "Felix T", "author": ["X. Deng", "Y. Hu"], "venue": "S. Chan, S. Mahadevan, Y. Deng, Parameter estimation based on interval-valued belief structures, European Journal of Operational Research, Vol.241, No.2, pp.579\u2013582", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2015}, {"title": "ECM: An evidential version of the fuzzy c-means algorithm", "author": ["M.-H. Masson", "T. Den\u0153ux"], "venue": "Pattern Recognition, Vol. 41, No. 4, pp. 1384\u20131397", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2008}, {"title": "Belief C-Means: An extension of fuzzy c-means algorithm in belief functions framework", "author": ["Z.-g. Liu", "J. Dezert", "G. Mercier", "Q. Pan"], "venue": "Pattern Recognition Letters,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2012}, {"title": "Credal c-means clustering method based on belief functions", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert", "G. Mercier"], "venue": "Knowledge-based systems,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2015}, {"title": "Q", "author": ["K. Zhou", "A. Martin"], "venue": "Pan, Z.-g. Liu, Median evidential c-means algorithm and its application to community detection, Knowledgebased systems,Vol. 74: 69\u201388", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2015}, {"title": "Maximum likelihood estimation from uncertain data in the belief function framework", "author": ["T. Den\u0153ux"], "venue": "IEEE Transactions on Knowledge and Data Engineering, Vol. 25, No. 1, pp.119\u2013130", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2013}, {"title": "Combination of sources of evidence with different discounting factors based on a new dissimilarity measure", "author": ["Z.-g. Liu", "J. Dezert", "Q. Pan", "G. Mercier"], "venue": "Decision Support Systems,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2011}, {"title": "A new decision-making method by incomplete preferences based on evidence distance", "author": ["S. Huang", "X. Su", "Y. Hu", "S. Mahadevan", "Y. Deng"], "venue": "Knowledge-Based Systems,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2014}, {"title": "X", "author": ["X. Li", "J. Dezert", "F. Smarandache"], "venue": "Huang,Evidence supporting measure of similarity for reducing the complexity in information fusion, Information Science, Vol.181, No.10, pp. 1818\u20131835", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2011}, {"title": "Sequential weighted combination for unreliable evidence based on evidence", "author": ["D.q. Han", "Y. Deng", "C.z Han"], "venue": "variance, Decision Support Systems,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2013}, {"title": "The Self-Organizing Map", "author": ["T. Kohonen"], "venue": "Proceedings of the IEEE, Vol.78, No.9, pp. 1464\u20131480", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1990}, {"title": "Representation and combination of uncertainty with belief functions and possibility measures", "author": ["D. Dubois", "H. Prade"], "venue": "Computational Intelligence, Vol. 4, No. 4, pp. 244\u2013264", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1988}, {"title": "On the validity of Dempster\u2019s rule of combination", "author": ["L.A. Zadeh"], "venue": "Memo M79/24, Univ. of California, Berkeley, USA", "citeRegEx": "40", "shortCiteRegEx": null, "year": 1979}, {"title": "On the validity of Dempster\u2019s fusion rule and its interpretation as a generalization of Bayesian fusion", "author": ["J. Dezert", "A. Tchamova"], "venue": "rule, International Journal of Intelligent Systems,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2014}, {"title": "Information Fusion Based on New Proportional Conflict Redistribution Rules", "author": ["F. Smarandache", "J. Dezert"], "venue": "Proceedings of Fusion 2005, Int. Conf. on Information Fusion, Philadelphia, PA, USA, July 25-29", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2005}, {"title": "On the estimation of mass functions using Self Organizing Maps", "author": ["I. Hammami", "J. Dezert", "G. Mercier", "A. Hamouda"], "venue": "Proc. of Belief 2014 Conf. Oxford, UK, Sept. 26\u201329", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2014}, {"title": "Predictive inference: an introduction", "author": ["S. Geisser"], "venue": "New York, NY: Chapman and Hall", "citeRegEx": "44", "shortCiteRegEx": null, "year": 1993}], "referenceMentions": [{"referenceID": 0, "context": "So it is crucial to develop efficient techniques to classify as best as possible the objects with missing attribute values (incomplete pattern), and the search for a solution of this problem remains an important research topic in the pattern classification field [1], [2].", "startOffset": 263, "endOffset": 266}, {"referenceID": 1, "context": "So it is crucial to develop efficient techniques to classify as best as possible the objects with missing attribute values (incomplete pattern), and the search for a solution of this problem remains an important research topic in the pattern classification field [1], [2].", "startOffset": 268, "endOffset": 271}, {"referenceID": 2, "context": "Some more details about pattern classification can be found in [3], [4].", "startOffset": 63, "endOffset": 66}, {"referenceID": 3, "context": "Some more details about pattern classification can be found in [3], [4].", "startOffset": 68, "endOffset": 71}, {"referenceID": 0, "context": "There have been many approaches developed for classifying the incomplete patterns [1], and they can be broadly grouped into four different types.", "startOffset": 82, "endOffset": 85}, {"referenceID": 4, "context": "The second type is the modelbased techniques [5].", "startOffset": 45, "endOffset": 48}, {"referenceID": 4, "context": "For instance, the expectation-maximization (EM) algorithm have been applied to many problems involving missing data for training Gaussian mixture models [5].", "startOffset": 153, "endOffset": 156}, {"referenceID": 5, "context": "The third type classifiers are designed to directly handle incomplete pattern without imputing the missing values, such as neural network ensemble methods [6], decision trees [7], fuzzy approaches [8] and support vector machine classifier [9].", "startOffset": 155, "endOffset": 158}, {"referenceID": 6, "context": "The third type classifiers are designed to directly handle incomplete pattern without imputing the missing values, such as neural network ensemble methods [6], decision trees [7], fuzzy approaches [8] and support vector machine classifier [9].", "startOffset": 175, "endOffset": 178}, {"referenceID": 7, "context": "The third type classifiers are designed to directly handle incomplete pattern without imputing the missing values, such as neural network ensemble methods [6], decision trees [7], fuzzy approaches [8] and support vector machine classifier [9].", "startOffset": 197, "endOffset": 200}, {"referenceID": 8, "context": "The third type classifiers are designed to directly handle incomplete pattern without imputing the missing values, such as neural network ensemble methods [6], decision trees [7], fuzzy approaches [8] and support vector machine classifier [9].", "startOffset": 239, "endOffset": 242}, {"referenceID": 9, "context": "The missing values are filled with proper estimations [10] at first, and then the edited patterns are classified using the normal classifier (for the complete pattern).", "startOffset": 54, "endOffset": 58}, {"referenceID": 10, "context": "mean imputation [11], regress imputation [2], etc, or by machine learning methods, e.", "startOffset": 16, "endOffset": 20}, {"referenceID": 1, "context": "mean imputation [11], regress imputation [2], etc, or by machine learning methods, e.", "startOffset": 41, "endOffset": 44}, {"referenceID": 11, "context": "K-nearest neighbors imputation (KNNI) [12], Fuzzy c-means (FCM) imputation (FCMI) [13], [14], Self-organizing map imputation (SOMI) [15], etc.", "startOffset": 38, "endOffset": 42}, {"referenceID": 12, "context": "K-nearest neighbors imputation (KNNI) [12], Fuzzy c-means (FCM) imputation (FCMI) [13], [14], Self-organizing map imputation (SOMI) [15], etc.", "startOffset": 88, "endOffset": 92}, {"referenceID": 13, "context": "K-nearest neighbors imputation (KNNI) [12], Fuzzy c-means (FCM) imputation (FCMI) [13], [14], Self-organizing map imputation (SOMI) [15], etc.", "startOffset": 132, "endOffset": 136}, {"referenceID": 12, "context": "In FCMI, the missing values are imputed according to the clustering centers of FCM and taking into account the distances of the object to these centers [13], [14].", "startOffset": 158, "endOffset": 162}, {"referenceID": 13, "context": "In SOMI [15], the best match node (unit) of incomplete pattern can be found ignoring the missing values, and the imputation of the missing values", "startOffset": 8, "endOffset": 12}, {"referenceID": 14, "context": "Belief function theory (BFT), also called Dempster-Shafer theory (DST) [16] and its extension [17], [18] offer a mathematical framework for modeling uncertainty and imprecise information [19].", "startOffset": 71, "endOffset": 75}, {"referenceID": 15, "context": "Belief function theory (BFT), also called Dempster-Shafer theory (DST) [16] and its extension [17], [18] offer a mathematical framework for modeling uncertainty and imprecise information [19].", "startOffset": 100, "endOffset": 104}, {"referenceID": 16, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 68, "endOffset": 72}, {"referenceID": 23, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 73, "endOffset": 77}, {"referenceID": 24, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 90, "endOffset": 94}, {"referenceID": 28, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 95, "endOffset": 99}, {"referenceID": 29, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 136, "endOffset": 140}, {"referenceID": 32, "context": "BFT has already been applied successfully for object classification [20]\u2013[28], clustering [29]\u2013[33] and multi-source information fusion [34]\u2013[37], etc.", "startOffset": 141, "endOffset": 145}, {"referenceID": 17, "context": "Some classifiers for the complete pattern based on DST have been developed by Den\u0153ux and his collaborators to come up with the evidential K-nearest neighbors (EK-NN) [21], evidential neural network (ENN) [27], etc.", "startOffset": 166, "endOffset": 170}, {"referenceID": 22, "context": "Some classifiers for the complete pattern based on DST have been developed by Den\u0153ux and his collaborators to come up with the evidential K-nearest neighbors (EK-NN) [21], evidential neural network (ENN) [27], etc.", "startOffset": 204, "endOffset": 208}, {"referenceID": 19, "context": "We have proposed credal classifiers [23], [24] for complete pattern considering all the possible meta-classes (i.", "startOffset": 36, "endOffset": 40}, {"referenceID": 20, "context": "We have proposed credal classifiers [23], [24] for complete pattern considering all the possible meta-classes (i.", "startOffset": 42, "endOffset": 46}, {"referenceID": 19, "context": "In [23], a belief-based K-nearest neighbor classifier (BK-NN) has been presented, and the credal classification of object is done according to the distances between the object and its K nearest neighbors as well as two given (acceptance and rejection) distance thresholds.", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "Thus, a simple credal classification rule (CCR) [24] has been further developed, and the belief value of object associated with different classes (i.", "startOffset": 48, "endOffset": 52}, {"referenceID": 25, "context": "Moreover, when the training data is not available, we have also proposed several credal clustering methods [30]\u2013[32] in different cases.", "startOffset": 107, "endOffset": 111}, {"referenceID": 27, "context": "Moreover, when the training data is not available, we have also proposed several credal clustering methods [30]\u2013[32] in different cases.", "startOffset": 112, "endOffset": 116}, {"referenceID": 33, "context": "To reduce the computational burden, Self-Organizing Map (SOM) [38] is applied in each class, and the optimized weighting vectors are used to represent the corresponding class.", "startOffset": 62, "endOffset": 66}, {"referenceID": 14, "context": "If the object is directly classified using only the known values, Dempster-Shafer1 (DS) fusion rule [16] is applied because of the simplicity of this rule and also because the BBA\u2019s to fuse are usually in low conflict.", "startOffset": 100, "endOffset": 104}, {"referenceID": 34, "context": "Otherwise, a new fusion rule inspired by Dubois and Prade (DP) rule [39] is used to classify the edited pattern with proper imputation of its missing values.", "startOffset": 68, "endOffset": 72}, {"referenceID": 14, "context": "The Belief Function Theory (BFT) introduced by Glenn Shafer is also known as Dempster-Shafer Theory (DST), or the Mathematical Theory of Evidence [16]\u2013[18].", "startOffset": 146, "endOffset": 150}, {"referenceID": 15, "context": "The Belief Function Theory (BFT) introduced by Glenn Shafer is also known as Dempster-Shafer Theory (DST), or the Mathematical Theory of Evidence [16]\u2013[18].", "startOffset": 151, "endOffset": 155}, {"referenceID": 14, "context": "In this work, the disjunction (union) of several Although the rule has been proposed originally by Arthur Dempster, we prefer to call it Dempster-Shafer rule because it has been widely promoted by Shafer in [16].", "startOffset": 207, "endOffset": 211}, {"referenceID": 0, "context": ") from 2 to [0, 1] satisfying m(\u2205) = 0 and the normalization condition \u2211", "startOffset": 12, "endOffset": 18}, {"referenceID": 24, "context": "The credal classification (or partitioning) [29] is defined as n-tuple M = (m1, \u00b7 \u00b7 \u00b7 ,mn) of BBA\u2019s, where mi is the basic belief assignment of the object xi \u2208 X , i = 1, .", "startOffset": 44, "endOffset": 48}, {"referenceID": 14, "context": "For combining multiple sources of evidence represented by a set of BBA\u2019s, the well-known Dempster\u2019s rule [16] is still widely used, even if its justification is an open debate and questionable in the community [40], [41].", "startOffset": 105, "endOffset": 109}, {"referenceID": 35, "context": "For combining multiple sources of evidence represented by a set of BBA\u2019s, the well-known Dempster\u2019s rule [16] is still widely used, even if its justification is an open debate and questionable in the community [40], [41].", "startOffset": 210, "endOffset": 214}, {"referenceID": 36, "context": "For combining multiple sources of evidence represented by a set of BBA\u2019s, the well-known Dempster\u2019s rule [16] is still widely used, even if its justification is an open debate and questionable in the community [40], [41].", "startOffset": 216, "endOffset": 220}, {"referenceID": 35, "context": "However, this redistribution can yield unreasonable results in the high conflicting cases [40], as well as in some special low conflicting cases as well [41].", "startOffset": 90, "endOffset": 94}, {"referenceID": 36, "context": "However, this redistribution can yield unreasonable results in the high conflicting cases [40], as well as in some special low conflicting cases as well [41].", "startOffset": 153, "endOffset": 157}, {"referenceID": 15, "context": "Among the possible alternatives of DS rule, we find Smets\u2019 conjunctive rule (used in his transferable belief model (TBM) [18]), Dubois-Prade (DP) rule [39], and more recently the more complex Proportional Conflict Redistributions (PCR) rules [42].", "startOffset": 121, "endOffset": 125}, {"referenceID": 34, "context": "Among the possible alternatives of DS rule, we find Smets\u2019 conjunctive rule (used in his transferable belief model (TBM) [18]), Dubois-Prade (DP) rule [39], and more recently the more complex Proportional Conflict Redistributions (PCR) rules [42].", "startOffset": 151, "endOffset": 155}, {"referenceID": 37, "context": "Among the possible alternatives of DS rule, we find Smets\u2019 conjunctive rule (used in his transferable belief model (TBM) [18]), Dubois-Prade (DP) rule [39], and more recently the more complex Proportional Conflict Redistributions (PCR) rules [42].", "startOffset": 242, "endOffset": 246}, {"referenceID": 33, "context": "Self-Organizing Map (SOM) (also called Kohonen map) [38] introduced by Teuvo Kohonen is a type of artificial neural network (ANN), and it is trained by unsupervised learning method.", "startOffset": 52, "endOffset": 56}, {"referenceID": 38, "context": "distance measure) [43].", "startOffset": 18, "endOffset": 22}, {"referenceID": 33, "context": "The detailed information about SOM can be found in [38].", "startOffset": 51, "endOffset": 55}, {"referenceID": 38, "context": "Inspired by [43], we propose to use the Self", "startOffset": 12, "endOffset": 16}, {"referenceID": 33, "context": "Organized Map (SOM) technique [38] to reduce the computational complexity.", "startOffset": 30, "endOffset": 34}, {"referenceID": 14, "context": ")) are classically discounted [16] by \uf8f4\uf8f2\uf8f4\uf8f3 m\u0302 og i (\u03c9g) = \u03b1 \u03c9g i m og i (\u03c9g) m\u0302 og i (\u03a9) = 1\u2212 \u03b1 \u03c9g i + \u03b1 \u03c9g i m og i (\u03a9) (13)", "startOffset": 30, "endOffset": 34}, {"referenceID": 39, "context": "also apply the cross validation [44] (e.", "startOffset": 32, "endOffset": 36}, {"referenceID": 11, "context": "Three experiments with artificial and real data sets have been used to test the performance of this new CCAI method compared with the K-NN imputation (KNNI) method [12], FCM imputation (FCMI) method [13], [14], SOM imputation (SOMI) [15] method and our previous credal classification PCC method [25].", "startOffset": 164, "endOffset": 168}, {"referenceID": 12, "context": "Three experiments with artificial and real data sets have been used to test the performance of this new CCAI method compared with the K-NN imputation (KNNI) method [12], FCM imputation (FCMI) method [13], [14], SOM imputation (SOMI) [15] method and our previous credal classification PCC method [25].", "startOffset": 205, "endOffset": 209}, {"referenceID": 13, "context": "Three experiments with artificial and real data sets have been used to test the performance of this new CCAI method compared with the K-NN imputation (KNNI) method [12], FCM imputation (FCMI) method [13], [14], SOM imputation (SOMI) [15] method and our previous credal classification PCC method [25].", "startOffset": 233, "endOffset": 237}, {"referenceID": 22, "context": "The evidential neural network classifier (ENN) [27] is adopted in the sequel experiments to classify the edited pattern with the estimated values in PCC, KNNI and FCMI, since ENN produce generally good results in the classification6.", "startOffset": 47, "endOffset": 51}, {"referenceID": 17, "context": "The evidential K-nearest neighbor (EK-NN) method [21] is also used to classify the edited pattern in Experiment 3 with real data for comparison.", "startOffset": 49, "endOffset": 53}, {"referenceID": 22, "context": "The parameters of ENN and EK-NN can be automatically optimized as explained in [27] and [22].", "startOffset": 79, "endOffset": 83}, {"referenceID": 18, "context": "The parameters of ENN and EK-NN can be automatically optimized as explained in [27] and [22].", "startOffset": 88, "endOffset": 92}, {"referenceID": 4, "context": "For KNNI, the values of K ranging from 5 to 20 neighbors have been tested, and the mean error rate with K \u2208 [5, 20] is given in Table I.", "startOffset": 108, "endOffset": 115}, {"referenceID": 16, "context": "For KNNI, the values of K ranging from 5 to 20 neighbors have been tested, and the mean error rate with K \u2208 [5, 20] is given in Table I.", "startOffset": 108, "endOffset": 115}], "year": 2016, "abstractText": "In classification of incomplete pattern, the missing values can either play a crucial role in the class determination, or have only little influence (or eventually none) on the classification results according to the context. We propose a credal classification method for incomplete pattern with adaptive imputation of missing values based on belief function theory. At first, we try to classify the object (incomplete pattern) based only on the available attribute values. As underlying principle, we assume that the missing information is not crucial for the classification if a specific class for the object can be found using only the available information. In this case, the object is committed to this particular class. However, if the object cannot be classified without ambiguity, it means that the missing values play a main role for achieving an accurate classification. In this case, the missing values will be imputed based on the K-nearest neighbor (K-NN) and self-organizing map (SOM) techniques, and the edited pattern with the imputation is then classified. The (original or edited) pattern is respectively classified according to each training class, and the classification results represented by basic belief assignments are fused with proper combination rules for making the credal classification. The object is allowed to belong with different masses of belief to the specific classes and meta-classes (which are particular disjunctions of several single classes). The credal classification captures well the uncertainty and imprecision of classification, and reduces effectively the rate of misclassifications thanks to the introduction of meta-classes. The effectiveness of the proposed method with respect to other classical methods is demonstrated based on several experiments using artificial and real data sets.", "creator": "LaTeX with hyperref package"}}}