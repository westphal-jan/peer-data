{"id": "1603.01228", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Mar-2016", "title": "GeoGebra Tools with Proof Capabilities", "abstract": "We report on significant improvements in the complex algebraic geometry theorem test subsystem in GeoGebra for automated proofs in Euclidean geometry, with respect to the extension of numerous GeoGebra tools with evidentiary capacities. As a result, a number of elementary theorems can be proven by using GeoGebra intuitive user interface on various computer architectures, including native Java and web-based systems with JavaScript. We also offer a test suite for benchmarking our results with 200 test cases.", "histories": [["v1", "Thu, 3 Mar 2016 19:29:08 GMT  (241kb,D)", "http://arxiv.org/abs/1603.01228v1", "22 pages"]], "COMMENTS": "22 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["zolt\\'an kov\\'acs", "csilla s\\'olyom-gecse"], "accepted": false, "id": "1603.01228"}, "pdf": {"name": "1603.01228.pdf", "metadata": {"source": "CRF", "title": "GeoGebra Tools with Proof Capabilities", "authors": ["Zolt\u00e1n Kov\u00e1cs"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "GeoGebra is an educational mathematics software tool, with millions of users. In 2005, its founder Markus Hohenwarter broadened its software development into an open source project. GeoGebra\u2019s features (including dynamic geometry, computer algebra, spreadsheets and function investigation) primarily focus on facilitating student experiments in Euclidean geometry, and not on formal reasoning. Including automated deduction tools in GeoGebra\u2019s dynamic geometry system (DGS) could introduce a whole new range of learning and teaching scenarios.\nSince automated theorem proving (ATP) in geometry has reached a rather mature stage, in 2010 some ATP experts agreed on starting a project of incorporating and testing a number of different automated provers for geometry in GeoGebra. This collaboration was initiated by Toma\u0301s Recio. Since the initial kickstart this project reached the following milestones:\n1. A workshop for theoretical planning took place in Santiago de Compostela, Spain, February 2011.\nar X\niv :1\n60 3.\n01 22\n8v 1\n[ cs\n.A I]\n2. A second workshop for implementation planning took place in Alcala\u0301 de Henares, Spain, January 2012.\n3. A prototype implementation was presented in Alcala\u0301 de Henares in June 2012 by demonstrating 44 test cases using 5 different theorem prover methods [2, 12].\n4. First public release in GeoGebra 5.0 in October 2014 with 60 test cases [4].\n5. Full documentation and fixing several issues according to users\u2019 feedback in July 2015 in [15].\n6. Extension of the set of the translated dynamic geometry construction tools to cover 200 test cases.\nIn this paper we report about the last milestone. In section 2 we give a comprehensive overview about the first milestones. Section 3.1 summarizes our results by focusing on the general improvements in GeoGebra. Section 3.2 shows some tables concerning our test results. Section 4 sketches up our next planned steps for another milestone in the implementation."}, {"heading": "2 Overview", "text": "An interactive prover system designed mainly for secondary school students can differ from expert prover systems in some aspects. For example, GCLC [9] and OpenGeoProver [19] process a program code written in its special language and print the output as a precise report about the computation details. By contrast, a DGS tool should collect all pieces of information about the relationships of the objects purely by analyzing the construction being created by point-and-click edits and possibly some other input parameters for the prover commands; finally the output is typically a yes/no answer and eventually some extra prescribed conditions to avoid degeneracy cases.\nThere is a plenty of literature on reports on successful applications of DGS by extending one with an ATP subsystem. Among them, here we mention GeoProof [18] and LADucation [1] which are open-sourced, and thus it is possible to continue their efforts by external researchers also. A publicly available variant of LADucation was already able to import a GeoGebra construction and set up an equation system which was solved by an external computer algebra system (CAS). Other systems including JGEX [24] and Cinderella [11] are not opensourced, but built upon a similar approach: visualizations in the DGS must be supported by ATP computations.\nOur project harnessed GeoGebra\u2019s success in the classrooms and tried to address some problems of the existing DGS/ATP prototypes including small distribution, being unmaintained or incomplete operation. In our solution in GeoGebra a user creates a dynamic geometry construction which contains free\npoints and dependent points as usual. All dependent points are already determined by the free points, however, all free points can be dragged by the user as desired. When a free point is dragged, some dependent points will also be changed by following the definitions in the construction steps. In such a way geometric theorems can be visualized by experiment.\nThis technique is well known in the world of DGS. Going one step forward, an ATP subsystem can give a more sound answer whether the visually obvious facts (for example, if three dependent points in a given construction are always collinear) generally hold. GeoGebra\u2019s command line interface with its Prove and ProveDetails commands and the graphical Relation Tool [16] introduce a higher level interface to investigate the problem setting by using an ATP subsystem.\nProving Euclidean elementary geometry theorems was introduced in GeoGebra with its version 5 in September 2014. A report [4] shows a benchmark about 60 theorems which can be directly checked with the Prove and ProveDetails commands in GeoGebra. More details are shown in [14] about how the prover subsystem is embedded to GeoGebra\u2019s user interface intuitively by using and extending the Relation Tool.\nThere are several approaches to compute a proof internally by using GeoGebra\u2019s portfolio prover [13], including\n\u2022 Wu\u2019s method [23] by using OpenGeoProver externally, and also\n\u2022 the area method [6] (via OpenGeoProver), moreover\n\u2022 Recio\u2019s exact check method [12] and\n\u2022 the Gro\u0308bner basis method [10, 17].\nIn our present work we focused on the internally implemented Gro\u0308bner basis method which translates the geometric objects to algebraic equations directly and manipulates on the algebraic equation system by eliminating the dependent variables. Our work could be however used for Wu\u2019s method also, since we just defined a set of equations to translate geometric construction tools into an algebraic approach. We used complex algebraic geometry in our computations which is a standard way to set up a Euclidean geometry question (see [7, chapter 6])."}, {"heading": "3 Our enhancements", "text": "We report about our contributions to GeoGebra in two major areas:\n1. Implementation of symbolic equations for various geometric tools (section 3.1).\n2. Creating a number of tests to extend the benchmarks (section 3.2)."}, {"heading": "3.1 Symbolic equations", "text": "GeoGebra\u2019s geometry tools have been classified by [20, p. 104] as \u201ceasy to use\u201d, \u201cmiddle\u201d and \u201cdifficult to use\u201d. Preiner defines two criteria for a tool to be easy (p. 121):\n1. The tool does not depend on already existing objects, or just requires existing points which can also be created \u2018on the fly\u2019 by clicking on the drawing pad. The order of actions is irrelevant and no additional keyboard input is required.\n2. The tool directly affects only one type of existing object or all existing objects at the same time and requires just one action. Again, the order of actions is irrelevant and no additional keyboard input is required.\nThe basic concept in our work was to implement theorem proving features for the easier tools in GeoGebra. Also it was important that the usually discussed classroom theorems can be quickly constructed by using the easier tools. The classroom theorems usually require points, segments, rays, lines and circles, and angles. For some more advanced topics tangents, parabolas, ellipses and hyperbolas may be needed."}, {"heading": "3.1.1 Translating geometry to algebra", "text": "Implementing angles and conics may have theoretical difficulties in our approach. For angles, we refer to the fact that it is not possible to define only the interior bisector of an angle: we always need to work together with internal and external angles at the same time (cf. [5, p. 40]). This is a consequence of handling angles: there is no way to check equality unless one computes the tangent of them, that is, instead of checking \u03b1 = \u03b2 one verifies tan(\u03b1) = tan(\u03b2) and these formulas are equivalent only if we set up some restrictions, say 0 \u2264 \u03b1, \u03b2 < \u03c0. In this sense we cannot distinguish 0o and 180o.\nFor conics, ellipses and hyperbolas must also be handled as nondistinguishable objects, because using the synthetic approach we need to define them with their foci, and the defining relations are the same. More precisely, given foci A and B and conic point C, another point P is an element of the conic if and only if AC + CB = AP + PB in the case of an ellipse and |AC \u2212CB| = |AP \u2212PB| (that is, (AC \u2212CB)2 = (AP \u2212PB)2) in the case of a hyperbola. Since the lengths in these equations are non-negative quantities, we either need to add constraints AC \u2265 0, CB \u2265 0, AP \u2265 0 and PB \u2265 0 (which are not possible in complex algebraic geometry due to lack of inequalites), or we need to use the squared quantities AC2, CB2, AP 2 and PB2 and express these equations exclusively by them. In this second case we need to eliminate the nonsquared quantities from the equation. With the help of the following computer algebra command we learn that for both the ellipse and the hyperbola we get the same product of 8th degree (here we used Giac [14] for computations):\n>> factor(eliminate([AC+CB=AP+PB,AC^2=ac^2,CB^2=cb^2,AP^2=ap^2,PB\n^2=pb^2],[AC,CB,AP,PB]))\nreturns\n[(ac-cb-ap-pb)*(ac-cb-ap+pb)*(ac-cb+ap-pb)*(ac-cb+ap+pb)*(ac+cb-\nap-pb)*(ac+cb-ap+pb)*(ac+cb+ap-pb)*(ac+cb+ap+pb)]\nwhich has the same result as for the input\n>> factor(eliminate([(AC-CB)^2=(AP-PB)^2,AC^2=ac^2,CB^2=cb^2,AP\n^2=ap^2,PB^2=pb^2],[AC,CB,AP,PB]))\nInterpreting the result, it is only possible to define the set AC\u00b1CB = \u00b1AP\u00b1PB in the complex algebraic geometry sense which consists of 8 theoretical curves:\n1. AC + CB = AP + PB, the ellipse,\n2. AC + CB = AP \u2212 PB \u21d4 AC + CB + BP = AP , which\u2014according to the triangle inequality\u2014is possible only in a degenerate case when A, B and C (and also P ) are collinear,\n3. AC+CB = \u2212AP +PB \u21d4 PA+AC+CB = PB, similar to the previous collinear case,\n4. AC + CB = \u2212AP \u2212 PB \u21d4 AC + CB + AP + PB = 0 which is possible only in a degenerate case when A = B = C = P ,\n5. AC \u2212 CB = AP + PB \u21d4 CA + AP + PB = CB, similar to the former collinear cases,\n6. AC \u2212 CB = \u2212AP + PB, one branch of the hyperbola,\n7. AC \u2212 CB = AP \u2212 PB, the other branch of the hyperbola,\n8. AC \u2212 CB = \u2212AP \u2212 PB \u21d4 CA + AP + PB = CB, again similar to the former collinear cases.\nThat is, we indeed obtained that an ellipse and a hyperbola cannot be distinguished in this model (but all other non-degenerate curves can be distinguished from them). This issue will give some limitations to investigate special features of conics, but still enable investigating some common features of them. For example, the following generalization of Pascal\u2019s hexagon theorem for conics holds (see Fig. 1):\nTheorem 1. Let c be the union of an ellipse and a hyperbola, both defined with foci A, B and circumpoint C. Let a denote line AB and let the perpendicular bisector of a be b. Let C \u2032 be the reflection of C to the line a and C \u2032\u2032 to b. Also let us take an arbitrary point D on c and by reflection to a and b, respectively, obtain points D\u2032 and D\u2032\u2032. Now the intersections of CD and C \u2032\u2032D\u2032\u2032, CD\u2032 and C \u2032C \u2032\u2032, moreover C \u2032D and D\u2032D\u2032\u2032 will be collinear.\nA consequence of this example that some formulas can also be difficult to distinguish, and may require further investigation by using elimination and factorization with the help of a CAS.\nIn general, when a construction is given, it is important to identify geometrical hypotheses which are non-distinguishable from other geometrical hypotheses because they are translated with the same algebraic formula. When the prover disproves the respective statement in the algebraic translation, it should not be interpreted that the geometry statement was false. This is the case when attempting to prove that the internal bisectors of a triangle are concurrent: the algebraic translation actually disproves that the union of the internal and external angle bisectors are concurrent.\nAlso it is important to identify geometrical theses which are nondistinguishable from other geometrical theses because they are translated with the same algebraic formula. When the prover proves the respective statement in the algebraic translation, it should not be interpreted that the geometry statement was true."}, {"heading": "3.1.2 The implemented tools", "text": "Apart from considering these issues, we managed to handle many typical classroom situations, and we report that most \u201ceasy\u201d tools are implemented, and also some other tools from the \u201cmiddle\u201d and \u201cdifficult to use\u201d toolset.\nThe following basic geometrical shapes are now implemented: segment, line, ray and vector, each defined by two points, circle defined with center and through\npoint or through three points, angle, parabola with focus point and directrix, ellipse and hyperbola defined with two focus points. This table summarizes them, and also those tools which can operate on the basic geometrical shapes (the latter ones printed in italicized description, underlined objects are new enhancements compared to [15]):\nTool Description Difficulty Implementation remarks\nPoint easy\nLine easy\nSegment easy\nCircle through 3 Points easy\nMidpoint or Center easy points and segments\nPerpendicular Bisector easy at line and segment\nArea easy polygons of\nRay middle\nVector middle\nAngle middle\nCircle with Center through Point middle\nPolygon middle\nIntersect middle line with line (cannot decide properly for segments), with circle, with parabola, with ellipse, with hyperbola; circle with circle (for other conics we cannot decide properly)\nPerpendicular Line middle at line through point\nParallel Line middle with line through point\nAngular Bisector middle angle defined by three points\nTangents middle at circle, parabola, ellipse/hyperbola\nReflect about Point middle point, line, circle, parabola, ellipse, hyperbola\nReflect about Line middle point, line, circle, parabola\nRotate around Point difficult with known angles: 0 \u25e6, \u00b130 \u25e6, \u00b145 \u25e6, \u00b160 \u25e6, \u00b190 \u25e6, \u00b1180 \u25e6\nTranslate by Vector difficult point\nReflect about Circle \u2014 point, circle\nParabola \u2014 with focus point and directrix\nHyperbola \u2014 with foci and circumpoint\nEllipse \u2014 with foci and circumpoint\nThe remaining, yet unimplemented \u201ceasy\u201d tools in GeoGebra are: Conic through 5 Points and Slope. The former one is actually not widely used in the classroom, and the latter is a non-synthetic tool, that is, it is related to analytic geometry. Some other missing, but planned features are listed in section 4."}, {"heading": "3.1.3 An example", "text": "Theorem 2. Let c be a circle with center A and circumpoint B. Let a be a line through B and C. Now\u2014not considering some degenerate cases\u2014reflecting line a about c the image is a circle, that is, for arbitrary point D \u2208 a its reflection D\u2032 about c always lies on the same circle (which is the circumcircle of points A, B\u2032(= B) and C \u2032, where B\u2032 and C \u2032 are the mirror images of B and C about c, respectively).\nIn other words, an inversion translates lines to circles in general. To use GeoGebra\u2019s Relation Tool (see Fig. 2) one needs to set up the construction as described in the Algebra View on the left (either by selecting tools from the top, or by using commands in the Input Bar on the bottom). Finally one has to\nselect the Relation Tool from the top and choose point D\u2032 and line d (or enter the command Relation[D,d] in the Input Bar). GeoGebra now numerically checks if D \u2208 d, the answer is yes, and the user can request a symbolical check by clicking on \u201cMore. . .\u201d. Finally GeoGebra concludes that\u2014under some nondegeneracy conditions\u2014the statement is generally true.\nFrom the computational point of view, GeoGebra here uses the Gro\u0308bner basis method. Thus it sets up the follwoing 6 equations in 13 variables, but point A will be fixed to the origin (so there are only 11 variables remaining). The following log information is printed only in debug mode in GeoGebra, including the timestamp in the first column:\n19:48:26.550 // Free point A(v1,v2) 19:48:26.550 // Free point B(v3,v4) 19:48:26.550 c = Circle[A, B] /* Circle through B with center A */ 19:48:26.551 // Free point C(v5,v6) 19:48:26.551 a = Line[B, C] /* Line through B, C */ 19:48:26.551 D = Point[a] /* Point on a */ 19:48:26.555 // Constrained point D(v7,v8) 19:48:26.555 Hypotheses: 19:48:26.555 1. -1*v7*v6+v8*v5+v7*v4+-1*v5*v4+-1*v8*v3+v6*v3 19:48:26.556 C\u2019 = Mirror[C, c] /* C mirrored at c */ 19:48:26.560 // Constrained point C\u2019(v9,v10) 19:48:26.561 2. -1*v9*v6^2+-1*v9*v5^2+v5*v4^2+v5*v3^2+2*v9*v6*v2+-2*v5*v4*v2+-1*v9*v2^2+v5*\nv2^2+v6^2*v1+2*v9*v5*v1+v5^2*v1+-1*v4^2*v1+-2*v5*v3*v1+-1*v3^2*v1+-2*v6*v2*v1+2*v4*v2* v1+-1*v9*v1^2+-1*v5*v1^2+2*v3*v1^2\n19:48:26.562 3. -1*v10*v6^2+-1*v10*v5^2+v6*v4^2+v6*v3^2+2*v10*v6*v2+v6^2*v2+v5^2*v2+-2*v6*v4 *v2+-1*v4^2*v2+-1*v3^2*v2+-1*v10*v2^2+-1*v6*v2^2+2*v4*v2^2+2*v10*v5*v1+-2*v6*v3*v1+-2* v5*v2*v1+2*v3*v2*v1+-1*v10*v1^2+v6*v1^2 19:48:26.562 D\u2019 = Mirror[D, c] /* D mirrored at c */ 19:48:26.566 // Constrained point D\u2019(v11,v12) 19:48:26.567 4. -1*v11*v8^2+-1*v11*v7^2+v7*v4^2+v7*v3^2+2*v11*v8*v2+-2*v7*v4*v2+-1*v11*v2^2+\nv7*v2^2+v8^2*v1+2*v11*v7*v1+v7^2*v1+-1*v4^2*v1+-2*v7*v3*v1+-1*v3^2*v1+-2*v8*v2*v1+2*v4* v2*v1+-1*v11*v1^2+-1*v7*v1^2+2*v3*v1^2 19:48:26.568 5. -1*v12*v8^2+-1*v12*v7^2+v8*v4^2+v8*v3^2+2*v12*v8*v2+v8^2*v2+v7^2*v2+-2*v8*v4\n*v2+-1*v4^2*v2+-1*v3^2*v2+-1*v12*v2^2+-1*v8*v2^2+2*v4*v2^2+2*v12*v7*v1+-2*v8*v3*v1+-2* v7*v2*v1+2*v3*v2*v1+-1*v12*v1^2+v8*v1^2\n19:48:26.568 Hypotheses have been processed. 19:48:26.574 substitutions: {v1=0, v2=0} 19:48:26.574 Thesis reductio ad absurdum (denied statement)... 19:48:26.586 6. -1+-1*v13*v11*v10^2*v4+v13*v12^2*v9*v4+v13*v11^2*v9*v4+-1*v13*v11*v9^2*v4+\nv13*v11*v10*v4^2+-1*v13*v12*v9*v4^2+-1*v13*v12^2*v10*v3+-1*v13*v11^2*v10*v3+v13*v12*v10 ^2*v3+v13*v12*v9^2*v3+v13*v11*v10*v3^2+-1*v13*v12*v9*v3^2+v13*v11*v10^2*v2+-1*v13*v12 ^2*v9*v2+-1*v13*v11^2*v9*v2+v13*v11*v9^2*v2+-1*v13*v11*v4^2*v2+v13*v9*v4^2*v2+v13*v12 ^2*v3*v2+v13*v11^2*v3*v2+-1*v13*v10^2*v3*v2+-1*v13*v9^2*v3*v2+-1*v13*v11*v3^2*v2+v13*v9 *v3^2*v2+-1*v13*v11*v10*v2^2+v13*v12*v9*v2^2+v13*v11*v4*v2^2+-1*v13*v9*v4*v2^2+-1*v13* v12*v3*v2^2+v13*v10*v3*v2^2+v13*v12^2*v10*v1+v13*v11^2*v10*v1+-1*v13*v12*v10^2*v1+-1* v13*v12*v9^2*v1+-1*v13*v12^2*v4*v1+-1*v13*v11^2*v4*v1+v13*v10^2*v4*v1+v13*v9^2*v4*v1+ v13*v12*v4^2*v1+-1*v13*v10*v4^2*v1+v13*v12*v3^2*v1+-1*v13*v10*v3^2*v1+-1*v13*v11*v10*v1 ^2+v13*v12*v9*v1^2+v13*v11*v4*v1^2+-1*v13*v9*v4*v1^2+-1*v13*v12*v3*v1^2+v13*v10*v3*v1^2\n19:48:26.592 Eliminating system in 11 variables (6 dependent)\nThen the underlying CAS (here Giac) eliminates variables v8, v9, v10, v11, v12 and v13 to describe non-degeneracy conditions between the coordinates of the free points. The obtained equation system in factorized form is produced in the following output (which is compatible with Singular\u2019s arrays, cf. [15, p. 146]):\n[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7\n[2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7\n[2]: 1,1,1,1 ... [12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5*\nv3^2-v7*v5^3*v3 [2]: 1,1\n[13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1\n[2]: 2,2,1,1\nThis is interpreted by GeoGebra as 13 possible sets of degeneracy conditions. Here\u2014because of its geometrical meaning, simplicity and being fully synthetic\u2014 the 13th set will be selected, which means: \u201cif (v4^2+v3^2)^2*(-v5*v4+v6*v3) differs from 0, then the thesis will be true on all possible values of the coordinates of the free points\u201d. Since A = (0, 0), B = (v3, v4) and C = (v5, v6), this clearly means that the two non-degeneracy conditions being shown are \u201cA differs from B\u201d (that is, circle c is non-degenerate) and \u201cA, B and C are not collinear\u201d (that is, such a line must be chosen for a which is not going through the center of c).\nFinally, GeoGebra concludes that\n19:48:26.714 Statement is GENERALLY TRUE 19:48:26.714 Benchmarking: 487 ms\n19:48:26.717 OUTPUT for ProveDetails: null = {true, {\"AreCollinear[A,B,C]\", \"AreEqual[A,B ]\"}}\nThis computation is done faster than half of a second.1"}, {"heading": "3.1.4 Technical notes", "text": "Technically speaking, GeoGebra is a Java application. From the developer\u2019s point of view, the Java public interface SymbolicParametersBotanaAlgo has to be implemented in GeoGebra\u2019s Algo* classes by creating suitable algebraic equations (and corresponding new variables) to describe the symbolic background of a newly used tool.2\nTo check the validity of a thesis, the public interface SymbolicParametersBotanaAlgoAre must be implemented.3 Currently the following checks are implemented: collinearity, concurrency, concyclicity, congruency, equality, parallelism, perpendicularity, incidence, and formula checking (to prove equations)."}, {"heading": "3.2 Benchmarks", "text": "In our improvements the benchmark suite was extended by additional 140 theorems. 57 of these extra tests were chosen from [5]\u2014these tests were computed in Chou\u2019s book by using Wu\u2019s [23] characteristic method.\nHere we summarize our results by sharing a list of the recent benchmarking outputs. GeoGebra\u2019s prover benchmarking system is available as a command line tool in its source folder test/scripts/benchmark/prover/."}, {"heading": "3.2.1 Desktop version", "text": "GeoGebra\u2019s desktop version runs as a Java native application on the mostly used operating system platforms including Windows, Mac OS X and Linux. Due to the internally used native Giac CAS each platform requires its own compiled version of the embedded computer algebra system.\nThe following table is the output of the \u201cjar-paper\u201d scenario, launched by the command line xvfb-run ./runtests -S jar-paper -r in this folder. This scenario tests the Prove command exclusively. See also [4].\n\u2022 The first column abbreviates the name of the test cases.\n\u2022 Column E1 (\u201cEngine 1\u201d) refers to Recio\u2019s exact check method programmed by Simon Weitzhofer.\n1The steps and the output for computing this example have been simplified to fit this paper. See also [15] for the detailed algorithm of symbolical checking in the Relation Tool.\n2See https://dev.geogebra.org/javadoc/common/org/geogebra/common/kernel/algos/ SymbolicParametersBotanaAlgo.html for a recent list of the implemented classes.\n3See https://dev.geogebra.org/javadoc/common/org/geogebra/common/kernel/algos/ SymbolicParametersBotanaAlgoAre.html for a recent list.\n\u2022 Column E2 (\u201cEngine 2\u201d) refers to the Gro\u0308bner basis method via SingularWS (also known as Botana\u2019s method) programmed by the authors of this paper. (See [3] for more on SingularWS.)\n\u2022 Column E2/Giac refers to Gro\u0308bner basis method via the Giac computer algebra tool (instead of SingularWS) programmed by Bernard Parisse and the authors of this paper.\n\u2022 Column E3a (\u201cEngine 3a\u201d) refers to OpenGeoProver\u2019s Wu\u2019s method implementation programmed by Ivan Petrovic\u0301 and Predrag Janic\u030cic\u0301.\n\u2022 Column E3b (\u201cEngine 3b\u201d) refers to OpenGeoProver\u2019s Area method programmed by Damien Desfontaines.\n\u2022 The Auto approach refers to the automatic selection of methods which is already implemented in GeoGebra and it usually starts with \u201cEngine 1\u201d and then it continues with \u201cEngine 2\u201d (either via SingularWS or Giac: if SingularWS is available, then in SingularWS, otherwise in Giac). If the Gro\u0308bner basis method is not conclusive, then \u201cEngine 3a\u201d is tried. If it is not conclusive either, then OpenGeoProver\u2019s Area method (Engine 3b) is used.\nSee [4] for more details about the used methods. Explanation of the used colors:\n\u2022 Green means that the test returns a correct yes/no answer. Intensity of green means speed (the lighter the slower). Numbers are in milliseconds.\n\u2022 Pink means that GeoGebra returns the wrong answer.\n\u2022 Yellow means the output is not conclusive, thus using this method GeoGebra shows \u201cundefined\u201d, i.e. there is no error here.\n\u2022 The R. (\u201cResult\u201d) column provides some extra information about the result, such as f (\u201cfalse\u201d) when the statement was false on purpose.\nThe S. (\u201cSpeed\u201d) column shows the timing. Highlighted entries are the best results, italicized entries are the slowest (but working) results in a row. The test cases are also available for download in GeoGebra\u2019s .ggb format from the GeoGebra online source code directly.\nFor testing we used a PC with 16 GB RAM, 8 \u00d7 Intel(R) Core(TM) i7 CPU 860 @ 2.80GHz, and Linux Mint 17.2.\nTest E1 E2 E2/Giac E3a E3b Auto\nR. S. R. S. R. S. R. S. R. S. R. S.\nlines-parallel f 3 f 35 185 f 65 f 69 f 7 midpoint-third 3 f 217 201 58 72 311 orthocente. . .ar 4 f 48 202 75 85 312 points-col. . .ar f 3 f 34 196 f 62 f 64 f 3 points-equal f 4 f 33 190 f 57 f 68 f 8 Pythagoras. . .n4 1 f 214 196 61 t 85 t 310 tangents-c. . .ns 5 1767 1080 210 84 1118 translate-. . .r3 2 f 42 t/o 61 69 t/o translate-. . .ar f 4 f 37 196 61 67 f 9\naltitudes-. . .82 2 t 45 t 198 37 38 t 200 altitudes-. . .05 5 t 46 t 200 t 356 t/o t 199 angle-bise. . .e2 3 t 379 t 323 56 67 t 320 angle-bise. . .le 2 t 377 t 319 63 69 t 322 area-polygon-2 1 t 103 t 242 69 66 t 241 area-polygon 1 t 118 t 252 73 80 t 272 bisector-i. . .20 2 t 231 342 38 34 452 bisector-i. . .19 2 t 180 t 371 t 747 70 t 327 bisector-m. . .22 2 t 224 t 350 2150 70 t 310 bisector-m. . .21 2 t 170 t 305 t 431 69 t 299 bisector-m. . .nt 1 t 40 t 192 t 69 t 73 t 194 bisector-o. . .37 2 590 739 88 89 873 bisector-p. . .28 1 t 787 2153 t 517 69 t 2630 bisector-p. . .19 2 t 214 374 t 652 69 t 980 Brianchon-. . .la 1 t/o t/o 1135 71 t/o cathetus 1 t 224 t 221 67 74 t 221 centroid-m. . .o1 2 t 45 t 197 t 590 t 174 t 199 centroid-m. . .o2 2 t 215 t 214 58 t 80 t 214 centroid-m. . .o3 2 t 221 t 220 39 39 t 207 centroid-m. . .o4 1 t 214 t 207 33 38 t 214 Ceva1 1 20 181 57 t 82 t 285 Ceva2 2 t 251 t 798 66 t 91 t 814 Ceva3 3 t 260 t 694 61 t 91 t 748 Ceva4 1 t 239 t 759 68 t/o t 678 Ceva5 2 t 244 t 758 63 80 t 672 circle-are. . .71 2 t 72 224 t 334 96 t 556 circle-bis. . .16 2 136 289 38 32 388 circle-bis. . .94 2 t/o 421 t 900 86 474 circle-mid. . .11 2 t 71 t 233 1911 t 95 t 243 circle-one. . .nt 2 t 39 t 194 30 35 t 186 circle-per. . .75 2 t 45 202 t 492 t 92 243 circle-per. . .95 1 t 46 195 39 35 240 circle-per. . .72 5 t 55 199 191 t 105 363 circle-per. . .67 2 t 54 11175 t 1169 t/o 11324 circle-per. . .68 2 t 53 t/o t 906 t 1608 t/o circle-qua. . .65 5 t 54 228 t 860 t 1673 t 933 circle-ray. . .06 1 t 64 8312 38 38 8289 circles-ar. . .90 4 t 54 t/o 34 34 t/o circles-ch. . .98 3 t 54 200 33 34 235 circumcenter1 t 5 t 41 t 187 t 236 t 102 t 5 circumcenter2 t 6 t 37 t 198 t 106 t 97 t 7 circumcenter3 t 9 t 36 t 197 t 141 t 98 t 4 circumcenter4 t 4 t 44 t 196 t 141 t 102 t 5 circumcenter5 5 t 46 t 195 t 108 t 96 t 190 circumcenter6 t 13 t 47 t 196 t 128 t 106 t 12 circumcent. . .97 4 t 49 t 203 t 682 t 156 t 199 circumcirc. . .nt 1 t 805 t/o t/o 68 t/o construct-. . .ne 1 61 252 78 84 349 construct-. . .nt 1 45 238 77 80 340 def-line-p. . .ne t 4 t 40 t 186 t 70 t 65 t 6 def-points. . .e1 4 t 60 t 215 t 210 t 84 t 209 def-points. . .e2 3 t 68 t 209 t 145 t 82 t 212 def-points. . .ne t 6 t 36 t 197 t 57 t 65 t 6 Desargues 5 t 49 1108 t 1068 t 80 t 2014 diameters-. . .74 2 t 50 t 203 t 554 85 t 202 ellipse-circle2 5 t 43 t 196 53 63 t 185 ellipse-circle3 5 t/o 216 59 63 255 ellipse-circle 5 t 28 t 189 59 62 t 181 ellipse-sy. . .y2 4 46 206 62 64 236 ellipse-sy. . .ry 4 t 40 t 192 61 56 t 189 EulerLine t 13 t 50 t 198 t 729 t 238 t 21 expression. . .d1 1 t 237 t 213 64 75 t 218 expression. . .d2 1 t 222 t 209 73 78 t 205 expression-ex31 2 t 220 t 219 65 74 t 209 foot-exists 3 t 40 t 190 t 314 t 70 t 198 geometric-mean 1 t 227 t 213 63 76 t 209 incenter1 3 402 1205 t 462 58 t 1601 incenter2 2 t 363 1348 t 643 65 1478 inversion-. . .nt 3 t 37 t 201 80 89 t 185 inversion-. . .e2 2 t 41 t 195 75 87 t 203 inversion-. . .ne 2 t 40 188 81 88 281 inversion-. . .nt 5 t 32 t 179 t 83 t 90 t 180 inversion-. . .e2 3 t 370 t 778 99 t 89 t 773 inversion-. . .e3 2 t 96 t 254 90 t 92 t 250 inversion-. . .le 1 t 91 259 86 t 95 345 isogonals1 1 286 430 62 64 528 isogonals2 5 228 358 66 72 426 isogonals3 1 t 877 t/o 61 62 t/o isosceles-. . .r2 1 t 201 347 100 82 468 isosceles-. . .or 2 t 163 307 114 82 370 isoscel-ex91 5 15 174 63 82 216 line-circl. . .on 4 t 34 t 208 t 84 85 t 195 Menelaus 1 t 265 t/o 66 f 233 t/o midpoint-half 3 t 219 t 216 52 69 t 214\nmidpoints-. . .60 2 t 46 213 t 977 f 1539 258 midpoints-. . .66 4 t 55 235 t 1150 t 321 t 1187 midpoint-w. . .96 2 t 73 t 230 t 506 t 88 t 218 mirrored-r. . .el 3 t 45 t 193 63 62 t 206 nine-point. . .le t 35 t 69 t 225 t 430 t 79 t 34 orthocenter1 t 7 t 39 t 193 t 225 t 69 t 7 orthocenter2 t 5 t 33 t 189 t 100 f 625 t 6 orthocenter3 t 5 t 35 t 184 t 128 t 70 t 5 orthocenter4 t 6 t 33 t 187 t 126 t 67 t 5 orthocenter5 t 15 t 42 t 196 t 113 t 170 t 17 orthocenter6 t 7 t 36 t 186 t 105 f 635 t 9 orthocenter7 1 t 25 t 189 t 119 t 164 t 201 orthocente. . .70 1 t 107 319 34 35 350 orthocente. . .30 1 t 40 t 191 t 168 95 t 186 orthocente. . .c2 2 t 65 t 222 86 87 t 213 orthocente. . .ic 2 t 75 t 212 81 91 t 222 Pappus 3 t 40 t 235 t 957 t 80 t 243 parabola-d. . .n2 5 t 51 t 208 459 62 t 201 parabola-d. . .n3 2 t 42 t 195 460 60 t 200 parabola-d. . .on 2 t 46 t 199 f 160 63 t 200 parabola-d. . .s2 3 t 48 t 205 37 36 t 204 parabola-d. . .s3 5 t 41 t 191 57 59 t 194 parabola-d. . .us 2 t 47 t 198 34 33 t 192 parallel-chords t 88 t 44 195 t 667 t/o t 85 parallel-ex121 4 t 48 t 201 38 33 t 203 parallel-l. . .51 2 t 53 t 203 t 1163 t 145 t 198 parallelog. . .84 2 24 191 69 79 231 parallelog. . .ls t 10 t 42 t 198 t 400 t/o t 13 parallelog. . .79 5 25 183 40 33 223 parallelog. . .69 2 t 50 t 199 175 t 95 t 205 parallelog. . .85 5 t 57 205 t 741 f 11860 t 1064 Pascal-ellipse 2 t/o t/o 72 63 t/o Pascal-ell. . .ec 3 t/o t/o 69 68 t/o Pascal-ell. . .ec 1 t 93 977 65 62 1073 Pascal-hyp. . .la 2 t/o t/o 66 63 t/o Pascal-parabola 2 t/o t/o t 1074 63 t/o perpendcul. . .81 2 t 45 t 204 39 37 t 199 perpendicu. . .88 3 t 45 t 209 t 678 t/o t 202 perpendicu. . .87 3 t 67 t 234 t 319 t 70 t 230 perpendicu. . .86 5 t 67 254 536 t 84 298 point-equal2 4 t 34 t 177 47 59 t 185 point-equal t 9 t 12 t 182 t 55 t 70 t 8 powerline-. . .ar 3 t 48 t 204 t 131 79 t 196 Pythagoras. . .n2 1 t 230 t 217 67 t 91 t 211 Pythagoras. . .n3 2 t 226 t 216 66 t 91 t 212 Pythagoras. . .on 2 t 219 t 206 61 t 79 t 202 Pythagoras 2 t 216 t 202 61 t 80 t 201 quadrangle. . .61 2 t 49 222 t 1772 t 89 t 1898 rational-n. . .n2 2 t 215 t 203 55 69 t 211 rational-n. . .on 2 t 217 t 205 62 76 t 216 reflection1 2 t 34 t 188 55 59 t 189 reflection2 2 t 41 t 189 55 69 t 186 reflection. . .11 2 t 45 208 60 61 283 reflection. . .2a 2 t 42 t 187 54 61 t 194 reflection. . .G4 2 t 47 t 217 61 64 t 209 reflection. . .nt 2 t 28 t 188 t 65 71 t 194 regular-tr. . .le 5 t 40 t 193 t 115 84 t 191 rotate1 2 23 183 65 64 251 rotate-by-. . .es 3 t 33 t 191 48 61 t 184 rotate-by-. . .es 1 t 32 t 189 32 35 t 185 rotate-by-. . .es 1 t 220 t 207 60 67 t 203 rotate-by-. . .es 1 t 236 t 206 55 66 t 216 rotate-by-. . .es 1 t 36 t 188 34 30 t 183 rotate-by-. . .es 2 t 36 t 191 57 61 t 183 rotate-by-. . .es 1 t 34 t 194 31 29 t 185 Simson1 4 t 53 247 t 311 t 190 t 543 Simson2 2 t 51 239 t 277 t 206 t 496 simsons-li. . .93 1 t 114 2999 44 41 3041 simsons-li. . .97 2 t 58 t 213 t 658 93 t 205 simsons-th. . .88 1 t 44 235 t 337 t 184 t 548 square1 1 t 42 t 197 38 41 t 196 square2 1 t 39 t 192 t 112 86 t 190 square3 2 t 56 t 204 t 100 83 t 202 symmedians 3 t 441 t/o 68 63 t/o tangent-ar. . .ar 2 t 42 193 79 81 272 tangent-pa. . .a2 2 t 60 203 59 70 245 tangent-pa. . .la 5 t 48 t 193 f 210 61 t 201 tangent-po. . .le 2 t 41 190 165 77 234 Thales1 5 t 42 t 200 t 215 t/o t 186 Thales2 2 t 41 t 194 t 101 78 t 195 Thales3 2 t 37 t 195 t 122 92 t 202 theorem-3-. . .se 2 t/o t/o 71 69 t/o theorem-of. . .42 4 t 38 t 194 t 564 t 69 t 187 translate-. . .r1 t 9 t 37 t 189 53 59 t 9\ntranslate-. . .r2 3 t 53 t 259 68 75 t 273 translate-. . .ic 4 t 68 t 237 58 70 t 228 trapezoid-. . .49 2 t 45 204 t 997 t/o 239 trapezoid-. . .03 2 t 49 t 206 33 33 t 197 triangle-areas 1 t 65 t 216 52 t 208 t 210 triangle-c. . .74 2 30 184 80 91 239 triangle-m. . .ns t 5 t 43 t 190 t 523 t 82 t 5 triangle-m. . .53 5 63 566 t 4042 98 621 triangle-m. . .79 5 t 48 t 193 t 236 t/o t 196 triangle-m. . .80 2 t 50 t 201 41 43 t 201 triangle-m. . .t1 t 10 t 31 t 190 t 72 t 74 t 8 triangle-m. . .t2 t 4 t 37 t 184 t 68 t 72 t 5 triangle-m. . .t3 t 7 t 39 t 189 t 78 t 75 t 4 triangle-m. . .t4 t 6 t 26 t 186 t 75 t 67 t 9 triangle-m. . .t5 t 6 t 40 t 189 t 73 t 76 t 7 triangle-p. . .34 3 t 56 t 210 179 t 151 t 216 triangle-p. . .23 t 67 t 49 t 232 171 t 90 t 72 triangle-p. . .55 2 t 46 t 207 t 225 t 73 t 208 triangle-p. . .48 2 t 57 t 211 t 327 t/o t 203 triangles-. . .31 t 5173 t 52 t 211 t 818 t/o t 5330 true t 1 t 1 t 1 t 1 t 1 t 1 two-circle. . .01 2 94 239 263 85 486 Varignon t 9 t 40 t 203 t 82 t 73 t 13 Total (of 200) 33 175 127 84 67 145\nWe highlight that:\n\u2022 Our theorem corpus has a significant number of test cases. Cf. [22].\n\u2022 The best performing theorem prover\u2014when using our corpus\u2014is the complex algebraic geometry prover via Singular [8]. Here the [7, chapter 6, \u00a74] algorithm was used. Timing is remarkably under one second in most test cases.\n\u2022 The table can be misleading when investigating other columns. Actually, there is no implementation for intersections with conics in GeoGebra for Recio\u2019s method. Also E2/Giac can use a different algorithm with better (but slightly slower) results. Some GeoGebra commands are not yet implemented in the communication layer between GeoGebra and OpenGeoProver, that is, columns E3a and E3b show only a limited amount of positive test cases.\n\u2022 For the end user the significant case is the last column, since Singular is disabled by default to ensure the same behavior on offline and online runs."}, {"heading": "3.2.2 Web version", "text": "The web version runs in a web browser. All major browsers including Google Chrome, Mozilla Firefox and Internet Explorer are supported.\nThe following table was generated by using the command line xvfb-run ./runtest -p \"Auto Web\" -r in this folder. It compares the outputs of the Prove command in the desktop version (\u201cAuto\u201d) and the web version (\u201cWeb\u201d).\nTest Auto Web\nR. S. R. S.\nlines-parallel f 7 f 11 midpoint-third 297 779 orthocente. . .ar 303 626 points-col. . .ar f 5 f 9 points-equal f 4 f 11\nPythagoras. . .n4 t 311 612 tangents-c. . .ns 1153 t/o translate-. . .r3 t/o 7190 translate-. . .ar f 9 f 12 altitudes-. . .82 t 200 t 715 altitudes-. . .05 t 202 t 564 angle-bise. . .e2 t 391 t 1206 angle-bise. . .le t 340 t 1188 area-polygon-2 t 275 t 620 area-polygon t 277 t 661 bisector-i. . .20 442 1585 bisector-i. . .19 t 348 t 1020 bisector-m. . .22 t 323 t 1069 bisector-m. . .21 t 318 t 932 bisector-m. . .nt t 188 t 427 bisector-o. . .37 726 5511 bisector-p. . .28 t 2668 t/o bisector-p. . .19 t 1146 1569 Brianchon-. . .la t/o 4344 cathetus t 214 t 870 centroid-m. . .o1 t 190 t 580 centroid-m. . .o2 t 210 t 864 centroid-m. . .o3 t 211 t 848 centroid-m. . .o4 t 214 t 845 Ceva1 t 298 265 Ceva2 t 874 841 Ceva3 t 852 859 Ceva4 t 715 t/o Ceva5 t 721 t/o circle-are. . .71 t 527 887 circle-bis. . .16 353 438 circle-bis. . .94 437 1650 circle-mid. . .11 t 252 t 817 circle-one. . .nt t 186 t 446 circle-per. . .75 278 896 circle-per. . .95 255 569 circle-per. . .72 369 740 circle-per. . .67 11148 t/o circle-per. . .68 t/o t/o circle-qua. . .65 t 909 2383 circle-ray. . .06 8343 t/o circles-ar. . .90 t/o t/o circles-ch. . .98 260 823 circumcenter1 t 12 t 36 circumcenter2 t 6 t 36 circumcenter3 t 6 t 21 circumcenter4 t 4 t/o circumcenter5 t 196 t 477 circumcenter6 t 14 t 51 circumcent. . .97 t 210 t 603 circumcirc. . .nt t/o 9376 construct-. . .ne 358 271 construct-. . .nt 353 201 def-line-p. . .ne t 8 t 12 def-points. . .e1 t 212 t 509 def-points. . .e2 t 212 t 525 def-points. . .ne t 7 t 10 Desargues t 1928 13654 diameters-. . .74 t 200 t 496 ellipse-circle2 t 189 t 400 ellipse-circle3 273 1271 ellipse-circle t 183 t 393 ellipse-sy. . .y2 260 699 ellipse-sy. . .ry t 190 t 503 EulerLine t 13 t 61 expression. . .d1 t 213 t 751 expression. . .d2 t 211 t 716 expression-ex31 t 217 t 784 foot-exists t 196 t 503 geometric-mean t 209 t 871 incenter1 t 1696 t/o incenter2 1391 t/o inversion-. . .nt t 198 t 412 inversion-. . .e2 t 192 t 467 inversion-. . .ne 289 487 inversion-. . .nt t 184 t 296 inversion-. . .e2 t 818 4501 inversion-. . .e3 t 260 t 895 inversion-. . .le 372 954 isogonals1 519 711 isogonals2 419 557 isogonals3 t/o t/o isosceles-. . .r2 463 814 isosceles-. . .or 380 852\nisoscel-ex91 244 217 line-circl. . .on t 187 t 438 Menelaus t/o 864 midpoint-half t 200 t 759 midpoints-. . .60 278 778 midpoints-. . .66 t 1192 2803 midpoint-w. . .96 t 220 t 678 mirrored-r. . .el t 201 t 647 nine-point. . .le t 28 t 101 orthocenter1 t 10 t 42 orthocenter2 t 5 t 32 orthocenter3 t 6 t 26 orthocenter4 t 5 t 27 orthocenter5 t 8 t 44 orthocenter6 t 9 t 44 orthocenter7 t 189 t 515 orthocente. . .70 380 3284 orthocente. . .30 t 185 t 422 orthocente. . .c2 t 210 t 568 orthocente. . .ic t 235 t 639 Pappus t 240 t 1422 parabola-d. . .n2 t 214 t 514 parabola-d. . .n3 t 194 t 497 parabola-d. . .on t 198 t 491 parabola-d. . .s2 t 204 t 670 parabola-d. . .s3 t 193 t 555 parabola-d. . .us t 200 t 550 parallel-chords t 105 t 267 parallel-ex121 t 196 t 482 parallel-l. . .51 t 204 t 594 parallelog. . .84 253 260 parallelog. . .ls t 10 t 58 parallelog. . .79 247 259 parallelog. . .69 t 204 t 607 parallelog. . .85 t 955 767 Pascal-ellipse t/o 3173 Pascal-ell. . .ec t/o t/o Pascal-ell. . .ec 1072 t/o Pascal-hyp. . .la t/o 3774 Pascal-parabola t/o 8789 perpendcul. . .81 t 199 t 602 perpendicu. . .88 t 200 t 803 perpendicu. . .87 t 226 t 698 perpendicu. . .86 324 3622 point-equal2 t 185 t 293 point-equal t 9 t 6 powerline-. . .ar t 203 t 496 Pythagoras. . .n2 t 213 t 691 Pythagoras. . .n3 t 211 t 684 Pythagoras. . .on t 206 t 577 Pythagoras t 203 t 589 quadrangle. . .61 t 1902 1042 rational-n. . .n2 t 209 t 807 rational-n. . .on t 207 t 770 reflection1 t 185 t 449 reflection2 t 191 t 492 reflection. . .11 286 772 reflection. . .2a t 193 t 474 reflection. . .G4 t 205 t 867 reflection. . .nt t 185 t 387 regular-tr. . .le t 186 t 437 rotate1 276 214 rotate-by-. . .es t 182 t 399 rotate-by-. . .es t 194 t 498 rotate-by-. . .es t 205 t 701 rotate-by-. . .es t 220 t 825 rotate-by-. . .es t 188 t 490 rotate-by-. . .es t 182 t 418 rotate-by-. . .es t 184 t 442 Simson1 t 571 1875 Simson2 t 500 1637 simsons-li. . .93 3049 t/o simsons-li. . .97 t 210 t 788 simsons-th. . .88 t 571 1544 square1 t 190 t 494 square2 t 195 t 460 square3 t 195 t 493 symmedians t/o t/o tangent-ar. . .ar 280 504 tangent-pa. . .a2 270 1013 tangent-pa. . .la t 197 t 498 tangent-po. . .le 258 533 Thales1 t 190 t 482 Thales2 t 189 t 499\nThales3 t 209 t 550 theorem-3-. . .se t/o 2805 theorem-of. . .42 t 190 t 454 translate-. . .r1 t 9 t 33 translate-. . .r2 t 273 t 852 translate-. . .ic t 215 t 543 trapezoid-. . .49 251 642 trapezoid-. . .03 t 204 t 592 triangle-areas t 212 t 524 triangle-c. . .74 261 259 triangle-m. . .ns t 8 t 31 triangle-m. . .53 640 t/o triangle-m. . .79 t 189 t 480 triangle-m. . .80 t 196 t 558 triangle-m. . .t1 t 10 t 23 triangle-m. . .t2 t 4 t 23 triangle-m. . .t3 t 9 t 15 triangle-m. . .t4 t 4 t 16 triangle-m. . .t5 t 8 t 33 triangle-p. . .34 t 211 t 879 triangle-p. . .23 t 79 t 166 triangle-p. . .55 t 202 t 766 triangle-p. . .48 t 214 t 623 triangles-. . .31 t 5263 t/o true t 1 t 0 two-circle. . .01 486 1131 Varignon t 12 t 37 Total (of 200) 145 125\nWe highlight that:\n\u2022 The web version does not return any incorrect output in any cases.\n\u2022 It is properly working in 125/200 cases (62.5%) which is 86.2% of the performance ratio of the desktop version.\n\u2022 The web version is definitely slower than the desktop version by a ratio between 2 and 6.\n\u2022 Despite its limited availability and speed, the web version is already applicable in many classroom situations. The users only need a web browser which should be accessed not only on desktop computers and laptops, but also on tablets and mobile phones."}, {"heading": "3.2.3 Theorems in the classrooms", "text": "To sum up, we list some important theorems which are usually discussed in secondary schools. Now they can be proven with GeoGebra\u2019s help, that is, at least a yes/no answer is provided for many theorems, including:\n\u2022 The Pythagorean theorem. The intercept theorem. The geometric mean and cathetus theorems. Thales\u2019 theorem.\n\u2022 Concurrency of medians, bisectors, altitudes. Euler line. The midline theorem, Varignon\u2019s theorem. The nine points circle. Simson\u2019s theorem.\n\u2022 The angle bisector theorem.\n\u2022 Basic properties of translations and rotations.\n\u2022 Basic properties of reflections about a point, a line or a circle.\n\u2022 Ceva\u2019s theorem, Menelaus\u2019 theorem. Desargues\u2019s theorem, Pappus\u2019 theorem.\n\u2022 Basic properties of conic sections (including tangents).\nThe underlined theorems can be proven with the internal complex algebraic geometry prover in GeoGebra by using the enhancements implemented in the last milestone in our work."}, {"heading": "4 Future work", "text": "Finally, we summarize the currently planned new features in the forthcoming versions of GeoGebra.\nGeoGebra tool Description To implement\nArea of conics\nTranslate by Vector line, segment, ray, circle, parabola, ellipse, hyperbola, polygons\nReflect about Line ellipse, hyperbola\nReflect about Circle line\nRotate around Point general angles\nThere is still room for further enhancements:\n\u2022 Improve formula handling by eliminating non-squared quantities automatically and identifying formulas for a correct decision about the truth of the statement.\n\u2022 Currently it is not possible to mirror a line about a circle directly: in this case the implementation should handle that the object type is changing from line to circle in general.\n\u2022 The ShowProof command [13] might be implemented in cases when a readable proof can be produced automatically.\n\u2022 Allow proofs for 3D Euclidean geometry (cf. [21]).\n\u2022 Improve Gro\u0308bner bases computations in Giac to implement transcendent coefficients (see [7, chapter 6, \u00a74]). This would speed up computations in a number of cases which are currently infeasible: an indirect reduction of variables would be achieved in this way.\n\u2022 GeoGebra\u2019s LocusEquation command is capable of computing algebraic loci [3]. It would be possible to unify the code base for the locus and the prover subsystem, and the unified system could be maintained and improved easier.\nAlso implementing conic sections for Recio\u2019s exact check method would speed up GeoGebra\u2019s proofs significantly."}, {"heading": "Acknowledgments", "text": "The theorem proving subsystem in GeoGebra is a joint work with contributions from several researchers, programmers and teachers. We are especially thankful to Bernard Parisse for improving the Giac CAS to be competitive to Singular and some commercial systems, making possible that GeoGebra has a robust embedded theorem prover also.\nWe are grateful to Toma\u0301s Recio, Predrag Janic\u030cic\u0301, Julien Narboux and Francisco Botana for their useful hints to improve the text of this paper, and to Markus Hohenwarter and Judit Robu for supporting our work."}], "references": [{"title": "Exact internet accessible computation of paths of points in planar linkages and diagrams", "author": ["F. Botana", "M.A. Ab\u00e1nades", "J. Escribano"], "venue": "Comput. Appl. Eng. Educ.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Implementing theorem proving in GeoGebra by using a Singular Webservice", "author": ["F. Botana", "Z. Kov\u00e1cs", "S. Weitzhofer"], "venue": "In Proceedings EACA", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "A Singular web service for geometric computations", "author": ["F. Botana", "Z. Kov\u00e1cs"], "venue": "Annals of Mathematics and Artificial Intelligence,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Automated Theorem Proving in GeoGebra: Current Achievements", "author": ["F. Botana", "M. Hohenwarter", "P. Jani\u010di\u0107", "Z. Kov\u00e1cs", "I. Petrovi\u0107", "T. Recio", "S. Weitzhofer"], "venue": "J Autom Reasoning,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2015}, {"title": "Mechanical Geometry Theorem Proving", "author": ["S.-C. Chou"], "venue": "Springer Science + Business Media,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1987}, {"title": "Automated production of traditional proofs for constructive geometry theorems", "author": ["S.-C. Chou", "X.-S. Gao", "J.-Z. Zhang"], "venue": "In Proceedings of the Eighth Annual IEEE Symposium on Logic in Computer Science LICS,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1993}, {"title": "Ideals Varieties and Algorithms", "author": ["D. Cox", "J. Little", "D. O\u2019Shea"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Singular 4- 0-2 \u2014 A computer algebra system for polynomial computations", "author": ["W. Decker", "G.-M. Greuel", "G. Pfister", "H. Sch\u00f6nemann"], "venue": "http://www.singular.uni-kl.de", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "GCLC \u2014 A Tool for Constructive Euclidean Geometry and More Than That", "author": ["P. Jani\u010di\u0107"], "venue": "In Lecture Notes in Computer Science, pages 58\u201373. Springer Science + Business Media,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2006}, {"title": "Using Gr\u00f6bner bases to reason about geometry problems", "author": ["D. Kapur"], "venue": "Journal of Symbolic Computation,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1986}, {"title": "Foundations of Dynamic Geometry", "author": ["U. Kortenkamp"], "venue": "PhD thesis, ETH Zu\u0308rich,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "Implementing theorem proving in GeoGebra by using exact check of a statement in a bounded number of test cases", "author": ["Z. Kov\u00e1cs", "T. Recio", "S. Weitzhofer"], "venue": "In Proceedings EACA", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "The portfolio prover in GeoGebra", "author": ["Z. Kov\u00e1cs"], "venue": "Proceedings of the 10th International Workshop on Automated Deduction in Geometry (ADG", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Giac and GeoGebra \u2013 Improved Gr\u00f6bner Basis Computations. In Lecture Notes in Computer Science, pages 126\u2013138", "author": ["Z. Kov\u00e1cs", "B. Parisse"], "venue": "Springer Science + Business Media,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Computer Based Conjectures and Proofs in Teaching Euclidean Geometry", "author": ["Z. Kov\u00e1cs"], "venue": "PhD thesis, JKU Linz,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "The Relation Tool in GeoGebra 5. In Automated Deduction in Geometry: 10th International Workshop, ADG", "author": ["Z. Kov\u00e1cs"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2014}, {"title": "On the application of Buchberger's algorithm to automated geometry theorem proving", "author": ["B. Kutzler", "S. Stifter"], "venue": "Journal of Symbolic Computation,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1986}, {"title": "GeoProof, a user interface for formal proofs in geometry. In Mathematical User-Interfaces Workshop, Electronic Proceedings", "author": ["J. Narboux"], "venue": "Schloss Hagenberg, Linz, Austria,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2007}, {"title": "Integration of OpenGeoProver with GeoGebra", "author": ["I. Petrovi\u0107", "P. Jani\u0107i\u010d"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2012}, {"title": "Introducing Dynamic Mathematics Software to Mathematics Teachers: the Case of GeoGebra", "author": ["J. Preiner"], "venue": "PhD thesis,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2008}, {"title": "A Maple package for automatic theorem proving and discovery in 3d-geometry", "author": ["E. Roanes-Ma\u0107\u0131as", "E. Roanes-Lozano"], "venue": "In Proceedings of the 6th International Conference on Automated Deduction in Geometry,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "GeoThms \u2013 a Web System for Euclidean Constructive Geometry", "author": ["P. Quaresma", "P. Jani\u010di\u0107"], "venue": "Proceedings of the 7th Workshop on User Interfaces for Theorem Provers (UITP", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2007}, {"title": "On the Decision Problem and the Mechanization of Theorem", "author": ["W.-T. Wu"], "venue": "Proving in Elementary Geometry,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1984}, {"title": "An Introduction to Java Geometry Expert", "author": ["Z. Ye", "S.-C. Chou", "X.-S. Gao"], "venue": "Springer Science + Business Media,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}], "referenceMentions": [{"referenceID": 1, "context": "A prototype implementation was presented in Alcal\u00e1 de Henares in June 2012 by demonstrating 44 test cases using 5 different theorem prover methods [2, 12].", "startOffset": 147, "endOffset": 154}, {"referenceID": 11, "context": "A prototype implementation was presented in Alcal\u00e1 de Henares in June 2012 by demonstrating 44 test cases using 5 different theorem prover methods [2, 12].", "startOffset": 147, "endOffset": 154}, {"referenceID": 3, "context": "0 in October 2014 with 60 test cases [4].", "startOffset": 37, "endOffset": 40}, {"referenceID": 14, "context": "Full documentation and fixing several issues according to users\u2019 feedback in July 2015 in [15].", "startOffset": 90, "endOffset": 94}, {"referenceID": 8, "context": "For example, GCLC [9] and OpenGeoProver [19] process a program code written in its special language and print the output as a precise report about the computation details.", "startOffset": 18, "endOffset": 21}, {"referenceID": 18, "context": "For example, GCLC [9] and OpenGeoProver [19] process a program code written in its special language and print the output as a precise report about the computation details.", "startOffset": 40, "endOffset": 44}, {"referenceID": 17, "context": "Among them, here we mention GeoProof [18] and LADucation [1] which are open-sourced, and thus it is possible to continue their efforts by external researchers also.", "startOffset": 37, "endOffset": 41}, {"referenceID": 0, "context": "Among them, here we mention GeoProof [18] and LADucation [1] which are open-sourced, and thus it is possible to continue their efforts by external researchers also.", "startOffset": 57, "endOffset": 60}, {"referenceID": 23, "context": "Other systems including JGEX [24] and Cinderella [11] are not opensourced, but built upon a similar approach: visualizations in the DGS must be supported by ATP computations.", "startOffset": 29, "endOffset": 33}, {"referenceID": 10, "context": "Other systems including JGEX [24] and Cinderella [11] are not opensourced, but built upon a similar approach: visualizations in the DGS must be supported by ATP computations.", "startOffset": 49, "endOffset": 53}, {"referenceID": 15, "context": "GeoGebra\u2019s command line interface with its Prove and ProveDetails commands and the graphical Relation Tool [16] introduce a higher level interface to investigate the problem setting by using an ATP subsystem.", "startOffset": 107, "endOffset": 111}, {"referenceID": 3, "context": "A report [4] shows a benchmark about 60 theorems which can be directly checked with the Prove and ProveDetails commands in GeoGebra.", "startOffset": 9, "endOffset": 12}, {"referenceID": 13, "context": "More details are shown in [14] about how the prover subsystem is embedded to GeoGebra\u2019s user interface intuitively by using and extending the Relation Tool.", "startOffset": 26, "endOffset": 30}, {"referenceID": 12, "context": "There are several approaches to compute a proof internally by using GeoGebra\u2019s portfolio prover [13], including", "startOffset": 96, "endOffset": 100}, {"referenceID": 22, "context": "\u2022 Wu\u2019s method [23] by using OpenGeoProver externally, and also", "startOffset": 14, "endOffset": 18}, {"referenceID": 5, "context": "\u2022 the area method [6] (via OpenGeoProver), moreover", "startOffset": 18, "endOffset": 21}, {"referenceID": 11, "context": "\u2022 Recio\u2019s exact check method [12] and", "startOffset": 29, "endOffset": 33}, {"referenceID": 9, "context": "\u2022 the Gr\u00f6bner basis method [10, 17].", "startOffset": 27, "endOffset": 35}, {"referenceID": 16, "context": "\u2022 the Gr\u00f6bner basis method [10, 17].", "startOffset": 27, "endOffset": 35}, {"referenceID": 13, "context": "With the help of the following computer algebra command we learn that for both the ellipse and the hyperbola we get the same product of 8th degree (here we used Giac [14] for computations):", "startOffset": 166, "endOffset": 170}, {"referenceID": 14, "context": "This table summarizes them, and also those tools which can operate on the basic geometrical shapes (the latter ones printed in italicized description, underlined objects are new enhancements compared to [15]):", "startOffset": 203, "endOffset": 207}, {"referenceID": 0, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 5, "endOffset": 8}, {"referenceID": 0, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 11, "endOffset": 14}, {"referenceID": 1, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 18, "endOffset": 21}, {"referenceID": 2, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 34, "endOffset": 37}, {"referenceID": 1, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 41, "endOffset": 44}, {"referenceID": 1, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 52, "endOffset": 55}, {"referenceID": 0, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 57, "endOffset": 60}, {"referenceID": 0, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 63, "endOffset": 66}, {"referenceID": 1, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 70, "endOffset": 73}, {"referenceID": 2, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 85, "endOffset": 88}, {"referenceID": 3, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 93, "endOffset": 96}, {"referenceID": 1, "context": "[1]: [1]: _[1]=1 _[2]=-v6^2-v5^2 _[3]=v7 [2]: 1,1,1 [2]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=v5 _[4]=v7 [2]: 1,1,1,1 .", "startOffset": 100, "endOffset": 103}, {"referenceID": 11, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 6, "endOffset": 9}, {"referenceID": 0, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 12, "endOffset": 15}, {"referenceID": 1, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 19, "endOffset": 22}, {"referenceID": 1, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 125, "endOffset": 128}, {"referenceID": 12, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 134, "endOffset": 138}, {"referenceID": 0, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 140, "endOffset": 143}, {"referenceID": 0, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 146, "endOffset": 149}, {"referenceID": 1, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 153, "endOffset": 156}, {"referenceID": 2, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 168, "endOffset": 171}, {"referenceID": 3, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 186, "endOffset": 189}, {"referenceID": 1, "context": "[12]: [1]: _[1]=1 _[2]=v4*v6*v7^3-v4*v6*v7^2*v3-v4*v6*v7*v5^2+v4*v6*v5^2*v3-v6^2*v5*v3^2+v7^3*v5*v3-v7^2*v5* v3^2-v7*v5^3*v3 [2]: 1,1 [13]: [1]: _[1]=1 _[2]=v4^2+v3^2 _[3]=-v5*v4+v6*v3 _[4]=-1 [2]: 2,2,1,1", "startOffset": 193, "endOffset": 196}, {"referenceID": 4, "context": "57 of these extra tests were chosen from [5]\u2014these tests were computed in Chou\u2019s book by using Wu\u2019s [23] characteristic method.", "startOffset": 41, "endOffset": 44}, {"referenceID": 22, "context": "57 of these extra tests were chosen from [5]\u2014these tests were computed in Chou\u2019s book by using Wu\u2019s [23] characteristic method.", "startOffset": 100, "endOffset": 104}, {"referenceID": 3, "context": "See also [4].", "startOffset": 9, "endOffset": 12}, {"referenceID": 14, "context": "See also [15] for the detailed algorithm of symbolical checking in the Relation Tool.", "startOffset": 9, "endOffset": 13}, {"referenceID": 2, "context": "(See [3] for more on SingularWS.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "See [4] for more details about the used methods.", "startOffset": 4, "endOffset": 7}, {"referenceID": 21, "context": "[22].", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "\u2022 The best performing theorem prover\u2014when using our corpus\u2014is the complex algebraic geometry prover via Singular [8].", "startOffset": 113, "endOffset": 116}, {"referenceID": 12, "context": "\u2022 The ShowProof command [13] might be implemented in cases when a readable proof can be produced automatically.", "startOffset": 24, "endOffset": 28}, {"referenceID": 20, "context": "[21]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "\u2022 GeoGebra\u2019s LocusEquation command is capable of computing algebraic loci [3].", "startOffset": 74, "endOffset": 77}], "year": 2016, "abstractText": "We report about significant enhancements of the complex algebraic geometry theorem proving subsystem in GeoGebra for automated proofs in Euclidean geometry, concerning the extension of numerous GeoGebra tools with proof capabilities. As a result, a number of elementary theorems can be proven by using GeoGebra\u2019s intuitive user interface on various computer architectures including native Java and web based systems with JavaScript. We also provide a test suite for benchmarking our results with 200 test cases.", "creator": "LaTeX with hyperref package"}}}