{"id": "1603.03793", "review": {"conference": "acl", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Mar-2016", "title": "Training with Exploration Improves a Greedy Stack-LSTM Parser", "abstract": "We are adapting the greedy stack LSTM dependency parser by Dyer et al. (2015) to support an exploration training process that uses dynamic oracles (Goldberg and Nivre, 2013) instead of cross-entropy minimization. This form of training, which takes into account model predictions at the time of training and does not assume a flawless action history, improves analytical accuracy for both English and Chinese, and achieves very strong results for both languages. We are discussing some modifications that are necessary to design the exploration training to work well for a probabilistic neural network.", "histories": [["v1", "Fri, 11 Mar 2016 21:34:20 GMT  (24kb)", "https://arxiv.org/abs/1603.03793v1", null], ["v2", "Tue, 13 Sep 2016 14:54:51 GMT  (26kb)", "http://arxiv.org/abs/1603.03793v2", "In proceedings of EMNLP 2016"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["miguel ballesteros", "yoav goldberg", "chris dyer", "noah a smith"], "accepted": true, "id": "1603.03793"}, "pdf": {"name": "1603.03793.pdf", "metadata": {"source": "CRF", "title": "Training with Exploration Improves a Greedy Stack LSTM Parser", "authors": ["Miguel Ballesteros", "Yoav Goldberg", "Chris Dyer", "Noah A. Smith"], "emails": ["miguel.ballesteros@upf.edu,", "yoav.goldberg@gmail.com,", "cdyer@google.com,", "nasmith@cs.washington.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n60 3.\n03 79\n3v 2\n[ cs\n.C L\n] 1\n3 Se"}, {"heading": "1 Introduction", "text": "Natural language parsing can be formulated as a series of decisions that read words in sequence and incrementally combine them to form syntactic structures; this formalization is known as transitionbased parsing, and is often coupled with a greedy search procedure (Yamada and Matsumoto, 2003; Nivre, 2003; Nivre, 2004; Nivre, 2008). The literature on transition-based parsing is vast, but all works share in common a classification component that takes into account features of the current parser state1 and predicts the next action to take conditioned on the state. The state is of unbounded size.\nDyer et al. (2015) presented a parser in which the parser\u2019s unbounded state is embedded in a fixeddimensional continuous space using recurrent neural networks. Coupled with a recursive tree composition function, the feature representation is able\n1The term \u201cstate\u201d refers to the collection of previous decisions (sometimes called the history), resulting partial structures, which are typically stored in a stack data structure, and the words remaining to be processed.\nto capture information from the entirety of the state, without resorting to locality assumptions that were common in most other transition-based parsers. The use of a novel stack LSTM data structure allows the parser to maintain a constant time per-state update, and retain an overall linear parsing time.\nThe Dyer et al. parser was trained to maximize the likelihood of gold-standard transition sequences, given words. At test time, the parser makes greedy decisions according to the learned model. Although this setup obtains very good performance, the training and testing conditions are mismatched in the following way: at training time the historical context of an action is always derived from the gold standard (i.e., perfectly correct past actions), but at test time, it will be a model prediction.\nIn this work, we adapt the training criterion so as to explore parser states drawn not only from the training data, but also from the model as it is being learned. To do so, we use the method of Goldberg and Nivre (2012; 2013) to dynamically chose an optimal (relative to the final attachment accuracy) action given an imperfect history. By interpolating between algorithm states sampled from the model and those sampled from the training data, more robust predictions at test time can be made. We show that the technique can be used to improve the strong parser of Dyer et al."}, {"heading": "2 Parsing Model and Parameter Learning", "text": "Our departure point is the parsing model described by Dyer et al. (2015). We do not describe the model in detail, and refer the reader to the original work. At each stage t of the parsing process, the parser state is\nencoded into a vector pt, which is used to compute the probability of the parser action at time t as:\np(zt | pt) = exp\n(\ng \u22a4 ztpt + qzt\n)\n\u2211 z\u2032\u2208A(S,B) exp ( g \u22a4 z\u2032pt + qz\u2032\n) , (1)\nwhere gz is a column vector representing the (output) embedding of the parser action z, and qz is a bias term for action z. The set A(S,B) represents the valid transition actions that may be taken in the current state. Since pt encodes information about all previous decisions made by the parser, the chain rule gives the probability of any valid sequence of parse transitions z conditional on the input:\np(z | w) =\n|z| \u220f\nt=1\np(zt | pt). (2)\nThe parser is trained to maximize the conditional probability of taking a \u201ccorrect\u201d action at each parsing state. The definition of what constitutes a \u201ccorrect\u201d action is the major difference between a static oracle as used by Dyer et al. (2015) and the dynamic oracle explored here.\nRegardless of the oracle, our training implementation constructs a computation graph (nodes that represent values, linked by directed edges from each function\u2019s inputs to its outputs) for the negative log probability for the oracle transition sequence as a function of the current model parameters and uses forward- and backpropagation to obtain the gradients respect to the model parameters (Lecun et al., 1998, section 4)."}, {"heading": "2.1 Training with Static Oracles", "text": "With a static oracle, the training procedure computes a canonical reference series of transitions for each gold parse tree. It then runs the parser through this canonical sequence of transitions, while keeping track of the state representation pt at each step t, as well as the distribution over transitions p(zt | pt) which is predicted by the current classifier for the state representation. Once the end of the sentence is reached, the parameters are updated towards maximizing the likelihood of the reference transition sequence (Equation 2), which equates to maximizing the probability of the correct transition, p(zgt | pt), at each state along the path."}, {"heading": "2.2 Training with Dynamic Oracles", "text": "In the static oracle case, the parser is trained to predict the best transition to take at each parsing step, assuming all previous transitions were correct. Since the parser is likely to make mistakes at test time and encounter states it has not seen during training, this training criterion is problematic (Daume\u0301 III et al., 2009; Ross et al., 2011; Goldberg and Nivre, 2012; Goldberg and Nivre, 2013, inter alia). Instead, we would prefer to train the parser to behave optimally even after making a mistake (under the constraint that it cannot backtrack or fix any previous decision). We thus need to include in the training examples states that result from wrong parsing decisions, together with the optimal transitions to take in these states. To this end we reconsider which training examples to show, and what it means to behave optimally on these training examples. The framework of training with exploration using dynamic oracles suggested by Goldberg and Nivre (2012; 2013) provides answers to these questions. While the application of dynamic oracle training is relatively straightforward, some adaptations were needed to accommodate the probabilistic training objective. These adaptations mostly follow Goldberg (2013).\nDynamic Oracles. A dynamic oracle is the component that, given a gold parse tree, provides the optimal set of possible actions to take for any valid parser state. In contrast to static oracles that derive a canonical state sequence for each gold parse tree and say nothing about states that deviate from this canonical path, the dynamic oracle is well defined for states that result from parsing mistakes, and they may produce more than a single gold action for a given state. Under the dynamic oracle framework, an action is said to be optimal for a state if the best tree that can be reached after taking the action is no worse (in terms of accuracy with respect to the gold tree) than the best tree that could be reached prior to taking that action.\nGoldberg and Nivre (2013) define the arcdecomposition property of transition systems, and show how to derive efficient dynamic oracles for transition systems that are arc-decomposable.2 Un-\n2Specifically: for every parser configuration p and group of\nfortunately, the arc-standard transition system does not have this property. While it is possible to compute dynamic oracles for the arc-standard system (Goldberg et al., 2014), the computation relies on a dynamic programming algorithm which is polynomial in the length of the stack. As the dynamic oracle has to be queried for each parser state seen during training, the use of this dynamic oracle will make the training runtime several times longer. We chose instead to switch to the arc-hybrid transition system (Kuhlmann et al., 2011), which is very similar to the arc-standard system but is arc-decomposable and hence admits an efficient O(1) dynamic oracle, resulting in only negligible increase to training runtime. We implemented the dynamic oracle to the arc-hybrid system as described by Goldberg (2013).\nTraining with Exploration. In order to expose the parser to configurations that are likely to result from incorrect parsing decisions, we make use of the probabilistic nature of the classifier. During training, instead of following the gold action, we sample the next transition according to the output distribution the classifier assigns to the current configuration. Another option, taken by Goldberg and Nivre, is to follow the one-best action predicted by the classifier. However, initial experiments showed that the onebest approach did not work well. Because the neural network classifier becomes accurate early on in the training process, the one-best action is likely to be correct, and the parser is then exposed to very few error states in its training process. By sampling from the predicted distribution, we are effectively increasing the chance of straying from the gold path during training, while still focusing on mistakes that receive relatively high parser scores. We believe further formal analysis of this method will reveal connections to reinforcement learning and, perhaps, other methods for learning complex policies.\nTaking this idea further, we could increase the number of error-states observed in the training process by changing the sampling distribution so as to bias it toward more low-probability states. We do this by raising each probability to the power of\narcs A, if each arc in A can be derived from p, then a valid tree structure containing all of the arcs in A can also be derived from p. This is a sufficient condition, but whether it is necessary is unknown; hence the question of an efficient, O(1) dynamic oracle for the augmented system is open.\n\u03b1 (0 < \u03b1 \u2264 1) and re-normalizing. This transformation keeps the relative ordering of the events, while shifting probability mass towards less frequent events. As we show below, this turns out to be very beneficial for the configurations that make use of external embeddings. Indeed, these configurations achieve high accuracies and sharp class distributions early on in the training process.\nThe parser is trained to maximize the likelihood of a correct action zg at each parsing state pt according to Equation 1. When using the dynamic oracle, a state pt may admit multiple correct actions zg = {zgi , . . . , zgk}. Our objective in such cases is the marginal likelihood of all correct actions,3\np(zg | pt) = \u2211\nzgi\u2208zg\np(zgi | pt). (3)"}, {"heading": "3 Experiments", "text": "Following the same settings of Chen and Manning (2014) and Dyer et al (2015) we report results4 in the English PTB and Chinese CTB-5. Table 1 shows the results of the parser in its different configurations. The table also shows the best result obtained with the static oracle (obtained by rerunning Dyer et al. parser) for the sake of comparison between static and dynamic training strategies.\nThe score achieved by the dynamic oracle for English is 93.56 UAS. This is remarkable given that the parser uses a completely greedy search procedure. Moreover, the Chinese score establishes the state-of-the-art, using the same settings as Chen and Manning (2014).\n3A similar objective was used by Riezler et al (2000), Charniak and Johnson (2005) and Goldberg (2013) in the context of log-linear probabilistic models.\n4The results on the development sets are similar and only used for optimization and validation.\nThe error-exploring dynamic-oracle training always improves over static oracle training controlling for the transition system, but the arc-hybrid system slightly under-performs the arc-standard system when trained with static oracle. Flattening the sampling distribution (\u03b1 = 0.75) is especially beneficial when training with pretrained word embeddings.\nIn order to be able to compare with similar greedy parsers (Yazdani and Henderson, 2015; Andor et al., 2016)5 we report the performance of the parser on the multilingual treebanks of the CoNLL 2009 shared task (Hajic\u030c et al., 2009). Since some of the treebanks contain nonprojective sentences and arc-hybrid does not allow nonprojective trees, we use the pseudo-projective approach (Nivre and Nilsson, 2005). We used predicted partof-speech tags provided by the CoNLL 2009 shared task organizers. We also include results with pretrained word embeddings for English, Chinese, German, and Spanish following the same training setup as Dyer et al. (2015); for English and Chinese we used the same pretrained word embeddings as in Table 1, for German we used the monolingual training data from the WMT 2015 dataset and for Spanish we used the Spanish Gigaword version 3. See Table 2."}, {"heading": "4 Related Work", "text": "Training greedy parsers on non-gold outcomes, facilitated by dynamic oracles, has been explored by several researchers in different ways (Goldberg and Nivre, 2012; Goldberg and Nivre, 2013; Goldberg et al., 2014; Honnibal et al., 2013; Honnibal and Johnson, 2014;\n5We report the performance of these parsers in the most comparable setup, that is, with beam size 1 or greedy search.\nGo\u0301mez-Rodr\u0131\u0301guez et al., 2014; Bjo\u0308rkelund and Nivre, 2015; Tokgo\u0308z and Eryig\u0306it, 2015; Go\u0301mez-Rodr\u0131\u0301guez and Ferna\u0301ndez-Gonza\u0301lez, 2015; Vaswani and Sagae, 2016). More generally, training greedy search systems by paying attention to the expected classifier behavior during test time has been explored under the imitation learning and learningto-search frameworks (Abbeel and Ng, 2004; Daume\u0301 III and Marcu, 2005; Vlachos, 2012; He et al., 2012; Daume\u0301 III et al., 2009; Ross et al., 2011; Chang et al., 2015). Directly modeling the probability of making a mistake has also been explored for parsing (Yazdani and Henderson, 2015). Generally, the use of RNNs to conditionally predict actions in sequence given a history is spurring increased interest in training regimens that make the learned model more robust to test-time prediction errors. Solutions based on curriculum learning (Bengio et al., 2015), expected loss training (Shen et al., 2015), and reinforcement learning have been proposed (Ranzato et al., 2016). Finally, abandoning greedy search in favor of approximate global search offers an alternative solution to the problems with greedy search (Andor et al., 2016), and has been analyzed as well (Kulesza and Pereira, 2007; Finley and Joachims, 2008), including for parsing (Martins et al., 2009)."}, {"heading": "5 Conclusions", "text": "Dyer et al. (2015) presented stack LSTMs and used them to implement a transition-based dependency parser. The parser uses a greedy learning strategy which potentially provides very high parsing\nspeed while still achieving state-of-the-art results. We have demonstrated that improvement by training the greedy parser on non-gold outcomes; dynamic oracles improve the stack LSTM parser, achieving 93.56 UAS for English, maintaining greedy search."}, {"heading": "Acknowledgments", "text": "This work was sponsored in part by the U. S. Army Research Laboratory and the U. S. Army Research Office under contract/grant number W911NF-101-0533, and in part by NSF CAREER grant IIS1054319. Miguel Ballesteros was supported by the European Commission under the contract numbers FP7-ICT-610411 (project MULTISENSOR) and H2020-RIA-645012 (project KRISTINA). Yoav Goldberg is supported by the Intel Collaborative Research Institute for Computational Intelligence (ICRI-CI), a Google Research Award and the Israeli Science Foundation (grant number 1555/15)."}], "references": [{"title": "Apprenticeship learning via inverse reinforcement learning", "author": ["Abbeel", "Ng2004] Pieter Abbeel", "Andrew Y. Ng"], "venue": "In Proc. of ICML", "citeRegEx": "Abbeel et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Abbeel et al\\.", "year": 2004}, {"title": "Globally normalized transition-based neural networks", "author": ["Andor et al.2016] Daniel Andor", "Chris Alberti", "David Weiss", "Aliaksei Severyn", "Alessandro Presta", "Kuzman Ganchev", "Slav Petrov", "Michael Collins"], "venue": "In Proc. of ACL", "citeRegEx": "Andor et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Andor et al\\.", "year": 2016}, {"title": "Scheduled sampling for sequence prediction with recurrent neural networks. arXiv:1506.03099", "author": ["Bengio et al.2015] Samy Bengio", "Oriol Vinyals", "Navdeep Jaitly", "Noam Shazeer"], "venue": null, "citeRegEx": "Bengio et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2015}, {"title": "Non-deterministic oracles for unrestricted non-projective transition-based dependency parsing", "author": ["Bj\u00f6rkelund", "Nivre2015] Anders Bj\u00f6rkelund", "Joakim Nivre"], "venue": "In Proc. of IWPT", "citeRegEx": "Bj\u00f6rkelund et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bj\u00f6rkelund et al\\.", "year": 2015}, {"title": "Learning to search better than your teacher", "author": ["Chang et al.2015] Kai-Wei Chang", "Akshay Krishnamurthy", "Alekh Agarwal", "Hal Daume", "John Langford"], "venue": "In Proc. of ICML", "citeRegEx": "Chang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chang et al\\.", "year": 2015}, {"title": "Coarse-to-fine n-best parsing and MaxEnt discriminative reranking", "author": ["Charniak", "Johnson2005] Eugene Charniak", "Mark Johnson"], "venue": "In Proc. of ACL", "citeRegEx": "Charniak et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Charniak et al\\.", "year": 2005}, {"title": "A fast and accurate dependency parser using neural networks", "author": ["Chen", "Manning2014] Danqi Chen", "Christopher D. Manning"], "venue": "In Proc. of EMNLP", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "Learning as search optimization: Approximate large margin methods for structured prediction", "author": ["III Daum\u00e9", "III Marcu2005] Hal Daum\u00e9", "Marcu. Daniel"], "venue": "In Proc. of ICML", "citeRegEx": "Daum\u00e9 et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Daum\u00e9 et al\\.", "year": 2005}, {"title": "Search-based structured prediction", "author": ["John Langford", "Daniel Marcu"], "venue": "Machine Learning,", "citeRegEx": "III et al\\.,? \\Q2009\\E", "shortCiteRegEx": "III et al\\.", "year": 2009}, {"title": "Transition-based dependency parsing with stack long short-term memory", "author": ["Dyer et al.2015] Chris Dyer", "Miguel Ballesteros", "Wang Ling", "Austin Matthews", "Noah A. Smith"], "venue": "In Proc. of ACL", "citeRegEx": "Dyer et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Dyer et al\\.", "year": 2015}, {"title": "Training structural SVMs when exact inference is intractable", "author": ["Finley", "Joachims2008] T. Finley", "T. Joachims"], "venue": "Proc. of ICML", "citeRegEx": "Finley et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Finley et al\\.", "year": 2008}, {"title": "A dynamic oracle for arc-eager dependency parsing", "author": ["Goldberg", "Nivre2012] Yoav Goldberg", "Joakim Nivre"], "venue": "In Proc. of COLING", "citeRegEx": "Goldberg et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Goldberg et al\\.", "year": 2012}, {"title": "Training deterministic parsers with nondeterministic oracles. Transactions of the Association for Computational Linguistics, 1:403\u2013414", "author": ["Goldberg", "Nivre2013] Yoav Goldberg", "Joakim Nivre"], "venue": null, "citeRegEx": "Goldberg et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Goldberg et al\\.", "year": 2013}, {"title": "A tabular method for dynamic oracles in transition-based parsing. Transactions of the association", "author": ["Francesco Sartorio", "Giorgio Satta"], "venue": null, "citeRegEx": "Goldberg et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Goldberg et al\\.", "year": 2014}, {"title": "Dynamic-oracle transition-based parsing with calibrated probabilistic output", "author": ["Yoav Goldberg"], "venue": "In Proc. of IWPT", "citeRegEx": "Goldberg.,? \\Q2013\\E", "shortCiteRegEx": "Goldberg.", "year": 2013}, {"title": "A polynomial-time dynamic oracle for non-projective dependency parsing", "author": ["Francesco Sartorio", "Giorgio Satta"], "venue": "In Proc. of EMNLP", "citeRegEx": "G\u00f3mez.Rodr\u0131\u0301guez et al\\.,? \\Q2014\\E", "shortCiteRegEx": "G\u00f3mez.Rodr\u0131\u0301guez et al\\.", "year": 2014}, {"title": "Imitation learning by coaching", "author": ["He et al.2012] He He", "Hal Daum\u00e9 III", "Jason Eisner"], "venue": null, "citeRegEx": "He et al\\.,? \\Q2012\\E", "shortCiteRegEx": "He et al\\.", "year": 2012}, {"title": "Joint incremental disfluency detection and dependency parsing. Transactions of the Association for Computational Linguistics, 2:131\u2013142", "author": ["Honnibal", "Johnson2014] Matthew Honnibal", "Mark Johnson"], "venue": null, "citeRegEx": "Honnibal et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Honnibal et al\\.", "year": 2014}, {"title": "A non-monotonic arc-eager", "author": ["Yoav Goldberg", "Mark Johnson"], "venue": null, "citeRegEx": "Honnibal et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Honnibal et al\\.", "year": 2013}, {"title": "Dynamic programming algorithms for transition-based dependency parsers", "author": ["Carlos G\u00f3mezRodr\u0131\u0301guez", "Giorgio Satta"], "venue": "In Proc. of ACL", "citeRegEx": "Kuhlmann et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kuhlmann et al\\.", "year": 2011}, {"title": "Structured learning with approximate inference", "author": ["Kulesza", "Pereira2007] A. Kulesza", "F. Pereira"], "venue": null, "citeRegEx": "Kulesza et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Kulesza et al\\.", "year": 2007}, {"title": "Gradient-based learning applied to document recognition", "author": ["Lecun et al.1998] Yann Lecun", "L\u00e9on Bottou", "Yoshua Bengio", "Patrick Haffner"], "venue": "Proceedings of the IEEE,", "citeRegEx": "Lecun et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Lecun et al\\.", "year": 1998}, {"title": "Polyhedral outer approximations with application to natural language parsing", "author": ["Noah A. Smith", "Eric P. Xing"], "venue": "In Proc. of ICML", "citeRegEx": "Martins et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Martins et al\\.", "year": 2009}, {"title": "Pseudo-projective dependency parsing", "author": ["Nivre", "Nilsson2005] Joakim Nivre", "Jens Nilsson"], "venue": "In Proc. of ACL", "citeRegEx": "Nivre et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Nivre et al\\.", "year": 2005}, {"title": "An efficient algorithm for projective dependency parsing", "author": ["Joakim Nivre"], "venue": "In Proc. of IWPT", "citeRegEx": "Nivre.,? \\Q2003\\E", "shortCiteRegEx": "Nivre.", "year": 2003}, {"title": "Incrementality in deterministic dependency parsing", "author": ["Joakim Nivre"], "venue": "In Proceedings of the Workshop on Incremental Parsing: Bringing Engineering and Cognition Together", "citeRegEx": "Nivre.,? \\Q2004\\E", "shortCiteRegEx": "Nivre.", "year": 2004}, {"title": "Algorithms for deterministic incremental dependency parsing", "author": ["Joakim Nivre"], "venue": "Computational Linguistics,", "citeRegEx": "Nivre.,? \\Q2008\\E", "shortCiteRegEx": "Nivre.", "year": 2008}, {"title": "Sequence level training with recurrent neural networks", "author": ["Sumit Chopra", "Michael Auli", "Wojciech Zaremba"], "venue": "In Proc. of ICLR", "citeRegEx": "Ranzato et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ranzato et al\\.", "year": 2016}, {"title": "Lexicalized stochastic modeling of constraint-based grammars using loglinear measures and em training", "author": ["Detlef Prescher", "Jonas Kuhn", "Mark Johnson"], "venue": "In Proc. of ACL", "citeRegEx": "Riezler et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Riezler et al\\.", "year": 2000}, {"title": "A reduction of imitation learning and structured prediction to no-regret online learning", "author": ["Ross et al.2011] St\u00e9phane Ross", "Geoffrey J. Gordon", "J. Andrew Bagnell"], "venue": "In Proc. of AISTAT", "citeRegEx": "Ross et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ross et al\\.", "year": 2011}, {"title": "Minimum risk training for neural machine translation", "author": ["Shen et al.2015] Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu"], "venue": "In Proc. of ACL", "citeRegEx": "Shen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Shen et al\\.", "year": 2015}, {"title": "Efficient structured inference for transition-based parsing with neural networks and error states. Transactions of the Association for Computational Linguistics, 4:183\u2013196", "author": ["Vaswani", "Sagae2016] Ashish Vaswani", "Kenji Sagae"], "venue": null, "citeRegEx": "Vaswani et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Vaswani et al\\.", "year": 2016}, {"title": "An investigation of imitation learning algorithms for structured prediction", "author": ["Andreas Vlachos"], "venue": "In Proc. of the European Workshop on Reinforcement Learning", "citeRegEx": "Vlachos.,? \\Q2012\\E", "shortCiteRegEx": "Vlachos.", "year": 2012}, {"title": "Statistical dependency analysis with support vector machines", "author": ["Yamada", "Matsumoto2003] Hiroyasu Yamada", "Yuji Matsumoto"], "venue": "In Proc. of IWPT", "citeRegEx": "Yamada et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Yamada et al\\.", "year": 2003}, {"title": "Incremental recurrent neural network dependency parser with search-based discriminative training", "author": ["Yazdani", "Henderson2015] Majid Yazdani", "James Henderson"], "venue": "In Proc. of CoNLL", "citeRegEx": "Yazdani et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Yazdani et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 9, "context": "We adapt the greedy stack LSTM dependency parser of Dyer et al. (2015) to support a training-with-exploration procedure using dynamic oracles (Goldberg and Nivre, 2013) instead of assuming an error-free action history.", "startOffset": 52, "endOffset": 71}, {"referenceID": 9, "context": "Dyer et al. (2015) presented a parser in which the parser\u2019s unbounded state is embedded in a fixeddimensional continuous space using recurrent neu-", "startOffset": 0, "endOffset": 19}, {"referenceID": 9, "context": "Our departure point is the parsing model described by Dyer et al. (2015). We do not describe the model", "startOffset": 54, "endOffset": 73}, {"referenceID": 9, "context": "The definition of what constitutes a \u201ccorrect\u201d action is the major difference between a static oracle as used by Dyer et al. (2015) and the dynamic oracle explored here.", "startOffset": 113, "endOffset": 132}, {"referenceID": 8, "context": "Since the parser is likely to make mistakes at test time and encounter states it has not seen during training, this training criterion is problematic (Daum\u00e9 III et al., 2009; Ross et al., 2011; Goldberg and Nivre, 2012; Goldberg and Nivre, 2013, inter alia). Instead, we would prefer to train the parser to behave optimally even after making a mistake (under the constraint that it cannot backtrack or fix any previous decision). We thus need to include in the training examples states that result from wrong parsing decisions, together with the optimal transitions to take in these states. To this end we reconsider which training examples to show, and what it means to behave optimally on these training examples. The framework of training with exploration using dynamic oracles suggested by Goldberg and Nivre (2012; 2013) provides answers to these questions. While the application of dynamic oracle training is relatively straightforward, some adaptations were needed to accommodate the probabilistic training objective. These adaptations mostly follow Goldberg (2013).", "startOffset": 157, "endOffset": 1073}, {"referenceID": 14, "context": "Goldberg and Nivre (2013) define the arcdecomposition property of transition systems, and show how to derive efficient dynamic oracles for transition systems that are arc-decomposable.", "startOffset": 0, "endOffset": 26}, {"referenceID": 13, "context": "While it is possible to compute dynamic oracles for the arc-standard system (Goldberg et al., 2014), the computation relies on a dynamic programming algorithm which is polynomial in the length of the stack.", "startOffset": 76, "endOffset": 99}, {"referenceID": 19, "context": "We chose instead to switch to the arc-hybrid transition system (Kuhlmann et al., 2011), which is very similar to the arc-standard system but is arc-decomposable and hence admits an efficient O(1) dynamic oracle, resulting in only negligible increase to training runtime.", "startOffset": 63, "endOffset": 86}, {"referenceID": 11, "context": "While it is possible to compute dynamic oracles for the arc-standard system (Goldberg et al., 2014), the computation relies on a dynamic programming algorithm which is polynomial in the length of the stack. As the dynamic oracle has to be queried for each parser state seen during training, the use of this dynamic oracle will make the training runtime several times longer. We chose instead to switch to the arc-hybrid transition system (Kuhlmann et al., 2011), which is very similar to the arc-standard system but is arc-decomposable and hence admits an efficient O(1) dynamic oracle, resulting in only negligible increase to training runtime. We implemented the dynamic oracle to the arc-hybrid system as described by Goldberg (2013).", "startOffset": 77, "endOffset": 737}, {"referenceID": 14, "context": "A similar objective was used by Riezler et al (2000), Charniak and Johnson (2005) and Goldberg (2013) in the context of log-linear probabilistic models.", "startOffset": 86, "endOffset": 102}, {"referenceID": 1, "context": "Y\u201915 and A\u201916 are beam = 1 parsers from Yazdani and Henderson (2015) and Andor et al. (2016), respectively.", "startOffset": 73, "endOffset": 93}, {"referenceID": 1, "context": "A\u201916-beam is the parser with beam larger than 1 by Andor et al. (2016). Bold numbers indicate the best results among the greedy", "startOffset": 51, "endOffset": 71}, {"referenceID": 1, "context": "In order to be able to compare with similar greedy parsers (Yazdani and Henderson, 2015; Andor et al., 2016)5 we report the performance of the parser on the multilingual treebanks of the CoNLL 2009 shared task (Haji\u010d et al.", "startOffset": 59, "endOffset": 108}, {"referenceID": 1, "context": "In order to be able to compare with similar greedy parsers (Yazdani and Henderson, 2015; Andor et al., 2016)5 we report the performance of the parser on the multilingual treebanks of the CoNLL 2009 shared task (Haji\u010d et al., 2009). Since some of the treebanks contain nonprojective sentences and arc-hybrid does not allow nonprojective trees, we use the pseudo-projective approach (Nivre and Nilsson, 2005). We used predicted partof-speech tags provided by the CoNLL 2009 shared task organizers. We also include results with pretrained word embeddings for English, Chinese, German, and Spanish following the same training setup as Dyer et al. (2015); for English and Chinese we used the same pretrained word embeddings as in Table 1, for German we used the monolingual training data from the WMT 2015 dataset and for Spanish we", "startOffset": 89, "endOffset": 650}, {"referenceID": 32, "context": "More generally, training greedy search systems by paying attention to the expected classifier behavior during test time has been explored under the imitation learning and learningto-search frameworks (Abbeel and Ng, 2004; Daum\u00e9 III and Marcu, 2005; Vlachos, 2012; He et al., 2012; Daum\u00e9 III et al., 2009; Ross et al., 2011; Chang et al., 2015).", "startOffset": 200, "endOffset": 343}, {"referenceID": 16, "context": "More generally, training greedy search systems by paying attention to the expected classifier behavior during test time has been explored under the imitation learning and learningto-search frameworks (Abbeel and Ng, 2004; Daum\u00e9 III and Marcu, 2005; Vlachos, 2012; He et al., 2012; Daum\u00e9 III et al., 2009; Ross et al., 2011; Chang et al., 2015).", "startOffset": 200, "endOffset": 343}, {"referenceID": 29, "context": "More generally, training greedy search systems by paying attention to the expected classifier behavior during test time has been explored under the imitation learning and learningto-search frameworks (Abbeel and Ng, 2004; Daum\u00e9 III and Marcu, 2005; Vlachos, 2012; He et al., 2012; Daum\u00e9 III et al., 2009; Ross et al., 2011; Chang et al., 2015).", "startOffset": 200, "endOffset": 343}, {"referenceID": 4, "context": "More generally, training greedy search systems by paying attention to the expected classifier behavior during test time has been explored under the imitation learning and learningto-search frameworks (Abbeel and Ng, 2004; Daum\u00e9 III and Marcu, 2005; Vlachos, 2012; He et al., 2012; Daum\u00e9 III et al., 2009; Ross et al., 2011; Chang et al., 2015).", "startOffset": 200, "endOffset": 343}, {"referenceID": 2, "context": "ing (Bengio et al., 2015), expected loss training (Shen et al.", "startOffset": 4, "endOffset": 25}, {"referenceID": 30, "context": ", 2015), expected loss training (Shen et al., 2015), and reinforcement learning have been proposed (Ranzato et al.", "startOffset": 32, "endOffset": 51}, {"referenceID": 27, "context": ", 2015), and reinforcement learning have been proposed (Ranzato et al., 2016).", "startOffset": 55, "endOffset": 77}, {"referenceID": 1, "context": "search offers an alternative solution to the problems with greedy search (Andor et al., 2016), and has", "startOffset": 73, "endOffset": 93}, {"referenceID": 22, "context": "been analyzed as well (Kulesza and Pereira, 2007; Finley and Joachims, 2008), including for parsing (Martins et al., 2009).", "startOffset": 100, "endOffset": 122}], "year": 2016, "abstractText": "We adapt the greedy stack LSTM dependency parser of Dyer et al. (2015) to support a training-with-exploration procedure using dynamic oracles (Goldberg and Nivre, 2013) instead of assuming an error-free action history. This form of training, which accounts for model predictions at training time, improves parsing accuracies. We discuss some modifications needed in order to get training with exploration to work well for a probabilistic neural network dependency parser.", "creator": "LaTeX with hyperref package"}}}