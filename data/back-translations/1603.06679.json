{"id": "1603.06679", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Mar-2016", "title": "Recursive Neural Conditional Random Fields for Aspect-based Sentiment Analysis", "abstract": "In most cases, aspect terms in a review set have a strong relationship to opinion terms because one aspect is the goal in which an opinion is expressed. In this context, some of the existing work focuses on the development of syntactic rules to duplicate information between aspect and opinion terms. However, these methods require a great deal of effort and expertise to design precise syntactic rules and not to overcome uncertainties. In this paper, we propose a novel common model that integrates recursive neural networks and conditional random fields in a unified framework for aspect-based sentiment analysis. Our task is to extract aspect and opinion terms / phrases for each review. The proposed model is able to learn discriminatory features at a high level and to duplicate information between aspect and opinion terms at the same time. Furthermore, it is flexible to incorporate linguistic or lexiconistic features into the proposed model in order to further enhance its performance in terms of information extraction.", "histories": [["v1", "Tue, 22 Mar 2016 05:59:00 GMT  (1804kb)", "https://arxiv.org/abs/1603.06679v1", null], ["v2", "Wed, 8 Jun 2016 06:24:06 GMT  (1544kb)", "http://arxiv.org/abs/1603.06679v2", null], ["v3", "Mon, 19 Sep 2016 14:00:43 GMT  (1416kb)", "http://arxiv.org/abs/1603.06679v3", null]], "reviews": [], "SUBJECTS": "cs.CL cs.IR cs.LG", "authors": ["wenya wang", "sinno jialin pan", "daniel dahlmeier", "xiaokui xiao"], "accepted": true, "id": "1603.06679"}, "pdf": {"name": "1603.06679.pdf", "metadata": {"source": "CRF", "title": "Recursive Neural Conditional Random Fields for Aspect-based Sentiment Analysis", "authors": ["Wenya Wang", "Sinno Jialin Pan", "Daniel Dahlmeier", "Xiaokui Xiao"], "emails": ["xkxiao}@ntu.edu.sg,", "d.dahlmeier@sap.com"], "sections": [{"heading": null, "text": "ar X\niv :1\n60 3.\n06 67\n9v 3\n[ cs\n.C L\n] 1\n9 Se\np 20"}, {"heading": "1 Introduction", "text": "Aspect-based sentiment analysis (Pang and Lee, 2008; Liu, 2011) aims to extract important information, e.g. opinion targets, opinion expressions, target categories, and opinion polarities, from user-generated content, such as microblogs, reviews, etc. This task was first studied by Hu and Liu (2004a; 2004b), followed by (Popescu and Etzioni, 2005; Zhuang et al., 2006; Zhang et al., 2010; Qiu et al., 2011; Li et al., 2010). In aspect-based sentiment analysis, one of the goals is to extract explicit aspects of an entity from text, along with the opinions being expressed. For example, in a restaurant review \u201cI have to say they\nhave one of the fastest delivery times in the city.\u201d, the aspect term is delivery times, and the opinion term is fastest.\nAmong previous work, one of the approaches is to accumulate aspect and opinion terms from a seed collection without label information, by utilizing syntactic rules or modification relations between them (Qiu et al., 2011; Liu et al., 2013b). In the above example, if we know fastest is an opinion word, then delivery times is probably deduced as an aspect because fastest is its modifier. However, this approach largely relies on hand-coded rules, and is restricted to certain Part-of-Speech (POS) tags, e.g., opinion words are restricted to be adjectives. Another approach focuses on feature engineering based on predefined lexicons, syntactic analysis, etc (Jin and Ho, 2009; Li et al., 2010). A sequence labeling classifier is then built to extract aspect and opinion terms. This approach requires extensive efforts for designing hand-crafted features, and only combines features linearly for classification, which ignores higher order interactions.\nTo overcome the limitations of existing methods, we propose a novel model, namely Recursive Neural Conditional Random Fields (RNCRF). Specifically, RNCRF consists of two main components. The first component is to construct a recursive neural network (RNN)1 (Socher et al., 2010) based on a dependency tree of each sentence. The goal is to learn a highlevel feature representation for each word in the context of each sentence, and make the representation learning for aspect and opinion terms interactive through the underlying dependency structure among them. The output of the RNN is then fed into a Conditional Random Field (CRF) (Lafferty et al., 2001)\n1Note that in this paper, RNN stands for recursive neural network instead of recurrent neural network.\nto learn a discriminative mapping from high-level features to labels, i.e., aspects, opinions, or others, so that context information can be well captured. Our main contributions are to use RNN for encoding aspect-opinion relations in high-level representation learning, and to present a joint optimization approach based on maximum likelihood and backpropagation to learn the RNN and CRF components, simultaneously. In this way, the label information of aspect and opinion terms can be dually propagated from parameter learning in CRF to representation learning in RNN. We conduct expensive experiments on the dataset from SemEval challenge 2014 task 4 (subtask 1) (Pontiki et al., 2014) to verify the superiority of RNCRF over several baseline methods as well as the winning systems of the challenge."}, {"heading": "2 Related Work", "text": ""}, {"heading": "2.1 Aspects and Opinions Co-Extraction", "text": "Hu et al. (2004a) proposed to extract product aspects through association mining, and opinion terms by augmenting a seed opinion set using synonyms and antonyms in WordNet. In follow-up work, syntactic relations are further exploited for aspect/opinion extraction (Popescu and Etzioni, 2005; Wu et al., 2009; Qiu et al., 2011). For example, Qiu et al. (2011) used syntactic relations to double propagate and augment the sets of aspects and opinions. Though the above models are unsupervised, they heavily depend on predefined rules for extraction, and are also restricted to specific types of POS tags for product aspects and opinions. Jin et al. (2009), Li et al. (2010), Jakob et al. (2010) and Ma et al. (2010) modeled the extraction problem as a sequence tagging problem, and proposed to use HMMs or CRFs to solve it. These methods rely on richly handcrafted features, and do not consider interactions between aspect and opinion terms explicitly. Another direction is to use word alignment model to capture opinion relations among a sentence (Liu et al., 2012; Liu et al., 2013a). This method requires sufficient data for modeling desired relations.\nBesides explicit aspects and opinions extraction, there are also other lines of research related to aspect-based sentiment analysis, including aspect classification (Lakkaraju et al., 2014; McAuley et al., 2012),\naspect rating (Titov and McDonald, 2008; Wang et al., 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al., 2011; Ofek et al., 2016; Dong et al., 2014; Tang et al., 2015)."}, {"heading": "2.2 Deep Learning for Sentiment Analysis", "text": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014). These methods generally belong to sentence-level or phrase/wordlevel sentiment polarity predictions. Regarding aspect-based sentiment analysis, Irsoy et al. (2014) applied deep recurrent neural networks for opinion expression extraction. Dong et al. (2014) proposed an adaptive recurrent neural network for target-dependent sentiment classification, where targets or aspects are given as input. Tang et al. (2015) used Long Short-Term Memory (LSTM) (Hochreiter and Schmidhuber, 1997) for the same task. Nevertheless, there is little work in aspects and opinions co-extraction using deep learning models.\nTo the best of our knowledge, the most related works to ours are (Liu et al., 2015; Yin et al., 2016). Liu et al. (2015) proposed to combine recurrent neural network and word embeddings to extract explicit aspects. However, the proposed model simply uses recurrent neural network on top of word embeddings, and thus its performance heavily depends on the quality of word embeddings. In addition, it fails to explicitly model dependency relations or compositionalities within certain syntactic structure in a sentence. Recently, Yin et al. (2016) proposed an unsupervised learning method to improve word embeddings using dependency path embeddings. A CRF is then trained with the embeddings independently in the pipeline.\nDifferent from (Yin et al., 2016), our model does not focus on developing a new unsupervised word embedding methods, but encoding the information of dependency paths into RNN for constructing syntactically meaningful and discriminative hidden rep-\nresentations with labels. Moreover, we integrate RNN and CRF into a unified framework, and develop a joint optimization approach, instead of training word embeddings and a CRF separately as in (Yin et al., 2016). Note that Weiss et al. (2015) proposed to combine deep learning and structured learning for language parsing which can be learned by structured perceptron. However, they also separate neural network training with structured prediction.\nAmong deep learning methods, RNN has shown promising results on various NLP tasks, such as learning phrase representations (Socher et al., 2010), sentence-level sentiment analysis (Socher et al., 2013), language parsing (Socher et al., 2011a), and question answering (Iyyer et al., 2014). The tree structures used for RNNs include constituency tree and dependency tree. In a constituency tree, all the words lie at leaf nodes, each internal node represents a phrase or a constituent of a sentence, and the root node represents the entire sentence (Socher et al., 2010; Socher et al., 2012; Socher et al., 2013). In a dependency tree, each node including terminal and nonterminal nodes, represents a word, with dependency connections to other nodes (Socher et al., 2014; Iyyer et al., 2014). The resultant model is known as dependency-tree RNN (DT-RNN). An advantage of using dependency tree over the other is the ability to extract word-level representations considering syntactic relations and semantic robustness. Therefore, we adopt DT-RNN in this work."}, {"heading": "3 Problem Statement", "text": "Suppose that we are given a training set of customer reviews in a specific domain, denoted by S= {s1, ..., sN}, where N is the number of review sentences. For any si\u2208S, there may exist a set of aspect terms Ai = {ai1, ..., ail}, where each aij \u2208 Ai can be a single word or a sequence of words expressing explicitly some aspect of an entity, and a set of opinion terms Oi = {oi1, ..., oim}, where each oir can be a single word or a sequence of words expressing the subjective sentiment of the comment holder. The task is to learn a classifier to extract the set of aspect terms Ai and the set of opinion terms Oi from each review sentence si\u2208S.\nThis task can be formulated as a sequence tagging problem by using the BIO encoding scheme. Specifically, each review sentence si is composed of a sequence of words si = {wi1, ..., wini}. Each word wip \u2208 si is labeled as one out of the following 5 classes: \u201cBA\u201d (beginning of aspect), \u201cIA\u201d (inside of aspect), \u201cBO\u201d (beginning of opinion), \u201cIO\u201d (inside of opinion), and \u201cO\u201d (others). Let L = {BA, IA,BO, IO,O}. We are also given a test set of review sentences denoted by S\u2032 = {s\u20321, ..., s \u2032 N \u2032}, where N \u2032 is the number of test reviews. For each test review s\u2032i \u2208 S\n\u2032, our objective is to predict the class label y\u2032iq \u2208 L for each word w \u2032 iq. Note that a sequence of predictions with \u201cBA\u201d at the beginning followed by \u201cIA\u201d are indication of one aspect, which is similar for opinion terms.2"}, {"heading": "4 Recursive Neural CRFs", "text": "As described in Section 1, RNCRF consists of two main components: 1) a DT-RNN to learn a highlevel representation for each word in a sentence, and 2) a CRF to take the learned representation as input to capture context around each word for explicit aspect and opinion terms extraction. Next, We present these two components in details."}, {"heading": "4.1 Dependency-Tree RNNs", "text": "We begin by associating each word w in our vocabulary with a feature vector x \u2208 Rd, which corresponds to a column of a word embedding matrix We \u2208 R\nd\u00d7v, where v is the size of the vocabulary. For each sentence, we build a DT-RNN based on the corresponding dependency parse tree with word embeddings as initialization. An example of the dependency parse tree is shown in Figure 1(a), where each edge starts from the parent and points to its dependent with a syntactic relation.\nIn a DT-RNN, each node n, including leaf nodes, internal nodes and the root node, in a specific sentence is associated with a word w, an input feature vector xw, and a hidden vector hn\u2208Rd of the same dimension as xw. Each dependency relation r is associated with a separate matrix Wr\u2208Rd\u00d7d. In addi-\n2In this work we focus on extraction of aspect and opinion terms, not polarity predictions on opinion terms. Polarity prediction can be done by either post-processing on the extracted opinion terms or redefining the BIO labels by encoding the polarity information.\ntion, a common transformation matrix Wv\u2208Rd\u00d7d is introduced to map the word embedding xw at node n to its corresponding hidden vector hn.\nAlong with a particular dependency tree, a hidden vector hn is computed from its own word embedding xw at node n with the transformation matrix Wv and its children\u2019s hidden vectors hchild(n) with the corresponding relation matrices {Wr}\u2019s. For instance, given the parse tree shown in Figure 1(a), we first compute the leaf nodes associated with the words I and the using Wv as follows,\nhI = f(Wv \u00b7 xI + b),\nhthe = f(Wv \u00b7 xthe + b),\nwhere f is a nonlinear activation function and b is a bias term. In this paper, we adopt tanh(\u00b7) as the activation function. Once the hidden vectors of all the leaf nodes are generated, we can recursively generate hidden vectors for interior nodes using the corresponding relation matrix Wr and the common transformation matrix Wv as follows,\nhfood = f(Wv \u00b7 xfood +WDET \u00b7 hthe + b),\nhlike = f(Wv \u00b7 xlike +WDOBJ \u00b7 hfood +WNSUBJ \u00b7 hI + b).\nThe resultant DT-RNN is shown in Figure 1(b). In general, a hidden vector for any node n associated with a word vector xw can be computed as follows,\nhn = f\n\nWv \u00b7 xw + b+ \u2211\nk\u2208Kn\nWrnk \u00b7 hk\n\n , (1)\nwhere Kn denotes the set of children of node n, rnk denotes the dependency relation between node n and its child node k, and hk is the hidden vector of the child node k. The parameters of DT-RNN,\u0398RNN= {Wv,Wr,We, b}, are learned during training."}, {"heading": "4.2 Integration with CRFs", "text": "CRFs are a discriminant graphical model for structured prediction. In RNCRF, we feed the output of DT-RNN, i.e., the hidden representation of each word in a sentence, to a CRF. Updates of parameters for RNCRF are carried out successively from the top to bottom, by propagating errors through CRF to the hidden layers of RNN (including word embeddings) using backpropagation through structure (BPTS) (Goller and Ku\u0308chler, 1996).\nFormally, for each sentence si, we denote the input for CRF by hi, which is generated by DT-RNN. Here hi is a matrix with columns of hidden vectors {hi1, ..., hini} to represent a sequence of words {wi1, ..., wini} in a sentence si. The model computes a structured output yi = {yi1, ..., yini} \u2208 Y, where Y is a set of possible combinations of labels in label set L. The entire structure can be represented by an undirected graph G = (V,E) with cliques c \u2208 C . In this paper, we employed linear-chain CRF, which has two different cliques: unary clique (U) representing input-output connection, and pairwise clique (P) representing adjacent output connection, as shown in Figure 1(c). During inference, the model aims to output y\u0302 with the maximum conditional probability p(y|h). (We drop the subscript i here for simplicity.) The probability is computed from potential outputs of the cliques:\np(y|h) = 1\nZ(h)\n\u220f\nc\u2208C\n\u03c8c(h,yc), (2)\nwhere Z(h) is the normalization term, and \u03c8c(h,yc) is the potential of clique c, computed as \u03c8c(h,yc) = exp \u3008Wc, F (h,yc)\u3009, where the RHS is the exponential of a linear combination of feature vector F (h,yc) for clique c, and the weight vector Wc is tied for unary and pairwise cliques. We also\nincorporate a context window of size 2T +1 when computing unary potentials. Thus, the potential of unary clique at node k can be written as\n\u03c8U (h, yk) = exp\n(\n(W0)yk \u00b7hk + T \u2211\nt=1\n(W\u2212t)yk \u00b7hk\u2212t\n+ T \u2211\nt=1\n(W+t)yk \u00b7 hk+t\n)\n, (3)\nwhere W0, W+t and W\u2212t are weight matrices of the CRF for the current position, the t-th position to the right, and the t-th position to the left within context window, respectively. The subscript yk indicates the corresponding row in the weight matrix.\nFor instance, Figure 2 shows an example of window size 3. At the second position, the input features for like are composed of the hidden vectors at position 1 (hI), position 2 (hlike) and position 3 (hthe). Therefore, the conditional distribution for the entire sequence y in Figure 1(c) can be calculated as\np(y|h)= 1\nZ(h) exp\n(\n4 \u2211\nk=1\n(W0)yk \u00b7hk+\n4 \u2211\nk=2\n(W \u22121)yk \u00b7hk\u22121\n+\n3 \u2211\nk=1\n(W+1)yk \u00b7hk+1+\n3 \u2211\nk=1\nVyk,yk+1\n)\n,\nwhere the first three terms in the exponential of the RHS consider unary clique while the last term considers the pairwise clique with matrix V representing pairwise state transition score. For simplicity in description on parameter updates, we denote the log-potential for clique c \u2208 {U,P} by gc(h,yc) = \u3008Wc, F (h,yc)\u3009."}, {"heading": "4.3 Joint Training for RNCRF", "text": "Through the objective of maximum likelihood, updates for parameters of RNCRF are first conducted on the parameters of the CRF (unary weight matrices \u0398U = {W0,W+t,W\u2212t} and pairwise weight matrix V ) by applying chain rule to log-potential updates. Below is the gradient for \u0398U (updates for\nV are similar through the log-potential of pairwise clique gP (y\u2032k, y \u2032 k+1)):\n\u25b3\u0398U = \u2202 \u2212 log p(y|h)\n\u2202gU (h, y \u2032 k)\n\u00b7 \u2202gU (h, y\n\u2032 k)\n\u2202\u0398U , (4)\nwhere\n\u2202 \u2212 log p(y|h)\n\u2202gU (h, y\u2032k) = \u2212(1yk=y\u2032k \u2212 p(y\n\u2032 k|h)), (5)\nand y\u2032k represents possible label configuration of node k. The hidden representations of each word and the parameters of DT-RNN are updated subsequently by applying chain rule with (5) through BPTS as follows,\n\u25b3hroot = \u2202 \u2212 log p(y|h)\n\u2202gU (h, y \u2032 root)\n\u00b7 \u2202gU (h, y \u2032 root)\n\u2202hroot , (6)\n\u25b3hk 6=root = \u2202 \u2212 log p(y|h) \u2202gU (h, y\u2032k) \u00b7 \u2202gU (h, y\n\u2032 k)\n\u2202hk\n+\u25b3hpar(k) \u00b7 \u2202hpar(k) \u2202hk , (7)\n\u25b3\u0398RNN = K \u2211\nk=1\n\u2202 \u2212 log p(y|h)\n\u2202hk \u00b7\n\u2202hk\n\u2202\u0398RNN , (8)\nwhere hroot represents the hidden vector of the word pointed by ROOT in the corresponding DT-RNN. Since this word is the topmost node in the tree, it only inherits error from the CRF output. In (7), hpar(k) denotes the hidden vector of the parent node of node k in DT-RNN. Hence the lower nodes receive error from both the CRF output and error propagation from parent node. The parameters within DT-RNN, \u0398RNN, are updated by applying chain rule with respect to updates of hidden vectors, and aggregating among all associated nodes, as shown in (8). The overall procedure of RNCRF is summarized in Algorithm 1."}, {"heading": "5 Discussion", "text": "The best performing system (Toh and Wang, 2014) for SemEval challenge 2014 task 4 (subtask 1) employed CRFs with extensive hand-crafted features including those induced from dependency trees. However, their experiments showed that the addition of the features induced from dependency relations does not improve the performance. This indicates the infeasibility or difficulty of incorporating dependency structure explicitly as input features,\nAlgorithm 1 Recursive Neural CRFs Input: A set of customer review sequences: S = {s1, ..., sN}, and feature vectors of d dimensions for each word {xw}\u2019s, window size T for CRFs Output: Parameters: \u0398= {\n\u0398RNN,\u0398U , V }\nInitialization: Initialize We using word2vec. Initialize Wv and {Wr}\u2019s randomly with uniform distribution between [\n\u2212 \u221a\n6\u221a 2d+1\n, \u221a\n6\u221a 2d+1\n]\n. Initialize W0, {W+t}\u2019s, {W\u2212t}\u2019s, V ,\nand b with all 0\u2019s for each sentence si do\n1: Use DT-RNN (1) to generate hi 2: Compute p(yi|hi) using (2) 3: Use the backpropagation algorithm to update parameters \u0398 through (4)-(8)\nend for\nwhich motivates the design of our model to use DTRNN to encode dependency between words for feature learning. The most important advantage of RNCRF is the ability to learn the underlying dual propagation between aspect and opinion terms from the tree structure itself. Specifically as shown in Figure 1(c), where the aspect is food and the opinion expression is like. In the dependency tree, food depends on like with the relation DOBJ. During training, RNCRF computes the hidden vector hlike for like, which is also obtained from hfood. As a result, the prediction for like is affected by hfood. This is one-way propagation from food to like. During backpropagation, the error for like is propagated through a top-down manner to revise the representation hfood. This is the other-way propagation from like to food. Therefore, the dependency structure together with the learning approach help to enforce the dual propagation of aspect-opinion pairs as long as the dependency relation exists, either directly or indirectly."}, {"heading": "5.1 Adding Linguistic/Lexicon Features", "text": "RNCRF is an end-to-end model, where feature engineering is not necessary. However, it is flexible to incorporate light hand-crafted features into RNCRF to further boost its performance, such as features with POS tags, name-list, or sentiment lexicon. These features could be appended to the hidden vector of each word, but keep fixed during training, unlike learnable neural inputs and the CRF weights as described in Section 4.3. As will be shown in experiments, RNCRF without any hand-crafted features\nslightly outperforms the best performing systems that involve heavy feature engineering efforts, and RNCRF with light feature engineering can achieve better performance."}, {"heading": "6 Experiment", "text": ""}, {"heading": "6.1 Dataset and Experimental Setup", "text": "We evaluate our model on the dataset from SemEval Challenge 2014 task 4 (subtask 1), which includes reviews from two domains: restaurant and laptop reviews3. The detailed description of the dataset is given in Table 1. As the original dataset only includes manually annotate labels for aspect terms but not for opinion terms, we manually annotated opinion terms for each sentence by ourselves to facilitate our experiments.\nFor word vector initialization, we train word embeddings with word2vec (Mikolov et al., 2013) on the Yelp Challenge dataset4 for the restaurant domain and on the Amazon reviews5 (McAuley et al., 2015) for the laptop domain. The Yelp dataset contains 2.2M restaurant reviews with 54K vocabulary size. For the Amazon reviews, we only extracted the electronic domain that contains 1M reviews with 590K vocabulary size. We vary different dimensions for word embeddings and chose 300 for both domains. Empirical sensitivity studies on different dimensions of word embeddings are also conducted. Dependency trees are generated using Stanford Dependency Parser (Klein and Manning, 2003). Regarding CRFs, we implement a linear-chain CRF using CRFSuite (Okazaki, 2007). Because of the relatively small size of training data and a large number of parameters, we perform pretraining on the parameters of DT-RNN with cross-entropy\n3Experiments with more publicly available datasets, e.g. restaurant review dataset from SemEval Challenge 2015 task 12 will be conducted in our future work.\n4http://www.yelp.com/dataset challenge 5http://jmcauley.ucsd.edu/data/amazon/links.html\nerror, which is a common strategy for deep learning (Erhan et al., 2009). We implement mini-batch stochastic gradient descent (SGD) with a batch size of 25, and an adaptive learning rate (AdaGrad) initialized at 0.02 for pretraining of DT-RNN, which runs 4 epochs for the restaurant domain and 5 epochs for the laptop domain. For parameter learning of the joint model RNCRF, we implement SGD with a decaying learning rate initialized at 0.02. We also try with varying context window size, and use 3 for the laptop domain and 5 for the restaurant domain, respectively. All parameters are chosen by cross validation.\nAs discussed in Section 5.1, hand-crafted features can be easily incorporated into RNCRF. We generate three types of simple features based on POS tags, name-list and sentiment lexicon to show further improvement by incorporating these features. Following (Toh and Wang, 2014), we extract two sets of name list from the training data for each domain, where one includes high-frequency aspect terms, and the other includes high-probability aspect words. These two sets are used to construct two lexicon features, i.e. we build a 2D binary vector: if a word is in a set, the corresponding value is 1, otherwise 0. For POS tags, we use Stanford POS tagger (Toutanova et al., 2003), and convert them to universal POS tags that have 15 different categories. We then generate 15 one-hot POS tag features. For sentiment lexicon, we use the collection of commonly used opinion words (around 6,800) (Hu and Liu, 2004a). Similar to name list, we create a binary feature to indicate whether the word belongs to opinion lexicon. We denote by RNCRF+F the proposed model with the three types of features.\nCompared to the winning systems of SemEval Challenge 2014 task 4 (subtask 1), RNCRF or RNCRF+F uses additional labels of opinion terms for training. Therefore, to conduct fair comparison experiments with the winning systems, we implement RNCRF-O by omitting opinion labels to train our model (i.e., labels become \u201cBA\u201d, \u201cIA\u201d, \u201cO\u201d). Accordingly, we denote by RNCRF-O+F the RNCRFO model with the three additional types of handcrafted features."}, {"heading": "6.2 Experimental Results", "text": "We compare our model with several baselines:\n\u2022 CRF-1: a linear-chain CRF with standard linguistic features including word string, stylistics, POS tag, context string, and context POS tags.\n\u2022 CRF-2: a linear-chain CRF with both standard linguistic features and dependency information including head word, dependency relations with parent token and child tokens.\n\u2022 LSTM: an LSTM network built on top of word embeddings proposed by (Liu et al., 2015). We keep original settings in (Liu et al., 2015) but replace their word embeddings with ours (300 dimension). We try different hidden layer dimensions (50, 100, 150, 200) and reported the best result with size 50.\n\u2022 LSTM+F: the above LSTM model with the three additional types of hand-crafted features as with RNCRF.\n\u2022 SemEval-1, SemEval-2: the top two winning systems for SemEval challenge 2014 task 4 (subtask 1).\n\u2022 WDEmb+B+CRF6: the model proposed by (Yin et al., 2016) using word and dependency path embeddings combined with linear context embedding features, dependency context embedding features and hand-crafted features (i.e., feature engineering) as CRF input.\nThe comparison results are shown in Table 2 for both the restaurant domain and the laptop domain. Note that we provide the same annotated dataset (both aspect labels and opinion labels are included for training) for CRF-1, CRF-2 and LSTM for fair comparison. It is clear that our proposed model RNCRF achieves superior performance compared with most of the baseline models. The performance is even better by adding simple hand-crafted features, i.e., RNCRF+F, with 0.92% and 3.87% absolute improvement over the best system in the challenge for aspect\n6We report the best results from the original paper (Yin et al., 2016).\nextraction for the restaurant domain and the laptop domain, respectively. This shows the advantage of combining high-level continuous features and discrete hand-crafted features. Though CRFs usually show promising results in sequence tagging problems, they fail to achieve comparable performance when lacking of extensive features (e.g., CRF-1). By adding dependency information explicitly in CRF2, the result only improves slightly for aspect extraction. Alternatively, by incorporating dependency information into a deep learning model (e.g., RNCRF), the result shows more than 7% improvement for aspect extraction and 2% for opinion extraction.\nBy removing the labels for opinion terms, RNCRF-O produces inferior results than RNCRF because the effect of dual propagation of aspect and opinion pairs disappears with the absence of opinion labels. This verifies our previous assumption that DT-RNN could learn the interactive effects within aspects and opinions. However, the performance of RNCRF-O is still comparable to the top systems and even better with the addition of simple linguistic features: 0.24% and 2.71% superior than the best system in the challenge for the restaurant domain and the laptop domain, respectively. This shows the robustness of our model even without additional opinion labels.\nLSTM has shown comparable results for aspect extraction (Liu et al., 2015). However, in their work, they used well-pretrained word embeddings by training with large corpus or extensive external resources, e.g. chunking, and NER. To compare their model with RNCRF, we re-implement LSTM\nwith the same word embedding strategy and labeling resources as ours. The results show that our model outperforms LSTM in aspect extraction by 2.90% and 4.10% for the restaurant domain and the laptop domain, respectively. We conclude that a standard LSTM model fails to extract the relations between aspect and opinion terms. Even with the addition of same linguistic features, LSTM is still inferior than RNCRF itself in terms of aspect extraction. Moreover, our result is comparable with WDEmb+B+CRF in the restaurant domain and better in the laptop domain (+3.26%). Note that WDEmb+B+CRF appended dependency context information into CRF while our model encode such information into high-level representation learning.\nTo test the impact of each component of RNCRF and the three types of hand-crafted features, we conduct experiments on different model settings:\n\u2022 DT-RNN+SoftMax: rather than using a CRF, a softmax classifier is used on top of DT-RNN.\n\u2022 CRF+word2vec: a linear-chain CRF with word embeddings only without using DT-RNN.\n\u2022 RNCRF+POS/NL/Lex: the RNCRF model with POS tag or name list or sentiment lexicon feature(s).\nThe comparison results are shown in Table 3. Similarly, both aspect and opinion term labels are provided for training for each of the above models. Firstly, RNCRF achieves much better results compared to DT-RNN+SoftMax (+11.60% and +10.72% for the restaurant domain and the laptop domain in aspect extraction). This is because DT-RNN fails to fully exploit context information for sequence labeling, which, in contrast, can be\nachieved by CRF. Secondly, RNCRF outperforms CRF+word2vec, which proves the importance of DT-RNN for modeling interactions between aspects and opinions. Hence, the combination of DT-RNN and CRF inherits the advantages from both models. Moreover, by separately adding hand-crafted features, we can observe that name-list based features and the sentiment lexicon feature are most effective for aspect extraction and opinion extraction, respectively. This may be explained by the fact that name-list based features usually contain informative evident for aspect terms and sentiment lexicon provides explicit indication about opinions.\nBesides the comparison experiments, we also conduct sensitivity test for our proposed model in terms of word vector dimensions. We tested a set of different dimensions ranging from 25 to 400, with 25 increment. The sensitivity plot is shown in Figure 3. The performance for aspect extraction is smooth with different vector lengths for both domains. For restaurant domain, the result is stable when dimension is larger than or equal to 100, with\nthe highest at 325. For the laptop domain, the best result is at dimension 300, but with relatively small variations. For opinion extraction, the performance reaches a good level when the dimension is larger than or equal to 75 for the restaurant domain and 125 for the laptop domain. This proves the stability and robustness of our model."}, {"heading": "7 Conclusion", "text": "We have presented a joint model, RNCRF, that achieves the state-of-the-art performance for explicit aspect and opinion term extraction on a benchmark dataset. With the help of DT-RNN, high-level features can be learned by encoding the underlying dual propagation of aspect-opinion pairs. RNCRF combines the advantages of DT-RNNs and CRFs, and thus outperforms the traditional rule-based methods in terms of flexibility, because aspect terms and opinion terms are not only restricted to certain observed relations and POS tags. Compared to feature engineering methods with CRFs, the proposed model saves much effort in composing features, and it is able to extract higher-level features obtained from non-linear transformations."}, {"heading": "Acknowledgements", "text": "This research is partially funded by the Economic Development Board and the National Research Foundation of Singapore. Sinno J. Pan thanks the support from Fuji Xerox Corporation through joint research on Multilingual Semantic Analysis and the NTU Singapore Nanyang Assistant Professorship (NAP) grant M4081532.020."}], "references": [{"title": "Adaptive recursive neural network for target-dependent twitter sentiment classification", "author": ["Dong et al.2014] Li Dong", "Furu Wei", "Chuanqi Tan", "Duyu Tang", "Ming Zhou", "Ke Xu"], "venue": "In ACL,", "citeRegEx": "Dong et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Dong et al\\.", "year": 2014}, {"title": "The difficulty of training deep architectures and the effect of unsupervised pre-training", "author": ["Erhan et al.2009] Dumitru Erhan", "Pierre-Antoine Manzagol", "Yoshua Bengio", "Samy Bengio", "Pascal Vincent"], "venue": "In AISTATS,", "citeRegEx": "Erhan et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Erhan et al\\.", "year": 2009}, {"title": "Domain adaptation for largescale sentiment classification: A deep learning approach", "author": ["Glorot et al.2011] Xavier Glorot", "Antoine Bordes", "Yoshua Bengio"], "venue": "In ICML,", "citeRegEx": "Glorot et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Glorot et al\\.", "year": 2011}, {"title": "Learning task-dependent distributed representations by backpropagation through structure", "author": ["Goller", "K\u00fcchler1996] Christoph Goller", "Andreas K\u00fcchler"], "venue": "In ICNN,", "citeRegEx": "Goller et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Goller et al\\.", "year": 1996}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural Computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Mining and summarizing customer reviews", "author": ["Hu", "Liu2004a] Minqing Hu", "Bing Liu"], "venue": "In KDD,", "citeRegEx": "Hu et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2004}, {"title": "Mining opinion features in customer reviews", "author": ["Hu", "Liu2004b] Minqing Hu", "Bing Liu"], "venue": "In AAAI,", "citeRegEx": "Hu et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2004}, {"title": "Opinion mining with deep recurrent neural networks", "author": ["\u0130rsoy", "Cardie2014] Ozan \u0130rsoy", "Claire Cardie"], "venue": "In EMNLP,", "citeRegEx": "\u0130rsoy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "\u0130rsoy et al\\.", "year": 2014}, {"title": "A neural network for factoid question answering over paragraphs", "author": ["Iyyer et al.2014] Mohit Iyyer", "Jordan L. Boyd-Graber", "Leonardo Max Batista Claudino", "Richard Socher", "Hal Daum\u00e9 III"], "venue": null, "citeRegEx": "Iyyer et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Iyyer et al\\.", "year": 2014}, {"title": "Extracting opinion targets in a single- and cross-domain setting with conditional random fields", "author": ["Jakob", "Gurevych2010] Niklas Jakob", "Iryna Gurevych"], "venue": "In EMNLP,", "citeRegEx": "Jakob et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Jakob et al\\.", "year": 2010}, {"title": "A novel lexicalized hmm-based learning framework for web opinion mining", "author": ["Jin", "Ho2009] Wei Jin", "Hung Hay Ho"], "venue": "In ICML,", "citeRegEx": "Jin et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Jin et al\\.", "year": 2009}, {"title": "A convolutional neural network for modelling sentences", "author": ["Edward Grefenstette", "Phil Blunsom"], "venue": "In ACL,", "citeRegEx": "Kalchbrenner et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2014}, {"title": "Convolutional neural networks for sentence classification", "author": ["Yoon Kim"], "venue": "In EMNLP,", "citeRegEx": "Kim.,? \\Q2014\\E", "shortCiteRegEx": "Kim.", "year": 2014}, {"title": "Accurate unlexicalized parsing", "author": ["Klein", "Manning2003] Dan Klein", "Christopher D. Manning"], "venue": "In ACL,", "citeRegEx": "Klein et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Klein et al\\.", "year": 2003}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["Andrew McCallum", "Fernando C.N. Pereira"], "venue": null, "citeRegEx": "Lafferty et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Lafferty et al\\.", "year": 2001}, {"title": "Aspect specific sentiment analysis using hierarchical deep learning", "author": ["Richard Socher", "Christopher D. Manning"], "venue": "In NIPS Workshop on Deep Learning and Representation Learning", "citeRegEx": "Lakkaraju et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Lakkaraju et al\\.", "year": 2014}, {"title": "Distributed representations of sentences and documents", "author": ["Le", "Mikolov2014] Quoc V. Le", "Tomas Mikolov"], "venue": "In ICML,", "citeRegEx": "Le et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Le et al\\.", "year": 2014}, {"title": "Structure-aware review mining and summarization", "author": ["Li et al.2010] Fangtao Li", "Chao Han", "Minlie Huang", "Xiaoyan Zhu", "Ying-Ju Xia", "Shu Zhang", "Hao Yu"], "venue": "In COLING,", "citeRegEx": "Li et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Li et al\\.", "year": 2010}, {"title": "Opinion target extraction using word-based translation model", "author": ["Kang Liu", "Liheng Xu", "Jun Zhao"], "venue": "In EMNLP-CoNLL,", "citeRegEx": "Liu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2012}, {"title": "Opinion target extraction using partially-supervised word alignment model", "author": ["Liu et al.2013a] Kang Liu", "Liheng Xu", "Yang Liu", "Jun Zhao"], "venue": "In IJCAI,", "citeRegEx": "Liu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2013}, {"title": "A logic programming approach to aspect extraction in opinion mining", "author": ["Liu et al.2013b] Qian Liu", "Zhiqiang Gao", "Bing Liu", "Yuanlin Zhang"], "venue": "In WI,", "citeRegEx": "Liu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2013}, {"title": "Fine-grained opinion mining with recurrent neural networks and word embeddings", "author": ["Liu et al.2015] Pengfei Liu", "Shafiq Joty", "Helen Meng"], "venue": "In EMNLP,", "citeRegEx": "Liu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2015}, {"title": "Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data", "author": ["Bing Liu"], "venue": "Second Edition. Data-Centric Systems and Applications. Springer", "citeRegEx": "Liu.,? \\Q2011\\E", "shortCiteRegEx": "Liu.", "year": 2011}, {"title": "Automatic construction of a context-aware sentiment lexicon: An optimization approach", "author": ["Lu et al.2011] Yue Lu", "Malu Castellanos", "Umeshwar Dayal", "ChengXiang Zhai"], "venue": "In WWW,", "citeRegEx": "Lu et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Lu et al\\.", "year": 2011}, {"title": "Opinion target extraction in chinese news comments", "author": ["Ma", "Wan2010] Tengfei Ma", "Xiaojun Wan"], "venue": "In COLING,", "citeRegEx": "Ma et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ma et al\\.", "year": 2010}, {"title": "Learning attitudes and attributes from multi-aspect reviews", "author": ["Jure Leskovec", "Dan Jurafsky"], "venue": "In ICDM,", "citeRegEx": "McAuley et al\\.,? \\Q2012\\E", "shortCiteRegEx": "McAuley et al\\.", "year": 2012}, {"title": "Image-based recommendations on styles and substitutes", "author": ["Christopher Targett", "Qinfeng Shi", "Anton van den Hengel"], "venue": "In SIGIR,", "citeRegEx": "McAuley et al\\.,? \\Q2015\\E", "shortCiteRegEx": "McAuley et al\\.", "year": 2015}, {"title": "Efficient estimation of word representations in vector space. CoRR, abs/1301.3781", "author": ["Kai Chen", "Greg Corrado", "Jeffrey Dean"], "venue": null, "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Unsupervised commonsense knowledge enrichment for domain-specific sentiment analysis", "author": ["Ofek et al.2016] Nir Ofek", "Soujanya Poria", "Lior Rokach", "Erik Cambria", "Amir Hussain", "Asaf Shabtai"], "venue": "Cognitive Computation,", "citeRegEx": "Ofek et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ofek et al\\.", "year": 2016}, {"title": "Crfsuite: a fast implementation of conditional random fields (CRFs). http://www.chokkan.org/software/crfsuite", "author": ["Naoaki Okazaki"], "venue": null, "citeRegEx": "Okazaki.,? \\Q2007\\E", "shortCiteRegEx": "Okazaki.", "year": 2007}, {"title": "Opinion mining and sentiment analysis", "author": ["Pang", "Lee2008] Bo Pang", "Lillian Lee"], "venue": "Foundations and Trends in Information Retrieval,", "citeRegEx": "Pang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Pang et al\\.", "year": 2008}, {"title": "Extracting product features and opinions from reviews", "author": ["Popescu", "Etzioni2005] Ana-Maria Popescu", "Oren Etzioni"], "venue": "In EMNLP,", "citeRegEx": "Popescu et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Popescu et al\\.", "year": 2005}, {"title": "Opinion word expansion and target extraction through double propagation", "author": ["Qiu et al.2011] Guang Qiu", "Bing Liu", "Jiajun Bu", "Chun Chen"], "venue": null, "citeRegEx": "Qiu et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Qiu et al\\.", "year": 2011}, {"title": "Learning Continuous Phrase Representations and Syntactic Parsing with Recursive Neural Networks", "author": ["Christopher D. Manning", "Andrew Y. Ng"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2010}, {"title": "Parsing natural scenes and natural language with recursive neural networks", "author": ["Cliff C. Lin", "Andrew Y. Ng", "Christopher D. Manning"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2011}, {"title": "Semi-Supervised Recursive Autoencoders for Predicting Sentiment Distributions", "author": ["Jeffrey Pennington", "Eric H. Huang", "Andrew Y. Ng", "Christopher D. Manning"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2011}, {"title": "Semantic Compositionality Through Recursive Matrix-Vector Spaces", "author": ["Brody Huval", "Christopher D. Manning", "Andrew Y. Ng"], "venue": "In EMNLP,", "citeRegEx": "Socher et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2012}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D. Manning", "Andrew Y. Ng", "Christopher Potts"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Grounded compositional semantics for finding and describing images with sentences", "author": ["Andrej Karpathy", "Quoc V. Le", "Christopher D. Manning", "Andrew Y. Ng"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2014}, {"title": "Target-dependent sentiment classification with long short term memory. CoRR, abs/1512.01100", "author": ["Tang et al.2015] Duyu Tang", "Bing Qin", "Xiaocheng Feng", "Ting Liu"], "venue": null, "citeRegEx": "Tang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2015}, {"title": "A joint model of text and aspect ratings for sentiment summarization", "author": ["Titov", "McDonald2008] Ivan Titov", "Ryan T. McDonald"], "venue": "In ACL,", "citeRegEx": "Titov et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Titov et al\\.", "year": 2008}, {"title": "Dlirec: Aspect term extraction and term polarity classification system", "author": ["Toh", "Wang2014] Zhiqiang Toh", "Wenting Wang"], "venue": "In SemEval,", "citeRegEx": "Toh et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Toh et al\\.", "year": 2014}, {"title": "Feature-rich part-of-speech tagging with a cyclic dependency network", "author": ["Dan Klein", "Christopher D. Manning", "Yoram Singer"], "venue": "In NAACL,", "citeRegEx": "Toutanova et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Toutanova et al\\.", "year": 2003}, {"title": "A sentiment-aligned topic model for product aspect rating prediction", "author": ["Wang", "Ester2014] Hao Wang", "Martin Ester"], "venue": "In EMNLP,", "citeRegEx": "Wang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2014}, {"title": "Latent aspect rating analysis without aspect keyword supervision", "author": ["Wang et al.2011] Hongning Wang", "Yue Lu", "ChengXiang Zhai"], "venue": "In KDD,", "citeRegEx": "Wang et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2011}, {"title": "Structured training for neural network transition-based parsing", "author": ["Weiss et al.2015] David Weiss", "Chris Alberti", "Michael Collins", "Slav Petrov"], "venue": "In ACLIJCNLP,", "citeRegEx": "Weiss et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Weiss et al\\.", "year": 2015}, {"title": "Phrase dependency parsing for opinion mining", "author": ["Wu et al.2009] Yuanbin Wu", "Qi Zhang", "Xuanjing Huang", "Lide Wu"], "venue": "In EMNLP,", "citeRegEx": "Wu et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2009}, {"title": "Unsupervised word and dependency path embeddings for aspect term extraction", "author": ["Yin et al.2016] Yichun Yin", "Furu Wei", "Li Dong", "Kaimeng Xu", "Ming Zhang", "Ming Zhou"], "venue": "In IJCAI,", "citeRegEx": "Yin et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Yin et al\\.", "year": 2016}, {"title": "Extracting and ranking product features in opinion documents", "author": ["Zhang et al.2010] Lei Zhang", "Bing Liu", "Suk Hwan Lim", "Eamonn O\u2019Brien-Strain"], "venue": "In COLING,", "citeRegEx": "Zhang et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2010}, {"title": "Movie review mining and summarization", "author": ["Zhuang et al.2006] Li Zhuang", "Feng Jing", "Xiao-Yan Zhu"], "venue": "In CIKM,", "citeRegEx": "Zhuang et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Zhuang et al\\.", "year": 2006}], "referenceMentions": [{"referenceID": 22, "context": "Aspect-based sentiment analysis (Pang and Lee, 2008; Liu, 2011) aims to extract important information, e.", "startOffset": 32, "endOffset": 63}, {"referenceID": 49, "context": "This task was first studied by Hu and Liu (2004a; 2004b), followed by (Popescu and Etzioni, 2005; Zhuang et al., 2006; Zhang et al., 2010; Qiu et al., 2011; Li et al., 2010).", "startOffset": 70, "endOffset": 173}, {"referenceID": 48, "context": "This task was first studied by Hu and Liu (2004a; 2004b), followed by (Popescu and Etzioni, 2005; Zhuang et al., 2006; Zhang et al., 2010; Qiu et al., 2011; Li et al., 2010).", "startOffset": 70, "endOffset": 173}, {"referenceID": 32, "context": "This task was first studied by Hu and Liu (2004a; 2004b), followed by (Popescu and Etzioni, 2005; Zhuang et al., 2006; Zhang et al., 2010; Qiu et al., 2011; Li et al., 2010).", "startOffset": 70, "endOffset": 173}, {"referenceID": 17, "context": "This task was first studied by Hu and Liu (2004a; 2004b), followed by (Popescu and Etzioni, 2005; Zhuang et al., 2006; Zhang et al., 2010; Qiu et al., 2011; Li et al., 2010).", "startOffset": 70, "endOffset": 173}, {"referenceID": 32, "context": "Among previous work, one of the approaches is to accumulate aspect and opinion terms from a seed collection without label information, by utilizing syntactic rules or modification relations between them (Qiu et al., 2011; Liu et al., 2013b).", "startOffset": 203, "endOffset": 240}, {"referenceID": 17, "context": "Another approach focuses on feature engineering based on predefined lexicons, syntactic analysis, etc (Jin and Ho, 2009; Li et al., 2010).", "startOffset": 102, "endOffset": 137}, {"referenceID": 33, "context": "The first component is to construct a recursive neural network (RNN)1 (Socher et al., 2010) based on a dependency tree of each sentence.", "startOffset": 70, "endOffset": 91}, {"referenceID": 14, "context": "The output of the RNN is then fed into a Conditional Random Field (CRF) (Lafferty et al., 2001)", "startOffset": 72, "endOffset": 95}, {"referenceID": 46, "context": "In follow-up work, syntactic relations are further exploited for aspect/opinion extraction (Popescu and Etzioni, 2005; Wu et al., 2009; Qiu et al., 2011).", "startOffset": 91, "endOffset": 153}, {"referenceID": 32, "context": "In follow-up work, syntactic relations are further exploited for aspect/opinion extraction (Popescu and Etzioni, 2005; Wu et al., 2009; Qiu et al., 2011).", "startOffset": 91, "endOffset": 153}, {"referenceID": 18, "context": "Another direction is to use word alignment model to capture opinion relations among a sentence (Liu et al., 2012; Liu et al., 2013a).", "startOffset": 95, "endOffset": 132}, {"referenceID": 15, "context": "Besides explicit aspects and opinions extraction, there are also other lines of research related to aspect-based sentiment analysis, including aspect classification (Lakkaraju et al., 2014; McAuley et al., 2012), aspect rating (Titov and McDonald, 2008; Wang et al.", "startOffset": 165, "endOffset": 211}, {"referenceID": 25, "context": "Besides explicit aspects and opinions extraction, there are also other lines of research related to aspect-based sentiment analysis, including aspect classification (Lakkaraju et al., 2014; McAuley et al., 2012), aspect rating (Titov and McDonald, 2008; Wang et al.", "startOffset": 165, "endOffset": 211}, {"referenceID": 44, "context": ", 2012), aspect rating (Titov and McDonald, 2008; Wang et al., 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al.", "startOffset": 23, "endOffset": 90}, {"referenceID": 23, "context": ", 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al., 2011; Ofek et al., 2016; Dong et al., 2014; Tang et al., 2015).", "startOffset": 92, "endOffset": 166}, {"referenceID": 28, "context": ", 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al., 2011; Ofek et al., 2016; Dong et al., 2014; Tang et al., 2015).", "startOffset": 92, "endOffset": 166}, {"referenceID": 0, "context": ", 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al., 2011; Ofek et al., 2016; Dong et al., 2014; Tang et al., 2015).", "startOffset": 92, "endOffset": 166}, {"referenceID": 39, "context": ", 2011; Wang and Ester, 2014), domainspecific and target-dependent sentiment classification (Lu et al., 2011; Ofek et al., 2016; Dong et al., 2014; Tang et al., 2015).", "startOffset": 92, "endOffset": 166}, {"referenceID": 36, "context": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014).", "startOffset": 193, "endOffset": 338}, {"referenceID": 37, "context": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014).", "startOffset": 193, "endOffset": 338}, {"referenceID": 2, "context": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014).", "startOffset": 193, "endOffset": 338}, {"referenceID": 11, "context": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014).", "startOffset": 193, "endOffset": 338}, {"referenceID": 12, "context": "Recent studies have shown that deep learning models can automatically learn the inherent semantic and syntactic information from data and thus achieve better performance for sentiment analysis (Socher et al., 2011b; Socher et al., 2012; Socher et al., 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014).", "startOffset": 193, "endOffset": 338}, {"referenceID": 1, "context": ", 2013; Glorot et al., 2011; Kalchbrenner et al., 2014; Kim, 2014; Le and Mikolov, 2014). These methods generally belong to sentence-level or phrase/wordlevel sentiment polarity predictions. Regarding aspect-based sentiment analysis, Irsoy et al. (2014) applied deep recurrent neural networks for opinion expression extraction.", "startOffset": 8, "endOffset": 254}, {"referenceID": 0, "context": "Dong et al. (2014) proposed an adaptive recurrent neural network for target-dependent sentiment classification, where targets or aspects are given as input.", "startOffset": 0, "endOffset": 19}, {"referenceID": 0, "context": "Dong et al. (2014) proposed an adaptive recurrent neural network for target-dependent sentiment classification, where targets or aspects are given as input. Tang et al. (2015) used Long Short-Term Memory (LSTM) (Hochreiter and Schmidhuber, 1997) for the same task.", "startOffset": 0, "endOffset": 176}, {"referenceID": 21, "context": "To the best of our knowledge, the most related works to ours are (Liu et al., 2015; Yin et al., 2016).", "startOffset": 65, "endOffset": 101}, {"referenceID": 47, "context": "To the best of our knowledge, the most related works to ours are (Liu et al., 2015; Yin et al., 2016).", "startOffset": 65, "endOffset": 101}, {"referenceID": 18, "context": "To the best of our knowledge, the most related works to ours are (Liu et al., 2015; Yin et al., 2016). Liu et al. (2015) proposed to combine recurrent neural network and word embeddings to extract explicit aspects.", "startOffset": 66, "endOffset": 121}, {"referenceID": 18, "context": "To the best of our knowledge, the most related works to ours are (Liu et al., 2015; Yin et al., 2016). Liu et al. (2015) proposed to combine recurrent neural network and word embeddings to extract explicit aspects. However, the proposed model simply uses recurrent neural network on top of word embeddings, and thus its performance heavily depends on the quality of word embeddings. In addition, it fails to explicitly model dependency relations or compositionalities within certain syntactic structure in a sentence. Recently, Yin et al. (2016) proposed an unsupervised learning method to improve word embeddings using dependency path embeddings.", "startOffset": 66, "endOffset": 546}, {"referenceID": 47, "context": "Different from (Yin et al., 2016), our model does not focus on developing a new unsupervised word embedding methods, but encoding the information of dependency paths into RNN for constructing syntactically meaningful and discriminative hidden rep-", "startOffset": 15, "endOffset": 33}, {"referenceID": 47, "context": "Moreover, we integrate RNN and CRF into a unified framework, and develop a joint optimization approach, instead of training word embeddings and a CRF separately as in (Yin et al., 2016).", "startOffset": 167, "endOffset": 185}, {"referenceID": 45, "context": "Note that Weiss et al. (2015) proposed to combine deep learning and structured learning for language parsing which can be learned by structured perceptron.", "startOffset": 10, "endOffset": 30}, {"referenceID": 33, "context": "Among deep learning methods, RNN has shown promising results on various NLP tasks, such as learning phrase representations (Socher et al., 2010), sentence-level sentiment analysis (Socher et al.", "startOffset": 123, "endOffset": 144}, {"referenceID": 37, "context": ", 2010), sentence-level sentiment analysis (Socher et al., 2013), language parsing (Socher et al.", "startOffset": 43, "endOffset": 64}, {"referenceID": 8, "context": ", 2011a), and question answering (Iyyer et al., 2014).", "startOffset": 33, "endOffset": 53}, {"referenceID": 33, "context": "In a constituency tree, all the words lie at leaf nodes, each internal node represents a phrase or a constituent of a sentence, and the root node represents the entire sentence (Socher et al., 2010; Socher et al., 2012; Socher et al., 2013).", "startOffset": 177, "endOffset": 240}, {"referenceID": 36, "context": "In a constituency tree, all the words lie at leaf nodes, each internal node represents a phrase or a constituent of a sentence, and the root node represents the entire sentence (Socher et al., 2010; Socher et al., 2012; Socher et al., 2013).", "startOffset": 177, "endOffset": 240}, {"referenceID": 37, "context": "In a constituency tree, all the words lie at leaf nodes, each internal node represents a phrase or a constituent of a sentence, and the root node represents the entire sentence (Socher et al., 2010; Socher et al., 2012; Socher et al., 2013).", "startOffset": 177, "endOffset": 240}, {"referenceID": 38, "context": "In a dependency tree, each node including terminal and nonterminal nodes, represents a word, with dependency connections to other nodes (Socher et al., 2014; Iyyer et al., 2014).", "startOffset": 136, "endOffset": 177}, {"referenceID": 8, "context": "In a dependency tree, each node including terminal and nonterminal nodes, represents a word, with dependency connections to other nodes (Socher et al., 2014; Iyyer et al., 2014).", "startOffset": 136, "endOffset": 177}, {"referenceID": 27, "context": "For word vector initialization, we train word embeddings with word2vec (Mikolov et al., 2013) on the Yelp Challenge dataset4 for the restaurant domain and on the Amazon reviews5 (McAuley et al.", "startOffset": 71, "endOffset": 93}, {"referenceID": 26, "context": ", 2013) on the Yelp Challenge dataset4 for the restaurant domain and on the Amazon reviews5 (McAuley et al., 2015) for the laptop domain.", "startOffset": 92, "endOffset": 114}, {"referenceID": 29, "context": "Regarding CRFs, we implement a linear-chain CRF using CRFSuite (Okazaki, 2007).", "startOffset": 63, "endOffset": 78}, {"referenceID": 1, "context": "error, which is a common strategy for deep learning (Erhan et al., 2009).", "startOffset": 52, "endOffset": 72}, {"referenceID": 42, "context": "For POS tags, we use Stanford POS tagger (Toutanova et al., 2003), and convert them to universal POS tags that have 15 different categories.", "startOffset": 41, "endOffset": 65}, {"referenceID": 21, "context": "\u2022 LSTM: an LSTM network built on top of word embeddings proposed by (Liu et al., 2015).", "startOffset": 68, "endOffset": 86}, {"referenceID": 21, "context": "We keep original settings in (Liu et al., 2015) but replace their word embeddings with ours (300 dimension).", "startOffset": 29, "endOffset": 47}, {"referenceID": 47, "context": "\u2022 WDEmb+B+CRF6: the model proposed by (Yin et al., 2016) using word and dependency path embeddings combined with linear context embedding features, dependency context embedding features and hand-crafted features (i.", "startOffset": 38, "endOffset": 56}, {"referenceID": 47, "context": "We report the best results from the original paper (Yin et al., 2016).", "startOffset": 51, "endOffset": 69}, {"referenceID": 21, "context": "LSTM has shown comparable results for aspect extraction (Liu et al., 2015).", "startOffset": 56, "endOffset": 74}], "year": 2016, "abstractText": "In aspect-based sentiment analysis, extracting aspect terms along with the opinions being expressed from user-generated content is one of the most important subtasks. Previous studies have shown that exploiting connections between aspect and opinion terms is promising for this task. In this paper, we propose a novel joint model that integrates recursive neural networks and conditional random fields into a unified framework for explicit aspect and opinion terms co-extraction. The proposed model learns high-level discriminative features and double propagates information between aspect and opinion terms, simultaneously. Moreover, it is flexible to incorporate hand-crafted features into the proposed model to further boost its information extraction performance. Experimental results on the dataset from SemEval Challenge 2014 task 4 show the superiority of our proposed model over several baseline methods as well as the winning systems of the challenge.", "creator": "LaTeX with hyperref package"}}}