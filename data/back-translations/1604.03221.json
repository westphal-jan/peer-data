{"id": "1604.03221", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Apr-2016", "title": "Leveraging Network Dynamics for Improved Link Prediction", "abstract": "One important finding is that it is useful to explicitly model the dynamics of networks of how often connections are generated or destroyed in link prediction. In this paper, we present a new framework for monitored link prediction, RPM (Rate Prediction Model). In addition to network similarity measures, RPM uses the predicted rate of link modifications, which is modeled using time series data; it is implemented in Spark-ML and trained with the original link distribution, rather than a small balanced subset. We compare the use of this network dynamics model with the direct generation of time series for network similarity measurements. Our experiments show that RPM, which effectively uses predicted rates, outperforms the use of network similarity measures either individually or within a time series.", "histories": [["v1", "Fri, 8 Apr 2016 20:46:13 GMT  (1492kb,D)", "http://arxiv.org/abs/1604.03221v1", null]], "reviews": [], "SUBJECTS": "cs.SI cs.LG", "authors": ["alireza hajibagheri", "gita sukthankar", "kiran lakkaraju"], "accepted": false, "id": "1604.03221"}, "pdf": {"name": "1604.03221.pdf", "metadata": {"source": "CRF", "title": "Leveraging Network Dynamics for Improved Link Prediction", "authors": ["Alireza Hajibagheri", "Gita Sukthankar", "Kiran Lakkaraju"], "emails": [], "sections": [{"heading": null, "text": "Keywords: link prediction; network dynamics; time series; supervised classifier"}, {"heading": "1 Introduction", "text": "Many social networks are constantly in flux, with new edges and vertices being added or deleted daily. Fully modeling the dynamics that drive the evolution of a social network is a complex problem, due to the large number of individual and dyadic factors associated with link formation. Here we focus on predicting one crucial variable\u2013the rate of network change. Not only do different networks change at different rates, but individuals within a network can have disparate tempos of social interaction. This paper describes how modeling this aspect of network dynamics can ameliorate performance on link prediction tasks.\nLink prediction approaches commonly rely on measuring topological similarity between unconnected nodes [1\u20133]. It is a task well suited for supervised binary classification since it is easy to create a labeled dataset of node pairs; however, the datasets tend to be extremely unbalanced with a preponderance of negative examples where links were not formed. Topological metrics are used to score node pairs at time t in order to predict whether a link will occur at a later time t\u2032(t\u2032 > t). However, even though these metrics are good indicators of future network connections, they are less accurate at predicting when the ar X\niv :1\n60 4.\n03 22\n1v 1\n[ cs\n.S I]\n8 A\npr 2\n01 6\nchanges will occur (the exact value of t\u2032). To overcome this limitation, we explicitly learn link formation rates for all nodes in the network; first, a time series is constructed for each node pair from historic data and then a forecasting model is applied to predict future values. The output of the forecasting model is used to augment topological similarity metrics within a supervised link prediction framework. Prior work has demonstrated the general utility of modeling time for link prediction (e.g., [4\u20136]); our results show that our specific method of rate modeling outperforms the use of other types of time series.\nRPM is implemented using Spark MLlib machine learning library. Using Spark, a general purpose cluster computing system, enables us to train our supervised classifiers with the full data distribution, rather than utilizing a small balanced subset, while still scaling to larger datasets. Moreover, we evaluate the classifiers with a full test dataset, so the results are representative of the performance of the method \u201din the wild\u201d. Our experiments were conducted with a variety of datasets, in contrast to prior work on link prediction that has focused on citation or collaboration networks [7]. In addition to a standard co-authorship network (hep-th arXiv [8]), we analyze the dynamics of an email network (Enron [9]) and two player networks from a massively multiplayer online game (Travian [10]). Networks formed from different types of social processes may vary in their dynamics, but our experiments show that RPM outperforms other standard approaches on all types of datasets."}, {"heading": "2 Background", "text": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316]. In unsupervised approaches, pairs of non connected nodes are initially ranked according to a chosen similarity metric (for instance, the number of common neighbors) [17,18]. The top k ranked pairs are then assigned as the predicted links. The strength of this paradigm is that it is simple and generalizes easily to many types of data, but there are some limitations: for instance, how to a priori select the cutoff threshold for link assignment? Implicitly, these approaches assume that the links with the highest scores are most likely to occur and form the earliest; however this is often not the case in many dynamic networks [18]. If the rank correlation between the selected metric and the sequence of formed links is poor, the accuracy of this approach suffers.\nSupervised approaches have the advantage of being able to 1) simultaneously leverage multiple structural patterns and 2) accurately fit model parameters using training data. In this case, the link prediction task is treated as a classification problem, in which pairs of nodes that are actually linked are assigned to class 1 (positive class), whereas the non-connected ones are assigned to class 0 (negative class). The standard model assumes that feature vectors encapsulating the current network structure at time t are used to predict links formed at t + 1; in some sense, this model is \u201damnesiac\u201d, ignoring the past connection history of individual nodes. To address this issue, our proposed method, RPM represents\nthe network with time series. A forecasting model is then used to predict the next value of the series; this value is in turn used to augment the input to the supervised learning process."}, {"heading": "2.1 Time Series", "text": "To construct the time series, the network G observed at time t must be split into several time-sliced snapshots, that is, states of the network at different times in the past. Afterwards, a window of prediction is defined, representing how further in the future we want to make the prediction. Then, consecutive snapshots are grouped in small sets called frames. Frames contain as many snapshots as the length of the window of prediction. These frames compose what is called Framed Time-Sliced Network Structure (S) [8]. Let Gt be the graph representation of a network at time t. Let [G1, G2, ..., GT ] be the frame formed by the union of the graphs from time 1 to T . Let n be the number of periods (frames) in the series. And let w be the window of prediction. Formally, S can be defined as:\nS = {[G1, ..., Gw], [Gw+1, ..., G2w], ...[G(n\u22121)w+1, ..., Gnw]}\nFor instance, suppose that we observed a network from day 1 to day 9, and our aim is to predict links that will appear at day 10. In this example, the forecast horizon (window of prediction) is one day. Our aim here is to model how the networks evolve every day in order to predict what will happen in the forecast horizon. Figure 1 shows an example of the evolution of network over time."}, {"heading": "2.2 Network Similarity Metrics", "text": "In this paper, we use a standard set of topological metrics to assign scores to potential links: 1. Common Neighbors (CN) [19] is defined as the number of nodes with direct\nrelationships with both members of the node pair: CN(x, y) = |\u0393 (x)\u2229\u0393 (y)| where \u0393 (x) is the set of neighbors of node x.\n2. Preferential Attachment (PA) [7,20] assumes that the probability that a new link is created is proportional to the node degree |\u0393 (y)|. Hence, nodes that currently have a high number of relationships tend to create more links in the future: PA(x, y) = |\u0393 (x)| \u00d7 |\u0393 (y)|. 3. Jaccard\u2019s Coefficient (JC) [21] assumes higher values for pairs of nodes that share a higher proportion of common neighbors relative to total number of\nneighbors they have: JC(x, y) = |\u0393 (x)\u2229\u0393 (y)||\u0393 (x)\u222a\u0393 (y)| .\n4. Adamic-Adar (AA) [22], similar to JC, assigns a higher importance to the common neighbors that have fewer total neighbors. Hence, it measures exclusivity between a common neighbor and the evaluated pair of nodes:\nAA(x, y) = \u2211\nz\u2208|\u0393 (x)\u2229\u0393 (y)|\n1\nlog(|\u0393 (z)|) .\nThese metrics serve as 1) unsupervised baseline methods for evaluating the performance of RPM and 2) are also included as features used by the supervised classifiers."}, {"heading": "2.3 Datasets", "text": "For our analysis, we selected three datasets: player communication and economic networks from the Travian massively multiplayer online game [10], the popular Enron email dataset [9], and the co-authorship network from arXiv hep-th [8]. Table 1 gives the network statistics for each of the datasets: 1. Enron email dataset [9]: This email network shows the evolution of the\nEnron company organizational structure over 24 months (January 2000 to December 2001). 2. Travian MMOG [10]: We used the communication and trading networks of users playing the Travian massively multiplayer online game. Travian is a browser-based, real-time strategy game in which the players compete to create the first civilization capable of constructing a Wonder of the World. The experiments in this paper were conducted on a 30 day period in the middle of the Travian game cycle (a three month period). Figure 2 indicates that Travian is a highly dynamic dataset, with over 90% of the edges changing between snapshots. 3. co-authorship network hep-th arXiv [8]: This co-authorship network shows the evolution in co-authorship relationships extracted from the arXiv High Energy Physics (Theory) publication repository between 1991 and 2010."}, {"heading": "3 Method", "text": "RPM treats the link prediction problem as a supervised classification task, where each data point corresponds to a pair of vertices in the social network graph. This is a typical binary classification task that could be addressed with a variety\nof classifiers; we use the Spark support vector machine (SVM) implementation. All experiments were conducted using the default parameters of the Spark MLlib package: the SVM is defined with a polynomial kernel and a cost parameter of 1. Algorithms were implemented in Python and executed on a machine with Intel(R) Core i7 CPU and 24GB of RAM. We have made our code and some example datasets available at: http://ial.eecs.ucf.edu/travian.php.\nIn order to produce a labeled dataset for supervised learning, we require timestamps for each node and edge to track the evolution of the social network over time. We then consider the state of the network for two different time periods t and t\u2032 (with t < t\u2032). The network information from time t is used to predict new links which will be formed at time t\u2032. One of the most important challenges with the supervised link prediction approach is handling extreme class skewness. The number of possible links is quadratic in the number of vertices in a social network, however the number of actual edges is only a tiny fraction of this number, resulting in large class skewness.\nThe most commonly used technique for coping with this problem is to balance the training dataset by using a small subset of the negative examples. Rather than sampling the network, we both train and test with the original data distribution and reweight the misclassification penalties. Let G(V,A) be the social network of interest. Let G[t] be the subgraph of G containing the nodes and\nedges recorded at time t. In turn, let G[t\u2032] be the subgraph of G observed at time t\u2032. In order to generate training examples, we considered all pairs of nodes in G[t]. Even though this training paradigm is more computationally demanding it avoids the concern that the choice of sampling strategy is distorting the classifier performance [16].\nSelecting the best feature set is often the most critical part of any machine learning implementation. In this paper, we supplement the standard set of features extracted from the graph topology (described in the previous section), with features predicted by a set of time series. Let Ft(t = 1, ..., T ) be a time series with T observations with At defined as the observation at time t and Ft+1 the time series forecast at time t + 1. First, we analyze the performance of the following time series forecasting models for generating features: 1. Simple Mean: The simple mean is the average of all available data:\nFt+1 = At +At\u22121 + ...+At\u2212T\nT\n2. Moving Average: This method makes a prediction by taking the mean of the n most recent observed values. The moving average forecast at time t can be defined as:\nFt+1 = At +At\u22121 + ...+At\u2212n\nn\n3. Weighted Moving Average: This method is similar to moving average but allows one period to be emphasized over others. The sum of weights must add to 100% or 1.00:\nFt+1 = \u2211 CtAt\n4. Exponential Smoothing: This model is one of the most frequently used time series methods because of its ease of use and minimal data requirements. It only needs three pieces of data to start: last period\u2019s forecast (Ft), last period\u2019s actual value (At) and a value of smoothing coefficient,\u03b1, between 0 and 1.0. If no last period forecast is available, we can simply average the last few periods:\nFt+1 = \u03b1At + (1\u2212 \u03b1)Ft We identify which time series prediction model produces the best rate estimate, according to the AUROC performance of its RPM variant. Parameters of weighted moving average and exponential smoothing were tuned to maximize performance on the training dataset. Figure 3 shows that the best performing model was Weighted Moving Average with n = 3 and parameters C1, C2 and C3 set to 0.2,0.3, and 0.5 respectively."}, {"heading": "3.1 Results", "text": "Our evaluation measures receiver operating characteristic (ROC) curves for the different approaches. These curves show achievable true positive rates (TP) with\nrespect to all false positive rates (FP) by varying the decision threshold on probability estimations or scores. For all of our experiments, we report area under the ROC curve (AUROC), the scalar measure of the performance over all thresholds. Since link prediction is highly imbalanced, straightforward accuracy measures are well known to be misleading; for example, in a sparse network, the trivial classifier that labels all samples as missing links can have a 99.99% accuracy.\nIn all experiments, the algorithms were evaluated with stratified 10-fold crossvalidation. For more reliable results, the cross-validation procedure was executed 10 times for each algorithm and dataset. We benchmark our algorithm against Supervised-MA [8]. Supervised-MA is a state of the art link prediction method that is similar to our method, in that it is supervised and uses moving average time series forecasting. In contrast to RPM, Supervised-MA creates time series for the unsupervised metrics rather than the link formation rate itself. Supervised is a baseline supervised classifier that uses the same unsupervised metrics as features without the time series prediction model. As a point of reference, we also show the unsupervised performance of the individual topological metrics: 1) Common Neighbors, 2) Preferential Attachment, 3) Jaccard\nCoefficient, and 4) Adamic-Adar. Table 2 presents results for all methods on Travian (communication and trade), Enron, and hep-th networks. Results for our proposed method are shown using bold numbers in the table; in all cases, RPM outperforms the other approaches. Two-tailed, paired t-tests across multiple network snapshots reveal that the RPM is significantly better (p < 0.01) on all four datasets when compared to Supervised-MA.\nWe discover that explicitly including the rate feature (estimated by a time series) is decisively better than the usage of time series to forecast topological metrics. The rate forecast is useful for predicting the source node of future links, hence RPM can focus its search on a smaller set of node pairs. We believe a combination of topological metrics is useful for predicting the destination node, but that relying exclusively on the topological metrics, or their forecasts, is less discriminative."}, {"heading": "4 Related Work", "text": "The performance of RPM relies on three innovations: 1) explicit modeling of link formation rates at a node level, 2) the usage of multiple time series to leverage information from earlier snapshots, 3) training and testing with the full data distribution courtesy of the Spark fast cluster computing system. Rate is an important concept in many generative network models, but its usage has been largely ignored within discriminative classification frameworks. For instance, the stochastic actor-oriented model of network dynamics contains a network rate component that is governed by both the time period and the actors [23]. RPM does not attempt to create a general model of how the rate is affected by the properties of the actor (node), but instead predicts the link formation rate of each node with a time series.\nTime series are useful because they enable us to track the predict future network dynamics, based on the past changes. Soares and Prude\u0302ncio [8] investigated the use of time series within both supervised and unsupervised link prediction frameworks. The core concept of their approach is that it is possible to predict the future values of topological metrics with time series; these values can either be used in an unsupervised fashion or combined in a supervised way with a classifier. In this paper, we compare RPM to the best performing version of their methods, Supervised-MA (Supervised learner with Moving Average predictor), that we reimplemented in Spark and evaluated using our full test/train distribution paradigm, rather than their original sampling method. Predicting the rate directly was more discriminative that predicting the topological metrics. We predict the rate of the source node\u2019s link formation using a time series, in contrast to Huang et al. [4] who used a univariate time series model to predict link probabilities between node pairs. In our work, we use a supervised model to assign links, rather than relying on the time series alone.\nFeature selection is especially critical to the performance of a supervised classifier. For co-authorship networks, Hasan et al. [14] identified three important categories of classification features: 1) proximity (for comparing nodes) 2) aggre-\ngated (for summing features across nodes), and 3) topological (network-based). In our work, we only use network-based features, since those are the easiest to generalize across different types of networks; both proximity and aggregated features require more feature engineering to transfer to different datasets. Wang and Sukthankar [11] promoted the importance of social features in both supervised and unsupervised link prediction; social features aim to express the community membership of nodes and can be used to construct alternate distance metrics. However we believe that rate generalizes better across different types of dynamic networks; moreover it can be easily combined with dataset-specific feature sets."}, {"heading": "5 Conclusion and Future Work", "text": "In this paper, we introduce a new supervised link prediction method, RPM (Rate Prediction Model), that uses time series to predict the rate of link formation. By accurately identifying the most active individuals in the social network, RPM achieves statistically significant improvements over related link prediction methods. Unlike the preferential attachment metric which identifies active individuals based on the degree measure of a single snapshot, RPM measures time-sliced network structure and finds individuals whose influence is rapidly rising. Our experiments were performed on networks created by a variety of social processes, such as communication, collaboration, and trading; they show that the rate of link generation varies with the type of network. In future work, we plan to extend this method to do simultaneously link prediction on different layers of multiplex networks, such as Travian, by modeling the relative rate difference between network layers."}, {"heading": "6 Acknowledgments", "text": "Research at University of Central Florida was supported with an internal Reach for the Stars award. Sandia National Laboratories is a multi-program laboratory managed and operated by Sandia Corporation, a wholly owned subsidiary of Lockheed Martin Corporation, for the U.S. Department of Energy\u2019s National Nuclear Security Administration under contract DE-AC04-94AL85000."}], "references": [{"title": "A survey of link prediction in social networks", "author": ["M. Al Hasan", "M.J. Zaki"], "venue": "Social Network Data Analytics. Springer", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Link mining: a survey", "author": ["L. Getoor", "C.P. Diehl"], "venue": "ACM SIGKDD Explorations Newsletter 7(2)", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2005}, {"title": "Local probabilistic models for link prediction", "author": ["C. Wang", "V. Satuluri", "S. Parthasarathy"], "venue": "IEEE International Conference on Data Mining.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "The time-series link prediction problem with applications in communication surveillance", "author": ["Z. Huang", "D.K. Lin"], "venue": "INFORMS Journal on Computing 21(2)", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2009}, {"title": "Mining graph evolution rules", "author": ["M. Berlingerio", "F. Bonchi", "B. Bringmann", "A. Gionis"], "venue": "Machine Learning and Knowledge Discovery in Databases. Springer", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "Temporality in link prediction: Understanding social complexity", "author": ["A. Potgieter", "K.A. April", "R.J. Cooke", "I.O. Osunmakinde"], "venue": "Emergence: Complexity & Organization (E: CO) 11(1)", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "The link prediction problem for social networks", "author": ["D. Liben-Nowell", "J. Kleinberg"], "venue": "Proceedings of the International Conference on Information and Knowledge Management.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2003}, {"title": "Time series based link prediction", "author": ["Soares", "P.R.d.S.", "R.B.C. Prud\u00eancio"], "venue": "International Joint Conference on Neural Networks, IEEE", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Enron email dataset (2009) http://www.cs.cmu.edu/enron", "author": ["W.W. Cohen"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Conflict and communication in massively-multiplayer online games", "author": ["A. Hajibagheri", "K. Lakkaraju", "G. Sukthankar", "R.T. Wigand", "N. Agarwal"], "venue": "Social Computing, Behavioral-Cultural Modeling, and Prediction. Springer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Link prediction in heterogeneous collaboration networks", "author": ["X. Wang", "G. Sukthankar"], "venue": "In Missaoui, R., Sarr, I., eds.: Social Network Analysis: Community Detection and Evolution. Lecture Notes in Social Networks. Springer", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Signed link analysis in social media networks", "author": ["G. Beigi", "J. Tang", "H. Liu"], "venue": "International AAAI Conference on Web and Social Media (ICWSM).", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}, {"title": "Modeling trust for rating prediction in recommender systems", "author": ["A. Davoudi", "M. Chatterjee"], "venue": "SIAM Workshop on Machine Learning Methods for Recommender Systems, SIAM", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Link prediction using supervised learning", "author": ["M.A. Hasan", "V. Chaoji", "S. Salem", "M. Zaki"], "venue": "Proceedings of the SDM Workshop on Link Analysis, Counterterrorism and Security.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2006}, {"title": "Link prediction in multi-relational collaboration networks", "author": ["X. Wang", "G. Sukthankar"], "venue": "Proceedings of the IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, Niagara Falls, Canada", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "New perspectives and methods in link prediction", "author": ["R.N. Lichtenwalter", "J.T. Lussier", "N.V. Chawla"], "venue": "Proceedings of the 16th ACM SIGKDD international conference on Knowledge discovery and data mining, ACM", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "Role of weak ties in link prediction of complex networks", "author": ["L. L\u00fc", "T. Zhou"], "venue": "Proceedings of the ACM International Workshop on Complex networks Meet Information & Knowledge Management, ACM", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Link prediction based on structural properties of online social networks", "author": ["T. Murata", "S. Moriyasu"], "venue": "New Generation Computing 26(3)", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2008}, {"title": "Clustering and preferential attachment in growing networks", "author": ["M.E.J. Newman"], "venue": "Phys. Rev. E", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2001}, {"title": "Scale-free networks: a decade and beyond", "author": ["Barab\u00e1si", "A.L"], "venue": "Science 325(5939)", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "Introduction to Data Mining, (First Edition)", "author": ["P.N. Tan", "M. Steinbach", "V. Kumar"], "venue": "Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2005}, {"title": "Friends and neighbors on the web", "author": ["L.A. Adamic", "E. Adar"], "venue": "Social networks 25(3)", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2003}, {"title": "Introduction to actor-based models for network dynamics", "author": ["T. Snijders", "G. van de Bunt", "C.E.G. Steglich"], "venue": "Social Networks 32", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "Link prediction approaches commonly rely on measuring topological similarity between unconnected nodes [1\u20133].", "startOffset": 103, "endOffset": 108}, {"referenceID": 1, "context": "Link prediction approaches commonly rely on measuring topological similarity between unconnected nodes [1\u20133].", "startOffset": 103, "endOffset": 108}, {"referenceID": 2, "context": "Link prediction approaches commonly rely on measuring topological similarity between unconnected nodes [1\u20133].", "startOffset": 103, "endOffset": 108}, {"referenceID": 3, "context": ", [4\u20136]); our results show that our specific method of rate modeling outperforms the use of other types of time series.", "startOffset": 2, "endOffset": 7}, {"referenceID": 4, "context": ", [4\u20136]); our results show that our specific method of rate modeling outperforms the use of other types of time series.", "startOffset": 2, "endOffset": 7}, {"referenceID": 5, "context": ", [4\u20136]); our results show that our specific method of rate modeling outperforms the use of other types of time series.", "startOffset": 2, "endOffset": 7}, {"referenceID": 6, "context": "Our experiments were conducted with a variety of datasets, in contrast to prior work on link prediction that has focused on citation or collaboration networks [7].", "startOffset": 159, "endOffset": 162}, {"referenceID": 7, "context": "In addition to a standard co-authorship network (hep-th arXiv [8]), we analyze the dynamics of an email network (Enron [9]) and two player networks from a massively multiplayer online game (Travian [10]).", "startOffset": 62, "endOffset": 65}, {"referenceID": 8, "context": "In addition to a standard co-authorship network (hep-th arXiv [8]), we analyze the dynamics of an email network (Enron [9]) and two player networks from a massively multiplayer online game (Travian [10]).", "startOffset": 119, "endOffset": 122}, {"referenceID": 9, "context": "In addition to a standard co-authorship network (hep-th arXiv [8]), we analyze the dynamics of an email network (Enron [9]) and two player networks from a massively multiplayer online game (Travian [10]).", "startOffset": 198, "endOffset": 202}, {"referenceID": 3, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 89, "endOffset": 102}, {"referenceID": 6, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 89, "endOffset": 102}, {"referenceID": 10, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 89, "endOffset": 102}, {"referenceID": 11, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 89, "endOffset": 102}, {"referenceID": 12, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 89, "endOffset": 102}, {"referenceID": 7, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 117, "endOffset": 127}, {"referenceID": 13, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 117, "endOffset": 127}, {"referenceID": 14, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 117, "endOffset": 127}, {"referenceID": 15, "context": "Approaches to the link prediction problem are commonly categorized as being unsupervised [4, 7, 11\u201313] or supervised [8, 14\u201316].", "startOffset": 117, "endOffset": 127}, {"referenceID": 16, "context": "In unsupervised approaches, pairs of non connected nodes are initially ranked according to a chosen similarity metric (for instance, the number of common neighbors) [17,18].", "startOffset": 165, "endOffset": 172}, {"referenceID": 17, "context": "In unsupervised approaches, pairs of non connected nodes are initially ranked according to a chosen similarity metric (for instance, the number of common neighbors) [17,18].", "startOffset": 165, "endOffset": 172}, {"referenceID": 17, "context": "The strength of this paradigm is that it is simple and generalizes easily to many types of data, but there are some limitations: for instance, how to a priori select the cutoff threshold for link assignment? Implicitly, these approaches assume that the links with the highest scores are most likely to occur and form the earliest; however this is often not the case in many dynamic networks [18].", "startOffset": 391, "endOffset": 395}, {"referenceID": 7, "context": "These frames compose what is called Framed Time-Sliced Network Structure (S) [8].", "startOffset": 77, "endOffset": 80}, {"referenceID": 18, "context": "Common Neighbors (CN) [19] is defined as the number of nodes with direct relationships with both members of the node pair: CN(x, y) = |\u0393 (x)\u2229\u0393 (y)| where \u0393 (x) is the set of neighbors of node x.", "startOffset": 22, "endOffset": 26}, {"referenceID": 6, "context": "Preferential Attachment (PA) [7,20] assumes that the probability that a new link is created is proportional to the node degree |\u0393 (y)|.", "startOffset": 29, "endOffset": 35}, {"referenceID": 19, "context": "Preferential Attachment (PA) [7,20] assumes that the probability that a new link is created is proportional to the node degree |\u0393 (y)|.", "startOffset": 29, "endOffset": 35}, {"referenceID": 20, "context": "Jaccard\u2019s Coefficient (JC) [21] assumes higher values for pairs of nodes that share a higher proportion of common neighbors relative to total number of neighbors they have: JC(x, y) = |\u0393 (x)\u2229\u0393 (y)| |\u0393 (x)\u222a\u0393 (y)| .", "startOffset": 27, "endOffset": 31}, {"referenceID": 21, "context": "Adamic-Adar (AA) [22], similar to JC, assigns a higher importance to the common neighbors that have fewer total neighbors.", "startOffset": 17, "endOffset": 21}, {"referenceID": 9, "context": "For our analysis, we selected three datasets: player communication and economic networks from the Travian massively multiplayer online game [10], the popular Enron email dataset [9], and the co-authorship network from arXiv hep-th [8].", "startOffset": 140, "endOffset": 144}, {"referenceID": 8, "context": "For our analysis, we selected three datasets: player communication and economic networks from the Travian massively multiplayer online game [10], the popular Enron email dataset [9], and the co-authorship network from arXiv hep-th [8].", "startOffset": 178, "endOffset": 181}, {"referenceID": 7, "context": "For our analysis, we selected three datasets: player communication and economic networks from the Travian massively multiplayer online game [10], the popular Enron email dataset [9], and the co-authorship network from arXiv hep-th [8].", "startOffset": 231, "endOffset": 234}, {"referenceID": 8, "context": "Enron email dataset [9]: This email network shows the evolution of the Enron company organizational structure over 24 months (January 2000 to December 2001).", "startOffset": 20, "endOffset": 23}, {"referenceID": 9, "context": "Travian MMOG [10]: We used the communication and trading networks of users playing the Travian massively multiplayer online game.", "startOffset": 13, "endOffset": 17}, {"referenceID": 7, "context": "co-authorship network hep-th arXiv [8]: This co-authorship network shows the evolution in co-authorship relationships extracted from the arXiv High Energy Physics (Theory) publication repository between 1991 and 2010.", "startOffset": 35, "endOffset": 38}, {"referenceID": 15, "context": "Even though this training paradigm is more computationally demanding it avoids the concern that the choice of sampling strategy is distorting the classifier performance [16].", "startOffset": 169, "endOffset": 173}, {"referenceID": 7, "context": "We benchmark our algorithm against Supervised-MA [8].", "startOffset": 49, "endOffset": 52}, {"referenceID": 22, "context": "For instance, the stochastic actor-oriented model of network dynamics contains a network rate component that is governed by both the time period and the actors [23].", "startOffset": 160, "endOffset": 164}, {"referenceID": 7, "context": "Soares and Prud\u00eancio [8] investigated the use of time series within both supervised and unsupervised link prediction frameworks.", "startOffset": 21, "endOffset": 24}, {"referenceID": 3, "context": "[4] who used a univariate time series model to predict link probabilities between node pairs.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "[14] identified three important categories of classification features: 1) proximity (for comparing nodes) 2) aggre-", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "Wang and Sukthankar [11] promoted the importance of social features in both supervised and unsupervised link prediction; social features aim to express the community membership of nodes and can be used to construct alternate distance metrics.", "startOffset": 20, "endOffset": 24}], "year": 2016, "abstractText": "The aim of link prediction is to forecast connections that are most likely to occur in the future, based on examples of previously observed links. A key insight is that it is useful to explicitly model network dynamics, how frequently links are created or destroyed when doing link prediction. In this paper, we introduce a new supervised link prediction framework, RPM (Rate Prediction Model). In addition to network similarity measures, RPM uses the predicted rate of link modifications, modeled using time series data; it is implemented in Spark-ML and trained with the original link distribution, rather than a small balanced subset. We compare the use of this network dynamics model to directly creating time series of network similarity measures. Our experiments show that RPM, which leverages predicted rates, outperforms the use of network similarity measures, either individually or within a time series.", "creator": "LaTeX with hyperref package"}}}