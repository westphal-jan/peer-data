{"id": "1605.08675", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2016", "title": "Boosting Question Answering by Deep Entity Recognition", "abstract": "This paper presents a cross-disciplinary factoid Polish language question-and-answer system, RAFAEL, which goes beyond finding a set of answers; it also extracts a single string corresponding to the unit required, focusing on different approaches to entity recognition, which are indispensable for retrieving information that matches question constraints. Apart from traditional approaches, including solutions for designated entity recognition (NER), a novel technique called Deep Entity Recognition (DeepER) is introduced and implemented that allows a comprehensive search for all forms of entity references corresponding to a given WordNet synset (e.g. an impressionist), based on a previously compiled entity library. It was created by analyzing the first sets of encyclopedia entries and disambiguating and redirecting pages. DeepER also provides automatic reviews, which allow for quizzes to be answered on a number of Wikipedia experiments, including a thousand questions based on a quiz.", "histories": [["v1", "Fri, 27 May 2016 14:57:37 GMT  (378kb,D)", "http://arxiv.org/abs/1605.08675v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["piotr przyby{\\l}a"], "accepted": false, "id": "1605.08675"}, "pdf": {"name": "1605.08675.pdf", "metadata": {"source": "CRF", "title": "Boosting Question Answering by Deep Entity Recognition", "authors": ["Piotr Przyby\u0142a"], "emails": ["P.Przybyla@phd.ipipan.waw.pl"], "sections": [{"heading": "1 Introduction", "text": "A Question Answering (QA) system is a computer program capable of understanding questions in a natural language, finding answers to them in a knowledge base and providing answers in the same language. So broadly defined task seems very hard; Shapiro (1992) describes it as AI-Complete, i.e. equivalent to building a general artificial intelligence. Nonetheless, the field has attracted a lot of attention in Natural Language Processing (NLP) community as it provides a way to employ numerous NLP tools in an exploitable end-user system. It has resulted in valuable contributions within TREC competitions (Dang et al., 2007) and, quite recently, in a system called IBM Watson (Ferrucci et al., 2010), successfully competing with humans in the task.\nHowever, the problem remains far from solved. Firstly, solutions designed for English are not always easily transferable to other languages with more complex syntax rules and less resources available, such as Slavonic. Secondly, vast complexity and formidable hardware requirements of IBM Watson suggest that there is still a room for improvements, making QA systems smaller and smarter.\nThis work attempts to contribute in both of the above areas. It introduces RAFAEL (RApid Factoid Answer Extraction aLgorithm), a complete QA system for Polish language. It is the first QA system designed to use an open-domain plain-text knowledge base in Polish to address factoid questions not only by providing the most relevant sentence, but also an entity, representing the answer itself. The Polish language, as other Slavonic, features complex inflection and relatively free word order, which poses additional challenges in QA. Chapter 2 contains a detailed description of the system architecture and its constituents.\nIn the majority of such systems, designers\u2019 attention focus on different aspects of a sentence selection procedure. Herein, a different idea is incorporated, concentrating on an entity picking procedure. It allows to compare fewer sentences, likely to contain an answer. To do that, classical Named Entity Recognition (NER) gets replaced by Deep Entity Recognition. DeepER, introduced in this work, is a generalisation of NER which, instead of assigning each entity to one of several predefined NE categories, assigns it to a WordNet synset.\nFor example, let us consider a question: Which exiled European monarch returned to his country as a prime minister of a republic?. In the classical approach, we recognise the question as concerning ?? The study was supported by research fellowship within \"Information technologies: research and their\ninterdisciplinary applications\" agreement number POKL. 04.01.01-00-051/10-00.\nar X\niv :1\n60 5.\n08 67\n5v 1\n[ cs\n.C L\n] 2\n7 M\nay 2\n01 6\na person and treat all persons found in texts as potential answers. Using DeepER, it is possible to limit the search to persons being monarchs, which results in more accurate answers. In particular, we could utilise information that Simeon II (our answer) is a tsar; thanks to WordNet relations we know that it implies being a monarch. DeepER is a generalisation of NER also from another point of view \u2013 it goes beyond the classical named entity categories and treats all entities equally. For example, we could answer a question Which bird migrates from the Arctic to the Antarctic and back every year?, although arctic tern is not recognized as NE by NER systems. Using DeepER, we may mark it as a seabird (hence a bird) and include among possible answers. Chapter 3 outlines this approach.\nThe entity recognition process requires an entities library, containing known entities, their text representations (different ways of textual notation) and WordNet synsets, to which they belong. To obtain this information, the program analyses definitions of entries found in encyclopaedia (in this case the Polish Wikipedia). In previous example, it would use a Wikipedia definition: The Arctic Tern (Sterna paradisaea) is a seabird of the tern family Sternidae. This process, involving also redirect and disambiguation pages, is described in section 3.2. Next, having all the entities and their names, it suffices to locate their mentions in a text. The task (section 3.3) is far from trivial because of a complicated named entity inflection in Polish (typical for Slavonic languages, see (Przepi\u00f3rkowski, 2007)).\nDeepER framework provides also another useful service, i.e. automatic evaluation. Usually QA systems are evaluated by verifying accordance between obtained and actual answer based on a human judgement. Plain string-to-string equality is not enough, as many entities have different text representations, e.g. John F. Kennedy is as good as John Fitzgerald Kennedy and John Kennedy, or JFK (again, the nominal inflection in Polish complicates the problem even more). However, with DeepER, a candidate answer can undergo the same recognition process and be compared to the actual expected entity, not string.\nThanks to automatic evaluation vast experiments requiring numerous evaluations may be performed swiftly; saving massive amount of time and human resources. As a test set, authentic questions from a popular Polish quiz TV show1 are used. Results of experiments, testing (among others) the optimal context length, a number of retrieved documents, a type of entity recognition solution, appear in section 5.1.\nTo avoid overfitting, the final system evaluation is executed on a separate test set, previously unused in development, and is checked manually. The results are shown in section 5.2 and discussed in chapter 6. Finally, chapter 7 concludes the paper."}, {"heading": "2 RAFAEL", "text": "As stated in previous chapter, RAFAEL is a computer system solving a task of Polish text-based, open-domain, factoid question answering. It means that provided questions, knowledge base and returned answers are expressed in Polish and may belong to any domain. The system analyses the knowledge base, consisting of a set of plain text documents, and returns answers (as concise as possible, e.g. a person name), supplied with information about supporting sentences and documents.\nWhat are the kinds of requests that fall into the category of factoid questions? For the purpose of this study, it is understood to include the following types:\n\u2013 Verification questions, which could be answered by providing a single boolean value (true or false), e.g. Did Lee Oswald kill John F. Kennedy?, \u2013 Option questions, requiring to select one of available options, e.g. Which one killed John F. Kennedy: Lance Oswald or Lee Oswald?, \u2013 Named entity questions, expected to be answered by a single named entity, e.g. When was John F. Kennedy killed?, \u2013 Unnamed entity questions, similar to above, but the expected entity does not belong to traditional named entity types, e.g. What did Lee Oswald use to kill John F. Kennedy?, \u2013 Other name questions, asking for another name of a given named entity, e.g. What nickname did John F. Kennedy use during his military service?,\n1 Jeden z dziesi\u0119ciu\n\u2013 Multiple named entities questions, to be answered by a list of named entities, e.g. Which U.S. presidents were assassinated in office?.\nAlthough the above list rules out many challenging types of questions, demanding more elaborate answers (e.g. Why was JFK killed?, What is a global warming?, How to build a fence? ), it still involves very distinct problems. Although RAFAEL can recognize factoid questions from any of these types and find documents relevant to them (see more in section 2.4 and (Przyby\u0142a, 2013b)), its answering capabilities are limited to those requesting single unnamed entities and named entities. In this document, they are called entity questions.\nThe task description here is similar to the TREC competitions and, completed with test data described in section 4.1, could play a similar role for Polish QA, i.e. provide a possibility to compare different solutions of the same problem. More information about the task, including its motivation, difficulties and a feasibility study for Polish could be found in (Przyby\u0142a, 2012)."}, {"heading": "2.1 Related work", "text": "The problem of Question Answering is not new to the Polish NLP community (nor working on other morphologically rich languages), but none of studies presented so far coincides with the notion of plain text-based QA presented above.\nFirst Polish QA attempts date back to 1985, when Vetulani (1988) presented a Polish interface to ORBIS database, containing information about the solar system. The database consisted of a set of PROLOG rules and the role of the system (called POLINT) was to translate Polish questions to appropriate queries. Another early solution, presented by Duclaye et al. (2002), could only work in a restricted domain (business information).\nA system dealing with a subset of the TREC tasks was created for Bulgarian by Tanev (2004). His solution answers only three types of questions: Definition, Where-Is and Temporal. He was able to achieve good results with 100 translated TREC questions, using several manually created answer patterns, without NER or any semantic information. Another system for Bulgarian (Simov & Osenova, 2005) participated in the CLEF 2005 competition. Its answer extraction module bases on partial grammars, playing a role of patterns for different types of questions. They could answer correctly 37 of 200 questions, of which only 16 belong to the factoid type. Previously the same team (Osenova et al., 2004) took part in a Bulgarian-English track of the CLEF 2004, in which Bulgarian questions were answered using English texts.\nA QA solution was also created for Slovene (\u010ceh & Ojster\u0161ek, 2009). The task there is to answer students\u2019 questions using databases, spreadsheet files and a web service. Therefore, it differs from the problem discussed above by limited domain (issues related to a particular faculty) and the non-textual knowledge base. Unfortunately, no quantitative results are provided in this work.\nMore recently, several elements of a Polish QA system called Hipisek were presented by Walas & Jassem (2010). It bases on a fairly common scheme of transforming a question into a search query and finding the most appropriate sentence, satisfying question constrains. Unfortunately, a very small evaluation set (65 question) and an unspecified knowledge base (gathered by a web crawler) make it difficult to compare the results. In their later works (Walas, 2012; Walas & Jassem, 2011), the team concentrated on spatial reasoning using a knowledge base encoded as a set of predicates.\nThe approach presented by Piechoci\u0144ski & Mykowiecka (2005) is the closest to the scope of this work, as it includes analysis of Polish Wikipedia content and evaluation is based on questions translated from a TREC competition. Unfortunately, it heavily relies on a structure of Wikipedia entries, making it impossible to use with an arbitrary textual corpus.\nA non-standard approach to answer patterns has been proposed by Konop\u00edk & Rohl\u00edk (2010). In their Czech open-domain QA system they used a set of templates associated with question types, but also presented a method to learn them semi-automatically from search results. Peshterliev & Koychev (2011) in their Bulgarian QA system concentrated on semantic matching between between a question and a possible answer checked using dependency parsing. However, they provide no data regarding an answering precision of the whole system.\nThe last Polish system worth mentioning has been created by Marci\u0144czuk et al. (2013). Generally, their task, called Open Domain Question Answering (ODQA), resembles what is treated here, but with one major difference. A document is considered an answer; therefore they focus on\nimproving ranking in a document retrieval stage. They have found out that it could benefit from taking nearness of query terms occurrences into account.\nAs some of Slavonic languages lack necessary linguistic tools and resources, only partial solutions of QA problems exist for them, e.g. document retrieval for Macedonian (Armenska et al., 2010), question classification for Croatian (Lombarovi\u0107 et al., 2011) or answer validation for Russian (Solovyev, 2013)."}, {"heading": "2.2 System Architecture", "text": "A general architectural scheme of RAFAEL (figure 1) has been inspired by similar systems developed for English; for examples see works by Hovy et al. (2000) and Moldovan et al. (2000).\nTwo of the steps in the diagram concern offline processing of a knowledge base. Firstly, it is indexed by a search engine to ensure efficient searching in further stages (INDEXING). Secondly, it may be annotated using a set of tools (NLP), but this could also happen at an answering stage for selected documents only.\nAfter the system receives a question, it gets analysed (QUESTION ANALYSIS) and transformed into a data structure, called question model. One of its constituents, a search query, is used to find a set of documents, which are probably appropriate for the current problem (SEARCH). For each of the documents, all entity mentions compatible with an obtained question type (e.g. monarchs), are extracted (ENTITY RECOGNITION). For each of them, a context is generated (CONTEXT GENERATION). Finally, a distance between a question content and the entity context is computed to asses its relevance (DISTANCE MEASURE). All the mentions and their distance scores are stored and, after no more documents are left, used to select the best match (BEST ENTITY SELECTION). The system returns the entity, supplied with information about a supporting sentence and a document, as an answer."}, {"heading": "2.3 Knowledge Base Processing", "text": "Knowledge base (KB) processing consists of two elements: indexing and annotating. The objective of the first is to create an index for efficient searching using a search engine. In the system, Lucene 3.62 is used to build two separate full-text indices: regular and stemmed using a built-in stemmer for Polish, Stempel (Galambos, 2001).\nSecondly, texts go through a cascade of annotation tools, enriching it with the following information:\n\u2013 Morphosyntactic interpretations (sets of tags), using Morfeusz 0.82 (Woli\u0144ski, 2006), \u2013 Tagging (selection of the most probable interpretation), using a transformation-based learning\ntagger, PANTERA 0.9.1 (Aceda\u0144ski, 2010), \u2013 Syntactic groups (possibly nested) with syntactic and semantic heads, using a rule-based shal-\nlow parser Spejd 1.3.7 (Przepi\u00f3rkowski, 2008) with a Polish grammar, including improved version of modifications by Deg\u00f3rski (2012), enabling lemmatisation of nominal syntactic groups, \u2013 Named entities, using two available tools: NERF 0.1 (Savary & Waszczuk, 2012) and Liner2 2.3 (Marci\u0144czuk & Janicki, 2012).\nAll the annotations are stored in a variant of TEI P5 standard, designed for the National Corpus of Polish (Przepi\u00f3rkowski et al., 2012). As noted previously, the process of annotating is not indispensable at the stage of offline KB processing; it could be as well executed only on documents returned from the search engine (for example see Webclopedia by Hovy et al. (2000) or LASSO by Moldovan et al. (2000)). However, since during evaluation experiments the same documents undergo the process hundreds of times, it seems reasonable to process the whole KB only once."}, {"heading": "2.4 Question Analysis", "text": "The goal of question analysis is to examine a question and extract all the information that suffices for answer finding. A resulting data structure, called question model, contains the following elements:\n1. Question type \u2013 a description of expected answer type, instructing the system, what type of data could be returned as an answer. It has three levels of specificity: (a) General question type \u2013 one of the types of factoid questions, enumerated at the beginning\nof this chapter, (b) Named entity type \u2013 applicable only in case general type equals named entity. Possible\nvalues are the following: place, continent, river, lake, mountain, mountain range, island, archipelago, sea, celestial body, country, state, city, nationality, person, first name, last name, band, dynasty, organisation, company, event, date, century, year, period, number, quantity, vehicle, animal, title.\n2 Available from http://lucene.apache.org/.\n(c) Focus synset \u2013 applicable in case of entity questions; a WordNet synset, to which a question focus belongs; necessary for DeepER. 2. Search query \u2013 used to find possibly relevant documents, 3. Question content \u2013 the words from question which are supposed to appear also in context of\nan answer.\nThe task presented above, called question classification, is an example of text classification with very short texts. It could be tackled by a general-purpose classifier; for example, \u010ceh & Ojster\u0161ek (2009) used SVMs (Support Vector Machines) for closed-domain Slovene QA system; Li & Roth (2002) employed SNoW (Sparse Network of Winnows) for hierarchical classification of TREC questions. For Polish results are not satisfactory (Przyby\u0142a, 2013b) because of data sparsity.\nHowever, sometimes a solution seems quite evident, as part of the question types enforce its structure. For example, when it begins with Who or When, it belongs to person and date question types, respectively. That is why a set of 176 regular expressions (in case of RAFAEL) suffices to deal with them. They match only a subset of questions (36.15 per cent of the training set), but are highly unambiguous (precision of classification equals 95.37 per cent). Nevertheless, some (Lee et al., 2005) use solely such patterns, but need a great number of them (1,273).\nUnfortunately, most of entity questions are ambiguous, i.e. it is not enough to inspect an interrogative pronoun to find an answer type. They may begin with what or which, followed by a question focus. For example, let us consider a question Which russian submarine sank in 2000 with its whole crew?. Its focus (russian submarine) carries information that the question could be answered by a named entity of type vehicle. The whole process of focus analysis is shown in figure 2. The first nominal group after a pronoun3 serves as a possible lexeme name in plWordNet 2.1 (Maziarz et al., 2012). As long as there are no results, it gets replaced by its semantic head. When a matching lexeme exists in WordNet, a set of all its hypernyms is extracted. If any of the elements in the set correspond to one of the named entity types, this type is recorded in the question model. Otherwise the general question type takes the value unnamed entity. A WordNet-assisted focus analysis was also implemented in one of solutions participating in a TREC competition (Harabagiu et al., 2001). 3 RAFAEL includes a manually created list of opening constructions to be ignored if appearing right after a pronoun, such as typ (type of) or spo\u015br\u00f3d (out of).\nSearch query generation is described in the next chapter. The last element of a question model, called question content, contains segments, which are to be compared with texts to find the best answer. It includes all the words of the interrogative sentence except those included in the matched pattern (Which, ?) and the focus (submarine). In our example the following are left: russian, sank, in, 2000, with, its, whole, crew. An entity mention, which context resembles this set, will be selected as an answer (see details in section 2.7).\nThe question analysis stage explained above follows a design presented in previous works (Przyby\u0142a, 2013b,a), where more details could be found. The major difference lies in result processing \u2013 an original synset is not only projected to one of the named entity types, but also recorded as a focus synset in question type, utilised in DeepER to match entity types. In our example, it would only consider submarines as candidate answers."}, {"heading": "2.5 Document Retrieval", "text": "The use of search engines in QA systems is motivated mainly by performance reasons. Theoretically, we could analyse every document in a text base and find the most relevant to our query. However, it would take excessive amount of time to process the documents, majority of which belong to irrelevant domains (839,269 articles in the test set). A search engine is used to speed up the process by selecting a set of documents and limiting any further analysis to them.\nAs described in section 2.3, a knowledge base is indexed by Lucene offline. Given a question, we need to create a search query. The problem is that an answer in the knowledge base is probably expressed differently than the question. Hence, a query created directly from words of the question would not yield results, unless using a highly-redundant KB, such as the WWW (for this type of solution see (Brill et al., 2002)). Therefore, some of the query terms should be dropped \u2013 based on their low IDF (Katz et al., 2003) or more complex heuristics (Moldovan et al., 2000). On the other hand, the query may be expanded with synonyms (Hovy et al., 2000) or derived morphological forms (Katz et al., 2003).\nFinally, we need to address term matching issue \u2013 how to compare a query keyword and a text word in a morphologically-rich language, such as Polish? Apart from exact match, it also is possible to use a stemmer or fuzzy queries, available in Lucene (accepting a predefined Levenshtein distance between matching strings).\nPrevious experiments (Przyby\u0142a, 2013a) led to the following query generation procedure:\n1. Remove all words matched by a regular expression at the classification stage (What, Which, etc.), 2. Keep a question focus, 3. Connect all the remaining words by OR operator, 4. Use fuzzy term matching strategy with absolute distance equal 3 characters and fixed prefix.\nLucene handles a query and yields a ranked document list, of which N first get transferred to further analysis. The influence of value of N on answering performance is evaluated in section 5.1."}, {"heading": "2.6 Entity Recognition", "text": "Having a set of proposed documents and a question type, the next step is to scan them and find all mentions of entities with appropriate types. RAFAEL includes two approaches to the problem: classical Named Entity Recognition (NER) and novel Deep Entity Recognition.\nThree NERs for Polish are employed: NERF, Liner2 and Quant. NERF (Savary & Waszczuk, 2012) is a tool designed within the project of the National Corpus of Polish and bases on linearchain conditional random fields (CRF). It recognizes 13 types of NEs, possibly nested (e.g. Warsaw in University of Warsaw). Liner2 (Marci\u0144czuk & Janicki, 2012) also employs CRFs, but differentiates NEs of 56 types (which could be reduced to 5 for higher precision). Annotation using both of the tools happens offline within the KB preprocessing, so in the currently described stage it suffices to browse the annotations and find matching entities. As the above tools lack recognition of quantitative expressions, a new one has been developed especially for RAFAEL and called Quant. It is able to handle both numbers and quantities (using WordNet) in a variety of notations.\nAppendix A contains details of implementation of named entity recognition in RAFAEL, including a description of Quant and a mapping between question types and named entity types\navailable in NERF and Liner2. An alternative being in focus of this work, i.e. DeepER approach, is thorougly discussed in chapter 3.\nRAFAEL may use any of the two approaches to entity recognition: NER (via NERF, Liner2 and Quant) or novel DeepER; this choice affects its overall performance. Experiments showing precision and recall of the whole system with respect to applied entity recognition technique are demonstrated in section 5.1."}, {"heading": "2.7 Mention selection", "text": "When a list of entity mentions in a given document is available, we need to decide which of them most likely answers the question. The obvious way to do that is to compare surroundings of every mention with the content of the question. The procedure consists of two steps: context generation and similarity measurement.\nContext generation The aim of a context generation step is to create a set of segments surrounding an entity, to which they are assigned. Without capabilities of full text understanding, two approximate approaches seem legitimate:\n\u2013 Sentence-based \u2013 for a given entity mention, a sentence in which it appears, serves as a context, \u2013 Segment-based \u2013 for a given entity mention, every segment sequence of length M, containing\nthe entity, is a context.\nBoth of them have some advantages: relying on a single sentence ensures relation between an entity and a context, whereas the latter provides possibility of modifying context length. Obviously, the value of M should be proportional to question (precisely, its content) length.\nThe method of treating sentences as a context has gained most popularity (see work of Yih et al. (2013)), but a window of fixed size also appears in the literature; for example Katz et al. (2003) used one with M=140 bytes.\nThe context generation is also related to another issue, i.e. anaphoric expressions. Some segments (e.g. this, him, they) may refer to entities that occurred earlier in a text and therefore harm a similarity estimation. It could be tackled by applying anaphora resolution, but a solution for Polish (Kope\u0107 & Ogrodniczuk, 2012) remains in an early stage. Observations show that the majority of anaphora refer to an entity in a document title, so the problem is partially bypassed by adding a title to a context.\nAn influence of the context generation techniques on final results is shown in section 5.1.\nSimilarity measurement To measure a similarity between a question content (explained in section 2.4) and an entity context (generated by the procedures in previous section), a Jaccard similarity index (Jaccard, 1901) is computed. However, not all word co-occurrences matter equally (e.g. compare this and Honolulu), so word weights are used:\nSimw(A,B) = \u2211\ni\u2208A\u2229B wi\u2211 i\u2208A\u222aB wi\nThe sets A and B contain segments in base forms, whereas wi denotes a weight of an i-th base form, equal to its scaled IDF computed on a document set D:\nwi = log |D||{d:i\u2208d}|\nmax i\nlog |D||{d:i\u2208d}|\nThe Jaccard index is a popular solution for sentence similarity measurement in QA (for example see a system by Ahn et al. (2004)). In case of selecting relevant documents, cosine measure is also applied. Marci\u0144czuk et al. (2013) compared it to Minimal Span Weighting (MSW) and observed that the latter performs better, as it takes into account a distance between matched words. A study of different techniques for sentence similarity assessment could be found in (Yih et al., 2013).\nAnswer generation At this stage, a large set of pairs of entity mention and its contexts with scores assigned, is available. Which of them answers the question? Choosing the one with the highest score seems an obvious solution, but we could also aggregate scores of different mentions corresponding to the same answer (entity), e.g. compute their sum or mean. However, such experiments did not yield improvement, so RAFAEL returns only a single answer with the highest score.\nAn answer consists of the following elements: an answer string, a supporting sentence, a supporting document and a confidence value (the score). A sentence and a document, in which the best mention appeared, are assumed to support the answer. Thanks to properties of Jaccard similarity, the mention score ranges between 0 for completely unrelated sentences to 1 for practically (ignoring inflection and a word order) the same. Therefore, it may serve as an answer confidence.\nWhen no entity mentions satisfying constraints of a question are found, no answer is returned. This type of result could also be used when the best confidence score is below a predefined value; performance of such technique are shown in section 5.1. The refusal to answer in case of insufficient confidence plays an important role in Jeopardy!, hence in IBM Watson (Ferrucci et al., 2010), but it was also used to improve precision in other QA systems (Oh et al., 2013)."}, {"heading": "3 Deep Entity Recognition", "text": "Deep Entity Recognition procedure is an alternative to applying Named Entity Recognition in QA to find entities matching question constraints. It scans a text and finds words and multi-word expressions, corresponding to entities. However, it does not assign them to one of several NE categories; instead, WordNet synsets are used. Therefore, named entities are differentiated more precisely (e.g. monarchs and athletes) and entities beyond the classical NE categories (e.g. species, events, devices) could also be recognised in a text.\nIt does not seem possible to perform this task relying solely on features extracted from words and surrounding text (as in NER), so it is essential to build an entity library. Such libraries already exist (Freebase, BabelNet, DBpedia or YAGO) and could provide an alternative for DeepER, but they concentrate on English. The task of adaptation of such a base to another language is far from trivial, especially for Slavonic languages with complex NE inflection (Przepi\u00f3rkowski, 2007). An ontology taking into account Polish inflection (Prolexbase) has been created by Savary et al. (2013), but it contains only 40,000 names, grouped into 34 types."}, {"heading": "3.1 Related work", "text": "The idea of DeepER in a nutshell is to improve QA by annotating a text with WordNet synsets using an entity base created by understanding definitions found in encyclopaedia. Parts of this concept have already appeared in the NLP community.\nA technique of coordinating synsets assigned to a question and a possible answer emerged in a study by Mann (2002). While a question analysis there seems very similar to this work, entity library (called proper noun ontology) generation differs a lot. The author analysed 1 GB of newswire text and extracted certain expressions, e.g. \"X, such as Y\" implies that Y is an instance of X. Albeit precision of resulting base was not very good (47 per cent for non-people proper names), it led to a substantial improvement of QA performance.\nThe idea of analysing encyclopaedic definitions to obtain this type of information already appeared, but was employed for different applications. For example, Toral & Mu\u00f1oz (2006) described a method of building a gazetteer by analysing hyperonymy branches of nouns of first sentences in Wikipedia definitions. Unlike in this work, an original synset was replaced by a coarse-grained NER category. Another example of application is a NE recognizer (Kazama & Torisawa, 2007) using words from a definition as additional features for a standard CRF classifier. In their definition analysis only the last word of the first nominal group was used.\nOther researchers dealt with a task explicitly defined as classifying Wikipedia entries to NER categories. For example Dakka & Cucerzan (2008) addressed the problem by combining traditional text classification techniques (bag of words) with contexts of entity mentions. Others (Ponzetto & Strube, 2007) thoroughly examined article categories as a potential source of is-a relations in a taxonomy (99 per cent of entries have at least one category). Inhomogeneity of categories turned\nout as the main problem, dealt with by a heuristic classifier, assigning is-a and not-is-a labels. Categories were also used as features in a NER task (Richman & Schone, 2008), but it required a set of manually designed patterns to differentiate between categories of different nature.\nExploring a correspondence between Wikipedia entries and WordNet synsets found an application in automatic enriching ontologies with encyclopaedic descriptions (Ruiz-Casado et al., 2005). However, only NEs already appearing in the WordNet were considered. The task (solved by bagof-words similarity) is non-trivial only in case of polysemous words, e.g. which of the meanings of Jupiter corresponds to which Wikipedia article? Others (Toral et al., 2008) concentrated on the opposite, i.e. extending the WordNet by NEs that are not there yet by adding titles of entries as instances of synsets corresponding to their common category.\nAlso, some see Wikipedia as an excellent source of high-quality NER training data. Again, it requires to project entries to NE categories. A thorough study of this problem, presented by Balasuriya et al. (2009), utilizes features extracted from article content (bag of words), categories, keywords, inter-article and inter-language links. A final annotated corpus turns out as good for NER training as a manually annotated gold standard.\nFinally, some researchers try to generalise NER to other categories, but keep the same machinelearning-based approach. For example, Ciaramita & Altun (2006) developed a tagger, assigning words in a text to one of 41 supersenses. Supersenses include NE categories, but also other labels, such as plant, animal or shape. The authors projected word-sense annotations of publicly available corpora to supersenses and applied perceptron-trained Hidden Markov Model for sequence classification, obtaining precision and recall around 77 per cent."}, {"heading": "3.2 Entity Library", "text": "An entity library for DeepER contains knowledge about entities that is necessary for deep entity recognition. Each of them consists of the following elements (entity #9751, describing the Polish president, Bronis\u0142aw Komorowski):\n\u2013 Main name: Bronis\u0142aw Komorowski, \u2013 Other names (aliases): Bronis\u0142aw Maria Komorowski, Komorowski, \u2013 Description URL: http://pl.wikipedia.org/wiki/?curid=121267, \u2013 plWordNet synsets: \u2022 <podsekretarz1, podsekretarz stanu1, wiceminister1> (vice-minister, undersecretary), \u2022 <wicemarsza\u0142ek1> (vice-speaker of the Sejm, the Polish parliament), \u2022 <polityk1> (politician), \u2022 <wys\u0142annik1, pose\u01421, pos\u0142aniec2, wys\u0142aniec1, pos\u0142annik1> (member of a parliament), \u2022 <marsza\u0142ek1> (speaker of the Sejm), \u2022 <historyk1> (historian), \u2022 <minister1> (minister), \u2022 <prezydent1, prezydent miasta1> (president of a city, mayor).\nA process of entity library extraction is performed offline, before question answering. The library built for deep entity recognition in RAFAEL, based on the Polish Wikipedia (857,952 articles, 51,866 disambiguation pages and 304,823 redirections), contains 809,786 entities with 1,169,452 names (972,592 unique). The algorithm does not depend on any particular feature of Wikipedia, so any corpus containing entity definitions could be used.\nFigure 3 shows an exemplary process of converting the first paragraph of a Polish Wikipedia entry, describing former Polish president Lech Wa\u0142\u0119sa4, into a list of WordNet synsets. First, we omit all unessential parts of the paragraph (1). This includes text in brackets or quotes, but also introductory expressions like jeden z (one of) or typ (type of). Then, an entity name is detached from the text by matching one of definition patterns (2). In the example we can see the most common one, a dash (\u2013). Next, all occurrences of separators (full stops, commas and semicolons) are used to divide the text into separate chunks (3). The following step employs shallow parsing annotation \u2013 only nominal groups that appear at the beginning of the chunks are passed on (4). The first chunk that does not fulfil this requirement and all its successors get excluded from further analysis (4.1). Finally, we split the coordination groups and check, whether their lemmas correspond 4 http://pl.wikipedia.org/wiki/Lech_Wa%C5%82%C4%99sa\nto any lexemes in WordNet (5). If not, the process repeats with the group replaced by its semantic head. In case of polysemous words, only the first word sense (usually the most common) is taken into account.\nThe whole process is more complicated than the simple example shows. Generally, it consists of the following steps:\nStep 0 Prepare a corpus \u2013 data format and annotation process is the same as for a knowledge base, used in question answering, see section 2.3. It differs in scope of page categories, including not only articles, but also disambiguation and redirection pages. Step 1 For each of article pages, extract the first paragraph and apply readDefinition function. If a resulting entity has a non-empty synset list, add it to the library. If some of the redirection pages point to the entity name, add their names as entity aliases. Step 2 For each of disambiguation pages, extract all items and apply readDefinition function. If an item refers to an existing entity, extend it with extracted synsets and disambiguation page name. Create a new entity otherwise. Add redirection names as previously. Step 3 Save the obtained base for future use.\nInput: text - annotated first paragraph of an encyclopaedic entry Output: synsets - synsets describing an entity begin\nsynsets := {}; text := removeInBrackets(text); text := removeInQuotes(text); foreach pattern in definitionPatterns do\nif pattern matches text then definition := match(pattern,text).group(2); break;\ndefinition := removeDefinitionPrefixes(definition); parts := split(definition,seperators); foreach part in parts do\nchunk := firstGroupOrWord(part); if isNominal(chunk) then\nsynsets := synsets \u222a extractSynsets(chunk); else break;\nreturn synsets;\nAlgorithm 1: Function readDefinition(text) \u2013 interprets a definition to assign synsets to an entity.\nThe readDefinition function (shown as algorithm 1) analyses a given paragraph of text and extracts a set of synsets, describing an entity, to which it corresponds, as exemplified by figure 3. Simplifying, it is done by removing all unnecessary text (in brackets or quotes), splitting it on predefined separators (commas, full stops, semicolons) and applying extractSynsets function with an appropriate stop criterion. The readDefinition makes use of the following elements:\nremoveInBrackets() removes everything that is between brackets ([], () or {}) from the text (step (1) in figure 3). removeInQuotes() removes everything between single or double quotes from the text (step (1) in the example). definitionPatterns contains patterns of strings separating a defined concept from a definition, e.g. hyphens or dashes (used in step (2) of the example) or jest to (is a). removeDefinitionPrefixes() removes expressions commonly prefixing a nominal group, such as jeden z (one of), typ (a type of) or klasa (a class of), not present in the example. separators a set of three characters that separate parts of a definition: \".\", \",\" and \";\". firstGroupOrWord() returns the longest syntactic element (syntactic group or word) starting\nat the beginning of a chunk (step (4) in the example).\nisNominal() decides, whether a chunk is a noun in nominative, a nominal group or a coordination of nominal groups.\nInput: chunk - a nominal chunk (a syntactic group or a single noun) Output: synsets - WordNet synsets corresponding to chunk begin\nlemma := lemmatise(chunk); if inWordNet(lemma) then\nreturn getLexemes(lemma).synset(0);\nelse if isCoordination(chunk) then synsets := {}; foreach element in chunk do\nsynsets := synsets \u222a extractSynsets(element); return synsets;\nelse if isGroup(chunk) then return extractSynsets(chunk.semanticHead);\nelse return {};\nAlgorithm 2: Function extractSynsets(chunk) \u2013 recursively extracts synsets from a nominal chunk.\nThe extractSynsets function (shown as algorithm 2) accepts a nominal chunk and extracts WordNet synsets, corresponding to it. It operates recursively to dispose any unnecessary chunk elements and find the longest subgroup, having a counterpart in WordNet. It corresponds to step (5) in figure 3 and uses the following elements:\nlemmatise() returns a lemma of a nominal group. inWordNet() checks whether a given text corresponds to a lexeme in WordNet. getLexemes() return a list of WordNet lexemes corresponding to a given text. synset() return a synset including a lexeme in a given word sense number. isCoordination() return TRUE iff a given chunk is a coordination group. isGroup() return TRUE iff a given chunk is a group. semanticHead is an element of a syntactic group, denoted as a semantic head.\nA few of design decisions reflected in these procedures require further comment. First of all, they differ a lot from the studies that involve a definition represented with a bag of words (Dakka & Cucerzan, 2008; Ruiz-Casado et al., 2005; Balasuriya et al., 2009). Here, a certain definition structure is assumed, i.e. a series of nominal groups divided by separators. What is more, as the full stop belongs to them, the series may continue beyond a single sentence, which has improved recall in preliminary experiments. Availability of a shallow parsing layer and group lemmatisation allows to query WordNet by syntactic groups instead of single nouns, as in work of Toral & Mu\u00f1oz (2006). As word order is relatively free in Polish, a nominal group cannot be assumed to end with a noun, like Kazama & Torisawa (2007) did. Instead, a semantic head of a group is used.\nFinally, the problem of lack of word sense disambiguation remains \u2013 the line getLexemes(lemma).synset(0) means that always a synset connected to the first meaning of a lexeme is selected. We assume that it corresponds to the most common meaning, but that is not always the case \u2013 in our example at figure 3 <prezydent.1, prezydent miasta.1> (president of a city, i.e. mayor) precedes <prezydent.2> (president of a country, the obvious meaning). However, it does not have to harm QA performance as far as the question analysis module (section 2.4) functions analogously, e.g. in case of a question beginning with kt\u00f3ry prezydent. . . (which president. . . ). Therefore, the decision has been motivated by relatively good performance of this solution in previously performed experiments on question analysis (Przyby\u0142a, 2013a). It also works in other applications, e.g. gazetteers generation (Toral & Mu\u00f1oz, 2006).\nTo assess quality of the entity library, its content has been compared with synsets manually extracted from randomly selected 100 Wikipedia articles. 95 of them contain a description of an\nentity in the first paragraph. Among those, DeepER entity library includes 88 (per-entity recall 92.63 per cent). 135 synsets have been manually assigned to those entities, while the corresponding set in library contains 133 items. 106 of them are equal (per-synset precision 79,70 per cent), while 13 differ only by word sense. 16 of manually extracted synsets hove no counterpart in the entity library (per-synset recall 88.15 per cent), which instead includes 14 false synsets."}, {"heading": "3.3 Entity Recognition", "text": "An entity recognition step is performed within the question answering process and aims at selecting all entity mentions in a given annotated document. Before it begins, the entity library is read into a PATRICIA trie, a very efficient prefix tree. In this structure, every entity name becomes a key for storing a corresponding list of entities.\nWhen a document is ready for analysis, it is searched for strings that match any of the keys in the trie. The candidate chunks (sequences of segments) come from three sources:\n1. lemmata of words and syntactic groups, 2. sequences of words in surface forms (as they appear in text), 3. sequences of words in base forms (lemmata).\nThe last two techniques are necessary, because a nominal group lemmatisation often fails, especially in case of proper names. Their rich inflection in Polish (Przepi\u00f3rkowski, 2007) means that a nominal suffix of an entity may be hard to predict. Therefore, a chunk is considered to match an entity name if:\n\u2013 they share a common prefix, \u2013 an unmatched suffix in neither of them is longer than 3 characters, \u2013 the common prefix is longer than the unmatched chunk suffix.\nGiven a list of entity mentions, RAFAEL checks their compatibility with a question model. Two of its constituents are taken into account: a general question type and a synset. An entity mention agrees with NAMED_ENTITY type if its first segment starts with a capital letter and always agrees with UNNAMED_ENTITY. To pass a semantic agreement test, the synset of the question model needs to be a (direct or indirect) hypernym of one of the synsets assigned to the entity. For example, list of synsets assigned to entity Jan III Sobieski contains <kr\u00f3l.1> (king), so it matches a question focus <w\u0142adca.1, panuj\u0105cy.1, hierarcha.2, pan.1> (ruler) through a hypernymy path <w\u0142adca.1, panuj\u0105cy.1, hierarcha.2, pan.1> \u2192 <monarcha.1, koronowana g\u0142owa.1> (monarch) \u2192 <kr\u00f3l.1>. All the mentions of entities satisfying these conditions are returned for further processing."}, {"heading": "4 Evaluation", "text": "Evaluation of RAFAEL is typical for factoid QA systems: given a knowledge base and and questions, its responses are compared to the expected ones, prepared in advance. Section 4.1 describes data used in this procedure, whereas section 4.2 explains how an automatic evaluation is possible without human labour."}, {"heading": "4.1 Data", "text": "The Polish Wikipedia serves as a knowledge base. It has been downloaded from a project site as a single database dump at 03.03.2013, from which plain text files have been extracted using Wikipedia Extractor 2.2 script5. It means that only plain text is taken into account \u2013 without lists, infoboxes, tables, etc. This procedure leads to a corpus with 895,486 documents, containing 168,982,550 segments, which undergo the annotation process, described in section 2.3.\nThe questions that are to be answered with the knowledge base come from two separate sets:\n5 http://medialab.di.unipi.it/wiki/Wikipedia_Extractor\n1. Development set bases on 1500 (1130 after filtering6) questions from a Polish quiz TV show, called Jeden z dziesi\u0119ciu (Karzewski, 1997). It was involved in previous experiments (Przyby\u0142a, 2013b,a). 2. Evaluation set bases on an open dataset for Polish QA systems, published by Marci\u0144czuk et al. (2013). It has been gathered from Did you know. . . column, appearing in the main page of the Polish Wikipedia. It contains 4721 questions, from which 1000 have been analysed, which resulted in 576 satisfying the task constrains, given in chapter 2.\nTable 1 shows a distribution of different question types and named entity types in the sets.\nTo each of the questions from both sets some information has been assigned manually. It includes an identification number, an expected answer string, a general question type, a named entity type (if applicable) and an expected source document. Table 2 contains several exemplary questions from the development set. 6 The questions that were filtered out either do not belong to factoid category, as defined at the beginning of chapter 2 (e.g. demand calculations, translations or long explanations) or lack answer in the Polish Wikipedia.\nThe additional information (question types and expected documents) makes it possible to evaluate only selected modules of the whole QA system. For example, we could test question classification by comparing results against given question types or entity selection by analysing only the relevant document."}, {"heading": "4.2 Automatic Evaluation", "text": "Thanks to availability of the DeepER entity library, it is possible to automatically perform answer evaluation for all the question types that are recognised by this technique (UNNAMED_ENTITY and NAMED_ENTITY excluding dates, numbers and quantities).\nBoth an expected and obtained answer are represented as short strings, e.g. Bronis\u0142aw Komorowski. However, it does not suffice to check their exact equality. That is caused by existence of different names for one entity (Bronis\u0142aw Maria Komorowski or Komorowski), but also rich nominal inflection (Komorowskiego, Komorowskiemu, . . . ).\nIn fact, we want to compare entities, not names. Hence, deep entity recognition is a natural solution here. To check correctness of an answer, we use it as an input for the recognition process, described in section 3.3. Then, it is enough to check whether the expected answer appears in any of lists of names, assigned to the recognized entities. For example, let us consider a question: Kto jest obecnie prezydentem Polski? (Who is the current president of Poland?) with expected answer Bronis\u0142aw Komorowski and a system answer Komorowski. The DeepER process finds many entities in the string (all the persons bearing this popular surname). One of them is the question goal, hence, has Bronis\u0142aw Komorowski in its list of names.\nAs the process of entity recognition is imperfect, so is the automatic evaluation. However, it still lets us to notice general trends in answering performance with respect to several factors. Of course, the final evaluation needs to be checked manually."}, {"heading": "5 Results", "text": "As mentioned in previous section, the results consist of two groups: experiments, showing an influence of some aspects of algorithm on performance, and a final assessment. Both use the Polish Wikipedia as a knowledge base, whereas the questions asked belong to development and evaluation\nsets, respectively. In this section, recall measures percentage of questions, to which RAFAEL gave any answer, whereas precision denotes percentage of question answered correctly.\nWhen analysing results of different entity recognition techniques, we need to remember that they strongly rely on output of the question analysis, which is not perfect. In particular, tests show that 15.65 per cent of questions is assigned to wrong type and 17.81 per cent search results do not include the expected document (Przyby\u0142a, 2013a). The entity recognition (ER) stage, a focus of this work, is very unlikely to deliver valid answers in these cases. However, as the expected question type and source document are available in question metadata, it is possible to correct results of question analysis by artificially replacing a wrong type and/or adding the expected document to the retrieved set. In that way the ER modules could be evaluated, as if question analysis worked perfectly. Note that this approach slightly favours NER-based solutions as the question metadata contains general types and named entity types but lack focus synsets, used by DeepER."}, {"heading": "5.1 Experiments", "text": "The goal of the first experiment is to test how number a of documents retrieved from the search engine and analysed by the entity recognition techniques, influences the performance. Question classification errors have been bypassed as described in the previous paragraph. Additionally, two versions have been evaluated: with and without corrections of a retrieved set of documents. Figure 4 demonstrates results for different entity recognition techniques.\nAs we can see, if a retrieved set contains the desired article, adding new documents slightly increases recall, while precision drops observably. That is because additional irrelevant documents usually introduce noise. However, in some cases they are useful, as increasing recall indicates. On the other hand, if we have no guarantee of presence of the expected document in a list, it seems more desirable to extend it, especially for small sizes. For sets bigger than 50 elements, the noise factor again dominates our results. Judging by F1 measure, the optimal value is 20 documents.\nWhen it comes to the comparison, it should be noted that DeepER performs noticeably better than traditional NER. The gain in precision is small, but recall is almost twice as big. It could be easily explained by the fact that the NER solutions are unable to handle UNNAMED_ENTITY type, which accounts for 36 per cent of the entity questions.\nIt is also worthwhile to check how the system performs while using different values of minimal confidence rate (Jaccard similarity), as described in section 2.7. It could become useful when we demand higher precision and approve lower recall ratio. The plot in figure 5 shows answering performance using DeepER with corrected question analysis with respect to the minimal confidence rate. Generally, the system behaves as expected, but the exact values disappoint. The precision remain at a level of 25-40 per cent up to confidence 0.75, where in turn recall drops to 0.35 per cent only. Values of F1 measure suggest that 0.2 is the highest sensible confidence rate.\nOne more parameter worth testing, explained in section 2.7, is the context generation strategy. To find the entity with a context most similar to a question content, we could analyse a single sentence, where it appears, or a sequence of words of a predefined length7. For both of these solutions, we could also add a document title, as it is likely to be referred to by anaphoric expressions. Figure 6 shows the value of precision (recall does not depend on context) for these four solutions.\nWe can see that inclusion of a title in a context helps to achieve a better precision. The impact of anaphoric reference to title emerges clearly in case of flexible context \u2013 the difference grows with context size. Quite surprisingly, for the optimal context length (1.5 * question size), it is on the contrary. However, because of the small difference between the techniques including title, for the sake of simplicity, the single sentence is used in the final evaluation."}, {"heading": "5.2 Final System Evaluation", "text": "To impose a realistic challenge to the system, the evaluation set, used at this stage, substantially differs from the one used during the development (see section 4.1). A configuration for the final evaluation has been prepared based on results of the experiments. All of the tested versions share the following features:\n\u2013 no question analysis corrections, 7 Expressed as a multiplication of question content size.\n\u2013 question classification and query generation solutions which proved best in the previous experiments (see section 2.4), \u2013 a retrieved set of documents including 20 articles, \u2013 no minimal confidence, \u2013 singe sentence context with title.\nTested solutions differ with respect to entity recognition only; RAFEL variants based on the following options are considered:\nTable 3 shows results of the final evaluation, expressed by recall, precision, F1 measure and Mean Reciprocal Rank (MRR)8. Standard deviations of these values have been obtained by bootstrap resampling of the test set. Additionally, precision obtained by automatic evaluation has been added, where applicable9. As we can see, only a small percentage of questions is handled by the quantitative entities recognition. NER-based solutions deal with slightly more (Nerf ) or less (Liner2 ) than a half of the questions. When using DeepER, the recall ratio rises to 73 per cent while the precision does not differ significantly. That is because UNNAMED_ENTITY questions (unreachable for traditional NER) account for a substantial part of the test set. The maximum recall is obtained by the hybrid solution (90 per cent) but it comes at a cost of lower precision (33 per cent). On the other hand, when we take the whole ranking lists into account, traditional NERs seem to perform better (in terms of MRR).\nAs expected, the automatic evaluation underestimates precision, but the difference remains below 5 per cent. Judging by F1 measure, the hybrid solution seems to beat the others."}, {"heading": "6 Discussion", "text": "The main strength of DeepER compared to NER, according to results shown in figure 3, is much higher recall. Table 4 shows examples of questions, to which only DeepER provides a correct answer. As we can see (notice question foci in the table), they could not be assigned to any of the traditional NE categories.\nThe other striking fact in the results is low precision. A part of the wrong answers was inspected and most of the errors seem to result from the following phenomena:\n\u2013 Information given in question in concise form, in article appears scattered over many sentences.\n8 Evaluated automatically due to length of ranking lists. 9 Results obtained using Quant and Nerf may be expressed by quantities and dates, which are not supported by the entity-based automatic evaluation\n\u2013 Some of the pairs of words in question content and answer context are very related morphologically or semantically, but differ in lemmata, e.g. \u0142owca (huntsman) and \u0142owiectwo (huntsmanship) or my\u015bliwy (huntsman). \u2013 Because of rich inflection in Polish, a tagger quite often fails to select the correct lemma of a word, especially in case of proper names. \u2013 If several entities of a desired type appear in one sentence, the bag-of-words model does not suffice to select the best one.\nThe entity recognizers also introduce errors typical for them:\n\u2013 Quant ignores quantity types; therefore, a year is frequently returned as an answer to questions beginning with How many . . . . \u2013 Nerf and Liner2 have insufficient recall \u2013 they recognize only a fraction of entities of a desired type. \u2013 DeepER suffers from lack of word sense disambiguation, which impedes WordNet-based inference.\nThe last remark applies also to other techniques. For example, consider a word kot, which means a cat. However, it is also a name of a journal, a lake, a village, a badge (KOT ), a surname of 10 persons in the Polish Wikipedia and much more. A human would usually assume the most common meaning (a cat), but the system treats them as equally probable. It introduces noise in the process, as such an entity matches many types of questions.\nAnother thing that demands explanation is a difference in precision of answers found using Liner2 and DeepER: in evaluation set the latter does not maintain its advantage from development set. It could be explained by different compositions of the question sets (table 1) \u2013 the development one contains much more questions beginning with ambiguous pronouns, followed by a question focus, e.g. Kt\u00f3ry poeta. . . (which poet), thus providing a precise synset (a poet) for deep entity recognition. Members of the evaluation set much more frequently begin with pronouns like Kto . . . (who), where a synset corresponds to a general NE type (a person).\nAs RAFAEL is the first Polish QA system, able to answer by entities instead of documents, we can not compare it directly to any other solution. However, the evaluation set has been created based on questions published by Marci\u0144czuk et al. (2013) and used for evaluation of a document retrieval system (Marci\u0144czuk et al., 2013). Their baseline configuration achieved a@1 (percentage of\nquestions answered by the first document, corresponds to precision in table 3) equal 26.09 per cent. By taking into account proximity of keyword matches (MCSW method), they improved the result to 38.63 per cent. We can see that RAFAEL, despite solving much more challenging problem, in all configurations obtains better precision than baseline; using Liner2 it beats even the best method tested on this set (MCSW).\nThe results suggest two possible directions of future work to improve performance of RAFAEL. Firstly, involving semantics in sentence matching could solve some of the problems mentioned above. There are a lot of techniques in that area, also in QA systems (see a variety of them used by Yih et al. (2013)), but their implementation in a morphologically rich language would require a thorough study. For example, there exist techniques computing a semantic similarity based on a WordNet graph (Moldovan & Novischi, 2002), which is available for Polish and proved very useful in this study. Secondly, the relatively good performance of hybrid ER indicates that it may be good to apply different entity recognizer to different questions. For example, we could evaluate them for each question type separately and select the one that performs best for a given one. However, it would require much more training data to have a substantial number of questions of each type, including the scarce ones (observe sparsity of table 1).\nWhen it comes to DeepER, word ambiguity seem to be the main issue for future efforts. Of course, a full-lexicon precise word-sense disambiguation tool would solve the problem, but we can\u2019t expect it in near future. Instead, we could select a synset somewhere in a path between a focus synset and a named entity type. In the example from figure 3 rather than choosing between <prezydent.1, prezydent miasta.1> (president of a city) and <prezydent.2> (president of a country) we could use <urz\u0119dnik.1, biuralista.1> (official), which covers both meanings."}, {"heading": "7 Conclusions", "text": "This paper introduces RAFAEL, a complete open-domain question answering system for Polish. It is capable of analysing a given question, scanning a large corpus and extracting an answer, represented as a short string of text.\nIn its design, the focus has been on entity recognition techniques, used to extract all the entities compatible with a question from a given text. Apart from the traditional named entity recognition, differentiating between several broad categories of NEs, a novel technique, called Deep Entity Recognition (DeepER), has been proposed and implemented. It is able to find entities belonging to a given WordNet synset, using an entity library, gathered by interpreting definitions from encyclopaedia.\nAutomatic evaluation, provided by DeepER approach, has let to perform several experiments, showing answering accuracy with respect to different parameters. Their conclusions have been used to prepare final evaluation, which results have been checked manually. They suggest that the DeepER-based solution yields similar precision to NER, but is able to answer much more questions, including those beyond the traditional categories of named entities."}, {"heading": "Appendix A: Named Entity Recognition in RAFAEL", "text": "As mentioned in section 2.6, apart from DeepER, RAFAEL employs also traditional NER-based solutions for entity recognition: NERF, Liner2 and Quant. Each of them uses its own typology of named entities, which covers only a part of the types, enumerated in section 2.4. Table 5 shows a correspondence between these types. As we can see, there are a few problems:\n1. Many of NE types are not covered by neither NERF nor Liner2, 2. For all geographical types, NERF has only one type geogName, which may affect QA precision, 3. In case of CENTURY and YEAR, NERF recognizes only a more general type date, from which\nthey may be inferred, 4. Liner2 does not differentiate between NAME and SURNAME, classifying both as parts of\nperson_nam.\nThe problems 3 and 4 are solved by an additional postprocessing code, extracting CENTURY from date and NAME and SURNAME from person_nam entities. In case of multi-segment person entities it assumes that the first and last word correspond to first and last name, respectively.\nWhile NERF and Liner2 are standalone NER tools and details of their design are available in previously mentioned publications, Quant has been created specifically for RAFAEL. To find numbers, it annotates all chains of segments according to a predefined pattern, which accepts the following types of segments:\n1. (0-9)+ \u2013 a string consisting of digits only, 2. . \u2013 a period; a digit group separator in Polish , 3. , \u2013 a comma; a decimal mark in Polish , 4. num \u2013 a verbal expression of number, i.e. segments tagged as numerals.\nThe pattern is matched in greedy mode, i.e. it adds as many new segments as possible. It could recognise expressions like 10 tysi\u0119cy (10 thousand), kilka milion\u00f3w (several million), 10 000 or 1.698,88 (1,698.88).\nQuantity is a sequence of segments, recognised as a number, followed by a unit of measurement. To check whether a word denotes a unit of measurement, the plWordNet is searched for lexemes equal to its base. Then it suffices to check whether it belongs to a synset, having <jednostka miary 1> (unit of measurement) as one of (direct or indirect) hypernyms, e.g. pi\u0119tna\u015bcie kilogram\u00f3w (fifteen kilograms) or 5 000 wat\u00f3w (5 000 watts)."}, {"heading": "Acknowledgments", "text": "Study was supported by research fellowship within \"Information technologies: research and their interdisciplinary applications\" agreement number POKL.04.01.01-00-051/10-00. Critical reading of the manuscript by Agnieszka Mykowiecka and Aleksandra Brzezi\u0144ska is gratefully acknowledged."}], "references": [{"title": "A morphosyntactic Brill Tagger for inflectional languages", "author": ["S. Aceda\u0144ski"], "venue": "In Proceedings of the 7th international conference on Advances in Natural Language Processing", "citeRegEx": "Aceda\u0144ski,? \\Q2010\\E", "shortCiteRegEx": "Aceda\u0144ski", "year": 2010}, {"title": "Using Wikipedia at the TREC QA Track", "author": ["D. Ahn", "V. Jijkoun", "G. Mishne", "K. M\u00fcller", "M. De Rijke", "S. Schlobach"], "venue": "Proceedings of The Thirteenth Text REtrieval Conference (TREC", "citeRegEx": "Ahn et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Ahn et al\\.", "year": 2004}, {"title": "Information Retrieval Using a Macedonian Test Collection for Question Answering", "author": ["J. Armenska", "A. Tomovski", "K. Zdravkova", "J. Pehcevski"], "venue": "In Proceedings of the 2nd International Conference ICT Innovations,", "citeRegEx": "Armenska et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Armenska et al\\.", "year": 2010}, {"title": "Named entity recognition in Wikipedia", "author": ["D. Balasuriya", "N. Ringland", "J. Nothman", "T. Murphy", "J.R. Curran"], "venue": "In Proceedings of the 2009 Workshop on The People\u2019s Web Meets NLP: Collaboratively Constructed Semantic Resources,", "citeRegEx": "Balasuriya et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Balasuriya et al\\.", "year": 2009}, {"title": "An analysis of the AskMSR question-answering system. In Proceedings of the ACL-02 conference on Empirical methods in natural language processing", "author": ["E. Brill", "S. Dumais", "M. Banko"], "venue": "EMNLP \u201902,", "citeRegEx": "Brill et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Brill et al\\.", "year": 2002}, {"title": "Broad-coverage sense disambiguation and information extraction with a supersense sequence tagger", "author": ["M. Ciaramita", "Y. Altun"], "venue": "In Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing - EMNLP \u201906,", "citeRegEx": "Ciaramita and Altun,? \\Q2006\\E", "shortCiteRegEx": "Ciaramita and Altun", "year": 2006}, {"title": "Augmenting Wikipedia with Named Entity Tags", "author": ["W. Dakka", "S. Cucerzan"], "venue": "In Proceedings of the Third International Joint Conference on Natural Language Processing (IJCNLP", "citeRegEx": "Dakka and Cucerzan,? \\Q2008\\E", "shortCiteRegEx": "Dakka and Cucerzan", "year": 2008}, {"title": "Overview of the TREC 2007 Question Answering track", "author": ["H.T. Dang", "D. Kelly", "J. Lin"], "venue": "In Proceedings of The Sixteenth Text REtrieval Conference,", "citeRegEx": "Dang et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Dang et al\\.", "year": 2007}, {"title": "Towards the Lemmatisation of Polish Nominal Syntactic Groups Using a Shallow Grammar", "author": ["L. Deg\u00f3rski"], "venue": "Proceedings of the International Joint Conference on Security and Intelligent Information Systems,", "citeRegEx": "Deg\u00f3rski,? \\Q2012\\E", "shortCiteRegEx": "Deg\u00f3rski", "year": 2012}, {"title": "A Polish Question-Answering System for Business Information", "author": ["F. Duclaye", "J. Sitko", "P. Filoche", "O. Collin"], "venue": "In BIS 2002, 5th International Conference on Business Information Systems, Poznan\u0301,", "citeRegEx": "Duclaye et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Duclaye et al\\.", "year": 2002}, {"title": "Building Watson: An Overview of the DeepQA Project", "author": ["D.A. Ferrucci", "E. Brown", "J. Chu-carroll", "J. Fan", "D. Gondek", "A.A. Kalyanpur", "A. Lally", "J.W. Murdock", "E. Nyberg", "J. Prager", "N. Schlaefer", "C. Welty"], "venue": "AI Magazine,", "citeRegEx": "Ferrucci et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ferrucci et al\\.", "year": 2010}, {"title": "Lemmatizer for Document Information Retrieval Systems in JAVA", "author": ["L. Galambos"], "venue": "In Proceedings of the 28th Conference on Current Trends in Theory and Practice of Informatics (SOFSEM", "citeRegEx": "Galambos,? \\Q2001\\E", "shortCiteRegEx": "Galambos", "year": 2001}, {"title": "The role of lexico-semantic feedback in open-domain textual question-answering", "author": ["S. Harabagiu", "D. Moldovan", "M. Pasca", "R. Mihalcea", "M. Surdeanu", "R. Bunescu", "R. G\u00eerju", "V. Rus", "P. Morarescu"], "venue": "In Proceedings of the 39th Annual Meeting on Association for Computational Linguistics - ACL \u201901,", "citeRegEx": "Harabagiu et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Harabagiu et al\\.", "year": 2001}, {"title": "Question Answering in Webclopedia", "author": ["E. Hovy", "L. Gerber", "U. Hermjakob", "M. Junk", "Lin", "C.-Y"], "venue": "In Proceedings of The Ninth Text REtrieval Conference (TREC", "citeRegEx": "Hovy et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Hovy et al\\.", "year": 2000}, {"title": "\u00c9tude comparative de la distribution florale dans une portion des Alpes et des Jura", "author": ["P. Jaccard"], "venue": "Bulletin del la Socie\u0301te\u0301 Vaudoise des Sciences Naturelles,", "citeRegEx": "Jaccard,? \\Q1901\\E", "shortCiteRegEx": "Jaccard", "year": 1901}, {"title": "Jeden z dziesi\u0119ciu - pytania i odpowiedzi", "author": ["M. Karzewski"], "venue": "Muza SA", "citeRegEx": "Karzewski,? \\Q1997\\E", "shortCiteRegEx": "Karzewski", "year": 1997}, {"title": "Integrating Web-based and corpus-based techniques for question answering", "author": ["B. Katz", "J. Lin", "D. Loreto", "W. Hildebrandt", "M. Bilotti", "S. Felshin", "A. Fernandes", "G. Marton", "F. Mora"], "venue": "In Proceedings of the Twelfth Text REtrieval Conference (TREC", "citeRegEx": "Katz et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Katz et al\\.", "year": 2003}, {"title": "Exploiting Wikipedia as External Knowledge for Named Entity Recognition", "author": ["J. Kazama", "K. Torisawa"], "venue": "Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning", "citeRegEx": "Kazama and Torisawa,? \\Q2007\\E", "shortCiteRegEx": "Kazama and Torisawa", "year": 2007}, {"title": "Question Answering for Not Yet Semantic Web", "author": ["M. Konop\u00edk", "O. Rohl\u00edk"], "venue": "In Proceedings of the 13th International Conference on Text, Speech and Dialogue (TSD", "citeRegEx": "Konop\u00edk and Rohl\u00edk,? \\Q2010\\E", "shortCiteRegEx": "Konop\u00edk and Rohl\u00edk", "year": 2010}, {"title": "Creating a Coreference Resolution System for Polish", "author": ["M. Kope\u0107", "M. Ogrodniczuk"], "venue": null, "citeRegEx": "Kope\u0107 and Ogrodniczuk,? \\Q2012\\E", "shortCiteRegEx": "Kope\u0107 and Ogrodniczuk", "year": 2012}, {"title": "Extracting Template for Knowledgebased Question-Answering Using Conditional Random Fields", "author": ["C. Lee", "Wang", "J.-H", "Kim", "H.-J", "Jang", "M.-G"], "venue": "In Proceedings of the 28th Annual International ACM SIGIR Workshop on MFIR, (pp. 428\u2013434)", "citeRegEx": "Lee et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Lee et al\\.", "year": 2005}, {"title": "Learning Question Classifiers", "author": ["X. Li", "D. Roth"], "venue": "In Proceedings of the 19th International Conference on Computational Linguistics (COLING-2002),", "citeRegEx": "Li and Roth,? \\Q2002\\E", "shortCiteRegEx": "Li and Roth", "year": 2002}, {"title": "Question Classification for a Croatian QA System", "author": ["T. Lombarovi\u0107", "J. \u0160najder", "B.D. Ba\u0161i\u0107"], "venue": "In Proceedings of the 14th International Conference on Text, Speech and Dialogue (TSD", "citeRegEx": "Lombarovi\u0107 et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Lombarovi\u0107 et al\\.", "year": 2011}, {"title": "Fine-grained proper noun ontologies for question answering", "author": ["G.S. Mann"], "venue": "In Proceedings of the 2002 workshop on Building and using semantic networks (SEMANET \u201902),", "citeRegEx": "Mann,? \\Q2002\\E", "shortCiteRegEx": "Mann", "year": 2002}, {"title": "Optimizing CRF-based Model for Proper Name Recognition in Polish Texts", "author": ["M. Marci\u0144czuk", "M. Janicki"], "venue": "In Proceedings of CICLing", "citeRegEx": "Marci\u0144czuk and Janicki,? \\Q2012\\E", "shortCiteRegEx": "Marci\u0144czuk and Janicki", "year": 2012}, {"title": "Open dataset for development of Polish Question Answering systems. In Proceedings of the 6th Language & Technology Conference: Human Language Technologies as a Challenge for Computer Science and Linguistics", "author": ["M. Marci\u0144czuk", "M. Ptak", "A. Radziszewski", "M. Piasecki"], "venue": "Wydawnictwo Poznan\u0301skie, Fundacja Uniwersytetu im. Adama Mickiewicza", "citeRegEx": "Marci\u0144czuk et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Marci\u0144czuk et al\\.", "year": 2013}, {"title": "Evaluation of a Baseline Information Retrieval for a Polish Open-domain Question Answering System", "author": ["M. Marci\u0144czuk", "A. Radziszewski", "M. Piasecki", "D. Piasecki", "M. Ptak"], "venue": "In Proceedings of the International Conference Recent Advances in Natural Language Processing (RANLP", "citeRegEx": "Marci\u0144czuk et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Marci\u0144czuk et al\\.", "year": 2013}, {"title": "Approaching plWordNet 2.0", "author": ["M. Maziarz", "M. Piasecki", "S. Szpakowicz"], "venue": "In Proceedings of the 6th Global Wordnet Conference", "citeRegEx": "Maziarz et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Maziarz et al\\.", "year": 2012}, {"title": "The structure and performance of an open-domain question answering system", "author": ["D. Moldovan", "S. Harabagiu", "M. Pa\u015fca", "R. Mihalcea", "R. G\u00eerju", "R. Goodrum", "V. Rus"], "venue": null, "citeRegEx": "Moldovan et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Moldovan et al\\.", "year": 2000}, {"title": "Lexical chains for question answering", "author": ["D. Moldovan", "A. Novischi"], "venue": "In Proceedings of the 19th International Conference on Computational Linguistics", "citeRegEx": "Moldovan and Novischi,? \\Q2002\\E", "shortCiteRegEx": "Moldovan and Novischi", "year": 2002}, {"title": "WhyQuestion Answering using Intra- and Inter-Sentential Causal Relations", "author": ["Oh", "J.-h", "K. Torisawa", "C. Hashimoto", "M. Sano", "S.D. Saeger", "K. Ohtake"], "venue": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Oh et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Oh et al\\.", "year": 2013}, {"title": "Bulgarian-english question answering: adaptation of language resources", "author": ["P. Osenova", "A. Simov", "K. Simov", "H. Tanev", "M. Kouylekov"], "venue": "Science, (pp. 458\u2013469)", "citeRegEx": "Osenova et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Osenova et al\\.", "year": 2004}, {"title": "Semantic Retrieval Approach to Factoid Question Answering for Bulgarian", "author": ["S. Peshterliev", "I. Koychev"], "venue": "In Proceedings of the 3rd International Conference on Software, Services and Semantic Technologies", "citeRegEx": "Peshterliev and Koychev,? \\Q2011\\E", "shortCiteRegEx": "Peshterliev and Koychev", "year": 2011}, {"title": "Question answering in Polish using shallow parsing", "author": ["D. Piechoci\u0144ski", "A. Mykowiecka"], "venue": "Computer Treatment of Slavic and East European Languages: Proceedings of the Third International Seminar,", "citeRegEx": "Piechoci\u0144ski and Mykowiecka,? \\Q2005\\E", "shortCiteRegEx": "Piechoci\u0144ski and Mykowiecka", "year": 2005}, {"title": "Deriving a Large Scale Taxonomy from Wikipedia", "author": ["S.P. Ponzetto", "M. Strube"], "venue": "Artificial Intelligence,", "citeRegEx": "Ponzetto and Strube,? \\Q2007\\E", "shortCiteRegEx": "Ponzetto and Strube", "year": 2007}, {"title": "Slavonic information extraction and partial parsing. In Proceedings of the Workshop on Balto-Slavonic Natural Language Processing Information Extraction and Enabling Technologies - ACL \u201907", "author": ["A. Przepi\u00f3rkowski"], "venue": null, "citeRegEx": "Przepi\u00f3rkowski,? \\Q2007\\E", "shortCiteRegEx": "Przepi\u00f3rkowski", "year": 2007}, {"title": "Powierzchniowe przetwarzanie j\u0119zyka polskiego", "author": ["A. Przepi\u00f3rkowski"], "venue": "Warszawa: Akademicka Oficyna Wydawnicza EXIT", "citeRegEx": "Przepi\u00f3rkowski,? \\Q2008\\E", "shortCiteRegEx": "Przepi\u00f3rkowski", "year": 2008}, {"title": "Narodowy Korpus J\u0119zyka Polskiego. Warszawa: Wydawnictwo Naukowe PWN", "author": ["A. Przepi\u00f3rkowski", "M. Ba\u0144ko", "R.L. G\u00f3rski", "B. Lewandowska-Tomaszczyk"], "venue": null, "citeRegEx": "Przepi\u00f3rkowski et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Przepi\u00f3rkowski et al\\.", "year": 2012}, {"title": "Issues of Polish Question Answering", "author": ["P. Przyby\u0142a"], "venue": "(ITRIA", "citeRegEx": "Przyby\u0142a,? \\Q2012\\E", "shortCiteRegEx": "Przyby\u0142a", "year": 2012}, {"title": "Question Analysis for Polish Question Answering", "author": ["P. Przyby\u0142a"], "venue": "Proceedings of the Student Research Workshop,", "citeRegEx": "Przyby\u0142a,? \\Q2013\\E", "shortCiteRegEx": "Przyby\u0142a", "year": 2013}, {"title": "Question Classification for Polish Question Answering", "author": ["P. Przyby\u0142a"], "venue": "Proceedings of the 20th International Conference on Language Processing and Intelligent Information Systems (LP&IIS", "citeRegEx": "Przyby\u0142a,? \\Q2013\\E", "shortCiteRegEx": "Przyby\u0142a", "year": 2013}, {"title": "Mining Wiki Resources for Multilingual Named Entity Recognition", "author": ["A.E. Richman", "P. Schone"], "venue": "In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics (ACL", "citeRegEx": "Richman and Schone,? \\Q2008\\E", "shortCiteRegEx": "Richman and Schone", "year": 2008}, {"title": "Automatic Assignment of Wikipedia Encyclopedic Entries to WordNet Synsets", "author": ["M. Ruiz-Casado", "E. Alfonseca", "P. Castells"], "venue": "Advances in Web Intelligence,", "citeRegEx": "Ruiz.Casado et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Ruiz.Casado et al\\.", "year": 2005}, {"title": "Populating a multilingual ontology of proper names from open sources", "author": ["A. Savary", "L. Manicki", "M. Baron"], "venue": "Journal of Language Modelling,", "citeRegEx": "Savary et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Savary et al\\.", "year": 2013}, {"title": "Narz\u0119dzia do anotacji jednostek nazewniczych", "author": ["A. Savary", "J. Waszczuk"], "venue": "In Narodowy Korpus Je\u0328zyka Polskiego [Eng.: National Corpus of Polish] (pp. 225\u2013252). Wydawnictwo Naukowe PWN", "citeRegEx": "Savary and Waszczuk,? \\Q2012\\E", "shortCiteRegEx": "Savary and Waszczuk", "year": 2012}, {"title": "Encyclopedia of Artificial Intelligence", "author": ["S.C. Shapiro"], "venue": null, "citeRegEx": "Shapiro,? \\Q1992\\E", "shortCiteRegEx": "Shapiro", "year": 1992}, {"title": "BulQA: Bulgarian\u2013bulgarian question answering at CLEF", "author": ["K. Simov", "P. Osenova"], "venue": "Proceedings of the 6th international conference on Cross-Language Evalution Forum: accessing Multilingual Information Repositories (CLEF\u201905),", "citeRegEx": "Simov and Osenova,? \\Q2005\\E", "shortCiteRegEx": "Simov and Osenova", "year": 2005}, {"title": "Dependency-Based Algorithms for Answer Validation Task in Russian Question Answering", "author": ["A. Solovyev"], "venue": "In Proceedings of the 25th International Conference on Language Processing and Knowledge in the Web (GSCL", "citeRegEx": "Solovyev,? \\Q2013\\E", "shortCiteRegEx": "Solovyev", "year": 2013}, {"title": "Socrates - a Question Answering prototype for Bulgarian", "author": ["H. Tanev"], "venue": null, "citeRegEx": "Tanev,? \\Q2004\\E", "shortCiteRegEx": "Tanev", "year": 2004}, {"title": "A proposal to automatically build and maintain gazetteers for Named Entity Recognition by using Wikipedia", "author": ["A. Toral", "R. Mu\u00f1oz"], "venue": "In Proceedings of the 11th Conference of the European Chapter of the Association", "citeRegEx": "Toral and Mu\u00f1oz,? \\Q2006\\E", "shortCiteRegEx": "Toral and Mu\u00f1oz", "year": 2006}, {"title": "Named Entity WordNet", "author": ["A. Toral", "R. Mu\u00f1oz", "M. Monachini"], "venue": "In Proceedings of the International Conference on Language Resources and Evaluation,", "citeRegEx": "Toral et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Toral et al\\.", "year": 2008}, {"title": "Developing a question answering system for the slovene language", "author": ["I. \u010ceh", "M. Ojster\u0161ek"], "venue": "WSEAS Transactions on Information Science and Applications,", "citeRegEx": "\u010ceh and Ojster\u0161ek,? \\Q2009\\E", "shortCiteRegEx": "\u010ceh and Ojster\u0161ek", "year": 2009}, {"title": "PROLOG Implementation of an Access in Polish to a Data Base. In Studia z automatyki, XII (pp. 5\u201323)", "author": ["Z. Vetulani"], "venue": null, "citeRegEx": "Vetulani,? \\Q1988\\E", "shortCiteRegEx": "Vetulani", "year": 1988}, {"title": "How to answer yes/no spatial questions using qualitative reasoning", "author": ["M. Walas"], "venue": "13th International Conference on Computational Linguistics and Intelligent Text Processing,", "citeRegEx": "Walas,? \\Q2012\\E", "shortCiteRegEx": "Walas", "year": 2012}, {"title": "Named entity recognition in a Polish question answering system", "author": ["M. Walas", "K. Jassem"], "venue": "In Intelligent Information Systems, (pp. 181\u2013191)", "citeRegEx": "Walas and Jassem,? \\Q2010\\E", "shortCiteRegEx": "Walas and Jassem", "year": 2010}, {"title": "Spatial reasoning and disambiguation in the process of knowledge acquisition. In Proceedings of the 5th Language & Technology Conference: Human Language Technologies as a Challenge for Computer Science and Linguistics, (pp. 420\u2013424)", "author": ["M. Walas", "K. Jassem"], "venue": "Fundacja Uniwersytetu im. Adama Mickiewicza", "citeRegEx": "Walas and Jassem,? \\Q2011\\E", "shortCiteRegEx": "Walas and Jassem", "year": 2011}, {"title": "Morfeusz \u2014 a Practical Tool for the Morphological Analysis of Polish", "author": ["M. Woli\u0144ski"], "venue": "Intelligent Information Processing and Web Mining (pp. 511\u2013520)", "citeRegEx": "Woli\u0144ski,? \\Q2006\\E", "shortCiteRegEx": "Woli\u0144ski", "year": 2006}, {"title": "Question Answering Using Enhanced Lexical Semantic Models", "author": ["Yih", "W.-t", "Chang", "M.-w", "C. Meek", "A. Pastusiak"], "venue": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Yih et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Yih et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 7, "context": "It has resulted in valuable contributions within TREC competitions (Dang et al., 2007) and, quite recently, in a system called IBM Watson (Ferrucci et al.", "startOffset": 67, "endOffset": 86}, {"referenceID": 10, "context": ", 2007) and, quite recently, in a system called IBM Watson (Ferrucci et al., 2010), successfully competing with humans in the task.", "startOffset": 59, "endOffset": 82}, {"referenceID": 43, "context": "So broadly defined task seems very hard; Shapiro (1992) describes it as AI-Complete, i.", "startOffset": 41, "endOffset": 56}, {"referenceID": 35, "context": "3) is far from trivial because of a complicated named entity inflection in Polish (typical for Slavonic languages, see (Przepi\u00f3rkowski, 2007)).", "startOffset": 119, "endOffset": 141}, {"referenceID": 38, "context": "More information about the task, including its motivation, difficulties and a feasibility study for Polish could be found in (Przyby\u0142a, 2012).", "startOffset": 125, "endOffset": 141}, {"referenceID": 51, "context": "First Polish QA attempts date back to 1985, when Vetulani (1988) presented a Polish interface to ORBIS database, containing information about the solar system.", "startOffset": 49, "endOffset": 65}, {"referenceID": 9, "context": "Another early solution, presented by Duclaye et al. (2002), could only work in a restricted domain (business information).", "startOffset": 37, "endOffset": 59}, {"referenceID": 31, "context": "Previously the same team (Osenova et al., 2004) took part in a Bulgarian-English track of the CLEF 2004, in which Bulgarian questions were answered using English texts.", "startOffset": 25, "endOffset": 47}, {"referenceID": 47, "context": "A system dealing with a subset of the TREC tasks was created for Bulgarian by Tanev (2004). His solution answers only three types of questions: Definition, Where-Is and Temporal.", "startOffset": 78, "endOffset": 91}, {"referenceID": 53, "context": "In their later works (Walas, 2012; Walas & Jassem, 2011), the team concentrated on spatial reasoning using a knowledge base encoded as a set of predicates.", "startOffset": 21, "endOffset": 56}, {"referenceID": 53, "context": "More recently, several elements of a Polish QA system called Hipisek were presented by Walas & Jassem (2010). It bases on a fairly common scheme of transforming a question into a search query and finding the most appropriate sentence, satisfying question constrains.", "startOffset": 87, "endOffset": 109}, {"referenceID": 25, "context": "The last Polish system worth mentioning has been created by Marci\u0144czuk et al. (2013). Generally, their task, called Open Domain Question Answering (ODQA), resembles what is treated here, but with one major difference.", "startOffset": 60, "endOffset": 85}, {"referenceID": 2, "context": "document retrieval for Macedonian (Armenska et al., 2010), question classification for Croatian (Lombarovi\u0107 et al.", "startOffset": 34, "endOffset": 57}, {"referenceID": 22, "context": ", 2010), question classification for Croatian (Lombarovi\u0107 et al., 2011) or answer validation for Russian (Solovyev, 2013).", "startOffset": 46, "endOffset": 71}, {"referenceID": 47, "context": ", 2011) or answer validation for Russian (Solovyev, 2013).", "startOffset": 41, "endOffset": 57}, {"referenceID": 13, "context": "A general architectural scheme of RAFAEL (figure 1) has been inspired by similar systems developed for English; for examples see works by Hovy et al. (2000) and Moldovan et al.", "startOffset": 138, "endOffset": 157}, {"referenceID": 13, "context": "A general architectural scheme of RAFAEL (figure 1) has been inspired by similar systems developed for English; for examples see works by Hovy et al. (2000) and Moldovan et al. (2000).", "startOffset": 138, "endOffset": 184}, {"referenceID": 11, "context": "62 is used to build two separate full-text indices: regular and stemmed using a built-in stemmer for Polish, Stempel (Galambos, 2001).", "startOffset": 117, "endOffset": 133}, {"referenceID": 56, "context": "82 (Woli\u0144ski, 2006),", "startOffset": 3, "endOffset": 19}, {"referenceID": 0, "context": "1 (Aceda\u0144ski, 2010),", "startOffset": 2, "endOffset": 19}, {"referenceID": 36, "context": "7 (Przepi\u00f3rkowski, 2008) with a Polish grammar, including improved version of modifications by Deg\u00f3rski (2012), enabling lemmatisation of nominal syntactic groups,", "startOffset": 2, "endOffset": 24}, {"referenceID": 8, "context": "7 (Przepi\u00f3rkowski, 2008) with a Polish grammar, including improved version of modifications by Deg\u00f3rski (2012), enabling lemmatisation of nominal syntactic groups,", "startOffset": 95, "endOffset": 111}, {"referenceID": 37, "context": "All the annotations are stored in a variant of TEI P5 standard, designed for the National Corpus of Polish (Przepi\u00f3rkowski et al., 2012).", "startOffset": 107, "endOffset": 136}, {"referenceID": 13, "context": "As noted previously, the process of annotating is not indispensable at the stage of offline KB processing; it could be as well executed only on documents returned from the search engine (for example see Webclopedia by Hovy et al. (2000) or LASSO by Moldovan et al.", "startOffset": 218, "endOffset": 237}, {"referenceID": 13, "context": "As noted previously, the process of annotating is not indispensable at the stage of offline KB processing; it could be as well executed only on documents returned from the search engine (for example see Webclopedia by Hovy et al. (2000) or LASSO by Moldovan et al. (2000)).", "startOffset": 218, "endOffset": 272}, {"referenceID": 20, "context": "Nevertheless, some (Lee et al., 2005) use solely such patterns, but need a great number of them (1,273).", "startOffset": 19, "endOffset": 37}, {"referenceID": 27, "context": "1 (Maziarz et al., 2012).", "startOffset": 2, "endOffset": 24}, {"referenceID": 12, "context": "A WordNet-assisted focus analysis was also implemented in one of solutions participating in a TREC competition (Harabagiu et al., 2001).", "startOffset": 111, "endOffset": 135}, {"referenceID": 4, "context": "Hence, a query created directly from words of the question would not yield results, unless using a highly-redundant KB, such as the WWW (for this type of solution see (Brill et al., 2002)).", "startOffset": 167, "endOffset": 187}, {"referenceID": 16, "context": "Therefore, some of the query terms should be dropped \u2013 based on their low IDF (Katz et al., 2003) or more complex heuristics (Moldovan et al.", "startOffset": 78, "endOffset": 97}, {"referenceID": 28, "context": ", 2003) or more complex heuristics (Moldovan et al., 2000).", "startOffset": 35, "endOffset": 58}, {"referenceID": 13, "context": "On the other hand, the query may be expanded with synonyms (Hovy et al., 2000) or derived morphological forms (Katz et al.", "startOffset": 59, "endOffset": 78}, {"referenceID": 16, "context": ", 2000) or derived morphological forms (Katz et al., 2003).", "startOffset": 39, "endOffset": 58}, {"referenceID": 56, "context": "The method of treating sentences as a context has gained most popularity (see work of Yih et al. (2013)), but a window of fixed size also appears in the literature; for example Katz et al.", "startOffset": 86, "endOffset": 104}, {"referenceID": 16, "context": "(2013)), but a window of fixed size also appears in the literature; for example Katz et al. (2003) used one with M=140 bytes.", "startOffset": 80, "endOffset": 99}, {"referenceID": 14, "context": "4) and an entity context (generated by the procedures in previous section), a Jaccard similarity index (Jaccard, 1901) is computed.", "startOffset": 103, "endOffset": 118}, {"referenceID": 57, "context": "A study of different techniques for sentence similarity assessment could be found in (Yih et al., 2013).", "startOffset": 85, "endOffset": 103}, {"referenceID": 1, "context": "The Jaccard index is a popular solution for sentence similarity measurement in QA (for example see a system by Ahn et al. (2004)).", "startOffset": 111, "endOffset": 129}, {"referenceID": 1, "context": "The Jaccard index is a popular solution for sentence similarity measurement in QA (for example see a system by Ahn et al. (2004)). In case of selecting relevant documents, cosine measure is also applied. Marci\u0144czuk et al. (2013) compared it to Minimal Span Weighting (MSW) and observed that the latter performs better, as it takes into account a distance between matched words.", "startOffset": 111, "endOffset": 229}, {"referenceID": 10, "context": "The refusal to answer in case of insufficient confidence plays an important role in Jeopardy!, hence in IBM Watson (Ferrucci et al., 2010), but it was also used to improve precision in other QA systems (Oh et al.", "startOffset": 115, "endOffset": 138}, {"referenceID": 30, "context": ", 2010), but it was also used to improve precision in other QA systems (Oh et al., 2013).", "startOffset": 71, "endOffset": 88}, {"referenceID": 35, "context": "The task of adaptation of such a base to another language is far from trivial, especially for Slavonic languages with complex NE inflection (Przepi\u00f3rkowski, 2007).", "startOffset": 140, "endOffset": 162}, {"referenceID": 35, "context": "The task of adaptation of such a base to another language is far from trivial, especially for Slavonic languages with complex NE inflection (Przepi\u00f3rkowski, 2007). An ontology taking into account Polish inflection (Prolexbase) has been created by Savary et al. (2013), but it contains only 40,000 names, grouped into 34 types.", "startOffset": 141, "endOffset": 268}, {"referenceID": 23, "context": "A technique of coordinating synsets assigned to a question and a possible answer emerged in a study by Mann (2002). While a question analysis there seems very similar to this work, entity library (called proper noun ontology) generation differs a lot.", "startOffset": 103, "endOffset": 115}, {"referenceID": 23, "context": "A technique of coordinating synsets assigned to a question and a possible answer emerged in a study by Mann (2002). While a question analysis there seems very similar to this work, entity library (called proper noun ontology) generation differs a lot. The author analysed 1 GB of newswire text and extracted certain expressions, e.g. \"X, such as Y\" implies that Y is an instance of X. Albeit precision of resulting base was not very good (47 per cent for non-people proper names), it led to a substantial improvement of QA performance. The idea of analysing encyclopaedic definitions to obtain this type of information already appeared, but was employed for different applications. For example, Toral & Mu\u00f1oz (2006) described a method of building a gazetteer by analysing hyperonymy branches of nouns of first sentences in Wikipedia definitions.", "startOffset": 103, "endOffset": 716}, {"referenceID": 23, "context": "A technique of coordinating synsets assigned to a question and a possible answer emerged in a study by Mann (2002). While a question analysis there seems very similar to this work, entity library (called proper noun ontology) generation differs a lot. The author analysed 1 GB of newswire text and extracted certain expressions, e.g. \"X, such as Y\" implies that Y is an instance of X. Albeit precision of resulting base was not very good (47 per cent for non-people proper names), it led to a substantial improvement of QA performance. The idea of analysing encyclopaedic definitions to obtain this type of information already appeared, but was employed for different applications. For example, Toral & Mu\u00f1oz (2006) described a method of building a gazetteer by analysing hyperonymy branches of nouns of first sentences in Wikipedia definitions. Unlike in this work, an original synset was replaced by a coarse-grained NER category. Another example of application is a NE recognizer (Kazama & Torisawa, 2007) using words from a definition as additional features for a standard CRF classifier. In their definition analysis only the last word of the first nominal group was used. Other researchers dealt with a task explicitly defined as classifying Wikipedia entries to NER categories. For example Dakka & Cucerzan (2008) addressed the problem by combining traditional text classification techniques (bag of words) with contexts of entity mentions.", "startOffset": 103, "endOffset": 1321}, {"referenceID": 42, "context": "Exploring a correspondence between Wikipedia entries and WordNet synsets found an application in automatic enriching ontologies with encyclopaedic descriptions (Ruiz-Casado et al., 2005).", "startOffset": 160, "endOffset": 186}, {"referenceID": 50, "context": "which of the meanings of Jupiter corresponds to which Wikipedia article? Others (Toral et al., 2008) concentrated on the opposite, i.", "startOffset": 80, "endOffset": 100}, {"referenceID": 3, "context": "A thorough study of this problem, presented by Balasuriya et al. (2009), utilizes features extracted from article content (bag of words), categories, keywords, inter-article and inter-language links.", "startOffset": 47, "endOffset": 72}, {"referenceID": 3, "context": "A thorough study of this problem, presented by Balasuriya et al. (2009), utilizes features extracted from article content (bag of words), categories, keywords, inter-article and inter-language links. A final annotated corpus turns out as good for NER training as a manually annotated gold standard. Finally, some researchers try to generalise NER to other categories, but keep the same machinelearning-based approach. For example, Ciaramita & Altun (2006) developed a tagger, assigning words in a text to one of 41 supersenses.", "startOffset": 47, "endOffset": 456}, {"referenceID": 42, "context": "First of all, they differ a lot from the studies that involve a definition represented with a bag of words (Dakka & Cucerzan, 2008; Ruiz-Casado et al., 2005; Balasuriya et al., 2009).", "startOffset": 107, "endOffset": 182}, {"referenceID": 3, "context": "First of all, they differ a lot from the studies that involve a definition represented with a bag of words (Dakka & Cucerzan, 2008; Ruiz-Casado et al., 2005; Balasuriya et al., 2009).", "startOffset": 107, "endOffset": 182}, {"referenceID": 3, "context": ", 2005; Balasuriya et al., 2009). Here, a certain definition structure is assumed, i.e. a series of nominal groups divided by separators. What is more, as the full stop belongs to them, the series may continue beyond a single sentence, which has improved recall in preliminary experiments. Availability of a shallow parsing layer and group lemmatisation allows to query WordNet by syntactic groups instead of single nouns, as in work of Toral & Mu\u00f1oz (2006). As word order is relatively free in Polish, a nominal group cannot be assumed to end with a noun, like Kazama & Torisawa (2007) did.", "startOffset": 8, "endOffset": 458}, {"referenceID": 3, "context": ", 2005; Balasuriya et al., 2009). Here, a certain definition structure is assumed, i.e. a series of nominal groups divided by separators. What is more, as the full stop belongs to them, the series may continue beyond a single sentence, which has improved recall in preliminary experiments. Availability of a shallow parsing layer and group lemmatisation allows to query WordNet by syntactic groups instead of single nouns, as in work of Toral & Mu\u00f1oz (2006). As word order is relatively free in Polish, a nominal group cannot be assumed to end with a noun, like Kazama & Torisawa (2007) did.", "startOffset": 8, "endOffset": 587}, {"referenceID": 35, "context": "Their rich inflection in Polish (Przepi\u00f3rkowski, 2007) means that a nominal suffix of an entity may be hard to predict.", "startOffset": 32, "endOffset": 54}, {"referenceID": 15, "context": "Development set bases on 1500 (1130 after filtering6) questions from a Polish quiz TV show, called Jeden z dziesi\u0119ciu (Karzewski, 1997).", "startOffset": 118, "endOffset": 135}, {"referenceID": 15, "context": "Development set bases on 1500 (1130 after filtering6) questions from a Polish quiz TV show, called Jeden z dziesi\u0119ciu (Karzewski, 1997). It was involved in previous experiments (Przyby\u0142a, 2013b,a). 2. Evaluation set bases on an open dataset for Polish QA systems, published by Marci\u0144czuk et al. (2013). It has been gathered from Did you know.", "startOffset": 119, "endOffset": 302}, {"referenceID": 25, "context": "(2013) and used for evaluation of a document retrieval system (Marci\u0144czuk et al., 2013).", "startOffset": 62, "endOffset": 87}, {"referenceID": 25, "context": "However, the evaluation set has been created based on questions published by Marci\u0144czuk et al. (2013) and used for evaluation of a document retrieval system (Marci\u0144czuk et al.", "startOffset": 77, "endOffset": 102}, {"referenceID": 57, "context": "There are a lot of techniques in that area, also in QA systems (see a variety of them used by Yih et al. (2013)), but their implementation in a morphologically rich language would require a thorough study.", "startOffset": 94, "endOffset": 112}], "year": 2016, "abstractText": "In this paper an open-domain factoid question answering system for Polish, RAFAEL, is presented. The system goes beyond finding an answering sentence; it also extracts a single string, corresponding to the required entity. Herein the focus is placed on different approaches to entity recognition, essential for retrieving information matching question constraints. Apart from traditional approach, including named entity recognition (NER) solutions, a novel technique, called Deep Entity Recognition (DeepER), is introduced and implemented. It allows a comprehensive search of all forms of entity references matching a given WordNet synset (e.g. an impressionist), based on a previously assembled entity library. It has been created by analysing the first sentences of encyclopaedia entries and disambiguation and redirect pages. DeepER also provides automatic evaluation, which makes possible numerous experiments, including over a thousand questions from a quiz TV show answered on the grounds of Polish Wikipedia. The final results of a manual evaluation on a separate question set show that the strength of DeepER approach lies in its ability to answer questions that demand answers beyond the traditional categories of named entities.", "creator": "LaTeX with hyperref package"}}}