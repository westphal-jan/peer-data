{"id": "1606.01113", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Jun-2016", "title": "ECMdd: Evidential c-medoids clustering with multiple prototypes", "abstract": "This paper proposes a new prototype-based clustering method called Evidential C-Medoids (ECMdd), which belongs to the family of medoid-based clustering for proximity data and is used as an extension of the Fuzzy C-Medoids (FCMdd) within the theoretical framework of belief functions. In the application of FCMdd and the original ECMdd, a single medoid (prototype) that is supposed to belong to the object set is used to represent a class. To solve this problem, a variation of the ECMdd with a single medoid is called sECMdd. In real cluster applications, where only one pattern is used to capture or interpret a class, it may not be able to sufficiently model different types of group structures, thereby limiting cluster performance. To solve this problem, a variation of the ECMdd using several weighted medoids designated by wECMdd can represent the results of the target strength and target values clearly.", "histories": [["v1", "Fri, 3 Jun 2016 14:44:15 GMT  (609kb,D)", "http://arxiv.org/abs/1606.01113v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["kuang zhou", "arnaud martin", "quan pan", "zhun-ga liu"], "accepted": false, "id": "1606.01113"}, "pdf": {"name": "1606.01113.pdf", "metadata": {"source": "CRF", "title": "ECMdd: Evidential c-medoids clustering with multiple prototypes", "authors": ["Kuang Zhoua", "Arnaud Martin", "Quan Pan", "Zhun-ga Liu"], "emails": ["kzhoumath@163.com", "Arnaud.Martin@univ-rennes1.fr"], "sections": [{"heading": null, "text": "In this work, a new prototype-based clustering method named Evidential C-Medoids (ECMdd), which belongs to the family of medoid-based clustering for proximity data, is proposed as an extension of Fuzzy C-Medoids (FCMdd) on the theoretical framework of belief functions. In the application of FCMdd and original ECMdd, a single medoid (prototype), which is supposed to belong to the object set, is utilized to represent one class. For the sake of clarity, this kind of ECMdd using a single medoid is denoted by sECMdd. In real clustering applications, using only one pattern to capture or interpret a class may not adequately model different types of group structure and hence limits the clustering performance. In order to address this problem, a variation of ECMdd using multiple weighted medoids, denoted by wECMdd, is presented. Unlike sECMdd, in wECMdd objects in each cluster carry various weights describing their degree of representativeness for that class. This mechanism enables each class to be represented by more than one object. Experimental results in synthetic and real data sets clearly demonstrate the superiority of sECMdd and wECMdd. Moreover, the clustering results by wECMdd can provide richer information for the inner structure of the detected classes with the help of prototype weights.\nKeywords: Credal partitions, Relational clustering, Multiple prototypes, Imprecise classes\n1. Introduction\nClustering, or unsupervised learning, is a useful technique to detect the underlying cluster structure of the data set. The task of clustering is to partition a set of objects X = {x1, x2, \u00b7 \u00b7 \u00b7 , xn} into c groups \u2126 = {\u03c91, \u03c92, \u00b7 \u00b7 \u00b7 , \u03c9c} in such a way that objects in the same class are more similar to each other than to those in other classes. The patterns in X are represented by either object data or relational data. Object data are described explicitly by vectors, while relational data arise from pairwise similarities or dissimilarities. Among the existing approaches to clustering, the objective function-driven or prototype-based clustering such as C-Means (CM), Fuzzy C-Means (FCM) and Evidential C-Means (ECM) is one of the most widely applied paradigms in statistical pattern recognition. These methods are based on a fundamentally very simple, but nevertheless very effective idea, namely to describe the data under consideration by a set of prototypes. They capture the characteristics of the data distribution (like location, size, and shape), and classify the data set based on the similarities (or dissimilarities) of the objects to their prototypes.\nThe above mentioned clustering algorithms, CM, FCM and ECM are for object data. The prototype of each class by these methods is the geometrical center of gravity of all the included objects. But for relational data sets, it is difficult to determine the coordinates of the centroid of\n\u2217Corresponding author. Tel.:(+86)029-88431371. Email addresses: kzhoumath@163.com (Kuang Zhou), Arnaud.Martin@univ-rennes1.fr (Arnaud Martin),\nquanpan@nwpu.edu.cn (Quan Pan), liuzhunga@hotmail.com (Zhun-ga Liu)\nPreprint submitted to Elsevier June 6, 2016\nar X\niv :1\n60 6.\n01 11\n3v 1\n[ cs\n.A I]\n3 J\nun 2\n01 6\nobjects. In this case, one of the objects which seems most similar to the ideal center could be set as a prototype. This is the idea of clustering using medoids. Some clustering methods, such as Partitioning Around Medoids (PAM) [1] and Fuzzy C-Medoids (FCMdd) [2], produce hard and soft clusters respectively where each of them is represented by a representative medoid. A medoid can be defined as the object of a cluster whose average dissimilarity to all the other objects in the cluster is minimal, i.e. it is a most centrally located point in the cluster. However, in real applications, in order to capture various aspects of class structure, it may not be sufficient enough to use only one object to represent the whole cluster. Consequently we may need more members rather than one to be referred as the prototypes of a group.\nClustering using multi-prototype has already been studied by some scholars. There are some extensions of FCMdd by using weighted medoids [3, 4] or multiple medoids [5]. Liu et al. [6] proposed a multi-prototype clustering algorithm which can discover the clusters of arbitrary shape and size. In their work, multiple prototypes with small separations are organized to model a given number of clusters in the agglomerative method. New prototypes are iteratively added to improve the poor cluster boundaries resulted by the poor initial settings. Tao [7] presented a clustering algorithm adopting multiple centers to represent the non-spherical shape of classes, and the method could handle non-traditional curved clusters. Ghosh et al. [8] considered a multi-prototype classifier which includes options for rejecting patterns that are ambiguous and/or do not belong to any class. More work about multi-prototype clustering could be found in Refs. [9, 10].\nSince the boundary between clusters in real-world data sets usually overlaps, soft clustering methods, such as fuzzy clustering, are more suitable than hard clustering for real world applications in data analysis. But the probabilistic constraint of fuzzy memberships (which must sum to 1 across classes) often brings about some problems, such as the inability to distinguish between \u201cequal evidence\u201d (class membership values high enough and equal for a number of alternatives) and \u201cignorance\u201d (all class membership values equal but very close to zero) [11\u201313]. Possibility theory and the theory of belief functions [14] could been applied to ameliorate this problem.\nBelief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330]. Evidential C-Means (ECM) [22] is a newly proposed clustering method to get credal partitions [23] for object data. The credal partition is a general extension of the crisp (hard) and fuzzy ones and it allows the object to belong to not only single clusters, but also any subsets of the set of clusters \u2126 = {\u03c91, \u00b7 \u00b7 \u00b7 , \u03c9c} by allocating a mass of belief for each object in X over the power set 2\u2126. The additional flexibility brought by the power set provides more refined partitioning results than those by the other techniques allowing us to gain a deeper insight into the data [22]. In this paper, we introduce some extensions of FCMdd on the framework of belief functions. Two versions of evidential c-medoids clustering, sECMdd and wECMdd, using a single medoid and multiple weighted medoids respectively to represent a class are proposed to produce the optimal credal partition. The experimental results show the effectiveness of the methods and illustrate the advantages of credal partitions and multi-prototype representation for classes.\nThe rest of this paper is organized as follows. In Section 2, some basic knowledge and the rationale of our method are briefly introduced. In Section 3 and Section 4, evidential c-medoids using a single medoid and multiple weighted medoids are presented respectively. Some issues about applying the algorithms are discussed in Section 5. In order to show the effectiveness of the proposed clustering approaches, in Section 6 we test the ECMdd algorithms on different artificial and realworld data sets and make comparisons with related partitive methods. Finally, we conclude and\npresent some perspectives in Section 7.\n2. Background\nIn this section some related preliminary knowledge, including the theory of belief functions\nand some classical clustering algorithms, will be presented.\n2.1. Theory of belief functions\nLet \u2126 = {\u03c91, \u03c92, . . . , \u03c9c} be the finite domain of X, called the discernment frame. The belief functions are defined on the power set 2\u2126 = {A : A \u2286 \u2126}. The function m : 2\u2126 \u2192 [0, 1] is said to be the Basic Belief Assignment (bba) on 2\u2126, if it satisfies:\n\u2211 A\u2286\u2126 m(A) = 1. (1)\nEvery A \u2208 2\u2126 such that m(A) > 0 is called a focal element. The credibility and plausibility functions are defined as in Eqs. (2) and (3) respectively.\nBel(A) = \u2211\nB\u2286A,B 6=\u2205\nm(B), \u2200A \u2286 \u2126, (2)\nPl(A) = \u2211\nB\u2229A6=\u2205\nm(B), \u2200A \u2286 \u2126. (3)\nEach quantity Bel(A) measures the total support given to A, while Pl(A) represents potential amount of support to A. Functions Bel and Pl are linked by the following relation:\nPl(A) = 1\u2212m(\u2205)\u2212Bel(A), (4)\nwhere A denotes the complement of A in \u2126.\nA belief function on the credal level can be transformed into a probability function by Smets method [31]. In this algorithm, each mass of belief m(A) is equally distributed among the elements of A. This leads to the concept of pignistic probability, BetP, defined by\nBetP(\u03c9i) = \u2211\n\u03c9i\u2208A\u2286\u2126\nm(A)\n|A|(1\u2212m(\u2205)) , (5)\nwhere |A| is the number of elements of \u2126 in A. Pignistic probabilities, which play the same role as fuzzy membership, can easily help us make a decision. In fact, belief functions provide us many decision-making techniques not only in the form of probability measures. For instance, a pessimistic decision can be made by maximizing the credibility function, while maximizing the plausibility function could provide an optimistic one [32]. Another criterion (Appriou\u2019s rule) [32] considers the plausibility functions and consists of attributing the class Aj for object i if\nAj = arg max X\u2286\u2126 {mi(X)Pli(X)}, (6)\nwhere\nmi(X) = Ki\u03bbX\n( 1\n|X|r\n) . (7)\nIn Eq. (6) mi(X) is a weight on Pli(X), and r is a parameter in [0, 1] allowing a decision from a simple class (r = 1) until the total ignorance \u2126 (r = 0). The value \u03bbX allows the integration of the lack of knowledge on one of the focal sets X \u2286 \u2126, and it can be set to be 1 simply. Coefficient Ki is the normalization factor to constrain the mass to be in the closed world:\nKi = 1\n1\u2212mi(\u2205) . (8)\n2.2. Evidential c-means\nEvidential c-means [22] is a direct generalization of FCM in the framework of belief functions, and it is based on the credal partition first proposed by Den\u0153ux and Masson [23]. The credal partition takes advantage of imprecise (meta) classes to express partial knowledge of class memberships. The principle is different from another belief clustering method put forward by Schubert [33], in which conflict between evidence is utilized to cluster the belief functions related to multiple events. In ECM, the evidential membership of object xi = {xi1, xi2, \u00b7 \u00b7 \u00b7 , xip} is represented by a bba mi = (mi (Aj) : Aj \u2286 \u2126) (i = 1, 2, \u00b7 \u00b7 \u00b7 , n) over the given frame of discernment \u2126 = {\u03c91, \u03c92, \u00b7 \u00b7 \u00b7 , \u03c9c}. The set F = {Aj | Aj \u2286 \u2126,mi(Aj) > 0} contains all the focal elements. The optimal credal partition is obtained by minimizing the following objective function:\nJECM = n\u2211 i=1 \u2211 Aj\u2286\u2126,Aj 6=\u2205 |Aj |\u03b1mi(Aj)\u03b2d2ij + n\u2211 i=1 \u03b42mi(\u2205)\u03b2 (9)\nconstrained on \u2211 Aj\u2286\u2126,Aj 6=\u2205 mi(Aj) +mi(\u2205) = 1, (10)\nand\nmi (Aj) \u2265 0, mi (\u2205) \u2265 0, (11)\nwhere mi(Aj) , mij is the bba of xi given to the nonempty set Aj , while mi(\u2205) , mi\u2205 is the bba of xi assigned to the empty set. Parameter \u03b1 is a tuning parameter allowing to control the degree of penalization for subsets with high cardinality, parameter \u03b2 is a weighting exponent and \u03b4 is an adjustable threshold for detecting the outliers. Here dij denotes the distance (generally Euclidean distance) between xi and the barycenter (i.e. prototype, denoted by vj) associated with Aj :\nd2ij = \u2016xi \u2212 vj\u20162, (12)\nwhere vj is defined mathematically by\nvj = 1\n|Aj | c\u2211 h=1 shjvh, with shj = 1 if \u03c9h \u2208 Aj ,0 else. (13) The notation vh is the geometrical center of points in cluster h. In fact the value of dij reflects the distance between object xi and class Aj . Note that a \u201cnoise\u201d class \u2205 is considered in ECM. If Aj = \u2205, it is assumed that the distance between object xi and class Aj is dij = \u03b4. As we can see for credal partitions, the label of class j is not from 1 to c as usual, but ranges in 1, 2, \u00b7 \u00b7 \u00b7 , f where f is the number of the focal elements i.e. f = |F|. The update process with Euclidean distance is given by the following two alternating steps.\n(1) Assignment update:\nmij = |Aj |\u2212\u03b1/(\u03b2\u22121)d\u22122/(\u03b2\u22121)ij\u2211\nAh 6=\u2205 |Ah|\u2212\u03b1/(\u03b2\u22121)d\u22122/(\u03b2\u22121)ih + \u03b4\u22122/(\u03b2\u22121)\n,\u2200i, \u2200j/Aj(6= \u2205) \u2286 \u2126 (14)\nmi\u2205 = 1\u2212 \u2211 Aj 6=\u2205 mij , \u2200i = 1, 2, \u00b7 \u00b7 \u00b7 , n. (15)\n(2) Prototype update: The prototypes (centers) of the classes are given by the rows of the matrix\nvc\u00d7p, which is the solution of the following linear system:\nHV = B, (16)\nwhere H is a matrix of size (c\u00d7 c) given by\nHlt = \u2211 i \u2211 Ahk{\u03c9t,\u03c9l} |Ah|\u03b1\u22122m\u03b2ih, t, l = 1, 2, \u00b7 \u00b7 \u00b7 , c, (17)\nand B is a matrix of size (c\u00d7 p) defined by\nBlq = n\u2211 i=1 xiq \u2211 Ak3\u03c9l |Ak|\u03b1\u22121m\u03b2ik, l = 1, 2, \u00b7 \u00b7 \u00b7 , c, q = 1, 2, \u00b7 \u00b7 \u00b7 , p. (18)\n2.3. Hard and fuzzy c-medoids clustering\nThe hard C-Medoids (CMdd) clustering is a variant of the traditional c-means method, and it produces a crisp partition of the data set. Let X = {xi | i = 1, 2, \u00b7 \u00b7 \u00b7 , n} be the set of n objects and \u03c4(xi, xj) , \u03c4ij denote the dissimilarity between objects xi and xj . Each object may or may not be represented by a feature vector. Let V = {v1, v2, \u00b7 \u00b7 \u00b7 , vc}, vi \u2208X represent a subset of X. The objective function of CMdd is similar to that in CM:\nJCMdd = c\u2211 j=1 n\u2211 i=1 uij\u03c4(xi, vj), (19)\nwhere c is the number of clusters. As CMdd is based on crisp partitions, uij is either 0 or 1 depending whether xi is in cluster \u03c9j . The notation vj is the prototype of class \u03c9j , and it is supposed to be one of the objects in the data set. Due to the fact that exhaustive search of medoids is an NP hard problem, Kaufman and Rousseeuw [1] proposed one approximate search algorithm called PAM, where the c medoids are found efficiently. After the selection of the prototypes, object xi is assigned the closest class \u03c9f , the medoid of which is most similar to this pattern, i.e.\nxi \u2208 \u03c9f , with f = arg min l=1,2,\u00b7\u00b7\u00b7 ,c \u03c4(xi, vl). (20)\nFuzzy C-Medoids (FCMdd) is a variation of CMdd designed for relational data [2]. The\nobjective function of FCMdd is given as\nJFCMdd = n\u2211 i=1 c\u2211 j=1 u\u03b2ij\u03c4(xi, vj) (21)\nsubject to c\u2211 j=1 uij = 1, i = 1, 2, \u00b7 \u00b7 \u00b7 , n, (22)\nand\nuij \u2265 0, i = 1, 2, \u00b7 \u00b7 \u00b7 , n, j = 1, 2, \u00b7 \u00b7 \u00b7 , c. (23)\nIn fact, the objective function of FCMdd is similar to that of FCM. The main difference lies in that the prototype of a class in FCMdd is defined as the medoid, i.e. one of the object in the original data set, instead of the centroid (the average point in a continuous space) for FCM. The object assignment and prototype selection are preformed by the following alternating update steps:\n(1) Assignment update:\nuij = \u03c4 \u22121/(\u03b2\u22121) ij\nc\u2211 k=1 \u03c4 \u22121/(\u03b2\u22121) ik . (24)\n(2) Prototype update: the new prototype of cluster \u03c9j is set to be vj = xl\u2217 with\nxl\u2217 = arg min {vj :vj=xl(\u2208X)} n\u2211 i=1 u\u03b2ij\u03c4(xi, vj). (25)\n2.4. Fuzzy clustering with multi-medoid\nIn a recent work of Mei and Chen [4], a generalized medoid-based Fuzzy clustering with Multiple Medoids (FMMdd) has been proposed. For a data set X given the dissimilarity matrix R = {rij}n\u00d7n, where rij records the dissimilarity between each two objects xi and xj . The objective of FMMdd is to minimize the following criterion:\nJFMMdd = c\u2211 k=1 n\u2211 i=1 n\u2211 j=1 u\u03b2ikv \u03c8 kjrij (26)\nsubject to c\u2211\nk=1\nuik = 1,\u2200i = 1, 2, \u00b7 \u00b7 \u00b7n; uik \u2265 0,\u2200i and k (27)\nand n\u2211 j=1 vkj = 1,\u2200k = 1, 2, \u00b7 \u00b7 \u00b7 , c; vkj \u2265 0, \u2200k and j, (28)\nwhere uik denotes the fuzzy membership of xi for cluster \u03c9k, and vkj denotes the prototype weights of xj for cluster \u03c9k. The constrained minimization problem of finding the optimal fuzzy partition could be solved by the use of Lagrange multipliers and the update equations of uik and vkj are derived as below:\nuik =\n( n\u2211 j=1 v\u03c8kjrij )\u22121/(\u03b2\u22121) c\u2211\nf=k ( n\u2211 j=1 v\u03c8fjrij )\u22121/(\u03b2\u22121) (29)\nand\nvkj =\n( n\u2211 i=1 u\u03b2ikrij )\u22121/(\u03c8\u22121) n\u2211 h=1 ( n\u2211 i=1 u\u03b2ikrih )\u22121/(\u03c8\u22121) . (30)\nThe FMMdd algorithm starts with a non-negative initialization, then the membership values and prototype weights are iteratively updated with Eqs. (29) and (30) until convergence.\n3. sECMdd with a single medoid\nWe start with the introduction of evidential c-medoids clustering algorithm using a single medoid, sECMdd, in order to take advantages of both medoid-based clustering and credal partitions. This partitioning evidential clustering algorithm is mainly related to the fuzzy c-medoids. Like all the prototype-based clustering methods, for sECMdd, an objective function should first be found to provide an immediate measure of the quality of the partitions. Hence our goal can be characterized as the optimization of the objective function to get the best credal partition.\n3.1. The objective function\nAs before, let X = {xi | i = 1, 2, \u00b7 \u00b7 \u00b7 , n} be the set of n objects and \u03c4(xi, xj) , \u03c4ij denote the dissimilarity between objects xi and xj . The pairwise dissimilarity is the only information required for the analyzed data set. The objective function of sECMdd is similar to that in ECM:\nJsECMdd(M ,V ) = n\u2211 i=1 \u2211 Aj\u2286\u2126,Aj 6=\u2205 |Aj |\u03b1m\u03b2ijdij + n\u2211 i=1 \u03b42m\u03b2i\u2205, (31)\nconstrained on \u2211 Aj\u2286\u2126,Aj 6=\u2205 mij +mi\u2205 = 1, (32)\nwhere mij , mi(Aj) is the bba of xi given to the nonempty set Aj , mi\u2205 , mi(\u2205) is the bba of xi assigned to the empty set, and dij , d(xi, Aj) is the dissimilarity between xi and focal set Aj . Parameters \u03b1, \u03b2, \u03b4 are adjustable with the same meanings as those in ECM. Note that JsECMdd depends on the credal partition M and the set V of all prototypes.\nLet v\u2126k be the prototype of specific cluster (whose focal element is a singleton) Aj = {\u03c9k} (k = 1, 2, \u00b7 \u00b7 \u00b7 , c) and assume that it must be one of the objects in X. The dissimilarity between object xi and cluster (focal set) Aj can be defined as follows. If |Aj | = 1, i.e. Aj is associated with one of the singleton clusters in \u2126 (suppose to be \u03c9k with prototype v \u2126 k , i.e. Aj = {\u03c9k}), then the dissimilarity between xi and Aj is defined by\ndij = d(xi, Aj) = \u03c4(xi, v \u2126 k ). (33)\nWhen |Aj | > 1, it represents an imprecise (meta) cluster. If object xi is to be partitioned into a meta cluster, two conditions should be satisfied [27]. One condition is the dissimilarity values between xi and the included singleton classes\u2019 prototypes are small. The other condition is the object should be close to the prototypes of all these specific clusters. The former measures the degree of uncertainty, while the latter is to avoid the pitfall of partitioning two data objects irrelevant to any included specific clusters into the corresponding imprecise classes. Therefore, the medoid (prototype) of an imprecise class Aj could be set to be one of the objects locating with similar dissimilarities to all the prototypes of the specific classes \u03c9k \u2208 Aj included in Aj . The variance of the dissimilarities of object xi to the medoids of all the involved specific classes could be taken into account to express the degree of uncertainty. The smaller the variance is, the higher uncertainty we have for object xi. Meanwhile the medoid should be close to all the prototypes\nof the specific classes. This is to distinguish the outliers, which may have similar dissimilarities to the prototypes of some specific classes, but obviously not a good choice for representing the associated imprecise classes. Let v2 \u2126\nj denote the medoid of class Aj 1. Based on the above analysis,\nthe medoid of Aj should set to v 2\u2126 j = xp with\np = arg min i:xi\u2208X\n{ f ( {\u03c4(xi, v\u2126k );\u03c9k \u2208 Aj} ) + \u03b7 1 |Aj | \u2211 \u03c9k\u2208Aj \u03c4(xi, v \u2126 k ) } , (34)\nwhere \u03c9k is the element of Aj , v \u2126 k is its corresponding prototype and f denotes the function describing the variance among the related dissimilarity values. The variance function could be used directly:\nVarij = 1 |Aj | \u2211 \u03c9k\u2208Aj [ \u03c4(xi, v \u2126 k )\u2212 1 |Aj | \u2211 \u03c9k\u2208Aj \u03c4(xi, v \u2126 k ) ]2 . (35)\nIn this paper, we use the following function to describe the variance \u03c1ij of the dissimilarities between object xi and the medoids of the involved specific classes in Aj\n\u03c1ij = 1 choose(|Aj |, 2) \u2211\n\u03c9x,\u03c9y\u2208Aj\n\u221a( \u03c4(xi, v\u2126x )\u2212 \u03c4(xi, v\u2126y ) )2 , (36)\nwhere choose(a, b) is the number of combinations of the given a elements taken b at a time. Then the dissimilarity between objects xi and class Aj can be defined as\ndij =\n\u03c4(xi, v 2\u2126 j ) + \u03b3 1 |Aj | \u2211 \u03c9k\u2208Aj \u03c4(xi, v \u2126 k )\n1 + \u03b3 . (37)\nAs we can see from the above equation, the dissimilarity between object xi and meta class Aj is the weighted average of dissimilarities of xi to the all involved singleton cluster medoids and to the prototype of the imprecise class Aj with a tuning factor \u03b3. If Aj is a specific class with Aj = {\u03c9k} (|Aj | = 1), the dissimilarity between xj and Aj degrades to the dissimilarity between xi and v\u2126k as defined in Eq. (33), i.e. v2 \u2126\nj = v \u2126 k . And if |Aj | > 1, its medoid is determined by Eq. (34).\nRemark 1: sECMdd is similar to Median Evidential C-Means (MECM) [27] algorithm. MECM is in the framework of median clustering, while sECMdd consists with FCMdd in principle. Another difference of sECMdd and MECM is the way of calculating the dissimilarities between objects and imprecise classes. Although both MECM and sECMdd consider the dissimilarities of objects to the prototypes for specific clusters, the strategy adopted by sECMdd is more simple and intuitive, hence makes sECMdd run faster in real time. Moreover, there is no representative medoid for imprecise classes in MECM.\n3.2. The optimization\nTo minimize JsECMdd, an optimization scheme via an Expectation-Maximization (EM) algo-\nrithm can be designed, and the alternating update steps are as follows:\nStep 1. Credal partition (M) update.\n1The notation v\u2126k denotes the prototype of specific class \u03c9k, indicating it is in the framework of \u2126. Similarly,\nv2 \u2126\nj is defined on the power set 2 \u2126, representing the prototype of the focal set Aj \u2208 2\u2126. In fact V is the set of all\nthe prototypes, i.e. V = {v2\u2126j : j = 1, 2, \u00b7 \u00b7 \u00b7 , 2c \u2212 1}. It is easy to see {v\u2126k : k = 1, 2, \u00b7 \u00b7 \u00b7 , c} \u2286 V \u2286 X.\nThe bbas of objects\u2019 class membership for any subset Aj \u2286 \u2126 and the empty set \u2205 representing the outliers are updated identically to ECM [22]:\n(1) \u2200Aj \u2286 \u2126, Aj 6= \u2205,\nmij = |Aj |\u2212\u03b1/(\u03b2\u22121)d\u22121/(\u03b2\u22121)ij\u2211\nAk 6=\u2205 |Ak|\u2212\u03b1/(\u03b2\u22121)d\u22121/(\u03b2\u22121)ik + \u03b4\u22121/(\u03b2\u22121)\n(38)\n(2) If Aj = \u2205, mi\u2205 = 1\u2212 \u2211 Aj 6=\u2205 mij (39)\nStep 2. Prototype (V ) update.\nThe prototype v\u2126i of a specific (singleton) cluster \u03c9i (i = 1, 2, \u00b7 \u00b7 \u00b7 , c) can be updated first and then the prototypes of imprecise (meta) classes could be determined by Eq. (34). For singleton clusters \u03c9k (k = 1, 2, \u00b7 \u00b7 \u00b7 , c), the corresponding new prototype v\u2126k (k = 1, 2, \u00b7 \u00b7 \u00b7 , c) could be set to xl \u2208X such that\nxl = arg min v \u2032 k  n\u2211 i=1 \u2211 Aj={\u03c9k} m\u03b2ijdij(v \u2032 k) : v \u2032 k \u2208 X  . (40) The dissimilarity between object xi and cluster Aj , dij , is a function of v \u2032 k, which is the potential prototype of class \u03c9k.\nThe bbas of the objects\u2019 class assignment are updated identically to ECM [22], but it is worth noting that dij has a different meaning as that in ECM although in both cases it measures the dissimilarity between object xi and class Aj . In ECM dij is the distance between object i and the centroid point of Aj , while in sECMdd, it is the dissimilarity between xi and the most \u201cpossible\u201d medoid. For the prototype updating process the fact that the prototypes are assumed to be one of the data objects is taken into consideration. Therefore, when the credal partition matrix M is fixed, the new prototype of each cluster can be obtained in a simpler manner than in the case of ECM application. The sECMdd algorithm is summarized as Algorithm 1.\nAlgorithm 1 : sECMdd algorithm\nInput: Dissimilarity matrix [\u03c4(xi, xj)]n\u00d7n for the n objects {x1, x2, \u00b7 \u00b7 \u00b7 , xn}. Parameters: c: number clusters 1 < c < n \u03b1: weighing exponent for cardinality \u03b2 > 1: weighting exponent \u03b4 > 0: dissimilarity between any object to the empty set \u03b7 > 0: to distinguish the outliers from the possible medoids \u03b3 \u2208 [0, 1]: to balance of the contribution for imprecise classes Initialization: Choose randomly c initial prototypes from the object set repeat\n(1). t\u2190 t+ 1 (2). Compute Mt using Eq. (38), Eq. (39) and Vt\u22121 (3). Compute the new prototype set Vt using Eq. (40) and (34)\nuntil the prototypes remain unchanged. Output: The optimal credal partition.\nThe update process of mass membership M is the same as that in ECM. For a given n \u00d7 n dissimilarity matrix, the complexity of this step is of order n2c. The complexity for updating the prototypes and calculating the dissimilarity between objects and classes is O(cn2+n2c). Therefore, the total time complexity for one iteration in sECMdd is O(cn2 + n2c).\nRemark 2: The assignment update process will not increase JsECMdd since the new mass matrix is determined by differentiating of the respective Lagrangian of the cost function with respect to M . Also JsECMdd will not increase through the medoid-searching scheme for prototypes of specific classes. If the prototypes of specific classes are fixed, the medoids of imprecise classes determined by Eq. (34) are likely to locate near to the \u201ccentroid\u201d of all the prototypes of the included specific classes. If the objects are in Euclidean space, the medoids of imprecise classes are near to the centroids found in ECM. Thus it will not increase the value of the objective function also. Moreover, the bba M is a function of the prototypes V and for given V the assignment M is unique. Because sECMdd assumes that the prototypes are in the original object data set X, so there is a finite number of different prototype vectors V and so is the number of corresponding credal partitions M . Consequently we can conclude that the sECMdd algorithm converges in a finite number of steps.\n4. ECMdd with multiple weighted medoids\nThis section presents evidential c-medoids algorithm using multiple weighted medoids. The approach to compute the relative weights of medoids is based on both the computation of the membership degree of objects belonging to specific classes and the computation of the dissimilarities between objects.\n4.1. The objective function\nThe objective function of wECMdd, JwECMdd, has the same form as that in sECMdd (see Eq. (31)). In wECMdd, we use multiple weighted medoids to represent each specific class instead of a single medoid. Thus the method to calculate dij in the objective function is different from sECMdd. Let V \u2126 = {v\u2126ki}c\u00d7n be the weight matrix for specific classes, where v\u2126ki describes the weight of object i for the kth specific class. Then, the dissimilarity between object xi and cluster Aj = {\u03c9k} could be calculated by\nd(xi, Aj) , dij = n\u2211 l=1 ( v\u2126kl )\u03c8 \u03c4(i, l), (41)\nwith n\u2211 l=1 v\u2126kl = 1,\u2200k = 1, 2, \u00b7 \u00b7 \u00b7 , c. (42)\nParameter \u03c8 controls the smoothness of the distribution of prototype weights. The weights of imprecise class Aj (|Aj | > 1) can be derived according to the involved specific classes. If object xi has similar weights for specific classes \u03c9m and \u03c9n, it is most probable that xi lies in the overlapping area between two classes. Thus the variance of the weights of object xi for all the included specific classes of Aj , Varji, could be used to express the weights of xi for Aj (denoted by v 2\u2126 ji , and V is used to denote the corresponding weight matrix2). The smaller Varji is, the higher v 2\u2126 ji is. However, we should pay attention to the outliers. They may hold similar small weights for each specific class, but have no contribution to the imprecise classes at all. The minimum of xi\u2019s weights for all the associated specific classes could be taken into consideration to distinguish the outliers.\n2In sECMdd, V denotes the set of prototypes of all the classes. Here V represents the weights of prototypes. We use the same notation to show the similar role of V in sECMdd and wECMdd. In fact sECMdd can be regarded as a special case of wECMdd, where the weight values are restricted to be either 0 or 1.\nIf the minimal weight is too small, we should assign a small weight value for that object. Based on the discussion, the weights of object xi for class Aj (Aj \u2286 \u2126) could be calculated as\nv2 \u2126 ji = f1 ( Var ( {v\u2126ki;\u03c9k \u2208 Aj} )) \u00b7 f2 ( min ( {v\u2126ki;\u03c9k \u2208 Aj} ))\u2211 l f1 ( Var ( {v\u2126kl;\u03c9k \u2208 Aj} )) \u00b7 f2 ( min ( {v\u2126kl;\u03c9k \u2208 Aj}\n)) , (43) where f1 is a monotone decreasing function while f2 is an increasing function. The two functions should be determined according to the application under concern. Based on our experiments, we suggest adopting the simple directly and inversely proportion functions, i.e.\nv2 \u2126 ji = [min\n( {v\u2126ki;\u03c9k \u2208 Aj} ) ]\u03be/Var ( {v\u2126ki;\u03c9k \u2208 Aj} )\u2211 l [min ( {v\u2126kl;\u03c9k \u2208 Aj} ) ]\u03be/Var ( {v\u2126kl;\u03c9k \u2208 Aj}\n) . (44) Parameter \u03be is used to balance the contribution of f1 and f2. It is remarkable that when Aj = {\u03c9k}, that is to say |Aj | = 1, v2 \u2126 ji = v \u2126 ki. Therefore, the dissimilarity between object xi and cluster Aj (including both specific and imprecise classes) could be given by\ndij = n\u2211 l=1 ( v2 \u2126 jl )\u03c8 \u03c4(i, l), Aj \u2286 \u2126, Aj 6= \u2205. (45)\n4.2. Optimization\nThe problem of finding optimal cluster assignments of objects and representatives of classes\nis now formulated as a constrained optimization problem, i.e. to find optimal values of M and V subject to a set of constrains. As before, the method of Lagrange multipliers could be utilized to derive the solutions. The Lagrangian function is constructed as\nLwECMdd = JwECMdd \u2212 n\u2211 i=1 \u03bbi  \u2211 Aj\u2286\u2126,Aj 6=\u2205 mij \u2212 1 \u2212 c\u2211 k=1 \u03b2k ( n\u2211 i=1 v\u2126ki \u2212 1 ) , (46)\nwhere \u03bbi and \u03b2k are Lagrange multipliers. By calculating the first order partial derivatives of LwECMdd with respect to mij , v \u2126 ki, \u03bbi and \u03b2k and letting them to be 0, the update equations of mij and v \u2126 ki could be derived. It is easy to obtain that the update equations for mij are the same as Eqs. (38) and (39) in the application of sECMdd, except that in this case dij should be calculated by Eq. (45). The update strategy for the prototype weights v\u2126ki is difficult to get since it is a non-linear optimization problem. Some specifical techniques may be adopted to solve this problem. Here we use a simple approximation scheme to update v\u2126ki.\nSuppose the class assignment M is fixed and assume that the prototype weights for imprecise\nclass Aj (Aj \u2286 \u2126, |Aj | > 1), v2 \u2126 ji , are dependent of the weights for specific classes (v \u2126 ki). Then the first order necessary condition with respect to v\u2126ki is only related to dij with Aj = {\u03c9k}. The update equations of v\u2126ki could then derived as\nv\u2126ki =\n( n\u2211 l=1 m\u03b2lj\u03c4li )\u22121/(\u03c8\u22121) n\u2211 h=1 ( n\u2211 l=1 m\u03b2lj\u03c4lh )\u22121/(\u03c8\u22121) k = 1, 2, \u00b7 \u00b7 \u00b7 , c, Aj = {\u03c9k}. (47)\nAfter obtaining the weights for specific classes, the weights for imprecise classes can be obtained by Eq. (44) and the dissimilarities between objects and classes could then calculated by Eq. (45).\nThe update of cluster assignment M and prototype weight matrix V should be repeated until convergence. The wECMdd algorithm is summarised in Algorithm 2. The complexity of wECMdd is O(n2c + n2).\nAlgorithm 2 : wECMdd algorithm\nInput: Dissimilarity matrix [\u03c4(xi, xj)]n\u00d7n for the n objects {x1, x2, \u00b7 \u00b7 \u00b7 , xn}. Parameters: c: number clusters 1 < c < n \u03b1: weighing exponent for cardinality \u03b2 > 1: weighting exponent \u03b4 > 0: dissimilarity between any object to the empty set \u03be > 0: balancing the weights of imprecise classes \u03c8: controlling the smoothness of the distribution of prototype weigths Initialization: Choose randomly c initial prototypes from the object set repeat\n(1). t\u2190 t+ 1 (2). Compute Mt using Eq. (38), Eq. (39) and Vt\u22121 (3). Compute the prototype weights for specific classes using Eq. (47) (4). Compute the prototype weights for imprecise classes using Eq. (44) and get the new Vt.\nuntil the prototypes remain unchanged. Output: The optimal credal partition.\nRemark 3: Existing work has studied the convergence properties of the partitioning clustering algorithms, such as C-Means, and C-Medoids. As we can see, wECMdd follows a similar clustering approach. The optimization process consists of three steps: cluster assignment update, prototype weights of specific classes update and then prototype weights of imprecise classes update. The first two steps improve the objective function value by the application of Lagrangian multiplier method. The third step tries to find good representative objects for imprecise classes. If the method to determine the weights for imprecise classes is of practical meaning, it will also keep the objective function increasing. In fact the approach of updating the prototype weights is similar to the idea of one-step Gaussian-Seidel iteration method, where the computation of the new variable vector uses the new elements that have already been computed, and the old elements that have not yet to be advanced to the next iteration. In Section 6, we will demonstrate through experiments that wECMdd could converge in a few number of iterations.\n5. Application issues\nIn this section, some problems when applying the ECMdd algorithms, such as how to adjust\nthe parameters and how to select the initial prototypes for each class, will be discussed.\n5.1. The parameters of the algorithm\nAs in ECM, before running ECMdd, the values of the parameters have to be set. Parameters \u03b1, \u03b2 and \u03b4 have the same meanings as those in ECM. The value \u03b2 can be set to be \u03b2 = 2 in all experiments for which it is a usual choice. The parameter \u03b1 aims to penalize the subsets with high cardinality and control the amount of points assigned to imprecise clusters for credal partitions. The higher \u03b1 is, the less mass belief is assigned to the meta clusters and the less imprecise will be the resulting partition. However, the decrease of imprecision may result in high risk of errors. For instance, in the case of hard partitions, the clustering results are completely precise but there is much more intendancy to partition an object to an unrelated group. As suggested in [22], a value\ncan be used as a starting default one but it can be modified according to what is expected from the user. The choice \u03b4 is more difficult and is strongly data dependent [22]. If we do not aim at detecting outliers, \u03b4 can be set relatively large.\nIn sECMdd, parameter \u03b3 weighs the contribution of uncertainty to the dissimilarity between objects and imprecise clusters. Parameter \u03b7 is used to distinguish the outliers from the possible medoids when determining the prototypes of meta classes. It can be set 1 by default and it has little effect on the final partition results. Parameters \u03be and \u03c8 are for specially for wECMdd. Similar to \u03b2, \u03c8 is used to control the smoothness of the weight distribution. Parameter \u03be is used for not assigning the outliers large weights for imprecise classes. If there are few outliers in the data set, it could be set to be near 0.\nFor determining the number of clusters, the validity index of a credal partition defined by\nMasson and Denoeux [22] could be used:\nN\u2217(c) , 1\nn log2(c) \u00d7 n\u2211 i=1  \u2211 A\u22082\u2126\\\u2205 mi(A) log2 |A|+mi(\u2205) log2(c)  , (48) where 0 \u2264 N\u2217(c) \u2264 1. This index has to be minimized to get the optimal number of clusters.\nAs we discussed, in real practice, some of the parameters in the model such as \u03b2, \u03b7 and \u03be can be set as constants. Although this could not reduce the complexity of the algorithm, it can simplify the equations and bring about some convenience for applications.\n5.2. The initial prototypes\nThe c-means type clustering algorithms are sensitive to the initial prototypes [34]. In this work, we follow the initialization procedure as the one used in [2, 3, 35] to generate a set of c initial prototypes one by one. The first medoid, \u03c31, is randomly picked from the data set. The rest of medoids are selected successively one by one in such a way that each one is most dissimilar to all the medoids that have already been picked. Suppose \u03c3 = {\u03c31, \u03c32, \u00b7 \u00b7 \u00b7 , \u03c3j} is the set of the first chosen j (j < c) medoids. Then the j + 1 medoid, \u03c3j+1, is set to the object xp with\np = arg max 1\u2264i\u2264n;xi /\u2208\u03c3 { min \u03c3k\u2208\u03c3 \u03c4(xi, \u03c3k) } . (49)\nThis selection process makes the initial prototypes evenly distributed and locate as far away from each other as possible. It is noted that another scheme is that the first medoid is set to be the object with the smallest total dissimilarity to all the other objects, i.e. \u03c31 = xr with\nr = arg min 1\u2264i\u2264n  n\u2211 j=1 \u03c4(xi, xj)  , (50) and the remaining prototypes are selected the same way as before. Krishnapuram et al. [2] have pointed out that both initialization schemes work well in practice. But based on our experiments, for credal partitions, a bit of randomness of the first prototype might be desirable.\n5.3. Making the important objects more important\nIn wECMdd, a matrix V = {v2\u2126ji } is used to record prototype weights of n objects with respect to all the clusters, including the specific classes and imprecise classes. All objects are engaged in describing clusters information with some weights assigned to each detected classes. This seems\nunreasonable since it is easy to understand that when an object does not belong to a cluster, it should not participate in describing that cluster [36]. Therefore, in each iteration of wECMdd, after the weights v\u2126ki, k = 1, 2, \u00b7 \u00b7 \u00b7 , c, i = 1, 2, \u00b7 \u00b7 \u00b7 , n of xi for all the specific classes \u03c9k are obtained by Eq. (47), the normalized weights w\u2126ki could be calculated by 3\nw\u2126ki = v \u2032 ki n\u2211 i=1 v \u2032 ki , i = 1, 2, \u00b7 \u00b7 \u00b7 , n, and k = 1, 2, \u00b7 \u00b7 \u00b7 , c, (51)\nwhere v \u2032\nki equals to v \u2126 ki if xi belongs to \u03c9k, 0 otherwise. Remark that xi is regarded as a member\nof class \u03c9k if mi({\u03c9k}) is the maximum of the masses assigned to all the focal sets at this iteration. In fact, if we want to make the important \u201ccore\u201d objects more important in each cluster, a subset of fixed cardinality 1 \u2264 q n of objects X could be used. The q objects constitute core of each cluster, and collaborate to describe information of each class. This kind of wECMdd with q medoids in each class is denoted by wECMdd-q. More generally, q could be different for each cluster. However, how to determine q or the number of cores in every class should be considered. This is not the topic of this work and we will study that in the future work.\n6. Experiments\nIn this section some experiments on generated and real data sets will be performed to show the effectiveness of sECMdd and wECMdd. The results are compared with other relational clustering approaches PAM [1], FCMdd [2], FMMdd [4] and MECM [27] to illustrate the advantages of credal partitions and multi-prototype representativeness of classes. The popular measures, Precision (P), Recall (R) and Rand Index (RI), which are typically used to evaluate the performance of hard partitions are also used here. Precision is the fraction of relevant instances (pairs in identical groups in the clustering benchmark) out of those retrieved instances (pairs in identical groups of the discovered clusters), while recall is the fraction of relevant instances that are retrieved. Then precision and recall can be calculated by\nP = a\na+ c and R =\na\na+ d (52)\nrespectively, where a (respectively, b) be the number of pairs of objects simultaneously assigned to identical classes (respectively, different classes) by the stand reference partition and the obtained one. Similarly, values c and d are the numbers of dissimilar pairs partitioned into the same cluster, and the number of similar object pairs clustered into different clusters respectively. The rand index measures the percentage of correct decisions and it can be defined as\nRI = 2(a+ b)\nn(n\u2212 1) , (53)\nwhere n is the number of data objects.\nFor fuzzy and evidential clusterings, objects may be partitioned into multiple clusters with different degrees. In such cases precision would be consequently low [37]. Usually the fuzzy and evidential clusters are made crisp before calculating the evaluation measures, using for instance\n3In the following we call this type of prototype weights \u201cnormalized weights\u201d, and wECMdd with normalized weights is denoted by wECMdd-0. The standard wECMdd with multiple weights on all the objects described in the last section is still denoted by wECMdd.\nthe maximum membership criterion [37] and pignistic probabilities [22]. Thus in this work we will harden the fuzzy and credal clusters by maximizing the corresponding membership and pignistic probabilities and calculate precision, recall and RI for each case.\nThe introduced imprecise clusters can avoid the risk of partitioning a data into a specific class without strong belief. In other words, a data pair can be clustered into the same specific group only when we are quite confident and thus the misclassification rate will be reduced. However, partitioning too many data into imprecise clusters may cause that many objects are not identified for their precise groups. In order to show the effectiveness of the proposed method in these aspects, we use the indices for evaluating credal partitions, Evidential Precision (EP), Evidential Recall (ER) and Evidential Rank Index (ERI) [27] defined as:\nEP = ner Ne , ER = ner Nr\n, ERI = 2(a\u2217 + b\u2217)\nn(n\u2212 1) . (54)\nIn Eq. (54), the notation Ne denotes the number of pairs partitioned into the same specific group by evidential clustering, and ner is the number of relevant instance pairs out of these specifically clustered pairs. The value Nr denotes the number of pairs in the same group of the clustering benchmark, and ER is the fraction of specifically retrieved instances (grouped into an identical specific cluster) out of these relevant pairs. Value a\u2217 (respectively, b\u2217) is the number of pairs of objects simultaneously clustered to the same specific class (i.e. singleton class, respectively, different classes) by the stand reference partition and the obtained credal one. When the partition degrades to a crisp one, EP, ER and ERI equal to the classical precision, recall and rand index measures respectively. EP and ER reflect the accuracy of the credal partition from different points of view, but we could not evaluate the clusterings from one single term. For example, if all the objects are partitioned into imprecise clusters except two relevant data object grouped into a specific class, EP = 1 in this case. But we could not say this is a good partition since it does not provide us with any information of great value. At this time ER \u2248 0. Thus ER could be used to express the efficiency of the method for providing valuable partitions. ERI is like the combination of EP and ER describing the accuracy of the clustering results. Note that for evidential clusterings, precision, recall and RI measures are calculated after the corresponding hard partitions are obtained, while EP, ER and ERI are based on hard credal partitions [22].\n6.1. Overlapped data sets\nDue to the introduction of imprecise classes, credal partitions have the advantage to detect overlapped clusters. In the first example, we will use overlapped data sets to illustrate the behavior of the proposed algorithms. We start by generating 3\u00d7 361 points distributed in three overlapped circles with a same radius R = 5 but with different centers. The coordinates of the first circle\u2019s center are (5, 6) while the coordinates of the other two circles\u2019 centers are (0, 0) and (9, 0). The data set is displayed in Figure 1.a.\nFigure 1.b shows the iteration steps for different methods. For ECMdd clustering algorithms, there are three alternative steps to optimize the objective function (assignment update, and the update for medoids of specific and imprecise classes), while only two steps (update of membership and specific classes\u2019 prototypes) are required for the existing methods (PAM, FCMdd and FMMdd). But we can see from the figure, the added third step for calculating the new prototypes of imprecise classes in ECMdd clustering has no effect on the convergence.\nThe fuzzy and credal partitions by different methods are shown in Figure 2, and the values\nof the evaluation indices are listed in Table 1. The objects are clustered into the class with the maximum membership values for fuzzy partitions (by FCMdd, FMMdd), while for credal partitions (by different ECMdd algorithms), with the maximum mass assignment. As a result, imprecise classes, such as {\u03c91, \u03c92} (denoted by \u03c912 in the figure), are produced by ECMdd clustering to accept the objects for which it is difficult to make a precise (hard) decision. Consequently, the EP values of the credal partitions by ECMdd algorithms are distinctly high, which indicates that such soft decision mechanism could make the clustering result more \u201ccautious\u201d and decrease the misclassification rate.\nIn this experiment, all the ECMdd algorithms are run with: \u03b1 = 2, \u03b2 = 2, \u03b4 = 100. For sECMdd, \u03b7 = 1 and for wECMdd \u03b3 = 1.2, \u03be = 3. The results by wECMdd and wECMdd-0 are similar, as they both use weights of objects to describe the cluster structure. The ECMdd algorithms using one (sECMdd, wECMdd-1) or two (wECMdd-2) objects to represent a class are sensitive to the detected prototypes. More objects that are not located in the overlapped area are inclined to be partitioned into the imprecise classes by these methods.\nThe running time of sECMdd, wECMdd, MECM, PAM, FCMdd, FMMdd is calculated to show the computational complexity4. Each algorithm is evoked 10 times with different initial\n4All the algorithms in this work are implemented with R 3.2.1\nparameters, and the average elapsed time is displayed in Table 2. As we can see from the table, ECMdd is of higher complexity compared with fuzzy or hard medoid based clustering. This is easy to understand, as in the partitions there are imprecise classes and the membership is considered on the extended frame of the power set 2\u2126. But credal partitions by the use of ECMdd will improve\nthe precision of the clustering results. This is also important in some applications, where cautious decisions are more welcome to avoid the possible high risk of misclassification.\nIn order to show the influence of parameters in ECMdd algorithms, different values of \u03b1, \u03b7, \u03be, \u03b4 and \u03b2 have been tested for this data set. Figure 3.a displays the three evidential indices varying with \u03b1 by sECMdd, while Figure 3.b depicts the results of wECMdd with different \u03b1. As we can see, for both sECMdd and wECMdd, if we want to make more imprecise decisions to improve ER, parameter \u03b1 can be decreased, since \u03b1 tries to adjust the penalty degree to control the imprecise rates of the results. Keeping more soft decisions will reduce the misclassification rate and makes the specific decisions more accurate. But the partition results with few specific decisions have low ER values and they are of limited practical meaning. In application we should determine \u03b1 based on the requirement. Parameter \u03b7 in sECMdd and \u03be in wECMdd are both for distinguish the outliers in imprecise classes. As pointed out in Figures 3.c and 3.d, if \u03b7 and \u03be are well set, they have little effect on the final clusterings. The same is true in the case of \u03b4 which is applied to detect outliers (see Figure 3.f). The effect of various values of \u03b2 is illustrated in Figure 3-e. We can see that it has little influence on the final results as long as it is larger than 1.7. Similar to FCM and ECM, the value of \u03b2 could also be set to be 2 as a usual choice here.\nAlthough there are a lot of parameters to adjust in the proposed methods, but compared with MECM (the discussion about the parameters of MECM could be seen in Ref. [27]), the parameters of ECMdd are much easier to adjust and control. In fact from the experiments we can see that only parameter \u03b1 has a great influence on the result. The other parameters such as \u03b2, \u03b7 (for sECMdd), \u03be (for wECMdd) can be set as default for simplicity. These parameters are involved in the model in order to enhance the flexibility. When the analyzed data set has high overlap, the value of \u03b1 can be set small to get more imprecise and cautious decisions with relatively high EP value. However, the improvement of precision will bring about the decline of recall, as more data could not be clustered into specific classes. What we should do is to set parameters based on our own requirement to make a tradeoff between precision and recall. Values of these parameters can be also learned from historical data if such data are available.\n6.2. Gaussian data set\nIn the second experiment, we test on a data set consisting of 10000 points generated from different Gaussian distributions. The points are from 10 Gaussian distributions, the mean values of which are uniformly located in a circle. The data set is displayed in Figure 4.\nTable 3 lists the indices for evaluating the different methods. Bold entries in each column of this table (and also other tables in the following) indicate that the results are significant as the top performing algorithm(s) in terms of the corresponding evaluation index. We can see that the precision, recall and RI values for all approaches are similar. As the data objects are from gaussian distributions, it is intuitive that there is only one geometrical center in each class. That\u2019s why the\none-prototype based clustering sECMdd is a little better than wECMdd. For evidential clusterings, e.g., MECM, sECMdd and wECMdd, the three classical measures are based on the associated pignistic probabilities. It indicates that credal partitions can provide the same information as crisp\nand fuzzy ones (PAM, FCMdd, and FMMdd). Most of the misclassifications in this experiment come from the data points lying in the overlapped area between two classes.\nHowever, from the same table, we can also see that the evidential measures EP and ERI by sECMdd and wECMdd are higher (for hard partitions, the values of evidential measures equal to the corresponding classical ones) than the ones obtained by other methods. This fact confirms the accuracy of the specific decisions i.e. decisions clustering the objects into specific classes. The advantage can be attributed to the introduction of imprecise clusters, with which we do not have to partition the uncertain or unknown objects lying in the overlap into a specific cluster. Consequently, it could reduce the risk of misclassification. For the computational time, the same conclusion as in the first experiment can be obtained. Evidential clustering algorithms (sECMdd, wECMdd and MECM) are more time-consuming than hard or fuzzy ones. But we can see that wECMdd is the fastest one among the three, and it is significantly better than MECM in terms of complexity.\n6.3. X12 data set\nIn this test, a simple classical data set composed of 12 objects represented in Figure 5.a is considered. As we can see from the figure, objects 1 - 11 are clearly dived into two groups whereas object 12 is an outlier. The results by sECMdd and wECMdd are shown in Figure 5.b. Object 6 is clustered into imprecise class \u03c912 , {\u03c91, \u03c92} while object 12 is regarded as an outlier (belonging to \u2205).\nIn this data set, object 6 is a \u201cgood\u201d member for both classes, whereas object 12 is a \u201cpoor\u201d point. It can be seen from Table 4 that the fuzzy partition by FCMdd also gives large equal membership values to \u03c91 and \u03c92 for object 12, just like in the case of such good members as point 6. The same is true for PAM and FMMdd. The obtained results show the problem of distinguishing\nbetween ignorance and the \u201cequal evidence\u201d (uncertainty) for fuzzy partitions. But the table shows that the credal partition by wECMdd assigns largest mass belief to \u2205 for object 12, indicating it is an outlier. Moreover, the values v2 \u2126\nji in the table are the weights of object i for class Aj , from\nwhich it can be seen that object 3 and object 9 play a center role in their own classes, while object 6 contributes most to the overlapped parts of the two classes. Thus the prototype weights indeed could provide us some rich information about the cluster structure.\nIn this experiment, we will show the effectiveness of the application of multiple weighted prototypes using the data set displayed in Figure 6. The X11 data set has two obvious clusters, one containing objects 1 to 4 and the other including objects 5 to 10. Object 11 locates slightly biased to the cluster on the right side. It can be seen that in the left class, it is unreasonable to describe the cluster structure using any one of the four objects in the group, since no one of the four points could be viewed as a more proper representative than the other three. The clustering results by FCMdd, sECMdd, wECMdd are listed in Table 5. The result by MECM is not listed here as it is similar to that by sECMdd.\nFrom the table we can see that the two clustering approaches, FCMdd and sECMdd, which using a single medoid cluster to represent a cluster, partition object 11 to cluster 1 for mistake. This is resulted by the fact that both of them set object 4 to be the center of class \u03c91. On the contrary, in wECMdd, the four objects in cluster \u03c91 are thought to have nearly the same contribution to the class. Consequently, object 11 is clustered into \u03c92 correctly. FMMdd could also get the exactly accurate results as it also takes use of multiple weighted medoids. This experiment shows that the multi-prototype representation of classes could capture some complex data structure and consequently enhance the clustering performance. It is remarkable that the hard partition could be recovered from pignistic probability (BetP) for credal partitions. And the results of these experiments reflects that pignistic probabilities play a similar role as fuzzy membership.\nGraph visualization is commonly used to visually model relations in many areas. For graphs such as social networks, the prototype (center) of one group is likely to be one of the persons (i.e. nodes in the graph) playing the leader role in the community. Moreover, a graph (network) of\nvertices (nodes) and edges usually describes the interactions between different agents of the complex system. The pair-wise relationships between nodes are often implied in the graph data sets. Thus medoid-based relational clustering algorithms could be directly applied. In this section we will evaluate the effectiveness of the proposed methods applied on community detection problems.\nHere the widely used benchmark in detecting community structures, \u201cKarate Club\u201d, studied by Wayne Zachary is considered. The network consists of 34 nodes and 78 edges representing the friendship among the members of the club (see Figure 7.a). During the development, a dispute arose between the club\u2019s administrator and instructor, which eventually resulted in the club split into two smaller clubs, centered around the administrator and the instructor respectively.\nThere are many similarity and dissimilarity indices for networks, using local or global information of graph structure. In this experiment, different similarity metrics will be compared first. The similarity indices considered here are listed in Table 6 5. It is notable that the similarities by these measures range from 0 to 1, thus they can be converted into dissimilarities simply by dissimilarity = 1\u2212 similarity. The comparison results for different dissimilarity indices by FCMdd and sECMdd are shown in Tables 7 and 8 respectively. As we can see, for all the dissimilarity indices, for sECMdd, the value of evidential precision is higher than that of precision. This can be attributed to the introduced imprecise classes which enable us not to make hard decisions for the nodes that we are uncertain and consequently guarantee the accuracy of the specific clustering results. From the table we can also see that the performance using the dissimilarity measure based on signal prorogation is better than those using local similarities in the application of both FCMdd and sECMdd. This reflects that global dissimilarity metric is better than the local ones for community detection. Thus in the following experiments, only the signal dissimilarity index is considered.\nFCMdd could detect the exact community structure of all the nodes except nodes 3, 14, 20. As we can see from the figures, these three nodes have connections with both communities. They are partitioned into imprecise class \u03c912 , {\u03c91, \u03c92}, which describing the uncertainty on the exact class labels of the related nodes, by the application of sECMdd. The medoids found by FCMdd of the two specific communities are node 5 and node 29, while by sECMdd node 5 and node 33. The uncertain nodes found by MECM are node 3 and node 9.\nThe results by wECMdd algorithms are similar to that by sECMdd. Table 9 lists the prototype weights obtained by FMMdd and wECMdd. The nodes in each community are ordered by prototype weights in the table. We just display the first ten important members in every class. From the weight values by FMMdd and wECMdd in the table we can get the same conclusion: nodes 1 and 12 play the center role in community \u03c91, while node 33 and 34 consists the two cores in community \u03c92. But by wECMdd more information about the overlapped structure of the network are available. As we can see from the last two columns of the table, node 9 contributes most to\nthe overlapped community \u03c912, which is a good reflection of its \u201cbridge\u201d role for the two classes. Therefore, the prototype weights provide us some information about the cluster structure from another point of view, which could help us gain a better understanding of the inner structure of a class.\nIn this section we will test on a relational data set, referred as the benchmark data set Countries Data [1, 3]. The task is to group twelve countries into clusters based on the pairwise relationships as given in Table 10, which is in fact the average dissimilarity scores on some dimensions of quality of life provided subjectively by students in a political science class. Generally, these countries are classified into three categories: Western, Developing and Communist. The parameters are set as \u03b2 = 2 for FCMdd, and \u03b2 = 2, \u03b1 = 0.95, \u03b7 = 1, \u03b3 = 1 for sECMdd. We test the performances of FCMdd and sECMdd with two different sets of initial representative countries: \u22061 = {C10: USSR; C8: Israel; C7: India} and \u22062 = {C6: France; C4: Cuba; C1: Belgium}. The three countries in \u22061 are well separated. On the contrary, for the countries in \u22062, Belgium is similar to France, which makes two initial medoids of three are very close in terms of the given dissimilarities.\nThe results of FCMdd and sECMdd are given in Table 11 and Table 12 respectively. It can be seen that FCMdd is very sensitive to initializations. When the initial prototypes are well set (the case of \u22061), the obtained partition is reasonable. However, the clustering results become worse\nwhen the initial medoids are not ideal (the case of \u22062). In fact two of the three medoids are not changed during the update process of FCMdd when using initial prototype set \u22062. This example illustrates that FCMdd is quite easy to be stuck in a local minimum. For sECMdd, the credal partitions are the same with different initializations. The pignistic probabilities are also displayed in Table 12, which could be regarded as membership values in fuzzy partitions. The country Egypt is clustered into imprecise class {1, 2}, which indicating that Egypt is not so well belonging to Developing or Western alone, but belongs to both categories. This result is consistent with the fact shown from the dissimilarity matrix: Egypt is similar to both USA and India, but has the largest dissimilarity to China. The results by wECMdd and MECM algorithms are not displayed here, as they product the same clustering result with sECMdd. From this experiment we could conclude that ECMdd is more robust to the initializations than FCMdd.\nFinally the clustering performance of different methods will be compared on eight benchmark UCI data sets [42] summarized in Table 13. Euclidean distance is used as the dissimilarity measure for the object data sets, and the Signal dissimilarity is adopted for the graph data sets.\nSame as ECM, the number of parameters to be optimized in ECMdd is exponential and depends on the number of clusters [22]. For the number of classes larger than 10, calculations are not tractable. But we can only consider a subclass with a limited number of focal sets [22].\nHere we constrain the focal sets to be composed of at most two classes (except \u2126). The evaluation results are listed in Tables 14\u201321.\nIt can be seen that generally wECMdd works better than the other approaches on all of the data sets, except for Iris data set where sECMdd works best. This may be explained by the fact that, Iris is a small data set and each class can be well represented by one prototype. wECMdd has better performance for the other complex data sets, since the single prototype seems not enough to capture a cluster in these cases, whereas the cluster can be properly characterized by the multiple prototypes as done in wECMdd. From the tables we can see that the EP values for credal partitions by sECMdd and wECMdd are significantly higher than those for hard or fuzzy partitions, which indicates the accuracy of specific decisions. Consequently it will avoid the risk of misclassification by the concept of imprecise decisions.\nThe value of ER describes the fraction of instances grouped into an identical specific cluster out of those relevant pairs in the ground-truth. If the objects are located in the overlap, they are likely to be clustered into imprecise classes by ECMdd. This will increase the value of EP. However, as few objects are partitioned into specific classes, the value of ER will decrease. That\u2019s why for Iris data set the partitional result by wECMdd has the highest EP value following with a low ER value. The value of ERI can be regarded as a compromise between EP and ER, and it is an integration of EP and ER. As can be seen from the results, ECMdd performs best in terms of ERI for most of the data sets. In practice, one can adjust the value of parameter \u03b1 to get partitions with different definition. The elapsed time for every clustering algorithm is illustrated in the last column of each table. In terms of computational time, as excepted, the evidential clustering algorithms take more time than hard or fuzzy clustering. But sECMdd and wECMdd are much faster than MECM. wECMdd is less time-consuming than sECMdd.\nRemark 4: It should be noted that there is no imprecise class obtained by PAM, FCMdd, and FMMdd. In this case, the values of EP, ER, and ERI for the clustering results are equal to P, R, and RI respectively. That\u2019s why the increase of EP does not cause the decrease ER significantly. However, there are some imprecise classes provided by MECM and ECMdd clustering algorithms. If EP is high, it indicates that there are quite a number of objects that we could not make specific decisions and have to be clustered into imprecise classes to avoid misclassification. Thus there will be few number of objects clustered into specific classes. Consequently the value of ER will be declined.\nPresented results allow us to sum up the characteristics of the proposed ECMdd clustering approaches (including sECMdd and wECMdd). Firstly, credal partitions provided by all the ECMdd algorithms could recover the information of crisp and fuzzy partitions. Secondly, ECMdd is more robust to the outliers and the initialization than FCMdd. Thirdly, the imprecise classes by credal\npartitions enable us to make soft decisions for uncertain objects and could avoid the risk of misclassifications. Moreover, wECMdd performs best generally due to the efficient class representativeness strategy. Lastly, the prototype weights provided by wECMdd algorithms are useful for our better understanding of cluster structure in real applications.\nAlthough the computational time of wECMdd is significantly reduced compared with that of MECM, the proposed algorithm is still of high complexity compared with hard or fuzzy clustering algorithms such as PAM, FCMdd, and FMMdd. However, here we discuss some possible solutions to further reduce the complexity. Firstly, the number of parameters to be optimized is exponential and depends on the number of clusters [22]. For the number of classes larger than 10, calculations are not tractable. But we can consider only a subclass with a limited number of focal sets [22]. For instance, we could constrain the focal sets to be composed of at most two classes (except \u2126). Secondly, for the data sets with millions of data, some hierarchical clustering algorithms could be evoked as a first step to merge some objects into small groups. After that we can apply ECMdd to the \u201ccoarsened\u201d data set. But how to define the dissimilarities in the new data set should be studied. Lastly we emphasize that ECMdd is designed to detect the imprecise class structures. For the large-scale data set, some classes may be well separated while some others may overlap. In real applications, it is not necessary to apply ECMdd on the whole data set, but only on the special parts which may have large overlap.\n7. Conclusion\nIn this contribution, the evidential c-medoids clustering is proposed as a new medoid-based clustering algorithm. Two versions of ECMdd algorithms are presented. One uses a single medoid to represent each class, while the other adopts the multiple weighted medoids. The proposed approaches are some extensions of crisp c-medoids and fuzzy c-medoids on the framework of belief function theory. The experimental results illustrate the advantages of credal partitions by sECMdd and wECMdd. Moreover, the way of using prototype weights to represent a cluster enables wECMdd to capture the various types of cluster structures more precisely and completely hence improves the quality of the detected classes. Furthermore, more detailed information on the discovered clusters may be obtained with the help of prototype weights.\nAs we analyzed in the paper, assigning weights of a class to all the patterns seems not rational since objects in other clusters make little contribution. Thus it is better to set the number of possible objects holding positive weights differently for each class. But how to determine the optimal number of prototypes is a key problem and we will study this in our future work. The relational descriptions of a data set may be given by multiple dissimilarity matrices. Thus another interesting work aiming to obtain a collaborative role of the different dissimilarity matrices to get a final consensus partition will also be investigated in the future.\nAppendix. The similarity indices for graphs.\nHere we give a detailed description of the similarity measures for graphs discussed in this paper. Let G(V,E) be an undirected network, where V is the set of N nodes and E is the sets of m edges. Let A = (aij)N\u00d7N denote the adjacency matrix, where aij = 1 represents that there is an edge between node i and j.\n(1) Jaccard Index. This index was proposed by Jaccard over a hundred years ago, and is defined\nas\nsJ(x, y) = |N(x) \u2229N(y)| |N(x) \u222aN(y)| , (55)\nwhere N(x) = {w \u2208 V \\ x : a(w, x) = 1} denotes the set of vertices that are adjacent to x.\n(2) Zhou\u2019s Index. Zhou et al. [40] also proposed a new similarity metric which is motivated by the\nresource allocation process:\nsZ(x, y) = \u2211\nz\u2208N(x)\u2229N(y)\n1\nd(z) , (56)\nwhere d(z) is the degree of node z.\n(3) Pan\u2019s Index. Pan et al. [39] pointed out that the similarity measure proposed by Zhou et\nal. [40] may bring about inaccurate results for community detection on the networks as the metric can not differentiate the tightness relation between a pair of nodes whether they are connected directly or indirectly. In order to overcome this defect, in his presented new measure the similarity between unconnected pair is simply set to be 0:\nSP (x, y) =  \u2211 z\u2208N(x)\u2229N(y) 1 d(z) , if x, y are connected,\n0 otherwise.\n(57)\n(4) Signal similarity. A similarity measure considering the global graph structure is put forward\nby Hu et al. [41] based on signaling propagation in the network. For a network with N nodes, every node is viewed as an excitable system which can send, receive, and record signals. Initially, a node is selected as the source of signal. Then the source node sends a signal to its neighbors and itself first. Afterwards, the nodes with signals can also send signals to their neighbors and themselves. After a certain T time steps, the amount distribution of signals over the nodes could be viewed as the influence of the source node on the whole network. Naturally, compared with nodes in other communities, the nodes of the same community have more similar influence on the whole network. Therefore, similarities between nodes can be obtained by calculating the differences between the amount of signals they have received.\nAcknowledgements\nThis work was supported by the National Natural Science Foundation of China (Nos.61135001, 61403310). The study of the first author in France was supported by the China Scholarship Council.\nReferences\n[1] L. Kaufman, P. J. Rousseeuw, Finding groups in data: an introduction to cluster analysis, vol.\n344, John Wiley & Sons, 2009.\n[2] R. Krishnapuram, A. Joshi, O. Nasraoui, L. Yi, Low-complexity fuzzy relational clustering\nalgorithms for web mining, Fuzzy Systems, IEEE Transactions on 9 (4) (2001) 595\u2013607.\n[3] J.-P. Mei, L. Chen, Fuzzy clustering with weighted medoids for relational data, Pattern Recog-\nnition 43 (5) (2010) 1964\u20131974.\n[4] J.-P. Mei, L. Chen, Fuzzy relational clustering around medoids: A unified view, Fuzzy Sets\nand Systems 183 (1) (2011) 44\u201356.\n[5] F. D. A. De Carvalho, Y. Lechevallier, F. M. De Melo, Relational partitioning fuzzy clustering\nalgorithms based on multiple dissimilarity matrices, Fuzzy Sets and Systems 215 (2013) 1\u201328.\n[6] M. Liu, X. Jiang, A. C. Kot, A multi-prototype clustering algorithm, Pattern Recognition 42\n(5) (2009) 689\u2013698.\n[7] C.-W. Tao, Unsupervised fuzzy clustering with multi-center clusters, Fuzzy Sets and Systems\n128 (3) (2002) 305\u2013322.\n[8] D. Ghosh, A. Shivaprasad, et al., Parameter tuning for multi-prototype possibilistic classifier\nwith reject options, in: Fuzzy Systems (FUZZ), 2013 IEEE International Conference on, IEEE, 1\u20136, 2013.\n[9] T. Luo, C. Zhong, H. Li, X. Sun, A multi-prototype clustering algorithm based on minimum\nspanning tree, in: Fuzzy Systems and Knowledge Discovery (FSKD), 2010 Seventh International Conference on, vol. 4, IEEE, 1602\u20131607, 2010.\n[10] S. Ben, Z. Jin, J. Yang, Guided fuzzy clustering with multi-prototypes, in: Neural Networks\n(IJCNN), The 2011 International Joint Conference on, IEEE, 2430\u20132436, 2011.\n[11] M. Me\u0301nard, C. Demko, P. Loonis, The fuzzy c+ 2-means: solving the ambiguity rejection in\nclustering, Pattern recognition 33 (7) (2000) 1219\u20131237.\n[12] B. Gabrys, A. Bargiela, General fuzzy min-max neural network for clustering and classification,\nNeural Networks, IEEE Transactions on 11 (3) (2000) 769\u2013783.\n[13] Y. Guo, A. Sengur, NCM: Neutrosophic c-means clustering algorithm, Pattern Recognition 48\n(8) (2015) 2710\u20132724.\n[14] G. Shafer, A mathematical theory of evidence, vol. 1, Princeton university press Princeton,\n1976.\n[15] T. Denoeux, A k-nearest neighbor classification rule based on Dempster-Shafer theory, Sys-\ntems, Man and Cybernetics, IEEE Transactions on 25 (5) (1995) 804\u2013813.\n[16] Z.-g. Liu, Q. Pan, J. Dezert, A new belief-based K-nearest neighbor classification method,\nPattern Recognition 46 (3) (2013) 834\u2013844.\n[17] Z.-g. Liu, Q. Pan, J. Dezert, Evidential classifier for imprecise data based on belief functions,\nKnowledge-Based Systems 52 (2013) 246\u2013257.\n[18] Z.-g. Liu, Q. Pan, J. Dezert, G. Mercier, Credal classification rule for uncertain data based on\nbelief functions, Pattern Recognition 47 (7) (2014) 2532\u20132541.\n[19] C. Lian, S. Ruan, T. Den\u0153ux, An evidential classifier based on feature selection and two-step\nclassification strategy, Pattern Recognition (2015) In press.\n[20] Z.-g. Liu, Q. Pan, G. Mercier, J. Dezert, A New Incomplete Pattern Classification Method\nBased on Evidential Reasoning, Cybernetics, IEEE Transactions on 45 (4) (2015) 635\u2013646.\n[21] Z.-g. Liu, Q. Pan, J. Dezert, A. Martin, Adaptive imputation of missing values for incomplete\npattern classification, Pattern Recognition 52 (2016) 85\u201395.\n[22] M.-H. Masson, T. Denoeux, ECM: An evidential version of the fuzzy c-means algorithm,\nPattern Recognition 41 (4) (2008) 1384\u20131397.\n[23] T. Den\u0153ux, M.-H. Masson, EVCLUS: evidential clustering of proximity data, Systems, Man,\nand Cybernetics, Part B: Cybernetics, IEEE Transactions on 34 (1) (2004) 95\u2013109.\n[24] Z.-g. Liu, Q. Pan, J. Dezert, G. Mercier, Credal c-means clustering method based on belief\nfunctions, Knowledge-Based Systems 74 (2015) 119\u2013132.\n[25] D. Wei, X. Deng, X. Zhang, Y. Deng, S. Mahadevan, Identifying influential nodes in weighted\nnetworks based on evidence theory, Physica A: Statistical Mechanics and its Applications 392 (10) (2013) 2564\u20132575.\n[26] K. Zhou, A. Martin, Q. Pan, Evidential communities for complex networks, in: Information\nProcessing and Management of Uncertainty in Knowledge-Based Systems, Springer, 557\u2013566, 2014.\n[27] K. Zhou, A. Martin, Q. Pan, Z.-g. Liu, Median evidential c-means algorithm and its application\nto community detection, Knowledge-Based Systems 74 (2015) 69\u201388.\n[28] T. Denoeux, Maximum likelihood estimation from uncertain data in the belief function frame-\nwork, Knowledge and Data Engineering, IEEE Transactions on 25 (1) (2013) 119\u2013130.\n[29] E. Co\u0302me, L. Oukhellou, T. Denoeux, P. Aknin, Learning from partially supervised data using\nmixture models and belief functions, Pattern recognition 42 (3) (2009) 334\u2013348.\n[30] K. Zhou, A. Martin, Q. Pan, Evidential-EM algorithm applied to progressively censored ob-\nservations, in: Information Processing and Management of Uncertainty in Knowledge-Based Systems, Springer, 180\u2013189, 2014.\n[31] P. Smets, Decision making in the TBM: the necessity of the pignistic transformation, Inter-\nnational Journal of Approximate Reasoning 38 (2) (2005) 133\u2013147.\n[32] A. Martin, I. Quidu, Decision support with belief functions theory for seabed characterization,\nin: Information Fusion, 2008 11th International Conference on, IEEE, 1\u20138, 2008.\n[33] J. Schubert, Clustering belief functions based on attracting and conflicting metalevel evidence\nusing Potts spin mean field theory, Information Fusion 5 (4) (2004) 309\u2013318.\n[34] M. E. Celebi, H. A. Kingravi, P. A. Vela, A comparative study of efficient initialization methods\nfor the k-means clustering algorithm, Expert Systems with Applications 40 (1) (2013) 200\u2013210.\n[35] T. F. Gonzalez, Clustering to minimize the maximum intercluster distance, Theoretical Com-\nputer Science 38 (1985) 293\u2013306.\n[36] Y. Gao, H. Qi, D. Liu, J. Li, L. Li, A Fuzzy Relational Clustering Algorithm with q-weighted\nMedoids, Journal of Computational Information Systems 10 (6) (2014) 2389\u20132396.\n[37] M. Mendes, L. Sacks, Evaluating fuzzy clustering for relevance-based information access, in:\nFuzzy Systems, 2003. FUZZ\u201903. The 12th IEEE International Conference on, vol. 1, IEEE, 648\u2013653, 2003.\n[38] P. Jaccard, The distribution of the flora in the alpine zone. 1, New phytologist 11 (2) (1912)\n37\u201350.\n[39] Y. Pan, D.-H. Li, J.-G. Liu, J.-Z. Liang, Detecting community structure in complex networks\nvia node similarity, Physica A: Statistical Mechanics and its Applications 389 (14) (2010) 2849\u20132857.\n[40] T. Zhou, L. Lu\u0308, Y.-C. Zhang, Predicting missing links via local information, The European\nPhysical Journal B-Condensed Matter and Complex Systems 71 (4) (2009) 623\u2013630.\n[41] Y. Hu, M. Li, P. Zhang, Y. Fan, Z. Di, Community detection by signaling on complex networks,\nPhysical Review E 78 (1) (2008) 016115\u20131\u20138.\n[42] M. Lichman, UCI Machine Learning Repository, URL http://archive.ics.uci.edu/ml,\n2013."}], "references": [{"title": "Finding groups in data: an introduction to cluster analysis", "author": ["L. Kaufman", "P.J. Rousseeuw"], "venue": "vol. 344, John Wiley & Sons", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2009}, {"title": "Low-complexity fuzzy relational clustering algorithms for web mining", "author": ["R. Krishnapuram", "A. Joshi", "O. Nasraoui", "L. Yi"], "venue": "Fuzzy Systems, IEEE Transactions on 9 (4) ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2001}, {"title": "Fuzzy clustering with weighted medoids for relational data", "author": ["J.-P. Mei", "L. Chen"], "venue": "Pattern Recognition 43 (5) ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2010}, {"title": "Fuzzy relational clustering around medoids: A unified view", "author": ["J.-P. Mei", "L. Chen"], "venue": "Fuzzy Sets and Systems 183 (1) ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2011}, {"title": "Relational partitioning fuzzy clustering algorithms based on multiple dissimilarity matrices", "author": ["F.D.A. De Carvalho", "Y. Lechevallier", "F.M. De Melo"], "venue": "Fuzzy Sets and Systems 215 ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "A multi-prototype clustering algorithm", "author": ["M. Liu", "X. Jiang", "A.C. Kot"], "venue": "Pattern Recognition 42 (5) ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Unsupervised fuzzy clustering with multi-center clusters", "author": ["C.-W. Tao"], "venue": "Fuzzy Sets and Systems 128 (3) ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2002}, {"title": "A", "author": ["D. Ghosh"], "venue": "Shivaprasad, et al., Parameter tuning for multi-prototype possibilistic classifier with reject options, in: Fuzzy Systems (FUZZ), 2013 IEEE International Conference on, IEEE, 1\u20136", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "A multi-prototype clustering algorithm based on minimum spanning tree", "author": ["T. Luo", "C. Zhong", "H. Li", "X. Sun"], "venue": "in: Fuzzy Systems and Knowledge Discovery (FSKD), 2010 Seventh International Conference on, vol. 4, IEEE, 1602\u20131607", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "Guided fuzzy clustering with multi-prototypes", "author": ["S. Ben", "Z. Jin", "J. Yang"], "venue": "in: Neural Networks (IJCNN), The 2011 International Joint Conference on, IEEE, 2430\u20132436", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "The fuzzy c+ 2-means: solving the ambiguity rejection in clustering", "author": ["M. M\u00e9nard", "C. Demko", "P. Loonis"], "venue": "Pattern recognition 33 (7) ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2000}, {"title": "General fuzzy min-max neural network for clustering and classification", "author": ["B. Gabrys", "A. Bargiela"], "venue": "Neural Networks, IEEE Transactions on 11 (3) ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2000}, {"title": "NCM: Neutrosophic c-means clustering algorithm", "author": ["Y. Guo", "A. Sengur"], "venue": "Pattern Recognition 48 (8) ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "A mathematical theory of evidence", "author": ["G. Shafer"], "venue": "vol. 1, Princeton university press Princeton", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1976}, {"title": "A k-nearest neighbor classification rule based on Dempster-Shafer theory", "author": ["T. Denoeux"], "venue": "Systems, Man and Cybernetics, IEEE Transactions on 25 (5) ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1995}, {"title": "A new belief-based K-nearest neighbor classification method, Pattern Recognition", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Evidential classifier for imprecise data based on belief functions, Knowledge-Based Systems", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2013}, {"title": "Credal classification rule for uncertain data based on belief functions, Pattern Recognition", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert", "G. Mercier"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "An evidential classifier based on feature selection and two-step classification strategy", "author": ["C. Lian", "S. Ruan", "T. Den\u0153ux"], "venue": "Pattern Recognition ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "A New Incomplete Pattern Classification Method Based on Evidential Reasoning, Cybernetics, IEEE Transactions on", "author": ["Z.-g. Liu", "Q. Pan", "G. Mercier", "J. Dezert"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Adaptive imputation of missing values for incomplete pattern classification, Pattern Recognition", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert", "A. Martin"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2016}, {"title": "ECM: An evidential version of the fuzzy c-means algorithm", "author": ["M.-H. Masson", "T. Denoeux"], "venue": "Pattern Recognition 41 (4) ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2008}, {"title": "EVCLUS: evidential clustering of proximity data", "author": ["T. Den\u0153ux", "M.-H. Masson"], "venue": "Systems, Man, and Cybernetics, Part B: Cybernetics, IEEE Transactions on 34 (1) ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2004}, {"title": "Credal c-means clustering method based on belief functions, Knowledge-Based Systems", "author": ["Z.-g. Liu", "Q. Pan", "J. Dezert", "G. Mercier"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2015}, {"title": "Identifying influential nodes in weighted networks based on evidence theory", "author": ["D. Wei", "X. Deng", "X. Zhang", "Y. Deng", "S. Mahadevan"], "venue": "Physica A: Statistical Mechanics and its Applications 392 (10) ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2013}, {"title": "Evidential communities for complex networks", "author": ["K. Zhou", "A. Martin", "Q. Pan"], "venue": "in: Information Processing and Management of Uncertainty in Knowledge-Based Systems, Springer, 557\u2013566", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2014}, {"title": "Q", "author": ["K. Zhou", "A. Martin"], "venue": "Pan, Z.-g. Liu, Median evidential c-means algorithm and its application to community detection, Knowledge-Based Systems 74 ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "Maximum likelihood estimation from uncertain data in the belief function framework", "author": ["T. Denoeux"], "venue": "Knowledge and Data Engineering, IEEE Transactions on 25 (1) ", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2013}, {"title": "Learning from partially supervised data using mixture models and belief functions", "author": ["E. C\u00f4me", "L. Oukhellou", "T. Denoeux", "P. Aknin"], "venue": "Pattern recognition 42 (3) ", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2009}, {"title": "Evidential-EM algorithm applied to progressively censored observations", "author": ["K. Zhou", "A. Martin", "Q. Pan"], "venue": "in: Information Processing and Management of Uncertainty in Knowledge-Based Systems, Springer, 180\u2013189", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2014}, {"title": "Decision making in the TBM: the necessity of the pignistic transformation", "author": ["P. Smets"], "venue": "International Journal of Approximate Reasoning 38 (2) ", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2005}, {"title": "Decision support with belief functions theory for seabed characterization", "author": ["A. Martin", "I. Quidu"], "venue": "in: Information Fusion, 2008 11th International Conference on, IEEE, 1\u20138", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2008}, {"title": "Clustering belief functions based on attracting and conflicting metalevel evidence using Potts spin mean field theory", "author": ["J. Schubert"], "venue": "Information Fusion 5 (4) ", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2004}, {"title": "A comparative study of efficient initialization methods for the k-means clustering algorithm", "author": ["M.E. Celebi", "H.A. Kingravi", "P.A. Vela"], "venue": "Expert Systems with Applications 40 (1) ", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2013}, {"title": "Clustering to minimize the maximum intercluster distance", "author": ["T.F. Gonzalez"], "venue": "Theoretical Computer Science 38 ", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1985}, {"title": "A Fuzzy Relational Clustering Algorithm with q-weighted Medoids", "author": ["Y. Gao", "H. Qi", "D. Liu", "J. Li", "L. Li"], "venue": "Journal of Computational Information Systems 10 (6) ", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2014}, {"title": "Evaluating fuzzy clustering for relevance-based information access", "author": ["M. Mendes", "L. Sacks"], "venue": "in: Fuzzy Systems, 2003. FUZZ\u201903. The 12th IEEE International Conference on, vol. 1, IEEE, 648\u2013653", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2003}, {"title": "The distribution of the flora in the alpine zone", "author": ["P. Jaccard"], "venue": "1, New phytologist 11 (2) ", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1912}, {"title": "Detecting community structure in complex networks via node similarity", "author": ["Y. Pan", "D.-H. Li", "J.-G. Liu", "J.-Z. Liang"], "venue": "Physica A: Statistical Mechanics and its Applications 389 (14) ", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2010}, {"title": "Predicting missing links via local information", "author": ["T. Zhou", "L. L\u00fc", "Y.-C. Zhang"], "venue": "The European Physical Journal B-Condensed Matter and Complex Systems 71 (4) ", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2009}, {"title": "Community detection by signaling on complex networks", "author": ["Y. Hu", "M. Li", "P. Zhang", "Y. Fan", "Z. Di"], "venue": "Physical Review E 78 (1) ", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2008}, {"title": "UCI Machine Learning Repository", "author": ["M. Lichman"], "venue": "URL http://archive.ics.uci.edu/ml", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Some clustering methods, such as Partitioning Around Medoids (PAM) [1] and Fuzzy C-Medoids (FCMdd) [2], produce hard and soft clusters respectively where each of them is represented by a representative medoid.", "startOffset": 67, "endOffset": 70}, {"referenceID": 1, "context": "Some clustering methods, such as Partitioning Around Medoids (PAM) [1] and Fuzzy C-Medoids (FCMdd) [2], produce hard and soft clusters respectively where each of them is represented by a representative medoid.", "startOffset": 99, "endOffset": 102}, {"referenceID": 2, "context": "There are some extensions of FCMdd by using weighted medoids [3, 4] or multiple medoids [5].", "startOffset": 61, "endOffset": 67}, {"referenceID": 3, "context": "There are some extensions of FCMdd by using weighted medoids [3, 4] or multiple medoids [5].", "startOffset": 61, "endOffset": 67}, {"referenceID": 4, "context": "There are some extensions of FCMdd by using weighted medoids [3, 4] or multiple medoids [5].", "startOffset": 88, "endOffset": 91}, {"referenceID": 5, "context": "[6] proposed a multi-prototype clustering algorithm which can discover the clusters of arbitrary shape and size.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "Tao [7] presented a clustering algorithm adopting multiple centers to represent the non-spherical shape of classes, and the method could handle non-traditional curved clusters.", "startOffset": 4, "endOffset": 7}, {"referenceID": 7, "context": "[8] considered a multi-prototype classifier which includes options for rejecting patterns that are ambiguous and/or do not belong to any class.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9, 10].", "startOffset": 0, "endOffset": 7}, {"referenceID": 9, "context": "[9, 10].", "startOffset": 0, "endOffset": 7}, {"referenceID": 10, "context": "But the probabilistic constraint of fuzzy memberships (which must sum to 1 across classes) often brings about some problems, such as the inability to distinguish between \u201cequal evidence\u201d (class membership values high enough and equal for a number of alternatives) and \u201cignorance\u201d (all class membership values equal but very close to zero) [11\u201313].", "startOffset": 339, "endOffset": 346}, {"referenceID": 11, "context": "But the probabilistic constraint of fuzzy memberships (which must sum to 1 across classes) often brings about some problems, such as the inability to distinguish between \u201cequal evidence\u201d (class membership values high enough and equal for a number of alternatives) and \u201cignorance\u201d (all class membership values equal but very close to zero) [11\u201313].", "startOffset": 339, "endOffset": 346}, {"referenceID": 12, "context": "But the probabilistic constraint of fuzzy memberships (which must sum to 1 across classes) often brings about some problems, such as the inability to distinguish between \u201cequal evidence\u201d (class membership values high enough and equal for a number of alternatives) and \u201cignorance\u201d (all class membership values equal but very close to zero) [11\u201313].", "startOffset": 339, "endOffset": 346}, {"referenceID": 13, "context": "Possibility theory and the theory of belief functions [14] could been applied to ameliorate this problem.", "startOffset": 54, "endOffset": 58}, {"referenceID": 20, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 87, "endOffset": 95}, {"referenceID": 21, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 113, "endOffset": 120}, {"referenceID": 22, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 113, "endOffset": 120}, {"referenceID": 23, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 113, "endOffset": 120}, {"referenceID": 24, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 146, "endOffset": 153}, {"referenceID": 25, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 146, "endOffset": 153}, {"referenceID": 26, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 146, "endOffset": 153}, {"referenceID": 27, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 181, "endOffset": 188}, {"referenceID": 28, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 181, "endOffset": 188}, {"referenceID": 29, "context": "Belief functions have already been applied in many fields, such as data classification [15\u2013 21], data clustering [22\u201324], social network analysis [25\u201327] and statistical estimation [28\u201330].", "startOffset": 181, "endOffset": 188}, {"referenceID": 21, "context": "Evidential C-Means (ECM) [22] is a newly proposed clustering method to get credal partitions [23] for object data.", "startOffset": 25, "endOffset": 29}, {"referenceID": 22, "context": "Evidential C-Means (ECM) [22] is a newly proposed clustering method to get credal partitions [23] for object data.", "startOffset": 93, "endOffset": 97}, {"referenceID": 21, "context": "The additional flexibility brought by the power set provides more refined partitioning results than those by the other techniques allowing us to gain a deeper insight into the data [22].", "startOffset": 181, "endOffset": 185}, {"referenceID": 0, "context": "The function m : 2 \u2192 [0, 1] is said to be the Basic Belief Assignment (bba) on 2, if it satisfies: \u2211 A\u2286\u03a9 m(A) = 1.", "startOffset": 21, "endOffset": 27}, {"referenceID": 30, "context": "A belief function on the credal level can be transformed into a probability function by Smets method [31].", "startOffset": 101, "endOffset": 105}, {"referenceID": 31, "context": "For instance, a pessimistic decision can be made by maximizing the credibility function, while maximizing the plausibility function could provide an optimistic one [32].", "startOffset": 164, "endOffset": 168}, {"referenceID": 31, "context": "Another criterion (Appriou\u2019s rule) [32] considers the plausibility functions and consists of attributing the class Aj for object i if Aj = arg max X\u2286\u03a9 {mi(X)Pli(X)}, (6)", "startOffset": 35, "endOffset": 39}, {"referenceID": 0, "context": "(6) mi(X) is a weight on Pli(X), and r is a parameter in [0, 1] allowing a decision from a simple class (r = 1) until the total ignorance \u03a9 (r = 0).", "startOffset": 57, "endOffset": 63}, {"referenceID": 21, "context": "Evidential c-means [22] is a direct generalization of FCM in the framework of belief functions, and it is based on the credal partition first proposed by Den\u0153ux and Masson [23].", "startOffset": 19, "endOffset": 23}, {"referenceID": 22, "context": "Evidential c-means [22] is a direct generalization of FCM in the framework of belief functions, and it is based on the credal partition first proposed by Den\u0153ux and Masson [23].", "startOffset": 172, "endOffset": 176}, {"referenceID": 32, "context": "The principle is different from another belief clustering method put forward by Schubert [33], in which conflict between evidence is utilized to cluster the belief functions related to multiple events.", "startOffset": 89, "endOffset": 93}, {"referenceID": 0, "context": "Due to the fact that exhaustive search of medoids is an NP hard problem, Kaufman and Rousseeuw [1] proposed one approximate search algorithm called PAM, where the c medoids are found efficiently.", "startOffset": 95, "endOffset": 98}, {"referenceID": 1, "context": "Fuzzy C-Medoids (FCMdd) is a variation of CMdd designed for relational data [2].", "startOffset": 76, "endOffset": 79}, {"referenceID": 3, "context": "Fuzzy clustering with multi-medoid In a recent work of Mei and Chen [4], a generalized medoid-based Fuzzy clustering with Multiple Medoids (FMMdd) has been proposed.", "startOffset": 68, "endOffset": 71}, {"referenceID": 26, "context": "If object xi is to be partitioned into a meta cluster, two conditions should be satisfied [27].", "startOffset": 90, "endOffset": 94}, {"referenceID": 26, "context": "Remark 1: sECMdd is similar to Median Evidential C-Means (MECM) [27] algorithm.", "startOffset": 64, "endOffset": 68}, {"referenceID": 21, "context": "The bbas of objects\u2019 class membership for any subset Aj \u2286 \u03a9 and the empty set \u2205 representing the outliers are updated identically to ECM [22]: (1) \u2200Aj \u2286 \u03a9, Aj 6= \u2205, mij = |Aj |\u2212\u03b1/(\u03b2\u22121)d ij \u2211 Ak 6=\u2205 |Ak|\u2212\u03b1/(\u03b2\u22121)d ik + \u03b4\u22121/(\u03b2\u22121) (38)", "startOffset": 137, "endOffset": 141}, {"referenceID": 21, "context": "The bbas of the objects\u2019 class assignment are updated identically to ECM [22], but it is worth noting that dij has a different meaning as that in ECM although in both cases it measures the dissimilarity between object xi and class Aj .", "startOffset": 73, "endOffset": 77}, {"referenceID": 0, "context": "Parameters: c: number clusters 1 < c < n \u03b1: weighing exponent for cardinality \u03b2 > 1: weighting exponent \u03b4 > 0: dissimilarity between any object to the empty set \u03b7 > 0: to distinguish the outliers from the possible medoids \u03b3 \u2208 [0, 1]: to balance of the contribution for imprecise classes Initialization: Choose randomly c initial prototypes from the object set repeat (1).", "startOffset": 226, "endOffset": 232}, {"referenceID": 21, "context": "As suggested in [22], a value", "startOffset": 16, "endOffset": 20}, {"referenceID": 21, "context": "The choice \u03b4 is more difficult and is strongly data dependent [22].", "startOffset": 62, "endOffset": 66}, {"referenceID": 21, "context": "For determining the number of clusters, the validity index of a credal partition defined by Masson and Denoeux [22] could be used:", "startOffset": 111, "endOffset": 115}, {"referenceID": 33, "context": "The initial prototypes The c-means type clustering algorithms are sensitive to the initial prototypes [34].", "startOffset": 102, "endOffset": 106}, {"referenceID": 1, "context": "In this work, we follow the initialization procedure as the one used in [2, 3, 35] to generate a set of c initial prototypes one by one.", "startOffset": 72, "endOffset": 82}, {"referenceID": 2, "context": "In this work, we follow the initialization procedure as the one used in [2, 3, 35] to generate a set of c initial prototypes one by one.", "startOffset": 72, "endOffset": 82}, {"referenceID": 34, "context": "In this work, we follow the initialization procedure as the one used in [2, 3, 35] to generate a set of c initial prototypes one by one.", "startOffset": 72, "endOffset": 82}, {"referenceID": 1, "context": "[2] have pointed out that both initialization schemes work well in practice.", "startOffset": 0, "endOffset": 3}, {"referenceID": 35, "context": "unreasonable since it is easy to understand that when an object does not belong to a cluster, it should not participate in describing that cluster [36].", "startOffset": 147, "endOffset": 151}, {"referenceID": 0, "context": "The results are compared with other relational clustering approaches PAM [1], FCMdd [2], FMMdd [4] and MECM [27] to illustrate the advantages of credal partitions and multi-prototype representativeness of classes.", "startOffset": 73, "endOffset": 76}, {"referenceID": 1, "context": "The results are compared with other relational clustering approaches PAM [1], FCMdd [2], FMMdd [4] and MECM [27] to illustrate the advantages of credal partitions and multi-prototype representativeness of classes.", "startOffset": 84, "endOffset": 87}, {"referenceID": 3, "context": "The results are compared with other relational clustering approaches PAM [1], FCMdd [2], FMMdd [4] and MECM [27] to illustrate the advantages of credal partitions and multi-prototype representativeness of classes.", "startOffset": 95, "endOffset": 98}, {"referenceID": 26, "context": "The results are compared with other relational clustering approaches PAM [1], FCMdd [2], FMMdd [4] and MECM [27] to illustrate the advantages of credal partitions and multi-prototype representativeness of classes.", "startOffset": 108, "endOffset": 112}, {"referenceID": 36, "context": "In such cases precision would be consequently low [37].", "startOffset": 50, "endOffset": 54}, {"referenceID": 36, "context": "the maximum membership criterion [37] and pignistic probabilities [22].", "startOffset": 33, "endOffset": 37}, {"referenceID": 21, "context": "the maximum membership criterion [37] and pignistic probabilities [22].", "startOffset": 66, "endOffset": 70}, {"referenceID": 26, "context": "In order to show the effectiveness of the proposed method in these aspects, we use the indices for evaluating credal partitions, Evidential Precision (EP), Evidential Recall (ER) and Evidential Rank Index (ERI) [27] defined as:", "startOffset": 211, "endOffset": 215}, {"referenceID": 21, "context": "Note that for evidential clusterings, precision, recall and RI measures are calculated after the corresponding hard partitions are obtained, while EP, ER and ERI are based on hard credal partitions [22].", "startOffset": 198, "endOffset": 202}, {"referenceID": 26, "context": "[27]), the parameters of ECMdd are much easier to adjust and control.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "Jaccard No [38] Pan No [39] Zhou No [40] Signal Yes [41]", "startOffset": 11, "endOffset": 15}, {"referenceID": 38, "context": "Jaccard No [38] Pan No [39] Zhou No [40] Signal Yes [41]", "startOffset": 23, "endOffset": 27}, {"referenceID": 39, "context": "Jaccard No [38] Pan No [39] Zhou No [40] Signal Yes [41]", "startOffset": 36, "endOffset": 40}, {"referenceID": 40, "context": "Jaccard No [38] Pan No [39] Zhou No [40] Signal Yes [41]", "startOffset": 52, "endOffset": 56}, {"referenceID": 0, "context": "Countries data In this section we will test on a relational data set, referred as the benchmark data set Countries Data [1, 3].", "startOffset": 120, "endOffset": 126}, {"referenceID": 2, "context": "Countries data In this section we will test on a relational data set, referred as the benchmark data set Countries Data [1, 3].", "startOffset": 120, "endOffset": 126}, {"referenceID": 41, "context": "UCI data sets Finally the clustering performance of different methods will be compared on eight benchmark UCI data sets [42] summarized in Table 13.", "startOffset": 120, "endOffset": 124}, {"referenceID": 21, "context": "Same as ECM, the number of parameters to be optimized in ECMdd is exponential and depends on the number of clusters [22].", "startOffset": 116, "endOffset": 120}, {"referenceID": 21, "context": "But we can only consider a subclass with a limited number of focal sets [22].", "startOffset": 72, "endOffset": 76}, {"referenceID": 21, "context": "Firstly, the number of parameters to be optimized is exponential and depends on the number of clusters [22].", "startOffset": 103, "endOffset": 107}, {"referenceID": 21, "context": "But we can consider only a subclass with a limited number of focal sets [22].", "startOffset": 72, "endOffset": 76}, {"referenceID": 39, "context": "[40] also proposed a new similarity metric which is motivated by the resource allocation process: s(x, y) = \u2211 z\u2208N(x)\u2229N(y) 1 d(z) , (56)", "startOffset": 0, "endOffset": 4}, {"referenceID": 38, "context": "[39] pointed out that the similarity measure proposed by Zhou et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "[40] may bring about inaccurate results for community detection on the networks as the metric can not differentiate the tightness relation between a pair of nodes whether they are connected directly or indirectly.", "startOffset": 0, "endOffset": 4}, {"referenceID": 40, "context": "[41] based on signaling propagation in the network.", "startOffset": 0, "endOffset": 4}], "year": 2016, "abstractText": "In this work, a new prototype-based clustering method named Evidential C-Medoids (ECMdd), which belongs to the family of medoid-based clustering for proximity data, is proposed as an extension of Fuzzy C-Medoids (FCMdd) on the theoretical framework of belief functions. In the application of FCMdd and original ECMdd, a single medoid (prototype), which is supposed to belong to the object set, is utilized to represent one class. For the sake of clarity, this kind of ECMdd using a single medoid is denoted by sECMdd. In real clustering applications, using only one pattern to capture or interpret a class may not adequately model different types of group structure and hence limits the clustering performance. In order to address this problem, a variation of ECMdd using multiple weighted medoids, denoted by wECMdd, is presented. Unlike sECMdd, in wECMdd objects in each cluster carry various weights describing their degree of representativeness for that class. This mechanism enables each class to be represented by more than one object. Experimental results in synthetic and real data sets clearly demonstrate the superiority of sECMdd and wECMdd. Moreover, the clustering results by wECMdd can provide richer information for the inner structure of the detected classes with the help of prototype weights.", "creator": "LaTeX with hyperref package"}}}