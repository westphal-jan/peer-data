{"id": "1609.03193", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Sep-2016", "title": "Wav2Letter: an End-to-End ConvNet-based Speech Recognition System", "abstract": "This paper presents a simple end-to-end speech recognition model that combines a winding network-based acoustic model and graph decoding, trained to output letters with transcribed language without the need for forced alignment of phonemes. We introduce an automatic segmentation criterion for training from unaligned sequence annotations that is equivalent to CTC while being simpler. We show competitive results in word error rate on the Librispeech corpus with MFCC features and promising results from raw waveforms.", "histories": [["v1", "Sun, 11 Sep 2016 18:56:53 GMT  (845kb,D)", "http://arxiv.org/abs/1609.03193v1", "8 pages, 4 figures (7 plots/schemas), 2 tables (4 tabulars)"], ["v2", "Tue, 13 Sep 2016 02:49:05 GMT  (844kb,D)", "http://arxiv.org/abs/1609.03193v2", "8 pages, 4 figures (7 plots/schemas), 2 tables (4 tabulars)"]], "COMMENTS": "8 pages, 4 figures (7 plots/schemas), 2 tables (4 tabulars)", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.CL", "authors": ["ronan collobert", "christian puhrsch", "gabriel synnaeve"], "accepted": false, "id": "1609.03193"}, "pdf": {"name": "1609.03193.pdf", "metadata": {"source": "CRF", "title": "Wav2Letter: an End-to-End ConvNet-based Speech Recognition System", "authors": ["Ronan Collobert", "Christian Puhrsch"], "emails": ["locronan@fb.com", "cpuhrsch@fb.com", "gab@fb.com"], "sections": [{"heading": "1 Introduction", "text": "We present an end-to-end system to speech recognition, going from the speech signal (e.g. MelFrequency Cepstral Coefficients (MFCC), power spectrum, or raw waveform) to the transcription. The acoustic model is trained using letters (graphemes) directly, which take out the need for an intermediate (human or automatic) phonetic transcription. Indeed, the classical pipeline to build state of the art systems for speech recognition consists in first training an HMM/GMM model to force align the units on which the final acoustic model operates (most often context-dependent phone states). This approach takes its roots in HMM/GMM training [27]. The improvements brought by deep neural networks (DNNs) [14, 10] and convolutional neural networks (CNNs) [24, 25] for acoustic modeling only extend this training pipeline.\nThe current state of the art on Librispeech (the dataset that we used for our evaluations) uses this approach too [18, 20], with an additional step of speaker adaptation [22, 19]. Recently, [23] proposed GMM-free training, but the approach still requires to generate a force alignment. An approach that cut ties with the HMM/GMM pipeline (and with force alignment) was to train with a recurrent neural network (RNN) [7] for phoneme transcription. There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6]. However these models are computationally expensive, and thus take a long time to train.\nCompared to classical approaches that need phonetic annotation (often derived from a phonetic dictionary, rules, and generative training), we propose to train the model end-to-end, using graphemes directly. Compared to sequence criterion based approaches that train directly from speech signal to graphemes [13], we propose a simple(r) architecture (23 millions of parameters for our best model, vs. 100 millions of parameters in [1]) based on convolutional networks for the acoustic model, toppled with a graph transformer network [4], trained with a simpler sequence criterion. Our word-error-rate on clean speech is slightly better than [8], and slightly worse than [1], in particular factoring that they train on 12,000 hours while we only train on the 960h available in LibriSpeech\u2019s train set. Finally,\n29th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nar X\niv :1\n60 9.\n03 19\n3v 1\n[ cs\n.L G\n] 1\n1 Se\nsome of our models are also trained on the raw waveform, as in [15, 16]. The rest of the paper is structured as follows: the next section presents the convolutional networks used for acoustic modeling, along with the automatic segmentation criterion. The following section shows experimental results comparing different features, the criterion, and our current best word error rates on LibriSpeech."}, {"heading": "2 Architecture", "text": "Our speech recognition system is a standard convolutional neural network [12] fed with various different features, trained through an alternative to the Connectionist Temporal Classification (CTC) [6], and coupled with a simple beam search decoder. In the following sub-sections, we detail each of these components.\n2.1 Features\nWe consider three types of input features for our model: MFCCs, power-spectrum, and raw wave. MFCCs are carefully designed speech-specific features, often found in classical HMM/GMM speech systems [27] because of their dimensionality compression (13 coefficients are often enough to span speech frequencies). Power-spectrum features are found in most recent deep learning acoustic modeling features [1]. Raw wave has been somewhat explored in few recent work [15, 16]. ConvNets have the advantage to be flexible enough to be used with either of these input feature types. Our acoustic models output letter scores (one score per letter, given a dictionary L)."}, {"heading": "2.2 ConvNet Acoustic Model", "text": "The acoustic models we considered in this paper are all based on standard 1D convolutional neural networks (ConvNets). ConvNets interleave convolution operations with pointwise non-linearity operations. Often ConvNets also embark pooling layers: these type of layers allow the network to \u201csee\u201d a larger context, without increasing the number of parameters, by locally aggregating the previous convolution operation output. Instead, our networks leverage striding convolutions. Given (xt)t=1...Tx an input sequence with Tx frames of dx dimensional vectors, a convolution with kernel width kw, stride dw and dy frame size output computes the following:\nyit = bi + dx\u2211 j=1 kw\u2211 k=1 wi,j,k x j dw\u00d7(t\u22121)+k \u22001 \u2264 i \u2264 dy, (1)\nwhere b \u2208 Rdy and w \u2208 Rdy\u00d7dx\u00d7kw are the parameters of the convolution (to be learned).\nPointwise non-linear layers are added after convolutional layers. In our experience, we surprisingly found that using hyperbolic tangents, their piecewise linear counterpart HardTanh (as in [16]) or ReLU units lead to similar results.\nThere are some slight variations between the architectures, depending on the input features. MFCC-based networks need less striding, as standard MFCC filters are applied with large strides on the input raw sequence. With power spectrum-based and raw wave-based networks, we observed that the overall stride of the network was more important than where the convolution with strides were placed. We found thus preferrable to set the strided convolutions near the first input layers of the network, as it leads to the fastest architectures: with power spectrum features or raw wave, the input sequences are very long and the first convolutions are thus the most expensive ones.\nThe last layer of our convolutional network outputs one score per letter in the letter dictionary (dy = |L|). Our architecture for raw wave is shown in Figure 1 and is inspired by [16]. The architectures for both power spectrum and MFCC features do not include the first layer. The full network can be seen as a non-linear convolution, with a kernel width of size 31280 and stride equal to 320; given the sample rate of our data is 16KHz, label scores are produced using a window of 1955 ms, with steps of 20ms."}, {"heading": "2.3 Inferring Segmentation with AutoSegCriterion", "text": "Most large labeled speech databases provide only a text transcription for each audio file. In a classification framework (and given our acoustic model produces letter predictions), one would need the segmentation of each letter in the transcription to train properly the model. Unfortunately, manually labeling the segmentation of each letter would be tedious. Several solutions have been explored in the speech community to alleviate this issue: HMM/GMM models use an iterative EM procedure: (i) during the Estimation step, the best segmentation is inferred, according to the current model, by maximizing the joint probability of the letter (or any sub-word unit) transcription and input sequence. (ii) During the Maximization step the model is optimized by minimizing a frame-level criterion, based on the (now fixed) inferred segmentation. This approach is also often used to boostrap the training of neural network-based acoustic models.\nOther alternatives have been explored in the context of hybrid HMM/NN systems, such as the MMI criterion [2] which maximizes the mutual information between the acoustic sequence and word sequences or the Minimum Bayse Risk (MBR) criterion [5].\nMore recently, standalone neural network architectures have been trained using criterions which jointly infer the segmentation of the transcription while increase the overall score of the right transcription [6, 17]. The most popular one is certainly the Connectionist Temporal Classification (CTC) criterion, which is at the core of Baidu\u2019s Deep Speech architecture [1]. CTC assumes that the network output probability scores, normalized at the frame level. It considers all possible sequence of letters (or any sub-word units), which can lead to a to a given transcription. CTC also allow a special \u201cblank\u201d state to be optionally inserted between each letters. The rational behind the blank state is twofolds: (i) modeling \u201cgarbage\u201d frames which might occur between each letter and (ii) identifying the separation between two identical consecutive letters in a transcription. Figure 2a shows an example of the sequences accepted by CTC for a given transcription. In practice, this graph is unfolded as shown in Figure 2b, over the available frames output by the acoustic model. We denote Gctc(\u03b8, T ) an unfolded graph over T frames for a given transcription \u03b8, and \u03c0 = \u03c01, . . . , \u03c0T \u2208 Gctc(\u03b8, T ) a path in this graph representing a (valid) sequence of letters for this transcription. At each time step t, each node of the graph is assigned with the corresponding log-probability letter (that we denote ft(\u00b7)) output by the acoustic model. CTC aims at maximizing the \u201coverall\u201d score of paths in Gctc(\u03b8, T ); for that purpose, it minimizes the Forward score:\nCTC(\u03b8, T ) = \u2212 logadd \u03c0\u2208Gctc(\u03b8,T ) T\u2211 t=1 f\u03c0t(x) , (2)\nwhere the \u201clogadd\u201d operation, also often called \u201clog-sum-exp\u201d is defined as logadd(a, b) = exp(log(a) + log(b)). This overall score can be efficiently computed with the Forward algorithm. To put things in perspective, if one would replace the logadd(\u00b7) by a max(\u00b7) in (2) (which can be then efficiently computed by the Viterbi algorithm, the counterpart of the Forward algorithm), one would then maximize the score of the best path, according to the model belief. The logadd(\u00b7) can be seen as a smooth version of the max(\u00b7): paths with similar scores will be attributed the same weight in the overall score (and hence receive the same gradient), and paths with much larger score will have much more overall weight than paths with low scores. In practice, using the logadd(\u00b7) works much better than the max(\u00b7). It is also worth noting that maximizing (2) does not diverge, as the acoustic model is assumed to output normalized scores (log-probabilities) fi(\u00b7). In this paper, we explore an alternative to CTC, with three differences: (i) there are no blank labels, (ii) un-normalized scores on the nodes (and possibly un-normalized transition scores on the edges) (iii) global normalization instead of per-frame normalization:\n\u2022 The advantage of (i) is that it produces a much simpler graph (see Figure 3a and Figure 3b). We found that in practice there was no advantage of having a blank class to model the\npossible \u201cgarbage\u201d frames between letters. Modeling letter repetitions (which is also an important quality of the blank label in CTC) can be easily replaced by repetition character labels (we used two extra labels for two and three repetitions). For example \u201ccaterpillar\u201d could be written as \u201ccaterpil2ar\u201d, where \u201c2\u201d is a label to represent the repetition of the previous letter. Not having blank labels also simplifies the decoder.\n\u2022 With (ii) one can easily plug an external language model, which would insert transition scores on the edges of the graph. This could be particularly useful in future work, if one wanted to model representations more high-level than letters. In that respect, avoiding normalized transitions is important to alleviate the problem of \u201clabel bias\u201d [3, 11]. In this work, we limited ourselves to transition scalars, which are learned together with the acoustic model.\n\u2022 The normalization evoked in (iii) is necessary when using un-normalized scores on nodes or edges; it insures incorrect transcriptions will have a low confidence.\nIn the following, we name our criterion \u201cAuto Segmentation Criterion\u201d (ASG). Considering the same notations than for CTC in (2), and an unfolded graph Gasg(\u03b8, T ) over T frames for a given transcription \u03b8 (as in Figure 3b), as well as a fully connected graph Gfull(\u03b8, T ) over T frames (representing all possible sequence of letters, as in Figure 3c), ASG aims at minimizing:\nASG(\u03b8, T ) = \u2212 logadd \u03c0\u2208Gasg(\u03b8,T ) T\u2211 t=1 (f\u03c0t(x) + g\u03c0t\u22121,\u03c0t(x)) + logadd \u03c0\u2208Gfull(\u03b8,T ) T\u2211 t=1 (f\u03c0t(x) + g\u03c0t\u22121,\u03c0t(x)) , (3) where gi,j(\u00b7) is a transition score model to jump from label i to label j. The left-hand part of 3 promotes sequences of letters leading to the right transcription, and the right-hand part demotes all sequences of letters. As for CTC, these two parts can be efficiently computed with the Forward algorithm. Derivatives with respect to fi(\u00b7) and gi,j(\u00b7) can be obtained (maths are a bit tedious) by applying the chain rule through the Forward recursion."}, {"heading": "2.4 Beam-Search Decoder", "text": "We wrote our own one-pass decoder, which performs a simple beam-search with beam threholding, histogram pruning and language model smearing [26]. We kept the decoder as simple as possible (under 1000 lines of C code). We did not implement any sort of model adaptation before decoding, nor any word graph rescoring. Our decoder relies on KenLM [9] for the language modeling part. It also accepts un-normalized acoustic scores (transitions and emissions from the acoustic model) as input. The decoder attempts to maximize the following:\nL(\u03b8) = logadd \u03c0\u2208Gasg(\u03b8,T ) T\u2211 t=1 (f\u03c0t(x) + g\u03c0t\u22121,\u03c0t(x)) + \u03b1 logPlm(\u03b8) + \u03b2|\u03b8| , (4)\nwhere Plm(\u03b8) is the probability of the language model given a transcription \u03b8, \u03b1 and \u03b2 are two hyper-parameters which control the weight of the language model and the word insertion penalty respectively."}, {"heading": "3 Experiments", "text": "We implemented everything using Torch71. The ASG criterion as well as the decoder were implemented in C (and then interfaced into Torch).\nWe consider as benchmark LibriSpeech, a large speech database freely available for download [18]. LibriSpeech comes with its own train, validation and test sets. Except when specified, we used all the available data (about 1000h of audio files) for training and validating our models. We use the original 16 KHz sampling rate. The vocabulary L contains 30 graphemes: the standard English alphabet plus the apostrophe, silence, and two special \u201crepetition\u201d graphemes which encode the duplication (once or twice) of the previous letter (see Section 2.3).\nThe architecture hyper-parameters, as well the decoder ones were tuned using the validation set. In the following, we either report letter-error-rates (LERs) or word-error-rates (WERs). WERs have been obtained by using our own decoder (see Section 2.4), with the standard 4-gram language model provided with LibriSpeech2.\nMFCC features are computed with 13 coefficients, a 25 ms sliding window and 10 ms stride. We included first and second order derivatives. Power spectrum features are computed with a 25 ms window, 10 ms stride, and have 257 components. All features are normalized (mean 0, std 1) per input sequence."}, {"heading": "3.1 Results", "text": "Table 1 reports a comparison between CTC and ASG, in terms of LER and speed. Our ASG criterion is implemented in C (CPU only), leveraging SSE instructions when possible. Our batching is done with an OpenMP parallel for. We picked the CTC criterion implementation provided by Baidu3. Both criteria lead to the same LER. For comparing the speed, we report performance for sequence sizes as reported initially by Baidu, but also for longer sequence sizes, which corresponds to our average use\n1http://www.torch.ch. 2http://www.openslr.org/11. 3https://github.com/baidu-research/warp-ctc.\ncase. ASG appears faster on long sequences, even though it is running on CPU only. Baidu\u2019s GPU CTC implementation seems more aimed at larger vocabularies (e.g. 5000 Chinese characters).\nWe also investigated the impact of the training size on the dataset, as well as the effect of a simple data augmentation procedure, where shifts were introduced in the input frames, as well as stretching. For that purpose, we tuned the size of our architectures (given a particular size of the dataset), to avoid over-fitting. Figure 4a shows the augmentation helps for small training set size. However, with enough training data, the effect of data augmentation vanishes, and both type of features appear to perform similarly. Figure 4b reports the WER with respect to the available training data size. We observe that we compare very well against Deep Speech 1 & 2 which were trained with much more data [8, 1].\nFinally, we report in Table 2 the best results of our system so far, trained on 1000h of speech, for each type of features. The overall stride of architectures is 320 (see Figure 1), which produces a label every 20 ms. We found that one could squeeze out about 1% in performance by refining the precision of the output. This is efficiently achieved by shifting the input sequence, and feeding it to the network\nseveral times. Results in Table 2 were obtained by a single extra shift of 10 ms. Both power spectrum and raw features are performing slightly worse than MFCCs. One could expect, however, that with enough data (see Figure 4) the gap would vanish."}, {"heading": "4 Conclusion", "text": "We have introduced a simple end-to-end automatic speech recognition system, which combines a standard 1D convolutional neural network, a sequence criterion which can infer the segmentation, and a simple beam-search decoder. The decoding results are competitive on the LibriSpeech corpus with MFCC features (7.2% WER), and promising with power spectrum and raw speech (9.4% WER and 10.1% WER respectively). We showed that our AutoSegCriterion can be faster than CTC [6], and as accurate (table 1). Our approach breaks free from HMM/GMM pre-training and force-alignment, as well as not being as computationally intensive as RNN-based approaches [1] (on average, one LibriSpeech sentence is processed in less than 60ms by our ConvNet, and the decoder runs at 8.6x on a single thread)."}], "references": [{"title": "Deep speech 2: End-to-end speech recognition in english and mandarin", "author": ["D. AMODEI", "R. ANUBHAI", "E. BATTENBERG", "C. CASE", "J. CASPER", "B. CATANZARO", "J. CHEN", "M. CHRZANOWSKI", "A. COATES", "G DIAMOS"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2015}, {"title": "Maximum mutual information estimation of hidden markov model parameters for speech recognition", "author": ["L.R. BAHL", "P.F. BROWN", "P.V. DE SOUZA", "R.L. MERCER"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1986}, {"title": "Une approche theorique de l\u2019apprentissage connexionniste et applications a la reconnaissance de la parole", "author": ["L. BOTTOU"], "venue": "PhD thesis,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1991}, {"title": "Global training of document processing systems using graph transformer networks", "author": ["L. BOTTOU", "Y. BENGIO", "Y. LE CUN"], "venue": "In Computer Vision and Pattern Recognition,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1997}, {"title": "Hypothesis spaces for minimum bayes risk training in large vocabulary speech recognition", "author": ["M. GIBSON", "T. HAIN"], "venue": "In Proceedings of INTERSPEECH (2006),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks", "author": ["A. GRAVES", "S. FERN\u00c1NDEZ", "F. GOMEZ", "J. SCHMIDHUBER"], "venue": "In Proceedings of the 23rd international conference on Machine learning (2006),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "Speech recognition with deep recurrent neural networks", "author": ["A. GRAVES", "MOHAMED", "A.-R", "G. HINTON"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Deep speech: Scaling up end-to-end speech recognition", "author": ["A. HANNUN", "C. CASE", "J. CASPER", "B. CATANZARO", "G. DIAMOS", "E. ELSEN", "R. PRENGER", "S. SATHEESH", "S. SENGUPTA", "A COATES"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Scalable modified kneser-ney language model estimation", "author": ["K. HEAFIELD", "I. POUZYREVSKY", "J.H. CLARK", "P. KOEHN"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups", "author": ["G. HINTON", "L. DENG", "D. YU", "G.E. DAHL", "MOHAMED", "A.-R", "N. JAITLY", "A. SENIOR", "V. VANHOUCKE", "P. NGUYEN", "SAINATH", "T. N"], "venue": "Signal Processing Magazine, IEEE 29,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["J. LAFFERTY", "A. MCCALLUM", "F. PEREIRA"], "venue": "In Eighteenth International Conference on Machine Learning,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2001}, {"title": "Convolutional networks for images, speech, and time series", "author": ["Y. LECUN", "Y. BENGIO"], "venue": "The handbook of brain theory and neural networks 3361,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1995}, {"title": "Eesen: End-to-end speech recognition using deep rnn models and wfst-based decoding", "author": ["Y. MIAO", "M. GOWAYYED", "F. METZE"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Acoustic modeling using deep belief networks. Audio, Speech, and Language Processing", "author": ["MOHAMED", "A.-R", "G.E. DAHL", "G. HINTON"], "venue": "IEEE Transactions on 20,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Estimating phoneme class conditional probabilities from raw speech signal using convolutional neural networks", "author": ["D. PALAZ", "R. COLLOBERT", "M.M. DOSS"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "Analysis of cnn-based speech recognition system using raw speech as input", "author": ["D. PALAZ", "R COLLOBERT"], "venue": "In Proceedings of Interspeech", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "Joint phoneme segmentation inference and classification using crfs", "author": ["D. PALAZ", "M. MAGIMAI-DOSS", "R. COLLOBERT"], "venue": "In Signal and Information Processing (GlobalSIP),", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Librispeech: an asr corpus based on public domain audio books", "author": ["V. PANAYOTOV", "G. CHEN", "D. POVEY", "S. KHUDANPUR"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "Jhu aspire system: Robust lvcsr with tdnns, i-vector adaptation, and rnn-lms", "author": ["V. PEDDINTI", "G. CHEN", "V. MANOHAR", "T. KO", "D. POVEY", "S. KHUDANPUR"], "venue": "In Proceedings of the IEEE Automatic Speech Recognition and Understanding Workshop", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "A time delay neural network architecture for efficient modeling of long temporal contexts", "author": ["V. PEDDINTI", "D. POVEY", "S. KHUDANPUR"], "venue": "In Proceedings of INTERSPEECH", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "The ibm 2015 english conversational telephone speech recognition system", "author": ["G. SAON", "KUO", "H.-K. J", "S. RENNIE", "M. PICHENY"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "Speaker adaptation of neural network acoustic models using i-vectors", "author": ["G. SAON", "H. SOLTAU", "D. NAHAMOO", "M. PICHENY"], "venue": "ASRU", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2013}, {"title": "Gmm-free dnn training", "author": ["A. SENIOR", "G. HEIGOLD", "M. BACCHIANI", "H. LIAO"], "venue": "In Proceedings of ICASSP", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "Very deep multilingual convolutional neural networks for lvcsr", "author": ["T. SERCU", "C. PUHRSCH", "B. KINGSBURY", "Y. LECUN"], "venue": "arXiv preprint arXiv:1509.08967", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2015}, {"title": "Joint training of convolutional and nonconvolutional neural networks", "author": ["H. SOLTAU", "G. SAON", "T.N. SAINATH"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2014}, {"title": "Improvements in beam search", "author": ["V. STEINBISS", "TRAN", "B.-H", "NEY"], "venue": "ICSLP", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1994}, {"title": "The htk tied-state continuous speech recogniser", "author": ["P.C. WOODLAND", "S.J. YOUNG"], "venue": "In Eurospeech", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1993}], "referenceMentions": [{"referenceID": 5, "context": "We introduce an automatic segmentation criterion for training from sequence annotation without alignment that is on par with CTC [6] while being simpler.", "startOffset": 129, "endOffset": 132}, {"referenceID": 17, "context": "We show competitive results in word error rate on the Librispeech corpus [18] with MFCC features, and promising results from raw waveform.", "startOffset": 73, "endOffset": 77}, {"referenceID": 26, "context": "This approach takes its roots in HMM/GMM training [27].", "startOffset": 50, "endOffset": 54}, {"referenceID": 13, "context": "The improvements brought by deep neural networks (DNNs) [14, 10] and convolutional neural networks (CNNs) [24, 25] for acoustic modeling only extend this training pipeline.", "startOffset": 56, "endOffset": 64}, {"referenceID": 9, "context": "The improvements brought by deep neural networks (DNNs) [14, 10] and convolutional neural networks (CNNs) [24, 25] for acoustic modeling only extend this training pipeline.", "startOffset": 56, "endOffset": 64}, {"referenceID": 23, "context": "The improvements brought by deep neural networks (DNNs) [14, 10] and convolutional neural networks (CNNs) [24, 25] for acoustic modeling only extend this training pipeline.", "startOffset": 106, "endOffset": 114}, {"referenceID": 24, "context": "The improvements brought by deep neural networks (DNNs) [14, 10] and convolutional neural networks (CNNs) [24, 25] for acoustic modeling only extend this training pipeline.", "startOffset": 106, "endOffset": 114}, {"referenceID": 17, "context": "The current state of the art on Librispeech (the dataset that we used for our evaluations) uses this approach too [18, 20], with an additional step of speaker adaptation [22, 19].", "startOffset": 114, "endOffset": 122}, {"referenceID": 19, "context": "The current state of the art on Librispeech (the dataset that we used for our evaluations) uses this approach too [18, 20], with an additional step of speaker adaptation [22, 19].", "startOffset": 114, "endOffset": 122}, {"referenceID": 21, "context": "The current state of the art on Librispeech (the dataset that we used for our evaluations) uses this approach too [18, 20], with an additional step of speaker adaptation [22, 19].", "startOffset": 170, "endOffset": 178}, {"referenceID": 18, "context": "The current state of the art on Librispeech (the dataset that we used for our evaluations) uses this approach too [18, 20], with an additional step of speaker adaptation [22, 19].", "startOffset": 170, "endOffset": 178}, {"referenceID": 22, "context": "Recently, [23] proposed GMM-free training, but the approach still requires to generate a force alignment.", "startOffset": 10, "endOffset": 14}, {"referenceID": 6, "context": "An approach that cut ties with the HMM/GMM pipeline (and with force alignment) was to train with a recurrent neural network (RNN) [7] for phoneme transcription.", "startOffset": 130, "endOffset": 133}, {"referenceID": 7, "context": "There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6].", "startOffset": 98, "endOffset": 112}, {"referenceID": 12, "context": "There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6].", "startOffset": 98, "endOffset": 112}, {"referenceID": 20, "context": "There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6].", "startOffset": 98, "endOffset": 112}, {"referenceID": 0, "context": "There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6].", "startOffset": 98, "endOffset": 112}, {"referenceID": 5, "context": "There are now competitive end-to-end approaches of acoustic models toppled with RNNs layers as in [8, 13, 21, 1], trained with a sequence criterion [6].", "startOffset": 148, "endOffset": 151}, {"referenceID": 12, "context": "Compared to sequence criterion based approaches that train directly from speech signal to graphemes [13], we propose a simple(r) architecture (23 millions of parameters for our best model, vs.", "startOffset": 100, "endOffset": 104}, {"referenceID": 0, "context": "100 millions of parameters in [1]) based on convolutional networks for the acoustic model, toppled with a graph transformer network [4], trained with a simpler sequence criterion.", "startOffset": 30, "endOffset": 33}, {"referenceID": 3, "context": "100 millions of parameters in [1]) based on convolutional networks for the acoustic model, toppled with a graph transformer network [4], trained with a simpler sequence criterion.", "startOffset": 132, "endOffset": 135}, {"referenceID": 7, "context": "Our word-error-rate on clean speech is slightly better than [8], and slightly worse than [1], in particular factoring that they train on 12,000 hours while we only train on the 960h available in LibriSpeech\u2019s train set.", "startOffset": 60, "endOffset": 63}, {"referenceID": 0, "context": "Our word-error-rate on clean speech is slightly better than [8], and slightly worse than [1], in particular factoring that they train on 12,000 hours while we only train on the 960h available in LibriSpeech\u2019s train set.", "startOffset": 89, "endOffset": 92}, {"referenceID": 14, "context": "some of our models are also trained on the raw waveform, as in [15, 16].", "startOffset": 63, "endOffset": 71}, {"referenceID": 15, "context": "some of our models are also trained on the raw waveform, as in [15, 16].", "startOffset": 63, "endOffset": 71}, {"referenceID": 11, "context": "Our speech recognition system is a standard convolutional neural network [12] fed with various different features, trained through an alternative to the Connectionist Temporal Classification (CTC) [6], and coupled with a simple beam search decoder.", "startOffset": 73, "endOffset": 77}, {"referenceID": 5, "context": "Our speech recognition system is a standard convolutional neural network [12] fed with various different features, trained through an alternative to the Connectionist Temporal Classification (CTC) [6], and coupled with a simple beam search decoder.", "startOffset": 197, "endOffset": 200}, {"referenceID": 26, "context": "MFCCs are carefully designed speech-specific features, often found in classical HMM/GMM speech systems [27] because of their dimensionality compression (13 coefficients are often enough to span speech frequencies).", "startOffset": 103, "endOffset": 107}, {"referenceID": 0, "context": "Power-spectrum features are found in most recent deep learning acoustic modeling features [1].", "startOffset": 90, "endOffset": 93}, {"referenceID": 14, "context": "Raw wave has been somewhat explored in few recent work [15, 16].", "startOffset": 55, "endOffset": 63}, {"referenceID": 15, "context": "Raw wave has been somewhat explored in few recent work [15, 16].", "startOffset": 55, "endOffset": 63}, {"referenceID": 15, "context": "In our experience, we surprisingly found that using hyperbolic tangents, their piecewise linear counterpart HardTanh (as in [16]) or ReLU units lead to similar results.", "startOffset": 124, "endOffset": 128}, {"referenceID": 15, "context": "Our architecture for raw wave is shown in Figure 1 and is inspired by [16].", "startOffset": 70, "endOffset": 74}, {"referenceID": 1, "context": "Other alternatives have been explored in the context of hybrid HMM/NN systems, such as the MMI criterion [2] which maximizes the mutual information between the acoustic sequence and word sequences or the Minimum Bayse Risk (MBR) criterion [5].", "startOffset": 105, "endOffset": 108}, {"referenceID": 4, "context": "Other alternatives have been explored in the context of hybrid HMM/NN systems, such as the MMI criterion [2] which maximizes the mutual information between the acoustic sequence and word sequences or the Minimum Bayse Risk (MBR) criterion [5].", "startOffset": 239, "endOffset": 242}, {"referenceID": 5, "context": "More recently, standalone neural network architectures have been trained using criterions which jointly infer the segmentation of the transcription while increase the overall score of the right transcription [6, 17].", "startOffset": 208, "endOffset": 215}, {"referenceID": 16, "context": "More recently, standalone neural network architectures have been trained using criterions which jointly infer the segmentation of the transcription while increase the overall score of the right transcription [6, 17].", "startOffset": 208, "endOffset": 215}, {"referenceID": 0, "context": "The most popular one is certainly the Connectionist Temporal Classification (CTC) criterion, which is at the core of Baidu\u2019s Deep Speech architecture [1].", "startOffset": 150, "endOffset": 153}, {"referenceID": 2, "context": "In that respect, avoiding normalized transitions is important to alleviate the problem of \u201clabel bias\u201d [3, 11].", "startOffset": 103, "endOffset": 110}, {"referenceID": 10, "context": "In that respect, avoiding normalized transitions is important to alleviate the problem of \u201clabel bias\u201d [3, 11].", "startOffset": 103, "endOffset": 110}, {"referenceID": 25, "context": "We wrote our own one-pass decoder, which performs a simple beam-search with beam threholding, histogram pruning and language model smearing [26].", "startOffset": 140, "endOffset": 144}, {"referenceID": 8, "context": "Our decoder relies on KenLM [9] for the language modeling part.", "startOffset": 28, "endOffset": 31}, {"referenceID": 17, "context": "We consider as benchmark LibriSpeech, a large speech database freely available for download [18].", "startOffset": 92, "endOffset": 96}, {"referenceID": 7, "context": "In (b) we provide Baidu Deep Speech 1 and 2 numbers on LibriSpeech, as a comparison [8, 1].", "startOffset": 84, "endOffset": 90}, {"referenceID": 0, "context": "In (b) we provide Baidu Deep Speech 1 and 2 numbers on LibriSpeech, as a comparison [8, 1].", "startOffset": 84, "endOffset": 90}, {"referenceID": 7, "context": "We observe that we compare very well against Deep Speech 1 & 2 which were trained with much more data [8, 1].", "startOffset": 102, "endOffset": 108}, {"referenceID": 0, "context": "We observe that we compare very well against Deep Speech 1 & 2 which were trained with much more data [8, 1].", "startOffset": 102, "endOffset": 108}], "year": 2017, "abstractText": "This paper presents a simple end-to-end model for speech recognition, combining a convolutional network based acoustic model and a graph decoding. It is trained to output letters, with transcribed speech, without the need for force alignment of phonemes. We introduce an automatic segmentation criterion for training from sequence annotation without alignment that is on par with CTC [6] while being simpler. We show competitive results in word error rate on the Librispeech corpus [18] with MFCC features, and promising results from raw waveform.", "creator": "LaTeX with hyperref package"}}}