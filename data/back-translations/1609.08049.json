{"id": "1609.08049", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Sep-2016", "title": "Towards Evidence-Based Ontology for Supporting Systematic Literature Review", "abstract": "[Background]: Systematic Literature Review (SLR) has become an important research method in the field of software development, but it costs a great deal of effort. [Objective]: This paper proposes an approach to using empirically developed ontology to support the automation of important SLR activities. [Method]: First, we propose an ontology, SLRONT, which builds on SLR experience and best practices to capture common terminology and its relationships during SLR processes; second, we present an enhanced version of SLRONT, the COSONT, and begin with the knowledge and concepts derived from structured abstracts. Case studies illustrate the details of the application to support SLR steps. [Results]: The results show that by using COSONT compared to purely manual work, we draw the same conclusion, but significantly reduce the effort involved. [Conclusions: The systematic approach of literature research could support effective implementation.]", "histories": [["v1", "Thu, 22 Sep 2016 05:38:50 GMT  (222kb)", "http://arxiv.org/abs/1609.08049v1", null]], "reviews": [], "SUBJECTS": "cs.DL cs.AI cs.SE", "authors": ["yueming sun", "ye yang", "he zhang", "wen zhang", "qing wang"], "accepted": false, "id": "1609.08049"}, "pdf": {"name": "1609.08049.pdf", "metadata": {"source": "CRF", "title": "Towards Evidence-Based Ontology for Supporting Systematic Literature Review", "authors": ["Yueming Sun", "Ye Yang", "He Zhang", "Wen Zhang", "Qing Wang"], "emails": ["wq}@itechs.iscas.ac.cn,", "He.Zhang@nicta.com.au"], "sections": [{"heading": null, "text": "depends on whether or not it could effectively support knowledge centered tasks in certain domain [5]. In this subsection, we develop the hierarchy [11] of SLRONT. SLRONT acts as the general base of our approach. All specific domain ontologies should be built by extending it on certain aspects. SLRONT contains two sub-parts, the review protocols and the primary study. The relationship between them is a many-tomany mapping. That is, for a specific systematic literature review protocol, there are many primary studies relating to it and vice versa. Figure 2 shows the top level structure of it.\n1) Ontology structure of systematic literature review protocol: According to Kitchenham et al. [1], SLRs conform to strictly defined procedures. The top level procedure of SLR includes three phrases, planning, conducting and reporting. In order to guarantee the overall quality of the whole procedures,\nThe advocating of writing structured abstracts has been prevailing in recent years. Structured abstract has better clarity and completeness compared to conventional abstracts [12] [13] [9], which may contribute to the conducting of SLR. Besides the quality, structured abstracts support SLR better in that researchers could find more relevant and precise information easily in light of the declaration of structures. For example, if a SLR is designed to survey what is the most popular research approach adopted in a specific domain, the \u201cmethod\u201d part of structured abstracts should be reviewed mainly.\nProceedings of the EASE 2012 - Published by the IET ISBN 978-1-84919-541-6\n172\nThough most of the abstracts in published papers\u2019 are not written in structured style, they are still organized in a potential logic similar to that of structured abstracts\u2019, only the logic is much vaguer. Therefore, researchers could take advantage of this fact and use syntactical analysis techniques to transfer conventional abstracts into structured ones to support further research. This could contribute a lot to the conducting of SLR.\nA standard structured abstract includes the following five parts: Background, Object, Method, Result and Conclusion. We develop the following structure to represent primary studies. Details are shown in Figure 4. The \u201cStructured abstracts\u201d class is extended with five sub-classes. The dotted circles represent the parts not surveyed in this study."}, {"heading": "B. Extending SLRONT to COSONT", "text": "To demonstrate the value of ontology, we extend SLRONT to more specific version, the COSONT. COSONT is a more detailed ontology aiming at supporting cost estimation systematic literature review. Since the quality of unstructured abstracts is not as good as structured ones, we make a simplification while modeling it so that unstructured abstracts could be converted into structured ones with grammatical and syntactical analysis. We combine the \u201cObject\u201d part of\nstructured abstracts into the \u201cMethod\u201d part and combine the \u201cResult\u201d part into the \u201cConclusion\u201d part. Therefore, five subclasses of structured abstracts are briefed into three subclasses: Background, Method and Conclusion.\nThe main extending work lies in the Method sub-class of structured abstracts. According to the cost estimation SLR of Jorgensen et al. [14], the most common research topic is the introduction and evaluation of methods (with 61% of the papers). The popular methods include Regression, Neural network, Analogy, Expert judgment, Bayesian, etc. Also metrics such as Size and Uncertainty of effort are popular topics. Therefore, we concluded that the most widely concerns of this field are: a) What methods are used; b) What are the metrics adopted; c) In what context the study is launched. We extend the SLRONT into COSONT based on the above discussions. Details are shown in Figure 5.\nFor the \u201cMethod\u201d class, we build three sub-classes: Model, Metric and SE_feature. Due to the limitation of space, only partial subclasses of \u201cModel\u201d class are presented. We also build a \u201cSimple conclusion\u201d class as the subclass of the \u201cConclusion\u201d class. This is only an empty structure. COSONT needs to be instantiated through analyzing the abstracts of papers.\nProceedings of the EASE 2012 - Published by the IET ISBN 978-1-84919-541-6\n173\nFirst we build a set of grammatical and syntactical rules to segment conventional abstracts into structured abstracts. We use the Stanford Parser to parse the sentences of method and conclusion parts to extract knowledge and concepts as well as simple conclusions. The background part is not analyzed for it contains less relevant information towards the main theme of one paper. Extracted knowledge is added to COSONT according to predefined category. More details can be found in our technical report [15]. The instantiated COSONT is shown in Figure 6. Left column is the class hierarchy of COSONT. The bottom part is the entire graphical structure of COSONT expanded on the regression individuals, and its essential part is amplified in the middle zone. Yellow dots denote classes and purple rhombus denote individuals. Right column shows the regression individuals list extracted from structured abstracts."}, {"heading": "C. Automated Query and Retrieval", "text": "When COSONT is built up, it works as a knowledge base for further SLR studies. Since key knowledge and concepts relevant to specific cost estimation research question are extracted from abstracts and are inserted into the ontology structure, researchers could use SPAROL queries to retrieve them. Then relevant analysis is conducted on the retrieved results. This will save much more efforts than manually checking each literature and extracting information out of them. Next section will discuss two case studies.\nIII. CASE STUDY Since regression and neural network are two popular estimation approaches, we conduct 2 example scenarios to find which approach is better. Time used, studies identified and final conclusion are evaluating metrics.\n1) Research question for scenario 1:\nFind all cost estimation literatures discussing both regression and neural network methods.\n2) Research question for scenario 2:\nIs regression method considered \u201cbetter\u201d than neural network method?\nTowards the research area of software effort estimation, we use \"effort prediction\" as the primary search string. Four most popular digital libraries: IEEE Explorer, ACM Digital Library, Springer and Science Direct are searched with this string. As a raw set, we got 645 papers. Then, all parts of abstract are manually examined, with the help of title and keywords. If there are papers difficult to identified, we will go through the full text to make advanced decision. Moreover, experts are invited to supervise the whole process and assure the quality of final results. After carefully selection, 347 papers are selected as the final dataset.\nWe automatically segment these conventional abstracts into structured abstracts with syntactical analysis, then we instantiate COSONT with extracted knowledge and concepts from method and conclusion parts. Each paper is added to the primary class as an instance. All the noun phrases extracted from the method part are added to classes and subclasses of Model, Metric and SE_feature classes in accordance with the hierarchical categorization. Simple conclusions extracted from\nconclusion part are added to the Conclusion class as individuals. We invited 4 PhD students to participate in our case study; all of them have background of SLR. At first, we give them proper training to enable them to have an overview of the whole work."}, {"heading": "A. Study 1: supporting study selection", "text": "In this step, each student is randomly assigned around 87 papers of the overall 347 papers. The main inclusion/exclusion criterion is that the paper should mention both regression and neural network models. They should go through the details of abstracts and filter out those irrelevant ones based on their personal judgment. They were also asked to record the efforts used. As a comparison, we query COSONT to check the method part of abstracts automatically to find relevant paper. Figure 7 gives the SPARQL query and Table I shows the result.\nAs shown in table 1, 11 papers are identified at last. Manual selection is rather time consuming. The total time used is 35 Person Hours. Using COSONT, we select the same 11 studies but time used by COSONT could be ignored. Note that we need time to construct COSONT which should be added to the total time consumed by COSONT approach. While, building COSONT is an automatic procedure and adapts well to scale growing. When there are new abstracts needed to be added, we could simply re-run the procedure and update COSONT, which accounts for the good expandability of ontology based method. Results show that it is rather convenient to use COSONT to accomplish this task. After this study selection step, we give the answer to our SLR question: There are 11 papers in the dataset discussing both regression and neural network method."}, {"heading": "B. Study 2: supporting data extraction", "text": "In this case study, 4 PhD students need to find whether regression method is better than neural network in cost estimation research area. They should further check abstracts of the 11 identified paper set to judge whether the topic of a paper is about the comparison between two models, and make further judgment about which model is better. Meanwhile, we use COSONT to get simple conclusions extracted from each paper. And we make our decision based on the extracted information. Figure 8 gives the SPARQL query and Table II shows the result. Note that R denotes regression and NN denotes neural network.\nProceedings of the EASE 2012 - Published by the IET ISBN 978-1-84919-541-6\n174\nAs shown in Table II, of the total 11 papers, student 1 believes there are 5 papers about the comparison between two methods. Among them, 3 papers contend neural network is better, no paper said regression is better, and 2 papers said there is no big difference between them. So Student 1 reached the conclusion that neural network is better. The table shows that all of the 5 testers (including COSONT) reach the same conclusion. Time used by applying COSONT is much less than each of the 4 PhD students. After this data extraction step, we could give answer to our research question: Neural network is \u201cbetter\u201d than regression model in performing cost estimation.\nIn these studies, we reached the same conclusion using COSONT compared as sheer manual work. However, in each step of SLR, time used by COSONT is significantly less.\nIV. DISCUSSION In this study, a general purpose ontology, SLRONT, is built to support systematic literature review. To illustrate its usage and effectiveness, a specialization extension, COSONT is built based on it. There are many benefits of our approach.\nFirst, ontology has multiple advantages in supporting knowledge intensive tasks, such as knowledge expansion, knowledge reuse and machine reasoning. Though extra efforts may be cost in building ontology, the benefits of ontology are profound and profitable in the long run.\nSecond, ontology structure enables sharing knowledge between different research groups to enhance communication. With the help of ontology, small scale research groups lacking resource could conduct SLRs easily and worry less about paying too many efforts.\nThird, our automatic method extracts core knowledge from more relevant parts, such as the method and conclusion part of structured abstracts, and it could quickly filter out irrelevant materials. Knowledge contained in some part of abstract may confuse the \u201csearch engine like\u201d searching behavior, for example, irrelevant concepts in background part.\nThere are also some limitations of our work. First, more detailed ontology should firstly be configured to more specific applications in specific domain. Second, in COSONT, we reduce the five sub-parts of abstracts into three sub-parts. This level of granularity may only works in the context of this study.\nThird, we only give an example of facilitating the second and fourth step of systematic literature review. Further studies are needed in proving the usefulness of ontology in supporting other conducting steps. Last but not least, only abstract part is analyzed in our work. The full-text and other parts of primary studies may also necessary to be analyzed.\nV. CONCLUSION We propose a general purpose SLRONT to facilitate knowledge intensive researches, the systematic literature review. The review protocol of SLR is modeled into the ontology in order to better organize these concepts. Structured abstracts are also modeled to build SLRONT. To illustrate its effectiveness, we specify it into a more detailed structure, the COSONT. Then we use COSONT to support the ponderous work involved in systematic literature review by conducting case studies. The results illustrate the usefulness of our approach and therefore convince us that ontology is a good tool to support intensive efforts required in conducting SLR."}], "references": [{"title": "A taxonomy for software change impact analysis", "author": ["Khaled El Emam", "Elizabeth Jonker", "Margaret Sampson", "Karmela Krleza- Jeric", "Angelica Neisa"], "venue": "Journal of Medical Internet Research (http://www.jmir.org),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Ontology. Encyclopedia of Database Systems, Part 15:1963", "author": ["Tom Gruber"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1965}, {"title": "Ontology development 101: A guide to creating your first ontology. Stanford Knowledge Systems Laboratory Technical Report KSL-01-05 and Stanford Medical Informatics", "author": ["Natalya F. Noy", "Deborah L. McGuinness"], "venue": "Technical Report SMI-2001-0880,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "Applications of ontologies in software engineering. 2nd International Workshop on Semantic Web Enabled Software Engineering (SWESE 2006), held at the 5 International Semantic Web", "author": ["Hans-Jorg Happel", "Stefan Seedorf"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "An ontologybased approach to software comprehension - reasoning about security concerns", "author": ["Yonggang Zhang", "Juergen Rilling", "Volker Haarslev"], "venue": "Computer Software and Applications Conference, COMPSAC\u201906. 30th Annual International,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2006}, {"title": "Experience and Knowledge Management in Software Engineering", "author": ["Kurt Schneider"], "venue": "XVI, 235p,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "Presenting software engineering results using structured abstracts: a randomised experiment", "author": ["David Budgen", "Barbara A. Kitchenham", "Stuart M. Charters", "Mark Turner", "Pearl Brereton", "Stephen G. Linkman"], "venue": "Empirical Software Engineering,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Measuring and predicting software productivity: A systematic map and review", "author": ["Kai Petersen"], "venue": "Information and Software Technology,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Ontologies: Principles, methods and applications", "author": ["Mike Uschold", "Michael Gruninger"], "venue": "Knowledge Engineering Review,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1996}, {"title": "Length and readability of structured software engineering abstracts, volume 2", "author": ["Barbara A. Kitchenham", "Pearl Brereton", "Stephen Owen", "J. Butcher", "Clive Jefferies"], "venue": "IET Software,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}, {"title": "Reporting computing projects through structured abstracts: a quasi-experiment", "author": ["David Budgen", "Andy J. Burn", "Barbara Kitchenham"], "venue": "Empirical Software Engineering,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2011}, {"title": "A systematic review of software development cost estimation studies", "author": ["M. Jorgensen", "M. Shepperd"], "venue": "Software Engineering, IEEE Transactions on,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "[3] tried to apply visualization in support of the conducting of SLR.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "\u201d by Gruber [4], ontology has many advantages in dealing with knowledge related works [5].", "startOffset": 12, "endOffset": 15}, {"referenceID": 2, "context": "\u201d by Gruber [4], ontology has many advantages in dealing with knowledge related works [5].", "startOffset": 86, "endOffset": 89}, {"referenceID": 3, "context": "The whole lifecycle of software engineering could be greatly assisted [6].", "startOffset": 70, "endOffset": 73}, {"referenceID": 4, "context": "[7] use ontology-based approach to reason security concerns of software.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "Ontology can be used to organize knowledge of a problem domain [8].", "startOffset": 63, "endOffset": 66}, {"referenceID": 6, "context": "Budgen [9] has proved that structured abstracts are easier to read and contain more complete information.", "startOffset": 7, "endOffset": 10}, {"referenceID": 7, "context": "Kai Petersen [10] also claimed that structured abstracts may be a great help in conducting SLR.", "startOffset": 13, "endOffset": 17}, {"referenceID": 2, "context": "Whether the structure of ontology is suitable enough mainly depends on whether or not it could effectively support knowledge centered tasks in certain domain [5].", "startOffset": 158, "endOffset": 161}, {"referenceID": 8, "context": "In this subsection, we develop the hierarchy [11] of SLRONT.", "startOffset": 45, "endOffset": 49}, {"referenceID": 9, "context": "Structured abstract has better clarity and completeness compared to conventional abstracts [12] [13] [9], which may contribute to the conducting of SLR.", "startOffset": 91, "endOffset": 95}, {"referenceID": 10, "context": "Structured abstract has better clarity and completeness compared to conventional abstracts [12] [13] [9], which may contribute to the conducting of SLR.", "startOffset": 96, "endOffset": 100}, {"referenceID": 6, "context": "Structured abstract has better clarity and completeness compared to conventional abstracts [12] [13] [9], which may contribute to the conducting of SLR.", "startOffset": 101, "endOffset": 104}, {"referenceID": 11, "context": "[14], the most common research topic is the introduction and evaluation of methods (with 61% of the papers).", "startOffset": 0, "endOffset": 4}], "year": 2012, "abstractText": "[Background]: Systematic Literature Review (SLR) has become an important software engineering research method but costs tremendous efforts. [Aim]: This paper proposes an approach to leverage on empirically evolved ontology to support automating key SLR activities. [Method]: First, we propose an ontology, SLRONT, built on SLR experiences and best practices as a groundwork to capture common terminologies and their relationships during SLR processes; second, we present an extended version of SLRONT, the COSONT and instantiate it with the knowledge and concepts extracted from structured abstracts. Case studies illustrate the details of applying it for supporting SLR steps. [Results]: Results show that through using COSONT, we acquire the same conclusion compared with sheer manual works, but the efforts involved is significantly reduced. [Conclusions]: The approach of using ontology could effectively and efficiently support the conducting of systematic literature review. Keywords-systematic literature review; ontology; structured abstract; software cost estimation", "creator": "PScript5.dll Version 5.2"}}}