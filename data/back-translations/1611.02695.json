{"id": "1611.02695", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Nov-2016", "title": "Automatic recognition of child speech for robotic applications in noisy environments", "abstract": "Automatic Speech Recognition (ASR) provides a natural and intuitive user interface for robotic educational applications for children. However, there are a number of challenges to enable such an interface to function robustly in realistic environments, including the intrinsic difficulties of recognizing children's speech and the high level of background noise that is often present in classrooms. As part of the EU project EASEL, we have made several contributions to addressing these challenges and have implemented our own ASR module for use in robotics applications. We have used the latest deep neural network algorithms, which provide a performance leap over the traditional GMM approach, and use data augmentation methods to improve robustness to noise and speaker variations. We offer close integration between the ASR module and the rest of the dialogue system, enabling the ASR to obtain in real time the speech models relevant to the current stage of the dialogue, greatly improving accuracy.", "histories": [["v1", "Tue, 8 Nov 2016 09:50:30 GMT  (6892kb,D)", "http://arxiv.org/abs/1611.02695v1", "Submission to Computer Speech and Language, special issue on Interaction Technologies for Children"]], "COMMENTS": "Submission to Computer Speech and Language, special issue on Interaction Technologies for Children", "reviews": [], "SUBJECTS": "cs.CL cs.SD", "authors": ["samuel fernando", "roger k moore", "david cameron", "emily c collins", "abigail millings", "amanda j sharkey", "tony j prescott"], "accepted": false, "id": "1611.02695"}, "pdf": {"name": "1611.02695.pdf", "metadata": {"source": "CRF", "title": "Automatic recognition of child speech for robotic applications in noisy environments", "authors": ["Samuel Fernando", "Roger K. Moore", "David Cameron", "Emily C. Collins", "Abigail Millings", "Amanda J. Sharkey", "Tony J. Prescott"], "emails": [], "sections": [{"heading": null, "text": "Automatic speech recognition (ASR) allows a natural and intuitive interface for robotic educational applications for children. However there are a number of challenges to overcome to allow such an interface to operate robustly in realistic settings, including the intrinsic difficulties of recognising child speech and high levels of background noise often present in classrooms. As part of the EU EASEL project we have provided several contributions to address these challenges, implementing our own ASR module for use in robotics applications. We used the latest deep neural network algorithms which provide a leap in performance over the traditional GMM approach, and apply data augmentation methods to improve robustness to noise and speaker variation. We provide a close integration between the ASR module and the rest of the dialogue system, allowing the ASR to receive in real-time the language models relevant to the current section of the dialogue, greatly improving the accuracy. We integrated our ASR module into an interactive, multimodal system using a small humanoid robot to help children learn about exercise and energy. The system was installed at a public museum event as part of a research study where 320 children (aged 3 to 14) interacted with the robot, with our ASR achieving 90% accuracy for fluent and near-fluent speech.\nKeywords: Automatic speech recognition, Social and educational robotics, Multimodal dialogue systems\nPreprint submitted to Computer Speech and Language (special issue) November 10, 2016\nar X\niv :1\n61 1.\n02 69\n5v 1\n[ cs\n.C L\n] 8"}, {"heading": "1. Introduction", "text": "As part of the EU project EASEL (Expressive Agents for Symbiotic Education and Learning) we study child-robot interactions in social and educational contexts. For these interactions, the capability of automatic speech recognition (ASR) provides a natural and intuitive interface for a child to communicate with a robot. ASR provides benefits in educational applications (Williams et al., 2000) including a more engaging and enjoyable experience for children. Additionally, such an interface provides improved learning outcomes (Mostow et al., 2008) compared to traditional computer interfaces such as keyboards and mice.\nHowever there are significant challenges to overcome before ASR can be used effectively in such applications. These include the intrinsic difficulty of recognising child speech due to physiological differences in the vocal tract (Russell and D\u2019Arcy, 2007), clarity in pronunciation (especially for younger children), the higher intra-speaker and inter-speaker variability in children\u2019s speech (Gerosa et al., 2007), and the higher rate of disfluencies when compared to adult speech (DeJoy and Gregory, 1985). Another problem is that robotic and computer systems are required to work well in classroom environments which can often be noisy. For both adult and child speech, high levels of background noise can be severely detrimental to ASR performance.\nIn this article we present a number of contributions to address these challenges. We used the Kaldi (Povey et al., 2011) open source toolkit to develop our ASR module. This toolkit contains state of the art acoustic modelling and decoding algorithms for both the traditional Gaussian Mixture Model (GMM) approach as well as the latest deep neural network (DNN) algorithms. We evaluated both approaches in this article, training the models on existing corpora of child and adult speech. Since these data sets are relatively small, we used data augmentation approaches to improve robustness over noisy conditions and speaker variation. We also provided a close integration between the ASR module and the rest of the robotic dialogue system. This allows the module to be updated in real-time with language models relevant to the current stage of the dialogue (e.g. answer options in a multiple choice quiz). The combination of a high performance acoustic model and dynamic language model offers a robust system that works well with young children in a noisy environment, even with a relatively small amount of data used for training.\nThe rest of this article has the following structure. In Section 2 we briefly\ndescribe previous related work in this area. Section 3 gives an overview of the EU EASEL project and the specific use case for our ASR module. Section 4 describes the development details of our ASR module, including the creation of the acoustic and language models, and how the recogniser was implemented to run in an online (live) setting and integrated with the rest of the EASEL multimodal dialogue system. Sections 5 and 6 respectively describes offline and live experiments using the ASR module. Finally Section 7 concludes."}, {"heading": "2. Related work", "text": "There are significant obstacles for developing an ASR system for robotic applications. Apart from the difficulties of recognising child speech and dealing with background noise, there are few high quality speech recognition solutions that are readily accessible to researchers who are not ASR experts. Off-the-shelf commercial applications are usually designed for specific applications such as dictation or search and are not suitable for robotic dialogue systems. There are open-source toolkits available such as Julius (Lee and Kawahara, 2009) or HTK (Young et al., 1997) but these can be difficult for non-experts to configure. In addition, many of these toolkits have become stagnant or underdeveloped in recent years meaning they lack the high-performance algorithms and techniques which have been developed in recent years. As a result of these challenges, there been relatively few applications of ASR for children\u2019s speech despite the desirability of such a system for many scenarios. The main applications so far have been in reading tutors (Mostow et al., 2013) which are a very useful application but are relatively unchallenging for ASR since the text that is going to be uttered is largely known beforehand. Recently the ALIZ-E social robotics project (Belpaeme et al., 2012) showed promising ASR results in offline experiments (Sommavilla et al., 2014) but this system was not deployed in live interactions.\nA major step forward in speech recognition technology has arisen through the emergence of the Kaldi toolkit. Table 1 shows results from Gaida et al. (2014) comparing Kaldi against other major ASR toolkits, with the performance of Kaldi with the DNN approach having a third of the error rate in comparison to the other software."}, {"heading": "3. The EASEL project use-case", "text": "The work on ASR described in this article is part of the wider EU EASEL project. In this project we develop robotic tutoring systems to help children learn about scientific topics. As a consortium, we study the social, psychological and educational aspects of the interactions as well as working on the technical capabilities. In this article however, we focus on our particular use-case at Sheffield, the Healthy Living Scenario. This interaction features a small humanoid robot which acts as a tutor to help children learn about healthy living, in particular about exercise and energy."}, {"heading": "3.1. Physical setup for the Healthy Living Interaction", "text": "We use the Zeno R25 robot manufactured by Robokind1, pictured in Figure 1. The main feature of this robot is the emotionally expressive face with seven degrees of freedom including eyebrows, mouth opening, and smile. It also has five degrees of freedom in its arms including a grasping hand and four degrees of freedom in the legs and waist.\nThe robot is equipped with its own onboard speech synthesiser based on the Acapela2 speech synthesiser. We used the default American English voice. The robot stood on a specially constructed stand. Above the stand was a mount for a Kinect sensor, used for skeletal tracking to estimate energy usage during exercise (explained in more detail in the subsequent sections). We also had a large screen TV display which was used to show prompts as well as questions and answers for a multiple choice quiz (Figure 2). During the exercise part of the interaction, the TV display would show the skeletal\n1http://www.robokindrobots.com/zeno-r25/ 2http://www.acapela-group.com/\ntracking from the SceneAnalyzer module, allowing the children to see the tracked skeleton move as they exercised, as shown in Figure 3.\nBehind the scenes, we had two laptops running all the required software for the system to run. We used the Yeti Blue microphone as our sound input for the ASR. This microphone has an USB interface so input could be processed directly without need for another sound card. A picture of the whole setup is shown in Figure 4. This system was installed at the Weston Park museum in Sheffield. We occupied a large activity room which was located away from the main busy areas in the museum. To enter the room the visitors had to walk upstairs and down a corridor, and the event was clearly signposted along the way. Outside the room we put a sign saying that people were welcome to come in and participate, but to please remain quiet as speech recognition was taking place.\nThe system was located in one side of the room. On the other side of the room we had other activities for children to engage in, such as other robots to look at, and colouring pages for children to quietly work on. On entering the room the visitors were offered the opportunity to look at any of the events in the room. For children of around 7 or above we offered the opportunity to talk to the robot in our Healthy Living Interaction and gave a brief explanation of what the interaction was about. Younger children were not actively encouraged to participate. If they or their parents were interested we offered them the chance to participate, although we did warn that the interaction may not be suitable for younger children. For children\nyounger than 7 we suggested that their parents or guardians may wish to sit with them and help them complete the interaction. Once a child was ready to take part, we invited them to sit in the chair, ready to talk to the robot.\nFor all participants we presented parents/guardians with a consent form explaining what would happen in the interaction. This was presented either as an online survey on a touchscreen tablet, or on paper. Parents and children had the opportunity to ask questions from the researchers at the event and were free to abort the interaction at any time and withdraw consent. The parents were able to tick boxes on the touchscreen or paper indicating whether they gave permission for their child to take part; gave permission for the audio to be recorded; gave permission for the video to be recorded; and finally whether they were willing to fill in a questionnaire afterwards."}, {"heading": "3.2. The Healthy-Living Interaction", "text": "The first phrase spoken by the robot is:\nRobot: Hello, I am Zeeno the robot, we are going to learn about exercise and energy. First I need you to repeat some words after me so that I can get used to your voice. Please say, Hello Zeeno,\nI am ready to start.\u201d3\nThe child was then expected to say:\nChild: Hello Zeeno I am ready to start.\nAfter the initial phrase the robot then asks the child to repeat two more phrases:\nRobot: Thank you. Now please say, Testing A. B. C.\nChild: Testing A B C.\nRobot: OK great. Now please say, testing one two three.\nChild: Testing one two three.\nThese three phrases provided an initial fail-fast stage for the interaction. If the child was not able or willing to say the phrases, or if the system failed to recognise the phrases, then the researchers could abort the interaction and offer an alternative, such as looking at the other robots in the room. However if (as most often was the case) the interaction had proceeded successfully to this point, then the researchers could simply allow the interaction to continue automatically as follows:\nRobot: Great thank you. Now we will do some exercise. Please step on the mat so I can see you.\n(Child steps on mat)\nRobot: OK great I can see you. Lets look at how much energy you use in exercise. I will play musical notes to show how much energy you use. If you move fast it will be high pitched, if you move slow it will be low pitched. First lets see what happens if you just stand completely still for ten seconds.\nThe robot monitored the movement of the childs arms through the Kinect sensor and calculated the amount of energy used:\n3Note that we used Zeeno instead of Zeno in the text on screen. This is an attempt to ensure that children pronounce this unfamiliar word in a consistent way i.e. as [zi:n@U] (Zeeno) instead of [zeIn@U] (Zeno).\nRobot: OK in that session you used a total of session1 energy joules of energy. Now lets see what happens when you move slowly for ten seconds. Put your arms out as far as you can. Then move them around slowly in big circles. Go!\nThis continues two more times, with the robot varying the speed of movement requested (quickly instead of slowly), and the duration (twenty seconds instead of ten). At the end of each session the robot again reports the amount of energy used. After the fourth and final session the robot invites the child to sit down and do the quiz:\nRobot: OK. You used session4 energy joules of energy that time. Now we will do the quiz. Please sit down on the chair and when you are ready say Zeeno Start the Quiz.\nAfter the child said \u2018Zeeno Start the Quiz\u2019 the quiz would start (if the phrase was not recognised then after 10 seconds the quiz would begin anyway). The quiz consisted of four multiple choice questions. The first question was:\nRobot: In which session did you use the most energy? Was it when you\nStood still for ten seconds\nMoved slowly for ten seconds\nMoved quickly for ten seconds\n*Moved quickly for twenty seconds\nThe robot would say the question and the four answers, and as it did so, the text would also come up on the large screen display. At the end of the last answer, the child was then expected to select and say the answer they thought was most appropriate. The next question was similar to the first except querying about when they used the least energy rather than the most (the options were the same). There then followed a general question relating to exercise and energy:\nRobot: In general, which of these would use the most energy?\nWatching television for twenty minutes\nReading a book for twenty minutes\nPlaying football for twenty minutes\nWalking for twenty minutes\nAgain there followed a similar question about the least energy rather than the most. Finally the roles of the child and the robot were somewhat altered, in that the robot presented commands that the child could give to the robot:\nRobot: Thank you for doing the quiz. Now it is your turn to tell me what to do. Choose one option. You can say\nPut your left arm up\nPut your right arm up\nMake a happy face\nMake a sad face\nUpon selecting an option, the robot would verbally acknowledge the command \u2018OK I will put my left arm up\u2019 and then perform the action. Following this, another similar set of commands was presented (including an option to \u2018Do the monkey dance\u2019 whereupon it would perform an amusing preprogrammed dance) and the robot would again do as commanded. Finally the robot concluded the interaction:\nRobot: OK that is enough of that. I had fun talking with you today. Hope to see you again. Goodbye!\nThe audio stream continued recording for a few seconds afterwards in case the child said \u2018Goodbye\u2019 or something similar. However no recognition was performed at this point."}, {"heading": "4. The SF-Kaldi-ASR setup", "text": "We used the Kaldi open source ASR toolkit to train our acoustic models, and develop the ASR module which we integrated into the EASEL system described above. In this section we describe the data and methods used to create this module."}, {"heading": "4.1. Training data", "text": "Our use case requires that the system to be deployed in classrooms and museums mainly in England, with British English native speakers. We therefore used corpora of British English speech to train our acoustic model. We used two corpora. The first is the British English version of the Wall Street Journal corpus created at the University of Cambridge (Robinson et al., 1995), which we henceforth refer to as the WSJCAM corpus. The second is the PF-star corpus of British English child speech (Russell, 2006), henceforth referred to as the PF corpus. We train with both corpora to create a single acoustic model that can be used for both adult and child speech. We used the designated portions of each corpus for training and testing.\nFrom the WSJCAM corpus we use the training set comprising 92 training speakers, and the evaluation test set comprising 28 speakers. Each speaker provides approximately 90 utterances and an additional 18 adaptation utterances for speaker adaptation. We did not do any speaker adaptation in our experiments, and used the whole set of 108 utterances for testing. The corpus contains simultaneous recordings from both a headset microphone and a desk microphone, we use both for training and testing. We prepared our own data preparation scripts as the WSJCAM corpus differs considerably in format to the original WSJ American English corpus. However we followed the transcription normalization provided in the the American WSJ example scripts included with Kaldi.\nThe PF corpus contains speech from 158 children aged 4 to 14 years. The majority of the children (excluding some of the younger children) recorded 20 SCRIBE sentences, a list of 40 isolated words, a list of 10 phonetically rich sentences, 20 generic phrases, an accent diagnostic passage (the \u2018sailor passage\u2019) and a list of 20 digit triples. We train our system with the designated training set (86 speakers, approx 7 hrs 30 mins), and test with the evaluation test set (60 speakers, approx. 5 hrs 50 mins). This corpus contains simultaneous recordings from both a headset microphone and a desk microphone, we use both for training and testing. We prepared our own data preparation scripts to prepare the input for Kaldi. In the PF corpus there was a minor issue where \u2018sp\u2019 and \u2018sil\u2019 were both used to denote silence: we collapsed this down to a single symbol \u2018!SIL\u2019 for training with Kaldi. We kept all disfluent speech. The original PF transcripts contain segmentations of individual words; we join these together for input into Kaldi as it works better with a whole utterance in each segment rather than individual words."}, {"heading": "4.2. Noise data for augmentation", "text": "In order to improve robustness in noise, we used background noise audio to augment the training data described above. For this purpose we used the CHiME corpus (Christensen et al., 2010) which contains various kinds of background noise recorded in real-life environments. Since our main relevant use-case for the ASR is a public museum setting, we decided that the \u2018cafe\u2019 background noise would be the best matching type of noise to use for our model.\nFor each utterance in the PF and WSJCAM corpora, a section of the noisy corpus of the same length was randomly selected and added to the utterance audio. The addition was done using the SoX4 sound processing tool, using the mix option. We added the noise at three different signal to noise levels, 5dB, 10dB and 20dB."}, {"heading": "4.3. Kaldi acoustic modelling", "text": "We used the Kaldi toolkit to train the acoustic models for the ASR system. The toolkit has relatively standardised scripts (collectively known as recipes) designed to work with different sets of training data. We followed the Wall Street Journal (WSJ) recipe. Training starts with a standard monophone system using standard 13 dimensional MFCCs along with first and second order derivatives. Cepstral mean normalization is used throughout to reduce the channel effect. A triphone system was then constructed using speaker-independent alignments derived from the monophone system, and a linear discriminant analysis (LDA) transform was employed to select the most discriminative dimensions from a large context (five frames to the left and right, respectively). A further refined system was then constructed by applying a maximum likelihood linear transform (MLLT) upon the LDA feature.5 At this point we have our final GMM acoustic model ready for use in offline decoding. However further processing is necessary to prepare the model for online decoding, using a script provided in Kaldi. This process accumulates statistics for basis-fMLLR computation, computes basis matrices and then accumulates statistics for the online alignment model. This model is then ready for online GMM decoding.\nWe also train a DNN model using the train multisplice accel2.sh script provided in Kaldi, which at the time of writing was the recommended\n4http://sox.sourceforge.net/ 5See http://kaldi-asr.org for more information about this setup.\nscript to use for DNN training6. We used four hidden layers and trained over one epoch, which came to 62 iterations. The initial effective learning rate was 0.005 and the final rate was 0.0005."}, {"heading": "4.4. Language models and pronunciation dictionary", "text": "The main focus of Kaldi is on acoustic modelling. There are no language modelling tools provided, but there are some links provided in the usage examples that come with the software.\nFor our purposes we require two main types of language models. The first are large language models which encapsulate the language found in the training data. For this we use the MIT n-gram language modelling tool (Hsu and Glass, 2008) which takes as input a text corpus and generates an ngram model which can then be input into Kaldi. We combine the text of the PF and WSJCAM corpora as input to this tool and then compile a bigram language model for use in Kaldi, following the Voxforge example in Kaldi.\nThe second type of language model we require are small constrained grammars, which we use during the multiple choice quiz in the Healthy Living Interaction. For this purpose we used the JSpeech Grammar Format (JSGF)7 to specify the grammar. We used the sphinx jsgf2fsg tool included in the sphinxbase-utils package8 for the Ubuntu Linux operating system to compile the source JSGF grammar file into a finite-state machine (FSM) representation. Next we use OpenFST tools (Allauzen et al., 2007) to compile the FSM into a finite-state transducer (FST). Finally we used the scripts provided in the Kaldi examples to create the final language model and decoding graph from the FST.\nFor both types of language model we require a pronunciation dictionary that lists for each word in the dictionary the phonetic sequence(s) for the word. We use the Beep9 dictionary for this purpose, since it is designed for British English pronunciations. For words that are not in the dictionary (e.g. robot names, such as Zeno) we use the Sequitur tool (Bisani and Ney, 2008)\n6At the time of writing the DNN scripts are under continuous development by the Kaldi team as DNN approaches for speech recognition are a highly active area of research. See the Kaldi website http://kaldi-asr.org for the latest information about the DNN setup.\n7http://www.w3.org/TR/jsgf/ 8http://packages.ubuntu.com/precise/sound/sphinxbase-utils 9ftp://svr-ftp.eng.cam.ac.uk/pub/comp.speech/dictionaries/beep.tar.gz\nto estimate the phone sequences given the letters of the word. This gives a guess of the pronunciation of the word where it is not available. For small vocabularies it is feasible to manually check these pronunciations to ensure they are correct."}, {"heading": "4.5. Online decoding", "text": "The Kaldi toolkit has been designed primarily for researchers working the field of speech recognition. Most of the framework is based around offline experiments, where the speech audio has been segmented into individual utterances and manually transcribed. The toolkit offers various scripts for training and evaluating with this data.\nFor our use-case in EASEL (and for robotics applications in general) we require a quite different setup, where we have a live audio input stream and we expect recognition results to be returned as soon as possible at the end of each utterance. In speech research terminology this is referred to as an online10 decoding system. The decoding algorithms required for online decoding are similar to that used in the offline decoding, except that they are optimised to give a result at the end of the utterance with a very low latency.\nAn example for online decoding is provided in the toolkit, however this example is quite limited. In order to create a working system for our use case, a significant amount of effort has been invested to refactor and extend this example. We have designed this additional code to be a lightweight extension to Kaldi itself, so that it can be easily installed on top of the Kaldi system. The extra code has been written in C++, the same as Kaldi itself and so can be configured to run very efficiently with little extra overhead. In addition we have designed the code to be modular and re-usable so that other end-users such as roboticists who want to integrate ASR into their own systems can do so with as little effort as possible.\nThe extra features implemented are listed below. All features can be easily configured by changing parameters in a shell script.\n\u2022 Record audio input from the microphone to file. This code is embedded within the ASR module, meaning that we can record the exact input\n10This is perhaps a somewhat confusing term. It has nothing to do with being connected to the internet which is a common contemporary use for the word \u2018online\u2019\nreceived by the system, an essential feature for replicating results for experimental analysis.\n\u2022 Choose a data source. The user can switch between live microphone input, and a pre-recorded audio file. When receiving input from the audio file the program runs exactly as it would if it were receiving the data from the microphone; this feature allows us to run the decoder over recorded audio from previous sessions and see how well the recogniser would perform in that situation.\n\u2022 Specify an acoustic model. This means we could choose between child and adult acoustic models, or models suited better for different microphones and so on.\n\u2022 Dynamic language models. This allows language models to be switched at run-time given an input event from another source. For example in our use-case this allows use to switch between different sets of answer options for each multiple choice question in the quiz. This narrowing of the search space greatly improves recognition accuracy.\n\u2022 Specify output options. We have a specific C++ class to deal with outputting the results of the ASR. Currently we write the ASR transcription output to screen and to a log file. This could be expanded in future to allow more detailed information such as n-best paths with associated probabilities.\n\u2022 Logging features. All output is logged automatically to date-stamped files for later analysis and debugging."}, {"heading": "4.6. Integration with other modules", "text": "An ASR module is only useful in robotics applications if it is well integrated with the dialogue system and other modules in the wider system. In order to integrate the ASR with the other modules in the EASEL system, we used the YARP middleware (Metta et al., 2006) which is used throughout the EASEL project and has been widely used in many European robotics projects. YARP provides the functionality for programs running across a range of operating systems and programming languages to communicate at run-time via ports. Each program can read and write to any number of ports, allowing an easy and flexible form of communication between the modules.\nPorts can be assigned any name, but in our project we use a convention to have descriptive names to make it easy to identify the nature of the port from the name. For the ASR module, we have developed a simple YARP wrapper that takes the text output from the ASR module and writes it to a YARP port /SpeechRecognition/Sentence. This information can then be read by any other module which is interested.\nAs well as writing out information, the module is also able to receive information at run-time from other modules. Specifically in our use-case we make use of two main types of input events. The first is from the robot itself, via the dialogue manager. These events tell us when the robot has started or finished speaking via its onboard speech synthesiser. Using this information allows us to effective start and stop listening at appropriate times in the dialogue. Since the robots synthesiser voice can be quite loud (especially in a public setting such as museum), we switch off the recognition of human speech while the robot is speaking since otherwise we would end up recognising the robot speech instead of the human speech. The audio is still recorded to file (for later analysis), but it is not input into the recogniser. This is a simple but effective way to filter out the robot speech - although evaluations showed it is not perfect (see discussion in Section 6.4).\nThe second type of input event is the specification of language models, mentioned briefly in the previous section. In our use-case this event is determined by the dialogue manager, which keeps track of which part of the dialogue the system is currently engaged in. In the first part of the interaction the robot asks the participant to repeat certain keyphrases to allow for voice adaptation. Thus the language model for this stage is very simple; a grammar model that has only two possible paths - either the entire keyphrase or silence/non-speech. Later on in the interaction, the grammar is slightly more complex - the robot presents a question or instruction with multiple choices (answers to the question, or a selection of commands to give to the robot); for this part of the interaction the grammar comprises the set of choices, again plus an option for silence/non-speech if nothing is uttered. Since in our use-case we know the expected utterances for each stage in the dialogue we precompiled the grammars in advance. Then during the interaction the dialogue manager can send a simple message to the ASR module to specify which grammar should be used for the next utterance. This information greatly improves the recognition performance since we have a much smaller search space than if we had to include all possible utterances in a single language model."}, {"heading": "5. Experiments with existing corpora", "text": "We evaluated our Kaldi ASR setup with existing corpora. We used the GMM and DNN acoustic modelling and decoding approaches described in Section 4.3. We used a bigram language model computed using the MITLM toolkit as described in Section 4.4, using all the text in the corpora to compute the bigrams. We use the WSJCAM (adult) and PF (child) corpora described in Section 4.1. We add various levels of noise to the test data (as described in Section 4.2) to evaluate how well the algorithms perform under these conditions.\nFirst, we report the results obtained using only clean training data in Table 2.\nThe DNN approach significantly outperforms the GMM approach on the clean adult (WSJ) speech with a WER of 4.9% for the DNN approach and 7.9% for the GMM approach. Interestingly this performance is not replicated for the child (PF) speech, with performance roughly similar in both cases (this maybe due to the parameter settings; it is possible that adjusting parameters such as the number of hidden layers, the learning rate and so on may improve results, but these were not investigated in depth for this work).\nAs expected, adding noise to the data causes performance to degrade; with only a 20dB signal to noise ratio the performance for the GMM and DNN approaches is roughly levelled, both obtaining 12 to 13% WERs for adult speech, and 30% for the child speech. The degradation in performance continues with higher levels of noise.\nNext we report results using the full set of training data including all the noise-augmented data in Table 3.\nIn this case the GMM approach fares poorly. The results for the clean test data are worse, suggesting that the models are unable to discriminate\nbetween noise and speech. However the results for the noisy data are better than before. Interestingly the performance for adult speech with 20dB noise level is slightly better than for clean speech.\nHowever the DNN approach performs much better. The performance on clean speech is similar to before, and in fact the performance on clean child speech is better, 9.9% vs 15.6%. This surprising result could be caused by the DNN configuration; it is possible that the configuration was better suited for the larger training set size, and could be improved for the smaller set with some tuning of parameters such as learning rate. The results for noisy data are also superior compared to the GMM approach. For adult speech the WER is kept below 10% even with 10dB noise. Good performance is also achieved with the child speech, although the results suggest that child speech is harder to discriminate against background noise. However the DNN approach proves to be far more robust than the GMM approach in the presence of noise."}, {"heading": "6. Live experiments", "text": "We installed the system at the Weston Park museum in Sheffield, as described in Section 3.2. The event ran for 14 days during the Easter holidays. In total we had 367 individuals11 who we noted as participating in the interaction. Of these, we had 329 interactions where parents/guardians provided consent to participate in the study. From this subset, we had 326 who gave\n11This figure does not include a number of individuals who took part in the interaction but were not recorded. Some children wanted to try but for whatever reason did not want, or were not able, to consent to participate in the study (for example because their parents were not present, or because on one occasion we ran out of paper consent forms). The figure also does not include some adults who participated, since our focus was on child speech.\nconsent for audio to be recorded during the interaction, and 321 who provided consent for video recording. Of the 326 children for which we had consent for audio recording, we exclude one case where we did not record the age, and five cases where the adult spoke for the child, leaving a total of 320 participants for which we have the full set of data. This set of 320 comprises 181 male (57%) and 139 female (43%) children. The detailed age gender distribution of the 320 participants is shown in Figure 5.\nOf these 320 participants, we wizarded in 54 cases. The decision to wizard the interaction was based on the age of the child; the level of background noise in the room; and a quick judgement after initial conversation with the child to determine if they would be able to speak fluently with the robot. The distribution of wizarded interactions is shown in Figure 6."}, {"heading": "6.1. Data transcription", "text": "All the speech audio files we obtained were manually transcribed. Transcribers used the Xtrans software12 created by the Linguistic Data Consortium to annotate the files. The transcribers were provided with the automatically generated transcriptions that were created during the running of the experiment. They were asked to check each of these and correct as necessary, and also to search for other utterances that may have not been detected\n12https://www.ldc.upenn.edu/language-resources/tools/xtrans\nby the ASR. They were instructed that the segments of interest were clear speech from the child participant that was directed to the robot; they were asked to exclude noise from the robot, speech or noise from other people in the room, and speech from the child to others in the room, especially if it was whispered or muttered. Since we wanted to test the effectiveness of the ASR in background noise we asked the transcribers to leave such noise at the beginning and end of the speech segments; this enables us to test if our ASR module can effectively distinguish the intended speech from the background noise.\nIn some cases the automatic segmentation of the utterances was incorrect (see discussion in Section 6.4); transcribers were asked to adjust the start and endpoints of the automatic segments to ensure that the human speech was included, and the robot speech excluded. However, as noted above, we asked transcribers to leave background noise at the start and end of the autogenerated segments, and only adjust the segment if the human speech had been missed, or if the robot speech had been erroneously included."}, {"heading": "6.2. Fluent and in-vocabulary speech", "text": "From the transcriptions we are able to readily classify utterances into fluent and disfluent utterances. Disfluent or mispronounced speech was marked with symbols to indicate mispronunciations and false starts. We marked all such utterances as disfluent, and all other utterances as fluent.\nWe further divide the fluent utterances into expected and unexpected utterances based on whether or not the utterance appears in the recognition vocabularies. Altogether there are only 24 phrases that are expected during the interaction (e.g. \u2018Hello Zeeno I am ready to start\u2019, \u2018Moved slowly for ten seconds\u2019 etc.) We also included the tag \u2018!SIL\u2019 as an expected utterance; this tag denotes non-speech/background noise. All other (fluent) utterances were marked as unexpected.\nIn total we had 4707 transcribed utterances. Of these 854 were marked as disfluent while 3853 were marked as fluent. Of the fluent utterances, 3351 were in the expected set, while 502 were not. The distribution of fluent and expected speech by age is shown for male children in Figure 7 and for female children in Figure 8."}, {"heading": "6.3. Accuracy of recognition during live experiments", "text": "In this section we evaluate the accuracy of the ASR module during the live experiments. For this purpose we focus on the fluent, expected utterances as described in the previous section.\nWe ran with ASR for 266 of the 320 participants, however there was a system crash for one participant leaving a test set of 265. For these 265 participants, we obtained a total of 3596 utterances. Of these we found 3087 to be fluent, while the remaining 509 to contain some disfluency. Of the fluent\nutterances we found 2770 to be expected (i.e. in-vocabulary) utterances. This set of 2770 provides the evaluation set for which we examine the live ASR performance; we would expect all these utterances to be correctly recognised by the ASR.\nTo evaluate the accuracy of the ASR we compared the logged output of the ASR against the manually transcribed gold standard. For each of the 2770 utterances we checked if the logs showed the utterance had been correctly recognised by the ASR. Since the manual transcription allowed for the start and end-times of segments to be altered slightly to fit the utterance, we allowed for this in the evaluation, checking segments in the logs which overlapped the gold-standard segments. In total we found that 2582 utterances were correctly identified, while 188 were not; giving a classification accuracy of 93.2%.\nThis result includes the utterances at the start of the interaction which are used for adaptation purposes (e.g. \u2018Testing A B C\u2019) for which the vocabulary is limited only to that utterance or to silent. This gives a slightly distorted picture since we would expect the recognition results for this set to be higher than for the multiple choice stage where the grammar allows for four options plus silence (although even for the adaptation stage there were occasionally errors where the phrases were not recognised correctly.)\nWe therefore give results excluding this initial set, and also excluding the phrase \u2018Zeeno Start the Quiz\u2019 which was also recognised with a single item grammar, leaving only the multiple choice phrases. This gives a total of 1771 utterances for consideration; of these 1616 were correctly identified, and 155 were not. The accuracy over the multiple choice stage is therefore 91.2%. The accuracy for age and gender classes is shown in Figure 9.\nThe above figures include only fluent, in-vocabulary speech. We also evaluated performance on speech with minor disfluencies. These were found by inspecting the transcriptions for utterances which contained more than 75% of the words of an accepted utterance (limiting only to multiple choice answers). This allowed for minor disfluencies or false starts. In total 184 utterances were found to fit this criteria, and were evaluated in the same way as before, with 136 found to be correctly identified, and 48 not, giving an accuracy of 73.9%. When these minor disfluent sentences were included with the fluent, in-vocabulary speech, the total was 1955 with 1752 identified correctly, and 203 not, giving an overall accuracy of 89.6%. This confirms that even with minor disfluencies the system gives good results."}, {"heading": "6.4. Segmentation errors", "text": "As described in Section 4.6, the ASR module received information from the robot when it was about to start speaking, and when it had finished\nspeaking. This information was provided by the Acapela speech synthesiser onboard the robot. In principle, these messages should have been enough to ensure that the ASR could switch off while the robot was speaking, and the re-activate as soon as it had finished. However this did not work as planned, since the end-of-speech message would often come late from the robot (usually the delay was about half a second). This would then result in the ASR being activated too late, meaning that the first part of the human speech utterance was missed.\nIn order to adjust for this problem, we applied a simple fix. On receipt of the end-of-robot-speech message, the ASR module would read back about half a second, to account for the expected delay. In many cases, this method worked well, providing the start of the human utterance on time, where it would otherwise have been missed. However in some cases the method did not work as intended. In some cases the module would read back too far (in which case the ASR module would receive the last part of the robot speech along with the utterance). In other cases it would not read back far enough; the delay of the end-of-speech was larger than half a second, so the human speech was still missed at the start.\nIf there was such a problem with the start point of the segmentation during the live interaction, it would affect the accuracy of the ASR in two ways. First, it would affect the recognition of that utterance itself, since it would either have missed the start of the utterance, or it would have included extra audio at the start from the robot speech. Secondly, it could also affect accuracy for subsequent utterances, since the ASR would run feature adaptations based on the recognised utterances. If the utterance had been badly segmented then the adaptation would be performed with the wrong input data, creating a malformed adaptation.\nThe endpoints of the automatic segments were also sometimes incorrect. This did not cause a problem during the live interactions, but does cause a problem for the offline analysis done afterwards. In some cases the endpoint occurs too early; this happens when the ASR has successfully recognised the utterance before the end of the utterance; it would then immediately mark this as an endpoint. In other cases the endpoint is late; this occurs where the ASR did not successfully recognise the utterance, resulting in the dialogue manager timing out, and the robot starting to speak.\nFrom the manual transcriptions, we were able to determine the frequency of each type of segmentation error. For each of the 2791 fluent, in-vocabulary utterances in the gold standard, we found the best matching utterance in the\nautomatic transcriptions. This was done using the following approach; first we tried to find an overlapping segment marked with the same utterance transcription as the gold standard; this was then marked as the best matching utterance. If this could not be found, then we instead looked for the overlapping segment with the minimum distance from the gold standard segment. Once each gold standard segmented utterance was matched to the corresponding segment in the automatic set, we were then able to compare to find segmentation errors. We classified these into early starts, late starts, early ends and late ends, shown in Table 4.\nThe most common segmentation error by far was the \u2018early start\u2019 error; this shows that the quick-fix method of reading back in the data was reading back too far, including snippets of the end of the robot speech. However there were still a number of \u2018late start\u2019 errors; this means that sometimes that end-of-speech was coming in so late that even the fix was not enough to account for it.\nThe \u2018early end\u2019 errors can be interpreted as a success for the ASR (provided the recognition was correct); the latency is so low, that the system is able to recognise the utterance before the person has finished uttering it. This low latency is very useful for robotic applications where fast dialogues may be required. The \u2018late end\u2019 conversely usually indicates a failure of the ASR to recognise the utterance."}, {"heading": "7. Conclusions and Further Work", "text": "In this article we presented our work on developing an ASR module for use in the EASEL project. Our module has been integrated into a multimodal system using a humanoid robot and vision sensing. Using this system we have developed the \u2018Healthy Living Interaction\u2019 which helps children learn about exercise and energy in an interactive way. This system has been successfully\ndeployed in a public museum setting, with 325 children participating in the interaction for research purposes. We have presented an initial analysis of the collected data in this article. We have measured the number of fluent and expected utterances obtained and how these have varied depending on gender and age. We have also evaluated the accuracy of the ASR module over these interactions, with results showing that over 90% of fluent, in-vocabulary utterances have been correctly recognised.\nIn future work, we plan to utilise this valuable data set for further improving our system. We will use the labelled data as training and test data for thorough evaluations. We will work on improving the segmentation method, using a more reliable approach that finds the end of robot speech from the audio signal itself, rather than relying on messages to be transmitted from the robot.\nWe would like to make the source code of the system publicly available, and we invite other researchers in related fields of robotics, speech and language processing and more to collaborate to further develop this system."}, {"heading": "Acknowledgements", "text": "This work is supported by the European Union Seventh Framework Programme (FP7-ICT-2013-10) under grant agreement no. 611971.\nWe would like to thank Theo Botsford and Jenny Harding for their help in developing the interaction setup and running the event at the museum, and also Jon Barker and Saeid Mokaram for their technical advice in developing the ASR."}], "references": [{"title": "Openfst: A general and efficient weighted finite-state transducer library. In: Implementation and Application of Automata", "author": ["C. Allauzen", "M. Riley", "J. Schalkwyk", "W. Skut", "M. Mohri"], "venue": null, "citeRegEx": "Allauzen et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Allauzen et al\\.", "year": 2007}, {"title": "Multimodal child-robot interaction: Building social bonds", "author": ["T. Belpaeme", "P.E. Baxter", "R. Read", "R. Wood", "H. Cuay\u00e1huitl", "B. Kiefer", "S. Racioppa", "I. Kruijff-Korbayov\u00e1", "G. Athanasopoulos", "V Enescu"], "venue": "Journal of Human-Robot Interaction", "citeRegEx": "Belpaeme et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Belpaeme et al\\.", "year": 2012}, {"title": "Joint-sequence models for grapheme-to-phoneme conversion", "author": ["M. Bisani", "H. Ney"], "venue": "Speech Communication", "citeRegEx": "Bisani and Ney,? \\Q2008\\E", "shortCiteRegEx": "Bisani and Ney", "year": 2008}, {"title": "The chime corpus: a resource and a challenge for computational hearing in multisource environments", "author": ["H. Christensen", "J. Barker", "N. Ma", "P.D. Green"], "venue": null, "citeRegEx": "Christensen et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Christensen et al\\.", "year": 2010}, {"title": "The relationship between age and frequency of disfluency in preschool children", "author": ["D.A. DeJoy", "H.H. Gregory"], "venue": "Journal of Fluency Disorders", "citeRegEx": "DeJoy and Gregory,? \\Q1985\\E", "shortCiteRegEx": "DeJoy and Gregory", "year": 1985}, {"title": "Comparing open-source speech recognition toolkits", "author": ["C. Gaida", "P. Lange", "R. Petrick", "P. Proba", "A. Malatawy", "D. SuendermannOeft"], "venue": "Tech. rep., Baden-Wuerttemberg Ministry of Science and Arts as part of the research project OASIS", "citeRegEx": "Gaida et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Gaida et al\\.", "year": 2014}, {"title": "Acoustic variability and automatic recognition of childrens speech", "author": ["M. Gerosa", "D. Giuliani", "F. Brugnara"], "venue": "Speech Communication", "citeRegEx": "Gerosa et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Gerosa et al\\.", "year": 2007}, {"title": "Iterative language model estimation: efficient data structure & algorithms", "author": ["Hsu", "B.-J", "J. Glass"], "venue": "Proceedings of Interspeech", "citeRegEx": "Hsu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hsu et al\\.", "year": 2008}, {"title": "Recent development of open-source speech recognition engine julius", "author": ["A. Lee", "T. Kawahara"], "venue": "Processing Association,", "citeRegEx": "Lee and Kawahara,? \\Q2009\\E", "shortCiteRegEx": "Lee and Kawahara", "year": 2009}, {"title": "Yarp: yet another robot platform", "author": ["G. Metta", "P. Fitzpatrick", "L. Natale"], "venue": "International Journal on Advanced Robotics Systems", "citeRegEx": "Metta et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Metta et al\\.", "year": 2006}, {"title": "4-month evaluation of a learner-controlled reading tutor that listens", "author": ["J. Mostow", "G. Aist", "C. Huang", "B. Junker", "R. Kennedy", "H. Lan", "D.T. Latimer", "R. O\u2019Connor", "R. Tassone", "B. Tobin", "A. Wierman"], "venue": "The Path of Speech Technologies in Computer Assisted Language Learning: From Research Toward Practice. Routledge,", "citeRegEx": "Mostow et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Mostow et al\\.", "year": 2008}, {"title": "Computer-guided oral reading versus independent practice: Comparison of sustained silent reading", "author": ["J. Mostow", "J. Nelson-Taylor", "J.E. Beck"], "venue": null, "citeRegEx": "Mostow et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mostow et al\\.", "year": 2013}, {"title": "The kaldi speech recognition toolkit", "author": ["D. Povey", "A. Ghoshal", "G. Boulianne", "L. Burget", "O. Glembek", "N. Goel", "M. Hannemann", "P. Motlicek", "Y. Qian", "P. Schwarz", "J. Silovsky", "G. Stemmer", "K. Vesely", "Dec."], "venue": "In: IEEE 2011 Workshop on Automatic Speech Recognition and Understanding. IEEE Signal Processing Society, iEEE Catalog No.: CFP11SRW-USB.", "citeRegEx": "Povey et al\\.,? 2011", "shortCiteRegEx": "Povey et al\\.", "year": 2011}, {"title": "Wsjcamo: a british english speech corpus for large vocabulary continuous speech recognition", "author": ["T. Robinson", "J. Fransen", "D. Pye", "J. Foote", "S. Renals"], "venue": "In: Acoustics, Speech, and Signal Processing,", "citeRegEx": "Robinson et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Robinson et al\\.", "year": 1995}, {"title": "The pf-star british english childrens speech", "author": ["M. Russell"], "venue": null, "citeRegEx": "Russell,? \\Q2006\\E", "shortCiteRegEx": "Russell", "year": 2006}, {"title": "Challenges for computer recognition of children2s speech. In: SLaTE", "author": ["M.J. Russell", "S. D\u2019Arcy"], "venue": null, "citeRegEx": "Russell and D.Arcy,? \\Q2007\\E", "shortCiteRegEx": "Russell and D.Arcy", "year": 2007}, {"title": "Voice controlled child-robot interactions - development of ASR and TTS systems for the Nao robot within the ALIZ-E project", "author": ["G. Sommavilla", "G. Paci", "F. Tesser", "P. Cosi", "July"], "venue": "In: 13th International Conference on Intelligent Autonomous Systems (AIS 2014). Padova, Italy.", "citeRegEx": "Sommavilla et al\\.,? 2014", "shortCiteRegEx": "Sommavilla et al\\.", "year": 2014}, {"title": "Using speech recognition technology to enhance literacy instruction for emerging readers", "author": ["S.M. Williams", "D. Nix", "P. Fairweather"], "venue": "Fourth International Conference of the Learning Sciences", "citeRegEx": "Williams et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Williams et al\\.", "year": 2000}], "referenceMentions": [{"referenceID": 17, "context": "ASR provides benefits in educational applications (Williams et al., 2000) including a more engaging and enjoyable experience for children.", "startOffset": 50, "endOffset": 73}, {"referenceID": 10, "context": "Additionally, such an interface provides improved learning outcomes (Mostow et al., 2008) compared to traditional computer interfaces such as keyboards and mice.", "startOffset": 68, "endOffset": 89}, {"referenceID": 15, "context": "These include the intrinsic difficulty of recognising child speech due to physiological differences in the vocal tract (Russell and D\u2019Arcy, 2007), clarity in pronunciation (especially for younger children), the higher intra-speaker and inter-speaker variability in children\u2019s speech (Gerosa et al.", "startOffset": 119, "endOffset": 145}, {"referenceID": 6, "context": "These include the intrinsic difficulty of recognising child speech due to physiological differences in the vocal tract (Russell and D\u2019Arcy, 2007), clarity in pronunciation (especially for younger children), the higher intra-speaker and inter-speaker variability in children\u2019s speech (Gerosa et al., 2007), and the higher rate of disfluencies when compared to adult speech (DeJoy and Gregory, 1985).", "startOffset": 283, "endOffset": 304}, {"referenceID": 4, "context": ", 2007), and the higher rate of disfluencies when compared to adult speech (DeJoy and Gregory, 1985).", "startOffset": 75, "endOffset": 100}, {"referenceID": 12, "context": "We used the Kaldi (Povey et al., 2011) open source toolkit to develop our ASR module.", "startOffset": 18, "endOffset": 38}, {"referenceID": 8, "context": "There are open-source toolkits available such as Julius (Lee and Kawahara, 2009) or HTK (Young et al.", "startOffset": 56, "endOffset": 80}, {"referenceID": 11, "context": "The main applications so far have been in reading tutors (Mostow et al., 2013) which are a very useful application but are relatively unchallenging for ASR since the text that is going to be uttered is largely known beforehand.", "startOffset": 57, "endOffset": 78}, {"referenceID": 1, "context": "Recently the ALIZ-E social robotics project (Belpaeme et al., 2012) showed promising ASR results in offline experiments (Sommavilla et al.", "startOffset": 44, "endOffset": 67}, {"referenceID": 16, "context": ", 2012) showed promising ASR results in offline experiments (Sommavilla et al., 2014) but this system was not deployed in live interactions.", "startOffset": 60, "endOffset": 85}, {"referenceID": 1, "context": "Recently the ALIZ-E social robotics project (Belpaeme et al., 2012) showed promising ASR results in offline experiments (Sommavilla et al., 2014) but this system was not deployed in live interactions. A major step forward in speech recognition technology has arisen through the emergence of the Kaldi toolkit. Table 1 shows results from Gaida et al. (2014) comparing Kaldi against other major ASR toolkits, with the performance of Kaldi with the DNN approach having a third of the error rate in comparison to the other software.", "startOffset": 45, "endOffset": 357}, {"referenceID": 5, "context": "Table 1: Comparison of ASR toolkits (Gaida et al., 2014), WER results for the WSJ speech corpus.", "startOffset": 36, "endOffset": 56}, {"referenceID": 13, "context": "The first is the British English version of the Wall Street Journal corpus created at the University of Cambridge (Robinson et al., 1995), which we henceforth refer to as the WSJCAM corpus.", "startOffset": 114, "endOffset": 137}, {"referenceID": 14, "context": "The second is the PF-star corpus of British English child speech (Russell, 2006), henceforth referred to as the PF corpus.", "startOffset": 65, "endOffset": 80}, {"referenceID": 3, "context": "For this purpose we used the CHiME corpus (Christensen et al., 2010) which contains various kinds of background noise recorded in real-life environments.", "startOffset": 42, "endOffset": 68}, {"referenceID": 0, "context": "Next we use OpenFST tools (Allauzen et al., 2007) to compile the FSM into a finite-state transducer (FST).", "startOffset": 26, "endOffset": 49}, {"referenceID": 2, "context": "robot names, such as Zeno) we use the Sequitur tool (Bisani and Ney, 2008)", "startOffset": 52, "endOffset": 74}, {"referenceID": 9, "context": "In order to integrate the ASR with the other modules in the EASEL system, we used the YARP middleware (Metta et al., 2006) which is used throughout the EASEL project and has been widely used in many European robotics projects.", "startOffset": 102, "endOffset": 122}], "year": 2016, "abstractText": "Automatic speech recognition (ASR) allows a natural and intuitive interface for robotic educational applications for children. However there are a number of challenges to overcome to allow such an interface to operate robustly in realistic settings, including the intrinsic difficulties of recognising child speech and high levels of background noise often present in classrooms. As part of the EU EASEL project we have provided several contributions to address these challenges, implementing our own ASR module for use in robotics applications. We used the latest deep neural network algorithms which provide a leap in performance over the traditional GMM approach, and apply data augmentation methods to improve robustness to noise and speaker variation. We provide a close integration between the ASR module and the rest of the dialogue system, allowing the ASR to receive in real-time the language models relevant to the current section of the dialogue, greatly improving the accuracy. We integrated our ASR module into an interactive, multimodal system using a small humanoid robot to help children learn about exercise and energy. The system was installed at a public museum event as part of a research study where 320 children (aged 3 to 14) interacted with the robot, with our ASR achieving 90% accuracy for fluent and near-fluent speech.", "creator": "LaTeX with hyperref package"}}}