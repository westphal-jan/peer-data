{"id": "1701.04292", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2017", "title": "Semantic classifier approach to document classification", "abstract": "In this paper, we propose a new method for classifying documents that bridges the discrepancies (the so-called semantic gap) between the training set and the use examples for text data. We demonstrate their superiority over classical text classification approaches, including traditional classification ensembles. The method consists of combining a technique for classifying documents with a single classifier or classification ensemble (SEMCOM algorithm - Committee with Semantic Categorizer).", "histories": [["v1", "Mon, 16 Jan 2017 14:02:19 GMT  (82kb,D)", "http://arxiv.org/abs/1701.04292v1", null]], "reviews": [], "SUBJECTS": "cs.IR cs.CL", "authors": ["piotr borkowski", "krzysztof ciesielski", "mieczys{\\l}aw a k{\\l}opotek"], "accepted": false, "id": "1701.04292"}, "pdf": {"name": "1701.04292.pdf", "metadata": {"source": "CRF", "title": "Semantic classifier approach to document classification", "authors": ["Piotr Borkowski", "Krzysztof Ciesielski", "Mieczys\u0142aw A. K\u0142opotek"], "emails": ["klopotek@ipipan.waw.pl"], "sections": [{"heading": "1 Introduction", "text": "The text document classification methods are well-established in the area of text mining. Predominantly they have been derived from corresponding data mining techniques that were designed to handle long input data records. Let us mention here for example Naive Bayes, Balanced Winnow and LLDA (to be described later). While these methods are quite successful in data mining and were appreciated within text mining community, one important drawback occurs related to the specific area of text mining. While in data mining the meaning and the value range of individual attributes of an object are relatively well defined, in text mining it is not the case any more. Same content may be expressed in different ways, using different words (via synonyms, list of hyponyms) while the same word can express different things in different contexts. This would not be a big obstacle if not the fact that traditional techniques would require significantly larger bodies of training data, which makes an unbalanced sample much more likely. Not only because of the size of the data sample but also the heterogeneity of the data sources that need to be combined. It is even worse when the trained classifiers need to be applied to unseen data which stems from a dataset that from the human point of view touches the same topic but from the computer point of view is written in a completely different style. This gives rise to so-called semantic gap, that is though the training and application data sets are semantically similar, their syntactical and bag-of-words view differ. In such a case understanding the semantics of documents would be needed, which is unavailable for traditional data mining techniques.\nIn this paper we propose two new document classification methods, SemCla (Semantic Classifier) and SemCom (Committee with Semantic Categorizer), bridging the semantic gap between the training set and the application sets of textual data. The methods consist in combining an unsupervised document categorization technique with a\nar X\niv :1\n70 1.\n04 29\n2v 1\n[ cs\n.I R\n] 1\n6 Ja\nn 20\nsingle classifier or a classifier ensemble. Via this component the traditional notion of document similarity (based on angles between vectors in term space) is amended to include the concept of semantic similarity. The notion of semantic similarity, as used in this paper, was described in [1]. Both methods introduced in the paper are based on our SemCat (Semantic Categorizer) algorithm, that has also been introduced in [1].\nIn Section 2 we define the problem of document categorization and semantic classification and recall the work done on the subject by other researchers. In Section 3 we describe our categorization methodology, SemCat. Subsequently we show in Section 4, how our categorization method can be used in various ways in the classical task of classification.\nIn Section 5 we explain the setup of experiments we performed to show the usefulness of SemCla algorithm in classification tasks. In subsequent Section 6 showing the results of these experiments, we demonstrate superiority of the semantic classification methods (SemCom and SemCla) over classical text classification approaches, including traditional classifier ensembles for text classification tasks (Section 6.1) as well as in cases when the so-called semantic gap occurs (Section 6.2).\nSection 7 summarizes achieved results and outlines future research directions."}, {"heading": "1.1 Our contribution", "text": "Our contribution in this paper is:\n\u2013 constructing new supervised classifier based on unsupervised semantic document categorizator, \u2013 demonstrating feasibility of the new classifier for bridging semantic gap between test and training set of data, \u2013 designing a heterogeneous committee that combines classical classifiers and the semantic classifier."}, {"heading": "2 Previous work", "text": "The task of categorization is to assign one or more labels (categories) to a document, or a group of documents (cluster labeling). It finds multiple practical applications, especially for assisting in text retrieval task: in web page classification, e-mail and memo organization, expanding queries with new terms, expanding / improving ontologies, and many other.\nThe categorization task can be viewed formally as a special case of classification [2,3], but with a couple of differences. First of all, the number of categories significantly exceeds the number of classes in typical classification task. Categories may be flat and disjoint, but they may form a tree or even a hierarchy (acyclic graph). And more than one category may be assigned to a single document. Therefore typical classification methods do not fit well to the task of categorization. Diverse other methods have been proposed to attack the problem of categorization. Some of them are based on clustering. The most popular representatives of this brand of approaches are Nonnegative Matrix Factorization (NMF), Latent Semantic Analysis (LSA), Probabilistic LSA (PLSA),\nand Finite Mixture of Multidimensional Bernoulli Distributions, described in [4]. Other researchers map the document contents to some semantic resources, in particular to Wikipedia (W). This approach was exploited in WikipediaMiner Project1, developed at the University of Waikato in Hamilton, New Zeeland [5,6,7]. It uses W topics as categories. Basic idea was key phrase indexing. For terms from W their \u201ckeyphraseness\u201d [8] that is share of occurrences in W links is computed. Then these terms are searched in a document to be categorized. Terms with multiple meanings are disambiguated (via some trained classifier) by choosing the meaning most close to the document topic. For training purposes documents annotated with such keyphrases have to be assigned categories. Then a classifier is trained.\nIn this paper we exploit our new unsupervised categorization method, SemCat, introduced in [1]. Contrary to WikipediaMiner, no classifiers are used, hence no training corpora need to be prepared. Also it is not based on W links. Instead the category graph of W is exploited. A novelty here is also the usage of more challenging Polish language [9]. Furthermore, we develop a classification method SemCla suitable to apply for data with semantic gap.\nThe problem of \u201csemantic gap\u201d is understood in literature in many ways. We focus on the aspect encountered in text retrieval where data come for different domains. The next paragraphs give a brief overview of the approaches that have been proposed.\nThe article [10] shows a review of cross-domain text categorization problem. Unlike the classical case, the training and the test data originates from different distributions or domains. This is very common in practical tasks because (especially for Polish language) we often do not have a suitable data set of labeled documents. Often what we have is a corpus which is topically related, but presents the same (or semantically similar) information in a different way, e.g. using different vocabulary. Many algorithms have been developed or adapted for cross-domain text classification, there are conventional algorithms: Rocchio\u2019s Algorithm, Decision Trees like: CART, ID3, C4.5; Naive Bayes classifier, KNN, Support Vector Machines; and some novel cross-domain classification algorithms: Expectation-Maximization Algorithm, Probabilistic Latent Semantic Analysis (PLSA), Latent Dirichlet Allocation(LDA), CFC Algorithm, Co-cluster based Classification Algorithm [11].\nPaper [12] gives a general overview of the problem of semantic gap in information retrieval. Authors focus on two separate task: text and multimedia mining/image retrieval. Semantic gap in text retrieval is defined as a usage of different words (synonyms, hypernyms, hyponyms) to describe the same object. In the part about text retrieval authors concentrate on reorganizing search results by using post-retrieval clustering system. They work on search results (\u201csnippets\u201d) and enhance them by adding so called topics. Topic is a set of words (they have similar meaning) that was as outcome of Probabilistic-Latent Semantic analysis or Latent Dirichlet Allocation on some external data collection. After adding a topic to the snippet they carry out clustering or labeling.\nIn the paper [13] authors propose a way to improve categorization by adding semantic knowledge from Wikitology (knowledge repository based on Wikipedia). They used various text representation and text enrichment techniques and used Support Vector Machine-SVM to learn a model of classification.\n1 http://wikipedia-miner.sourceforge.net/"}, {"heading": "3 Our taxonomy-based semantic categorization method", "text": "Our taxonomy-based categorization method SemCat was described in detail in [1], so below we present only its brief description."}, {"heading": "3.1 Outline of the algorithm", "text": "Suppose we have a taxonomy of categories (a directed acyclic graph with one root category) like Wikipedia (W) category graph or Medical Subject Headings (MeSH) ontology2. We assume there is a set of concepts connected with the taxonomy, in the following way: every concept is linked to one or more categories. Every category and concept is tagged with a string label. Strings connected with categories are used as an outcome presented to a user. And those attached to concepts are used for mapping a text of document into the set of concepts.\nFor the experimental design we used W category graph with the concept set of W pages. Tags for W categories were their original string names. Set of string tags connected with a single W page consists of: lemmatized page name and all names of disambiguation pages that link to that page.\nIn the process of document categorization we remove stop words and very rare / frequent words, lemmatize, find phrases and calculate normalized t f id f weights for terms and phrases. Calculation of a standard term frequency inverse document frequency is based on word frequencies from the collection of all W pages.\nThen we map document\u2019s terms and phrases into a set of concepts. In the case of homonyms, we disambiguate the concept assignment: we select the concept that is the nearest by similarity measure defined by Equations (1) and (2) (see Section 3.2) to the set of concepts that was mapped in an unambiguous way. We investigated other methods of disambiguating e.g taking all meanings of ambiguous terms and weigh them accordingly. The results for various disambiguation methods are described in Section 5.4.\nWhen every term in the document is assigned to a proper concept (W page), then all concepts are mapped to W categories. In this way usually one term maps to more than one category, so we transfer the weight associated to that term proportionally to all its categories. Sum of weights assigned to the categories equals to sum of t f id f for terms. The outcome of that procedure is a ranked list of categories with weights. In the last step we can transform the weighted ranking and / or choose top-N categories out of it."}, {"heading": "3.2 Similarity measures", "text": "We use semantic measures for matching concepts (W pages) and objects of the taxonomy (W categories). We were inspired by the paper [14]. The semantic measures are based on: the unary function IC (Information Content) and binary function MSCA (Most Specific Common Abstraction). Their inputs are categories from a taxonomy.\n2 https://www.nlm.nih.gov/mesh/\nThough superficially similar, our IC definition differs essentially from that proposed for WordNet. WordNet computes the IC for concepts based on the number of subordinated concepts. We compute the IC for categories, based on the count of concepts that belong to subordinated categories. So the IC of a category is weighted by the frequency of its usage in the language rather than by its definitional complexity.\nFor a given category k we define IC(k) = 1\u2212 log(1+ sk)/log(1+N), where sk is the number of taxonomy concepts in the category k and all its subcategories, and N is the total number of taxonomy concepts. The main category has the lowest value of IC = 0.\nFor two given categories k1 and k2 we define MSCA(k1,k2) as the category k\u2217 \u2208 CA(k1,k2) (the set of super-categories for both categories k1 and k2) that maximize a value of the function {IC(k) : k \u2208CA(k1,k2)}. The properties of IC()\u0307 measure ensure that the category chosen is most specific amongst the common super-categories.\nIn the literature dealing with Wordnet many measures based on IC and MSCA have been proposed [14], including LIN and PIRRO-SECO similarity:\nsimLin(k1,k2) = 2 \u00b7MSCA(k1,k2) IC(k1)+ IC(k2)\n(1)\nsimPirroSeco(k1,k2) = 1 3\n( 3 \u00b7MSCA(k1,k2)\u2212 IC(k1)\u2212 IC(k2)+2 ) (2)\nThough analogous measures were defined for WordNet, our category similarity measures differ from those for WordNet because we defined IC and MSCA differently than in Wordnet. Our definition is based on Wikipedia structure, hence we do not need to refer to WordNet. We used the above measure for categories to define a similarity measures for concepts (W pages). Similarity between pages pi and p j is computed by aggregation of the similarity between each pair of categories (ki,k j) such that pi belongs to the category ki and p j to k j:\nsimPAGE(pi, p j) = max{simCAT(ki,k j) : pi \u2208 ki\u2227 p j \u2208 k j} (3)"}, {"heading": "4 Application to classification task", "text": "In order to demonstrate the value of semantic categorization, we exploited it as an ingredient (to a classifier ensemble) in the classical classification algorithms and their committees, SemCom, as well as an stand-alone classifier SemCla.\nIn this section we recall commonly known classification algorithms we used in our experiments. These were Naive Bayes, Balanced Winnow, Labeled LDA, as well as the committees of classifiers (bagging type ensembles) built upon Naive Bayes classifier and Balanced Winnow. We describe also our own semantic categorization based classifier SemCla and our heterogeneous committee SemCom (containing both proprietary SemCat method and above-listed supervised classification methods)."}, {"heading": "4.1 Naive Bayes", "text": "Naive Bayes classification method (cf. [15]) on the basis of knowledge derived from training data set, creates a probabilistic model assigning one of the predefined classes (i.e. labels) to a new observation (i.e document). In this approach, each document is treated as a bag of words, which does not take into account the order (syntax). Additionally, a simplifying assumption is made, that the individual words in the document are independent. The probability of a given class c being assigned to a document d is calculated as follows:\nP(c|d) = P(c)\u220fw\u2208d P(w|c) nwd\nP(d) ,\nwhere nwd is the total number of occurrences of word w in the document, a P(w|c) is the probability of occurrence of a word w in the class c. P(c) is the probability of the class c which is estimated based on the fraction of documents that belongs to this class. The value of P(d) does not depend on the class, thus it is ignored for the purpose of document classification. Finally, P(w|c) = 1+\u2211d\u2208Dc nwdk+\u2211w\u2032 \u2211d\u2208Dc nw\u2032d , , where Dc is the set of all documents in the class c, and the number of k is the size of the dictionary (i.e. the number of distinct words)."}, {"heading": "4.2 Balanced Winnow", "text": "Balanced Winnow algorithm details can be found in [16] and [17]. Several versions of this classifier can be found in the literature. Main concept is based on the Perceptron algorithm (cf. [18]). For our purpose Balanced Winnow version of the algorithm was selected because of its high observed efficacy. For each word, algorithm stores two weights: w+ and w\u2212, on the basis of which algorithm calculates document membership to each class (binary classification). Positive weights are in favor of a given class, negative weights against it. The difference between the weights (w+\u2212w\u2212) is the overall weight associated with a given word. Assume that the classified document is a vector of words with the weights x = (x1, . . . ,xn). Then the classification rule is based on the inequality \u2211ni=1(w+\u2212w\u2212)xi > \u03b8 , for a fixed value of the parameter \u03b8 . Training of the classifier is based on weights modification, but only if the training document has been misclassified. Two parameters are introduced: promotion level \u03b1 > 1 and degradation level 0 < \u03b2 < 1. If the error is to classify the document to the class to which it does not belong (negative document), then the weights of the words are modified as follows: w+ := \u03b2w+,w\u2212 := \u03b1w\u2212. If an error is made on a positive document (by not classifying it to the positive class), weight modification is as follows: w+ := \u03b1w+,w\u2212 := \u03b2w\u2212."}, {"heading": "4.3 Labeled LDA", "text": "Labeled Latent Dirichlet Allocation (LLDA) is an extension of the popular \u2013 among practitioners and theorists \u2013 Latent Dirichlet Allocation model described in [19]. It is one of many probabilistic topic models useful in analyzing text documents. In particular the review of this subject can be found in [20].\nLDA is an unsupervised method, where any document is treated as a probabilistic mixture of various topics. Resulting generative model is characterized by the discrete probability distribution of words within a given topic. The model assumes the following way to generate each document. The length N of the document is selected (the Poisson distribution is used). Then the proportion of subjects making up the document is fixed (Dirichlet distribution randomizing the set of K topics). Subsequent words in the document are generated by the random selection of the topic (with a multinomial distribution generated above), and then within this topic (determining the distribution of words), a particular word is generated. Assuming such a method of generating each document in a given collection, LDA is trying to recreate a set of topics that are generating the observed collection. Labeled LDA method is a supervised variant, which relates every document label to a fixed subset of topics. LLDA algorithm is very similar to its unsupervised prototype, with the exception that the document topics are selected only from among those that correspond to the observed document labels \u2013 details can be found in [21]. There are other supervised variants of the LDA algorithm, such as Supervised LDA ([22]). Authors selected LLDA in favor of Supervised LDA since in our experimental settings LLDA gave significantly better results. As part of future work it is planned to use also semi-supervised methods such as Partially Labeled Dirichlet Allocation (cf. [23])."}, {"heading": "4.4 Semantic classification", "text": "Below we present a description of a new semantic classifier which we call SemCla. It is based on a category representation of a document produced by SemCat (see Section 3.1), which is used in combination with semantic measures (see Section 3.2).\nOutline of the algorithm Recall that SemCat uses words and phrases from the document to produce a list of categories with weights. This representation of a document can be considered as a vector of weights for all category from W category structure. Therefore we call it vector of categories. We use it to calculate cosine product. We found out that the algorithm performs better when for each category from the vector of categories we add a super category of it (according to W hierarchy) with weight equal the initial weight multiplied by a constant \u03b1 (we used the value \u03b1 = 0.33, we explain below how we calibrated this parameter). Thus we obtain the extended category vector. This process is visualized in Figure 1.\nThe semantic classification is made in the way described below and illustrated in Figure 2.\n1. documents from training and test sets are categorized to obtain category vectors that represent their content,\n2. category vectors for all documents are changed into extended category vectors (for constant \u03b1),\n3. we classify a new document (represented by its extended category vector) by finding the nearest group (in the sense of the cosine product) in the training set.\nIn the literature, a group to be compared with is represented by its centroid. Although the method with centroids works faster, it gives poorer results. Therefore results presented in Tables 1 \u2013 4 are for SemCla algorithms that find the nearest group using all documents from the group and taking average similarity.\nFinding optimal \u03b1 parameter Value of optimal \u03b1 was found in a separate experiment before the experiment discussed in the paper. It was conducted for SemCat algorithm. We took 4 groups of documents from kopalniawiedzy.pl: astronomy-physics, psychology, medicine, technology and drew at random N = 100 documents from each of it. We did not use all document groups from this corpus, we chose 4 groups that were most different from each other. All documents were categorized with various values of \u03b1 ranging from 0.0 to 0.5 (bigger \u03b1 resulted in a significant deterioration of the outcomes). Then we calculated semantic similarity between categorized document (with different \u03b1), sorted them and ranked. We chose the value of parameter \u03b1 that maximizes difference between means of rank of documents from the same groups and those\nbelonging to different groups. In other words, we found the value that separates best these groups of documents."}, {"heading": "4.5 Ensemble of classifiers", "text": "The experimental setting was also based on the ensemble of classifiers. For each document the classification process is carried out by every classifier in the ensemble (it may also be a classifier of the same type, but trained on a different learning sample). Then the results of all classifiers are aggregated as the final ensemble classifier. In the existing implementation this can be done in three ways: (a) each classifier has one vote \u2013 category with the highest number of votes is selected; (b) votes counting additionally takes into account the weights of classification results (this option requires that all classifiers are of the same type); (c) ranks of the elements returned by the classifier are aggregated instead of raw votes or weights. In the case when two (or more) categories received exactly the same number of votes, the result is selected at random from among the winning categories."}, {"heading": "4.6 Heterogeneous committee of classifier with categorization method", "text": "In our new approach, we developed heterogeneous committee of classifiers SemCom that contains the supervised methods of Naive Bayes, Balanced Winnow, LLDA and our proprietary unsupervised categorization method SemCat utilizing taxonomy of W categories. Categorization method is unsupervised, and thus it cannot be trained on different samples in a similar manner to supervised classifiers (categorization method utilizes data from the complete W taxonomy). For this reason the committee contained only one instance of the categorization algorithm. In order to increase the impact of SemCat on the final results of the committee as a whole, categorization votes were counted with the higher weight. In addition, one should take into account that the categorization algorithm returns a ranking of categories (not only a single category). Thus, in the experimental settings we included a variant of the committee in which categorization method add more than one category with the highest rank in the list (and the correspondingly decreasing weights)."}, {"heading": "4.7 Remarks on denotation of classifier and ensemble parameters and composition", "text": "Experimental setting exploited several variants of the ensembles, trained on a different subsets from the training set (W pages for Table 1, 2 and groups of news for Tables 3, 4).\nFor the classical classification task (Table 1 and 2) from all W pages belonging to a single category [S = 50,100,200] pages were drawn at random and on the basis of such a sample, a single classifier was trained. For a given set of classes, into which documents are to be classified, we choose W categories that represent these classes. We\nwill call them W class categories. When we choose W documents for training, we can choose either documents that have W categories identical with the W class categories or their sub-categories. We say that we choose level 1 (L = 1) documents, if for each document at least one of its categories is identical with class category. If we choose L = 2 documents, then we choose additionally also documents that have categories being direct subcategories of the class category. Vector of numbers following the SemCat represents weights attached to top-3 categories inserted into committee. We chose them among all categories produced by SemCat algorithm (e.g SemCat:(7,5,3) means that we put top three categories from semantic categorizer with weights 7,5 and 3). For the semantic gap task we used S = 50 for Table 3 and S = 200 for Table 4. Experimental committees consisted of 25 classifiers based on Naive Bayes and Balanced Winnow methods. Aggregation variant was the one in which each classifier is voting on one category only. More information on ensemble methods can be found in [24]."}, {"heading": "5 Experimental setup", "text": ""}, {"heading": "5.1 Performed experiments", "text": "We performed two types of experiments, their results are reported in Tables 1 \u2013 4. The first experiment aimed at demonstrating that adding a semantic categorizer to a committee of traditional classifiers improves the classification correctness in classic classification task (Table 1, 2). The second experiment was designed to show that a semantic categorizer is capable of bridging semantic gap between the training data and the test data (Table 3, 4)."}, {"heading": "5.2 Benchmark data sets", "text": "For experimental purpose we used two different benchmark data sets. We needed different datasets because of various nature of the investigated problems.\nBenchmark used for classification comparison. The benchmark data set was based on Polish subdirectory of DMOZ taxonomy / Open Directory Project http://www.dmoz.org. It contains 1063 text files of Polish web pages just with html tags removed. Selected documents belong to 15 directories that map into W categories. They are: astronomy, biology, economics, philosophy, physics, graphics, history, linguistics, mathematics, education, politics, law, religious studies, sociology, technology. None of these categories is a subcategory of another one in the W taxonomy. We omitted a few cases of multi-labeled documents. For the benchmark documents the reader is referred to the benchmark web page3. The various options of categorization setting cause the number of categorized document differs. For calculating the results we choose a set of documents that was categorized by every algorithm.\nBenchmark containing data with semantic gap.\n3 http://www.ipipan.waw.pl/~kciesiel/iis/DMOZ_PL_taxonomy.zip\nThe second benchmark was made of documents downloaded from various news page. It consists of training and evaluation part, they come from various domains. We used separate collections to achieve different wordings in each of them. The training set consists of news from the popular science portal kopalniawiedzy.pl merged with documents from one directory from forsal.pl \u2013 the domain about finance and economy. Below we show more detailed description of the training set.\n\u2013 documents from kopalniawiedzy.pl: astronomy-physics N=283; medicine N=2979; life science N=3122; technology N=4861; psychology N=1733; humanities N=244, \u2013 documents from forsal.pl from the directory Gie\u0142da (Stock exchange) N=1987.\nFor evaluation we downloaded directories from www.rynekzdrowia.pl (containing medical news) and merged it with economical documents from www.forsal.pl and www.bankier.pl (market, finances, business). Datasets used for evaluation:\n\u2013 directories from www.rynekzdrowia.pl: Ginekologia (Gynecology) N=1034; Kardiologia (Cardiology) N=239; Onkologia (Oncology) N=1195, \u2013 directories from www.forsal.pl: Waluty (Currencies) N=2161; Finanse (Finances) N=1991, \u2013 documents from www.bankier.pl N=978."}, {"heading": "5.3 Efficiency measures", "text": "To assess the efficiency of the studied algorithms we use two different measures. The first one is commonly used standard precision measure, the second one is modified precision based on similarity measure Lin (Equation (1) in Section 3.2). The difference is in using Lin measure instead of indicator function. For documents d1, ...,dn with real categories categ(di) and its prediction pred(di) the Lin precision is defined as: 1n \u2211 n i=1 Lin(categ(di), pred(di)). The motivation for using the latter measure is that standard precision does not take into account the dependence between categories. In case when we make a wrong prediction we would like to know how much predicted category is different from the real one."}, {"heading": "5.4 Classical classification task", "text": "The first part of experimental work concerned comparison of various methods of text classification. We proceeded on documents from DMOZ corpus with fixed set of labels described in Section 5.2. Documents were divided into separate groups based on their text length measured by the number of characters (C): short (1000\u2264C < 2000), medium (2000 \u2264C < 10,000), long (10,000 \u2264C). Files shorter than 1000 characters were not processed. Results for various classification methods are presented in Tables 1, 2. They were divided by a file size and efficiency measure. Methods based on categorization algorithm return a list of weighted W categories. Therefore we transformed the outcome categories into the target set of 15 categories and took only one category with the highest weight. Categorization was based on a selection of 10 words (only nouns) / phrases with highest t f id f from the document. The experiments were performed for different values of parameters, but other settings gave worse results.\nIn Table 1 first four rows present various modifications of categorization method. The difference between them is in the method of disambiguation of ambiguous page. The first row presents standard disambiguation method (see Section 3). The next two methods find a set of pages that map unambiguously. Then for every ambiguous page we find all of its mappings to potential meanings. Then we figure out their distances to the set and sort them into descending order. Subsequent possible meanings are given various weights depending on their rank i: (1/2i, 1/i or uniformly). All of these options gave similar means, so we used paired t-test to compare them. As a reference we used basic disambiguation method. Methods with weighting 1/2i and 1/i do not differ significantly. Method with uniform weights differs.\nAll of these methods took only nouns from the document. We developed two options of mapping words into titles of W page. We remove (or not) from the set of possible page those of them that do not match in an exact way. The option \u201cexact matching\u201d worked slightly better (although not significantly), so we present it. Then we present individual classifiers followed by the ensembles of classifiers. Subsequent results are for heterogeneous committee."}, {"heading": "5.5 Classification for data with the semantic gap", "text": "The second experiment focuses on the problem of semantic gap which is observed in classification of data from different domains. For such data often two documents express the same concepts, but as they use different wording (because of existing of synonyms, hypernyms, hyponyms), the conventional classification / clustering algorithms, based on standard bag-of-words approach, do not work well. Such classifiers often do not recognize different linguistic representations for test and training set. Some works relating to the problem were presented in Section 2. Our approach, thoroughly presented above, is different from them. There are other linguistic phenomena such as ellipsis, paraphrase and other. We focus on synonyms, hypernyms, hyponyms because of Wikipedia structure on which our algorithm is based. We deal with hyper-/hyponyms relation because of W category graph structure we operate on. This graph is built on these kinds of relations. With synonym relation we cope during the phase of mapping words/phrases from the text into W pages. The string set attached to a single W page contains the page title and all it\u2019s synonyms. They are extracted from all names of disambiguation pages that point to this particular page. For experimental design (see Table 3) we used standard classification methods in different settings. As an input for them we used: 1. terms \u2013 terms from the document; 2. categories \u2013 categories for a given document produced by SemCat; 3. concepts \u2013 set of disambiguated concepts (W page id) produced during SemCat algorithm. In Table 4 we present SemCla, ensembles and the heterogeneous committee with semantic classifier."}, {"heading": "6 Results", "text": ""}, {"heading": "6.1 Classical task", "text": "As can be seen in Tables 1 the best method among the considered SemCat algorithms is the one where upon mapping of terms/phrases to W pages the ranking of pages corresponding to a term is computed and all of them are taken into account using appropriate weights. The version using only unambiguous terms and phrases has the poorest performance. Modifications of the base method (variants of fitting, shifting the stage of category projection) do not lead to significant changes in performance.\nThough SemCla outperforms individual non-semantic classifiers, one can see that a classical classifier ensemble is able to outperform SemCla.\nTherefore we turned to considering the impact of inclusion of SemCat into an ensemble of classical classifiers.\nThe size of the ensemble (25x Balanced Winnow + 25x Bayes) guarantees the stability of the results under various selections of the random training samples.\nExperimental settings included: various levels of W category graph used to create training samples [Level=1,2,\u221e] as well as various sample sizes per category [S = 50,100,200]. Optimal results (presented in Tables 1, 2) were achieved for Level=2 and S = 200. In particular, Level=\u221e led to noticeably worse performance, since W documents selected in the random sample were vaguely related to the desired topic (category).\nOn the other hand, in every investigated case, results for the Level=1 were worse than for Level=2, since the randomization of the sample for each instance of the classifier was too low (the number of the W documents on level 1 was not sufficient to make a sample).\nEnsemble of classical classifiers was extended with SemCat (Table 2) using various weights for 1st, 2nd & 3rd category in the SemCat ranking. This setting required further investigation, but usually weights 14/10/6 led to the best classification results. Higher weights caused worse results. Extended ensemble 25x Balanced Winnow + 25x Bayes + SemCat with Level=2, S = 200 and weights 14/10/6 usually was the optimal setting (with an exception for shortest documents).\nFurther extension of the ensemble with LLDA classifier did not improve the results, both in the case of base ensemble (25x Balanced Winnow + 25x Bayes) and the semantic ensemble that included SemCat algorithm.\nPresented experiments lead to the following conclusions: the best results were achieved for ensembles that beside standard classification methods (25xBayes + 25xBalanced Winnow) a semantic method was included (either SemCat or SemCla algorithm). Surprisingly, adding more varied set of standard classification methods (Naive Bayes, Winnow and LLDA) did not improve quality of the ensemble.\nEnsemble of 25xSemCla classifiers in most cases does not perform significantly better than a single SemCla. It is mainly due to low variance of the individual voting methods within the ensemble."}, {"heading": "6.2 Semantic gap problem", "text": "As visible in Tables 3, 4 in case of the semantic gap problem, semantic methods and committees lead to much better results than traditional classifiers, even if the latter are operating on the modified representation (bag of categories instead of bag of words).\nIt can be seen that the usage of terms alone gives poor results when semantic gap occurs. Classical methods are most helped if categories are provided for the training purposes, but the usage of concepts is only half the way as good. This means actually that our SemCla algorithm uses a much deeper insight into the document content than just a category label assignment.\nIt is also worth to stress the fact that however SemCla (contrary to SemCat) is supervised, it can also be used in unsupervised version. For such a setting, instead of using unobservable document labels as training classes (cf. Figure 2), one can use document clusters, where clustering is also based on the semantic categorization (SemCat algo-\nrithm) and applies semantic similarity measures defined in Section 3.2. We are going to investigate this direction more deeply in the future, since it has a big advantage in cases where document labels are unavailable and training set cannot be created (e.g. collections of web pages)."}, {"heading": "7 Conclusions", "text": "In this paper we demonstrated the value of semantic approach to the task of document classification. In particular we show here that an unsupervised approach to the classification is possible when using semantic approach. This may be considered as an interesting result by itself. Acknowledgedly, the semantic classifier we introduce does not perform as well as ensembles of traditional classifiers but apparently an inclusion of a semantic categorizer into such an ensemble is capable of significant improvement of its performance in classic classification tasks.\nIntuitively, one would imagine that a classifier incorporating semantic information should be superior to traditional classifiers that do not use such information. As we see from our experiments it is not that obvious. Though semantic classifier proved to be a competitor for individual classic classifiers, ensembles of classic classifiers can beat it. Therefore, exploitation of advantages of semantic information requires some level of sophistication and cannot be considered as obvious.\nWhat is still more important, the semantic classifier turns out to be superior to classical approaches to classification in case of semantic gap between the training data and the data for which the classifier is to be applied. This fact opens up really new horizons for application of machine learning methods in classification of documents in cases e.g. of mergers between various corporations where the local culture leads usually to development of specific languages different between the firms.\nThis research opens up a number of further interesting areas of research. Semantic approach (in its base, unsupervised setting) could be tested also for clustering tasks under semantic gap scenario as well as to mixtures of classification and clustering."}], "references": [{"title": "Wikipediabased document categorization", "author": ["K. Ciesielski", "P. Borkowski", "M.A. Klopotek", "K. Trojanowski", "K. Wysocki"], "venue": "Security and Intelligent Information Systems, SIIS 2011, Warsaw, Poland, June 13-14, 2011.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Machine learning in automated text categorization", "author": ["F. Sebastiani"], "venue": "ACM Comput. Surv. 34(1)", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Text categorization", "author": ["F. Sebastiani"], "venue": "Text Mining and its Applications to Intelligence, CRM and Knowledge Management, WIT Press", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2005}, {"title": "A simple algorithm for topic identification in 0-1 data", "author": ["J.K. Sepp\u00e4nen", "E. Bingham", "H. Mannila"], "venue": "In Lavrac, N., Gamberger, D., Blockeel, H., Todorovski, L., eds.: PKDD. Volume 2838 of Lecture Notes in Computer Science., Springer", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2003}, {"title": "Topic indexing with wikipedia", "author": ["O. Medelyan", "I.H. Witten", "D. Milne"], "venue": "Proceedings of the first AAAI Workshop on Wikipedia and Artificial Intelligence (WIKIAI\u201908).", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "An effective, low-cost measure of semantic relatedness obtained from wikipedia links", "author": ["D. Milne", "I.H. Witten"], "venue": "Proceedings of the first AAAI Workshop on Wikipedia and Artificial Intelligence (WIKIAI\u201908).", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Learning to link with wikipedia", "author": ["D.N. Milne", "I.H. Witten"], "venue": "Proceedings of the 17th ACM Conference on Information and Knowledge Management, CIKM 2008, Napa Valley, CA, USA, October 26-30, 2008, ACM", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Wikify!: linking documents to encyclopedic knowledge", "author": ["R. Mihalcea", "A. Csomai"], "venue": "Proceedings of the Sixteenth ACM Conference on Information and Knowledge Management, CIKM 2007, Lisbon, Portugal, November 6-10, 2007, ACM", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "Debora: Dependency-based method for extracting entityrelationship triples from open-domain texts in polish", "author": ["A. Wroblewska", "M. Sydow"], "venue": "In Chen, L., Felfernig, A., Liu, J., Ras, Z., eds.: Foundations of Intelligent Systems. Volume 7661 of Lecture Notes in Computer Science. Springer Berlin Heidelberg", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2012}, {"title": "A survey of crossdomain text categorization techniques", "author": ["M. Ramakrishna Murty", "J. Murthy", "P. Prasad Reddy", "S. Satapathy"], "venue": "Recent Advances in Information Technology (RAIT), 2012 1st International Conference on, IEEE", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Using wikipedia for co-clustering based cross-domain text classification", "author": ["P. Wang", "C. Domeniconi", "J. Hu"], "venue": "Data Mining, 2008. ICDM\u201908. Eighth IEEE International Conference on, IEEE", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2008}, {"title": "Bridging semantic gaps in information retrieval: Context-based approaches", "author": ["C.T. Nguyen"], "venue": "ACM VLDB 10", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Content-based text categorization using wikitology", "author": ["M. Rafi", "S. Hassan", "M.S. Shaikh"], "venue": "CoRR abs/1208.3623", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Design, implementation and evaluation of a new semantic similarity metric combining features and intrinsic information content", "author": ["G. Pirr\u00f2", "N. Seco"], "venue": "On the Move to Meaningful Internet Systems. Volume 5332 of LNCS., Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2008}, {"title": "Text categorisation: A survey", "author": ["K. Aas", "L. Eikvil"], "venue": "Report No. 941", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1999}, {"title": "General convergence results for linear discriminant updates", "author": ["A.J. Grove", "N. Littlestone", "D. Schuurmans"], "venue": "Mach. Learn. 43(3)", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2001}, {"title": "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm", "author": ["N. Littlestone"], "venue": "Machine Learning 2", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1988}, {"title": "The perceptron: A perceiving and recognizing automaton", "author": ["F. Rosenblatt"], "venue": "Technical Report 85-460-1, Ithaca, New York", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1957}, {"title": "Latent dirichlet allocation", "author": ["D.M. Blei", "A.Y. Ng", "M.I. Jordan"], "venue": "J. Mach. Learn. Res. 3", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2003}, {"title": "Probabilistic topic models", "author": ["M. Steyvers", "T. Griffiths"], "venue": "In Landauer, T., Mcnamara, D., Dennis, S., Kintsch, W., eds.: Latent Semantic Analysis: A Road to Meaning. Laurence Erlbaum", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2006}, {"title": "Labeled lda: a supervised topic model for credit attribution in multi-labeled corpora", "author": ["D. Ramage", "D. Hall", "R. Nallapati", "C.D. Manning"], "venue": "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 1 - Volume 1. EMNLP \u201909, Stroudsburg, PA, USA, Association for Computational Linguistics", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "Supervised topic models", "author": ["D.M. Blei", "J.D. McAuliffe"], "venue": "NIPS.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "Partially labeled topic models for interpretable text mining", "author": ["D. Ramage", "C.D. Manning", "S. Dumais"], "venue": "Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining. KDD \u201911, New York, NY, USA, ACM", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2011}, {"title": "The Elements of Statistical Learning", "author": ["T. Hastie", "R. Tibshirani", "J.H. Friedman"], "venue": "Springer", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "The notion of semantic similarity, as used in this paper, was described in [1].", "startOffset": 75, "endOffset": 78}, {"referenceID": 0, "context": "Both methods introduced in the paper are based on our SemCat (Semantic Categorizer) algorithm, that has also been introduced in [1].", "startOffset": 128, "endOffset": 131}, {"referenceID": 1, "context": "The categorization task can be viewed formally as a special case of classification [2,3], but with a couple of differences.", "startOffset": 83, "endOffset": 88}, {"referenceID": 2, "context": "The categorization task can be viewed formally as a special case of classification [2,3], but with a couple of differences.", "startOffset": 83, "endOffset": 88}, {"referenceID": 3, "context": "and Finite Mixture of Multidimensional Bernoulli Distributions, described in [4].", "startOffset": 77, "endOffset": 80}, {"referenceID": 4, "context": "This approach was exploited in WikipediaMiner Project1, developed at the University of Waikato in Hamilton, New Zeeland [5,6,7].", "startOffset": 120, "endOffset": 127}, {"referenceID": 5, "context": "This approach was exploited in WikipediaMiner Project1, developed at the University of Waikato in Hamilton, New Zeeland [5,6,7].", "startOffset": 120, "endOffset": 127}, {"referenceID": 6, "context": "This approach was exploited in WikipediaMiner Project1, developed at the University of Waikato in Hamilton, New Zeeland [5,6,7].", "startOffset": 120, "endOffset": 127}, {"referenceID": 7, "context": "For terms from W their \u201ckeyphraseness\u201d [8] that is share of occurrences in W links is computed.", "startOffset": 39, "endOffset": 42}, {"referenceID": 0, "context": "In this paper we exploit our new unsupervised categorization method, SemCat, introduced in [1].", "startOffset": 91, "endOffset": 94}, {"referenceID": 8, "context": "A novelty here is also the usage of more challenging Polish language [9].", "startOffset": 69, "endOffset": 72}, {"referenceID": 9, "context": "The article [10] shows a review of cross-domain text categorization problem.", "startOffset": 12, "endOffset": 16}, {"referenceID": 10, "context": "5; Naive Bayes classifier, KNN, Support Vector Machines; and some novel cross-domain classification algorithms: Expectation-Maximization Algorithm, Probabilistic Latent Semantic Analysis (PLSA), Latent Dirichlet Allocation(LDA), CFC Algorithm, Co-cluster based Classification Algorithm [11].", "startOffset": 286, "endOffset": 290}, {"referenceID": 11, "context": "Paper [12] gives a general overview of the problem of semantic gap in information retrieval.", "startOffset": 6, "endOffset": 10}, {"referenceID": 12, "context": "In the paper [13] authors propose a way to improve categorization by adding semantic knowledge from Wikitology (knowledge repository based on Wikipedia).", "startOffset": 13, "endOffset": 17}, {"referenceID": 0, "context": "Our taxonomy-based categorization method SemCat was described in detail in [1], so below we present only its brief description.", "startOffset": 75, "endOffset": 78}, {"referenceID": 13, "context": "We were inspired by the paper [14].", "startOffset": 30, "endOffset": 34}, {"referenceID": 13, "context": "In the literature dealing with Wordnet many measures based on IC and MSCA have been proposed [14], including LIN and PIRRO-SECO similarity:", "startOffset": 93, "endOffset": 97}, {"referenceID": 14, "context": "[15]) on the basis of knowledge derived from training data set, creates a probabilistic model assigning one of the predefined classes (i.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "Balanced Winnow algorithm details can be found in [16] and [17].", "startOffset": 50, "endOffset": 54}, {"referenceID": 16, "context": "Balanced Winnow algorithm details can be found in [16] and [17].", "startOffset": 59, "endOffset": 63}, {"referenceID": 17, "context": "[18]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "Labeled Latent Dirichlet Allocation (LLDA) is an extension of the popular \u2013 among practitioners and theorists \u2013 Latent Dirichlet Allocation model described in [19].", "startOffset": 159, "endOffset": 163}, {"referenceID": 19, "context": "In particular the review of this subject can be found in [20].", "startOffset": 57, "endOffset": 61}, {"referenceID": 20, "context": "LLDA algorithm is very similar to its unsupervised prototype, with the exception that the document topics are selected only from among those that correspond to the observed document labels \u2013 details can be found in [21].", "startOffset": 215, "endOffset": 219}, {"referenceID": 21, "context": "There are other supervised variants of the LDA algorithm, such as Supervised LDA ([22]).", "startOffset": 82, "endOffset": 86}, {"referenceID": 22, "context": "[23]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "More information on ensemble methods can be found in [24].", "startOffset": 53, "endOffset": 57}], "year": 2017, "abstractText": "In this paper we propose a new document classification method, bridging discrepancies (so-called semantic gap) between the training set and the application sets of textual data. We demonstrate its superiority over classical text classification approaches, including traditional classifier ensembles. The method consists in combining a document categorization technique with a single classifier or a classifier ensemble (SemCom algorithm Committee with Semantic Categorizer).", "creator": "LaTeX with hyperref package"}}}