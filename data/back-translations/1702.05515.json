{"id": "1702.05515", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Feb-2017", "title": "Overview: Generalizations of Multi-Agent Path Finding to Real-World Scenarios", "abstract": "Multi-Agent Pathfinding (MAPF) is well researched in the fields of artificial intelligence, robotics, theoretical informatics, and business research. We discuss problems that arise when MAPF methods are generalized to real-world scenarios, and four lines of research that deal with them. We emphasize the importance of addressing these problems rather than developing faster methods for the standard formulation of the MAPF problem.", "histories": [["v1", "Fri, 17 Feb 2017 20:39:38 GMT  (547kb,D)", "http://arxiv.org/abs/1702.05515v1", "In IJCAI-16 Workshop on Multi-Agent Path Finding"]], "COMMENTS": "In IJCAI-16 Workshop on Multi-Agent Path Finding", "reviews": [], "SUBJECTS": "cs.AI cs.MA cs.RO", "authors": ["hang ma", "sven koenig", "nora ayanian", "liron cohen", "wolfgang hoenig", "t k satish kumar", "tansel uras", "hong xu", "craig tovey", "guni sharon"], "accepted": false, "id": "1702.05515"}, "pdf": {"name": "1702.05515.pdf", "metadata": {"source": "CRF", "title": "Overview: Generalizations of Multi-Agent Path Finding to Real-World Scenarios", "authors": ["Hang Ma", "Sven Koenig", "Nora Ayanian", "Liron Cohen", "Wolfgang H\u00f6nig", "T. K. Satish Kumar", "Tansel Uras", "Hong Xu", "Craig Tovey"], "emails": ["hangma@usc.edu,", "skoenig@usc.edu,", "ayanian@usc.edu,", "lironcoh@usc.edu,", "whoenig@usc.edu,", "turas@usc.edu,", "hongx@usc.edu,", "tkskwork@gmail.com", "ctovey@isye.gatech.edu", "gunisharon@gmail.com"], "sections": [{"heading": "1 Introduction", "text": "Multi-agent path finding (MAPF) has been well-studied by researchers from artificial intelligence, robotics, theoretical computer science and operations research. The task of (standard) MAPF is to find the paths for multiple agents in a given graph from their current vertices to their targets without colliding with other agents, while at the same time optimizing a cost function. Existing MAPF methods use, for example, reductions to problems from satisfiability, integer linear programming or answer set programming [Yu and LaValle, 2013b; Erdem et al., 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].\nWe have recently studied various issues that arise when generalizing MAPF to real-world scenarios, including Kiva (Amazon Robotics) warehouse systems [Wurman et al., 2008] (Figure 1) and autonomous aircraft towing vehicles [Morris et al., 2016]. These issues can be categorized into two general concerns: 1. Developing faster methods for the standard formulation of the MAPF problem is insufficient because, in many real-world scenarios, new structure can be exploited or new problem formulations are required. 2. Studying MAPF or its new formulations only as\ncombinatorial optimization problems is insufficient because the resulting MAPF solutions also need to be executed. We discuss four research directions that address both concerns from different perspectives:\n1. In many real-world multi-agent systems, agents are partitioned into teams, targets are given to teams, and each agent in a team needs to get assigned a target from the team, before one finds paths for all agents. We have formulated the combined target assignment and path finding (TAPF) problem for teams of agents to address this issue. We have also developed an optimal TAPF method that scales to dozens of teams and hundreds of agents [Ma and Koenig, 2016].\n2. In many real-world multi-agent systems, agents are anonymous (exchangeable), but their payloads are non-anonymous (non-exchangeable) and need to be delivered to given targets. The agents can often exchange their payloads in such systems. We have formulated the package-exchange robot routing (PERR) problem as a first attempt to tackle more general transportation problems where payload transfers are allowed [Ma et al., 2016]. In this context, we have also proved the hardness of approximating optimal MAPF solutions.\n3. In many real-world multi-agent systems, the consistency of agent motions and the resulting predictability of agent motions is important (especially in work spaces shared by humans and agents), which is not taken into account by existing MAPF methods. We have exploited the problem structure of given MAPF instances in two stages: In the first stage, we have developed a scheme for finding paths for the agents that include many edges from user-provided highways, which achieves consistency and predictability of agent motions [Cohen et al., 2015]. In the second stage, we have developed methods that automatically generate highways [Cohen et al., 2016].\n4. MAPF is mostly motivated by navigation or motion planning for multi-robot systems. However, the\nar X\niv :1\n70 2.\n05 51\n5v 1\n[ cs\n.A I]\n1 7\nFe b\n20 17\nAcknowledgments Building a working MVS requires a core set of great mechanical, electrical, and software engineers. It is yet another thing to turn it into a commercial product and manage the manufacture, assembly, and deployment of these systems. We thank the world-class Kiva employees who have breathed life into this vision. References Boutilier, C.; Shoham, Y.; and Wellman, M. P. 1997. Economic principles of multi-agent systems. Artificial Intelligence 94(1):1\u20136. Butenko, S.; Murphey, R.; and Pardos, P. M., eds. 2003. Cooperative Control: Models, Applications and Algorithms. Springer. Gilmour, K. 2003. Amazon warehouse, amazon adventure. Internet Magazine. Hazard, C. J.; Wurman, P. R.; and D\u2019Andrea, R. 2006. Alphabet soup: A testbed for studying resource allocation in multi-vehicle systems. In Proceedings of the 2006 AAAI Workshop on Auction Mechanisms for Robot Coordination, 23\u201330. Jennings, N. R., and Bussmann, S. 2003. Agent-based control systems: Why are they suited to engineering complex systems? IEEE Control Systems Magazine 61\u201373. Jennings, N. R. 1996. Coordination techniques for distributed artificial intelligence. In O\u2019Hare, G. M. P., and Jennings, N. R., eds., Foundations of Distributed Artificial Intelligence. Wiley. 187\u2013210.\nKonolige, K.; Fox, D.; Ortiz, C.; Agno, A.; Eriksen, M.;\nLimketkai, B.; Ko, J.; Morisset, B.; Schulz, D.; Stewart,\nB.; and Vincent, R. 2004. Centibots: Very large scale distributed robotic teams. In Proceedings of the International Symposium on Experimental Robotics. Lesser, V. R. 1999. Cooperative multiagent systems: A personal view of the state of the art. IEEE Transactions on Knowledge and Data Engineering 11(1):133\u2013142. Malone, T. W.; Fikes, R. E.; Grant, K. R.; and Howard, M. T. 1988. Enterprise: A market-like task scheduler for distributed computing environments. In Huberman, B. A., ed., The Ecology of Computation. North Holland. Rosenschein, J. S., and Zlotkin, G. 1994. Rules of Encounter. Cambridge: The MIT Press. Simmons, R.; Smith, T.; Dias, M. B.; Goldberg, D.; Hershberger, D.; Stentz, A.; and Zlot, R. 2002. A layered architecture for coordination of mobile robots. In Schultz, A., and Parker, L., eds., Multi-Robot Systems: From Swarms to Intelligent Automata. Kluwer. Wellman, M. P., and Wurman, P. R. 1998. Market-aware agents for a multiagent world. Robotics and Autonomous Systems 24:115\u201325.\n1759\nFigure 3: A small region of a Kiva layout. The green cells represent pod storage locations, the orange ovals the robots (with pods not pictured), and the purple and pink regions the queues around the inventory stations.\nFigure 2: A Kiva drive unit and storage pod.\nused to move the inventory pods with the correct bins from their storage locations to the inventory stations where a pick worker removes the desired products from the desired bin. Note that the pod has four faces, and the drive unit may need to rotate the pod in order to present the correct face. When a picker is done with a pod, the drive unit stores it in an empty storage location.\nEach station is equipped with a desktop computer that controls pick lights, barcode scanners, and laser pointers that are used to identify the pick and put locations. Because every product is scanned in and out of the system, overall picking errors go down, which potentially eliminates the need for post-picking quality control. In general, every station is capable of being either a picking station or a replenishment station. In practice, pick stations will be located near outbound conveyors, and replenishment stations will be located near pallet drop off points.\nThe power of the Kiva solution comes from the fact that it allows every worker to have random access to any inventory in the warehouse. Moreover, inventory can be retrieved in parallel. When the picker is filling several boxes at the same time, the parallel, random access ensures that she is not waiting on pods to arrive. In fact, by keeping a small queue of work at the station, the Kiva system delivers a new pod face every six seconds, which sets a baseline picking rate of 600 lines per hour.2 Peak rates can exceed 600 lines per hour when the operator can pick more than one item off a pod.3\nFor a large warehouse, the savings in personnel can be significant. Consider, for example, what a Kiva implementation of the book warehouse would involve. A busy bookseller may ship 100,000 boxes a day. With existing automation, this level of output would employ perhaps 75 workers\n2This statistic is based on single unit picks and has been reproduced for extended periods in the Kiva test facility.\n3This statistic was verified when a small Kiva demonstration system was brought to a drugstore distribution center where operators picked at nearly 700 lines per hour.\n1755\nFigur 1: Aut nomous drive units and storage pods that contain products and can be moved by the drive u its (left) and th la t of a typical Kiva warehouse system ( ight) [Wurma et l., 2008].\noptimality or bounded-suboptimality o MAPF solutio s does not necessarily entail their robustness, specially given the imperfect plan-execution capabilities of realworld robots. We have developed a framework that efficiently postprocesses the output of a MAPF method to create a plan-execution schedule that can be xecut d by real-world multi-robot systems [Ho\u0308nig et al., 2016].\nWe now showcase the practicality of th se re earch directions to demonstrate that, in order to generalize MAPF\nmethods to real-world scenarios, addressing b th concerns is\nas important, if not more, than developing faster methods for the standard formulation of the MAPF problem."}, {"heading": "2 Combined Target Assignment and Path Finding (TAPF) for Teams of Agents", "text": "Targets are often given to teams of agents. Each agent in a team needs to get assigned a target given to its team so that the paths of the agents from their current vertices to their target optimize a cost function. For example, in a Kiva warehouse system, the drive units that relocate storage pods from the inventory stations to the storage locations form a team because each of them needs to get assigned an available storage location. Previous MAPF methods assume that each agent is assigned a target in advance by some targetassignment procedure but, to achieve optimality, we have formulated TAPF, which couples the target-assignment and the path-finding problems and defines one common objective for both of them. In TAPF, the agents are partitioned into teams. Each team is given the same number of unique targets as there are agents in the team. The task of TAPF is to assign the targets to the agents and plan collision-free paths for the agents from their current vertices to their targets in a way such that each agent moves to exactly one target given to its team, all targets are visited and the makespan (the earliest time step when all agents have reached their targets and stop moving) is minimized. Any agent in a team can get assigned a target of the team, and the agents in the same team are thus exchangeable. However, agents in different teams are not exchangeable. TAPF can be viewed as a generalization of (standard) MAPF and an anonymous variant of MAPF:\n\u2022 (Standard) MAPF results from TAPF if every team consists of exactly one agent and the number of teams thus equals the number of agents. The assignments of targets to agents are pre-determined and the agents are thus non-anonymous (non-exchangeable).\n\u2022 The anonymous variant of MAPF (also called goalinvariant MAPF) results from TAPF if only one team exists (that consists of all agents). The agents can get assigned any target and are thus exchangeable. It can be solved optimally in polynomial time with flow-based MAPF methods [Yu and LaValle, 2013a; Turpin et al., 2014].\nThe state-of-the-art optimal TAPF method, called the Conflict-Based Min-Cost Flow [Ma and Koenig, 2016], combines search and flow-based MAPF methods. It generalizes to dozens of teams and hundreds of agents."}, {"heading": "3 Package-Exchange Robot Routing (PERR) and New Complexity Results for MAPF", "text": "Agents are often anonymous but carry payloads (packages) that are assigned targets and are thus non-anonymous. For example, in a Kiva warehouse system, the drive units are anonymous but the storage pods they carry are assigned storage locations and are thus non-anonymous. If each agent carries one package, the problem is equivalent to (standard) MAPF. In reality, the packages can often be tr nsferred among agents, which results in more general transportation problems, for example, ride-sharing with passenger transfers [Coltin and Veloso, 2014] and package delivery with robots in offices [Veloso et al., 2015]. We have formulated PERR as a first step toward understanding these problems [Ma et al., 2016]. In PERR, each agent carries one package, any two agents in adjacent vertices can exchange their packages, and each package needs to be delivered to a given target. PERR can thus be viewed as a modification of (standard) MAPF:\n\u2022 Packages in PERR can be viewed as agents in (standard) MAPF which move by themselves.\n\u2022 Two packages in adjacent vertices are allowed to exchange their vertices in PERR but two agents in adjacent vertices are not allowed to exchange their vertices in (standard) MAPF.\nK-PERR is a generalization of PERR where packages are partitioned into K types and packages of the same type are exchangeable. Since, in TAPF, agents are partitioned into teams and agents in the same team are exchangeable, K-PERR can be viewed as a modification of TAPF with K teams in the same sense that PERR can be viewed as a modification of (standard) MAPF. We have proved the hardness of approximating optimal PERR and K-PERR solutions (for K \u2265 2). One corollary of our study is that both MAPF and TAPF are NP-hard to approximate within any factor less than 4/3 for makespan minimization, even when there are only two teams for TAPF. We have also demonstrated that the addition of exchange operations to MAPF does not reduce its complexity theoretically but makes PERR easier to solve than MAPF experimentally. There is a continuum of problems that arise in different real-world scenarios: \u201cOne agent with many packages\u201d yields the classic rural postman problem; \u201cas many agents as packages\u201d yields MAPF, TAPF or PERR. Understanding both extremes helps\nInstance ECBS(1.5) ECBS(w1)+HWY(2.0) w1 = 1.1 w1 = 1.2 w1 = 1.5\nRuntime SolCost Runtime SolCost Runtime SolCost Runtime SolCost 1 272,440 10,258 103,600 9,625 223,159 10,588 2 267,807 10,530 191,211 9,660 183,379 9,736 260,522 10,603 3 204,533 10,041 4 179,214 9,892 268,431 10,577 5 253,564 10,246 209,197 9,619 146,298 9,880 294,717 10,396 6 210,227 9,494 261,957 10,272 7 206,498 9,476 136,049 9,834 8 291,254 9,449 83,679 9,590 277,931 10,313 9 261,067 10,310 118,998 9,865 239,336 10,639 10 201,038 10,085\nTable 3: Runtimes (in milliseconds) and solution costs for ECBS(1.5) and ECBS(w1)+HWY(2.0) for the example in Figure 4. Cells are empty if an algorithm did not terminate within a five-minute runtime limit.\nWe ran, for each w1 \u2208 {1.1, 1.2, 1.5, 2.0}, ECBS(w1)+HWY(2.0) on each of the 10 instances. The arrows in Figure 4 show the highway. Again, Table 3 shows the runtimes and solution costs. ECBS(2.0)+HWY(2.0) fails to find any solutions within the five-minute runtime limit and is thus omitted from the table, showing again that higher values of w1 are not necessarily beneficial. ECBS(w1)+HWY(w2) often has lower runtimes or solution costs or solves more instances than ECBS(w), which is encouraging despite being anecdotal.\nWe experimented with different highway layouts and parameters w1 and w2 for ECBS(w1)+HWY(w2) but no combination dominates all others. However, these parameters are clearly important factors for the performance of ECBS(w1)+HWY(w2): First, we ran, for each w2 \u2208 {1.2, 1.5, 2.0, 3.0}, ECBS(1.5)+HWY(w2) on each of the 10 instances of the example in Figure 4 after reducing the highway to the outer ring (that is, the top-most, right-most, bottom-most and left-most arrows). The level of encouragement for path finding to return paths that include the edges of the highways and thus the solution costs increase with w2 because the agents then tend to use the highway to circumnavigate the center rather than cut through it. Second, if the highways do not capture the problem structures well and thus do not help to reduce collisions among the paths, then ECBS(w1)+HWY(w2) not only does not improve over ECBS(w) but can have higher runtimes or solution costs or solve fewer instances.\nInstance ECBS(1.5)+HWY ring(w) w=1.2 w=1.5 w=2 w=3\nRunTime SolCost RunTime SolCost RunTime SolCost RunTime SolCost 1 253,923 10,653 177,171 11,059 276,075 11,354 2 197,154 11,067 258,463 11,098 240,897 11,707 3 244,781 10,856 175,048 11,161 271,442 11,414 4 241,583 11,631 172,725 11,319 5 265,795 11,239 186,265 11,152 200,102 11,363 6 266,169 10,840 294,468 11,308 247,199 11,133 7 8 252,721 10,595 251,333 11,150 9 202,411 11,447 294,624 11,245 10 269,460 11,115\nTable 4: Runtimes (in milliseconds) and solution costs for ECBS(1.5)+HWY(w2) for the example in Figure 4, where the highway consists of the outer ring only. Cells are empty if an algorithm did not terminate within a five-minute runtime limit.\nWe also ran CBS+HWY(w) but it fails to terminate within the five-minute runtime limit on all Kiva-like instances regardless of the highway layout. While the highways provide good guidance to move agents in the corridors, CBS+HWY(w) still has to find collision-free paths for\n150 agents inside Area1 and Area2. In those areas, CBS has less flexibility than ECBS(w) to avoid collisions by moving agents around other agents, which could explain why it fails to find solutions within the runtime limit.\nConclusions We presented a new bounded-suboptimal MAPF approach that takes advantage of additional inputs that represent a highway and a parameter w. It uses the highway to derive new w-admissible heuristic values that encourage path finding to return paths that include the edges of the highway. The level of encouragement increases with w. Our new bounded-suboptimal variants of CBS and ECBS(w), called CBS+HWY(w) and ECBS(w1)+HWY(w2), encourage a global behavior of the agents that avoids collisions. On the theoretical side, we developed a simple approach that uses highways for MAPF and provides suboptimality guarantees. On the experimental side, we demonstrated that ECBS(w1)+HWY(w2) can decrease the runtimes and solution costs of ECBS(w) in Kiva-like domains with many agents if the highway captures the problem structure well.\nIn future work, we plan to develop approaches that determine good highways automatically, investigate whether inflating the edge costs of the given graph (by increasing the costs of highway edges to w) in addition to inflating the heuristic values provides additional benefits, figure out whether penalizing movement costs against highway edges (similar to direction maps (Jansen and Sturtevant 2008)) helps to improve the performance of our MAPF approaches while continuing to provide suboptimality guarantees, extend ECBS(w1)+HWY(w2) to split the user-provided suboptimality bound w dynamically between w1 and w2 (similar to how ECBS(w) splits the suboptimality bound w dynamically between the high-level and low-level searches), and explore highways in the context of other MAPF algorithms, such as M* and inflated M*."}, {"heading": "Acknowledgments", "text": "We thank Maxim Likhachev and Michael Phillips for helpful discussions. We also thank Ariel Felner, Guni Sharon, and Maxim Barer for their CBS and ECBS(w) source code, which we used in our experiments. Our research was supported by NSF under grant numbers 1409987 and 1319966. The views and conclusions contained in this document are\nFigure 2: User-provided highways in a simulated Kiva warehouse system.\none to attack the middle, as required by many other real-world scenarios."}, {"heading": "4 Exploitation of Problem Structure and Predictability of Motions", "text": "Agents share their work spaces with humans, and the consistency of their motions and the resulting predictability of their motions are important for the safety of the humans, which existing MAPF methods do not take into account. This motivates us to exploit the problem structure of given MAPF instances and design a scheme that encourages agents to move along user-provided sets of edges (called highways) [Cohen et al., 2015]. We use highways in the context of a simple inflation scheme based on the ideas behind experience graphs [Phillips et al., 2012] to derive new heuristic values that encourage MAPF methods to return paths that include the edges of the highways, which avoids head-to-head collisions among agents and achieves consistency and predictability of their motions. For example, in a Kiva warehouse system, we can design high ays alo g the narrow passageways between the storage locations as shown by the arro s in Figure 2. We have demonstrat d in a simulated Kiva warehouse system that such hig ways accelerate MAPF methods significa tly w ile maintain\nde ired bounded-suboptimality of the MAPF solu on costs. The problem structure of TAPF and PERR instances can also b exploited with the same methods. We hav also developed methods that automatically generate highways that are competitive with user-provided nes in our feasibility study [Cohe et al., 2016]."}, {"heading": "5 Dealing with Imperfect Plan-Execution Capabilities", "text": "State-of-the-art MAPF or TAPF m thods can find collision free paths for hundreds of agents optimally or with user-provided sub-optimality guarantees in a reasonable amount of computation time. They perform well even in cluttered and tight environments, such as Kiva warehouse systems. However, agents often have imperfect planexecution capabilities and are not able to synchronize their motions perfectly, which can result in frequent and timeexpensive replanning. Therefore, we have proposed a framework that makes use of a simple temporal network to\npostprocess a MAPF solution efficiently to create a planexecution schedule that works for non-holonomic robots, takes their maximum translational and rotational velocities into account, provides a guaranteed safety distance between them and exploits slack (defined as the difference of the latest and earliest entry times of locations) to absorb imperfect plan executions and avoid time-intensive replanning in many cases [Ho\u0308nig et al., 2016]. This framework has been evaluated in simulation and on real robots. TAPF and PERR methods can also be applied in the same framework. Issues to be addressed in future work include adding user-provided safety distances, additional kinematic constraints, planning with uncertainty and replanning."}, {"heading": "6 Conclusions", "text": "We discussed four research directions that address issues that arise when generalizing MAPF methods to real-world scenarios and exploit either the problem structure or existing MAPF methods. Our goal was to point out interesting research directions for researchers working in the field of MAPF."}, {"heading": "7 Acknowledgments", "text": "The research at USC was supported by ARL under grant number W911NF-14-D-0005, ONR under grant numbers N00014-14-1-0734 and N00014-09-1-1031, NASA via Stinger Ghaffarian Technologies and NSF under grant numbers 1409987 and 1319966. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the sponsoring organizations, agencies or the U.S. government."}], "references": [{"title": "Suboptimal variants of the conflict-based search algorithm for the multi-agent pathfinding problem", "author": ["M. Barer", "G. Sharon", "R. Stern", "A. Felner"], "venue": "Annual Symposium on Combinatorial Search, pages 19\u2013 27", "citeRegEx": "Barer et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "ICBS: improved conflict-based search algorithm for multiagent pathfinding", "author": ["E. Boyarski", "A. Felner", "R. Stern", "G. Sharon", "D. Tolpin", "O. Betzalel", "S.E. Shimony"], "venue": "International Joint Conference on Artificial Intelligence, pages 740\u2013746", "citeRegEx": "Boyarski et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Feasibility study: Using highways for bounded-suboptimal multi-agent path finding", "author": ["L. Cohen", "T. Uras", "S. Koenig"], "venue": "Annual Symposium on Combinatorial Search, pages 2\u20138", "citeRegEx": "Cohen et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Improved bounded-suboptimal multi-agent path finding solvers", "author": ["L. Cohen", "T. Uras", "T.K.S. Kumar", "H. Xu", "N. Ayanian", "S. Koenig"], "venue": "International Joint Conference on Artificial Intelligence", "citeRegEx": "Cohen et al.. 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "Scheduling for transfers in pickup and delivery problems with very large neighborhood search", "author": ["B. Coltin", "M. Veloso"], "venue": "AAAI Conference on Artificial Intelligence, pages 2250\u20132256", "citeRegEx": "Coltin and Veloso. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "Push and rotate: Cooperative multiagent path planning", "author": ["B. de Wilde", "A.W. ter Mors", "C. Witteveen"], "venue": "International Conference on Autonomous Agents and Multi-agent Systems, pages 87\u2013 94,", "citeRegEx": "de Wilde et al.. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "A general formal framework for pathfinding problems with multiple agents", "author": ["E. Erdem", "D.G. Kisa", "U. Oztok", "P. Schueller"], "venue": "AAAI Conference on Artificial Intelligence, pages 290\u2013296", "citeRegEx": "Erdem et al.. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "Enhanced partial expansion A", "author": ["M. Goldenberg", "A. Felner", "R. Stern", "G. Sharon", "N.R. Sturtevant", "R.C. Holte", "J. Schaeffer"], "venue": "Journal of Artificial Intelligence Research, 50:141\u2013187", "citeRegEx": "Goldenberg et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "Multi-agent path finding with kinematic constraints", "author": ["W. H\u00f6nig", "T.K.S. Kumar", "L. Cohen", "H. Ma", "H. Xu", "N. Ayanian", "S. Koenig"], "venue": "International Conference on Automated Planning and Scheduling, pages 477\u2013485", "citeRegEx": "H\u00f6nig et al.. 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "Push and swap: Fast cooperative path-finding with completeness guarantees", "author": ["R. Luna", "K.E. Bekris"], "venue": "International Joint Conference on Artificial Intelligence, pages 294\u2013300", "citeRegEx": "Luna and Bekris. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimal target assignment and path finding for teams of agents", "author": ["H. Ma", "S. Koenig"], "venue": "International Conference on Autonomous Agents and Multiagent Systems, pages 1144\u20131152", "citeRegEx": "Ma and Koenig. 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "Multi-agent path finding with payload transfers and the package-exchange robot-routing problem", "author": ["H. Ma", "C. Tovey", "G. Sharon", "T.K.S. Kumar", "S. Koenig"], "venue": "AAAI Conference on Artificial Intelligence, pages 3166\u20133173", "citeRegEx": "Ma et al.. 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "Planning", "author": ["R. Morris", "C. Pasareanu", "K. Luckow", "W. Malik", "H. Ma", "S. Kumar", "S. Koenig"], "venue": "scheduling and monitoring for airport surface operations. In AAAI-16 Workshop on Planning for Hybrid Systems", "citeRegEx": "Morris et al.. 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "E-graphs: Bootstrapping planning with experience graphs", "author": ["M. Phillips", "B.J. Cohen", "S. Chitta", "M. Likhachev"], "venue": "Robotics: Science and Systems", "citeRegEx": "Phillips et al.. 2012", "shortCiteRegEx": null, "year": 2012}, {"title": "Exploiting subgraph structure in multi-robot path planning", "author": ["M. Ryan"], "venue": "Journal of Artificial Intelligence Research, 31:497\u2013542", "citeRegEx": "Ryan. 2008", "shortCiteRegEx": null, "year": 2008}, {"title": "The increasing cost tree search for optimal multi-agent pathfinding", "author": ["G. Sharon", "R. Stern", "M. Goldenberg", "A. Felner"], "venue": "Artificial Intelligence, 195:470\u2013 495", "citeRegEx": "Sharon et al.. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "Conflict-based search for optimal multiagent pathfinding", "author": ["G. Sharon", "R. Stern", "A. Felner", "N.R. Sturtevant"], "venue": "Artificial Intelligence, 219:40\u201366", "citeRegEx": "Sharon et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Cooperative pathfinding", "author": ["D. Silver"], "venue": "Artificial Intelligence and Interactive Digital Entertainment, pages 117\u2013122", "citeRegEx": "Silver. 2005", "shortCiteRegEx": null, "year": 2005}, {"title": "Complete algorithms for cooperative pathfinding problems", "author": ["T.S. Standley", "R.E. Korf"], "venue": "International Joint Conference on Artificial Intelligence, pages 668\u2013673", "citeRegEx": "Standley and Korf. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "Finding optimal solutions to cooperative pathfinding problems", "author": ["T.S. Standley"], "venue": "AAAI Conference on Artificial Intelligence, pages 173\u2013178", "citeRegEx": "Standley. 2010", "shortCiteRegEx": null, "year": 2010}, {"title": "Improving collaborative pathfinding using map abstraction", "author": ["N.R. Sturtevant", "M. Buro"], "venue": "Artificial Intelligence and Interactive Digital Entertainment, pages 80\u201385", "citeRegEx": "Sturtevant and Buro. 2006", "shortCiteRegEx": null, "year": 2006}, {"title": "Reduced time-expansion graphs and goal decomposition for solving cooperative path finding sub-optimally", "author": ["P. Surynek"], "venue": "International Joint Conference on Artificial Intelligence, pages 1916\u20131922", "citeRegEx": "Surynek. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Goal assignment and trajectory planning for large teams of interchangeable robots", "author": ["M. Turpin", "K. Mohta", "N. Michael", "V. Kumar"], "venue": "Autonomous Robots, 37(4):401\u2013415", "citeRegEx": "Turpin et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "CoBots: Robust Symbiotic Autonomous Mobile Service Robots", "author": ["M. Veloso", "J. Biswas", "B. Coltin", "S. Rosenthal"], "venue": "International Joint Conference on Artificial Intelligence, pages 4423\u20134429", "citeRegEx": "Veloso et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Subdimensional expansion for multirobot path planning", "author": ["G. Wagner", "H. Choset"], "venue": "Artificial Intelligence, 219:1\u201324", "citeRegEx": "Wagner and Choset. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Fast and memory-efficient multi-agent pathfinding", "author": ["K. Wang", "A. Botea"], "venue": "International Conference on Automated Planning and Scheduling, pages 380\u2013387", "citeRegEx": "Wang and Botea. 2008", "shortCiteRegEx": null, "year": 2008}, {"title": "MAPP: a scalable multi-agent path planning algorithm with tractability and completeness guarantees", "author": ["K. Wang", "A. Botea"], "venue": "Journal of Artificial Intelligence Research, 42:55\u201390", "citeRegEx": "Wang and Botea. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "R", "author": ["P.R. Wurman"], "venue": "D\u2019Andrea, and M. Mountz. Coordinating hundreds of cooperative, autonomous vehicles in warehouses. AI Magazine, 29(1):9\u201320", "citeRegEx": "Wurman et al.. 2008", "shortCiteRegEx": null, "year": 2008}, {"title": "Multiagent path planning and network flow", "author": ["J. Yu", "S.M. LaValle"], "venue": "E. Frazzoli, T. Lozano-Perez, N. Roy, and D. Rus, editors, Algorithmic Foundations of Robotics X, Springer Tracts in Advanced Robotics, volume 86, pages 157\u2013173. Springer", "citeRegEx": "Yu and LaValle. 2013a", "shortCiteRegEx": null, "year": 2013}, {"title": "Planning optimal paths for multiple robots on graphs", "author": ["J. Yu", "S.M. LaValle"], "venue": "IEEE International Conference on Robotics and Automation, pages 3612\u20133617", "citeRegEx": "Yu and LaValle. 2013b", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 29, "context": "Existing MAPF methods use, for example, reductions to problems from satisfiability, integer linear programming or answer set programming [Yu and LaValle, 2013b; Erdem et al., 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al.", "startOffset": 137, "endOffset": 195}, {"referenceID": 6, "context": "Existing MAPF methods use, for example, reductions to problems from satisfiability, integer linear programming or answer set programming [Yu and LaValle, 2013b; Erdem et al., 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al.", "startOffset": 137, "endOffset": 195}, {"referenceID": 21, "context": "Existing MAPF methods use, for example, reductions to problems from satisfiability, integer linear programming or answer set programming [Yu and LaValle, 2013b; Erdem et al., 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al.", "startOffset": 137, "endOffset": 195}, {"referenceID": 17, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 20, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 14, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 25, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 19, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 18, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 26, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 9, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 15, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 5, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 0, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 7, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 24, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 1, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 16, "context": ", 2013; Surynek, 2015] or optimal, bounded-suboptimal or suboptimal search methods [Silver, 2005; Sturtevant and Buro, 2006; Ryan, 2008; Wang and Botea, 2008; Standley, 2010; Standley and Korf, 2011; Wang and Botea, 2011; Luna and Bekris, 2011; Sharon et al., 2013; de Wilde et al., 2013; Barer et al., 2014; Goldenberg et al., 2014; Wagner and Choset, 2015; Boyarski et al., 2015; Sharon et al., 2015].", "startOffset": 83, "endOffset": 402}, {"referenceID": 27, "context": "We have recently studied various issues that arise when generalizing MAPF to real-world scenarios, including Kiva (Amazon Robotics) warehouse systems [Wurman et al., 2008] (Figure 1) and autonomous aircraft towing vehicles [Morris et al.", "startOffset": 150, "endOffset": 171}, {"referenceID": 12, "context": ", 2008] (Figure 1) and autonomous aircraft towing vehicles [Morris et al., 2016].", "startOffset": 59, "endOffset": 80}, {"referenceID": 10, "context": "We have also developed an optimal TAPF method that scales to dozens of teams and hundreds of agents [Ma and Koenig, 2016].", "startOffset": 100, "endOffset": 121}, {"referenceID": 11, "context": "We have formulated the package-exchange robot routing (PERR) problem as a first attempt to tackle more general transportation problems where payload transfers are allowed [Ma et al., 2016].", "startOffset": 171, "endOffset": 188}, {"referenceID": 2, "context": "We have exploited the problem structure of given MAPF instances in two stages: In the first stage, we have developed a scheme for finding paths for the agents that include many edges from user-provided highways, which achieves consistency and predictability of agent motions [Cohen et al., 2015].", "startOffset": 275, "endOffset": 295}, {"referenceID": 3, "context": "In the second stage, we have developed methods that automatically generate highways [Cohen et al., 2016].", "startOffset": 84, "endOffset": 104}, {"referenceID": 8, "context": "We have developed a framework that efficiently postprocesses the output of a MAPF method to create a plan-execution schedule that can be xecut d by real-world multi-robot systems [H\u00f6nig et al., 2016].", "startOffset": 179, "endOffset": 199}, {"referenceID": 28, "context": "It can be solved optimally in polynomial time with flow-based MAPF methods [Yu and LaValle, 2013a; Turpin et al., 2014].", "startOffset": 75, "endOffset": 119}, {"referenceID": 22, "context": "It can be solved optimally in polynomial time with flow-based MAPF methods [Yu and LaValle, 2013a; Turpin et al., 2014].", "startOffset": 75, "endOffset": 119}, {"referenceID": 10, "context": "The state-of-the-art optimal TAPF method, called the Conflict-Based Min-Cost Flow [Ma and Koenig, 2016], combines search and flow-based MAPF methods.", "startOffset": 82, "endOffset": 103}, {"referenceID": 4, "context": "In reality, the packages can often be tr nsferred among agents, which results in more general transportation problems, for example, ride-sharing with passenger transfers [Coltin and Veloso, 2014] and package delivery with robots in offices [Veloso et al.", "startOffset": 170, "endOffset": 195}, {"referenceID": 23, "context": "In reality, the packages can often be tr nsferred among agents, which results in more general transportation problems, for example, ride-sharing with passenger transfers [Coltin and Veloso, 2014] and package delivery with robots in offices [Veloso et al., 2015].", "startOffset": 240, "endOffset": 261}, {"referenceID": 11, "context": "We have formulated PERR as a first step toward understanding these problems [Ma et al., 2016].", "startOffset": 76, "endOffset": 93}, {"referenceID": 2, "context": "This motivates us to exploit the problem structure of given MAPF instances and design a scheme that encourages agents to move along user-provided sets of edges (called highways) [Cohen et al., 2015].", "startOffset": 178, "endOffset": 198}, {"referenceID": 13, "context": "We use highways in the context of a simple inflation scheme based on the ideas behind experience graphs [Phillips et al., 2012] to derive new heuristic values that encourage MAPF methods to return paths that include the edges of the highways, which avoids head-to-head collisions among agents and achieves consistency and predictability of their motions.", "startOffset": 104, "endOffset": 127}, {"referenceID": 8, "context": "Therefore, we have proposed a framework that makes use of a simple temporal network to postprocess a MAPF solution efficiently to create a planexecution schedule that works for non-holonomic robots, takes their maximum translational and rotational velocities into account, provides a guaranteed safety distance between them and exploits slack (defined as the difference of the latest and earliest entry times of locations) to absorb imperfect plan executions and avoid time-intensive replanning in many cases [H\u00f6nig et al., 2016].", "startOffset": 509, "endOffset": 529}], "year": 2017, "abstractText": "Multi-agent path finding (MAPF) is well-studied in artificial intelligence, robotics, theoretical computer science and operations research. We discuss issues that arise when generalizing MAPF methods to real-world scenarios and four research directions that address them. We emphasize the importance of addressing these issues as opposed to developing faster methods for the standard formulation of the MAPF problem.", "creator": "LaTeX with hyperref package"}}}