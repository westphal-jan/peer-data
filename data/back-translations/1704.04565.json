{"id": "1704.04565", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Apr-2017", "title": "Neural Paraphrase Identification of Questions with Noisy Pretraining", "abstract": "We present a solution to the problem of paraphrase identification of questions. We focus on an up-to-date dataset of question pairs with binary paraphrase labels and show that a variant of the decomposable attention model (Parikh et al., 2016) performs this task with precision while being much easier than many competing neural architectures. Furthermore, when pretrained on a noisy dataset of automatically collected question paraphrases, the model achieves the best performance on the dataset.", "histories": [["v1", "Sat, 15 Apr 2017 02:09:31 GMT  (35kb,D)", "https://arxiv.org/abs/1704.04565v1", null], ["v2", "Sun, 20 Aug 2017 02:41:42 GMT  (35kb,D)", "http://arxiv.org/abs/1704.04565v2", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["gaurav singh tomar", "thyago duque", "oscar t\\\"ackstr\\\"om", "jakob uszkoreit", "dipanjan das"], "accepted": false, "id": "1704.04565"}, "pdf": {"name": "1704.04565.pdf", "metadata": {"source": "CRF", "title": "Neural Paraphrase Identification of Questions with Noisy Pretraining", "authors": ["Gaurav Singh Tomar", "Thyago Duque", "Oscar T\u00e4ckstr\u00f6m", "Jakob Uszkoreit", "Dipanjan Das"], "emails": ["dipanjand}@google.com"], "sections": [{"heading": "1 Introduction", "text": "Question paraphrase identification is a widely useful NLP application. For example, in question-andanswer (QA) forums ubiquitous on the Web, there are vast numbers of duplicate questions. Identifying these duplicates and consolidating their answers increases the efficiency of such QA forums. Moreover, identifying questions with the same semantic content could help Web-scale question answering systems that are increasingly concentrating on retrieving focused answers to users\u2019 queries.\nHere, we focus on a recent dataset published by the QA website Quora.com containing over 400K annotated question pairs containing binary paraphrase labels.1 We believe that this dataset presents a great opportunity to the NLP research community and practitioners due to its scale and quality; it can result in systems that accurately identify duplicate questions, thus increasing the quality of many QA forums. We examine a simple model family, the decomposable attention model of Parikh et al. (2016), that has shown promise in modeling natural\n1See https://data.quora.com/First-Quora-Dataset-ReleaseQuestion-Pairs.\nlanguage inference and has inspired recent work on similar tasks (Chen et al., 2016; Kim et al., 2017).\nWe present two contributions. First, to mitigate data sparsity, we modify the input representation of the decomposable attention model to use sums of character n-gram embeddings instead of word embeddings. We show that this model trained on the Quora dataset produces comparable or better results with respect to several complex neural architectures, all using pretrained word embeddings. Second, to significantly improve our model performance, we pretrain all our model parameters on the noisy, automatically collected question-paraphrase corpus Paralex (Fader et al., 2013), followed by fine-tuning the parameters on the Quora dataset. This two-stage training procedure achieves the best result on the Quora dataset to date, and is also significantly better than learning only the character n-gram embeddings during the pretraining stage."}, {"heading": "2 Related Work", "text": "Paraphrase identification is a well-studied task in NLP (Das and Smith, 2009; Chang et al., 2010; He et al., 2015; Wang et al., 2016, inter alia). Here, we focus on an instance, that of finding questions with identical meaning. Lei et al. (2016) consider a related task leveraging the AskUbuntu corpus (dos Santos et al., 2015), but it contains two orders of magnitude less annotations, thus limiting the quality of any model. Most relevant to this work is that of Wang et al. (2017), who present the best results on the Quora dataset prior to this work. The bilateral multi-perspective matching model (BIMPM) of Wang et al. uses a character-based LSTM (Hochreiter and Schmidhuber, 1997) at its input representation layer, a layer of bi-LSTMs for computing context information, four different types of multi-perspective matching layers, an additional bi-LSTM aggregation layer, followed by a ar X iv :1\n70 4.\n04 56\n5v 2\n[ cs\n.C L\n] 2\n0 A\nug 2\n01 7\ntwo-layer feedforward network for prediction. In contrast, the decomposable attention model uses four simple feedforward networks to (self-)attend, compare and predict, leading to a more efficient architecture. BIMPM falls short of our best performing model pretrained on noisy paraphrase data and uses more parameters than our best model.\nCharacter-level modeling of text is a popular approach. While conceptually simple, character n-gram embeddings are a highly competitive representation (Huang et al., 2013; Wieting et al., 2016; Bojanowski et al., 2016). More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015). These representations are robust to out-of-vocabulary items, often producing improved results. Our pretraining procedure is reminiscent of several recent papers (Wieting et al., 2016, inter alia) who aim for general purpose character n-gram embeddings. In contrast, we pretrain all model parameters on automatic but in-domain paraphrase data. We employ the same neural architecture as our end task, similar to prior work on multi-task learning (S\u00f8gaard and Goldberg, 2016, inter alia), but use a simpler learning setup."}, {"heading": "3 Approach", "text": "Our starting point is the decomposable attention model (Parikh et al., 2016, DECATT henceforth), which despite its simplicity and efficiency has been shown to work remarkably well for the related task of natural language inference (Bowman et al., 2015). We extend this model with character n-gram embeddings and noisy pretraining for the task of question paraphrase identification."}, {"heading": "3.1 Problem Formulation", "text": "Let a = (a1, . . . , a`a) and b = (b1, . . . , b`b) be two input texts consisting of `a and `b tokens, respectively. We assume that each ai, bj \u2208 Rd is encoded in a vector of dimension d. A context window of size c is subsequently applied, such that the input to the model (a\u0304, b\u0304) consists of partly overlapping phrases a\u0304i = [ai\u2212c, . . . , ai, . . . , ai+c], b\u0304j = [bj\u2212c, . . . , bj , . . . , bj+c] \u2208 R2c+1\u00d7d. The model is estimated using training data in the form of labeled pairs {a(n),b(n),y(n)}Nn=1, where y(n) \u2208 {0, 1} is a binary label indicating whether a is a paraphrase of b or not. Our goal is to predict the correct label y given a pair of previously unseen texts (a,b)."}, {"heading": "3.2 The Decomposable Attention Model", "text": "The DECATT model divides the prediction into three steps: Attend, Compare and Aggregate. Due to lack of space, we only provide a brief outline below and refer to Parikh et al. (2016) for further details on each of these steps.\nAttend. First, the elements of a\u0304 and b\u0304 are aligned using a variant of neural attention (Bahdanau et al., 2015) to decompose the problem into the comparison of aligned phrases.\neij := F (a\u0304i) >F (b\u0304j) . (1)\nThe function F is a feedforward network. The aligned phrases are computed as follows:\n\u03b2i := `b\u2211 j=1 exp(eij)\u2211`b k=1 exp(eik) b\u0304j ,\n\u03b1j := `a\u2211 i=1 exp(eij)\u2211`a k=1 exp(ekj) a\u0304i . (2)\nHere \u03b2i is the subphrase in b\u0304 that is (softly) aligned to a\u0304i and vice versa for \u03b1j . Optionally, the inputs a\u0304 and b\u0304 to (1) can be replaced by input representations passed through a \u201cself-attention\u201d step to capture longer context. In this optional step, we modify the input representations using \u201cself-attention\u201d to encode compositional relationships between words within each sentence, as proposed by (Cheng et al., 2016). Similar to (1), we define\nfij := Fself (a\u0304i) >F \u2032self (a\u0304j) . (3)\nThe function Fself and F \u2032self are feedforward networks. The self-aligned phrases are then computed as follows:\na\u2032i := `a\u2211 j=1 exp(fij + di\u2212j)\u2211`a k=1 exp(fik + di\u2212k) aj . (4)\nwhere di\u2212j is a learned distance-sensitive bias term. Subsequent steps then use modified input representations defined as a\u0304i := [ai,a\u2032i] and b\u0304i := [bi,b \u2032 i].\nCompare. Second, we separately compare the aligned phrases {(a\u0304i, \u03b2i)}`ai=1 and {(b\u0304j , \u03b1j)} `b j=1 using a feedforward network G:\nv1,i := G([a\u0304i, \u03b2i]) \u2200i \u2208 \u30081, . . . , `a\u3009 , v2,j := G([b\u0304j , \u03b1j ]) \u2200j \u2208 \u30081, . . . , `b\u3009 . (5)\nwhere the brackets [\u00b7, \u00b7] denote concatenation.\nAggregate. Finally, the sets {v1,i}`ai=1 and {v2,j}`bj=1 are aggregated by summation. The sum of two sets is concatenated and passed through another feedforward network followed by a linear layer, to predict the label y\u0302.\n3.3 Character n-Gram Word Encodings\nParikh et al. assume that each token ai, bj \u2208 Rd is directly embedded in a vector of dimension d; in practice, they used pretrained word embeddings. Inspired by prior work mentioned in Section 2, we use an alternative approach and instead represent each token as a sum of its embedded character ngrams. This allows for more effective parameter sharing at a small additional computational cost. As observed in Section 4, this leads to better results compared to word embeddings."}, {"heading": "3.4 Noisy Pretraining", "text": "While character n-gram encodings help in effective parameter sharing, data sparsity remains an issue. Pretraining embeddings with a task-agnostic objective on large-scale corpora (Pennington et al., 2014) is a common remedy to this problem. However, such pretraining is limited in the following ways. First, it only applies to the input representation, leaving subsequent parts of the model to random initialization. Second, there may be a domain mismatch unless embeddings are pretrained on the same domain as the end task (e.g., questions). Finally, since the objective used for pretraining differs from that of the end task (e.g., paraphrase identification), the embeddings may be suboptimal.\nAs an alternative to task-agnostic pretraining of embeddings on a very large corpus, we propose to pretrain all parameters of the model on a modest-sized corpus of automatically gathered, and therefore noisy examples, drawn from a similar domain.2 As observed in Section 4, such noisy pretraining of the full model results in more accurate performance compared to using pretrained embeddings, as well as compared to only pretraining embeddings on the noisy in-domain corpus.3\n2Paralex is gathered from WikiAnswers, a QA forum. 3The Quora data is similar to the Paralex corpus and we exploit this by pretraining our entire model on the latter. It can be argued that not all sentence pair modeling tasks may benefit similarly from the Paralex corpus and a detailed empirical study is warranted to investigate that; in this work, we restrict our scope to only the question paraphrase identification task, a very useful NLP application by itself."}, {"heading": "4 Experiments", "text": ""}, {"heading": "4.1 Implementation Details", "text": "Datasets We evaluate our models on the Quora question paraphrase dataset which contains over 400,000 question pairs with binary labels. We use the same data and split as Wang et al. (2017), with 10,000 question pairs each for development and test, who also provide preprocessed and tokenized question pairs.4 We duplicated the training set, which has approximately 36% positive and 64% negative pairs, by adding question pairs in reverse order (since our model is not symmetric). When pretraining the full model parameters, we use the Paralex corpus (Fader et al., 2013), which consists of 36 million noisy paraphrase pairs including duplicate reversed paraphrases. We created 64 million artificial negative paraphrase pairs (reflecting the class balance of the Quora training set) by combining the following three types of negatives in equal proportions: (1) random unrelated questions, (2) random questions that share a single word, and (3) random questions that share all but one word.5 Hyperparameters We tuned the following hyperparameters by grid search on the development set (settings for our best model are in parenthesis): embedding dimension (300), shape of all feedforward networks (two layers with 400 and 200 width), character n-gram sizes (5), context size (1), learning rate (0.1 for both pretraining and tuning), batch size (256 for pretraining and 64 for tuning), dropout ratio (0.1 for tuning) and prediction threshold (positive paraphrase for a score \u2265 0.3). We examined whether self-attention helps or not for all model variants, and found that it does for our best model. Note that we tried multiple orders of character n-\n4This split is available at https://zhiguowang.github.io. 5More complex sampling procedures are possible, for ex-\nample, by using pretrained word embeddings.\ngrams with n \u2208 {3, 4, 5} both individually and separately but 5-grams alone worked better than these alternatives. Baselines We implemented several baseline models. In our first two baselines, each question is represented by concatenating the sum of its unigram word embeddings and the sum of its trigram vectors, where each trigram vector is a concatenation of 3 adjacent word embeddings. The two question representations are then concatenated and fed to a feedforward network of shape [800, 400, 200]. We call these FFNNword and FFNNchar; in the latter, word embeddings are just sums of character n-gram embeddings. Second, we compare purely supervised variants of decomposable attention model, namely a word-based model with-\nout any pretrained embeddings (DECATTword), a word-based model with GloVe (Pennington et al., 2014) embeddings (DECATTglove), a character ngram model (DECATTchar) without pretrained embeddings and DECATTparalex\u2212char whose character n-gram embeddings are pretrained with Paralex while all other parameters are learned from scratch on Quora. Finally we present a baseline where a word-based model is pretrained completely on Paralex (pt-DECATTword) and our best model which is a character n-gram model pretrained completely on Paralex (pt-DECATTchar). Note that in case of character n-gram based models, for tokens shorter than n characters, we backoff and emit the token itself. Also, boundary markers were added at the beginning and end of each word."}, {"heading": "4.2 Results", "text": "Other than our baselines, we compare with Wang et al. (2017) in Table 2. We observe that the simple FFNN baselines work better than more complex Siamese and Multi-Perspective CNN or LSTM models, more so if character n-gram based embeddings are used. Our basic decomposable attention model DECATTword without pre-trained embeddings is better than most of the models, all of which used GloVe embeddings. An interesting observation is that DECATTchar model without any pretrained embeddings outperforms DECATTglove that uses task-agnostic GloVe embeddings. Furthermore, when character n-gram embeddings are pre-trained in a task-specific manner in DECATTparalex\u2212char model, we observe a significant boost in performance. 6\nThe final two rows of the table show results achieved by pt-DECATTword and pt-DECATTchar.\n6Note that Paralex is orders of magnitude smaller than the corpus used to pretrain GloVe.\nWe note that the former falls short of the DECATTparalex\u2212char, which shows that character ngram representations are powerful. Finally, we note that our best performing model is pt-DECATTchar, which leverages the full power of character embeddings and pretraining the model on Paralex.\nNoisy pretraining gives more significant gains in case of smaller human annotated data as can be seen in Figure 1 where non-pretrained DECATTchar and pretrained pt-DECATTchar are compared on a logarithmic scale of number of Quora examples. It also gives an important insight into trade off between having more but costly human annotated data versus cheap but noisy pretraining. Table 1 shows some example predictions from the DECATTglove, DECATTchar and the pt-DECATTchar models. The GloVe-trained model often makes mistakes related to spelling and tokenization artifacts. We observed that hyperparameter tuning resulted in settings where non-pretrained models did not use self-attention while the pretrained character based model did, thus learning better long term context at its input layer; this is reflected in example D which shows an alternation that our best model captures. Finally, E and F show pairs that present complex paraphrases that none of our models capture."}, {"heading": "5 Conclusion and Future Work", "text": "We presented a focused contribution on question paraphrase identification, on the recently published Quora corpus. First, we showed that replacing the word embeddings of the decomposable attention model of Parikh et al. (2016) with character n-gram embeddings results in significantly better accuracy on this task. Second, we showed that pretraining the full model on automatically labeled noisy, but task-specific data results in further improvements. Our methods perform better than several complex neural architectures and achieve state of the art. While conceptually simple, we believe that these are two important insights that may be more widely applicable within the field of natural language understanding. We leave investigation of this claim to future work that may involve evaluation on related tasks such as recognizing textual entailment."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "Proceedings of ICLR.", "citeRegEx": "Bahdanau et al\\.,? 2015", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Enriching word vectors with subword information", "author": ["Piotr Bojanowski", "Edouard Grave", "Armand Joulin", "Tomas Mikolov."], "venue": "arXiv 1607.04606.", "citeRegEx": "Bojanowski et al\\.,? 2016", "shortCiteRegEx": "Bojanowski et al\\.", "year": 2016}, {"title": "A large annotated corpus for learning natural language inference", "author": ["Samuel R. Bowman", "Gabor Angeli", "Christopher Potts", "Christopher D. Manning."], "venue": "Proceedings of EMNLP.", "citeRegEx": "Bowman et al\\.,? 2015", "shortCiteRegEx": "Bowman et al\\.", "year": 2015}, {"title": "Discriminative learning over constrained latent representations", "author": ["Ming-Wei Chang", "Dan Goldwasser", "Dan Roth", "Vivek Srikumar."], "venue": "Proceedings of HLT-NAACL.", "citeRegEx": "Chang et al\\.,? 2010", "shortCiteRegEx": "Chang et al\\.", "year": 2010}, {"title": "Enhancing and combining sequential and tree LSTM for natural language inference", "author": ["Qian Chen", "Xiaodan Zhu", "Zhen-Hua Ling", "Si Wei", "Hui Jiang."], "venue": "arXiv 1609.06038 .", "citeRegEx": "Chen et al\\.,? 2016", "shortCiteRegEx": "Chen et al\\.", "year": 2016}, {"title": "Long short-term memory-networks for machine reading", "author": ["Jianpeng Cheng", "Li Dong", "Mirella Lapata."], "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. Association for Computa-", "citeRegEx": "Cheng et al\\.,? 2016", "shortCiteRegEx": "Cheng et al\\.", "year": 2016}, {"title": "A character-level decoder without explicit segmentation for neural machine translation", "author": ["Junyoung Chung", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "Proceedings of ACL.", "citeRegEx": "Chung et al\\.,? 2016", "shortCiteRegEx": "Chung et al\\.", "year": 2016}, {"title": "Paraphrase identification as probabilistic quasi-synchronous recognition", "author": ["Dipanjan Das", "Noah A. Smith."], "venue": "Proceedings of ACL-IJCNLP.", "citeRegEx": "Das and Smith.,? 2009", "shortCiteRegEx": "Das and Smith.", "year": 2009}, {"title": "Learning hybrid representations to retrieve semantically equivalent questions", "author": ["Cicero dos Santos", "Luciano Barbosa", "Dasha Bogdanova", "Bianca Zadrozny."], "venue": "Proceedings of ACL.", "citeRegEx": "Santos et al\\.,? 2015", "shortCiteRegEx": "Santos et al\\.", "year": 2015}, {"title": "Paraphrase-driven learning for open question answering", "author": ["Anthony Fader", "Luke Zettlemoyer", "Oren Etzioni."], "venue": "Proceedings of ACL.", "citeRegEx": "Fader et al\\.,? 2013", "shortCiteRegEx": "Fader et al\\.", "year": 2013}, {"title": "Multiperspective sentence similarity modeling with convolutional neural networks", "author": ["Hua He", "Kevin Gimpel", "Jimmy Lin."], "venue": "Proceedings of EMNLP.", "citeRegEx": "He et al\\.,? 2015", "shortCiteRegEx": "He et al\\.", "year": 2015}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber."], "venue": "Neural Computation 9(8):1735\u20131780.", "citeRegEx": "Hochreiter and Schmidhuber.,? 1997", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Learning deep structured semantic models for web search using clickthrough data", "author": ["Po-Sen Huang", "Xiaodong He", "Jianfeng Gao", "Li Deng", "Alex Acero", "Larry Heck."], "venue": "Proceedings of CIKM.", "citeRegEx": "Huang et al\\.,? 2013", "shortCiteRegEx": "Huang et al\\.", "year": 2013}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Yoon Kim", "Carl Denton", "Loung Hoang", "Alexander M. Rush."], "venue": "Proceedings of ICLR.", "citeRegEx": "Kim et al\\.,? 2017", "shortCiteRegEx": "Kim et al\\.", "year": 2017}, {"title": "Character-aware neural language models", "author": ["Yoon Kim", "Yacine Jernite", "David Sontag", "Alexander M. Rush."], "venue": "Proceedings of AAAI.", "citeRegEx": "Kim et al\\.,? 2016", "shortCiteRegEx": "Kim et al\\.", "year": 2016}, {"title": "Semi-supervised question retrieval with gated convolutions", "author": ["Tao Lei", "Hrishikesh Joshi", "Regina Barzilay", "Tommi Jaakkola", "Kateryna Tymoshenko", "Alessandro Moschitti", "Llu\u0131\u0301s M\u00e0rquez"], "venue": "In Proceedings of NAACL", "citeRegEx": "Lei et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Lei et al\\.", "year": 2016}, {"title": "Finding function in form: Compositional character models for open vocabulary word representation", "author": ["Wang Ling", "Chris Dyer", "Alan W Black", "Isabel Trancoso", "Ramon Fermandez", "Silvio Amir", "Luis Marujo", "Tiago Luis."], "venue": "Proceedings of", "citeRegEx": "Ling et al\\.,? 2015", "shortCiteRegEx": "Ling et al\\.", "year": 2015}, {"title": "Achieving open vocabulary neural machine translation with hybrid word-character models", "author": ["Minh-Thang Luong", "Christopher D. Manning."], "venue": "Proceedings of ACL.", "citeRegEx": "Luong and Manning.,? 2016", "shortCiteRegEx": "Luong and Manning.", "year": 2016}, {"title": "A decomposable attention model for natural language inference", "author": ["Ankur Parikh", "Oscar T\u00e4ckstr\u00f6m", "Dipanjan Das", "Jakob Uszkoreit."], "venue": "Proceedings of EMNLP.", "citeRegEx": "Parikh et al\\.,? 2016", "shortCiteRegEx": "Parikh et al\\.", "year": 2016}, {"title": "GloVe: Global vectors for word representation", "author": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."], "venue": "Proceedings of EMNLP.", "citeRegEx": "Pennington et al\\.,? 2014", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Neural machine translation of rare words with subword units", "author": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."], "venue": "Proceedings of ACL.", "citeRegEx": "Sennrich et al\\.,? 2016", "shortCiteRegEx": "Sennrich et al\\.", "year": 2016}, {"title": "Deep multitask learning with low level tasks supervised at lower layers", "author": ["Anders S\u00f8gaard", "Yoav Goldberg."], "venue": "Proceedings of ACL.", "citeRegEx": "S\u00f8gaard and Goldberg.,? 2016", "shortCiteRegEx": "S\u00f8gaard and Goldberg.", "year": 2016}, {"title": "Bilateral multi-perspective matching for natural language sentences", "author": ["Zhiguo Wang", "Wael Hamza", "Radu Florian."], "venue": "Proceedings of IJCAI.", "citeRegEx": "Wang et al\\.,? 2017", "shortCiteRegEx": "Wang et al\\.", "year": 2017}, {"title": "Sentence similarity learning by lexical decomposition and composition", "author": ["Zhiguo Wang", "Haitao Mi", "Abraham Ittycheriah."], "venue": "Proceedings of COLING.", "citeRegEx": "Wang et al\\.,? 2016", "shortCiteRegEx": "Wang et al\\.", "year": 2016}, {"title": "Charagram: Embedding words and sentences via character n-grams", "author": ["John Wieting", "Mohit Bansal", "Kevin Gimpel", "Karen Livescu."], "venue": "Proceedings of EMNLP.", "citeRegEx": "Wieting et al\\.,? 2016", "shortCiteRegEx": "Wieting et al\\.", "year": 2016}], "referenceMentions": [{"referenceID": 18, "context": "We focus on a recent dataset of question pairs annotated with binary paraphrase labels and show that a variant of the decomposable attention model (Parikh et al., 2016) results in accurate performance on this task, while being far simpler than many competing neural architectures.", "startOffset": 147, "endOffset": 168}, {"referenceID": 18, "context": "We examine a simple model family, the decomposable attention model of Parikh et al. (2016), that has shown promise in modeling natural", "startOffset": 70, "endOffset": 91}, {"referenceID": 4, "context": "language inference and has inspired recent work on similar tasks (Chen et al., 2016; Kim et al., 2017).", "startOffset": 65, "endOffset": 102}, {"referenceID": 13, "context": "language inference and has inspired recent work on similar tasks (Chen et al., 2016; Kim et al., 2017).", "startOffset": 65, "endOffset": 102}, {"referenceID": 9, "context": "Second, to significantly improve our model performance, we pretrain all our model parameters on the noisy, automatically collected question-paraphrase corpus Paralex (Fader et al., 2013), followed by fine-tuning the parameters on the Quora dataset.", "startOffset": 166, "endOffset": 186}, {"referenceID": 11, "context": "uses a character-based LSTM (Hochreiter and Schmidhuber, 1997) at its input representation layer, a layer of bi-LSTMs for computing context information, four different types of multi-perspective matching layers, an additional bi-LSTM aggregation layer, followed by a ar X iv :1 70 4.", "startOffset": 28, "endOffset": 62}, {"referenceID": 3, "context": "Paraphrase identification is a well-studied task in NLP (Das and Smith, 2009; Chang et al., 2010; He et al., 2015; Wang et al., 2016, inter alia). Here, we focus on an instance, that of finding questions with identical meaning. Lei et al. (2016) consider a related task leveraging the AskUbuntu corpus (dos Santos et al.", "startOffset": 78, "endOffset": 246}, {"referenceID": 3, "context": "Paraphrase identification is a well-studied task in NLP (Das and Smith, 2009; Chang et al., 2010; He et al., 2015; Wang et al., 2016, inter alia). Here, we focus on an instance, that of finding questions with identical meaning. Lei et al. (2016) consider a related task leveraging the AskUbuntu corpus (dos Santos et al., 2015), but it contains two orders of magnitude less annotations, thus limiting the quality of any model. Most relevant to this work is that of Wang et al. (2017), who present the best results on the Quora dataset prior to this work.", "startOffset": 78, "endOffset": 484}, {"referenceID": 12, "context": "While conceptually simple, character n-gram embeddings are a highly competitive representation (Huang et al., 2013; Wieting et al., 2016; Bojanowski et al., 2016).", "startOffset": 95, "endOffset": 162}, {"referenceID": 24, "context": "While conceptually simple, character n-gram embeddings are a highly competitive representation (Huang et al., 2013; Wieting et al., 2016; Bojanowski et al., 2016).", "startOffset": 95, "endOffset": 162}, {"referenceID": 1, "context": "While conceptually simple, character n-gram embeddings are a highly competitive representation (Huang et al., 2013; Wieting et al., 2016; Bojanowski et al., 2016).", "startOffset": 95, "endOffset": 162}, {"referenceID": 20, "context": "More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015).", "startOffset": 95, "endOffset": 200}, {"referenceID": 17, "context": "More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015).", "startOffset": 95, "endOffset": 200}, {"referenceID": 14, "context": "More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015).", "startOffset": 95, "endOffset": 200}, {"referenceID": 6, "context": "More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015).", "startOffset": 95, "endOffset": 200}, {"referenceID": 16, "context": "More complex representations built directly from individual characters have also been proposed (Sennrich et al., 2016; Luong and Manning, 2016; Kim et al., 2016; Chung et al., 2016; Ling et al., 2015).", "startOffset": 95, "endOffset": 200}, {"referenceID": 2, "context": ", 2016, DECATT henceforth), which despite its simplicity and efficiency has been shown to work remarkably well for the related task of natural language inference (Bowman et al., 2015).", "startOffset": 162, "endOffset": 183}, {"referenceID": 18, "context": "Due to lack of space, we only provide a brief outline below and refer to Parikh et al. (2016) for further", "startOffset": 73, "endOffset": 94}, {"referenceID": 0, "context": "First, the elements of \u0101 and b\u0304 are aligned using a variant of neural attention (Bahdanau et al., 2015) to decompose the problem into the comparison of aligned phrases.", "startOffset": 80, "endOffset": 103}, {"referenceID": 5, "context": "In this optional step, we modify the input representations using \u201cself-attention\u201d to encode compositional relationships between words within each sentence, as proposed by (Cheng et al., 2016).", "startOffset": 171, "endOffset": 191}, {"referenceID": 19, "context": "Pretraining embeddings with a task-agnostic objective on large-scale corpora (Pennington et al., 2014) is a common remedy to this problem.", "startOffset": 77, "endOffset": 102}, {"referenceID": 22, "context": "We use the same data and split as Wang et al. (2017), with 10,000 question pairs each for development and", "startOffset": 34, "endOffset": 53}, {"referenceID": 9, "context": "When pretraining the full model parameters, we use the Paralex corpus (Fader et al., 2013), which consists of 36 million noisy paraphrase pairs including duplicate reversed paraphrases.", "startOffset": 70, "endOffset": 90}, {"referenceID": 22, "context": "The first six rows are taken from (Wang et al., 2017).", "startOffset": 34, "endOffset": 53}, {"referenceID": 19, "context": "Second, we compare purely supervised variants of decomposable attention model, namely a word-based model without any pretrained embeddings (DECATTword), a word-based model with GloVe (Pennington et al., 2014) embeddings (DECATTglove), a character ngram model (DECATTchar) without pretrained embeddings and DECATTparalex\u2212char whose character n-gram embeddings are pretrained with Paralex while all other parameters are learned from scratch on Quora.", "startOffset": 183, "endOffset": 208}, {"referenceID": 22, "context": "Other than our baselines, we compare with Wang et al. (2017) in Table 2.", "startOffset": 42, "endOffset": 61}, {"referenceID": 18, "context": "First, we showed that replacing the word embeddings of the decomposable attention model of Parikh et al. (2016) with character n-gram embeddings results in significantly better accuracy on this task.", "startOffset": 91, "endOffset": 112}], "year": 2017, "abstractText": "We present a solution to the problem of paraphrase identification of questions. We focus on a recent dataset of question pairs annotated with binary paraphrase labels and show that a variant of the decomposable attention model (Parikh et al., 2016) results in accurate performance on this task, while being far simpler than many competing neural architectures. Furthermore, when the model is pretrained on a noisy dataset of automatically collected question paraphrases, it obtains the best reported performance on the dataset.", "creator": "LaTeX with hyperref package"}}}