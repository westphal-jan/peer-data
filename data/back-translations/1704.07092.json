{"id": "1704.07092", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Apr-2017", "title": "Robust Incremental Neural Semantic Graph Parsing", "abstract": "However, statistical parsing focuses almost exclusively on bilexical dependencies or domain-specific logical forms. We propose a neural encoder-decoder-transition-based parser, which is the first comprehensive semantic graph parser for Minimal Recursion Semantics (MRS). The model architecture uses stack-based embedding capabilities and predicts graphs along with unexicalized predicates and their token alignment. Our parser is more precise than attention-based baselines on MRS and on an additional Abstract Meaning Representation (AMR) benchmark, and GPU batch processing makes it order of magnitude faster than a high-precision gram-based parser. In addition, the match value of our MRS parser is 86.69% higher than the upper limit on AMR parsing, making an MRS choice attractive as a setic representation.", "histories": [["v1", "Mon, 24 Apr 2017 08:50:15 GMT  (57kb,D)", "https://arxiv.org/abs/1704.07092v1", "12 pages; Accepted to ACL 2017"], ["v2", "Thu, 27 Jul 2017 15:39:41 GMT  (57kb,D)", "http://arxiv.org/abs/1704.07092v2", "12 pages; ACL 2017"]], "COMMENTS": "12 pages; Accepted to ACL 2017", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["jan buys", "phil blunsom"], "accepted": true, "id": "1704.07092"}, "pdf": {"name": "1704.07092.pdf", "metadata": {"source": "CRF", "title": "Robust Incremental Neural Semantic Graph Parsing", "authors": ["Jan Buys", "Phil Blunsom"], "emails": ["jan.buys@cs.ox.ac.uk", "phil.blunsom@cs.ox.ac.uk"], "sections": [{"heading": null, "text": "Robust Incremental Neural Semantic Graph Parsing\nJan Buys1 and Phil Blunsom1,2 1Department of Computer Science, University of Oxford 2DeepMind\n{jan.buys,phil.blunsom}@cs.ox.ac.uk\nAbstract Parsing sentences to linguisticallyexpressive semantic representations is a key goal of Natural Language Processing. Yet statistical parsing has focussed almost exclusively on bilexical dependencies or domain-specific logical forms. We propose a neural encoder-decoder transition-based parser which is the first full-coverage semantic graph parser for Minimal Recursion Semantics (MRS). The model architecture uses stack-based embedding features, predicting graphs jointly with unlexicalized predicates and their token alignments. Our parser is more accurate than attention-based baselines on MRS, and on an additional Abstract Meaning Representation (AMR) benchmark, and GPU batch processing makes it an order of magnitude faster than a high-precision grammar-based parser. Further, the 86.69% Smatch score of our MRS parser is higher than the upper-bound on AMR parsing, making MRS an attractive choice as a semantic representation.1"}, {"heading": "1 Introduction", "text": "An important goal of Natural Language Understanding (NLU) is to parse sentences to structured, interpretable meaning representations that can be used for query execution, inference and reasoning. Recently end-to-end models have outperformed traditional pipeline approaches, predicting syntactic or semantic structure as intermediate steps, on NLU tasks such as sentiment analysis and semantic relatedness (Le and Mikolov, 2014; Kiros et al.,\n1Code, models and data preparation scripts are available at https://github.com/janmbuys/ DeepDeepParser.\n2015), question answering (Hermann et al., 2015) and textual entailment (Rockta\u0308schel et al., 2015). However the linguistic structure used in applications has predominantly been shallow, restricted to bilexical dependencies or trees.\nIn this paper we focus on robust parsing into linguistically deep representations. The main representation that we use is Minimal Recursion Semantics (MRS) (Copestake et al., 1995, 2005), which serves as the semantic representation of the English Resource Grammar (ERG) (Flickinger, 2000). Existing parsers for full MRS (as opposed to bilexical semantic graphs derived from, but simplifying MRS) are grammar-based, performing disambiguation with a maximum entropy model (Toutanova et al., 2005; Zhang et al., 2007); this approach has high precision but incomplete coverage.\nOur main contribution is to develop a fast and robust parser for full MRS-based semantic graphs. We exploit the power of global conditioning enabled by deep learning to predict linguistically deep graphs incrementally. The model does not have access to the underlying ERG or syntactic structures from which the MRS analyses were originally derived. We develop parsers for two graph-based conversions of MRS, Elementary Dependency Structure (EDS) (Oepen and L\u00f8nning, 2006) and Dependency MRS (DMRS) (Copestake, 2009), of which the latter is inter-convertible with MRS.\nAbstract Meaning Representation (AMR) (Banarescu et al., 2013) is a graph-based semantic representation that shares the goals of MRS. Aside from differences in the choice of which linguistic phenomena are annotated, MRS is a compositional representation explicitly coupled with the syntactic structure of the sentence, while AMR does not assume compositionality or alignment with the sentence structure. Recently a number\nar X\niv :1\n70 4.\n07 09\n2v 2\n[ cs\n.C L\n] 2\n7 Ju\nl 2 01\n7\nof AMR parsers have been developed (Flanigan et al., 2014; Wang et al., 2015b; Artzi et al., 2015; Damonte et al., 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al., 2013). We apply our model to AMR parsing by introducing structure that is present explicitly in MRS but not in AMR (Buys and Blunsom, 2017).\nParsers based on RNNs have achieved state-ofthe-art performance for dependency parsing (Dyer et al., 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al., 2015b; Dyer et al., 2016; Cross and Huang, 2016b). One of the main reasons for the prevalence of bilexical dependencies and tree-based representations is that they can be parsed with efficient and wellunderstood algorithms. However, one of the key advantages of deep learning is the ability to make predictions conditioned on unbounded contexts encoded with RNNs; this enables us to predict more complex structures without increasing algorithmic complexity. In this paper we show how to perform linguistically deep parsing with RNNs.\nOur parser is based on a transition system for semantic graphs. However, instead of generating arcs over an ordered, fixed set of nodes (the words in the sentence), we generate the nodes and their alignments jointly with the transition actions. We use a graph-based variant of the arc-eager transition-system. The sentence is encoded with a bidirectional RNN. The transition sequence, seen as a graph linearization, can be predicted with any encoder-decoder model, but we show that using hard attention, predicting the alignments with a pointer network and conditioning explicitly on stack-based features improves performance. In order to deal with data sparsity candidate lemmas are predicted as a pre-processing step, so that the RNN decoder predicts unlexicalized node labels.\nWe evaluate our parser on DMRS, EDS and AMR graphs. Our model architecture improves performance from 79.68% to 84.16% F1 over an attention-based encoder-decoder baseline. Although our parser is less accurate that a highprecision grammar-based parser on a test set of sentences parsable by that grammar, incremental prediction and GPU batch processing enables it to parse 529 tokens per second, against 7 tokens per second for the grammar-based parser. On AMR parsing our model obtains 60.11% Smatch."}, {"heading": "2 Meaning Representations", "text": "We define a common framework for semantic graphs in which we can place both MRSbased graph representations (DMRS and EDS) and AMR. Sentence meaning is represented with rooted, labelled, connected, directed graphs (Kuhlmann and Oepen, 2016). An example graph is visualized in Figure 1. representations. Node labels are referred to as predicates (concepts in AMR) and edge labels as arguments (AMR relations). In addition constants, a special type of node modifiers, are used to denote the string values of named entities and numbers (including date and time expressions). Every node is aligned to a token or a continuous span of tokens in the sentence the graph corresponds to.\nMinimal Recursion Semantics (MRS) is a framework for computational semantics that can be used for parsing or generation (Copestake et al., 2005). Instances and eventualities are represented with logical variables. Predicates take arguments with labels from a small, fixed set of roles. Arguments are either logical variables or handles, designated formalism-internal variables. Handle equality constraints support scope underspecification; multiple scope-resolved logical representations can be derived from one MRS structure. A predicate corresponds to its intrinsic argument\nand is aligned to a character span of the (untokenized) input sentence. Predicates representing named entities or numbers are parameterized by strings. Quantification is expressed through predicates that bound instance variables, rather than through logical operators such as \u2203 or \u2200. MRS was designed to be integrated with feature-based grammars such as Head-driven Phrase Structure Grammar (HPSG) (Pollard and Sag, 1994) or Lexical Functional Grammar (LFG) (Kaplan and Bresnan, 1982). MRS has been implement the English Resource Grammar (ERG) (Flickinger, 2000), a broad-coverage high-precision HPSG grammar.\nOepen and L\u00f8nning (2006) proposed Elementary Dependency Structure (EDS), a conversion of MRS to variable-free dependency graphs which drops scope underspecification. Copestake (2009) extended this conversion to avoid information loss, primarily through richer edge labels. The resulting representation, Dependency MRS (DMRS), can be converted back to the original MRS, or used directly in MRS-based applications (Copestake et al., 2016). We are interested in the empirical performance of parsers for both of these representations: while EDS is more interpretable as an independent semantic graph representation, DMRS can be related back to underspecified logical forms. A bilexical simplification of EDS has previously been used for semantic dependency parsing (Oepen et al., 2014, 2015). Figure 1 illustrates an EDS graph.\nMRS makes an explicit distinction between surface and abstract predicates (by convention surface predicates are prefixed by an underscore). Surface predicates consist of a lemma followed by a coarse part-of-speech tag and an optional sense label. Predicates absent from the ERG lexicon are represented by their surface forms and POS tags. We convert the character-level predicate spans given by MRS to token-level spans for parsing purposes, but the representation does not require gold tokenization. Surface predicates usually align with the span of the token(s) they represent, while abstract predicates can span longer segments. In full MRS every predicate is annotated with a set of morphosyntactic features, encoding for example tense, aspect and number information; we do not currently model these features.\nAMR (Banarescu et al., 2013) graphs can be represented in the same framework, despite a number of linguistic differences with MRS. Some in-\n:root( <2> _v_1 :ARG1( <1> person :BV-of( <1> every_q ) )\nformation annotated explicitly in MRS is latent in AMR, including alignments and the distinction between surface (lexical) and abstract concepts. AMR predicates are based on PropBank (Palmer et al., 2005), annotated as lemmas plus sense labels, but they form only a subset of concepts. Other concepts are either English words or special keywords, corresponding to overt lexemes in some cases but not others."}, {"heading": "3 Incremental Graph Parsing", "text": "We parse sentences to their meaning representations by incrementally predicting semantic graphs together with their alignments. Let e = e1, e2, . . . , eI be a tokenized English sentence, t = t1, t2, . . . , tJ a sequential representation of its graph derivation and a = a1, a2, . . . , aJ an alignment sequence consisting of integers in the range 1, . . . , I . We model the conditional distribution p(t,a|e) which decomposes as\nJ\u220f j=1 p(aj |(a, t)1:j\u22121, e)p(tj |a1:j , t1:j\u22121, e).\nWe also predict the end-of-span alignments as a seperate sequence a(e)."}, {"heading": "3.1 Top-down linearization", "text": "We now consider how to linearize the semantic graphs, before defining the neural models to parameterize the parser in section 4. The first approach is to linearize a graph as the pre-order traversal of its spanning tree, starting at a designated root node (see Figure 2). Variants of this approach have been proposed for neural constituency parsing (Vinyals et al., 2015b), logical form prediction (Dong and Lapata, 2016; Jia and Liang, 2016) and AMR parsing (Barzdins and Gosko, 2016; Peng et al., 2017).\nIn the linearization, labels of edges whose direction are reversed in the spanning tree are marked\nby adding -of. Edges not included in the spanning tree, referred to as reentrancies, are represented with special edges whose dependents are dummy nodes pointing back to the original nodes. Our potentially lossy representation represents these edges by repeating the dependent node labels and alignments, which are recovered heuristically. The alignment does not influence the linearized node ordering."}, {"heading": "3.2 Transition-based parsing", "text": "Figure 1 shows that the semantic graphs we work with can also be interpreted as dependency graphs, as nodes are aligned to sentence tokens. Transition-based parsing (Nivre, 2008) has been used extensively to predict dependency graphs incrementally. We apply a variant of the arc-eager transition system that has been proposed for graph (as opposed to tree) parsing (Sagae and Tsujii, 2008; Titov et al., 2009; Go\u0301mez-Rodr\u0131\u0301guez and Nivre, 2010) to derive a transition-based parser for deep semantic graphs. In dependency parsing the sentence tokens also act as nodes in the graph, but here we need to generate the nodes incrementally as the transition-system proceeds, conditioning the generation on the given sentence. Damonte et al. (2017) proposed an arc-eager AMR parser, but their transition system is more narrowly restricted to AMR graphs.\nThe transition system consists of a stack of graph nodes being processed and a buffer, holding a single node at a time. The main transition actions are shift, reduce, left-arc, right-arc. Figure 3 shows an example transition sequence together with the stack and buffer after each step. The shift transition moves the element on the buffer to the top of the stack, and generates a predicate and its alignment as the next node on the buffer. Left-arc and right-arc actions add labeled arcs between the buffer and stack top (for DMRS a transition for undirected arcs is included), but do not change the state of the stack or buffer. Finally, reduce pops the top element from the stack, and predicts its end-ofspan alignment (if included in the representation). To predict non-planar arcs, we add another transition, which we call cross-arc, which first predicts the stack index of a node which is not on top of the stack, adding an arc between the head of the buffer and that node. Another special transition designates the buffer node as the root.\nTo derive an oracle for this transition system,\nit is necessary to determine the order in which the nodes are generated. We consider two approaches. The first ordering is obtained by performing an in-order traversal of the spanning tree, where the node order is determined by the alignment. In the resulting linearization the only non-planar arcs are reentrancies. The second approach lets the ordering be monotone (non-decreasing) with respect to the alignments, while respecting the in-order ordering for nodes with the same alignment. In an arc-eager oracle arcs are added greedily, while a reduce action can either be performed as soon as the stack top node has been connected to all its dependents, or delayed until it has to reduce to allow the correct parse tree to be formed. In our model the oracle delays reduce, where possible, until the end alignment of the stack top node spans the node on the buffer. As the span end alignments often cover phrases that they head (e.g. for quantifiers) this gives a natural interpretation to predicting the span end together with the reduce action."}, {"heading": "3.3 Delexicalization and lemma prediction", "text": "Each token in MRS annotations is aligned to at most one surface predicate. We decompose surface predicate prediction by predicting candidate lemmas for input tokens, and delexicalized predicates consisting only of sense labels. The full surface predicates are then recovered through the predicted alignments.\nWe extract a dictionary mapping words to lemmas from the ERG lexicon. Candidate lemmas are predicted using this dictionary, and where no dictionary entry is available with a lemmatizer. The same approach is applied to predict constants, along with additional normalizations such as mapping numbers to digit strings.\nWe use the Stanford CoreNLP toolkit (Manning et al., 2014) to tokenize and lemmatize sentences, and tag tokens with the Stanford Named Entity Recognizer (Finkel et al., 2005). The tokenization is customized to correspond closely to the ERG tokenization; hyphens are removed preprocessing step. For AMR we use automatic alignments and the graph topology to classify concepts as surface or abstract. The lexicon is restricted to Propbank (Palmer et al., 2005) predicates; for other concepts we extract a lexicon from the training data."}, {"heading": "4 Encoder-Decoder Models", "text": ""}, {"heading": "4.1 Sentence encoder", "text": "The sentence e is encoded with a bidirectional RNN. We use a standard LSTM architecture without peephole connections (Jozefowicz et al., 2015). For every token e we embed its word, POS tag and named entity (NE) tag as vectors xw, xt and xn, respectively.\nThe embeddings are concatenated and passed through a linear transformation\ng(e) =W (x)[xw;xt;xn] + b x,\nsuch that g(e) has the same dimension as the LSTM. Each input position i is represented by a hidden state hi, which is the concatenation of its forward and backward LSTM state vectors."}, {"heading": "4.2 Hard attention decoder", "text": "We model the alignment of graph nodes to sentence tokens, a, as a random variable. For the arceager model, aj corresponds to the alignment of the node of the buffer after action tj is executed. The distribution of tj is over all transitions and predicates (corresponding to shift transitions), predicted with a single softmax.\nThe parser output is predicted by an RNN decoder. Let sj be the decoder hidden state at output position j. We initialize s0 with the final state of the backward encoder. The alignment is predicted with a pointer network (Vinyals et al., 2015a).\nThe logits are computed with an MLP scoring the decoder hidden state against each of the encoder hidden states (for i = 1, . . . , I),\nuij = w T tanh(W (1)hi +W (2)sj).\nThe alignment distribution is then estimated by\np(aj = i|a1:j\u22121, t1:j\u22121, e) = softmax(uij).\nTo predict the next transition ti, the output vector is conditioned on the encoder state vector haj , corresponding to the alignment:\noj =W (3)sj +W (4)haj vj = R (d)oj + b (d),\nwhere R(d) and b(d) are the output representation matrix and bias vector, respectively.\nThe transition distribution is then given by\np(tj |a1:j , t1:j\u22121, e) = softmax(vj).\nLet e(t) be the embedding of decoder symbol t. The RNN state at the next time-step is computed as\ndj+1 =W (5)e(tj) +W (6)haj\nsj+1 = RNN(dj+1, sj).\nThe end-of-span alignment a(e)j for MRS-based graphs is predicted with another pointer network. The end alignment of a token is predicted only when a node is reduced from the stack, therefore this alignment is not observed at each time-step; it is also not fed back into the model.\nThe hard attention approach, based on supervised alignments, can be contrasted to soft attention, which learns to attend over the input without supervision. The attention is computed as with hard attention, as \u03b1ij = softmax(u i j). However instead of making a hard selection, a weighted average over the encoder vectors is computed as qj = \u2211i=I i=1 \u03b1 i jhi. This vector is used instead of haj for prediction and feeding to the next timestep."}, {"heading": "4.3 Stack-based model", "text": "We extend the hard attention model to include features based on the transition system stack. These features are embeddings from the bidirectional RNN encoder, corresponding to the alignments of the nodes on the buffer and on top of the stack. This approach is similar to the features proposed by Kiperwasser and Goldberg (2016) and Cross and Huang (2016a) for dependency parsing, although they do not use RNN decoders.\nTo implement these features the layer that computes the output vector is extended to\noj =W (3)sj +W (4)haj +W (7)hst0 ,\nwhere st0 is the sentence alignment index of the element on top of the stack. The input layer to the next RNN time-step is similarly extended to\ndj+1 =W (5)e(tj) +W (6)hbuf +W (8)hst0 ,\nwhere buf is the buffer alignment after tj is executed.\nOur implementation of the stack-based model enables batch processing in static computation graphs, similar to Bowman et al. (2016). We maintain a stack of alignment indexes for each element in the batch, which is updated inside the computation graph after each parsing action. This enables minibatch SGD during training as well as efficient batch decoding.\nWe perform greedy decoding. For the stackbased model we ensure that if the stack is empty, the next transition predicted has to be shift. For the other models we ensure that the output is wellformed during post-processing by robustly skipping over out-of-place symbols or inserting missing ones."}, {"heading": "5 Related Work", "text": "Prior work for MRS parsing predominantly predicts structures in the context of grammar-based parsing, where sentences are parsed to HPSG derivations consistent with the grammar, in this case the ERG (Flickinger, 2000). The nodes in the derivation trees are feature structures, from which MRS is extracted through unification. This approach fails to parse sentences for which no valid derivation is found. Maximum entropy models are used to score the derivations in order to find the most likely parse (Toutanova et al., 2005). This\napproach is implemented in the PET (Callmeier, 2000) and ACE2 parsers.\nThere have also been some efforts to develop robust MRS parsers. One proposed approach learns a PCFG grammar to approximate the HPSG derivations (Zhang and Krieger, 2011; Zhang et al., 2014). MRS is then extracted with robust unification to compose potentially incompatible feature structures, although that still fails for a small proportion of sentences. The model is trained on a large corpus of Wikipedia text parsed with the grammar-based parser. Ytrest\u00f8l (2012) proposed a transition-based approach to HPSG parsing that produces derivations from which both syntactic and semantic (MRS) parses can be extracted. The parser has an option not to be restricted by the ERG. However, neither of these approaches have results available that can be compared directly to our setup, or generally available implementations.\nAlthough AMR parsers produce graphs that are similar in structure to MRS-based graphs, most of them make assumptions that are invalid for MRS, and rely on extensive external AMR-specific resources. Flanigan et al. (2014) proposed a twostage parser that first predicts concepts or subgraphs corresponding to sentence segments, and then parses these concepts into a graph structure. However MRS has a large proportion of abstract nodes that cannot be predicted from short segments, and interact closely with the graph structure. Wang et al. (2015b,a) proposed a custom transition-system for AMR parsing that converts dependency trees to AMR graphs, relying on assumptions on the relationship between these. Pust et al. (2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al., 2015; Misra and Artzi, 2016). Recently Damonte et al. (2017) and Peng et al. (2017) proposed AMR parsers based on neural networks."}, {"heading": "6 Experiments", "text": ""}, {"heading": "6.1 Data", "text": "DeepBank (Flickinger et al., 2012) is an HPSG and MRS annotation of the Penn Treebank Wall Street Journal (WSJ) corpus. It was developed following an approach known as dynamic treebanking (Oepen et al., 2004) that couples treebank annotation with grammar development, in this case\n2http://sweaglesw.org/linguistics/ace/\nof the ERG. This approach has been shown to lead to high inter-annotator agreement: 0.94 against 0.71 for AMR (Bender et al., 2015). Parses are only provided for sentences for which the ERG has an analysis acceptable to the annotator \u2013 this means that we cannot evaluate parsing accuracy for sentences which the ERG cannot parse (approximately 15% of the original corpus).\nWe use Deepbank version 1.1, corresponding to ERG 12143, following the suggested split of sections 0 to 19 as training data data, 20 for development and 21 for testing. The gold-annotated training data consists of 35,315 sentences. We use the LOGON environment4 and the pyDelphin library5 to extract DMRS and EDS graphs.\nFor AMR parsing we use LDC2015E86, the dataset released for the SemEval 2016 AMR parsing Shared Task (May, 2016). This data includes newswire, weblog and discussion forum text. The training set has 16,144 sentences. We obtain alignments using the rule-based JAMR aligner (Flanigan et al., 2014)."}, {"heading": "6.2 Evaluation", "text": "Dridan and Oepen (2011) proposed an evaluation metric called Elementary Dependency Matching (EDM) for MRS-based graphs. EDM computes the F1-score of tuples of predicates and arguments. A predicate tuple consists of the label and character span of a predicate, while an argument tuple consists of the character spans of the head and dependent nodes of the relation, together with the argument label. In order to tolerate subtle tokenization differences with respect to punctuation, we allow span pairs whose ends differ by one character to be matched.\nThe Smatch metric (Cai and Knight, 2013), proposed for evaluating AMR graphs, also measures graph overlap, but does not rely on sentence alignments to determine the correspondences between graph nodes. Smatch is instead computed by performing inference over graph alignments to estimate the maximum F1-score obtainable from a one-to-one matching between the predicted and gold graph nodes.\n3http://svn.delph-in.net/erg/tags/ 1214/\n4http://moin.delph-in.net/LogonTop 5https://github.com/delph-in/pydelphin"}, {"heading": "6.3 Model setup", "text": "Our parser is implemented in TensorFlow (Abadi et al., 2015). For training we use Adam (Kingma and Ba, 2015) with learning rate 0.01 and batchsize 64. Gradients norms are clipped to 5.0 (Pascanu et al., 2013). We use single-layer LSTMs with dropout of 0.3 (tuned on the development set) on input and output connections. We use encoder and decoder embeddings of size 256, and POS and NE tag embeddings of size 32, For DMRS and EDS graphs the hidden units size is set to 256, for AMR it is 128. This configuration, found using grid search and heuristic search within the range of models that fit into a single GPU, gave the best performance on the development set under multiple graph linearizations. Encoder word embeddings are initialized (in the first 100 dimensions) with pre-trained order-sensitive embeddings (Ling et al., 2015). Singletons in the encoder input are replaced with an unknown word symbol with probability 0.5 for each iteration."}, {"heading": "6.4 MRS parsing results", "text": "We compare different linearizations and model architectures for parsing DMRS on the development data, showing that our approach is more accurate than baseline neural approaches. We report EDM scores, including scores for predicate (EDMP ) and argument (EDMA) prediction.\nFirst we report results using standard attentionbased encoder-decoders, with the alignments encoded as token strings in the linearization. (Table 1). We compare the top-down (TD) and arceager (AE) linearizations, as well as the effect of delexicalizing the predicates (factorizing lemmas out of the linearization and predicting them separately.) In both cases constants are predicted with a dictionary lookup based on the predicted spans. A special label is predicted for predicates not in\nthe ERG lexicon \u2013 the words and POS tags that make up those predicates are recovered through the alignments during post-processing.\nThe arc-eager unlexicalized representation gives the best performance, even though the model has to learn to model the transition system stack through the recurrent hidden states without any supervision of the transition semantics. The unlexicalized models are more accurate, mostly due to their ability to generalize to sparse or unseen predicates occurring in the lexicon. For the arc-eager representation, the oracle EDM is 99% for the lexicalized representation and 98.06% for the delexicalized representation. The remaining errors are mostly due to discrepancies between the tokenization used by our system and the ERG tokenization. The unlexicalized models are also faster to train, as the decoder\u2019s output vocabulary is much smaller, reducing the expense of computing softmaxes over large vocabularies.\nNext we consider models with delexicalized linearizations that predict the alignments with pointer networks, contrasting soft and hard attention models (Table 2). The results show that the arc-eager models performs better than those based on topdown representation. For the arc-eager model we use hard attention, due to the natural interpretation of the alignment prediction corresponding to the transition system. The stack-based architecture gives further improvements.\nWhen comparing the effect of different predicate orderings for the arc-eager model, we find that the monotone ordering performs 0.44 EDM better than the in-order ordering, despite having to parse more non-planar dependencies.\nWe also trained models that only predict predicates (in monotone order) together with their start spans. The hard attention model obtains 91.36% F1 on predicates together with their start spans with the unlexicalized model, compared to\n88.22% for lexicalized predicates and 91.65% for the full parsing model.\nTable 3 reports test set results for various evaluation metrics. Start EDM is calculated by requiring only the start of the alignment spans to match, not the ends. We compare the performance of our baseline and stack-based models against ACE, the ERG-based parser.\nDespite the promising performance of the model a gap remains between the accuracy of our parser and ACE. One reason for this is that the test set sentences will arguably be easier for ACE to parse as their choice was restricted by the same grammar that ACE uses. EDM metrics excluding end-span prediction (Start EDM) show that our parser has relatively more difficulty in parsing end-span predictions than the grammar-based parser.\nWe also evaluate the speed of our model compared with ACE. For the unbatched version of our model, the stack-based parser parses 41.63 tokens per second, while the batched implementation parses 529.42 tokens per second using a batch size of 128. In comparison, the setting of ACE for which we report accuracies parses 7.47 tokens per second. By restricting the memory usage of ACE, which restricts its coverage, we see that ACE can parse 11.07 tokens per second at 87.7% coverage, and 15.11 tokens per second at 77.8% coverage.\nFinally we report results for parsing EDS (Table 4). The EDS parsing task is slightly simpler\nthan DMRS, due to the absence of rich argument labels and additional graph edges that allow the recovery of full MRS. We see that for ACE the accuracies are very similar, while for our model EDS parsing is more accurate on the EDM metrics. We hypothesize that most of the extra information in DMRS can be obtained through the ERG, to which ACE has access but our model doesn\u2019t.\nAn EDS corpus which consists of about 95% of the DeepBank data has also been released6, with the goal of enabling comparison with other semantic graph parsing formalisms, including CCG dependencies and Prague Semantic Dependencies, on the same data set (Kuhlmann and Oepen, 2016). On this corpus our model obtains 85.87 EDM and 85.49 Smatch."}, {"heading": "6.5 AMR parsing", "text": "We apply the same approach to AMR parsing. Results on the development set are given in Table 5. The arc-eager-based models again give better performance, mainly due to improved concept prediction accuracy. However, concept prediction remains the most important weakness of the model; Damonte et al. (2017) reports that state-of-the-art AMR parsers score 83% on concept prediction.\nWe report test set results in Table 6. Our best neural model outperforms the baseline JAMR parser (Flanigan et al., 2014), but still lags behind the performance of state-of-the-art AMR parsers such as CAMR (Wang et al., 2016) and AMR Eager (Damonte et al., 2017). These models make extensive use of external resources, including syntactic parsers and semantic role labellers. Our attention-based encoder-decoder model already outperforms previous sequence-to-sequence AMR parsers (Barzdins and Gosko, 2016; Peng et al., 2017), and the arc-eager model boosts accuracy further. Our model also outperforms a\n6http://sdp.delph-in.net/osdp-12.tgz\nSynchronous Hyperedge Replacement Grammar model (Peng and Gildea, 2016) which is comparable as it does not make extensive use of external resources."}, {"heading": "7 Conclusion", "text": "In this paper we advance the state of parsing by employing deep learning techniques to parse sentence to linguistically expressive semantic representations that have not previously been parsed in an end-to-end fashion. We presented a robust, wide-coverage parser for MRS that is faster than existing parsers and amenable to batch processing. We believe that there are many future avenues to explore to further increase the accuracy of such parsers, including different training objectives, more structured architectures and semisupervised learning."}, {"heading": "Acknowledgments", "text": "The first author thanks the financial support of the Clarendon Fund and the Skye Foundation. We thank Stephan Oepen for feedback and help with data preperation, and members of the Oxford NLP group for valuable discussions."}], "references": [{"title": "TensorFlow: Large-scale machine learning on heterogeneous systems", "author": ["Warden", "Martin Wattenberg", "Martin Wicke", "Yuan Yu", "Xiaoqiang Zheng."], "venue": "Software available from tensorflow.org. http://tensorflow.org/.", "citeRegEx": "Warden et al\\.,? 2015", "shortCiteRegEx": "Warden et al\\.", "year": 2015}, {"title": "Broad-coverage CCG semantic parsing with AMR", "author": ["Yoav Artzi", "Kenton Lee", "Luke Zettlemoyer."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for Computational", "citeRegEx": "Artzi et al\\.,? 2015", "shortCiteRegEx": "Artzi et al\\.", "year": 2015}, {"title": "Abstract meaning representation for sembanking", "author": ["Laura Banarescu", "Claire Bonial", "Shu Cai", "Madalina Georgescu", "Kira Griffitt", "Ulf Hermjakob", "Kevin Knight", "Philipp Koehn", "Martha Palmer", "Nathan Schneider."], "venue": "Proceedings of the", "citeRegEx": "Banarescu et al\\.,? 2013", "shortCiteRegEx": "Banarescu et al\\.", "year": 2013}, {"title": "Riga at semeval-2016 task 8: Impact of smatch extensions and character-level neural translation on AMR parsing accuracy", "author": ["Guntis Barzdins", "Didzis Gosko."], "venue": "Proceedings of SemEval.", "citeRegEx": "Barzdins and Gosko.,? 2016", "shortCiteRegEx": "Barzdins and Gosko.", "year": 2016}, {"title": "Layers of interpretation: On grammar and compositionality", "author": ["Emily M Bender", "Dan Flickinger", "Stephan Oepen", "Woodley Packard", "Ann Copestake."], "venue": "Proceedings of the 11th International Conference on Computational Semantics. pages 239\u2013", "citeRegEx": "Bender et al\\.,? 2015", "shortCiteRegEx": "Bender et al\\.", "year": 2015}, {"title": "A fast unified model for parsing and sentence understanding", "author": ["Samuel R. Bowman", "Jon Gauthier", "Abhinav Rastogi", "Raghav Gupta", "Christopher D. Manning", "Christopher Potts."], "venue": "Proceedings of ACL. pages 1466\u20131477.", "citeRegEx": "Bowman et al\\.,? 2016", "shortCiteRegEx": "Bowman et al\\.", "year": 2016}, {"title": "Oxford at SemEval2017 Task 9: Neural AMR parsing with pointeraugmented attention", "author": ["Jan Buys", "Phil Blunsom."], "venue": "Proceedings of SemEval.", "citeRegEx": "Buys and Blunsom.,? 2017", "shortCiteRegEx": "Buys and Blunsom.", "year": 2017}, {"title": "Smatch: An evaluation metric for semantic feature structures", "author": ["Shu Cai", "Kevin Knight."], "venue": "Proceedings of ACL (short papers).", "citeRegEx": "Cai and Knight.,? 2013", "shortCiteRegEx": "Cai and Knight.", "year": 2013}, {"title": "PET - a platform for experimentation with efficient HPSG processing techniques", "author": ["Ulrich Callmeier."], "venue": "Natural Language Engineering 6(1):99\u2013 107.", "citeRegEx": "Callmeier.,? 2000", "shortCiteRegEx": "Callmeier.", "year": 2000}, {"title": "Invited talk: Slacker semantics: Why superficiality, dependency and avoidance of commitment can be the right way to go", "author": ["Ann Copestake."], "venue": "Proceedings of EACL. pages 1\u20139. http://www.aclweb.org/anthology/E09-1001.", "citeRegEx": "Copestake.,? 2009", "shortCiteRegEx": "Copestake.", "year": 2009}, {"title": "Resources for building applications with dependency minimal recursion semantics", "author": ["Ann Copestake", "Guy Emerson", "Michael Wayne Goodman", "Matic Horvat", "Alexander Kuhnle", "Ewa Muszyska"], "venue": null, "citeRegEx": "Copestake et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Copestake et al\\.", "year": 2016}, {"title": "Translation using minimal recursion semantics", "author": ["Ann Copestake", "Dan Flickinger", "Rob Malouf", "Susanne Riehemann", "Ivan Sag."], "venue": "In Proceedings of the Sixth International Conference on Theoretical and Methodological Issues in Machine Translation.", "citeRegEx": "Copestake et al\\.,? 1995", "shortCiteRegEx": "Copestake et al\\.", "year": 1995}, {"title": "Minimal recursion semantics: An introduction", "author": ["Ann Copestake", "Dan Flickinger", "Carl Pollard", "Ivan A Sag."], "venue": "Research on Language and Computation 3(2-3):281\u2013332.", "citeRegEx": "Copestake et al\\.,? 2005", "shortCiteRegEx": "Copestake et al\\.", "year": 2005}, {"title": "Incremental parsing with minimal features using bi-directional lstm", "author": ["James Cross", "Liang Huang."], "venue": "Proceedings of ACL. page 32.", "citeRegEx": "Cross and Huang.,? 2016a", "shortCiteRegEx": "Cross and Huang.", "year": 2016}, {"title": "Spanbased constituency parsing with a structurelabel system and provably optimal dynamic oracles", "author": ["James Cross", "Liang Huang."], "venue": "Proceedings of EMNLP. pages 1\u201311. https://aclweb.org/anthology/D16-1001.", "citeRegEx": "Cross and Huang.,? 2016b", "shortCiteRegEx": "Cross and Huang.", "year": 2016}, {"title": "An incremental parser for abstract meaning representation", "author": ["Marco Damonte", "Shay B. Cohen", "Giorgio Satta."], "venue": "Proceedings of EACL. pages 536\u2013 546. http://www.aclweb.org/anthology/E17-1051.", "citeRegEx": "Damonte et al\\.,? 2017", "shortCiteRegEx": "Damonte et al\\.", "year": 2017}, {"title": "Language to logical form with neural attention", "author": ["Li Dong", "Mirella Lapata."], "venue": "Proceedings of ACL. pages 33\u201343. http://www.aclweb.org/anthology/P16-1004.", "citeRegEx": "Dong and Lapata.,? 2016", "shortCiteRegEx": "Dong and Lapata.", "year": 2016}, {"title": "Parser evaluation using elementary dependency matching", "author": ["Rebecca Dridan", "Stephan Oepen."], "venue": "Proceedings of the 12th International Conference on Parsing Technologies. Association for Computational Linguistics, pages 225\u2013230.", "citeRegEx": "Dridan and Oepen.,? 2011", "shortCiteRegEx": "Dridan and Oepen.", "year": 2011}, {"title": "Transitionbased dependency parsing with stack long shortterm memory", "author": ["Chris Dyer", "Miguel Ballesteros", "Wang Ling", "Austin Matthews", "Noah A. Smith."], "venue": "Proceedings of ACL. pages 334\u2013 343. http://www.aclweb.org/anthology/P15-1033.", "citeRegEx": "Dyer et al\\.,? 2015", "shortCiteRegEx": "Dyer et al\\.", "year": 2015}, {"title": "Recurrent neural network grammars", "author": ["Chris Dyer", "Adhiguna Kuncoro", "Miguel Ballesteros", "Noah A. Smith."], "venue": "Proceedings of NAACL.", "citeRegEx": "Dyer et al\\.,? 2016", "shortCiteRegEx": "Dyer et al\\.", "year": 2016}, {"title": "Incorporating non-local information into information extraction systems by Gibbs sampling", "author": ["Jenny Rose Finkel", "Trond Grenager", "Christopher Manning."], "venue": "Proceedings of ACL. pages 363\u2013370. http://dx.doi.org/10.3115/1219840.1219885.", "citeRegEx": "Finkel et al\\.,? 2005", "shortCiteRegEx": "Finkel et al\\.", "year": 2005}, {"title": "A discriminative graph-based parser for the abstract meaning representation", "author": ["Jeffrey Flanigan", "Sam Thomson", "Jaime G. Carbonell", "Chris Dyer", "Noah A. Smith."], "venue": "Proceedings of ACL. pages 1426\u2013 1436. http://aclweb.org/anthology/P/P14/P14-", "citeRegEx": "Flanigan et al\\.,? 2014", "shortCiteRegEx": "Flanigan et al\\.", "year": 2014}, {"title": "On building a more effcient grammar by exploiting types", "author": ["Dan Flickinger."], "venue": "Natural Language Engineering 6(01):15\u201328.", "citeRegEx": "Flickinger.,? 2000", "shortCiteRegEx": "Flickinger.", "year": 2000}, {"title": "Deepbank", "author": ["Dan Flickinger", "Yi Zhang", "Valia Kordoni."], "venue": "a dynamically annotated treebank of the wall street journal. In Proceedings of the 11th International Workshop on Treebanks and Linguistic Theories. pages 85\u201396.", "citeRegEx": "Flickinger et al\\.,? 2012", "shortCiteRegEx": "Flickinger et al\\.", "year": 2012}, {"title": "A transition-based parser for 2-planar dependency structures", "author": ["Carlos G\u00f3mez-Rodr\u0131\u0301guez", "Joakim Nivre"], "venue": "In Proceedings of ACL", "citeRegEx": "G\u00f3mez.Rodr\u0131\u0301guez and Nivre.,? \\Q2010\\E", "shortCiteRegEx": "G\u00f3mez.Rodr\u0131\u0301guez and Nivre.", "year": 2010}, {"title": "Teaching machines to read and comprehend", "author": ["Karl Moritz Hermann", "Tomas Kocisky", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."], "venue": "Advances in Neural Information Processing Systems. pages 1693\u2013", "citeRegEx": "Hermann et al\\.,? 2015", "shortCiteRegEx": "Hermann et al\\.", "year": 2015}, {"title": "Data recombination for neural semantic parsing", "author": ["Robin Jia", "Percy Liang."], "venue": "Proceedings of ACL. pages 12\u201322. http://www.aclweb.org/anthology/P16-1002.", "citeRegEx": "Jia and Liang.,? 2016", "shortCiteRegEx": "Jia and Liang.", "year": 2016}, {"title": "An empirical exploration of recurrent network architectures", "author": ["Rafal Jozefowicz", "Wojciech Zaremba", "Ilya Sutskever."], "venue": "Proceedings of ICML. pages 2342\u20132350.", "citeRegEx": "Jozefowicz et al\\.,? 2015", "shortCiteRegEx": "Jozefowicz et al\\.", "year": 2015}, {"title": "Lexicalfunctional grammar: A formal system for grammatical representation", "author": ["Ronald M Kaplan", "Joan Bresnan."], "venue": "Formal Issues in LexicalFunctional Grammar pages 29\u2013130.", "citeRegEx": "Kaplan and Bresnan.,? 1982", "shortCiteRegEx": "Kaplan and Bresnan.", "year": 1982}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik P. Kingma", "Jimmy Ba."], "venue": "Proceedings of ICLR. http://arxiv.org/abs/1412.6980.", "citeRegEx": "Kingma and Ba.,? 2015", "shortCiteRegEx": "Kingma and Ba.", "year": 2015}, {"title": "Simple and accurate dependency parsing using bidirectional lstm feature representations", "author": ["Eliyahu Kiperwasser", "Yoav Goldberg."], "venue": "Transactions of the Association for Computational Linguistics 4:313\u2013327.", "citeRegEx": "Kiperwasser and Goldberg.,? 2016", "shortCiteRegEx": "Kiperwasser and Goldberg.", "year": 2016}, {"title": "Skip-thought vectors", "author": ["Ryan Kiros", "Yukun Zhu", "Ruslan R Salakhutdinov", "Richard Zemel", "Raquel Urtasun", "Antonio Torralba", "Sanja Fidler."], "venue": "Advances in neural information processing systems. pages 3294\u20133302.", "citeRegEx": "Kiros et al\\.,? 2015", "shortCiteRegEx": "Kiros et al\\.", "year": 2015}, {"title": "Towards a catalogue of linguistic graph banks", "author": ["Marco Kuhlmann", "Stephan Oepen."], "venue": "Computational Linguistics 42(4):819\u2013827.", "citeRegEx": "Kuhlmann and Oepen.,? 2016", "shortCiteRegEx": "Kuhlmann and Oepen.", "year": 2016}, {"title": "Distributed representations of sentences and documents", "author": ["Quoc V Le", "Tomas Mikolov."], "venue": "ICML. volume 14, pages 1188\u20131196.", "citeRegEx": "Le and Mikolov.,? 2014", "shortCiteRegEx": "Le and Mikolov.", "year": 2014}, {"title": "Two/too simple adaptations of word2vec for syntax problems", "author": ["Wang Ling", "Chris Dyer", "Alan W Black", "Isabel Trancoso."], "venue": "Proceedings of NAACL-HLT . pages 1299\u20131304. http://www.aclweb.org/anthology/N15-1142.", "citeRegEx": "Ling et al\\.,? 2015", "shortCiteRegEx": "Ling et al\\.", "year": 2015}, {"title": "Semeval-2016 task 8: Meaning representation parsing", "author": ["Jonathan May."], "venue": "Proceedings of SemEval. pages 1063\u20131073. http://www.aclweb.org/anthology/S16-1166.", "citeRegEx": "May.,? 2016", "shortCiteRegEx": "May.", "year": 2016}, {"title": "Neural shift-reduce ccg semantic parsing", "author": ["Dipendra Kumar Misra", "Yoav Artzi."], "venue": "Proceedings of EMNLP. Austin, Texas, pages 1775\u20131786. https://aclweb.org/anthology/D16-1183.", "citeRegEx": "Misra and Artzi.,? 2016", "shortCiteRegEx": "Misra and Artzi.", "year": 2016}, {"title": "Algorithms for deterministic incremental dependency parsing", "author": ["Joakim Nivre."], "venue": "Computational Linguistics 34(4):513\u2013553.", "citeRegEx": "Nivre.,? 2008", "shortCiteRegEx": "Nivre.", "year": 2008}, {"title": "Lingo redwoods", "author": ["Stephan Oepen", "Dan Flickinger", "Kristina Toutanova", "Christopher D. Manning."], "venue": "Research on Language and Computation 2(4):575\u2013596. https://doi.org/10.1007/s11168-0047430-4.", "citeRegEx": "Oepen et al\\.,? 2004", "shortCiteRegEx": "Oepen et al\\.", "year": 2004}, {"title": "Semeval 2015 task 18: Broad-coverage semantic dependency parsing", "author": ["Stephan Oepen", "Marco Kuhlmann", "Yusuke Miyao", "Daniel Zeman", "Silvie Cinkova", "Dan Flickinger", "Jan Hajic", "Zdenka Uresova."], "venue": "Proceedings of SemEval. pages 915\u2013926.", "citeRegEx": "Oepen et al\\.,? 2015", "shortCiteRegEx": "Oepen et al\\.", "year": 2015}, {"title": "Semeval 2014 task 8: Broad-coverage semantic dependency parsing", "author": ["Stephan Oepen", "Marco Kuhlmann", "Yusuke Miyao", "Daniel Zeman", "Dan Flickinger", "Jan Hajic", "Angelina Ivanova", "Yi Zhang."], "venue": "Proceedings of SemEval. pages 63\u201372.", "citeRegEx": "Oepen et al\\.,? 2014", "shortCiteRegEx": "Oepen et al\\.", "year": 2014}, {"title": "Discriminant-based MRS banking", "author": ["Stephan Oepen", "Jan Tore L\u00f8nning."], "venue": "Proceedings of the 5th International Conference on Language Resources and Evaluation. pages 1250\u20131255.", "citeRegEx": "Oepen and L\u00f8nning.,? 2006", "shortCiteRegEx": "Oepen and L\u00f8nning.", "year": 2006}, {"title": "The proposition bank: An annotated corpus of semantic roles", "author": ["Martha Palmer", "Daniel Gildea", "Paul Kingsbury."], "venue": "Computational linguistics 31(1):71\u2013 106.", "citeRegEx": "Palmer et al\\.,? 2005", "shortCiteRegEx": "Palmer et al\\.", "year": 2005}, {"title": "On the difficulty of training recurrent neural networks", "author": ["Razvan Pascanu", "Tomas Mikolov", "Yoshua Bengio."], "venue": "ICML (3) 28:1310\u20131318.", "citeRegEx": "Pascanu et al\\.,? 2013", "shortCiteRegEx": "Pascanu et al\\.", "year": 2013}, {"title": "Uofr at semeval-2016 task 8: Learning synchronous hyperedge replacement grammar for amr parsing", "author": ["Xiaochang Peng", "Daniel Gildea."], "venue": "Proceedings of SemEval-2016. pages 1185\u20131189. http://www.aclweb.org/anthology/S16-1183.", "citeRegEx": "Peng and Gildea.,? 2016", "shortCiteRegEx": "Peng and Gildea.", "year": 2016}, {"title": "Addressing the data sparsity issue in neural amr parsing", "author": ["Xiaochang Peng", "Chuan Wang", "Daniel Gildea", "Nianwen Xue."], "venue": "Proceedings of EACL. Preprint. http://www.cs.brandeis.edu/ cwang24/files/eacl17.pdf.", "citeRegEx": "Peng et al\\.,? 2017", "shortCiteRegEx": "Peng et al\\.", "year": 2017}, {"title": "Head-driven phrase structure grammar", "author": ["Carl Pollard", "Ivan A Sag."], "venue": "University of Chicago Press.", "citeRegEx": "Pollard and Sag.,? 1994", "shortCiteRegEx": "Pollard and Sag.", "year": 1994}, {"title": "Parsing English into abstract meaning representation using syntax-based machine translation", "author": ["Michael Pust", "Ulf Hermjakob", "Kevin Knight", "Daniel Marcu", "Jonathan May."], "venue": "Proceedings of EMNLP. Association for Computational", "citeRegEx": "Pust et al\\.,? 2015", "shortCiteRegEx": "Pust et al\\.", "year": 2015}, {"title": "Reasoning about entailment with neural attention", "author": ["Tim Rockt\u00e4schel", "Edward Grefenstette", "Karl Moritz Hermann", "Tom\u00e1\u0161 Ko\u010disk\u1ef3", "Phil Blunsom."], "venue": "arXiv preprint arXiv:1509.06664 .", "citeRegEx": "Rockt\u00e4schel et al\\.,? 2015", "shortCiteRegEx": "Rockt\u00e4schel et al\\.", "year": 2015}, {"title": "Shiftreduce dependency DAG parsing", "author": ["Kenji Sagae", "Jun\u2019ichi Tsujii"], "venue": "In Proceedings of Coling", "citeRegEx": "Sagae and Tsujii.,? \\Q2008\\E", "shortCiteRegEx": "Sagae and Tsujii.", "year": 2008}, {"title": "Online graph planarisation for synchronous parsing of semantic and syntactic dependencies", "author": ["Ivan Titov", "James Henderson", "Paola Merlo", "Gabriele Musillo."], "venue": "IJCAI. pages 1562\u20131567.", "citeRegEx": "Titov et al\\.,? 2009", "shortCiteRegEx": "Titov et al\\.", "year": 2009}, {"title": "Stochastic HPSG parse disambiguation using the redwoods corpus", "author": ["Kristina Toutanova", "Christopher D. Manning", "Dan Flickinger", "Stephan Oepen."], "venue": "Research on Language and Computation 3(1):83\u2013105.", "citeRegEx": "Toutanova et al\\.,? 2005", "shortCiteRegEx": "Toutanova et al\\.", "year": 2005}, {"title": "Pointer networks", "author": ["Oriol Vinyals", "Meire Fortunato", "Navdeep Jaitly."], "venue": "Advances in Neural Information Processing Systems 28. pages 2692\u2013 2700. http://papers.nips.cc/paper/5866-pointernetworks.pdf.", "citeRegEx": "Vinyals et al\\.,? 2015a", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Grammar as a foreign language", "author": ["Oriol Vinyals", "\u0141ukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton."], "venue": "Advances in Neural Information Processing Systems. pages 2755\u20132763.", "citeRegEx": "Vinyals et al\\.,? 2015b", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Camr at semeval2016 task 8: An extended transition-based amr parser", "author": ["Chuan Wang", "Sameer Pradhan", "Xiaoman Pan", "Heng Ji", "Nianwen Xue."], "venue": "Proceedings of SemEval. pages 1173\u2013 1178. http://www.aclweb.org/anthology/S16-1181.", "citeRegEx": "Wang et al\\.,? 2016", "shortCiteRegEx": "Wang et al\\.", "year": 2016}, {"title": "Boosting transition-based AMR parsing with refined actions and auxiliary analyzers", "author": ["Chuan Wang", "Nianwen Xue", "Sameer Pradhan."], "venue": "Proceedings of ACL (2). pages 857\u2013862. http://www.aclweb.org/anthology/P15-2141.pdf.", "citeRegEx": "Wang et al\\.,? 2015a", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "A transition-based algorithm for AMR parsing", "author": ["Chuan Wang", "Nianwen Xue", "Sameer Pradhan."], "venue": "Proceedings of NAACL 2015. pages 366\u2013375. http://aclweb.org/anthology/N/N15/N151040.pdf.", "citeRegEx": "Wang et al\\.,? 2015b", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "Transition-Based Parsing for Large-Scale Head-Driven Phrase Structure Grammars", "author": ["Gisle Ytrest\u00f8l."], "venue": "Ph.D. thesis, University of Oslo.", "citeRegEx": "Ytrest\u00f8l.,? 2012", "shortCiteRegEx": "Ytrest\u00f8l.", "year": 2012}, {"title": "Large-scale corpus-driven PCFG approximation of an HPSG", "author": ["Yi Zhang", "Hans-Ulrich Krieger."], "venue": "Proceedings of the 12th international conference on parsing technologies. Association for Computational Linguistics, pages 198\u2013208.", "citeRegEx": "Zhang and Krieger.,? 2011", "shortCiteRegEx": "Zhang and Krieger.", "year": 2011}, {"title": "Efficiency in unification-based n-best parsing", "author": ["Yi Zhang", "Stephan Oepen", "John Carroll."], "venue": "Proceedings of IWPT . pages 48\u201359. http://www.aclweb.org/anthology/W/W07/W072207.", "citeRegEx": "Zhang et al\\.,? 2007", "shortCiteRegEx": "Zhang et al\\.", "year": 2007}, {"title": "Robust parsing, meaning composition, and evaluation: Integrating grammar approximation, default unification, and elementary semantic dependencies", "author": ["Yi Zhang", "Stephan Oepen", "Rebecca Dridan", "Dan Flickinger", "Hans-Ulrich Krieger."], "venue": "Un-", "citeRegEx": "Zhang et al\\.,? 2014", "shortCiteRegEx": "Zhang et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 25, "context": "2015), question answering (Hermann et al., 2015) and textual entailment (Rockt\u00e4schel et al.", "startOffset": 26, "endOffset": 48}, {"referenceID": 48, "context": ", 2015) and textual entailment (Rockt\u00e4schel et al., 2015).", "startOffset": 31, "endOffset": 57}, {"referenceID": 22, "context": "which serves as the semantic representation of the English Resource Grammar (ERG) (Flickinger, 2000).", "startOffset": 82, "endOffset": 100}, {"referenceID": 51, "context": "forming disambiguation with a maximum entropy model (Toutanova et al., 2005; Zhang et al., 2007); this approach has high precision but incomplete coverage.", "startOffset": 52, "endOffset": 96}, {"referenceID": 59, "context": "forming disambiguation with a maximum entropy model (Toutanova et al., 2005; Zhang et al., 2007); this approach has high precision but incomplete coverage.", "startOffset": 52, "endOffset": 96}, {"referenceID": 41, "context": "We develop parsers for two graph-based conversions of MRS, Elementary Dependency Structure (EDS) (Oepen and L\u00f8nning, 2006) and Dependency MRS (DMRS) (Copestake, 2009), of which the latter is inter-convertible with MRS.", "startOffset": 97, "endOffset": 122}, {"referenceID": 9, "context": "We develop parsers for two graph-based conversions of MRS, Elementary Dependency Structure (EDS) (Oepen and L\u00f8nning, 2006) and Dependency MRS (DMRS) (Copestake, 2009), of which the latter is inter-convertible with MRS.", "startOffset": 149, "endOffset": 166}, {"referenceID": 2, "context": "Abstract Meaning Representation (AMR) (Banarescu et al., 2013) is a graph-based semantic representation that shares the goals of MRS.", "startOffset": 38, "endOffset": 62}, {"referenceID": 21, "context": "of AMR parsers have been developed (Flanigan et al., 2014; Wang et al., 2015b; Artzi et al., 2015; Damonte et al., 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al.", "startOffset": 35, "endOffset": 120}, {"referenceID": 56, "context": "of AMR parsers have been developed (Flanigan et al., 2014; Wang et al., 2015b; Artzi et al., 2015; Damonte et al., 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al.", "startOffset": 35, "endOffset": 120}, {"referenceID": 1, "context": "of AMR parsers have been developed (Flanigan et al., 2014; Wang et al., 2015b; Artzi et al., 2015; Damonte et al., 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al.", "startOffset": 35, "endOffset": 120}, {"referenceID": 15, "context": "of AMR parsers have been developed (Flanigan et al., 2014; Wang et al., 2015b; Artzi et al., 2015; Damonte et al., 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al.", "startOffset": 35, "endOffset": 120}, {"referenceID": 2, "context": ", 2017), but corpora are still under active development and low inter-annotator agreement places on upper bound of 83% F1 on expected parser performance (Banarescu et al., 2013).", "startOffset": 153, "endOffset": 177}, {"referenceID": 6, "context": "We apply our model to AMR parsing by introducing structure that is present explicitly in MRS but not in AMR (Buys and Blunsom, 2017).", "startOffset": 108, "endOffset": 132}, {"referenceID": 18, "context": "Parsers based on RNNs have achieved state-ofthe-art performance for dependency parsing (Dyer et al., 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al.", "startOffset": 87, "endOffset": 138}, {"referenceID": 30, "context": "Parsers based on RNNs have achieved state-ofthe-art performance for dependency parsing (Dyer et al., 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al.", "startOffset": 87, "endOffset": 138}, {"referenceID": 53, "context": ", 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al., 2015b; Dyer et al., 2016; Cross and Huang, 2016b).", "startOffset": 65, "endOffset": 131}, {"referenceID": 19, "context": ", 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al., 2015b; Dyer et al., 2016; Cross and Huang, 2016b).", "startOffset": 65, "endOffset": 131}, {"referenceID": 14, "context": ", 2015; Kiperwasser and Goldberg, 2016) and constituency parsing (Vinyals et al., 2015b; Dyer et al., 2016; Cross and Huang, 2016b).", "startOffset": 65, "endOffset": 131}, {"referenceID": 32, "context": "Sentence meaning is represented with rooted, labelled, connected, directed graphs (Kuhlmann and Oepen, 2016).", "startOffset": 82, "endOffset": 108}, {"referenceID": 12, "context": "Minimal Recursion Semantics (MRS) is a framework for computational semantics that can be used for parsing or generation (Copestake et al., 2005).", "startOffset": 120, "endOffset": 144}, {"referenceID": 46, "context": "MRS was designed to be integrated with feature-based grammars such as Head-driven Phrase Structure Grammar (HPSG) (Pollard and Sag, 1994) or Lexical Functional Grammar (LFG) (Kaplan and Bresnan, 1982).", "startOffset": 114, "endOffset": 137}, {"referenceID": 28, "context": "MRS was designed to be integrated with feature-based grammars such as Head-driven Phrase Structure Grammar (HPSG) (Pollard and Sag, 1994) or Lexical Functional Grammar (LFG) (Kaplan and Bresnan, 1982).", "startOffset": 174, "endOffset": 200}, {"referenceID": 22, "context": "MRS has been implement the English Resource Grammar (ERG) (Flickinger, 2000), a broad-coverage high-precision HPSG grammar.", "startOffset": 58, "endOffset": 76}, {"referenceID": 9, "context": "Copestake (2009) extended this conversion to avoid information loss,", "startOffset": 0, "endOffset": 17}, {"referenceID": 10, "context": "The resulting representation, Dependency MRS (DMRS), can be converted back to the original MRS, or used directly in MRS-based applications (Copestake et al., 2016).", "startOffset": 139, "endOffset": 163}, {"referenceID": 2, "context": "AMR (Banarescu et al., 2013) graphs can be represented in the same framework, despite a number of linguistic differences with MRS.", "startOffset": 4, "endOffset": 28}, {"referenceID": 42, "context": "AMR predicates are based on PropBank (Palmer et al., 2005), annotated as lemmas plus sense labels, but they form only a subset of concepts.", "startOffset": 37, "endOffset": 58}, {"referenceID": 53, "context": "Variants of this approach have been proposed for neural constituency parsing (Vinyals et al., 2015b), logical form pre-", "startOffset": 77, "endOffset": 100}, {"referenceID": 16, "context": "diction (Dong and Lapata, 2016; Jia and Liang, 2016) and AMR parsing (Barzdins and Gosko, 2016; Peng et al.", "startOffset": 8, "endOffset": 52}, {"referenceID": 26, "context": "diction (Dong and Lapata, 2016; Jia and Liang, 2016) and AMR parsing (Barzdins and Gosko, 2016; Peng et al.", "startOffset": 8, "endOffset": 52}, {"referenceID": 3, "context": "diction (Dong and Lapata, 2016; Jia and Liang, 2016) and AMR parsing (Barzdins and Gosko, 2016; Peng et al., 2017).", "startOffset": 69, "endOffset": 114}, {"referenceID": 45, "context": "diction (Dong and Lapata, 2016; Jia and Liang, 2016) and AMR parsing (Barzdins and Gosko, 2016; Peng et al., 2017).", "startOffset": 69, "endOffset": 114}, {"referenceID": 37, "context": "Transition-based parsing (Nivre, 2008) has been used extensively to predict dependency graphs in-", "startOffset": 25, "endOffset": 38}, {"referenceID": 49, "context": "We apply a variant of the arc-eager transition system that has been proposed for graph (as opposed to tree) parsing (Sagae and Tsujii, 2008; Titov et al., 2009; G\u00f3mez-Rodr\u0131\u0301guez and Nivre, 2010) to derive a transition-based parser for", "startOffset": 116, "endOffset": 194}, {"referenceID": 50, "context": "We apply a variant of the arc-eager transition system that has been proposed for graph (as opposed to tree) parsing (Sagae and Tsujii, 2008; Titov et al., 2009; G\u00f3mez-Rodr\u0131\u0301guez and Nivre, 2010) to derive a transition-based parser for", "startOffset": 116, "endOffset": 194}, {"referenceID": 24, "context": "We apply a variant of the arc-eager transition system that has been proposed for graph (as opposed to tree) parsing (Sagae and Tsujii, 2008; Titov et al., 2009; G\u00f3mez-Rodr\u0131\u0301guez and Nivre, 2010) to derive a transition-based parser for", "startOffset": 116, "endOffset": 194}, {"referenceID": 15, "context": "Damonte et al. (2017) proposed an arc-eager AMR parser, but", "startOffset": 0, "endOffset": 22}, {"referenceID": 20, "context": ", 2014) to tokenize and lemmatize sentences, and tag tokens with the Stanford Named Entity Recognizer (Finkel et al., 2005).", "startOffset": 102, "endOffset": 123}, {"referenceID": 42, "context": "The lexicon is restricted to Propbank (Palmer et al., 2005) predicates; for other concepts we extract a lexicon from the training data.", "startOffset": 38, "endOffset": 59}, {"referenceID": 27, "context": "We use a standard LSTM architecture without peephole connections (Jozefowicz et al., 2015).", "startOffset": 65, "endOffset": 90}, {"referenceID": 52, "context": "The alignment is predicted with a pointer network (Vinyals et al., 2015a).", "startOffset": 50, "endOffset": 73}, {"referenceID": 28, "context": "This approach is similar to the features proposed by Kiperwasser and Goldberg (2016) and Cross and Huang (2016a) for dependency parsing, although they do not use RNN decoders.", "startOffset": 53, "endOffset": 85}, {"referenceID": 13, "context": "This approach is similar to the features proposed by Kiperwasser and Goldberg (2016) and Cross and Huang (2016a) for dependency parsing, although they do not use RNN decoders.", "startOffset": 89, "endOffset": 113}, {"referenceID": 5, "context": "Our implementation of the stack-based model enables batch processing in static computation graphs, similar to Bowman et al. (2016). We maintain a stack of alignment indexes for each element in the batch, which is updated inside the computa-", "startOffset": 110, "endOffset": 131}, {"referenceID": 22, "context": "case the ERG (Flickinger, 2000).", "startOffset": 13, "endOffset": 31}, {"referenceID": 51, "context": "Maximum entropy models are used to score the derivations in order to find the most likely parse (Toutanova et al., 2005).", "startOffset": 96, "endOffset": 120}, {"referenceID": 8, "context": "This approach is implemented in the PET (Callmeier, 2000) and ACE2 parsers.", "startOffset": 40, "endOffset": 57}, {"referenceID": 58, "context": "One proposed approach learns a PCFG grammar to approximate the HPSG derivations (Zhang and Krieger, 2011; Zhang et al., 2014).", "startOffset": 80, "endOffset": 125}, {"referenceID": 60, "context": "One proposed approach learns a PCFG grammar to approximate the HPSG derivations (Zhang and Krieger, 2011; Zhang et al., 2014).", "startOffset": 80, "endOffset": 125}, {"referenceID": 8, "context": "This approach is implemented in the PET (Callmeier, 2000) and ACE2 parsers. There have also been some efforts to develop robust MRS parsers. One proposed approach learns a PCFG grammar to approximate the HPSG derivations (Zhang and Krieger, 2011; Zhang et al., 2014). MRS is then extracted with robust unification to compose potentially incompatible feature structures, although that still fails for a small proportion of sentences. The model is trained on a large corpus of Wikipedia text parsed with the grammar-based parser. Ytrest\u00f8l (2012) proposed a transition-based approach to HPSG parsing that produces derivations from which both syntactic and semantic (MRS) parses can be extracted.", "startOffset": 41, "endOffset": 544}, {"referenceID": 21, "context": "Flanigan et al. (2014) proposed a twostage parser that first predicts concepts or subgraphs corresponding to sentence segments, and then parses these concepts into a graph structure.", "startOffset": 0, "endOffset": 23}, {"referenceID": 1, "context": "(2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al., 2015; Misra and Artzi, 2016).", "startOffset": 133, "endOffset": 176}, {"referenceID": 36, "context": "(2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al., 2015; Misra and Artzi, 2016).", "startOffset": 133, "endOffset": 176}, {"referenceID": 43, "context": "Pust et al. (2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al.", "startOffset": 0, "endOffset": 19}, {"referenceID": 1, "context": "(2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al., 2015; Misra and Artzi, 2016). Recently Damonte et al. (2017) and Peng et al.", "startOffset": 134, "endOffset": 209}, {"referenceID": 1, "context": "(2015) proposed a parser based on syntaxbased machine translation (MT), while AMR has also been integrated into CCG Semantic Parsing (Artzi et al., 2015; Misra and Artzi, 2016). Recently Damonte et al. (2017) and Peng et al. (2017) proposed AMR parsers based on neural networks.", "startOffset": 134, "endOffset": 232}, {"referenceID": 23, "context": "DeepBank (Flickinger et al., 2012) is an HPSG and MRS annotation of the Penn Treebank Wall Street Journal (WSJ) corpus.", "startOffset": 9, "endOffset": 34}, {"referenceID": 38, "context": "It was developed following an approach known as dynamic treebanking (Oepen et al., 2004) that couples treebank annotation with grammar development, in this case", "startOffset": 68, "endOffset": 88}, {"referenceID": 4, "context": "71 for AMR (Bender et al., 2015).", "startOffset": 11, "endOffset": 32}, {"referenceID": 35, "context": "ing Shared Task (May, 2016).", "startOffset": 16, "endOffset": 27}, {"referenceID": 21, "context": "We obtain alignments using the rule-based JAMR aligner (Flanigan et al., 2014).", "startOffset": 55, "endOffset": 78}, {"referenceID": 7, "context": "The Smatch metric (Cai and Knight, 2013), proposed for evaluating AMR graphs, also measures graph overlap, but does not rely on sentence alignments to determine the correspondences between graph nodes.", "startOffset": 18, "endOffset": 40}, {"referenceID": 29, "context": "For training we use Adam (Kingma and Ba, 2015) with learning rate 0.", "startOffset": 25, "endOffset": 46}, {"referenceID": 43, "context": "0 (Pascanu et al., 2013).", "startOffset": 2, "endOffset": 24}, {"referenceID": 34, "context": "with pre-trained order-sensitive embeddings (Ling et al., 2015).", "startOffset": 44, "endOffset": 63}, {"referenceID": 32, "context": "An EDS corpus which consists of about 95% of the DeepBank data has also been released6, with the goal of enabling comparison with other semantic graph parsing formalisms, including CCG dependencies and Prague Semantic Dependencies, on the same data set (Kuhlmann and Oepen, 2016).", "startOffset": 253, "endOffset": 279}, {"referenceID": 15, "context": "However, concept prediction remains the most important weakness of the model; Damonte et al. (2017) reports that state-of-the-art AMR parsers score 83% on concept prediction.", "startOffset": 78, "endOffset": 100}, {"referenceID": 21, "context": "best neural model outperforms the baseline JAMR parser (Flanigan et al., 2014), but still lags behind the performance of state-of-the-art AMR parsers such as CAMR (Wang et al.", "startOffset": 55, "endOffset": 78}, {"referenceID": 54, "context": ", 2014), but still lags behind the performance of state-of-the-art AMR parsers such as CAMR (Wang et al., 2016) and AMR Eager (Damonte et al.", "startOffset": 92, "endOffset": 111}, {"referenceID": 15, "context": ", 2016) and AMR Eager (Damonte et al., 2017).", "startOffset": 22, "endOffset": 44}, {"referenceID": 3, "context": "Our attention-based encoder-decoder model already outperforms previous sequence-to-sequence AMR parsers (Barzdins and Gosko, 2016; Peng et al., 2017), and the arc-eager model boosts accuracy further.", "startOffset": 104, "endOffset": 149}, {"referenceID": 45, "context": "Our attention-based encoder-decoder model already outperforms previous sequence-to-sequence AMR parsers (Barzdins and Gosko, 2016; Peng et al., 2017), and the arc-eager model boosts accuracy further.", "startOffset": 104, "endOffset": 149}, {"referenceID": 15, "context": "54 Damonte et al. (2017) 64", "startOffset": 3, "endOffset": 25}, {"referenceID": 3, "context": "(2017) 52 Barzdins and Gosko (2016) 43.", "startOffset": 10, "endOffset": 36}, {"referenceID": 44, "context": "model (Peng and Gildea, 2016) which is comparable as it does not make extensive use of external resources.", "startOffset": 6, "endOffset": 29}], "year": 2017, "abstractText": "Parsing sentences to linguisticallyexpressive semantic representations is a key goal of Natural Language Processing. Yet statistical parsing has focussed almost exclusively on bilexical dependencies or domain-specific logical forms. We propose a neural encoder-decoder transition-based parser which is the first full-coverage semantic graph parser for Minimal Recursion Semantics (MRS). The model architecture uses stack-based embedding features, predicting graphs jointly with unlexicalized predicates and their token alignments. Our parser is more accurate than attention-based baselines on MRS, and on an additional Abstract Meaning Representation (AMR) benchmark, and GPU batch processing makes it an order of magnitude faster than a high-precision grammar-based parser. Further, the 86.69% Smatch score of our MRS parser is higher than the upper-bound on AMR parsing, making MRS an attractive choice as a semantic representation.1", "creator": "LaTeX with hyperref package"}}}