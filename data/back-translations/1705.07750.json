{"id": "1705.07750", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-May-2017", "title": "Quo Vadis, Action Recognition? A New Model and the Kinetics Dataset", "abstract": "The lack of videos in the current action classification datasets (UCF-101 and HMDB-51) has made it difficult to identify good video architectures, as most methods achieve similar performance on existing small benchmarks. This paper evaluates state-of-the-art architectures in the light of the new Kinetics Human Action Video dataset. Kinetics has two orders of magnitude more data, with 400 action classes and over 400 clips per class, and was collected from realistic, challenging YouTube videos. We provide an analysis of how current architectures evolve in the task of action classification on this dataset, and how performance improves for the smaller benchmark datasets after pre-training on kinetics.", "histories": [["v1", "Mon, 22 May 2017 13:57:53 GMT  (3229kb,D)", "http://arxiv.org/abs/1705.07750v1", "To appear at CVPR 2017"], ["v2", "Thu, 20 Jul 2017 15:24:03 GMT  (3228kb,D)", "http://arxiv.org/abs/1705.07750v2", "Added results on the full Kinetics dataset test set. Fixed typo in table 4"]], "COMMENTS": "To appear at CVPR 2017", "reviews": [], "SUBJECTS": "cs.CV cs.LG", "authors": ["joao carreira", "andrew zisserman"], "accepted": false, "id": "1705.07750"}, "pdf": {"name": "1705.07750.pdf", "metadata": {"source": "CRF", "title": "Quo Vadis, Action Recognition? A New Model and the Kinetics Dataset", "authors": ["Jo\u00e3o Carreira", "Andrew Zisserman"], "emails": ["joaoluis@google.com", "zisserman@google.com"], "sections": [{"heading": null, "text": "We also introduce a new Two-Stream Inflated 3D ConvNet (I3D) that is based on 2D ConvNet inflation: filters and pooling kernels of very deep image classification ConvNets are expanded into 3D, making it possible to learn seamless spatio-temporal feature extractors from video while leveraging successful ImageNet architecture designs and even their parameters. We show that, after pre-training on Kinetics, I3D models considerably improve upon the state-of-the-art in action classification, reaching 80.7% on HMDB-51 and 98.0% on UCF-101."}, {"heading": "1. Introduction", "text": "One of the unexpected benefits of the ImageNet challenge has been the discovery that deep architectures trained on the 1000 images of 1000 categories, can be used for other tasks and in other domains. One of the early examples of this was using the fc7 features from a network trained on ImageNet for the PASCAL VOC classification and detection challenge [10]. Furthermore, improvements in the deep architecture, changing from AlexNet to VGG-16, immediately fed through to commensurate improvements in the PASCAL VOC performance [23]. Since then, there have been numerous examples of ImageNet trained architectures warm starting or sufficing entirely for other tasks, e.g. seg-\nmentation, depth prediction, pose estimation, action classification.\nIn the video domain, it is an open question whether training an action classification network on a sufficiently large dataset, will give a similar boost in performance when applied to a different temporal task or dataset. The challenges of building video datasets has meant that most popular benchmarks for action recognition are small, having on the order of 10k videos.\nIn this paper we aim to provide an answer to this question using the new Kinetics Human Action Video Dataset [16], which is two orders of magnitude larger than previous datasets, HMDB-51 [18] and UCF-101 [27]. Kinetics has\n1\nar X\niv :1\n70 5.\n07 75\n0v 1\n[ cs\n.C V\n] 2\n2 M\nay 2\n01 7\n400 human action classes with more than 400 examples for each class, each from a unique YouTube video.\nOur experimental strategy is to reimplement a number of representative neural network architectures from the literature, and then analyze their transfer behavior by first pretraining each one on Kinetics and then fine-tuning each on HMDB-51 and UCF-101. The results suggest that there is always a boost in performance by pre-training, but the extent of the boost varies significantly with the type of architecture. Based on these findings, we introduce a new model that has the capacity to take advantage of pre-training on Kinetics, and can achieves a high performance. The model termed a \u201cTwo-Stream Inflated 3D ConvNets\u201d (I3D), builds upon state-of-the-art image classification architectures, but inflates their filters and pooling kernels (and optionally their parameters) into 3D, leading to very deep, naturally spatiotemporal classifiers. An I3D model based on Inceptionv1 [13] obtains performance far exceeding the state-of-theart, after pre-training on Kinetics.\nIn our model comparisons, we did not consider more classic approaches such as bag-of-visual-words representations [6, 19, 21, 30]. However, the Kinetics dataset is publicly available, so others can use it for such comparisons.\nThe next section outlines the set of implemented action classification models. Section 3 gives an overview of the Kinetics dataset. Section 4 reports the performance of models on previous benchmarks and on Kinetics, and section 5 studies how well the features learned on Kinetics transfer to different datasets. The paper concludes with a discussion of the results."}, {"heading": "2. Action Classification Architectures", "text": "While the development of image representation architectures has matured quickly in recent years, there is still no clear front running architecture for video. Some of the major differences in current video architectures are whether the convolutional and layers operators use 2D (image-based) or 3D (video-based) kernels; whether the input to the network is just an RGB video or it also includes pre-computed optical flow; and, in the case of 2D ConvNets, how information is propagated across frames, which can be done either using temporally-recurrent layers such as LSTMs, or feature aggregation over time.\nIn this paper we compare and study a subset of models that span most of this space. Among 2D ConvNet methods, we consider ConvNets with LSTMs on top [5, 34], and two-stream networks with two different types of stream fusion [8, 25]. We also consider a 3D ConvNet [14, 28]: C3D [29].\nAs the main technical contribution, we introduce TwoStream Inflated 3D ConvNets (I3D). Due to the highdimensionality of their parameterization and the lack of labeled video data, previous 3D ConvNets have been rela-\ntively shallow (up to 8 layers). Here we make the observation that very deep image classification networks, such as Inception [13], VGG-16 [26] and ResNet [12], can be trivially inflated into spatio-temporal feature extractors, and that their pre-trained weights provide a valuable initialization. We also find that a two-stream configuration is still useful.\nA graphical overview of the five types of architectures we evaluate is shown in figure 2 and the specification of their temporal interfaces is given in table 1.\nMany of these models (all but C3D) have an Imagenet pre-trained model as a subcomponent. Our experimental strategy assumes a common ImageNet pre-trained image classification architecture as back bone, and for this we chose Inception-v1 with batch normalization [13], and morph it in different ways. The expectation is that with this back bone in common, we will be able to tease apart those changes that benefit action classification the most."}, {"heading": "2.1. The Old I: ConvNet+LSTM", "text": "The high performance of image classification networks makes it appealing to try to reuse them with as minimal change as possible for video. This can be achieved by using them to extract features independently from each frame then pooling their predictions across the whole video [15]. This is in the spirit of bag of words image modeling approaches [19, 21, 30]; but while convenient in practice, it has the issue of entirely ignoring temporal structure (e.g. models can\u2019t potentially distinguish opening from closing a door).\nIn theory, a more satisfying approach is to add a recurrent layer to the model [5, 34], such as an LSTM, which can encode state, and capture temporal ordering and long range dependencies. We position an LSTM layer with batch normalization (as proposed by Cooijmans et al. [4]) after the last average pooling layer of Inception-V1, with 512 hidden units. A fully connected layer is added on top for the classifier.\nThe model is trained using cross-entropy losses on the outputs at all time steps. During testing we consider only the output on the last frame. Input video frames are subsampled by keeping one out of every 5, from an original 25 frames-per-second stream. The full temporal footprint of all models is given in table 1."}, {"heading": "2.2. The Old II: 3D ConvNets", "text": "3D ConvNets seem like a natural approach to video modeling, and are just like standard convolutional networks, but with spatio-temporal filters. They have been explored several times, previously [14, 28, 29]. They have a very important characteristic: they directly create hierarchical representations of spatio-temporal data. One issue with these models is that they have many more parameters than 2D ConvNets because of the additional kernel dimension, and\nthis makes them harder to train. Also, they seem to preclude the benefits of ImageNet pre-training, and consequently previous work has defined relatively shallow custom architectures and trained them from scratch [14, 15, 28, 29]. Results on benchmarks have shown promise but have not been competitive with state-of-the-art, making this type of models a good candidate for evaluation on our larger dataset.\nFor this paper we implemented a small variation of C3D [29], which has 8 convolutional layers, 5 pooling layers and 2 fully connected layers at the top. The inputs to the model are short 16-frame clips with 112 \u00d7 112-pixel crops as in the original implementation. Differently from [29] we used batch normalization after all convolutional and fully connected layers. Another difference to the original model is in the first pooling layer, we use a temporal stride of 2 instead of 1, which reduces the memory footprint and allows for bigger batches \u2013 this was important for batch normalization (especially after the fully connected layers, where there is no weight tying). Using this stride we were able to train with 15 videos per batch per GPU using standard K40 GPUs."}, {"heading": "2.3. The Old III: Two-Stream Networks", "text": "LSTMs on features from the last layers of ConvNets can model high-level variation, but may not be able to capture fine low-level motion which is critical in many cases. It is also expensive to train as it requires unrolling the network through multiple frames for backpropagation-through-time.\nA different, very practical approach, introduced by Simonyan and Zisserman [25], models short temporal snapshots of videos by averaging the predictions from a single RGB frame and a stack of 10 externally computed optical\nflow frames, after passing them through two replicas of an ImageNet pre-trained ConvNet. The flow stream has an adapted input convolutional layer with twice as many input channels as flow frames (because flow has two channels, horizontal and vertical), and at test time multiple snapshots are sampled from the video and the action prediction is averaged. This was shown to get very high performance on existing benchmarks, while being very efficient to train and test.\nA recent extension [8] fuses the spatial and flow streams after the last network convolutional layer, showing some improvement on HMDB while requiring less test time augmentation (snapshot sampling). Our implementation follows this paper approximately using Inception-V1. The inputs to the network are 5 consecutive RGB frames sampled 10 frames apart, as well as the corresponding optical flow snippets. The spatial and motion features before the last average pooling layer of Inception-V1 (5 \u00d7 7 \u00d7 7 feature grids, corresponding to time, x and y dimensions) are passed through a 3\u00d7 3\u00d7 3 3D convolutional layer with 512 output channels, followed by a 3 \u00d7 3 \u00d7 3 3D max-pooling layer and through a final fully connected layer. The weights of these new layers are initialized with Gaussian noise.\nBoth models, the original two-stream and the 3D fused version, are trained end-to-end (including the two-stream averaging process in the original model)."}, {"heading": "2.4. The New: Two-Stream Inflated 3D ConvNets", "text": "With this architecture, we show how 3D ConvNets can benefit from ImageNet 2D ConvNet designs and, optionally, from their learned parameters. We also adopt a twostream configuration here \u2013 it will be shown in section 4\nthat while 3D ConvNets can directly learn about temporal patterns from an RGB stream, their performance can still be greatly improved by including an optical-flow stream.\nInflating 2D ConvNets into 3D. A number of very successful image classification architectures have been developed over the years, in part through painstaking trial and error. Instead of repeating the process for spatio-temporal models we propose to simply convert successful image (2D) classification models into 3D ConvNets. This can be done by starting with a 2D architecture, and inflating all the filters and pooling kernels \u2013 endowing them with an additional temporal dimension. Filters are typically square and we just make them cubic \u2013 N \u00d7N filters become N \u00d7N \u00d7N .\nBootstrapping 3D filters from 2D Filters. Besides the architecture, one may also want to bootstrap parameters from the pre-trained ImageNet models. To do this, we observe that an image can be converted into a (boring) video by copying it repeatedly into a video sequence. The 3D models can then be implicitly pre-trained on ImageNet, by satisfying what we call the boring-video fixed point: the pooled activations on a boring video should be the same as on the original single-image input. This can be achieved, thanks to linearity, by repeating the weights of the 2D filters N times along the time dimension, and rescaling them by dividing by N . This ensures that the convolutional filter response is the same. Since the outputs of convolutional layers for boring videos are constant in time, the outputs of pointwise non-linearity layers and average and max-pooling layers are the same as for the 2D case, and hence the overall network response respects the boring-video fixed point.\nPacing receptive field growth in space, time and network depth. The boring video fixed-point leaves ample freedom on how to inflate pooling operators along the time dimension and on how to set convolutional/pooling temporal stride \u2013 these are the primary factors that shape the size of feature receptive fields. Virtually all image models treat the two spatial dimensions (horizontal and vertical) equally \u2013 pooling kernels and strides are the same. This is quite natural and means that features deeper in the networks are equally affected by image locations increasingly far away in both dimensions. A symmetric receptive field is however not necessarily optimal when also considering time \u2013 this should depend on frame rate and image dimensions. If it grows too quickly in time relative to space, it may conflate edges from different objects breaking early feature detection, while if it grows too slowly, it may not capture scene dynamics well.\nIn Inception-v1, the first convolutional layer has stride 2, then there are four max-pooling layers with stride 2 and a 7 \u00d7 7 average-pooling layer preceding the last linear classification layer, besides the max-pooling layers in parallel\nInception branches. In our experiments the input videos were processed at 25 frames per second; we found it helpful to not perform temporal pooling in the first two maxpooling layers (by using 1 \u00d7 3 \u00d7 3 kernels and stride 1 in time), while having symmetric kernels and strides in all other max-pooling layers. The final average pooling layer uses a 2\u00d77\u00d77 kernel. The overall architecture is shown in fig. 3. We train the model using 64-frame snippets and test using the whole videos, averaging predictions temporally.\nTwo 3D Streams. While a 3D ConvNet should be able to learn motion features from RGB inputs directly, it still performs pure feedforward computation, whereas optical flow algorithms are in some sense recurrent (e.g. they perform iterative optimization for the flow fields). Perhaps because of this lack of recurrence, experimentally we still found it valuable to have a two-stream configuration \u2013 shown in fig. 2, e) \u2013 with one I3D network trained on RGB inputs, and another on flow inputs which carry optimized, smooth flow information. We trained the two networks separately and averaged their predictions at test time."}, {"heading": "2.5. Implementation Details", "text": "All models but the C3D-like 3D ConvNet use ImageNetpretrained Inception-V1 [13] as base network. For all architectures we follow each convolutional layer by a batch normalization [13] layer and a ReLU activation function, except for the last convolutional layers which produce the class scores for each network.\nTraining on videos used standard SGD with momentum set to 0.9 in all cases, with synchronous parallelization across 32 GPUs for all models except the 3D ConvNets which receive a large number of input frames and hence require more GPUs to form large batches \u2013 we used 64 GPUs for these. We trained models on miniKinetics for up to 35k steps, and for 110k steps on Kinetics, with a 10x reduction of learning rate when validation loss saturated. We tuned the learning rate hyperparameter on the validation set of miniKinetics. Models were trained for up to 5k steps on UCF-101 and HMDB-51 using a similar learning rate adaptation procedure as for Kinetics but using just 16 GPUs. All the models were implemented in TensorFlow [1].\nData augmentation is known to be of crucial importance for the performance of deep architectures. During training we used random cropping both spatially \u2013 resizing the smaller video side to 256 pixels, then randomly cropping a 224 \u00d7 224 patch \u2013 and temporally, when picking the starting frame among those early enough to guarantee a desired number of frames. For shorter videos, we looped the video as many times as necessary to satisfy each model\u2019s input interface. We also applied random left-right flipping consistently for each video during training. During test time the models are applied convolutionally over the whole video\ntaking 224 \u00d7 224 center crops, and the predictions are averaged. We briefly tried spatially-convolutional testing on the 256 \u00d7 256 videos, but did not observe improvement. Better performance could be obtained by also considering left-right flipped videos at test time and by adding additional augmentation, such as photometric, during training. We leave this to future work.\nWe computed optical flow with a TV-L1 algorithm [35]."}, {"heading": "3. The Kinetics Human Action Video Dataset", "text": "The Kinetics dataset is focused on human actions (rather than activities or events). The list of action classes covers: Person Actions (singular), e.g. drawing, drinking, laughing, punching; Person-Person Actions, e.g. hugging, kissing, shaking hands; and, Person-Object Actions, e.g. opening presents, mowing lawn, washing dishes. Some actions are fine grained and require temporal reasoning to distinguish, for example different types of swimming. Other actions require more emphasis on the object to distinguish, for\nexample playing different types of wind instruments. The dataset has 400 human action classes, with 400 or more clips for each class, each from a unique video. The clips last around 10s, and there are no untrimmed videos. The test set consists of 100 clips for each class. A full description of the dataset and how it was built is given in [16].\nFor most of the experiments in this paper we use a smaller dataset than the full Kinetics, called miniKinetics. This is an early version of the dataset having only 213 classes with a total of 120k clips across three splits, one for training with 150\u20131000 clips per class, one for validation with 25 clips per class and one for testing with 75 clips per class.\nMiniKinetics enabled faster experimentation, and was available before the full Kinetics dataset."}, {"heading": "4. Experimental Comparison of Architectures", "text": "In this section we compare the performance of the five architectures described in section 2 whilst varying the dataset\nused for training and testing.\nTable 2 shows the classification accuracy when training and testing on either UCF-101, HMDB-51 or miniKinetics. We test on the split 1 test sets of UCF-101 and HMDB-51 and on the held-out test set of miniKinetics. There are several noteworthy observations. First, our new I3D models do best in all datasets, with either RGB, flow, or RGB+flow modalities. This is interesting, given its very large number of parameters and that UCF-101 and HMDB-51 are so small, and shows that the benefits of ImageNet pre-training can extend to 3D ConvNets.\nSecond, the performance of all models is far lower on miniKinetics than on UCF-101, an indication of the different levels of difficulty of the two datasets. It is however higher than on HMDB-51; this may be in part due to lack of training data in HMDB-51 but also because this dataset was purposefully built to be hard: many clips have different actions in the exact same scene (e.g. \u201cdrawing sword\u201d examples are taken from same videos as \u201csword\u201d and \u201csword exercise\u201d). Third, the ranking of the different architectures is mostly consistent. Fourth, the LSTM and 3D-ConvNet models are much more competitive on miniKinetics than on the smaller datasets; these models seem quite data-hungry.\nAdditionally, two-stream architectures exhibit superior performance on all datasets, but the relative value of RGB and flow differs significantly between miniKinetics and the other datasets. The contribution from flow alone, is slightly higher than that of RGB on UCF-101, much higher on HMDB-51, and substantially lower on miniKinetics. Visual inspection of the datasets suggests that Kinetics has much more camera motion which may make the job of the motion stream harder. The I3D model seems able to get more out of the flow stream than the other models, however, which can probably be explained by its much longer temporal receptive field (64 frames vs 10 during training) and more integrated temporal feature extraction machinery. While it seems plausible that the RGB stream has more discriminative information \u2013 we often struggled with our own eyes to\ndiscern actions from flow alone in Kinetics, and this was rarely the case from RGB \u2013 there may be opportunities for future research on integrating some form of motion stabilization into these architectures."}, {"heading": "5. Experimental Evaluation of Features", "text": "In this section we investigate the generalizability of the networks trained on Kinetics. We consider two measures of this: first, we freeze the network weights and use the network to produce features for the (unseen) videos of the UCF-101/HMDB-51 datasets. We then train multi-way soft-max classifiers for the classes of UCF-101/HMDB-51 (using their training data), and evaluate on their test sets; Second, we fine-tune each network for the UCF-101/HMDB-51 classes (using the UCF101/HMDB-51 training data), and again evaluate on the UCF-101/HMDB-51 test sets.\nThe results are given in table 3. The clear outcome is that all architectures benefit from pre-training on the additional video data of miniKinetics, but some benefit significantly more than the others \u2013 notably the I3D-ConvNet and 3D-ConvNet (although the latter starting from a much lower base). Training just the last layers of the models after pretraining in miniKinetics (Fixed) also leads to much better performance than directly training on UCF-101 and HMDB-51 for I3D models.\nOne explanation for the significant better transferability of features of I3D models is their high temporal resolution \u2013 they are trained on 64-frame video snippets at 25 frames per second and process all video frames at test time, which makes it possible for them to capture fine-grained temporal structure of actions. Stated differently, methods with sparser video inputs may benefit less from training on this large video dataset because, from their perspective, videos do not differ as much from the images in ImageNet. The difference over the C3D-like model can be explained by our I3D models being much deeper, while having much fewer parameters, by leveraging an ImageNet warm-start, by be-\ning trained on 4\u00d7 longer videos, and by operating on 2\u00d7 higher spatial resolution videos."}, {"heading": "5.1. Comparison with the State-of-the-Art", "text": "We show a comparison of the performance of I3D models and previous state-of-the-art methods in table 4, on UCF-101 and HMDB-51. We include results when pretraining on miniKinetics and on the full Kinetics dataset. The conv1 filters of the trained models are shown in fig. 4.\nMany methods get similar results, but the best performing method on these datasets is currently the one by Feichtenhofer and colleagues [7], which uses ResNet-50 models on RGB and optical flow streams, and gets 94.6% on UCF-101 and 70.3% on HMDB-51 when combined with the dense trajectories model [30]. We benchmarked our methods using the mean accuracy over the three standard train/test splits. Either of our RGB-I3D or RGB-Flow models alone, when pre-trained on Kinetics, outperforms all previous published performance by any model or model combinations. Our combined two-stream architecture widens the advantage over previous models considerably, bringing overall performance to 98.0 on UCF-101 and 80.7 on HMDB-51, which correspond to 63% and 35% misclassification reductions, respectively compared to the best previ-\nous model [7]. The difference between Kinetics pre-trained I3D models and prior 3D ConvNets (C3D) is even larger, although C3D is trained on more videos, 1M examples from Sports1M plus an internal dataset, and even when ensembled and combined with IDT. This may be explainable by the better quality of Kinetics but also because of I3D simply being a better architecture.\nAnother noteworthy effect is the improvement of the I3D RGB stream on HMDB-51 when going from miniKinetics to Kinetics pre-training, which suggests that 3D ConvNets may require large amounts of data in order to learn robust motion features. After Kinetics pre-training, the two streams obtain more similar performance but are still complementary: averaging their predictions brings results from 74.8% to 80.7%."}, {"heading": "6. Discussion", "text": "We return to the question posed in the introduction, \u201cis there a benefit in transfer learning from videos?\u201d. It is evident that there is a considerable benefit in pre-training on (the large video dataset) Kinetics, just as there has been such benefits in pre-training ConvNets on ImageNet for so many tasks. This demonstrates transfer learning from one\ndataset (Kinetics) to another dataset (UCF-101/HMDB-51) for a similar task (albeit for different action classes). However, it still remains to be seen if there is a benefit in using Kinetics pre-training for other video tasks such as semantic video segmentation, video object detection, or optical flow computation. We plan to make publicly available I3D models trained on the official Kinetics dataset\u2019s release to facilitate research in this area.\nOf course, we did not perform a comprehensive exploration of architectures \u2013 for example we have not employed action tubes [11, 17] or attention mechanisms [20] to focus in on the human actors. Recent works have proposed imaginative methods for determining the spatial and temporal extent (detection) of actors within the two-stream architectures, by incorporating linked object detections in time [22, 24]. The relationship between space and time is a mysterious one. Several very creative papers have recently\ngone out of the box in attempts to capture this relationship, for example by learning frame ranking functions for action classes and using these as a representation [9], by making analogies between actions and transformations [33], or by creating 2D visual snapshots of frame sequences [2] \u2013 this idea is related to the classic motion history work of [3]. It would be of great value to also include these models in our comparison but we could not, due to lack of time and space.\nAs future work, we plan to repeat all experiments using Kinetics instead of miniKinetics, with and without ImageNet pre-training, and explore inflating other state-of-theart 2D ConvNets.\nAcknowledgements:\nWe would like to thank everyone on the Kinetics project and in particular Brian Zhang and Tim Green for help setting up the data for our experiments, and Karen Simonyan\nfor helpful discussions."}], "references": [{"title": "et al", "author": ["M. Abadi", "A. Agarwal", "P. Barham", "E. Brevdo", "Z. Chen", "C. Citro", "G.S. Corrado", "A. Davis", "J. Dean", "M. Devin"], "venue": "Tensorflow: Large-scale machine learning on heterogeneous distributed systems. arXiv preprint arXiv:1603.04467", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Dynamic image networks for action recognition", "author": ["H. Bilen", "B. Fernando", "E. Gavves", "A. Vedaldi", "S. Gould"], "venue": "IEEE International Conference on Computer Vision and Pattern Recognition CVPR", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "The recognition of human movement using temporal templates", "author": ["A.F. Bobick", "J.W. Davis"], "venue": "IEEE Transactions on pattern analysis and machine intelligence, 23(3):257\u2013267", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2001}, {"title": "Recurrent batch normalization", "author": ["T. Cooijmans", "N. Ballas", "C. Laurent", "A. Courville"], "venue": "arXiv preprint arXiv:1603.09025", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2016}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["J. Donahue", "L. Anne Hendricks", "S. Guadarrama", "M. Rohrbach", "S. Venugopalan", "K. Saenko", "T. Darrell"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 2625\u20132634", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Action recognition by learning midlevel motion features", "author": ["A. Fathi", "G. Mori"], "venue": "Computer Vision and Pattern Recognition, 2008. CVPR 2008. IEEE Conference on, pages 1\u20138. IEEE", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Spatiotemporal residual networks for video action recognition", "author": ["C. Feichtenhofer", "A. Pinz", "R.P. Wildes"], "venue": "arXiv preprint arXiv:1611.02155", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "Convolutional two-stream network fusion for video action recognition", "author": ["C. Feichtenhofer", "A. Pinz", "A. Zisserman"], "venue": "IEEE International Conference on Computer Vision and Pattern Recognition CVPR", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "Modeling video evolution for action recognition", "author": ["B. Fernando", "E. Gavves", "J.M. Oramas", "A. Ghodrati", "T. Tuytelaars"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 5378\u20135387", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["R. Girshick", "J. Donahue", "T. Darrell", "J. Malik"], "venue": "Proceedings of the IEEE conference on computer vision and pattern recognition, pages 580\u2013587", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2014}, {"title": "Finding action tubes", "author": ["G. Gkioxari", "J. Malik"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 759\u2013768", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Deep residual learning for image recognition", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": "Computer Vision and Pattern Recognition (CVPR), 2016 IEEE Conference on", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "author": ["S. Ioffe", "C. Szegedy"], "venue": "arXiv preprint arXiv:1502.03167", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "3d convolutional neural networks for human action recognition", "author": ["S. Ji", "W. Xu", "M. Yang", "K. Yu"], "venue": "IEEE transactions on pattern analysis and machine intelligence, 35(1):221\u2013 231", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "and L", "author": ["A. Karpathy", "G. Toderici", "S. Shetty", "T. Leung", "R. Sukthankar"], "venue": "Fei-Fei. Large-scale video classification with convolutional neural networks. In Proceedings of the IEEE conference on Computer Vision and Pattern Recognition, pages 1725\u20131732", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "The kinetics human action video dataset", "author": ["W. Kay", "J. Carreira", "K. Simonyan", "B. Zhang", "C. Hillier", "S. Vijayanarasimhan", "F. Viola", "T. Green", "T. Back", "P. Natsev", "M. Suleyman", "A. Zisserman"], "venue": "arXiv preprint arXiv:1705.06950", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2017}, {"title": "Human focused action localization in video", "author": ["A. Kl\u00e4ser", "M. Marszalek", "C. Schmid", "A. Zisserman"], "venue": "International Workshop on Sign, Gesture, Activity, ECCV 2010", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2010}, {"title": "HMDB: a large video database for human motion recognition", "author": ["H. Kuehne", "H. Jhuang", "E. Garrote", "T. Poggio", "T. Serre"], "venue": "Proceedings of the International Conference on Computer Vision (ICCV)", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2011}, {"title": "Learning realistic human actions from movies", "author": ["I. Laptev", "M. Marszalek", "C. Schmid", "B. Rozenfeld"], "venue": "Computer Vision and Pattern Recognition, 2008. CVPR 2008. IEEE Conference on, pages 1\u20138. IEEE", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2008}, {"title": "VideoLSTM convolves", "author": ["Z. Li", "E. Gavves", "M. Jain", "C.G. Snoek"], "venue": "attends and flows for action recognition. arXiv preprint arXiv:1607.01794", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2016}, {"title": "Unsupervised learning of human action categories using spatial-temporal words", "author": ["J.C. Niebles", "H. Wang", "L. Fei-Fei"], "venue": "International journal of computer vision, 79(3):299\u2013318", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2008}, {"title": "Multi-region two-stream R-CNN for action detection", "author": ["X. Peng", "C. Schmid"], "venue": "European Conference on Computer Vision, pages 744\u2013759. Springer", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2016}, {"title": "Faster r-cnn: Towards real-time object detection with region proposal networks", "author": ["S. Ren", "K. He", "R. Girshick", "J. Sun"], "venue": "Advances in neural information processing systems, pages 91\u201399", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Deep learning for detecting multiple space-time action tubes in videos", "author": ["S. Saha", "G. Singh", "M. Sapienza", "P.H. Torr", "F. Cuzzolin"], "venue": "British Machine Vision Conference (BMVC) 2016", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2016}, {"title": "Two-stream convolutional networks for action recognition in videos", "author": ["K. Simonyan", "A. Zisserman"], "venue": "Advances in Neural Information Processing Systems, pages 568\u2013576", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "ICLR", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2015}, {"title": "UCF101: A dataset of 101 human actions classes from videos in the wild", "author": ["K. Soomro", "A.R. Zamir", "M. Shah"], "venue": "arXiv preprint arXiv:1212.0402", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2012}, {"title": "Convolutional learning of spatio-temporal features", "author": ["G.W. Taylor", "R. Fergus", "Y. LeCun", "C. Bregler"], "venue": "European conference on computer vision, pages 140\u2013153. Springer", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "Learning spatiotemporal features with 3d convolutional networks", "author": ["D. Tran", "L. Bourdev", "R. Fergus", "L. Torresani", "M. Paluri"], "venue": "2015 IEEE International Conference on Computer Vision (ICCV), pages 4489\u20134497. IEEE", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2015}, {"title": "Action recognition with improved trajectories", "author": ["H. Wang", "C. Schmid"], "venue": "International Conference on Computer Vision", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2013}, {"title": "Action recognition with trajectory-pooled deep-convolutional descriptors", "author": ["L. Wang", "Y. Qiao", "X. Tang"], "venue": "Proceedings of the IEEE Conference on Computer Vision and  Pattern Recognition, pages 4305\u20134314", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2015}, {"title": "Temporal segment networks: towards good practices for deep action recognition", "author": ["L. Wang", "Y. Xiong", "Z. Wang", "Y. Qiao", "D. Lin", "X. Tang", "L. Van Gool"], "venue": "European Conference on Computer Vision", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2016}, {"title": "Actions \u0303 transformations", "author": ["X. Wang", "A. Farhadi", "A. Gupta"], "venue": "arXiv preprint arXiv:1512.00795", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2015}, {"title": "Beyond short snippets: Deep networks for video classification", "author": ["J. Yue-Hei Ng", "M. Hausknecht", "S. Vijayanarasimhan", "O. Vinyals", "R. Monga", "G. Toderici"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 4694\u20134702", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2015}, {"title": "A duality based approach for realtime TV-L1 optical flow", "author": ["C. Zach", "T. Pock", "H. Bischof"], "venue": "Pattern Recognition, pages 214\u2013223", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 9, "context": "One of the early examples of this was using the fc7 features from a network trained on ImageNet for the PASCAL VOC classification and detection challenge [10].", "startOffset": 154, "endOffset": 158}, {"referenceID": 22, "context": "Furthermore, improvements in the deep architecture, changing from AlexNet to VGG-16, immediately fed through to commensurate improvements in the PASCAL VOC performance [23].", "startOffset": 168, "endOffset": 172}, {"referenceID": 15, "context": "In this paper we aim to provide an answer to this question using the new Kinetics Human Action Video Dataset [16], which is two orders of magnitude larger than previous datasets, HMDB-51 [18] and UCF-101 [27].", "startOffset": 109, "endOffset": 113}, {"referenceID": 17, "context": "In this paper we aim to provide an answer to this question using the new Kinetics Human Action Video Dataset [16], which is two orders of magnitude larger than previous datasets, HMDB-51 [18] and UCF-101 [27].", "startOffset": 187, "endOffset": 191}, {"referenceID": 26, "context": "In this paper we aim to provide an answer to this question using the new Kinetics Human Action Video Dataset [16], which is two orders of magnitude larger than previous datasets, HMDB-51 [18] and UCF-101 [27].", "startOffset": 204, "endOffset": 208}, {"referenceID": 12, "context": "An I3D model based on Inceptionv1 [13] obtains performance far exceeding the state-of-theart, after pre-training on Kinetics.", "startOffset": 34, "endOffset": 38}, {"referenceID": 5, "context": "In our model comparisons, we did not consider more classic approaches such as bag-of-visual-words representations [6, 19, 21, 30].", "startOffset": 114, "endOffset": 129}, {"referenceID": 18, "context": "In our model comparisons, we did not consider more classic approaches such as bag-of-visual-words representations [6, 19, 21, 30].", "startOffset": 114, "endOffset": 129}, {"referenceID": 20, "context": "In our model comparisons, we did not consider more classic approaches such as bag-of-visual-words representations [6, 19, 21, 30].", "startOffset": 114, "endOffset": 129}, {"referenceID": 29, "context": "In our model comparisons, we did not consider more classic approaches such as bag-of-visual-words representations [6, 19, 21, 30].", "startOffset": 114, "endOffset": 129}, {"referenceID": 4, "context": "Among 2D ConvNet methods, we consider ConvNets with LSTMs on top [5, 34], and two-stream networks with two different types of stream fusion [8, 25].", "startOffset": 65, "endOffset": 72}, {"referenceID": 33, "context": "Among 2D ConvNet methods, we consider ConvNets with LSTMs on top [5, 34], and two-stream networks with two different types of stream fusion [8, 25].", "startOffset": 65, "endOffset": 72}, {"referenceID": 7, "context": "Among 2D ConvNet methods, we consider ConvNets with LSTMs on top [5, 34], and two-stream networks with two different types of stream fusion [8, 25].", "startOffset": 140, "endOffset": 147}, {"referenceID": 24, "context": "Among 2D ConvNet methods, we consider ConvNets with LSTMs on top [5, 34], and two-stream networks with two different types of stream fusion [8, 25].", "startOffset": 140, "endOffset": 147}, {"referenceID": 13, "context": "We also consider a 3D ConvNet [14, 28]: C3D [29].", "startOffset": 30, "endOffset": 38}, {"referenceID": 27, "context": "We also consider a 3D ConvNet [14, 28]: C3D [29].", "startOffset": 30, "endOffset": 38}, {"referenceID": 28, "context": "We also consider a 3D ConvNet [14, 28]: C3D [29].", "startOffset": 44, "endOffset": 48}, {"referenceID": 12, "context": "Here we make the observation that very deep image classification networks, such as Inception [13], VGG-16 [26] and ResNet [12], can be trivially inflated into spatio-temporal feature extractors, and that their pre-trained weights provide a valuable initialization.", "startOffset": 93, "endOffset": 97}, {"referenceID": 25, "context": "Here we make the observation that very deep image classification networks, such as Inception [13], VGG-16 [26] and ResNet [12], can be trivially inflated into spatio-temporal feature extractors, and that their pre-trained weights provide a valuable initialization.", "startOffset": 106, "endOffset": 110}, {"referenceID": 11, "context": "Here we make the observation that very deep image classification networks, such as Inception [13], VGG-16 [26] and ResNet [12], can be trivially inflated into spatio-temporal feature extractors, and that their pre-trained weights provide a valuable initialization.", "startOffset": 122, "endOffset": 126}, {"referenceID": 12, "context": "Our experimental strategy assumes a common ImageNet pre-trained image classification architecture as back bone, and for this we chose Inception-v1 with batch normalization [13], and morph it in different ways.", "startOffset": 172, "endOffset": 176}, {"referenceID": 14, "context": "This can be achieved by using them to extract features independently from each frame then pooling their predictions across the whole video [15].", "startOffset": 139, "endOffset": 143}, {"referenceID": 18, "context": "This is in the spirit of bag of words image modeling approaches [19, 21, 30]; but while convenient in practice, it has the issue of entirely ignoring temporal structure (e.", "startOffset": 64, "endOffset": 76}, {"referenceID": 20, "context": "This is in the spirit of bag of words image modeling approaches [19, 21, 30]; but while convenient in practice, it has the issue of entirely ignoring temporal structure (e.", "startOffset": 64, "endOffset": 76}, {"referenceID": 29, "context": "This is in the spirit of bag of words image modeling approaches [19, 21, 30]; but while convenient in practice, it has the issue of entirely ignoring temporal structure (e.", "startOffset": 64, "endOffset": 76}, {"referenceID": 4, "context": "In theory, a more satisfying approach is to add a recurrent layer to the model [5, 34], such as an LSTM, which can encode state, and capture temporal ordering and long range dependencies.", "startOffset": 79, "endOffset": 86}, {"referenceID": 33, "context": "In theory, a more satisfying approach is to add a recurrent layer to the model [5, 34], such as an LSTM, which can encode state, and capture temporal ordering and long range dependencies.", "startOffset": 79, "endOffset": 86}, {"referenceID": 3, "context": "[4]) after the last average pooling layer of Inception-V1, with 512 hidden units.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "They have been explored several times, previously [14, 28, 29].", "startOffset": 50, "endOffset": 62}, {"referenceID": 27, "context": "They have been explored several times, previously [14, 28, 29].", "startOffset": 50, "endOffset": 62}, {"referenceID": 28, "context": "They have been explored several times, previously [14, 28, 29].", "startOffset": 50, "endOffset": 62}, {"referenceID": 13, "context": "Also, they seem to preclude the benefits of ImageNet pre-training, and consequently previous work has defined relatively shallow custom architectures and trained them from scratch [14, 15, 28, 29].", "startOffset": 180, "endOffset": 196}, {"referenceID": 14, "context": "Also, they seem to preclude the benefits of ImageNet pre-training, and consequently previous work has defined relatively shallow custom architectures and trained them from scratch [14, 15, 28, 29].", "startOffset": 180, "endOffset": 196}, {"referenceID": 27, "context": "Also, they seem to preclude the benefits of ImageNet pre-training, and consequently previous work has defined relatively shallow custom architectures and trained them from scratch [14, 15, 28, 29].", "startOffset": 180, "endOffset": 196}, {"referenceID": 28, "context": "Also, they seem to preclude the benefits of ImageNet pre-training, and consequently previous work has defined relatively shallow custom architectures and trained them from scratch [14, 15, 28, 29].", "startOffset": 180, "endOffset": 196}, {"referenceID": 28, "context": "For this paper we implemented a small variation of C3D [29], which has 8 convolutional layers, 5 pooling layers and 2 fully connected layers at the top.", "startOffset": 55, "endOffset": 59}, {"referenceID": 28, "context": "Differently from [29] we used batch normalization after all convolutional and fully connected layers.", "startOffset": 17, "endOffset": 21}, {"referenceID": 24, "context": "A different, very practical approach, introduced by Simonyan and Zisserman [25], models short temporal snapshots of videos by averaging the predictions from a single RGB frame and a stack of 10 externally computed optical flow frames, after passing them through two replicas of an ImageNet pre-trained ConvNet.", "startOffset": 75, "endOffset": 79}, {"referenceID": 7, "context": "A recent extension [8] fuses the spatial and flow streams after the last network convolutional layer, showing some improvement on HMDB while requiring less test time augmentation (snapshot sampling).", "startOffset": 19, "endOffset": 22}, {"referenceID": 12, "context": "All models but the C3D-like 3D ConvNet use ImageNetpretrained Inception-V1 [13] as base network.", "startOffset": 75, "endOffset": 79}, {"referenceID": 12, "context": "For all architectures we follow each convolutional layer by a batch normalization [13] layer and a ReLU activation function, except for the last convolutional layers which produce the class scores for each network.", "startOffset": 82, "endOffset": 86}, {"referenceID": 0, "context": "All the models were implemented in TensorFlow [1].", "startOffset": 46, "endOffset": 49}, {"referenceID": 34, "context": "We computed optical flow with a TV-L1 algorithm [35].", "startOffset": 48, "endOffset": 52}, {"referenceID": 15, "context": "A full description of the dataset and how it was built is given in [16].", "startOffset": 67, "endOffset": 71}, {"referenceID": 28, "context": "All models are based on Imagenet pre-trained Inception-v1, except 3D-ConvNet, a C3Dlike [29] model which has a custom architecture and was trained here from scratch.", "startOffset": 88, "endOffset": 92}, {"referenceID": 6, "context": "Many methods get similar results, but the best performing method on these datasets is currently the one by Feichtenhofer and colleagues [7], which uses ResNet-50 models on RGB and optical flow streams, and gets 94.", "startOffset": 136, "endOffset": 139}, {"referenceID": 29, "context": "3% on HMDB-51 when combined with the dense trajectories model [30].", "startOffset": 62, "endOffset": 66}, {"referenceID": 6, "context": "7 on HMDB-51, which correspond to 63% and 35% misclassification reductions, respectively compared to the best previous model [7].", "startOffset": 125, "endOffset": 128}, {"referenceID": 24, "context": "Two-Stream [25] 88.", "startOffset": 11, "endOffset": 15}, {"referenceID": 29, "context": "IDT [30] 86.", "startOffset": 4, "endOffset": 8}, {"referenceID": 1, "context": "Dynamic Image Networks + IDT [2] 89.", "startOffset": 29, "endOffset": 32}, {"referenceID": 30, "context": "TDD + IDT [31] 91.", "startOffset": 10, "endOffset": 14}, {"referenceID": 7, "context": "Two-Stream Fusion + IDT [8] 93.", "startOffset": 24, "endOffset": 27}, {"referenceID": 31, "context": "Temporal Segment Networks [32] 94.", "startOffset": 26, "endOffset": 30}, {"referenceID": 6, "context": "ST-ResNet + IDT [7] 94.", "startOffset": 16, "endOffset": 19}, {"referenceID": 14, "context": "Deep Networks [15], Sports 1M pre-training 65.", "startOffset": 14, "endOffset": 18}, {"referenceID": 28, "context": "C3D one network [29], Sports 1M pre-training 82.", "startOffset": 16, "endOffset": 20}, {"referenceID": 28, "context": "C3D ensemble [29], Sports 1M pre-training 85.", "startOffset": 13, "endOffset": 17}, {"referenceID": 28, "context": "C3D ensemble + IDT [29], Sports 1M pre-training 90.", "startOffset": 19, "endOffset": 23}, {"referenceID": 10, "context": "Of course, we did not perform a comprehensive exploration of architectures \u2013 for example we have not employed action tubes [11, 17] or attention mechanisms [20] to focus in on the human actors.", "startOffset": 123, "endOffset": 131}, {"referenceID": 16, "context": "Of course, we did not perform a comprehensive exploration of architectures \u2013 for example we have not employed action tubes [11, 17] or attention mechanisms [20] to focus in on the human actors.", "startOffset": 123, "endOffset": 131}, {"referenceID": 19, "context": "Of course, we did not perform a comprehensive exploration of architectures \u2013 for example we have not employed action tubes [11, 17] or attention mechanisms [20] to focus in on the human actors.", "startOffset": 156, "endOffset": 160}, {"referenceID": 21, "context": "Recent works have proposed imaginative methods for determining the spatial and temporal extent (detection) of actors within the two-stream architectures, by incorporating linked object detections in time [22, 24].", "startOffset": 204, "endOffset": 212}, {"referenceID": 23, "context": "Recent works have proposed imaginative methods for determining the spatial and temporal extent (detection) of actors within the two-stream architectures, by incorporating linked object detections in time [22, 24].", "startOffset": 204, "endOffset": 212}, {"referenceID": 8, "context": "Several very creative papers have recently gone out of the box in attempts to capture this relationship, for example by learning frame ranking functions for action classes and using these as a representation [9], by making analogies between actions and transformations [33], or by creating 2D visual snapshots of frame sequences [2] \u2013 this idea is related to the classic motion history work of [3].", "startOffset": 208, "endOffset": 211}, {"referenceID": 32, "context": "Several very creative papers have recently gone out of the box in attempts to capture this relationship, for example by learning frame ranking functions for action classes and using these as a representation [9], by making analogies between actions and transformations [33], or by creating 2D visual snapshots of frame sequences [2] \u2013 this idea is related to the classic motion history work of [3].", "startOffset": 269, "endOffset": 273}, {"referenceID": 1, "context": "Several very creative papers have recently gone out of the box in attempts to capture this relationship, for example by learning frame ranking functions for action classes and using these as a representation [9], by making analogies between actions and transformations [33], or by creating 2D visual snapshots of frame sequences [2] \u2013 this idea is related to the classic motion history work of [3].", "startOffset": 329, "endOffset": 332}, {"referenceID": 2, "context": "Several very creative papers have recently gone out of the box in attempts to capture this relationship, for example by learning frame ranking functions for action classes and using these as a representation [9], by making analogies between actions and transformations [33], or by creating 2D visual snapshots of frame sequences [2] \u2013 this idea is related to the classic motion history work of [3].", "startOffset": 394, "endOffset": 397}], "year": 2017, "abstractText": "The paucity of videos in current action classification datasets (UCF-101 and HMDB-51) has made it difficult to identify good video architectures, as most methods obtain similar performance on existing small-scale benchmarks. This paper re-evaluates state-of-the-art architectures in light of the new Kinetics Human Action Video dataset. Kinetics has two orders of magnitude more data, with 400 human action classes and over 400 clips per class, and is collected from realistic, challenging YouTube videos. We provide an analysis on how current architectures fare on the task of action classification on this dataset and how much performance improves on the smaller benchmark datasets after pre-training on Kinetics. We also introduce a new Two-Stream Inflated 3D ConvNet (I3D) that is based on 2D ConvNet inflation: filters and pooling kernels of very deep image classification ConvNets are expanded into 3D, making it possible to learn seamless spatio-temporal feature extractors from video while leveraging successful ImageNet architecture designs and even their parameters. We show that, after pre-training on Kinetics, I3D models considerably improve upon the state-of-the-art in action classification, reaching 80.7% on HMDB-51 and 98.0% on UCF-101.", "creator": "LaTeX with hyperref package"}}}