{"id": "1706.02048", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jun-2017", "title": "Epistemic Logic with Functional Dependency Operator", "abstract": "operator, we can express knowledge about individual variables, but not about the relationships between them in general. In this essay, we propose a new operator Kf to express knowledge about the functional dependencies between variables. The semantics of this operator Kf uses a functional domain that imposes a limitation on what counts as a functional dependency relationship. By adapting this functional domain, various interesting logics arise, and in this essay, we axiomatize three such logics in a single agent setting. Then, we show how these three logics can be unified by letting the functional domain vary relative to different agents and possible worlds. In this case, a multi-agent axiomatization is given.", "histories": [["v1", "Wed, 7 Jun 2017 05:16:54 GMT  (28kb)", "http://arxiv.org/abs/1706.02048v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yifeng ding"], "accepted": false, "id": "1706.02048"}, "pdf": {"name": "1706.02048.pdf", "metadata": {"source": "CRF", "title": "Epistemic Logic with Functional Dependency Operator", "authors": ["Yifeng Ding"], "emails": ["yf.ding@berkeley.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 6.\n02 04\n8v 1\n[ cs\n.A I]\nEpistemic logic with non-standard knowledge operators, especially the \u201cknowing-value\u201d operator, has recently gathered much attention. With the \u201cknowing-value\u201d operator, we can express knowledge of individual variables, but not of the relations between them in general. In this paper, we propose a new operator Kf to express knowledge of the functional dependencies between variables. The semantics of this Kf operator uses a function domain which imposes a constraint on what counts as a functional dependency relation. By adjusting this function domain, different interesting logics arise, and in this paper we axiomatize three such logics in a single agent setting. Then we show how these three logics can be unified by allowing the function domain to vary relative to different agents and possible worlds. A multiagent axiomatization is given in this case."}, {"heading": "1 Introduction", "text": "De re knowledge or in general non-standard knowledge in epistemic logic is attracting continuing attention. This line of research started from the very beginning of epistemic logic: Hintikka discussed a \u201cknowing-who\u201d operator in [3], and Plaza a \u201cknowing-value\u201d operator Kv in his seminal work [4]. However, it is the recent effort in providing formal semantics and axiomatizations of those nonstandard knowledge operators, as outlined in the survey [8], that layed a solid foundation for further investigation. Among all the non-standard knowledge operators axiomatized so far, the \u201cknowingvalue\u201d, or equivalently the \u201cknowing-what\u201d operator, has received most attention, partly due to its mathematical elegance and partly because of its potential application in information security reasoning. Recent major development of this Kv operator started with the axiomatization in [10, 9], followed by the\n\u2217The author would like to give special thanks toMalvin Gattinger andWesley H. Holliday for their unreserved helpful comments.\nsimplification of the semantics in [2] and the enrichment of the language through announcing values and propositions in [1, 7].\nBuilding on the above results about the \u201cknowing-value\u201d operator, this paper considers the knowedge of the functional dependency between variables, which is a natural extension of the knowledge of individual variables to the knowledge of relations among variables. The precise meaning of \u201cknowing a/the functional dependency between variables\u201d is not easy to pin down and might be context sensitive, as illustrated by the difficulty to choose the correct article here: it is safe to say \u201cknowing the value of a variable\u201d since a variable can only take one value in the actual world (or any world), but there might be quite a lot functions, different from each other, yet all governing the relation between the same two variables in a set of possible worlds. We postpone further discussion to the last section, but it should be intuitive that \u201cfunctionality\u201d is at least a minimal requirement, that is, to know any functional dependency between variables c and d, at least for any two possible worlds where c has the same value, d should also have the same value, however different from the value of c.\nHere one natural choice is to make functionality the only requirement of \u201cknowing a/the functional dependency between variables\u201d, and both [7, 1] made this choice. The key intuition behind this choice is that, what matters in the end are the values of variables. Recall how implication in Heyting algebras for intuitionistic logic is defined: p \u2192 q is the weakest proposition such that if conjoined with p by taking conjunction, we get something stronger than q, or in other words, we are able to infer q. In our knowing-value context, we might also be interested and only interested in knowing the values. Then, functional dependency of d upon c should be interpreted as the weakest proposition such that if \u201cconjoined\u201d with the knowledge of the value of d, we are able to infer the value of c.\nThe weakest proposition possessing this bridging-the-gap property depends on how we interpret the word \u201cconjoin\u201d here. If it is taken to be the propositional conjunction, then what we get is again the propositional implication Kv(c) \u2192 Kv(d). If \u201cconjoin\u201d means revealing the actual value of c to the agent, then [c]Kv(d) in [7] is an exact formalization. Model-theoretically speaking this means that functionality between c and d holds on the set of possible worlds where the value of c is correct, and consequently, once all possible worlds where c\u2019s value is wrong are eliminated, the value of d becomes fixed and hence known. If \u201cconjoin\u201d means to entertain the hypothesis that one of the epistemically possible values of c obtains, then the functionality condition from c to d among all possible worlds is the minimal requirement. This is equivalent to K[c]Kv(d), which says: I know that for all possible values that c can take, once that is revealed to be the real value of c, the value of d will also be known. In [1], this is exactly the semantics of Kcd.\nAnother famous work on dependency taking functionality as the only requirement is Dependence Logic [6, 5]. The team semantics it uses for the dependence atom =(c, d) is exactly the functionality condition, though the teams in a model do not originate from an epistemic setting.\nThe semantics to be proposed in this paper will differ from the above pure functionality approach and will subsume it as a special case. But the key inspiration comes from the basic strategy explained in [8]: pack an existential quantifier and a modal quantifier together in the form of \u2203x \u03c6(x). Under this pattern, the knowledge of the functional dependency of variables c and d is expressed as: there exists a function f in a predetermined function domain F which works, in the sense that d = f (c), in\nall epistemic scenarios. Thus, F can be seen as an agent\u2019s prior knowledge about possible functional dependency relations, and to know the dependency between variables is to find a possible function that works or explains all possibilities. To put it more colloquially, to know the functional dependency between c and d is not simply to see that functionality holds between them, but also to see that the functional relation \u201cmake sense\u201d. Let us use Kf (C, d) to express this knowledge of functional dependency of d upon a finite set of variables C.\nAs argued above, when \u201cknowing-dependency\u201d serves as a tool for expressing potential \u201cknowingvalue\u201d, we do not need a requirement stronger than functionality. But this is not always the case. Consider a typical scenario in information security: agent A receives an encrypted message d = enc(c) from agent B. Ideally, A knows the value of d, say d = 0, but knows nothing about c. So the epistemically possible worlds for A are\n{c = 0, d = 0}, {c = 1, d = 0}, {c = 2, d = 0}, \u00b7 \u00b7 \u00b7 .\nCertainly the functionality from c to d holds as d has only one possible value. But agent A is apparently ignorant about the functional relationship between variables d and c. The witness to the functionality here is the constant function 0, which is extremely unlikely to be the encryption function enc that B uses. So agent A would not in this case assert that she knows that the message d she receives is derived from the message c that B intends to send through some encryption: no encryption function she deems possible would allow all those possibilities. Thus, to claim the knowledge of the functional dependency of d on c, we do need something more than functionality. With our operator Kf , we can use KfA({c}, d) to express \u201cA knows a functional dependency relation between c and d that is plausible in the information security context\u201d, if we let F to be the set of all functions that is plausible in this context.\nThus, the Kf operator can be used to model scenarios where the value of variables in the realized world (the agent\u2019s world) is not the sole concern of the agent. It might be that our agent does not want an inexplicable relationship between variables, or it might be that the agent requires that any functional dependency she knows to be applicable not only to her actual world but also to worlds metaphysically possible or worlds evolved in time, where some a priori rules preclude too strange functional dependency relationships. In the previous case, certainly d is known to A already, but the constant function that witnesses the functionality there is not likely to be applicable to another round of message exchange.\nIn the rest of the paper, we first define the logic that incorporates knowledge K , \u201cknowing-value\u201dKv and \u201cknowing-function\u201dKf operators which we call LKVF and the corresponding base axiom system LKVF. Then we show how different domains of functions, viewed as a parameter of LKVF, induce different sets of validities and axioms. Then all those cases will be put into a unified framework where a multiagent logic with the same operators is axiomatized. In the last section, we will discuss further interpretations of \u201cknowing a/the functional dependency between variables\u201d and possible future work."}, {"heading": "2 Preliminaries", "text": ""}, {"heading": "2.1 Syntax and Semantics of LKVF", "text": "Definition 1 (Syntax) Given a countably infinite set P of propositional letters and a set Q of the names of variables, the formulas in LKVF are defined by:\n\u03c6 ::= \u22a4 | p | Kv(d) | Kf (C, d) | (\u03c6 \u2227 \u03c6) | \u00ac\u03c6 | K\u03c6\nwhere p \u2208 P, d \u2208 Q, and C \u2286 f in Q. \u2286 f in means a finite subset, possibly empty.\nHere Kv(d) is to be interpreted as \u201cknowing the value of d\u201d, and K\u03c6 \u201cknowing that \u03c6 is the case\u201d. Kf (C, d) says that the agent knows a functional dependency relationship from C to d. By convention, we set \u22a5, (\u03c6\u2228\u03c8), (\u03c6 \u2192 \u03c8) as \u00ac\u22a4,\u00ac(\u00ac\u03c6\u2227\u00ac\u03c8),\u00ac(\u03c6\u2227\u00ac\u03c8), and omit unnecessary parentheses. We also write Kf (c, d) as an abbreviation of Kf ({c}, d).\nIn order to interpret the Kf operator in LKVF, we need a predefined domain G of possible values for variables in Q, and a set of F functions on this G. F might contain polyadic functions in GG n and also zero-adic functions. Formally F \u2286 \u22c3\u221e\nn=0 GG\nn . It is important to note here that in this setting,\nF and G are important parameters of LKVF instead of parts of the models. In other words, they are shared by all models in the logic.\nAs we are considering single agent S5, no explicit accessibility relation is needed. So formally, a\nmodel is:\nM = \u3008W,U,V\u3009\nwhere W is the set of possible worlds, U : W \u00d7 P \u2192 {0, 1} is the assignment for propositional letters, and V : W \u00d7 Q \u2192 G is the assignment for variables. For any finite subset C of Q, we fix an order of the elements in C and define V(w,C) = \u3008V(w, d) | d \u2208 C\u3009. When C is empty, this degenerates into the unique empty tuple. We call this the joint assignment of variables in C, and whenever we have a function from Q to G, if it is applied to a set C, we mean this joint assignment. Now the truth conditions are:\nDefinition 2 (Semantics)\nM,w \u22a4 always M,w p \u21d4 U(w, p) = 1 M,w Kv(d) \u21d4 \u2203x \u2208 G, \u2200w\u2032 \u2208 W,V(w\u2032, d) = x M,w Kf (C, d) \u21d4 \u2203 f \u2208 F, \u2200w\u2032 \u2208 W,V(w\u2032, d) = f (V(w\u2032,C)) M,w \u03c6 \u2227 \u03c8 \u21d4 M,w \u03c6 andM,w \u03c8 M,w \u00ac\u03c6 \u21d4 not M,w \u03c6 M,w K\u03c6 \u21d4 \u2200w\u2032 \u2208 W,M,w\u2032 \u03c6\nHere the Kv operator has the same meaning as that of Kv in [10]: Kv(d) means that under current epistemic uncertainty, the value of d is certain. The new operator Kf (C, d) here means: the agent can\nfind a function in the set of available functions F that can be used to explain the functional dependency relation between C and d. While both operators have the same structure in their semantics, namely \u2203 , the key difference here is that, if Kv(d) is true, only one value will be the witness, yet for Kf this is usually not the case.\nTo summarize, our logicLKVF extends the standard propositional epistemic logic by adding Kv(d) and Kf (C, d) to the language, adding a valuation of the variables to the models, and introducing a new function domain F as part of the logic. Now it has the following parameters:\n\u2022 P: the set of propositional letters\n\u2022 Q: the set of variable names\n\u2022 G: the set of values that variables can take\n\u2022 F: the set of functions that the agent deems possible a priori.\nAll of them will have some effect on the validities of LKVF, but P and Q will remain unchanged throughout the whole paper, since they can be viewed as part of the language. G needs to be large for completeness results, and we will specify how large it should be. F will change the validities in LKVF in an interesting way. Thus, it will be one of the main focuses of this paper. Later we show how F can also be put into the models."}, {"heading": "2.2 Base Axiom System and Soundness Condition", "text": "As defined above, the Kf operator expresses functional dependencies among variables and thus resembles the dependency relation in database theory. Using Armstrong\u2019s three axioms in [11], we obtain this base system LKVF:\nTAUT Propositional Tautologies K K(\u03c6 \u2192 \u03c8) \u2192 (K\u03c6 \u2192 K\u03c8) KV4 Kv(d) \u2192 KKv(d) T K\u03c6 \u2192 \u03c6 KV5 \u00acKv(d) \u2192 K\u00acKv(d) 4 K\u03c6 \u2192 KK\u03c6 KF4 Kf (C, d) \u2192 KKf (C, d) 5 \u00acK\u03c6 \u2192 K\u00acK\u03c6 KF5 \u00acKf (C, d) \u2192 K\u00acKf (C, d)\nPROJ Kf (C, c) c \u2208 C\nTRAN\n( \u2227\nd\u2208D\nKf (C, d)\n)\n\u2227 Kf (D, e) \u2192 Kf (C, e)\nVF\n( \u2227\nc\u2208C\nKv(c)\n)\n\u2227 Kf (C, d) \u2192 Kv(d)\nMP \u03c6, \u03c6 \u2192 \u03c8\n\u03c8 NEC\n\u03c6\nK\u03c6\nHere only the projectivity and transitivity axioms are used. The reason is that in our language the syntax of Kf allows only one variable to be dependent upon a set of variables, not a set upon a set. Thus,\nthe additivity property Kf (A, B) \u2227 Kf (A,C) \u2192 Kf (A, B \u222a C) dealing with the second set of variables after Kf is not used and will follow from the properties of the conjunction if we define Kf (C, D) to be \u2227\nd\u2208D Kf (C, d). Then the augmentation axiom in the usual presentation of Armstrong\u2019s axioms follows from additivity, projectivity, and transitivity. To show this, suppose Kf (A, B). By projectivity, Kf (A \u222a C,C) and Kf (A \u222a C, A). Together with the assumption Kf (A, B), we have Kf (A \u222a C, B). So by additivity applied to Kf (A \u222a C,C) and Kf (A \u222a C, B), Kf (A \u222a C, B \u222a C).\nBy convention, an empty conjunction is \u22a4. So when the set D in TRAN is empty, it actually says\nKf (\u2205, e) \u2192 Kf (C, e) for all C \u2286 Q. And when the set C in VF is empty, it says Kf (\u2205, d) \u2192 Kv(d).\nWe will discuss the axiomatizations of three different settings using a large, a small, and an intermediate F in LKVF respectively. For them, we either use LKVF itself or add some other special axioms. To simplify repetitive work, here we give a condition on F in LKVF for the soundness of LKVF:\nProposition 1 When F satisfies the following, LKVF is sound with respect to LKVF:\n\u2022 For every i, j \u2208 N such that 0 < i \u2264 j and function f : Gj \u2192 G, f (x1, x2, . . . , xj ) = xi is in F.\nWe denote this special projection function as idi, j .\n\u2022 For every f \u2208 F, if f is n-ary with n \u2265 1, then for every g1, . . . gn \u2208 F, f (g1(), . . . , gn()) \u2208 F.\nNamely, F is closed under function composition.\nProof. Here we only prove the soundness of the three less trivial axioms:\n\u2022 By the first property of F, PROJ holds. If d \u2208 C, suppose d appears in C as the ith variable, then\nV(w, d) = V(w,C)[i] always holds, and thus the witness of Kf (C, d) is idi, |C | .\n\u2022 By the second property of F, TRAN holds. The antecedent of this axiom states the existence of f\nand gis in the second property. So the composition of f and gis exists in F, which witnesses the consequent of TRAN.\n\u2022 We want to show\nVF :\n( \u2227\nc\u2208C\nKv(c)\n)\n\u2227 Kf (C, d) \u2192 Kv(d).\nLet C be enumerated as c1, . . . , cn and suppose the antecedent in VF holds. Then \u2227 c\u2208C Kv(c) is true. This means we have a tuple a\u0304 \u2208 Gn such that\n\u2200w,V(w,C) = a\u0304.\nFurther we have Kf (C, d), which means we have a f \u2208 F such that\n\u2200w,V(w, d) = f (V(w,C)) = f (a\u0304).\nThus, there exists an element b := f (a\u0304) \u2208 G such that d evaluates to it in all possible worlds.\nWe will briefly mention how F is going to satisfy this soundness condition in all the following cases."}, {"heading": "3 Full Domain of Functions", "text": "In this section, we deal with the case where F is as large as possible, namely F = \u22c3 {GG i | i \u2208 N}. Now the Kf operator degenerates into a functionality test, as all functions are allowed:\nM,w Kf (C, d) \u21d4\n\u2200w1,w2 \u2208 W,V(w1,C) = V(w2,C) \u21d2 V(w1, d) = V(w2, d).\nThis is true because once we have the right hand side true, we will obtain a partial function f satisfying \u2200w \u2208 W, f (V(w,C)) = V(w, d). And it is trivial to extend this partial function into a total function.\nNow, ifM,w Kv(d), then \u2200w1,w2 \u2208 W,V(w1, d) = V(w2, d), so the right hand side of the above truth condition holds, and consequently, Kf (C, d) is true in M,w. This justifies the soundness of our new axiom in this case:\nEXT : Kv(d) \u2192 Kf (C, d)\nwhere C \u2286 f in Q, possibly empty. We name this axiom EXT because it means that in this case every function on G, regardless of its meaning, can serve as a witness of the truth condition of Kf . Further, F satisfies the condition given in Proposition 1, so LKVF + EXT is sound. In the following, we prove that if G is sufficiently large, then LKVF + EXT is in fact complete as well.\nGiven an arbitrary set A of formulas consistent in LKVF + EXT, the Lindenbaum lemma enables us to construct a maximal consistent set \u0393 such that A \u2286 \u0393. Now to build a model for \u0393, we need to accompany this \u0393 by other maximal consistent sets (possible worlds). For example, if we have \u00acKf (C, d) in \u0393, then we need two possible worlds on which the values of C coincide while the values of d on them diverge.\nTo this end, we first define some useful sets. Given any maximal consistent set \u0393, define\nK\u0393 = {\u03c6 | K\u03c6 \u2208 \u0393},Kv\u0393 = {d | Kv(d) \u2208 \u0393}.\nThey collect all the propositional and the value knowledge respectively in \u0393. For any C \u2286 Q, we say C is closed under Kf in \u0393 if for all Cf \u2286 f in C and d \u2208 Q such that Kf (Cf , d) \u2208 \u0393, we have d \u2208 C as well. Using axioms TRAN and PROJ, it is not hard to see that for all C \u2286 f in Q,\nC+\u0393 := {d | Kf (C, d) \u2208 \u0393}\nis closed under Kf in \u0393 and C \u2286 C+\u0393. This can be seen as the dependency hull of the finite set C. An important observation is that, by axiom VF, if Kf (\u2205, d) \u2208 \u0393, then Kv(d) \u2208 \u0393, so \u2205+\u0393 \u2286 Kv\u0393. Also, by axiom EXT, if Kv(d) \u2208 \u0393 then Kf (C, d) \u2208 \u0393 for all C \u2286 Q. So Kv\u0393 \u2286 C +\u0393 for all C \u2286 f in Q, and in particular Kv\u0393 \u2286 \u2205 +\u0393 . So Kv\u0393 = \u2205 +\u0393 . This motivates us to define the set of all finitely generated closed sets:\nM\u0393 = {C +\u0393 | C \u2286 f in Q}.\nClearly M\u0393 is non-empty, and Kv\u0393 \u2208 M\u0393. Also, for all X \u2208 M we have Kv\u0393 \u2286 X , so in other words, any finitely generated closed set contains all variables with known value. Then, we have the following\ndisjoint decomposition of Q using X \u2208 M\u0393 :\nQ = Kv\u0393 \u222a (X\\Kv\u0393) \u222a (Q\\X).\nIntuitively, the values of the variables in Kv\u0393 must hold fixed among all possible worlds; the values of the variables in X\\Kv\u0393 must vary relative to those in Kv\u0393 in a uniform way to respect the functional dependencies among them; and the values of the variables in Q\\X must vary even when all values in X\\Kv\u0393 are fixed, since they are not determined by X .\nFor example, suppose Q = {a, b, c, d}, G = N, and we want to model \u0393 whose knowledge consists\nonly of:\nKv(a),Kf (b, c)\nand their logical consequences such as Kf (c, a). Then, when considering X = {a, b, c} = {b}+\u0393, we have Kv\u0393 = {a}, X\\Kv\u0393 = {b, c}, and Q\\X = {d}. Among all possible worlds, the value of a must be fixed; c must change as c < Kv\u0393, but it should change together with b in case of violating functionality; and d has to change even when b together with c are fixed to refute Kf (b, d). Thus, one instantiation of this could be:\nKv\u0393 a = 0 a = 0 a = 0 X\\Kv\u0393 b = 0 b = 1 b = 1\nc = 0 c = 1 c = 1\nQ\\X d = 0 d = 1 d = 2\nwhere the columns are possible assignments. For every X \u2208 M\u0393 which collects all closed set of variables, we need such possibilities to take care of all formulas of the form \u00acKf (C, d) in \u0393, because there will be one X , namely C+\u0393, that separates C and d. Then, the value of d can vary even when those of C are fixed.\nThe reason we are using only finitely generated closed subsets ofQ is that, when |Q| is infinite, the cardinality remains the same. Formally, define Pf (Q) to be the collection of all finite subsets of Q, then |Pf (Q)| = |Q| when |Q| \u2265 \u21350. Of course, when Q is finite, Pf coincides with P, the ordinary powerset construction. Then, by the definition of M\u0393 , |M\u0393 | \u2264 |Pf (Q)|.\nNow suppose |G| \u2265 |Pf (Q) \u00d7 {0, 1}|, which is the largeness condition forG in this case, then there exists an injection g : M\u0393 \u00d7 {0, 1} \u2192 G. Using this g we can define a function Vp on M\u0393 \u00d7 {0, 1} \u00d7Q as follows:\nVp(\u3008X, i\u3009, d) =   g(\u2205, 0) d \u2208 Kv\u0393 g(X, 0) d \u2208 X\\Kv\u0393 g(X, i) d \u2208 Q\\X .\nNotice how this satisfies the informal requirement, illustrated by the example above, over the values the variables in different regions should take. When d \u2208 Kv\u0393, its value is fixed to g(\u2205, 0). When d \u2208 X\\Kv\u0393, its value depends on X as a whole but nothing else, so all variables in X\\Kv\u0393 change uniformly from what they are assigned by g(\u2205, \u00b7). When d \u2208 Q\\X , its value further depends on i, so will change even when the values of the variables in X are fixed.\nFormally, this definition allows us to show:\nProposition 2 For all C \u2286 f in Q, d \u2208 Q:\n1. If Kv(d) \u2208 \u0393 then\n\u2203x \u2208 G,\u2200\u3008X, i\u3009 \u2208 M \u00d7 {0, 1},Vp(\u3008X, i\u3009, d) = x;\n2. If Kv(d) < \u0393 then\n\u2203\u3008X, i\u3009, \u3008X \u2032, i\u2032\u3009 \u2208 M \u00d7 {0, 1},Vp(\u3008X, i\u3009, d) , Vp(\u3008X \u2032, i\u2032\u3009, d);\n3. If Kf (C, d) \u2208 \u0393 then\n\u2200\u3008X, i\u3009, \u3008X \u2032, i\u2032\u3009 \u2208 M \u00d7 {0, 1},\nVp(\u3008X, i\u3009,C) = Vp(\u3008X \u2032, i\u2032\u3009,C) \u21d2 Vp(\u3008X, i\u3009, d) = Vp(\u3008X \u2032, i\u2032\u3009, d);\n4. If Kf (C, d) < \u0393 then\n\u2203\u3008X, i\u3009, \u3008X \u2032, i\u2032\u3009 \u2208 M \u00d7 {0, 1},\nVp(\u3008X, i\u3009,C) = Vp(\u3008X \u2032, i\u2032\u3009,C) and Vp(\u3008X, i\u3009, d) , Vp(\u3008X \u2032, i\u2032\u3009, d).\nProof. For the first part, the witness is x = g(\u2205, 0) and can be verified easily. For the second part, as we observed before, Kv\u0393 = \u2205 +\u0393 \u2208 M\u0393. Then, if d < Kv\u0393, on \u3008Kv\u0393, 0\u3009 and \u3008Kv\u0393, 1\u3009 our valuation function Vp gives different values by the injectivity of g.\nFor the third part, two cases are possible. If C \u2286 Kv\u0393, then d \u2208 Kv\u0393 by VF. Then Vp assigns g(\u2205, 0)\nto d on all \u3008X, i\u3009, making the consequent of the implication to be proven true throughout.\nNow suppose C * Kv\u0393 and take c \u2208 C\\(Kv\u0393) and \u3008X, i\u3009, \u3008X \u2032, i\u2032\u3009 \u2208 M \u00d7 {0, 1} such that Vp(\u3008X, i\u3009,C) = Vp(\u3008X \u2032, i\u2032\u3009,C). We first show X = X \u2032 by focusing on this c < Kv\u0393. Since c < Kv\u0393, by the definition of Vp , there exists j, k \u2208 {0, 1} such that\nVp(\u3008X, i\u3009, c) = g(X, j),Vp(\u3008X \u2032, i\u2032\u3009, c) = g(X \u2032, k).\nBy the injectivity of g, they are equal only if at least X = X \u2032. Based on this, if i = i\u2032 then \u3008X, i\u3009 = \u3008X \u2032, i\u2032\u3009 and trivially d receives the same value from Vp .\nIf i , i\u2032, recall that we assumed Vp(\u3008X, i\u3009,C) = Vp(\u3008X, i \u2032\u3009,C). For all c \u2208 C, it follows that c \u2208 X as otherwise the values Vp gives to c differ on i and i \u2032. Hence C \u2286 X and by assumption X \u2208 M\u0393 , which means X is closed. Thus, as Kf (C, d) \u2208 \u0393, d \u2208 X as well. By definition,\nVp(\u3008X, i\u3009, d) = g(X, 0) = g(X \u2032, 0) = Vp(\u3008X \u2032, i\u2032\u3009, d).\nFor the last part, we assume that Kf (C, d) < \u0393. Then d < C+\u0393. By the injectivity of g and the fact\nthat C \u2286 C+\u0393,\nVp(\u3008C +\u0393, 0\u3009, d) , Vp(\u3008C +\u0393, 1\u3009, d),\nwhereas\nVp(\u3008C +\u0393, 0\u3009,C) = Vp(\u3008C +\u0393, 1\u3009,C).\nThe above proposition handles the knowledge and ignorance about values and functional dependencies. Now we need to combine it with a traditional completeness proof for epistemic S5 logic. Denote\nL := {\u2206 | \u2206 is maximal consistent in LKVF + EXT and K\u0393 \u2286 \u2206}.\nHere L is non-empty since by axiom T, K\u0393 \u2286 \u0393 so at least \u0393 \u2208 L. Then we define a model on possible worlds W = L \u00d7 M\u0393 \u00d7 {0, 1}: M = \u3008W,U,V\u3009 where for every \u3008\u2206,C, i\u3009 \u2208 W :\nU(\u3008\u2206,C, i\u3009, p) = [p \u2208 \u2206] V(\u3008\u2206,C, i\u3009, d) = Vp(\u3008C, i\u3009, d)\nwhere [p \u2208 \u2206] is the indicator function of the statement p \u2208 \u2206, which evaluates to 1 if the statement is true and 0 otherwise. Here each possible world has three components: amaximally consistent set which contains all formulas true at the world (truth lemma), a closed set of variablesC which is responsible for instantiating the ignorance of the values of variables in C under the functional dependency constraint, and a number 0 or 1 which is responsible for instantiating the ignorance of the functionality property between variables in C and variables outside C.\nNow the goal is to show a truth lemma, i.e., for all \u3008\u2206,C, i\u3009 \u2208 W, \u03c6 \u2208 \u2206 \u21d4 M, \u3008\u2206,C, i\u3009 \u03c6. To this\nend, we first need the following simple observation.\nProposition 3 For all \u2206 \u2208 L,\n\u2022 Kv(d) \u2208 \u2206 \u21d4 Kv(d) \u2208 \u0393\n\u2022 Kf (C, d) \u2208 \u2206 \u21d4 Kf (C, d) \u2208 \u0393\n\u2022 K\u03c6 \u2208 \u2206 \u21d4 K\u03c6 \u2208 \u0393.\nProof. Simply use the axioms 4, 5. For example, the third property follows from\nK\u03c6 \u2208 \u0393 \u21d2 KK\u03c6 \u2208 \u0393 [axiom 4]\n\u21d2 K\u03c6 \u2208 K\u0393 [definiton of K\u0393] \u21d2 K\u03c6 \u2208 \u2206 [K\u0393 \u2286 \u2206]\nK\u03c6 < \u0393 \u21d2 \u00acK\u03c6 \u2208 \u0393 [\u0393 is maximally consistent]\n\u21d2 K\u00acK\u03c6 \u2208 \u0393 [axiom 5] \u21d2 \u00acK\u03c6 \u2208 K\u0393 [K\u0393 definition] \u21d2 \u00acK\u03c6 \u2208 \u2206 [K\u0393 \u2286 \u2206] \u21d2 K\u03c6 < \u2206 [\u2206 is maximally consistent].\nProposition 4 If K\u03c6 < \u0393, then there exists \u2206 \u2208 L such that \u00ac\u03c6 \u2208 \u2206.\nProof. A standard exercise using necessitation and axiom K.\nNow we can prove the truth lemma:\nLemma 1 For all \u3008\u2206,C, i\u3009 \u2208 W, \u03c6 \u2208 LKVF, \u03c6 \u2208 \u2206 \u21d4 M, \u3008\u2206,C, i\u3009 \u03c6.\nProof. By induction on \u03c6, with the following possibilities:\n\u2022 \u03c6 is a propositional letter or a boolean combination. This is standard.\n\u2022 \u03c6 = Kv(d). Since \u2206 \u2208 L, by Proposition 3, Kv(d) \u2208 \u2206 \u21d4 Kv(d) \u2208 \u0393. By Proposition 2, if\nKv(d) \u2208 \u0393 then\nV(\u3008\u0398, D, j\u3009, d) = Vp(\u3008D, j\u3009, d) = Vp(\u3008D \u2032, j \u2032\u3009, d) = V(\u3008\u0398\u2032, D\u2032, j \u2032\u3009, d)\nfor all \u3008\u0398, D, j\u3009, \u3008\u0398\u2032,D\u2032, j \u2032\u3009 \u2208 W . IfKv(d) < \u0393, byProposition2 again, there exists \u3008D, j\u3009, \u3008D\u2032, j \u2032\u3009 \u2208 M \u00d7 {0, 1} such that\nV(\u3008\u0393,D, j\u3009, d) = Vp(\u3008D, j\u3009, d) , Vp(\u3008D \u2032, j \u2032\u3009, d) = V(\u3008\u0393,D\u2032, j \u2032\u3009, d).\nAs such,\nKv(d) \u2208 \u2206 \u21d4 Kv(d) \u2208 \u0393 \u21d4 M, \u3008\u2206,C, i\u3009 \u03c6.\n\u2022 \u03c6 = Kf (D, d). Similar to the last one. By Proposition 3, Kf (D, d) \u2208 \u2206 \u21d4 Kf (D, d) \u2208 \u0393. By\nProposition 2, Kf (D, d) \u2208 \u0393 \u21d4 M, \u3008\u2206,C, i\u3009 Kf (D, d).\n\u2022 \u03c6 = K\u03c8. By Proposition 3, K\u03c8 \u2208 \u2206 \u21d4 K\u03c8 \u2208 \u0393. If K\u03c8 \u2208 \u0393, then \u03c8 \u2208 K\u0393, so for all\n\u3008\u0398,D, j\u3009 \u2208 W , as \u0398 \u2208 L, \u03c8 \u2208 \u0398. By the induction hypothesis, M, \u3008\u0398,D, j\u3009 \u03c8. Thus, M, \u3008\u2206,C, i\u3009 K\u03c8.\nOn the other hand, if K\u03c8 < \u0393, by Proposition 4, there exists \u0398 \u2208 M such that \u00ac\u03c6 \u2208 \u0398. By the induction hypothesis, M, \u3008\u0398, \u2205, 0\u3009 \u00ac\u03c8. So M, \u3008\u2206,C, i\u3009 2 K\u03c8. To sum up, K\u03c8 \u2208 \u0393 \u21d4 M, \u3008\u2206,C, i\u3009 K\u03c8.\nFrom this proposition, we know that for all \u03c6 \u2208 \u0393, M, \u3008\u0393, \u2205, 0\u3009 \u03c6. As the consistent set A we chose at the very beginning is contained in \u0393,M, \u3008\u0393, \u2205, 0\u3009 A, which brings us:\nTheorem 1 Given |G| \u2265 |Pf (Q)\u00d7{0, 1}| and F = \u22c3 {GG i | i \u2208 N}, LKVF+EXT axiomatizesLKVF."}, {"heading": "4 Minimal Function Domain", "text": "In Proposition 1 we proved the soundness condition for LKVF. Notice that the minimal function domain that satisfies this soundness condition is\nF = {idi, j | i, j \u2208 N, 0 < i \u2264 j}.\nIn this section, we consider the axiomatization of the validities of LKVFwith this F. Here, two axioms besides our base system LKVF are valid:\nCHOO Kf (C, d) \u2192 \u2228\nc\u2208C Kf (c, d),\nEQU Kf (c, d) \u2192 Kf (d, c).\nThe validity of the first axiom is justified by:\nd = idi, j (c1, c2, . . . , cj ) = ci = id1,1(ci),\nand notice that when C = \u2205, it degenerates to Kf (\u2205, d) \u2192 \u22a5 or equivalently \u00acKf (\u2205, d), which is true because no zero-ary function exists in F. This also means that EXT is unsound in this case, because even if Kv(d) is true, Kf (\u2205, d) is false regardless. So Kv(d) \u2192 Kf (C, d) is in general false.\nThe validity of the second axiom follows from\nd = id1,1(c) = c \u21d2 c = d = id1,1(d).\nThus, LKVF + CHOO + EQU is sound. Given these two axioms and the fact that F consists only of projection functions, Kf (c, d) is actually talking about the equality of c, d over all possible worlds, even though the value might not be known. This motivates the construction of the equivalence relation by Kf (c, d) used below.\nNow we turn to the proof of the completeness of LKVF + CHOO + EQU. Again, given a consistent set A, our plan is that we first extend it to a maximal consistent set \u0393, then deal with its de re knowledge and propositional knowledge separately, and finally take their Cartesian product to obtain a model of \u0393.\nFirst, we partition Q into equivalence classes with equivalence relation \u223c defined by\nc \u223c d \u21d4 Kf (c, d) \u2208 \u0393.\nIts reflexivity, symmetry and transitivity follow from the axioms PROJ, EQU, and TRAN. Indeed, if we use the C+\u0393 and M\u0393 construction, M\u0393 will contain precisely those partitions and their unions. Every maximally consistent set, or a \u201cworld\u201d, naturally gives rise to such an equivalence relation on Q.\nFor every c \u2208 Q, define [c] = {d | c \u223c d}, and for every C \u2286 Q, define [C] = \u3008[c] | c \u2208 C\u3009, the collection of the equivalence classes which contain at least one of its elements. In particular, [Kv\u0393] = \u3008[c] | Kv(c) \u2208 \u0393\u3009.\nNow, if |G| \u2265 |Q| \u2265 |[Q]|, then there will be two injections from [Q] to G, u and v, such that\nu([c]) = v([c]) \u21d4 [c] \u2208 [Kv\u0393].\nFor example, we can let u be any injection and then make a rotation over the function values of u on [Q]\\[Kv\u0393] to obtain v in case of Q being finite, or let v(d) be the successor of u(d) for d \u2208 [Q]\\[Kv\u0393] in case of Q being infinite (assuming it can be well ordered). We do not need to seek more valuations of variables to prove the truth lemma in this case or to instantiate the ignorances of the knowledge\nabout values in \u0393. Any one of them is capable of refuting Kf (C, d) < \u0393 and together they instantiate Kv(d) < \u0393.\nDefining Vp as a function from {u, v} \u00d7 Q to G by Vp(t, d) = t([d]), the following proposition is\ntrue:\nProposition 5 For any d \u2208 Q,C \u2286 f in Q:\n1. if Kv(d) \u2208 \u0393, \u2203x \u2208 G,\u2200t \u2208 {u, v},Vp(t, d) = x 2. if Kv(d) < \u0393, \u2203t, t\u2032 \u2208 {u, v},Vp(t, d) , Vp(t \u2032, d)\n3. if Kf (C, d) \u2208 \u0393, \u2203 f \u2208 F,\u2200t \u2208 {u, v}, f (Vp(t,C)) = Vp(t, d)\n4. if Kf (C, d) < \u0393, \u2200 f \u2208 F,\u2203t \u2208 {u, v}, f (Vp(t,C)) , Vp(t, d).\nProof. The first two parts are immediate from the definition of u, v: Kv(d) \u2208 \u0393 \u21d4 [d] \u2208 [Kv\u0393] \u21d4 u([d]) = v([d]) \u21d4 Vp(u, d) = Vp(v, d).\nFor the third property, suppose Kf (C, d) \u2208 \u0393 and enumerate C by c1, . . . , cj . By axiom CHOO and the maximality of \u0393, there exists i such that Kf (ci, d) \u2208 \u0393 and thus [d] = [ci]. Now, for every t \u2208 {u, v},Vp(t,C) = \u3008[c1], [c2], . . . , [cj ]\u3009, so [d] = idi, j (Vp(t,C)) and we see that the functional relation between C, d is idi, j .\nFor the last one, suppose Kf (C, d) < \u0393. It follows that [d] < [C] because otherwise, [d] \u2208 [C] and there exists c \u2208 C, [d] = [c], hence Kf (c, d) \u2208 \u0393. By axiom PROJ, Kf (C, c) \u2208 \u0393, and then by axiom TRAN, Kf (C, d) \u2208 \u0393, which contradicts the assumption. Again enumerate C = \u3008c1, . . . , cj \u3009. Since u is injective and [d] < [C], for all ci \u2208 C, u([d]) , u([ci]). Thus, for every j-ary function idi, j \u2208 F, idi, j (Vp(u,C)) = u([ci]) , u([d]). Actually we can use v here as well. The reason we need both of them is that we need to instantiate \u00acKv(d) for d < Kv\u0393.\nTo build a model for \u0393, define\nL = {\u2206 | \u2206 is a maximal consistent set ,K\u0393 \u2286 \u2206}\nW = L \u00d7 {u, v}\nU(\u3008X, t\u3009, p) = [p \u2208 X] V(\u3008X, t\u3009, d) = Vp(t, d)\nM = \u3008W,U,V\u3009.\nThen we have the following truth lemma:\nLemma 2 For all \u3008\u0393, t\u3009 \u2208 W , \u3008\u0393, t\u3009 \u03c6 if and only if \u03c6 \u2208 \u0393.\nProof. The proof is similar to that of Lemma 1. The difference is that we need to use Proposition 5 instead of Proposition 2.\nThe completeness of LKVF + CHOO + EQU follows, so we conclude:\nTheorem 2 Given |G| \u2265 |Q|,F = \u3008idi, j | i, j \u2208 N, 0 < i \u2264 j\u3009, LKVF+ axiomatizes LKVF."}, {"heading": "5 Intermediate Function Domain", "text": "In the previous two sections, we considered the minimal and the maximal function domains subject to our soundness condition. As we can see, in both cases the axiomatizations require some axioms besides the base system LKVF. And those axioms are not very intuitive if we intend to interpret Kf as \u201cknowing a/the functional dependency\u201d. In this section, we show that we can construct a function domain such that ifF is set to it,LKVFwill be complete and no extra axiom is needed. The construction is somewhat artificial but in the next section, we can view this as just one step of a completeness proof at a higher level.\nThe main difficulty here is to refute the axiom scheme EXT used in the axiomatization of the full function domain case. EXT is validated in that case because whenever the value of a variable is known, a constant function can be used to explain the functional dependency between it and any other variables in all epistemic possibilities. Thus, to refute this scheme as an axiom, we must make sure that the function domain encodes information more than just functionality so that we can refute Kf (c, d) even when functionality holds, such as when Kv(d) is true. The function domain to be constructed below will enable a suitably constructed model to refute Kf (C, d) without ever looking into the functionality condition.\nTo do this, we go to higher dimensions by assuming G = 2Pf (Q), interpreted as functions from the finite subsets of Q to {0, 1} or as a rather long sequence indexed by Pf (Q) where at each index (dimension) C we can choose from {0, 1}. This is actually only a size requirement, since so long as |G| \u2265 |2Pf (Q) |, we can always embed 2Pf (Q) intoG by an injection. For any x \u2208 G and C \u2286 f in Q, we use x[C] to retrieve the image of C under x, which will be 0 or 1. Now we construct the intermediate F:\nDefinition 3 Let F be the collection of the functions f satisfying the following constraints: where y is f (x1, . . . xn), for all C \u2286 f in Q,\nx1[C] = x2[C] = . . . = xn[C] = 0 \u21d2 y[C] = 0.\nAlternatively, where\nLmaxn = { f \u2208 G Gn | \u2200C \u2286 f in Q, f (x1, . . . xn)[C] \u2264 max(x1[C], . . . xn[C])},\nwith max() = 0, define F = \u22c3\ni\u2208N Lmaxi .\nNotice that the requirement is specified for all dimensions individually, and they do not interfere\nwith each other. This allows us to do constructions and proofs for each dimension separately.\nNowwe can check that thisF satisfies the soundness condition. Projection functions are all included in F because they all satisfy the above constraint: for any C \u2286 f in Q, either xi[C] = y[C] = 1, where the antecedent and the consequent are both false, or xi[C] = y[C] = 0, where they are both true. For compositionality, let h = f (g1, . . . gn). If all inputs to h are 0 at any dimension C, then since g1, . . . gn \u2208 F, they evaluate to 0 at dimension C. Then all inputs to f are 0 at this dimension C. So as f \u2208 F, it evaluates to 0 as well. Thus, h is in F.\nTo prove the completeness of LKVF with respect to LKVF with this new function domain F, again the satisfiability of any maximal consistent set \u0393 is required, and the crucial step is still the construction of a set of valuations such that the formulas of the form Kv(d),\u00acKv(d),Kf (C, d), and \u00acKf (C, d) in \u0393 are satisfied. Indeed, for this purpose, we only need two valuations, a situation similar to that in the case of the minimal function domain. This is because when \u00acKf (C, d) \u2208 \u0393, we are refuting Kf (C, d) not by a failure of functionality but by a failure of conformation to F. Breaking functionality requires at least two possible value assignments, but if F says no, a single possibility is too many. Recall the C+\u0393 we used in the previous two cases, which is defined as {d \u2208 Q | Kf (C, d) \u2208 \u0393}. Now we need to define a slightly different M\u0393:\n{C+\u0393 | C \u2286 f in Q} \u222a {Kv\u0393}.\nThis is the collection of all finitely generated closed sets plus Kv\u0393. We need this extra union since axiom EXT is not available now, which means Kv\u0393 is not automatically contained in any C +\u0393, and it is quite possible that Kv\u0393 is not finitely generated. But still, M\u0393 has a cardinality no larger than Pf (Q), since if Q is finite, Pf (Q) contains all subsets of Q, and if infinite, Pf (Q) is also infinite and adding one more element into it does not increase its cardinality. Thus, there is still a surjection g from Pf (Q) to M\u0393 . We can think of this g as a pseudo (\u00b7) +\u0393 function, and it does not matter which surjection we use for g. Now we can specify the two valuations we need:\nDefinition 4 Let g be any surjection from Pf (Q) to M\u0393. Define V0,V1 : Pf (Q) \u2192 G such that for all d \u2208 Q,C \u2286 f in Q,\nV0(d)[C] =\n{ 0 if d \u2208 g(C)\n1 if d < g(C),\nV1(d)[C] =\n{ V0(d)[C] if g(C) , Kv\u0393\n0 if g(C) = Kv\u0393.\nThe use of V0 is to refute Kf (C, d) if \u00acKf (C, d) \u2208 \u0393, and the use of V1 is to refute Kv if \u00acKv(d) \u2208 \u0393. Now we prove this in detail:\nProposition 6 If Kf (C, d) \u2208 \u0393, then there exists f \u2208 F such that for i \u2208 {0, 1}, f (Vi(C)) = vi(d). If \u00acKf (C, d) \u2208 \u0393, then for all f \u2208 F, f (V0(C)) , V0(d).\nProof. To prove the first claim, assume Kf (C, d) \u2208 \u0393 with C enumerated by c1, . . . cn. We will construct a function f \u2208 F that works in both V0 and V1: for all D \u2286 f in Q, V0(d)[D] = f (V0(C))[D] and V1(d)[D] = f (V1(C))[D]. Obviously this construction should be done dimension by dimension. For any D \u2286 f in Q, the possibilities are:\n\u2022 d \u2208 g(D). Thus, by definition, V0(d)[D] = 0. V1(d)[D] = 0 as well since the only change\nhappens when D = Kv\u0393, and even in that case, only 1 turns to 0 and not vice versa. So we can define f (x1, . . . xn)[D] = 0. Then V0(d)[D] = f (V0(C))[D] and V1(d)[D] = f (V1(C))[D], regardless of what V0(C) and V1(C) are.\n\u2022 d < g(D). Since g(D) is closed and Kf (C, d) \u2208 \u0393, C * g(D). Find cp < g(D). Define\nf (x1, . . . xn)[D] = xp[D]. This definition satisfies the requirement of F. And it works for V0 because v0(d)[D] = V0(cp)[D] = 1 (both d, cp are outside g(D)). It also works for V1 because their values change to 0 together if g(D) = Kv\u0393. To prove the second claim, recall thatC+\u0393 = {d | Kf (C, d) \u2208 \u0393} is closed under Kf in \u0393 and contains C by axioms TRAN and PROJ. Now since Kf (C, d) < \u0393, d < C+\u0393 . As g is a surjection from Pf (Q) to M\u0393, there exists D \u2286 f in Q such that g(D) = C +\u0393. Thus, by the definition of V0, V0(d)[D] = 1, while for all c \u2208 C \u2286 C+\u0393 = g(D), V0(c)[D] = 0. Hence V0(d)[D] > max(V0(C)[D]), which makes it impossible to find a function f \u2208 F such that f (V0(C)) = V0(d).\nProposition 7 If Kv(d) \u2208 \u0393, then V0(d) = V1(d). If Kv(d) < \u0393, then V0(d) , V1(d).\nProof. If Kv(d) \u2208 \u0393, then d \u2208 Kv\u0393. Now for any C \u2286 f in Q, if g(C) , Kv\u0393, then V1(d)[C] = V0(d)[C] by definition. If g(C) = Kv\u0393, V1(d)[C] = 0, but V0(d)[C] = 0 as well since d \u2208 Kv\u0393. Thus, V0(d) = V1(d).\nIf Kv(d) < \u0393, d < Kv\u0393. Since we explicitly added Kv\u0393 to \u0393, Kv\u0393 \u2208 M\u0393 , and we can find a C \u2286 f in Q such that g(C) = Kv\u0393. Then, using the definition ofV0 andV1, we knowV0(d)[C] = 1 butV1(d)[C] = 0, because g(C) = Kv\u0393 and we assumed d < Kv\u0393. Thus, V1(d) , V0(d).\nBased on the previous two propositions, we can build a model for \u0393 by defining\nL = {\u2206 | \u2206 is a maximal consistent set,K\u0393 \u2286 \u2206}\nW = L \u00d7 {0, 1}\nU(\u3008X, t\u3009, p) = [p \u2208 X] V(\u3008X, t\u3009, d) = Vt (d)\nM = \u3008W,U,V\u3009.\nWith a proof which is essentially the same as the proof of the truth lemma Lemma 1 in the full function domain case, using Propositions 6 and 7 instead of Proposition 2, we have:\nLemma 3 For all \u3008\u0393, t\u3009 \u2208 W , M, \u3008\u0393, t\u3009 \u03c6 if and only if \u03c6 \u2208 \u0393.\nM, \u3008\u0393, 0\u3009 \u0393 follows from this truth lemma. This finishes the completeness proof of the intermediate case, so we have:\nTheorem 3 Given |G| \u2265 |2Pf (Q) |, F = \u22c3\ni\u2208N Lmaxi , LKVF axiomatizes LKVF."}, {"heading": "6 Unifying Logic", "text": "In all the previous settings, our logic LKVF takes a function domain F as a parameter. This function domain is meant to be the set of a priori possible functions for functional dependencies over variables. But if this set of a priori possibilities is relative to the agents in discussion, then this set of functions should be variable over models instead of being part of the logic and fixed for all models. After all, an agent might hold different prior knowledge in different worlds. Also, the function domain constructed in the intermediate case is, while not nonsensical for its interesting \u2264 max structure, still somewhat artificial for its large dimension. If this function domain is part of the model, it is at the choice of the agent under discussion.\nIndeed, if we put the function domain inside the definition of a model by setting\nM = \u3008F,W,U,V\u3009,\nwhere F : G \u2192 G satisfies the soundness condition that it contains all projection functions and is closed under function composition, W is a set of possible worlds,U is an assignment function for propositional letters, and V is an assignment function for variables, and we leave the semantics untouched, then the soundness and completeness of LKVF follow immediately from the results presented so far. Using LKVF\u2217 to denote the logic induced by the definition of the models above, we have:\nTheorem 4 LKVF is sound and complete with respect to LKVF\u2217 when |G| \u2265 |2Pf (Q) |.\nProof. Because for every model of LKVF\u2217, its function domain satisfies the soundness condition Proposition 1, LKVF is sound in all the models of LKVF\u2217. This shows the soundness.\nFor any set \u0393 maximally consistent with respect to LKVF, take the F and the modelM constructed in the intermediate function domain case. Then \u3008F,M\u3009 \u0393 and \u3008F,M\u3009 is a model of LKVF\u2217. Thus, every maximal consistent set is satisfiable.\nThe proof above is a direct adaptation of the completeness result in the intermediate function domain case. In that case, we built a function domain that works for all maximal consistent sets in the sense that for all maximal consistent sets \u0393, this same function domain can be used to refute Kf (C, d) < \u0393 when functionality cannot be used. This is actually the reason why the cardinality requirement for G is very high there. However, in the current setting where function domains are part of the models, the\nonly thing needed is a method to build a function domain for each maximal consistent set \u0393 so that the functional dependency relation between C, d is rejected if \u00acKf (C, d) \u2208 \u0393. The difference will be made more clear in the following multiagent case."}, {"heading": "6.1 Multiagent logic with variable function domain", "text": "Given an index set A of agents, to accommodate multiple agents, the language is now expanded to\n\u03c6 ::= \u22a4 | p | Kvi(d) | Kfi(C, d) | \u00ac\u03c6 | (\u03c6 \u2227 \u03c6) | Ki\u03c6,\nwith p \u2208 P, i \u2208 A, d \u2208 G, and C \u2286 f in G. The only difference from the single agent language defined in Definition 1 is that now we have for each agent i a separate Kvi , Kfi , and Ki .\nFor semantics, a model is now defined as:\nM = \u3008W, \u3008\u223ci\u3009i\u2208A,U,V, \u3008Fi\u3009i\u2208A\u3009\nwhere Fi is intended to assign a collection of functional relationships that agent i deems possible a priori to all possible worlds inW . Thus, for all w \u2208 W, i \u2208 A, Fi(w) is required to include all projection functions and to be closed under function composition. \u223ci is the epistemic accessibility relation of agent i and is required to be an equivalence relation onW , the set of possible worlds (complete epistemic scenarios). Now since Fi is supposed to be \u201cprior knowledge\u201d, it is also required that if w \u223ci w \u2032, then Fi(w) = Fi(w \u2032). However, we are not assuming that the prior knowledge of any agent is public to other agents, so it is quite possible that Fj (w) , Fj (w \u2032) if j , i, even when w \u223ci w \u2032. In a nutshell, Fis are not common knowledge.\nThe semantic clauses are defined similarly with agent indices for knowledge sentences:\nM,w Kvi(d) \u21d4 \u2203x \u2208 G,\u2200w \u2032 \u223ci w,V(w \u2032, d) = x\nM,w Kf (C, d) \u21d4 \u2203 f \u2208 Fi(w), \u2200w \u2032 \u223ci w \u2032,V(w\u2032, d) = f [V(w\u2032,C)]\nM,w K\u03c6 \u21d4 \u2200w\u2032 \u223ci w \u2032 \u21d2 M,w\u2032 \u03c6.\nLet LKVF\u2217m name this multiagent logic. Also, let LKVFm denote the axiom system adapted from LKVFwith indexedversionof those axioms involving knowledge operators. In particular, no interaction between agents is allowed, as there are no axioms saying that we can derive any knowledge about other agents from any agent. We will see that this is precisely because we allow each agent to possess its own prior knowledge about possible functional dependencies, not necessarily known to other agents. Once we assume that Fis are common knowledge, interactions will arise, and we will discuss this point in the last section.\nThe soundness of LKVFm with respect to LKVF \u2217 m follows from an indexed version of Proposition\n1. For completeness we need a new construction:\nDefinition 5 (Dependency lattice) Given a maximal consistent set \u0393 in LKVFm and an agent index\ni, first define the indexed version of the (\u00b7)+\u0393 operator, Cl\u0393 i , on finite subsets of Q as\nCl\u0393i (C) = {d | Kfi(C, d) \u2208 \u0393}.\nThen, extend this operator to P(Q) by Cl\u0393 i (C) :=\n\u22c3 {Cl\u0393\ni (Cf ) | Cf \u2286 f in C}. When the context is clear,\nwe may drop the superscript or subscript of Cl\u0393 i . Now this is a finitary closure operator as it satisfies, through the axioms of LKVFm,\nCl(C) = Cl(Cl(C)),C \u2286 Cl(C),C \u2286 D \u21d2 Cl(C) \u2286 Cl(D).\nWhen a set C \u2286 Q satisfies C = Cl(C), it is called a closed set. A classical result is that the collection of all closed sets under a closure operator forms a lattice \u3008L,\u2227,\u2228\u3009 with\nL = {C \u2286 Q | C = Cl\u0393i (C)}\nC \u2227 D = C \u2229 D C \u2228 D = Cl\u0393i (C \u222a D),\nwhich we name L\u0393 i . For all c \u2208 Q, let Cl\u0393 i (c) stands for Cl\u0393 i ({c}) to save a few brackets.\nAlso, given \u0393, the indexed version of the propositional knowledge and the value knowledge of agent\ni is denoted by\nKi,\u0393 = {\u03c6 | Ki\u03c6 \u2208 \u0393},Kvi,\u0393 = {d | Kvi(d) \u2208 \u0393}.\nThen, it is not hard to see that L\u0393 i is only dependent on Ki,\u0393 , i.e., if Ki,\u0393 = Ki,\u0393\u2032 then L \u0393 i = L\u0393\n\u2032\ni . This is\nbecause the closure operator Cl\u0393 i uses only the formulas of the form Kfi(C, d) in \u0393, and if we assume Ki,\u0393 = Ki,\u0393\u2032 ,\nKfi(C, d) \u2208 \u0393 \u21d4 KiKfi(C, d) \u2208 \u0393 \u21d4 KiKfi(C, d) \u2208 \u0393 \u2032 \u21d4 Kfi(C, d) \u2208 \u0393 \u2032\nfor all C \u2286 f in Q and d \u2208 Q.\nFor the completeness proof to go through, there is again a cardinality requirement for G: |G| \u2265 |Q \u00d7 {0, 1}|, and without loss of generality, we identify G with Q \u00d7 {0, 1}. The Q part will be used to construct the function domains and refute Kf (C, d), while the {0, 1} part will be used for refuting Kv(d).\nTo use the Q part to construct the function domains, we need to forget the {0, 1} part. Define\nfunction h\u0393 i : Q \u00d7 {0, 1} \u2192 L\u0393 i , \u3008c, n\u3009 7\u2192 Cl\u0393 i (c) for each i, \u0393. This map is forgetful about the second coordinate and turns a variable name into its closure. Again the superscript and subscript are dropped when no confusion arises. Now we are able to define a new version of the Lmax function set:\nDefinition 6 Given a maximal consistent set \u0393 and an agent index i, we can construct the dependency lattice L and the corresponding h. Then define Fi (\u0393) to be the collection of all functions f on G with any arity n \u2208 N such that:\nh( f (x1, x2, . . . xn)) \u2264 \u2228 {h(x1), h(x2), . . . h(xn)},\nwhere \u2264 is defined in L by a \u2264 b \u21d4 a \u2227 b = b, or equivalently, a \u2286 b. The empty disjunction is the bottom element of L: Cl(\u2205).\nIt is straightforward to see that Fi (\u0393) is dependent only on Ki,\u0393. Then we need to verify the\nsoundness conditions immediately:\nProposition 8 For every maximal consistent set \u0393 and i \u2208 A, Fi (\u0393) contains all projection functions on G and is closed under composition.\nProof. Take a projection function f (x1, . . . xn) = xk . Then by the definition of join in a lattice,\nh(xk ) \u2264 \u2228 {h(x1), \u00b7 \u00b7 \u00b7 , h(xn)}\nsince h(xk ) \u2208 {h(x1), \u00b7 \u00b7 \u00b7 , h(xn)}.\nFor function composition, let x represent a sequence of variables and h(x) the sequence after the application of h. Then take a function f (x) = g0(g1(x1), \u00b7 \u00b7 \u00b7 gn(xn)) where x includes the union of all xks and all g functions are already in Fi (\u0393). Now\nh( f (x)) = h(g0(g1(x1), \u00b7 \u00b7 \u00b7 gn(xn)))\n\u2264 \u2228 {h(g1(x1), \u00b7 \u00b7 \u00b7 gn(xn))} \u2264 \u2228 {\u2228h(x1), \u00b7 \u00b7 \u00b7 \u2228 h(xn)} \u2264 \u2228 h(x).\nThis shows that the composition f satisfies the requirement and is in Fi (\u0393).\nThe next proposition shows why we use the dependence lattice to define the function domains for each agent. The proposition says that to make Kfi(C, d) true, we only need to make sure that functionality holds, and to make Kfi(C, d) false, we do not need to pay any special attention as the function domain Fi (\u0393) has already taken care of everything.\nProposition 9 For every \u03c3 \u2208 2Q, define v\u03c3 : Q \u2192 G, d 7\u2192 \u3008d, \u03c3(d)\u3009. This means we restrict the value of d \u2208 Q to be \u3008d, 0\u3009 or \u3008d, 1\u3009. Now for every maximal consistent set \u0393, i \u2208 A, C \u2286 f in Q, d \u2208 Q, and \u03a3 \u2286 2Q:\n\u2022 if \u03a3 satisfies the functionality condition for C, d, namely for all \u03c31, \u03c32 \u2208 \u03a3, \u03c31(C) = \u03c32(C)\nimplies \u03c31(d) = \u03c32(d), and if Kfi(C, d) \u2208 \u0393, then there exists f \u2208 Fi (\u0393) such that for all \u03c3 \u2208 \u03a3, v\u03c3(d) = f (v\u03c3(C));\n\u2022 if Kfi(C, d) < \u0393 then for all \u03c3 \u2208 \u03a3 and for all f \u2208 Fi (\u0393), v\u03c3(d) , f (v\u03c3(C)).\nProof. First notice that in the definition of Fi (\u0393), the restriction actually forgets the second coordinate of the inputs and outputs. But it is the second coordinate that all \u03c3 \u2208 \u03a3 try to adjust. By definition, the first coordinates of v\u03c3(c) for all c \u2208 Q are just themselves. So for all c \u2208 Q, \u03c3 \u2208 \u03a3, h(v\u03c3(c)) = Cl(c).\nIf Kfi(C, d) \u2208 \u0393, then (dropping the super and subscripts) d \u2208 Cl(C). This means the same as {d} \u2286 Cl(C), which, by the fact that Cl is a closure operator, implies Cl(d) \u2286 Cl(Cl(C)) = Cl(C). Then Cl(d) \u2286 Cl(C), which means h(v\u03c3(d)) \u2264 Cl(C) in L for all \u03c3 \u2208 \u03a3. Also, Cl(C) = \u2228 {Cl(c1),Cl(c2), . . .Cl(cn)} = \u2228 h(v\u03c3(C)) for all \u03c3 \u2208 \u03a3. So indeed h(v\u03c3(d)) \u2264 \u2228 h(v\u03c3(C)) in L. Together with the functionality assumed for \u03a3, this means mapping v\u03c3(C) to v\u03c3(d) simultaneously for all \u03c3 \u2208 \u03a3 is allowed in Fi (\u0393). Then we can extend this partial map to a map from G n to G in Fi (\u0393). An easy solution is to do projection for all other possible inputs.\nIf Kfi(C, d) < \u0393, then d < Cl(C) and hence Cl(d) * Cl(C). If \u03a3 is empty, the statement is trivially\ntrue. So assume \u03a3 is not empty. Now take an arbitrary \u03c3 \u2208 \u03a3. Then h(v\u03c3(d)) 6\u2264 \u2228 h(v\u03c3(C)), which violates the restriction on Fi (\u0393) if v\u03c3(C) is to be mapped to v\u03c3(d). Thus, for all f \u2208 Fi (\u0393), v\u03c3(d) , f (v\u03c3(C)).\nThis proposition says that the dependency lattice L\u0393 i and the corresponding function domain Fi (\u0393) form a suitable representation of the function domain that i uses implicitly given i\u2019s knowledge and ignorance in \u0393. As we hinted before the construction, this function domain is so specific about what is possible that when Kfi(C, d) is not known, it is not rejected by a failure of functionality, which requires at least two epistemically possible assignment, but by a failure of conforming to the prior knowledge encoded in the function domain, as shown by the second bullet in the previous proposition. On the other hand, once functionality holds in all possible assignments, we do not need to worry about whether the function domain allows it or not, which is clear from the proof of the first bullet. Thus, this Fi (\u0393) is a perfect choice.\nFor the Kvi part, we need to adjust the assignments of variables to construct more (epistemically) possible assignments to reject formulas like Kvi(d) which is not in \u0393: if in one world d is assigned to be x, then we want to make an adjustment to get a new world where it is assigned to y , x. This will be done by moving the value of d to \u3008d, 1\u3009 from \u3008d, 0\u3009 or vice versa. And for agent i in a maximal consistent set \u0393, the variables to be moved are exactly Kvi,\u0393 = {d | Kvi(d) < \u0393}, the complement of the set of the variables with a known value by i. By maximality, it is also the collection of all d \u2208 Q such that \u00acKvi(d) \u2208 \u0393. It is crucial to move the value of all variables in Kvi,\u0393 at once, as otherwise there might be some unwanted violation of functionality: even though for both \u03c3 = \u03c31, \u03c32, h(v\u03c3(d)) \u2264 \u2228 h(v\u03c3(C)), it could be that v\u03c31(C) = v\u03c32 (C) while v\u03c31 (d) , v\u03c31(d). So in this case, no functional dependency exists from C to d, but the reason is not that d is at the wrong place in the lattice, but instead the failure of functionality. We must avoid this situation, by changing all values of variables in Kvi,\u0393 simultaneously when producing a new possible assignments in a new possible world. This motivates the following definition:\nDefinition 7 (Value Move) Given \u0393 a maximal consistent set and i \u2208 A, define the value move operator Mv\u0393 i : 2Q \u2192 2Q:\nMv\u0393i (\u03c3)(d) =\n{ \u03c3(d) d \u2208 Kvi,\u0393\n1 \u2212 \u03c3(d) d \u2208 Kvi,\u0393 .\nThis operator captures agent i\u2019s switching of the values of the variables in Kvi,\u0393 all at once. Two\nimportant properties should be noted. First, Mv\u0393 i is dependent only on Ki,\u0393 . Indeed it only depends on Kvi,\u0393 but because of the axioms KV4 and KV5, it is equivalent to say that it depends only on Ki,\u0393 . This means that if Ki,\u0393 = Ki,\u0393\u2032 , then as an operator, Mv \u0393 i = Mv\u0393 \u2032 i .\nAnother important property of this operator is that Mv\u0393 i (Mv\u0393 i (\u03c3)) = \u03c3 for all \u0393, i, \u03c3 ranging over\nmaximal consistent sets, A and 2Q. Thus, it is actually an inverse operator.\nEquipped with the above definitions, the canonical model can now be defined:\nDefinition 8 (Canonical Model) Build a model M = \u3008W, \u3008\u223ci\u3009i\u2208A,U,V, \u3008Fi\u3009i\u2208A\u3009 as follows:\n\u2022 W = {\u3008\u0393, \u03c3\u3009 | \u0393 a maximal consistent set, \u03c3 \u2208 2Q},\n\u2022 \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u0393 \u2032, \u03c3\u2032\u3009 iff\n1. Ki,\u0393 = Ki,\u0393\u2032 , which says that two worlds must share the same set of knowledge of i, and 2. \u03c3 = \u03c3\u2032 or \u03c3 = Mv\u0393 i (\u03c3\u2032), which says that any agent i needs to see some different possible\nassignments of the variables, but not too many: just two,\n\u2022 U(\u3008\u0393, \u03c3\u3009, p) = [p \u2208 \u0393],\n\u2022 V(\u3008\u0393, \u03c3\u3009, d) = \u3008d, \u03c3(d)\u3009, or equivalently using notations introduced above in Proposition 9,\nV(\u3008\u0393, \u03c3\u3009) = v\u03c3,\n\u2022 Fi(\u3008\u0393, \u03c3\u3009) = Fi (\u0393).\nBefore proving the truth lemma, it must be shown thatM is indeed a model of LKVF\u2217m. This amounts to checking the following:\n\u2022 \u223ci is an equivalence relation for all i \u2208 A,\n\u2022 Fi(\u3008\u0393, \u03c3\u3009) satisfies the soundness condition, \u2022 if \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u0393 \u2032, \u03c3\u2032\u3009 then Fi(\u3008\u0393, \u03c3\u3009) = Fi(\u3008\u0393 \u2032, \u03c3\u2032\u3009).\nBecause \u223ci is defined using equality, its reflexivity is easy to see. We need the two special properties of Mv\u0393 i noted right after the Definition 7 to show symmetry and transitivity.\nFor symmetry, suppose \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u0393 \u2032, \u03c3\u2032\u3009. Then Ki,\u0393 = Ki,\u0393\u2032 . Thus, Mv \u0393 i = Mv\u0393\n\u2032\ni and \u03c3 =\nMv\u0393 i (\u03c3\u2032) = Mv\u0393\n\u2032\ni (\u03c3\u2032). Also, asMv\u0393\n\u2032\ni is an inverse operator, by applying it twice, we get \u03c3\u2032 = Mv\u0393\n\u2032\ni (\u03c3).\nSo it can be concluded that \u3008\u0393\u2032, \u03c3\u2032\u3009 \u223ci \u3008\u0393, \u03c3\u3009.\nTransitivity can be shown similarly. Suppose \u3008\u03931, \u03c31\u3009 \u223ci \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u03932, \u03c32\u3009. It immediately\nfollows that Mv \u03931 i = Mv\u0393 i = Mv \u03932 i . So we can treat all of them as Mv\u0393 i . Then we know \u03c3 = \u03c31 or \u03c3 = Mv\u0393 i (\u03c31), and \u03c3 = \u03c32 or \u03c3 = Mv \u0393 i (\u03c32). There are in total four possibilities depending on which disjuncts hold, and the only less trivial one is when \u03c31 = Mv \u0393 i (\u03c3) and \u03c3 = Mv\u0393 i (\u03c32). But if that is the case, then \u03c31 = Mv \u0393 i (Mv\u0393 i (\u03c32)) = \u03c32. So transitivity holds.\nThe soundness condition was already shown when Fi(\u3008\u0393, \u03c3\u3009) = Fi (\u0393) is defined in Proposition 8. We also noted that Fi (\u0393) only depends on Ki,\u0393 because it only depends on the dependency lattice L \u0393 i , which in turn only depends on Ki,\u0393 . If \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u0393 \u2032, \u03c3\u2032\u3009, Ki,\u0393 = Ki,\u0393\u2032 and Fi (\u0393) = Fi (\u0393 \u2032), so indeed Fi(\u3008\u0393, \u03c3\u3009) = Fi(\u3008\u0393 \u2032, \u03c3\u2032\u3009). So we conclude that M is a model of LKVF\u2217m.\nThe unconventional second condition for \u223ci is there for the purpose of preventing unwanted failure of functionality. As explained after Proposition 9, we are not refuting Kf (C, d) using functionality, so it is better to keep the functionalities between as many variables as possible. In particular, all functionalities between the variables in Kvi,\u0393 can be preserved. The condition does this by requiring that if i sees more than one possibility for some variables, then all the values of Kvi,\u0393 must change to a different epistemic possibility together using the value move operator. This makes impossible the situation where one variable in Kvi,\u0393 realizes a different possibility while another stays the same, a situation that characterizes the failure of functionality.\nNow the truth lemma in this case can be proven:\nLemma 4 (Truth Lemma) For all \u03c6 in the language of LKVF\u2217m and all maximal consistent sets \u0393 in the axiom system LKVFm,M, \u3008\u0393, \u03c3\u3009 \u03c6 if and only if \u03c6 \u2208 \u0393.\nProof. Use induction on \u03c6. The propositional letters and boolean combination cases are conventional. We focus on the knowledge cases.\n\u03c6 = Ki\u03c8. If Ki\u03c8 \u2208 \u0393, then by the definition of \u223ci , for all \u3008\u0393 \u2032, \u03c3\u2032\u3009 \u223ci \u3008\u0393, \u03c3\u3009, Ki,\u0393 = Ki,\u0393\u2032 . Thus, \u03c8 \u2208 Ki,\u0393\u2032 and Ki\u03c8 \u2208 \u0393 \u2032. By axiom T, \u03c8 \u2208 \u0393\u2032, and using the induction hypothesis, M, \u3008\u0393\u2032, \u03c3\u2032\u3009 \u03c8. Thus, M, \u3008\u0393, \u03c3\u3009 Ki\u03c8 by the semantic clause of Ki .\nIf Ki\u03c8 < \u0393, then by a standard argument using axioms and the maximality of \u0393, Ki,\u0393 \u222a {\u00ac\u03c8} is consistent and expandable to a maximal consistent set \u0393\u2032. Then \u3008\u0393\u2032, \u03c3\u3009 \u223ci \u3008\u0393, \u03c3\u3009 andM, \u3008\u0393, \u03c3\u3009 \u00ac\u03c8 by the induction hypothesis. SoM, \u3008\u0393, \u03c3\u3009 2 Ki\u03c8.\n\u03c6 = Kvi(d). If Kvi(d) \u2208 \u0393, then d \u2208 Kvi,\u0393 and thus Mv \u0393 i (\u03c3)(d) = \u03c3(d). Now for all \u3008\u0393\u2032, \u03c3\u2032\u3009 \u223ci\n\u3008\u0393, \u03c3\u3009, \u03c3 is equal to \u03c3\u2032 or Mv\u0393 i (\u03c3\u2032). But as d \u2208 Kvi,\u0393, Mv \u0393 i is not changing the value of d. So in either case, \u03c3\u2032(d) = \u03c3(d). Thus, the value of d is fixed to \u3008d, \u03c3(d)\u3009 among all worlds accessible by i from \u3008\u0393, \u03c3\u3009.\nIf Kvi(d) < \u0393, then d < Kvi,\u0393 and Mv \u0393 i (\u03c3) will change the value of d. Take the world \u3008\u0393\u2032, \u03c3\u2032\u3009 with\n\u03c3\u2032 = Mv\u0393 i (\u03c3). Then \u03c3 = Mv\u0393 i (\u03c3\u2032), so \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u0393 \u2032, \u03c3\u2032\u3009. Also, \u03c3\u2032(d) = 1 \u2212 \u03c3(d) , \u03c3(d). Thus, V(\u3008\u0393\u2032, \u03c3\u2032\u3009, d) , V(\u3008\u0393, \u03c3\u3009, d). By the semantic clause of Kvi(d),M, \u3008\u0393, \u03c3\u3009 2 Kvi(d).\n\u03c6 = Kfi(C, d). Suppose Kfi(C, d) \u2208 \u0393. Then we should first show that the functionality condition holds. For any \u3008\u03931, \u03c31\u3009, \u3008\u03932, \u03c32\u3009 \u223ci \u3008\u0393, \u03c3\u3009, if V(\u3008\u03931, \u03c31\u3009,C) = V(\u3008\u03932, \u03c32\u3009,C), then there are two possibilities\n\u2022 C \u2286 Kvi,\u0393. Then by axiom VF, d \u2208 Kvi,\u0393 as well, and by the argument in the previous case,\nV(\u3008\u03931, \u03c31\u3009, d) = V(\u3008\u03932, \u03c32\u3009, d) = \u3008d, \u03c3(d)\u3009.\n\u2022 C * Kvi,\u0393. Then take c \u2208 C \u2229 Kvi,\u0393. Since V(\u3008\u03931, \u03c31\u3009,C) = V(\u3008\u03932, \u03c32\u3009,C), \u03c31(c) = \u03c32(c).\nBecause \u3008\u03931, \u03c31\u3009 \u223ci \u3008\u0393, \u03c3\u3009 \u223ci \u3008\u03932, \u03c32\u3009, \u3008\u03931, \u03c31\u3009 \u223ci \u3008\u03932, \u03c32\u3009. So either \u03c31 = \u03c32 or \u03c31 = Mv \u03931 i (\u03c32). But the latter case cannot happen because if that is true, then \u03c31(c) , \u03c32(c) since c \u2208 Kvi,\u0393. So \u03c31 = \u03c32 and in particular \u03c31(d) = \u03c32(d). Thus, V(\u3008\u03931, \u03c31\u3009, d) = V(\u3008\u03932, \u03c32\u3009, d).\nIndeed, by our definition of \u223ci , among all worlds accessible from \u3008\u0393, \u03c3\u3009 by \u223ci , there are altogether only two possible valuations: \u03c3 and Mv\u0393 i (\u03c3). Thus, by applying Proposition 9 to set \u03a3 = {\u03c3\u2032 | \u3008\u0393\u2032, \u03c3\u2032\u3009 \u223ci\n\u3008\u0393, \u03c3\u3009}, it follows that there exists a function f \u2208 Fi (\u0393) = Fi(\u3008\u0393, \u03c3\u3009) such that V(\u3008\u0393 \u2032, \u03c3\u2032\u3009, d) = f (V(\u3008\u0393\u2032, \u03c3\u2032\u3009,C)) for all \u3008\u0393\u2032, \u03c3\u2032\u3009 \u223ci \u3008\u0393, \u03c3\u3009. SoM, \u3008\u0393, \u03c3\u3009 Kfi(C, d).\nIf Kfi(C, d) < \u0393, then by Proposition 9 again, for every function f \u2208 Fi (\u0393) = Fi(\u3008\u0393, \u03c3\u3009), there exists \u3008\u0393\u2032, \u03c3\u2032\u3009 \u223ci \u3008\u0393, \u03c3\u3009 such that V(\u3008\u0393 \u2032, \u03c3\u2032\u3009, d) , f (V(\u3008\u0393\u2032, \u03c3\u2032\u3009,C)). Actually \u3008\u0393, \u03c3\u3009 itself works here. Thus,M, \u3008\u0393, \u03c3\u3009 2 Kfi(C, d).\nFrom the truth lemma, it can be concluded that every consistent set is satisfied somewhere in the canonical model M built above. So the completeness of LKVF with respect to LKVF\u2217m follows. Together with the soundness proven in Proposition 8, we obtain an axiomatization of LKVF\u2217m:\nTheorem 5 Under the cardinality requirement G \u2265 |Q \u00d7 {0, 1}|, LKVFm is an axiomatization of LKVF\u2217m."}, {"heading": "7 Discussion and Future Work", "text": "First, we discuss the semantics of the Kf operator. Obviously, while Kv(d) means that there is only one value for d to take, in general, the truth of Kf (C, d) does not force the set of possible functional dependency relations of d on C to be a singleton.\nIt could be argued that the agent can nevertheless regard all those candidates as equivalent, because they must have exactly the same behavior over the partial domain P = {V(w,C) | w \u2208 W}. And things inG |C | but outside this set P are epistemically impossible. Thus, the behavior of functions onG |C |\\P is something that our agent can and will ignore if situations epistemically impossible do not concern the agent. One example, also mentioned in the introduction, is when \u201cknowing-value\u201d is the real objective of the agent and \u201cknowing-dependency\u201d only expresses the agent\u2019s potential to know more values. The semantics proposed in this paper allows adjustments to F, which might be a consequence of an agent\u2019s concern about situations epistemically impossible, but not necessarily. And even if it is the case, the semantics does not show how F is derived from what concerns of the agents.\nIt is not uncommon that epistemic possibilities are not the right place to stop when evaluating\nknowledge of functional dependency. Consider the following example:\nI know the color of my hair. Therefore, I know the color of my hair functionally depends on the number of fingers I have.\nThis argument is very hard to swallow intuitively. Yet it is validated by the axiom EXT. Indeed, in the current setting of the semantics of Kf , to validate this, we only need to allow a moderate amount of constant functions in our function domain. The root of the problem is that, in a pure epistemic logic setting, if something is known, the agent has no access to other alternatives as knowledge is the only modality here, whereas in most realistic situations, even when something is known, we have modal access to some possibilities different from the known one. For example, possibilities in the future or past can be used to explain why the color of my hair is not really dependent on the number of fingers I have. And even when I have not and will not change the color of my hair, we can still use metaphysical possibilities: \u201cthe color of my hair could be different, regardless of how many fingers I have.\u201d\nThus, it might be of interest to capture knowledge of functional dependency in another modality. To do this we can add a new modality interpreted by a relation R. Then \u201cknowing a/the functional dependency\u201d can now be expressed by an operator Kf with the following semantics:\n\u3008W,\u223c, R,U,V\u3009,w Kf (C, d) \u21d4 \u2203 f \u2208 F,\u2200w\u2032 \u223c w, \u2200w\u2217, Rw\u2032w\u2217 \u21d2 V(w\u2217, d) = f (V(w\u2217,C))\nwhere \u223c is the epistemic indistinguishability relation. This definition still says that there exists a function that works for all epistemically indistinguishable worlds. But here \u201cworks\u201d means f captures the functional dependency of d upon C with respect to another modality which might be different from K .\nThe choice of R can be arbitrary, but at least two interesting candidates are immediate: an equivalence relation to capture metaphysical possibilities and a linear or branching time relation used in temporal logics. A simple observation is that, if we still want a new version of VF, namely\nVF \u2032 :\n\u2227\nc\u2208C\nKv(c) \u2227 Kf (C, d) \u2192 Kv(d)\nto be valid, we need R to be reflexive. Otherwise, the functional dependency might be only talking about worlds far away from the actual world, though accessible through R. Since the choice for R can be flexible, there will be many interesting results to be discovered under this semantics. In particular, for the study of completeness, we might want to add more first order features to facilitate a proof more similar to its first order counterpart, a strategy successfully employed in [1]. It might be desirable because, with two modalities, a direct construction of value assignments can be unmanageable.\nBut a demanding reader may still not be satisfied, as even if we add a new modality, the choice of the functions could be nonunique again. This motivates another interpretation of knowledge of functional dependency, emphasizing even more the \u201cknowledge\u201d part: Kf (C, d) says that the agent has gathered so much information that there is (almost) exactly one function that can be used to explain the data he/she has seen so far. Thus, knowledge appears only when there is only one possible or a few very plausible explanations. If there is no possible explanation in the sense that no function in the function domain F is applicable, or there are too many explanations, no knowledge is obtained. This sounds natural, but much more technically will be needed to formalize this: either a counting operator, or a probabilistic operator tracking the posterior distribution over the candidate explanations.\nThere are also interesting possible extensions of the framework given in this paper. For example, the multiagent case here assumed a no-interaction semantics. But once we require prior knowledge of possible functions to be available to other agents, interesting interactions will appear. For example, suppose Fj is known to agent i, i.e., if w \u223ci w \u2032 then Fj(w) = Fj(w \u2032). Then the following is valid:\nKvi(c) \u2227 Kvi(d) \u2227 Ki(Kvj(c) \u2227 Kvj (d)) \u2192 KiKfj(c, d) \u2228 Ki\u00acKfj(c, d).\nIntuitively this says that if agent i knows the values of c, d and knows that agent j knows, then either i knows that j has an explanation of the value of c, d or i knows that j does not have one. The antecedent fixes the value of c, d in all worlds accessible first from i and then from j. Thus if j fails or succeeds\nto explain this particular instance, agent i knows it. Stronger interactions will appear if we require all agents to share a single prior knowledge base F, i.e., for all i,w, Fi(w) = F. Then the following is valid:\nKvi(c) \u2227 Kvi(d) \u2227 Ki(Kvj(c) \u2227 Kvj(d)) \u2192 (Kfi(c, d) \u2192 Kfj(c, d)).\nThis says that if i knows the value of c, d and knows that j knows them, then i being able to explain this instance implies that j can explain it as well. To axiomatize these two cases, new axioms and techniques will emerge. Further, we can also add an operator that expresses knowledge about other agents\u2019 function domain.\nComputationally, we see without too much surprise that the finite model property holds. For all the three single agent cases with a finite language, the required size of G and the size of the model constructed can be explicitly computed. In the multiagent case, a standard filtration method can also be applied quite straightforwardly. Notice that in each of the three cases, the completeness proof requires a minimal size of G. A natural question is whether we can bring down the size requirement by giving more economic completeness proofs. In particular, the double exponential size requirement in the single agent fixed intermediate function domain case seems to be too large, while the number of value assignments seems too small (just 2). We might be able to implement a trade-off here or a smarter lattice construction.\nIn summary, introducing knowledge about functional dependency relations brings us ample new\nopportunities to extend the border of epistemic logic. There will be a lot more to achieve."}], "references": [{"title": "To know is to know the value of a variable", "author": ["Alexandru Baltag"], "venue": "In Advances in Modal Logic", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "knowing value\u201d logic as a normal modal logic", "author": ["Tao Gu", "Yanjing Wang"], "venue": "In Advances in Modal Logic", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2016}, {"title": "Knowledge and Belief: An Introduction to the Logic of the TwoNotions", "author": ["Jaakko Hintikka"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1962}, {"title": "Logics of public communications", "author": ["J.A. Plaza"], "venue": "Proceedings of the 4th International Symposium on Methodologies for Intelligent Systems,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1989}, {"title": "Modal dependence logic", "author": ["Jouko V\u00e4\u00e4n\u00e4nen"], "venue": "New perspectives on games and interaction,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Dependence Logic - A New Approach to Independence Friendly Logic, volume 70 of London Mathematical Society student texts", "author": ["Jouko A. V\u00e4\u00e4n\u00e4nen"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Knowing values and public inspection", "author": ["Jan van Ejick", "Malvin Gattinger", "Yanjing Wang"], "venue": "In to appear in Proceedings of ICLA2017,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2017}, {"title": "Beyond knowing that: a new generation of epistemic logics", "author": ["Yanjing Wang"], "venue": "Jaakko Hintikka on knowledge and game theoretical semantics,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2016}, {"title": "Knowing that, knowing what, and public communication: Public announcement logic with Kv operators", "author": ["Yanjing Wang", "Jie Fan"], "venue": "In Proceedings of International Joint Conferences on Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Conditionally knowing what", "author": ["Yanjing Wang", "Jie Fan"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Dependency structures of data base relationships", "author": ["Armstrong W. William"], "venue": "In Information Processing 74, Proceedings of IFIP Congress", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1974}], "referenceMentions": [{"referenceID": 2, "context": "This line of research started from the very beginning of epistemic logic: Hintikka discussed a \u201cknowing-who\u201d operator in [3], and Plaza a \u201cknowing-value\u201d operator Kv in his seminal work [4].", "startOffset": 121, "endOffset": 124}, {"referenceID": 3, "context": "This line of research started from the very beginning of epistemic logic: Hintikka discussed a \u201cknowing-who\u201d operator in [3], and Plaza a \u201cknowing-value\u201d operator Kv in his seminal work [4].", "startOffset": 186, "endOffset": 189}, {"referenceID": 7, "context": "However, it is the recent effort in providing formal semantics and axiomatizations of those nonstandard knowledge operators, as outlined in the survey [8], that layed a solid foundation for further investigation.", "startOffset": 151, "endOffset": 154}, {"referenceID": 9, "context": "Recent major development of this Kv operator started with the axiomatization in [10, 9], followed by the The author would like to give special thanks toMalvin Gattinger andWesley H.", "startOffset": 80, "endOffset": 87}, {"referenceID": 8, "context": "Recent major development of this Kv operator started with the axiomatization in [10, 9], followed by the The author would like to give special thanks toMalvin Gattinger andWesley H.", "startOffset": 80, "endOffset": 87}, {"referenceID": 1, "context": "simplification of the semantics in [2] and the enrichment of the language through announcing values and propositions in [1, 7].", "startOffset": 35, "endOffset": 38}, {"referenceID": 0, "context": "simplification of the semantics in [2] and the enrichment of the language through announcing values and propositions in [1, 7].", "startOffset": 120, "endOffset": 126}, {"referenceID": 6, "context": "simplification of the semantics in [2] and the enrichment of the language through announcing values and propositions in [1, 7].", "startOffset": 120, "endOffset": 126}, {"referenceID": 6, "context": "Here one natural choice is to make functionality the only requirement of \u201cknowing a/the functional dependency between variables\u201d, and both [7, 1] made this choice.", "startOffset": 139, "endOffset": 145}, {"referenceID": 0, "context": "Here one natural choice is to make functionality the only requirement of \u201cknowing a/the functional dependency between variables\u201d, and both [7, 1] made this choice.", "startOffset": 139, "endOffset": 145}, {"referenceID": 6, "context": "If \u201cconjoin\u201d means revealing the actual value of c to the agent, then [c]Kv(d) in [7] is an exact formalization.", "startOffset": 82, "endOffset": 85}, {"referenceID": 0, "context": "In [1], this is exactly the semantics of Kcd.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "Another famous work on dependency taking functionality as the only requirement is Dependence Logic [6, 5].", "startOffset": 99, "endOffset": 105}, {"referenceID": 4, "context": "Another famous work on dependency taking functionality as the only requirement is Dependence Logic [6, 5].", "startOffset": 99, "endOffset": 105}, {"referenceID": 7, "context": "But the key inspiration comes from the basic strategy explained in [8]: pack an existential quantifier and a modal quantifier together in the form of \u2203x \u03c6(x).", "startOffset": 67, "endOffset": 70}, {"referenceID": 9, "context": "Here the Kv operator has the same meaning as that of Kv in [10]: Kv(d) means that under current epistemic uncertainty, the value of d is certain.", "startOffset": 59, "endOffset": 63}, {"referenceID": 10, "context": "Using Armstrong\u2019s three axioms in [11], we obtain this base system LKVF:", "startOffset": 34, "endOffset": 38}, {"referenceID": 0, "context": "In particular, for the study of completeness, we might want to add more first order features to facilitate a proof more similar to its first order counterpart, a strategy successfully employed in [1].", "startOffset": 196, "endOffset": 199}], "year": 2017, "abstractText": "Epistemic logic with non-standard knowledge operators, especially the \u201cknowing-value\u201d operator, has recently gathered much attention. With the \u201cknowing-value\u201d operator, we can express knowledge of individual variables, but not of the relations between them in general. In this paper, we propose a new operator Kf to express knowledge of the functional dependencies between variables. The semantics of this Kf operator uses a function domain which imposes a constraint on what counts as a functional dependency relation. By adjusting this function domain, different interesting logics arise, and in this paper we axiomatize three such logics in a single agent setting. Then we show how these three logics can be unified by allowing the function domain to vary relative to different agents and possible worlds. A multiagent axiomatization is given in this case.", "creator": "LaTeX with hyperref package"}}}