{"id": "1708.08291", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Aug-2017", "title": "On Type-Aware Entity Retrieval", "abstract": "One of the characteristics of companies is that they are typed, i.e. assigned to a hierarchically organized type system (type taxonomy). The main objective of this paper is to gain a better understanding of how entity type information can be used in entity queries. We are conducting this investigation in an idealized \"oracle environment,\" provided that we know the distribution of target types of the relevant entities for a given query. We are conducting a thorough analysis of three main aspects: (i) the choice of type taxonomy, (ii) the representation of hierarchical type information, and (iii) the combination of type-based and term-based similarity in the query model. Using a standard entity search suite based on DBpedia, we find that type information is most useful when large type taxonomies are used that provide very specific types.", "histories": [["v1", "Mon, 28 Aug 2017 12:47:04 GMT  (624kb,D)", "http://arxiv.org/abs/1708.08291v1", "Proceedings of the 3rd ACM International Conference on the Theory of Information Retrieval (ICTIR '17), 2017"]], "COMMENTS": "Proceedings of the 3rd ACM International Conference on the Theory of Information Retrieval (ICTIR '17), 2017", "reviews": [], "SUBJECTS": "cs.IR cs.AI cs.CL", "authors": ["dar\\'io garigliotti", "krisztian balog"], "accepted": false, "id": "1708.08291"}, "pdf": {"name": "1708.08291.pdf", "metadata": {"source": "META", "title": "On Type-Aware Entity Retrieval", "authors": ["Dar\u0131\u0301o Gariglio\u008ai", "Krisztian Balog"], "emails": ["dario.gariglioi@uis.no", "krisztian.balog@uis.no", "permissions@acm.org."], "sections": [{"heading": null, "text": "CCS CONCEPTS \u2022Information systems \u2192Retrieval Models and Ranking;\nKEYWORDS Entity retrieval, entity types, semantic search ACM Reference format: Dar\u0131\u0301o Gariglio i and Krisztian Balog. 2017. On Type-Aware Entity Retrieval. In Proceedings of ICTIR\u201917, October 1\u20134, 2017, Amsterdam, Netherlands., , 8 pages. DOI: h ps://doi.org/10.1145/3121050.3121054"}, {"heading": "1 INTRODUCTION", "text": "Entities, such as people, organizations, or locations are natural units for organizing information; they can provide not only more focused responses, but o en immediate answers, to many search queries [30]. Indeed, entities play a key role in transforming search engines into \u201canswer engines\u201d [24]. e pivotal component that sparked this evolution is the increased availability of structured data published in knowledge bases, such as Wikipedia, DBpedia, or the Google Knowledge Graph, now primary sources of information for entity-oriented search. Major web search engines also shaped users\u2019 expectations about search applications; the single-search-box\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro t or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permi ed. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speci c permission and/or a fee. Request permissions from permissions@acm.org. ICTIR\u201917, October 1\u20134, 2017, Amsterdam, Netherlands. \u00a9 2017 ACM. ISBN 978-1-4503-4490-6/17/10. . .$15.00 DOI: h ps://doi.org/10.1145/3121050.3121054\nparadigm has become widespread, and ordinary users have li le incentive (or knowledge) to formulate structured queries. e task we consider in this paper, referred to as ad-hoc entity retrieval [30], corresponds to this se ing: returning a ranked list of entities from a knowledge base in response to a keyword user query.\nOne of the unique characteristics of entity retrieval is that entities are typed, this is, grouped into more general classes, i.e., types, of entities. Types are typically organized in a hierarchy, which we will refer to as type taxonomy hereina er. Each entity in the knowledge base can be associated with (i.e., is an instance of ) one or more types. For example, in DBpedia, the type of the entity Albert Einstein is Scientist; according to Wikipedia, that entity belongs to the types Theoretical physicists and People with acquired Swiss citizenship, among others. It is assumed that by identifying the types of entities sought by the query (target types, from now on), one can use this information to improve entity retrieval performance; see Figure 1 for an illustration. e main high-level research question we are concerned with in this study is: How to use entity type information in ad-hoc entity retrieval?\ne concept of entity types, while seemingly straightforward, turns out to be a multifaceted research problem that has not yet been thoroughly investigated in the literature. Most of the research related with the usage of type information has been conducted in the context of the INEX Entity Ranking track [9]. ere, it is assumed that the user complements the keyword query with one or more target types, using Wikipedia\u2019s category system as the type taxonomy. e focus has been on expanding the set of target types based on hierarchical relationships and dealing with the imperfections of the type system [1, 8, 18, 29]. Importantly, these developments have been motivated and driven by the peculiarities of Wikipedia\u2019s category system. It is not known whether the same methods prove e ective, and even if these issues persist at all, in case of other type taxonomies. One important contribution of this paper is that we consider and systematically compare multiple type taxonomies (DBpedia, Freebase, Wikipedia, and YAGO). Additionally, there is the ma er of representing type information, i.e., to what extent the hierarchy of the taxonomy should be preserved. Yet another piece of the puzzle is how to combine type-based and text-based ar X iv :1\n70 8.\n08 29\n1v 1\n[ cs\n.I R\n] 2\n8 A\nug 2\n01 7\nsimilarity in the retrieval model. erefore, the research questions we address are as follows: RQ1 What is the impact of the particular choice of type taxonomy on entity retrieval performance? RQ2 How to represent hierarchical entity type information for entity retrieval? RQ3 How to combine term-based and type-based information?\nTo answer the above questions, we conduct a series of experiments for all possible combinations of three dimensions:\ni) e way term-based and type-based information is combined in the retrieval model; see Section 3.\nii) e representation of hierarchical entity type information; see Section 4.\niii) e choice of the type taxonomy; see Section 5. In summary, our work is the rst comprehensive study on the usage of entity type information for entity retrieval. Our main contributions are twofold. First, we present methods for representing types in a hierarchy, establishing type-based similarity, and combining term-based and type-based similarities. Second, we perform a thorough experimental comparison and analysis of all possible con gurations across the above identi ed three dimensions. Our overall nding is that type information has the most bene ts in case of large, deep type taxonomies that provide very speci c types."}, {"heading": "2 RELATEDWORK", "text": "e task of entity ranking has been studied in di erent avors, including ad-hoc entity retrieval [26, 30], list search [5, 10], related entity nding [2], and question answering [23]. Our interest in this work lies in the usage of type information for general-purpose entity retrieval against a knowledge base (KB), where queries may belong to either of the above categories.\nRetrieval models. Early works represented type information as a separate eld in a elded entity model [40]. In later works, types are typically incorporated into the retrieval method by combining term-based similarity with a separate type-based similarity component. is combination may be done using (i) a linear interpolation [1, 18, 29] or (ii) in a multiplicative manner, where the type-based component essentially serves as a lter [6]. Raviv et al. [32] introduce a particular version of interpolation using Markov Random Fields, linearly aggregating each of the scores for the joint distribution of the query with entity document, type, and name. All the mentioned works have consistently reported signi cant performance improvements when a type-based component is incorporated into the (term-based) retrieval model. However, type-aware approaches have not been systematically compared to date. We formalize these two general combination strategies, interpolation and ltering, in Section 3, and then compare them in Section 7.\nType taxonomies. e choice of a particular type taxonomy is mainly motivated by the problem se ing, depending on whether a wide-coverage type system (like Wikipedia categories) or a curated, well-designed ontology (e.g., the DBpedia Ontology) is desired. e most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32]. is is in part for historical reasons, as this was the underlying type system used at the INEX Entity Ranking track, where type information was rst exploited. Further choices\ninclude the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.org [35]. We are not aware of any work that compared di erent type taxonomies for entity retrieval.\nRepresentations of type information. Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36]. Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40]. In this work we employ a state-of-theart probabilistic approach by Balog et al. [1] (cf. Section 3.3). Within a taxonomy, types are arranged in a hierarchy. Several approaches have a empted to expand the set of target types based on the hierarchical structure of the type system [1, 6, 8, 29]. Importantly, the investigation of type hierarchies has been limited to Wikipedia, and, even there, mixed results are reported [7, 16, 37, 40]. It remains an open question whether considering the hierarchical nature of types bene ts retrieval performance. We aim to ll that gap.\nTarget Type Identi cation. e INEX Entity Ranking track [10] and the TREC Entity track [5] both featured scenarios where target types are provided by the user. In the lack of explicit target type information, one might a empt to infer types from the keyword query. is subtask is introduced by Vallet and Zaragoza [36] as the entity type ranking problem. ey extract entity mentions from the set of top relevant passages, then consider the types associated with the top-ranked entities using various weighting functions. Kaptein et al. [19] similarly use a simple entity-centric model. Manually assigned target types tend to be more general than automatically identi ed ones [18]. Having a hierarchical structure, therefore, makes it convenient to assign more general types. In [3], a hierarchical version of the target type identi cation task is addressed using the DBpedia Ontology and language modeling techniques. Sawant and Chakrabarti [33] focus on telegraphic queries and assume that each query term is either a type hint or a \u201cword matcher.\u201d ey consider multiple interpretations of the query and tightly integrate type detection within the ranking of entities. eir approach further relies on the presence of a large-scale web corpus. In our case, an oracle process generates the query target type distribution from its set of known relevant entities (cf. Section 6).\nEntity Types. A further complicating issue is that the type information associated with entities in the knowledge base is incomplete, imperfect, or missing altogether for some entities. Automatic typing of entities is a possible solution for alleviating some of these problems. For example, approaches to extend entity type assignments in DBpedia include mining associated Wikipedia articles for wikilink relations [28], pa erns over logical interpretations of the deeply parsed natural language de nitions [13], or linguistic hypotheses about category classes [12]. Several works have addressed entity typing over progressively larger taxonomies with ner-grained types [11, 15, 22, 31, 39]. Regarding the task of detecting and typing emerging entities, having ne-grained types for new entities is of particular importance for informative knowledge [21, 25]."}, {"heading": "3 TYPE-AWARE ENTITY RETRIEVAL", "text": "In this section we formally describe the type-aware entity retrieval models we will be using for investigating the research questions stated in Section 1. Our contributions do not lie in this part; the techniques we present were shown to be e ective in prior research.\nWe formulate our retrieval task in a generative probabilistic framework. Given an input query q, we rank entities e according to\nP(e |q) \u221d P(q |e)P(e) . (1) When uniform entity priors are assumed, the nal ranking of entities boils down to the estimation of P(q |e). We consider the query in the term space as well as in the type space. Hence, we write q = (qw ,qt ), where qw holds the query terms (words) and qt holds the target types. Two ways of factoring the probability P(q |e) are presented in Section 3.1. All models share two components: termbased similarity, P(qw |e), and type-based similarity, P(qt |e). ese are discussed in Sections 3.2 and 3.3, respectively."}, {"heading": "3.1 Retrieval Models", "text": "We present two alternative approaches for combining term-based and type-based similarity.\n3.1.1 Filtering. Assuming conditional independence between the term-based and type-based components, the nal score becomes a multiplication of the components:\nP(q |e) = P(qw |e)P(qt |e) . (2)\nis approach is a generalization, among others, of the one used in [6] (where the term-based information itself is unfolded into multiple components, considering not only language models from textual context but also estimations of entity co-occurrences). We consider two speci c instantiations of this model:\nStrict ltering where P(qt |e) is 1 if the target types and entity types have a non-empty intersection, and is 0 otherwise. So ltering where P(qt |e) \u2208 [0..1] and is estimated using the approach detailed below in Section 3.3.\n3.1.2 Interpolation. Alternatively, a mixture model may be used, which allows for controlling the importance of each component. Nevertheless, the conditional independence between qw and qt is still imposed by this model:\nP(q |e) = (1 \u2212 \u03bbt )P(qw |e) + \u03bbtP(qt |e) . (3)\nExamples of this approach include [1, 18, 29, 32]."}, {"heading": "3.2 Term-based Similarity", "text": "We base the estimation of the term-based component, P(qw |e), on statistical language modeling techniques since they have shown to be an e ective approach in prior work, see, e.g., [1, 4, 6, 18]. Speci cally, we employ the Mixture of Language Models method from [4] with two elds, title and content. Following [27], the weights are set to 0.2 and 0.8, respectively. is is a simple, yet solid baseline approach. We note that the term-based component is not the focus of this work; any other approach could also be plugged in (provided that the retrieval scores are mapped to probabilities)."}, {"heading": "3.3 Type-based Similarity", "text": "Rather than considering types simply as a set, we assume a distributional representation of types, also referred to as bag-of-types. Namely, a type in the bag may occur with repetitions, naturally\nrendering it more important. Following [1], we represent type information as a multinomial probability distribution over types, both for queries and for entities. Speci cally, let \u03b8q denote the target type distribution for the query q (such that \u2211 t P(t |\u03b8q ) = 1). We assume that there is some mechanism in place that estimates this distribution; in our experiments, we will rely on an \u201coracle\u201d that provides us exactly with this information (cf. Section 6). Further, let \u03b8e denote the target type distribution for entity e . We assume that a function n(t , e) is provided, which returns 1 if e is assigned to type t , otherwise 0. We present various ways of se ing n(t , e) based on the hierarchy of the type taxonomy in Section 4. We note that n(t , e) is not limited to having a binary value; this quantity could, for example, be used to re ect how important type t is for the given entity e . We use a multinomial distribution to allow for such future extensions. Based on these raw counts, the type-based representation of an entity e is estimated using Dirichlet smoothing:\nP(t |\u03b8e ) = n(t , e) + \u00b5P(t)\u2211 t \u2032 n(t \u2032, e) + \u00b5 , (4)\nwhere P(t) is the background type model obtained by a maximumlikelihood estimate, and \u00b5 is the smoothing parameter, which we set to the average number of types assigned to an entity.\nWith both \u03b8q and \u03b8e in place, we estimate type-based similarity using the Kullback-Leibler (KL) divergence of the two distributions:\nP(qt |e) = z(max e \u2032 KL(\u03b8q \u2016 \u03b8e \u2032) \u2212 KL(\u03b8q \u2016\u03b8e )) , (5)\nwhere z is a normalization factor. Note that the smaller the divergence the more similar the distributions are, therefore in Eq. (5) we subtract it from the maximum KL-divergence, in order to obtain a probability distribution. For further details we refer to [1]."}, {"heading": "4 REPRESENTING HIERARCHICAL ENTITY", "text": "TYPE INFORMATION\nis section presents various ways of representing hierarchical entity type information. at is, how to set the quantity n(t , e), which is needed for estimating type-based similarity between target types of the query and types assigned to the entity in the knowledge base. Before proceeding further, let us introduce some terminology and notation.\n\u2022 T is a type taxonomy that consists of a set of hierarchically organized entity types, and t \u2208 T is a speci c entity type. \u2022 E is the set of all entities in the knowledge base, and e \u2208 E is a speci c entity. \u2022 T (e) is the set of types that are assigned to entity e in the knowledge base. We refer to this as a set of assigned types. Note that T (e) might be an empty set.\nWe impose the following constraints on the type taxonomy. i) ere is a single root node t0 that is the ancestor of all types\n(e.g., <owl:Thing>). Since all entities belong to this type, it is excluded from the set of assigned types by de nition. ii) We restrict the type taxonomy to subtype-supertype relations; each type t has a single parent type denoted as \u03c0 (t).\niii) Type assignments are transitive, i.e., an entity that belongs to a given type also belongs to all ancestors of that type: t \u2208 T (e) \u2227 \u03c0 (t) , t0 =\u21d2 \u03c0 (t) \u2208 T (e).\nWe further note that an entity might belong to multiple types under di erent branches of the taxonomy. Assume that ti and tj are both types of e . It might be then that their nearest common ancestor in the type hierarchy is t0.\nWhileT (e) holds the types assigned to entity e , there are multiple ways of turning it into a numerical value, n(t , e), which re ects the type\u2019s importance or weight with respect to the given entity. is weight is taken into account when building the type-based entity representation in Eq. (4). In this work, we treat all types equally important for an entity, i.e., use binary values for n(t , e).\nWe consider the following three options for representing hierarchical type information; see Figure 2 for an illustration. In our de nitions, we use 1(x) as an indicator function, which returns the value 1 if condition x is true and returns 0 otherwise.\nPath-to-top It counts all types that are assigned to the entity in the knowledge base, excluding the root (from constraint (iii) it follows that T (e) contains all the types to the toplevel node):\nn(t , e) = 1 ( t \u2208 T (e) ) .\nTop-level type(s) Only top-level types are considered for an entity, that is, types that have the root node as their parent:\nn(t , e) = 1 ( t \u2208 T (e) \u2227 \u03c0 (t) = t0 ) .\nMost speci c type(s) From each path, only the most speci c type is considered for the entity:\nn(t , e) = 1 ( t \u2208 T (e) \u2227 t \u2032 \u2208 T (e) : \u03c0 (t \u2032) = t ) .\nEven though there may be alternative representations, these three are natural ways of encoding hierarchical information."}, {"heading": "5 ENTITY TYPE TAXONOMIES", "text": "In this paper we study multiple type taxonomies from various knowledge bases: DBpedia, Freebase, Wikipedia, and YAGO. ese vary a lot in terms of hierarchical structure and in how entity-type assignments are recorded. We normalize these type taxonomies to a uniform structure, adhering to the constraints speci ed in Section 4. Table 1 presents an overview of the type systems (a er normalization). e number of type assignments are counted according to the path-to-top representation. Properties of the four type systems and details of the normalization process are discussed below."}, {"heading": "5.1 Type Taxonomies", "text": "Wikipedia categories. e Wikipedia category system, developed and extended by Wikipedia editors, consists of textual labels known as categories. is categorization is not a well-de ned \u201cis-a\u201d hierarchy, but a graph; a category may have multiple parent categories and there might be cycles along the path to ancestors [19]. Also, categories o en represent only loose relatedness between articles; category assignments are neither consistent nor complete [9].\nWe transformed the Wikipedia category graph, consisting of over 1.16M categories, into a type taxonomy as follows. First, we selected a set of 27 top-level categories covering most of the knowledge domains.1 ese became the top-level nodes of the taxonomy, all with a single common root type <owl:Thing>. All super-categories that these selected top-level categories might have in the graph were discarded. Second, we removed multiple inheritances by selecting a single parent per category. For this, we considered the population of a category to be the set of its assigned articles. Each category was linked in the taxonomy with a single parent in the graph whose intersection between their populations is the maximal among all possible parents; in case of a tie, the most populated parent was\n1 e selected top-level categories are the main categories for each section of the portal h ps://en.wikipedia.org/wiki/Portal:Contents/Categories. (As an alternative, we also considered the categories from h ps://en.wikipedia.org/wiki/Category:Main topic classi cations, and found that it comprises a similar category selection).\nchosen. Under this criterion, and for the purpose of understanding hierarchical relations, any category without a parent was discarded. Lastly, from this partial hierarchy (which is still a graph, not a tree), we obtained the nal taxonomy by performing a depth- rst exploration from each top-level category, and avoiding to add those arcs that would introduce cycles. e resulting taxonomy contains over 423K categories and reaches a maximum depth of 35 levels.2\nDBpedia ontology. e DBpedia Ontology is a well-designed hierarchy since its inception; it was created manually by considering the most frequently used infoboxes in Wikipedia. It continues to be properly curated to address some weaknesses of the Wikipedia infobox space. While the DBpedia Ontology is clean and consistent, its coverage is limited to entities that have an associated infobox. It consists of 712 classes organized in a hierarchy of 7 levels.\nYAGO taxonomy. YAGO is a huge semantic knowledge base, derived from Wikipedia, WordNet, and GeoNames [34]. Its classication schema is constructed by taking leaf categories from the category system of Wikipedia and then using WordNet synsets to establish the hierarchy of classes. e result is a deep subsumption hierarchy, consisting of over 568K classes. We work with the YAGO taxonomy from the current version of the ontology (3.0.2). We normalized it by adding a root node, <owl:Thing>, as a parent to every top-level type.\nFreebase types. Freebase has a two-layer categorization system, where types on the bo om level are grouped under high-level domains. We used the latest public Freebase dump (2015-03-31), discarding domains meant for administering the Freebase service itself (e.g.; base, common). Additionally, we made <owl:Thing> the common root of all the domains, and nally obtained a taxonomy of 1,719 types."}, {"heading": "5.2 Entity-Type Assignments", "text": "Now that we have presented the four type taxonomies, we also need to discuss how type assignments of entities are obtained. We use DBpedia 2015-10 as our knowledge base, which makes DBpedia types, Wikipedia categories, and YAGO type assignments readily available. For the fourth type taxonomy, Freebase, we followed same-as links from DBpedia to Freebase (which exist for 95% of the entities in DBpedia) and extracted type assignments from Freebase. It should be noted that entity-type assignments are provided di erently for each of these taxonomies; DBpedia and Freebase supply a single (most speci c) instance type for an entity, Wikipedia assignments include multiple categories for a given entity (without any restriction), while YAGO adheres to the path-to-top representation. We treat all entity-type assignments transitively, adhering to constraint (iii) in Section 4."}, {"heading": "6 EXPERIMENTAL SETUP", "text": "We base our experiments on the DBpedia knowledge base (version 2015-10). DBpedia [20], as a central hub in the Linked Open Data cloud, provides a large repository of entities, which are mapped\u2014 directly or indirectly\u2014to each of the type taxonomies of interest. 2We have con rmed experimentally that enforcing the Wikipedia category graph to satisfy the taxonomical constraints does not hurt retrieval performance. In fact, it is the opposite: it results in small, but statistically signi cant improvements.\nTest Collection. Our experimental platform is based on the test collection developed in [4]. e dataset contains 485 queries, synthesized from various entity-related benchmarking evaluation campaigns. ese range from short keyword queries to natural language questions.\nTarget Types Oracle. roughout all our experiments, we make use of a so-called target type oracle. We assume that there is an \u201coracle\u201d process in place that provides us with the (distribution of) correct target types for a given query. is corresponds to the se ing that was employed at previous benchmarking campaigns (such as the INEX Entity Ranking track [9] and the TREC Entity track [5]), where target types are provided explicitly as part of the topic de nition. We need this idealized se ing to ensure that our results re ect the full potential of using type information, without being hindered by the imperfections of an automated type detector.\nFor a given query q, we take the union of all types of all entities that are judged relevant for that query. Each of these types t becomes a target type, and its probability P(t |\u03b8q ) is set proportional to the number of relevant entities that have that type.\nRetrieval Models. As our baseline, we use a term-based approach, speci cally the Mixture of Language Models [4], which we described in Section 3.2. We compare three type-aware retrieval models (cf. Section 3.1): strict ltering, so ltering, and interpolation. For the la er, we perform a sweep over the possible type weights \u03bbt \u2208 [0, 1] in steps of 0.05, and use the best performing se ing when comparing against other approaches. (Automatically estimating the \u03bbt parameter is outside the scope of this work.)\nType Assignments. To ensure that the di erences we observe are not a result of missing type assignments, we distinguish between two se ings in our experiments.\n4TT We restrict our set of entities to those that have types assigned to them from all four type systems (1.51M entities in total). is ensures that the results we obtain are comparable across the di erent type systems. We also restrict the set of queries to those that have target types in all four type systems; queries without any relevant results (as a consequence of these restrictions) are ltered out. is leaves us with a total of 419 queries. ALL We include all entities from the knowledge base and use the original set of relevance assessments without any modi cations. Hence, some entities and queries do not have types assigned from one or more taxonomies."}, {"heading": "7 RESULTS", "text": "In this section we present evaluation results for all combinations of the three proposed dimensions: type taxonomies, type representation modes, and retrieval models. When discussing the results, we use the term con guration to refer to a particular combination of type taxonomy, type representation, and retrieval model.\nFigure 3 shows the results, corresponding to the two se ings we distinguished in Section 6: in the top histograms, we consider only entities that have types assigned to them in all four type taxonomies (4TT); in the bo om histograms, we rank all entities in the knowledge base (ALL). e red line corresponds to the term-based baseline. Our evaluation metric is Mean Average Precision (MAP).\nDBpediaFreebaseWikipediaYAGO 0\n0.1\n0.2\n0.3\n0.4\nBaseline\nTypes along path to top M\nA P\nStrict filtering Soft filtering Interpolation\nDBpedia Freebase Wikipedia YAGO 0\n0.1\n0.2\n0.3\n0.4\n\u2021 \u2021 \u2021 \u2020\n\u2021\n\u2021 \u2021 \u2021 [0] [0] [0] [0]\nM A\nP\n(a) 4TT , path-to-top types\nDBpedia Freebase Wikipedia YAGO\n\u2021 \u2021 \u2021 \u2020\n\u2021\n\u2021 \u2021 \u2021 [0] [0] [0] [0]\n(b) 4TT , top-level types\nDBpedia Freebase Wikipedia YAGO 0\n0.1\n0.2\n0.3\n\u2021 \u2021 \u2020\n\u2021\n\u2021\n\u2021 \u2021\n[0] [0] [0] [0]\nM A\nP\n(d) ALL, path-to-top types\nDBpedia Freebase Wikipedia YAGO\n\u2021 \u2021 \u2020\n\u2021\n\u2021 \u2021\n\u2021\n[0] [0] [0] [0]\n(e) ALL, top-level types\nFigure 3: Entity retrieval performance for all combinations of type taxonomies, type representation modes, and retrieval models. (Top): only entities with types from all four type taxonomies; (Bottom): all entities in the knowledge base. e red line corresponds to the term-based baseline. Above each bar, the symbols \u2020 and \u2021 indicate statistical signi cance against the baseline; the numbers in brackets show the type weight (empirically found best \u03bbt ) used by the interpolation model.\nWe report on statistical signi cance using a two-tailed paired t-test at p < 0.05 and p < 0.001, denoted by \u2020 and \u2021, respectively.\nRQ1. Let us turn to our rst research question, which concerns the impact of the particular choice of type taxonomy. It is clear that Wikipedia, in combination with the most speci c type representation, performs best (for both 4TT and ALL). In particular, for the 4TT se ing (top right plot in Figure 3), the improvements for Wikipedia are highly signi cant for all three retrieval models. As for the rest, there is no easy way to compare taxonomies, as the performance varies depending on the other dimensions. E.g., for 4TT using strict ltering and more general types (i.e., the purple bars in the top le and top middle histograms in Figure 3), the smaller, shallower type taxonomies (DBpedia and Freebase) tend to outperform the larger, deeper ones (Wikipedia and YAGO).\nRQ2. e second research question, which is about type representation, has a clear answer: keeping only the most speci c types in the hierarchy provides the best performance (right vs. le and middle histograms in Figure 3). is is also in line with ndings in past work (cf. Section 2). As for the other two representations, i.e., types along path to top vs. top-level types, two things are worth pointing out. Firstly, the results are the same for both type representations when using strict ltering, which is explained by how the representations are de ned in Section 4; if an entity is retained (given that the intersection between the entity\u2019s types and the target types is non-empty), this ltering does not change by adding more speci c types. Secondly, for the interpolation model, we can observe that the \u03bbt weights are always 0 for these representations. is means that type information is not used at all. Overall, we\ncould not nd any evidence that hierarchical relationships from ancestor types would bene t retrieval e ectiveness.\nRQ3. Answering our nal research question, concerning the type-aware retrieval model, requires a more elaborate treatment. In the 4TT se ing, strict ltering is the best retrieval model for every con guration, outperforming the baseline with high signi cance in almost all cases. is no longer holds in the ALL se ing; in fact, all MAP scores drop with respect to the corresponding 4TT con guration. is is expected, as in the more realistic se ing, many relevant entities may have incomplete type assignments. Only the interpolation model can deal with this in a robust manner.\nFigure 4 shows the performance of the interpolation model when varying the weight of the type-based component (value of \u03bbt ). Due to space constraints, we present the plots only for the 4TT se ing; the gures look very similar for the ALL se ing. We nd that for the smaller, shallower type taxonomies, DBpedia and Freebase, assigning more weight to type-based information is increasingly more harmful, independently of the type representation or type assignment se ing. e same occurs for Wikipedia and YAGO using the more general type representations. On the other hand, when using only the most speci c types (right plot in Figure 4), for Wikipedia and YAGO, performance increases with higher \u03bbt values. Yet, MAP scores peak at \u03bbt < 1, meaning that term-based similarity is still needed for optimal performance.\ne only con gurations performing worse than the baseline, even in the 4TT se ing, are the ones using the so ltering model. In particular, the MAP scores for DBpedia with so ltering are noticeably low. We plan to perform a deeper investigation of this phenomenon in future work.\n0 0.5 10\n0.1\n0.2\n0.3\n0.4\n\u03bbt\nM A\nP\n(a) Path-to-top types\n0 0.5 1\n\u03bbt (b) Top-level types\n0 0.5 1\n\u03bbt (c) Most specific types\n0 0.5 10\n0.1\n0.2\n0.3\n0.4\n\u03bbt\nM A\nP\nDBpedia\nFreebase\nWikipedia\nYAGO\n(a) Along path\nFigure 1: Interpolation performances for different type weights \u03bbt (4TT ).\nFigure 4: Retrieval performance (4TT setting) using the interpolation model with di erent type weights, \u03bbt ."}, {"heading": "8 ANALYSIS AND DISCUSSION", "text": "Now that we have presented our results, we proceed with further analysis of some of the issues we identi ed in the previous section."}, {"heading": "8.1 Missing Type Information", "text": "In order to make a fair comparison between di erent type taxonomies, we had to account for the fact that the entity type assignments in the knowledge bases may be incomplete (cf. the 4TT se ing in Section 6). Indeed, results in Section 7 have shown that the bene ts of using type information are more obvious when entities are not missing type assignments. Table 2 shows, for each of the type taxonomies, the number of entities that have no types assigned to them in the KB (i.e., \u201cnon-typed\u201d entities). Interestingly, while DBpedia has the least number of non-typed entities (only 35K out of 4.6M), it lacks types for over 25% of the relevant entities (3.3K out of 12.9K). Even for Freebase, which has the best coverage of relevant entities, over 12% of the relevant entities have no type assignments in the KB. Clearly, the problem of missing type information, frequently referred to as partial extensional coverage of type systems [13], is an important area of research (cf. Section 2)."}, {"heading": "8.2 Revisiting the Target Types Oracle", "text": "Another aspect of type-based information we are concerned about is the quality of target types. Previously, we have included all types associated with known relevant entities, proportional to their frequency, in the target type distribution (\u03b8q ); we shall refer to it as the default oracle. Here, we consider another variant, referred to as ltered oracle, where a frequency threshold is applied. Speci cally, we include type t as a target type i at least 3 relevant entities have t assigned to them. As a consequence of this ltering, many queries have an empty set of types; for this experiment, we discard those from the ground truth set, leaving us with 182 queries in total.\nA comparison of the two oracles is presented in Figure 5. For the more general type representations, the ltered oracle turns out to be slightly less e ective for most of the con gurations. Yet, the di erences are barely noticeable. When using the most speci c\ntypes, we nd that MAP scores drop, especially for larger, deeper taxonomies (Wikipedia and YAGO); some con gurations no longer outperform the term-based baseline. Hence, it is important to consider all possible target types, even those with a low probability."}, {"heading": "8.3 What is in a Target Type?", "text": "Our ultimate interest in this work is in understanding the usefulness of type information for ad-hoc entity retrieval. What portion of relevant entities can target types help to capture? To shed some light on this, we measure the coverage of relevant entities by (i) the top ranked type and (ii) the set of top 3 types.3 Table 3 reports the results. We nd that Wikipedia has, by far, the highest precision and F1-score among all type taxonomies; YAGO comes second. Notice that these are the two taxonomies that performed best, when using the most speci c type representations, in Figure 3.\nIn summary, we have found that speci c types from large, negrained taxonomies provide the best performance. Yet, it appears that it is not the hierarchical nature of the taxonomy that brings bene ts, but rather the fact that these ne-grained types provide semantic sets or classes that can capture (some subset of) the relevant entities with high precision."}, {"heading": "9 CONCLUSIONS", "text": "In this paper we have furthered our understanding on the usage of target type information for entity retrieval over structured data sources. A main contribution of this work is the systematic comparison of four well-known type taxonomies (DBpedia, Freebase, 3For this experiment, we take the type assignments \u201cas-recorded\u201d in Wikipedia, without enforcing the taxonomical constraints.\nWikipedia, and YAGO) across three dimensions of interest: the representation of hierarchical entity type information, the way to combine term-based and type-based information, and the impact of choosing a particular type taxonomy. We have found that using the most speci c types in a ne-grained taxonomy, like Wikipedia, leads to the best retrieval e ectiveness.\nWe identify two directions for future work. First, we plan to report on an even deeper query-level analysis, which was not possible here due to space limitations. Second, our investigations so far have taken place in an idealized environment, assuming that an \u201coracle\u201d process can provide us with the target types for each query. We wish to perform a similar analysis using automatically identi ed target types [14]."}], "references": [{"title": "\u008bery modeling for entity search based on terms, categories, and examples", "author": ["Krisztian Balog", "Marc Bron", "Maarten De Rijke"], "venue": "ACM Trans. Inf. Syst. 29,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2011}, {"title": "Hierarchical target type identi\u0080cation for entity-oriented queries", "author": ["Krisztian Balog", "Robert Neumayer"], "venue": "In Proc. of CIKM", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "A Test Collection for Entity Search in DBpedia", "author": ["Krisztian Balog", "Robert Neumayer"], "venue": "In Proc. of SIGIR", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Ranking Related Entities: Components and Analyses", "author": ["Marc Bron", "Krisztian Balog", "Maarten de Rijke"], "venue": "In Proc. of CIKM", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Focused Access to XML Documents. Springer, Chapter L3S at INEX", "author": ["Gianluca Demartini", "Claudiu S. Firan", "Tereza Iofciu"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Why \u0080nding entities in Wikipedia is di\u0081cult, sometimes", "author": ["Gianluca Demartini", "Claudiu S. Firan", "Tereza Iofciu", "Ralf Krestel", "Wolfgang Nejdl"], "venue": "Information Retrieval 13,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Overview of the INEX 2009 Entity Ranking Track", "author": ["Gianluca Demartini", "Tereza Iofciu", "Arjen P. De Vries"], "venue": "In Focused Retrieval and Evaluation,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2010}, {"title": "Fine Grained Classi\u0080cation of Named Entities", "author": ["Michael Fleischman", "Eduard Hovy"], "venue": "In Proc. of COLING", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2002}, {"title": "Unsupervised Learning of an Extensive and Usable Taxonomy for DBpedia", "author": ["Marco Fossati", "Dimitris Kontokostas", "Jens Lehmann"], "venue": "In Proc. of SEMAN- TICS", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "Automatic Typing of DBpedia Entities", "author": ["Aldo Gangemi", "Andrea Giovanni Nuzzolese", "Valentina Presu\u008ai", "Francesco Draicchio", "Alberto Muse\u008ai", "Paolo Ciancarini"], "venue": "In Proc. of ISWC", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Target Type Identi- \u0080cation for Entity-Bearing \u008beries", "author": ["Dar\u0131\u0301o Gariglio\u008ai", "Faegheh Hasibi", "Krisztian Balog"], "venue": "In Proc. of SIGIR", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2017}, {"title": "Fine-grained Classi\u0080cation of Named Entities Exploiting Latent Semantic Kernels", "author": ["Claudio Giuliano"], "venue": "In Proc. of CoNLL", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "Focused Access to XML Documents", "author": ["Janne J\u00e4msen", "Turkka N\u00e4ppil\u00e4", "Paavo Arvola"], "venue": "Chapter Entity Ranking Based on Category Expansion,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "Finding Entities in Wikipedia using Links and Categories", "author": ["Rianne Kaptein", "Jaap Kamps"], "venue": "In Advances in Focused Retrieval,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2009}, {"title": "Exploiting the category structure of Wikipedia for entity ranking", "author": ["Rianne Kaptein", "Jaap Kamps"], "venue": "Arti\u0080cial Intelligence", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2013}, {"title": "Entity ranking using Wikipedia as a pivot", "author": ["Rianne Kaptein", "Pavel Serdyukov", "Arjen P. De Vries", "Jaap Kamps"], "venue": "In Proc. of CIKM", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "DBpedia - A large-scale, multilingual knowledge base extracted from Wikipedia", "author": ["Jens Lehmann", "Robert Isele", "Max Jakob", "Anja Jentzsch", "Dimitris Kontokostas", "Pablo N. Mendes", "Sebastian Hellmann", "Mohamed Morsey", "Patrick van Kleef", "S\u00f6ren Auer", "Christian Bizer"], "venue": "Semantic Web 6,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "No Noun Phrase Le\u0089 Behind: Detecting and Typing Unlinkable Entities", "author": ["\u008comas Lin", "Mausam", "Oren Etzioni"], "venue": "In Proc. of EMNLP-CoNLL", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2012}, {"title": "Fine-grained Entity Recognition", "author": ["Xiao Ling", "Daniel S. Weld"], "venue": "In Proc. of AAAI", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "Evaluating \u008bestion Answering over Linked Data. Web Semantics: Science, Services and Agents on the World Wide Web", "author": ["Vanessa Lopez", "Christina Unger", "Philipp Cimiano", "Enrico Mo\u008aa"], "venue": "(aug", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2013}, {"title": "Finegrained Semantic Typing of Emerging Entities", "author": ["Ndapandula Nakashole", "Tomasz Tylenda", "Gerhard Weikum"], "venue": "In Proc. of ACL", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2013}, {"title": "On the modeling of entities for ad-hoc entity search in the web of data", "author": ["Robert Neumayer", "Krisztian Balog", "Kjetil N\u00f8rv\u00e5g"], "venue": "In Proc. of ECIR", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2012}, {"title": "When simple is (more than) good enough: e\u0082ective semantic search with (almost) no semantics", "author": ["Robert Neumayer", "Krisztian Balog", "Kjetil N\u00f8rv\u00e5g"], "venue": "In Proc. of ECIR", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2012}, {"title": "Type inference through the analysis of Wikipedia links", "author": ["Andrea Giovanni Nuzzolese", "Aldo Gangemi", "Valentina Presu\u008ai", "Paolo Ciancarini"], "venue": "In Proc. of LDOW", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2012}, {"title": "Entity ranking in Wikipedia: utilising categories, links and topic di\u0081culty prediction", "author": ["Jovan Pehcevski", "James A \u008com", "Anne-Marie Vercoustre", "Vladimir Naumovski"], "venue": "Information Retrieval 13,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2010}, {"title": "Ad-hoc object retrieval in the web of data", "author": ["Je\u0082rey Pound", "Peter Mika", "Hugo Zaragoza"], "venue": "In Proc. of WWW", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2010}, {"title": "Inducing Fine-grained Semantic Classes via Hierarchical and Collective Classi\u0080cation", "author": ["Altaf Rahman", "Vincent Ng"], "venue": "In Proc. of COLING", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2010}, {"title": "A Ranking Framework for Entity Oriented Search Using Markov Random Fields", "author": ["Hadas Raviv", "David Carmel", "Oren Kurland"], "venue": "In Proc. of JIWES", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2012}, {"title": "Learning Joint \u008bery Interpretation and Response Ranking", "author": ["Uma Sawant", "S Chakrabarti"], "venue": "In Proc. of WWW", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2013}, {"title": "Yago: A Core of Semantic Knowledge", "author": ["Fabian M Suchanek", "Gjergji Kasneci", "Gerhard Weikum"], "venue": "In Proc. of WWW", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2007}, {"title": "TRank: Ranking Entity Types Using the Web of Data", "author": ["Alberto Tonon", "Michele Catasta", "Gianluca Demartini", "Philippe Cudr\u00e9-Mauroux", "Karl Aberer"], "venue": "In Proc. of ISWC", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2013}, {"title": "Inferring the most important types of a query: a semantic approach", "author": ["David Vallet", "Hugo Zaragoza"], "venue": "In Proc. of SIGIR", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2008}, {"title": "Focused Access to XML Documents. Springer, Chapter Using Wikipedia Categories and Links in Entity Ranking, 321\u2013335", "author": ["Anne-Marie Vercoustre", "Jovan Pehcevski", "James A. \u008com"], "venue": null, "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2008}, {"title": "A Generative Language Modeling Approach for Ranking Entities", "author": ["W. Weerkamp", "K. Balog", "E.J. Meij"], "venue": "In Advances in Focused Retrieval,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2009}, {"title": "HYENA: Hierarchical Type Classi\u0080cation for Entity Names", "author": ["Mohamed Amir Yosef", "Sandro Bauer", "Johannes Ho\u0082art Marc Spaniol", "Gerhard Weikum"], "venue": "In Proc. of COLING", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2012}, {"title": "Focused Access to XML Documents. Springer, Chapter Integrating Document Features for Entity Ranking, 336\u2013347", "author": ["Jianhan Zhu", "Dawei Song", "Stefan R\u00fcger"], "venue": null, "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2008}], "referenceMentions": [{"referenceID": 25, "context": "Entities, such as people, organizations, or locations are natural units for organizing information; they can provide not only more focused responses, but o\u0089en immediate answers, to many search queries [30].", "startOffset": 201, "endOffset": 205}, {"referenceID": 25, "context": "\u008ce task we consider in this paper, referred to as ad-hoc entity retrieval [30], corresponds to this se\u008aing: returning a ranked list of entities from a knowledge base in response to a keyword user query.", "startOffset": 74, "endOffset": 78}, {"referenceID": 6, "context": "Most of the research related with the usage of type information has been conducted in the context of the INEX Entity Ranking track [9].", "startOffset": 131, "endOffset": 134}, {"referenceID": 0, "context": "\u008ce focus has been on expanding the set of target types based on hierarchical relationships and dealing with the imperfections of the type system [1, 8, 18, 29].", "startOffset": 145, "endOffset": 159}, {"referenceID": 5, "context": "\u008ce focus has been on expanding the set of target types based on hierarchical relationships and dealing with the imperfections of the type system [1, 8, 18, 29].", "startOffset": 145, "endOffset": 159}, {"referenceID": 14, "context": "\u008ce focus has been on expanding the set of target types based on hierarchical relationships and dealing with the imperfections of the type system [1, 8, 18, 29].", "startOffset": 145, "endOffset": 159}, {"referenceID": 24, "context": "\u008ce focus has been on expanding the set of target types based on hierarchical relationships and dealing with the imperfections of the type system [1, 8, 18, 29].", "startOffset": 145, "endOffset": 159}, {"referenceID": 21, "context": "\u008ce task of entity ranking has been studied in di\u0082erent \u0083avors, including ad-hoc entity retrieval [26, 30], list search [5, 10], related entity \u0080nding [2], and question answering [23].", "startOffset": 97, "endOffset": 105}, {"referenceID": 25, "context": "\u008ce task of entity ranking has been studied in di\u0082erent \u0083avors, including ad-hoc entity retrieval [26, 30], list search [5, 10], related entity \u0080nding [2], and question answering [23].", "startOffset": 97, "endOffset": 105}, {"referenceID": 19, "context": "\u008ce task of entity ranking has been studied in di\u0082erent \u0083avors, including ad-hoc entity retrieval [26, 30], list search [5, 10], related entity \u0080nding [2], and question answering [23].", "startOffset": 178, "endOffset": 182}, {"referenceID": 35, "context": "Early works represented type information as a separate \u0080eld in a \u0080elded entity model [40].", "startOffset": 85, "endOffset": 89}, {"referenceID": 0, "context": "\u008cis combination may be done using (i) a linear interpolation [1, 18, 29] or (ii) in a multiplicative manner, where the type-based component essentially serves as a \u0080lter [6].", "startOffset": 61, "endOffset": 72}, {"referenceID": 14, "context": "\u008cis combination may be done using (i) a linear interpolation [1, 18, 29] or (ii) in a multiplicative manner, where the type-based component essentially serves as a \u0080lter [6].", "startOffset": 61, "endOffset": 72}, {"referenceID": 24, "context": "\u008cis combination may be done using (i) a linear interpolation [1, 18, 29] or (ii) in a multiplicative manner, where the type-based component essentially serves as a \u0080lter [6].", "startOffset": 61, "endOffset": 72}, {"referenceID": 3, "context": "\u008cis combination may be done using (i) a linear interpolation [1, 18, 29] or (ii) in a multiplicative manner, where the type-based component essentially serves as a \u0080lter [6].", "startOffset": 170, "endOffset": 173}, {"referenceID": 27, "context": "[32] introduce a particular version of interpolation using Markov Random Fields, linearly aggregating each of the scores for the joint distribution of the query with entity document, type, and name.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "\u008ce most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32].", "startOffset": 70, "endOffset": 87}, {"referenceID": 3, "context": "\u008ce most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32].", "startOffset": 70, "endOffset": 87}, {"referenceID": 5, "context": "\u008ce most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32].", "startOffset": 70, "endOffset": 87}, {"referenceID": 14, "context": "\u008ce most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32].", "startOffset": 70, "endOffset": 87}, {"referenceID": 27, "context": "\u008ce most common type system used in prior work is Wikipedia categories [1, 6, 8, 18, 32].", "startOffset": 70, "endOffset": 87}, {"referenceID": 1, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 45, "endOffset": 52}, {"referenceID": 30, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 45, "endOffset": 52}, {"referenceID": 5, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 65, "endOffset": 80}, {"referenceID": 20, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 65, "endOffset": 80}, {"referenceID": 28, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 65, "endOffset": 80}, {"referenceID": 30, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 65, "endOffset": 80}, {"referenceID": 17, "context": "Further choices include the DBpedia Ontology [3, 35], YAGO types [8, 25, 33, 35], Freebase [21], and schema.", "startOffset": 91, "endOffset": 95}, {"referenceID": 30, "context": "org [35].", "startOffset": 4, "endOffset": 8}, {"referenceID": 5, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 53, "endOffset": 68}, {"referenceID": 14, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 53, "endOffset": 68}, {"referenceID": 24, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 53, "endOffset": 68}, {"referenceID": 27, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 53, "endOffset": 68}, {"referenceID": 0, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 96, "endOffset": 107}, {"referenceID": 28, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 96, "endOffset": 107}, {"referenceID": 31, "context": "Target types are commonly considered either as a set [8, 18, 29, 32] or as a bag (weighted set) [1, 33, 36].", "startOffset": 96, "endOffset": 107}, {"referenceID": 4, "context": "Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40].", "startOffset": 67, "endOffset": 86}, {"referenceID": 13, "context": "Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40].", "startOffset": 67, "endOffset": 86}, {"referenceID": 32, "context": "Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40].", "startOffset": 67, "endOffset": 86}, {"referenceID": 33, "context": "Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40].", "startOffset": 67, "endOffset": 86}, {"referenceID": 35, "context": "Various ways of measuring type-based similarity have been proposed [7, 17, 37, 38, 40].", "startOffset": 67, "endOffset": 86}, {"referenceID": 0, "context": "[1] (cf.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "Several approaches have a\u008aempted to expand the set of target types based on the hierarchical structure of the type system [1, 6, 8, 29].", "startOffset": 122, "endOffset": 135}, {"referenceID": 3, "context": "Several approaches have a\u008aempted to expand the set of target types based on the hierarchical structure of the type system [1, 6, 8, 29].", "startOffset": 122, "endOffset": 135}, {"referenceID": 5, "context": "Several approaches have a\u008aempted to expand the set of target types based on the hierarchical structure of the type system [1, 6, 8, 29].", "startOffset": 122, "endOffset": 135}, {"referenceID": 24, "context": "Several approaches have a\u008aempted to expand the set of target types based on the hierarchical structure of the type system [1, 6, 8, 29].", "startOffset": 122, "endOffset": 135}, {"referenceID": 4, "context": "Importantly, the investigation of type hierarchies has been limited to Wikipedia, and, even there, mixed results are reported [7, 16, 37, 40].", "startOffset": 126, "endOffset": 141}, {"referenceID": 12, "context": "Importantly, the investigation of type hierarchies has been limited to Wikipedia, and, even there, mixed results are reported [7, 16, 37, 40].", "startOffset": 126, "endOffset": 141}, {"referenceID": 32, "context": "Importantly, the investigation of type hierarchies has been limited to Wikipedia, and, even there, mixed results are reported [7, 16, 37, 40].", "startOffset": 126, "endOffset": 141}, {"referenceID": 35, "context": "Importantly, the investigation of type hierarchies has been limited to Wikipedia, and, even there, mixed results are reported [7, 16, 37, 40].", "startOffset": 126, "endOffset": 141}, {"referenceID": 31, "context": "\u008cis subtask is introduced by Vallet and Zaragoza [36] as the entity type ranking problem.", "startOffset": 49, "endOffset": 53}, {"referenceID": 15, "context": "[19] similarly use a simple entity-centric model.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "Manually assigned target types tend to be more general than automatically identi\u0080ed ones [18].", "startOffset": 89, "endOffset": 93}, {"referenceID": 1, "context": "In [3], a hierarchical version of the target type identi\u0080cation task is addressed using the DBpedia Ontology and language modeling techniques.", "startOffset": 3, "endOffset": 6}, {"referenceID": 28, "context": "Sawant and Chakrabarti [33] focus on telegraphic queries and assume that each query term is either a type hint or a \u201cword matcher.", "startOffset": 23, "endOffset": 27}, {"referenceID": 23, "context": "For example, approaches to extend entity type assignments in DBpedia include mining associated Wikipedia articles for wikilink relations [28], pa\u008aerns over logical interpretations of the deeply parsed natural language de\u0080nitions [13], or linguistic hypotheses about category classes [12].", "startOffset": 137, "endOffset": 141}, {"referenceID": 9, "context": "For example, approaches to extend entity type assignments in DBpedia include mining associated Wikipedia articles for wikilink relations [28], pa\u008aerns over logical interpretations of the deeply parsed natural language de\u0080nitions [13], or linguistic hypotheses about category classes [12].", "startOffset": 229, "endOffset": 233}, {"referenceID": 8, "context": "For example, approaches to extend entity type assignments in DBpedia include mining associated Wikipedia articles for wikilink relations [28], pa\u008aerns over logical interpretations of the deeply parsed natural language de\u0080nitions [13], or linguistic hypotheses about category classes [12].", "startOffset": 283, "endOffset": 287}, {"referenceID": 7, "context": "Several works have addressed entity typing over progressively larger taxonomies with \u0080ner-grained types [11, 15, 22, 31, 39].", "startOffset": 104, "endOffset": 124}, {"referenceID": 11, "context": "Several works have addressed entity typing over progressively larger taxonomies with \u0080ner-grained types [11, 15, 22, 31, 39].", "startOffset": 104, "endOffset": 124}, {"referenceID": 18, "context": "Several works have addressed entity typing over progressively larger taxonomies with \u0080ner-grained types [11, 15, 22, 31, 39].", "startOffset": 104, "endOffset": 124}, {"referenceID": 26, "context": "Several works have addressed entity typing over progressively larger taxonomies with \u0080ner-grained types [11, 15, 22, 31, 39].", "startOffset": 104, "endOffset": 124}, {"referenceID": 34, "context": "Several works have addressed entity typing over progressively larger taxonomies with \u0080ner-grained types [11, 15, 22, 31, 39].", "startOffset": 104, "endOffset": 124}, {"referenceID": 17, "context": "Regarding the task of detecting and typing emerging entities, having \u0080ne-grained types for new entities is of particular importance for informative knowledge [21, 25].", "startOffset": 158, "endOffset": 166}, {"referenceID": 20, "context": "Regarding the task of detecting and typing emerging entities, having \u0080ne-grained types for new entities is of particular importance for informative knowledge [21, 25].", "startOffset": 158, "endOffset": 166}, {"referenceID": 3, "context": "\u008cis approach is a generalization, among others, of the one used in [6] (where the term-based information itself is unfolded into multiple components, considering not only language models from textual context but also estimations of entity co-occurrences).", "startOffset": 67, "endOffset": 70}, {"referenceID": 0, "context": "Examples of this approach include [1, 18, 29, 32].", "startOffset": 34, "endOffset": 49}, {"referenceID": 14, "context": "Examples of this approach include [1, 18, 29, 32].", "startOffset": 34, "endOffset": 49}, {"referenceID": 24, "context": "Examples of this approach include [1, 18, 29, 32].", "startOffset": 34, "endOffset": 49}, {"referenceID": 27, "context": "Examples of this approach include [1, 18, 29, 32].", "startOffset": 34, "endOffset": 49}, {"referenceID": 0, "context": ", [1, 4, 6, 18].", "startOffset": 2, "endOffset": 15}, {"referenceID": 2, "context": ", [1, 4, 6, 18].", "startOffset": 2, "endOffset": 15}, {"referenceID": 3, "context": ", [1, 4, 6, 18].", "startOffset": 2, "endOffset": 15}, {"referenceID": 14, "context": ", [1, 4, 6, 18].", "startOffset": 2, "endOffset": 15}, {"referenceID": 2, "context": "Speci\u0080cally, we employ the Mixture of Language Models method from [4] with two \u0080elds, title and content.", "startOffset": 66, "endOffset": 69}, {"referenceID": 22, "context": "Following [27], the weights are set to 0.", "startOffset": 10, "endOffset": 14}, {"referenceID": 0, "context": "Following [1], we represent type information as a multinomial probability distribution over types, both for queries and for entities.", "startOffset": 10, "endOffset": 13}, {"referenceID": 0, "context": "For further details we refer to [1].", "startOffset": 32, "endOffset": 35}, {"referenceID": 15, "context": "\u008cis categorization is not a well-de\u0080ned \u201cis-a\u201d hierarchy, but a graph; a category may have multiple parent categories and there might be cycles along the path to ancestors [19].", "startOffset": 172, "endOffset": 176}, {"referenceID": 6, "context": "Also, categories o\u0089en represent only loose relatedness between articles; category assignments are neither consistent nor complete [9].", "startOffset": 130, "endOffset": 133}, {"referenceID": 29, "context": "YAGO is a huge semantic knowledge base, derived from Wikipedia, WordNet, and GeoNames [34].", "startOffset": 86, "endOffset": 90}, {"referenceID": 16, "context": "DBpedia [20], as a central hub in the Linked Open Data cloud, provides a large repository of entities, which are mapped\u2014 directly or indirectly\u2014to each of the type taxonomies of interest.", "startOffset": 8, "endOffset": 12}, {"referenceID": 2, "context": "Our experimental platform is based on the test collection developed in [4].", "startOffset": 71, "endOffset": 74}, {"referenceID": 6, "context": "\u008cis corresponds to the se\u008aing that was employed at previous benchmarking campaigns (such as the INEX Entity Ranking track [9] and the TREC Entity track [5]), where target types are provided explicitly as part of the topic de\u0080nition.", "startOffset": 122, "endOffset": 125}, {"referenceID": 2, "context": "As our baseline, we use a term-based approach, speci\u0080cally the Mixture of Language Models [4], which we described in Section 3.", "startOffset": 90, "endOffset": 93}, {"referenceID": 0, "context": "For the la\u008aer, we perform a sweep over the possible type weights \u03bbt \u2208 [0, 1] in steps of 0.", "startOffset": 70, "endOffset": 76}, {"referenceID": 9, "context": "Clearly, the problem of missing type information, frequently referred to as partial extensional coverage of type systems [13], is an important area of research (cf.", "startOffset": 121, "endOffset": 125}, {"referenceID": 10, "context": "We wish to perform a similar analysis using automatically identi\u0080ed target types [14].", "startOffset": 81, "endOffset": 85}], "year": 2017, "abstractText": "Today, the practice of returning entities from a knowledge base in response to search queries has become widespread. One of the distinctive characteristics of entities is that they are typed, i.e., assigned to some hierarchically organized type system (type taxonomy). \u008ce primary objective of this paper is to gain a be\u008aer understanding of how entity type information can be utilized in entity retrieval. We perform this investigation in an idealized \u201coracle\u201d se\u008aing, assuming that we know the distribution of target types of the relevant entities for a given query. We perform a thorough analysis of three main aspects: (i) the choice of type taxonomy, (ii) the representation of hierarchical type information, and (iii) the combination of type-based and term-based similarity in the retrieval model. Using a standard entity search test collection based on DBpedia, we \u0080nd that type information proves most useful when using large type taxonomies that provide very speci\u0080c types. We provide further insights on the extensional coverage of entities and on the utility of target types.", "creator": "LaTeX with hyperref package"}}}