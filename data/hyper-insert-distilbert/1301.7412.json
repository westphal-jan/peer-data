{"id": "1301.7412", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jan-2013", "title": "Bayes-Ball: The Rational Pastime (for Determining Irrelevance and Requisite Information in Belief Networks and Influence Diagrams)", "abstract": "supposedly one of the ultimate benefits of belief networks and influence diagrams is that so much factual knowledge available is carefully captured in the graphical structure. in particular, statements instead of relevant conditional logic irrelevance ( suppression or independence ) inference can ultimately be perfectly verified in dynamic time linear in the size of the graph. to resolve exactly a specified particular inference query tool or objective decision problem, only some knowledge of the possible input states and irrelevant probability distributions items must be specified, defining the \" likely requisite information. \"", "histories": [["v1", "Wed, 30 Jan 2013 15:06:48 GMT  (339kb)", "http://arxiv.org/abs/1301.7412v1", "Appears in Proceedings of the Fourteenth Conference on Uncertainty in Artificial Intelligence (UAI1998)"]], "COMMENTS": "Appears in Proceedings of the Fourteenth Conference on Uncertainty in Artificial Intelligence (UAI1998)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ross d shachter"], "accepted": false, "id": "1301.7412"}, "pdf": {"name": "1301.7412.pdf", "metadata": {"source": "CRF", "title": "Bayes-Ball: The Rational Pastime (for Determining Irrelevance and Requisite Information in Belief Networks and Influence Diagrams)", "authors": ["Ross D. Shachter"], "emails": ["shachter@stanford.edu"], "sections": [{"heading": null, "text": "Keywords: irrelevance, independence, requisite in formation, belief networks, influence diagrams, d separation.\n1 Introduction\nOne of the benefits of belief networks and influence diagrams is that so much knowledge is captured in the graphical structure. Without the need to compute with or even assess possible states and probabilities, many important properties of a model can be recog nized (Pearl 1988; Shachter 1988). To fully specify a network, the possible states and probability distribu tions must be obtained for all variables. For a partic ular inference query or decision problem, only some of that information is requisite.\nBecause this information is stored in the network structure, it lends itself to efficient analysis . In partic ular, statements of conditional irrelevance (or indepen dence) in belief networks can be verified in time linear in the size of the graph (Geiger et al 1989). Identifica-\ntion of requisite information can also be determined in time linear in the size of the graph. These algorithms have been generalized to deal with deterministic nodes in belief networks and influence diagrams (Geiger et al 1990; Shachter 1990).\nThis paper introduces the Bayes-Ball algorithm, a sim pler and more efficient algorithm to identify condi tional irrelevance and requisite information. For belief networks, Bayes-Ball runs in time linear in the size of the active part of the graph, so it is considerably faster when most of a graphical knowledge base is irrelevant. It also corrects an error in the requisite information al gorithm given in Geiger (1990). More significantly, for decision problems it runs in time linear in the size of the graph; up until now the fastest algorithm (Shachter 1990) has been O((number of decisions)(graph size)). Finally, the decision algorithm has been extended to allow multiple separable value nodes.\nThe identification of irrelevant nodes and requisite in formation is a fundamental operation in any belief net work or influence diagram processor. It allows quick pruning of graphical knowledge bases, provides simple explanations for fundamental relationships (Poh and Horvitz 1996), and even suggests new algorithms (Lin and Drudzel 1997). Although it has not been pub lished before now, the Bayes-ball algorithm for belief networks has been freely shared in the community and is implemented in systems such as Knowledge Indus tries' DXPress\u2122 and Microsoft's MSBN\u2122.\nSection 2 contains the notation and framework for the paper and the previous results from the literature. Sec tion 3 develops and proves the Bayes-ball algorithm for belief networks, and Section 4 extends and refines it for influence diagrams.\n2 Notation and Framework\n2.1 Irrelevance\nA structured belief network B = (N, A, F) consists of nodes N and directed arcs A which together form a directed acyclic graph G(N,A), and a subset F of the nodes that are deterministically (functionally) re-\na)\nFigure 1: Different assessment orders reveal different irrelevances\nlated to their parents. Corresponding to each node j is an uncertain variable Xj. Consider the belief net work shown in Figure 1a. This represents a contest in which the prize depends on the state of two flipped coins. Coin 1 and Coin 2 are oval probabilistic nodes and Win Prize is a double oval deterministic node.\nIn referring to the graph G(N, A), for any node i EN, Pa( i) denotes the parents of i and De( i) denotes the descendants of i.\nA joint probability distribution over XN is said to ad mit a directed factorization with respect to a struc tured belief network B = (N, A, F) if Xj is a deter ministic function of XPa(j) for all j E F and\nPr{XN} = IT Pr{XjiXPa(j)}\u00b7 jEN\nGiven a joint probability distribution for XN, Pr{XN }, X1 is probabilistically irrelevant (usually called \"independent\") to XL given XK for some J, K, L \ufffd N if\nPr{X1IXK,XL} = Pr{XJIXK}\u00b7\nGiven a structured belief network B = (N, A, F) and sets J, K, L \ufffd N, XJ is said to be irrelevant to XL given XK in B, denoted XJ ..is XLIXK, if XJ is prob abilistically irrelevant to XL given XK for any joint probability distribution Pr{XN} that admits a di rected factorization with respect to B.\nLess formally, XJ is irrelevant to XL given XK in B if, having observed XK, one can learn nothing more about XJ by also observing X\u00a3. The following proposition is well known (Pearl1988).\nProposition 1 (Irrelevance Decomposition) Given any structured belief network B = (N, A, F) and any subsets J, K, L \ufffd N, XJ ..is XLIXK if and only if\nXj ..is XtiXK for all j E J and l E L.\nIt is important to understand that probabilistic irrel evance is not the same as the irrelevance represented by a belief network. For example, Proposition 1 does not hold for particular probability distributions un less their independence is completely representable in a structured belief network. Consider the coin flip ping contest shown in Figure 1a. The decision-maker believes that the two flips are irrelevant but that the prize is determined by them. If he believes that the coins are both fair and the prize will be awarded if the two coins match, then the network in Figure 1b is\nBayes-Ball: The Rational Pastime 481\nalso valid, since he believes that the state of one coin tells him nothing about whether he will win. (That would not be true if the coins were not fair or the contest were won with two heads.) A misapplication of Proposition 1 would suggest that seeing both coins would tell him nothing about whether he will win!\n2.2 Deterministic Irrelevance\nGiven any structured belief network B = (N, A, F) and a deterministic node j E F, the variable Xj is certain or effectively observed if the parents of node j, Pa(j), are observed. Similarly, if each parent of j E F is either observed or effectively observed, then the variable Xj is also effectively observed. More formally, if the variables XK are observed for some K \ufffd N, a node j is said to be functionally determined by K if either j E K or xj is a deterministic function of XK. The set of nodes functionally determined by K, FK, can be described by the recursive equation,\nFK +---K U {i E F: Pa(i) \ufffd FK },\ncorresponding to nested instances of effective observa tion. For example, in Figure la, if the two coins are observed then it is functionally determined whether the prize will be awarded.\nProposition 2 (Deterministic Irrelevance) Given a structured belief network B = ( N, A, F) and sets J, K \ufffd N, XJ is functionally determined by XK in belief network B if and only if XJ ..is XNIXK.\nAs a special case of Proposition 2,\nXpK ..is XNIXK for all K \ufffd N.\n2.3 Target Sets\nEfficient computation of the following sets is one ob jective of this paper. The other objective is efficient computation of the related requisite sets for sequential decision problems represented by influence diagrams.\nThe irrelevant nodes for XJ given XK, denoted XN,(JIK), are those nodes which are conditionally ir relevant to XJ given XK,\nThe requisite or required information needed to com pute Pr{XJ IXK} depends on the probabilistic irrele vance, rather than the conditional irrelevance revealed in the belief network graph. Thus, from the graph we can only recognize the information which \"might\" be needed for any probability distribution.\nThe requisite probability nodes for J given K, denoted N1,(JIK), are those nodes for which conditional prob ability distributions (and possible states) might be needed to compute Pr{XJIXK}\u00b7 The conditional probability distribution for a deterministic node is usu ally specified as a deterministic function.\n482 Shachter\nThe requisite observations for J given K, Ne(J\\K) \ufffd K, are those observed nodes for which observations (and hence the possible states which might be ob served) might be needed to compute Pr{XJ\\XK }.\nIn previous papers (Shachter 1988; Shachter 1990), these sets were referred to as the \"minimal sets of rel evant nodes,\" N1T(J\\K) = Nv(J\\K) and Nn(J\\K) = Nv(J\\K) U Ne(J\\K).\n2.4 D-separation\nThe Bayes-ball algorithm is strongly based on the con cept of d-separation (Geiger et al 1989; Pearl 1988; Pearl et al 1990) and its deterministic generalization, D-separation (Geiger et al 1990).\nAn active path from J to L given K is a simple trail (or undirected path) between i E L and j E J, such that every node with two incoming arcs on the trail is or has a descendant in K; and every other node on the trail is not functionally determined by K. As a special case, active paths can be just a single node, that is, i = j.\nGiven sets of nodes, J, K, and L from belief network B, K is said to D-separate J from L in B if there is no active path from J to L given K. This condition determines all irrelevancies represented in the belief network (1990).\nTheorem 1 (D-Separation) Given a structured be lief network B = (N, A, F) and J, K, L \ufffd N, XJ .ls XL\\XK if and only if K D-separates J from Lin B.\nGeiger (1989; 1990) devised linear-time reachability al gorithms for finding active paths from J given K that inspired the Bayes-ball algorithm. Unfortunately, ac tive paths are not adequate for gathering requisite in formation since they cannot enter clusters of function ally determined nodes. The active path algorithms also must search the entire graphical model to find the ancestors of K and the nodes functionally determined byK.\nAn alternative characterization of the irrelevance rep resented by a belief network involves a conversion to related undirected graphical structures (Lauritzen et al 1990). Those results could be generalized for deter minacy following the appmach in (Shachter 1991) but, due to the nature of the conversion, the undirected ap proaches cannot find all nodes irrelevant to J given K in linear time.\n3 The Bayes-Ball Algorithm\nThis section presents two versions of the Bayes-ball algorithm, a simpler, preliminary version and a more refined, final version. The final version determines the irrelevant and requisite sets for a given inference query in time linear in the size of the belief network.\n3.1 Simpler Bayes-Ball\nThe simpler version of the Bayes-ball algorithm for J given K sends a bouncing ball to visit nodes in the belief network, starting from nodes J. Depending on the type of node and the direction from which the ball came to visit (from parents; from children), the ball can pass through the node (from any parent to all chil dren; from any child to all parents), bounce back (from any parent to all parents; from any child to all chil dren), or be blocked. This is summarized in Figure 2 in which:\n\u2022 an unobserved probabilistic node passes balls through but also bounces back balls from children;\n\u2022 an observed node bounces back balls from parents but blocks balls from children; and\n\u2022 a deterministic unobserved node always passes balls through.\nAlgorithm 1 (Simpler Bayes-Ball Algorithm) The algorithm explores a structured belief network B = (N, A, F) with respect to the expression Pr{XJ\\XK}\u00b7\n1. Visit each node in J (as if from one of its chil dren).\n2. When visiting a node j:\n(a) If the visit to j is from a child: i. If j E K then do nothing;\nii. otherwise, if j E F then visit each of j 's parents;\niii. otherwise, visit each of j 's parents and each of j 's children.\n{b) If the visit to j is from a parent: i. If j E K then visit each of j 's parents;\nii. otherwise, visit each of j 's children.\nAs an example of the simpler Bayes-ball algorithm, consider the belief network shown in Figure 3a, in which J = { 6} (denoted by the parents of the \"ghost\" rounded rectangle) and K = { 2, 5} (denoted by shad ing). The simpler Bayes-ball algorithm is illustrated in\nFigure 3: The simpler and refined versions of the Bayes-ball algorithm applied to a small belief network.\nFigure 3b. Starting from the rounded rectangle, visit its parent, node 6. From node 6 pass the ball through to nodes 3 and 5 (and to the children of node 6 if it had any). Node 5 does not send the ball anywhere, but node 3 bounces it to its children, nodes 2 and 6, (and would pass it through to its parents if it had any). Node 6 has no children to pass to, but node 2 bounces the ball back to its parents, nodes 1 and 3. In turn, nodes 1 and node 3 both bounce it back to node 2. Although the ball will keep bouncing forever, at this point it has visited all of the nodes it will ever visit from all of the directions it will ever visit them.\n3.2 The Final Bayes-Ball Algorithm\nAn obvious improvement to this algorithm is to main tain a list of nodes to be visited from parents and from children. Another, more critical improvement is to only visit the same arc in the same direction once. (This is not only more efficient, but necessary to termi nate the infinite loops.) It is accomplished by marking the top of a node when the ball is sent to the node's parents, marking the bottom of the node when the ball is sent to the node's children, and checking an observed node when it is visited. These marks not only allow the algorithm to terminate, but they also record significant results. Returning to the belief net work shown in Figure 3a, apply these modifications to obtain the network shown in Figure 3c. At the start, node 6 is visited (as if from its child) and it sends the ball to its parents and children, marking its top and bottom. Node 5 does not send the ball anywhere, so it is checked but not marked. Now node 3 is visited from its child node 6, so it sends the ball to its parents and children and marks its top and bottom. Node 6 receives the ball from parent node 3 and it would send it to its children if its bottom were not marked already. Node 2 receives the ball from parent node 3, sends it to its parents, and marks its top. Node 1 receives the ball from child node 2, sends it to its parents and chil dren, and marks its top and bottom. Finally node 2 and node 3 receive the ball and recognize that there is nothing new to do with it.\nThe Bayes-ball algorithm was run on the belief net work queries shown in parts a, c, e, and g of Figure 4\nBayes-Ball: The Rational Pastime 483\nFigure 4: The Bayes-ball algorithm applied to some small belief networks\nto obtain the networks shown in parts b, d, f, and h. In Figure 4b, nodes 1 and 2 are not visited. In Figure 4d, nodes 4, 5, and 6 are not visited because observed node 2 will not let the ball pass through, although node 2 does bounce it back to its parents. In Figure 4f, the ball is passed through nodes 5 and 4, but it is not passed through node 3, so node 1 is not visited. Fi nally, in Figure 4h, the ball is passed through nodes 6, 5, 4, and 2, but because there is no bounce back from node 1, the deterministic node 2 never passes the ball through to node 3.\nThese examples help to illustrate some of the proper ties of the Bayes-ball algorithm:\n\u2022 the node j is visited by the algorithm if and only if observing Xj might change one's belief about X1 given XK\\{i};\n\u2022 we need no information about any node which has not been visited;\n\u2022 we might need to know what state was observed for any observed node which is visited;\n\u2022 the ball bounces back to a parent from a child only if that child is observed, such as node 2 in Figure 4d;\n\u2022 the ball never bounces back to a child from a par ent functionally determined by K, such as nodes 1 and 2 in Figure 4h;\n\u2022 the ball is passed to parents to find requisite infor mation and passed to children looking for relevant observations;\n\u2022 any node not marked on its bottom is irrelevant to J given K;\n484 ShacMer\n\u2022 we might need a conditional probability distri bution (or deterministic function) for any node marked on its top.\nAlgorithm 2 (Bayes-Ball) The algorithm explores a structured belief network B = (N, A, F) with respect to the expression Pr{X1IXK} and constructs the sets of relevant and requisite nodes.\n1. Initialize all nodes as neither visited, nor marked on the top, nor marked on the bottom.\n2. Create a schedule of nodes to be visited, initialized with each node in J to be visited as if from one of its children.\n3. While there are still nodes scheduled to be visited:\n(a) Pick any node j scheduled to be visited and remove it from the schedule. Either j was scheduled for a visit from a parent, a visit from a child, or both.\n{b) Mark j as visited. (c) If j \ufffd K and the visit to j is from a child:\ni. if the top of j is not marked, then mark its top and schedule each of its parents to be visited;\nii. if j \ufffd F and the bottom of j is not marked, then mark its bottom and sched ule each of its children to be visited.\n(d) If the visit to j is from a parent: i. If j E K and the top of j is not marked,\nthen mark its top and schedule each of its parents to be visited;\nii. if j \ufffd K and the bottom of j is not marked, then mark its bottom and sched ule each of its children to be visited.\n4. The irrelevant nodes, Ni(JIK), are those nodes not marked on the bottom.\n5. The requisite probability nodes, N11(JIK), are those nodes marked on top.\n6. The requisite observation nodes, Ne(JIK), are those nodes in K marked as visited.\n3.3 Bayes-Ball Proofs\nThe section proves that Bayes-ball properly computes the irrelevant and requisite sets and does it in sub linear time.\nTheorem 2 (Bayes-Ball Irrelevance) Given a structured belief network B = (N, A, F) and J, K, L \ufffd N, X1 _l_B XLIXK if and only if L \ufffd Ni(JIK), as de termined by the Bayes-Ball algorithm.\nProof: Based on Theorem 1 it is sufficient to show that a node l will be marked on the bottom if and only if there is an active path from J to l given K.\nFirst, any node i is or has a descendant inK if and only if it would always bounce the ball back to its parents after one of them sent the ball to it, since the bounce back can only come from an observed descendant.\nSecond, i is functionally determined by K if and only if it would never bounce the ball back to its children after one of them sent the ball to it, since any unobserved probabilistic ancestor would bounce it back.\nTherefore, given any active path from J to l, Bayes ball can travel the path (perhaps with the detours just described) and it will be visiting the children of node l, either by passing through or bouncing back. Similarly, if the Bayes-ball is sent from l to its children then there must be an active path from J to l . D\nTheorem 3 (Bayes-Ball Requisite Sets) Given a structured belief network B = (N, A, F), for any J, K \ufffd N, the Bayes-ball algorithm determines the requisite probability nodes, N11( JIK), and the requisite observation nodes, Ne(JIK).\nProof: Whether a node j is visited does not depend at all on whether it is observed or deterministic, but only on the properties of other nodes leading to it. If the algorithm visits an unobserved probabilistic node j, then it will mark j on the bottom and, by the preced ing theorem, j appears relevant to J given K. Thus, the algorithm will visit node j if and only if, keeping all other nodes unchanged but changing j to be unob served and probabilistic, Xi might be relevant to X1 given XK.\nAs a result, the state of an observed node k provides no information about J given K unless it is visited. Thus, Ne(JIK) comprises those nodes inK which are visited during the algorithm.\nTo determine N11(JIK), add a new observed parent (a probability distribution/deterministic function) to every node. These new nodes would not have req uisite observations unless they were visited, and this would occur only when their corresponding children have been marked on top. D\nThe last part of the preceding proof relates to the flaw in the requisite information algorithm in Geiger (1990). In that paper, relevance is used to recognize requisite distributions, but that can introduce uncer tainty and eliminate functional determinacy. On the other hand, in this work, requisite information is based on the need for observations and thus no spurious un certainty is introduced. Bayes-ball is able to gather both irrelevance and requisite information by recog nizing their dist;...\u2022ction-visiting parents for requisite information and visiting children for relevance.\nTheorem 4 (Bayes-ball Complexity) Given a structured belief network B = (N, A, F), for any J, K \ufffd N, the Bayes-ball algorithm runs in O(I NI + I Avi ), where A,, are the arcs incident to the nodes marked during the algorithm. In the worst case,\nit is linear time in the size of the graph.\nProof: Each node has to be visited to initialize flags and to harvest results and then at most once for each \"active\" incident arc. Only the active arcs will be vis ited, because the algorithm searches locally to deter mine whether a node has an observed descendant or is functionally determined. D\n4 Bayes-Ball for Decisions\nThe results in Section 3 determining requisite sets for probabilistic inference can be applied to problems of decision making under uncertainty (Shachter 1 986; Shachter 1 988) . In this section, the Bayes-ball algo rithm is adapted to determine the requisite informa tion for decision problems represented by influence di agrams, yielding a new, significantly more efficient and powerful algorithm.\nThe influence diagram is a belief network augmented with rectangular decision nodes, representing vari ables under the control of the decision maker, and rounded rectangular value nodes, representing the cri terion whose expectation the decision maker maxi mizes to choose among decision alternatives. The deci sions, D, are assumed to be ordered in time, d1, ... , dm, and the uncertain variables are partitioned into sets E, W1, ... , Wm+1 such that the uncertain variables Wi are assumed to be observed before decision \ufffd but af ter decision ll,;_1. Some of the uncertainties, Wm+l, will not be observed before any of the decisions, while others, E, have already been observed. We assume that if there are multiple value nodes in V that they are related by a separable function, that is, either a sum or a product (of nonnegative factors). This struc ture is illustrated in Figure 5. Implicit in the figure is the no forgetting assumption that at the time of any decision, the decision maker will remember all pre vious decisions and the uncertain variables known at the time they were made. These are captured in the information sets, I(di), for each decision d;. It follows that I(dl) = W1 U E and I(di) = Wi U \ufffd-1 U I(di-1) for i = 2, . . . , m . These information sets are indicated in the influence diagram by information arcs into the decision nodes.\nConsider the influence diagram shown in Figure 6a modeling the design of an experiment. The decision maker seeks to maximize expected Benefit minus Cost.\nBenefit depends on the uncertain variable State and the decision Act. He has already observed History which depends on State, and before making the Act decision, he will observe Experiment, which depends on both the Design decision and the State. There is a Cost to the Design decision. This problem is solved recursively through dynamic programming to deter mine an optimal policy, d:r,(xr(dm)) for the latest de cision, dm as a function of the information available at the time of the decision. Only the value nodes which are descendants of dm are affected by this pol icy, Vm = VnDe(dm) (Heckerman and Shachter 1 995; Shachter and Peot 1992) . This policy must satisfy\nE{Vmld;',(XJ(d,.)), XJ(d,.)} = maxdE{Vmld, XJ(d,.)}\u00b7\nThis suggests the use of the Bayes-ball algorithm to determine the requisite sets. The decision dm can be replaced by the optimal_ policy to obtain the influence diagram shown in Figure 6c, in which Act is now a de terministic function of the requisite observations, De sign, Experiment, and History. At this point, the value nodes Vm are irrelevant of any earlier decisions given the requisite observations at the time of decision drn. So the value for drn-l can be characterized in terms of Vm-l and the requisite observations from the first step. Continuing with the example, Cost, Design, Ex periment, and History are the goals for Design, and the policy is a function of History as shown in Figure 6e.\nSuppose instead that the decision-maker were able to observe the State before the Act decision, as shown in Figure 6g. Now, State is the only requisite observed node before Act, yielding the diagram shown in Fig-\n486 Shachter\nure 6i. As a result, Cost and State are the goals for Design as shown in Figure 6k.\nThe requisite probability nodes for decision i, denoted N\ufffd, are those nodes for which conditional probability distributions (and possible states) might be needed to evaluate the decision problem starting with decision i. N\ufffd is the set of requisite probability nodes for the entire decision problem.\nThe requisite observations for decision i , denoted N\ufffd, are those nodes which can be observed before decision i that might be worth observing (and hence for which the possible states might be needed) in order to evalu ate the decision problem starting with decision i. N\ufffd is the set of requisite observation nodes before the en tire decision problem, assuming that we have observed nodes E now; if E = 0 then N\ufffd = 0.\nAlgorithm 3 (Decision Bayes-Ball) This algorithm constructs the sets of requisite nodes for an influence diagram with separable value nodes V , evidence nodes E, and time-ordered decision nodes D = {d1, . . . ,dm}\u00b7\n1. start with the last decision, dm:\n(a) Determine the relevant value nodes, Vm = V n De(dm). {If there is only one value node for the problem, it should be in Vm. )\n{b) Run the Bayes-ball algorithm on Vml{dm} U I( dm), ignoring any informational arcs.\n(c) If drn is not marked as visited then deci sion dm is irrelevant-it has no effect on the decision-maker's value.\n{d) The requisite observation nodes for decision dm are the nodes in I(dm) marked as visited,\n(e) The requisite probability nodes starting with decision dm are the nodes marked on top,\n2. iterate backwards for each earlier decision di, i = m - 1, . . . ,1:\n{a)\n{b)\n(c)\n{d)\n(e) Determine the relevant value nodes, Vi = V n (De(di) \\ De(d;+l)), ignoring any infor mational arcs in determining descendants. Resume the Bayes-ball algorithm on Vi U N\ufffd+ll { di} U I ( di), ignoring any informational arcs. If di is not marked as visited then decision d; is irrelevant. The requisite observation nodes for decision di , N\ufffd, are those nodes in I(di) marked as visited. The requisite probability nodes starting with decision d;, N\ufffd, are all of the nodes marked on top.\n3. compute the requisite information at the start of the decision problem {now) given current observa tions E:\n(a)\n{b)\n(c)\nResume the Bayes-ball algorithm on N! JE, ignoring any informational arcs.\nThe requisite observations needed now, N\ufffd, are those nodes in E marked as visited. (If E is empty, then no observations are needed now. )\nThe requisite probability nodes starting now, N\ufffd, are all of the nodes marked on top.\nConsider the influence diagram examples shown in Fig ure 6. As explained earlier, the left column represents the influence diagram at each step as decisions are re placed by policies for the situations without and with observation of State before the Act decision. The right column shows how the Bayes-ball algorithm for de cisions is applied sequentially to the original problem structure. Bayes-ball works effiCiently on influence dia grams by resuming rather than restarting at each step. The sets computed by the algorithm are shown in the following table:\nI Figure 6 I i I N' e N' E ajb 2 Design, History, Benefit, History,\nExperiment Experiment, State c/d 1 History above+ Cost e/f 0 History above i/h 2 State Benefit i/j 1 History Benefit, Cost, History, State k/l 0 History above\nTheorem 5 (Decision Bayes-Ball) Given an in fluence diagram with separable value nodes and evi dence now, Algorithm 3 will determine the requisite node sets in O(JNI + JAI), that is, linear time in the number of nodes and arcs.\nProof: The correctness of the requisite sets follows from the Bayes-ball algorithm and the decision theory summarized in this section, so the big question here is the computational complexity.\nThere are two issues to be resolved there. First, the sets of value nodes can be determined in linear time in the size of the graph. Second, the Bayes ball algorithm for each decision can be resumed dur ing the algorithm, keeping the previous results. This works because the information sets are monotone, E \ufffd {d1} U I(d1) \ufffd ... \ufffd {dm} U I(dm)\u00b7 Once the algorithm has been run on Vi U N\ufffd+1J{d;} UI(d;), it is easy to run it on lti-1 U N\ufffdJ{di-1} U I(di-1)\u00b7 The nodes ({di} U I(di) \\ {di-1} U I(d;-1 )) = {d;} U Wi are no longer observed, but the previously requisite observations N\ufffd+l \\ N\ufffd are now scheduled to receive messages from their children, so they will now pass the Bayes-ball through to their parents automatically! The Bayes-ball sets of nodes visited, marked on the\ntop, and marked on the bottom, can grow monotoni cally as the decisions are visited in reverse order. The computation of N\ufffd is still correct, since only the cur rently observed visited nodes are included and the number of node visits is O( INI + IAI). D\n5 Conclusions\nThis paper has introduced a simple and efficient algo rithm to compute irrelevant and requisite sets for infer ence and decision problems represented as structured belief networks and influence diagrams. Because these procedures can be used before states and distributions are assessed they are quite useful. Although the ef ficiency gain over earlier belief network algorithms is modest (sub linear vs. linear time), the computation of requisite information is performed at the same time as irrelevance is determined.\nThe significant improvement presented here is in determining requisite information for decision prob lems. The new algorithm is linear time instead of O((number of decisions)(graph size)), and can exploit separable values.\nThese algorithms recognize the special properties of deterministic relationships. Such models are becom ing increasingly useful as new developments arise in causal models (Heckerman and Shachter 1995). An interesting extension of the deterministic model would be to represent determinism in more than one assess ment order, such as representing when deterministic relationships are invertible.\nAnother extension is to apply Bayes-ball to cyclical networks (Pearl and Dechter 1996). Bayes-ball can be applied to such networks without any modifications.\nAlthough the algorithm recognizes the full informa tion requirements to value decision problems, it can be modified to recognize some additional efficiencies in the dimensions of policy. For example, in Figure 6k, the choice of Design would not depend on History if the total value were the sum of Cost and Benefit, although the value derived would indeed depend on History. As a result we wouldn't need a probability distribution for History and State to determine the optimal policy, but we would need them to value that policy.\nAcknowledgements\nThis paper has benefited from the comments, sugges tions, and ideas of many friends and students, most no tably Danny Geiger, Derek Ayers, Mark Peot, David Heckerman, Marcia Tsugawa, Robert Korsan, Richard Barlow, and anonymous referees.\nReferences\nGeiger, D., T. Verma, and J. Pearl. \"d-separation: from theorems to algorithms.\" In Fifth Workshop\nBayes-Ball: The Rational Pastime 487\non Uncertainty in Artificial Intelligence in U ni versity of W indsor, Ontario, 118-125, 1989.\nGeiger, D., T. Verma, and J. Pearl. \"Identifying in dependence in Bayesian networks.\" Networks 20 (1990): 507-534.\nHeckerman, D. and R. Shachter. \"Decision-Theoretic Foundations for Causal Reasoning.\" Journal of Ar tificial Intelligence Research 3 (1995): 405-430.\nLauritzen, S. L., A. P. Dawid, B. N. Larsen, and H.-G. Leimer. \"Independence properties of directed Markov fields.\" Networks 20 (1990): 491-505.\nLin, Y. and M. J. Drudzel. \"Computational Advan tages of Relevance Reasoning in Bayesian Belief Net works.\" In Uncertainty in Artificial Intelligence: Proceedings of the Thirteenth Conference, 342- 350. San Mateo, CA: Morgan Kaufmann, 1997.\nPearl, J. Probabilistic Reasoning in Intelligent Systems. San Mateo, CA: Morgan Kaufmann, 1988.\nPearl, J. and R. Dechter. \"Identifying Independen cies in Causal Graphs with Feedback.\" In Uncer tainty in Artificial Intelligence: Proceedings of the Twelfth Conference, 420-426. San Mateo, CA: Morgan Kaufmann, 1996.\nPearl, J., D. Geiger, and T. Verma. \"The Logic of In fluence Diagrams.\" In Influence Diagrams, Belief Nets, and Decision Analysis, eds. R. M. Oliver and J. Q. Smith. 67-87. Chichester: Wiley, 1990.\nPoh, K. L. and E. Horvitz. \"A Graph-Theoretic Anal ysis of Information Value.\" In Uncertainty in Ar tificial Intelligence: Proceedings of the Twelfth Conference, 427-435. San Mateo, CA: Morgan Kauf mann, 1996.\nShachter, R. \"A Graph-Based Inference Method for Conditional Independence.\" In Uncertainty in Ar tificial Intelligence: Proceedings of the Seventh Conference, eds. B D'Ambrosio, P Smets, and P Bonissone. 353-360. San Mateo, CA: Morgan Kauf mann, 1991.\nShachter, R. D. \"Evaluating Influence Diagrams.\" Ops. Rsrch. 34 (November-December 1986): 871- 882.\nShachter, R. D. \"Probabilistic Inference and Influence Diagrams.\" Ops. Rsrch. 36 (July-August 1988): 589-605.\nShachter, R. D. \"An Ordered Examination oflnfluence Diagrams.\" Networks 20 (1990): 535-563.\nShachter, R. D. and M. A. Peot. \"Decision Making Using Probabilistic Inference Methods.\" In Uncer tainty in Artificial Intelligence: Proceedings of the Eighth Conference, 276-283. San Mateo, CA: Morgan Kaufmann, 1992."}], "references": [{"title": "Leimer. \"Independence properties of directed Markov fields.\" Networks", "author": ["S.L. Lauritzen", "A.P. Dawid", "B.N. Larsen", "H.-G"], "venue": null, "citeRegEx": "Lauritzen et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Lauritzen et al\\.", "year": 1990}, {"title": "Probabilistic Reasoning in Intelligent Systems", "author": ["J. Pearl"], "venue": null, "citeRegEx": "Pearl,? \\Q1988\\E", "shortCiteRegEx": "Pearl", "year": 1988}, {"title": "The Logic of In\u00ad fluence Diagrams.\" In Influence Diagrams", "author": ["J. Pearl", "D. Geiger", "T. Verma"], "venue": "Belief Nets, and Decision Analysis,", "citeRegEx": "Pearl et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Pearl et al\\.", "year": 1990}, {"title": "Evaluating Influence Diagrams.\" Ops. Rsrch", "author": ["R.D. Shachter"], "venue": "(November-December", "citeRegEx": "Shachter,? \\Q1986\\E", "shortCiteRegEx": "Shachter", "year": 1986}, {"title": "Probabilistic Inference and Influence Diagrams.\" Ops. Rsrch", "author": ["R.D. Shachter"], "venue": "(July-August", "citeRegEx": "Shachter,? \\Q1988\\E", "shortCiteRegEx": "Shachter", "year": 1988}, {"title": "An Ordered Examination oflnfluence Diagrams.\" Networks", "author": ["R.D. Shachter"], "venue": null, "citeRegEx": "Shachter,? \\Q1990\\E", "shortCiteRegEx": "Shachter", "year": 1990}], "referenceMentions": [{"referenceID": 1, "context": "Without the need to compute with or even assess possible states and probabilities, many important properties of a model can be recog\u00ad nized (Pearl 1988; Shachter 1988).", "startOffset": 140, "endOffset": 167}, {"referenceID": 4, "context": "Without the need to compute with or even assess possible states and probabilities, many important properties of a model can be recog\u00ad nized (Pearl 1988; Shachter 1988).", "startOffset": 140, "endOffset": 167}, {"referenceID": 5, "context": "These algorithms have been generalized to deal with deterministic nodes in belief networks and influence diagrams (Geiger et al 1990; Shachter 1990).", "startOffset": 114, "endOffset": 148}, {"referenceID": 5, "context": "More significantly, for decision problems it runs in time linear in the size of the graph; up until now the fastest algorithm (Shachter 1990) has been O((number of decisions)(graph size)).", "startOffset": 126, "endOffset": 141}, {"referenceID": 4, "context": "In previous papers (Shachter 1988; Shachter 1990), these sets were referred to as the \"minimal sets of rel\u00ad evant nodes,\" N1T(J\\ K) = Nv(J\\ K) and Nn(J\\ K) = Nv(J\\ K) U Ne(J\\ K).", "startOffset": 19, "endOffset": 49}, {"referenceID": 5, "context": "In previous papers (Shachter 1988; Shachter 1990), these sets were referred to as the \"minimal sets of rel\u00ad evant nodes,\" N1T(J\\ K) = Nv(J\\ K) and Nn(J\\ K) = Nv(J\\ K) U Ne(J\\ K).", "startOffset": 19, "endOffset": 49}, {"referenceID": 1, "context": "The Bayes-ball algorithm is strongly based on the con\u00ad cept of d-separation (Geiger et al 1989; Pearl 1988; Pearl et al 1990) and its deterministic generalization, D-separation (Geiger et al 1990).", "startOffset": 76, "endOffset": 125}], "year": 2011, "abstractText": "One of the benefits of belief networks and influence diagrams is that so much knowl\u00ad edge is captured in the graphical structure. In particular, statements of conditional irrel\u00ad evance (or independence) can be verified in time linear in the size of the graph. To re\u00ad solve a particular inference query or decision problem, only some of the possible states and probability distributions must be specified, the \"requisite information.\" This paper presents a new, simple, and effi\u00ad cient \"Bayes-ball\" algorithm which is well\u00ad suited to both new students of belief net\u00ad works and state of the art implementations. The Bayes-ball algorithm determines irrele\u00ad vant sets and requisite information more ef\u00ad ficiently than existing methods, and is linear in the size of the graph for belief networks and influence diagrams.", "creator": "pdftk 1.41 - www.pdftk.com"}}}