{"id": "1303.7430", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Mar-2013", "title": "Introducing Nominals to the Combined Query Answering Approaches for EL", "abstract": "now so - called combined approaches answer a conjunctive functional query : over satisfying a description logic ontology in typical three steps : first, they materialise certain consequences knowledge of the ontology and determine the base data ; \u2192 second, as they aggressively evaluate the query derivation over the derived data ; and whereas third, they filter across the conditional result of doing the long second phase to eliminate unsound answers. such approaches were developed notably for various standardized members of the alpha dl - ing lite and the iso el families variant of dynamic languages, but none of them can presently handle ontologies containing abstract nominals. in writing our work, suppose we bridge this gap and present a combined generic query answering approach for elho - - - a robust logic that has contains utterly all unique features of the isa owl 2 el standard apart from transitive logic roles and complex assignment role statement inclusions. this extension is strictly nontrivial operations because nominals themselves require an equality tree reasoning, which introduces binary complexity into the first and suggests the shortest third step. after our empirical evaluation suggests that our technique is suitable, for practical application, effectively and so still it nonetheless provides almost a stronger practical basis for the conjunctive query answering implemented in a given large html fragment of ada owl do 2 el.", "histories": [["v1", "Fri, 29 Mar 2013 16:07:12 GMT  (135kb,D)", "https://arxiv.org/abs/1303.7430v1", "Extended version of a paper to appear on AAAI-13"], ["v2", "Mon, 1 Apr 2013 17:08:32 GMT  (72kb,D)", "http://arxiv.org/abs/1303.7430v2", "Extended version of a paper to appear on AAAI-13"]], "COMMENTS": "Extended version of a paper to appear on AAAI-13", "reviews": [], "SUBJECTS": "cs.AI cs.DB cs.LO", "authors": ["giorgio stefanoni", "boris motik", "ian horrocks"], "accepted": true, "id": "1303.7430"}, "pdf": {"name": "1303.7430.pdf", "metadata": {"source": "META", "title": "Introducing Nominals to the Combined Query Answering Approaches for EL", "authors": ["Giorgio Stefanoni", "Boris Motik", "Ian Horrocks"], "emails": [], "sections": [{"heading": null, "text": "Introduction Description logics (DLs) (Baader et al. 2007) are a family of knowledge representation formalisms that underpin OWL 2 (Cuenca Grau et al. 2008)\u2014an ontology language used in advanced information systems with many practical applications. Answering conjunctive queries (CQs) over ontologyenriched data sets is a core reasoning service in such systems, so the computational aspects of this problem have received a lot of interest lately. For expressive DLs, the problem is at least doubly exponential in query size (Glimm et al. 2008). The problem, however, becomes easier for the EL (Baader, Brandt, and Lutz 2005) and the DL-Lite (Calvanese et al. 2007) families of DLs, which provide the foundation for the OWL 2 EL and the OWL 2 QL profiles of OWL 2. An important goal of this research was to devise not only worstcase optimal, but also practical algorithms. The known approaches can be broadly classified as follows.\nThe first group consists of automata-based approaches for DLs such as OWL 2 EL (Kro\u0308tzsch, Rudolph, and Hitzler 2007) and Horn-SHOIQ and Horn-SROIQ (Ortiz, Rudolph, and Simkus 2011). While worst-case optimal, these approaches are typically not suitable for practice since their best-case and worst-case performance often coincide.\nCopyright c\u00a9 2013, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nThe second group consists of rewriting-based approaches. Roughly speaking, these approaches rewrite the ontology and/or the query into another formalism, typically a union of conjunctive queries or a datalog program; the relevant answers can then be obtained by evaluating the rewriting over the data. Rewriting-based approaches were developed for members of the DL-Lite family (Calvanese et al. 2007; Artale et al. 2009), and the DLs ELHIO\u22a5 (Pe\u0301rez-Urbina, Motik, and Horrocks 2010) and Horn-SHIQ (Eiter et al. 2012), to name just a few. A common problem, however, is that rewritings can be exponential in the ontology and/or query size. Although this is often not a problem in practice, such approaches are not worst-case optimal. An exception is the algorithm by Rosati (2007) that rewrites an ELH\u22a5 ontology into a datalog program of polynomial size; however, the algorithm also uses a nondeterministic step to transform the CQ into a tree-shaped one, and it is not clear how to implement this step in a goal-directed manner.\nThe third group consists of combined approaches, which use a three-step process: first, they augment the data with certain consequences of the ontology; second, they evaluate the CQ over the augmented data; and third, they filter the result of the second phase to eliminate unsound answers. The third step is necessary because, to ensure termination, the first step is unsound and may introduce facts that do not follow from the ontology; however, this is done in a way that makes the third step feasible. Such approaches have been developed for logics in the DL-Lite (Kontchakov et al. 2011) and the EL (Lutz, Toman, and Wolter 2009) families, and they are appealing because they are worst-case optimal and practical: only the second step is intractable (in query size), but it can be solved using well-known database techniques.\nNone of the combined approaches proposed thus far, however, handles nominals\u2014concepts containing precisely one individual. Nominals are included in OWL 2 EL, and they are often used to state that all instances of a class have a certain property value, such as \u2018the sex of all men is male\u2019, or \u2018each German city is located in Germany\u2019. In this paper we present a combined approach for ELHOr\u22a5\u2014the DL that covers all features of OWL 2 EL apart from transitive roles and complex role inclusions. To the best of our knowledge, this is the first combined approach that handles nominals. Our extension is nontrivial because nominals require equality reasoning, which increases the complexity of the first and\nar X\niv :1\n30 3.\n74 30\nv2 [\ncs .A\nI] 1\nA pr\n2 01\n3\nthe third step of the algorithm. In particular, nominals may introduce recursive dependencies in the filtering conditions used in the third phase; this is in contrast to the known combined approach for EL (Lutz, Toman, and Wolter 2009) in which filtering conditions are not recursive and can be incorporated into the input query. To solve this problem, our algorithm evaluates the original CQ and then uses a polynomial function to check the relevant conditions for each answer.\nFollowing Kro\u0308tzsch, Rudolph, and Hitzler (2008), instead of directly materialising the relevant consequences of the ontology and the data, we transform the ontology into a datalog program that captures the relevant consequences. Although seemingly just a stylistic issue, a datalog-based specification may be beneficial in practice: one can either materialise all consequences of the program bottom-up in advance, or one can use a top-down technique to compute only the consequences relevant for the query at hand. The latter can be particularly useful in informations systems that have read-only access to the data, or where data changes frequently.\nWe have implemented a prototypical system using our algorithm, and we carried out a preliminary empirical evaluation of (i) the blowup in the number of facts introduced by the datalog program, and (ii) the number of unsound answers obtained in the second phase. Our experiments show both of these numbers to be manageable in typical cases, suggesting that our algorithm provides a practical basis for answering CQs in an expressive fragment of OWL 2 EL.\nThe proofs of our technical results are provided in this paper\u2019s appendix.\nPreliminaries Logic Programming. We use the standard notions of variables, constants, function symbols, terms, atoms, formulas, and sentences (Fitting 1996). We often identify a conjunction with the set of its conjuncts. A substitution \u03c3 is a partial mapping of variables to terms; dom(\u03c3) and rng(\u03c3) are the domain and the range of \u03c3, respectively; \u03c3|S is the restriction of \u03c3 to a set of variables S; and, for \u03b1 a term or a formula, \u03c3(\u03b1) is the result of simultaneously replacing each free variable x occurring in \u03b1 with \u03c3(x). A Horn clause C is an expression of the form B1 \u2227 . . . \u2227Bm \u2192 H , where H and each Bi are atoms. Such C is a fact if m = 0, and it is commonly written as H . Furthermore, C is safe if each variable occurring inH also occurs in someBi. A logic program \u03a3 is a finite set of safe Horn clauses; furthermore, \u03a3 is a datalog program if each clause in \u03a3 is function-free.\nIn this paper, we interpret a logic program \u03a3 in a model that can be constructed bottom-up. The Herbrand universe of \u03a3 is the set of all terms built from the constants and the function symbols occurring in \u03a3. Given an arbitrary set of facts B, let \u03a3(B) be the smallest superset of B such that, for each clause \u03d5\u2192 \u03c8 \u2208 \u03a3 and each substitution \u03c3 mapping the variables occurring in the clause to the Herbrand universe of \u03a3, if \u03c3(\u03d5) \u2286 B, then \u03c3(\u03c8) \u2286 \u03a3(B). Let I0 be the set of all facts occurring in \u03a3; for each i \u2208 N, let Ii+1 = \u03a3(Ii); and let I = \u22c3 i\u2208N Ii. Then I is the minimal Herbrand model of \u03a3, and it is well known that I satisfies \u2200~x.C for each Horn clause C \u2208 \u03a3 and ~x the vector of all variables occurring in C.\nIn this paper we allow a logic program \u03a3 to contain the equality predicate \u2248. In first-order logic, \u2248 is usually interpreted as the identity over the interpretation domain; however, \u2248 can also be explicitly axiomatised (Fitting 1996). Let \u03a3\u2248 be the set containing clauses (1)\u2013(3), an instance of clause (4) for each n-ary predicate R occurring in \u03a3 and each 1 \u2264 i \u2264 n, and an instance of clause (5) for each n-ary function symbol f occurring in \u03a3 and each 1 \u2264 i \u2264 n.\n\u2192 x \u2248 x (1) x1 \u2248 x2 \u2192 x2 \u2248 x1 (2)\nx1 \u2248 x2 \u2227 x2 \u2248 x3 \u2192 x1 \u2248 x3 (3) R(~x) \u2227 xi \u2248 x\u2032i \u2192 R(x1, . . . , x\u2032i, . . . , xn) (4)\nxi \u2248 x\u2032i \u2192 f(. . . , xi, . . .) \u2248 f(. . . , x\u2032i, . . .) (5)\nThe minimal Herbrand model of a logic program \u03a3 that contains \u2248 is the minimal Herbrand model of \u03a3 \u222a \u03a3\u2248.\nConjunctive Queries. A conjunctive query (CQ) is a formula q = \u2203~y.\u03c8(~x, ~y) with \u03c8 a conjunction of functionfree atoms over variables ~x \u222a ~y. Variables ~x are the answer variables of q. Let NT (q) be the set of terms occurring in q.\nLet \u03c4 be a substitution such that rng(\u03c4) contains only constants. Then, \u03c4(q) = \u2203~z.\u03c4(\u03c8), where ~z is obtained from ~y by removing each variable y \u2208 ~y for which \u03c4(y) is defined. Note that, according to this definition, non-free variables can also be replaced; for example, given q = \u2203y1, y2.R(y1, y2) and \u03c4 = {y2 7\u2192 a}, we have \u03c4(q) = \u2203y1.R(y1, a).\nLet \u03a3 be a logic program, let I be the minimal Herbrand model of \u03a3, and let q = \u2203~y.\u03c8(~x, ~y) be a CQ that uses only the predicates occurring in \u03a3. A substitution \u03c0 is a candidate answer for q in \u03a3 if dom(\u03c0) = ~x and rng(\u03c0) contains only constants; furthermore, such a \u03c0 is a certain answer to q over \u03a3, written \u03a3 |= \u03c0(q), if a substitution \u03c4 exists such that dom(\u03c4) = ~x \u222a ~y, \u03c0 = \u03c4 |~x, and \u03c4(q) \u2286 I .\nDescription Logic. DL ELHOr\u22a5 is defined w.r.t. a signature consisting of mutually disjoint and countably infinite sets NC , NR, and NI of atomic concepts (i.e., unary predicates), roles (i.e., binary predicates), and individuals (i.e., constants), respectively. Furthermore, for each individual a \u2208 NI , expression {a} denotes a nominal\u2014that is, a concept containing precisely the individual a. Also, we assume that > and \u22a5 are unary predicates (without any predefined meaning) not occurring in NC . We consider only normalised knowledge bases, as it is well known (Baader, Brandt, and Lutz 2005) that each ELHOr\u22a5 knowledge base can be normalised in polynomial time without affecting the answers to CQs. An ELHOr\u22a5 TBox is a finite set of ax-\nioms of the form shown in the left-hand side of Table 1, where A(i) \u2208 NC \u222a {>}, B \u2208 NC \u222a {>,\u22a5}, R,S \u2208 NR, and a \u2208 NI . An ABox A is a finite set of facts constructed using the symbols fromNC \u222a {>,\u22a5},NR, andNI . Finally, an ELHOr\u22a5 knowledge base (KB) is a tuple K = \u3008T ,A\u3009, where T is an ELHOr\u22a5 TBox T and an A is an ABox such that each predicate occurring in A also occurs in T .\nWe interpret K as a logic program. Table 1 shows how to translate a TBox T into a logic program \u039e(T ). Moreover, let >(T ) be the set of the following clauses instantiated for each atomic concept A and each role R occurring in T .\nA(x)\u2192 >(x) R(x, y)\u2192 >(x) R(x, y)\u2192 >(y)\nA knowledge base K = \u3008T ,A\u3009 is translated into the logic program \u039e(K) = \u039e(T ) \u222a >(T ) \u222a A. Then, K is unsatisfiable if \u039e(K) |= \u2203y.\u22a5(y). Furthermore, given a conjunctive query q and a candidate answer \u03c0 for q, we write K |= \u03c0(q) iff K is unsatisfiable or \u039e(K) |= \u03c0(q). Although somewhat nonstandard, our definitions of DLs are equivalent to the ones based on the standard denotational semantics (Baader et al. 2007). Given a candidate answer \u03c0 for q, deciding whether \u039e(K) |= \u03c0(q) holds is NP-complete in combined complexity, and PTIME-complete in data complexity (Kro\u0308tzsch, Rudolph, and Hitzler 2007).\nDatalog Rewriting of ELHOr\u22a5 TBoxes For the rest of this section, we fix an arbitrary ELHOr\u22a5 knowledge base K = \u3008T ,A\u3009. We next show how to transform K into a datalog program D(K) that can be used to check the satisfiability of K. In the following section, we then show how to use D(K) to answer conjunctive queries.\nDue to axioms of type 6 (cf. Table 1), \u039e(K) may contain function symbols and is generally not a datalog program; thus, the evaluation of \u039e(K) may not terminate. To ensure termination, we eliminate function symbols from \u039e(K) using the technique by Kro\u0308tzsch, Rudolph, and Hitzler (2008): for each A \u2208 NC \u222a {>} and each R \u2208 NR occurring in T , we introduce a globally fresh and unique auxiliary individual oR,A. Intuitively, oR,A represents all terms in the Herbrand universe of \u039e(K) needed to satisfy the existential concept \u2203R.A. Kro\u0308tzsch, Rudolph, and Hitzler (2008) used this technique to facilitate taxonomic reasoning, while we use it to obtain a practical CQ answering algorithm. Please note that oR,A depends on both R and A, whereas in the known approaches such individuals depend only onA (Lutz, Toman, and Wolter 2009) or R (Kontchakov et al. 2011). Definition 1. Datalog program D(T ) is obtained by translating each axiom of type other than 6 in the TBox T of K into a clause as shown in Table 1, and by translating each axiom A1 v \u2203R.A in T into clauses A1(x)\u2192 R(x, oR,A) and A1(x)\u2192 A(oR,A). Furthermore, the translation of K into datalog is given by D(K) = D(T ) \u222a >(T ) \u222a A. Example 1. Let T be the following ELHOr\u22a5 TBox:\nKRC v \u2203taught .JProf \u2203taught .> v Course Course v \u2203taught .Prof {kr} v KRC\nProf v \u2203advisor .Prof KRC v Course JProf v {john} range(taught ,Prof )\nThen, D(T ) contains the following clauses:\nKRC (x)\u2192 taught(x, oT,J) JProf (x)\u2192 x \u2248 john KRC (x)\u2192 JProf (oT,J) taught(x, y)\u2192 Course(x) Course(x)\u2192 taught(x, oT,P ) KRC (kr) Course(x)\u2192 Prof (oT,P ) KRC (x)\u2192 Course(x) Prof (x)\u2192 advisor(x, oA,P ) taught(x, y)\u2192 Prof (y) Prof (x)\u2192 Prof (oA,P ) \u2666\nThe following result straightforwardly follows from the definition of \u039e(K) and D(K). Proposition 2. Program D(K) can be computed in time linear in the size of K.\nNext, we prove that the datalog program D(K) can be used to decide the satisfiability of K. To this end, we define a function \u03b4 that maps each term w in the Herbrand universe of \u039e(K) to the Herbrand universe of D(K) as follows:\n\u03b4(w) = { w if w \u2208 NI , oR,A if w is of the form w = fR,A(w\u2032).\nLet I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Mapping \u03b4 establishes a tight relationship between I and J as illustrated in the following example. Example 2. Let A = {Course(ai)}, let T be as in Example 1, and letK = \u3008T ,A\u3009. Figure 1 shows a graphical representation of the minimal Herbrand models I and J of \u039e(K) and D(K), respectively. The grey dotted lines show how \u03b4 relates the terms in I to the terms in J. For the sake of clarity, Figure 1 does not show the reflexivity of \u2248. \u2666\nMapping \u03b4 is a homomorphism from I to J. Lemma 3. Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Mapping \u03b4 satisfies the following three properties for all terms w\u2032 and w, each B \u2208 NC \u222a {>,\u22a5}, and each R \u2208 NR. 1. B(w) \u2208 I implies B(\u03b4(w)) \u2208 J."}, {"heading": "2. R(w\u2032, w) \u2208 I implies R(\u03b4(w\u2032), \u03b4(w)) \u2208 J.", "text": ""}, {"heading": "3. w\u2032 \u2248 w \u2208 I implies \u03b4(w\u2032) \u2248 \u03b4(w) \u2208 J.", "text": "For a similar result in the other direction, we need a couple of definitions. Let H be an arbitrary Herbrand model. Then,\ndom(H) is the set containing each term w that occurs in H in at least one fact with a predicate in NC \u222a {>,\u22a5} \u222aNR; note that, by this definition, we havew 6\u2208 dom(H) whenever w occurs in H only in assertions involving the \u2248 predicate. Furthermore, auxH is the set of all terms w \u2208 dom(H) such that, for each term w\u2032 with w \u2248 w\u2032 \u2208 H , we have w\u2032 6\u2208 NI . We say that the terms in auxH are \u2018true\u2019 auxiliary terms\u2014 that is, they are not equal to an individual in NI . In Figure 1, bold terms are \u2018true\u2019 auxiliary terms in I and J. Lemma 4. Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Mapping \u03b4 satisfies the following five properties for all terms w1 and w2 in dom(I), each B \u2208 NC \u222a {>,\u22a5}, and each R \u2208 NR. 1. B(\u03b4(w1)) \u2208 J implies that B(w1) \u2208 I. 2. R(\u03b4(w1), \u03b4(w2)) \u2208 J and \u03b4(w2) 6\u2208 auxJ imply that R(w1, w2) \u2208 I. 3. R(\u03b4(w1), \u03b4(w2)) \u2208 J and \u03b4(w2) \u2208 auxJ imply that \u03b4(w2) is of the form oP,A, thatR(w1, fP,A(w1)) \u2208 I, and that a term w\u20321 exists such that R(w \u2032 1, w2) \u2208 I. 4. \u03b4(w1) \u2248 \u03b4(w2) \u2208 J and \u03b4(w2) 6\u2208 auxJ imply that w1 \u2248 w2 \u2208 I. 5. For each term u occurring in J, term w \u2208 dom(I) exists such that \u03b4(w) = u. Lemmas 3 and 4 allow us to decide the satisfiability of K by answering a simple query over D(K), as shown in Proposition 5. The complexity claim is due to the fact that each clause in D(K) contains a bounded number of variables (Dantsin et al. 2001). Proposition 5. For K an arbitrary ELHOr\u22a5 knowledge base, \u039e(K) |= \u2203y.\u22a5(y) if and only if D(K) |= \u2203y.\u22a5(y). Furthermore, the satisfiability of K can be checked in time polynomial in the size of K.\nAnswering Conjunctive Queries In this section, we fix a satisfiable ELHOr\u22a5 knowledge base K = \u3008T ,A\u3009 and a conjunctive query q = \u2203~y.\u03c8(~x, ~y). Furthermore, we fix I and J to be the minimal Herbrand models of \u039e(K) and D(K), respectively.\nWhile D(K) can be used to decide the satisfiability of K, the following example shows that D(K) cannot be used directly to compute the answers to q. Example 3. Let K be as in Example 2, and let q1, q2, and q3 be the following conjunctive queries:\nq1 = taught(x1, x2)\nq2 = \u2203y1, y2, y3. taught(x1, y1) \u2227 taught(x2, y2) \u2227 advisor(y1, y3) \u2227 advisor(y2, y3)\nq3 = \u2203y. advisor(y, y)"}, {"heading": "Furthermore, let \u03c4i be the following substitutions:", "text": "\u03c41 = {x1 7\u2192 kr , x2 7\u2192 oT,P } \u03c42 = {x1 7\u2192 kr , x2 7\u2192 ai , y1 7\u2192 oT,P , y2 7\u2192 oT,P , y3 7\u2192 oA,P } \u03c43 = {y 7\u2192 oA,P }\nFinally, let each \u03c0i be the projection of \u03c4i to the answer variables of qi. Using Figure 1, one can readily check that D(K) |= \u03c4i(qi), but \u039e(K) 6|= \u03c0i(qi), for each 1 \u2264 i \u2264 3. \u2666\nThis can be explained by observing that J is a homomorphic image of I. Now homomorphisms preserve CQ answers (i.e., \u039e(K) |= \u03c0(q) implies D(K) |= \u03c0(q)), but they can also introduce unsound answers (i.e., D(K) |= \u03c0(q) does not necessarily imply \u039e(K) |= \u03c0(q)). This gives rise to the following notion of spurious answers. Definition 6. A substitution \u03c4 with dom(\u03c4) = ~x \u222a ~y and D(K) |= \u03c4(q) is a spurious answer to q if \u03c4 |~x is not a certain answer to q over \u039e(K).\nBased on these observations, we answer q over K in two steps: first, we evaluate q over D(K) and thus obtain an overestimation of the certain answers to q over \u039e(K); second, for each substitution \u03c4 obtained in the first step, we eliminate spurious answers using a special function isSpur. We next formally introduce this function. We first present all relevant definitions, after which we discuss the intuitions. As we shall see, each query in Example 3 illustrates a distinct source of spuriousness that our function needs to deal with. Definition 7. Let \u03c4 be a substitution s.t. dom(\u03c4) = ~x \u222a ~y and D(K) |= \u03c4(q). Relation \u223c \u2286 NT (q)\u00d7NT (q) for q, \u03c4 , and D(K) is the smallest reflexive, symmetric, and transitive relation closed under the fork rule, where auxD(K) is the set containing each individual u from D(K) for which no individual c \u2208 NI exists such that D(K) |= u \u2248 c.\ns\u2032 \u223c t\u2032(fork) R(s, s \u2032) and P (t, t\u2032) occur in q, and\n\u03c4(s\u2032) \u2208 auxD(K)s \u223c t Please note that the definition auxD(K) is actually a reformulation of the definition of auxJ , but based on the consequences of D(K) rather than the facts in J.\nRelation \u223c is reflexive, symmetric, and transitive, so it is an equivalence relation, which allows us to normalise each term t \u2208 NT (q) to a representative of its equivalence class using the mapping \u03b3 defined below. We then construct a graphGaux that checks whether substitution \u03c4 matches \u2018true\u2019 auxiliary individuals in a way that cannot be converted to a match over \u2018true\u2019 auxiliary terms in I. Definition 8. Let \u03c4 and \u223c be as specified in Definition 7. Function \u03b3 : NT (q) 7\u2192 NT (q) maps each term t \u2208 NT (q) to an arbitrary, but fixed representative \u03b3(t) of the equivalence class of \u223c that contains t. Furthermore, the directed graph Gaux = \u3008Vaux, Eaux\u3009 is defined as follows. \u2022 Set Vaux contains a vertex \u03b3(t) \u2208 NT (q) for each term t \u2208 NT (q) such that \u03c4(t) \u2208 auxD(K).\n\u2022 Set Eaux contains an edge \u3008\u03b3(s), \u03b3(t)\u3009 for each atom of the form R(s, t) in q such that {\u03b3(s), \u03b3(t)} \u2286 Vaux.\nQuery q is aux-cyclic w.r.t. \u03c4 and D(K) if Gaux contains a cycle; otherwise, q is aux-acyclic w.r.t. \u03c4 and D(K).\nWe are now ready to define our function that checks whether a substitution \u03c4 is a spurious answer. Definition 9. Let \u03c4 and \u223c be as specified in Definition 7. Then, function isSpur(q,D(K), \u03c4) returns t if and only if at least one of the following conditions hold. (a) Variable x \u2208 ~x exists such that \u03c4(x) 6\u2208 NI . (b) Terms s and t occurring in q exist such that s \u223c t and\nD(K) 6|= \u03c4(s) \u2248 \u03c4(t).\n(c) Query q is aux-cyclic w.r.t. \u03c4 and D(K). We next discuss the intuition behind our definitions. We\nground our discussion in minimal Herbrand models I and J, but our technique does not depend on such models: all conditions are stated as entailments that can be checked using an arbitrary sound and complete technique. Since K is an ELHOr\u22a5 knowledge base, model I is forest-shaped: roughly speaking, the role assertions in I that involve at least one functional term are of the form R(w1, fR,A(w1)) or R(w1, a) for a \u2208 NI ; thus, I can be viewed as a family of directed trees whose roots are the individuals in NI and whose edges point from parents to children or to the individuals in NI . This is illustrated in Figure 1, whose lower part shows the the forest-model of the knowledge base from Example 3. Note that assertions of the form R(w1, a) are introduced via equality reasoning.\nNow let \u03c4 be a substitution such that D(K) |= \u03c4(q), and let \u03c0 = \u03c4 |~x. If \u03c4 is not a spurious answer, it should be possible to convert \u03c4 into a substitution \u03c0\u2217 such that \u03c0 = \u03c0\u2217|~x and \u03c0\u2217(q) \u2286 I. Using the queries from Example 3, we next identify three reasons why this may not be possible.\nFirst, \u03c4 may map an answer variable of q to an auxiliary individual, so by the definition \u03c0 cannot be a certain answer to q; condition (a) of Definition 9 identifies such cases. Query q1 and substitution \u03c41 from Example 3 illustrate such a situation: \u03c42(x2) = oT ,P and oT ,P is a \u2018true\u2019 auxiliary individual, so \u03c01 is not a certain answer to q1.\nThe remaining two problems arise because model J is not forest-shaped, so \u03c4 might map q into J in a way that cannot be converted into a substitution \u03c0\u2217 that maps q into I.\nThe second problem is best explained using substitution \u03c42 and query q2 from Example 3. Query q2 contains a \u2018fork\u2019 advisor(y1, y3) \u2227 advisor(y2, y3). Now \u03c42(y3) = oA,P is a \u2018true\u2019 auxiliary individual, and so it represents \u2018true\u2019 auxiliary terms fA,P (fT,P (ai)), fA,P (fT,P (kr)), and so on. Since I is forest-shaped, a match \u03c0\u22172 for q in I obtained from \u03c42 would need to map y3 to one of these terms; let us assume that \u03c0\u22172(y3) = fA,P (fT,P (ai)). Since I is forestshaped and fA,P (fT,P (ai)) is a \u2018true\u2019 auxiliary term, this means that both y1 and y2 must be mapped to the same term (in both J and I). This is captured by the (fork) rule: in our example, the rule derives y1 \u223c y2, and condition (b) of Definition 9 checks whether \u03c42 maps y1 and y2 in a way that satisfies this constraint. Note that, due to role hierarchies, the rule needs to be applied to atoms R(s, s\u2032) and P (t, t\u2032) with R 6= P . Moreover, such constraints must be propagated further up the query. In our example, due to y1 \u223c y2, atoms taught(x1, y1) \u2227 taught(x2, y2) in q2 also constitute a \u2018fork\u2019, so the rule derives x1 \u223c x2; now this allows condition (b) of Definition 9 to correctly identify \u03c42 as spurious.\nThe third problem is best explained using substitution \u03c43 and query q3 from Example 3. Model J contains a \u2018loop\u2019 on individual oA,P , which allows \u03c43 to map q3 into J. In contrast, model I is forest-shaped, and so the \u2018true\u2019 auxiliary terms that correspond to oA,P do not form loops. Condition (c) of Definition 9 detects such situations using the graph Gaux. The vertices of Gaux correspond to the terms of q that are matched to \u2018true\u2019 auxiliary individuals (mapping \u03b3 simply ensures that equal terms are represented as one vertex),\nand edges of Gaux correspond to the role atoms in q. Hence, if Gaux is cyclic, then the substitution \u03c0\u2217 obtained from \u03c4 would need to match the query q over a cycle of \u2018true\u2019 auxiliary terms, which is impossible since I is forest-shaped.\nUnlike the known combined approaches, our approach does not extend q with conditions that detect spurious answers. Due to nominals, the relevant equality constraints have a recursive nature, and they depend on both the substitution \u03c4 and on the previously derived constraints. Consequently, filtering in our approach is realised as postprocessing; furthermore, to ensure correctness of our filtering condition, auxiliary individuals must depend on both a role and an atomic concept. The following theorem proves the correctness of our approach.\nTheorem 10. LetK = \u3008T ,A\u3009 be a satisfiable ELHOr\u22a5 KB, let q = \u2203~y.\u03c8(~x, ~y) be a CQ, and let \u03c0 : ~x 7\u2192 NI be a candidate answer for q. Then, \u039e(K) |= \u03c0(q) iff a substitution \u03c4 exists such that dom(\u03c4) = ~x \u222a ~y, \u03c4 |~x = \u03c0, D(K) |= \u03c4(q), and isSpur(q,D(K), \u03c4) = f.\nFurthermore, isSpur(q,D(K), \u03c4) can be evaluated in polynomial time, so the main source of complexity in our approach is in deciding whether D(K) |= \u03c4(q) holds. This gives rise to the following result.\nTheorem 11. Deciding whetherK |= \u03c0(q) holds can be implemented in nondeterministic polynomial time w.r.t. the size of K and q, and in polynomial time w.r.t. the size of A.\nEvaluation To gain insight into the practical applicability of our approach, we implemented our technique in a prototypical system. The system uses HermiT, a widely used ontology reasoner, as a datalog engine in order to materialise the consequences of D(K) and evaluate q. The system has been implemented in Java, and we ran our experiments on a MacBook Pro with 4GB of RAM and an Intel Core 2 Duo 2.4 Ghz processor. We used two ontologies in our evaluation, details of which are given below. The ontologies, queries, and the prototype system are all available online at http://www.cs.ox.ac.uk/isg/tools/KARMA/.\nThe LSTW benchmark (Lutz et al. 2012) consists of an OWL 2 QL version of the LUBM ontology (Guo, Pan, and Heflin 2005), queries ql1, . . . , q l 11, and a data generator. The LSTW ontology extends the standard LUBM ontology with several axioms of type 6 (see Table 1). To obtain an ELHOr\u22a5 ontology, we removed inverse roles and datatypes, added 11 axioms using 9 freshly introduced nominals, and added one\naxiom of type 4 (see Table 1). These additional axioms resemble the ones in Example 1, and they were designed to test equality reasoning. The resulting signature consists of 132 concepts, 32 roles, and 9 nominals, and the ontology contains 180 axioms. From the 11 LSTW queries, we did not consider queries ql4, q l 6, q l 7, and q l 11 because their result sets were empty: ql4 relies on existential quantification over inverse roles, and the other three are empty already w.r.t. the original LSTW ontology. Query ql2 is similar to query q2 from Example 3, and it was designed to produce only spurious answers and thus stress the system. We generated data sets with 5, 10 and 20 universities. For each data set, we denote with L-i the knowledge base consisting of our ELHOr\u22a5 ontology and the ABox for i universities (see Table 2).\nSEMINTEC is an ontology about financial services developed within the SEMINTEC project at the University of Poznan. To obtain an ELHOr\u22a5 ontology, we removed inverse roles, role functionality axioms, and universal restrictions, added nine axioms of type 6 (see Table 1), and added six axioms using 4 freshly introduced nominals. The resulting ontology signature consists of 60 concepts, 16 roles, and 4 nominals, and the ontology contains 173 axioms. Queries qs1\u2013q s 5 are tree-shaped queries used in the SEMINTEC project, and we developed queries qs6\u2013q s 9 ourselves. Query qs6 resembles query q l 2 from LSTW, and queries q s 8 and qs9 were designed to retrieve a large number of answers containing auxiliary individuals, thus stressing condition (a) of Definition 9. Finally, the SEMINTEC ontology comes with a data set consisting of approximately 65,000 facts concerning 18,000 individuals (see row SEM in Table 2).\nThe practicality of our approach, we believe, is determined mainly by the following two factors. First, the number of facts involving auxiliary individuals introduced during the materialisation phase should not be \u2018too large\u2019. Table 2 shows the materialisation results: the first column shows the number of individuals before and after materialisation and the percentage of \u2018true\u2019 auxiliary individuals, the second column shows the number of unary facts before and after materialisation and the percentage of facts involving a \u2018true\u2019 auxiliary individual, and the third column does the same for binary facts. As one can see, for each input data set, the materialisation step introduces few \u2018true\u2019 auxiliary individuals, and the number of facts at most doubles. The number of unary facts involving a \u2018true\u2019 auxiliary individual does not change with the size of the input data set, whereas the number of such binary facts increases by a constant factor. This is because, in clauses of type 6, atoms A(oR,A) do not contain a variable, whereas atoms R(x, oR,A) do.\nSecond, evaluating q over D(K) should not produce too\nmany spurious answers. Table 3 shows the total number of answers for each query\u2014that is, the number of answers obtained by evaluating the query over D(K); furthermore, the table also shows what percentage of these answers are spurious. Queries ql2, q l 10, q s 6, and q s 8 retrieve a significant percentage of spurious answers. However, only query ql2 has proven to be challenging for our system due to the large number of retrieved answers, with an evaluation time of about 40 minutes over the largest knowledge base (L-20). Surprisingly, ql1 also performed rather poorly despite a low number of spurious answers, with an evaluation time of about 20 minutes for L-20. All other queries were evaluated in at most a few seconds, thus suggesting that queries ql1 and q l 2 are problematical mainly because HermiT does not implement query optimisation algorithms typically used in relational databases.\nConclusion We presented the first combined technique for answering conjunctive queries over DL ontologies that include nominals. A preliminary evaluation suggests the following. First, the number of materialised facts over \u2018true\u2019 anonymous individuals increases by a constant factor with the size of the data. Second, query evaluation results have shown that, while some cases may be challenging, in most cases the percentage of answers that are spurious is manageable. Hence, our technique provides a practical CQ answering algorithm for a large fragment of OWL 2 EL.\nWe anticipate several directions for our future work. First, we would like to investigate the use of top-down query evaluation techniques, such as magic sets (Abiteboul, Hull, and Vianu 1995) or SLG resolution (Chen and Warren 1993). Second, tighter integration of the detection of spurious answers with the query evaluation algorithms should make it possible to eagerly detect spurious answers (i.e., before the query is fully evaluated). Lutz et al. (2012) already implemented a filtering condition as a user-defined function in a database, but it is unclear to what extent such an implementation can be used to optimise query evaluation. Finally, we would like to extend our approach to all of OWL 2 EL.\nAcknowledgements This work was supported by the Royal Society; AlcatelLucent; the EU FP7 project OPTIQUE; and the EPSRC projects ExODA, MASI3, and QueRe.\nReferences Abiteboul, S.; Hull, R.; and Vianu, V. 1995. Foundations of Databases. Addison-Wesley. Artale, A.; Calvanese, D.; Kontchakov, R.; and Zakharyaschev, M. 2009. The DL-Lite Family and Relations."}, {"heading": "Journal of Artificial Intelligence Research 36:1\u201369.", "text": "Baader, F.; Calvanese, D.; McGuinness, D.; Nardi, D.; and Patel-Schneider, P. F., eds. 2007. The Description Logic Handbook: Theory, Implementation, and Applications. Cambridge University Press. ISBN 9780511717383. Baader, F.; Brandt, S.; and Lutz, C. 2005. Pushing the EL Envelope. In Kaelbling, L. P., and Saffiotti, A., eds., Proceedings of the 19th International Joint Conference on Artificial Intelligence (IJCAI 2005), 364\u2013369. Edinburgh, UK: Morgan Kaufmann Publishers. Calvanese, D.; De Giacomo, G.; Lembo, D.; Lenzerini, M.; and Rosati, R. 2007. Tractable Reasoning and Efficient Query Answering in Description Logics: The DL-Lite Family. Journal of Automated Reasoning 9(3):385\u2013429. Chen, W., and Warren, D. S. 1993. Query evaluation under the well-founded semantics. In Proceedings of the 12th"}, {"heading": "ACM SIGACT-SIGMOD-SIGART symposium on Principles", "text": "of database systems, PODS \u201993, 168\u2013179. New York, NY,"}, {"heading": "USA: ACM.", "text": "Cormen, T. H.; Leiserson, C. E.; Rivest, R. L.; and Stein, C. 2009. Introduction to Algorithms (3. ed.). MIT Press. Cuenca Grau, B.; Horrocks, I.; Motik, B.; Parsia, B.; PatelSchneider, P.; and Sattler, U. 2008. OWL 2: The next step for OWL. Journal of Web Semantics 6(4):309\u2013322. Dantsin, E.; Eiter, T.; Gottlob, G.; and Voronkov, A. 2001. Complexity and expressive power of logic programming. ACM Computing Surveys 33(3):374\u2013425. Eiter, T.; Ortiz, M.; Simkus, M.; Tran, T.-K.; and Xiao, G. 2012. Query Rewriting for Horn-SHIQ Plus Rules. In Proceedings of the 26th AAAI Conference on Artificial Intelligence, (AAAI 2012). AAAI Press. Fitting, M. 1996. First-order logic and automated theorem proving (2nd ed.). Secaucus, NJ, USA: Springer-Verlag New York, Inc. Glimm, B.; Horrocks, I.; Lutz, C.; and Sattler, U. 2008. Conjunctive Query Answering for the Description Logic SHIQ. Journal of Artificial Intelligence Research 31:151\u2013 198. Guo, Y.; Pan, Z.; and Heflin, J. 2005. LUBM: A benchmark for OWL knowledge base systems. Journal of Web Semantics 3(2\u20133):158\u2013182. Kontchakov, R.; Lutz, C.; Toman, D.; Wolter, F.; and Zakharyaschev, M. 2011. The Combined Approach to Ontology-Based Data Access. In Walsh, T., ed., Proceedings of the 22nd International Joint Conference on Artificial Intelligence (IJCAI 2011). AAAI Press. Kro\u0308tzsch, M.; Rudolph, S.; and Hitzler, P. 2007. Conjunctive queries for a tractable fragment of OWL 1.1. In Aberer, K.; Choi, K.-S.; Noy, N.; Allemang, D.; Lee, K.-I.; Nixon, L.; Golbeck, J.; Mika, P.; Maynard, D.; Mizoguchi, R.;\nSchreiber, G.; and Cudre\u0301-Mauroux, P., eds., Proceedings of the 6th International Semantic Web Conference (ISWC\u201907), volume 4825 of LNCS, 310\u2013323. Springer. Kro\u0308tzsch, M.; Rudolph, S.; and Hitzler, P. 2008. ELP: Tractable rules for OWL 2. In Sheth, A.; Staab, S.; Dean, M.; Paolucci, M.; Maynard, D.; Finin, T.; and Thirunarayan, K., eds., Proceedings of the 7th International Semantic Web Conference (ISWC\u201908), volume 5318 of LNCS, 649\u2013664. Springer. Lutz, C.; Seylan, I.; Toman, D.; and Wolter, F. 2012. The Combined Approach to OBDA: Taming Role Hierarchies using Filters. In Fokoue, A.; Liebig, T.; Goodman, E.; Weaver, J.; Urbani, J.; and Mizell, D., eds., Proceedings of the Joint Workshop on Scalable and High-Performance Semantic Web Systems (SSWS+HPCSW 2012), volume 943 of CEUR Workshop Proceedings, 16\u201331. CEUR-WS.org. Lutz, C.; Toman, D.; and Wolter, F. 2009. Conjunctive Query Answering in the Description Logic EL Using a Relational Database System. In Boutilier, C., ed., Proceedings of the 21st International Joint Conference on Artificial Intelligence, (IJCAI 2009), 2070\u20132075. AAAI Press. Ortiz, M.; Rudolph, S.; and Simkus, M. 2011. Query Answering in the Horn Fragments of the Description Logics SHOIQ and SROIQ. In Walsh, T., ed., Proceedings of the 22nd International Joint Conference on Artificial Intelligence (IJCAI 2011), 1039\u20131044. Barcelona, Spain: AAAI Press. Pe\u0301rez-Urbina, H.; Motik, B.; and Horrocks, I. 2010. Tractable Query Answering and Rewriting under Description Logic Constraints. Journal of Applied Logic 8(2):186\u2013 209. Rosati, R. 2007. On Conjunctive Query Answering in EL. In Calvanese, D.; Franconi, E.; Haarslev, V.; Lembo, D.; Motik, B.; Turhan, A.-Y.; and Tessaris, S., eds., Proceedings of the 20th International Workshop on Description Logics (DL-2007), CEUR Workshop Proceedings. CEUR-WS.org.\nAdditional Proofs"}, {"heading": "Proof of Lemma 3", "text": "Lemma 3. Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Mapping \u03b4 satisfies the following three properties for all terms w\u2032 and w, each B \u2208 NC \u222a {>,\u22a5}, and each R \u2208 NR. 1. B(w) \u2208 I implies B(\u03b4(w)) \u2208 J."}, {"heading": "2. R(w\u2032, w) \u2208 I implies R(\u03b4(w\u2032), \u03b4(w)) \u2208 J.", "text": ""}, {"heading": "3. w\u2032 \u2248 w \u2208 I implies \u03b4(w\u2032) \u2248 \u03b4(w) \u2208 J.", "text": "Proof. Let I0, I1, . . . be the sequence of sets used to construct I . We show by induction on n that each In satisfies the properties. Base case. Consider I0 and an arbitrary fact H \u2208 I0. Each term occurring in H is contained in NI . Moreover, H is a fact from \u039e(K) and, by definition, it is also a fact from D(K). Now \u03b4 is the identity over NI , and J satisfies H , so properties 1 and 2 hold. Property 3 holds vacuously since I0 does not contain facts with the equality predicate.\nInductive step. Consider an arbitrary n \u2208 N and assume that In satisfies properties 1\u20133; we show that the same holds for In+1. Towards this goal, we consider the different clauses in \u039e(K) \u222a \u039e(K)\u2248 that can derive fresh facts from In. We distinguish the following two cases.\nFirst, consider an arbitrary datalog clause of the form\u03d5\u2192 \u03c8 from \u039e(K) \u222a \u039e(K)\u2248. Let \u03c3 be an arbitrary substitution mapping variables occurring in the clause to the terms in the Herbrand universe of \u039e(K) such that \u03c3(\u03d5) \u2286 In, so the clause derives \u03c3(\u03c8) \u2208 In+1. Let \u03c3\u2032 be the substitution defined such that \u03c3\u2032(x) = \u03b4(\u03c3(x)) for each variable x occurring in the clause. By the inductive hypothesis, we have \u03c3\u2032(\u03d5) \u2286 J. Furthermore, by the definition of D(K), we have that D(K) \u222a D(K)\u2248 contains \u03d5\u2192 \u03c8. Finally, since J satisfies \u03d5\u2192 \u03c8, we have \u03c3\u2032(\u03c8) \u2208 J, as required.\nSecond, consider arbitrary clauses from \u039e(K) of the form A1(x)\u2192 R(x, fR,A(x)) and A1(x)\u2192 A(fR,A(x)), and assume that A1(w) \u2208 In; hence, these clauses derive {R(w, fR,A(w)), A(fR,A(w))} \u2286 In+1. By the inductive hypothesis, we have A1(\u03b4(w)) \u2208 J. Furthermore, by the definition of \u03b4, we have that \u03b4(fR,A(w)) = oR,A. Moreover, by the definition of program D(K), the program contains clauses A1(x)\u2192 R(x, oR,A) and A1(x)\u2192 A(oR,A). Finally, model J satisfies both of these clauses, so we have {R(\u03b4(w), oR,A) A(oR,A)} \u2286 J, as required."}, {"heading": "Proof of Lemma 4", "text": "In order to prove Lemma 4, we use the properties from Lemmas 12 and 13. Lemma 12. For each term w2, each role R \u2208 NR, and each concept A \u2208 NC \u222a {>}, if fR,A(w2) \u2208 dom(I), then {R(w2, fR,A(w2)), A(fR,A(w2))} \u2286 I.\nProof. Let I0, I1, . . . be the sequence used to construct I; we assume w.l.o.g. that each In+1 is obtained from In by applying just one clause type. We show by induction on n that each In satisfies the properties. For the base case, set I0 clearly satisfies the property since it does not contain functional terms. For the inductive step, assume that some In satisfies the property, and consider an arbitrary term w2, role R, and concept A \u2208 NC \u222a {>}. By the construction of \u039e(K), there are only two types of clauses that may introduce new functional terms in dom(In+1). First, such a term may be introduced by clauses of type 6 (see Table 1), but then the term clearly satisfies the required property. Second, a clause of the form x \u2248 y \u2192 fR,A(x) \u2248 fR,A(y) may be applied w1 \u2248 w2 \u2208 In and derive fR,A(w1) \u2248 fR,A(w2) \u2208 In+1. If fR,A(w2) \u2208 dom(In), then set In+1 satisfies the required property by the induction hypothesis. Otherwise, term fR,A(w2) occurs in In+1 only in equality assertions, so fR,A(w2) 6\u2208 dom(In+1), and the property holds vacuously.\nLet J0, J1, . . . be the sequence used to construct the minimal Herbrand model J of D(K). We assume w.l.o.g. that each Jn+1 is obtained from Jn by applying a single clause occurring in D(K), apart from the clause defining the symmetry of \u2248 which is always applied so as to keep the relation \u2248 in Jn symmetric. We next show that each Jn satisfies the following property. Lemma 13. For each n \u2208 N and all terms u1 and u2, if u1 \u2248 u2 \u2208 Jn and u2 \u2208 auxJn , then u1 = u2.\nProof. We prove the claim by the induction on n. For the base case, J0 satisfies the property since auxJ0 is empty. For the inductive step, assume that some Jn satisfies the property; we show that the same holds for Jn+1. We consider the various clauses that may derive an equality in Jn+1. The facts derived by a clause of the form A(x)\u2192 x \u2248 a vacuously satisfy the property since the derived fact involves terms that are not in auxJn+1 . Furthermore, a fact derived in Jn+1 by applying either the reflexivity or the symmetry clause satisfies the property by the inductive hypothesis. We are left to consider the transitivity clause. Let u1, u2, and u3 be arbitrary terms such that {u1 \u2248 u2, u2 \u2248 u3} \u2286 Jn, so the transitivity clause derives u1 \u2248 u3 \u2208 Jn+1. We consider the interesting case in which u3 \u2208 auxJn+1 , so u3 \u2208 auxJn . By the inductive hypothesis, we have u2 = u3; but then, u2 \u2208 auxJn , and so again, by the inductive hypothesis, we have u1 = u2; finally, this implies that u1 = u3.\nLemma 4. Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Mapping \u03b4 satisfies the following five properties for all terms w1 and w2 in dom(I), each B \u2208 NC \u222a {>,\u22a5}, and each R \u2208 NR. 1. B(\u03b4(w1)) \u2208 J implies that B(w1) \u2208 I.\n2. R(\u03b4(w1), \u03b4(w2)) \u2208 J and \u03b4(w2) 6\u2208 auxJ imply that R(w1, w2) \u2208 I.\n3. R(\u03b4(w1), \u03b4(w2)) \u2208 J and \u03b4(w2) \u2208 auxJ imply that \u03b4(w2) is of the form oP,A, that R(w1, fP,A(w1)) \u2208 I, and that a term w\u20321 exists such that R(w\u20321, w2) \u2208 I. 4. \u03b4(w1) \u2248 \u03b4(w2) \u2208 J and \u03b4(w2) 6\u2208 auxJ imply that w1 \u2248 w2 \u2208 I.\n5. For each term u occurring in J, term w \u2208 dom(I) exists such that \u03b4(w) = u.\nProof. Let J0, J1, . . . be the sequence as stated above. We prove the claim by induction on n. Base case. Consider J0. By definition, \u039e(K) \u222a \u039e(K)\u2248 and D(K) \u222a D(K)\u2248 contain the same facts, all of which only refer to the individuals in NI and the predicates in NC \u222aNR \u222a {>, \u22a5}. Since \u03b4 is the identity over NI , auxJ0 is empty and J0 = I0, so properties 1\u20135 are satisfied.\nInductive step. Assume that some Jn satisfies properties 1\u20135; we show that the same holds for Jn+1. To this end, let w1 and w2 be arbitrary terms in dom(I). We next consider the various clauses in D(K) \u222a D(K)\u2248 that may derive fresh assertions in Jn+1.\n\u2022 A(x)\u2192 B(x). Assume that A(\u03b4(w1)) \u2208 Jn, and so the clause derives B(\u03b4(w1)) \u2208 Jn+1. By the inductive hypothesis, we have A(w1) \u2208 I. Finally, since the same clause occurs in \u039e(K), we have B(w1) \u2208 I.\n\u2022 A(x)\u2192 x \u2248 a. Assume thatA(\u03b4(w1)) \u2208 Jn, and so for \u03b4(w2) = w2 = a the clause derives \u03b4(w1) \u2248 \u03b4(w2) in Jn+1. Clearly, we have \u03b4(w2) 6\u2208 auxJn+1 . By the inductive hypothesis, we have A(w1) \u2208 I. Finally, since the same clause occurs in \u039e(K), we have w1 \u2248 w2 \u2208 I.\n\u2022 A1(x) \u2227A2(x)\u2192 A(x). Assume that A1(\u03b4(w1)) \u2208 Jn and A2(\u03b4(w1)) \u2208 Jn, and so the clause derives A(\u03b4(w1)) \u2208 Jn+1. By the inductive hypothesis, we have {A1(w1), A2(w1)} \u2286 I. Since the same clause occurs in \u039e(K), we have A(w1) \u2208 I.\n\u2022 R(x, y) \u2227A1(y)\u2192 A(x). Assume that R(\u03b4(w1), \u03b4(w2)) and A1(\u03b4(w2)) are in contained Jn, and so the clause derives A(\u03b4(w1)) \u2208 Jn+1. We have the following two cases. \u2013 \u03b4(w2) 6\u2208 auxJn . By the inductive hypothesis, we then have {R(w1, w2), A1(w2)} \u2286 I. \u2013 \u03b4(w2) \u2208 auxJn and term \u03b4(w2) is an auxiliary individual of the form oP,A. By the inductive hypothesis, we then have {R(w1, fP,A(w1)), A1(fP,A(w1))} \u2286 I.\nIn either case, since the same clause occurs in \u039e(K), we have A(w1) \u2208 I. \u2022 R(x, y)\u2192 A(y). Assume that R(\u03b4(w1), \u03b4(w2)) \u2208 Jn, so the clause derives A(\u03b4(w2)) \u2208 Jn+1. We have the following two\ncases. \u2013 \u03b4(w2) 6\u2208 auxJn . By the inductive hypothesis, we then have R(w1, w2) \u2208 I. \u2013 \u03b4(w2) \u2208 auxJn . By the inductive hypothesis, then there exists a term w\u20321 such that R(w\u20321, w2) \u2208 I. In either case, since the same clause occurs in \u039e(K), we have A(w2) \u2208 I.\n\u2022 S(x, y)\u2192 R(x, y). Assume that S(\u03b4(w1), \u03b4(w2)) \u2208 Jn, and so the clause derives R(\u03b4(w1), \u03b4(w2)) \u2208 Jn+1. We have the following two cases. \u2013 \u03b4(w2) 6\u2208 auxJn . By the inductive hypothesis, we have that S(w1, w2) \u2208 I. Since the same clause occurs in \u039e(K), we have R(w1, w2) \u2208 I.\n\u2013 \u03b4(w2) \u2208 auxJn and \u03b4(w2) is an auxiliary individual of the form oP,A. By the inductive hypothesis, then there exists a term w\u20321 such that {S(w1, fP,A(w1)), S(w\u20321, w2)} \u2286 I. Since the same clause occurs in \u039e(K), we have that {R(w1, fP,A(w1)), R(w\u20321, w2)} \u2286 I. \u2022 A1(x)\u2192 R(x, oR,A). Assume that A1(\u03b4(w1)) \u2208 Jn, so for \u03b4(w2) = oR,A the clause derives R(\u03b4(w1), \u03b4(w2)) in Jn+1. By the inductive hypothesis, we then have A(w1) \u2208 I. Furthermore, by the definition of D(K), set \u039e(K) contains the clause A1(x)\u2192 R(x, fR,A(x)), so we have R(w1, fR,A(w1)) \u2208 I. We have the following cases. \u2013 \u03b4(w2) 6\u2208 auxJn+1 . Thus, we also have \u03b4(w2) 6\u2208 auxJn , and so there exists some c \u2208 NI such that \u03b4(w2) \u2248 \u03b4(c) \u2208 Jn and \u03b4(c) 6\u2208 auxJn . By the inductive hypothesis, we have w2 \u2248 c \u2208 I. Due to \u03b4(w2) = \u03b4(fR,A(w1)) and the inductive hypothesis, we have c \u2248 fR,A(w1) \u2208 I. Since \u2248 is a congruence relation and {R(w1, fR,A(w1)), c \u2248 fR,A(w1), c \u2248 w2} \u2286 I, we have R(w1, w2) \u2208 I, as required. By the inductive hypothesis, property 5 is also satisfied.\n\u2013 \u03b4(w2) \u2208 auxJn+1 . By the definition of \u03b4, term w2 is of the form fR,A(w\u20322), and, by the induction hypothesis, we have that fR,A(w\u20322) \u2208 dom(I). By Lemma 12, we have that R(w\u20322, fR,A(w\u20322)) \u2208 I. As stated above, R(w1, fR,A(w1)) \u2208 I, so property 3 is satisfied. Moreover, \u03b4(fR,A(w1)) = oR,A, and so property 5 is satisfied as well.\n\u2022 A1(x)\u2192 A(oR,A). Assume that A1(\u03b4(w1)) \u2208 Jn, so for \u03b4(w2) = oR,A the clause derives A(\u03b4(w2)) \u2208 Jn+1. By the definition of \u03b4, term w2 is of the form fR,A(w\u20322). By Lemma 12 and w2 \u2208 dom(I), we have A(w2) \u2208 I.\n\u2022 \u2192 x \u2248 x. Assume that \u03b4(w1) occurs in Jn, so the clause derives \u03b4(w1) \u2248 \u03b4(w2) \u2208 Jn+1 with \u03b4(w1) = \u03b4(w2). We consider the interesting case when \u03b4(w2) 6\u2208 auxJn+1 , and so \u03b4(w2) 6\u2208 auxJn . Then, an individual c \u2208 NI exists such that {\u03b4(w1) \u2248 c, c \u2248 \u03b4(w2)} \u2286 Jn. By the inductive hypothesis, we have that {w1 \u2248 c, c \u2248 w2} \u2286 I. By the transitivity of \u2248, we have w1 \u2248 w2 \u2208 I.\n\u2022 x1 \u2248 x2 \u2192 x2 \u2248 x1. Assume that \u03b4(w1) \u2248 \u03b4(w2) \u2208 Jn, so the clause derives \u03b4(w2) \u2248 \u03b4(w1) \u2208 Jn+1. We consider the interesting case when \u03b4(w1) 6\u2208 auxJn+1 ; clearly, we have \u03b4(w1) 6\u2208 auxJn as well. Since predicate \u2248 is symmetric in Jn, we have \u03b4(w2) \u2248 \u03b4(w1) \u2208 Jn. By the inductive hypothesis, we have w2 \u2248 w1 \u2208 I.\n\u2022 x1 \u2248 x3 \u2227 x3 \u2248 x2 \u2192 x1 \u2248 x2. Assume that set Jn contains \u03b4(w1) \u2248 \u03b4(w3) and \u03b4(w3) \u2248 \u03b4(w2), so the clause derives \u03b4(w1) \u2248 \u03b4(w2) \u2208 Jn+1. The only interesting case is when \u03b4(w2) 6\u2208 auxJn+1 ; clearly, then \u03b4(w2) 6\u2208 auxJn . By Lemma 13, then \u03b4(w3) 6\u2208 auxJn . Finally, by the inductive hypothesis, then {w1 \u2248 w3, w3 \u2248 w2} \u2286 I, which implies w1 \u2248 w2 \u2208 I. \u2022 A(x) \u2227 x \u2248 y \u2192 A(y). Assume that facts A(\u03b4(w1)) and \u03b4(w1) \u2248 \u03b4(w2) are contained in Jn, so the clause derives A(\u03b4(w2)) \u2208 Jn+1. By the inductive hypothesis, we have A(w1) \u2208 I. We consider the following two cases. \u2013 \u03b4(w2) 6\u2208 auxJn . By the inductive hypothesis, we have w1 \u2248 w2 \u2208 I, and so A(w2) \u2208 I. \u2013 \u03b4(w2) \u2208 auxJn . By Lemma 13, then \u03b4(w1) = \u03b4(w2), so A(\u03b4(w2)) \u2208 Jn. Finally, by the inductive hypothesis, we then\nhave A(w2) \u2208 I. \u2022 R(x, y) \u2227 x \u2248 z \u2192 R(z, y). Assume that set Jn contains R(\u03b4(w1), \u03b4(w2)) and \u03b4(w1) \u2248 \u03b4(w3), so the clause derives R(\u03b4(w3), \u03b4(w2)) \u2208 Jn+1. We consider the following two cases. \u2013 \u03b4(w2) 6\u2208 auxJn . By the inductive hypothesis, we have R(w1, w2) \u2208 I. We distinguish two additional cases. First, assume\nthat \u03b4(w3) \u2208 auxJn . By Lemma 13, we have \u03b4(w1) = \u03b4(w3), and so R(\u03b4(w3), \u03b4(w2)) \u2208 Jn. By the inductive hypothesis, then R(w3, w2) \u2208 I. Second, assume that \u03b4(w3) 6\u2208 auxJn . By the inductive hypothesis, we have w1 \u2248 w3 \u2208 I, and so we have R(w3, w2) \u2208 I as well. \u2013 \u03b4(w2) \u2208 auxJn and \u03b4(w2) = oP,A. By the inductive hypothesis, some w\u20321 exists s.t. {R(w1, fP,A(w1)), R(w\u20321, w2)} \u2286 I. We distinguish two additional cases. First, assume that \u03b4(w3) \u2208 auxJn . By Lemma 13, we have \u03b4(w1) = \u03b4(w3), which further implies R(\u03b4(w3), \u03b4(w2)) \u2208 Jn. By the inductive hypothesis, then we have {R(w3, fP,A(w3)), R(w\u20321, w2)} \u2286 I. Second, assume that \u03b4(w3) 6\u2208 auxJn . By the inductive hypothesis, we have w1 \u2248 w3 \u2208 I. By the functional reflexivity clauses, then fR,B(w1) \u2248 fR,B(w3) \u2208 I, which again implies {R(w3, fR,B(w3)), R(w\u20321, w2)} \u2286 I. \u2022 R(x, y) \u2227 y \u2248 z \u2192 R(x, z). Assume that set Jn contains R(\u03b4(w1), \u03b4(w2)) and \u03b4(w2) \u2248 \u03b4(w3), so the clause derives R(\u03b4(w1), \u03b4(w3)) \u2208 Jn+1. We consider the following two cases. \u2013 \u03b4(w2) 6\u2208 auxJn . By Lemma 13, then \u03b4(w3) 6\u2208 auxJn , and so \u03b4(w3) 6\u2208 auxJn+1 as well. By the inductive hypotheses, then R(w1, w2) and w2 \u2248 w3 are in I, so R(w1, w3) \u2208 I as well.\n\u2013 \u03b4(w2) \u2208 auxJn and \u03b4(w2) is of the form oP,A. By Lemma 13, then \u03b4(w3) = \u03b4(w2), which implies R(\u03b4(w1), \u03b4(w3)) \u2208 Jn. Finally, by the inductive hypothesis, then there exists a term w\u20321 such that {R(w1, fR,B(w1)), R(w\u20321, w3)} \u2286 I."}, {"heading": "Proof of Proposition 5", "text": "Proposition 5. For K an arbitrary ELHOr\u22a5 knowledge base, \u039e(K) |= \u2203y.\u22a5(y) if and only if D(K) |= \u2203y.\u22a5(y). Furthermore, the satisfiability of K can be checked in time polynomial in the size of K.\nProof. From Lemmas 3 and 4, we have \u22a5(w) \u2208 I if and only if \u22a5(\u03b4(w)) \u2208 J. Thus, K is unsatisfiable if and only if individual u exists such that D(K) |= \u22a5(u). Furthermore, to check the latter, we can compute J and check whether an individual u exists such that \u22a5(u) 6\u2208 J. Since the number of variables occurring in each datalog clause is bounded by a constant, the computation of J can be implemented in polynomial time in the size of K (Dantsin et al. 2001)."}, {"heading": "Proof of Theorem 10", "text": "We first show that the minimal Herbrand model I of \u039e(K) resembles a forest structure. Let I0, I1, . . . be the sets used to generate I; for simplicity, in the rest of this section we assume w.l.o.g. that the clauses are applied in a way so that relation \u2248 is symmetric in each In. Furthermore, for each term w, we define the size of w as follows.\n|w| = {\n0 if w \u2208 NI , 1 + |w\u2032| if w is of the form fT,A(w\u2032).\nFinally, we define the depth of w in I as follows.\nd(w, I) = { 0 if w 6\u2208 auxI , 1 + d(w\u2032, I) if w \u2208 auxI and w = fT,A(w\u2032).\nLemma 14. Interpretation I satisfies the following three properties for all terms w1, w\u20321, w2, and w\u20322, all roles R, S, and T , and each concept A \u2208 NC \u222a {>}.\nP1. R(w\u20321, fT,A(w1)) \u2208 I, S(w\u20322, fT,A(w2)) \u2208 I, fT,A(w1) \u2248 fT,A(w2) \u2208 I, and fT,A(w2) \u2208 auxI imply w\u20321 \u2248 w\u20322 \u2208 I.\nP2. w1 \u2248 w2 \u2208 I implies d(w1, I) = d(w2, I). P3. R(w\u20321, fT,A(w1)) \u2208 I and fT,A(w1) \u2208 auxI imply that d(fT,A(w1), I) = 1 + d(w\u20321, I).\nProof. To prove properties P1\u2013P3, we first show by induction on n that each In satisfies the following two auxiliary properties for all terms w\u2032, w, w1, and w2, all roles R, T , and T \u2032, and all concepts A and A\u2032 in NC \u222a {>}.\nA1. fT \u2032,A\u2032(w2) \u2208 auxIn and fT,A(w1) \u2248 fT \u2032,A\u2032(w2) \u2208 In imply that T = T \u2032, A = A\u2032, and w1 \u2248 w2 \u2208 I. A2. fT,A(w) \u2208 auxIn and R(w\u2032, fT,A(w)) \u2208 In imply that a term w\u2032\u2032 exists such that I contains T (w\u2032\u2032, fT,A(w\u2032\u2032)), w\u2032 \u2248 w\u2032\u2032,\nand fT,A(w) \u2248 fT,A(w\u2032\u2032).\nBase case. By definition, I0 does not contain functional terms, so properties A1 and A2 are vacuously true. Inductive step. Assume that In satisfies properties A1 and A2; we show that the same holds for In+1 by considering in turn the various clauses that may introduce fresh assertions into In+1. We consider only the interesting cases in where an equality or a binary assertion is derived, since all other clauses trivially preserve A1 and A2. Let w\u2032, w, w1, w\u20321, and w2 be arbitrary terms, let R, T , and T \u2032 be arbitrary roles, and let A and A\u2032 be arbitrary concepts in NC \u222a {>}.\n\u2022 A1(x)\u2192 x \u2248 a. Assume that A1(w1) \u2208 In, so the clause derives w1 \u2248 a \u2208 In+1. Since a 6\u2208 auxIn+1 , properties A1 and A2 are preserved.\n\u2022 \u2192 x \u2248 x. Assume that fT,A(w1) occurs in In, so the clause derives fT,A(w1) \u2248 fT,A(w1) \u2208 In+1; the interesting case is when fT,A(w1) \u2208 auxIn+1 . Since fT,A(w1) occurs in In, then w1 occurs in the Herbrand universe of \u039e(K). By reflexivity, then w1 \u2248 w1 \u2208 I, as required for A1. Furthermore, this derivation clearly preserves A2.\n\u2022 x \u2248 y \u2192 fT,A(x) \u2248 fT,A(y). Assume w1 \u2248 w2 \u2208 In, so the clause derives fT,A(w1) \u2248 fT,A(w2) \u2208 In+1; the interesting case is when fT,A(w2) \u2208 auxIn+1 . By assumption, w1 \u2248 w2 \u2208 In, and so w1 \u2248 w2 \u2208 I, as required for property A1. Furthermore, this derivation clearly preserves A2.\n\u2022 x1 \u2248 x2 \u2192 x2 \u2248 x1. Assume that fT \u2032,A\u2032(w2) \u2248 fT,A(w1) \u2208 In, so the clause derives fT,A(w1) \u2248 fT \u2032,A\u2032(w2) \u2208 In+1; the interesting case is when fT \u2032,A\u2032(w2) \u2208 auxIn+1 , which clearly implies fT \u2032,A\u2032(w2) \u2208 auxIn . Since relation \u2248 is symmetric in In, we have fT,A(w1) \u2248 fT \u2032,A\u2032(w2) \u2208 In; but then, by the inductive hypothesis, we have T = T \u2032, A = A\u2032, and w1 \u2248 w2 \u2208 I, as required for property A1. Furthermore, this derivation clearly preserves A2. \u2022 x1 \u2248 x2 \u2227 x2 \u2248 x3 \u2192 x1 \u2248 x3. Assume that In contains fT,A(w1) \u2248 fT \u2032,A\u2032(w\u20321) and fT \u2032,A\u2032(w\u20321) \u2248 fT \u2032\u2032,A\u2032\u2032(w2), so the clause derives fT,A(w1) \u2248 fT \u2032\u2032,A\u2032\u2032(w2) \u2208 In+1; the interesting case is when fT \u2032\u2032,A\u2032\u2032(w2) \u2208 auxIn+1 , which clearly implies fT \u2032\u2032,A\u2032\u2032(w2) \u2208 auxIn . Clearly, we then also have fT \u2032,A\u2032(w\u20321) \u2208 auxIn . By the inductive hypothesis, we have T = T \u2032 = T \u2032\u2032, A = A\u2032 = A\u2032\u2032, and {w1 \u2248 w\u20321, w\u20321 \u2248 w2} \u2286 I. Thus, we have w1 \u2248 w2 \u2208 I, as required for property A1. Furthermore, this derivation clearly preserves A2.\n\u2022 A1(x)\u2192 T (x, fT,A(x)). Assume that A1(w\u2032) \u2208 In, so the clause derives T (w\u2032, fT,A(w\u2032)) \u2208 In+1; the interesting case is when fT,A(w\u2032) \u2208 auxIn+1 and w\u2032 = w. Then, for w\u2032\u2032 = w = w\u2032, we have\n{T (w\u2032\u2032, fT,A(w\u2032\u2032)), w\u2032\u2032 \u2248 w\u2032\u2032, fT,A(w\u2032\u2032) \u2248 fT,A(w\u2032\u2032)} \u2286 I,\nas required for property A2. Furthermore, this derivation clearly preserves A1. \u2022 P (x, y)\u2192 R(x, y). Assume that P (w\u2032, fT,A(w)) \u2208 In, so the clause derives R(w\u2032, fT,A(w)) \u2208 In+1; the interesting case\nis when fT,A(w) \u2208 auxIn+1 , which implies fT,A(w) \u2208 auxIn . By the inductive hypothesis, then a term w\u2032\u2032 exists such that {T (w\u2032\u2032, fT,A(w\u2032\u2032)), w\u2032 \u2248 w\u2032\u2032, fT,A(w) \u2248 fT,A(w\u2032\u2032)} \u2286 I, as required for property A2. Furthermore, this derivation clearly preserves A1.\n\u2022 R(x, y) \u2227 x \u2248 z \u2192 R(z, y). Assume that {R(w\u20321, fT,A(w)), w\u20321 \u2248 w\u2032} \u2286 In, so the clause derivesR(w\u2032, fT,A(w)) \u2208 In+1; the interesting case is when fT,A(w) \u2208 auxIn+1 , which implies fT,A(w) \u2208 auxIn . By the inductive hypothesis, a term w\u2032\u2032 exists such that {T (w\u2032\u2032, fT,A(w\u2032\u2032)), w\u20321 \u2248 w\u2032\u2032, fT,A(w) \u2248 fT,A(w\u2032\u2032)} \u2286 I. By the transitivity of \u2248, we have w\u2032 \u2248 w\u2032\u2032 \u2208 I, as required for property A2. Furthermore, this derivation clearly preserves A1.\n\u2022 R(x, y) \u2227 y \u2248 z \u2192 R(x, z). Assume that {R(w\u2032, fT,A(w1)), fT,A(w1) \u2248 fT,A(w)} \u2286 In, and so the clause derives the fact R(w\u2032, fT,A(w)) \u2208 In+1; the interesting case is when fT,A(w) \u2208 auxIn+1 , which implies fT,A(w) \u2208 auxIn . Then, clearly fT,A(w1) \u2208 auxIn . By the inductive hypothesis, a term w\u2032\u2032 exists such that\n{T (w\u2032\u2032, fT,A(w\u2032\u2032)), w\u2032 \u2248 w\u2032\u2032, fT,A(w1) \u2248 fT,A(w\u2032\u2032)} \u2286 I.\nBy the transitivity of \u2248, then fT,A(w) \u2248 fT,A(w\u2032\u2032) \u2208 I, as required for property A2. Furthermore, this derivation clearly preserves A1.\nWe are now ready to show properties P1\u2013P3.\nPROPERTY P1. Let w\u20321, w1, w \u2032 2, w2 be arbitrary terms, let R, S, and T be arbitrary roles, and let A be an arbitrary concept in NC \u222a {>}. Assume that {R(w\u20321, fT,A(w1)), S(w\u20322, fT,A(w2)), fT,A(w1) \u2248 fT,A(w2)} \u2286 I and fT,A(w2) \u2208 auxI . By applying property A2 to R(w\u20321, fT,A(w1)) and S(w \u2032 2, fT,A(w2)), we have that two terms w \u2032\u2032 1 and w \u2032\u2032 2 exist such that\n{T (w\u2032\u20321 , fT,A(w\u2032\u20321 )), w\u20321 \u2248 w\u2032\u20321 , fT,A(w1) \u2248 fT,A(w\u2032\u20321 )} \u2286 I, and {T (w\u2032\u20322 , fT,A(w\u2032\u20322 )), w\u20322 \u2248 w\u2032\u20322 , fT,A(w2) \u2248 fT,A(w\u2032\u20322 )} \u2286 I.\nBy the transitivity of \u2248, we have that fT,A(w\u2032\u20321 ) \u2248 fT,A(w\u2032\u20322 ) \u2208 I, and so by Property A1, we conclude that w\u2032\u20321 \u2248 w\u2032\u20322 \u2208 I. Finally, since {w\u20321 \u2248 w\u2032\u20321 , w\u2032\u20321 \u2248 w\u2032\u20322 , w\u2032\u20322 \u2248 w\u20322} \u2286 I, by the transitivity of \u2248, we get w\u20321 \u2248 w\u20322 \u2208 I, as required.\nPROPERTY P2. We show by induction on n \u2208 N that, for all terms w1 and w2 such that |w1| \u2264 |w2| \u2264 n, if w1 \u2248 w2 \u2208 I, then d(w1, I) = d(w2, I).\nBase case. Let w1 and w2 be arbitrary terms such that |w1| = |w2| = 0 and w1 \u2248 w2 \u2208 I. By the definition of |\u00b7|, then {w1, w2} \u2286 NI , so d(w1, I) = d(w2, I) = 0.\nInductive step. Consider an arbitrary n \u2208 N and assume that the required property holds for all terms w\u20321 and w\u20322 such that |w\u20321| \u2264 |w\u20322| \u2264 n; we show that the same holds for arbitrary terms w1 and w2 such that |w1| \u2264 |w2| \u2264 n+ 1. We consider the interesting case when w1 \u2248 w2 \u2208 I, for which we consider two cases. First, if w2 6\u2208 auxI , then d(w1, I) = d(w2, I) = 0. Second, if w2 \u2208 auxI , then by property A1 there exist two terms w\u20321 and w\u20322, a role T , and a concept A \u2208 NC \u222a {>} such that w1 is of the form fT,A(w\u20321), term w2 is of the form fT,A(w \u2032 2), and w \u2032 1 \u2248 w\u20322 \u2208 I. By the inductive hypothesis, then d(w\u20321, I) = d(w \u2032 2, I). Finally, by definition, we have d(w1, I) = d(w2, I) = 1 + d(w \u2032 2, I), as required.\nPROPERTY P3. Let w\u20321 and w1 be arbitrary terms, let R and T be arbitrary roles, let A \u2208 NC \u222a {>} be an arbitrary concept, and assume that R(w\u20321, fT,A(w1)) \u2208 I and fT,A(w1) \u2208 auxI . By property A2, then there exists a term w\u2032\u20321 such that {T (w\u2032\u20321 , fT,A(w\u2032\u20321 )), w\u20321 \u2248 w\u2032\u20321 , fT,A(w1) \u2248 fT,A(w\u2032\u20321 )} \u2286 I. By the definition of d(\u00b7), then d(fT,A(w\u2032\u20321 ), I) = 1 + d(w\u2032\u20321 , I). Furthermore, by property P2, then d(fT,A(w1), I) = d(fT,A(w\u2032\u20321 ), I) and d(w \u2032 1, I) = d(w \u2032\u2032 1 , I). Finally, these observations imply that d(fT,A(w1), I) = 1 + d(w\u20321, I), as required.\nWe now have all the ingredients required to prove Theorem 10. We start by showing completeness.\nLemma 15 (Completeness). LetK = \u3008T ,A\u3009 be a satisfiable ELHOr\u22a5 KB, let q = \u2203~y.\u03c8(~x, ~y) be a CQ, and let \u03c0 : ~x 7\u2192 NI be a candidate answer for q. Then, \u039e(K) |= \u03c0(q) implies that a substitution \u03c4 exists such dom(\u03c4) = ~x \u222a ~y, \u03c4 |~x = \u03c0, D(K) |= \u03c4(q), and isSpur(q,D(K), \u03c4) = f.\nProof. Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively. Since \u039e(K) |= \u03c0(q), a substitution \u03c0\u2217 exists such that dom(\u03c0\u2217) = ~x \u222a ~y, \u03c0\u2217|~x = \u03c0, and \u03c0\u2217(q) \u2286 I. Let \u03b4 be the mapping from I to J defined in the section about the datalog rewriting of K. We define \u03c4 as the substitution such that, for each term t \u2208 NT (q), we have \u03c4(t) := \u03b4(\u03c0\u2217(t)). Finally, let \u223c be the relation for \u03c4 , q, and D(K) as specified in Definition 7. Since \u03b4 is a homomorphism from I to J by Lemma 3, we have J |= \u03c4(q). We next prove isSpur(q, \u03c4,D(K)) = f by showing that all conditions of Definition 9 are satisfied.\n(Condition a) By the definition of \u03c4 , for each x \u2208 ~x, we have \u03c4(x) \u2208 NI . (Condition b) We prove that, for each s \u223c t, we have \u03c4(s) \u2248 \u03c4(t) \u2208 J and \u03c0\u2217(s) \u2248 \u03c0\u2217(t) \u2208 I. We proceed by induction on the number of steps required to derive s \u223c t. For the base case, the empty relation \u223c clearly satisfies the two properties. For the inductive step, consider an arbitrary relation \u223c obtained in n steps that satisfies these constraints; we show that the same holds for all constraints derivable from \u223c. Since relation \u2248 in both J and I is reflexive, symmetric, and transitive, the derivation of s \u223c t due to reflexivity, symmetry, or transitivity clearly preserves the required properties; thus, we focus on the (fork) rule. Let s\u2032, s, t\u2032, and t be arbitrary terms in NT (q), and let R and P be arbitrary roles such that s\u2032 \u223c t\u2032 is obtained in n steps, atoms R(s, s\u2032) and P (t, t\u2032) occur in q, and \u03c4(s\u2032) \u2208 auxD(K). By the inductive hypothesis, we have \u03c4(s\u2032) \u2248 \u03c4(t\u2032) \u2208 J and \u03c0\u2217(s\u2032) \u2248 \u03c0\u2217(t\u2032) \u2208 I. Since J is the minimal Herbrand model of D(K), we have \u03c4(t\u2032) \u2208 auxJ , so no individual c \u2208 NI exists such that \u03c4(t\u2032) \u2248 c \u2208 J. By Lemmas 3 and 4, \u03c4(t\u2032) 6\u2208 auxJ if and only if \u03c0\u2217(t\u2032) 6\u2208 auxI ; hence, \u03c0\u2217(t\u2032) \u2208 auxI . Since {R(\u03c0\u2217(s), \u03c0\u2217(s\u2032)), P (\u03c0\u2217(t), \u03c0\u2217(t\u2032)), \u03c0\u2217(s\u2032) \u2248 \u03c0\u2217(t\u2032)} \u2286 I and \u03c0\u2217(t\u2032) \u2208 auxI , by property P1 of Lemma 14 we have \u03c0\u2217(s) \u2248 \u03c0\u2217(t) \u2208 I. Finally, since \u03b4 is a homomorphism (see Lemma 3), by the construction of \u03c4 we have \u03c4(s) \u2248 \u03c4(t) \u2208 J, as required.\n(Condition c) To show that q is aux-acyclic w.r.t. \u03c4 and D(K), we assume the opposite; hence, there exists a sequence of vertices v0, . . . , vm \u2208 Vaux such that m > 0, for each 0 \u2264 i < m we have \u3008vi, vi+1\u3009 \u2208 Eaux, and vm = v0. Consider an arbitrary i \u2264 m and the corresponding edge \u3008vi, vi+1\u3009 \u2208 Eaux. By the definition of Eaux, an atom Ri(si, si+1) exists in q such that \u03b3(si) = vi and \u03b3(si+1) = vi+1; hence, we have si \u223c vi and si+1 \u223c vi+1. Since \u03c4 satisfies all the constraints in \u223c, by the definition of Gaux we have that {\u03c4(si), \u03c4(si+1)} \u2286 auxD(K). By Lemmas 3 and 4, then {\u03c0\u2217(si), \u03c0\u2217(si+1)} \u2286 auxI as well. In addition, since Ri(si, si+1) is an atom in q, we have Ri(\u03c0\u2217(si), \u03c0\u2217(si+1)) \u2208 I. Also, since si \u223c vi, si+1 \u223c vi+1, and\nsubstitution \u03c0\u2217 satisfies the constraints in \u223c, we have {\u03c0\u2217(si) \u2248 \u03c0\u2217(vi), \u03c0\u2217(si+1) \u2248 \u03c0\u2217(vi+1)} \u2286 I. Then, by property P2 of Lemma 14, we have\nd(\u03c0\u2217(si), I) = d(\u03c0 \u2217(vi), I) and\nd(\u03c0\u2217(si+1), I) = d(\u03c0 \u2217(vi+1), I).\nFinally, since R(\u03c0\u2217(si), \u03c0\u2217(si+1)) \u2208 I, by property P3 of Lemma 14 we have d(\u03c0\u2217(vi+1), I) = 1 + d(\u03c0\u2217(vi), I). But then, since vm = v0, we also have d(\u03c0\u2217(vm), I) = d(\u03c0\u2217(v0), I), which is a contradiction.\nWe are left to prove the soundness of our approach. Let \u03c4 be an arbitrary substitution for q w.r.t. D(K) such that J |= \u03c4(q) and isSpur(q, \u03c4,D(K)) = f. Furthermore, let Gaux be the graph as specified in Definition 8. We next show that I |= \u03c4 |~x (q). In order to do so, we first define the graph Gq of the query q. Definition 16. Let \u03b3 and Vaux be as in Definition 8. The query graph Gq = \u3008Vq, Eq\u3009 is the directed graph defined as follows. \u2022 Vq is the smallest set containing \u03b3(t) for each t \u2208 NT (q). \u2022 Eq is the smallest set containing \u3008\u03b3(s), \u03b3(t)\u3009 for all terms {s, t} \u2286 NT (q) such that query q contains R(s, t) for some R. Vertex v \u2208 Vq is a root if v 6\u2208 Vaux or, for each vertex v\u2032 \u2208 Vq , we have \u3008v\u2032, v\u3009 6\u2208 Eq .\nClearly, by the definition, Gaux is a subgraph Gq . We prove the soundness claim in three steps. First, we show that the graph Gq is a forest. Second, we define by structural induction on the forest Gq a substitution \u03c0 for q w.r.t. \u039e(K) such that \u03c4 |~x = \u03c0|~x. Third, we prove that I |= \u03c0(q) holds. Lemma 17. If isSpur(q, \u03c4,D(K)) = f, then Gq is a forest.\nProof. Due to isSpur(q, \u03c4,D(K)) = f, we have that Gaux is a direct acyclic graph. Consider an arbitrary vertex v \u2208 Vaux and arbitrary vertices v1, v2 \u2208 Vq such that {\u3008v1, v\u3009, \u3008v2, v\u3009} \u2286 Eq; we next show that v1 = v2. By the definition of Gq , we have that {s, s\u2032, t, t\u2032} \u2286 NT (q), and that roles R and P exist such that all of the following conditions are satisfied: \u2022 atoms R(s, s\u2032) and P (t, t\u2032) are in q; \u2022 \u03b3(s\u2032) = v = \u03b3(t\u2032), \u03b3(s) = v1, and \u03b3(t) = v2; and, \u2022 {\u03c4(s\u2032), \u03c4(t\u2032)} \u2286 auxJ . Due to the (fork) rule, we have s \u223c t. By the definition of \u03b3, we have \u03b3(s) = \u03b3(t), which implies v1 = v2, as required.\nBy structural induction on the forest-shaped graph Gq , we next define the substitution \u03c0 as follows; we will later show that \u039e(K) |= \u03c0(q). \u2022 For the base case, let v be an arbitrary root of Gq . For each term t \u2208 NT (q) such that \u03b3(t) = v, we define \u03c0(t) as an arbitrary\nterm w \u2208 dom(I) such that \u03b4(w) = \u03c4(t). \u2022 For the inductive step, let v be an arbitrary vertex ofGq such that v \u2208 Vaux, term \u03c4(v) is of the form oR,A, the value of \u03c0(v) is\nundefined, v\u2032 is the unique vertex of Gq such that \u3008v\u2032, v\u3009 \u2208 Eq , and \u03c0(v\u2032) has already been defined. For each term t \u2208 NT (q) such that \u03b3(t) = v, we define \u03c0(t) := fR,A(\u03c0(v\u2032)).\nLemma 18. Substitution \u03c0 satisfies the two following properties for each term v \u2208 Vq and all terms s, t \u2208 NT (q) such that \u03b3(s) = v = \u03b3(t):"}, {"heading": "M1. \u03b4(\u03c0(s)) = \u03c4(s), and", "text": ""}, {"heading": "M2. \u03c0(s) \u2248 \u03c0(t) \u2208 I.", "text": "Proof. We prove properties M1 and M2 by the structural induction on the forest Gq . Base case. Let v be an arbitrary root of Gq , and let s, t \u2208 NT (q) be arbitrary terms such that \u03b3(s) = v = \u03b3(t). Property M1 follows from the fact that \u03c0(s) \u2208 {w \u2208 dom(I) | \u03b4(w) = \u03c4(s)}. We next prove property M2. By the definition of \u03b3, we have that s \u223c t. Since isSpur(q, \u03c4,D(K)) = f, we have \u03c4(s) \u2248 \u03c4(t) \u2208 J. We have the following two cases. \u2022 Assume that v \u2208 Vaux. Clearly, {\u03c4(s), \u03c4(t)} \u2286 auxJ . By the construction of J, there exists n \u2208 N such that \u03c4(s) \u2248 \u03c4(t) \u2208 Jn\nand \u03c4(t) \u2208 auxJn . By Lemma 13, we have \u03c4(s) = \u03c4(t). Thus, \u03c0(s) = \u03c0(t) and \u03c0(s) \u2248 \u03c0(t) \u2208 I, as required. \u2022 Assume that v 6\u2208 Vaux. Then, we have \u03c4(t) 6\u2208 auxJ and, by Lemma 4, we have \u03c0(s) \u2248 \u03c0(t) \u2208 I.\nInductive step. Let v \u2208 Vaux be an arbitrary vertex, let s, t \u2208 NT (q) be arbitrary terms such that \u03b3(s) = v = \u03b3(t), and assume that \u03c4(v) is of the form oR,A. By the definition of \u03b3, we have that s \u223c t. Since isSpur(q, \u03c4,D(K)) = f, we have \u03c4(s) \u2248 \u03c4(t) \u2208 J. Since v \u2208 Vaux, we have {\u03c4(v), \u03c4(s), \u03c4(t)} \u2286 auxJ . Then, by the construction of J, some n \u2208 N exists such that {\u03c4(v) \u2248 \u03c4(s), \u03c4(s) \u2248 \u03c4(t)} \u2286 Jn and {\u03c4(s), \u03c4(t)} \u2286 auxJn . By Lemma 13, we have \u03c4(v) = \u03c4(s) and \u03c4(s) = \u03c4(t). Now let v\u2032 be the unique vertex of Gq such that \u3008v\u2032, v\u3009 \u2208 E. By definition, \u03c0(s) = fR,A(\u03c0(v\u2032)) = \u03c0(t). Also, by the definition of \u03b4, we have \u03b4(fR,A(\u03c0(v\u2032))) = oR,A, so property M1 holds. By the reflexivity of \u2248, we have \u03c0(s) \u2248 \u03c0(t) \u2208 I, and so property M2 holds, as required.\nWe finally prove the soundness of our approach. Lemma 19 (Soundness). Let I and J be the minimal Herbrand models of \u039e(K) and D(K), respectively; let q = \u2203~y.\u03c8(~x, ~y) be an arbitrary CQ; and let \u03c4 be an arbitrary substitution such that \u03c4(q) \u2286 J and isSpur(q, \u03c4,D(K)) = f. Then, \u03c4 |~x (q) \u2208 I.\nProof. For q and \u03c4 as specified in the lemma, let \u03c0 be the substitution defined as specified just before Lemma 18, and assume that isSpur(q,D(K), \u03c4) = f. By definition, we have \u03c0|~x = \u03c4 |~x. We next show that \u03c0(q) \u2286 I.\nFirst, letA(t) be an arbitrary unary atom of q, we show thatA(\u03c0(t)) \u2208 I. By assumption, we haveA(\u03c4(t)) \u2208 J. By Lemma 4, for each termw \u2208 dom(I) such that \u03b4(w) = \u03c4(t), we have thatA(w) \u2208 I. By property M1 of Lemma 18, we haveA(\u03c0(t)) \u2208 I.\nSecond, let R(t\u2032, t) be an arbitrary atom of q; we show that R(\u03c0(t\u2032), \u03c0(t)) \u2208 I. By assumption, we have R(\u03c4(t\u2032), \u03c4(t)) \u2208 J. We distinguish the following two cases.\n1. Assume that \u03c4(t) 6\u2208 auxJ . By Lemma 4, for all terms w\u2032, w \u2208 dom(I) such that \u03b4(w\u2032) = \u03c4(t\u2032) and \u03b4(w) = \u03c4(t), we have R(w\u2032, w) \u2208 I. By property M1 of Lemma 18, we have R(\u03c0(t\u2032), \u03c0(t)) \u2208 I. 2. Assume that \u03c4(t) \u2208 auxJ , and assume that \u03c4(t) is of the form oR,A. Furthermore, let v\u2032 be the unique vertex of Gq such that \u3008v\u2032, \u03b3(t)\u3009 \u2208 Eq and \u03b3(t\u2032) = v\u2032. By the definition of \u03c0, we have \u03c0(t) = fR,A(\u03c0(v\u2032)). Since isSpur(q,D(K), \u03c4) = f, we have \u03c4(v\u2032) \u2248 \u03c4(t\u2032) \u2208 J. Since \u2248 is a congruence relation, we have R(\u03c4(v\u2032), \u03c4(t)) \u2208 J. By Lemma 4, for each term w\u2032 \u2208 dom(I) such that \u03b4(w\u2032) = \u03c4(v\u2032), we have R(w\u2032, fR,A(w\u2032)) \u2208 I. By property M1 of Lemma 18, we have R(\u03c0(v\u2032), fR,A(\u03c0(v\u2032))) \u2208 I, and by Property M2 of Lemma 18, we have \u03c0(t\u2032) \u2248 \u03c0(v\u2032) \u2208 I. Therefore, we have R(\u03c0(t\u2032), fR,A(\u03c0(v\u2032))) \u2208 I."}, {"heading": "Proof of Theorem 11", "text": "Theorem 11. Deciding whether K |= \u03c0(q) holds can be implemented in nondeterministic polynomial time w.r.t. the size of K and q, and in polynomial time w.r.t. the size of A.\nProof. First, we argue that we can compute relation\u223c in polynomial time. For each term u, we can decide whether u \u2208 auxD(K) by checking whether, for each term u\u2032, we have that D(K) |= u \u2248 u\u2032 implies u\u2032 6\u2208 NI . Since the number of variables occurring in each clause in D(K) is bounded by a constant, this check can be performed in polynomial time. Thus, we can evaluate in polynomial time the precondition of the (fork) rule. In addition, the size of relation \u223c is bounded by |NT (q)|2, the rules used to compute it are monotonic, and each inference can be applied in polynomial time, so we can compute \u223c in polynomial time.\nSecond, we show that we can decide whether q is aux-cyclic w.r.t. \u03c4 in polynomial time. Since \u223c can be computed in polynomial time and the size of Gaux is polynomially bounded by the number of terms occurring in q, we can compute Gaux in polynomial time. Also, we can check whether Gaux is a acyclic by searching for a topological ordering of its vertexes in linear time (Cormen et al. 2009).\nFor the NP upper bound, according to Theorem 10 checking whether K |= \u03c0(q) amounts to guessing a candidate answer \u03c4 for q in the minimal Herbrand model of D(K) such that \u03c4 |~x = \u03c0 and to checking that isSpur(q,D(K), \u03c4) = f. Since each clause in D(K) has a bounded number of variables, the minimal Herbrand model of D(K) can be computed in polynomial time. By the first two observations, we conclude that the whole process can be carried out in nondeterministic polynomial time in the combined size of D(K) and q.\nFor the PTIME upper bound, consider a fixed ELHOr\u22a5 TBox T and a fixed conjunctive query q. For an arbitrary ABox A, we can enumerate in polynomial time all possible answers to q in the minimal Herbrand model of D(T ) \u222a A. Also, we can filter out those answers that are spurious in polynomial time. Finally, we just check whether \u03c0 occurs in the remaining (certain) answers."}], "references": [{"title": "Foundations of Databases", "author": ["S. Abiteboul", "R. Hull", "V. Vianu"], "venue": "Addison-Wesley.", "citeRegEx": "Abiteboul et al\\.,? 1995", "shortCiteRegEx": "Abiteboul et al\\.", "year": 1995}, {"title": "The DL-Lite Family and Relations", "author": ["A. Artale", "D. Calvanese", "R. Kontchakov", "M. Zakharyaschev"], "venue": "Journal of Artificial Intelligence Research 36:1\u201369.", "citeRegEx": "Artale et al\\.,? 2009", "shortCiteRegEx": "Artale et al\\.", "year": 2009}, {"title": "The Description Logic Handbook: Theory, Implementation, and Applications", "author": ["F. Baader", "D. Calvanese", "D. McGuinness", "D. Nardi", "Patel-Schneider", "P. F", "eds"], "venue": null, "citeRegEx": "Baader et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Baader et al\\.", "year": 2007}, {"title": "Tractable Reasoning and Efficient Query Answering in Description Logics: The DL-Lite Family", "author": ["D. Calvanese", "G. De Giacomo", "D. Lembo", "M. Lenzerini", "R. Rosati"], "venue": "Journal of Automated Reasoning 9(3):385\u2013429.", "citeRegEx": "Calvanese et al\\.,? 2007", "shortCiteRegEx": "Calvanese et al\\.", "year": 2007}, {"title": "Query evaluation under the well-founded semantics", "author": ["W. Chen", "D.S. Warren"], "venue": "Proceedings of the 12th ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems, PODS \u201993, 168\u2013179. New York, NY, USA: ACM.", "citeRegEx": "Chen and Warren,? 1993", "shortCiteRegEx": "Chen and Warren", "year": 1993}, {"title": "Introduction to Algorithms (3", "author": ["T.H. Cormen", "C.E. Leiserson", "R.L. Rivest", "C. Stein"], "venue": "ed.). MIT Press.", "citeRegEx": "Cormen et al\\.,? 2009", "shortCiteRegEx": "Cormen et al\\.", "year": 2009}, {"title": "OWL 2: The next step for OWL", "author": ["B. Cuenca Grau", "I. Horrocks", "B. Motik", "B. Parsia", "P. PatelSchneider", "U. Sattler"], "venue": "Journal of Web Semantics 6(4):309\u2013322.", "citeRegEx": "Grau et al\\.,? 2008", "shortCiteRegEx": "Grau et al\\.", "year": 2008}, {"title": "Complexity and expressive power of logic programming", "author": ["E. Dantsin", "T. Eiter", "G. Gottlob", "A. Voronkov"], "venue": "ACM Computing Surveys 33(3):374\u2013425.", "citeRegEx": "Dantsin et al\\.,? 2001", "shortCiteRegEx": "Dantsin et al\\.", "year": 2001}, {"title": "Query Rewriting for Horn-SHIQ Plus Rules", "author": ["T. Eiter", "M. Ortiz", "M. Simkus", "T.-K. Tran", "G. Xiao"], "venue": "Proceedings of the 26th AAAI Conference on Artificial Intelligence, (AAAI 2012). AAAI Press.", "citeRegEx": "Eiter et al\\.,? 2012", "shortCiteRegEx": "Eiter et al\\.", "year": 2012}, {"title": "First-order logic and automated theorem proving (2nd ed.)", "author": ["M. Fitting"], "venue": null, "citeRegEx": "Fitting,? \\Q1996\\E", "shortCiteRegEx": "Fitting", "year": 1996}, {"title": "Conjunctive Query Answering for the Description Logic SHIQ", "author": ["B. Glimm", "I. Horrocks", "C. Lutz", "U. Sattler"], "venue": "Journal of Artificial Intelligence Research 31:151\u2013 198.", "citeRegEx": "Glimm et al\\.,? 2008", "shortCiteRegEx": "Glimm et al\\.", "year": 2008}, {"title": "LUBM: A benchmark for OWL knowledge base systems", "author": ["Y. Guo", "Z. Pan", "J. Heflin"], "venue": "Journal of Web Semantics 3(2\u20133):158\u2013182.", "citeRegEx": "Guo et al\\.,? 2005", "shortCiteRegEx": "Guo et al\\.", "year": 2005}, {"title": "The Combined Approach to Ontology-Based Data Access", "author": ["R. Kontchakov", "C. Lutz", "D. Toman", "F. Wolter", "M. Zakharyaschev"], "venue": "Walsh, T., ed., Proceedings of the 22nd International Joint Conference on Artificial Intelligence (IJCAI 2011). AAAI Press.", "citeRegEx": "Kontchakov et al\\.,? 2011", "shortCiteRegEx": "Kontchakov et al\\.", "year": 2011}, {"title": "Conjunctive queries for a tractable fragment of OWL", "author": ["M. Kr\u00f6tzsch", "S. Rudolph", "P. Hitzler"], "venue": null, "citeRegEx": "Kr\u00f6tzsch et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Kr\u00f6tzsch et al\\.", "year": 2007}, {"title": "ELP: Tractable rules for OWL", "author": ["M. Springer. Kr\u00f6tzsch", "S. Rudolph", "P. Hitzler"], "venue": "Proceedings of the 6th International Semantic Web Conference (ISWC\u201907),", "citeRegEx": "Kr\u00f6tzsch et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Kr\u00f6tzsch et al\\.", "year": 2008}, {"title": "Conjunctive Query Answering in the Description Logic EL Using a Relational Database System", "author": ["C. CEUR-WS.org. Lutz", "D. Toman", "F. Wolter"], "venue": "CEUR Workshop Proceedings,", "citeRegEx": "Lutz et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lutz et al\\.", "year": 2009}, {"title": "Query Answering in the Horn Fragments of the Description Logics SHOIQ and SROIQ", "author": ["M. Press. Ortiz", "S. Rudolph", "M. Simkus"], "venue": "Proceedings of the 22nd International Joint Conference on Artificial Intel-", "citeRegEx": "Ortiz et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ortiz et al\\.", "year": 2009}, {"title": "Tractable Query Answering and Rewriting under Description Logic Constraints", "author": ["H. Press. P\u00e9rez-Urbina", "B. Motik", "I. Horrocks"], "venue": "Journal of Applied Logic", "citeRegEx": "P\u00e9rez.Urbina et al\\.,? \\Q2011\\E", "shortCiteRegEx": "P\u00e9rez.Urbina et al\\.", "year": 2011}, {"title": "On Conjunctive Query Answering in EL", "author": ["R. Rosati"], "venue": "Proceedings of the 20th International Workshop on Description Logics", "citeRegEx": "209", "shortCiteRegEx": "209", "year": 2007}], "referenceMentions": [{"referenceID": 2, "context": "Description logics (DLs) (Baader et al. 2007) are a family of knowledge representation formalisms that underpin OWL 2 (Cuenca Grau et al.", "startOffset": 25, "endOffset": 45}, {"referenceID": 10, "context": "For expressive DLs, the problem is at least doubly exponential in query size (Glimm et al. 2008).", "startOffset": 77, "endOffset": 96}, {"referenceID": 3, "context": "The problem, however, becomes easier for the EL (Baader, Brandt, and Lutz 2005) and the DL-Lite (Calvanese et al. 2007) families of DLs, which provide the foundation for the OWL 2 EL and the OWL 2 QL profiles of OWL 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 3, "context": "Rewriting-based approaches were developed for members of the DL-Lite family (Calvanese et al. 2007; Artale et al. 2009), and the DLs ELHIO\u22a5 (P\u00e9rez-Urbina, Motik, and Horrocks 2010) and Horn-SHIQ (Eiter et al.", "startOffset": 76, "endOffset": 119}, {"referenceID": 1, "context": "Rewriting-based approaches were developed for members of the DL-Lite family (Calvanese et al. 2007; Artale et al. 2009), and the DLs ELHIO\u22a5 (P\u00e9rez-Urbina, Motik, and Horrocks 2010) and Horn-SHIQ (Eiter et al.", "startOffset": 76, "endOffset": 119}, {"referenceID": 8, "context": "2009), and the DLs ELHIO\u22a5 (P\u00e9rez-Urbina, Motik, and Horrocks 2010) and Horn-SHIQ (Eiter et al. 2012), to name just a few.", "startOffset": 81, "endOffset": 100}, {"referenceID": 1, "context": "2007; Artale et al. 2009), and the DLs ELHIO\u22a5 (P\u00e9rez-Urbina, Motik, and Horrocks 2010) and Horn-SHIQ (Eiter et al. 2012), to name just a few. A common problem, however, is that rewritings can be exponential in the ontology and/or query size. Although this is often not a problem in practice, such approaches are not worst-case optimal. An exception is the algorithm by Rosati (2007) that rewrites an ELH\u22a5 ontology into a datalog program of polynomial size; however, the algorithm also uses a nondeterministic step to transform the CQ into a tree-shaped one, and it is not clear how to implement this step in a goal-directed manner.", "startOffset": 6, "endOffset": 383}, {"referenceID": 12, "context": "Such approaches have been developed for logics in the DL-Lite (Kontchakov et al. 2011) and the EL (Lutz, Toman, and Wolter 2009) families, and they are appealing because they are worst-case optimal and practical: only the second step is intractable (in query size), but it can be solved using well-known database techniques.", "startOffset": 62, "endOffset": 86}, {"referenceID": 9, "context": "We use the standard notions of variables, constants, function symbols, terms, atoms, formulas, and sentences (Fitting 1996).", "startOffset": 109, "endOffset": 123}, {"referenceID": 9, "context": "In first-order logic, \u2248 is usually interpreted as the identity over the interpretation domain; however, \u2248 can also be explicitly axiomatised (Fitting 1996).", "startOffset": 141, "endOffset": 155}, {"referenceID": 2, "context": "Although somewhat nonstandard, our definitions of DLs are equivalent to the ones based on the standard denotational semantics (Baader et al. 2007).", "startOffset": 126, "endOffset": 146}, {"referenceID": 12, "context": "Please note that oR,A depends on both R and A, whereas in the known approaches such individuals depend only onA (Lutz, Toman, and Wolter 2009) or R (Kontchakov et al. 2011).", "startOffset": 148, "endOffset": 172}, {"referenceID": 7, "context": "The complexity claim is due to the fact that each clause in D(K) contains a bounded number of variables (Dantsin et al. 2001).", "startOffset": 104, "endOffset": 125}, {"referenceID": 4, "context": "First, we would like to investigate the use of top-down query evaluation techniques, such as magic sets (Abiteboul, Hull, and Vianu 1995) or SLG resolution (Chen and Warren 1993).", "startOffset": 156, "endOffset": 178}, {"referenceID": 4, "context": "First, we would like to investigate the use of top-down query evaluation techniques, such as magic sets (Abiteboul, Hull, and Vianu 1995) or SLG resolution (Chen and Warren 1993). Second, tighter integration of the detection of spurious answers with the query evaluation algorithms should make it possible to eagerly detect spurious answers (i.e., before the query is fully evaluated). Lutz et al. (2012) already implemented a filtering condition as a user-defined function in a database, but it is unclear to what extent such an implementation can be used to optimise query evaluation.", "startOffset": 157, "endOffset": 405}], "year": 2013, "abstractText": "So-called combined approaches answer a conjunctive query over a description logic ontology in three steps: first, they materialise certain consequences of the ontology and the data; second, they evaluate the query over the data; and third, they filter the result of the second phase to eliminate unsound answers. Such approaches were developed for various members of the DL-Lite and the EL families of languages, but none of them can handle ontologies containing nominals. In our work, we bridge this gap and present a combined query answering approach for ELHO \u22a5\u2014a logic that contains all features of the OWL 2 EL standard apart from transitive roles and complex role inclusions. This extension is nontrivial because nominals require equality reasoning, which introduces complexity into the first and the third step. Our empirical evaluation suggests that our technique is suitable for practical application, and so it provides a practical basis for conjunctive query answering in a large fragment of OWL 2 EL.", "creator": "TeX"}}}