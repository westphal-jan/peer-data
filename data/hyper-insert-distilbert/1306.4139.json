{"id": "1306.4139", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2013", "title": "Punjabi Language Interface to Database: a brief review", "abstract": "not unlike most user - automated computer interfaces, a natural language interface version allows users visually to communicate fluently with a standard computer nervous system sometimes with almost very little preparation. databases are thereby often mostly hard to use in cooperating with asking the users sometimes because requirements of their rigid interface. a usually good nlidb standard allows a speaking user to enter commands and must ask numerical questions in native language data and would then repeat after phonetic interpreting respond to data the user ask in native language. standing for a large number of bilingual applications considered requiring interaction improvements between humans and the pakistani computer systems, it itself would be convenient to provide the end - product user robot friendly interface. punjabi or language interface introduction to database would enabled proof fruitful modifications to specific native people of punjab, seeing as it therefore provides ease to modify them to use various e - public governance applications topics like punjab hindi sewa, suwidha, online merchant public accountant utility forms, karachi online currency grievance cell, punjab land records management system, legacy matters, e - district, indus agriculture, etc. tehsil punjabi, is currently the favorite mother \u2011 tongue of more than 110 million people now all around we the world. according significantly to commercially available information, punjabi ranks 10th from the top out of 110 a total of 6, 001 900 languages recognized internationally by the bilingual united nations. this paper tentatively covers as a brief topical overview of the indian natural class language interface to database, its different components, note its advantages, certain disadvantages, approaches and interface techniques used. the 2007 paper ends with the work done on providing punjabi persian language complex interface according to database accessibility and future enhancements and that can be done.", "histories": [["v1", "Tue, 18 Jun 2013 11:03:36 GMT  (404kb)", "http://arxiv.org/abs/1306.4139v1", "4 pages"]], "COMMENTS": "4 pages", "reviews": [], "SUBJECTS": "cs.CL cs.HC", "authors": ["preeti verma", "suket arora", "kamaljit batra"], "accepted": false, "id": "1306.4139"}, "pdf": {"name": "1306.4139.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "language interface allows users to communicate fluently with a computer system with very little preparation. Databases are often hard to use in cooperating with the users because of their rigid interface. A good NLIDB allows a user to enter commands and ask questions in native language and then after interpreting respond to the user in native language. For a large number of applications requiring interaction between humans and the computer systems, it would be convenient to provide the end-user friendly interface. Punjabi language interface to database would proof fruitful to native people of Punjab, as it provides ease to them to use various e-governance applications like Punjab Sewa, Suwidha, Online Public Utility Forms, Online Grievance Cell, Land Records Management System, legacy matters, e-District, agriculture, etc. Punjabi is the mother tongue of more than 110 million people all around the world. According to available information, Punjabi ranks 10 th from top out of a total of 6,900 languages recognized internationally by the United Nations. This paper covers a brief overview of the Natural language interface to database, its different components, its advantages, disadvantages, approaches and techniques used. The paper ends with the work done on Punjabi language interface to database and future enhancements that can be done."}, {"heading": "1. INTRODUCTION", "text": "A natural language interface to a database (NLIDB) is a system that translates a sentence in natural language (e.g. Punjabi) into a database query. (Androutsopoulos et al.,1995 [1] ) .NLIDB bridge the gap between the languages used by humans and the computer systems as by using this, a person with no knowledge of database languages can easily and conveniently access the database. NLIDB can be considered as a classical problem in the field of natural language processing. [11] A person with no knowledge of Structured Query Language (SQL) may find himself or herself handicapped while\nextracting data from a Data Base Management System (DBMS) such as MS Access, Oracle and others. Therefore, Companies like Elfsoft(English Language Frontend Software) has developed SQL Tutor for people to interact with the database in simple English instead of learning the syntax of the query language. These products make the extraction from databases much easier. Therefore, the uses of the natural languages save time to learn the rigid syntax of query languages. NLIDB belong to the domain of information extraction as after grasping the input sentence, it extracts the requested information from data stores."}, {"heading": "2. INTELLIGENT DATABASE SYSTEM (IDBS)", "text": "An intelligent database [13] is a full-text database that employs Artificial Intelligence (AI), interacting with users to ensure that returned items (hits) contain the most relevant information possible. Intelligent database (IDB) systems integrate the resources of both RDBMSs and KBSs to offer a natural way to deal with information, making it easy to store, access and apply.[11] \"Intelligent database systems (IDBS) built from the integration of database (DB) technology with techniques developed in the field of artificial intelligence (AI)\"[12]\n2.1 An Ideal IDBS should [11] :\n Use knowledge and inference, making it easier to retrieve, view and make decisions\nwith information\n Make information available to larger numbers of people because more people can now\nutilize the system due to its ease of use.\n Improve the decision making process involved in using information.\n Interrelated information extract from different sources using different media so that\nthe information is more easily utilized by the user.\n Provide high-level intelligent tools that provide new insights into the contents of the\ndatabase by extracting knowledge from data.\nFig. 1 \u2013 IDBS"}, {"heading": "3 TYPES OF INTERFACES", "text": "A user interface is the view of a database interface that is seen by the user.\n Form-based Interfaces\n Text-based Interfaces\n GIS Interface"}, {"heading": "3.1 Form-based Interfaces:", "text": "This interface consists of forms which are\nadapted to the user. User can fill in all of the fields and make new entries to the database. They are easy to use and have the advantage that the user does not need special knowledge about database languages like SQL. Eg: SBB Travel Online website. But some operations might be restricted by the application."}, {"heading": "3.2 Text-based Interfaces:", "text": "Using this interface, the users communicate\nwith the DBMS directly in the query language via an input/output window. Text-based interfaces are very powerful tools and allow a comprehensive interaction with a DBMS. However, the use of those is based on active knowledge of the respective database language. For Eg: SQL.\n3.3 GIS Interface:\nA GIS user interface often integrates features\nof a database interface. The database interaction takes place through the combination of different interfaces:\n Graphical interaction via a selection on the\nmap\n Combination of form-based and text-based\ninteraction (e.g. special Query-Wizards for the easier creation of database queries) [2]"}, {"heading": "4. COMPONENTS OF NLIDB", "text": "The problem of natural language access to a database is divided into two sub-components:\n Linguistic component\n Database component"}, {"heading": "4.1 Linguistic Component:", "text": "This component translates the natural\nlanguage input sentence into a formal query and then after a database search generates a natural language response."}, {"heading": "4.2 Database Component:", "text": "This component performs traditional\nDatabase Management functions. Natural language database systems make use of syntactic knowledge and knowledge about the actual database in order to properly relate natural language input to the structure and contents of that database. Questions entered in natural language translated into a formal query. This query is then processed by the database management system and after processing, the result is passed back to the natural language component where generation routines produce a surface language version of the response."}, {"heading": "5. ADVANTAGES AND DISADVANTAGES OF NLIDB", "text": "This section covers some advantages and disadvantages of NLIDBS, comparing them to different types of interfaces."}, {"heading": "5.1 ADVANTAGES OF NLIDB:  No need to learn Artificial Communication", "text": "language\n Less training required\n Easy to handle negation and quantification\ntype of questions\n Easy to Use for Multiple Database Tables\n Easy and efficient retrieval\n Tolerances to minor grammatical errors\n."}, {"heading": "5.2 DISADVANTAGES OF NLIDB:  Deals with limited set of natural language", "text": " Linguistic vs. conceptual failures\n Users assume intelligence\n Inappropriate Medium\n Tedious configuration"}, {"heading": "6. APPROACHES FOR DEVELOPMENT", "text": "OF NLIDB SYSTEM"}, {"heading": "6.1 Symbolic Approach (Rule Based Approach)", "text": "Knowledge about language is explicitly encoded in rules or other forms of representation. Language is analyzed at various levels to obtain information. On this obtained information certain rules are applied to achieve linguistic functionality. Rules are formed for every level of linguistic analysis. It tries to capture the meaning of the language based on these rules."}, {"heading": "6.2 Empirical Approach (Corpus Based Approach)", "text": "A corpus is collections of machine readable\ntext. Corpora are primarily used as a source of information about language. This approach is based on statistical analysis as well as other data driven analysis, of raw data which is in the form of text corpora. The empirical or corpus based methods automate the acquisition of much of the complex knowledge required for NLP by training on suitably annotated natural language corpora, e.g. tree-banks of parsed sentences. Various statistical techniques like hidden Markov models, probabilistic context free grammars etc are employed by most of the empirical NLP methods."}, {"heading": "6.3 Connectionist Approach (Using Artificial Neural Network):", "text": "Since human language capabilities are based\non neural network in the brain, Artificial Neural Network provides on essential starting point for modeling language processing. Instead of symbols, the approach is based on distributed representations that correspond to statistical regularities in language. However, there has been relatively little recent language research using sub-symbolic learning, although some recent systems have successfully employed decision trees transformation rules and other symbolic methods. SHRUTI system developed by John Carter Wendelken is a neutrally inspired system for event modeling and temporal processing at a connectionist level."}, {"heading": "7. ARCHITECTURE OF NLIDB", "text": "SYSTEM [5]"}, {"heading": "7.1 Pattern Matching Systems", "text": "In pattern matching systems, some rules and\npatters are initially given. These patterns and rules are fixed. The rules states that if an input word or sentence is matched with the given pattern, the action has been taken. The main advantage of the pattern-\nmatching approach is its simplicity: no elaborate parsing and interpretation modules are needed, and the system is easy to implement. Eg: SANVY system. [1]"}, {"heading": "7.2 Syntax-Based Systems", "text": "In syntax-based systems, the user\u2019s question is parsed and the resulting parse tree is directly mapped to an expression in some database query language. Syntax-based systems use a grammar that describes the possible syntactic structures of the user\u2019s questions. The main advantage of using syntax based approaches is that they provide detailed information about the structure of a sentence. Eg: LUNAR system. [1]"}, {"heading": "7.3 Semantic Grammar Systems", "text": "The basic idea of a this system is to simplify\nthe parse tree as much as possible, by removing unnecessary nodes or combining some nodes together. Less ambiguous compared to the syntax based approach. The main drawback of this approach is it requires some prior- knowledge of the elements in the domain, therefore making it difficult to port to other domains. A parse tree in this system has specific structures and unique node labels, which could hardly be useful for other applications. Eg: LADDER system. [6]"}, {"heading": "7.4 Intermediate Representation Languages", "text": "In this approach, the system can be divided into two parts:\n One part starts from a sentence up to the\ngeneration of a logical query.\n Other part starts from a logical query until the\ngeneration of a database query.\nThe intermediate logical query expresses the meaning of the user\u2019s question in terms of high level world concepts, which are independent of the database structure. The logical query is then translated to an expression in the database\u2019s query language, and evaluated against the database.(SQL)\nExample of intermediate representation language architecture is Masque/sql[1]."}, {"heading": "8. EXISTING PUNJABI LANGUAGE INTERFACE TO DATABASE REVIEW:", "text": "In India there is research going on in this topic in many Indian languages like Hindi, Punjabi, Malayalam, Bengali etc. In Punjabi language a system is developed at Thapar University, Patiala. [3] The system used the agriculture domain, having Farmer, Crop and Sale tables. It accepts query in Punjabi language that is translated into SQL query, by mapping the Punjabi language words, with their corresponding English words with the help of database maintained. Then, the query is executed."}, {"heading": "8.1 Architecture", "text": "Architecture of this system is divided into\nthree phases:\n Tokenizing the query\n Mapping and formation of SQL query\n Execution of query."}, {"heading": "8.2 Queries Handled", "text": "This system has been tested for 3 types of\nqueries:\n Queries for selection of all the columns\n Queries for selection of certain columns\n Queries for selection of certain rows from\ncertain columns\nCONCLUSION The existing Punjabi language interface to database system [3] has limited scope. It is domain dependent and uses only few tables and simple selection queries. In future, the existing Punjabi language interface to database system developed by Thapar University, Patiala [3] can be extended to perform the following tasks:\n It can execute Queries that involves joining\nof tables and handle various clauses\n It can be made domain independent\n It can be extended to handle more complex\nqueries\n Development of an interface for administrator\n This existing system accepts queries only in a\nparticular format. So to make the system to\naccept all the queries, we can use Punjabi\nparser"}], "references": [{"title": "Natural Language Interfaces to Databases \u2013 An Introduction, Journal of Natural Language Engineering 1 Part", "author": ["Androutsopoulos", "G.D. Ritchie", "P. Thanisch"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1995}, {"title": "Hindi Punjabi Language Interface to databases\u201d,Journal", "author": ["Himani Jain", "Parteek Bhatia"], "venue": "Global Research in Computer Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1995}, {"title": "Shaziya \u201cA Study of the Various Architectures for Natural Language Interface to DBs\u201d, (IJCSN) Volume 1, Issue", "author": ["B.Sujatha", "Dr.S.Viswanadha Raju", "Humera"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "Natural language Interface for Database: A", "author": ["Mrs. Neelu Nihalani", "Dr. Sanjay Silakari", "Dr. Mahesh Motwani"], "venue": "Brief review\u201d, IJCSI,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2011}, {"title": "A Natural Language Interface to a Database System", "author": ["Arup Panja", "Rami Reddy Nandi Reddy", "Sivaji Bandyopadhyay"], "venue": "Journal of Intelligent Systems,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2007}, {"title": "Design of Intelligent layer for flexible querying in databases", "author": ["Mrs. Neelu Nihalani", "Dr. Sanjay Silakari", "Dr. Mahesh Motwani"], "venue": "/International Journal on Computer Science and Engineering,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "Intelligent databasesobject-oriented, deductive hypermedia technologies", "author": ["Kamran Parsaye", "Mark Chignell", "Setrag Khoshafian", "Harry Wong"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1989}, {"title": "Zarri, \u201cIntelligent database", "author": ["Bertino", "G.P.B. Catania"], "venue": "Addsion Wesley Professional,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": ",1995 [1] ) .", "startOffset": 6, "endOffset": 9}, {"referenceID": 6, "context": "[11] A person with no knowledge of Structured Query Language (SQL) may find himself or herself handicapped while extracting data from a Data Base Management System (DBMS) such as MS Access, Oracle and others.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "1 An Ideal IDBS should [11] :", "startOffset": 23, "endOffset": 27}, {"referenceID": 2, "context": "ARCHITECTURE OF NLIDB SYSTEM [5]", "startOffset": 29, "endOffset": 32}, {"referenceID": 0, "context": "[1]", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "[1]", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[6]", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "Example of intermediate representation language architecture is Masque/sql[1].", "startOffset": 74, "endOffset": 77}], "year": 2013, "abstractText": "Unlike most user-computer interfaces, a natural language interface allows users to communicate fluently with a computer system with very little preparation. Databases are often hard to use in cooperating with the users because of their rigid interface. A good NLIDB allows a user to enter commands and ask questions in native language and then after interpreting respond to the user in native language. For a large number of applications requiring interaction between humans and the computer systems, it would be convenient to provide the end-user friendly interface. Punjabi language interface to database would proof fruitful to native people of Punjab, as it provides ease to them to use various e-governance applications like Punjab Sewa, Suwidha, Online Public Utility Forms, Online Grievance Cell, Land Records Management System, legacy matters, e-District, agriculture, etc. Punjabi is the mother tongue of more than 110 million people all around the world. According to available information, Punjabi ranks 10 th from top out of a total of 6,900 languages recognized internationally by the United Nations. This paper covers a brief overview of the Natural language interface to database, its different components, its advantages, disadvantages, approaches and techniques used. The paper ends with the work done on Punjabi language interface to database and future enhancements that can be done.", "creator": "Microsoft\u00ae Word 2010"}}}