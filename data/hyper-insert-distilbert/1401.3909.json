{"id": "1401.3909", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2014", "title": "Scheduling Bipartite Tournaments to Minimize Total Travel Distance", "abstract": "in many indoor professional sports leagues, teams entering from opposing larger leagues / such conferences compete casually against one another, playing inter - league hockey games. given this is an example use of a bipartite skiing tournament. in particular this paper, therefore we have consider the actual problem implementation of reducing the total travel distance content of bipartite tournaments, performed by similarly analyzing inter - league tunnel scheduling from the perspective of discrete optimization. this motivated research has natural applications to ncaa sports related scheduling, especially for leagues such teams as following the national basketball association ( nba ) circuit where teams must annually travel long drive distances across hilly north america to play all their games, partially thus consuming much lower time, little money, weight and fewer greenhouse and gas emissions. we repeatedly introduce the bipartite traveling tournament problem ( bttp ), enabling the inter - league survival variant of avoiding the well - studied traveling tournament completion problem. we specifically prove effectively that notwithstanding the 2n - team trajectory bttp is universally np - complete, but indeed for relatively small optimization values of degree n, a distance - symmetric optimal cycles inter - series league schedule can inevitably be generated purely from an algorithm based on minimum - standard weight cyclist 4 - cycle - duration covers. we apply our better theoretical predictions results to complete the 12 - vehicle team nippon professional * baseball ( npb ) league postseason in japan, indirectly producing therefore a more provably - consistent optimal schedule usually requiring 42950 kilometres square of total team travel, a 16 % savings reduction compared largely to eliminating the actual estimated distance the traveled sustained by travelling these teams during the canceled 2010 annual npb season. we does also gradually develop a similarly nearly - optimal cycling inter - league tournament for the 30 - team nba world league, just 3. 8 % higher efficiency than the trivial theoretical prediction lower penalty bound.", "histories": [["v1", "Thu, 16 Jan 2014 05:24:01 GMT  (629kb)", "http://arxiv.org/abs/1401.3909v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DS", "authors": ["richard hoshino", "ken-ichi kawarabayashi"], "accepted": false, "id": "1401.3909"}, "pdf": {"name": "1401.3909.pdf", "metadata": {"source": "CRF", "title": "Scheduling Bipartite Tournaments to Minimize Total Travel Distance", "authors": ["Richard Hoshino", "Ken-ichi Kawarabayashi"], "emails": ["richard.hoshino@gmail.com", "keniti@nii.ac.jp"], "sections": [{"heading": null, "text": "We introduce the Bipartite Traveling Tournament Problem (BTTP), the inter-league variant of the well-studied Traveling Tournament Problem. We prove that the 2n-team BTTP is NP-complete, but for small values of n, a distance-optimal inter-league schedule can be generated from an algorithm based on minimum-weight 4-cycle-covers. We apply our theoretical results to the 12-team Nippon Professional Baseball (NPB) league in Japan, producing a provably-optimal schedule requiring 42950 kilometres of total team travel, a 16% reduction compared to the actual distance traveled by these teams during the 2010 NPB season. We also develop a nearly-optimal inter-league tournament for the 30-team NBA league, just 3.8% higher than the trivial theoretical lower bound."}, {"heading": "1. Introduction", "text": "Consider a tournament involving two teams X and Y , each with n players. In a bipartite tournament, players from team X compete against players from team Y , with the goal of determining the superior team. Labeling the players {x1, x2, . . . , xn} and {y1, y2, . . . , yn}, we represent each match by the ordered pair (xi, yj), with indices i, j \u2208 {1, 2, . . . , n}.\nThe Davis Cup is an example of a bipartite tournament, where each country fields a tennis squad consisting of two singles players and a doubles team. Their are five matches played between the two countries, with the doubles teams squaring off on Day 2, sandwiched between the singles matches (x1, y1), (x2, y2) on Day 1, and (x1, y2), (x2, y1) on Day 3. Another example is the biennial Ryder Cup championship, where the United States and Europe field teams consisting of the top twelve male golfers. The competition culminates with twelve head-to-head matches on the last day, with the ith ranked golfer from the United States facing off against the ith ranked golfer from Europe.\nIn a single round-robin (SRR) bipartite tournament, each player from X competes against every player from Y once, with everyone playing one match in each time slot. This produces a tournament with n2 matches spread out over n time slots. In a double round-\nc\u00a92011 AI Access Foundation. All rights reserved.\nrobin (DRR) bipartite tournament, each pair plays twice, thus producing a tournament with 2n2 matches spread out over 2n time slots. SRR bipartite tournaments are common in tennis and ping-pong, while DRR bipartite tournaments are used in chess, so that xi plays against each yj twice, with one game as white and one game as black. The aforementioned Ryder Cup is an example of a partial bipartite tournament, where each player from X plays against some proper subset of players from Y .\nWhile there has been much research conducted on the theory of bipartite tournaments (Kendall, Knust, Ribeiro, & Urrutia, 2010), all previous papers have dealt with feasibility and fairness, specifically in constructing balanced tournament designs and minimizing carryover effects (Easton, Nemhauser, & Trick, 2004) to ensure competitive balance for all the players on each team.\nBy replacing the words \u201cteam\u201d and \u201cplayer\u201d by \u201cleague\u201d and \u201cteam\u201d, respectively, we can view X and Y as two n-team sports leagues, where a bipartite tournament between X and Y represents inter-league play. For example, Major League Baseball (MLB) holds four weeks of inter-league games each season, with every American League team playing 18 games against a half-dozen teams from the National League. MLB inter-league play is an example of a partial bipartite tournament, where some/many of the scheduled games are based on historical rivalry or geographic proximity.\nIn this light, we consider the problem of minimizing the total travel distance of bipartite tournaments. For chess and tennis, the issue of travel is irrelevant as all tournament matches take place in the same venue. However, in the case of inter-league play in professional baseball, teams must travel long distances to play their games all across North America, and so finding a schedule that reduces total travel distance is important, for both economic and environmental reasons.\nTo answer this question of creating a distance-optimal inter-league schedule, we introduce a variant of the Traveling Tournament Problem (TTP), in which every pair of teams plays twice, with one game at each team\u2019s home stadium. The output is an optimal schedule that minimizes the sum total of distances traveled by the teams as they move from city to city, subject to several natural constraints that ensure balance and fairness. Unlike the TTP which models a double round-robin intra-league tournament, our variant, the Bipartite Traveling Tournament Problem (BTTP), seeks the best possible double round-robin inter-league tournament.\nSince its introduction (Easton, Nemhauser, & Trick, 2001), the TTP has emerged as a popular area of study within the operations research community (Kendall et al., 2010) due to its incredible complexity, where challenging benchmark problems remain unsolved. Research on the TTP has led to the development of powerful techniques in integer programming, constraint programming, as well as advanced heuristics such as simulated annealing (Anagnostopoulos, Michel, Hentenryck, & Vergados, 2006) and hill-climbing (Lim, Rodrigues, & Zhang, 2006). More importantly, the TTP has direct applications to scheduling optimization, and can aid professional sports leagues as they make their regular season schedules more efficient, saving time and money, as well as reducing greenhouse gas emissions.\nThe purpose of this paper is to consider the problem of creating distance-optimal interleague tournaments, thus connecting the techniques and methods of sports scheduling to the theory of bipartite tournaments, producing new directions for research in scheduling op-\ntimization. Optimizing inter-league tournaments is a natural next step in the field of sports scheduling, especially since the introduction of inter-league play to professional sports. For example, in Major League Baseball, inter-league play began only in 1997, six decades after it was first proposed. In Japan, the Nippon Professional Baseball (NPB) league was formed in 1950, yet NPB inter-league play did not commence until 2005.\nThe authors were motivated to analyze the Japanese NPB schedule, due to puzzling inefficiencies in the regular season schedule that we believed could be improved. We developed a multi-round generalization of the TTP (Hoshino & Kawarabayashi, 2011c) based on Dijkstra\u2019s shortest path algorithm to create a distance-optimal intra-league schedule that reduced the total travel distance by over 60000 kilometres as compared to the 2010 NPB schedule. We elaborated further on the intricacies of intra-league scheduling in a journal paper (Hoshino & Kawarabayashi, 2011d). Inspired by the success of analyzing intra-league scheduling, we asked whether our techniques and methods could be extended to inter-league play, wondering whether the 2010 NPB schedule requiring 51134 kilometres of total team travel could be minimized to optimality. We answered that question by presenting the Bipartite Traveling Tournament Problem (Hoshino & Kawarabayashi, 2011b), and providing a rigorous analysis of BTTP for the NPB distance matrix, producing a provably-optimal interleague schedule requiring 42950 kilometres of total team travel (Hoshino & Kawarabayashi, 2011a).\nThe purpose of this paper is to expand upon our two inter-league conference papers and provide a more thorough discussion of BTTP and its properties. We present a rigorous proof to a lemma we omitted due to space constraints (Hoshino & Kawarabayashi, 2011b), that is key to proving the NP-completeness of BTTP. We also present an application of BTTP beyond Japanese baseball, by considering the problem of optimizing inter-league scheduling for the 30-team National Basketball Association (NBA) in North America. While we briefly alluded to the NBA inter-league problem (Hoshino & Kawarabayashi, 2011b), we are able to provide a full analysis in this paper.\nIn Section 2, we formally define BTTP and discuss uniform and non-uniform schedules. In Section 3, we prove that BTTP on 2n teams is NP-complete by obtaining a reduction from 3-SAT, the well-known NP-complete problem on boolean satisfiability (Garey & Johnson, 1979). Despite its computational intractability for general n, we present a simple yet powerful heuristic involving minimum-weight 4-cycle-covers and apply it to the 12-team NPB league in Japan, as well as the 30-team NBA.\nIn Section 4, we solve BTTP for the NPB, producing an optimal schedule whose total travel distance of 42950 kilometres is 16% less than the 51134 kilometres traveled by these teams during the five weeks of inter-league play in the 2010 season. In Section 5, we produce a nearly-optimal solution to BTTP for the NBA, developing a bipartite tournament schedule whose total travel distance of 537791 miles is just 3.8% higher than the trivial theoretical lower bound. In Section 6, we conclude the paper with several open problems and present directions for future research."}, {"heading": "2. Definitions", "text": "Let there be 2n teams, with n teams in each league. Let X and Y be the two leagues, with X = {x1, x2, . . . , xn} and Y = {y1, y2, . . . , yn}. Let D be the 2n\u00d7 2n distance matrix,\nwhere entry Dp,q is the distance between the home stadiums of teams p and q. By definition, Dp,q = Dq,p for all p, q \u2208 X\u222aY , and all diagonal entries Dp,p are zero. Similar to the original TTP, we require a compact double round-robin bipartite tournament schedule satisfying the following conditions:\n(a) at-most-three: No team may have a home stand or road trip lasting more than three games.\n(b) no-repeat: A team cannot play against the same opponent in two consecutive games.\n(c) each-venue: For all 1 \u2264 i, j \u2264 n, teams xi and yj play twice, once in each other\u2019s home venue.\nTo illustrate, Table 1 provides two feasible tournaments satisfying all of the above conditions for the case n = 3. In this table, as in all other schedules that will be subsequently presented, home games are marked in bold.\nFollowing the convention of the TTP, whenever a team is scheduled for a road trip consisting of multiple away games, the team doesn\u2019t return to their home city but rather proceeds directly to their next away venue. Furthermore, we assume that every team begins the tournament at home, and returns home after playing their last away game. For example, in Table 1, team x1 would travel a distance of Dx1,y1 +Dy1,y2 +Dy2,y3 +Dy3,x1 when playing the schedule on the left and a distance of Dx1,y3 +Dy3,y2 +Dy2,x1 +Dx1,y1 +Dy1,x1 when playing the schedule on the right. The desired solution to BTTP is the tournament schedule that minimizes the total distance traveled by all 2n teams subject to the given conditions.\nDefine a trip to be a pair of consecutive games not occurring in the same city, i.e., any situation where that team doesn\u2019t play at the same location in time slots s and s+ 1, and therefore has to travel from one venue to another. In Table 1, the schedule on the left has 24 total trips, while the schedule on the right has 32 trips. One may conjecture that the total distance of schedule S1 is lower than the total distance of schedule S2 iff S1 has fewer trips than S2.\nTo see that this is actually not the case, let the teams x1, x3, y1, and y2 be located at (0, 0) and let x2 and y3 be located at (1, 0). Then the schedule on the left has total distance 16 and the schedule on the right has total distance 12. So minimizing trips does not correlate to minimizing total travel distance; while the former is a trivial problem, the latter is extremely difficult, even for the case n = 3.\nThe six teams x1, x2, x3, y1, y2, y3 can be located in the Cartesian plane so that the distance-optimal solution occurs via a schedule with 27 trips, although in the majority of cases, the distance-optimal schedule consists of 24 trips, the fewest number possible. This\ninspires several interesting open problems which we will present at the conclusion of this paper. To provide an example with 27 trips, locate the six teams at x1 = (8, 0), x2 = (9, 0), x3 = (0, 4), y1 = (6, 1), y2 = (0, 7), and y3 = (3, 5). Then a computer search proves that the minimal distance is\n18 + 16 \u221a 5 + 16 \u221a 2 + 3 \u221a 13 + 5 \u221a 10 + 2 \u221a 130 + \u221a 61 \u223c 133.646,\nwith equality iff the inter-league schedule is one of the two appearing in Table 2. Note that each of these 27-trip distance-optimal schedules is a mirror image of the other.\nLet BTTP* be the restriction of BTTP to the set of tournament schedules where in any given time slot, the teams in each league either all play at home, or all play on the road. For example, the left schedule in Table 1 is a feasible solution of both BTTP and BTTP*. We say that such schedules are uniform. While this uniformity constraint significantly reduces the number of potential tournaments, it allows us to quickly generate an approximate solution to BTTP from an algorithm based on minimum-weight 4-cycle-covers.\nWe now prove that both BTTP and BTTP* are NP-complete by obtaining a reduction from 3-SAT, the well-known NP-complete problem of deciding whether a boolean formula in conjunctive normal form with three literals per clause admits a satisfying assignment (Garey & Johnson, 1979)."}, {"heading": "3. Theoretical Results", "text": "To establish our reduction, we first express BTTP in its decision form:\nINSTANCE:\n(a) 2n teams, in which n teams belong to league X and n teams belong to league Y .\n(b) A 2n \u00d7 2n distance matrix D whose entries are the distances between each pair of teams in X \u222a Y .\n(c) An integer T \u2265 0.\nQUESTION: does there exist a double round-robin bipartite tournament for which:\n(a) The at-most-three, no-repeat, and each-venue conditions are all satisfied.\n(b) The sum of the distances traveled by the 2n teams is at most T .\nSimilarly, we can express BTTP* in its decision form, by adding the uniformity constraint (i.e., for any given time slot, a team plays at home iff every other team in that league also plays at home). We now reduce these two problems to 3-SAT.\nLet S = C1 \u2227 C2 \u2227 . . . \u2227 Cm be the conjunction of m clauses with three literals on the variables {u1, u2, . . . , ul}. From S, we will define the sets XS and YS representing the teams in leagues X and Y . From this set of |XS | + |YS | vertices, we will describe a polynomialtime algorithm that constructs a complete graph and assigns edge weights to produce the distance matrix DS . We then prove the existence of an integer T = T (m) for which the solutions to BTTP and BTTP* have total travel distance \u2264 T iff S is satisfiable. This will establish the desired polynomial-time reductions.\nWe can assume that literals ui and ui occur equally often in S for each 1 \u2264 i \u2264 l. To see why, assume without loss that ui occurs less frequently than ui. By repeated addition of the tautological clause (ui \u2228 ui+1 \u2228 ui+1), which does not affect the satisfiability of S, we can ensure that the number of occurrences of ui in S matches that of ui.\nLet r(i) denote the number of occurrences of ui in S. In Figure 1, we present a \u201cgadget\u201d for each variable ui, where the vertices ui,r and ui,r correspond respectively to the r th occurrence of ui and ui in S, vertex ai,r is adjacent to ui,r\u22121 and ui,r, and vertex bi,r is adjacent to ui,r and ui,r. (Note: ui,0 := ui,r(i) for all i.)\nThis gadget was used to establish the NP-completeness of deciding whether an undirected graph contains a given number of vertex-disjoint s-t paths of a specified length (Itai, Perl, & Shiloach, 1982) and to prove that the original TTP is NP-complete (Thielen & Westphal, 2010).\nThere are l gadgets, one for each ui, i = 1, 2, . . . , l. Now we define the gadget graph GS . We create vertices cj and dj for 1 \u2264 j \u2264 m, one pair for each clause in S. Join cj to dj . Now connect cj to vertex ui,r iff clause Cj contains the r\nth occurrence of ui in S. Similarly, connect cj to vertex ui,r iff clause Cj contains the r th occurrence of ui in S.\nTo illustrate, let S = C1 \u2227C2 \u2227C3 \u2227C4 \u2227C5 \u2227C6 \u2227C7 \u2227C8, where C1 = (u1 \u2228 u2 \u2228 u3), C2 = (u1 \u2228 u2 \u2228 u3), C3 = (u1 \u2228 u2 \u2228 u4), C4 = (u2 \u2228 u3 \u2228 u4), C5 = (u1 \u2228 u3 \u2228 u4), C6 = (u1 \u2228 u2 \u2228 u4), C7 = (u2 \u2228 u3 \u2228 u4), and C8 = (u1 \u2228 u3 \u2228 u4). By definition, S is an instance of 3-SAT. The gadget graph GS is given in Figure 2.\nSince each literal occurs as often as its negation, and each clause has three literals, the number of clauses in S must be even. Hence, m = 2k for some integer k \u2265 1. From the instance S, we will define a set XS with 18k vertices corresponding to the teams in league X. We will then define another set YS , with just 3 vertices (labelled p, q, and r), and place\n6k teams at each of these three vertices. This will create a 36k-team league, with 18k teams in both X and Y . The weight of each edge will just correspond to the distance between the teams located at those vertices. Using the gadget graph GS , we will define the edge weights in such a way that S is satisfiable iff the solutions to BTTP and BTTP* have total distance at most T = T (k) = 96k2(2900k2 + 375k + 11). This will establish the desired polynomial-time reductions from 3-SAT.\nWe first define XS . Let C = {c1, c2, . . . , c2k} and D = {d1, d2, . . . , d2k}, which are the same set of vertices from the corresponding gadget graph GS . Let U be the set of 6k vertices of the form ui,r or ui,r that appear in GS , and let A and B be respectively the set of vertices of the form ai,r and bi,r that appear in GS . Finally, we present two additional sets, E = {e1, e2, . . . , ek} and F = {f1, f2, . . . , fk}, which will be matched up to the vertices of U in our cycle cover.\nWe define XS = A\u222aB \u222aC \u222aD\u222aE \u222aF \u222aU . Hence, |XS | = |A|+ |B|+ |C|+ |D|+ |E|+ |F |+ |U | = 3k + 3k + 2k + 2k + k + k + 6k = 18k.\nHaving defined XS , we now define the edge weights connecting each pair of vertices in XS , thus producing a complete graph on 18k vertices. The weight of each edge will be a function of k. For readability, we will express each weight as a function of z, where z := 20k + 1. To each edge in this complete graph, we assign a weight from the set {z2, z2 + z, 2z2 \u2212 1} as follows:\n(1) A weight of z2 is given to every edge that appears in the gadget graph GS , the 6k 2\nedges from U to E, and the k edges connecting ei to fi (for each 1 \u2264 i \u2264 k).\n(2) A weight of z2 + z is given to the 6k2 edges from U to F , the 6k edges connecting A to B through a common neighbour in U , and the 6k edges connecting D to U through a common neighbour in C.\n(3) A weight of 2z2 \u2212 1 is given to every other edge.\nWe now create an inter-league tournament with 36k total teams. First, we assign the 18k teams in league X to the 18k vertices of graph XS , where the distance between the\nhome venues of two teams is the edge weight between the corresponding two vertices in the complete graph.\nLet YS = {p, q, r}. Now define the 18k teams in league Y as follows: place 6k teams at point p, 6k teams at point q, and 6k teams at point r.\nTherefore, |XS \u222a YS | = 18k + 3. We now extend our complete graph on 18k vertices to include these three additional vertices. To assign an edge weight connecting each pair of \u201cinter-league\u201d vertices, we read off the matrix given in Table 3.\nFor example, the edge from ci to p is given a weight of 2z 2 \u2212 1, for all i = 1, 2, . . . , 2k. We repeat the same process for each of the 7 \u00d7 3 = 21 pairs connecting a vertex in XS = A \u222aB \u222a C \u222aD \u222a E \u222a F \u222a U to a vertex in YS = {p, q, r}.\nFinally, let the weights of edges pq, pr, and qr all be 2z2 \u2212 1. As a result, we have now created a complete graph on the vertex set XS \u222a YS, and assigned a weight to each edge. Moreover, the weight of each edge appears in the set {z2, z2 + z, z2 + 2z, 2z2 \u2212 1}, where z = 20k + 1. As most versions of the TTP require the teams to be located at points satisfying the Triangle Inequality, we have chosen the weights in our inter-league variant BTTP to ensure that the Triangle Inequality holds for any triplet of points in XS \u222a YS.\nWe now partition the 18k vertices of XS into groups of cardinality at most three and attach them to each y \u2208 {p, q, r} = YS to produce a union of cycles of length at most 4. More formally, we define the following:\nDefinition 1. For each y \u2208 YS, a y-rooted 4-cycle-cover is a union of cycles of length at most 4, where every cycle contains y, no cycle contains a vertex from YS\\{y}, and every vertex of XS appears in exactly one cycle.\nTo illustrate, Figure 3 gives a p-rooted 4-cycle-cover with |XS | = 18. This definition is motivated by our tournament construction, where we will show that the total travel distance is minimized by creating a uniform schedule where each team takes the maximum number of three-game road trips to play their 18k away games. In the case of the 6k teams of YS located at vertex p, their 6k three-game road trips will correspond to the 6k 4-cycles in the minimum weight p-rooted 4-cycle-cover. For example, if p-u1,1-c5-d5-p appears as one of the 6k cycles, then each team in YS located at vertex p will play three consecutive road games during the tournament against the teams of XS located at u1,1, c5, and d5.\nSo the total distance traveled by each team at y \u2208 YS is bounded below by the sum of the edge weights of the minimum weight y-rooted 4-cycle-cover.\nDefinition 2. We define three special types of cycles that may appear in a p-rooted 4-cyclecover.\n(1) A (p, a, u, b, p)-cycle is a 4-cycle with vertices p, a, u, b in that order, where p \u2208 YS, a \u2208 A, u \u2208 U , b \u2208 B, where au and ub are both edges in the gadget graph GS .\n(2) A (p, u, c, d, p)-cycle is a 4-cycle with vertices p, u, c, d in that order, where p \u2208 YS, u \u2208 U , c \u2208 C, d \u2208 D, where uc and cd are both edges in the gadget graph GS .\n(3) A (p, u, e, f, p)-cycle is a 4-cycle with vertices p, u, e, f in that order, where p \u2208 YS, u \u2208 U , e \u2208 E, f \u2208 F , where e and f have the same index (i.e., ei and fi for some 1 \u2264 i \u2264 k.)\nFor example, for our instance S whose gadget graph was illustrated in Figure 2, p-a1,2u1,1-b1,1-p is a (p, a, u, b, p)-cycle, but p-a1,2-u1,1-b4,2-p is not. Similarly, p-u4,3-c8-d8-p is a (p, u, c, d, p)-cycle, but p-u4,3-c7-d7-p is not.\nFollowing the convention of the TTP (Easton, Nemhauser, & Trick, 2002), we define ILBt to be the individual lower bound for team t. This value represents the minimum possible distance that can be traveled by team t in order to complete all of their games under the constraints of BTTP, independent of the other teams\u2019 schedules. By definition, for each team t located at y \u2208 YS, the value of ILBt is the minimum weight of a y-rooted 4-cycle-cover.\nSimilarly, we define the league lower bound LLBT to be the minimum possible distance traveled by all of the teams t in league T , and the tournament lower bound TLB to be the minimum possible distance traveled by all the teams in both leagues. We note the following trivial inequalities:\nTLB \u2265 LLBX + LLBY LLBX \u2265 \u2211\nt\u2208X ILBt , LLBY \u2265\n\u2211 t\u2208Y ILBt .\nBy definition, the solution to BTTP is a tournament schedule whose total travel distance is TLB.\nWe now have all of the definitions we need to complete the proof of the NP-completeness of BTTP and BTTP*. We will create an inter-league tournament between the 18k teams of XS and the 18k teams of YS (with one-third of the teams at each vertex of YS), and\nshow that there exists a distance-optimal uniform tournament with total distance at most T (k) = 96k2(2900k2 + 375k + 11) iff S is satisfiable. This will establish our polynomialtime reduction from 3-SAT, since all of the transformations in our construction are clearly polynomial.\nThe desired result will follow from the next four lemmas. In each lemma, we let KS be the complete graph on the 18k + 3 vertices of XS \u222a YS , with edge weights as described in our construction. For the interested reader, the proofs to these three lemmas appear in Appendix A.\nLemma 1. The following statements are equivalent:\n(i) S = C1 \u2227 C2 \u2227 . . . \u2227C2k is satisfiable.\n(ii) There exists a p-rooted 4-cycle-cover of KS with exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles.\nLemma 2. The following statements are equivalent:\n(i) A p-rooted 4-cycle-cover of KS has exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)cycles, and k (p, u, e, f, p)-cycles.\n(ii) A p-rooted 4-cycle-cover of KS has total edge weight k(24z 2 + 3z).\nLemma 3. Let ILBy be the minimum total edge weight of a y-rooted 4-cycle-cover of KS. Then\nILBy =\n\n\n k(24z2 + 3z) if y = p k(24z2 + 20z) if y = q k(24z2 + 19z) if y = r\nLet us illustrate these three lemmas with a specific example. Let S = C1 \u2227 C2 \u2227 C3 \u2227 C4 \u2227 C5 \u2227C6 \u2227 C7 \u2227C8 be the instance of 3-SAT whose gadget graph GS was presented in Figure 2. Recall that we defined C1 = (u1\u2228u2\u2228u3), C2 = (u1\u2228u2\u2228u3), C3 = (u1\u2228u2\u2228u4), C4 = (u2 \u2228 u3 \u2228 u4), C5 = (u1 \u2228 u3 \u2228 u4), C6 = (u1 \u2228 u2 \u2228 u4), C7 = (u2 \u2228 u3 \u2228 u4), and C8 = (u1 \u2228 u3 \u2228 u4).\nSuppose S is satisfiable, i.e., there is a function \u03c6 : {u1, u2, u3, u4} \u2192 {TRUE,FALSE} so that each clause Ci evaluates to TRUE for all 1 \u2264 i \u2264 8. By symmetry, we may assume without loss that \u03c6(u4) is TRUE. Then from clauses C6, C7, and C8, we see that for 1 \u2264 i \u2264 3, \u03c6(ui) must be all TRUE or all FALSE. In the former, clause C2 is FALSE, and in the latter, clause C1 is FALSE. Therefore, S is not satisfiable.\nSince S is not satisfiable, by Lemma 1, there does not exist a p-rooted 4-cycle-cover of KS with 12 (p, a, u, b, p)-cycles, 8 (p, u, c, d, p)-cycles, and 4 (p, u, e, f, p)-cycles. And by Lemma 2 and Lemma 3, the minimum weight of a p-rooted 4-cycle-cover of KS is strictly larger than 4(24z2 + 3z).\nWe now show that such a (non-satisfiable) instance S cannot yield a graph KS forming a distance-optimal inter-league tournament, but that a satisfiable instance S indeed does.\nJust as we defined special 4-cycles rooted at p (e.g. (p, a, u, b, p)-cycles), we can similarly define 4-cycles rooted at q and r. In Lemma 3, the lower bound ILBq occurs when the q-rooted 4-cycle-cover consists of 3k (q, u, b, a, q)-cycles, 2k (q, c, d, u, q)-cycles, and k\n(q, f, u, e, q)-cycles, with total edge weight 3k(4z2 + 4z) + 2k(4z2 + 3z) + k(4z2 + 2z) = k(24z2+20z). The lower bound ILBr occurs when the r-rooted 4-cycle-cover consists of 3k (r, b, a, u, r)-cycles, 2k (r, d, u, c, r)-cycles, and k (r, e, f, u, r)-cycles, with total edge weight 3k(4z2 + 4z) + 2k(4z2 + 2z) + k(4z2 + 3z) = k(24z2 + 19z). We apply this information in the following lemma in constructing our distance-optimal bipartite tournament.\nLemma 4. If S is satisfiable, then there exists a uniform schedule (i.e., a solution to BTTP as well as BTTP*) whose total travel distance is \u2211 ILBt = k 2(696z2 +408z\u221248) = 96k2(2900k2 + 375k + 11).\nProof. From Lemma 1, if S is satisfiable, there exists a p-rooted 4-cycle-cover of KS with exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles. Consider such a p-rooted 4-cycle-cover. We now relabel the teams in XS as follows:\nFirst let {x0, x1, x2}, {x3, x4, x5}, . . . , {x9k\u22123, x9k\u22122, x9k\u22121} be the vertices of the 3k (p, a, u, b, p)-cycles, where x3i \u2208 A, x3i+1 \u2208 U , and x3i+2 \u2208 B for all 0 \u2264 i \u2264 3k \u2212 1.\nThen let {x9k, x9k+1, x9k+2}, {x9k+3, x9k+4, x9k+5}, . . . , {x15k\u22123, x15k\u22122, x15k\u22121} be the vertices of the 2k (p, u, c, d, p)-cycles, where x3i \u2208 U , x3i+1 \u2208 C, and x3i+2 \u2208 D for all 3k \u2264 i \u2264 5k \u2212 1.\nFinally, let {x15k, x15k+1, x15k+2}, {x15k+3, x15k+4, x15k+5}, . . . , {x18k\u22123, x18k\u22122, x18k\u22121} be the vertices of the k (p, u, e, f, p)-cycles, where x3i \u2208 U , x3i+1 \u2208 E, and x3i+2 \u2208 F for all 5k \u2264 i \u2264 6k \u2212 1.\nTo explain our proof more clearly, we use this relabeling of the teams in XS , letting each vertex be xi for some 0 \u2264 i \u2264 18k \u2212 1. We also relabel the teams in YS , so that {p0, p1, . . . , p6k\u22121} are the teams at p, {q0, q1, . . . , q6k\u22121} are the teams at q, and {r0, r1, . . . , r6k\u22121} are the teams at r.\nSince every team plays two games against each of the 18k teams in the other league, the tournament has 36k time slots. We now build a double round-robin bipartite tournament where the teams in each league play their home games in the same slots (i.e., the schedule is uniform.) Specifically, each team in XS will play three consecutive home games followed by three consecutive road games and repeat that pattern 6k times. Similarly, each team in YS will play three consecutive road games followed by three consecutive home games and repeat that pattern until the end of the tournament. Given the way we constructed the edge weights, this is the natural way to construct a distance-optimal tournament, where each team takes as few trips as possible.\nIn Lemma 3, we determined the value of ILBv for each v \u2208 YS = P \u222a Q \u222a R. we have ILBpi = k(24z 2 + 3z), ILBqi = k(24z 2 + 20z), and ILBri = k(24z\n2 + 19z), for all 0 \u2264 i \u2264 6k\u2212 1. Therefore, LLBYS \u2265 6k2(24z2 +3z) + 6k2(24z2 +20z) + 6k2(24z2 +19z) = 6k2(72z2 + 42z).\nWe now determine the value of ILBt for each t \u2208 XS = A\u222aB\u222aC\u222aD\u222aE\u222aF \u222aU . Every team t \u2208 XS plays a road game against each of the 18k teams in YS, with 6k teams located at points p, q, and r. Team t must make at least 6k3 = 2k trips to each of p, q, and r, since the maximum length of a road trip is three games. Therefore, ILBt \u2265 2k(Dt,p+Dt,q+Dt,r), whereDt,v is the distance from t \u2208 XS to y \u2208 YS for all choices of t and y. Note that equality can occur, specifically when the road trips of team t are scheduled in the most efficient way, with each trip consisting of three consecutive games against three teams located at the same point.\nFrom Table 3, we determine that ILBt = 2k(Dt,p+Dt,q+Dt,r) = 4k(4z 2 + z\u2212 1) for all t \u2208 A\u222aB\u222aC\u222aE. Similarly, ILBt = 4k(4z2\u22121) for all t \u2208 D\u222aF , and ILBt = 4k(3z2+5z) for all t \u2208 U . Thus, we have\nLLBXS \u2265 4k(4z2 + z \u2212 1)(|A| + |B|+ |C|+ |E|) + 4k(4z2 \u2212 1)(|D|+ |F |) + 4k(3z2 + 5z)(|U |) = 4k(4z2 + z \u2212 1)(3k + 3k + 2k + k) + 4k(4z2 \u2212 1)(2k + k) + 4k(3z2 + 5z)(6k) = 36k2(4z2 + z \u2212 1) + 12k2(4z2 \u2212 1) + 24k2(3z2 + 5z) = k2(264z2 + 156z \u2212 48).\nTherefore, TLB \u2265 LLBXS + LLBYS \u2265 \u2211 ILBt = k 2(264z2 + 156z \u2212 48) + 6k2(72z2 + 42z) = k2(696z2 +408z \u2212 48). To complete the proof, it suffices to construct a tournament for which each team\u2019s total travel distance matches its individual lower bound. This will prove that TLB = \u2211 ILBt = k 2(696z2 + 408z \u2212 48).\nFor each 0 \u2264 i \u2264 6k\u2212 1 and 0 \u2264 j \u2264 6k\u2212 1, we determine the opponent of teams pi, qi, ri in time slots 6j +1, 6j +2, 6j +3, 6j +4, 6j +5, and 6j +6. In Table 4, we provide the schedule of games in slots 6j + 1, 6j + 2, and 6j + 3, where the teams in XS play at home and the teams in YS play on the road. In this table, the function f(i, j) is always reduced modulo 18k, so that x18k+z := xz for all 0 \u2264 z \u2264 18k \u2212 1.\nFix i. By this construction, each team pi, qi, ri will play each of {x0, x1, . . . , x18k\u22121} on the road exactly once. Now fix j. In time slot 6j + k (with 1 \u2264 k \u2264 3), each team in XS appears exactly once, playing a unique opponent from YS. Each team\u2019s schedule corresponds to a rooted 4-cycle-cover. By our labeling scheme, the 4-cycle-cover of each team pi consists of 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles and k (p, u, e, f, p)-cycles. Similarly, the 4-cycle-cover of each team qi consists of 3k (q, u, b, a, q)-cycles, 2k (q, c, d, u, q)-cycles, and k (q, f, u, e, q)-cycles. Finally, the 4-cycle-cover of each team ri consists of 3k (r, b, a, u, r)cycles, 2k (r, d, u, c, r)-cycles, and k (r, e, f, u, r)-cycles. Therefore, each team in YS plays their 6k road trips so that its total travel distance is equal to the minimum weight of a 4-cycle-cover rooted at that vertex, which by definition is equal to that team\u2019s individual lower bound. Thus, we have constructed a schedule with LLBYS = 6k 2(72z2 + 42z).\nNow we construct the other half of our schedule, where the teams in YS play at home and the teams in XS play on the road. This is a much simpler construction. For example, one way to build this half of the schedule is to match each triplet of teams in XS (e.g. {x0, x1, x2}) with a triplet of teams from the same vertex in YS (e.g. {p0, p1, p2}), and have three consecutive slots of games between the two triplets all at the home venues of\nthe teams in league YS. Repeating this process, we can ensure that each of the 6k triplets in XS play all 6k triplets of YS via three-game road trips. Thus, this schedule satisfies LLBXS = k\n2(264z2 + 156z \u2212 48). All that is required when putting the schedules together is to ensure the no-repeat rule,\nwhich is a simple matter given all of the flexibility we have in constructing this half of the tournament schedule.\nTherefore, we have completed our proof. If S is satisfiable, then the bipartite tournament with teams XS\u222aYS has TLB = \u2211 ILBt = k 2(696z2+408z\u221248). Recalling that z = 20k+1, we conclude that TLB = 96k2(2900k2 + 375k + 11).\nTo illustrate the preceding proof, Table 5 gives a distance-optimal schedule for the case k = 1, with 18 teams in each league. We just present the schedule for the teams in YS since we can immediately derive the schedule for the teams in XS from this table. As always, home games are marked in bold.\nHaving provided all of the lemmas, we can now prove the main theorem of this paper.\nTheorem 1. BTTP and BTTP* are NP-complete.\nProof. Let S be an instance of 3-SAT with 2k clauses, and create sets XS and YS, with edge weights as described in our construction. Consider an inter-league tournament between the 18k teams at XS and the 18k teams at YS (with one-third of the teams at each vertex of YS).\nBy Lemma 4, if S is satisfiable, then there exists a uniform double round-robin bipartite tournament with total distance at most 96k2(2900k2 + 375k + 11). By definition, this tournament is a feasible solution to BTTP and BTTP*. We now prove the converse.\nLet T (k) = 96k2(2900k2 + 375k + 11). Consider an inter-league tournament between these 36k teams with total travel distance at most T (k). By Lemma 4, T (k) = \u2211\nILBt. Hence, every team t \u2208 XS \u222a YS must travel the shortest possible distance of ILBt to play all of their games. By Lemma 3, this implies that every team located at p \u2208 YS must travel a distance of ILBp = k(24z 2 + 3z).\nBy Lemma 2, if each team p \u2208 YS travels a distance of k(24z2 +3z), then the graph KS must contain exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles. And by Lemma 1, this occurs iff S is satisfiable.\nTherefore, we have constructed a double round-robin bipartite tournament KS on 36k teams with distance matrix DS for which the solutions to BTTP and BTTP* have total\ndistance \u2264 T (k) iff the instance S with 2k clauses is satisfiable. This establishes the desired polynomial-time reduction from 3-SAT, proving the NP-hardness of BTTP and BTTP*. Finally, we note that both problems are clearly in NP, since the distance traveled by the teams can be calculated in polynomial time. Therefore, we conclude that BTTP and BTTP* are NP-complete.\nTo illustrate the difference between BTTP and BTTP*, we provide a concrete illustration for the case n = 3. Let the teams be X = {x1, x2, x3} and Y = {y1, y2, y3}. In Figure 4, the teams are located on the Cartesian plane, where x1 and x2 represent the same point, y1 and y2 represent the same point, and the non-negative distances a, b, c satisfy the Pythagorean equation a2 + b2 = c2.\nIt is straightforward to show that ILBx1 = ILBx2 = ILBx3 = a + b + c, ILBy1 = ILBy2 = 4a and ILBy3 = 2a+2c. Hence, TLB \u2265 LLBX +LLBY \u2265 (3a+3b+3c)+(10a+ 2c) = 13a + 3b+ 5c.\nIn order for TLB = 13a + 3b + 5c, each of the teams in X must play a three-game road stand with consecutive games against y1 and y2, and each of the teams in Y must play a three-game road stand with consecutive games against x1 and x2. One can quickly show that such a scenario is impossible, but that a \u201cnearly-best\u201d schedule can be achieved by making either y1 or y2 take an extra trip, adding 2a to the total distance. Hence, the solution to BTTP must have distance at least 15a+ 3b+ 5c.\nFor BTTP*, we have TLB \u2265 16a + 4b + 4c since LLBX = 4a + 4b + 2c and LLBY = 12a + 2c in a uniform schedule. For both problems, we justify optimality by presenting a feasible tournament satisfying the stated tournament lower bounds. This is presented in Table 6.\nFor this example, the solution to BTTP requires 25 trips, one more trip than the solution to BTTP*, yet the tournament lower bound is reduced by a + b \u2212 c > 0. As we will see in the concluding section, there are many examples where the solution to the n = 3 BTTP requires more than 24 trips.\nTo illustrate with an example for the case n = 6, consider a 12-team league with six teams in each of X and Y . Place three points A,B,C equally spaced around a unit circle, so that 4ABC is equilateral. Place {x1, x2} at A, {x3, x4} at B, and {x5, x6} at C. Now place {y1, y2, . . . , y6} at the centre of the circle. Then the best lower bound of ILByj = 6 occurs when yj plays two-game road trips against {x1, x2}, {x3, x4}, {x5, x6} in pairs rather than in three-game road trips such as {x1, x2, x3} and {x4, x5, x6}, which has total distance 4+2 \u221a 3 > 6. And clearly the best lower bound ILBxi = 4 occurs when xi plays three-game road trips against the teams in Y , making just two trips to the centre of the circle.\nTable 7 provides an distance-optimal schedule which is uniform, thus proving that for this simple example, the solution to BTTP is the same as BTTP*. However, note that unlike our proof of Theorem 1, in this 12-team scenario, the best schedule requires 102 total trips, six more than the fewest possible number of total trips.\nHaving provided simple illustrations for n = 3 and n = 6, we now analyze BTTP for two professional sports leagues, namely the Nippon Professional Baseball league (with n = 6) and the National Basketball Association (with n = 15)."}, {"heading": "4. Japanese Baseball", "text": "Nippon Professional Baseball (NPB) is Japan\u2019s largest professional sports league. In the NPB, the teams are split into two leagues of six teams, with each team playing 120 intraleague and 24 inter-league games during the regular season. The intra-league problem was analyzed recently by the authors (Hoshino & Kawarabayashi, 2011c), where we developed a multi-round generalization of the TTP based on Dijkstra\u2019s shortest path algorithm and applied it to produce a distance-optimal schedule reducing the total travel distance by over 60000 kilometres (a 25% reduction) as compared to the 2010 NPB intra-league schedule (Hoshino & Kawarabayashi, 2011d). Given that Japan is a small island country, a 60000 kilometre reduction represents a significant amount.\nWe now consider the inter-league problem, where the six teams in the NPB Pacific League each play four games against all six teams in the NPB Central League, with one two-game set played at the home of the Pacific League team, and the other two-game set played at the home of the Central League team. All inter-league games take place during a five-week stretch between mid-May and mid-June, with no intra-league games occurring during that period. Thus, the NPB inter-league scheduling problem is precisely BTTP, for the case n = 6.\nThe locations of each team\u2019s home stadium is marked in Figure 5. For readability, we label each team as follows: the Pacific League teams are p1 (Fukuoka), p2 (Orix), p3 (Saitama), p4 (Chiba), p5 (Tohoku), p6 (Hokkaido), and the Central League teams are c1 (Hiroshima), c2 (Hanshin), c3 (Chunichi), c4 (Yokohama), c5 (Yomiuri), and c6 (Yakult). The actual 12\u00d7 12 NPB distance matrix is provided in Appendix B.\nWe now solve BTTP for the NPB, producing an inter-league schedule requiring 42950 kilometres of total travel, representing a 16% reduction compared to the 51134 kilometres traveled by these teams during the 2010 inter-league schedule (Hoshino & Kawarabayashi, 2011a). To accomplish this, we present two powerful reduction heuristics. To motivate these heuristics, we first require several key definitions.\nFor each t \u2208 X \u222a Y , let St be the set of possible schedules that can be played by team t satisfying the at-most-three and each-venue constraints. Let \u03c0t \u2208 St be a possible schedule for team t. For each \u03c0t, we just list the opponents of the six road sets, and ignore the home sets, since we can determine the total distance traveled by team t just from the road sets. To give an example, below is a feasible schedule \u03c0x1 \u2208 Sx1 for the case n = 6:\n1 2 3 4 5 6 7 8 9 10 11 12\nx1 y1 y6 y y y3 y5 y4 y y y y2 y\nIn the following team schedule \u03c0x1 , each y represents a home set played by x1 against a unique opponent in Y . Note that \u03c0x1 satisfies the at-most-three and each-venue constraints.\nLet \u03a6 = (\u03c0x1 , \u03c0x2 , . . . , \u03c0xn , \u03c0y1 , \u03c0y2 , . . . , \u03c0yn), where \u03c0t \u2208 St for each t \u2208 X \u222a Y . Since road sets of X correspond to home sets of Y and vice-versa, it suffices to list just the time slots and opponents of the n road sets in each \u03c0t, since we can then uniquely determine the full schedule of 2n sets for every team t \u2208 X\u222aY , thus producing an inter-league tournament\nschedule \u03a6. We note that \u03a6 is a feasible solution to BTTP iff each team plays a unique opponent in every time slot, and no team schedule \u03c0t violates the no-repeat constraint. In this section, we will frequently refer to team schedules \u03c0t and tournament schedules \u03a6. From the context it will be clear whether the schedule is for an individual team t \u2208 X \u222a Y , or for all 2n teams in X \u222a Y .\nAs before, define ILBt to be the individual lower bound of team t, the minimum possible distance that can be traveled by team t in order to complete its 2n sets.\nFor each \u03c0t \u2208 St, let d(\u03c0t) be the integer for which d(\u03c0t)+ILBt equals the total distance traveled by team t when playing the schedule \u03c0t. By definition, d(\u03c0t) \u2265 0.\nFor each \u03a6 = (\u03c0x1 , . . . , \u03c0xn , \u03c0y1 , . . . , \u03c0yn), define\nd(\u03a6) = \u2211\nt\u2208X\u222aY d(\u03c0t).\nSince \u2211\nILBt is fixed, the optimal solution to BTTP is the schedule \u03a6 for which d(\u03a6) is minimized. This is the motivation for the function d(\u03a6).\nFor each subset S\u2217t \u2286 St, define the lower bound function\nB(S\u2217t ) = min \u03c0t\u2208S\u2217t d(\u03c0t).\nIf S\u2217t = St, then B(S \u2217 t ) = 0 by the definition of ILBt. For each subset S \u2217 t , we define |S\u2217t | to be its cardinality. For example, consider the n = 6 instance in Table 7, where we located the six teams\nin league X so that two teams were assigned to each vertex of an equilateral triangle. As mentioned at the end of Section 3, ILBy1 = 6, with equality occurring iff y1 \u2208 Y plays two-set road trips against {x1, x2}, {x3, x4}, and {x5, x6}. Now let S\u2217y1 be the restriction of Sy1 to the subset of schedules where y1 starts with three consecutive road sets against teams x1, x2, and x3. Then any such schedule must have total distance \u2265 4+2 \u221a 3, implying\nthat B(S\u2217y1) = 4 + 2 \u221a 3\u2212 ILBy1 = 2 \u221a 3\u2212 2 > 0.\nIf n is a multiple of 3, we define for each team the set Rt3 as the subset of schedules in St for which the n road sets occur in n 3 blocks of three (i.e., team t takes n 3 three-set road trips). For example, in Table 5 (which has n = 18), every team t plays a schedule \u03c0t \u2208 Rt3. Finally, we define \u0393 to be a global constraint that fixes some subset of matches, and S\u0393t to be the subset of schedules in St which are consistent with that global constraint. For example, if \u0393 is the simple constraint that forces y2 to play against x1 at home in time slot 3, then S\u0393x1 would only consist of the team schedules where slot 3 is a road set against y2. If \u0393 is a much more complex global constraint (e.g. where the number of fixed matches is large), then each |S\u0393t | will be significantly less than |St|.\nTo illustrate this concept, consider the above n = 6 instance and the global constraint \u0393 that y1 starts with three consecutive road sets against teams x1, x2, and x3 (in that order). One can show that there are only 34 valid home-road patterns in Sy1 , including RRR-HHH-RRR-HHH and RRR-H-R-HH-R-HH-R-H. For each home-road pattern, there are 3! = 6 ways to assign {x4, x5, x6} to the last three road sets. Thus, |S\u0393y1 | = 34\u00d73! = 204, which is significantly less than |Sy1 | which can be shown to equal 616 \u00d7 6! = 443520.\nThis simple notion of global constraints inspires our first result, a powerful reduction heuristic that drastically cuts down the computation time.\nProposition 1. Let M be a fixed positive integer. For any global constraint \u0393, define for each t \u2208 X \u222a Y ,\nZt =\n{\n\u03c0t \u2208 S\u0393t : d(\u03c0t) \u2264 M +B(S\u0393t )\u2212 \u2211 u\u2208X\u222aY B(S\u0393u )\n}\n."}, {"heading": "If \u03a6 = (\u03c0x1 , . . . , \u03c0xn , \u03c0y1 , . . . , \u03c0yn) is a feasible tournament schedule consistent with \u0393 so", "text": "that d(\u03a6) \u2264 M , then for each t \u2208 X \u222a Y , team t\u2019s schedule \u03c0t appears in Zt.\nProof. Consider all tournament schedules consistent with \u0393. If there is no \u03a6 with d(\u03a6) \u2264 M , then there is nothing to prove. So assume some schedule \u03a6 satisfies d(\u03a6) \u2264 M . Letting Q = \u2211\nu\u2208X\u222aY B(S \u0393 u ), we have M \u2265 d(\u03a6) =\n\u2211 u\u2208X\u222aY d(\u03c0u) \u2265 \u2211 u\u2208X\u222aY B(S \u0393 u ), so that\nM \u2265 Q. If \u03c0t \u2208 Zt, then Zt \u2286 S\u0393t implying that d(\u03c0t) \u2265 B(S\u0393t ). Now suppose there exists some v \u2208 X \u222a Y with \u03c0v /\u2208 Zv. Since \u03c0v is consistent with \u0393, \u03c0v \u2208 S\u0393v and d(\u03c0v) > M +B(S\u0393v )\u2212Q \u2265 B(S\u0393v ). This is a contradiction, as\nd(\u03a6) = d(\u03c0v) + \u2211\nu\u2208X\u222aY,u 6=v d(\u03c0u)\n> (M +B(S\u0393v )\u2212Q) + \u2211 u\u2208X\u222aY,u 6=v B(S\u0393u )\n= (M +B(S\u0393v )\u2212Q) + (Q\u2212B(S\u0393v )) = M.\nHence, if \u03a6 = (\u03c0x1 , . . . , \u03c0xn , \u03c0y1 , . . . , \u03c0yn) is a feasible tournament schedule consistent with \u0393 so that d(\u03a6) \u2264 M , then \u03c0t \u2208 Zt for all t \u2208 X \u222a Y .\nProposition 1 shows how to perform some reduction prior to propagation, and may be applicable to other problems. To apply this proposition, we will reduce BTTP to k scenarios where in each scenario the six home sets for four of the Pacific League teams are pre-determined. Expressing these scenarios as the global constraints \u03931,\u03932, . . . ,\u0393k, each \u0393i fixes 24 of the 72 total matches.\nFor every \u0393i, we determine Zcj for the Central League teams and by setting a low threshold M , we show that each |Zcj | is considerably smaller than |S\u0393cj |, thus reducing the search space to an amount that can be quickly analyzed. From there, we run a simple six-loop that generates all 6-tuples (\u03c0c1 , \u03c0c2 , \u03c0c3 , \u03c0c4 , \u03c0c5 , \u03c0c6) that can appear in a feasible schedule \u03a6 with d(\u03a6) \u2264 M . By Proposition 1, each \u03c0cj \u2208 Zcj for 1 \u2264 j \u2264 6. From this list of possible 6-tuples, we can quickly find the optimal schedule \u03a6 which corresponds to the solution to BTTP.\nWe now present a result that works only for the case n = 6, when two teams from one league are located quite far from the other 10 teams, forcing the distance-optimal schedule \u03a6 to have a particular structure.\nProposition 2. Let M be a fixed positive integer, and define S\u2217t = {\u03c0t \u2208 St : d(\u03c0t) \u2264 M}. Suppose there exist two teams xi, xj \u2208 X = {x1, x2, . . . , x6} for which S\u2217xi \u2286 R xi 3 , S \u2217 xj\n\u2286 Rxj3 , and for each team yk \u2208 Y , every schedule in S\u2217yk has the property that yk plays their road sets against xi and xj in two consecutive time slots. If \u03a6 = (\u03c0x1 , . . . , \u03c0x6 , \u03c0y1 , . . . , \u03c0y6) is a feasible tournament schedule with d(\u03a6) \u2264 M where each \u03c0t \u2208 S\u2217t , then the team schedules\n\u03c0xi and \u03c0xj both have the home-road pattern HH-RRR-HH-RRR-HH; moreover, each team\u2019s six home slots must have the following structure for some permutation (a, b, c, d, e, f) of {1, 2, 3, 4, 5, 6}:\n1 2 3 4 5 6 7 8 9 10 11 12\nxi ya yb y y y yc yd y y y ye yf xj yb ya y y y yd yc y y y yf ye\nProof. We first note that if \u03c0xi and \u03c0xj have the above structure, they satisfy all the given conditions since \u03c0xi \u2208 Rxi3 , \u03c0xj \u2208 R xj 3 , and every team yk \u2208 Y plays road sets against xi and xj in two consecutive time slots. For example, yd plays road sets against xj in slot 6 and against xi in slot 7. We now prove that \u03c0xi and \u03c0xj must have this structure.\nFor each team xt \u2208 X and time slot s \u2208 [1, 12], define O(xt, s) to be the opponent of team xt in set s. We define O(xt, s) only when xt is playing at home; for the sets when xt plays on the road, O(xt, s) is undefined.\nSince \u03c0xi \u2208 S\u2217xi and S\u2217xi \u2286 R xi 3 , there are four possible cases to consider:\n(1) xi plays set 1 at home, and sets 2 to 4 on the road.\n(2) xi plays sets 1 and 2 at home, and sets 3 to 5 on the road.\n(3) xi plays sets 1 to 3 at home, and sets 4 to 6 on the road.\n(4) xi plays sets 1 to 3 on the road, and set 4 at home.\nWe examine the cases one by one. In each, suppose there exists a feasible schedule \u03a6 satisfying all the given conditions. We finish with case (2).\nIn (1), let O(xi, 1) = ya. Then O(xj , 2) = ya, since ya must play road sets against xi and xj in consecutive time slots. Since \u03c0xj \u2208 R xj 3 and xj plays at home in set 2, xj must also play at home in set 1. Thus, O(xj, 1) = yb for some yb, which forces O(xi, 2) = yb. This is a contradiction as xi plays set 2 on the road.\nIn (3), let O(xi, 1) = ya, O(xi, 2) = yb, and O(xi, 3) = yc. Then O(xj, 2) = ya and O(xj , 4) = yc. Either O(xj , 1) = yb or O(xj , 3) = yb. In either case, we violate the at-mostthree constraint or the condition that \u03c0xj \u2208 R xj 3 .\nIn (4), team xi starts with a three-set road trip. In order to satisfy the at-most-three constraint, \u03c0xi must have the pattern RRR-HHH-RRR-HHH. Then this reduces to case (3), as we can read the schedule \u03a6 backwards, letting O(xi, 12) = ya, O(xi, 11) = yb, O(xi, 10) = yc, and applying the argument in the previous paragraph.\nIn (2), let O(xi, 1) = ya and O(xi, 2) = yb. Then O(xj , 2) = ya and O(xj , 1) = yb. If O(xj , 3) = yc for some yc, then O(xi, 4) = yc, forcing xi to play a single road set in slot 3. Thus, xj must play on the road in set 3, and therefore also in sets 4 and 5. Hence, both xi and xj start with two home sets followed by three road sets. Since this is the only case remaining, by symmetry xi and xj must end with two home sets preceded by three road sets. Thus, these two teams must have the pattern HH-RRR-HH-RRR-HH.\nIn order for each yk to play their road sets against xi and xj in two consecutive time slots, we must have O(xi, 6) = O(xj, 7), O(xi, 7) = O(xj , 6), O(xi, 11) = O(xj , 12), and O(xi, 12) = O(xj , 11). This completes the proof.\nWe will use Proposition 2 to solve BTTP, since teams p5 and p6 are located quite far from the other ten teams (see Figure 5). This heuristic of isolating two teams and finding its common structure significantly reduces the search space and enables us to solve BTTP for the 12-team NPB in hours rather than weeks.\nBy applying these results, we do not require weeks of computation time on multiple processors. With these two heuristics, BTTP can be solved in less than ten hours on a single laptop. All of the code was written in Maple and compiled using Maplesoft 13 using a single Toshiba laptop under Windows with a single 2.10 GHz processor and 2.75 GB RAM.\nTable 8 presents an inter-league tournament schedule \u03a6 that is a solution to BTTP with d(\u03a6) = (0 + 4 + 0 + 0 + 1 + 1) + (51 + 9 + 31 + 58 + 19 + 13) = 187.\nIn Table 8, we see that only seven of the twelve teams satisfy \u03c0t \u2208 Rt3 , namely c1 and all six of the Pacific League teams. However, every Central League team in this schedule plays road sets against p5 and p6 in consecutive time slots. This explains why each d(cj) in \u03a6 is small.\nWe claim that \u03a6 is an optimal solution, with total distance d(\u03a6) + \u2211\nILBt = 187 + 42763 = 42950. To prove this, we set M = 187. Define S\u2217t = {\u03c0t \u2208 St : d(\u03c0t) \u2264 M}, from which we determine that S\u2217p5 \u2286 R p5 3 and S \u2217 p6\n\u2286 Rp63 . Define Tci \u2286 S\u0393ci to be the subset of schedules for which ci does not play their road sets against p5 and p6 in two consecutive time slots. From this, we can show that B(Tc3) = 153, and that B(Tcj) > M = 187 for j \u2208 {1, 2, 4, 5, 6}. We claim that if \u03a6 satisfies d(\u03a6) \u2264 187, then \u03c0cj /\u2208 Tcj for all 1 \u2264 j \u2264 6.\nIt suffices to prove the claim for j = 3. There are 144 schedules in Tc3 , all of which belong to the set Rc33 . For example, one such schedule \u03c0c3 is\n1 2 3 4 5 6 7 8 9 10 11 12\nc3 p p2 p1 p6 p p p p3 p4 p5 p p\nSuppose there exists a tournament schedule \u03a6 with d(\u03a6) \u2264 187 and \u03c0c3 \u2208 Tc3 . There are nine possible home-road patterns for \u03c0p5 \u2208 Rp53 (e.g. HHH-RRR-H-RRR-HH and H-RRRHHH-RRR-HH), each of which gives rise to 6! = 720 possible orderings for the six home\nsets. Thus, there are 9\u00d7720 = 6480 ways we can select the time slots and opponents for the six home sets in \u03c0p5 . Similarly, there are 6480 ways to do this for \u03c0p6 . A simple Maplesoft procedure shows that only 140 of the 64802 possible pairs (\u03c0p5 , \u03c0p6) are consistent with at least one \u03c0c3 \u2208 Tc3 .\nFor each of these 140 cases, define the global constraints \u03931,\u03932, . . . ,\u0393140, obtained from fixing the twelve home sets in {\u03c0p5 , \u03c0p6}. For each \u0393k, define for each j \u2208 {1, 2, 4, 5, 6} the set Zcj = {\u03c0cj \u2208 S\u0393kcj : d(\u03c0cj ) \u2264 M \u2212 B(Tc3) = 34}. Then we run our six-loop to compute all possible 6-tuples (\u03c0c1 , \u03c0c2 , . . . , \u03c0c6) satisfying the given conditions with \u03c0c3 \u2208 Tc3 and \u03c0cj \u2208 Zcj for j 6= 3. Within twenty minutes, Maplesoft solves all 140 cases and returns no feasible 6-tuples that can appear in a schedule \u03a6 with d(\u03a6) \u2264 187.\nTherefore, in \u03a6, each cj must play road sets against p5 and p6 in consecutive time slots. Thus, teams p5 and p6 satisfy the conditions of Proposition 2. Hence, the home-road pattern of \u03c0p5 and \u03c0p6 in \u03a6 must be HH-RRR-HH-RRR-HH.\nWithout loss, assume that p5 plays a home set against c1 within the first six time slots; otherwise we can read the schedule backwards by symmetry. Thus, there are 6!2 = 360 ways to assign opponents to the six home sets in \u03c0p5 . By Proposition 2, each of these 360 arrangements uniquely determines the six home sets in \u03c0p6 .\nA short calculation shows that in order for d(\u03a6) \u2264 M = 187, teams p1 and p3 must also play their six road sets in two blocks of three. In other words, \u03c0p1 \u2208 Rp13 and \u03c0p3 \u2208 R p3 3 . As mentioned earlier, there are 9\u00d7 6! possible ways to select the six home sets for each of \u03c0p1 and \u03c0p3 .\nThus, there are 360 \u00d7 (9 \u00b7 6!) \u00d7 (9 \u00b7 6!) ways we can select the 24 home sets played by the teams in {p1, p3, p5, p6}. We eliminate all scenarios in which some pi and pj play against some ck in the same time slot. For the possibilities that remain, we create a global constraint to apply Proposition 1.\nLet {\u03931,\u03932, . . . ,\u0393k} be the complete set of global constraints derived from the above process, where each \u0393i fixes 24 of the 72 matches, corresponding to the home sets of {p1, p3, p5, p6}. The reduction heuristic of Proposition 1 allows us to quickly verify the existence of feasible tournament schedules \u03a6 consistent with \u0393i for which d(\u03a6) \u2264 M .\nTo explain this procedure, let us illustrate with the inter-league schedule in Table 8. Let \u0393 be the constraint that fixes the 24 home sets of teams p1, p3, p5, and p6 in that table. Then S\u0393c5 , defined as the subset of schedules in Sc5 consistent with \u0393, consists only of team schedules \u03c0c5 for which c5 plays road sets against p1 in slot 2, p3 in slot 7, p5 in slot 11, and p6 in slot 12.\nWe find that there are only 11 schedules \u03c0c5 \u2208 S\u0393c5 with d(\u03c0c5) \u2264 M that are consistent with \u0393. Furthermore, each d(\u03c0c5) \u2208 {19, 41, 46, 48}, implying that B(S\u0393c5) = 19. Similarly, we can calculate the other values of B(S\u0393cj).\nWe find that \u22116 j=1B(S \u0393 pj ) = 0 and \u22116 j=1B(S \u0393 cj ) = 51 + 9 + 31 + 58 + 19 + 13 = 181, implying that Zc5 = {\u03c0c5 \u2208 S\u0393c5 : d(\u03c0c5) \u2264 187 + 19\u2212 181 = 25}. Hence, Zc5 reduces to just the two schedules with d(\u03c0c5) = 19, including the team schedule \u03c0c5 in Table 8.\nBy Proposition 1, any schedule \u03a6 consistent with \u0393 satisfying d(\u03a6) \u2264 M must have the property that \u03c0t \u2208 Zt for each team t. Since each |Zcj | is small, the calculation is extremely fast. Of course, if any |Zcj | = 0, then no schedule \u03a6 can exist.\nThis algorithm, based on Propositions 1 and 2, runs in 34716 seconds in Maplesoft (just under 10 hours). Maplesoft generates zero inter-league schedules with d(\u03a6) < 187 and 14\ninter-league schedules with d(\u03a6) = 187, including the schedule given in Table 8. Since we made the assumption that p5 plays a home set against c1 within the first six time slots, there are actually twice as many distance-optimal schedules by reading each schedule \u03a6 backwards.\nIn each of the 28 distance-optimal schedules \u03a6, we find that (d(\u03c0p1), d(\u03c0p2), . . . , d(\u03c0p6)) = (0, 4, 0, 0, 1, 1) and (d(\u03c0c1), d(\u03c0c2), . . . , d(\u03c0c6)) = (51, 9, 31, 58, 19, 13).\nTherefore, we have proven that Table 8 is an optimal inter-league schedule for the NPB, reducing the total travel distance by 8184 kilometres, or 16.0%, compared to the 2010 NPB schedule."}, {"heading": "5. American Basketball", "text": "The National Basketball Association (NBA) is one of the world\u2019s most lucrative sports leagues, with over four billion dollars in annual revenue, and an average franchise value of 400 million dollars. There are 15 teams in the Western Conference and 15 teams in the Eastern Conference. Every NBA team plays 82 regular-season games, of which 30 are inter-league (with one home game and one away game against each of the 15 teams from the other conference.) The geographic location of each team is provided in Figure 6.\nGiven that NBA teams play inter-league games, we consider BTTP for this league, where we attempt to find a distance-optimal inter-league tournament. In this theoretical problem, we will assume that all inter-league games take place during a consecutive stretch in the regular season, as is done currently in the Japanese NPB. We will also enforce all the constraints of BTTP, including no team having a home stand or road trip lasting more than 3 games. We note that these strict conditions are not part of the NBA scheduling requirement, as evidenced by the San Antonio Spurs playing 6 consecutive home games followed immediately by 8 consecutive road games during the 2009-10 regular season. Furthermore, we will require that our inter-league schedule be compact, i.e., having each team play one game in each time slot. Of course, this compactness condition is not part of a typical NBA schedule, as one team might play five games by the time another team has played just two.\nWe determine the 30 \u00d7 30 NBA distance matrix from an online website1 that lists the flight distance (in statute miles) between each pair of major cities in North America. This matrix is found in Appendix B.\nUnlike the 12-team NPB where we could solve BTTP, it appears highly unlikely that we can solve this problem for the 30-team NBA. Nonetheless, we can generate an inter-league tournament whose total distance is close to the trivial lower bound of \u2211\nILBt, by grouping each league\u2019s fifteen teams into five triplets so that the travel distance of each team t is extremely close to ILBt, the minimum weight of a t-rooted 4-cycle-cover. From this, we construct a uniform tournament, i.e., a feasible solution to BTTP*, where each Western Conference team alternates by playing three away games followed by three home games.\nGiven the geographic location of the 30 teams, it is easy to show that each team\u2019s ILBt occurs when playing the fifteen away games in five groups of three. We note that this is not always the case; to give a concrete example, consider a variant of the scenario we presented at the end of Section 3. Let points X,Y,Z be equally spaced around a unit circle, so that 4XY Z is equilateral. Place {e1, e2} at X, {e3, e4} at Y , and {e5, e6} at Z. Now place {w, e7, e8, . . . , e15} at the centre of the circle. Then the best lower bound of ILBw = 6 occurs when w plays two-game road trips against {e1, . . . , e6} in pairs rather than threegame road trips like {e1, e2, e3} and {e4, e5, e6}, which has total distance 4 + 2 \u221a 3 > 6. However, for the NBA distance matrix, each team\u2019s ILBt occurs when that team has five road trips, where in each trip that team plays three opponents located close to each other.\nThus, for each team wi, there exists some permutation \u03c0 for which the lower bound ILBwi is attained by playing away games against the fifteen Eastern Conference teams in the order e\u03c0(1), e\u03c0(2), . . . , e\u03c0(15). Note that for this permutation, the total distance traveled by wi is\nILBwi =\n5 \u2211\nj=1\n{Dwi,e\u03c0(3j\u22122) +De\u03c0(3j\u22122),e\u03c0(3j\u22121) +De\u03c0(3j\u22121) ,c\u03c0(3j) +De\u03c0(3j),wi}.\nThe five triplets {{e\u03c0(3j\u22122), e\u03c0(3j\u22121), e\u03c0(3j)} : j = 1, 2, . . . , 5} can be permuted in 5! ways without changing the total distance. Also, within each triplet, we can change the order of the first and third element while retaining the same total. Thus, we can compute ILBwi from a simple enumeration of 15!\n5!\u00b725 cases, which can be done in minutes using Maplesoft. From this, we calculate ILBt for each team t, giving LLBW \u2265 \u2211\nt\u2208W ILBt = 251795. Similarly, we have LLBE \u2265 \u2211\nt\u2208E ILBt = 266137, and so TLB \u2265 LLBW + LLBE \u2265 517932. In nearly every case, the bounds ILBwi and ILBei are attained by selecting the road trips as indicated in Figure 7, corresponding to the minimum-weight triangle packing for each league. For example, in this minimum-weight triangle packing, every Eastern Conference team makes just one trip to the northwest, to play Portland, Golden State, and Sacramento in some order. Similarly, every Western Conference team makes just one trip to the southeast, to play Atlanta, Orlando, and Miami in some order. We note the natural connection between minimum-weight triangle packings and minimum-weight 4-cycle-covers, remarking that the former generates an approximation for the latter.\nRe-label the fifteenWestern Conference teams so that five triplets occur side-by-side (i.e., w1 is Portland, w2 is Golden State, w3 is Sacramento), and similarly re-label the Eastern\n1. http://www.savvy-discounts.com/discount-travel/JavaAirportCalc.html\nConference teams. Similar to our construction in Table 5, we build a tournament from the 5 \u00d7 5 = 25 pairs of inter-league triplets, where each team from one triplet plays the three teams from the other triplet in three consecutive time slots (e.g., e1 plays {w1, w2, w3}, e2 plays {w2, w3, w1} and e3 plays {w3, w1, w2}.) This construction produces a schedule where the Eastern Conference teams travel 286683 miles and the Western Conference teams travel 258443 miles, for a total of 545126 miles.\nWe can improve this bound slightly by noting that the away teams are not forced to travel according to the triplets given in Figure 7. Specifically, suppose we are considering the road trips for the Eastern Conference. Let the triplets be {{e\u03c0(3j\u22122), e\u03c0(3j\u22121), e\u03c0(3j)} : j = 1, 2, . . . , 5}, for some permutation \u03c0. Then each triplet {e\u03c0(3j\u22122), e\u03c0(3j\u22121), e\u03c0(3j)} travels west for three-game road trips against each of {w1, w2, w3}, {w4, w5, w6}, . . . , {w13, w14, w15}. Examining all 15!\n5!\u00b725 non-equivalent possibilities for \u03c0, we show that the best permutation is \u03c0 = (1, 6, 12, 2, 8, 13, 3, 7, 11, 4, 10, 14, 5, 9, 15), so that the teams in {e1, e6, e12} play their first three games on the road against each of {w1, w2, w3}, the teams in {e2, e8, e13} play their first three games on the road against each of {w4, w5, w6}, and so on. In this optimal schedule, the Eastern Conference teams travel a total of 280294 miles. Similarly, in the best possible case, the Western Conference teams travel a total of 257497 miles.\nFrom this, we produce Table 9, a uniform inter-league tournament with total distance 280294 + 257497 = 537791 miles, just 3.8% more than the trivial lower bound of \u2211\nILBt. The labeling of the 30 teams (e.g. PT = Portland Trailblazers, MB = Milwaukee Bucks) is given in Appendix B.\nWhile we are certain that the trivial lower bound of \u2211\nILBt cannot be achieved for either the BTTP or BTTP*, we conjecture that the 3.8% figure can be reduced using more sophisticated techniques. But how close can we get? We leave this as a challenge for the interested reader.\nProblem 1. Determine better (best?) bounds for BTTP and BTTP*, for the 30\u00d7 30 NBA distance matrix."}, {"heading": "6. Conclusion", "text": "In this paper, we introduced the Bipartite Traveling Tournament Problem and applied it to two professional sports leagues in Japan and North America, illustrating the richness and complexity of bipartite tournament scheduling.\nIn Section 4, we introduced two heuristics that enabled us to solve BTTP for the n = 6 NPB. While Proposition 2 is only applicable for certain 12-team configurations satisfying a specific geometric property, we note that Proposition 1 is a general technique that can be applied to other scheduling problems. Our method of \u201creduction prior to propagation\u201d breaks a complex problem into a large number of scenarios, and sets up each scenario as a global constraint to reduce the search space. We are confident that Proposition 1 can be applied to more complicated problems in sports scheduling.\nIn Section 5, we determined an algorithm that produced an approximate solution to BTTP for the n = 15 NBA. By finding minimum-weight rooted 4-cycle-covers, we determined a trivial lower bound to BTTP, from which our method of creating a uniform schedule based on the minimum-weight triangle packing generated a close-to-optimal feasible solution. For the NBA inter-league problem, this process produced an optimality gap of just 3.8%. We are hopeful that these ideas can be abstracted and refined further, leading to more powerful tools to tackle even harder problem instances.\nPerhaps there are other sports leagues for which BTTP is applicable, such as in professional hockey and football. We can also expand our analysis to model tripartite and multipartite tournament scheduling, where a league is divided into three or more conferences. A specific example of this is the newly-created Super 15 Rugby League, consisting of five teams from South Africa, Australia, and New Zealand. In addition to intra-country games, each team plays four games (two home and two away) against teams from each of the other two countries. It would be interesting to see whether we can determine the distance-optimal tripartite tournament schedule using the methods developed in this paper.\nWe conclude by motivating several interesting questions, including those dealing with geometric probability and extremal combinatorics, and leave them as open problems for the interested reader.\nOur solution to the non-uniform BTTP required 10 hours of computations. Furthermore, we were only able to solve BTTP by applying Proposition 2, whose requirements would not hold for a randomly-selected 12 \u00d7 12 distance matrix. As a result, we require a more sophisticated technique that improves upon our two heuristics, perhaps using methods in constraint programming and integer programming, such as a hybrid CP/IP. We wonder if there exists a general algorithm that would solve BTTP given any distance matrix, for \u201csmall\u201d values of n such as n = 6, n = 7, and n = 8. We pose this as an open problem.\nProblem 2. Develop a computational procedure (or algorithm) that can routinely solve BTTP and BTTP* instances with n \u2265 6.\nAt the end of Section 3, we presented a simple example (see Figure 4) to illustrate the difference between BTTP and BTTP* for the case n = 3. We located the six points to form two sets of Pythagorean triangles, and showed that the solutions to the two problems had total distance 15a + 3b + 5c and 16a + 4b + 4c, respectively. If (a, b, c) = (3, 4, 5), then the tournament lower bounds are 82 and 84, respectively. In other words, by relaxing the uniformity requirement, we can reduce the optimal travel distance from 84 to 82, an improvement of 2.38%. Using elementary calculus, we can show that for this particular choice of six points, the percentage reduction function is at most 2.39%, with equality iff b a = 5+3 \u221a 5\n8 . However, if we selected a different set of six points, could we achieve a better percentage reduction? This motivates the following question:\nProblem 3. Consider six points X = {x1, x2, x3} and Y = {y1, y2, y3} in the Cartesian plane. Let D\u2217 and D be the tournament lower bounds of BTTP* and BTTP, respectively. Determine the smallest constant c for which D\u2217 \u2264 c \u00b7D for all possible selections of the six points in X \u222a Y .\nOne may conjecture that in order to minimize the tournament lower bound, we must minimize the total number of trips taken by the 2n teams. But as we saw in Table 6, this conjecture is false for n = 3, as we located six points for which the solution to BTTP* requires 24 trips, while the solution to BTTP requires 25 trips. However, there are numerous examples (e.g. our scenario in Table 7) where the 2n points can be located so that the solution to BTTP* matches that of BTTP. This motivates the following question: given a random selection of 2n points, what is the probability that the solutions to BTTP* and BTTP are identical?\nTo illustrate, consider the case n = 3. We can quickly show that there exist 60 \u00d7 29 = 30720 feasible inter-league tournaments, of which 60 \u00d7 23 = 480 are uniform. We run a simulation on Maplesoft, where in each scenario, we randomly select six points (x, y) in the Cartesian plane, calculate the 15 \u00d7 1 column vector of pairwise distances, and apply it to the set of feasible inter-league tournaments to determine the distance-optimal schedule. We run the simulation 100000 times, where in each scenario, we note the number of trips taken in the optimal solution. The results appear in Table 10.\nWe note that the sum total is not 100000, as there were 113 scenarios that ended in a tie (e.g. there were two tournaments, one with 24 trips and another with 26 trips, both with equal total distance after rounding to two decimal places.)\nAs expected, in the majority of scenarios, the six points X \u222a Y had the property that the distance-optimal bipartite tournament involved 24 trips, where each team played three consecutive road games. Without much difficulty, one can show (Hoshino & Kawarabayashi, 2011a) that this forces the home game slots to be uniform, i.e., all the teams in each league must play their home games at the same time, and so each team inX plays three consecutive home games followed by three consecutive road games, or vice-versa. Therefore, in 55.8% of our randomly-selected scenarios, the solution to BTTP* is identical to the solution to BTTP.\nOur simulation motivates an interesting question in geometric probability. Given that the 2n points of X \u222a Y are chosen at random, what is the probability that the tournament lower bound is achieved with a schedule consisting of t trips? We formally define the question below and present it as an open problem for the reader.\nProblem 4. Let the 2n points X = {x1, x2, . . . , xn} and Y = {y1, y2, . . . , yn} be randomly selected in the Cartesian plane. Let t be the number of trips taken in a distance-optimal solution of BTTP, with the teams located at X and Y . Determine the value Pn(t) for each t, where Pn(t) represents the probability that the distance-optimal tournament involves the 2n teams taking exactly t trips.\nFor the case n = 3, it appears that Pn(t) = 0 for all t \u2264 23 and t \u2265 28. While it is trivial to show that we must have at least 24 trips, we do not have a formal proof that there cannot exist a selection of six points X \u222a Y in the plane for which the solution to BTTP has more than 27 trips. If we could prove that for each n, the number of total trips in a distance-optimal solution is bounded above by some function f(n), then this would enable us to solve BTTP without having to enumerate all feasible schedules, i.e., a small fraction would suffice. Such a result would certainly aid in solving BTTP for larger n, where a full enumeration of all feasible tournament schedules is too computationally laborious. This motivates our final problem.\nProblem 5. Consider a 2n-team bipartite tournament, with the teams located at X = {x1, x2, . . . , xn} and Y = {y1, y2, . . . , yn}. For each n, determine the smallest integer f(n)\nfor which the solution to BTTP involves the teams taking at most f(n) trips, regardless of where the 2n teams are located."}, {"heading": "Acknowledgments", "text": "This research has been partially supported by the Japan Society for the Promotion of Science (Grant-in-Aid for Scientific Research), the C & C Foundation, the Kayamori Foundation, and the Inoue Research Award for Young Scientists."}, {"heading": "Appendix A.", "text": "We provide the proof of our three lemmas (from Section 3), beginning with Lemma 1.\nProof. First, we prove (i) \u2192 (ii). If S is satisfiable, then there exists a function \u03c6 that is a valid truth assignment, i.e., a function for which \u03c6(ui) \u2208 {TRUE,FALSE} for each 1 \u2264 i \u2264 l that ensures that each clause Cj evaluates to TRUE for all 1 \u2264 j \u2264 2k. From \u03c6, we build a p-rooted 4-cycle-cover of KS with exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles.\nWe first identify the 3k (p, a, u, b, p)-cycles. For each 1 \u2264 i \u2264 l, if \u03c6(ui) is FALSE, then select all 4-cycles of the form p-ai,r-ui,r-bi,r-p, for each r = 1, 2, . . . , r(i). And if \u03c6(ui) is TRUE, then select all 4-cycles of the form p-ai,r+1-ui,r-bi,r-p, for each r (where ai,r(i)+1 = ai,1). Repeating this construction for each i, we produce 3k (p, a, u, b, p)-cycles, covering the 6k vertices of A \u222aB, as well as 3k vertices of U .\nNow consider any clause Cj. Since \u03c6 is a valid truth assignment, at least one of the three literals in Cj evaluates to TRUE. In other words, there must exist some index i for which ui \u2208 Cj and \u03c6(ui) is TRUE, or ui \u2208 Cj and \u03c6(ui) is FALSE.\nIn the former case, where ui \u2208 Cj and \u03c6(ui) is TRUE, there exists some index r for which ui,r-cj is an edge of the gadget graph GS . Then p-ui,r-cj-dj -p is a (p, u, c, d, p)-cycle. Note that ui,r has not been previously selected in a (p, a, u, b, p)-cycle since \u03c6(ui) is TRUE (and so only the vertices ui,1, ui,2, . . . , ui,r(i) were covered earlier.)\nIn the latter case, where ui \u2208 Cj and \u03c6(ui) is FALSE, there exists some index r for which ui,r-cj is an edge of the gadget graph GS . Then p-ui,r-cj-dj -p is a (p, u, c, d, p)-cycle. Note that ui,r has not been previously selected in a (p, a, u, b, p)-cycle since \u03c6(ui) is FALSE (and so only the vertices ui,1, ui,2, . . . , ui,r(i) were covered earlier.)\nRepeating this construction for each j, we produce 2k (p, u, c, d, p)-cycles, covering the 4k vertices of C\u222aD. Note that no u \u2208 U can be chosen twice since each vertex in U is adjacent to only one vertex in C. Thus, these 2k cycles cover a set of 6k vertices in XS , completely disjoint from the 9k vertices covered by the previously-constructed 3k (p, a, u, b, p)-cycles. As a result, we are left with 3k vertices in XS still to be covered, specifically k vertices in each of U , E, and F . These vertices can be trivially partitioned into k (p, u, e, f, p)-cycles by just ensuring that ej and fj belong to the same cycle for each 1 \u2264 j \u2264 k. When this process is complete, our p-rooted 4-cycle-cover of KS will contain exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles.\nHaving established the first direction, we now prove (ii) \u2192 (i).\nConsider a p-rooted 4-cycle-cover of KS containing exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)-cycles, and k (p, u, e, f, p)-cycles. We prove there exists a function \u03c6 that is a satisfying truth assignment for S, where \u03c6(ui) \u2208 {TRUE,FALSE} for each 1 \u2264 i \u2264 l.\nDefine an a-b path to be any path on three vertices whose endpoints are ai,j and bi,k, for some indices i, j, k. Consider the problem of maximizing the number of vertex-disjoint a-b paths in the ith gadget. One can quickly see that a maximum packing of a-b paths occurs iff the r(i) paths are chosen in one of the following \u201ctrivial\u201d ways:\n(a) Taking all paths of the form ai,r, ui,r, bi,r for each r = 1, 2, . . . , r(i).\n(b) Taking all paths of the form ai,r+1, ui,r, bi,r for each r = 1, 2, . . . , r(i). (Note: ai,r(i)+1 = ai,1.)\nIn order for us to cover all of the vertices in A\u222aB, in each gadget we must select our a-b paths either vertically (a) or diagonally (b). Thus, in our p-rooted 4-cycle-cover containing 3k (p, a, u, b, p)-cycles, one of the following scenarios must hold true in the ith gadget:\n(1) For each r = 1, 2, . . . , r(i), vertex ui,r appears in some (p, a, u, b, p)-cycle, while no vertex ui,r appears in any (p, a, u, b, p)-cycle.\n(2) For each r = 1, 2, . . . , r(i), vertex ui,r appears in some (p, a, u, b, p)-cycle, while no vertex ui,r appears in any (p, a, u, b, p)-cycle.\nIn our given p-rooted 4-cycle-cover of KS , for each i define \u03c6(ui) = FALSE in scenario (1) and define \u03c6(ui) = TRUE in scenario (2). We claim that this is our desired function \u03c6.\nTo prove this, consider the 2k (p, u, c, d, p)-cycles in our 4-cycle-cover. For each 1 \u2264 j \u2264 2k, the (p, u, c, d, p)-cycle containing cj also contains some other vertex in U . This vertex is either ui,r or ui,r, for some indices i and r.\nIn the former case, ui,r and cj appear in the same (p, u, c, d, p)-cycle, implying that ui,rcj is an edge of the gadget graph GS , and that ui is a literal in clause Cj . Since ui,r appears in this (p, u, c, d, p)-cycle and therefore not in any (p, a, u, b, p)-cycle, this implies scenario (2) above. Since \u03c6(ui) = TRUE and ui \u2208 Cj, clause Cj evaluates to TRUE.\nIn the latter case, ui,r and cj appear in the same (p, u, c, d, p)-cycle, implying that ui,r-cj is an edge of the gadget graph GS , and that ui is a literal in clause Cj. Since ui,r appears in this (p, u, c, d, p)-cycle and therefore not in any (p, a, u, b, p)-cycle, this implies scenario (1) above. Since \u03c6(ui) = FALSE and ui \u2208 Cj , clause Cj evaluates to TRUE.\nSince Cj evaluates to TRUE for all 1 \u2264 j \u2264 2k, this implies that \u03c6 is a valid truth assignment. We conclude that S = C1 \u2227C2 \u2227 . . . \u2227 C2k is satisfiable.\nWe now prove Lemma 2.\nProof. First, we prove (i) \u2192 (ii). In a (p, a, u, b, p)-cycle, the edges au and ub appear in the gadget graph GS . Therefore, the edge weights of au and ub are both z2. From Table 3, we see that a (p, a, u, b, p)-cycle has edge weight z2 + z2 + z2 + z2 = 4z2. Similarly, a (p, u, c, d, p)-cycle has edge weight (z2+z)+z2+z2+z2 = 4z2+z, and a (p, u, e, f, p)-cycle has edge weight (z2+z)+z2+z2+z2 = 4z2 + z.\nSo if a p-rooted 4-cycle-cover of KS has exactly 3k (p, a, u, b, p)-cycles, 2k (p, u, c, d, p)cycles, and k (p, u, e, f, p)-cycles, then its total edge weight is exactly 3k(4z2) + 2k(4z2 + z) + k(4z2 + z) = k(24z2 + 3z).\nHaving established the first direction, we now prove (ii) \u2192 (i).\nLet R be a p-rooted 4-cycle-cover of KS which is the union of r cycles, with total edge weight k(24z2 +3z). Since each of the 18k vertices of XS is covered by exactly one cycle of R, the number of edges in R is |XS |+ r = 18k + r. Since no cycle has length greater than 4, we have r \u2265 18k3 = 6k. Now suppose r \u2265 6k + 1. Then there are at least 24k + 1 edges in R, all of which have weight at least z2 given the construction of our complete graph KS . Hence, the total edge weight of R is at least (24k+1)z2 = 24kz2+z2 = 24kz2+z(20k+1) > 24kz2 + 3zk = k(24z2 + 3z), a contradiction.\nIt follows that r = 6k, and that R must be the union of 6k cycles of length 4. Recall that the weight of each edge appears in the set {z2, z2 + z, z2 + 2z, 2z2 \u2212 1}. Suppose that one of these 24k edges has weight 2z2 \u2212 1. Then the total edge weight of R is at least (24k\u22121)z2+(2z2\u22121) = 24kz2+z2\u22121 = 24kz2+z(20k+1)\u22121 > 24kz2+3zk = k(24z2+3z), a contradiction. Hence, all edges of R must have weight z2, z2 + z, or z2 + 2z.\nFrom Table 3, we see that no edges p-c and p-e can appear in our 4-cycle-cover R, since all edges from p to C \u222a E have weight 2z2 \u2212 1. It follows that there must exist 2k 4-cycles of the form p-?-ci-?-p and k 4-cycles of the form p-?-ei-?-p, with each of these 2k + k = 3k 4-cycles containing a unique element from C \u222aE. Each blank space (denoted by a question mark) can only be filled with a vertex from D, F , or U , as the weights of edges ca, cb, ea, eb are all 2z2 \u2212 1 for all a \u2208 A, b \u2208 B, c \u2208 C, and e \u2208 E.\nSince edge p-u has weight z2 + z, if some vertex u \u2208 U is chosen to appear in one of these 3k 4-cycles, then this adds edge weight z2 + z, producing a 4-cycle of weight at least 4z2 + z. But if no vertices u \u2208 U are chosen to replace these blank spaces, then the cycles must be of the form p-dj-ci-dk-p or p-fj-ei-fk-p, both of which lead to the addition of at least one edge of weight 2z2 \u2212 1 (since we cannot simultaneously have i = j, i = k, and j 6= k). It follows that these 2k+k = 3k 4-cycles containing the vertices of C\u222aE must each have weight at least 4z2 + z, thus contributing at least k(12z2 +3z) to the total distance of the p-rooted 4-cycle-cover R.\nSince the given 4-cycle-cover R has weight k(24z2 +3z), this implies that the rest of the 3k 4-cycles must each have weight exactly 4z2, and that in each of the 2k cycles of the form p-?-ci-?-p and k cycles of the form p-?-ei-?-p, the total edge weight must be exactly 4z\n2 + z to ensure that the total edge weight of R does not exceed k(24z2 + 3z). This implies that in these two scenarios, we cannot replace the two blank spaces with two distinct vertices from U , as that would create a cycle of weight 4z2 + 2z. It follows that R must have 2k (p, u, c, d, p)-cycles and k (p, u, e, f, p)-cycles.\nWe are now left with 3k vertices from each of A, B, and U to form our remaining 3k 4-cycles. In order for the total edge weight of R to not exceed k(24z2 +3z) = 3k(4z2 + z)+ 12kz2, each of the remaining 12k edges must have weight z2. Since edge p-u has weight z2 + z for all u \u2208 U , the 3k remaining vertices in U must each appear in a unique 4-cycle, none adjacent to the root vertex p. It follows that the remaining 3k 4-cycles of R must all be (p, a, u, b, p)-cycles.\nWe now prove Lemma 3.\nProof. From the proof of Lemma 2, we see that ILBp = k(24z 2 + 3z), so this handles the case y = p. We now consider the case y = q.\nLet R be a q-rooted 4-cycle-cover of KS which is the union of r cycles. Suppose on the contrary that there exists an R for which its total edge weight is less than k(24z2 + 20z). We will derive a contradiction.\nSince each of the 18k vertices of XS is covered by exactly one cycle of R, the number of edges in R is |XS |+r = 18k+r. As in the previous proof, r \u2265 6k. If r \u2265 6k+1, then the total edge weight of R is at least (24k+1)z2 = 24kz2 + z2 = 24kz2 + z(20k+1) > k(24z2 +20z), a contradiction.\nHence, r = 6k, and so R must be the union of 6k cycles of length 4. Now suppose that one of these 24k edges has weight 2z2 \u2212 1. Then the total edge weight of R is at least (24k\u2212 1)z2 + (2z2 \u2212 1) = 24kz2 + z2 \u2212 1 = 24kz2 + z(20k+1)\u2212 1 > k(24z2 +20z), another contradiction.\nTherefore, no edges q-b and q-d can appear in our 4-cycle-cover R, since all edges from p to B \u222a D have weight 2z2 \u2212 1. It follows that there must exist 3k 4-cycles of the form q-?-bi-?-q and 2k 4-cycles of the form q-?-di-?-q. No blank space (denoted by a question mark) can be filled with a vertex from E or F since the weights of edges be, bf , de, df are 2z2 \u2212 1 for all b \u2208 B, d \u2208 D, e \u2208 E, and f \u2208 F .\nIt follows that the k remaining 4-cycles must include all of the k + k = 2k vertices in E \u222a F . If any of these 4-cycles contains three elements of E \u222a F (e.g. the cycle q-ei-fjek-q or the cycle q-ei-ej-fk-q), then that creates at least one edge with weight 2z\n2 \u2212 1, a contradiction. Thus, there must be exactly two vertices from E\u222aF in each of these 4-cycles. Moreover, since the weights of edges ae, af , ce, cf are all 2z2 \u2212 1 for all a \u2208 A, c \u2208 C, it follows that the final vertex of these remaining k 4-cycles must be an element of U , thus producing a 4-cycle such as q-ui,r-ej-fk-q or q-fi-uj,r-fk. From Table 3, we see that every valid cycle has edge weight \u2265 4z2 + 2z.\nHence, we must have k 4-cycles in the cycle cover R, containing all 2k vertices in E \u222aF and k vertices in U , contributing total weight \u2265 k(4z2 + 2z). Of the 3k 4-cycles of the form q-?-bi-?-q, no vertex in C can appear, as otherwise there would be an edge with weight 2z2 \u2212 1. Similarly, of the 2k 4-cycles of the form q-?-di-?-q, no vertex in A can appear.\nThus, in each of the 3k 4-cycles containing bi, the other two vertices must be selected from A\u222aU . From Table 3, we see that every such 4-cycle has edge weight \u2265 4z2 +4z. And in each of the 2k 4-cycles containing di, the other two vertices must be selected from C \u222aU . Also from Table 3, we see that every such 4-cycle has edge weight \u2265 4z2 + 3z.\nTherefore, any q-rooted 4-cycle-cover of KS has total edge weight \u2265 k(4z2 + 2z) + 3k(4z2 + 4z) + 2k(4z2 + 3z) = k(24z2 + 20z), establishing our desired contradiction. We conclude that ILBq = k(24z 2 + 20z).\nThe proof for the r-rooted 4-cycle-cover is identical. We just apply the mapping {a, b, c, d, e, f, u} \u2192 {b, a, e, f, c, d, u} to the vertices in the preceding paragraphs to reach the same conclusion. In this case, we have ILBr = k(4z\n2+3z)+3k(4z2+4z)+2k(4z2+2z) = k(24z2 + 19z)."}, {"heading": "Appendix B.", "text": "We now provide the 12\u00d7 12 distance matrix for the NPB league (from Section 4), and the 30\u00d7 30 distance matrix for the NBA (from Section 5).\nAs mentioned in Section 4, the Pacific League teams are p1 (Fukuoka), p2 (Orix), p3 (Saitama), p4 (Chiba), p5 (Tohoku), p6 (Hokkaido), and the Central League teams are c1 (Hiroshima), c2 (Hanshin), c3 (Chunichi), c4 (Yokohama), c5 (Yomiuri), and c6 (Yakult). In Table 11, we only provide Dci,cj and Dpi,pj for i < j since the case i > j is equivalent by symmetry.\nTo calculate each entry of this distance matrix, we determined how the teams travel from one stadium to another, taking into account the actual mode(s) of transportation. For example, the distance Dc2,c5 = 534 was found by adding the travel distance for each component of the trip from Hanshin\u2019s home stadium to Yomiuri\u2019s home stadium, namely the 15 km bus ride from Koshien Stadium to Shin-Osaka Station, the 515 km bullet-train ride to Tokyo Station, followed by the 4 km bus ride to the Tokyo Dome. This is a more rigorous approach that simply calculating the flight distance between the airports in Osaka and Tokyo. Noting when teams travel by airplane, bullet train, and bus, we repeat the analysis for each of the\n(12 2 ) = 66 pairs of cities to produce the matrix in Table 11.\nFinally, we provide the 30 \u00d7 30 distance matrix for the NBA, as well the labeling of the 30 teams in Table 9. There are fifteen teams in the Western Conference, namely the Portland Trailblazers (PT), Golden State Warriors (GW), Sacramento Kings (SK), Los Angeles Clippers (LC), Los Angeles Lakers (LL), Phoenix Suns (PS), Utah Jazz (UJ), Denver Nuggets (DN), Oklahoma Thunder (OT), San Antonio Spurs (SS), Dallas Mavericks (DM), Houston Rockets (HR), Minnesota Timberwolves (MT), Memphis Grizzlies (MG), and New Orleans Hornets (NH).\nThere are fifteen teams in the Eastern Conference, namely the Milwaukee Bucks (MB), Chicago Bulls (CU), Indiana Pacers (IP), Detroit Pistons (DP), Toronto Raptors (TR), Cleveland Cavaliers (CC), Boston Celtics (BC), New York Knicks (NK), New Jersey Nets (NN), Philadelphia Sixers (PS), Washington Wizards (WW), Charlotte Bobcats (CB), Atlanta Hawks (AH), Orlando Magic (OM), and Miami Heat (MH). Note that two teams (Chicago Bulls and Charlotte Bobcats) have the same initials, and thus we have represented the former as CU and the latter as CB to avoid ambiguity.\nFor readability, the 30 \u00d7 30 distance matrix is broken into 15 \u00d7 15 matrices, providing both intra-league and inter-league distances. We remark that the Los Angeles Clippers and Los Angeles Lakers play their games in the same arena, which explains why their distance is zero. Each entry in Tables 12 through 14 is expressed in miles, unlike the NPB distance matrix which was expressed in kilometres."}], "references": [{"title": "A simulated annealing approach to the traveling tournament problem", "author": ["A. Anagnostopoulos", "L. Michel", "P.V. Hentenryck", "Y. Vergados"], "venue": "Journal of Scheduling,", "citeRegEx": "Anagnostopoulos et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Anagnostopoulos et al\\.", "year": 2006}, {"title": "The traveling tournament problem: description and benchmarks", "author": ["K. Easton", "G. Nemhauser", "M. Trick"], "venue": "Proceedings of the 7th International Conference on Principles and Practice of Constraint Programming,", "citeRegEx": "Easton et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Easton et al\\.", "year": 2001}, {"title": "Solving the travelling tournament problem: A combined integer programming and constraint programming approach", "author": ["K. Easton", "G. Nemhauser", "M. Trick"], "venue": "Proceedings of the 4th International Conference on the Practice and Theory of Automated Timetabling,", "citeRegEx": "Easton et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Easton et al\\.", "year": 2002}, {"title": "Computers and Intractability: A guide to the theory of NP-completeness", "author": ["M. Garey", "D. Johnson"], "venue": null, "citeRegEx": "Garey and Johnson,? \\Q1979\\E", "shortCiteRegEx": "Garey and Johnson", "year": 1979}, {"title": "The distance-optimal inter-league schedule for Japanese pro baseball", "author": ["R. Hoshino", "K. Kawarabayashi"], "venue": "Proceedings of the ICAPS 2011 Workshop on Constraint Satisfaction Techniques for Planning and Scheduling Problems (COPLAS),", "citeRegEx": "Hoshino and Kawarabayashi,? \\Q2011\\E", "shortCiteRegEx": "Hoshino and Kawarabayashi", "year": 2011}, {"title": "The inter-league extension of the traveling tournament problem and its application to sports scheduling", "author": ["R. Hoshino", "K. Kawarabayashi"], "venue": "Proceedings of the 25th AAAI Conference on Artificial Intelligence,", "citeRegEx": "Hoshino and Kawarabayashi,? \\Q2011\\E", "shortCiteRegEx": "Hoshino and Kawarabayashi", "year": 2011}, {"title": "The multi-round balanced traveling tournament problem", "author": ["R. Hoshino", "K. Kawarabayashi"], "venue": "Proceedings of the 21st International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "Hoshino and Kawarabayashi,? \\Q2011\\E", "shortCiteRegEx": "Hoshino and Kawarabayashi", "year": 2011}, {"title": "A multi-round generalization of the traveling tournament problem and its application to Japanese baseball", "author": ["R. Hoshino", "K. Kawarabayashi"], "venue": "European Journal of Operational Research,", "citeRegEx": "Hoshino and Kawarabayashi,? \\Q2011\\E", "shortCiteRegEx": "Hoshino and Kawarabayashi", "year": 2011}, {"title": "The complexity of finding maximum disjoint paths with length", "author": ["A. Itai", "Y. Perl", "Y. Shiloach"], "venue": "constraints. Networks,", "citeRegEx": "Itai et al\\.,? \\Q1982\\E", "shortCiteRegEx": "Itai et al\\.", "year": 1982}, {"title": "Scheduling in sports: An annotated bibliography", "author": ["G. Kendall", "S. Knust", "C. Ribeiro", "S. Urrutia"], "venue": "Computers and Operations Research,", "citeRegEx": "Kendall et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Kendall et al\\.", "year": 2010}, {"title": "A simulated annealing and hill-climbing algorithm for the traveling tournament problem", "author": ["A. Lim", "B. Rodrigues", "X. Zhang"], "venue": "European Journal of Operational Research,", "citeRegEx": "Lim et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Lim et al\\.", "year": 2006}, {"title": "Complexity of the traveling tournament problem", "author": ["C. Thielen", "S. Westphal"], "venue": "Theoretical Computer Science,", "citeRegEx": "Thielen and Westphal,? \\Q2010\\E", "shortCiteRegEx": "Thielen and Westphal", "year": 2010}], "referenceMentions": [{"referenceID": 9, "context": "Since its introduction (Easton, Nemhauser, & Trick, 2001), the TTP has emerged as a popular area of study within the operations research community (Kendall et al., 2010) due to its incredible complexity, where challenging benchmark problems remain unsolved.", "startOffset": 147, "endOffset": 169}], "year": 2011, "abstractText": "In many professional sports leagues, teams from opposing leagues/conferences compete against one another, playing inter-league games. This is an example of a bipartite tournament. In this paper, we consider the problem of reducing the total travel distance of bipartite tournaments, by analyzing inter-league scheduling from the perspective of discrete optimization. This research has natural applications to sports scheduling, especially for leagues such as the National Basketball Association (NBA) where teams must travel long distances across North America to play all their games, thus consuming much time, money, and greenhouse gas emissions. We introduce the Bipartite Traveling Tournament Problem (BTTP), the inter-league variant of the well-studied Traveling Tournament Problem. We prove that the 2n-team BTTP is NP-complete, but for small values of n, a distance-optimal inter-league schedule can be generated from an algorithm based on minimum-weight 4-cycle-covers. We apply our theoretical results to the 12-team Nippon Professional Baseball (NPB) league in Japan, producing a provably-optimal schedule requiring 42950 kilometres of total team travel, a 16% reduction compared to the actual distance traveled by these teams during the 2010 NPB season. We also develop a nearly-optimal inter-league tournament for the 30-team NBA league, just 3.8% higher than the trivial theoretical lower bound.", "creator": "dvips(k) 5.98 Copyright 2009 Radical Eye Software"}}}