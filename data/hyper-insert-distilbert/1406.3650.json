{"id": "1406.3650", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2014", "title": "Smoothed Gradients for Stochastic Variational Inference", "abstract": "the field of elementary statistical machine method learning has seen a rapid experimental progress in complex hierarchical dynamics bayesian domain models. in applying stochastic variational constraint inference ( bsc svi ), performing the type inference problem is mapped concurrently to an error optimization problem involving uniform stochastic filtering gradients. while this scheme approach was previously shown to scale complexity up 3000 to 4000 massive data file sets, implementing the intrinsic reynolds noise of the limited stochastic diffusion gradients continuously impedes a fast convergence. traditionally inspired by gradient averaging algorithm methods from stochastic optimization, here we propose using a variance reduction performance scheme tailored to svi by averaging successively over the reasonably sufficient statistics of the local variational parameters. its simplicity basically comes at the ultimate cost of biased scaled stochastic gradients. we show this that we can eliminate large parts unknown of the bias while later obtaining barely the same required variance density reduction as feasible in simple fuzzy gradient spectral averaging management schemes. and we explore the basic tradeoff conditions between robust variance and maximal bias based on testing the example of latent dirichlet allocation.", "histories": [["v1", "Fri, 13 Jun 2014 21:19:09 GMT  (487kb,D)", "https://arxiv.org/abs/1406.3650v1", "8 pages, 6 figures"], ["v2", "Tue, 18 Nov 2014 03:12:37 GMT  (812kb,D)", "http://arxiv.org/abs/1406.3650v2", "Appears in Neural Information Processing Systems, 2014"]], "COMMENTS": "8 pages, 6 figures", "reviews": [], "SUBJECTS": "stat.ML cs.LG", "authors": ["stephan mandt", "david m blei"], "accepted": true, "id": "1406.3650"}, "pdf": {"name": "1406.3650.pdf", "metadata": {"source": "CRF", "title": "Smoothed Gradients for Stochastic Variational Inference", "authors": ["Stephan Mandt", "David Blei"], "emails": ["smandt@princeton.edu", "david.blei@columbia.edu"], "sections": [{"heading": "1 Introduction", "text": "Stochastic variational inference (SVI) lets us scale up Bayesian computation to massive data [1]. SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].\nSVI uses stochastic optimization [6] to fit a variational distribution, following easy-to-compute noisy natural gradients that come from repeatedly subsampling from the large data set. As with most traditional stochastic optimization methods, SVI takes precautions to use unbiased, noisy gradients whose expectations are equal to the true gradients. This is necessary for the conditions of [6] to apply, and guarantees that SVI climbs to a local optimum of the variational objective. Innovations on SVI, such as subsampling from data non-uniformly [2] or using control variates [7, 8], have maintained the unbiasedness of the noisy gradient.\nIn this paper, we explore the idea of following a biased stochastic gradient in SVI. We are inspired by the recent work in stochastic optimization that uses biased gradients. For example, stochastic averaged gradients (SAG) iteratively updates only a subset of terms in the full gradient [9]; averaged gradients (AG) follows the average of the sequence of stochastic gradients [10]. These methods lead to faster convergence on many problems.\nHowever, SAG and AG are not immediately applicable to SVI. First, SAG requires storing all of the terms of the gradient. In most applications of SVI there is a term for each data point, and avoiding such storage is one of the motivations for using the algorithm. Second, the SVI update has a form where we update the variational parameter with a convex combination of the previous parameter and a new noisy version of it. This property falls out of the special structure of the gradient of the variational objective, and has the significant advantage of keeping the parameter in its feasible\nar X\niv :1\n40 6.\n36 50\nv2 [\nst at\n.M L\n] 1\n8 N\nov 2\nspace. (E.g., the parameter may be constrained to be positive or even on the simplex.) Averaged gradients, as we show below, do not enjoy this property. Thus, we develop a new method to form biased gradients in SVI.\nTo understand our method, we must briefly explain the special structure of the SVI stochastic natural gradient. At any iteration of SVI, we have a current estimate of the variational parameter \u03bbi, i.e., the parameter governing an approximate posterior that we are trying to estimate. First, we sample a data point wi. Then, we use the current estimate of variational parameters to compute expected sufficient statistics S\u0302i about that data point. (The sufficient statistics S\u0302i is a vector of the same dimension as \u03bbi.) Finally, we form the stochastic natural gradient of the variational objective L with this simple expression:\n\u2207\u03bbL = \u03b7 +NS\u0302i \u2212 \u03bbi, (1) where \u03b7 is a prior from the model and N is an appropriate scaling. This is an unbiased noisy gradient [11, 1], and we follow it with a step size \u03c1i that decreases across iterations [6]. Because of its algebraic structure, each step amounts to taking a weighted average,\n\u03bbi+1 = (1\u2212 \u03c1i)\u03bbi + \u03c1i(\u03b7 +NS\u0302i). (2) Note that this keeps \u03bbi in its feasible set.\nWith these details in mind, we can now describe our method. Our method replaces the natural gradient in Eq. (1) with a similarly constructed vector that uses a fixed-window moving average of the previous sufficient statistics. That is, we replace the sufficient statistics with an appropriate scaled sum, \u2211L\u22121 j=0 S\u0302i\u2212j . Note this is different from averaging the gradients, which also involves the current iteration\u2019s estimate.\nWe will demonstrate the many advantages of this technique. First, its computational cost is the same as for SVI and storage requirements only multiply by a constant factor (the window length L). Second, it enjoys significant variance reduction over the unbiased estimates, smaller bias than averaged gradients, and leads to smaller mean-squared error against the full gradient. Finally, we tested our method on latent Dirichlet allocation with three large corpora. We found it leads to faster convergence and better local optima.\nRelated work We first discuss the related work from the SVI literature. Both Ref. [8] and Ref. [7] introduce control variates to reduce the gradient\u2019s variance. The method leads to unbiased gradient estimates. On the other hand, every few hundred iterations, an entire pass through the data set is necessary, which makes the performance and expenses of the method depend on the size of the data set. Ref. [12] develops a method to pre-select documents according to their influence on the global update. For large data sets, however, it also suffers from high storage requirements. In the stochastic optimization literature, we have already discussed SAG [9] and AG [10]. Similarly, Ref. [13] introduces an exponentially fading momentum term. It too suffers from the issues of SAG and AG, mentioned above."}, {"heading": "2 Smoothed stochastic gradients for SVI", "text": "Latent Dirichlet Allocation and Variational Inference We start by reviewing stochastic variational inference for LDA [1, 14], a topic model that will be our running example. We are given a corpus ofD documents with words w1:D,1:N . We want to inferK hidden topics, defined as multinomial distributions over a vocabulary of size V . We define a multinomial parameter \u03b21:V,1:K , termed the topics. Each document d is associated with a normalized vector of topic weights \u0398d. Furthermore, each word n in document d has a topic assignment zdn. This is a K\u2212vector of binary entries, such that zkdn = 1 if word n in document d is assigned to topic k, and z k dn = 0 otherwise.\nIn the generative process, we first draw the topics from a Dirichlet, \u03b2k \u223c Dirichlet(\u03b7). For each document, we draw the topic weights, \u0398d \u223c Dirichlet(\u03b1). Finally, for each word in the document, we draw an assignment zdn \u223c Multinomial(\u0398d), and we draw the word from the assigned topic, wdn \u223c Multinomial(\u03b2zdn). The model has the following joint probability distribution:\np(w, \u03b2,\u0398, z|\u03b7, \u03b1) = K\u220f k=1 p(\u03b2k|\u03b7) D\u220f d=1 p(\u0398d|\u03b1) N\u220f n=1 p(zdn|\u0398d)p(wdn|\u03b21:K , zdn) (3)\nFollowing [1], the topics \u03b2 are global parameters, shared among all documents. The assignments z and topic proportions \u0398 are local, as they characterize a single document.\nIn variational inference [15], we approximate the posterior distribution,\np(\u03b2,\u0398, z|w) = p(\u03b2,\u0398, z, w)\u2211 z \u222b d\u03b2d\u0398 p(\u03b2,\u0398, z, w) , (4)\nwhich is intractable to compute. The posterior is approximated by a factorized distribution,\nq(\u03b2,\u0398, z) = q(\u03b2|\u03bb) ( D\u220f d=1 N\u220f n=1 q(zdn|\u03c6dn) )( D\u220f d=1 q(\u0398d|\u03b3d) ) (5)\nHere, q(\u03b2|\u03bb) and q(\u0398d|\u03b3d) are Dirichlet distributions, and q(zdn|\u03c6dn) are multinomials. The parameters \u03bb, \u03b3 and \u03c6minimize the Kullback-Leibler (KL) divergence between the variational distribution and the posterior [16]. As shown in Refs. [1, 17], the objective to maximize is the evidence lower bound (ELBO),\nL(q) = Eq[log p(x, \u03b2,\u0398, z)]\u2212 Eq[log q(\u03b2,\u0398, z)]. (6) This is a lower bound on the marginal probability of the observations. It is a sensible objective function because, up to a constant, it is equal to the negative KL divergence between q and the posterior. Thus optimizing the ELBO with respect to q is equivalent to minimizing its KL divergence to the posterior.\nIn traditional variational methods, we iteratively update the local and global parameters. The local parameters are updated as described in [1, 17] . They are a function of the global parameters, so at iteration i the local parameter is \u03c6dn(\u03bbi). We are interested in the global parameters. They are updated based on the (expected) sufficient statistics S(\u03bbi),\nS(\u03bbi) = \u2211\nd\u2208{1,...,D} N\u2211 n=1 \u03c6dn(\u03bbi) \u00b7 WTdn (7)\n\u03bbi+1 = \u03b7 + S(\u03bbi)\nFor fixed d and n, the multinomial parameter \u03c6dn is K\u00d71. The binary vectorWdn is V\u00d71; it satisfies Wvdn = 1 if the word n in document d is v, and else contains only zeros. Hence, S is K\u00d7V and therefore has the same dimension as \u03bb. Alternating updates lead to convergence.\nStochastic variational inference for LDA The computation of the sufficient statistics is inefficient because it involves a pass through the entire data set. In Stochastic Variational Inference for LDA [1, 14], it is approximated by stochastically sampling a \u201dminibatch\u201d Bi \u2282 {1, ..., D} of |Bi| documents, estimating S on the basis of the minibatch, and scaling the result appropriately,\nS\u0302(\u03bbi, Bi) = D |Bi| \u2211 d\u2208Bi N\u2211 n=1 \u03c6dn(\u03bbi) \u00b7 WTdn.\nBecause it depends on the minibatch, S\u0302i = S\u0302(\u03bbi, Bi) is now a random variable. We will denote variables that explicitly depend on the random minibatch Bi at the current time i by circumflexes, such as g\u0302 and S\u0302.\nIn SVI, we update \u03bb by admixing the random estimate of the sufficient statistics to the current value of \u03bb. This involves a learning rate \u03c1i < 1,\n\u03bbi+1 = (1\u2212 \u03c1i)\u03bbi + \u03c1i(\u03b7 + S\u0302(\u03bbi, Bi)) (8) The case of \u03c1 = 1 and |Bi| = D corresponds to batch variational inference (when sampling without replacement) . For arbitrary \u03c1, this update is just stochastic gradient ascent, as a stochastic estimate of the natural gradient of the ELBO [1] is\ng\u0302(\u03bbi, Bi) = (\u03b7 \u2212 \u03bbi) + S\u0302(\u03bbi, Bi), (9) This interpretation opens the world of gradient smoothing techniques. Note that the above stochastic gradient is unbiased: its expectation value is the full gradient. However, it has a variance. The goal of this paper will be to reduce this variance at the expense of introducing a bias.\nAlgorithm 1: Smoothed stochastic gradients for Latent Dirichlet Allocation Input: D documents, minibatch size B, number of stored sufficient statistics L, learning rate \u03c1t, hyperparameters \u03b1, \u03b7. Output: Hidden variational parameters \u03bb, \u03c6, \u03b3.\n1 Initialize \u03bb randomly and g\u0302Li = 0. 2 Initialize empty queue Q = {}. 3 for i = 0 to\u221e do 4 Sample minibatch Bi \u2282 {1, . . . , D} uniformly. 5 initialize \u03b3 6 repeat 7 For d \u2208 Bi and n \u2208 {1, . . . , N} set 8 \u03c6kdn \u221d exp(E[log \u0398dk] + E[log \u03b2k,wd ]), k \u2208 {1, . . . ,K} 9 \u03b3d = \u03b1+ \u2211 n \u03c6dn\n10 until \u03c6dn and \u03b3d converge. 11 For each topic k, calculate sufficient statistics for minibatch Bi: 12 S\u0302i =\nD |Bi| \u2211 d\u2208Bi \u2211N n=1 \u03c6dnWTdn\n13 Add new sufficient statistic in front of queue Q: 14 Q\u2190 {S\u0302i}+Q 15 Remove last element when length L has been reached: 16 if length(Q) > L then 17 Q\u2190 Q\u2212 {S\u0302i\u2212L} 18 end 19 Update \u03bb, using stored sufficient statistics: 20 S\u0302Li \u2190 S\u0302Li\u22121 + (S\u0302i \u2212 S\u0302i\u2212L)/L 21 g\u0302Li \u2190 (\u03b7 \u2212 \u03bbi) + S\u0302Li 22 \u03bbt+1 = \u03bbt + \u03c1t g\u0302 L t . 23 end\nSmoothed stochastic gradients for SVI Noisy stochastic gradients can slow down the convergence of SVI or lead to convergence to bad local optima. Hence, we propose a smoothing scheme to reduce the variance of the noisy natural gradient. To this end, we average the sufficient statistics over the past L iterations. Here is a sketch:\n1. Uniformly sample a minibatch Bi \u2282 {1, . . . , D} of documents. Compute the local variational parameters \u03c6 from a given \u03bbi.\n2. Compute the sufficient statistics S\u0302i = S\u0302(\u03c6(\u03bbi), Bi).\n3. Store S\u0302i, along with the L most recent sufficient statistics. Compute S\u0302Li = 1 L \u2211L\u22121 j=0 S\u0302i\u2212j\nas their mean. 4. Compute the smoothed stochastic gradient according to\ng\u0302Li = (\u03b7 \u2212 \u03bbi) + S\u0302Li (10)\n5. Use the smoothed stochastic gradient to calculate \u03bbi+1. Repeat.\nDetails are in Algorithm 1. We now explore its properties. First, note that smoothing the sufficient statistics comes at almost no extra computational costs. In fact, the mean of the stored sufficient statistics does not explicitly have to be computed, but rather amounts to the update\nS\u0302Li \u2190 S\u0302Li\u22121 + (S\u0302i \u2212 S\u0302i\u2212L)/L, (11)\nafter which S\u0302i\u2212L is deleted. Storing the sufficient statistics can be expensive for large values of L: In the context of LDA involving the typical parameters K = 102 and V = 104, using L = 102 amounts to storing 108 64-bit floats which is in the Gigabyte range.\nNote that when L = 1 we obtain stochastic variational inference (SVI) in its basic form. This includes deterministic variational inference for L = 1, B = D in the case of sampling without replacement within the minibatch.\nBiased gradients Let us now investigate the algorithm theoretically. Note that the only noisy part in the stochastic gradient in Eq. (9) is the sufficient statistics. Averaging over L stochastic sufficient statistics thus promises to reduce the noise in the gradient. We are interested in the effect of the additional parameter L.\nWhen we average over the L most recent sufficient statistics, we introduce a bias. As the variational parameters change during each iteration, the averaged sufficient statistics deviate in expectation from its current value. This induces biased gradients. In a nutshell, large values of L will reduce the variance but increase the bias.\nTo better understand this tradeoff, we need to introduce some notation. We defined the stochastic gradient g\u0302i = g\u0302(\u03bbi, Bi) in Eq. (9) and refer to gi = EBi [g\u0302(\u03bbi, Bi)] as the full gradient (FG). We also defined the smoothed stochastic gradient g\u0302iL in Eq. (10). Now, we need to introduce an auxiliary variable, gLi := (\u03b7 \u2212 \u03bbi) + 1L \u2211L\u22121 j=0 Si\u2212j . This is the time-averaged full gradient. It involves the full sufficient statistics Si = S(\u03bbi) evaluated along the sequence \u03bb1, \u03bb2,... generated by our algorithm.\nWe can expand the smoothed stochastic gradient into three terms:\ng\u0302Li = gi\ufe38\ufe37\ufe37\ufe38 FG + (gLi \u2212 gi)\ufe38 \ufe37\ufe37 \ufe38 bias + (g\u0302Li \u2212 gLi )\ufe38 \ufe37\ufe37 \ufe38 noise\n(12)\nThis involves the full gradient (FG), a bias term and a stochastic noise term. We want to minimize the statistical error between the full gradient and the smoothed gradient by an optimal choice of L. We will show this the optimal choice is determined by a tradeoff between variance and bias.\nFor the following analysis, we need to compute expectation values with respect to realizations of our algorithm, which is a stochastic process that generates a sequence of \u03bbi\u2019s. Those expectation values are denoted by E[\u00b7]. Notably, not only the minibatches Bi are random variables under this expectation, but also the entire sequences \u03bb1, \u03bb2, ... . Therefore, one needs to keep in mind that even the full gradients gi = g(\u03bbi) are random variables and can be studied under this expectation.\nWe find that the mean squared error of the smoothed stochastic gradient dominantly decomposes into a mean squared bias and a noise term:\nE[(g\u0302Li \u2212 gi)2] \u2248 E[(g\u0302Li \u2212 gLi )2]\ufe38 \ufe37\ufe37 \ufe38 variance + E[(gLi \u2212 gi)2]\ufe38 \ufe37\ufe37 \ufe38 mean squared bias\n(13)\nTo see this, consider the mean squared error of the smoothed stochastic gradient with respect to the full gradient, E[(g\u0302Li \u2212 gi)2], adding and subtracting gLi :\nE [ (g\u0302Li \u2212 gLi + gLi \u2212 gi)2 ] = E [ (g\u0302Li \u2212 gLi )2 ] + 2E [ (g\u0302Li \u2212 gLi )(gLi \u2212 gi) ] + E [ (gLi \u2212 gi)2 ] .\nWe encounter a cross-term, which we argue to be negligible. In defining \u2206S\u0302i = (S\u0302i \u2212 Si) we find that (g\u0302Li \u2212 gLi ) = 1L \u2211L\u22121 j=0 \u2206Si\u2212j . Therefore,\nE [ (g\u0302Li \u2212 gLi )(gLi \u2212 gi) ] = 1\nL L\u22121\u2211 j=0 E [ \u2206S\u0302i\u2212j(g L i \u2212 gi) ] .\nThe fluctuations of the sufficient statistics \u2206S\u0302i is a random variable with mean zero, and the randomness of (gLi \u2212gi) enters only via \u03bbi. One can assume a very small statistical correlation between those two terms, E [ \u2206S\u0302i\u2212j(g L i \u2212 gi) ] \u2248 E [ \u2206S\u0302i\u2212j ] E [ (gLi \u2212 gi) ] = 0. Therefore, the cross-term\ncan be expected to be negligible. We confirmed this fact empirically in our numerical experiments: the top row of Fig. 1 shows that the sum of squared bias and variance is barely distinguishable from the squared error.\nBy construction, all bias comes from the sufficient statistics: E[(gLi \u2212 gi)2] = E [( 1 L \u2211L\u22121 j=0 (Si\u2212j \u2212 Si) )2] . (14)\nAt this point, little can be said in general about the bias term, apart from the fact that it should shrink with the learning rate. We will explore it empirically in the next section. We now consider the variance term:\nE[(g\u0302Li \u2212 gLi )2] = E [( 1 L \u2211L\u22121 j=0 \u2206S\u0302i\u2212j )2] = 1\nL2 L\u22121\u2211 j=0 E [ (\u2206S\u0302i\u2212j) 2 ] = 1 L2 L\u22121\u2211 j=0 E[(g\u0302i\u2212j \u2212 gi\u2212j)2].\nThis can be reformulated as var(g\u0302Li ) = 1 L2 \u2211L\u22121 j=0 var(g\u0302i\u2212j). Assuming that the variance changes little during those L successive updates, we can approximate var(g\u0302i\u2212j) \u2248 var(g\u0302i), which yields\nvar(g\u0302Li ) \u2248 1\nL var(g\u0302i). (15)\nThe smoothed gradient has therefore a variance that is approximately L times smaller than the variance of the original stochastic gradient.\nBias-variance tradeoff To understand and illustrate the effect of L in our optimization problem, we used a small data set of 2000 abstracts from the Arxiv repository. This allowed us to compute the full sufficient statistics and the full gradient for reference. More details on the data set and the corresponding parameters will be given below.\nWe computed squared bias (SB), variance (VAR) and squared error (SE) according to Eq. (13) for a single stochastic optimization run. More explicitly,\nSBi = K\u2211 k=1 V\u2211 v=1 ( gLi \u2212 gi )2 kv ,VARi = K\u2211 k=1 V\u2211 v=1 ( g\u0302Li \u2212 gLi )2 kv ,SEi = K\u2211 k=1 V\u2211 v=1 ( g\u0302Li \u2212 gi )2 kv . (16)\nIn Fig. 1, we plot those quantities as a function of iteration steps (time). As argued before, we arrive at a drastic variance reduction (bottom, middle) when choosing large values of L.\nIn contrast, the squared bias (bottom, left) typically increases with L. The bias shows a complex time-evolution as it maintains memory of L previous steps. For example, the kinks in the bias curves (bottom, left) occur at times 3, 10, 30, 100 and 300, i.e. they correspond to the values of L. Those are the times from which on the smoothed gradient looses memory of its initial state, typically carrying a large bias. The variances become approximately stationary at iteration L (bottom, middle). Those are the times where the initialization process ends and the queue Q in Algorithm 1 has reached its maximal length L. The squared error (bottom, right) is to a good approximation just the sum of squared bias and variance. This is also shown in the top panel of Fig. 1.\nDue to the long-time memory of the smoothed gradients, one can associate some \u201dinertia\u201d or \u201dmomentum\u201d to each value of L. The larger L, the smaller the variance and the larger the inertia. In a non-convex optimization setup with many local optima as in our case, too much inertia can be harmful. This effect can be seen for the L = 100 and L = 300 runs in Fig. 1 (bottom), where the mean squared bias and error curves bend upwards at long times. Think of a marble rolling in a wavy landscape: with too much momentum it runs the danger of passing through a good optimum and eventually getting trapped in a bad local optimum. This picture suggests that the optimal value of L depends on the \u201druggedness\u201d of the potential landscape of the optimization problem at hand. Our empirical study suggest that choosing L between 10 and 100 produces the smallest mean squared error.\nAside: connection to gradient averaging Our algorithm was inspired by various gradient averaging schemes. However, we cannot easily used averaged gradients in SVI. To see the drawbacks of gradient averaging, let us consider L stochastic gradients g\u0302i, g\u0302i\u22121, g\u0302i\u22122, ..., g\u0302i\u2212L+1 and replace\ng\u0302i \u2212\u2192 1L \u2211L\u22121 j=0 g\u0302i\u2212j . (17)\nOne arrives at the following parameter update for \u03bbi:\n\u03bbi+1 = (1\u2212 \u03c1i)\u03bbi + \u03c1i \u03b7 + 1 L L\u22121\u2211 j=0 S\u0302i\u2212j \u2212 1 L L\u22121\u2211 j=0 (\u03bbi\u2212j \u2212 \u03bbi)  . (18) This update can lead to the violation of optimization constraints, namely to a negative variational parameter \u03bb. Note that for L = 1 (the case of SVI), the third term is zero, guaranteeing positivity of the update. This is no longer guaranteed for L > 1, and the gradient updates will eventually become negative. We found this in practice. Furthermore, we find that there is an extra contribution to the bias compared to Eq. (14),\nE[(gLi \u2212 gi)2] = E [( 1 L \u2211L\u22121 j=0 (\u03bbi \u2212 \u03bbi\u2212j) + 1 L \u2211L\u22121 j=0 (Si\u2212j \u2212 Si) )2] . (19)\nHence, the averaged gradient carries an additional bias in \u03bb - it is the same term that may violate optimization constraints. In contrast, the variance of the averaged gradient is the same as the variance of the smoothed gradient. Compared to gradient averaging, the smoothed gradient has a smaller bias while profiting from the same variance reduction."}, {"heading": "3 Empirical study", "text": "We tested SVI for LDA, using the smoothed stochastic gradients, on three large corpora:\n\u2022 882K scientific abstracts from the Arxiv repository, using a vocabulary of 14K words. \u2022 1.7M articles from the New York Times, using a vocabulary of 8K words. \u2022 3.6M articles from Wikipedia, using a vocabulary of 7.7K words.\nWe set the minibatch size to B = 300 and furthermore set the number of topics to K = 100, and the hyper-parameters \u03b1 = \u03b7 = 0.5. We fixed the learning rate to \u03c1 = 10\u22123. We also compared our results to a decreasing learning rate and found the same behavior.\nFor a quantitative test of model fitness, we evaluate the predictive probability over the vocabulary [1]. To this end, we separate a test set from the training set. This test set is furthermore split into two parts: half of it is used to obtain the local variational parameters (i.e. the topic proportions by fitting LDA with the fixed global parameters \u03bb. The second part is used to compute the likelihoods of the contained words:\np(wnew|wold, D) \u2248 \u222b (\u2211K k=1 \u0398k\u03b2k,wnew ) q(\u0398)q(\u03b2)d\u0398d\u03b2 = Eq[\u03b8k]Eq[\u03b2k,wnew ]. (20)\nWe show the predictive probabilities as a function of effective passes through the data set in Fig. 2 for the New York Times, Arxiv, and Wikipedia corpus, respectively. Effective passes through the data set are defined as (minibatch size * iterations / size of corpus). Within each plot, we compare\ndifferent numbers of stored sufficient statistics, L \u2208 {1, 10, 100, 1000, 10000,\u221e}. The last value of L = \u221e corresponds to a version of the algorithm where we average over all previous sufficient statistics, which is related to averaged gradients (AG), but which has a bias too large to compete with small and finite values of L. The maximal values of 30, 5 and 6 effective passes through the Arxiv, New York Times and Wikipedia data sets, respectively, approximately correspond to a run time of 24 hours, which we set as a hard cutoff in our study.\nWe obtain the highest held-out likelihoods for intermediate values of L. E.g., averaging only over 10 subsequent sufficient statistics results in much faster convergence and higher likelihoods at very little extra storage costs. As we discussed above, we attribute this fact to the best tradeoff between variance and bias."}, {"heading": "4 Discussion and Conclusions", "text": "SVI scales up Bayesian inference, but suffers from noisy stochastic gradients. To reduce the mean squared error relative to the full gradient, we averaged the sufficient statistics of SVI successively over L iteration steps. The resulting smoothed gradient is biased, however, and the performance of the method is governed by the competition between bias and variance. We argued theoretically and showed empirically that intermediate values of the number of stored sufficient statistics L give the highest held-out likelihoods.\nProving convergence for our algorithm is still an open problem, which is non-trivial especially because the variational objective is non-convex. To guarantee convergence, however, we can simply phase out our algorithm and reduce the number of stored gradients to one as we get close to convergence. At this point, we recover SVI.\nAcknowledgements We thank Laurent Charlin, Alp Kucukelbir, Prem Gopolan, Rajesh Ranganath, Linpeng Tang, Neil Houlsby, Marius Kloft, and Matthew Hoffman for discussions. We acknowledge financial support by NSF CAREER NSF IIS-0745520, NSF BIGDATA NSF IIS1247664, NSF NEURO NSF IIS-1009542, ONR N00014-11-1-0651, the Alfred P. Sloan foundation, DARPA FA8750-14-2-0009 and the NSF MRSEC program through the Princeton Center for Complex Materials Fellowship (DMR-0819860)."}], "references": [{"title": "Stochastic variational inference", "author": ["Matthew D Hoffman", "David M Blei", "Chong Wang", "John Paisley"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Scalable recommendation with Poisson factorization", "author": ["Prem Gopalan", "Jake M Hofman", "David M Blei"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Efficient discovery of overlapping communities in massive networks", "author": ["Prem K Gopalan", "David M Blei"], "venue": "Proceedings of the National Academy of Sciences,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Mixed membership stochastic blockmodels", "author": ["Edoardo M Airoldi", "David M Blei", "Stephen E Fienberg", "Eric P Xing"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Gaussian processes for big data", "author": ["James Hensman", "Nicolo Fusi", "Neil D Lawrence"], "venue": "Uncertainty in Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2013}, {"title": "A stochastic approximation method", "author": ["Herbert Robbins", "Sutton Monro"], "venue": "The Annals of Mathematical Statistics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1951}, {"title": "Variance reduction for stochastic gradient optimization", "author": ["Chong Wang", "Xi Chen", "Alex Smola", "Eric Xing"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Accelerating stochastic gradient descent using predictive variance reduction", "author": ["Rie Johnson", "Tong Zhang"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Minimizing finite sums with the stochastic average gradient", "author": ["Mark Schmidt", "Nicolas Le Roux", "Francis Bach"], "venue": "Technical report, HAL 00860051,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Primal-dual subgradient methods for convex problems", "author": ["Yurii Nesterov"], "venue": "Mathematical Programming,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "Online model selection based on the variational Bayes", "author": ["Masa-Aki Sato"], "venue": "Neural Computation,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2001}, {"title": "Larger residuals, less work: Active document scheduling for latent Dirichlet allocation", "author": ["Mirwaes Wahabzada", "Kristian Kersting"], "venue": "In Machine Learning and Knowledge Discovery in Databases,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "An incremental gradient (-projection) method with momentum term and adaptive stepsize rule", "author": ["Paul Tseng"], "venue": "SIAM Journal on Optimization,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "Online learning for latent Dirichlet allocation", "author": ["Matthew Hoffman", "Francis R Bach", "David M Blei"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Graphical models, exponential families, and variational inference", "author": ["Martin J Wainwright", "Michael I Jordan"], "venue": "Foundations and Trends in Machine Learning,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Pattern Recognition and Machine Learning, volume 1", "author": ["Christopher M Bishop"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2006}, {"title": "Latent Dirichlet allocation", "author": ["David M Blei", "Andrew Y Ng", "Michael I Jordan"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "Stochastic variational inference (SVI) lets us scale up Bayesian computation to massive data [1].", "startOffset": 93, "endOffset": 96}, {"referenceID": 0, "context": "SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].", "startOffset": 69, "endOffset": 72}, {"referenceID": 1, "context": "SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].", "startOffset": 102, "endOffset": 105}, {"referenceID": 2, "context": "SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].", "startOffset": 136, "endOffset": 142}, {"referenceID": 3, "context": "SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].", "startOffset": 136, "endOffset": 142}, {"referenceID": 4, "context": "SVI has been applied to many types of models, including topic models [1], probabilistic factorization [2], statistical network analysis [3, 4], and Gaussian processes [5].", "startOffset": 167, "endOffset": 170}, {"referenceID": 5, "context": "SVI uses stochastic optimization [6] to fit a variational distribution, following easy-to-compute noisy natural gradients that come from repeatedly subsampling from the large data set.", "startOffset": 33, "endOffset": 36}, {"referenceID": 5, "context": "This is necessary for the conditions of [6] to apply, and guarantees that SVI climbs to a local optimum of the variational objective.", "startOffset": 40, "endOffset": 43}, {"referenceID": 1, "context": "Innovations on SVI, such as subsampling from data non-uniformly [2] or using control variates [7, 8], have maintained the unbiasedness of the noisy gradient.", "startOffset": 64, "endOffset": 67}, {"referenceID": 6, "context": "Innovations on SVI, such as subsampling from data non-uniformly [2] or using control variates [7, 8], have maintained the unbiasedness of the noisy gradient.", "startOffset": 94, "endOffset": 100}, {"referenceID": 7, "context": "Innovations on SVI, such as subsampling from data non-uniformly [2] or using control variates [7, 8], have maintained the unbiasedness of the noisy gradient.", "startOffset": 94, "endOffset": 100}, {"referenceID": 8, "context": "For example, stochastic averaged gradients (SAG) iteratively updates only a subset of terms in the full gradient [9]; averaged gradients (AG) follows the average of the sequence of stochastic gradients [10].", "startOffset": 113, "endOffset": 116}, {"referenceID": 9, "context": "For example, stochastic averaged gradients (SAG) iteratively updates only a subset of terms in the full gradient [9]; averaged gradients (AG) follows the average of the sequence of stochastic gradients [10].", "startOffset": 202, "endOffset": 206}, {"referenceID": 10, "context": "This is an unbiased noisy gradient [11, 1], and we follow it with a step size \u03c1i that decreases across iterations [6].", "startOffset": 35, "endOffset": 42}, {"referenceID": 0, "context": "This is an unbiased noisy gradient [11, 1], and we follow it with a step size \u03c1i that decreases across iterations [6].", "startOffset": 35, "endOffset": 42}, {"referenceID": 5, "context": "This is an unbiased noisy gradient [11, 1], and we follow it with a step size \u03c1i that decreases across iterations [6].", "startOffset": 114, "endOffset": 117}, {"referenceID": 7, "context": "[8] and Ref.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] introduce control variates to reduce the gradient\u2019s variance.", "startOffset": 0, "endOffset": 3}, {"referenceID": 11, "context": "[12] develops a method to pre-select documents according to their influence on the global update.", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "In the stochastic optimization literature, we have already discussed SAG [9] and AG [10].", "startOffset": 73, "endOffset": 76}, {"referenceID": 9, "context": "In the stochastic optimization literature, we have already discussed SAG [9] and AG [10].", "startOffset": 84, "endOffset": 88}, {"referenceID": 12, "context": "[13] introduces an exponentially fading momentum term.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "Latent Dirichlet Allocation and Variational Inference We start by reviewing stochastic variational inference for LDA [1, 14], a topic model that will be our running example.", "startOffset": 117, "endOffset": 124}, {"referenceID": 13, "context": "Latent Dirichlet Allocation and Variational Inference We start by reviewing stochastic variational inference for LDA [1, 14], a topic model that will be our running example.", "startOffset": 117, "endOffset": 124}, {"referenceID": 0, "context": "Following [1], the topics \u03b2 are global parameters, shared among all documents.", "startOffset": 10, "endOffset": 13}, {"referenceID": 14, "context": "In variational inference [15], we approximate the posterior distribution,", "startOffset": 25, "endOffset": 29}, {"referenceID": 15, "context": "The parameters \u03bb, \u03b3 and \u03c6minimize the Kullback-Leibler (KL) divergence between the variational distribution and the posterior [16].", "startOffset": 126, "endOffset": 130}, {"referenceID": 0, "context": "[1, 17], the objective to maximize is the evidence lower bound (ELBO), L(q) = Eq[log p(x, \u03b2,\u0398, z)]\u2212 Eq[log q(\u03b2,\u0398, z)].", "startOffset": 0, "endOffset": 7}, {"referenceID": 16, "context": "[1, 17], the objective to maximize is the evidence lower bound (ELBO), L(q) = Eq[log p(x, \u03b2,\u0398, z)]\u2212 Eq[log q(\u03b2,\u0398, z)].", "startOffset": 0, "endOffset": 7}, {"referenceID": 0, "context": "The local parameters are updated as described in [1, 17] .", "startOffset": 49, "endOffset": 56}, {"referenceID": 16, "context": "The local parameters are updated as described in [1, 17] .", "startOffset": 49, "endOffset": 56}, {"referenceID": 0, "context": "In Stochastic Variational Inference for LDA [1, 14], it is approximated by stochastically sampling a \u201dminibatch\u201d Bi \u2282 {1, .", "startOffset": 44, "endOffset": 51}, {"referenceID": 13, "context": "In Stochastic Variational Inference for LDA [1, 14], it is approximated by stochastically sampling a \u201dminibatch\u201d Bi \u2282 {1, .", "startOffset": 44, "endOffset": 51}, {"referenceID": 0, "context": "For arbitrary \u03c1, this update is just stochastic gradient ascent, as a stochastic estimate of the natural gradient of the ELBO [1] is \u011d(\u03bbi, Bi) = (\u03b7 \u2212 \u03bbi) + \u015c(\u03bbi, Bi), (9) This interpretation opens the world of gradient smoothing techniques.", "startOffset": 126, "endOffset": 129}, {"referenceID": 0, "context": "For a quantitative test of model fitness, we evaluate the predictive probability over the vocabulary [1].", "startOffset": 101, "endOffset": 104}], "year": 2014, "abstractText": "Stochastic variational inference (SVI) lets us scale up Bayesian computation to massive data. It uses stochastic optimization to fit a variational distribution, following easy-to-compute noisy natural gradients. As with most traditional stochastic optimization methods, SVI takes precautions to use unbiased stochastic gradients whose expectations are equal to the true gradients. In this paper, we explore the idea of following biased stochastic gradients in SVI. Our method replaces the natural gradient with a similarly constructed vector that uses a fixed-window moving average of some of its previous terms. We will demonstrate the many advantages of this technique. First, its computational cost is the same as for SVI and storage requirements only multiply by a constant factor. Second, it enjoys significant variance reduction over the unbiased estimates, smaller bias than averaged gradients, and leads to smaller mean-squared error against the full gradient. We test our method on latent Dirichlet allocation with three large corpora.", "creator": "LaTeX with hyperref package"}}}