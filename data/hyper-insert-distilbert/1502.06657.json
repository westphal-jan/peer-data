{"id": "1502.06657", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Feb-2015", "title": "Multi-Touch Attribution Based Budget Allocation in Online Advertising", "abstract": "budget response allocation program in basic online enterprise advertising deals with distributing the campaign ( insertion pricing order ) level advertisement budgets needed to different sub - campaigns companies which employ different advertising targeting overhead criteria and may frequently perform differently in terms of return - weight on - investment ( contingent roi ). then in this paper, we present up the spending efforts collectively at turn blame on how to best allocate campaign budget so accordingly that the marginal advertiser contribution or campaign - level cumulative roi roi is maximized. to do this, it is crucial thus to continually be able internally to evaluate correctly and determine the performance metric of sub - campaigns. this final determination is highly favorably related again to solve the action - timed attribution problem, i. where e. learning to first be able to find figuring out the set of ads, and hence the appropriate sub - campaigns that provided them to service a direct user, that an active action expenditures should be attributed to. designing for this true purpose, typically we critically employ considering both last - hit touch ( since last ad sponsor gets all advertisement credit ) and multi - feature touch ( containing many promotional ads instead share the credit ) attribution methodologies. we present the algorithms deployed so at to turn responsibility for the underlying attribution funding problem, as well as their parallel implementation on the whole large advertising advertiser performance datasets. we conclude the resulting paper with our empirical comparison of last - touch and corresponding multi - touch or attribution - likelihood based aggregate budget contribution allocation in creating a real online multimedia advertising spending setting.", "histories": [["v1", "Tue, 24 Feb 2015 00:09:05 GMT  (125kb)", "http://arxiv.org/abs/1502.06657v1", "This paper has been published in ADKDD 2014, August 24, New York City, New York, U.S.A"]], "COMMENTS": "This paper has been published in ADKDD 2014, August 24, New York City, New York, U.S.A", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["sahin cem geyik", "abhishek saxena", "ali dasdan"], "accepted": false, "id": "1502.06657"}, "pdf": {"name": "1502.06657.pdf", "metadata": {"source": "CRF", "title": "Multi-Touch Attribution Based Budget Allocation in Online Advertising", "authors": ["Sahin Cem Geyik", "Ali Dasdan"], "emails": ["sgeyik@turn.com", "asaxena@turn.com", "adasdan@turn.com"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 2.\n06 65\n7v 1\n[ cs\n.A I]\n2 4\nFe b\n20 15\nCategories and Subject Descriptors J.0 [Computer Applications]: General\nGeneral Terms Algorithms, Application\nKeywords Online advertising, Multi-touch attribution, Budget allocation\n* The authors contributed to this work equally.\nThis paper has been published in: ADKDD\u201914, August 24, New York City, New York, U.S.A.. ."}, {"heading": "1. INTRODUCTION", "text": "In online advertising, our goal is to serve the best ad for a given user in an online context. Advertisers often set constraints which affect the applicability of the ads, e.g., an advertiser might want to target only the users of a certain geographic area visiting web pages of certain types for a specific campaign. Furthermore, the objective of advertisers in general is to receive as many actions as possible utilizing different campaigns in parallel. Actions are advertiser defined and can be one of inquiring about or purchasing a product, filling out a form, visiting a certain page, etc. [9].\nAn ad from an advertiser can be shown to a user on a publisher (website, mobile app etc.) only if the value for the ad impression opportunity is high enough to win in a real-time auction [5]. Advertisers signal their value via bids, which is calculated as the action probability given a user in a certain online context multiplied by the cost-per-action goal an advertiser wants to meet or beat. Once an advertiser, or the demand-side platform that acts on their behalf, wins the auction (i.e. submits the highest bid), it is responsible to pay the amount of the second highest bid (i.e. second-price auction). Due to this, each advertiser needs to carefully manage their budget which dictates their capability to bid.\nIn this paper, we are focusing on the problem of distributing a campaign\u2019s budget to its sub-campaigns (with different targeting criteria) so that the return-on-investment (ROI, i.e. value received compared to the amount spent on advertising) is maximized, since the sub-campaigns may have different performances and spending capabilities due to their targeting. Furthermore, we will focus on the problem of action attribution in determining a sub-campaign\u2019s performance (which helps with setting its budget), i.e. when an action is received by an advertiser, finding out the ads shown from which sub-campaign/s has/have caused that action. We examine both last-touch attribution (LTA, i.e. a user\u2019s action is attributed to the last ad s/he sees) and multi-touch attribution (MTA, i.e. a user\u2019s action is attributed fractionally to a subset of the ads s/he sees). The contributions of the paper can be summarized as:\n\u2022 A budget allocation scheme that distributes money from the campaign top-level to the sub-campaigns according to their performance,\n\u2022 Examination of two action-attribution approaches to determine sub-campaign performance: last-touch and multi-touch, with an emphasis on the latter,\n\u2022 A methodology on finding multi-touch attribution of actions to sub-campaigns on large advertiser perfor-\nmance datasets (i.e. spending of campaigns and user data of impressions as well as the actions received), and it\u2019s efficient parallel implementation. This implementation has enabled us to process real-world online advertising datasets (tens of terabytes of user profile data, and multiple billions of virtual users) that are bigger than other published efforts dealing with multitouch attribution so far,\n\u2022 An empirical comparison of last-touch versus multitouch attribution based budget allocation on a real advertising sytem. To the best of our knowledge, this is the first paper to show how ROI is impacted by the choice of attribution method, and demonstrate the effect of MTA on a real-world online advertising campaign.\nThe rest of the paper is as follows. \u00a7 2 will give background on both budget allocation and action-attribution in advertising domain as well as previous work in literature on these subjects. \u00a7 3 will give the definition of the problem we would like to solve in this paper. We present our methodology on both budget allocation, as well as sub-campaign performance determination using both last and multi-touch action attribution schemes in \u00a7 4. The implementation details of the methodology (system design as well as parallel implementation) is given in \u00a7 5 which is followed by our preliminary results on different attribution methods for budget allocation given in \u00a7 6. Finally, we conclude the paper and present some potential future work in \u00a7 7. As a side note, we will be using the terms campaign and insertion order (IO), as well as sub-campaign and line item interchangeably throughout the paper. While the latter terms are more specific to online advertising domain, they are commonly used to describe a certain hierarchy within an advertiser."}, {"heading": "2. BACKGROUND AND PREVIOUS WORK", "text": "In this section, we will give some preliminary information on the subject matter, as well as previous work in the literature."}, {"heading": "2.1 Budget Allocation in Online Advertising", "text": "In online advertising, the advertisers aim to show their ad to a user on a publisher (web site, mobile app etc.), so that they get the highest number of actions for the money they spend. To be able to utilize the market more efficiently, they utilize different tactics, i.e. different campaigns with different targeting rules. For example, a sports goods company can decide to set up a campaign to show their golf equipment ads to users above a certain age or income, while their sneaker ads may be directed towards a wider audience. This inherently constructs a hierarchy for the advertisers. In our model, advertisers have different campaigns (e.g. each campaign is the advertising for a certain type of product) which we call insertion orders, but each campaign can also have sub-campaigns (with different targeting, or different mediums (media channels), such as social, video, mobile etc.), which we call line items. A simple example of such a hierarchy is given in Figure 1.\nBudget allocation deals with the distribution of the daily insertion order budget to the line items under it (since we assume advertisers set up insertion order level budgets manually), and has to take into account both the spending capabilities (i.e. whether a line item\u2019s targeting allows it to reach\nenough users to be able to spend the money that is assigned to it), as well as performance issues (i.e. if a line item spends a certain amount of money, what is the value of actions that will be received), which is its return-on-investment (ROI). Please see Figure 2 for an explanation of the budget allocation problem. In the example, the insertion order has a daily budget of B, and the line items are assigned daily budgets Bi such that \u2211 i Bi = B. Each line item has an ROI of Ri, and maximum spending capability (due to targeting, bidding etc.) of Si. During budget allocation, the spending capability should be considered so that for each line item i, we have Bi \u2264 Si (so that no line item is assigned more money than it can spend). The overall return from the allocation given in Figure 2 can also be calculated as \u2211 i Ri min(Si, Bi). These calculations of course assume that we have the ROI and spending capability information, where this is not so in real settings (indeed, the main focus of this paper is learning this information). The formal problem definition (in \u00a7 3) gives further details on the budget allocation problem."}, {"heading": "2.2 Action-Attribution Problem in Online Advertising", "text": "As aforementioned, the aim of the advertiser is to receive as many actions as possible. Furthermore, the advertiser needs to know which sub-campaign contributed to howmany actions, hence realizing the effectiveness of the different tactics utilized. The big problem for this task is the fact that the action usually happens much later than showing the ad to the user, e.g. user sees many ads online, and then purchases an item, hence it is hard to attribute actions to sub-campaigns. A very simple example for this action attribution problem is given in Figure 3. In the example, we present two methodologies, last-touch attribution (the most commonly used method, attributes the action fully to the last seen ad), and multi-touch attribution (MTA, the action is attributed to many ads seen from the same advertiser). Please note that in the figure, we presented a very simple case of MTA, where each ad gets an equal proportion of the action, which is rarely the case in the real setting.\nNaturally, action attribution and budget allocation are closely related. To be able to correctly allocate budget to sub-campaigns, we need to know how effective they are, i.e. how many actions they contributed to versus how much money was spent on them. This contribution is calculated by the action attribution methodology we employ (presented in \u00a7 4)."}, {"heading": "2.3 Previous Work", "text": "In this section we will present some previous efforts in the literature on both budget allocation and action-attribution.\n2.3.1 Previous Efforts in Budget Allocation Budget allocation in the campaign level for online adver-\ntising is not a very broadly examined subject in the literature. Most of the papers so far focus on the topic of budget optimization, i.e. given a budget constraint, how to set the bid values as well as spending profile to maximize utility (i.e. budget allocation per impression, rather than per campaign). This is significantly different than the problem we are working on, since our aim is actually to set these budget constraints. Therefore the efforts in budget optimization are complementary to our work: After we set the budgets in the campaign level, budget optimization can take place to allocate these budgets in the impression level. As an example of budget optimization, we can list [4], where the user behavior is modeled as a Markov chain. This modeling takes into account that advertising for a specific campaign type affects future behavior of the user, changing state transition probabilities. The authors model budget optimization task as a constrained optimal control problem for a Markov Decision Process (MDP).\nMost of the budget allocation efforts so far aimed to maximize click revenue, since their focus stayed within the domain of search advertising. For example, the authors of [10] propose a combined model of bid price and budget determination for keywords. They assume that click-through rate (CTR) is a function of bid price and take into account the marginal gains by increasing the bid amount, hence the budget. The solution of the optimization problem gives the optimal budget allocation. However, [10] does not take into account the ability to deliver, which is crucial, and we focus on allocation based on actions, which is difficult due to the attribution problem. As it can be seen, due to the nature of action-based online advertising, a big portion of our discussions are to solve the attribution problem, which makes the methods based on CTR not appropriate.\nIn [7], the authors discuss the assignment of budgets to two types of search portals, generic and specialized. The authors model the allocation as an optimal control problem, and solve using dynamic programming. The biggest hand-\nicap with that approach is the assumption that the underlying parameters for earnings and clicks are known, which does not hold true and causes the methodology to be not applicable in real-world online advertising scenarios. We try to actually learn the performance of multiple sub-campaigns (which is similar to different search portals, if we take the search portal utilization as a targeting constraint) utilizing the multi-touch attribution.\nThe closest approach to the one proposed in this paper is given in [15]. The authors aim to do combined budget allocation and bid optimization for each campaign in an account, and employ quadratic programming method to maximize revenue. Our work differs in two ways. Firstly, [15] utilizes clicks to decide on the utility of campaigns, where we utilize actions. While clicks are straight-forward to attribute to campaigns, one of the main contributions of our work is the combined focus on attribution (which is a hard task for actions) and allocation. Again, as previously stated, any CTR-based allocation scheme is not appropriate for the domain we are focusing on. Our second difference is that we separate the budget allocation from bid optimization. The authors of [15] argue that these two should be combined since there can be well-performing keywords under overall low-performing campaigns. While such an argument is valid for search advertising, which [15] focuses on, this is not the case for online display advertising. Furthermore, due to the complicated (much more convoluted than pure keyword targeting) targeting rules involved in online display advertising campaigns, such combined optimization is often not feasible.\nFinally, for a more theoretic approach, we can list [3], which focuses on the budget allocation problem to maximize the set of influenced target nodes (users). The authors model media channels (which can be taken as campaigns) and users as a bipartite graph, and the budget allocated to a media channel directly affects the number of users that are influenced by this media channel. Although this paper is not extremely relevant to ours since we aim to improve revenue (by either clicks or actions), we believe the influenced users would map nicely onto the set of buyers/clickers.\n2.3.2 Previous Efforts in Action-Attribution While there have been simple models utilized in the indus-\ntry to perform multi-touch attribution, the first published work for data-driven allocation is given in [11]. The authors provide both a bagged logistic regression model, and an intuitive probabilistic model (which uses second-order probability estimation) for attribution.\nThe authors of [6] utilize Shapley value [12] for attribution. It is also shown in [6] that the simple probabilistic scheme employed by [11] is equivalent to a Shapley value formulation after rescaling, and under certain simplifying assumptions. This paper also argues that it is hard to evaluate whether one attribution of actions is better than another. Our proposed budget allocation methodology can be taken as a way to evaluate attribution methodologies, an additional contribution by our paper.\nAbhishek et al. [2] model user behavior as a hiddenMarkov model (since user states are not observable, but only the outcome is, such as clicks). They later propose to utilize this behavior model to perform attribution, by attributing actions to ads that cause the user to change his/her latent state.\nFinally, in [14], the authors claim that, given no other\nimportance information on channels, the first touch-point as well as the touch-points closer to the last one (including the last touch-point, which gets higher credit than first) get the higher credit. This attribution resembles an assymetric bathtub shape, and the authors utilize a Beta distribution over time. Since the paper only deals with user journeys that end in action, the authors also aim at detecting the importance of initiating, intermediary, and terminating nodes for sequences within each journey, hence this way mapping channels to relevance values."}, {"heading": "3. PROBLEM DEFINITION", "text": "Let us give the formal definition of the budget allocation problem. Given the total budget B for an insertion order, the set of line items L = {l1, ..., ln} under this IO, maximum spending capability of each line item S = {S1, ..., Sn}, and return-on-investment (ROI) of each line itemR = {R1, ..., Rn} (the amount of dollars received by the line item, due to actions, for each dollar spent by the line item for advertising, using the specific targeting of the line item):\nmaximize U =\nn\u2211\ni=1\nRi Bi subject to,\n\u2200j \u2208 [1, n] Bj \u2264 Sj and n\u2211\ni=1\nBi \u2264 B .\nPlease note that as presented in Section 2.3.1, this is significantly different than the so-called budget optimization problem. If we have the correct values for the set S and R, a very simple greedy approach actually optimizes the above problem:\n1. Bremaining = B\n2. Sort line items in L according to Ri (descending) into a new list Lsorted.\n3. While there is budget left\n\u2022 For each next line item li in Lsorted\n(a) Assign li the budget Bi as min(Bremaining,Si)\n(b) Bremaining = Bremaining \u2212 Bi (c) If Bremaining \u2264 0, then return.\nThe problem we focus on in this paper is exactly the fact that we do not know the values Ri and Si for a line item. In the next section, we show that we solve the spending capability estimation by a simple adaptive budget assignment scheme, and return-on-investment estimation via multi-touch attribution."}, {"heading": "4. METHODOLOGY", "text": "As mentioned in \u00a7 3, budget allocation can be reduced to two problems: (i) spending capability calculation for a sub-campaign, and (ii) return-on-investment calculation for a sub-campaign. In this section, we will separate these two problems, and examine ways to solve them."}, {"heading": "4.1 Spending Capability Calculation for a SubCampaign", "text": "As aforementioned, sub-campaigns (line items) apply different targeting criteria to show ads to potential buyers of a\nproduct. It is obvious that there are not the same number of users, hence the same amount of advertising budget spending capability, for all targeting criteria. We certainly do not want to assign a lot of money, no matter how high the return-on-investment may be, on a specific campaign that cannot reach enough users to be able to spend the money. It is however a hard problem to estimate exactly how much money a sub-campaign may spend, since it depends on both the reach of users, as well as the bid price (i.e. if a subcampaign bids low, it will not be able to win ad auctions and not receive impressions, hence not be able to spend the money assigned to it). In our budget allocation approach, we apply a simple adaptive budget assignment scheme. This methodology can be summarized as follows.\n\u2022 If a sub-campaign is new, i.e. if we have no idea of how much it will spend, assign a learning budget that is high enough to give it a starting boost,\n\u2022 If a sub-campaign has spending data, then assign it always a bit more (e.g. increase it with a certain percentage), to explore its spending limits.\nPlease note that, it is possible that at any point the sum of current spending limits (calculated according to the above adaptive scheme) of sub-campaigns may be smaller than the overall campaign budget (i.e. a case of incomplete budget delivery). This usually happens if the budget assigned to a campaign is simply not possible to be spent by the subcampaigns, hence underspend (i.e. total spend not satisfying total budget) may occur. In the case of incomplete budget delivery, one solution that we utilize is to assign the remaining (unassigned) budget fractionally among sub-campaigns (according to their previous allocation). Although underspend may still occur, this assignment is still helpful in further calculating the spending limits of sub-campaigns, since we assign a little bit more budget to the sub-campaign than our adaptive approach suggests.\nIt can be seen that this simple adaptive assignment method actually tries to assign as much as possible to the subcampaigns that perform better (high return-on-investment). This in turn tries to achieve the greedy algorithm given in \u00a7 3. Since we order the sub-campaigns/line items according to their ROI, and then assign as much as possible to the higher ranking line items, then the most important leg of the approach is calculating the ROI accurately, which is given in the next section."}, {"heading": "4.2 ROI Calculation for a Sub-Campaign", "text": "We calculate the return-on-investment for a line item as follows:\nROIli =\n\u2211 \u2200aj p(li|aj) v(aj) Money spent by li . (1)\nAbove, v(aj) is the monetary value that is received by action aj (e.g. the profit that the advertiser earns by selling that specific product). In this work, we deal with CPA (cost per action) campaigns, where the advertiser provides the demand-side platform with the values of the actions that they want to receive, hence the return-on-investment is calculated as the ratio of the value of actions received to the amount of money spent for advertising. We also give the attribution component in the above formulation by the term p(li|aj). This determines the percentage of the action aj\nthat is attributed to line item li (while for LTA, p(li|aj) is 0 or 1, for MTA, p(li|aj) \u2208 [0, 1] since we allow partial attribution of a single action to many sub-campaigns). Since the above formulation is quite straight-forward, we will focus on the attribution problem (i.e. determining p(li|aj)) for the rest of the current section.\nWe have already stated that one of the most common attribution methods used is last-touch attribution, which assigns the whole action to the last ad seen by the user. In this paper, our emphasis is on multi-touch attribution, and we utilize the probabilistic model given in [11], which also originated at Turn. The methodology given in [11] first calculates the empirical action probability of line items (referred to as advertising channels in the paper):\np(a|li) = N+(li)\nN+(li) +N\u2212(li) ,\n\u2217\nas well as pairs of line items :\np(a|li, lj) = N+(li, lj)\nN+(li, lj) +N\u2212(li, lj) .\nIn the formulation, N+ denotes the number of times that any user in the system has observed an ad sequence with an ad from line item li (or ads from the pair of line items li and lj) that ended in action, whereas N\u2212 denotes the number of sequences that did not end in action (and had line item li, or the pair li and lj , in it). This formulation basically gives the probability that a sequence of ads shown to a user will end in conversion if it has an ad from li (or the pair li and lj) in it. In our deployed system, we only consider actions for the last taction days to be attributed to the impressions and clicks (i.e. ad sequence) that the user experienced which happened up to tassociation days before each action. Different values can be employed for the above two variables.\nOnce the action probabilities are calculated, the contribution weight (to be normalized to calculate actual attribution) for a line item is calculated in [11] as:\nw(li) = p(a|li)+ 1\n2(N \u2212 1)\n\u2211\ni6=j\n{p(a|li, lj)\u2212 p(a|li)\u2212 p(a|lj)},\nwhere N is the total number of line items under the advertiser that li belongs to. Our experience with the current advertising system built in Turn is that the second term,\n* As a side note, in this setting, probability of action for a se-\nquence (regardless of the line items in it) is p(a) = N+\nN++N\u2212 ,\nwhere N+ is the total number of sequences (regardless of line items) that ended in action, N\u2212 is the total number of sequences that did not. This can be written in terms of action probabilities conditioned on line items as:\np(a) = \u2211\nS\u2208{P(L)\u2212\u2205}\nf(S) p(a|S) p(S)\nwhere L is the set of all line items and P (L) is the power set of (all subsets, and we further remove the empty set, \u2205) L. p(S) is the probability of a set of line items appearing together in a sequence (marginal probability of the set), which is calculated as N+(S)+N\u2212(S)\nN++N\u2212 , i.e. total number of sequences which have set S in it, divided by the total number of sequences. p(a|S) is the conditional probability of action given set S, and f(S) is a function which gives +1 if set S has odd number of line items in it, and \u22121 if set S has even number of line items in it. This is the probability of union of conditional action events, where line items are not independent of each other.\nAlgorithm 1 Second Step of Multi-Touch Attribution, Calculates the Attribution for Each Action and ROI for Each Line Item\ntaction = action window tassociation = impression/click association window // tp: touch-point, li: line item for each user ui do\nKeep only the imps and clicks for the time period: [today - (taction + tassociation), today] Keep only the actions for the time period [today - taction, today]\nend for action sequence set Saction = \u2205 // only look at action sequences // since we are doing attribution add each tp sequence Si that ended in action (i.e. within\ntassociation window of an action) into Saction for each Si \u2208 Saction do\nweightSum = \u2211\nli where li has a touch-point in Si w(lj)\nfor each lj that has a touch-point in sequence Si do\nactionAttributedlj += w(lj) weightSum totalActionAttributedlj += actionAttributedlj totalActionValuelj += actionAttributedlj \u00d7\nvalueOfActionPreceededBySi end for\nend for for each line item lj do output totalActionAttributedlj // total number of\n// actions attributed to lj output totalActionValuelj // total value of actions\n// attributed to lj\nROIlj = totalActionValuelj\ncostlj\noutput ROIlj // return-on-investment of lj end for\ni.e. the second-order calculations, does not give enough advantage in accuracy to justify the increase in processing time required to train the model (calculating the pair-wise probabilities as well as using these probabilities for the contribution weight), hence we utilize the first-order probabilities to calculate weights for the line items (although both firstorder and second-order calculations are supported in our system). Therefore, the weight of each line item utilized for attribution is given as:\nw(li) = p(a|li) = N+(li)\nN+(li) +N\u2212(li) . (2)\nFor the first step in attribution, we go through each user (i.e. web user, whose data consists of a set of impressions, clicks and actions), and only process data for a certain period (keep the actions for the last taction days, and the impressions for the last taction + tassociation days, since we only attribute an action to an impression if the impression happened up to tassociation days before the action). Later, we extract the sequences of touch-points for the users, both those that end in an action, and those that do not. Since a sequence can have multiple touch-points from the same line item, we deduplicate those touch-points, and in the end we calculate the probability of a line item being in a sequence that ends in action as its weight (i.e. equation 2 above), which will be used for attribution in the second step of our employed MTA algorithm. During the first step, we also calculate the amount of money spent by each line item, which is crucial to calculate ROI.\nThe second step in our employed action attribution scheme is given in Algorithm 1. Since we already calculated the weights (w(li)) for the line items in the previous step, now all we have to do is to assign each action to the line items that showed at least one ad before (within a tassociation window) it, according to their weights (i.e. normalized weight for each line item is the fraction of the action that is attributed to it). For this purpose, we only look at the sequences that ended in action (contrary to first step, but this is needed to calculate the weights, and total cost), and in the end return the total values of the fractional actions attributed to each line item. We also calculate ROI as given in equation 1 (please note that costlj is the total amount of money spent by line item lj for advertising, over both action and no-action sequences, and is calculated in the first step of our attribution scheme).\nPlease note that both of the above steps are easily parallelizable, and we present some details in the next section on how we implement our attribution and allocation system."}, {"heading": "5. IMPLEMENTATION DETAILS", "text": "As aforementioned, the attribution scheme we employed as given in \u00a7 4.2 is easily parallelizable and we have implemented the two-step algorithm on Hadoop [13]. This parallel implementation is necessary due to the large (multiple billions of virtual users, where each user is a set of cookies) number of users, and since we have to process the action and\nno-action sequences for each of them. Indeed, the amount of data we process (tens of terabytes of user profile data) is bigger than other works published so far, and represents perfectly the nature of real-world online advertising systems. The two-step MTA algorithm is run every day, for each advertiser, and is scheduled by Oozie Workflow Scheduler [1]. The current implementation at Turn takes \u224840 seconds per mapper for each of the first and second steps. The overall job (both steps) takes around two hours to complete every day in our production system.\nThe overview of our MTA implementation is given in Figure 4, which gives the details of the two steps separately. In Figure 4(a), we present the implementation of first step in our deployed attribution algorithm, which calculates the attribution weights for each line item. The parallel processing works as follows. First, we shard the whole set of users into many mappers, which extract the action and no-action sequences, and for each sequence throws out line item id as the key, and the following values: (i) cost for the impressions (touch-points) of the line item inside the sequence, (ii) whether this sequence is an action sequence (0/1 value), and (iii) whether this sequence is a no-action sequence (0/1 value). These <key, value tuple> pairs are sent to the reducers, and the pairs with the same key end up in the same reducer which allows for aggregation. In the end, each reducer outputs the line item id key, and the aggregated total number of action and no-action sequences which are used to calculate the weight.\nThe implementation of the second step of our deployed attribution scheme, where the actual action attribution as well as the line item level return-on-investment (ROI) are calculated, is presented in Figure 4(b). Similar to Figure 4(a), we first shard the users into mappers, and in each mapper we only go over the action sequences. Furthermore, we send the output of the first job (line item weights, as well as total costs) into the mappers, since these values are used to determine the action attribution and ROI for each line item. For each action sequence, the mappers throw out the line item id (for each line item that had a touchpoint inside this sequence that ended in an action) as key, and the following values: (i) total cost of line item (this is only for continuity, copied exactly from the output of first job), (ii) percentage of the action (that concludes this sequence) that is attributed to line item (attributed action which is within the interval [0, 1]), and (iii) the value of the action (that concludes this sequence) \u00d7 attributed action (attributed action value), which represents the money made by the help of advertising under this line item. Again, the same keys are collected within the same reducer, and the reducer aggregates the values to calculate the total action value (total attributed action value) received by a line item, as well as the ROI for the line item (which uses both total attributed action value and total cost for this line item, and calculates ROI according to equation 1).\nThe architecure we employ for MTA-based budget allocation is given in Figure 5. The budget allocation algorithm runs on the control server which picks up the MTAperformance information from the Hadoop Distributed File System (HDFS), which is populated by the MTA Oozie job. Then, the control server calculates the daily budgets for line items, and calculates the spending rates [8] for time periods within the day. These spending rates are sent to ad servers, which do the spending, and send the money spent for each line item back to control server. Control server starts or stops line items from further spending (this signal is also sent to ad servers) if the line item has depleted its budget for the day."}, {"heading": "6. RESULTS", "text": "For our evaluations, we have set up two campaigns in a real online advertising environment, with the same campaign level budget, to run over 12 days within the month of November, in 2013. Both campaigns have four identical line\nitems that run on differing targeting criteria. The only difference in the two campaigns is that the budget allocation in one is calculated utilizing the ROI values generated by MTA, and LTA in the other case. Please note that although MTA-based budget allocation is used commonly within our platform due to its advantages, we present the results of a single experiment. This is due to the fact that this kind of A/B testing requires exact set up of two campaigns to compare, hence it requires experimentation budget (i.e. money, since we assign the same amount of money to both campaigns to allocate among sub-campaigns and then spend on advertising). We are providing results in terms of returnon-investment (ROI), effective cost per action (eCPA) and effective cost per click (eCPC) metrics, which are calculated in the campaign level. Our aim is to show that by allocating budgets differently to sub-campaigns according to different attribution methodologies, we improve the performance of the overall campaign. While we have explained the ROI metric throughout the paper, the latter two metrics can be described as follows:\n\u2022 Effective Cost per Action (eCPA): What is the average amount of money that is spent by an advertiser (on advertising) to receive one action (i.e. purchase etc.)? This metric can be calculated as Advertising Cost\n# of Actions .\n\u2022 Effective Cost per Click (eCPC): What is the average amount of money that is spent by an advertiser (on advertising) to receive one click (on its ad)? This metric can be calculated as Advertising Cost\n# of Clicks .\nThe results for the return-on-investment of the budget allocation applying the two attribution methodologies (LTA and MTA) is given in Figure 6. Due to privacy issues, we have modified the actual ROI values with a constant factor.\nSince we receive actions in the campaign level (i.e. when we receive an action, we know it belongs to a certain campaign, attribution to sub-campaigns comes afterwards), it is easier to calculate the overall ROI for the two identical campaigns run, to evaluate the results. It can be seen that we have\nmuch higher ROI for the MTA scheme utilized, which signifies that the ranking information (estimated ROI) is more accurate for MTA.\nThe results in terms of eCPA and eCPC are given in Figure 7 and Figure 8, respectively (again, the values are modified by a constant factor). Again, it can be seen that the budget allocation based on the MTA performs much better compared to the one that applies LTA. Please note that these eCPA and eCPC values are closely related to ROI (if the action values are the same for all actions, low eCPA means high ROI), but we see that the MTA-based allocation is much better in terms of ROI, compared to eCPA. This is due to the fact that we were able to get many more \u201chigh quality\u201d (high value) actions by the MTA-based budget allocation scheme. Finally, although budget allocation was optimized towards actions via MTA, we can observe that since\nthe MTA gives us the overall more effective sub-campaigns, eCPC has also improved.\nThe final set of results for our experiment is given in Figure 9, which enhances our conclusion that MTA leads to better determination of sub-campaign utilities, and to improved budget allocation. In the figure, we present the percentage of the total budget allocated to each line item, alongside with the ROI received from that line item during the run of the experiment. Although we can see that the ROIs received by identical campaigns are slightly different (this difference is expected, considering different budgets are assigned), we see a remarkable correlation with the allocation achieved by the MTA-based budget allocation and the actual ROIs recorded. One more point of interest for the graph is about the highest allocated budget in the LTA case (LI 3, i.e. line item 3). This line item is actually a retarging sub-campaign (i.e. tries to target users who have acted in some way about this product, e.g. go to the homepage, click etc.), hence it is very likely to do the last push for a user before buying a product. This of course leads to unfair assignment of actions in LTA case, unlike MTA."}, {"heading": "7. CONCLUSIONS AND FUTURE WORK", "text": "In this paper, we have focused on the problem of budget allocation in online advertising domain. We have shown that sub-campaign performance values, calculated via the multitouch attribution, leads to better allocation of budgets. This has been demonstrated empirically in our real-world online\nadvertising platform. We also gave a detailed explanation on the algorithms utilized for both budget allocation and multi-touch attribution, as well as their implementation.\nOur future work mainly focuses on employing improved multi-touch attribution algorithms. Furthermore, we plan on the application of MTA for bidding as well, i.e. the bid is calculated utilizing the past performance values generated by the MTA algorithm."}, {"heading": "8. REFERENCES", "text": "[1] Apache oozie workflow scheduler for hadoop.\nhttp://oozie.apache.org/. Accessed: 2014-01-24.\n[2] V. Abhishek, P. S. Fader, and K. Hosanagar. Media exposure through the funnel: A model of multi-stage attribution. In Proc. WISE, 2013.\n[3] N. Alon, I. Gamzu, and M. Tennenholtz. Optimizing budget allocation among channels and influencers. In Proc. ACM WWW, 2012.\n[4] N. Archak, V. S. Mirrokni, and S. Muthukrishnan. Budget optimization for online advertising campaigns with carryover effects. In Proc. ACM Workshop on Ad Auctions, 2010.\n[5] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian. Dynamics of bid optimization in online advertisement auctions. In Proc. ACM WWW, pages 531\u2013540, 2007.\n[6] B. Dalessandro, C. Perlich, O. Stitelman, and F. Provost. Causally motivated attribution for online advertising. In Proc. ACM ADKDD, 2012.\n[7] G. E. Fruchter and W. Dou. Optimal budget allocation over time for keyword ads in web portals. J. Optimization Theory and Applications, 124(1):157\u2013174, 2005.\n[8] K.-C. Lee, A. Jalali, and A. Dasdan. Real time bid optimization with smooth budget delivery in online advertising. In http://arxiv.org/pdf/1305.3011v1.pdf, pages 1\u201313, 2013.\n[9] K.-C. Lee, B. Orten, A. Dasdan, and W. Li. Estimating conversion rate in display advertising from past performance data. In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining, pages 768\u2013776, 2012.\n[10] O. Ozluk and S. Cholette. Allocating expenditures across keywords in search advertising. J. Revenue and Pricing Management, 6(4):347\u2013356, 2007.\n[11] X. Shao and L. Li. Data-driven multi-touch attribution models. In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining, pages 258\u2013264, 2011.\n[12] L. S. Shapley. A value for n-person games. Annals of Mathematical Studies, 28:307\u2013317, 1953.\n[13] T. White. Hadoop: The Definitive Guide. O\u2019Reilly Media, Sebastopol, CA, 2012.\n[14] D. A. Wooff and J. M. Anderson. Time-weighted multi-touch attribution and channel relevance in the customer journey to online purchase. J. Statistical Theory and Practice, 2013.\n[15] W. Zhang, Y. Zhang, B. Gao, Y. Yu, X. Yuan, and T.-Y. Liu. Joint optimization of bid and budget allocation in sponsored search. In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining, 2012."}], "references": [{"title": "Media exposure through the funnel: A model of multi-stage attribution", "author": ["V. Abhishek", "P.S. Fader", "K. Hosanagar"], "venue": "In Proc. WISE,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Optimizing budget allocation among channels and influencers", "author": ["N. Alon", "I. Gamzu", "M. Tennenholtz"], "venue": "In Proc. ACM WWW,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Budget optimization for online advertising campaigns with carryover effects", "author": ["N. Archak", "V.S. Mirrokni", "S. Muthukrishnan"], "venue": "In Proc. ACM Workshop on Ad Auctions,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Dynamics of bid optimization in online advertisement auctions", "author": ["C. Borgs", "J. Chayes", "O. Etesami", "N. Immorlica", "K. Jain", "M. Mahdian"], "venue": "In Proc. ACM WWW,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2007}, {"title": "Causally motivated attribution for online advertising", "author": ["B. Dalessandro", "C. Perlich", "O. Stitelman", "F. Provost"], "venue": "In Proc. ACM ADKDD,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2012}, {"title": "Optimal budget allocation over time for keyword ads in web portals", "author": ["G.E. Fruchter", "W. Dou"], "venue": "J. Optimization Theory and Applications,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2005}, {"title": "Real time bid optimization with smooth budget delivery in online advertising", "author": ["K.-C. Lee", "A. Jalali", "A. Dasdan"], "venue": "In http://arxiv.org/pdf/1305.3011v1.pdf,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Estimating conversion rate in display advertising from past performance data", "author": ["K.-C. Lee", "B. Orten", "A. Dasdan", "W. Li"], "venue": "In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Allocating expenditures across keywords in search advertising", "author": ["O. Ozluk", "S. Cholette"], "venue": "J. Revenue and Pricing Management,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "Data-driven multi-touch attribution models", "author": ["X. Shao", "L. Li"], "venue": "In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "A value for n-person games", "author": ["L.S. Shapley"], "venue": "Annals of Mathematical Studies,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1953}, {"title": "Hadoop: The Definitive Guide", "author": ["T. White"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Time-weighted multi-touch attribution and channel relevance in the customer journey to online purchase", "author": ["D.A. Wooff", "J.M. Anderson"], "venue": "J. Statistical Theory and Practice,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2013}, {"title": "Joint optimization of bid and budget allocation in sponsored search", "author": ["W. Zhang", "Y. Zhang", "B. Gao", "Y. Yu", "X. Yuan", "T.-Y. Liu"], "venue": "In Proc. ACM SIGKDD Conf. on Knowledge Discovery and Data Mining,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}], "referenceMentions": [{"referenceID": 7, "context": "[9].", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": ") only if the value for the ad impression opportunity is high enough to win in a real-time auction [5].", "startOffset": 99, "endOffset": 102}, {"referenceID": 2, "context": "As an example of budget optimization, we can list [4], where the user behavior is modeled as a Markov chain.", "startOffset": 50, "endOffset": 53}, {"referenceID": 8, "context": "For example, the authors of [10] propose a combined model of bid price and budget determination for keywords.", "startOffset": 28, "endOffset": 32}, {"referenceID": 8, "context": "However, [10] does not take into account the ability to deliver, which is crucial, and we focus on allocation based on actions, which is difficult due to the attribution problem.", "startOffset": 9, "endOffset": 13}, {"referenceID": 5, "context": "In [7], the authors discuss the assignment of budgets to two types of search portals, generic and specialized.", "startOffset": 3, "endOffset": 6}, {"referenceID": 13, "context": "The closest approach to the one proposed in this paper is given in [15].", "startOffset": 67, "endOffset": 71}, {"referenceID": 13, "context": "Firstly, [15] utilizes clicks to decide on the utility of campaigns, where we utilize actions.", "startOffset": 9, "endOffset": 13}, {"referenceID": 13, "context": "The authors of [15] argue that these two should be combined since there can be well-performing keywords under overall low-performing campaigns.", "startOffset": 15, "endOffset": 19}, {"referenceID": 13, "context": "While such an argument is valid for search advertising, which [15] focuses on, this is not the case for online display advertising.", "startOffset": 62, "endOffset": 66}, {"referenceID": 1, "context": "Finally, for a more theoretic approach, we can list [3], which focuses on the budget allocation problem to maximize the set of influenced target nodes (users).", "startOffset": 52, "endOffset": 55}, {"referenceID": 9, "context": "While there have been simple models utilized in the industry to perform multi-touch attribution, the first published work for data-driven allocation is given in [11].", "startOffset": 161, "endOffset": 165}, {"referenceID": 4, "context": "The authors of [6] utilize Shapley value [12] for attribution.", "startOffset": 15, "endOffset": 18}, {"referenceID": 10, "context": "The authors of [6] utilize Shapley value [12] for attribution.", "startOffset": 41, "endOffset": 45}, {"referenceID": 4, "context": "It is also shown in [6] that the simple probabilistic scheme employed by [11] is equivalent to a Shapley value formulation after rescaling, and under certain simplifying assumptions.", "startOffset": 20, "endOffset": 23}, {"referenceID": 9, "context": "It is also shown in [6] that the simple probabilistic scheme employed by [11] is equivalent to a Shapley value formulation after rescaling, and under certain simplifying assumptions.", "startOffset": 73, "endOffset": 77}, {"referenceID": 0, "context": "[2] model user behavior as a hiddenMarkov model (since user states are not observable, but only the outcome is, such as clicks).", "startOffset": 0, "endOffset": 3}, {"referenceID": 12, "context": "Finally, in [14], the authors claim that, given no other", "startOffset": 12, "endOffset": 16}, {"referenceID": 9, "context": "In this paper, our emphasis is on multi-touch attribution, and we utilize the probabilistic model given in [11], which also originated at Turn.", "startOffset": 107, "endOffset": 111}, {"referenceID": 9, "context": "The methodology given in [11] first calculates the empirical action probability of line items (referred to as advertising channels in the paper):", "startOffset": 25, "endOffset": 29}, {"referenceID": 9, "context": "Once the action probabilities are calculated, the contribution weight (to be normalized to calculate actual attribution) for a line item is calculated in [11] as:", "startOffset": 154, "endOffset": 158}, {"referenceID": 11, "context": "2 is easily parallelizable and we have implemented the two-step algorithm on Hadoop [13].", "startOffset": 84, "endOffset": 88}, {"referenceID": 6, "context": "Then, the control server calculates the daily budgets for line items, and calculates the spending rates [8] for time periods within the day.", "startOffset": 104, "endOffset": 107}], "year": 2013, "abstractText": "Budget allocation in online advertising deals with distributing the campaign (insertion order) level budgets to different sub-campaigns which employ different targeting criteria and may perform differently in terms of return-on-investment (ROI). In this paper, we present the efforts at Turn on how to best allocate campaign budget so that the advertiser or campaign-level ROI is maximized. To do this, it is crucial to be able to correctly determine the performance of sub-campaigns. This determination is highly related to the action-attribution problem, i.e. to be able to find out the set of ads, and hence the sub-campaigns that provided them to a user, that an action should be attributed to. For this purpose, we employ both last-touch (last ad gets all credit) and multi-touch (many ads share the credit) attribution methodologies. We present the algorithms deployed at Turn for the attribution problem, as well as their parallel implementation on the large advertiser performance datasets. We conclude the paper with our empirical comparison of last-touch and multi-touch attribution-based budget allocation in a real online advertising setting.", "creator": "gnuplot 4.6 patchlevel 3"}}}