{"id": "1503.00082", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Feb-2015", "title": "Group Event Detection with a Varying Number of Group Members for Video Surveillance", "abstract": "- this accompanying paper presents a commercially novel hierarchical approach utilized for automatic recognition reconstruction of group activities for video surveillance applications. we both propose to use a group identify representative to handle identifying the recognition with varying a wildly varying number identities of group identifiable members, achieve and use an asynchronous serial hidden gradient markov model ( often ahmm ) interface to consistently model the relationship between people. furthermore, we propose a group symmetric activity detection imaging algorithm which aims can handle both symmetric symmetric and hierarchical asymmetric group activities, and demonstrate that this approach enables facilitated the detection application of explicit hierarchical neural interactions between people. experimental analysis results show the effectiveness of running our approach.", "histories": [["v1", "Sat, 28 Feb 2015 06:51:39 GMT  (653kb)", "http://arxiv.org/abs/1503.00082v1", "This manuscript is the accepted version for TCSVT (IEEE Transactions on Circuits and Systems for Video Technology)"]], "COMMENTS": "This manuscript is the accepted version for TCSVT (IEEE Transactions on Circuits and Systems for Video Technology)", "reviews": [], "SUBJECTS": "cs.CV cs.AI cs.MM", "authors": ["weiyao lin", "ming-ting sun", "radha poovendran", "zhengyou zhang"], "accepted": false, "id": "1503.00082"}, "pdf": {"name": "1503.00082.pdf", "metadata": {"source": "CRF", "title": "Group Event Detection with a Varying Number of Group Members for Video Surveillance", "authors": ["Weiyao Lin", "Ming-Ting Sun", "Radha Poovendran"], "emails": [], "sections": [{"heading": null, "text": "This paper presents a novel approach for automatic recognition of group activities for video\nsurveillance applications. We propose to use a group representative to handle the recognition with a varying number of group members, and use an Asynchronous Hidden Markov Model (AHMM) to model the relationship between people. Furthermore, we propose a group activity detection algorithm which can handle both symmetric and asymmetric group activities, and demonstrate that this approach enables the detection of hierarchical interactions between people. Experimental results show the effectiveness of our approach.\nI. Introduction\nDetecting human group behavior or human interactions has attracted increasing research interests\n[1-6]. Some example group events of interests include people fighting, people being followed, people walking together, terrorist launching attacks in groups, etc. Being able to automatically detect group activities of interests is important for many security applications. In this paper, we address the following issues for group event detection."}, {"heading": "A. Group Event Detection with a Varying Number of Group Members", "text": "Most previous group event detection researches [1-2] use a Hidden Markov Model (HMM) or its\nvariation to model the human interactions. Some researchers try to recognize human interactions based on a content-independent semantic set [3-4]. However, most of these works are designed to recognize group activities with a fixed number of group members, where the input feature vector\nlength is fixed. They cannot handle the case where the number of group members is varying, which often occurs in our daily life (e.g., people may leave or join a group activity). In this case, the input feature vector length may vary with different number of group members. Although some works [5-6] tried to deal with the detection of group activities with a varying number of members, most of them have assumptions under some specific scenarios which restrict their applications."}, {"heading": "B. Group Event Detection with a Hierarchical Activity Structure", "text": "In many scenarios, interacting people form subgroups. However, these subgroups are not\nindependent to each other and they may further interact to form a hierarchical structure. For example, in Fig. 1, three people fighting form a subgroup of fighting (the dashed circle). At the same time, another person is approaching the three fighting people and these four people form a larger group of approaching (the solid circle in Fig. 1). This is an example of hierarchical activity structure with the group of approaching at a higher level than the group of fighting. Some algorithms [1-2] could be extended to deal with the problem of hierarchical structure event detection when the number of group members is fixed. Our work addresses the problem of group event detection with a varying number of group members under a hierarchical activity structure."}, {"heading": "C. Clustering with an Asymmetric Distance Metric", "text": "Most previous clustering algorithms [6,10] perform clustering based on a symmetric distance\nmetric (i.e., the distance between two people is symmetric regardless of the relationship of the people).\nIn the group event detection, some activities such as \u201cfollowing\u201d are asymmetric (e.g. \u201cperson i following person j\u201d is not the same as \u201cperson j following person i\u201d). Defining a suitable asymmetric distance metric and performing clustering under the asymmetric distance metric is an important issue.\nThe contributions of this paper are summarized as follows:\nctivity structure, we propose a\n2) ing number of people, we propose to\n3) opose a\nThe rest of the paper is organized as follows. Section II describes the distance metric for\nmodeli"}, {"heading": "II. The Activity Correlation Metric Between People", "text": "Model (AHMM) [1,7] to model the\nthere are\ntwo a\n1) To address the problem of detection with a hierarchical a\nSymmetric-Asymmetric Activity Structure (SAAS). To address the problem of detecting events with a vary use a Group Representative (GR) to represent each symmetric activity sub-group. To address the problem of clustering with an asymmetric distance metric, we pr Seed-Representative-Centered clustering algorithm (SRC clustering) to cluster people with asymmetric distance metric. We combine these contributions into a Group-Representativebased Activity Detection (GRAD) algorithm.\nng the activity correlation between two people, which is used in our SRC clustering. Section III\ndescribes the proposed SAAS. Section IV describes the SRC clustering algorithm. Section V describes the definition of group representative and its use in the GRAD algorithm. Experimental results are shown in Section VI. Section VII discusses some possible extensions of the algorithm. We conclude the paper in Section VIII.\nIn this paper, we use the Asynchronous Hidden Markov\nactivity correlation metric between two people. It should be noted that our proposed GRAD algorithm, as to be detailed later, is general and can easily be extended to use other models [2,12,13,14].\nAHMM was introduced to handle asynchronous feature streams. As in Fig. 2, assume\nsynchronous observation (or feature) sequences Fi(1:S) for person i from time 1 till time S and\nFj(1:T) for person j from time 1 till time T with the length T\u2265S, the AHMM tries to associate the\ncorresponding features in order to obtain a better match between streams.\nThe probability that the system emits the next observation of sequence Fi at time t while in\nstate q(t)=k, as defined in [7], is, ( )):1(),:1(,)(,1 tFsFktqs ji=\u2212= (1) where P(\u00b7) represents the probability. The additional hidden variable )1()(),( tstPtk \u2212== \u03c4\u03c4\u03b5 st =)(\u03c4 can be seen as the\non Eqn (alignment between Fi and q (and Fj which is also aligned with q). Based 1), we can define the forward procedure as in Eqn (2) [7].\n( )):1(),:1(,)(,)(),,( tqstptks tFsFk ji=== \u03c4\u03b1 (2)\nwhere p(\u00b7) represents the distribution, and are the observations for persons i and j at time s\number of hidden\nth respect to person i under activity \u03b8 at\ntime t\n\u2211\n\u2211\n=\n=\n\u2212=\u2212==+\n\u2212\u2212=\u2212===\nN\nl j\nN\nl ji\ntlsltqktqPktqtFptk -(1\ntlsltqktqPktqtFsFptk\n1\n1\n)1,,())1(|)(())(|)(()),(\n)1,,1())1(|)(())(|)(),((),(\n\u03b1\u03b5\n\u03b1\u03b5\n)(sFi )(tFj\nand t, respectively, and N is the total n states.\nTherefore, the activity correlation metric for person j wi can be calculated as:\n\u2211 \u2211\n\u2211 \u2211 \u2211\n=\n\u0394+=\n\u0394\u2212=\n\u2208\n\u0394+=\n\u0394\u2212=\n\u2208\n=== sN\nk\ntts\ntts\nk\ntts\ntts\nk jii\ntks\ntks tFsFktqPtjco\n1 ),,(\n),,( )):1(),:1(|)((),(\n\u03b1\n\u03b1 \u03b8\n\u03b8\n\u03b8 (3)\nwhere \u03b8\u2208k means all the states that belong to the model of activity \u03b8. Ns is the total number of states over all activities.\nWe call the activity with the largest the label for j with respect to i ( ),\nwhich is defined in Eqn (4):\n),( tjcoi \u03b8 )( jLi\n),(max)( tjcojL ii \u03b8 \u03b8 = (4)\nThe reason of using AHMM for modeling the activity correlation metric is that AHMM can\nhandle asynchronous feature streams. Since the feature streams of different people in the same group may not be perfectly synchronized (e.g., when two people walk together, one person may stretch the leg earlier than the other person), AHMM can help reduce the possible recognition errors from these action asynchronies, as will be demonstrated in the experimental results.\nAlso, from Eqn (3) and (4), we can see that the activity correlation metric is not symmetric\n(e.g., \u2211\u2211 \u2208\u2208 ==\u2260== \u03b8 \u03b8 \u03b8 \u03b8 k ijj k jii tFsFktqPticotFsFktqPtjco )):1(),:1(|)((),()):1(),:1(|)((),( because\nthe order of Fi and Fj has been changed, and similarly may not equal to ). Therefore,\nwhen we use this activity correlation metric as the distance metric for clustering, we need to deal with the problem of clustering with an asymmetric distance metric as will be described in detail in Section IV.\n)( jLi )(iLj"}, {"heading": "III. Symmetric and Asymmetric Activities", "text": "To solve the problem of the hierarchical activity structure, we classify activities into symmetric\nactivities and asymmetric activities. Assume we have two entities i and j, the activity \u03b8 between i and j is defined as a symmetric activity if \u201ci has the activity \u03b8 with j\u201d is the same as \u201cj has the activity \u03b8 with i\u201d. For example, the activity WalkTogether is a symmetric activity because \u201ci walking together with j\u201d\nis the same as \u201cj walking together with i\u201d. From the above definition, we see that entities belonging to the same symmetric activity play similar roles for the activity and are interchangeable. We can further define the symmetric group as a group of entities where any two entities in the group perform the same symmetric activity. A symmetric group can have a varying number of group members or entities. It should be noted that we also extend the definition of symmetric group to include single entity activity cases. For example, if a person walks alone and does not have any symmetric activity interaction with other people, this single person can form a symmetric group of walking.\nSimilarly, the activity \u03b8 between i and j is defined as an asymmetric activity if the activity is not a\nsymmetric activity. For example, the activity Following is an asymmetric activity because \u201ci is following j\u201d is different from \u201cj is following i\u201d.\nWith the introduction of symmetric activity and asymmetric activity, we proposed to solve the\nhierarchical-activity-recognition problem by first clustering people into non-overlapping symmetric groups and then modeling the asymmetric-activity interactions between the symmetric groups. We call this the Symmetric-Asymmetric Activity Structure (SAAS). For example, in the example of Fig. 1, we can first cluster people into two symmetric groups: the three-people fighting group and one person walking group. Then the asymmetric activity Approaching between these four people can be modeled as the interaction between the fighting group and the walking group. It should be noted that the idea of the proposed SAAS is general and can easily be extended to model other hierarchical activity structures. For example, we can model the symmetric activities of two WalkTogether groups as the lower level activity and model the symmetric activity Ignore (i.e. people ignore each other) between these two groups as the higher level activity, thus forms a Symmetric-Symmetric Activity Structure (SSAS)."}, {"heading": "IV. The SRC clustering algorithm", "text": "Based on the description of SAAS, before detecting the symmetric activity of each symmetric\ngroup and the asymmetric activity between symmetric groups, we need to cluster people into symmetric groups first. In this section, we propose a Seed-Representative-Centered clustering (SRC\nclustering) algorithm. The algorithm is described as follows:\nStep 1) Detecting the cluster seeds. Two kinds of cluster seeds are defined.\n1) Active people in the group. Person i will be considered as an active person in the group if\n(5) Ci TtC >)(\nwhere is the change of body size of person i at time t and T)(tCi c is a threshold.\nis calculated by )(tCi ( ))()( )()()()( )( tHtW 1tH1tWtHtW tC ii iiii i \u22c5 \u2212\u22c5\u2212\u2212\u22c5 =\nwhere and are the width and height of the Minimum Bounding Box\n(which is the smallest rectangular box that includes the person in motion [9]) of person i at time t.\n)(tWi (t)Hi\n2) The people pairs with high activity correlation metric values. People pairs i and j with\nhigh activity correlation metric values will also be considered as cluster seeds, if\n(6) \u23aa \u23a9\n\u23aa \u23a8\n\u23a7\n= >>\nactivity symmetrica is jL and iLjL\nTtico and Ttjco\ni\nji\no L jo L i\n)( ),()(\n),(),(\nwhere To is a threshold to decide where people pairs i and j have high activity correlation.\nStep 2) Post-processing of the cluster seeds. After detecting the cluster seeds, a post processing is\nperformed to combine seeds that belong to the same symmetric group. Cluster seeds with the same symmetric activity label will be combined together. For example, if (a,b) is a cluster seed and c is another cluster seed, c can be combined with (a,b) to form a larger seed of (a,b,c) if La(b)=La(c)=Lc(a).\nStep 3) Calculate Seed Representatives (SR) for the cluster seeds. We can combine people in the\nsame cluster seed to create a Seed Representative (SR) for each cluster seed. There can be many ways to define the Seed Representative. For example, we could pick any feature vector close to the cluster center as the Seed Representative. In this paper, the average\nfeature vector of people in the same seed is used as the SR for the cluster seeds.\nStep 4) Cluster the remaining people based on the SRs. The calculated Seed Representatives serve as\nthe centers of clusters and the remaining people are clustered around them. A person i is grouped into the cluster indicated by the SR K if is maximum and L),( tKcoLi i(K) is a\nsymmetric activity. It should be noted that only the Seed-Representative-Centered (SR-Centered) metric value is used for clustering in this step. The SR-Centered metric\nSince only the SR-C\nvalue is defined as:\nentered metric value is used for clustering, the asymmetry problem of\nity correlation metric is avoided.\nAs a summary, the proposed SRC clustering algorithm extracts only high correlation pairs as\nwell as single active person in the seed detection step and use only the SR-Centered value in the cluste\nRepresentative and the GRAD algorithm\n. The Definition of Group Representative\nnterchangeable and play a similar role.\np can be represented by a single entity, which we call the\nGroup\n1) Physical GR (P-GR). The Physical Group Representative is an actual person selected from the\nsymmetric group. We define P-GR as the most representative person of the symmetric group\nL ico (K,t) is an SR-Centered metric value if K is a SR and i is not a SR.\nthe activ\nring step. Therefore, it can deal with the problem of clustering with an asymmetric distance\nmetric."}, {"heading": "V. Group", "text": "A\nAs mentioned, people in the same symmetric group are i\nBased on this property, each symmetric grou\nRepresentative (GR). There can be different ways to define the GR. In this paper, we\ninvestigate three ways to define the GR. They are described as follows:\nwhich has the highest joint value for representing the group\u2019s activity \u03b8A as well as correlating with other people in the symmetric group, as in Eqn (7).\n( )),,()|)()( tiptp(FmaxtGR-P A0Ai \u03b8\u03b8 \u22c5= (7) iA\nwhere is the P-GR for symmetric group A at time t is the feature vector of\ni at time t,\n)(tGR-P A , )(tFi\nperson A\u03b8 is the activity for A, and t)i,(coexp)t,,i(p jA0 A \u239f= \u2211 \u03b8\u03b8 . In Eqn\n(7), )|)( Ai tp(F\nij and Aj \u239f\n\u239f\n\u23a0\n\u239e\n\u239c \u239c \u239c \u239d\n\u239b\n\u2260 \u2208\n\u03b8 r cts the representativeness o )t,,i Aefle f person i for activity \u03b8A, and 0 (p \u03b8\nin A [1 Virtual GR (V-GR). The virtual GR is not an actual person. Rather, it is the combination of multiple peop\ncan be viewed as a prior which measures the distance or correlation of person i to other people\n1].\n2)\nle in the same symmetric group. The V-GR is defined as the average of all people\nwhere Fi(t) is the feature vector for person i at time t, and group A is the symmetric group.\n3) Selective Virtual GR (SV-GR). Similar to V-GR, SV-GR is also a virtual GR which is the\nost\nwhere is the feature vector of SV-GR for group A at time t, F (t) is the feature\nvector for person i at time t.\nin the feature space in the same symmetric group. Therefore, the feature vector of V-GR at time t can be defined as:\n))(()( tFavgtF i A i GRV = (8) A \u2208 \u2212\ncombination of multiple people. However, SV-GR is the average of only those m representative people for the symmetric group, as in Eqn (9).\n))(()( tFavgtF i Ri GRSV A = (9) A \u2208 \u2212\n)(tF AGRSV \u2212\ni\n( ){ }RA0AiA Ttiptp(FNiR >\u22c5= ),,()|)(| \u03b8\u03b8 , where TR is a\nthreshold to decide whether person i is representative. ( )\u22c5N is the normalizat\n( ) 1),,()\nion operation\nsuch that A0Ai tiptp(FN \u03b8\u03b8 . |)( =\u22c5\u2211 i"}, {"heading": "B. Th lgorithm", "text": "With the introduction of GR as well as our proposed SAAS and SRC clustering algorithm, we\ntive-based Activity Detection (GRAD) algorithm to solve the problem of\ndetec\n3). The symmetric activity for each\ng rate model such as HMM for recognition, as described by Eqn (10).\ne GRAD A\npropose a Group-Representa\nting group events with a varying number of group members under a hierarchical activity\nstructure. The GRAD algorithm can be summarized as follows:\nStep 1) For each frame t, people are first clustered into non-overlapping symmetric groups by the\nSRC clustering algorithm (the dotted ellipses in Fig. symmetric group can then be recognized. In this paper, we propose the following two methods to recognize the symmetric activity. 1) Directly use the activity label for each cluster seed as the recognized activity for the\nsymmetric group.\n2) A more sophisticated way is to extract some group features [5,15] from the symmetric\nroup and use a sepa\n( ) tptp(Fmaxt 1AA ),()|)()( \u03b8\u03b8\u03b8 \u03b8 \u22c5= (10)\nwh an be viewed as a prior for activity [11]. )(tFA ere c\nis the global feature vector for symmetric group A, and\n)t,jcotp Aji i1 \u239f\u239f \u23a0 \u239e \u239c\u239c \u239d \u239b = \u2211 \u2208, (exp),( \u03b8\u03b8\n)|)( \u03b8tp(FA\nach symmetric group is represented by a Group Represent o bold solid circles n Fig. 3).\nis the prob\ncalculated by the model used for recognizing symmetric activities.\nStep 2) E ative (the tw\ni\nG mmetric group (the bold solid line in Fig. 3). In this paper, we detect the\nability\nStep 3) The asymmetric activity between symmetric groups is then captured by the interaction of the\nR of each sy\nasymmetric activity between two symmetric groups based on the activity correlation metric between GRs, as in Eqn (11). ( ) tpt(GRcomaxt 2AGRBA, B ),(),)( \u03b8\u03b8 \u03b8 \u22c5= (11) \u03b8\nwhere is the pr t),icotp BjAi j2 \u239f\u239f \u23a0 \u239e \u239c\u239c \u239d \u239b = \u2211 \u2208\u2208 , (exp),( \u03b8\u03b8 ior for asymmetric activity \u03b8 . A and B are\ntwo sy vity correlation metrics are not symmetric, in our\nAGRB\ncan a etric (e.g. two groups Ignore each other). In this case, the interaction of the\nmmetric groups. Since the acti\nnotations, we put the GRs in the order according to a specific feature such as the average speed of the symmetric group (i.e. the average speed for group A is aller than B in (GRco\u03b8 ). Furthermore, as mentioned, the activity between two symmetric groups\nlso be symm\nGR can also be used to detect the symmetric activity between two groups.\nIn the GRAD algorithm descr le GR to represent each symmetric\ngroup, we always have a fixed input feature vector length. Therefore, we can solve the problem of group event detection with a varying number of group members.\nSince we have all the activity correlation metrics between any two people, there can be\nalternative methods to deal with the detection-with-a-varying-number-of-members problem. For example, we can use the Majority Vote method (MV) [17,18] for asymmetric activity recognition by taking the majority vote from all the asymmetric activity labels between people pairs from two symmetric groups as the resulting activity label. Compared with MV and other methods, the major difference of our proposed GR method is to use a single representative (physical or virtual) to represent the whole symmetric group. With the introduction of GR, we can have the following advantages:\n1) Methods such as MV lack a global view of the whole group since all the activity correlation\nsm\n)\nibed above, since we use a sing\nC. Discussion of Group Representative\nmetrics only reflect the local information between two people. However, when selecting the GR\n2)\nrb the recognition result. For example, as in"}, {"heading": "VI. Experimental Results", "text": "is section, we show experimental results for our proposed methods and compare our results\nexperiments based on the BEHAVE dataset [8]. Six long sequences\nare se\nby Eqn (7)-(9), we are actually checking the whole symmetric group. Therefore, the selected GR will have a global view of the whole group.\nMore importantly, when detecting the asymmetric activity between two symmetric groups,\nsome people that are not highly related may distu Fig. 4, the asymmetric activity \u03b8 between A and B is mainly decided by the interaction between the bold-faced people (i.e. bold-faced circles in Fig. 4) in A and the bold-faced people in B. The dotted person located on the side of A does not have high correlation in \u03b8 with people in B and may have misclassified activity label with B. This dotted person is an outlier and may disturb the recognition results. When using methods such as MV to perform recognition, the dotted outlier person is included and the recognition accuracy may be decreased. However, when using GR with our proposed method (especially the P-GR and the SV-GR), the low-correlated outlier person will be discarded from the asymmetric activity detection process, thus reducing the disturbance from these outlier people. Therefore, our proposed GR will also increase the recognition accuracy by efficiently discarding outliers.\nIn th\nwith other methods. We perform\nlected in our experiments with each sequence including 7000 to 11000 frames. We try to detect\neight group activities: InGroup, Approach, WalkTogether, Split, Ignore, Chase, Fight, RunTogether.\nSome example video frames are shown in Fig. 5. The definitions of these eight activities are listed in Table 1. We classify these eight activities into two categories with InGroup, WalkTogether, Ignore, Fight and RunTogether as symmetric activities, and Approach, Split and Chase as asymmetric activities. It should be noted that we extended the definition of activity Ignore. The two people will ignore each other if they do not have other activity correlation. Furthermore, Ignore will also be used to model the non-interaction case between two symmetric groups. We also add a single activity into the symmetric activity list for those people that cannot be clustered into any symmetric group.\nthe features used for group activity recognition. Note that the proposed algorithm is not limited to the MBB features. Other more sophisticated features [19,20] can easily be applied to our algorithm to give better results. Six features are used for calculating the persons\u2019 activity correlation metrics in Eqn (3). They are listed in Table 2.\nwhich is available in the BEHAVE dataset to get the MBB information. In practice, various practical\n, there are in\ntotal\ntracking methods [15,21] can be used to obtain the MBB information. Furthermore, the thresholds Tc, To and TR in Eqn. (5), (6) and (9) are set to be 0.1, 0.95 and 0.3, respectively. These values are manually selected based on the statistics from one of the training sets. In practice, these thresholds can also be selected by some more sophisticated ways such as the validation set method [9].\nIn our experiments, four methods are compared. For all the HMMs or AHMMs in these methods,\nwe use two hidden states for each activity (plus the starting state and the finishing state\nfour states) and a two-mixture Gaussian Mixture Model (GMM) [23,24] for modeling the\nemission probability for each hidden state. It should be noted that the methods selected to compare in our experiments are typical and the results can easily be extended to other related methods [2,13,16,19]. The four methods are described as follows:\n1) HMM. Use a single HMM [12,21] to recognize either the symmetric activites or the\nasymmetric activities. When recognizing symmetric activities, the group features in Table 3\nare calculated for each symmetric group. However, it should be noted that the traditional HMM cannot deal with the recognition of hierarchical-structure activities (i.e., a single HMM cannot recognize a lower-level symmetric activity and an upper-level asymmetric activity at the same time). Furthermore, since the input feature vector length is fixed, it also cannot recognize activity with varying number of group members.\nas input to recognize asymmetric activities, as in Fig. 6. Furthermore, extra features are also calculated as input to the higher layer HMM [1]. In our experiment, we use hard decision outputs [1] of the lower layer HMMs as the input to the higher layer HMM. Furthermore, features in Table 2 are used as the extra features for inputting to the higher layer HMM. The extra features are calculated between two symmetric sub-groups. However, similar to HMM, since the input feature vector length of the layered HMM is also fixed, it cannot deal with the problem of activity recognition with varying number of group members.\n6. The etric activities and\nalgorithm to cluster people into symme ic groups and detect the activity of these\nHigher Layer HMM (Used to recognize asymmetric activities)\nFig. Layered HMM (Lower layer HMMs are used to recognize symm a higher layer HMM is used to recognize asymmetric activities).\n3) SAAS+SRC+MV. Based on the proposed SAAS, it uses our proposed SRC clustering\ntr\nsymmetric groups, then uses the Majority Vote to detect the asymmetric activities between the symmetric groups. When detecting the symmetric activities, two different methods are used: (a) use the activity label for each cluster seed as the recognized activity for the symmetric group (SAAS+SRC+MV-1 in Tables 5-9), and (b) calculate the group features from the symmetric group and use the HMM model for recognition, as in Eqn (10) (SAAS+SRC+MV-2 in Tables 5-9). The SAAS+SRC+MV method can recognize hierarchical-structure activities as well as activities with a varying number of group\nLo w\ner L\nay er\nH M\nM\n(U se\nd to\nre co\ngn iz e sy m m et ric a ct iv iti\nes )\nLo w\ner L\nay er\nH M\nM\n(U se\nd to\nre co\ngn iz e sy m m et ric a ct iv iti\nes )\nEx tra\nF ea\ntu re\ns\n\u2026\nRecognized asymmetric activity\nmembers. However, it should be noted that using only Majority Vote cannot recognize hierarchical-structure activities and varying-member activities. By combining MV with our proposed SAAS and SRC clustering algorithm, it can deal with these activities.\nThe GRAD algorithm (SAAS+SRC+GR). Use the GRAD algorithm to detect group\nctivities. Use our proposed SAAS and SRC clustering to cluster people a\n4)\na nd detect\nExp e the four methods described above, they\nare (a) recognizing hierarchical-structure activities with a varying number of group members\nsymmetric activities. However, different from the SAAS+SRC+MV method which uses MV to detect asymmetric activities, the GRAD algorithm uses our proposed GR to detect asymmetric activities. Similar to the SAAS+SRC+MV method, we use two different methods to detect symmetric activities. They are: (a) use the cluster seed label as the recognized activity (GRAD-1 in Tables 5\u20139), and (b) use an independent HMM to recognize\nthe symmetric activities (GRAD-2 in Tables 5\u20139).\neriments for four scenarios are designed to compar\n(hierarchical+varying in Table 4), (b) recognizing only symmetric activities with fixed number of group members (symmetric+fixed in Table 4), (c) recognizing only asymmetric activities with fixed number of group members (asymmetric+fixed in Table 4), and (d) recognizing hierarchical \u2013structure activities with fixed number of group members (hierarchical+fixed in Table 4). These four sets of experiments will be described in detail in the following sections. Table 4 summarizes the capabilities of the four methods in dealing with these four experimental tasks. It should be noted that the scenario of hierarchical+varying is the general case for group activities and the other scenarios can be viewed as the special cases for this scenario.\n(Note: label \u201c\u3007\u201d means the me"}, {"heading": "A sults f recognizing symmetric ac ies with a fixed number of group", "text": "(i.e. InGroup, WalkTogether, Fight and RunTogether). Furthermore, we assume\nthat th\nin Table 5. In Table 5, the\nal Fram\nognizing all these five\n. Experimental re or only tivit\nmembers\nIn this section, we compare the performances of the four methods in recognizing only the four\nsymmetric activities\ne symmetric groups have already been clustered and the number of members in all symmetric\ngroups is fixed to 3. In order to fix the member for all groups to 3, we discard the activity segments from the dataset whose group members are less than 3. For activity segments with more than 3 members, we manually pick three members to form a symmetric group.\nWe perform experiments under 50% training and 50% testing. Five independent experiments are\nperformed and the results are averaged. The experimental results are listed Tot e Error Rate (TFER) [9,25] is compared. TFER is defined by Nt_miss / Nt_f, where Nt_miss is the total number of misdetection frames for all activities, and Nt_f is the total number of frames in the test set. TFER reflects the overall performance of each algorithm in rec symmetric activities.\nGRAD\n-2 method are exactly the same to each other and they can be classified as one set (Set-1 in\nTable 5). Similarly, the SAAS+SRC+MV-1 method and the GRAD-1 method can be classified as another set (Set-2 in Table 5). Basically, the major difference between the methods of these two sets is that methods in Set-1 can have a global view of the whole symmetric group by using the group features, while the methods in Set-2 only use local information of the cluster seeds for recognition.\nHowever, from Table 5, we can see that the TFER for both sets are very close. Similar results can also be found for larger numbers of group members. This implies that since members in the symmetric group are interchangeable and similar, using only local information from parts of the group members may be enough to recognize symmetric activities."}, {"heading": "B. Experimental results for recognizing only asymmetric activities with a fixed number of group", "text": "members\nhase). Similar to the previous section, we fixed the number of members in each asymmetric\ngroup\nThe TFER result comparison for asymmetric activity recognition under 50% training and 50%\ntesting is shown in Table 6.\nIn this section, we perform experiments to recognize the three asymmetric activities (Approach,\nSplit and C\nto 4. We also assume that each asymmetric group contains two symmetric sub-groups with one\ngroup containing 3 people and the other group containing 1 person. It should be noted that since the number of group member is fixed in this experiment, the SRC clustering is not needed for the SAAS+SRC+MV method and the GRAD method and thus is skipped.\nbased on our proposed SAAS, have better performance. This demonstrates the effectiveness of our SAAS. It should be noted that it is possible to develop better features than the ones in Table 3 to improve the performance of the HMM method for this experiment. However, our SAAS is still important because (a) when the number of group members becomes larger, the interactions between members may be very complicated. It will be very difficult to develop good features for the whole group without considering its lower level structures. (b) In many applications, people are interested in not only the behavior of the whole group but also the behavior of each individual person or sub-groups of people. In this case, the HMM method will require a large number of separate models for each individual person or sub-groups while our SAAS can do all the tasks in one framework.\n2) The performance of the GRAD method is better than the SAAS+SRC+MV method. This\nwill be further demonstrated in later experiments.\n3) The performance of the GRAD method, which uses P-GR, is slightly better than the\nLayered HMM+SAAS method. Since we calculate the extra features of the higher layer"}, {"heading": "C. Experi rarchical-structure activities with a fixed number of group", "text": "members\nur symmetric activities (InGroup, WalkTogether, Fight, and RunTogether) and three\nasymm\nHMM by taking the average of people in each symmetric sub-group, the Layered HMM+SAAS method can be viewed as an extension of using the V-GR. Therefore, the result further implies that P-GR can improve the results from V-GR by discarding the outliers from recognition. Since both the GRAD method and the Layered HMM+SAAS method can recognize hierarchical structure activities, we will discuss more of these two methods in the following section.\nmental results for recognizing hie\nIn this section, we perform experiments to recognize hierarchical structure activities which\ncontain fo\netric activities (Approach, Split, and Chase). Similar to the previous experiment, we fix the\nnumber of people in each asymmetric group as 4, and each asymmetric group contains two symmetric sub-groups with one group containing 3 people and the other group containing 1 person. For simplification, we only recognize the symmetric activity of the 3-people sub-group and the asymmetric activity of the 4 people group in this experiment.\nAs mentioned in Table 4, the HMM method cannot recognize hierarchical-structure activities.\nTherefore, we only compare the other three methods. Table 7 shows the results for hierarc\nhical-structure activity recognition under 50% training and 50% testing.\nor symmetric activities and asymmetric activities in Table 7 are exactly the same as those in\n3,16,19] cannot handle the recognition with a varying number of group members while\n2)\nese\nresults f Table 5 and Table 6, respectively. We can see from Table 7 that the GRAD method and the Layered HMM+SAAS method have similar performance. However, compared with the Layered HMM+SAAS method as well as other HMM-based methods [15-19], our proposed GRAD method has the following advantages:\n1) The Layered HMM+SAAS method as well as most other HMM-based methods\n[2,1 our GRAD algorithm can handle this problem by the use of the Group Representative. More importantly, there may be hierarchical-structure activities with more than two levels. For example, several asymmetric groups may form a super symmetric group and th super symmetric groups may further form an even larger asymmetric group. In these cases, the HMM-based methods may require very complicated models for recognition which\nmay be very difficult for training and calculation. However, since our GRAD method only extracts GRs from the groups for the recognition in the higher level, it can be kept simple even for those multi-level-structure activities.\nental results for recognizing hierarchical-s D. Experim tructure activities with a varying number of group members\nrevious methods when handling the special scenarios that the previous algorithms can\normed and the results are averaged.\nin Fig\nte (EDER). They are defined in\nEqn (\nIn the above sections, we have demonstrated that our GRAD algorithm has comparable or better\nresults than the p also handle. In this section, we will perform experiments for the general scenario of hierarchical-structure activities with a varying number of group members and try to recognize all of the group activities in Table 1 for all symmetric and asymmetric groups. From Table 4, we can see that only the SAAS+SRC+MV method and the GRAD method can handle the task in this experiment. Therefore, we only compare these two methods in this section.\nIn this experiment, we randomly select three long sequences for training and use the other three\nlong sequences for testing. Five independent experiments are perf\nThe experimental results of SAAS+SRC+MV-1 and GRAD-1 are shown in Fig. 7. For the\nGRAD method, three different GRs are used: (a) Physical GR (P-GR in Fig. 7), (b) Virtual GR (V-GR\n. 7) and (c) Selective Virtual GR (SV-GR in Fig. 7). In order to show the advantage of using\nAHMM, we also includes the results of using regular HMM [22] for modeling the activity correlation metric (with \u201cHMM\u201d in Fig. 7, e.g., SAAS+SRC+MV-1 (HMM)).\nIn order to take clustering errors into consideration, two error rates are compared in Table 8: the\nGroup Clustering Error Rate (GCER) and the Event Detection Error Ra\n12) and (13) respectively.\nframes total of frameserror clustering of GCER #= (12) #\nframes total of# frameserror of EDER #=\nwhere a frame is a clustering error frame if any person in the frame is mis-clustered into another\n(13)\nsymmetric grou f the following take place: (a) any person in p, and a frame is an error frame if any o the frame is mis-clustered into another symmetric group, (b) any of the symmetric activities is misclassified, and (c) any of the asymmetric activities is misclassified.\nThe GCER reflects the performance of the algorithm in clustering people into symmetric groups.\nThe EDER reflects the overall performance of the algorithm in detecting both the symmetric activities and the asymmetric activities.\nSince all methods use the propos g algorithm for clustering people into\nsymmetric groups, their GCERs are the same if using the same activity-correlation-metric model. Therefore SAAS+SRC+MV-1, GRAD-1 using P-GR,\nSeveral observations from Fig. 7 are listed below:\ned SRC c sterinlu\n, we can see from Fig. 7 that the GCERs of\nGRAD-1 using V-GR, and GRAD-1 using SV-GR are the same. Similarly, the GCERS of SAAS+SRC+MV-1 (HMM), GRAD-1 using P-GR (HMM), GRAD-1 using V-GR (HMM), and GRAD-1 using SV-GR (HMM) are the same. The low GCER demonstrates the effectiveness of the SRC clustering algorithm. Furthermore, methods using AHMM as an activity-correlation-metric model has a better GCER than those use HMM. This demonstrates that using AHMM can improve the\nperformance by handling the possible action asynchronies.\nComparing the EDER, we can see that the EDERs of the GRAD algorithm are obviously better\nthan that uses majority vote. This supports our claim that the introduction of GR can greatly improve\nin Table 1, where the SV-GR is used for the GRAD algorithm. The Miss\nthe detection rate for asymmetric activities. Comparing the three GR-based methods, we can see that the EDER of P-GR is better than that of V-GR. This further demonstrates that the P-GR can improve the performance by discarding outliers from asymmetric activity recognition. However, the EDER difference between these two GRs is not large. This is because (a) although V-GR includes outliers, the effect of these outliers is decreased by the averaging with non-outliers, and (b) there may be cases where none of the actual person in the symmetric group is representative enough for the group, in these cases, the P-GR may not perform better than the V-GR. Furthermore, the method using SV-GR has the best EDER. This is because SV-GR has the following two advantages: (a) similar to P-GR, SV-GR can discard outliers by averaging only the most several representative people in the group, and (b) in case when there is no actual person representative for the group, SV-GR can create a virtual GR by averaging several people in the group. However, we can also see from Table 8 that the improvement of SV-GR from P-GR is small. This is because (a) the clustering errors (i.e. GCER) take a large portion of the errors in EDER. This limits the improvement space of SV-GR. It is expected that the performance of the GRAD algorithm can be further improved if people can be clustered better into symmetric groups. (b) Due to the scenarios of the BEHAVE dataset, people in each symmetric sub-group are comparatively close to each other, therefore the chances that none of the actual person is representative are low.\nFig. 8 shows the average False Alarm rate (FA) and Miss Detection rate (Miss) [9] of the GRAD algorithm for the activities\nrate is defined by + \u03b8 \u03b8 cnt\ncnt fn , where fncnt is the number of false negative (misdetection)\nsamples for activity\n\u03b8\n\u03b8 , and +cnt \u03b8 otal is the t number of positive samples of activity \u03b8 in the\ntest data. The FA rate is defined by \u2212 \u03b8\n\u03b8cnt fp\n, where is the number of false positive cnt \u03b8 fpcnt\nand \u2212cnt(false alarm) samples for activity \u03b8 , \u03b8 otal n\nactivity k in the test data.\nR\nRate for some activities such as Fighting and Chase are still high. This is\nbecaus\nis the t umber of negative samples of\nFrom Fig. 8, we can see our G AD algorithm have good performance in recognizing most\nactivities. However, the Miss\ne (a) the input features are very simple which are all derived from the MBB information, (b) the\nnumber of training samples for these activities is small, and (c) it is more difficult to correctly cluster the symmetric activities such as Fighting due to their large variance. Therefore, in order to further improve the performance, more sophisticated input features [19, 20] can be used and the methods to train models in case of insufficient training data can be introduced [9, 25]. Furthermore, Fig. 8 also shows a large FA rate in the activity Ignore. This is because Ignore is a generalized activity in our experiment. Since we model Ignore as the non-interaction case between people, it can be confused with all the other activities including both symmetric and asymmetric ones. This leads to the large number of samples misclassified as Ignore.\n1.2\n10.1\n24.7 30\n35\n17.4\n5.4 8.1 8.8\n27.3\n2.08 3.85\n0.82 0.22\n6.03 3.6\n1.08 0.69 0\n5\n10\n15\n20\n25\nMiss (%) FA (%)\nSymmetric Activities Asymmetric Activities Fig. 8. The average Frame Level FA and Miss for the GRAD algorithm.\nVII. Algorithm\nproposed in this paper, we model hierarchical-structure activities\nur Symmetric-Asymmetric Activity Structure (SAAS) and cluster people into symmetric\nExtension\nIn the GRAD algorithm\nbased on o\nsub-groups based on the SRC clustering algorithm. The higher level asymmetric activities between symmetric sub-groups can then be recognized based on the interactions between Group Representatives for each symmetric sub-group. We believe that the framework of our proposed GRAD algorithm is general and can easily be extended. In this section, we discuss some possible extensions of our GRAD algorithm.\n1) In this paper, we use SAAS to model hierarchical activities as a two-level structure with\nsymmetric activities as the lower level and asymmetric activities as the higher level. This\n2)\nat the asymmetric activities take\ntwo-level structure can cover many scenarios in daily life. However, as mentioned, there may be activities with other hierarchical structures. For example, one approaching group may chase another splitting group and these two asymmetric groups will form a super asymmetric group. In these cases, we can extend our Group Representative method so that GRs can also be calculated and used to represent asymmetric groups. Furthermore, we can also extend our SAAS to model different activity structures. In the above example, we can first extend our SAAS by adding one more asymmetric activity level over the original asymmetric level to form a Symmetric-Asymmetric-Asymmetric Activity Structure. The chase activity can then be recognized based on the interactions between the two GRs of the two asymmetric sub-groups of approaching and splitting. In the experiments of this paper, all asymmetric activities take place only between two symmetric sub-groups. However, there may be cases th place among three or more entities. For example, person A is approaching the symmetric sub-group B, at the same time, another person C is also approaching group B from another direction. These three symmetric subgroups A, B and C will form an asymmetric group of approaching. In these cases, we can extend our SRC clustering method to further cluster symmetric subgroups into asymmetric groups. In the above example, we can first calculate the distance metrics between A, B and C based on their asymmetric interaction, and then cluster them into one asymmetric group.\n3)\ner people into symmetric sub-groups, and use"}, {"heading": "VIII. C", "text": "In this paper, we proposed (a) a Symmetric-A tric Activity Structure for the detection of\n(b) a Group Representative to handle the group event detection with a varying\ndgment\nThis work was supported in part by the following grants: ARO PECASE Grant\nd ARO MURI Grant (W 911 NF 0710287). The authors would like to thank\nDr. S\n[1] , D. Gatica-Perez, S. Bengio and I. McCowan, \u201cModeling individual and group actions in meetings with\nMs,\u201d IEEE Trans. Multimedia, vol. 8, pp. 509-520, 2006.\n[2] N. Oliver, E. Horvitz, and A. Garg. \u201cLayered representations for learning and inferring office activity from\n[3] event recognition of human actions and\n[4] tion,\u201d in Proc. IEEE Int\u2019l. Conf. Computer Vision, July\n[5] of the configurations of\ninteracting objects,\u201d IEEE Conf. Computer Vision and Pattern Recognition, 2003.\nIn this paper, we use AHMM to model the activity correlation metric between any two people, use our SRC clustering method to clust one of the three proposed GRs (P-GR, V-GR and SV-GR) to represent each symmetric sub-group. However, since the framework of our GRAD algorithm is general, other models, clustering methods, and GR calculation methods can also be used to improve the performance of the GRAD method.\nonclusion\nsymme\nhierarchical activities, number of group members, and (c) an SRC clustering algorithm to deal with clustering with an asymmetric distance metric. Experimental results demonstrate the effectiveness of our proposed algorithm.\nAcknowle\n(W911NF-05-1-0491) an\namy Dengio for providing part of the code for implementing the AHMM."}], "references": [{"title": "A hierarchical bayesian network for interactions,", "author": ["S. Park", "J.K. Aggarwal"], "venue": "Association for Computing Machinery Multimedia Systems Journal,", "citeRegEx": "Park and Aggarwal,? \\Q2004\\E", "shortCiteRegEx": "Park and Aggarwal", "year": 2004}, {"title": "Multi-agent event recogni", "author": ["S. Hongeng", "R. Nevatia"], "venue": null, "citeRegEx": "Hongeng and Nevatia,? \\Q2001\\E", "shortCiteRegEx": "Hongeng and Nevatia", "year": 2001}, {"title": "Conversation detection and speaker segmentation in privacy-sensitive situated speech data,", "author": ["D. Wyatt", "T. Choudhury", "J. Bilmes"], "venue": "Speech and audio processing for intelligent environments,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "An asynchronous hidden Markov model for audio-visual speech recognition,", "author": ["S. Bengio"], "venue": "S. Proc. NIPS", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2003}, {"title": "Activity Recognition using a Combination of Category Components and Local Models for Video Surveillance,", "author": ["W. Lin", "M.-T. Sun", "R. Poovendran", "Z. Zhang"], "venue": "IEEE Trans. CSVT, no", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Cluster Analysis Algorithms for Data Reduction and Classification of Objects,", "author": ["H. Sp\u00e4th"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1980}, {"title": "Activity recognition and abnormality detection with th switching hidden semi-Markov model,", "author": ["T.V. Duong", "H.H. Bui", "D.Q. Phung", "S. Venkatesh"], "venue": "Proc. IEEE Conf. Comput. Vis. Pattern Recognit.,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2005}, {"title": "DPF-a perceptual distance function for image retrieval,", "author": ["B. Li", "E. Chang", "C.T. Wu"], "venue": "Pr Process.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2002}, {"title": "Automatic analysis of multimodal group actions in meeting", "author": ["I. McCowan", "D. Gatica-Perez", "S. Bengio", "G. Lathoud", "M. Barnard", "D. Zhang"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2005}, {"title": "Application of majority voting to pattern recognition: an analysis of its behavior performance,", "author": ["L. Lam", "S.Y. Suen"], "venue": "IEEE Transactions on Systems, Man and Cybernetics,", "citeRegEx": "Lam and Suen,? \\Q1997\\E", "shortCiteRegEx": "Lam and Suen", "year": 1997}, {"title": "Unsupervised learning of human motion,", "author": ["Y. Song", "L. Goncalves", "P. Perona"], "venue": "IEEE Trans. Pattern Anal. Mach. Intell.,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2003}, {"title": "Voting-based simultaneous tracking of multiple video objects,", "author": ["A. Amer"], "venue": "IEEE Trans. Circuits Syst. Video Technol.,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2005}, {"title": "Probabilistic visual learning for object representation,", "author": ["B. Moghaddam", "A. Pentland"], "venue": "IEEE Trans. Pattern Anal. Mach. Intel.,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1997}, {"title": "Human Activity Recognition for Video Surveillance,", "author": ["W. Lin", "M.-T. Sun", "R. Poovendran", "Z. Zhang"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2008}], "referenceMentions": [], "year": 2009, "abstractText": "This paper presents a novel approach for automatic recognition of group activities for video surveillance applications. We propose to use a group representative to handle the recognition with a varying number of group members, and use an Asynchronous Hidden Markov Model (AHMM) to model the relationship between people. Furthermore, we propose a group activity detection algorithm which can handle both symmetric and asymmetric group activities, and demonstrate that this approach enables the detection of hierarchical interactions between people. Experimental results show the effectiveness of our approach.", "creator": "Acrobat PDFMaker 7.0 for Word"}}}