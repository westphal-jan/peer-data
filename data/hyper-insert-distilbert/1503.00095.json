{"id": "1503.00095", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Feb-2015", "title": "Task-Oriented Learning of Word Embeddings for Semantic Relation Classification", "abstract": "we present itself a novel object learning method for mapping word embeddings designed initially for relation unit classification. our word embeddings then are correctly trained by independently predicting linked words in between noun pairs uniquely using \" lexical relation - attribute specific features, on a comparatively large existing unlabeled corpus. this allows us to explicitly incorporate relation - specific information collectively into the word embeddings. the learned word initial embeddings and are then used to construct their feature vectors ideally for practicing a relation case classification modelling model. by on operating a well - learned established semantic relation data classification analytical task, our math method significantly outperforms a syntax baseline models based on employing a previously naturally introduced semantics word - embedding method, and compares favorably well to previous state - of - the the - art baseline models without syntactic information or require manually constructed external computational resources. \u201d furthermore, when strategically incorporating external resources, nowadays our method outperforms the previous goal state requirement of the library art.", "histories": [["v1", "Sat, 28 Feb 2015 07:59:59 GMT  (193kb)", "https://arxiv.org/abs/1503.00095v1", null], ["v2", "Sun, 17 May 2015 00:04:42 GMT  (193kb)", "http://arxiv.org/abs/1503.00095v2", null], ["v3", "Mon, 22 Jun 2015 13:48:30 GMT  (195kb)", "http://arxiv.org/abs/1503.00095v3", "The Nineteenth Conference on Computational Natural Language Learning (CoNLL 2015)"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["kazuma hashimoto", "pontus stenetorp", "makoto miwa", "yoshimasa tsuruoka"], "accepted": false, "id": "1503.00095"}, "pdf": {"name": "1503.00095.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["hassy@logos.t.u-tokyo.ac.jp", "tsuruoka@logos.t.u-tokyo.ac.jp", "pontus@stenetorp.se", "makoto-miwa@toyota-ti.ac.jp"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 3.\n00 09\n5v 3\n[ cs\n.C L\n] 2\n2 Ju\nn 20\n15"}, {"heading": "1 Introduction", "text": "Automatic classification of semantic relations has a variety of applications, such as information extraction and the construction of semantic networks (Girju et al., 2007; Hendrickx et al., 2010). A traditional approach to relation classification is to train classifiers using various kinds of features with class labels annotated by humans. Carefully crafted features derived from lexical, syntactic, and semantic resources play a significant role in achieving high accuracy for semantic relation classification (Rink and Harabagiu, 2010).\nIn recent years there has been an increasing interest in using word embeddings as an alternative to traditional hand-crafted features. Word embeddings are represented as real-valued vectors and capture syntactic and semantic sim-\nilarity between words. For example, word2vec1 (Mikolov et al., 2013b) is a well-established tool for learning word embeddings. Although word2vec has successfully been used to learn word embeddings, these kinds of word embeddings capture only co-occurrence relationships between words (Levy and Goldberg, 2014). While simply adding word embeddings trained using window-based contexts as additional features to existing systems has proven valuable (Turian et al., 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al., 2014; Boros et al., 2014; Chen et al., 2014; Guo et al., 2014; Nguyen and Grishman, 2014) and we continue this line of research for the task of relation classification.\nIn this work we present a learning method for word embeddings specifically designed to be useful for relation classification. The overview of our system and the embedding learning process are shown in Figure 1. First we train word embeddings by predicting each of the words between noun pairs using lexical relation-specific features on a large unlabeled corpus. We then use the word embeddings to construct lexical feature vectors for relation classification. Lastly, the feature vectors are used to train a relation classification model.\nWe evaluate our method on a well-established semantic relation classification task and compare it to a baseline based on word2vec embeddings and previous state-of-the-art models that rely on either manually crafted features, syntactic parses or external semantic resources. Our method significantly outperforms the word2vec-based baseline, and compares favorably with previous state-\n1https://code.google.com/p/word2vec/.\nof-the-art models, despite relying only on lexical level features and no external annotated resources. Furthermore, our qualitative analysis of the learned embeddings shows that n-grams of our embeddings capture salient syntactic patterns similar to semantic relation types."}, {"heading": "2 Related Work", "text": "A traditional approach to relation classification is to train classifiers in a supervised fashion using a variety of features. These features include lexical bag-of-words features and features based on syntactic parse trees. For syntactic parse trees, the paths between the target entities on constituency and dependency trees have been demonstrated to be useful (Bunescu and Mooney, 2005; Zhang et al., 2006). On the shared task introduced by Hendrickx et al. (2010), Rink and Harabagiu (2010) achieved the best score using a variety of hand-crafted features which were then used to train a Support Vector Machine (SVM).\nRecently, word embeddings have become popular as an alternative to hand-crafted features (Collobert et al., 2011). However, one of the limitations is that word embeddings are usually learned by predicting a target word in its context, leading to only local co-occurrence information being captured (Levy and Goldberg, 2014). Thus, several recent studies have focused on overcoming this limitation. Le and Mikolov (2014) integrated paragraph information into a word2vec-based model, which allowed them to capture paragraphlevel information. For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found\nways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts. Chen et al. (2014) introduced the concept of feature embeddings induced by parsing a large unannotated corpus and then learning embeddings for the manually crafted features. For information extraction, Boros et al. (2014) trained word embeddings relevant for event role extraction, and Nguyen and Grishman (2014) employed word embeddings for domain adaptation of relation extraction. Another kind of task-specific word embeddings was proposed by Tang et al. (2014), which used sentiment labels on tweets to adapt word embeddings for a sentiment analysis tasks. However, such an approach is only feasible when a large amount of labeled data is available."}, {"heading": "3 Relation Classification Using Word Embedding-based Features", "text": "We propose a novel method for learning word embeddings designed for relation classification. The word embeddings are trained by predicting each word between noun pairs, given the corresponding low-level features for relation classification. In general, to classify relations between pairs of nouns the most important features come from the pairs themselves and the words between and around the pairs (Hendrickx et al., 2010). For example, in the sentence in Figure 1 (b) there is a cause-effect relationship between the two nouns conflicts and players. To classify the relation, the most common features are the noun pair (conflicts,\nplayers), the words between the noun pair (are, caused, by), the words before the pair (the, external), and the words after the pair (playing, tiles, to, ...). As shown by Rink and Harabagiu (2010), the words between the noun pairs are the most effective among these features. Our main idea is to treat the most important features (the words between the noun pairs) as the targets to be predicted and other lexical features (noun pairs, words outside them) as their contexts. Due to this, we expect our embeddings to capture relevant features for relation classification better than previous models which only use window-based contexts.\nIn this section we first describe the learning process for the word embeddings, focusing on lexical features for relation classification (Figure 1 (b)). We then propose a simple and powerful technique to construct features which serve as input for a softmax classifier. The overview of our proposed system is shown in Figure 1 (a)."}, {"heading": "3.1 Learning Word Embeddings", "text": "Assume that there is a noun pair n = (n1, n2) in a sentence with Min words between the pair and Mout words before and after the pair:\n\u2022 win = (w in 1 , . . . , w in Min ) ,\n\u2022 wbef = (w bef 1 , . . . , w bef Mout ) , and\n\u2022 waft = (w aft 1 , . . . , w aft Mout ) .\nOur method predicts each target word wini \u2208 win using three kinds of information: n, words around wini in win, and words in wbef and waft. Words are embedded in a d-dimensional vector space and we refer to these vectors as word embeddings. To discriminate between words in n from those in win, wbef , and waft, we have two sets of word embeddings: N \u2208 Rd\u00d7|N | and W \u2208 Rd\u00d7|W|. W is a set of words and N is also a set of words but contains only nouns. Hence, the word cause has two embeddings: one in N and another in W. In general cause is used as a noun and a verb, and thus we expect the noun embeddings to capture the meanings focusing on their noun usage. This is inspired by some recent work on word representations that explicitly assigns an independent representation for each word usage according to its partof-speech tag (Baroni and Zamparelli, 2010; Grefenstette and Sadrzadeh, 2011;\nHashimoto et al., 2013; Hashimoto et al., 2014; Kartsaklis and Sadrzadeh, 2013).\nA feature vector f \u2208 R2d(2+c)\u00d71 is constructed to predict wini by concatenating word embeddings:\nf = [N(n1);N(n2);W(w in i\u22121); . . . ;W(w in i\u2212c);\nW(wini+1); . . . ;W(w in i+c);\n1\nMout\nMout \u2211\nj=1\nW(wbefj ); 1\nMout\nMout \u2211\nj=1\nW(waftj )] .\n(1)\nN(\u00b7) and W(\u00b7) \u2208 Rd\u00d71 corresponds to each word and c is the context size. A special NULL token is used if i\u2212 j is smaller than 1 or i+ j is larger than Min for each j \u2208 {1, 2, . . . , c}.\nOur method then estimates a conditional probability p(w|f) that the target word is a word w given the feature vector f , using a logistic regression model:\np(w|f) = \u03c3(W\u0303(w) \u00b7 f + b(w)) , (2)\nwhere W\u0303(w) \u2208 R2d(2+c)\u00d71 is a weight vector for w, b(w) \u2208 R is a bias for w, and \u03c3(x) = 1\n1+e\u2212x\nis the logistic function. Each column vector in W\u0303 \u2208 R2d(c+1)\u00d7|W| corresponds to a word. That is, we assign a logistic regression model for each word, and we can train the embeddings using the one-versus-rest approach to make p(wini |f) larger than p(w\u2032|f) for w\u2032 6= wini . However, naively optimizing the parameters of those logistic regression models would lead to prohibitive computational cost since it grows linearly with the size of the vocabulary.\nWhen training we employ several procedures introduced by Mikolov et al. (2013b), namely, negative sampling, a modified unigram noise distribution and subsampling. For negative sampling the model parameters N, W, W\u0303, and b are learned by maximizing the objective function Junlabeled:\n\u2211\nn\nMin \u2211\ni=1\n log(p(wini |f)) + k \u2211\nj=1\nlog(1\u2212 p(w\u2032j|f))\n\n ,\n(3) where w\u2032j is a word randomly drawn from the unigram noise distribution weighted by an exponent of 0.75. Maximizing Junlabeled means that our method can discriminate between each target word and k noise words given the target word\u2019s context. This approach is much less computationally expensive than the one-versus-rest approach and has proven effective in learning word embeddings.\nTo reduce redundancy during training we use subsampling. A training sample, whose target word is w, is discarded with the probability Pd(w) = 1\u2212 \u221a t p(w) , where t is a threshold which is set to 10\u22125 and p(w) is a probability corresponding to the frequency of w in the training corpus. The more frequent a target word is, the more likely it is to be discarded. To further emphasize infrequent words, we apply the subsampling approach not only to target words, but also to noun pairs; concretely, by drawing two random numbers r1 and r2, a training sample whose noun pair is (n1, n2) is discarded if Pd(n1) is larger than r1 or Pd(n2) is larger than r2.\nSince the feature vector f is constructed as defined in Eq. (1), at each training step, W\u0303(w) is updated based on information about what pair of nouns surrounds w, what word n-grams appear in a small window around w, and what words appear outside the noun pair. Hence, the weight vector W\u0303(w) captures rich information regarding the target word w."}, {"heading": "3.2 Constructing Feature Vectors", "text": "Once the word embeddings are trained, we can use them for relation classification. Given a noun pair n = (n1, n2) with its context words win, wbef , and waft, we construct a feature vector to classify the relation between n1 and n2 by concatenating three kinds of feature vectors:\ngn the word embeddings of the noun pair,\ngin the averaged n-gram embeddings between the pair, and\ngout the concatenation of the averaged word embeddings in wbef and waft.\nThe feature vector gn \u2208 R2d\u00d71 is the concatenation of N(n1) and N(n2):\ngn = [N(n1);N(n2)] . (4)\nWords between the noun pair contribute to classifying the relation, and one of the most common ways to incorporate an arbitrary number of words is treating them as a bag of words. However, word order information is lost for bag-of-words features such as averaged word embeddings. To incorporate the word order information, we first define ngram embeddings hi \u2208 R4d(1+c)\u00d71 between the\nnoun pair:\nhi = [W(w in i\u22121); . . . ;W(w in i\u2212c);\nW(wini+1); . . . ;W(w in i+c);W\u0303(w in i )] .\n(5)\nNote that W\u0303 can also be used and that the value used for n is (2c+1). As described in Section 3.1, W\u0303 captures meaningful information about each word and after the first embedding learning step we can treat the embeddings in W\u0303 as features for the words. Mnih and Kavukcuoglu (2013) have demonstrated that using embeddings like those in W\u0303 is useful in representing the words. We then compute the feature vector gin by averaging hi:\ngin = 1\nMin\nMin \u2211\ni=1\nhi . (6)\nWe use the averaging approach since Min depends on each instance. The feature vector gin allows us to represent word sequences of arbitrary lengths as fixed-length feature vectors using the simple operations: concatenation and averaging.\nThe words before and after the noun pair are sometimes important in classifying the relation. For example, in the phrase \u201cpour n1 into n2\u201d, the word pour should be helpful in classifying the relation. As with Eq. (1), we use the concatenation of the averaged word embeddings of words before and after the noun pair to compute the feature vector gout \u2208 R2d\u00d71:\ngout = 1\nMout [\nMout \u2211\nj=1\nW(wbefj );\nMout \u2211\nj=1\nW(waftj )] .\n(7) As described above, the overall feature vector e \u2208 R4d(2+c)\u00d71 is constructed by concatenating gn, gin, and gout. We would like to emphasize that we only use simple operations: averaging and concatenating the learned word embeddings. The feature vector e is then used as input for a softmax classifier, without any complex transformation such as matrix multiplication with non-linear functions."}, {"heading": "3.3 Supervised Learning", "text": "Given a relation classification task we train a softmax classifier using the feature vector e described in Section 3.2. For each k-th training sample with a corresponding label lk among L predefined labels, we compute a conditional probability given\nits feature vector ek:\np(lk|ek) = exp(o(lk))\n\u2211L i=1 exp(o(i))\n, (8)\nwhere o \u2208 RL\u00d71 is defined as o = Sek + s, and S \u2208 RL\u00d74d(2+c) and s \u2208 RL\u00d71 are the softmax parameters. o(i) is the i-th element of o. We then define the objective function as:\nJlabeled =\nK \u2211\nk=1\nlog(p(lk|ek))\u2212 \u03bb\n2 \u2016\u03b8\u20162 . (9)\nK is the number of training samples and \u03bb controls the L-2 regularization. \u03b8 = (N,W,W\u0303,S, s) is the set of parameters and Jlabeled is maximized using AdaGrad (Duchi et al., 2011). We have found that dropout (Hinton et al., 2012) is helpful in preventing our model from overfitting. Concretely, elements in e are randomly omitted with a probability of 0.5 at each training step. Recently dropout has been applied to deep neural network models for natural language processing tasks and proven effective (Irsoy and Cardie, 2014; Paulus et al., 2014).\nIn what follows, we refer to the above method as RelEmb. While RelEmb uses only low-level features, a variety of useful features have been proposed for relation classification. Among them, we use dependency path features (Bunescu and Mooney, 2005) based on the untyped binary dependencies of the Stanford parser to find the shortest path between target nouns. The dependency path features are computed by averaging word embeddings from W on the shortest path, and are then concatenated to the feature vector e. Furthermore, we directly incorporate semantic information using word-level semantic features from Named Entity (NE) tags and WordNet hypernyms, as used in previous work (Rink and Harabagiu, 2010; Socher et al., 2012; Yu et al., 2014). We refer to this extended method as RelEmbFULL. Concretely, RelEmbFULL uses the same binary features as in Socher et al. (2012). The features come from NE tags and WordNet hypernym tags of target nouns provided by a sense tagger (Ciaramita and Altun, 2006)."}, {"heading": "4 Experimental Settings", "text": ""}, {"heading": "4.1 Training Data", "text": "For pre-training we used a snapshot of the English Wikipedia2 from November 2013. First, we extracted 80 million sentences from the original Wikipedia file, and then used Enju3 (Miyao and Tsujii, 2008) to automatically assign part-of-speech (POS) tags. From the POS tags we used NN, NNS, NNP, or NNPS to locate noun pairs in the corpus. We then collected training data by listing pairs of nouns and the words between, before, and after the noun pairs. A noun pair was omitted if the number of words between the pair was larger than 10 and we consequently collected 1.4 billion pairs of nouns and their contexts 4. We used the 300,000 most frequent words and the 300,000 most frequent nouns and treated out-of-vocabulary words as a special UNK token."}, {"heading": "4.2 Initialization and Optimization", "text": "We initialized the embedding matrices N and W with zero-mean gaussian noise with a variance of 1 d\n. W\u0303 and b were zero-initialized. The model parameters were optimized by maximizing the objective function in Eq. (3) using stochastic gradient ascent. The learning rate was set to \u03b1 and linearly decreased to 0 during training, as described in Mikolov et al. (2013a). The hyperparameters are the embedding dimensionality d, the context size c, the number of negative samples k, the initial learning rate \u03b1, and Mout, the number of words outside the noun pairs. For hyperparameter tuning, we first fixed \u03b1 to 0.025 and Mout to 5, and then set d to {50, 100, 300}, c to {1, 2, 3}, and k to {5, 15, 25}.\nAt the supervised learning step, we initialized S and s with zeros. The hyperparameters, the learning rate for AdaGrad, \u03bb, Mout, and the number of iterations, were determined via 10-fold cross validation on the training set for each setting. Note that Mout can be tuned at the supervised learning step, adapting to a specific dataset.\n2http://dumps.wikimedia.org/enwiki/. 3 Despite Enju being a syntactic parser we only use the POS tagger component. The accuracy of the POS tagger is about 97.2% on the WSJ corpus.\n4The training data, the training code, and the learned model parameters used in this paper are publicly available at http://www.logos.t.u-tokyo.ac.jp/\u02dchassy/publications/conll2015/"}, {"heading": "5 Evaluation", "text": ""}, {"heading": "5.1 Evaluation Dataset", "text": "We evaluated our method on the SemEval 2010 Task 8 data set5 (Hendrickx et al., 2010), which involves predicting the semantic relations between noun pairs in their contexts. The dataset, containing 8,000 training and 2,717 test samples, defines nine classes (Cause-Effect, Entity-Origin, etc.) for ordered relations and one class (Other) for other relations. Thus, the task can be treated as a 19- class classification task. Two examples from the training set are shown below.\n(a) Financial [stress]E1 is one of the main causes of [divorce]E2\n(b) The [burst]E1 has been caused by water hammer [pressure]E2\nTraining example (a) is classified as CauseEffect(E1, E2) which denotes that E2 is an effect caused by E1, while training example (b) is classified as Cause-Effect(E2, E1) which is the inverse of Cause-Effect(E1, E2). We report the official macro-averaged F1 scores and accuracy."}, {"heading": "5.2 Models", "text": "To empirically investigate the performance of our proposed method we compared it to several baselines and previously proposed models."}, {"heading": "5.2.1 Random and word2vec Initialization", "text": "Rand-Init. The first baseline is RelEmb itself, but without applying the learning method on the unlabeled corpus. In other words, we train the softmax classifier from Section 3.3 on the labeled training data with randomly initialized model parameters.\nW2V-Init. The second baseline is RelEmb using word embeddings learned by word2vec. More specifically, we initialize the embedding matrices N and W with the word2vec embeddings. Related to our method, word2vec has a set of weight vectors similar to W\u0303 when trained with negative sampling and we use these weight vectors as a replacement for W\u0303. We trained the word2vec embeddings using the CBOW model with subsampling on the full Wikipedia corpus. As with our experimental settings, we fix the learning rate to\n5http://docs.google.com/View?docid=dfvxd49s_36c28v9pmw.\n0.025, and investigate several hyperparameter settings. For hyperparameter tuning we set the embedding dimensionality d to {50, 100, 300}, the context size c to {1, 3, 9}, and the number of negative samples k to {5, 15, 25}."}, {"heading": "5.2.2 SVM-Based Systems", "text": "A simple approach to the relation classification task is to use SVMs with standard binary bagof-words features. The bag-of-words features included the noun pairs and words between, before, and after the pairs, and we used LIBLINEAR6 as our classifier."}, {"heading": "5.2.3 Neural Network Models", "text": "Socher et al. (2012) used Recursive Neural Network (RNN) models to classify the relations. Subsequently, Ebrahimi and Dou (2015) and Hashimoto et al. (2013) proposed RNN models to better handle the relations. These methods rely on syntactic parse trees.\nYu et al. (2014) introduced their novel Factorbased Compositional Model (FCM) and presented results from several model variants, the best performing being FCMEMB and FCMFULL. The former only uses word embedding information and the latter relies on dependency paths and NE features, in addition to word embeddings.\nZeng et al. (2014) used a Convolutional Neural Network (CNN) with WordNet hypernyms. Noteworthy in relation to the RNN-based methods, the CNN model does not rely on parse trees. More recently, dos Santos et al. (2015) have introduced CR-CNN by extending the CNN model and achieved the best result to date. The key point of CR-CNN is that it improves the classification score by omitting the noisy class \u201cOther\u201d in the dataset described in Section 5.1. We call CR-CNN using the \u201cOther\u201d class CR-CNNOther and CRCNN omitting the class CR-CNNBest."}, {"heading": "5.3 Results and Discussion", "text": "The scores on the test set for SemEval 2010 Task 8 are shown in Table 1. RelEmb achieves 82.8% of F1 which is better than those of almost all models compared and comparable to that of the previous state of the art, except for CR-CNNBest. Note that RelEmb does not rely on external semantic features and syntactic parse features7. Furthermore,\n6http://www.csie.ntu.edu.tw/\u02dccjlin/liblinear/. 7While we use a POS tagger to locate noun pairs, RelEmb\ndoes not explicitly use POS features at the supervised learn-\nRelEmbFULL achieves 83.5% of F1. We calculated a confidence interval (82.0, 84.9) (p < 0.05) using bootstrap resampling (Noreen, 1989)."}, {"heading": "5.3.1 Comparison with the Baselines", "text": "RelEmb significantly outperforms not only the Rand-Init baseline, but also the W2V-Init baseline. These results show that our task-specific word embeddings are more useful than those trained using window-based contexts. A point that we would like to emphasize is that the baselines are unexpectedly strong. As was noted by Wang and Manning (2012), we should carefully implement strong baselines and see whether complex models can outperform these baselines."}, {"heading": "5.3.2 Comparison with SVM-Based Systems", "text": "RelEmb performs much better than the bag-ofwords-based SVM. This is not surprising given that we use a large unannotated corpus and embeddings with a large number of parameters. RelEmb also outperforms the SVM system of Rink and Harabagiu (2010), which demonstrates the effectiveness of our task-specific word embeddings, despite our only requirement being a large unannotated corpus and a POS tagger."}, {"heading": "5.3.3 Comparison with Neural Network Models", "text": "RelEmb outperforms the RNN models. In our preliminary experiments, we have found some undesirable parse trees when computing vector representations using RNN-based models and such\ning step.\nparsing errors might hamper the performance of the RNN models.\nFCMFULL, which relies on dependency paths and NE features, achieves a better score than that of RElEmb. Without such features, RelEmb outperforms FCMEMB by a large margin. By incorporating external resources, RelEmbFULL outperforms FCMFULL.\nRelEmb compares favorably to CR-CNNOther, despite our method being less computationally expensive than CR-CNNOther. When classifying an instance, the number of the floating number multiplications is 4d(2 + c)L in our method since our method requires only one matrix-vector product for the softmax classifier as described in Section 3.3. c is the window size, d is the word embedding dimensionality, and L is the number of the classes. In CR-CNNOther, the number is (Dc(d + 2d\u2032)N + DL), where D is the dimensionality of the convolution layer, d\u2032 is the position embedding dimensionality, and N is the average length of the input sentences. Here, we omit the cost of the hyperbolic tangent function in CR-CNNOther for simplicity. Using the best hyperparameter settings, the number is roughly 3.8 \u00d7 104 in our method, and 1.6 \u00d7 107 in CR-CNNOther assuming N is 10. dos Santos et al. (2015) also boosted the score of CR-CNNOther by omitting the noisy class \u201cOther\u201d by a ranking-based classifier, and achieved the best score (CR-CNNBest). Our results may also be improved by using the same technique, but the technique is dataset-dependent, so we did not incorporate the technique."}, {"heading": "5.4 Analysis on Training Settings", "text": "We perform analysis of the training procedure focusing on RelEmb."}, {"heading": "5.4.1 Effects of Tuning Hyperparameters", "text": "In Tables 2 and 3, we show how tuning the hyperparameters of our method and word2vec affects the classification results using 10-fold cross validation on the training set. The same split is used for each setting, so all results are comparable to each other. The best settings for the cross validation are used to produce the results reported in Table 1.\nTable 2 shows F1 scores obtained by RelEmb. The results for d = 50, 100 show that RelEmb benefits from relatively large context sizes. The n-gram embeddings in RelEmb capture richer information by setting c to 3 compared to setting c to 1. Relatively large numbers of negative samples also slightly boost the scores. As opposed to these trends, the score does not improve using d = 300. We use the best setting (c = 3, d = 100, k = 25) for the remaining analysis. We note that RelEmbFULL achieves an F1-score of 82.5.\nWe also performed similar experiments for the W2V-Init baseline, and the results are shown in Table 3. In this case, the number of negative samples does not affect the scores, and the best score is achieved by c = 1. As discussed in\nBansal et al. (2014), the small context size captures the syntactic similarity between words rather than the topical similarity. This result indicates that syntactic similarity is more important than topical similarity for this task. Compared to the word2vec embeddings, our embeddings capture not only local context information using word order, but also long-range co-occurrence information by being tailored for the specific task."}, {"heading": "5.4.2 Ablation Tests", "text": "As described in Section 3.2, we concatenate three kinds of feature vectors, gn, gin, and gout, for supervised learning. Table 4 shows classification scores for ablation tests using 10-fold cross validation. We also provide a score using a simplified version of gin, where the feature vector g\u2032in is computed by averaging the word embeddings [W(wini );W\u0303(w in i )] of the words between the noun pairs. This feature vector g\u2032in then serves as a bag-of-words feature.\nTable 4 clearly shows that the averaged n-gram embeddings contribute the most to the semantic relation classification performance. The difference between the scores of gin and g\u2032in shows the effectiveness of our averaged n-gram embeddings."}, {"heading": "5.4.3 Effects of Dropout", "text": "At the supervised learning step we use dropout to regularize our model. Without dropout, our performance drops from 82.2% to 81.3% of F1 on the training set using 10-fold cross validation."}, {"heading": "5.4.4 Performance on a Word Similarity Task", "text": "As described in Section 3.1, we have the noun-specific embeddings N as well as the standard word embeddings W. We evaluated the learned embeddings using a wordlevel semantic evaluation task called WordSim353 (Finkelstein et al., 2001). This dataset con-\nsists of 353 pairs of nouns and each pair has an averaged human rating which corresponds to a semantic similarity score. Evaluation is performed by measuring Spearman\u2019s rank correlation between the human ratings and the cosine similarity scores of the embeddings. Table 5 shows the evaluation results. We used the best settings reported in Table 2 and 3 since our method is designed for relation classification and it is not clear how to tune the hyperparameters for the word similarity task. As shown in the result table, the nounspecific embeddings perform better than the standard embeddings in our method, which indicates the noun-specific embeddings capture more useful information in measuring the semantic similarity between nouns. The performance of the nounspecific embeddings is roughly the same as that of the word2vec embeddings."}, {"heading": "5.5 Qualitative Analysis on the Embeddings", "text": "Using the n-gram embeddings hi in Eq. (5), we inspect which n-grams are relevant to each relation class after the supervised learning step of RelEmb. When the context size c is 3, we can use at most 7-grams. The learned weight matrix S in Section 3.3 is used to detect the most relevant n-grams for each class. More specifically, for each n-gram embedding (n = 1, 3) in the training set, we compute the dot product between the n-gram embedding and the corresponding components in S. We then select the pairs of n-grams and class labels with the highest scores. In Table 6 we show the top five n-grams for six classes. These results clearly show that the n-gram embeddings capture salient syntactic patterns which are useful for the relation classification task."}, {"heading": "6 Conclusions and Future Work", "text": "We have presented a method for learning word embeddings specifically designed for relation classification. The word embeddings are trained using large unlabeled corpora to capture lexical features for relation classification. On a well-established semantic relation classification task our method significantly outperforms the baseline based on word2vec. Our method also compares favorably to previous state-of-the-art models that rely on syntactic parsers and external semantic resources, despite our method requiring only access to an unannotated corpus and a POS tagger. For future work, we will investigate how well our method performs on other domains and datasets and how relation labels can help when learning embeddings in a semisupervised learning setting."}, {"heading": "Acknowledgments", "text": "We thank the anonymous reviewers for their helpful comments and suggestions."}], "references": [{"title": "Tailoring Continuous Word Representations for Dependency Parsing", "author": ["Bansal et al.2014] Mohit Bansal", "Kevin Gimpel", "Karen Livescu"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Bansal et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bansal et al\\.", "year": 2014}, {"title": "Nouns are Vectors, Adjectives are Matrices: Representing Adjective-Noun Constructions in Semantic Space", "author": ["Baroni", "Zamparelli2010] Marco Baroni", "Roberto Zamparelli"], "venue": "In Proceedings of the 2010 Conference on Empirical Methods", "citeRegEx": "Baroni et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Baroni et al\\.", "year": 2010}, {"title": "Event Role Extraction using DomainRelevant Word Representations", "author": ["Boros et al.2014] Emanuela Boros", "Romaric Besan\u00e7on", "Olivier Ferret", "Brigitte Grau"], "venue": null, "citeRegEx": "Boros et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Boros et al\\.", "year": 2014}, {"title": "A Shortest Path Dependency Kernel for Relation Extraction", "author": ["Bunescu", "Mooney2005] Razvan Bunescu", "Raymond Mooney"], "venue": "In Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural Language", "citeRegEx": "Bunescu et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Bunescu et al\\.", "year": 2005}, {"title": "Feature Embedding for Dependency Parsing", "author": ["Chen et al.2014] Wenliang Chen", "Yue Zhang", "Min Zhang"], "venue": "In Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers,", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "Broad-Coverage Sense Disambiguation and Information Extraction with a Supersense Sequence Tagger", "author": ["Ciaramita", "Yasemin Altun"], "venue": "In Proceedings of the 2006 Conference on Empirical Methods in Natural", "citeRegEx": "Ciaramita et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Ciaramita et al\\.", "year": 2006}, {"title": "Natural Language Processing (Almost) from Scratch", "author": ["Jason Weston", "L\u00e9on Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Collobert et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Collobert et al\\.", "year": 2011}, {"title": "Classifying Relations by Ranking with Convolutional Neural Networks", "author": ["Bing Xiang", "Bowen Zhou"], "venue": "In Proceedings of the Joint Conference of the 53rd Annual Meeting of the Association", "citeRegEx": "Santos et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Santos et al\\.", "year": 2015}, {"title": "Adaptive Subgradient Methods for Online Learning and Stochastic Optimization", "author": ["Duchi et al.2011] John Duchi", "Elad Hazan", "Yoram Singer"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Duchi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Duchi et al\\.", "year": 2011}, {"title": "Chain Based RNN for Relation Classification", "author": ["Ebrahimi", "Dou2015] Javid Ebrahimi", "Dejing Dou"], "venue": "In Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Tech-", "citeRegEx": "Ebrahimi et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ebrahimi et al\\.", "year": 2015}, {"title": "Placing Search in Context: The Concept Revisited", "author": ["Gabrilovich Evgenly", "Matias Yossi", "Rivlin Ehud", "Solan Zach", "Wolfman Gadi", "Ruppin Eytan"], "venue": "In Proceedings of the Tenth International World Wide Web", "citeRegEx": "Finkelstein et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Finkelstein et al\\.", "year": 2001}, {"title": "SemEval-2007 Task 04: Classification of Semantic Relations between Nominals", "author": ["Girju et al.2007] Roxana Girju", "Preslav Nakov", "Vivi Nastase", "Stan Szpakowicz", "Peter Turney", "Deniz Yuret"], "venue": "In Proceedings of the Fourth International Workshop", "citeRegEx": "Girju et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Girju et al\\.", "year": 2007}, {"title": "Experimental Support for a Categorical Compositional Distributional Model of Meaning", "author": ["Grefenstette", "Mehrnoosh Sadrzadeh"], "venue": "In Proceedings of the 2011 Conference on Empirical Methods in Natural", "citeRegEx": "Grefenstette et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Grefenstette et al\\.", "year": 2011}, {"title": "Revisiting Embedding Features for Simple Semi-supervised Learning", "author": ["Jiang Guo", "Wanxiang Che", "Haifeng Wang", "Ting Liu"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing", "citeRegEx": "Guo et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Guo et al\\.", "year": 2014}, {"title": "Simple Customization of Recursive Neural Networks for Semantic Relation Classification", "author": ["Makoto Miwa", "Yoshimasa Tsuruoka", "Takashi Chikayama"], "venue": "In Proceedings of the 2013 Confer-", "citeRegEx": "Hashimoto et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Hashimoto et al\\.", "year": 2013}, {"title": "Jointly Learning Word Representations and Composition Functions Using Predicate-Argument Structures", "author": ["Pontus Stenetorp", "Makoto Miwa", "Yoshimasa Tsuruoka"], "venue": "In Proceedings of the 2014 Conference", "citeRegEx": "Hashimoto et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hashimoto et al\\.", "year": 2014}, {"title": "SemEval-2010 Task 8: Multi-Way Classification", "author": ["Su Nam Kim", "Zornitsa Kozareva", "Preslav Nakov", "Diarmuid \u00d3 S\u00e9aghdha", "Sebastian Pad\u00f3", "Marco Pennacchiotti", "Lorenza Romano", "Stan Szpakowicz"], "venue": null, "citeRegEx": "Hendrickx et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Hendrickx et al\\.", "year": 2010}, {"title": "Improving neural networks by preventing co-adaptation of feature detectors. CoRR, abs/1207.0580", "author": ["Nitish Srivastava", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov"], "venue": null, "citeRegEx": "Hinton et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Hinton et al\\.", "year": 2012}, {"title": "Deep Recursive Neural Networks for Compositionality in Language", "author": ["Irsoy", "Cardie2014] Ozan Irsoy", "Claire Cardie"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Irsoy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Irsoy et al\\.", "year": 2014}, {"title": "Prior Disambiguation of Word Tensors for Constructing Sentence Vectors", "author": ["Kartsaklis", "Mehrnoosh Sadrzadeh"], "venue": "In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Kartsaklis et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kartsaklis et al\\.", "year": 2013}, {"title": "Distributed Representations of Sentences and Documents", "author": ["Le", "Mikolov2014] Quoc Le", "Tomas Mikolov"], "venue": "In Proceedings of the 31st International Conference on Machine Learning (ICML-14),", "citeRegEx": "Le et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Le et al\\.", "year": 2014}, {"title": "Efficient Estimation of Word Representations in Vector Space", "author": ["Kai Chen", "Greg Corrado", "Jeffrey Dean"], "venue": "In Proceedings of Workshop at the International Conference on Learning Representations", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Distributed Representations of Words and Phrases and their Compositionality", "author": ["Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Feature Forest Models for Probabilistic HPSG Parsing", "author": ["Miyao", "Tsujii2008] Yusuke Miyao", "Jun\u2019ichi Tsujii"], "venue": "Computational Linguistics,", "citeRegEx": "Miyao et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Miyao et al\\.", "year": 2008}, {"title": "Learning word embeddings efficiently with noise-contrastive estimation", "author": ["Mnih", "Kavukcuoglu2013] Andriy Mnih", "Koray Kavukcuoglu"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Mnih et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2013}, {"title": "Employing Word Representations and Regularization for Domain Adaptation of Relation Extraction", "author": ["Nguyen", "Grishman2014] Thien Huu Nguyen", "Ralph Grishman"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association", "citeRegEx": "Nguyen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Nguyen et al\\.", "year": 2014}, {"title": "ComputerIntensive Methods for Testing Hypotheses: An Introduction", "author": ["Eric W. Noreen"], "venue": null, "citeRegEx": "Noreen.,? \\Q1989\\E", "shortCiteRegEx": "Noreen.", "year": 1989}, {"title": "Global Belief Recursive Neural Networks", "author": ["Paulus et al.2014] Romain Paulus", "Richard Socher", "Christopher D Manning"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Paulus et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Paulus et al\\.", "year": 2014}, {"title": "UTD: Classifying Semantic Relations by Combining Lexical and Semantic Resources", "author": ["Rink", "Harabagiu2010] Bryan Rink", "Sanda Harabagiu"], "venue": "In Proceedings of the 5th International Workshop on Semantic Evaluation,", "citeRegEx": "Rink et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Rink et al\\.", "year": 2010}, {"title": "Semantic Compositionality through Recursive Matrix-Vector Spaces", "author": ["Brody Huval", "Christopher D. Manning", "Andrew Y. Ng"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural", "citeRegEx": "Socher et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2012}, {"title": "Learning Sentiment-Specific Word Embedding for Twitter Sentiment Classification", "author": ["Tang et al.2014] Duyu Tang", "Furu Wei", "Nan Yang", "Ming Zhou", "Ting Liu", "Bing Qin"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Compu-", "citeRegEx": "Tang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2014}, {"title": "Word Representations: A Simple and General Method for Semi-Supervised Learning", "author": ["Turian et al.2010] Joseph Turian", "Lev-Arie Ratinov", "Yoshua Bengio"], "venue": "In Proceedings of the 48th Annual Meeting of the Association for Computational Linguis-", "citeRegEx": "Turian et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Turian et al\\.", "year": 2010}, {"title": "Baselines and Bigrams: Simple, Good Sentiment and Topic Classification", "author": ["Wang", "Manning2012] Sida Wang", "Christopher Manning"], "venue": "In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Wang et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2012}, {"title": "Factor-based Compositional Embedding Models", "author": ["Yu et al.2014] Mo Yu", "Matthew R. Gormley", "Mark Dredze"], "venue": "In Proceedings of Workshop on Learning Semantics at the 2014 Conference on Neural Information Processing Systems", "citeRegEx": "Yu et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Yu et al\\.", "year": 2014}, {"title": "Relation Classification via Convolutional Deep Neural Network", "author": ["Zeng et al.2014] Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao"], "venue": "In Proceedings of COLING", "citeRegEx": "Zeng et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zeng et al\\.", "year": 2014}, {"title": "A Composite Kernel to Extract Relations between Entities with Both Flat and Structured Features", "author": ["Zhang et al.2006] Min Zhang", "Jie Zhang", "Jian Su", "GuoDong Zhou"], "venue": "In Proceedings of the 21st International Conference on Computational Linguis-", "citeRegEx": "Zhang et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2006}], "referenceMentions": [{"referenceID": 11, "context": "Automatic classification of semantic relations has a variety of applications, such as information extraction and the construction of semantic networks (Girju et al., 2007; Hendrickx et al., 2010).", "startOffset": 151, "endOffset": 195}, {"referenceID": 16, "context": "Automatic classification of semantic relations has a variety of applications, such as information extraction and the construction of semantic networks (Girju et al., 2007; Hendrickx et al., 2010).", "startOffset": 151, "endOffset": 195}, {"referenceID": 31, "context": "While simply adding word embeddings trained using window-based contexts as additional features to existing systems has proven valuable (Turian et al., 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al.", "startOffset": 135, "endOffset": 156}, {"referenceID": 0, "context": ", 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al., 2014; Boros et al., 2014; Chen et al., 2014; Guo et al., 2014; Nguyen and Grishman, 2014) and we continue this line of research for the task of relation classification.", "startOffset": 104, "endOffset": 209}, {"referenceID": 2, "context": ", 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al., 2014; Boros et al., 2014; Chen et al., 2014; Guo et al., 2014; Nguyen and Grishman, 2014) and we continue this line of research for the task of relation classification.", "startOffset": 104, "endOffset": 209}, {"referenceID": 4, "context": ", 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al., 2014; Boros et al., 2014; Chen et al., 2014; Guo et al., 2014; Nguyen and Grishman, 2014) and we continue this line of research for the task of relation classification.", "startOffset": 104, "endOffset": 209}, {"referenceID": 13, "context": ", 2010), more recent studies have focused on how to tune and enhance word embeddings for specific tasks (Bansal et al., 2014; Boros et al., 2014; Chen et al., 2014; Guo et al., 2014; Nguyen and Grishman, 2014) and we continue this line of research for the task of relation classification.", "startOffset": 104, "endOffset": 209}, {"referenceID": 35, "context": "For syntactic parse trees, the paths between the target entities on constituency and dependency trees have been demonstrated to be useful (Bunescu and Mooney, 2005; Zhang et al., 2006).", "startOffset": 138, "endOffset": 184}, {"referenceID": 6, "context": "Recently, word embeddings have become popular as an alternative to hand-crafted features (Collobert et al., 2011).", "startOffset": 89, "endOffset": 113}, {"referenceID": 12, "context": "On the shared task introduced by Hendrickx et al. (2010), Rink and Harabagiu (2010) achieved the best score using a variety of hand-crafted features which were then used to train a Support Vector Machine (SVM).", "startOffset": 33, "endOffset": 57}, {"referenceID": 12, "context": "On the shared task introduced by Hendrickx et al. (2010), Rink and Harabagiu (2010) achieved the best score using a variety of hand-crafted features which were then used to train a Support Vector Machine (SVM).", "startOffset": 33, "endOffset": 84}, {"referenceID": 3, "context": "Recently, word embeddings have become popular as an alternative to hand-crafted features (Collobert et al., 2011). However, one of the limitations is that word embeddings are usually learned by predicting a target word in its context, leading to only local co-occurrence information being captured (Levy and Goldberg, 2014). Thus, several recent studies have focused on overcoming this limitation. Le and Mikolov (2014) integrated paragraph information into a word2vec-based model, which allowed them to capture paragraphlevel information.", "startOffset": 90, "endOffset": 420}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al.", "startOffset": 24, "endOffset": 45}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings.", "startOffset": 24, "endOffset": 68}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts.", "startOffset": 24, "endOffset": 198}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts. Chen et al. (2014) introduced the concept of feature embeddings induced by parsing a large unannotated corpus and then learning embeddings for the manually crafted features.", "startOffset": 24, "endOffset": 304}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts. Chen et al. (2014) introduced the concept of feature embeddings induced by parsing a large unannotated corpus and then learning embeddings for the manually crafted features. For information extraction, Boros et al. (2014) trained word embeddings relevant for event role extraction, and Nguyen and Grishman (2014) employed word embeddings for domain adaptation of relation extraction.", "startOffset": 24, "endOffset": 507}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts. Chen et al. (2014) introduced the concept of feature embeddings induced by parsing a large unannotated corpus and then learning embeddings for the manually crafted features. For information extraction, Boros et al. (2014) trained word embeddings relevant for event role extraction, and Nguyen and Grishman (2014) employed word embeddings for domain adaptation of relation extraction.", "startOffset": 24, "endOffset": 598}, {"referenceID": 0, "context": "For dependency parsing, Bansal et al. (2014) and Chen et al. (2014) found ways to improve performance by integrating dependency-based context information into their embeddings. Bansal et al. (2014) trained embeddings by defining parent and child nodes in dependency trees as contexts. Chen et al. (2014) introduced the concept of feature embeddings induced by parsing a large unannotated corpus and then learning embeddings for the manually crafted features. For information extraction, Boros et al. (2014) trained word embeddings relevant for event role extraction, and Nguyen and Grishman (2014) employed word embeddings for domain adaptation of relation extraction. Another kind of task-specific word embeddings was proposed by Tang et al. (2014), which used sentiment labels on tweets to adapt word embeddings for a sentiment analysis tasks.", "startOffset": 24, "endOffset": 750}, {"referenceID": 16, "context": "In general, to classify relations between pairs of nouns the most important features come from the pairs themselves and the words between and around the pairs (Hendrickx et al., 2010).", "startOffset": 159, "endOffset": 183}, {"referenceID": 14, "context": "This is inspired by some recent work on word representations that explicitly assigns an independent representation for each word usage according to its partof-speech tag (Baroni and Zamparelli, 2010; Grefenstette and Sadrzadeh, 2011; Hashimoto et al., 2013; Hashimoto et al., 2014; Kartsaklis and Sadrzadeh, 2013).", "startOffset": 170, "endOffset": 313}, {"referenceID": 15, "context": "This is inspired by some recent work on word representations that explicitly assigns an independent representation for each word usage according to its partof-speech tag (Baroni and Zamparelli, 2010; Grefenstette and Sadrzadeh, 2011; Hashimoto et al., 2013; Hashimoto et al., 2014; Kartsaklis and Sadrzadeh, 2013).", "startOffset": 170, "endOffset": 313}, {"referenceID": 21, "context": "When training we employ several procedures introduced by Mikolov et al. (2013b), namely, negative sampling, a modified unigram noise distribution and subsampling.", "startOffset": 57, "endOffset": 80}, {"referenceID": 8, "context": "\u03b8 = (N,W,W\u0303,S, s) is the set of parameters and Jlabeled is maximized using AdaGrad (Duchi et al., 2011).", "startOffset": 83, "endOffset": 103}, {"referenceID": 17, "context": "We have found that dropout (Hinton et al., 2012) is helpful in preventing our model from overfitting.", "startOffset": 27, "endOffset": 48}, {"referenceID": 27, "context": "Recently dropout has been applied to deep neural network models for natural language processing tasks and proven effective (Irsoy and Cardie, 2014; Paulus et al., 2014).", "startOffset": 123, "endOffset": 168}, {"referenceID": 29, "context": "Furthermore, we directly incorporate semantic information using word-level semantic features from Named Entity (NE) tags and WordNet hypernyms, as used in previous work (Rink and Harabagiu, 2010; Socher et al., 2012; Yu et al., 2014).", "startOffset": 169, "endOffset": 233}, {"referenceID": 33, "context": "Furthermore, we directly incorporate semantic information using word-level semantic features from Named Entity (NE) tags and WordNet hypernyms, as used in previous work (Rink and Harabagiu, 2010; Socher et al., 2012; Yu et al., 2014).", "startOffset": 169, "endOffset": 233}, {"referenceID": 29, "context": "Furthermore, we directly incorporate semantic information using word-level semantic features from Named Entity (NE) tags and WordNet hypernyms, as used in previous work (Rink and Harabagiu, 2010; Socher et al., 2012; Yu et al., 2014). We refer to this extended method as RelEmbFULL. Concretely, RelEmbFULL uses the same binary features as in Socher et al. (2012). The features come from NE tags and WordNet hypernym tags of target nouns provided by a sense tagger (Ciaramita and Altun, 2006).", "startOffset": 196, "endOffset": 363}, {"referenceID": 21, "context": "The learning rate was set to \u03b1 and linearly decreased to 0 during training, as described in Mikolov et al. (2013a). The hyperparameters are the embedding dimensionality d, the context size c, the number of negative samples k, the initial learning rate \u03b1, and Mout, the number of words outside the noun pairs.", "startOffset": 92, "endOffset": 115}, {"referenceID": 16, "context": "We evaluated our method on the SemEval 2010 Task 8 data set5 (Hendrickx et al., 2010), which involves predicting the semantic relations between noun pairs in their contexts.", "startOffset": 61, "endOffset": 85}, {"referenceID": 14, "context": "Subsequently, Ebrahimi and Dou (2015) and Hashimoto et al. (2013) proposed RNN models to better handle the relations.", "startOffset": 42, "endOffset": 66}, {"referenceID": 7, "context": "More recently, dos Santos et al. (2015) have introduced CR-CNN by extending the CNN model and achieved the best result to date.", "startOffset": 19, "endOffset": 40}, {"referenceID": 33, "context": "1 / n/a FCMFULL (Yu et al., 2014) embeddings, dependency paths, NE 83.", "startOffset": 16, "endOffset": 33}, {"referenceID": 34, "context": "7 / n/a CNN (Zeng et al., 2014) embeddings, WordNet 82.", "startOffset": 12, "endOffset": 31}, {"referenceID": 29, "context": "7 / n/a MVRNN (Socher et al., 2012) embeddings, parse trees, WordNet, NE, POS 82.", "startOffset": 14, "endOffset": 35}, {"referenceID": 33, "context": "4 / n/a FCMEMB (Yu et al., 2014) embeddings 80.", "startOffset": 15, "endOffset": 32}, {"referenceID": 14, "context": "6 / n/a RNN (Hashimoto et al., 2013) embeddings, parse trees, phrase categories, etc.", "startOffset": 12, "endOffset": 36}, {"referenceID": 26, "context": "05) using bootstrap resampling (Noreen, 1989).", "startOffset": 31, "endOffset": 45}, {"referenceID": 7, "context": "dos Santos et al. (2015) also boosted the score of CR-CNNOther by omitting the noisy class \u201cOther\u201d by a ranking-based classifier, and achieved the best score (CR-CNNBest).", "startOffset": 4, "endOffset": 25}, {"referenceID": 10, "context": "We evaluated the learned embeddings using a wordlevel semantic evaluation task called WordSim353 (Finkelstein et al., 2001).", "startOffset": 97, "endOffset": 123}], "year": 2015, "abstractText": "We present a novel learning method for word embeddings designed for relation classification. Our word embeddings are trained by predicting words between noun pairs using lexical relation-specific features on a large unlabeled corpus. This allows us to explicitly incorporate relationspecific information into the word embeddings. The learned word embeddings are then used to construct feature vectors for a relation classification model. On a wellestablished semantic relation classification task, our method significantly outperforms a baseline based on a previously introduced word embedding method, and compares favorably to previous state-of-the-art models that use syntactic information or manually constructed external resources.", "creator": "LaTeX with hyperref package"}}}