{"id": "1505.06918", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-May-2015", "title": "Fantasy Football Prediction", "abstract": "the ubiquity of professional sports and more specifically the official nfl have therefore lead to an extensive increase in popularity for advertising fantasy - football. online users have had many tools at their deepest disposal : statistics, predictions, rankings of hiring experts and - even recommendations expected of peers. there are factual issues with all of so these, unfortunately though. especially since extremely many people generally pay money to play, therefore the prediction tools should especially be widely enhanced broadly as they provide unbiased and guaranteed easy - going to - use assistance for current users. however this paper provides and partly discusses approaches derived to predict fantasy perfect football scores of quarterbacks comparison with other relatively limited data. in addition to knowing that, theoretically it additionally includes several suggestions on how the data could be accurately enhanced to achieve financially better offensive results. primarily the cognitive dataset roughly consists only of live game data from the last just six nfl seasons. i used two completely different methods to predict describing the fantasy football scores of nfl players : support inference vector regression ( cm svr ) and neural networks. while the objective results regardless of both are promising given specifically the severely limited objective data encoding that gee was used.", "histories": [["v1", "Tue, 26 May 2015 12:14:56 GMT  (97kb,D)", "http://arxiv.org/abs/1505.06918v1", "class project, 7 pages (1 sources, 1 appendix)"]], "COMMENTS": "class project, 7 pages (1 sources, 1 appendix)", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["roman lutz"], "accepted": false, "id": "1505.06918"}, "pdf": {"name": "1505.06918.pdf", "metadata": {"source": "CRF", "title": "Fantasy Football Prediction", "authors": ["Roman Lutz"], "emails": ["romanlutz@cs.umass.edu"], "sections": [{"heading": null, "text": "Fantasy Football Prediction\nRoman Lutz College of Information and Computer Sciences\nUniversity of Massachusetts Amherst Amherst, MA 01003\nromanlutz@cs.umass.edu"}, {"heading": "1 Introduction", "text": "The ubiquity of professional sports and specifically the NFL have lead to an increase in popularity for Fantasy Football. Every week, millions of sports fans participate in their Fantasy Leagues. The main tasks for users are the draft, the round-based selection of players before each season, and setting the weekly line-up for their team. For the latter, users have many tools at their disposal: statistics, predictions, rankings of experts and even recommendations of peers. There are issues with all of these, though. Most users do not want to spend time reading statistics. The prediction of Fantasy Football has barely been studied and are fairly inaccurate. The experts judge mainly based on personal preferences instead of unbiased measurables. Finally, there are only few peers voting on line-up decisions such that the results are not representative of the general opinion. Especially since many people pay money to play, the prediction tools should be enhanced as they provide unbiased and easy-to-use assistance for users. This paper provides and discusses approaches to predict Fantasy Football scores of Quarterbacks with relatively limited data. In addition to that, it includes several suggestions on how the data could be enhanced to achieve better results. The dataset consists only of game data from the last six NFL seasons. I used two different methods to predict the Fantasy Football scores of NFL players: Support Vector Regression (SVR) and Neural Networks. The results of both are promising given the limited data that was used. After an overview of related work in Section 2, I present my solution. Afterwards, I describe the data set in greater detail before Section 5 explains the experiments and show the results. Finally, Section 6 discusses the findings and possible future work."}, {"heading": "2 Related Work", "text": "Most research in sports prediction focuses on predicting the winner of a match instead of Fantasy Football scores or specific game stats that are important for Fantasy Football. Min et al. [5] used Bayesian inference and rule-based reasoning to predict the result of American Football matches. Their work is based on the idea that sports is both highly probabilistic and at the same time based on rules because of team strategies. Sierra, Fosco and Fierro [1] used classification methods to predict the outcome of an American Football match based on a limited number of game statistics excluding most scoring categories. In their experiments, linear Support Vector Machines had by far the most accurate predictions and ranked above all expert predictions they compared with. Similarly, Harville [8] used a linear model for the same task. A Neural Network approach to predicting the winner of College Football games was proposed by Pardee [7]. His accuracy of 76% improved on expert predictions. Stefani [9] used an improved least squares rating system to predict the winner for nearly 9000 games from College and Pro Football and even other sports. Fokoue and Foehrenbach [2] have analyzed important factors for NFL teams with Data Mining. Their results are especially useful for this work because the first step for predicting Fantasy Football scores involves identifying important features. Even though Spann and Skiera\u2019s work on sports predictions [3] is unrelated to American Football, their prediction markets could be used for Fantasy Football predictions. The prices on the prediction market determine the probability of a specific outcome. Such prediction markets can be\nar X\niv :1\n50 5.\n06 91\n8v 1\n[ cs\n.L G\n] 2\n6 M\nay 2\n01 5\nused for various purposes, for example, in companies such as Google [4]. In his blog on sports analysis, Rudy [6] used regression models to predict Fantasy Football scores. His findings suggest that modelling positions separately improves the accuracy of a model."}, {"heading": "3 Proposed Solution", "text": "A large part of my work is to create a proper dataset from the real game data. The raw game data has to be filtered and manipulated such that only relevant data cases are used later. The predictions will be made with two different methods: Support Vector Regression (SVR) and Neural Networks. Linear models like SVR have been very successful for predicting the winner of a match [1,8]. Neural Networks are able to adjust to the data and therefore especially useful when the structure of the data is not known. In this specific case, I have no prior knowledge of whether linear models perform well or not, so the Neural Networks will at least provide another prediction to compare the results of SVR with. As the two approaches do not have much in common, I will describe them separately."}, {"heading": "3.1 Support Vector Regression", "text": "Support Vector Regression (SVR) is a linear regression model. Compared to other models, SVR is - insensitive, i.e. when fitting the model to data the error is not determined on a continuous function. Instead, deviation from the desired target value yi is not counted within of the target value yi. More specifically, SVR uses a regression function fSV R with feature vectors xi and their labels yi as follows:\nfSV R(x) = ( D\u2211 d=1 wdxd ) + b = xw + b\nwhere w and b are chosen such that\nw\u2217, b\u2217 = argmin w,b\nC\nN N\u2211 i=1 V (yi \u2212 (xiw + b)) + \u2016w\u201622\nV is a function that returns 0 if the absolute value of its argument is less than and otherwise calculates the difference of the absolute value of its argument and . Therefore, the loss increases linearly outside the -insensitive corridor. C is a regularization parameter and chosen from (0, 1]. The smaller C is chosen, the less influence is given to the features. The use of a kernel enables SVR to work well even when the structure of the data is not suitable for a linear model. There are several options for kernels which will be examined in Section 5. The hyperparameter \u03b3 for some kernels describes how close different data cases have to be in order to be identified as similar by the model."}, {"heading": "3.2 Neural Networks", "text": "Neural Networks have the advantage that they adapt to the problem by learning the characteristics of the data set. After an initial input of the features, there are potentially multiple hidden layers and finally the output layer. In each layer there are so-called neurons or hidden units which perform computations. From layer to layer, there are connections such that the outputs of the previous layer\u2019s neurons are the inputs of the next layer\u2019s neurons. In order to work for regression the Neural Net is configured to have a linear output layer. The hidden layer units should not be linear. Common choices for the activation function are hyperbolic tangent (tanh) or sigmoid. In my experiment, I only used Neural Networks with one hidden layer. The activation function in the hidden layer for the kth unit is\nhk = 1\n1 + exp ( \u2212 (\nD\u2211 d=1 wdk + bdk )) While the hidden layers can be non-linear, the output layer has to consist of a linear function:\ny\u0302 = \u2211 k wokhk + b o\nThe parameters wok, b o for the output layer and wk, bk for the hidden layer are learnt over multiple epochs with Backpropagation. The data cases are evaluated on the Neural Network and the error is\ndetermined. Then, updates are performed based on the contribution of each hidden unit to the error, which is calculated by using derivatives going backwards through the Network."}, {"heading": "3.3 Pipeline", "text": "The Neural Networks are simply given the data set in the original form. Feature selection and normalization are not performed. The Neural Network can implicitly do this or not depending on whether it improves their predictions. Before applying SVR, I scaled the features down to the interval [0, 1] in order to improve the performance specifically for linear and polynomial kernel SVR. After the normalization comes the feature selection. There are three options: no feature selection, manual feature selection and Recursive Feature Elimination with Cross Validation (RFECV). All of them have certain advantages and problems. Not using feature selection can result in inaccurate predictions because of correlated features. Manual feature selection requires domain knowledge. Lastly, RFECV takes a lot of time depending on the number of features, but the results should be reasonably well since the elimination is cross validated. After the feature selection the hyperparameters for SVR have to be determined. A reasonable number of configurations is tested several times on a held-out validation set after being trained on the rest of the training data. The hyperparameter configuration with the best average score is finally selected and used for all further operations. This includes fitting the model to the whole training data set and finally predicting the Fantasy Football scores of the test cases."}, {"heading": "4 Data Set", "text": "The data set consists of NFL game data from 2009 to 2014. I accessed it with the API from github.com/BurntSushi/nflgame which gets the data from NFL.com. Before using it to make predictions I performed several operations. First of all, I filtered the data such that only Quarterbacks (QB) with at least 5 passes are selected. This restriction is necessary such that non-QB players or backup QBs are not taken in to account. Then, for every game I included as features the current age of the QB, his experience in years as a professional, the stats of the previous game, the average stats of the last 10 games as well as the stats of the opposing defense in their last game and their average over the last 10 games. The stats for a QB include 12 features that show the performance in passing and rushing as well as turnovers. The values are all treated as continuous real values. For defenses, there are 4 categories, namely the number of points allowed, passing and rushing yards allowed as well as turnovers forced. The target value in each case is the actual Fantasy Football score the QB received for the given game. I used the NFL\u2019s standard scoring system which is described on nfl.com/fantasyfootball/help/nfl-scoringsettings. In order to have sigificant past data even for the first data cases, I did not use the first year, 2009. I split the data into training and test data such that the seasons 2010 to 2013 belong to the training set and the 2014 season is the test data. As a result, there are 2167 training cases and 553 test cases. First-year players become a separate problem because the predictions can not be based on their past production. To overcome this, they are assigned the average over all first-year QB per-game average stats for the first game. From the second game on, their own statistics are used. Even though the data access through the API is limited to years 2009-2014, this is not necessarily a limitation. As various independent statistics and reports [11,12,13,14] show, Football has evolved especially over the last few years. Such changes also influence Fantasy Football. As a consequence, the data from ten years ago might not properly represent today\u2019s games any more thus affecting the predictions negatively. The test data includes lots of cases with QBs that would never be used in Fantasy Football because of a lack of experience, production or inconsistency. Therefore it makes sense to restrict the evaluation to the best QBs that actually have a chance to be used in Fantasy Football. In standard leagues with 12 teams one QB starts for every team, so the evaluation considers the predictions of the 24 best QBs (see Appendix List 6)."}, {"heading": "5 Experiments and Results", "text": "In this section, I will talk about the different experiments and the obtained results. First of all, I tried Support Vector Regression (SVR) using the scikit-learn implementation [15]. There are several features that probably do not influence the result very much, e.g. the number of two point conversions\nin the last game, so feature selection could actually improve the accuracy. The method I chose for feature selection is Recursive Feature Elimination with Cross Validation (RFECV). It recursively eliminates features and checks if the regression method\u2019s results improve by cross validating. In order to reduce the running time I applied the feature selection before the hyperparameter selection. The assumption was that no matter which regression method and hyperparameters are chosen, the important features will always be more or less the same. The selected features were the age, the number of years as a professional player, the number of passing attempts and the number of successful passing two-point conversions (both from last 10 games). This is a very small subset of the features since important features like the touchdowns were not taken into consideration and rarely occurring, low-weighted features like two-point conversion stats are included. Therefore, I also tried two other ways: no feature selection and manual feature selection. For the manual feature selection, I simply removed the two-point conversion stats. The results are compared in Figure 1. Interestingly, the SVR with RFECV performed best, followed by SVR with manual feature selection and SVR without feature selection. The reason for this is most likely that the selected hyperparameters were C = 0.25, = 0.25 and a linear kernel. Having a small regularization value C means that the influence of the feature values on the prediction is reduced. Even though the feature normalization did not influence the error, it sped up the running time immensely. This allowed for more configurations in the hyperparameter selection for SVR. All possible combinations of the following values were used:\nkernel \u2208 {radial basis function, sigmoid, linear, polynomial}, C \u2208 {0.25, 0.5, 0.75, 1.0}, \u2208 {0.05, 0.1, 0.15, 0.2, 0.25}, \u03b3 \u2208 {0, 0.05, 0.1, 0.15}, degree \u2208 {2, 3}\nAs already mentioned above, the best configuration was C = 0.25, = 0.25 and kernel = linear, although it is worth mentioning that the difference is very small. \u03b3 and the degree are only used for some of the kernels. Figure 1 shows both the distribution of the absolute error in the whole test set and when considering only the cases with the best 24 players. The overall distribution is quite similar which is also represented in the numbers in Table 1. Therefore, predictions of all QBs seem to roughly as difficult as predictions of the top 24 QBs only.\nSecondly, I used Neural Networks based on the PyBrain library [16]. In order to determine the right number of epochs nepochs, number of hidden units nhidden and the type of neurons in the hidden layer thidden, every combination of the following values was used:\nnepochs \u2208 {10, 50, 100, 1000}, nhidden \u2208 {10, 25, 50, 100}, thidden \u2208 {Sigmoid,Tanh}\nThe results are shown in the Appendix in Table 2. In comparison with the best SVR results, most Neural Nets performed worse on both on the whole test set and for only the 24 best players in all error categories. The only configuration that achieved significantly better results than all others was nepochs = 50, nhidden = 50 and thidden = Sigmoid. Its RMSE, MAE and MRE were 7.868, 6.235 and 0.413 on the cases involving only the 24 best players. Interestingly, the errors for the best 24 players were much lower than for the whole test set. The MAE and MRE are actually better than the best results of the SVRs."}, {"heading": "6 Discussion and Conclusions", "text": "All in all, the errors were still very high. For example, the MAE of the best prediction was more than 6 points, which can make a difference in most Fantasy Football games. Considering that I only predicted the scores for one position, Quarterback, there are still several more positions on a team thus potentially increasing the overall error. The comparison with other sources of predictions is hard because most websites just use experts. The ones that actually project with a model, e.g. ESPN, do not openly write about their accuracy. Reda and Stringer [10] analyzed ESPN\u2019s accuracy, but they used multiple positions at once such that I could not compare it properly. It is encouraging, though, that their MAE histograms show the same Bell Curve shape and have approximately the same variance. Apart from that, there are a few interesting observations from this experiment. The feature selection with RFECV selected only 4 features. I assume that many of the features are correlated and therefore do not add much extra value to the predictions. The only ways the accuracy can be significantly improved is by adding new features or by enhancing existing ones. As the feature selection indicated, having both last week\u2019s statistics and the average over the last ten games does not provide much extra information. In order to take the trend better into account, the exponentially weighted moving average (EWMA) could be used to substitute the current game statistics. The EWMA is calculated as St = \u03b1Gt + (1\u2212 \u03b1)St\u22121 where St is the EWMA for all games up to t and Gt are the games statistics for game t. This could be done for the last few games or even over the whole career. There are also several other interesting features that could be taken into account, such as the injury report status, suspensions, draft position and college statistics for first-year players, postseason and preseason performance, overall team performance and changes on the team such as trades or injuries. One could even go further and analyze Twitter posts on a specific player or factor in expert rankings and predictions from other sources. Most of these are not accessible with the used API and exceed the scope of this project, but seem promising for future work. So far, only Neural Networks and Support Vector Regression were used. Other models are conceivable for this task, too. But specifically Neural Networks with multiple hidden layers could be useful since the Networks with only one layer performed already quite well. Overall, as the total number of users of Fantasy Football Leagues and the amounts of invested money increase the demand for accurate predictions will grow and probably lead to more research on the topic."}], "references": [{"title": "A Statistical Data Mining Approach to Determining the Factors that Distinguish Championship Caliber Teams in the National Football League", "author": ["E. Fokoue", "D. Foehrenbach"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Sports forecasting: a comparison of the forecast accuracy of prediction markets, betting odds and tipsters", "author": ["M. Spann", "B. Skiera"], "venue": "Journal of Forecasting,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Putting crowd wisdom to work", "author": ["B. Cowgill"], "venue": "Retrieved April", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2015}, {"title": "A compound framework for sports results prediction: A football case study", "author": ["B. Min", "J. Kim", "C. Choe", "H. Eom", "R.B. McKay"], "venue": "Knowledge-Based Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "The Minitab Blog", "author": ["Rudy", "K. (n.d"], "venue": "Retrieved April", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2015}, {"title": "An artificial neural network approach to college football prediction and ranking. University of WisconsinElectrical and Computer Engineering Department", "author": ["M. Pardee"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1999}, {"title": "Predictions for National Football League games via linear-model methodology", "author": ["D. Harville"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1980}, {"title": "Improved least squares football, basketball, and soccer predictions", "author": ["R.T. Stefani"], "venue": "IEEE transactions on systems, man, and cybernetics,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1980}, {"title": "Are ESPN\u2019s fantasy football projections accurate", "author": ["G. Reda", "M. Stringer"], "venue": "Retrieved April", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Evolution of the NFL Offense: An Analysis of the Last 80 Years", "author": ["A. Powell-Morse"], "venue": "Retrieved April", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Passing league: Explaining the NFL\u2019s aerial evolution", "author": ["S. Wyche"], "venue": "Retrieved April", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "The NFL is a passing league. The statistics prove it and the rules mandate", "author": ["M. Mize"], "venue": "it. Retrieved April", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}, {"title": "Todays NFL Really Is A Passing League, As Confirmed By These Fancy Graphs That Chart The Last 80 Years Of Offense", "author": ["M. Rudnitsky"], "venue": "Retrieved April", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2013}, {"title": "An API to retrieve and read NFL Game Center JSON data", "author": ["A. Gallant"], "venue": "Retrieved April", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}], "referenceMentions": [{"referenceID": 3, "context": "[5] used Bayesian inference and rule-based reasoning to predict the result of American Football matches.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "Similarly, Harville [8] used a linear model for the same task.", "startOffset": 20, "endOffset": 23}, {"referenceID": 5, "context": "A Neural Network approach to predicting the winner of College Football games was proposed by Pardee [7].", "startOffset": 100, "endOffset": 103}, {"referenceID": 7, "context": "Stefani [9] used an improved least squares rating system to predict the winner for nearly 9000 games from College and Pro Football and even other sports.", "startOffset": 8, "endOffset": 11}, {"referenceID": 0, "context": "Fokoue and Foehrenbach [2] have analyzed important factors for NFL teams with Data Mining.", "startOffset": 23, "endOffset": 26}, {"referenceID": 1, "context": "Even though Spann and Skiera\u2019s work on sports predictions [3] is unrelated to American Football, their prediction markets could be used for Fantasy Football predictions.", "startOffset": 58, "endOffset": 61}, {"referenceID": 2, "context": "used for various purposes, for example, in companies such as Google [4].", "startOffset": 68, "endOffset": 71}, {"referenceID": 4, "context": "In his blog on sports analysis, Rudy [6] used regression models to predict Fantasy Football scores.", "startOffset": 37, "endOffset": 40}, {"referenceID": 6, "context": "Linear models like SVR have been very successful for predicting the winner of a match [1,8].", "startOffset": 86, "endOffset": 91}, {"referenceID": 9, "context": "As various independent statistics and reports [11,12,13,14] show, Football has evolved especially over the last few years.", "startOffset": 46, "endOffset": 59}, {"referenceID": 10, "context": "As various independent statistics and reports [11,12,13,14] show, Football has evolved especially over the last few years.", "startOffset": 46, "endOffset": 59}, {"referenceID": 11, "context": "As various independent statistics and reports [11,12,13,14] show, Football has evolved especially over the last few years.", "startOffset": 46, "endOffset": 59}, {"referenceID": 12, "context": "As various independent statistics and reports [11,12,13,14] show, Football has evolved especially over the last few years.", "startOffset": 46, "endOffset": 59}, {"referenceID": 8, "context": "Reda and Stringer [10] analyzed ESPN\u2019s accuracy, but they used multiple positions at once such that I could not compare it properly.", "startOffset": 18, "endOffset": 22}], "year": 2015, "abstractText": "The ubiquity of professional sports and specifically the NFL have lead to an increase in popularity for Fantasy Football. Every week, millions of sports fans participate in their Fantasy Leagues. The main tasks for users are the draft, the round-based selection of players before each season, and setting the weekly line-up for their team. For the latter, users have many tools at their disposal: statistics, predictions, rankings of experts and even recommendations of peers. There are issues with all of these, though. Most users do not want to spend time reading statistics. The prediction of Fantasy Football has barely been studied and are fairly inaccurate. The experts judge mainly based on personal preferences instead of unbiased measurables. Finally, there are only few peers voting on line-up decisions such that the results are not representative of the general opinion. Especially since many people pay money to play, the prediction tools should be enhanced as they provide unbiased and easy-to-use assistance for users. This paper provides and discusses approaches to predict Fantasy Football scores of Quarterbacks with relatively limited data. In addition to that, it includes several suggestions on how the data could be enhanced to achieve better results. The dataset consists only of game data from the last six NFL seasons. I used two different methods to predict the Fantasy Football scores of NFL players: Support Vector Regression (SVR) and Neural Networks. The results of both are promising given the limited data that was used. After an overview of related work in Section 2, I present my solution. Afterwards, I describe the data set in greater detail before Section 5 explains the experiments and show the results. Finally, Section 6 discusses the findings and possible future work.", "creator": "LaTeX with hyperref package"}}}