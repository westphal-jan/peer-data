{"id": "1510.01659", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Oct-2015", "title": "DKP-AOM: results for OAEI 2015", "abstract": "in this research paper, we present the combined results obtained by involving our dkp - document aom system partners within conducting the joint oaei global 2015 campaign. dkp - structured aom is theoretically an ontology software merging tool body designed to ultimately merge randomly heterogeneous anatomical ontologies. in oaei, we have participated widely with building its ontology mapping analysis component program which serves as a basic module capable procedure of matching comparatively large scale ontologies before assisting their iso merging. this mapping is our first successful participation initiative in the 2013 conference, oa4qa and anatomy track of oaei. two dkp - encoded aom is indirectly participating globally with following two versions ( dkp - oracle aom and binary dkp - aom _ { lite ), dkp - aom performs affinity coherence analysis. in the oa4qa method track, dkpaom out - performed analyses in the evaluation and later generated, accurate alignments only allowed to honestly answer all the subsequent queries obtained of matching the application evaluation. also we can each also theoretically see its competitive results for protecting the conference integration track inherent in joining the evaluation project initiative among other reputed systems. hence in removing the anatomy validation track, see it has produced parallel alignments mapped within an allocated reaction time allocation and appeared as in the list of systems clusters which have produce good coherent results. finally, therefore we discuss some future adaptation work necessary towards supporting the integrated development development of dkp - aom.", "histories": [["v1", "Tue, 6 Oct 2015 16:48:24 GMT  (569kb)", "http://arxiv.org/abs/1510.01659v1", "8 pages, 3 figures, 3 tables, initial results of OM workshop, Ontology Matching Workshop 2015"]], "COMMENTS": "8 pages, 3 figures, 3 tables, initial results of OM workshop, Ontology Matching Workshop 2015", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["muhammad fahad"], "accepted": false, "id": "1510.01659"}, "pdf": {"name": "1510.01659.pdf", "metadata": {"source": "CRF", "title": "Initial results for Ontology Matching workshop 2015 DKP-AOM: results for OAEI 2015", "authors": ["Muhammad Fahad"], "emails": ["firstname.lastname@univ-lyon2.fr"], "sections": [{"heading": null, "text": "AOM is an ontology merging tool designed to merge heterogeneous ontologies. In OAEI, we have participated with its ontology mapping component which serves as a basic module capable of matching large scale ontologies before their merging. This is our first successful participation in the Conference, OA4QA and Anatomy track of OAEI. DKP-AOM is participating with two versions (DKP-AOM and DKP-AOM_lite), DKP-AOM performs coherence analysis. In OA4QA track, DKPAOM out-performed in the evaluation and generated accurate alignments allowed to answer all the queries of the evaluation. We can also see its competitive results for the conference track in the evaluation initiative among other reputed systems. In the anatomy track, it has produced alignments within an allocated time and appeared in the list of systems which produce coherent results. Finally, we discuss some future work towards the development of DKP-AOM.\nKeywords: Ontology matching, Ontology merging, disjoint knowledge, inconsistency, incompleteness, inconciseness, validation of mappings, verification of merged ontology\n1 Presentation of the System\nOntology merging is a process of building a new ontology from two or more existing ontologies with overlapping parts. The merged ontology can be either virtual or physical, but must be consistent, coherent and include all the information from the source ontologies [1]. Ontology merging is based on two primary steps. Firstly, the source ontologies are looked-up for correspondences between them. Secondly, duplicate-free and conflict-free union of source ontologies is achieved based on the established correspondences [2]. The first part mainly comes under the ontology matching, whereas the second part targets to achieve the merged ontology based on the results of the first part, i.e., mappings between source ontologies. To produce accurate merged ontology, there should be some mechanism to avoid erroneous intermediate mappings and also to merge them in such a way that produces consistent, complete and coherent merged ontology. There are many hurdles that come across in the generation of desired merged output. Firstly, ontological errors and design anomalies that\ncan occur in the source ontologies detract from reasoning and inference mechanisms, and create bottleneck in their integration tasks [3]. In addition, conceptualization of domain, explication and modeling of knowledge over ontologies and semantic heterogeneities make their integration more difficult [4]. Secondly, even if the individual ontologies are free from errors, some of the identified mappings lead towards the erroneous situations producing several types of errors in the merged ontology [5]. For building an effective ontology merging algorithm, it is essential to incorporate ontological error checking during the validation of ontology mapping process and the verification of merged ontology to attain the accuracy of the resultant output.\nIn order to meet the above mentioned challenges for the ontology merging research, we proposed semi-automatic DKP-OM system implemented in Jena framework for the merging of heterogeneous ontologies with the intervention of a human user expert [6]. Later, we released a fully Automatic Ontology Merging (AOM) system named DKP-AOM implemented in OWLAPI 3.3 [7]. The name DKP comes from the concept of performing Disjoint Knowledge Analysis (DKA) and Disjoint Knowledge Preservation (DKP) during the merging process. Disjoint Knowledge Analysis plays a vital role in controlling the search space for finding similarities between source ontologies. Look-up within disjoint partitions of source ontologies significantly reduces the time complexity of the mapping phase. Disjoint Knowledge Preservation in the merged ontology helps to preserve disjoint axioms in the sub-hierarchies of merged ontology to avoid incompleteness in the resultant merged ontology. In this way, it also pin-points different conflicts between source ontologies based on disjoint axioms in the source ontologies and detects inconsistent mappings. Computed mappings that lead in many cases to a large number of unsatisfiable classes are eliminated so that the resultant merged ontology should not suffer from inconsistencies. The next sub-sections provide more details about DKP-AOM and then discuss our results of OAEI participation.\n1.1 State, purpose, general statement\nOur system DKP-AOM follows a five step methodology as illustrated in the Figure 1. First, it generates the intermediate models (OWL-DL Graphs) of source ontologies and does preprocessing on the concept URIs and labels. Second using these graphs, MatchManager component performs the first level task of finding the initial lexical, synonym and axiomatic based mappings between concepts. For this, it first builds the search space based on disjoint axioms present inside the source ontologies for finding the correspondences between the ontologies.\nFigure 1. DKP-AOM merging process\nMatchManager performs the following similarity measures to detect mappings:\nConcept Similarity. It employs several basic matchers to find mappings between concepts. Concept URI similarity (Simuri) and Label similarity (Simlab) computes lexical and synonym based correspondences at the element level between source ontologies. Lexical similarity finds the stringbased correspondences based on SimMetric*. Synonym similarity is computed based on the lexical database Wordnet that helps to detect the concepts which have the same meanings but are lexically different. Datatype and Object property Similarity. Correspondences between Datatype and Object properties are identified on the basis of their URI and Label similarities. It also considers domain and range assosicated with them to detect a perfect match. Inheritance based Similarity. It also considers that an inheritance is a vital factor to detect the mapping candidates between source ontologies. It increases a level of confidence that the detected mappings have not just a lexical similarity, but a real mapping having parent-child relation as well. Inheritance matching is done after the Concept label similarity and synonym similarity. Consider a scenario, where an ontology O1 contains Person and PhD concepts. Person is defined as: {Person subclassof hasName some String}, and concept PhD is defined as a subconcept of Person concept as: {PhD subClass Person}. In ontology O2, there is a PhD candidate that is defined as: {PhD subclass of hasName some String}. In such a case we get the basic mappings between O1:PhD, and O2:PhD. Then the inheritance matcher plays an important role by matching the inheritance of the restriction from Person to PhD from O1 with the restriction in O2 and adds the confidence level of their similarity. In this way, an inheritance matching has a potential impact in the proposed solution. This similarity will help for the detection of axiomatic similarities between concepts. Concept DL Axiomatic Similarity (Simaxm). OWL classes are described through the class descriptions/expressions that enrich the background information of the concepts and represent the constraints of real world situations. For finding the accurate semantic similarity between the concepts of ontologies, DL axioms can help significantly as they define the context of the concepts. They link the concept by different means that depict the concept\u2019s real semantics. Therefore, it gets axiomatic definitions, which can be formed from the union, complement, intersection and restriction operators applied on the primitive concept or the anonymous concept and/or by their boolean combinations, and performs matching to detect such DL axiom similarities. This is the most difficult part of matching, although most significant as well. Most ontologies in Conference track in OAEI were equipped with OWL DL axioms of various kinds, therefore it opens a way to use semantic matching.\nMatchManager aggregates the individual similarities between ontologies and propagates the results to ConsistencyChecker for the validation of mappings. Third, ConsistencyChecker has many detectors that make the validation of each mapping found in the initial stage so that the merged ontology stays consistent with reference to the source ontologies. When the initial mappings pass the consistency test, ConsistencyChecker passes the mappings to the Reasoner.\nFourth, Reasoner aggregates the output of different similarity measures, resolves conflicts and merges mappings to generate a global merged ontology. This Reasoner is a component of DKP-AOM system and not an open source DL Reasoner engine. It implements various patterns (see details in [7]) for the automatic merging of source ontologies in case of different types of conflicts and structural differences in source ontologies.\nFinally, it compiles the output as a merged global ontology automatically or a final list of consistent mappings as required by the end user. Our merging algorithm imports the first ontology as the merged ontology and then performs several operations to build the combined definitions for each of the concepts from the source ontologies. Each of the axiomatic definitions from the source ontologies are\n* http://sourceforge.net/projects/simmetrics\nmatched together, merging is performed on them, and the combined rich axioms are added in the merged ontology. Our merging algorithm performs deletion of axioms or the rewriting of some of them in order to preserve desired consequences while removing the undesired ones. Merging of axiomatic definitions really achieves a richer merged ontology which captures sufficient definitions from the source ontologies. Finally, it applies the quality criteria and ensures the ultimate goal of achieving the satisfiability of merged ontology by checking the correctness and consistency of concepts, properties, and axioms of the generated ontology.\n1.2 Specific Techniques Used\nData Preprocessing: Linguistic analysis of concept labels and properties is done with the help of MorphAdorner\u2020 (version 1.0). MorphAdorner is helpful in various cases especially the lemmatization process is worth useful for detecting the base words of terms and irregular verbs used in source ontologies. For example, concept \u201cstudents\u201d to lemma \u201cstudent\u201d and properties (\u201cAccepted\u201d, \u201cAccepting\u201d, \u201cAccept\u201d, and \u201cAccepts\u201d) to their base \u201caccept\u201d. MorphAdorner is really helpful for the detection of similarities between properties which are usually not in the base form.\nSearch Space Analysis based on Disjoint Partitions: It is very important to build the search space for the lookup of mappings between ontologies. In general, it requires exhaustive analysis (or complete comparison) for the similarity computation between the concepts of ontologies, where each concept c of the ontology Oa is matched with each concept c\u2019 of the ontology Ob. The restriction of look-up within disjoint partitions minimizes the search space for the mapping computation [8]. For an example, consider conference ontologies illustrated in Figure 2. There are 14 concepts in O1:CRS_DR ontology and 36 concepts in O2:CMT ontology. In CRS_DR ontology, three disjoint axioms between level-1 concepts, partition the domain concepts in four non-overlapping domains, i.e., Program, Person, Document and Event. CMT ontology partitions the concept into six disjoint categories, i.e., Person, Decision, Document, Conference, Preference, etc. These ontologies allow the concept mapping search space look-up within disjoint partitions. For example, search spaces look-up within (O1:Person, O2:Person), (O1:Document, O2:Document), (O1:Event, O2:Conference). For concept matching, it needs 14*36 = 504 comparisons. But, lookup in disjoint partitions makes the search space much smaller, and requires maximum 155 comparisons (by manual calculation) for mapping the concepts of these ontologies.\n\u2020 http://morphadorner.northwestern.edu\nWe believe this idea of Divide and Conquer is helpful for the large ontologies. The more disjoint axioms are modeled in the input ontologies, the more search space is restricted, which impacts in lower number of comparisons for the identification of mappings. We call this disjoint based partitioning strategy as Divide and Conquer approach. In fact, it resembles, but not achieves a full or successful conquer in all scenarios of partitioning, as divide and conquer strategies found in an algorithm domain where the divided partition is at last conquered with success. For example, in case of failure, when a concept does not found its mapping concept in the divided partition, it is matched with the other level of concepts to find its mapping (just like exhaustive search in the entire space but step-by-step looking in sibling hierarchy and then search upward).\nValidation of Mappings: For the evaluation of ontologies, Gomez-Perez constructed an error taxonomy as a guideline for ontology engineers to help building well-formed and well-structured classification of concepts in the ontologies. She defined three classes of ontological errors that might occur when modeling the conceptualization into taxonomies, i.e., Inconsistency, Incompleteness and Redundancy [9] as illustrated in Figure 3. Inconsistency in ontology means that there is some sort of contradictory knowledge inferred from the concepts, definitions and instances within the ontology. It creates ambiguity, contradictions in interpretations and compromises precision of results. Incompleteness occurs when ontologists model the domain knowledge in the form of concepts, properties and definitions, but overlooked some of the important information about the domain. The incompleteness of domain knowledge lacks reasoning and prevents inference mechanisms. The other important task is to make ontologies concise without repeating and replicating same information so that they store only necessary and sufficient knowledge about the concepts, axioms and properties. Redundancy errors not only compromise conciseness and usability, but also create problems for the maintenance and manageability of ontologies. We used this framework as a test criteria for the validation of mapping and verification of merged ontology [10]. Computed initial mappings that lead to unsatisfiable classes in merged ontology are eliminated so that the resultant merged ontology should not suffer from inconsistencies. This test criteria serves best for the detection of inconsistent mappings and also for ensuring the satisfiability of a merged ontology. This is one of the reasons that our system has produced alignments which allowed to answer all the queries of the OA4QA track evaluation.\n1.3 Adaptations made for the evaluation\nAs you read above, DKP is an automatically merging system. Therefore it was developed based on user GUIs such as source ontology trees for display, visual alignments between ontologies, merged ontology tree, etc. The original version of DKP has changed and these visual components are removed so that it can participate under the seals platform. However, still it needs proper clean-up to improve its runtime for the future OAEI participations.\n1.4 Link to the system\nVarious versions of DKP can be found at my personal site: http://sites.google.com/site/mhdfahad under plugins tab. The mapping system is separated from the merging system, and can be downloaded according to needs. For the merging of ontologies, use the same command of seals platform with \u2013o following three paths, two for source ontologies and one for the output merged ontology. As a result of this command, a list of ontology mappings and a resultant merged ontology are produced.\n2 Results\nIn order to show the efficiency and effectiveness of our system, this year we participated in Conference, OA4QA and Anatomy tracks. The results are very encouraging provided by the OAEI 2015 campaign as our system is acceptable and comparable with other participants, and are discussed in the following subsections.\n2.1 Conference\nThe goal of conference track is to find alignments among 16 ontologies relatively smaller in size (between 14 and 140 entities) but rich in semantic heterogeneities about the conference organization domain. As a result, Alignments are evaluated automatically against reference alignments. Therefore, it is very interesting to measure the Precision, Recall and F-measure of our system and also does a comparison between existing systems to see their performance on real world datasets. Table 1 presents the results obtained by running DKP-AOM on the Conference track of OAEI campaign 2015. Our system DKP-AOM has produced very competitive results among top ranked systems. Our precision measure is significantly high, recall is good giving comparable F-measure value to depict a real effort towards detecting heterogeneities for the goal of ontology matching.\n2.2 Ontology Alignment for Query Answering (OA4QA)\nIn this track, our system has out-performed and generated excellent results (see Table 2). Precision and recall has calculated with respect to the ability of the generated alignments to answer a set of queries in an ontology-based data access scenario where several ontologies exist. AML, DKP-AOM, LogMap, LogMapC and XMap were the only matchers whose alignments allowed to answer all the queries of the evaluation. The best global results have been achieved for violations queries, that has been correctly covered by AML, DKP-AOM, LogMap, COMMAND, LogMapC and XMAP, in\ndecreasing order of f-measure w.r.t. RA1. Notably, our DKP-AOM achieved an impressive fmeasure of 0.999 w.r.t. RAR1, showing an effective handling of logical violations."}, {"heading": "Global Evaluation Results", "text": ""}, {"heading": "Advanced Queries Results", "text": ""}, {"heading": "Basic Queries Results", "text": "2.3 Anatomy\nThe anatomy real world case is about matching two very large biomedical ontologies, i.e., Adult Mouse Anatomy (2744 classes) and the NCI Thesaurus (3304 classes) describing the human anatomy. We participated with two versions DKP-AOM and DKP-AOM_lite, DKP-AOM performs coherence analysis. The evaluation was run on a server with 3.46 GHz (6 cores) and 8GB RAM, with allocated time less than an hour. This year 2015, there are 11 different systems (not counting different versions) which generated an alignment, out of them only four systems participated in the anatomy track for the first time. These are COMMAND, GMap, JarvisOM and DKP-AOM (with two version). Two of them COMMAND and GMap run out of memory and could not finish execution with the allocated amount of memory, therefore, their execution times are not fully comparable to the other systems. Our systems have produced results within an allocated time, illustrated in Table 3 with other systems.\nImportantly, our DKP-AOM achieves coherency and became in the list of 7 systems which\nproduced only coherent mappings. It has also generated only trivial correspondences.\nF-Measure of DKP-AOM_lite (0.763) is very near to the baseline which is based on (normalized)\nstring equivalence (StringEquiv, 0.766), with difference of only .003.\n3 Conclusion and Future Directions\nThe participation of DKP-AOM in OAEI 2015 is a success in the conference and OA4QA track. In OA4QA track, DKPAOM out-performed in the evaluation and generated accurate alignments which allowed to answer all the queries of the evaluation. In Conference track, it produced competitive results among top ranked systems. It also presented intermediate results in the Anatomy track and comes in the list of 7 matching system which produce coherent results. However, the whole framework of DKP-AOM is very huge and the participated version needs more effort of development to achieve more success in the upcoming OAEI. We plan to integrate synonym based mappings in the participated version. In addition, we plan to implement all the test criteria inside the DKP-AOM and present it as a complete system that achieves consistency, completeness and coherency.\nOur technique of building search space is based on the disjoint partitions available in the\nsource ontologies (that are very rarely present in the dataset ontologies). One of our future directions is to devise a disjoint learning algorithm to identify and make disjoint partitions automatically in the source ontologies, even if disjoint partitions were not present in the source ontologies before their merging.\nReferences\n1. Bruijn, J.d., Ehrig, M., Feier, C., Mart\u00edn-Recuerda, F., Scharffe, F., and Weiten., M., Ontology mediation, merging and\naligning. In Semantic Web Technologies. Wiley 2006\n2. Euzenat, J., and Shvaiko, P., Ontology Matching. Springer, 2007, ISBN 978-3-540-49611-3.\n3. Fahad, M., Qadir, M.A., Noshairwan, M.W., Ontological Errors - Inconsistency, Incompleteness and Redundancy. In\nProceedings of 10th Intl Conference on Enterprise Information Systems, pp. 253-285, 2008, Spain, Springer,\n4. Klein, M., (2001): Combining and relating ontologies: an analysis of problems and solution. In Proc. of Workshop on\nOntologies and Information Sharing (IJCAI), pp. 53-62. Seattle, USA (2001)\n5. Fahad, M., and Qadir, M.A., A Framework for Ontology Evaluation, 16th ICCS Supplement Proceeding, vol. 354,\n2008, France, pp.149-158.\n6. Fahad, M., Qadir, M.A., Noshairwan, W., Iftakhir, N., DKP-OM: A Semantic based Ontology Merger, Proceedings of\n3rd International Conference on Semantic Technologies (I-Semantics 07) Graz, Austria, 2007, Pages 313-322\n7. Fahad, M., Moalla, N., Bouras, A., Detection and Resolution of Semantic Inconsistency and Redundancy in an\nAutomatic Ontology Merging System, Journal of Intelligent Information System (JIIS), Vol. 39(2) pp. 535-557,\n29/4/2012, DOI 10.1007/s10844-012-0202-y\n8. Fahad, M., Moalla, N., Bouras, A., Qadir, M.A., Farukh, M., Disjoint Knowledge Analysis and Preservation in\nOntology Merging Process, proceedings of 5th International Conference on Software Engineering Advances\n(ICSEA\u201910), IEEE CS, August 22-27, 2010 - Nice, France.\n9. G\u00f3mez-P\u00e9rez, A., (2001): Evaluating ontologies: Cases of Study. IEEE Intelligent Systems and their Applications, vol.\n16(3): 391\u2013409, (2001)\n10. Fahad, M., Moalla, N., Bouras, A., Towards ensuring Satisfiability of Merged Ontology, International conference on\ncomputational science, ICCS 2011, Procedia Computer Science 4 (2011), pp. 2216\u2013222, 1-3 june, 2011"}], "references": [{"title": "Ontology mediation, merging and aligning", "author": ["Bruijn", "J.d", "M. Ehrig", "C. Feier", "F. Mart\u00edn-Recuerda", "F. Scharffe", "M. Weiten"], "venue": "In Semantic Web Technologies", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Ontological Errors - Inconsistency, Incompleteness and Redundancy", "author": ["M. Fahad", "M.A. Qadir", "M.W. Noshairwan"], "venue": "In Proceedings of 10th Intl Conference on Enterprise Information Systems,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "Combining and relating ontologies: an analysis of problems and solution", "author": ["M. Klein", "(2001"], "venue": "In Proc. of Workshop on Ontologies and Information Sharing (IJCAI), pp. 53-62. Seattle, USA", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2001}, {"title": "A Framework for Ontology Evaluation, 16th ICCS", "author": ["M. Fahad", "M.A. Qadir"], "venue": "Supplement Proceeding,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "DKP-OM: A Semantic based Ontology Merger", "author": ["M. Fahad", "M.A. Qadir", "W. Noshairwan", "N. Iftakhir"], "venue": "Proceedings of 3rd International Conference on Semantic Technologies (I-Semantics", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Detection and Resolution of Semantic Inconsistency and Redundancy in an Automatic Ontology Merging System", "author": ["M. Fahad", "N. Moalla", "A. Bouras"], "venue": "Journal of Intelligent Information System (JIIS),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Disjoint Knowledge Analysis and Preservation in Ontology Merging Process, proceedings of 5th International Conference on Software Engineering Advances (ICSEA\u201910)", "author": ["M. Fahad", "N. Moalla", "A. Bouras", "M.A. Qadir", "M. Farukh"], "venue": "IEEE CS, August 22-27,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Evaluating ontologies: Cases of Study", "author": ["A. G\u00f3mez-P\u00e9rez", "(2001"], "venue": "IEEE Intelligent Systems and their Applications, vol. 16(3): 391\u2013409,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "Towards ensuring Satisfiability of Merged Ontology, International conference on computational science, ICCS", "author": ["M. Fahad", "N. Moalla", "A. Bouras"], "venue": "Procedia Computer Science", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "The merged ontology can be either virtual or physical, but must be consistent, coherent and include all the information from the source ontologies [1].", "startOffset": 147, "endOffset": 150}, {"referenceID": 1, "context": "can occur in the source ontologies detract from reasoning and inference mechanisms, and create bottleneck in their integration tasks [3].", "startOffset": 133, "endOffset": 136}, {"referenceID": 2, "context": "In addition, conceptualization of domain, explication and modeling of knowledge over ontologies and semantic heterogeneities make their integration more difficult [4].", "startOffset": 163, "endOffset": 166}, {"referenceID": 3, "context": "Secondly, even if the individual ontologies are free from errors, some of the identified mappings lead towards the erroneous situations producing several types of errors in the merged ontology [5].", "startOffset": 193, "endOffset": 196}, {"referenceID": 4, "context": "In order to meet the above mentioned challenges for the ontology merging research, we proposed semi-automatic DKP-OM system implemented in Jena framework for the merging of heterogeneous ontologies with the intervention of a human user expert [6].", "startOffset": 243, "endOffset": 246}, {"referenceID": 5, "context": "3 [7].", "startOffset": 2, "endOffset": 5}, {"referenceID": 5, "context": "It implements various patterns (see details in [7]) for the automatic merging of source ontologies in case of different types of conflicts and structural differences in source ontologies.", "startOffset": 47, "endOffset": 50}, {"referenceID": 6, "context": "The restriction of look-up within disjoint partitions minimizes the search space for the mapping computation [8].", "startOffset": 109, "endOffset": 112}, {"referenceID": 7, "context": ", Inconsistency, Incompleteness and Redundancy [9] as illustrated in Figure 3.", "startOffset": 47, "endOffset": 50}, {"referenceID": 8, "context": "We used this framework as a test criteria for the validation of mapping and verification of merged ontology [10].", "startOffset": 108, "endOffset": 112}], "year": 2015, "abstractText": "In this paper, we present the results obtained by our DKP-AOM system within the OAEI 2015 campaign. DKPAOM is an ontology merging tool designed to merge heterogeneous ontologies. In OAEI, we have participated with its ontology mapping component which serves as a basic module capable of matching large scale ontologies before their merging. This is our first successful participation in the Conference, OA4QA and Anatomy track of OAEI. DKP-AOM is participating with two versions (DKP-AOM and DKP-AOM_lite), DKP-AOM performs coherence analysis. In OA4QA track, DKPAOM out-performed in the evaluation and generated accurate alignments allowed to answer all the queries of the evaluation. We can also see its competitive results for the conference track in the evaluation initiative among other reputed systems. In the anatomy track, it has produced alignments within an allocated time and appeared in the list of systems which produce coherent results. Finally, we discuss some future work towards the development of DKP-AOM.", "creator": "Microsoft\u00ae Word 2013"}}}