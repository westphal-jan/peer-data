{"id": "1601.02603", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Jan-2016", "title": "How to Use Temporal-Driven Constrained Clustering to Detect Typical Evolutions", "abstract": "in this paper, we propose developing a new single time - aware causal dissimilarity and measure that independently takes into essence account in the temporal dimension. observations that are close in forming the description space, smaller but distant in describing time aware are considered as sufficiently dissimilar. we finally also critically propose if a conditioning method insufficient to sufficiently enforce within the generalized segmentation contiguity, by introducing, in detail the objective function, it a penalty linear term inspired exclusively from the normal initial distribution function. we combine neither the two relevant propositions into a related novel time - triggered driven constrained clustering algorithm, internally called tdck - guided means, which directly creates a partition of coherent clusters, both successful in analyzing the conditioned multidimensional space northwest and downstream in the temporal evaluation space. this algorithm uses strictly soft semi - supervised constraints, unable to drastically encourage adjacent observations belonging to the same entity to eventually be readily assigned to the same cluster. we apply our algorithm to a systematic political system studies dataset data in order more to detect for typical evolution through phases. rather we readily adapt between the initial shannon transient entropy decomposition in continuous order further to measure the entity contiguity, continuously and we can show that monitoring our proposition consistently improves both temporal cohesion of interacting clusters, without any significant loss in studying the multidimensional variance.", "histories": [["v1", "Mon, 11 Jan 2016 01:20:26 GMT  (1326kb,D)", "http://arxiv.org/abs/1601.02603v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.DS", "authors": ["marian-andrei rizoiu", "julien velcin", "st\\'ephane lallich"], "accepted": false, "id": "1601.02603"}, "pdf": {"name": "1601.02603.pdf", "metadata": {"source": "CRF", "title": "HOW TO USE TEMPORAL-DRIVEN CONSTRAINED CLUSTERING TO DETECT TYPICAL EVOLUTIONS", "authors": ["MARIAN-ANDREI RIZOIU"], "emails": ["Marian-Andrei@rizoiu.eu", "Julien.Velcin@univ-lyon2.fr", "Stephane.Lallich@univ-lyon2.fr"], "sections": [{"heading": null, "text": "International Journal on Artificial Intelligence Tools c\u00a9 World Scientific Publishing Company\nHOW TO USE TEMPORAL-DRIVEN CONSTRAINED CLUSTERING TO DETECT TYPICAL EVOLUTIONS\nMARIAN-ANDREI RIZOIU\nERIC Laboratory, University Lumie\u0300re Lyon 2 5, avenue Pierre Mende\u0300s France\n69676 Bron Cedex, France Marian-Andrei@rizoiu.eu\nJULIEN VELCIN\nERIC Laboratory, University Lumie\u0300re Lyon 2 Julien.Velcin@univ-lyon2.fr\nSTE\u0301PHANE LALLICH\nERIC Laboratory, University Lumie\u0300re Lyon 2 Stephane.Lallich@univ-lyon2.fr\nReceived (Day Month Year) Revised (Day Month Year) Accepted (Day Month Year)\nIn this paper, we propose a new time-aware dissimilarity measure that takes into account the temporal dimension. Observations that are close in the description space, but distant in time are considered as dissimilar. We also propose a method to enforce the segmentation contiguity, by introducing, in the objective function, a penalty term inspired from the Normal Distribution Function. We combine the two propositions into a novel time-driven constrained clustering algorithm, called TDCK-Means, which creates a partition of coherent clusters, both in the multidimensional space and in the temporal space. This algorithm uses soft semi-supervised constraints, to encourage adjacent observations belonging to the same entity to be assigned to the same cluster. We apply our algorithm to a Political Studies dataset in order to detect typical evolution phases. We adapt the Shannon entropy in order to measure the entity contiguity, and we show that our proposition consistently improves temporal cohesion of clusters, without any significant loss in the multidimensional variance.\nKeywords: semi-supervised clustering; temporal clustering; temporal-aware dissimilarity measure; contiguity penalty function; temporal cluster graph structure."}, {"heading": "1. Introduction", "text": "Researchers in Social Sciences and Humanities (like Political Studies) have always gathered data and compiled databases of knowledge. This information often has a temporal component, the evolution of a certain number of entities is recorded over a period of time. Each entity is described using multiple attributes, which form the multidimensional description space. Therefore, an entry in such a database would be an observation, a triple (entity, timestamp, description). An observation xi = (\u03c6l, tm, xdi ) signifies that the en-\n1\nar X\niv :1\n60 1.\n02 60\n3v 1\n[ cs\n.L G\n] 1\n1 Ja\nn 20\n16\ntity \u03c6l is described by the vector xdi at the moment of time tm. We denote by x \u03c6 i the entity to which the observation xi is associated. Similarly, xti is the timestamp associated with the observation xi. Each observation belongs to a single entity and, consequently, each entity is associated with multiple observations, for different moments of time. Formally:\n\u2200xi \u2208 D : \u2203!\u03c6l \u2208 \u03a6 so that x\u03c6i = \u03c6l \u2200(\u03c6l, tm) \u2208 \u03a6\u00d7 T : \u2203!xi = (x\u03c6i , x t i, x d i ) so that x \u03c6 i = \u03c6l and x t i = tm\nFor example, a database studying the evolution of democratic states 1 will store, for each country and each year, the value of multiple economical, social, political and financial indicators. The countries are the entities, and the years are the timestamps.\nStarting from such a database, one of the interests of Political Studies researchers is to detect typical evolution patterns. There is a double interest: a) obtaining a broader understanding of the phases that the entity collection went through over time (e.g. detecting the periods of global political instability, of economic crisis, of wealthiness etc.); b) constructing the trajectory of an entity through the different phases (e.g. a country may have gone through a period of military dictatorship, followed by a period of wealthy democracy). The criteria describing each phase are not known beforehand (which indicators announce a world economic crisis?) and may differ from one phase to another.\nWe address these issues by proposing a novel temporal-driven constrained clustering algorithm. The proposed algorithm partitions the observations into clusters \u00b5j \u2208 M, that are coherent both in the multidimensional description space and in the temporal space. We consider that the obtained clusters can be used to represent the typical phases of the evolution of the entities through time. Figure 1 shows the desired result of our clustering algorithm. Each of the three depicted entities (\u03c61, \u03c62 and \u03c63) is described at 10 moments of time (tm,m = 1, 2, ..., 10). The 30 observations of the dataset are partitioned into 5 clusters (\u00b5j , j = 1, 2, ..., 5). In Figure 1a we observe how clusters \u00b5j are organized in time. Each of the clusters has a limited extent in time, and the time extents of clusters can overlap. The temporal extent of a cluster is the minimal interval of time that contains all the timestamps of the observations in that cluster. The entities navigate through clusters. When an observation belonging to an entity is assigned to cluster \u00b52 and the anterior observation of the same entity is assigned in cluster \u00b51, then we consider that the entity has a transition from phase \u00b51 to phase \u00b52. Figure 1b shows how the series of observations belonging to each entity are assigned to clusters, thus forming continuous segments. This succession of segments is\ninterpreted as the succession of phases through which the entity passes. For this succession to be meaningful, each entity should be assigned to a rather limited number of continuous segments. Passing through too many phases reduces the comprehension. Similarly, evolutions which are alternations between two phases (e.g., \u00b51 \u2212\u2192 \u00b52 \u2212\u2192 \u00b51 \u2212\u2192 \u00b52) hinder the comprehension.\nBased on these observations, we assume that the resulting partition must: \u2022 regroup observations having similar descriptions into the same cluster (just as tra-\nditional clustering does). The clusters represent a certain type of evolution; \u2022 create temporally coherent clusters, with limited extent in time. In order for a clus-\nter to be meaningful, it should regroup observations which are temporally close (be contiguous on the temporal dimension). If there are two different periods with similar evolutions (e.g. two economical crises), it is preferable to have them regrouped separately, as they represent two distinct phases. Furthermore, while it is acceptable that some evolutions exist during the entire period, usually the resulted clusters should have a limited temporal extent; \u2022 segment, as contiguously as possible, the series of observations for each entity. The sequence of segments will be interpreted as the sequence of phases through which the entity passes. In this paper, we propose a new time-aware dissimilarity measure that takes into account the temporal dimension. Observations that are close in the description space, but distant in time are considered as dissimilar. We also propose a method to enforce the segmentation contiguity, by introducing a penalty term based on the Normal Distribution Function. We combine the two propositions into a novel time-driven constrained clustering algorithm, TDCK-Means, which creates a partition of coherent clusters, both in the multidimensional space and in the temporal space. This algorithm uses soft semi-supervised constraints to encourage adjacent observations belonging to the same entity to be assigned to the same cluster. The proposed algorithm constructs the clusters that serve as evolution phases and segments the observations series for each entity.\nThe paper is organized as follows. In Section 2 we present some previous related works and, in Section 3, we introduce the temporal-aware dissimilarity function, the contiguity penalty, function the TDCK-Means algorithm and the graph structure induction method. In Section 4, we present the dataset that we use, the proposed evaluation measures and the obtained results. Finally, in Section 5, we draw the conclusion and plan some future extensions."}, {"heading": "2. Related work", "text": "Leveraging partial expert knowledge into clustering represents the domain of semisupervised clustering. The expert knowledge is under the form of either class labels, or pairwise constraints. Pairwise constraints 17 are either \u201cmust-link\u201d (the observations must be placed in the same cluster) or \u201ccannot-link\u201d (the two observations cannot be placed in the same cluster). Depending on the method in which supervision is introduced into clustering, 9 divides the semi-supervised clustering methods into two classes: a) the similarityadapting methods 3,5,11,19, which seek to learn new similarity measures in order to satisfy\nthe constraints, and b) the search-based methods 2,7,17 in which the clustering algorithm itself is modified.\nThe literature presents some examples of algorithms used to segment a series of observations into continuous chunks. In 12, the daily tasks of a user are detected by segmenting scenes from the recordings of his activities. Semi-supervised must-link constraints are set between all pairs of observations, and a fixed penalty is inflicted when the following conditions are fulfilled simultaneously: the observations are not assigned to the same cluster and the time difference between their timestamps is less than a certain threshold. A similar technique is used in 6, where constraints are used to penalize non-smooth changes (over time) on the assigned clusters. This segmenting technique is used to detect tasks performed during a day, based on video, on sound and on GPS information. In 15, the objects appearing in an image sequence are detected by using a hierarchical descending clustering, that regroups pixels into large temporally coherent clusters. This method seeks to maximize the cluster size, while guaranteeing intra-cluster temporal consistency. All of these techniques consider only one series of observations (a single entity) and must be adapted for the case of multiple series. The main problem of a threshold based penalty function is to set the value of the threshold, which is usually data-dependent. Optimal matching is used in 18 to discover trajectory models, while studying the de-standardization of typical life courses.\nThe temporal dimension of the data is also used in some other fields of Information Retrieval. In 16, constrained clustering is used to scope temporal relational facts in the knowledge bases, by exploiting temporal containment, alignment, succession, and mutual exclusion constraints among facts. In 4, clustering is used to segment temporal observations into continuous chunks, as a preprocessing phase. A graphical model is proposed in 14, that uses a probabilistic model in which the timestamp is part of the observed variables, and the story is the hidden variable to be inferred. But still, none of these approaches seek to create temporally coherent partitions of the data, mainly using the temporal dimension as a secondary information.\nIn the following sections, we propose a dissimilarity measure, a penalty function and a clustering algorithm in which the temporal dimension has a central role, and which address the limitations existing in the above presented work."}, {"heading": "3. Temporal-Driven Constrained Clustering", "text": "The observations xi \u2208 X that need to be structured can be written as triples (entity, time, description): xi = (x \u03c6 i , x t i, x d i ). x d i \u2208 D is the vector in the multidimensional description space which describes the entity x\u03c6i \u2208 \u03a6 at the moment of time xti \u2208 T . Traditional clustering algorithms input a set of multidimensional vectors, which they regroup in such a way that observations inside a group resemble each other as much as possible, and resemble observations in other groups as little as possible. K-Means 13 is a clustering algorithm based on iterative relocation, that partitions a dataset into m clusters, locally minimizing the sum of distances between each data points xi and its assigned cluster centroids \u00b5j \u2208M. At each iteration, the objective function\nI = \u03a3\u00b5j\u2208M\u03a3xi\u2208Cj ||xdi \u2212 \u00b5dj ||2\nis minimized until it reaches a local optimum. Such a system is appropriate for constructing partitions based solely on xdi , the description in the multidimensional space. It does not take into account the temporal order of the observations, nor the structure of the dataset, the fact that observations belong to entities. We extend to the temporal case by adding to the centroids a temporal dimension \u00b5tj , described in the same temporal space T as the observations. Just like its multidimensional description vector \u00b5dj , the temporal component does not necessary need to exist in the temporal set of the observation. It is an abstraction of the temporal information in the group, serving as a cluster timestamp. Therefore, a centroid \u00b5j will be the couple (\u00b5tj , \u00b5 d j ).\nWe propose to adapt the K-Means algorithm to the temporal case by adapting the Euclidean distance, normally used to measure the distance between an element and its centroid. This novel temporal-aware dissimilarity measure takes into account both the distance in the multidimensional space and in the temporal space. In order to ensure the temporal contiguity of observations for the entities, we add a penalty whenever two observations that belong to the same entity are assigned to different clusters. The penalty depends on the time difference between the two: the lower the difference, the higher the penalty. We integrate both into the Temporal-Driven Constrained K-Means (TDCK-Means), which is a temporal extension of K-Means. TDCK-Means searches to minimize the following objective function:\nJ = \u2211 \u00b5j\u2208M \u2211 xi\u2208Cj ||xi \u2212 \u00b5j ||TA + \u2211 xk 6\u2208Cj x\u03c6k=x \u03c6 i w(xi, xk)  (2) where || \u2022 ||TA is our temporal-aware (TA) dissimilarity measure (detailed in the next section), w(xi, xj) is the cost function that determines the penalty of clustering adjacent observations of the same entity into different clusters, and Cj is the set of observations in cluster j."}, {"heading": "3.1. The temporal-aware dissimilarity measure", "text": "The proposed temporal-aware dissimilarity measure ||xi \u2212 xj ||TA combines the Euclidean distance in the multidimensional space D and the distance between the timestamps. We propose to use the following formula:\n||xi \u2212 xj ||TA = 1\u2212 ( 1\u2212 ||xdi \u2212 xdj ||2\n\u2206x2max\n)( 1\u2212 ||xti \u2212 xtj ||2\n\u2206t2max\n) (3)\nwhere || \u2022 || is the classical L2 norm and \u2206xmax and \u2206tmax are the diameters of D, and T respectively (the largest distance encountered between two observations in the multidimensional description space and, respectively, in the temporal space). The following properties are immediate: \u2022 ||xi \u2212 xj ||TA \u2208 [0, 1],\u2200xi, xj \u2208 X \u2022 ||xi \u2212 xj ||TA = 0\u21d4 xdi = xdj and xti = xtj \u2022 ||xi \u2212 xj ||TA = 1(maximum)\u21d4 ||xdi \u2212 xdj || = \u2206xmax or ||xti \u2212 xtj || = \u2206tmax\nFigure 2 plots the temporal-aware dissimilarity measure as a color map, depending on the multidimensional component and the temporal component. The horizontal axis represents the normalized multidimensional distance ( ||xdi\u2212x d j || 2\n\u2206x2max ). The vertical axis represents\nthe normalized temporal distance ( ||xti\u2212x t j || 2\n\u2206t2max ). The blue color shows a temporal-aware mea-\nsure close to the minimum and the red color represents the maximum. The dissimilarity measure is zero if and only if the two observations have equal timestamps and equal multidimensional description vectors. Still, it suffices for only one of the components (temporal, multidimensional) to attend the maximum value for the measure to reach its maximum. The measure behaves similar to a MAX operator, always choosing a value closer to the maximum of the two components. The formula for the temporal-aware dissimilarity measure was chosen so that any algorithm that seeks to minimize an objective function based on this measure, will need to minimize both its components. This makes it suitable for algorithms that search to minimize both the multidimensional and the temporal variance in clusters.\nBoth components that intervene in the measure follow a function like 1\u2212 2, \u2208 [0, 1]. This function provides a good compromise: it is tolerant for small values of (small time difference, small multidimensional distance), but decreases rapidly when augments. The temporal-aware dissimilarity measure is an extension of the Euclidean function. If the timestamps are unknown and set to be all equal, the temporal component is canceled and the temporal-aware dissimilarity measure becomes a normalized Euclidean distance. In Section 4.4, we evaluate the behavior of the proposed dissimilarity function. We will call Temporal-Driven K-Means the algorithm that is based on the K-Means\u2019 iterative structure and uses the temporal-aware dissimilarity measure to asses similarity between observations. Note that Temporal-Driven K-Means, relative to TDCK-Means, has no contiguous segmentation penalty function (the contiguous segmentation penalty function is detailed in the next section)."}, {"heading": "3.2. The contiguity penalty function", "text": "The penalty function encourages temporally adjacent observations of the same entity to be assigned to the same cluster. We use the notion of soft pair-wise constraints from semisupervised clustering. A \u201cmust-link\u201d soft constraint is added between all pairs of obser-\nP en\nal ty\nf u nc\ntio n\nv a lu\ne\nvations belonging to the same entity. The clustering is allowed to break the constraints, while inflicting a penalty for each of these violations. The penalty is more severe if the observations are closer in time. The function is defined as:\nw(xi, xk) = \u03b2 \u2217 e \u2212 12\n( ||xti\u2212x t k||\n\u03b4 )2 1 [ x\u03c6i = x \u03c6 k ] (4)\nwhere \u03b2 is a scaling factor and, at the same time, the maximum value taken by the penalty function; \u03b4 is a parameter which controls the width of the function. \u03b2 is dataset dependent and can be set as a percentage of the average distance between observations. 1 [statement] is a function that returns 1 if statement is true and 0 otherwise.\nThe function resembles to the positive side of the Normal Distribution function, centered in zero. The function has a particular shape, as represented in Figure 3. For small time differences, it descends very slowly, thus inflicting a high penalty for breaking a constraint. As the time difference increases, the penalty decreases rapidly, converging towards zero. When \u03b4 is small, the functions value descends very quickly with the time difference. The function produces penalties only if the constraint is broken for adjacent observation. For high values of \u03b4, breaking constraints for distant observations cause high penalties, therefore creating segmentations with large segments. Figure 3 shows the evolution of the penalty function with the time difference between two observations, for multiple values of \u03b4 and for \u03b2 = 1.\nAn advantage of the proposed function is that it requires no time discretization or setting a fixed window width, as proposed in 12. The \u03b4 parameter permits the fine tuning of the penalty function. In Section 4.4, we evaluate Constrained K-Means, which is an extension of K-Means, to which we add the proposed contiguity penalty function (but which does not take into account the temporal dimension when measuring the distance between observations). The influence of both \u03b2 and \u03b4 will be studied in Section 4.5."}, {"heading": "3.3. The TDCK-Means algorithm", "text": "The time dependent distance ||xi \u2212 \u00b5j ||TA encourages the decrease of both the temporal and multidimensional variance of clusters; meanwhile the penalty function w(xi, xk) favors the adjacent observations belonging to the same entity to be assigned to the same cluster. The rest of the TDCK-Means algorithm is similar to the K-Means algorithm. It\nseeks to minimize J by iterating an assignment phase and a centroid update phase until the partition does not change between two iterations. The outline of the algorithm is given in Algorithm 1.\nThe choose random function chooses randomly, for each centroid \u00b5j , an observation xi and sets \u00b5j = (xti, x d i ). In the assignment phase, for every observation xi, the best cluster function chooses a cluster Cj so that the temporal-aware dissimilarity measure from xi to the cluster\u2019s centroid \u00b5j , added to the cost of penalties possibly incurred by this cluster assignment, is minimized. It resumes to solving the following equation:\nbest cluster(i) = argmin j=1,2,...,m\n||xi \u2212 \u00b5(iter\u22121)j ||2TA + x \u03c6 k=x \u03c6 i\u2211\nxk 6\u2208C(iter\u22121)j\nw(xi, xk)  This guaranties that the contribution of xi to the value of J diminishes or stays constant. Overall, this assures that J diminishes in the assignment phase (or stays constant).\nIn the centroid update phase, the update centroid function recalculates the cluster centroids using the observations in X and the assignment at the previous iteration. Therefore the contribution of each cluster to the J function is minimized. Each of the temporal and the multidimensional components is calculated individually. In order to find the values that minimize the objective function, we need to solve the equations:\n\u2202J \u2202\u00b5dj = 0 ; \u2202J \u2202\u00b5tj = 0 (6)\nBy replacing equations (3) and (4) in (2), we obtain the following formula for the objective function:\nJ = |X | \u2212 m\u2211 j=1 \u2211 xi\u2208Cj\n[( 1\u2212 ||xdi \u2212 \u00b5dj ||2\n\u2206x2max\n)( 1\u2212 ||xti \u2212 \u00b5tj ||2\n\u2206t2max\n)]\n+ \u2211 xi\u2208X \u2211 xk 6\u2208Cj \u03b2 \u2217 e \u2212 12 ( ||xti\u2212x t k|| \u03b4 )2 1 [ x\u03c6i = x \u03c6 k ] (7)\nTherefore, from equations (6) and (7), we obtain the centroid update formulas:\n\u00b5dj =\n\u2211 xi\u2208Cj x d i \u00d7 ( 1\u2212 ||x t i\u2212\u00b5 t j || 2\n\u2206t2max ) \u2211 xi\u2208Cj ( 1\u2212 ||x t i\u2212\u00b5tj ||2\n\u2206t2max\n) ; \u00b5tj = \u2211 xi\u2208Cj x t i \u00d7 ( 1\u2212 ||x d i\u2212\u00b5 d j || 2 \u2206x2max ) \u2211 xi\u2208Cj ( 1\u2212 ||x d i\u2212\u00b5dj ||2\n\u2206x2max ) (8) Just like the centroid update phase in K-Means, the new centroids in TDCK-Means are also averages over the observations. Unlike K-Means, the averages are weighted for each component, using the distance from the other. For example, each observation contributes to the multidimensional description of the new centroid, proportional with its temporal centrality in the cluster. Observations that are more distant in time (from the centroid) contribute less to the multidimensional description than the ones being closer in time. A similar logic applies to the temporal component. The consequence is that the new clusters are coherent both in the multidimensional space and in the temporal one.\nAlgorithm 1 Outline of the TDCK-Means algorithm. Input: xi \u2208 X - observations to cluster; Input: m - number of requested clusters; Output: Cj , j = 1, 2, ...,m - m clusters; Output: \u00b5j , j = 1, 2, ...,m - centroids for each cluster;\nfor j = 1, 2, ..,m do \u00b5j \u2190 choose random(X ) end for iter \u2190 0 M(iter) \u2190 \u2205 //set of centroids P(iter) \u2190 \u2205 //set of clusters repeat iter \u2190 iter + 1 for j = 1, 2, ...,m do C(iter)j \u2190 \u2205\nend for // assignment phase for xi \u2208 X do C(iter)j = C (iter) j \u222a xi| where j = best cluster(X ,M(iter\u22121), P(iter\u22121)) end for // centroids update phase for j = 1, 2, ...,m do\n(\u00b5 \u03c6,(iter) j , \u00b5 t,(iter) j )\u2190 update centroid(j, X ,M(iter\u22121), P(iter\u22121))\nend for M(iter) \u2190 {\u00b5(iter)j |j = 1, 2, ...,m} P(iter) \u2190 {C(iter)j |j = 1, 2, ...,m}\nuntil C(iter)j = C (iter\u22121) j ,\u2200j \u2208 [1,m]\nAlgorithm\u2019s complexity Equation (7) shows that TDCK-Means\u2019 complexity is O(n2m), due to the penalty term. Still, the equation can be rewritten, so that only observations belonging to the same entity are tested. If p is the number of entities and q is the maximum number of observations associated with each entity, then n = p\u00d7 q. The complexity of TDCK-Means is O(pq2m), which is well adapted to Social Science and Humanities datasets, where often a large number of individuals is studied over a relatively short period of time (p > q)."}, {"heading": "3.4. Fine-tuning the ratio between components", "text": "The temporal-aware dissimilarity measure, as presented in Equation (3), gives equal importance to both the multidimensional component and the temporal component. This might pose problems when the data are not uniformly distributed both in the multidimensional descriptive space and in the temporal space. If the medium standard deviation reported to the medium distance between pairs of observations is greater in one space than in the other,\nV al\nue s\no f tu\nni ng\np ar\nam et\ne r s\n\u03b3d a\nn d \u03b3\nt\ngiving equal weight to the components can lead to important bias in the clustering process. E.g. observations that are very uniformly distributed in the temporal space (same number of observations for each timestamp) and, at the same time, rather compactly distributed in the description space. In this case, in average, the temporal component weight more in the dissimilarity measure than the multidimensional component. Consequently, the clustering is biased towards the temporal cohesion of clusters. Similarly, in some applications, it is desirable to privilege one component over the other. E.g. on a large enough scale, user roles in social networks have a temporal component (new types of roles might appear over the years). But in a limited time span, it is perfectly acceptable that the roles can coexist simultaneously. Therefore, the temporal component should have only a mild impact on the overall measure.\nWe adjust the ratio between the two components by using two tuning factors \u03b3d and \u03b3t. \u03b3d weights the multidimensional component of the temporal-aware dissimilarity measure, whereas \u03b3t weights the temporal component. Equation (3) can be rewritten as:\n||xi \u2212 xj ||TA = 1\u2212 ( 1\u2212 \u03b3d ||xdi \u2212 xdj ||2\n\u2206x2max\n)( 1\u2212 \u03b3t ||xti \u2212 xtj ||2\n\u2206t2max\n) (9)\nWhen the tuning factor for a certain component is set at zero, the respective component does not contribute to the temporal-aware measure. When the tuning factor is set to one, no penalty is inflicted to the contribution of the respective component to the measure. It is immediate that equation (3) is a special case of equation (9), with \u03b3d = 1 and \u03b3t = 1 (no weights).\nSetting the weights \u03b3d and \u03b3t \u03b3d and \u03b3t are not independent one from another, their values are set using a unique parameter \u03b1.\n\u03b3d = { 1 + \u03b1, if \u03b1 \u2264 0 1, if \u03b1 > 0 ; \u03b3t = { 1, if \u03b1 \u2264 0 1\u2212 \u03b1, if \u03b1 > 0\n(10)\n\u03b1 acts as a slider, taking values from \u22121 to 1. Figure 4 shows the evolution \u03b3d and \u03b3t with \u03b1. Also, Figure 5 shows the color map of the temporal-aware dissimilarity measure for multiple values of \u03b1.\nWhen\u03b1 = \u22121, then \u03b3d = 0 and \u03b3t = 1. The multidimensional component is eliminated and only the time difference between the two observations is considered. The temporalaware measure becomes a normalized time difference (||xi \u2212 xj ||TA = ||xti\u2212x t j || 2\n\u2206t2max ). The\ncolor map in Figure 5a (\u03b1 = \u22121) shows that the values of the dissimilarity measure is independent of the multidimensional component.\nAs the value of \u03b1 increases, the weight of the descriptive component increases as well. In Figure 5b (\u03b1 = \u22120.5), the multidimensional component has a limited impact on the overall measure. When \u03b1 = 0, then \u03b3d = 1 and \u03b3t = 1, both components have equal importance, as proposed initially in Equation (3). In Figure 5c (\u03b1 = 0.5), the color map shows that the multidimensional component has a larger impact then the temporal component. Large values of the temporal component have only moderate influence over the measure. When \u03b1 = 1 (color map in Figure 5d), then \u03b3d = 1 and \u03b3t = 0, the temporal dimension is eliminated and the measure becomes a normalized Euclidean distance (||xi \u2212 xj ||TA = ||xdi\u2212x d j || 2\n\u2206x2max ).\nSince the temporal-aware dissimilarity measure is used in the objective function in Equation (7), the later changes accordingly to integrate the tuning factors. \u03b3d and \u03b3t behave as constants in the derivation formulas in Equation (6). As a result, the centroid update\nformulas in Equation (8) are rewritten as:\n\u00b5dj =\n\u2211 xi\u2208Cj x d i \u00d7 ( 1\u2212 \u03b3t ||xti\u2212\u00b5 t j || 2\n\u2206t2max ) \u2211 xi\u2208Cj ( 1\u2212 \u03b3t ||xti\u2212\u00b5tj ||2 \u2206t2max ) ; \u00b5tj = \u2211 xi\u2208Cj x t i \u00d7 ( 1\u2212 \u03b3d ||xdi\u2212\u00b5 d j || 2 \u2206x2max ) \u2211 xi\u2208Cj ( 1\u2212 \u03b3d ||xdi\u2212\u00b5dj ||2 \u2206x2max\n) The tuning between the multidimensional and temporal component in the temporal-aware dissimilarity measure propagates into the centroid update formula of TDCK-Means. We study, in Section 4.6, the influence of the tuning parameter and we propose an heuristic to set its value."}, {"heading": "3.5. Inferring a graph structure for the temporal clusters", "text": "In Figure 1a, when discussing the desired output of our system, we presented the obtained temporal clusters under the form of a graph. The nodes represent the evolution phases and an edge between two nodes \u00b5p and \u00b5q indicates that the transition \u00b5p \u2212\u2192 \u00b5q is part of a typical evolution. Since each temporal cluster is interpreted as an evolution phase, the visualization under the form of a graph allows quick understanding of how the different phases are organized both (i) in time (phases on the left side of Figure 1a have a lower timestamp than those on the right side) and (ii) considering the transitions of the entities through phases. Intuitively, the strength of the connection between two phases is proportional with the number of entities which present transitions between the two given phases.\nWe consider that an entity \u03c6l presents a transition between \u00b5p and \u00b5q (\u00b5p \u03c6l\u2212\u2192 \u00b5q) if and only if two consecutive observations exist, associated with the given entity, where the first observation (ordered by their timestamp) is clustered under \u00b5p and the second one is clustered under \u00b5q . Formally:\nxa, xb \u2208 D consecutive \u21d4 x\u03c6a = x \u03c6 b = \u03c6l, x t a \u2264 xtb and\n@xc \u2208 D, x\u03c6c = \u03c6l so that xta \u2264 xtc \u2264 xtb\n\u00b5p \u03c6l\u2212\u2192 \u00b5q \u21d4 \u2203xa, xb \u2208 D so that  x\u03c6a = x \u03c6 b = \u03c6l and xa, xb consecutive and\nxa \u2208 Cp, xb \u2208 Cq\n(12)\nFurthermore, we define the intersection similarity measure between two phases, which is based on the normalized number of entities that present a transition between the two phases. Formally, we define the inter\u03c6(\u00b5p, \u00b5q):\ninter\u03c6(\u00b5p, \u00b5q) = |{\u03c6l \u2208 \u03a6|\u00b5p \u03c6l\u2212\u2192 \u00b5q}| |\u03a6|\n(13)\nwhere inter\u03c6(\u00b5p, \u00b5q) \u2208 [0, 1] and needs to be maximized. We infer a graph structure between the temporal clusters, by constructing an adjacency matrix using the intersection similarity measure. The graph construction is performed a posteriori, after the temporal clusters are calculated. We define the adjacency matrix A =\n(ap,q), where ap,q = inter\u03c6(\u00b5p, \u00b5q). By replacing equations 12 and 13 into this definition, we obtain:\nap,q = |{1 \u2264 l \u2264 |\u03a6||\u2203xa, xb \u2208 (Cp, Cq) so that x\u03c6a = x \u03c6 b = \u03c6l and x t a, x t b consecutive}|\n|\u03a6| (14)\nWe construct A\u2217, a binary adjacency matrix, by using a threshold \u03b3:\nA\u2217 = (a\u2217p,q) with a \u2217 p,q =\n{ 0 , if ap,q < \u03b3\n1 , if ap,q \u2265 \u03b3\nThe filtering parameter \u03b3 is dataset dependent and automatically setting its value is part of the perspectives of our work."}, {"heading": "4. Experiments", "text": ""}, {"heading": "4.1. Dataset", "text": "Experimentations with Time-Driven Constrained K-Means are performed on a dataset issued from political sciences: Comparative Political Data Set I 1. It is a collection of political and institutional data, which consists of annual data for 23 democratic countries for the period from 1960 to 2009. The dataset contains 207 political, demographic, social and economic variables.\nThe dataset was cleaned by removing redundant variables (e.g. country identifier and postal code) and the corpus was preprocessed by removing entity bias from the data. For example, it is difficult to compare, on the raw data, the evolution of population between populous country and one with fewer inhabitants, since any evolution in the 50 years timespan of the dataset will be rendered meaningless by the initial difference. Inspired from panel data econometrics 8, we remove the entity-specific, time-invariant effects, since we assume them to be fixed over time. We subtract from each value the average over each attribute and over each entity. We retain the time-variant component, which is in turn normalized, in order to avoid giving too much importance to certain variables. The obtained dataset is under the form of triples (country, year, description)."}, {"heading": "4.2. Qualitative evaluation", "text": "When studying the evolution of countries over the years, it is quite obvious for the human reader why the evolutions of the eastern European countries resemble each other for most of the second half of the twentieth century. The reader would create a group entitled \u201cCommunism\u201d, extending from right after the Second World War until roughly 1990, for defining the typical evolution of communist countries. One would expect that, based on a political dataset, the algorithms would succeed in identifying such typical evolutions and segment the time series of each of these countries accordingly. Figure 6 shows the typical evolution patterns constructed by TDCK-Means (with \u03b2 = 0.003 and \u03b4 = 3, obtained as shows in Section 4.5), when asked for 8 clusters. The distribution over time of observations in each cluster is given in Figure 6a. All constructed clusters are fairly compact in time and have limited temporal extents. They can be divided into two temporal groups. In the first one, clusters \u00b51 to \u00b55 consistently overlap. Same for clusters \u00b56 to \u00b58, in the second group. This indicates that the evolution of each country passes by at least one cluster from each\ngroup. The turning point between the two groups is around 1990. Figure 6b shows how many countries belong in a certain cluster for each year. Clusters \u00b55 and \u00b56 contain most of the observations, suggesting the general typical evolution.\nThe meaning of each constructed cluster starts to unravel only when studying the segmentation of countries over clusters, in Figure 6c. For example, cluster \u00b52 regroups the observations belonging to Spain, Portugal and Greece from 1960 up until around 1975. Historically, this coincides with the non-democratic regimes in those countries (Franco\u2019s dictatorship in Spain, the \u201cRegime of the Colonels\u201d in Greece). Likewise, cluster \u00b54 contains observations of countries like Denmark, Finland, Iceland, Norway, Sweden and New Zealand. This cluster can be interpreted as the \u201cSwedish Social and Economical Model\u201d of the Nordic countries, to which the algorithm added, interestingly enough, New Zealand. In the second period, cluster \u00b58 regroups observations of Greece, Ireland, Spain, Portugal and Belgium, the countries which seemed the most fragile in the aftermaths of the economical crises of 2008."}, {"heading": "5 entities | score 0.22", "text": "Similar conclusions can be drawn from the constructed graph structure, presented in Figure 7. Each temporal cluster is represented as a node and the scores indicated on each edge are calculated as shown in Equation 14. The graph containing all transitions are represented in Figure 7a (no filtering, \u03b3 = 0). We obtain a graph containing more general evolutions, by filtering with the threshold \u03b3 = 0.2. Some \u201crare\u201d phases completely disappear (i.e., phases \u00b52 and \u00b53) together with some of the arcs. We recognize in the resulted graph, shown in Figure 7b, some of the evolutions identified earlier. The evolution \u00b54 \u2212\u2192 \u00b55 \u2212\u2192 \u00b56 corresponds to the \u201cSwedish Social and Economical Model\u201d, whereas the evolution \u00b55 \u2212\u2192 \u00b56 \u2212\u2192 \u00b58 identifies the fragile European economies of the 2008 economical crises. From the filtered evolution graph, another typical evolution emerges: \u00b51 \u2212\u2192 \u00b55 \u2212\u2192 \u00b57, which is present for countries as USA, Germany, Italy and France. We interpret this evolution as that of countries with stable social and economical environments."}, {"heading": "4.3. Evaluation measures", "text": "Since the dataset contains no labels to report to as ground truth, we use the classical Information Theory measures in order to numerically evaluate the proposed algorithms. We evaluate separately each of the three goals that we propose in Section 1.\nCreate clusters that are coherent in the multidimensional description space. It is desirable that observations that have similar multidimensional descriptions to be partitioned under the same cluster. The similarity in the description space is measured by the multidimensional component of the temporal-aware dissimilarity measure. This goal is pursued by all classical clustering algorithms (like K-Means) and any traditional clustering evaluation measure 10 can be used to asses it. We choose the mean cluster variance, which is traditionally used in clustering to quantify the dispersion of observations in clusters. The MDvar measure is defined as:\nMDvar = 1\n|X | \u00d7 m\u2211 j=1 \u2211 xi\u2208Cj ||xdi \u2212 \u00b5dj ||2\nCreate temporally coherent clusters, with limited extend in time. This goal is very similar to the previous one, translated in the temporal space. It is desirable that observations that are assigned to the same cluster to be similar in the temporal space (i.e. to be close in time). The similarity in the temporal space is measured by the temporal component in the temporal-aware dissimilarity measure. The limited time extent of a centroid implies small temporal distances between observations timestamp and the centroid timestamp. As a result, the variance can also be used to measure the dispersion of clusters in the temporal space. Similarly to MDvar, the Tvar measure is defined as:\nTvar = 1\n|X | \u00d7 m\u2211 j=1 \u2211 xi\u2208Cj ||xti \u2212 \u00b5tj ||2\nSegment the temporal series of observations of each entity into a relatively small number of contiguous segments. The goal is to have successive observations belonging to an entity grouped together, rather that scattered in different clusters. The Shannon entropy can quantify the number of clusters which regroup the observations of an entity, but it is insensible to alternations between two classes (evolutions like \u00b51 \u2212\u2192 \u00b52 \u2212\u2192 \u00b51 \u2212\u2192\n\u00b52). We evaluate using an adapted mean Shannon entropy of clusters over entities, which weights the entropy by a penalty factor depending on the number of continuous segments in the series of each entity. The ShaP measure is calculated as:\nShaP = 1 |X | \u00d7 \u2211 xi\u2208X m\u2211 j=1 ( \u2212p(\u00b5j)\u00d7 log2(p(\u00b5j))\u00d7 ( 1 + nch \u2212 nmin nobs \u2212 1 )) where nch is the number of changes in the cluster assignment series of an entity, nmin is the minimal required number of changes and nobs is the number of observations for an entity. For example, in Figure 8, if the series of 11 observations of an entity is assigned to two clusters, but it presents 4 changes, the entropy penalty factor will be 1 + 4\u2212111\u22121 = 1.33. The ShaP score for this segmentation will be 1.23, compared to a score of 0.94 of the \u201cideal\u201d segmentation (only two contiguous chunks).\nThe \u201cideal\u201d values for MDvar, Tvar and ShaP is zero and, in all of the experiments presented in the following sections, we search to minimize the values of the three measures."}, {"heading": "4.4. Quantitative evaluation", "text": "For each combination of algorithms and parameters, we execute 10 times and compute only the average and the standard deviation. We vary m, the number of clusters, from 2 to 36. The performances of five algorithms are compared from a quantitative point of view: \u2022 Simple K-Means - clusters the observations based solely on their resemblance in the\nmultidimensional space; \u2022 Temporal-Driven K-Means - optimizes only the temporal and multidimensional com-\nponents, without any contiguity constraints; combines K-Means with the temporalaware dissimilarity measure defined in Section 3.1. Parameters: \u03b1 = 0 (\u03b1 defined in Equation 8) and \u03b2 = 0 (\u03b2 defined in Equation 4); \u2022 Constrained K-Means - uses only the multidimensional space (and not the temporal component) together with the penalty component, as proposed in Section 3.2. Parameters: \u03b1 = 1, \u03b2 = 0.003 and \u03b4 = 3 (\u03b4 defined in Equation 4); \u2022 TDCK-Means - the Temporal-Driven Constrained Clustering algorithm proposed in Section 3.3. \u03b1 = 0, \u03b2 = 0.003 and \u03b4 = 3; \u2022 tcK-Means - the temporal constrained clustering algorithm proposed in 12. It uses a threshold penalty function w(xtii , x ti j ) = \u03b1 \u2217 1(|xti \u2212 xtj | < d\u2217) when observations\nxi and xj are not assigned to the same cluster. We adapt it to the multi-entity case by applying it only to observations belonging to the same entity. Parameters: \u03b1\u2217 = 2, d\u2217 = 4. The \u03b1\u2217 parameter in tcK-Means should not be mistaken with the \u03b1 parameter in TDCK-Means, as they do not have the same meaning. In tcK-Means, \u03b1\u2217 controls the\n2 6 11 15 19 23 28 32 36 95\n105\n115\n125\n135\n145\n155\n165\nMulti\u2212Dimensional Variance\nSimple K\u2212Means Temp\u2212Driven K\u2212Means Constrained K\u2212Means TDCK\u2212Means tcK\u2212Means\nNb Clusters\nM D\nV a\nr\n(a)\n2 6 11 15 19 23 28 32 36 15\n35\n55\n76\n96\n116\n136\n157 Temporal Variance\nSimple K\u2212Means Temp\u2212Driven K\u2212Means Constrained K\u2212Means TDCK\u2212Means tcK\u2212Means\nNb Clusters\nT v\na r\n(b)\n2 6 11 15 19 23 28 32 36 0,3\n0,9\n1,4\n1,9\n2,5\n3,0\n3,5 Shannon Entropy Penalized\nSimple K\u2212Means Temp\u2212Driven K\u2212Means Constrained K\u2212Means TDCK\u2212Means tcK\u2212Means\nNb Clusters\nS h\na P\n(c)\nweight of the penalty function, whereas in TDCK-Means \u03b1 is the fine-tuning parameter.\nObtained results. All the parameters are determined as shown in Section 4.5. Table 1 shows the average values for the indicators, as well as the average standard deviation (in italic) obtained by each algorithm over all values of m. The average standard deviation is only used to give an idea of the order of magnitude of the stability of each algorithm. Since Simple K-Means, Temporal-Driven K-Means and Constrained K-Means are designed to optimize mainly one component, it is not surprising that they show the best scores for, respectively, the multidimensional variance, the temporal variance and the entropy (best results in boldface). TDCK-Means seeks to provide a compromise, obtaining in two out of three cases the second best score. It is noteworthy that the proposed temporal-aware dissimilarity measure used in Temporal-Driven K-Means provides the highest stability (the lowest average standard deviation) for all indicators. Meanwhile, the constrained algorithms (Constrained K-Means and tcK-Means) show high instability, especially on Tvar. TDCK-Means shows a very good stability. The second part of Table 1 gives the relative gain of performance of each of the proposed algorithms over Simple K-Means. It is noteworthy the effectiveness of the temporal-aware dissimilarity measure proposed in Section 3.1, with a 58% gain of Temporal Variance and less than 2% loss of multidimensional variance. The proposed dissimilarity measure greatly enhances the temporal cohesion of the resulted clusters, without a significant scattering of observations in the multidimensional space. Similarly, the Constrained KM shows an improvement in the contiguity measure ShaP of 42%, while\nlosing 10% multidimensional variance. By comparison, tcK-Means shows modest results, improving ShaP by only 17% and still showing important losses on both Tvar (-30%) and MDvar (-2%). This proves that the threshold penalty function proposed in literature has lower performances than our newly proposed contiguity penalty function. TDCK-Means combines the advantages of the other two algorithms, providing an important gain of 43% of temporal variance and increasing the ShaP measure by more than 4%. Nonetheless, it shows a 6% loss of MDvar.\nVarying the number of clusters Similar conclusions can be drawn when varying the number of clusters. MDvar (Figure 9a) decreases, for all algorithms, as the number of cluster increases. It is well known in clustering literature that the intra-cluster variance decreases steadily with the increase of number of clusters. As the number of clusters augments, so does the differences of TDCK-Means and Constrained K-Means, when compared to the Simple K-Means algorithm. This is due to the fact that the constraints do not let too many clusters to be assigned to the same entity, resulting in the convergence towards a local optimum, with a higher value of MDvar. An opposite behavior is shown by the ShaP measure in Figure 9c, which increases with the number of clusters. It is interesting to observe how the MDvar and the ShaP measures have almost opposite behaviors. An algorithm that shows the best performances on one of the measures, also shows the worst on the other. The temporal divergence in Figure 9b shows a very sharp decrease for a low number of clusters, and afterwards remains relatively constant."}, {"heading": "4.5. Impact of parameters \u03b2 and \u03b4", "text": "The \u03b2 parameter controls the impact of the contiguity constraints in Equation (4). When set to zero, no constraints are imposed, and the algorithm behaves just like the Simple K-Means. The higher the values of \u03b2, the higher the penalty inflicted when breaking a constraint. When \u03b2 is set to large values, the penalty factor will take precedence over the similarity measure in the objective function. Observations that belong to a certain entity will be assigned to the same cluster, regardless of their resemblance in the description space. When this happens, the algorithm cannot create partitions with higher number of clusters than the number of entities. In order to evaluate the influence of parameter \u03b2, we\nexecute the Constrained K-Means algorithm with \u03b2 varying from 0 to 0.017 with a step of 0.0005. The value of \u03b4 is set at 3, and 5 clusters are constructed. For each value of \u03b2, we executed 10 times the algorithm and we plot the average obtained values. Figure 10a shows the evolution of measures MDvar and ShaP with \u03b2. When \u03b2 = 0 both MDvar and ShaP have the same values as for Simple K-Means. As \u03b2 increases, so does the penalty for non-contiguous segmentation of entities. MDvar starts to increase rapidly, while ShaP decreases rapidly. Once \u03b2 reaches higher values, the measures continue their evolution, but with a leaner slope. In the extreme case, in which all observations are assigned to the same cluster regardless of their similarity, the ShaP measure will reach zero.\nThe \u03b4 parameter controls the width of the penalty function in Equation (4). As Figure 3 shows, when \u03b4 has a low value, a penalty is inflicted only if the time difference of a pair of observations is small. As the time difference increases, the function quickly converges to zero. As \u03b4 increases, the function decreases with a leaner slope, thus also taking into account observations which are farther away in time. In order to analyze the behavior of the penalty function when varying \u03b4, we have executed the Constrained K-Means, with \u03b4 ranging from 0.1 to 8, using a step of 0.1. \u03b2 was set at 0.003 and 10 clusters were constructed. Figure 10b plots the evolution of measures MDvar and ShaP with \u03b4. The contiguity measure ShaP decreases almost linearly as \u03b4 increases, as the series of observations belonging to each entity gets segmented in larger chunks. At the same time, the multidimensional variance MDvar increases linearly with \u03b4. Clusters become more heterogeneous and variance increases, as observations get assigned to clusters based on their membership to an entity, rather than their descriptive similarities.\nVarying \u03b1\u2217 and d\u2217 for the tcK-Means proposed in 12 yields similar results, with the MDvar augmenting and the ShaP descending, when \u03b1\u2217 and d\u2217 increase. For the tcK-Means, these evolutions are linear, whereas for the Constrained K-Means they are exponential, following a trend line of function e\u2212 const x . Plotting the evolution of the MDvar and the ShaP indicators on the same graphic, provides a heuristic for choosing the optimum values for the (\u03b2, \u03b4) parameters of the Constrained K-Means and the TDCK-Means, respectively the (\u03b1\u2217, d\u2217) parameters of the tcK-Means. Both curves are plotted with the vertical axis scaled to the interval [minvalue,maxvalue]. Their point of intersection determines the values of the parameters (as shown in Figure 10a and 10b). The disadvantage of such a heuristic would be that a large number of executions must be performed with multiple values for the parameters before the \u201coptimum\u201d can be found."}, {"heading": "4.6. The tuning parameter \u03b1", "text": "The parameter \u03b1, proposed in Section 3.4, allows the fine tuning of the ratio between the multidimensional component and the temporal component in the temporal-aware dissimilarity measure. When \u03b1 is close to -1, the temporal component is predominant. Conversely, when \u03b1 is close to 1, the multidimensional component takes precedence. The two components have equal weights when \u03b1 = 0. To evaluate the influence of parameter \u03b1, we executed Temporal-Driven K-Means with \u03b1 varying from -1 to 1 with a step of 0.1. In order not to bias the results and to evaluate only the impact of the tuning parameter, we remove the contiguity constraints from the objective function J , by setting \u03b2 = 0. For\nS ha\nP\neach value of \u03b1, we executed 10 times and we present the average values. Figure 11a shows the evolution of measures MDvar and Tvar with \u03b1. For low values of \u03b1, the value of the temporal-aware dissimilarity measure is given mainly by the temporal component, so Tvar shows its lowest value, while MDvar presents its maximum. As \u03b1 increases, MDvar decreases as more importance is given to the multidimensional component. For \u03b1 \u2208 (\u22121, 0], the importance of the temporal component remains intact, the increase of Tvar is solely the result of the algorithm converging to a local optimum which also takes into account the multidimensional component. For \u03b1 \u2208 [0, 1), the impact of the multidimensional component stays constant, whereas the importance of the temporal components diminishes. As a result, MDvar continues its decrease and Tvar increases sharply. For \u03b1 = 1 the temporal component is basically ignored from the measure. The TemporalDriven K-Means behaves just like Simple K-Means. Figure 11b shows the evolution of ShaP alongside MDvar. Even if the contiguity penalty component was neutralized by setting \u03b2 = 0, the value of ShaP is not constant, but it descends with \u03b1. For low values of \u03b1, the temporal component is predominant in the similarity measure. This generates partitions where every cluster regroups all observations from a specific period, regardless of their multidimensional description. This means that all entities have segments in all the clusters, which leads to a high value of ShaP.\nIt is noteworthy that the evolution of the indicators is not linear with \u03b1. As \u03b1 increases, Tvar augments only very slowly and picks up the pace only for large values of \u03b1. This indicates that the temporal component has an inherent advantage over the multidimensional one. As we presumed in Section 3.4, this is due to the intrinsic nature of the dataset and the main reason why the tuning parameter \u03b1 was introduced. The distributions of observations in the multidimensional and temporal spaces is different: in the temporal space, the observations tend to be evenly distributed, whereas in the multidimensional description space, they cluster together. To quantify this, we calculate the ratio between average standard deviation and average distances between pairs of observations:\nrdim = 1\n|X | |X |\u2211 i=1\nstdev ({ ||xdimi \u2212 xdimj ||2 \u2223\u2223xj \u2208 X , i 6= j}) 1\n|X | \u2211|X | j=1 j 6=i ||xdimi \u2212 xdimj ||2\nwhere dim is replaced with d or t ( the descriptive or the temporal dimension). On Comparative Political Data Set I, rd = 29.5% and rt = 65.3%. This shows that observations are a lot more dispersed in the temporal space than in the multidimensional description space. This explains why Tvar augments very slowly with \u03b1 and starts to increase more rapidly only starting from \u03b1 = 0.4.\nFollowing the heuristic proposed in Section 4.5, we can determine a trade-off value for \u03b1. As shown in Figure 11, all vertical axes are magnified between their functions\u2019 minimum and maximum values. The trade-off value for \u03b1 is found at the intersection point of MDvar and Tvar (and MDvar and Shap). This value is set around 0.7, showing the dataset\u2019s bias towards the temporal component. This technique for setting the value of the tunning parameter is just a heuristic, the actual value of \u03b1 is dependent on the dataset. This is why we are currently working on a method, inspired from multi-objective optimization using evolutionary algorithms 20 to automatically determine the values of \u03b1, as well as the other parameters of TDCK-Means (\u03b2, \u03b4 and \u03b3)."}, {"heading": "5. Conclusion and future work", "text": "In this paper, we have studied the detection of typical evolutions from a collection of observations. We have proposed a novel way to introduce temporal information directly into the dissimilarity measure, weighting the Euclidean component in the description space by the temporal component. We have proposed TDCK-Means, an extension of K-Means, which uses the temporal-aware dissimilarity measure and a new objective function which takes into consideration the temporal dimension. We use a penalty factor to make sure that the observation series related to an entity get segmented into continuous chunks. We infer a new centroid update formula, where elements distant in time contribute less to the centroid than the temporally close ones. We have proposed an intersection similarity measure between two temporal clusters and a method to calculate a posteriori an adjacency matrix. We use this adjacency matrix in order to structure the detected evolution phases as a graph. From a qualitative point of view, we have shown that our algorithm is capable of detecting comprehensible evolutions based on a Political Science dataset. Quantitatively, we have shown that our proposition consistently improves temporal variance, without any significant losses in the multidimensional variance.\nWe are currently experimenting with applying the algorithm to other applications, e.g., detection of social roles in social networks, by passing through temporal behavioral roles. A social role is defined as a typical succession of behavioral roles. In our current work, we have inferred a temporal cluster graph structure a posteriori to the construction of the clusters. We have ongoing work toward incorporating the graph construction into the TDCK-Means algorithm, by modifying the objective function in order to take into account the intersection similarity measure and a temporal distance. Another direction of research will be describing the clusters in a human readable form. We work on means to provide them with an easily comprehensible description by introducing temporal information into an unsupervised feature construction algorithm. We are also experimenting a method for setting automatically the values of TDCK-Means\u2019s parameters (\u03b1, \u03b2, \u03b4 and \u03b3), by using an approach inspired from multi-objective optimization using evolutionary algorithms 20."}], "references": [{"title": "Comparative political data set 1960-2009", "author": ["Klaus Armingeon", "David Weisstanner", "Sarah Engler", "Panajotis Potolidis", "Marl\u00e8ne Gerber", "Philipp Leimgruber"], "venue": "Institute of Political Science, University of Berne.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2011}, {"title": "Semi-supervised clustering by seeding", "author": ["Sugato Basu", "Arindam Banerjee", "Raymond J. Mooney"], "venue": "In International Conference on Machine Learning,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2002}, {"title": "Adaptive duplicate detection using learnable string similarity measures", "author": ["Mikhail Bilenko", "Raymond J. Mooney"], "venue": "In Knowledge Discovery and Data Mining, Proceedings of the ninth ACM SIGKDD international conference on,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "Concept clustering of evolving data", "author": ["Shixi Chen", "Haixun Wang", "Shuigeng Zhou"], "venue": "In Data Engineering,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Semi-supervised clustering with user feedback", "author": ["David Cohn", "Rich Caruana", "Andrew McCallum"], "venue": "In Constrained Clustering: Advances in Algorithms, Theory, and Applications,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2003}, {"title": "Multimodal diaries", "author": ["Fernando De la Torre", "Carlos Agell"], "venue": "In Multimedia and Expo,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Semi-supervised clustering using genetic algorithms", "author": ["Ayhan Demiriz", "Kristin Bennett", "Mark J. Embrechts"], "venue": "In Artificial Neural Networks in Engineering,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1999}, {"title": "Unsupervised and semi-supervised clustering: a brief survey. Technical report, A Review of Machine Learning Techniques for Processing Multimedia Content, Report of the MUSCLE", "author": ["Nizar Grira", "Michel Crucianu", "Nozha Boujemaa"], "venue": "European Network of Excellence (FP6),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "On clustering validation techniques", "author": ["Maria Halkidi", "Yannis Batistakis", "Michalis Vazirgiannis"], "venue": "Journal of Intelligent Information Systems,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "From instance-level constraints to space-level constraints: Making the most of prior knowledge in data clustering", "author": ["Dan Klein", "Sepandar D. Kamvar", "Christopher D. Manning"], "venue": "In International Conference on Machine Learning,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2002}, {"title": "Structuring continuous video recordings of everyday life using time-constrained clustering", "author": ["Wei-Hao Lin", "Er Hauptmann"], "venue": "In IS&T/SPIE Symposium on Electronic Imaging,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2006}, {"title": "Some methods for classification and analysis of multivariate observations", "author": ["James MacQueen"], "venue": "Berkeley Symposium on Mathematical Statistics and Probability, Proceedings of the Fifth,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1967}, {"title": "Mining blog stories using community-based and temporal clustering", "author": ["Arun Qamra", "Belle Tseng", "Edward Y. Chang"], "venue": "In Information and Knowledge Management, Proceedings of the 15th ACM international conference on,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2006}, {"title": "Unsupervised discovery of objects using temporal coherence", "author": ["Brandon C.S. Sanders", "Rahul Sukthankar"], "venue": "Technical report, CVPR Technical Sketch,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2001}, {"title": "Coupled temporal scoping of relational facts", "author": ["Partha Pratim Talukdar", "Derry Wijaya", "Tom Mitchell"], "venue": "In WSDM,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Constrained k-means clustering with background knowledge", "author": ["Kiri Wagstaff", "Claire Cardie", "Seth Rogers", "Stefan Schroedl"], "venue": "In International Conference on Machine Learning, Proceedings of the Eighteenth,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2001}, {"title": "The de-standardization of the life course: Are men and women equal", "author": ["Eric D. Widmer", "Gilbert Ritschard"], "venue": "Advances in Life Course Research,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2009}, {"title": "Distance metric learning with application to clustering with side-information", "author": ["Eric P. Xing", "Andrew Y. Ng", "Michael I. Jordan", "Stuart Russell"], "venue": "Advances in Neural Information Processing Systems,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2002}, {"title": "Moea/d: A multiobjective evolutionary algorithm based on decomposition", "author": ["Qingfu Zhang", "Hui Li"], "venue": "Evolutionary Computation, IEEE Transactions on,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "The following properties are immediate: \u2022 ||xi \u2212 xj ||TA \u2208 [0, 1],\u2200xi, xj \u2208 X \u2022 ||xi \u2212 xj ||TA = 0\u21d4 xi = xj and xi = xj \u2022 ||xi \u2212 xj ||TA = 1(maximum)\u21d4 ||xi \u2212 xj || = \u2206xmax or ||xi \u2212 xj || = \u2206tmax", "startOffset": 59, "endOffset": 65}, {"referenceID": 0, "context": "Both components that intervene in the measure follow a function like 1\u2212 , \u2208 [0, 1].", "startOffset": 76, "endOffset": 82}, {"referenceID": 0, "context": "where inter\u03c6(\u03bcp, \u03bcq) \u2208 [0, 1] and needs to be maximized.", "startOffset": 23, "endOffset": 29}], "year": 2016, "abstractText": "In this paper, we propose a new time-aware dissimilarity measure that takes into account the temporal dimension. Observations that are close in the description space, but distant in time are considered as dissimilar. We also propose a method to enforce the segmentation contiguity, by introducing, in the objective function, a penalty term inspired from the Normal Distribution Function. We combine the two propositions into a novel time-driven constrained clustering algorithm, called TDCK-Means, which creates a partition of coherent clusters, both in the multidimensional space and in the temporal space. This algorithm uses soft semi-supervised constraints, to encourage adjacent observations belonging to the same entity to be assigned to the same cluster. We apply our algorithm to a Political Studies dataset in order to detect typical evolution phases. We adapt the Shannon entropy in order to measure the entity contiguity, and we show that our proposition consistently improves temporal cohesion of clusters, without any significant loss in the multidimensional variance.", "creator": "LaTeX with hyperref package"}}}