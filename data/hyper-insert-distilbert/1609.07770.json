{"id": "1609.07770", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Sep-2016", "title": "Random Forest for Malware Classification", "abstract": "increasing the challenge component in engaging malware activities involves the correct correct identification and classification of 18 different malware variants. various malwares incorporate code correlation obfuscation methods that alters beyond their linear code processing signatures effectively countering antimalware motif detection techniques utilizing many static methods and semantic signature prediction database. in calculating this numerical study, we utilized an approach of forcibly converting simultaneously a malware using binary relation into an existing image and digitally use random vector forest to classify various malware families. maintaining the correlated resulting visual accuracy of formula 0. 800 9562 exhibits the efficient effectivess of the correlation method in detecting discrete malware", "histories": [["v1", "Sun, 25 Sep 2016 16:43:44 GMT  (420kb)", "http://arxiv.org/abs/1609.07770v1", null]], "reviews": [], "SUBJECTS": "cs.CR cs.LG", "authors": ["felan carlo c garcia", "felix p muga ii"], "accepted": false, "id": "1609.07770"}, "pdf": {"name": "1609.07770.pdf", "metadata": {"source": "CRF", "title": "Random Forest for Malware Classification", "authors": ["Felan Carlo C. Garcia", "Felix P. Muga"], "emails": ["felan.garcia@obf.ateneo.edu", "fmuga@ateneo.edu"], "sections": [{"heading": null, "text": "involves the correct identification and classification of different malware variants. Various malwares incorporate code obfuscation methods that alters their code signatures effectively countering antimalware detection techniques utilizing static methods and signature database. In this study, we utilized an approach of converting a malware binary into an image and use Random Forest to classify various malware families. The resulting accuracy of 0.9562 exhibits the effectivess of the method in detecting malware.\nKeywords \u2014 Computer Security; Malware Analysis; Machine\nLearning; Random Forest;\nI. INTRODUCTION\nCybercrime operations through networked computer systems remains a growing threat for developed regions with a mature information and communications (ICT) infrastructure in which a considerable number of public and private services are dependent. At the core of Cybercrime operations are Malwares consisting of spywares, bots, rootkits, Trojan, and viruses designed to perform tasks such as service disruption, network hijacking, exploiting resources, and private information stealing [1].\nThe challenge in engaging malware activities involves the correct identification and classification of different malware variants. Malwares incorporate code obfuscation and metamorphism to change their code signatures while maintaining their behaviors and functionalities [2]. These methods effectively counters anti-malware software relying on malware signature database to identify a specific malware attacking a computer system. Lastly, this code obfuscation and morphing generates a high volume of data points for a certain malware variant alone [3].\nNataraj et al [4] proposed a method on visualizing malware binaries as image file resulting on complex visual patterns acting as a malwares signature. The obfuscation of the code also introduces various changes on the resulting image but still retain the general structure and thus show potential as an approach to classifying malware variants.\nIn this study, we take advantage of malware as image files as feature vectors and Random Forest to effectively classify and segregate malware families from each other.\nII. DATASET\nIn this study we evaluate our methods on the Malimg Dataset [4] consisting of 9,342 malware samples of 25 different malware families. Table 1 shows the malware families consisting the\nMalimg Dataset and the equivalent population % of each of the families within the data set. It is worth noting that the following dataset is imbalanced and developing a training set must include a stratified sampling of the populations to prevent overfitting and under generalization on specific malware variants.\nTable I: Malware families comprising the Malimg Dataset.\nIII. METHODOLOGY"}, {"heading": "A. Data Preparation", "text": "Malware binaries sequences are grouped as 8-bit vectors. The resulting 8-bit vectors are then plotted as a grayscale image as shown on Fig 1.\nThe conversion result of the malware binaries consists of images with different sizes and patterns as shown on Fig 2. It is also worth noting that several malware creators also add extra binary code pattern to their malware as a personal signature such as the bottom part of the image shown in Fig 2.C\nThe malware images are resized into a 2-dimensional matrix to have a uniform dataset. The resized images are flattened into n x n array where n = 32. Each resulting array with length of 1024 is labelled with its corresponding malware family.\nThe labeled arrays are appended together as a row into a csv file that would comprise the training set for the machine learning algorithm."}, {"heading": "B. Classification", "text": "Various researches on malware and cyber anomaly detections utilized machine learning methods such as Support Vector Machines (SVM), K-Nearest Neighbors (K-NN), and Neural Networks (NN) [6], for this study, we utilized the use of Random Forest as a feasible method for malware classification.\nIn terms of supervised learning and performances various studies have ranked Gradient Boosted Trees, Random Forests, Neural Networks, and Support Vector Machines to have high predictive accuracies [7][8]. While Gradient Boosted Trees did have the highest accuracy, Random Forest was able to achieve almost the same performance with minor parameter tuning [7].\nIn this study, we utilized the Random Forest implementation\non R with the randomForest and caret library."}, {"heading": "C. Training and Validation", "text": "Creating the training and testing set involves splitting the data into 80% training and 20% testing. The splitting of the dataset also involves taking into account the relative populations of each malware families to ensure that each family are well represented on the split dataset.\nA k-fold Cross-Validation procedure is used to evaluate the model where the training data is randomly partition into different subsamples with equal k sizes. One k subsample is held out as validation data and the remaining k subsamples are used as training data. This process is then repeated k-times (referred as the number of folds) with each of the k subsample used as validation. The resulting accuracies for each fold is averaged to produce a single estimation of the models accuracy for a particular machine learning problem [9].\nA 10-fold Cross-Validation procedure performed on the training set to evaluate the model, afterwards the model is tested on the held-out testing set and evaluated for its performance.\nIV. RESULTS\nThe training set for the data consist of a 1024 feature vector with a corresponding label. We first evaluate the crossvalidation results of the model with the training set.\nTable 2: Cross Validation Result\nAccuracy Kappa Accuracy Lower Accuracy Upper\n0.9464 0.9367 0.9411 0.9514\nTable 2: Summary of the 10-Fold Cross Validation accuracy metrics\nThe resulting metrics as shown on Table 2 indicates a strong predictive performance from the model. The model\u2019s overall predictive accuracy is 0.9464 within the bounds of [0.9411, 0.9514]. Another metric considered is the Kappa statistic which indicates if the proximity of the instances classified by the predictive model matched the testing data\u2019s ground truth [10].\nThe measured Kappa for the cross validation result is 0.9367 and provides a strong indication with regards to the accuracy of the random forest model for the training set. Fig 4. Illustrates the confusion matrix of the cross validation results. Majority of the malware families have accuracies in the range of 0.9 and above. It is worth noting that 4 malware families (CL2OP.gen!g, C2LOP.P, Swizzor.gen!E, Swizzor.gen!I) have accuracies that fall below 0.5.\nThe random forest model is then tested on the held-out testing set consisting of the remaining 20% of the data un-seen during the training phase of the model. Table 3 summarizes the resulting metrics of the model utilizing the testing set. The overall accuracy of the model is 0.9526 within the bounds within the bounds of [0.9411, 0.9514]. The measured Kappa is 0.9441 and indicates the predictive strength of the random forest model. The testing set results are similar to the results of the cross validation. The results exhibit the reliability of cross validation in measuring the predictive strength of a model prior to testing the model to an unseen data.\nThe confusion matrix as shown on Figure 5. Shows the resulting accuracies for each malware families and exhibits the same pattern particularly on the 4 malware families (CL2OP.gen!g, C2LOP.P, Swizzor.gen!E, Swizzor.gen!I) having less than 0.5 accuracy. Furthermore both Fig 4 and Fig 5 show that CL2OP.gen!g, C2LOP.P, Swizzor.gen!E, and Swizzor.gen!I malware families exhibit misclassifications between each other.\nInspecting the image data for each of the families reveals that these malware families exhibit similar visual patterns as shown on Fig 6. The visual similarity of the images coupled with the image resizing procedure would likely result into a training and testing set with similar data points for each of the malware families. This visual similarity would likely explain why the misclassifications were concentrated on the 4 families as shown on the confusion matrices in Fig 4 and Fig 5.\nTable 3: Held out Testing Set Result\nAccuracy Kappa Accuracy Lower Accuracy Upper\n0.9526 0.9441 0.9420 0.9618\nTable 3: Summary of the testing set accuracy metrics\nV. CONCLUSION AND FUTURE WORK\nIn this study we exhibited the used of malware images\nas a feature vector for classifying various malware families. The study used Random Forest and performed 10-fold Cross Validation to determine the predictive strength of the model The resulting accuracies have shown that Random Forest model achieved a 0.9526 classification accuracy for the given malware dataset. However, it is also worth noting that there are still things to consider such as misclassification on visually similar malware families.\nAs recommendation, since the study has used the\nimage from the malwares as the only features for the training set, future works on the topic can use feature extraction utilizing image processing which can provide additional insights and better training procedures for the model."}], "references": [{"title": "Hybrids of support vector machine wrapper and filter based framework for malware detection", "author": ["S. Huda", "J. Abawajy", "M. Alazab", "M. Abdollalihian", "R. Islam", "J. Yearwood"], "venue": "Future Generation Computer  Systems,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2016}, {"title": "Malware detection using linear SVM. Ifost", "author": ["B. Sanjaa", "E. Chuluun"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "An empirical comparison of supervised learning algorithms", "author": ["A Caruana"], "venue": "Proceedings of the 23rd international conference on Machine learning Pages", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2006}, {"title": "A comparison of Gaussian process regression, random forests and support vector regression for burn severity assessment in diseased forests", "author": ["C. Hultquist", "G. Chen", "K. Zhao"], "venue": "Remote Sensing Letters,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Estimation Procedures: Cross Validation", "author": ["OpenML. (n.d"], "venue": "Retrieved July", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "Malwares incorporate code obfuscation and metamorphism to change their code signatures while maintaining their behaviors and functionalities [2].", "startOffset": 141, "endOffset": 144}, {"referenceID": 1, "context": "Classification Various researches on malware and cyber anomaly detections utilized machine learning methods such as Support Vector Machines (SVM), K-Nearest Neighbors (K-NN), and Neural Networks (NN) [6], for this study, we utilized the use of Random Forest as a feasible method for malware classification.", "startOffset": 200, "endOffset": 203}, {"referenceID": 2, "context": "In terms of supervised learning and performances various studies have ranked Gradient Boosted Trees, Random Forests, Neural Networks, and Support Vector Machines to have high predictive accuracies [7][8].", "startOffset": 197, "endOffset": 200}, {"referenceID": 3, "context": "In terms of supervised learning and performances various studies have ranked Gradient Boosted Trees, Random Forests, Neural Networks, and Support Vector Machines to have high predictive accuracies [7][8].", "startOffset": 200, "endOffset": 203}, {"referenceID": 2, "context": "While Gradient Boosted Trees did have the highest accuracy, Random Forest was able to achieve almost the same performance with minor parameter tuning [7].", "startOffset": 150, "endOffset": 153}, {"referenceID": 4, "context": "The resulting accuracies for each fold is averaged to produce a single estimation of the models accuracy for a particular machine learning problem [9].", "startOffset": 147, "endOffset": 150}], "year": 2016, "abstractText": "The challenge in engaging malware activities involves the correct identification and classification of different malware variants. Various malwares incorporate code obfuscation methods that alters their code signatures effectively countering antimalware detection techniques utilizing static methods and signature database. In this study, we utilized an approach of converting a malware binary into an image and use Random Forest to classify various malware families. The resulting accuracy of 0.9562 exhibits the effectivess of the method in detecting malware.", "creator": "Microsoft\u00ae Word 2013"}}}