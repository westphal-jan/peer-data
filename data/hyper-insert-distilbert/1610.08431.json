{"id": "1610.08431", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Oct-2016", "title": "Broad Context Language Modeling as Reading Comprehension", "abstract": "comprehension progress development in text understanding has been driven actively by utilizing the availability accuracy of precisely large enough datasets that test particular perceived capabilities, like comparing recent datasets conducted for persons assessing reading comprehension. below we focus here on the lambada dataset, offering a particular word prediction oriented task requiring sometimes broader context than selecting the prospective immediate entire sentence. we typically view the lambada task as fulfilling a reading comprehension program problem class and apply off - the - face shelf comprehension models based on neural networks. though these models are clearly constrained rather to choose as a word test from the local context, they improve the state of moving the art on lambada performance from 7. 3 % to 45. 4 %. moreover we analyze of 100 instances, finding conditions that mature neural network readers better perform well critically in cases that occasionally involve dialogue selecting a name element from the present context level based on dialogue acquisition or collective discourse cues but struggle when coreference resolution or external knowledge alignment is needed.", "histories": [["v1", "Wed, 26 Oct 2016 17:25:38 GMT  (18kb)", "https://arxiv.org/abs/1610.08431v1", null], ["v2", "Mon, 19 Dec 2016 18:54:44 GMT  (21kb)", "http://arxiv.org/abs/1610.08431v2", null], ["v3", "Thu, 16 Feb 2017 21:33:30 GMT  (22kb)", "http://arxiv.org/abs/1610.08431v3", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["zewei chu", "hai wang", "kevin gimpel", "david mcallester"], "accepted": false, "id": "1610.08431"}, "pdf": {"name": "1610.08431.pdf", "metadata": {"source": "CRF", "title": "Broad Context Language Modeling as Reading Comprehension", "authors": ["Zewei Chu", "Hai Wang", "Kevin Gimpel", "David McAllester"], "emails": ["zeweichu@uchicago.edu,", "haiwang@ttic.edu", "kgimpel@ttic.edu", "mcallester@ttic.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n61 0.\n08 43\n1v 3\n[ cs\n.C L\n] 1\n6 Fe\nb 20\n17\nProgress in text understanding has been driven by large datasets that test particular capabilities, like recent datasets for reading comprehension (Hermann et al., 2015). We focus here on the LAMBADA dataset (Paperno et al., 2016), a word prediction task requiring broader context than the immediate sentence. We view LAMBADA as a reading comprehension problem and apply comprehension models based on neural networks. Though these models are constrained to choose a word from the context, they improve the state of the art on LAMBADA from 7.3% to 49%. We analyze 100 instances, finding that neural network readers perform well in cases that involve selecting a name from the context based on dialogue or discourse cues but struggle when coreference resolution or external knowledge is needed."}, {"heading": "1 Introduction", "text": "The LAMBADA dataset (Paperno et al., 2016) was designed by identifying word prediction tasks that require broad context. Each instance is drawn from the BookCorpus (Zhu et al., 2015) and consists of a passage of several sentences where the task is to predict the last word of the last sentence. The instances are manually filtered to find cases that are guessable by humans when given the larger context but not when only given the last sentence. The expense of this manual filtering has limited the dataset to only about 10,000 instances which are viewed as development and test data. The training data is taken to be books in the corpus other than those from which the evaluation passages were extracted.\nPaperno et al. (2016) provide baseline results with popular language models and neural network architectures; all achieve zero percent accuracy. The best accuracy is 7.3% obtained by randomly choosing a capitalized word from the passage.\nOur approach is based on the observation that in 83% of instances the answer appears in the context. We exploit this in two ways. First, we automatically construct a large training set of 1.8 million instances by simply selecting passages where the answer occurs in the context. Second, we treat the problem as a reading comprehension task similar to the CNN/Daily Mail datasets introduced by Hermann et al. (2015), the Children\u2019s Book Test (CBT) of Hill et al. (2016), and the Who-did-What dataset of Onishi et al. (2016). We show that standard models for reading comprehension, trained on our automatically generated training set, improve the state of the art on the LAMBADA test set from 7.3% to 49.0%. This is in spite of the fact that these models fail on the 17% of instances in which the answer is not in the context.\nWe also perform a manual analysis of the LAMBADA task, provide an estimate of human performance, and categorize the instances in terms of the phenomena they test. We find that the comprehension models perform best on instances that require selecting a name from the context based on dialogue or discourse cues, but struggle when required to do coreference resolution or when external knowledge could help in choosing the answer."}, {"heading": "2 Methods", "text": "We now describe the models that we employ for the LAMBADA task (Section 2.1) as well as our dataset construction procedure (Section 2.2)."}, {"heading": "2.1 Neural Readers", "text": "Hermann et al. (2015) developed the CNN/Daily Mail comprehension tasks and introduced ques-\ntion answering models based on neural networks. Many others have been developed since. We refer to these models as \u201cneural readers\u201d. While a detailed survey is beyond our scope, we briefly describe the neural readers used in our experiments: the Stanford (Chen et al., 2016), Attention Sum (Kadlec et al., 2016), and GatedAttention (Dhingra et al., 2016) Readers. These neural readers use attention based on the question and passage to choose an answer from among the words in the passage. We use d for the context word sequence, q for the question (with a blank to be filled), A for the candidate answer list, and V for the vocabulary. We describe neural readers in terms of three components:\n1. Embedding and Encoding: Each word in d\nand q is mapped into a v-dimensional vector via the embedding function e(w) \u2208 Rv, for all w \u2208 d \u222a q.1 The same embedding function is used for both d and q. The embeddings are learned from random initialization; no pretrained word embeddings are used. The embedded context is processed by a bidirectional recurrent neural network (RNN) which computes hidden vectors hi for each position i:\nh\u2192 = fRNN (\u03b8\u2192d , e(d)) h\u2190 = bRNN (\u03b8\u2190d , e(d))\nh = \u3008h\u2192, h\u2190\u3009\nwhere \u03b8\u2192d and \u03b8 \u2190 d are RNN parameters, and each of fRNN and bRNN return a sequence of hidden vectors, one for each position in the input e(d). The question is encoded into a single vector g which is the concatenation of the final vectors of two RNNs:\ng\u2192 = fRNN (\u03b8\u2192q , e(q)) g\u2190 = bRNN (\u03b8\u2190q , e(q))\ng = \u3008g\u2192|q|, g \u2190 0 \u3009\nThe RNNs use either gated recurrent units (Cho et al., 2014) or long short-term memory (Hochreiter and Schmidhuber, 1997).\n2. Attention: The readers then compute atten-\ntion weights on positions of h using g. In general, we define \u03b1i = softmax(att(hi, g)), where i ranges over positions in h. The\n1We overload the e function to operate on sequences and denote the embedding of d and q as matrices e(d) and e(q).\natt function is an inner product in the Attention Sum Reader and a bilinear product in the Stanford Reader. The computed attentions are then passed through a softmax function to form a probability distribution. The GatedAttention Reader uses a richer attention architecture (Dhingra et al., 2016); space does not permit a detailed description.\n3. Output and Prediction: To output a prediction\na\u2217, the Stanford Reader computes the attentionweighted sum of the context vectors and then an inner product with each candidate answer:\nc =\n|d|\u2211\ni=1\n\u03b1ihi a \u2217 = argmax a\u2208A o(a)\u22a4c\nwhere o(a) is the \u201coutput\u201d embedding function. As the Stanford Reader was developed for the anonymized CNN/Daily Mail tasks, only a few entries in the output embedding function needed to be well-trained in their experiments. However, for LAMBADA, correct answers can range over the entirety of V , making the output embedding function difficult to train. Therefore we also experiment with a modified version of the Stanford Reader that uses the same embedding function e for both input and output words:\na\u2217 = argmax a\u2208A e(a)\u22a4W c (1)\nwhereW is an additional parameter matrix used to match dimensions and model any additional needed transformation.\nFor the Attention Sum and Gated-Attention Readers the answer is computed by:\n\u2200a \u2208 A, P (a|d,q) = \u2211\ni\u2208I(a,d)\n\u03b1i\na\u2217 = argmax a\u2208A P (a|d,q)\nwhere I(a,d) is the set of positions where a appears in context d."}, {"heading": "2.2 Training Data Construction", "text": "Each LAMBADA instance is divided into a context (4.6 sentences on average) and a target sentence, and the last word of the target sentence is the target word to be predicted. The LAMBADA dataset consists of development (DEV) and test (TEST) sets; Paperno et al. (2016) also provide\na control dataset (CONTROL), an unfiltered sample of instances from the BookCorpus.\nWe construct a new training dataset from the BookCorpus. We restrict it to instances that contain the target word in the context. This decision is natural given our use of neural readers that assume the answer is contained in the passage. We also ensure that the context has at least 50 words and contains 4 or 5 sentences and we require the target sentences to have more than 10 words.\nSome neural readers require a candidate target word list to choose from. We list all words in the context as candidate answers, except for punctuation.2 Our new dataset contains 1,827,123 instances in total. We divide it into two parts, a training set (TRAIN) of 1,618,782 instances and a validation set (VAL) of 208,341 instances. These datasets can be found at the authors\u2019 websites."}, {"heading": "3 Experiments", "text": "We use the Stanford Reader (Chen et al., 2016), our modified Stanford Reader (Eq. 1), the Attention Sum (AS) Reader (Kadlec et al., 2016), and the Gated-Attention (GA) Reader (Dhingra et al., 2016). We also add the simple features fromWang et al. (2016) to the AS and GA Readers. The features are concatenated to the word embeddings in the context. They include: whether the word appears in the target sentence, the frequency of the word in the context, the position of the word\u2019s first occurrence in the context as a percentage of the context length, and whether the text surrounding the word matches the text surrounding the blank in the target sentence. For the last feature, we only consider matching the left word since the blank is always the last word in the target sentence.\nAll models are trained end to end without any warm start and without using pretrained embeddings. We train each reader on TRAIN for a max of 10 epochs, stopping when accuracy on DEV decreases two epochs in a row. We take the model from the epoch with max DEV accuracy and evaluate it on TEST and CONTROL. VAL is not used.\nWe evaluate several other baseline systems inspired by those of Paperno et al. (2016), but we focus on versions that restrict the choice of answers to non-stopwords in the context.3 We found this\n2This list of punctuation symbols is at https: //raw.githubusercontent.com/ZeweiChu/ lambada-dataset/master/stopwords/ shortlist-stopwords.txt 3We use the stopword list from Richardson et al. (2013).\nstrategy to consistently improve performance even though it limits the maximum achievable accuracy.\nWe consider two n-gram language model baselines. We use the SRILM toolkit (Stolcke, 2002) to estimate a 4-gram model with modified KneserNey smoothing on the combination of TRAIN and VAL. One uses a cache size of 100 and the other does not use a cache. We use each model to score each non-stopword from the context. We also evaluate an LSTM language model. We train it on TRAIN, where the loss is cross entropy summed over all positions in each instance. The output vocabulary is the vocabulary of TRAIN, approximately 130k word types. At test time, we again limit the search to non-stopwords in the context.\nWe also test simple baselines that choose particular non-stopwords from the context, including a random one, the first in the context, the last in the context, and the most frequent in the context."}, {"heading": "4 Results", "text": "Table 1 shows our results. We report accuracies on the entirety of TEST and CONTROL (\u201call\u201d), as\nwell as separately on the part of CONTROL where the target word is in the context (\u201ccontext\u201d). The first part of the table shows results from Paperno et al. (2016). We then show our baselines that choose a word from the context. Choosing the most frequent yields a surprisingly high accuracy of 11.7%, which is better than all results from Paperno et al.\nOur language models perform comparably, with the n-gram + cache model doing best. By forcing language models to select a word from the context, the accuracy on TEST is much higher than the analogous models from Paperno et al., though accuracy suffers on CONTROL.\nWe then show results with the neural readers, showing that they give much higher accuracies on TEST than all other methods. The GA Reader with the simple additional features (Wang et al., 2016) yields the highest accuracy, reaching 49.0%. We also measured the \u201ctop k\u201d accuracy of this model, where we give the model credit if the correct answer is among the top k ranked answers. On TEST, we reach 65.4% top-2 accuracy and 72.8% top-3.\nThe AS and GA Readers work much better than the Stanford Reader. One cause appears to be that the Stanford Reader learns distinct embeddings for input and answer words, as discussed above. Our modified Stanford Reader, which uses only a single set of word embeddings, improves by 10.4% absolute. Since the AS and GA Readers merely score words in the context, they do not learn separate answer word embeddings and therefore do not suffer from this effect.\nWe suspect the remaining accuracy difference between the Stanford and the other readers is due to the difference in the output function. The Stanford Reader was developed for the CNN and Daily Mail datasets, in which correct answers are anonymized entity identifiers which are reused across instances. Since the identifier embeddings are observed so frequently in the training data, they are frequently updated. In our setting, however, answers are words from a large vocabulary, so many of the word embeddings of correct answers may be undertrained. This could potentially be addressed by augmenting the word embeddings with identifiers to obtain some of the modeling benefits of anonymization (Wang et al., 2016).\nAll context restricted models yield poor accuracies on the entirety of CONTROL. This is due to the fact that only 14.1% of CONTROL instances\nhave the target word in the context, so this sets the upper bound that these models can achieve."}, {"heading": "4.1 Manual Analysis", "text": "One annotator, a native English speaker, sampled 100 instances randomly from DEV, hid the final word, and attempted to guess it from the context and target sentence. The annotator was correct in 86 cases. For the subset that contained the answer in the context, the annotator was correct in 79 of 87 cases. Even though two annotators were able to correctly answer all LAMBADA instances during dataset construction (Paperno et al., 2016), our results give an estimate of how often a third would agree. The annotator did the same on 100 instances randomly sampled from CONTROL, guessing correctly in 36 cases. These results are reported in Table 1. The annotator was correct on 6 of the 12 CONTROL instances in which the answer was contained in the context.\nWe analyzed the 100 LAMBADA DEV instances, tagging each with labels indicating the minimal kinds of understanding needed to answer it correctly.4 Each instance can have multiple labels. We briefly describe each label below:\n\u2022 single name cue: the answer is clearly a name according to contextual cues and only a single\nname is mentioned in the context.\n\u2022 simple speaker tracking: instance can be answered merely by tracking who is speaking\nwithout understanding what they are saying.\n\u2022 basic reference: answer is a reference to something mentioned in the context; simple under-\nstanding/context matching suffices.\n4The annotations are available from the authors\u2019 websites.\n\u2022 discourse inference rule: answer can be found by applying a single discourse inference rule,\nsuch as the rule: \u201cX left Y and went in search of Z\u201d\u2192 Y 6= Z .\n\u2022 semantic trigger: amorphous semantic information is needed to choose the answer, typically re-\nlated to event sequences or dialogue turns, e.g., a customer says \u201cWhere is the X?\u201d and a supplier responds \u201cWe got plenty of X\u201d.\n\u2022 coreference: instance requires non-trivial coreference resolution to solve correctly, typically\nthe resolution of anaphoric pronouns.\n\u2022 external knowledge: some particular external knowledge is needed to choose the answer.\nTable 2 shows the breakdown of these labels across instances, as well as the accuracy on each label of the GA Reader with features.\nThe GA Reader performs well on instances involving shallower, more surface-level cues. In 9 cases, the answer is clearly a name based on contextual cues in the target sentence and there is only one name in the context; the reader answers all but one correctly. When only simple speaker tracking is needed (19 cases), the reader gets 84% correct.\nThe hardest instances are those that involve deeper understanding, like semantic links, coreference resolution, and external knowledge. While external knowledge is difficult to define, we chose this label when we were able to explicitly write down the knowledge that one would use when answering the instances, e.g., one instance requires knowing that \u201cwhen something explodes, noise emanates from it\u201d. These instances make up nearly a quarter of those we analyzed, making LAMBADAa good task for work in leveraging external knowledge for language understanding."}, {"heading": "4.2 Discussion", "text": "On CONTROL, while our readers outperform our other baselines, they are outperformed by the language modeling baselines from Paperno et al. This suggests that though we have improved the state of the art on LAMBADAby more than 40% absolute, we have not solved the general language modeling problem; there is no single model that performs well on both TEST and CONTROL. Our 36% estimate of human performance on CONTROL shows the difficulty of the general problem, and reveals a gap of 14% between the best language model and human accuracy.\nA natural question to ask is whether applying neural readers is a good direction for this task, since they fail on the 17% of instances which do not have the target word in the context. Furthermore, this subset of LAMBADA may in fact display the most interesting and challenging phenomena. Some neural readers, like the Stanford Reader, can be easily used to predict target words that do not appear in the context, and the other readers can be modified to do so. Doing this will require a different selection of training data than that used above. However, we do wish to note that, in addition to the relative rarity of these instances in LAMBADA, we found them to be challenging for our annotator (who was correct on only 7 of the 13 in this subset).\nWe note that TRAIN has similar characteristics to the part of CONTROL that contains the answer in the context (the final column of Table 1). We find that the ranking of systems according to this column is similar to that in the TEST column. This suggests that our simple method of dataset creation could be used to create additional training or evaluation sets for challenging language modeling problems like LAMBADA, perhaps by combining it with baseline suppression (Onishi et al., 2016)."}, {"heading": "5 Conclusion", "text": "We constructed a new training set for LAMBADA and used it to train neural readers to improve the state of the art from 7.3% to 49%. We also provided results with several other strong baselines and included a manual evaluation in an attempt to better understand the phenomena tested by the task. Our hope is that other researchers will seek models and training regimes that simultaneously perform well on both LAMBADA and CONTROL, with the goal of solving the general problem of language modeling."}, {"heading": "Acknowledgments", "text": "We thank Denis Paperno for answering our questions about the LAMBADA dataset and we thank NVIDIA Corporation for donating GPUs used in this research."}], "references": [{"title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."], "venue": "Proc. of", "citeRegEx": "Cho et al\\.,? 2014", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Gated-attention readers for text comprehension", "author": ["Bhuwan Dhingra", "Hanxiao Liu", "WilliamW. Cohen", "Ruslan Salakhutdinov."], "venue": "arXiv preprint.", "citeRegEx": "Dhingra et al\\.,? 2016", "shortCiteRegEx": "Dhingra et al\\.", "year": 2016}, {"title": "Teachingmachines to read and comprehend", "author": ["Karl Moritz Hermann", "Tom Koisk", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."], "venue": "Proc. of NIPS.", "citeRegEx": "Hermann et al\\.,? 2015", "shortCiteRegEx": "Hermann et al\\.", "year": 2015}, {"title": "The Goldilocks principle: Reading children\u2019s books with explicit memory representations", "author": ["Felix Hill", "Antoine Bordes", "Sumit Chopra", "Jason Weston."], "venue": "Proc. of ICLR.", "citeRegEx": "Hill et al\\.,? 2016", "shortCiteRegEx": "Hill et al\\.", "year": 2016}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber."], "venue": "Neural Computation, 9(8).", "citeRegEx": "Hochreiter and Schmidhuber.,? 1997", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Text understanding with the attention sum reader network", "author": ["Rudolf Kadlec", "Martin Schmid", "Ondrej Bajgar", "Jan Kleindienst."], "venue": "Proc. of ACL.", "citeRegEx": "Kadlec et al\\.,? 2016", "shortCiteRegEx": "Kadlec et al\\.", "year": 2016}, {"title": "Who did What: A large-scale person-centered cloze dataset", "author": ["Takeshi Onishi", "Hai Wang", "Mohit Bansal", "Kevin Gimpel", "David McAllester."], "venue": "Proc. of EMNLP.", "citeRegEx": "Onishi et al\\.,? 2016", "shortCiteRegEx": "Onishi et al\\.", "year": 2016}, {"title": "The LAMBADA dataset: Word prediction requiring a broad discourse context", "author": ["Denis Paperno", "Germn Kruszewski", "Angeliki Lazaridou", "Quan Ngoc Pham", "Raffaella Bernardi", "Sandro Pezzelle", "Marco Baroni", "Gemma Boleda", "Raquel Fernndez"], "venue": null, "citeRegEx": "Paperno et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Paperno et al\\.", "year": 2016}, {"title": "MCTest: A challenge dataset for the open-domainmachine comprehension of text", "author": ["Matthew Richardson", "Christopher JC Burges", "Erin Renshaw."], "venue": "Proc. of EMNLP.", "citeRegEx": "Richardson et al\\.,? 2013", "shortCiteRegEx": "Richardson et al\\.", "year": 2013}, {"title": "SRILM-an extensible language modeling toolkit", "author": ["Andreas Stolcke."], "venue": "Proc. of Interspeech.", "citeRegEx": "Stolcke.,? 2002", "shortCiteRegEx": "Stolcke.", "year": 2002}, {"title": "Emergent logical structure in vector representations of neural readers", "author": ["Hai Wang", "Takeshi Onishi", "Kevin Gimpel", "David McAllester."], "venue": "arXiv preprint.", "citeRegEx": "Wang et al\\.,? 2016", "shortCiteRegEx": "Wang et al\\.", "year": 2016}, {"title": "Aligning books and movies: Towards story-like visual explanations by watching movies and reading books", "author": ["Yukun Zhu", "Ryan Kiros", "Richard Zemel", "Ruslan Salakhutdinov", "Raquel Urtasun", "Antonio Torralba", "Sanja Fidler."], "venue": "Proc. of ICCV.", "citeRegEx": "Zhu et al\\.,? 2015", "shortCiteRegEx": "Zhu et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 2, "context": "Progress in text understanding has been driven by large datasets that test particular capabilities, like recent datasets for reading comprehension (Hermann et al., 2015).", "startOffset": 147, "endOffset": 169}, {"referenceID": 7, "context": "We focus here on the LAMBADA dataset (Paperno et al., 2016), a word prediction task requiring broader context than the immediate sentence.", "startOffset": 37, "endOffset": 59}, {"referenceID": 7, "context": "The LAMBADA dataset (Paperno et al., 2016) was designed by identifying word prediction tasks that require broad context.", "startOffset": 20, "endOffset": 42}, {"referenceID": 11, "context": "from the BookCorpus (Zhu et al., 2015) and consists of a passage of several sentences where the task is to predict the last word of the last sen-", "startOffset": 20, "endOffset": 38}, {"referenceID": 4, "context": "Paperno et al. (2016) provide baseline results with popular language models and neural network architectures; all achieve zero percent accuracy.", "startOffset": 0, "endOffset": 22}, {"referenceID": 2, "context": "Second, we treat the problem as a reading comprehension task similar to the CNN/Daily Mail datasets introduced by Hermann et al. (2015), the Children\u2019s Book Test (CBT) of Hill et al.", "startOffset": 114, "endOffset": 136}, {"referenceID": 2, "context": "Second, we treat the problem as a reading comprehension task similar to the CNN/Daily Mail datasets introduced by Hermann et al. (2015), the Children\u2019s Book Test (CBT) of Hill et al. (2016), and the Who-did-What dataset of Onishi et al.", "startOffset": 114, "endOffset": 190}, {"referenceID": 2, "context": "Second, we treat the problem as a reading comprehension task similar to the CNN/Daily Mail datasets introduced by Hermann et al. (2015), the Children\u2019s Book Test (CBT) of Hill et al. (2016), and the Who-did-What dataset of Onishi et al. (2016). We show that standard models for reading comprehension, trained on our automatically generated training set, improve the state of the art on the LAMBADA test set from 7.", "startOffset": 114, "endOffset": 244}, {"referenceID": 5, "context": ", 2016), Attention Sum (Kadlec et al., 2016), and GatedAttention (Dhingra et al.", "startOffset": 23, "endOffset": 44}, {"referenceID": 1, "context": ", 2016), and GatedAttention (Dhingra et al., 2016) Readers.", "startOffset": 28, "endOffset": 50}, {"referenceID": 0, "context": "The RNNs use either gated recurrent units (Cho et al., 2014) or long short-term memory (Hochreiter and Schmidhuber, 1997).", "startOffset": 42, "endOffset": 60}, {"referenceID": 4, "context": ", 2014) or long short-term memory (Hochreiter and Schmidhuber, 1997).", "startOffset": 34, "endOffset": 68}, {"referenceID": 1, "context": "The GatedAttention Reader uses a richer attention architecture (Dhingra et al., 2016); space does not permit a detailed description.", "startOffset": 63, "endOffset": 85}, {"referenceID": 7, "context": "The LAMBADA dataset consists of development (DEV) and test (TEST) sets; Paperno et al. (2016) also provide", "startOffset": 72, "endOffset": 94}, {"referenceID": 5, "context": "1), the Attention Sum (AS) Reader (Kadlec et al., 2016), and the Gated-Attention (GA) Reader (Dhingra et al.", "startOffset": 34, "endOffset": 55}, {"referenceID": 1, "context": ", 2016), and the Gated-Attention (GA) Reader (Dhingra et al., 2016).", "startOffset": 45, "endOffset": 67}, {"referenceID": 1, "context": ", 2016), and the Gated-Attention (GA) Reader (Dhingra et al., 2016). We also add the simple features fromWang et al. (2016) to the AS and GA Readers.", "startOffset": 46, "endOffset": 124}, {"referenceID": 7, "context": "We evaluate several other baseline systems inspired by those of Paperno et al. (2016), but we fo-", "startOffset": 64, "endOffset": 86}, {"referenceID": 8, "context": "txt We use the stopword list from Richardson et al. (2013). Method TEST CONTROL", "startOffset": 34, "endOffset": 59}, {"referenceID": 7, "context": "all all context Baselines (Paperno et al., 2016) Random in context 1.", "startOffset": 26, "endOffset": 48}, {"referenceID": 7, "context": "The first section is from Paperno et al. (2016). \u2217Estimated from 100 randomly-sampled DEV instances.", "startOffset": 26, "endOffset": 48}, {"referenceID": 9, "context": "We use the SRILM toolkit (Stolcke, 2002) to estimate a 4-gram model with modified KneserNey smoothing on the combination of TRAIN and VAL.", "startOffset": 25, "endOffset": 40}, {"referenceID": 7, "context": "The first part of the table shows results from Paperno et al. (2016). We then show our baselines that choose a word from the context.", "startOffset": 47, "endOffset": 69}, {"referenceID": 10, "context": "The GA Reader with the simple additional features (Wang et al., 2016) yields the highest accuracy, reaching 49.", "startOffset": 50, "endOffset": 69}, {"referenceID": 10, "context": "benefits of anonymization (Wang et al., 2016).", "startOffset": 26, "endOffset": 45}, {"referenceID": 7, "context": "Even though two annotators were able to correctly answer all LAMBADA instances during dataset construction (Paperno et al., 2016), our results give an estimate of how often a third would agree.", "startOffset": 107, "endOffset": 129}, {"referenceID": 6, "context": "This suggests that our simple method of dataset creation could be used to create additional training or evaluation sets for challenging language modeling problems like LAMBADA, perhaps by combining it with baseline suppression (Onishi et al., 2016).", "startOffset": 227, "endOffset": 248}], "year": 2017, "abstractText": "Progress in text understanding has been driven by large datasets that test particular capabilities, like recent datasets for reading comprehension (Hermann et al., 2015). We focus here on the LAMBADA dataset (Paperno et al., 2016), a word prediction task requiring broader context than the immediate sentence. We view LAMBADA as a reading comprehension problem and apply comprehension models based on neural networks. Though these models are constrained to choose a word from the context, they improve the state of the art on LAMBADA from 7.3% to 49%. We analyze 100 instances, finding that neural network readers perform well in cases that involve selecting a name from the context based on dialogue or discourse cues but struggle when coreference resolution or external knowledge is needed.", "creator": "dvips(k) 5.996 Copyright 2016 Radical Eye Software"}}}