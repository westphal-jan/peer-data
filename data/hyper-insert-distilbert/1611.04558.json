{"id": "1611.04558", "review": {"conference": "acl", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Nov-2016", "title": "Google's Multilingual Neural Machine Translation System: Enabling Zero-Shot Translation", "abstract": "we propose a comprehensive simple, elegant educational solution to use on a single constraint neural mapping machine translation ( enhanced nmt ) model to instantly translate between multiple languages. creating our own solution requires no change out in working the model architecture away from our modeling base of system domain but instead further introduces applying an artificial token focused at challenging the unique beginning requirements of solving the test input sentence equation to exactly specify the required translated target specific language. the rest of the iq model, which presently includes encoder, dictionary decoder and attention, remains unchanged visually and hence is shared across all languages. using from a shared wordpiece vocabulary, our approach potentially enables multilingual vocabulary nmt using from a single model without fearing any increase in neural parameters, which is significantly simpler behavior than previous proposals purely for multilingual instruction nmt. our method often theoretically improves the good translation quality of matching all involved language pairs, specifically even while physically keeping out the total number of model node parameters constant. on assessing the wmt'38 14 benchmarks, suggesting a shared single multilingual model achieves comparable performance for english $ \\ rightarrow $ french and european surpasses similar state - of - where the - art results for english $ \\ y rightarrow $ german. compare similarly, a dual single multilingual model surpasses an state - of - most the - art quality results for french $ \\ = rightarrow $ english 9 and pays german $ \\ rightarrow $ english on l wmt'etat 14 portuguese and \\ wmt'80s 15 benchmarks respectively. modelled on production vector corpora, multilingual models of strings up corresponding to roughly twelve language pairs continually allow for further better translation of many individual pairs. in addition - to improving the translation quality of other language - pairs that from the apache model was trained especially with, expanding our models can also learn gestures to perform increasingly implicit gesture bridging strategies between language parameter pairs never fully seen explicitly during training, with showing that improving transfer vector learning and introducing zero - shot error translation is possible exclusively for neural translation. so finally, after we show analyses requiring that additional hints grasping at a universal interlingua interface representation suggest in writing our models and additionally show some interesting examples when demonstrating mixing languages.", "histories": [["v1", "Mon, 14 Nov 2016 20:24:39 GMT  (2497kb,D)", "http://arxiv.org/abs/1611.04558v1", null], ["v2", "Mon, 21 Aug 2017 20:33:43 GMT  (2500kb,D)", "http://arxiv.org/abs/1611.04558v2", null]], "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["melvin johnson", "mike schuster", "quoc v le", "maxim krikun", "yonghui wu", "zhifeng chen", "nikhil thorat", "fernanda vi\\'egas", "martin wattenberg", "greg corrado", "macduff hughes", "jeffrey dean"], "accepted": true, "id": "1611.04558"}, "pdf": {"name": "1611.04558.pdf", "metadata": {"source": "CRF", "title": "Google\u2019s Multilingual Neural Machine Translation System: Enabling Zero-Shot Translation", "authors": ["Melvin Johnson", "Mike Schuster", "Quoc V. Le", "Maxim Krikun", "Yonghui Wu", "Zhifeng Chen", "Nikhil Thorat", "Fernanda Vi\u00e9gas", "Martin Wattenberg", "Greg Corrado", "Macduff Hughes", "Jeffrey Dean"], "emails": ["melvinp@google.com", "schuster@google.com", "qvl@google.com", "krikun@google.com", "yonghui@google.com", "zhifengc@google.com", "nsthorat@google.com"], "sections": [{"heading": null, "text": "to translate between multiple languages. Our solution requires no change in the model architecture from our base system but instead introduces an artificial token at the beginning of the input sentence to specify the required target language. The rest of the model, which includes encoder, decoder and attention, remains unchanged and is shared across all languages. Using a shared wordpiece vocabulary, our approach enables Multilingual NMT using a single model without any increase in parameters, which is significantly simpler than previous proposals for Multilingual NMT. Our method often improves the translation quality of all involved language pairs, even while keeping the total number of model parameters constant. On the WMT\u201914 benchmarks, a single multilingual model achieves comparable performance for English\u2192French and surpasses state-of-the-art results for English\u2192German. Similarly, a single multilingual model surpasses state-of-the-art results for French\u2192English and German\u2192English on WMT\u201914 and WMT\u201915 benchmarks respectively. On production corpora, multilingual models of up to twelve language pairs allow for better translation of many individual pairs. In addition to improving the translation quality of language pairs that the model was trained with, our models can also learn to perform implicit bridging between language pairs never seen explicitly during training, showing that transfer learning and zero-shot translation is possible for neural translation. Finally, we show analyses that hints at a universal interlingua representation in our models and show some interesting examples when mixing languages."}, {"heading": "1 Introduction", "text": "Neural Machine Translation (NMT) [22, 2, 5] is an end-to-end approach to machine translation that has rapidly gained adoption in many large-scale settings [24]. Almost all such systems are built for a single language pair \u2014 so far there has not been a sufficiently simple and efficient way to handle multiple language pairs using a single model without making significant changes to the basic NMT architecture.\nIn this paper we introduce a simple method to translate between multiple languages using a single model, taking advantage of multilingual data to improve NMT for all languages involved. Our method requires no change to the traditional NMT model architecture. Instead, we add an artificial token to the input sequence to indicate the required target language. All other parts of the system as described in [24] \u2014 encoder, decoder, attention, and shared wordpiece vocabulary \u2014 stay exactly the same. We call our system Multilingual GNMT since it is an extension of [24]. This method has several attractive benefits:\n\u2022 Simplicity: Since no changes are made to the architecture of the model, scaling to more languages is trivial \u2014 any new data is simply added, possibly with over- or under-sampling such that all languages are appropriately represented, and used with a new token if the target language changes. This also simplifies production deployment since it can cut down the total number of models necessary when dealing with multiple languages. Note that at Google, we support a total of over 100 languages as source and target, so theoretically 1002 models would be necessary for the best possible translations between\nar X\niv :1\n61 1.\n04 55\n8v 1\n[ cs\n.C L\n] 1\n4 N\nov 2\nall pairs, if each model could only support a single language pair. Clearly this would be problematic in a production environment.\n\u2022 Low-resource language improvements: In a multilingual NMT model, all parameters are implicitly shared by all the language pairs being modeled. This forces the model to generalize across language boundaries during training. It is observed that when language pairs with little available data and language pairs with abundant data are mixed into a single model, translation quality on the low resource language pair is significantly improved.\n\u2022 Zero-shot translation: A surprising benefit of modeling several language pairs in a single model is that the model implicitly learns to translate between language pairs it has never seen (zero-shot translation) \u2014 a working example of transfer learning within neural translation models. For example, a multilingual NMT model trained with Portuguese\u2192English and English\u2192Spanish examples can generate reasonable translations for Portuguese\u2192Spanish although it has not seen any data for that language pair. We show that the quality of zero-shot language pairs can easily be improved with little additional data of the language pair in question.\nIn the remaining sections of this paper we first discuss related work and explain our multilingual system architecture in more detail. Then, we go through the different ways of merging languages on the source and target side in increasing difficulty (many-to-one, one-to-many, many-to-many), and discuss the results of a number of experiments on WMT benchmarks, as well as on some of Google\u2019s production datasets. We present results from transfer learning experiments and show how implicitly-learned bridging (zero-shot translation) performs in comparison to explicit bridging (i.e., first translating to a common language like English and then translating from that common language into the desired target language) as typically used in machine translation systems. We describe visualizations of the new system in action, which provide early evidence of shared semantic representations (interlingua) between languages. Finally we also show some interesting applications of mixing languages with examples: code-switching on the source side and weighted target language mixing, and suggest possible avenues for further exploration."}, {"heading": "2 Related Work", "text": "Interlingual translation is a classic method in machine translation [16, 10]. Despite its distinguished history, most practical applications of machine translation have focused on individual language pairs because it was simply too difficult to build a single system that translates reliably from and to several languages.\nNeural Machine Translation [22, 2, 5] is a promising end-to-end learning approach to machine translation which quickly was extended to multilingual machine translation in various ways. One early attempt is the work in [12] which proposed multilingual training in a multitask learning setting. Their model is a basic encoder-decoder network for multilingual NMT, in this case without an attention mechanism. To make proper use of multilingual data, they extend their model with multiple encoders and decoders, one for each supported source and target language. Similarly in [6], the authors modify an attention-based encoder-decoder approach to perform multilingual NMT by adding a separate decoder and attention mechanism for each target language. In [3] the authors incorporate multiple modalities other than text into the encoder-decoder framework.\nSeveral other approaches have been proposed for multilingual training, especially for low-resource language pairs. For instance, in [26] a form of multi-source translation was proposed where the model has multiple different encoders and different attention mechanisms for each source language. However, this work requires the presence of a multi-way parallel corpus between all the languages involved, which is difficult to obtain in practice. Most closely related to our approach is [7] in which the authors propose multi-way multilingual NMT using a single shared attention mechanism but multiple encoders/decoders for each source/target language. Recently in [11] a CNN-based character-level encoder was proposed which is shared across multiple source languages. However, this approach can only perform translations into a single target language.\nOur approach is related to the multitask learning framework [4]. Despite its promise, this framework has seen limited practical success in real world applications. In speech recognition, there have been many successful reports of modeling multiple languages using a single model (see [17] for an extensive reference and references therein). Multilingual language processing has also shown to be successful in domains other than translation [9, 23].\nIn an approach similar to ours in spirit, but with a very different purpose, the NMT framework has been extended to control the politeness level of the target translation by adding a special token to the source sentence in [20].\nOur method has an additional benefit not seen in other systems: It gives the system the ability to perform zero-shot translation, meaning the system can translate from a source language to a target language without having seen explicit examples from this specific language pair during training. Zero-shot translation was the direct goal of [8]. Although they were not able to achieve this direct goal, they were able to do what they call \u201czero-resource\u201d translation by using their pre-trained multi-way multilingual model and later fine-tuning it with pseudo-parallel data generated by the model.\nTo the best of our knowledge, our work is the first to validate the use of true multilingual translation using an end-to-end model, and is incidentally also already used in a production setting. It is also the first work to demonstrate the possibility of zero-shot translation, a successful example of transfer learning in machine translation, without any additional steps."}, {"heading": "3 System Architecture for Multilingual Translation", "text": "The multilingual model architecture (see Figure 1) is identical to Google\u2019s Neural Machine Translation (GNMT) system [24] (with the optional addition of direct connections between encoder and decoder layers which we have used for some of our experiments, see description of Figure 1) and we refer to that paper for a detailed description.\nTo be able to make use of multilingual data within a single system, we propose one simple modification to the input data, which is to introduce an artificial token at the beginning of the input sentence to indicate the target language the model should translate to. For instance, consider the following English\u2192Spanish pair of sentences:\nHello, how are you? -> \u00bfHola como est\u00e1s?\nIt will be modified to:\n<2es> Hello, how are you? -> \u00bfHola como est\u00e1s?\nto indicate that Spanish is the target language. Note that we don\u2019t specify the source language \u2013 the model will learn this automatically. Not specifying the source language has the potential disadvantage that words with the same spelling but different meaning from different source languages can be ambiguous to translate, but the advantage is that it is simpler and we can handle input with code-switching. We find that in almost all cases context provides enough language evidence to produce the correct translation.\nAfter adding the token to the input data, we train the model with all multilingual data consisting of multiple language pairs at once, possibly after over- or undersampling some of the data to adjust for the relative ratio of the language data available. We use a shared wordpiece model [18, 21] across all the source and target data used for training, usually with 32,000 word pieces. All training is carried out as in our general NMT pipeline as described in [24] and implemented in TensorFlow [1].\nIn summary, this approach is the simplest and most elegant among the alternatives that we are aware of. During training and inference, we only need to add one additional token to each sentence of the source data to specify the desired target language."}, {"heading": "4 Experiments and Results", "text": "In this section, we apply our proposed method to train multilingual models in several different configurations. Since we can have models with either single or multiple source/target languages we test three interesting cases:\n\u2022 many source languages to one target language (many to one),\n\u2022 one source language to many target languages (one to many), and\n\u2022 many source languages to many target languages (many to many).\nWe will also show results and discuss benefits of bringing together many (un)related languages in a single large scale model trained on production data. Finally, we will present our findings on zero-shot translation where the model learns to translate between pairs of languages for which no explicit parallel examples existed in the training data, and show results of experiments where adding additional data improves zero-shot translation quality further."}, {"heading": "4.1 Datasets, Training Protocols and Evaluation Metrics", "text": "We train our models on the WMT\u201914 English(En)\u2192French(Fr) dataset, the WMT\u201914 English\u2192German(De) data, as well as on some of Google\u2019s internal production datasets. On WMT En\u2192Fr, the training set contains 36M sentence pairs. The WMT En\u2192De training set contains 5M sentence pairs. In both cases, we use newstest2014 as the test sets to compare against previous work [14, 19, 25, 24]. For WMT Fr\u2192En and De\u2192En we use newstest2014 and newstest2015 as test sets. Despite training on WMT\u201914 data, which is somewhat smaller than WMT\u201915, we test our De\u2192En model on newstest2015, similar to [13]. The combination of newstest2012 and newstest2013 is used as the development set.\nIn addition to WMT, we also evaluate the multilingual approach on some Google-internal datasets representing a wide spectrum of languages with very distinct linguistic properties: English\u2194Japanese(Ja), English\u2194Korean(Ko), English\u2194Spanish(Es), and English\u2194Portuguese(Pt). These datasets are two to three decimal orders of magnitude larger than the WMT datasets.\nOur training protocols are mostly identical to those described in [24] and we refer the reader to the detailed description in that paper. We find that some multilingual models take a little more time to train than single language pair models, likely because each language pair is seen only for a fraction of the training process. Depending on the number of languages a full training can take up to 10M steps and 3 weeks to converge (on roughly 100 GPUs). We use larger batch sizes with a slightly higher initial learning rate to speed up the convergence of these models.\nWe evaluate our models using the standard BLEU score metric and to make our results comparable to [24, 22, 14, 25], we report tokenized BLEU score as computed by the multi-bleu.pl script, which can be downloaded from the public implementation of Moses.1\nSince all language pairs do not have the same amount of training data, we explore two strategies when building multilingual models: one where we oversample the data from all language pairs to be of the same size as the largest language pair and another where we mix the data as is without any change. On our WMT models we report results using both of these strategies. For the production models, we always balance the data such that the ratios are equal. A benefit of the way we share all the components of the model is that the mini-batches can contain data from different language pairs during training and inference. This is much simpler than having separate batches per language pair and devising a scheduling strategy to handle updates during training, and simpler to deploy in production when dealing with multiple languages."}, {"heading": "4.2 Many to One", "text": "In this section we explore having multiple source languages and a single target language \u2014 the simplest way of combining language pairs. Since there is only a single target language no additional source token is required. We perform three sets of experiments:\n\u2022 The first set of experiments is on the WMT datasets, where we combine German\u2192English and French\u2192English to train a multilingual model. Our baselines are two single language pair models: German\u2192English and French\u2192English trained independently. We perform these experiments once with oversampling such that the amount of data per language pair is equal, and once without.\n\u2022 The second set of experiments is on production data where we combine Japanese\u2192English and Korean\u2192English, with oversampling. The baselines are two single language pair models: Japanese\u2192English and Korean\u2192English trained independently.\n\u2022 Finally, the third set of experiments is on production data where we combine Spanish\u2192English and Portuguese\u2192English, with oversampling. The baselines are again two single language pair models trained independently.\nAll of the multilingual and single language pair models have the same total number of parameters as the baseline NMT models trained on a single language pair (using 1024 nodes and 8 LSTM layers as described in [24] and a shared wordpiece model vocabulary of 32k). This is presumably unfair to the multilingual models as the number of parameters available per language pair is reduced by a factor of N compared to the single language pair models, if N is the number of language pairs combined in the multilingual model. The multilingual model also has to handle a combined vocabulary. We chose to keep the number of parameters constant for all models to simplify experimentation.\nThe results are presented in Table 1. For all experiments the multilingual models outperform the baseline single systems despite the above mentioned disadvantage with respect to the number of parameters available per language pair. One possible hypothesis explaining the gains is that the model has been shown more\n1http://www.statmt.org/moses/\nEnglish data on the target side, and that the source languages belong to the same language families, so the model has learned useful generalizations.\nFor the WMT experiments, we obtain a maximum gain of +1.27 BLEU for French\u2192English. Note that the results on both the WMT test sets are better than other published state-of-the-art results for a single model, to the best of our knowledge. On the production experiments, we see that the multilingual models outperform the baseline single systems by as much as +0.8 BLEU."}, {"heading": "4.3 One to Many", "text": "In this section, we explore the application of our method when there is a single source language and multiple target languages. Here we need to prepend the input with an additional token to specify the target language. We perform three sets of experiments almost identical to the previous section except that the source and target languages have been reversed.\nTable 2 summarizes the results when performing translations into multiple target languages. We see that the multilingual models are comparable to, and in some cases outperform, the baselines, but not always. We obtain a large gain of +0.9 BLEU for English\u2192Spanish. Unlike the previous set of results, there are less significant gains in this set of experiments. This is perhaps due to the fact that the decoder has a more difficult time translating into multiple target languages which may even have different scripts e.g., Japanese and Korean, which are combined into a single shared wordpiece vocabulary. Also, as mentioned above, the multilingual models are at a disadvantage because they have the same number of parameters as the single language pair models.\nWe observe that oversampling helps the smaller language pair (En\u2192De) at the cost of lower quality for the larger language pair (En\u2192Fr). The model without oversampling achieves better results on the larger language compared to the smaller one as expected. We expect that there is a setting in between these two extremes that will benefit both the languages and finding that setting is the scope of future work. We also find that this effect is more prominent on smaller datasets (WMT) and much less so on our production datasets."}, {"heading": "4.4 Many to Many", "text": "In this section, we report on experiments when there are multiple source languages and multiple target languages within a single model \u2014 the most difficult setup. Since multiple target languages are given, the input needs to be prepended with the target language token as above.\nThe results are presented in Table 3. We see that the multilingual production models with the same model size and vocabulary size as the single language models are quite close to the baselines. In some cases they even outperforms the baseline model while in others they are worse. We believe this effect is because we do not go through all available training data and each language pair sees only one fourth of the data seen by the baselines.\nOn the WMT datasets, we once again explore the impact of oversampling the smaller language pairs. We notice a similar trend to the previous section in which oversampling helps the smaller language pairs at the expense of the larger ones, while not oversampling seems to have the reverse effect.\nAlthough there are some significant losses in quality from training many languages jointly using a model with the same total number of parameters as the single language pair models, these models reduce the total complexity involved in training and productionization. Additionally, these multilingual models have more interesting advantages as will be discussed in more detail in the sections below."}, {"heading": "4.5 Large Scale Experiments", "text": "This section shows the result of combining 12 production language pairs into a single multilingual model using the same number of parameters as the single language pair models. As above, the input needs to be prepended with the target language token. We oversample the examples from the smaller language pairs to balance the data as explained above.\nThe results are summarized in Table 4. We find that the multilingual model is reasonably close to the best single models and in some cases even achieves comparable quality. It is remarkable that a single model with 278M parameters can do what 12 models with a total of 3.33B parameters would have done. The multilingual model also requires one twelfth of the training time and computing resources to converge. Another important\npoint is that since we only train for a little longer than the single models, the individual language pairs can see as low as one twelfth of the data in comparison to their single language pair models. Again we note that the comparison below is somewhat unfair for the multilingual model and we expect a larger model trained on all available data will likely achieve comparable or better quality than the baselines.\nIn summary, multilingual NMT enables us to group languages with little or no loss in quality while having the benefits of better training efficiency, smaller number of models, and easier productionization."}, {"heading": "4.6 Zero-Shot Translation", "text": "An interesting benefit of our approach is that we can perform zero-shot translation between a language pair for which no explicit training data has been seen.\nTo demonstrate this we will use two multilingual models \u2014 a model trained with examples from two different language-pairs, Portuguese\u2192English and English\u2192Spanish (Model 1), and a model trained with examples from four different language-pairs, English\u2194Portuguese and English\u2194Spanish (Model 2). We show that both of these models can generate reasonably good quality Portuguese\u2192Spanish translations without ever having seen Portuguese\u2192Spanish data during training. To our knowledge this is the first demonstration of true multilingual zero-shot translation. As with the previous multilingual models, both of these models perform comparable to or even slightly better than the baseline single language pair models. Note that besides the pleasant fact that zero-shot translation works at all it has also the advantage of halving decoding speed as no explicit bridging through a third language is necessary when translating from Portuguese to Spanish.\nTable 5 summarizes our results for the Portuguese\u2192Spanish translation experiments. Rows (a) and (b) report the performance of the phrase-based machine translation (PBMT) system and the NMT system through bridging (translation from Portuguese to English and translating the resulting English sentence to Spanish). It can be seen that the NMT system outperforms the PBMT system by close to 2 BLEU points. Note that Model 1 and Model 2 can be bridged within themselves to perform Portuguese\u2192Spanish translation. We do not report these numbers since they are similar to the performance of bridging with two individual single language pair NMT models. For comparison, we built a single NMT model on all available Portuguese\u2192Spanish parallel sentences (see (c) in Table 5).\nThe most interesting observation is that both Model 1 and Model 2 can perform zero-shot translation with reasonable quality (see (d) and (e)). It should be noted that Model 2 outperforms Model 1 by close to 3 BLEU points. In other words, the addition of Spanish on the source side and Portuguese on the target side helps Portuguese\u2192Spanish zero-shot translation. We believe that this is possible only because our shared architecture enables the model to learn an interlingua between all these languages. We explore this hypothesis in more detail in Section 5.\nFinally we incrementally train Model 2 with a small amount of true Portuguese\u2192Spanish parallel data (an order of magnitude less than Table 5 (c)) and obtain the best quality. Thus we show that our multilingual model can perform zero-shot translation by implicit bridging and it also outperforms a strong NMT baseline when incrementally trained with a small amount of data. This result is especially significant for non-English low-resource language pairs where it might be easier to obtain parallel data with English but much harder to obtain parallel data for language pairs where neither the source nor the target language is English. We explore the effect of parallel data in more detail in Section 4.7."}, {"heading": "4.7 Effect of Direct Parallel Data", "text": "In this section, we explore two ways of leveraging available parallel data to improve zero-shot translation quality, namely:\n\u2022 Incrementally training the multilingual model on the additional parallel data for the zero-shot directions.\n\u2022 Training a new multilingual model with all available parallel data mixed equally.\nFor our experiments, we use a baseline model which we call \u201cZero-Shot\u201d trained on a combined parallel corpus of English\u2194{Belarusian, Russian, Ukrainian}. We trained a second model on the above corpus together with additional Russian\u2194{Belarusian, Ukrainian} data. We call this model \u201cFrom-Scratch\u201d. Both models support four target languages, and are evaluated on our standard test sets. As done previously we oversample the data such that all language pairs are represented equally. Finally, we take the best checkpoint of the \u201cZero-Shot\u201d model, and run incremental training on a small portion of the data used to train the \u201cFrom-Scratch\u201d model for a short period of time (3% of \u201cZero-Shot\u201d model total training time). We call this model \u201cIncremental\u201d.\nAs can be seen from Table 6, for the English\u2194X directions, all three models show comparable scores. On the Russian\u2194{Belarusian, Ukrainian} directions, the \u201cZero-Shot\u201d model already achieves relatively high BLEU scores for all directions except one, without any explicit parallel data. This could be because these languages are linguistically related. In the \u201cFrom-Scratch\u201d column, we see that training a new model from scratch improves the zero-shot translation directions further. However, this strategy has a slightly negative effect on the English\u2194X directions because our oversampling strategy will reduce the frequency of the data from these directions. In the final column, we see that incremental training with direct parallel data recovers most of the BLEU score difference between the first two columns on the zero-shot language pairs. In summary, our shared architecture models the zero-shot language pairs quite well and hence enables us to easily improve their quality with a small amount of additional parallel data."}, {"heading": "5 Visual Analysis", "text": "The results of this paper \u2014 that training a model across multiple languages can enhance performance at the individual language level, and that zero-shot translation can be effective \u2014 raise a number of questions about how these tasks are handled inside the model, for example:\n\u2022 Is the network learning some sort of shared representation, in which sentences with the same meaning are represented in similar ways regardless of language?\n\u2022 Does the model operate on zero-shot translations in the same way as it treats language pairs it has been trained on?\nOne way to study the representations used by the network is to look at the activations of the network during translation. A starting point for investigation is the set of attention vectors, i.e., the activations in\nthe layer that connects the encoder and decoder networks (see the blue box in the center of Figure 1). A translation of a single sentence gives rise to a sequence of attention vectors. In this context, our original questions about shared representation can be studied by looking at how the vector sequences of different sentences relate. We could then ask for example:\n\u2022 Do sentences cluster together depending on the source or target language?\n\u2022 Or instead do sentences with similar meanings cluster, regardless of language?\nWe try to find answers to these questions by looking at lower-dimensional representations of internal embeddings that humans can more easily interpret."}, {"heading": "5.1 Evidence for an Interlingua", "text": "Several trained networks indeed show strong visual evidence of a shared representation. For example, Figure 2 below was produced from a many-to-many model trained on English\u2194Japanese and English\u2194Korean. To visualize the model in action we began with a small corpus of 74 triples of semantically identical cross-language phrases. That is, each triple contained phrases in English, Japanese, and Korean with the same underlying meaning. To compile these triples, we searched a ground-truth database for English sentences which were paired with both Japanese and Korean translations.\nWe then applied the trained model to translate each sentence of each triple into the two other possible languages. Performing this process yielded six new sentences based on each triple, for a total of 74 \u2217 6 = 444 total translations with 9,978 steps corresponding to the same number of attention vectors. Since attention vectors are high-dimensional, we use the TensorFlow Embedding Projector2 to map them into more accessible 3D space via t-SNE [15]. In the following diagrams, each point represents a single decoding step during the translation process. Points that represent steps for a given sentence are connected by line segments.\nIn Figure 2 is shown a global view of all 9,978 attention vectors. Points produced from the same original sentence triple are all given the same (random) color. Inspection of these clusters shows that each strand represents a single sentence, and clusters of strands generally represent a set of translations of the same underlying sentence, but with different source and target languages.\nAt right are two close-ups: one of an individual cluster, still coloring based on membership in the same triple, and one where we have colored by source language."}, {"heading": "5.2 Partially Separated Representations", "text": "Not all models show such clean semantic clustering. Sometimes we observed joint embeddings in some regions of space coexisting with separate large clusters which contained many attention vectors from just one language pair.\nFor example, Figure 3a shows a t-SNE projection of attention vectors from a model that was trained on Portuguese\u2192English (blue) and English\u2192Spanish (yellow) and performing zero-shot translation from Portuguese\u2192Spanish (red). This projection shows 153 semantically identical triples translated as described above, yielding 459 total translations. The large red region on the left primarily contains zero-shot Portuguese\u2192Spanish translations. In other words, for a significant number of sentences, the zero-shot translation has a different embedding than the two trained translation directions. On the other hand, some zero-shot translation vectors do seem to fall near the embeddings found in other languages, as on the large region on the right.\nIt is natural to ask whether the large cluster of \u201cseparated\u201d zero-shot translations has any significance. A definitive answer requires further investigation, but in this case zero-shot translations in the separated area do tend to have lower BLEU scores.\nTo measure the relationship between translation quality and distance between embeddings of the same semantic sentence, we first calculated BLEU scores for each translation. (This is possible since all triples of phrases were extracted from ground truth data.) Next, we needed to define a dissimilarity measure for embeddings of different sentences, accounting for the fact that two sentences might consist of different numbers of wordpieces. To do so, for a sentence of n wordpieces w0, w1, . . . , wn\u22121 where the i th wordpiece\n2https://www.tensorflow.org/versions/master/how_tos/embedding_viz/index.html\nhas been embedded at yi \u2208 R1024, we defined a curve \u03b3 : [0, 1]\u2192 R1024 at \u201ccontrol points\u201d of the form in\u22121 by:\n\u03b3 ( i n\u2212 1 ) = yi\nand use linear interpolation to define \u03b3 between these points. The dissimilarity between two curves \u03b31 and \u03b32, where m is the maximum number of wordpieces in both sentences, is defined by\ndissimilarity(\u03b31, \u03b32) = 1 m m\u22121\u2211 i=0 d ( \u03b31 ( i m\u2212 1 ) , \u03b32 ( i m\u2212 1 )) From Figure 3b we can see that the value of this dissimilarity score is correlated with the quality of the zero-shot translation with a Pearson correlation coefficient of \u22120.42, indicating moderate correlation. An interesting area for future research is to find a more reliable correspondence between embedding geometry and model performance to predict the quality of a zero-shot translation during decoding by comparing it to the embedding of the translation through a trained language pair."}, {"heading": "6 Mixing Languages", "text": "Having a mechanism to translate from a random source language to a single chosen target language using an additional source token made us think about what happens when languages are mixed on the source or target side. In particular, we were interested in the following two experiments:\n1. Can a multilingual model successfully handle multi-language input (code-switching), when it happens in the middle of the sentence?\n2. What happens when a multilingual model is triggered not with a single but two target language tokens weighted such that their weight adds up to one (the equivalent of merging the weighted embeddings of these tokens)?\nThe following two section discuss these experiments."}, {"heading": "6.1 Source Language Code-Switching", "text": "In this section we show how multilingual models deal with source language code-switching. Here we show an example from a multilingual model that was trained with Japanese,Korean\u2192English data. Using this model, mixing Japanese and Korean in the source produces in many cases correct English translations, showing the code-switching can be handled by this model, although no such code-switching samples were present in the training data. Note that the model can effectively handle the different typographic scripts since the individual characters/wordpieces are present in our wordpiece vocabulary.\n\u2022 Japanese: \u79c1\u306f\u6771\u4eac\u5927\u5b66\u306e\u5b66\u751f\u3067\u3059\u3002 \u2192 I am a student at Tokyo University.\n\u2022 Korean: \u1102\u1161\u1102\u1173\u11ab \u1103\u1169\u110f\u116d \u1103\u1162\u1112\u1161\u11a8\u110b\u1174 \u1112\u1161\u11a8\u1109\u1162\u11bc\u110b\u1175\u11b8\u1102\u1175\u1103\u1161. \u2192 I am a student at Tokyo University.\n\u2022 Mixed Japanese/Korean: \u79c1\u306f\u6771\u4eac\u5927\u5b66\u1112\u1161\u11a8\u1109\u1162\u11bc\u110b\u1175\u11b8\u1102\u1175\u1103\u1161. \u2192 I am a student of Tokyo University.\nInterestingly, the translation for the mixed-language input differs slightly from both of the single source language translations. In practice, it is not too hard to find examples where code-switching in the input does not result in good outputs; in some cases the model will simply copy parts of the source sentence instead of translating it."}, {"heading": "6.2 Weighted Target Language Selection", "text": "In this section we test what happens when we mix target languages. We take a multilingual model trained with multiple target languages, for example, English\u2192{Japanese, Korean}. Then instead of feeding the embedding vector for \u201c<2ja>\u201d to the bottom layer of the encoder LSTM, we feed a linear combination\n(1\u2212w)<2ja>+w<2ko>. Clearly, for w = 0 the model should produce Japanese, for w = 1 it should produce Korean, but what happens in between?\nOne expectation could be that the model will output some sort of intermediate language (\u201cJaparean\u201d), but the results turn out to be less surprising. Most of the time the output just switches from one language to another around w = 0.5. In some cases, for intermediate values of w the model switches languages mid-sentence.\nA possible explanation for this behavior is that the target language model, implicitly learned by the decoder LSTM, may make it very hard to mix words from different languages, especially when these languages use different scripts. In addition, since the token which defines the requested target language is placed at the beginning of the sentence, the further the decoder progresses, the less likely it is to put attention on this token, and instead the choice of language is determined by previously generated target words.\nTable 7 shows examples of mixed target language using three different multilingual models. It is interesting that in the first example (Russian/Belarusian) the model switches from Russian to Ukrainian (underlined) as target language first before finally switching to Belarusian. In the second example (Japanese/Korean), we observe an even more interesting transition from Japanese to Korean, where the model gradually changes the grammar from Japanese to Korean. At wko = 0.58, the model translates the source sentence into a mix of Japanese and Korean at the beginning of the target sentence. At wko = 0.60, the source sentence is translated into full Korean, where all of the source words are captured, however, the ordering of the words does not look natural. Interestingly, when the wko is increased up to 0.7, the model starts to translate the source sentence into a Korean sentence that sounds more natural.3"}, {"heading": "7 Conclusion", "text": "We present a simple and elegant solution to multilingual NMT. We show that we can train multilingual NMT models that can be used to translate between a number of different languages using a single model where all parameters are shared, which as a positive side-effect also improves the translation quality of low-resource languages in the mix. We also show that zero-shot translation without explicit bridging is possible using these models, which is the first time to our knowledge that a form of true transfer learning has been shown to work for machine translation. To explicitly improve the zero-shot translation quality, we explore two different ways of adding available parallel data and find that small additional amounts are sufficient to reach satisfactory results. In our largest experiment we merge 12 language pairs into a single model of the same size as each single language pair model, and achieve only slightly lower translation quality as for the single language pair baselines despite the drastically reduced amount of modeling capacity per language in the multilingual model. Visual interpretation of the results shows that these models learn a form of interlingua representation for the multilingual model between all involved language pairs. The simple architecture makes it possible to mix languages on the source or target side to yield some interesting translation examples. Our approach has been shown to work reliably in a Google-scale production setting and enables us to scale to a large number of languages quickly."}, {"heading": "Acknowledgements", "text": "We would like to thank the entire Google Brain Team and Google Translate Team for their foundational contributions to this project. In particular, we thank Junyoung Chung for his insights on the topic and Alex Rudnick and Otavio Good for helpful suggestions."}], "references": [{"title": "Tensorflow: A system for large-scale machine learning", "author": ["M. Abadi", "P. Barham", "J. Chen", "Z. Chen", "A. Davis", "J. Dean", "M. Devin", "S. Ghemawat", "G. Irving", "M. Isard", "M. Kudlur", "J. Levenberg", "R. Monga", "S. Moore", "D.G. Murray", "B. Steiner", "P. Tucker", "V. Vasudevan", "P. Warden", "M. Wicke", "Y. Yu", "X. Zheng"], "venue": "Tech. rep., Google Brain,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["D. Bahdanau", "K. Cho", "Y. Bengio"], "venue": "In International Conference on Learning Representations", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "Does multimodality help human and machine for translation and image captioning", "author": ["O. Caglayan", "W. Aransa", "Y. Wang", "M. Masana", "M. Garc\u00eda-Mart\u00ednez", "F. Bougares", "L. Barrault", "J. van de Weijer"], "venue": "In Proceedings of the First Conference on Machine Translation (Berlin,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2016}, {"title": "Multitask learning", "author": ["R. Caruana"], "venue": "In Learning to learn. Springer,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1998}, {"title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation", "author": ["K. Cho", "B. van Merrienboer", "\u00c7. G\u00fcl\u00e7ehre", "D. Bahdanau", "F. Bougares", "H. Schwenk", "Y. Bengio"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Multi-task learning for multiple language translation", "author": ["D. Dong", "H. Wu", "W. He", "D. Yu", "H. Wang"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing of the Asian Federation of Natural Language Processing,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2015}, {"title": "Multi-way, multilingual neural machine translation with a shared attention mechanism", "author": ["O. Firat", "K. Cho", "Y. Bengio"], "venue": "In NAACL HLT", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "Zero-resource translation with multi-lingual neural machine translation", "author": ["O. Firat", "B. Sankaran", "Y. Al-Onaizan", "F.T.Y. Vural", "K. Cho"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2016}, {"title": "Multilingual language processing from bytes", "author": ["D. Gillick", "C. Brunk", "O. Vinyals", "A. Subramanya"], "venue": "CoRR abs/1512.00103", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Fully character-level neural machine translation without explicit segmentation", "author": ["L. Jason", "K. Cho", "T. Hofmann"], "venue": "arXiv preprint arXiv:1610.03017", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2016}, {"title": "Multi-task sequence to sequence learning", "author": ["Luong", "M.-T", "Q.V. Le", "I. Sutskever", "O. Vinyals", "L. Kaiser"], "venue": "In International Conference on Learning Representations", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "Effective approaches to attention-based neural machine translation", "author": ["Luong", "M.-T", "H. Pham", "C.D. Manning"], "venue": "In Conference on Empirical Methods in Natural Language Processing", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Addressing the rare word problem in neural machine translation", "author": ["Luong", "M.-T", "I. Sutskever", "Q.V. Le", "O. Vinyals", "W. Zaremba"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Visualizing Data using t-SNE", "author": ["L.V.D. Maaten", "G. Hinton"], "venue": "Journal of Machine Learning Research", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Interlingual machine translation", "author": ["R.H. Richens"], "venue": "The Computer Journal 1,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1958}, {"title": "Multilingual speech processing", "author": ["T. Schultz", "K. Kirchhoff"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "Japanese and Korean voice", "author": ["M. Schuster", "K. Nakajima"], "venue": "IEEE International Conference on Acoustics, Speech and Signal Processing", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2012}, {"title": "On using very large target vocabulary for neural machine translation", "author": ["J. S\u00e9bastien", "C. Kyunghyun", "R. Memisevic", "Y. Bengio"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Controlling politeness in neural machine translation via side constraints. In NAACL HLT 2016, The 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies", "author": ["R. Sennrich", "B. Haddow", "A. Birch"], "venue": "San Diego California,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2016}, {"title": "Neural machine translation of rare words with subword units", "author": ["R. Sennrich", "B. Haddow", "A. Birch"], "venue": "In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2016}, {"title": "Sequence to sequence learning with neural networks", "author": ["I. Sutskever", "O. Vinyals", "Q.V. Le"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2014}, {"title": "Polyglot neural language models: A case study in cross-lingual phonetic representation learning", "author": ["Y. Tsvetkov", "S. Sitaram", "M. Faruqui", "G. Lample", "P. Littell", "D.R. Mortensen", "A.W. Black", "L.S. Levin", "C. Dyer"], "venue": "CoRR abs/1605.03832", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2016}, {"title": "Deep recurrent models with fast-forward connections for neural machine translation", "author": ["J. Zhou", "Y. Cao", "X. Wang", "P. Li", "W. Xu"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2016}, {"title": "Multi-source neural translation. In NAACL HLT 2016, The 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies", "author": ["B. Zoph", "K. Knight"], "venue": "San Diego California,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2016}], "referenceMentions": [{"referenceID": 20, "context": "Neural Machine Translation (NMT) [22, 2, 5] is an end-to-end approach to machine translation that has rapidly gained adoption in many large-scale settings [24].", "startOffset": 33, "endOffset": 43}, {"referenceID": 1, "context": "Neural Machine Translation (NMT) [22, 2, 5] is an end-to-end approach to machine translation that has rapidly gained adoption in many large-scale settings [24].", "startOffset": 33, "endOffset": 43}, {"referenceID": 4, "context": "Neural Machine Translation (NMT) [22, 2, 5] is an end-to-end approach to machine translation that has rapidly gained adoption in many large-scale settings [24].", "startOffset": 33, "endOffset": 43}, {"referenceID": 14, "context": "Interlingual translation is a classic method in machine translation [16, 10].", "startOffset": 68, "endOffset": 76}, {"referenceID": 20, "context": "Neural Machine Translation [22, 2, 5] is a promising end-to-end learning approach to machine translation which quickly was extended to multilingual machine translation in various ways.", "startOffset": 27, "endOffset": 37}, {"referenceID": 1, "context": "Neural Machine Translation [22, 2, 5] is a promising end-to-end learning approach to machine translation which quickly was extended to multilingual machine translation in various ways.", "startOffset": 27, "endOffset": 37}, {"referenceID": 4, "context": "Neural Machine Translation [22, 2, 5] is a promising end-to-end learning approach to machine translation which quickly was extended to multilingual machine translation in various ways.", "startOffset": 27, "endOffset": 37}, {"referenceID": 10, "context": "One early attempt is the work in [12] which proposed multilingual training in a multitask learning setting.", "startOffset": 33, "endOffset": 37}, {"referenceID": 5, "context": "Similarly in [6], the authors modify an attention-based encoder-decoder approach to perform multilingual NMT by adding a separate decoder and attention mechanism for each target language.", "startOffset": 13, "endOffset": 16}, {"referenceID": 2, "context": "In [3] the authors incorporate multiple modalities other than text into the encoder-decoder framework.", "startOffset": 3, "endOffset": 6}, {"referenceID": 23, "context": "For instance, in [26] a form of multi-source translation was proposed where the model has multiple different encoders and different attention mechanisms for each source language.", "startOffset": 17, "endOffset": 21}, {"referenceID": 6, "context": "Most closely related to our approach is [7] in which the authors propose multi-way multilingual NMT using a single shared attention mechanism but multiple encoders/decoders for each source/target language.", "startOffset": 40, "endOffset": 43}, {"referenceID": 9, "context": "Recently in [11] a CNN-based character-level encoder was proposed which is shared across multiple source languages.", "startOffset": 12, "endOffset": 16}, {"referenceID": 3, "context": "Our approach is related to the multitask learning framework [4].", "startOffset": 60, "endOffset": 63}, {"referenceID": 15, "context": "In speech recognition, there have been many successful reports of modeling multiple languages using a single model (see [17] for an extensive reference and references therein).", "startOffset": 120, "endOffset": 124}, {"referenceID": 8, "context": "Multilingual language processing has also shown to be successful in domains other than translation [9, 23].", "startOffset": 99, "endOffset": 106}, {"referenceID": 21, "context": "Multilingual language processing has also shown to be successful in domains other than translation [9, 23].", "startOffset": 99, "endOffset": 106}, {"referenceID": 18, "context": "In an approach similar to ours in spirit, but with a very different purpose, the NMT framework has been extended to control the politeness level of the target translation by adding a special token to the source sentence in [20].", "startOffset": 223, "endOffset": 227}, {"referenceID": 7, "context": "Zero-shot translation was the direct goal of [8].", "startOffset": 45, "endOffset": 48}, {"referenceID": 16, "context": "We use a shared wordpiece model [18, 21] across all the source and target data used for training, usually with 32,000 word pieces.", "startOffset": 32, "endOffset": 40}, {"referenceID": 19, "context": "We use a shared wordpiece model [18, 21] across all the source and target data used for training, usually with 32,000 word pieces.", "startOffset": 32, "endOffset": 40}, {"referenceID": 0, "context": "All training is carried out as in our general NMT pipeline as described in [24] and implemented in TensorFlow [1].", "startOffset": 110, "endOffset": 113}, {"referenceID": 12, "context": "In both cases, we use newstest2014 as the test sets to compare against previous work [14, 19, 25, 24].", "startOffset": 85, "endOffset": 101}, {"referenceID": 17, "context": "In both cases, we use newstest2014 as the test sets to compare against previous work [14, 19, 25, 24].", "startOffset": 85, "endOffset": 101}, {"referenceID": 22, "context": "In both cases, we use newstest2014 as the test sets to compare against previous work [14, 19, 25, 24].", "startOffset": 85, "endOffset": 101}, {"referenceID": 11, "context": "Despite training on WMT\u201914 data, which is somewhat smaller than WMT\u201915, we test our De\u2192En model on newstest2015, similar to [13].", "startOffset": 124, "endOffset": 128}, {"referenceID": 20, "context": "We evaluate our models using the standard BLEU score metric and to make our results comparable to [24, 22, 14, 25], we report tokenized BLEU score as computed by the multi-bleu.", "startOffset": 98, "endOffset": 114}, {"referenceID": 12, "context": "We evaluate our models using the standard BLEU score metric and to make our results comparable to [24, 22, 14, 25], we report tokenized BLEU score as computed by the multi-bleu.", "startOffset": 98, "endOffset": 114}, {"referenceID": 22, "context": "We evaluate our models using the standard BLEU score metric and to make our results comparable to [24, 22, 14, 25], we report tokenized BLEU score as computed by the multi-bleu.", "startOffset": 98, "endOffset": 114}, {"referenceID": 13, "context": "Since attention vectors are high-dimensional, we use the TensorFlow Embedding Projector2 to map them into more accessible 3D space via t-SNE [15].", "startOffset": 141, "endOffset": 145}, {"referenceID": 0, "context": "has been embedded at yi \u2208 R1024, we defined a curve \u03b3 : [0, 1]\u2192 R1024 at \u201ccontrol points\u201d of the form i n\u22121 by:", "startOffset": 56, "endOffset": 62}], "year": 2016, "abstractText": "We propose a simple, elegant solution to use a single Neural Machine Translation (NMT) model to translate between multiple languages. Our solution requires no change in the model architecture from our base system but instead introduces an artificial token at the beginning of the input sentence to specify the required target language. The rest of the model, which includes encoder, decoder and attention, remains unchanged and is shared across all languages. Using a shared wordpiece vocabulary, our approach enables Multilingual NMT using a single model without any increase in parameters, which is significantly simpler than previous proposals for Multilingual NMT. Our method often improves the translation quality of all involved language pairs, even while keeping the total number of model parameters constant. On the WMT\u201914 benchmarks, a single multilingual model achieves comparable performance for English\u2192French and surpasses state-of-the-art results for English\u2192German. Similarly, a single multilingual model surpasses state-of-the-art results for French\u2192English and German\u2192English on WMT\u201914 and WMT\u201915 benchmarks respectively. On production corpora, multilingual models of up to twelve language pairs allow for better translation of many individual pairs. In addition to improving the translation quality of language pairs that the model was trained with, our models can also learn to perform implicit bridging between language pairs never seen explicitly during training, showing that transfer learning and zero-shot translation is possible for neural translation. Finally, we show analyses that hints at a universal interlingua representation in our models and show some interesting examples when mixing languages.", "creator": "LaTeX with hyperref package"}}}