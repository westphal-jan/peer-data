{"id": "1701.06547", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jan-2017", "title": "Adversarial Learning for Neural Dialogue Generation", "abstract": "in this paper, drawing prior intuition concepts from the primitive turing reward test, we propose using novel adversarial training model for early open - domain dialogue generation : fortunately the system is trained frequently to produce sequences that absolutely are indistinguishable outputs from all human - generated robotic dialogue with utterances. ideally we cast the same task as achieving a universal reinforcement error learning ( # rl ) problem posed where we jointly train two systems, a generative conditioning model to produce innate response processing sequences, interfaces and a discriminator - - - analagous stimulus to employ the imperfect human evaluator developed in the contemporary turing test - - - to informally distinguish interference between creating the human - artificial generated dialogues and the machine - computer generated ones. the outputs from the discriminator are then intentionally used as temporary rewards for stimulating the evolving generative model, pushing together the system to generate spontaneous dialogues dialogues that sound mostly resemble original human dialogues.", "histories": [["v1", "Mon, 23 Jan 2017 18:32:27 GMT  (4857kb)", "http://arxiv.org/abs/1701.06547v1", null], ["v2", "Thu, 26 Jan 2017 01:42:13 GMT  (4851kb)", "http://arxiv.org/abs/1701.06547v2", null], ["v3", "Fri, 10 Feb 2017 14:02:56 GMT  (4842kb)", "http://arxiv.org/abs/1701.06547v3", null], ["v4", "Wed, 22 Feb 2017 08:36:59 GMT  (4842kb)", "http://arxiv.org/abs/1701.06547v4", null], ["v5", "Sun, 24 Sep 2017 01:44:39 GMT  (259kb)", "http://arxiv.org/abs/1701.06547v5", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["jiwei li", "will monroe", "tianlin shi", "s\u00e9bastien jean", "alan ritter", "dan jurafsky"], "accepted": true, "id": "1701.06547"}, "pdf": {"name": "1701.06547.pdf", "metadata": {"source": "CRF", "title": "Adversarial Learning for Neural Dialogue Generation", "authors": ["Jiwei Li", "Will Monroe", "Tianlin Shi", "Alan Ritter", "Dan Jurafsky"], "emails": ["jiweil@stanford.edu", "wmonroe4@stanford.edu", "tianlins@stanford.edu", "jurafsky@stanford.edu", "ritter.1492@osu.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 1.\n06 54\n7v 1\n[ cs\n.C L\n] 2\n3 Ja\nn 20\n17\nIn this paper, drawing intuition from the Turing test, we propose using adversarial training for open-domain dialogue generation: the system is trained to produce sequences that are indistinguishable from human-generated dialogue utterances. We cast the task as a reinforcement learning (RL) problem where we jointly train two systems, a generative model to produce response sequences, and a discriminator\u2014analagous to the human evaluator in the Turing test\u2014 to distinguish between the human-generated dialogues and the machine-generated ones. The outputs from the discriminator are then used as rewards for the generative model, pushing the system to generate dialogues that mostly resemble human dialogues.\nIn addition to adversarial training we describe a model for adversarial evaluation that uses success in fooling an adversary as a dialogue evaluation metric, while avoiding a number of potential pitfalls. Experimental results on several metrics, including adversarial evaluation, demonstrate that the adversarially-trained system generates higher-quality responses than previous baselines. 1"}, {"heading": "1 Introduction", "text": "Open domain dialogue generation (Ritter et al., 2011; Sordoni et al., 2015; Xu et al., 2016; Wen et al., 2016; Li et al., 2016b; Serban et al., 2016c,e) aims at generating meaningful and\n1Code to be found at https://www.stanford.edu/\u02dcjiweil/\ncoherent dialogue responses given input dialogue history. Prior systems, e.g., phrase-based machine translation systems (Ritter et al., 2011; Sordoni et al., 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function. Despite its success, many issues emerge resulting from this over-simplified training objective: responses are highly dull and generic (Sordoni et al., 2015; Serban et al., 2016a; Li et al., 2016a), repetitive and short-sighted (Li et al., 2016d).\nSolutions to these problems require answering a few fundamental questions: what are the crucial aspects that define an ideal conversation, how can we quantitatively measure them, and how can we incorporate them into a machine learning system? For example, Li et al. (2016d) manually define three types of ideal dialogue properties such as ease of answering, informativeness and coherence, and use a reinforcement-learning framework to train the model to generate highly rewarded responses. Yu et al. (2016b) use keyword retrieval confidence as a reward. However, it is widely acknowledged that manually defined reward functions can\u2019t possibly cover all crucial aspects and can lead to suboptimal generated utterances.\nA good dialogue model should generate utterances indistinguishable from human dialogues. Such a goal suggests a training objective resembling the idea of the Turing test (Turing, 1950). We borrow the idea of adversarial training (Goodfellow et al., 2014; Denton et al., 2015) in computer vision, in which we jointly train two models, a generator (which takes the form of the neural SEQ2SEQ model) that defines the probability of generating a dialogue sequence, and\na discriminator that labels dialogues as humangenerated or machine-generated. This discriminator is analogous to the evaluator in the Turing test. We cast the task as a reinforcement learning problem, in which the quality of machine-generated utterances is measured by its ability to fool the discriminator into believing that it is a humangenerated one. The output from the discriminator is used as a reward to the generator, pushing it to generate utterances indistinguishable from humangenerated dialogues.\nThe idea of a Turing test\u2014employing an evaluator to distinguish machine-generated texts from human-generated ones\u2014can be applied not only to training but also testing, where it goes by the name of adversarial evaluation. Adversarial evaluation was first employed in Bowman et al. (2015) to evaluate sentence generation quality, and preliminarily studied in the context of dialogue generation by Kannan and Vinyals (2016). In this paper, we discuss potential pitfalls of adversarial evaluations and necessary steps to avoid them and make evaluation reliable.\nExperimental results demonstrate that our approach produces more interactive, interesting, and non-repetitive responses than standard SEQ2SEQ models trained using the MLE objective function."}, {"heading": "2 Related Work", "text": "Dialogue generation Response generation for dialogue can be viewed as a source-to-target transduction problem. Ritter et al. (2011) frame the response generation problem as a statistical machine translation (SMT) problem. Sordoni et al. (2015) improved Ritter et al.\u2019s system by rescoring the outputs of a phrasal SMT-based conversation system with a neural model that incorporates prior context. Recent progress in SEQ2SEQ models have inspired several efforts (Vinyals and Le, 2015; Serban et al., 2016a,d; Luan et al., 2016) to build end-to-end conversational systems which first apply an encoder to map a message to a distributed vector representing its semantics and then generate a response from the message vector.\nOur work adapts the encoder-decoder model to RL training, and can thus be viewed as an extension of Li et al. (2016d), but with more general RL rewards. Li et al. (2016d) simulate dialogues between two virtual agents, using policy gradient methods to reward sequences that display three useful conversational properties: informativity, coherence, and ease of answering. Our work\nis also related to recent efforts to integrate the SEQ2SEQ and reinforcement learning paradigms, drawing on the advantages of both (Wen et al., 2016). For example, Su et al. (2016) combine reinforcement learning with neural generation on tasks with real users. Recent work from Asghar et al. (2016) trains an end-to-end RL dialogue model using human users.\nDialogue quality is traditionally evaluated (Sordoni et al., 2015, e.g.) using word-overlap metrics such as BLEU and METEOR scores used for machine translation. Some recent work (Liu et al., 2016) has started to look at more flexible and reliable evaluation metrics such as humanrating prediction (Lowe et al., 2016a) and next utterance classification (Lowe et al., 2016b).\nAdversarial networks The idea of generative adversarial networks has enjoyed great success in computer vision (Radford et al., 2015; Chen et al., 2016a; Salimans et al., 2016). Training is formalized as a game in which the generative model is trained to generate outputs to fool the discriminator; the technique has been successfully applied to image generation.\nHowever, to the best of our knowledge, this idea has not achieved comparable success in NLP. This is due to the fact that unlike in vision, text generation is discrete, which makes the error outputted from the discriminator hard to backpropagate to the generator. Some recent work has begun to address this issue: Lamb et al. (2016) propose providing the discriminator with the intermediate hidden vectors of the generator rather than its sequence outputs. Such a strategy makes the system differentiable and achieves promising results in tasks like character-level language modeling and handwriting generation. Yu et al. (2016a) use policy gradient reinforcement learning to backpropagate the error from the discriminator, showing improvement in multiple generation tasks such as poem generation, speech language generation and music generation. Outside of sequence generation, Chen et al. (2016b) apply the idea of adversarial training to sentiment analysis and Zhang et al. (2017) apply the idea to domain adaptation tasks.\nOur work is distantly related to recent work that formalizes sequence generation as an action-taking problem in reinforcement learning. Ranzato et al. (2015) train RNN decoders in a SEQ2SEQ model using policy gradient, and they obtain competitive machine translation results.\nBahdanau et al. (2016) take this a step further by training an actor-critic RL model for machine translation. Also related is recent work (Shen et al., 2015; Wiseman and Rush, 2016) to address the issues of exposure bias and lossevaluation mismatch in neural machine translation."}, {"heading": "3 Adversarial Training for Dialogue Generation", "text": "In this section, we describe in detail the components of the proposed adversarial reinforcement learning model. The problem can be framed as follows: given a dialogue history x consisting of a sequence of dialogue utterances,2 the model needs to generate a response y = {y1, y2, ..., yT }. We view the process of sentence generation as a sequence of actions that are taken according to a policy defined by an encoder-decoder recurrent neural networks."}, {"heading": "3.1 Adversarial REINFORCE", "text": "The adversarial REINFORCE algorithm consists of two components: a generative model G and a discriminative model D.\nGenerative model The generative model G defines the policy that generates a response y given dialogue history x. It takes a form similar to SEQ2SEQ models, which first map the source input to a vector representation using a recurrent net and then compute the probability of generating each token in the target using a softmax function.\nDiscriminative model The discriminative model D is a binary classifier that takes as input a sequence of dialogue utterances {x, y} and outputs a label indicating whether the input is generated by humans or machines. The input dialogue is encoded into a vector representation using a hierarchical encoder (Li et al., 2015; Serban et al., 2016b),3 which is then fed to a 2-class softmax function, returning the probability of the input dialogue episode being a machinegenerated dialogue (denoted Q\u2212({x, y})) or a human-generated dialogue (denoted Q+({x, y})).\n2We approximate the dialogue history using the concatenation of two preceding utterances. We found that using more than 2 context utterances yields very tiny performance improvements for SEQ2SEQ models.\n3To be specific, each utterance p or q is mapped to a vector representation hp or hq using LSTM (Hochreiter and Schmidhuber, 1997). Another LSTM is put on sentence level, mapping the entire dialogue sequence to a single representation\nPolicy Gradient Training The key idea of the system is to encourage the generator to generate utterances that are indistinguishable from human generated dialogues. We use policy gradient methods to achieve such a goal, in which the score of current utterances being human-generated ones assigned by the discriminator (i.e., Q+({x, y})) is used as a reward for the generator, which is trained to maximize the expected reward of generated utterance(s) using the REINFORCE algorithm (Williams, 1992):\nJ(\u03b8) = Ey\u223cp(y|x)(Q+({x, y})|\u03b8) (1)\nGiven the input dialogue history x, the bot generates a dialogue utterance y by sampling from the policy. The concatenation of the generated utterance y and the input x is fed to the discriminator. The gradient of (1) is approximated using the likelihood ratio trick (Williams, 1992; Glynn, 1990; Aleksandrov et al., 1968):\n\u2207J(\u03b8) \u2248 [Q+({x, y}) \u2212 b({x, y})]\n\u2207 log \u03c0(y|x)\n= [Q+({x, y}) \u2212 b({x, y})]\n\u2207 \u2211\nt\nlog p(yt|x, y1:t\u22121) (2)\nwhere \u03c0 denotes the probability of the generated responses. b({x, y}) denotes the baseline value to reduce the variance of the estimate while keeping it unbiased.4 The discriminator is simultaneously updated with the human generated dialogue that contains dialogue history x as a positive example and the machine-generated dialogue as a negative example."}, {"heading": "3.2 Reward for Every Generation Step (REGS)", "text": "The REINFORCE algorithm described has the disadvantage that the expectation of the reward is approximated by only one sample, and the reward associated with this sample (i.e., [Q+({x, y}) \u2212 b({x, y})] in Eq(2)) is used for all actions (the generation of each token) in the generated sequence. Suppose, for example, the input history is what\u2019s\n4 Like Ranzato et al. (2015), we train another neural network model (the critic) to estimate the value (or future reward) of current state (i.e., the dialogue history) under the current policy \u03c0. The critic network takes as input the dialogue history, transforms it to a vector representation using a hierarchical network and maps the representation to a scalar. The network is optimized based on the mean squared loss between the estimated reward and the real reward.\nyour name, the human-generated response is I am John, and the machine-generated response is I don\u2019t know. The vanilla REINFORCE model assigns the same negative reward to all tokens within the human-generated response (i.e., I, don\u2019t, know), whereas proper credit assignment in training would give separate rewards, most likely a neutral reward for the token I, and negative rewards to don\u2019t and know. We call this reward for every generation step, abbreviated REGS.\nRewards for intermediate steps or partially decoded sequences are thus necessary. Unfortunately, the discriminator is trained to assign scores to fully generated sequences, but not partially decoded ones. We propose two strategies for computing intermediate step rewards by (1) using Monte Carlo (MC) search and (2) training a discriminator that is able to assign rewards to partially decoded sequences.\nIn (1) Monte Carlo search, given a partially decoded sP , the model keeps sampling tokens from the distribution until the decoding finishes. Such a process is repeated N (set to 5) times and the N generated sequences will share a common prefix sP . These N sequences are fed to the discriminator, the average score of which is used as a reward for the sP . A similar strategy is adopted in Yu et al. (2016a). The downside of MC is that it requires repeating the sampling process for each prefix of each sequence and is thus significantly time-consuming.5\nIn (2), we directly train a discriminator that is able to assign rewards to both fully and partially decoded sequences. We break the generated sequences into partial sequences, namely {y+1:t} N Y + t=1 and {y\u22121:t} N Y \u2212 t=1 and use all instances in {y + 1:t} N Y + t=1 as positive examples and instances {y\u22121:t} N Y \u2212\nt=1 as negative examples. The problem with such a strategy is that earlier actions in a sequence are shared among multiple training examples for the discriminator (for example, token y+1 is contained in all partially generated sequences, which results in overfitting. To mitigate this problem, we adopt a strategy similar to when training value networks in AlphaGo (Silver et al., 2016), in which for each collection of subsequences of Y , we randomly\n5Consider one target sequence with length 20, we need to sample 5*20=100 full sequences to get rewards for all intermediate steps. Training one batch with 128 examples roughly takes roughly 1 min on a single GPU, which is computationally intractable considering the size of the dialogue data we have. We thus parallelize the sampling processes, distributing jobs across 8 GPUs.\nsample only one example from {y+1:t} N Y + t=1 and one example from {y\u22121:t} N Y \u2212\nt=1 , which are treated as positive and negative examples to update the discriminator. Compared with the Monte Carlo search model, this strategy is significantly more time-effective, but comes with the weakness that the discriminator becomes less accurate after partially decoded sequences are added in as training examples. We find that the MC model performs better when training time is less of an issue.\nFor each partially-generated sequence Yt = y1:t, the discriminator gives a classification score Q+(x, Yt). We compute the baseline b(x, Yt) using a similar model to the vanilla REINFORCE model. This yields the following gradient to update the generator:\n\u2207J(\u03b8) \u2248 \u2211\nt\n(Q+(x, Yt)\u2212 b(x, Yt))\n\u2207 log p(yt|x, Y1:t\u22121) (3)\nComparing (3) with (2), we can see that the values for rewards and baselines are different among generated tokens in the same response.\nTeacher Forcing Practically, we find that updating the generative model only using Eq. 1 leads to unstable training for both vanilla Reinforce and REGS, with the perplexity value skyrocketing after training the model for a few hours (even when the generator is initialized using a pretrained SEQ2SEQ model). The reason this happens is that the generative model can only be indirectly exposed to the gold-standard target sequences through the reward passed back from the discriminator, and this reward is used to promote or discourage its (the generator\u2019s) own generated sequences. Such a training strategy is fragile: once the generator (accidentally) deteriorates in some training batches and the discriminator consequently does an extremely good job in recognizing sequences from the generator, the generator immediately gets lost. It knows that its generated sequences are bad based on the rewards outputted from the discriminator, but it does not know what sequences are good and how to push itself to generate these good sequences (the odds of generating a good response from random sampling are minute, due to the vast size of the space of possible sequences). Loss of the reward signal leads to a breakdown in the training process.\nTo alleviate this issue and give the generator more direct access to the gold-standard targets, we\npropose also feeding human generated responses to the generator for model updates. The most straightforward strategy is for the discriminator to automatically assign a reward of 1 (or other positive values) to the human generated responses and for the generator to use this reward to update itself on human generated examples. This can be seen as having a teacher intervene with the generator some fraction of the time and force it to generate the true responses, an approach that is similar to the professor-forcing algorithm of Lamb et al. (2016).\nA closer look reveals that this modification is the same as the standard training of SEQ2SEQ models, making the final training alternately update the SEQ2SEQ model using the adversarial objective and the MLE objective. One can think of the professor-forcing model as a regularizer to regulate the generator once it starts deviating from the training dataset.\nWe also propose another workaround, in which the discriminator first assigns a reward to a human generated example using its own model, and the generator then updates itself using this reward on the human generated example only if the reward is larger than the baseline value. Such a strategy has the advantage that different weights for model updates are assigned to different human generated examples (in the form of different reward values produced by the generator) and that human generated examples are always associated with non-negative weights.\nA review of the proposed model is shown in Figure 1."}, {"heading": "3.3 Training Details", "text": "We first pre-train the generative model by predicting target sequences given the dialogue history. We trained a SEQ2SEQ model (Sutskever et al., 2014) with an attention mechanism (Bahdanau et al., 2015; Luong et al., 2015) on the OpenSubtitles dataset. We followed protocols recommended by Sutskever et al. (2014), such as gradient clipping, mini-batch and learning rate decay. We also pre-train the discriminator. To generate negative examples, we decode part of the training data. Half of the negative examples are generated using beam-search with mutual information reranking as described in Li et al. (2016a), and the other half is generated from sampling.\nFor data processing, model training and decoding (both the proposed adversarial training model\nFor number of training iterations do . For i=1,D-steps do . Sample (X,Y) from real data . Sample Y\u0302 \u223c G(\u00b7|X) . Update D using (X,Y ) as positive examples and (X, Y\u0302 ) as negative examples. . End . . For i=1,G-steps do . Sample (X,Y) from real data . Sample Y\u0302 \u223c G(\u00b7|X) . Compute Reward r for (X, Y\u0302 ) using D. . Update G on (X, Y\u0302 ) using reward r . Teacher-Forcing: Update G on (X,Y ) . End End\nFigure 1: A brief review of the proposed adversarial reinforcement algorithm for training the generator G and discriminator D. The reward r from the discriminator D can be computed using different strategies according to whether using REINFORCE or REGS. The update of the generator G on (X, Y\u0302 ) can be done by either using Eq.2 or Eq.3. D-steps is set to 5 and G-steps is set to 1.\nand the standard SEQ2SEQ models), we employ a few strategies that improve response quality, including: (2) Remove training examples with the length of responses shorter than a threshold (set to 5). We find that this significantly improves the general response quality.6 (2) Instead of using the same learning rate for all examples, using a weighted learning rate that considers the average tf-idf score for tokens within the response. Such a strategy decreases the influence from dull and generic utterances.7 (3) Penalizing intra-sibling ranking when doing beam search decoding to promote N-best list diversity as described in Li et al. (2016c). (4) Penalizing word types (stop words excluded) that have already been generated. Such a strategy dramatically decreases the rate of repetitive responses such as no. no. no. no. no. or contradictory responses such as I don\u2019t like oranges but i like oranges.\n6To compensate for the loss of short responses, one can train a separate model using short sequences.\n7We treat each sentence as a document. Stop words are removed. Learning rates are normalized within one batch. For example, suppose t1, t2, ..., ti, ... ,tN denote the tf-idf scores for sentences within current batch and lr denotes the original learning rate. The learning rate for sentence with index i is N \u00b7 lr \u00b7 ti\u2211\ni\u2032 t i\u2032 . To avoid exploding learning rates for sequences with extremely rare words, the tf-idf score of a sentence is capped at L times the minimum tf-idf score in the current batch. L is empirically chosen and is set to 3."}, {"heading": "4 Adversarial Evaluation", "text": "In this section, we discuss details of strategies for successful adversarial evaluation. It is worth noting that the proposed adversarial training and adversarial evaluation are separate procedures.They are independent of each other and share no common parameters.\nThe idea of adversarial evaluation, first proposed by Bowman et al. (2015), is to train a discriminant function to separate generated and true sentences, in an attempt to evaluate the model\u2019s sentence generation capability. The idea has been preliminarily studied by Kannan and Vinyals (2016) in the context of dialogue generation. Adversarial evaluation also resembles the idea of the Turing test, which requires a human evaluator to distinguish machine-generated texts from humangenerated ones. Since it is time-consuming and costly to ask a human to talk to a model and give judgements, we train a machine evaluator in place of the human evaluator to distinguish the human dialogues and machine dialogues, and we use it to measure the general quality of the generated responses.\nAdversarial evaluation involves both training and testing. At training time, the evaluator is trained to label dialogues as machine-generated (negative) or human-generated (positive). At test time, the trained evaluator is evaluated on a heldout dataset. If the human-generated dialogues and machine-generated ones are indistinguishable, the model will achieve 50 percent accuracy at test time."}, {"heading": "4.1 Adversarial Success", "text": "We define Adversarial Success (AdverSuc for short) to be the fraction of instances in which a model is capable of fooling the evaluator. AdverSuc is the difference between 1 and the accuracy achieved by the evaluator. Higher values of AdverSuc for a dialogue generation model are better."}, {"heading": "4.2 Testing the Evaluator\u2019s Ability", "text": "One caveat with the adversarial evaluation methods is that they are model-dependent. We approximate the human evaluator in the Turing test with an automatic evaluator and assume that the evaluator is perfect: low accuracy of the discriminator should indicate high quality of the responses, since we interpret this to mean the generated responses are indistinguishable from the human ones. Unfortunately, there is another factor that can lead\nto low discriminative accuracy: a poor discriminative model. Consider a discriminator that always gives random labels or always gives the same label. Such an evaluator always yields a high AdverSuc value of 0.5. Bowman et al. (2015) propose two different discriminator models separately using unigram features and neural features. It is hard to tell which feature set is more reliable. The standard strategy of testing the model on a held-out development set is not suited to this case, since a model that overfits the development set is necessarily superior.\nTo deal with this issue, we propose setting up a few manually-invented situations to test the ability of the automatic evaluator. This is akin to setting up examinations to test the ability of the human evaluator in the Turing test. We report not only the AdverSuc values, but also the scores that the evaluator achieves in these manually-designed test cases, indicating how much we can trust the reported AdverSuc. We develop scenarios in which we know in advance how a perfect evaluator should behave, and then compare AdverSuc from a discriminative model with the gold-standard AdverSuc. Scenarios we design include:\n\u2022 We use human-generated dialogues as both positive examples and negative examples. A perfect evaluator should give an AdverSuc of 0.5 (accuracy 50%), which is the goldstandard result. \u2022 We use machine-generated dialogues as both positive examples and negative examples. A perfect evaluator should give an AdverSuc of 0.5 (accuracy 50%). \u2022 We use original human-generated dialogues as positive examples and dialogues consisting of random utterances as negative examples. A perfect evaluator should give an AdverSuc of 0 (accuracy 100%). \u2022 We use original human-generated dialogues as positive examples and dialogues with responses replaced by the utterances immediately following the true responses. A perfect evaluation should give an AdverSuc of 0 (accuracy 100%).\nThe evaluator reliability error (ERE) is the average deviation of an evaluator\u2019s adversarial error from the gold-standard error in the above tasks, with equal weight for each task. The smaller the error, the more reliable the evaluator is."}, {"heading": "4.3 Machine-vs-Random Accuracy", "text": "Evaluator reliability error uses scenarios constructed from human-generated dialogues to assess feature or hyper-parameter choice for the evaluator. Unfortunately, no machine-generated responses are involved in the ERE metric. The following example illustrates the serious weakness resulting from this strategy: as will be shown in the experiment section, when inputs are decoded using greedy or beam search models, most generation systems to date yield an adversarial success less than 10 percent (evaluator accuracy 90 percent). But when using sampling for decoding, the adversarial success skyrockets to around 40 percent,8 only 10 percent less than what\u2019s needed to pass the Turing test. A close look at the decoded sequences using sampling tells a different story: the responses from sampling are sometimes incoherent, irrelevant or even ungrammatical.\nWe thus propose an additional sanity check, in which we report the accuracy of distinguishing between machine-generated responses and randomly sampled responses (machine-vs-random for short). This resembles the N-choose-1 metric described in Shao et al. (2016). Higher accuracy indicates that the generated responses are distinguishable from randomly sampled human responses, indicating that the generative model is not fooling the generator simply by introducing randomness. As we will show in Sec. 5, using sampling results in high AdverSuc values but low machine-vs-random accuracy.\n8Similar results are also reported in Kannan and Vinyals (2016)."}, {"heading": "5 Experimental Results", "text": "In this section, we detail experimental results on adversarial success and human evaluation."}, {"heading": "5.1 Adversarial Evaluation", "text": "ERE We first test adversarial evaluation models with different feature sets and model architectures for reliability, as measured by evaluator reliability error (ERE). We explore the following models: (1) SVM+Unigram: SVM using unigram features.9 A multi-utterance dialogue (i.e., input messages and responses) is transformed to a unigram representation; (2) Concat Neural: a neural classification model with a softmax function that takes as input the concatenation of representations of constituent dialogues sentences; (3) Hierarchical Neural: a hierarchical encoder with a structure similar to the discriminator used in the reinforcement; and (4) SVM+Neural+multi-lex-features: a SVM model that uses the following features: unigrams, neural representations of dialogues obtained by the neural model trained using strategy (3),10 the forward likelihood log p(t|s) and backward likelihood p(s|t).\n9Trained using the SVM-Light package (Joachims, 2002). 10The representation before the softmax layer.\nERE scores obtained by different models are reported in Table 2. As can be seen, the hierarchical neural evaluator (model 3) is more reliable than simply concatenating the sentence-level representations (model 2). Using the combination of neural features and lexicalized features yields the most reliable evaluator. For the rest of this section, we report results obtained by the Hierarchical Neural setting due to its end-to-end nature, despite its inferiority to SVM+Neural+multil-features.\nTable 3 presents AdverSuc values for different models, along with machine-vs-random accuracy described in Section 4.3. Higher values of AdverSuc and machine-vs-random are better.\nBaselines we consider include standard SEQ2SEQ models using greedy decoding (MLEgreedy), beam-search (MLE+BS) and sampling, as well as the mutual information reranking model of Li et al. (2016a) with two algorithmic variations: (1) MMI+p(t|s), in which a large N-best list is first generated using a pre-trained SEQ2SEQ model and then reranked by the backward probability p(s|t) and (2) MMI\u2212p(t), in which language model probability is penalized during decoding.\nResults are shown in Table 3. What first stands out is decoding using sampling (as discussed in Section 4.3), achieving a significantly higher AdverSuc number than all the rest models. However, this does not indicate the superiority of the sampling decoding model, since the machine-vsrandom accuracy is at the same time significantly lower. This means that sampled responses based on SEQ2SEQ models are not only hard for an evaluator to distinguish from real human responses, but also from randomly sampled responses. A similar, though much less extreme, effect is observed for MMI\u2212p(t), which has an AdverSuc value slightly higher than Adver-Reinforce, but a significantly lower machine-vs-random score.\nBy comparing different baselines, we find that MMI+p(t|s) is better than MLE-greedy, which is in turn better than MLE+BS. This result is in line with human-evaluation results from Li et al. (2016a). The two proposed adversarial algorithms achieve better performance than the baselines. We expect this to be the case, since the adversarial algorithms are trained on an objective function more similar to the the evaluation metric (i.e., adversarial success). REGS performs slightly better than the vanilla REINFORCE algorithm."}, {"heading": "5.2 Human Evaluation", "text": "For human evaluation, we follow protocols defined in Li et al. (2016d), employing crowdsourced judges to evaluate a random sample of 200 items. We present both an input message and the generated outputs to 3 judges and ask them to decide which of the two outputs is better (singleturn general quality). Ties are permitted. Identical strings are assigned the same score. We also present the judges with multi-turn conversations simulated between the two agents. Each conversation consists of 3 turns. Results are presented in Table 4. We observe a significant quality improvement on both single-turn quality and multiturn quality from the proposed adversarial model. It is worth noting that the reinforcement learning system described in Li et al. (2016d), which simulates conversations between two bots and is trained based on manually designed reward functions, only improves multi-turn dialogue quality, while the model described in this paper improves both single-turn and multi-turn dialogue generation quality. This confirms that the reward adopted in adversarial training is more general, natural and effective in training dialogue systems."}, {"heading": "6 Conclusion and Future Work", "text": "In this paper, drawing intuitions from the Turing test, we propose using an adversarial training approach for response generation. We cast the model in the framework of reinforcement learning and train a generator based on the signal from a discriminator to generate response sequences indistinguishable from human-generated dialogues. We\nobserve clear performance improvements on multiple metrics from the adversarial training strategy.\nThe adversarial training model should theoretically benefit a variety of generation tasks in NLP. Unfortunately, in preliminary experiments applying the same training paradigm to machine translation, we did not observe a clear performance boost. We conjecture that this is because the adversarial training strategy is more beneficial to tasks in which there is a big discrepancy between the distributions of the generated sequences and the reference target sequences. In other words, the adversarial approach is more beneficial on tasks in which entropy of the targets is high. Exploring this relationship further is a focus of our future work.\nAcknowledgements The authors also want to thank Michel Galley, Bill Dolan, Chris Brockett, Jianfeng Gao and other members of the NLP group at Microsoft Research, as well as Sumit Chopra and Marc\u2019Aurelio Ranzato from the Facebook AI Research for helpful discussions and comments. Jiwei Li is supported by a Facebook Fellowship, which we gratefully acknowledge. This work is partially supported by the DARPA Communicating with Computers (CwC) program under ARO prime contract no. W911NF- 15-1-0462. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of DARPA or Facebook."}], "references": [{"title": "Stochastic optimization", "author": ["V.M. Aleksandrov", "V.I. Sysoyev", "V.V. Shemeneva."], "venue": "Engineering Cybernetics 5:11\u201316.", "citeRegEx": "Aleksandrov et al\\.,? 1968", "shortCiteRegEx": "Aleksandrov et al\\.", "year": 1968}, {"title": "Online sequence-to-sequence reinforcement learning for open-domain conversational agents", "author": ["Nabiha Asghar", "Pasca Poupart", "Jiang Xin", "Hang Li."], "venue": "arXiv preprint arXiv:1612.03929 .", "citeRegEx": "Asghar et al\\.,? 2016", "shortCiteRegEx": "Asghar et al\\.", "year": 2016}, {"title": "An actor-critic algorithm for sequence prediction", "author": ["Dzmitry Bahdanau", "Philemon Brakel", "Kelvin Xu", "Anirudh Goyal", "Ryan Lowe", "Joelle Pineau", "Aaron Courville", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1607.07086 .", "citeRegEx": "Bahdanau et al\\.,? 2016", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2016}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "Proc. of ICLR.", "citeRegEx": "Bahdanau et al\\.,? 2015", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Generating sentences from a continuous space", "author": ["Samuel R Bowman", "Luke Vilnis", "Oriol Vinyals", "Andrew M Dai", "Rafal Jozefowicz", "Samy Bengio."], "venue": "arXiv preprint arXiv:1511.06349 .", "citeRegEx": "Bowman et al\\.,? 2015", "shortCiteRegEx": "Bowman et al\\.", "year": 2015}, {"title": "Infogan: Interpretable representation learning by information maximizing generative adversarial nets", "author": ["Xi Chen", "Yan Duan", "Rein Houthooft", "John Schulman", "Ilya Sutskever", "Pieter Abbeel."], "venue": "Advances In Neural Information Processing Systems.", "citeRegEx": "Chen et al\\.,? 2016a", "shortCiteRegEx": "Chen et al\\.", "year": 2016}, {"title": "Adversarial deep averaging networks for cross-lingual sentiment classification", "author": ["Xilun Chen", "Ben Athiwaratkun", "Yu Sun", "Kilian Weinberger", "Claire Cardie."], "venue": "arXiv preprint arXiv:1606.01614 .", "citeRegEx": "Chen et al\\.,? 2016b", "shortCiteRegEx": "Chen et al\\.", "year": 2016}, {"title": "Deep generative image models using a? laplacian pyramid of adversarial networks. In Advances in neural information processing systems", "author": ["Emily L Denton", "Soumith Chintala", "Rob Fergus"], "venue": null, "citeRegEx": "Denton et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Denton et al\\.", "year": 2015}, {"title": "Likelihood ratio gradient estimation for stochastic systems", "author": ["Peter W Glynn."], "venue": "Communications of the ACM 33(10):75\u201384.", "citeRegEx": "Glynn.,? 1990", "shortCiteRegEx": "Glynn.", "year": 1990}, {"title": "Generative adversarial nets", "author": ["Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio."], "venue": "Advances in Neural Information Processing Systems. pages 2672\u20132680.", "citeRegEx": "Goodfellow et al\\.,? 2014", "shortCiteRegEx": "Goodfellow et al\\.", "year": 2014}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber."], "venue": "Neural computation 9(8):1735\u2013 1780.", "citeRegEx": "Hochreiter and Schmidhuber.,? 1997", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Learning to classify text using support vector machines: Methods, theory and algorithms", "author": ["Thorsten Joachims."], "venue": "Kluwer Academic Publishers.", "citeRegEx": "Joachims.,? 2002", "shortCiteRegEx": "Joachims.", "year": 2002}, {"title": "Adversarial evaluation of dialogue models", "author": ["Anjuli Kannan", "Oriol Vinyals."], "venue": "NIPS 2016 Workshop on Adversarial Training.", "citeRegEx": "Kannan and Vinyals.,? 2016", "shortCiteRegEx": "Kannan and Vinyals.", "year": 2016}, {"title": "Professor forcing: A new algorithm for training recurrent networks", "author": ["Alex Lamb", "Anirudh Goyal", "Ying Zhang", "Saizheng Zhang", "Aaron Courville", "Yoshua Bengio."], "venue": "Advances In Neural Information Processing Systems. pages 4601\u20134609.", "citeRegEx": "Lamb et al\\.,? 2016", "shortCiteRegEx": "Lamb et al\\.", "year": 2016}, {"title": "A diversity-promoting objective function for neural conversation models", "author": ["Jiwei Li", "Michel Galley", "Chris Brockett", "Jianfeng Gao", "Bill Dolan."], "venue": "Proc. of NAACL-HLT.", "citeRegEx": "Li et al\\.,? 2016a", "shortCiteRegEx": "Li et al\\.", "year": 2016}, {"title": "A persona-based neural conversation model", "author": ["Jiwei Li", "Michel Galley", "Chris Brockett", "Georgios Spithourakis", "Jianfeng Gao", "Bill Dolan."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1:", "citeRegEx": "Li et al\\.,? 2016b", "shortCiteRegEx": "Li et al\\.", "year": 2016}, {"title": "A hierarchical neural autoencoder for paragraphs and documents", "author": ["Jiwei Li", "Minh-Thang Luong", "Dan Jurafsky."], "venue": "arXiv preprint arXiv:1506.01057 .", "citeRegEx": "Li et al\\.,? 2015", "shortCiteRegEx": "Li et al\\.", "year": 2015}, {"title": "A simple, fast diverse decoding algorithm for neural generation", "author": ["Jiwei Li", "Will Monroe", "Dan Jurafsky."], "venue": "arXiv preprint arXiv:1611.08562 .", "citeRegEx": "Li et al\\.,? 2016c", "shortCiteRegEx": "Li et al\\.", "year": 2016}, {"title": "Deep reinforcement learning for dialogue generation", "author": ["Jiwei Li", "Will Monroe", "Alan Ritter", "Dan Jurafsky."], "venue": "arXiv preprint arXiv:1606.01541 .", "citeRegEx": "Li et al\\.,? 2016d", "shortCiteRegEx": "Li et al\\.", "year": 2016}, {"title": "How NOT to evaluate your dialogue system: An empirical study of unsupervised evaluation metrics for dialogue response generation", "author": ["Chia-Wei Liu", "Ryan Lowe", "Iulian V Serban", "Michael Noseworthy", "Laurent Charlin", "Joelle Pineau."], "venue": "arXiv preprint", "citeRegEx": "Liu et al\\.,? 2016", "shortCiteRegEx": "Liu et al\\.", "year": 2016}, {"title": "Towards an automatic turing test: Learning to evaluate dialogue responses", "author": ["Ryan Lowe", "Michael Noseworthy", "Iulian Serban", "Nicolas Angelard-Gontier", "Yoshua Bengio", "Joelle Pineau."], "venue": "arXiv preprint arXiv:1605.05414 .", "citeRegEx": "Lowe et al\\.,? 2016a", "shortCiteRegEx": "Lowe et al\\.", "year": 2016}, {"title": "On the evaluation of dialogue systems with next utterance classification", "author": ["Ryan Lowe", "Iulian V Serban", "Mike Noseworthy", "Laurent Charlin", "Joelle Pineau."], "venue": "arXiv preprint arXiv:1605.05414 .", "citeRegEx": "Lowe et al\\.,? 2016b", "shortCiteRegEx": "Lowe et al\\.", "year": 2016}, {"title": "LSTM based conversation models", "author": ["Yi Luan", "Yangfeng Ji", "Mari Ostendorf."], "venue": "arXiv preprint arXiv:1603.09457 .", "citeRegEx": "Luan et al\\.,? 2016", "shortCiteRegEx": "Luan et al\\.", "year": 2016}, {"title": "Effective approaches to attentionbased neural machine translation", "author": ["Minh-Thang Luong", "Hieu Pham", "Christopher D Manning."], "venue": "arXiv preprint arXiv:1508.04025 .", "citeRegEx": "Luong et al\\.,? 2015", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Unsupervised representation learning with deep convolutional generative adversarial networks", "author": ["Alec Radford", "Luke Metz", "Soumith Chintala."], "venue": "arXiv preprint arXiv:1511.06434 .", "citeRegEx": "Radford et al\\.,? 2015", "shortCiteRegEx": "Radford et al\\.", "year": 2015}, {"title": "Sequence level training with recurrent neural networks", "author": ["Marc\u2019Aurelio Ranzato", "Sumit Chopra", "Michael Auli", "Wojciech Zaremba"], "venue": null, "citeRegEx": "Ranzato et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ranzato et al\\.", "year": 2015}, {"title": "Data-driven response generation in social media", "author": ["Alan Ritter", "Colin Cherry", "William B Dolan."], "venue": "Proceedings of EMNLP 2011. pages 583\u2013593.", "citeRegEx": "Ritter et al\\.,? 2011", "shortCiteRegEx": "Ritter et al\\.", "year": 2011}, {"title": "Improved techniques for training gans", "author": ["Tim Salimans", "Ian Goodfellow", "Wojciech Zaremba", "Vicki Cheung", "Alec Radford", "Xi Chen."], "venue": "Advances in Neural Information Processing Systems. pages 2226\u20132234.", "citeRegEx": "Salimans et al\\.,? 2016", "shortCiteRegEx": "Salimans et al\\.", "year": 2016}, {"title": "Building end-to-end dialogue systems using generative hierarchical neural network models", "author": ["Iulian V Serban", "Alessandro Sordoni", "Yoshua Bengio", "Aaron Courville", "Joelle Pineau."], "venue": "Proceedings of AAAI.", "citeRegEx": "Serban et al\\.,? 2016a", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "Building end-to-end dialogue systems using generative hierarchical neural network models", "author": ["Iulian V Serban", "Alessandro Sordoni", "Yoshua Bengio", "Aaron Courville", "Joelle Pineau."], "venue": "Proceedings of the 30th AAAI Conference on Artificial Intelligence", "citeRegEx": "Serban et al\\.,? 2016b", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "Multiresolution recurrent neural networks: An application to dialogue response generation", "author": ["Iulian Vlad Serban", "Tim Klinger", "Gerald Tesauro", "Kartik Talamadupula", "Bowen Zhou", "Yoshua Bengio", "Aaron Courville."], "venue": "arXiv preprint", "citeRegEx": "Serban et al\\.,? 2016c", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "Generative deep neural networks for dialogue: A short review", "author": ["Iulian Vlad Serban", "Ryan Lowe", "Laurent Charlin", "Joelle Pineau"], "venue": null, "citeRegEx": "Serban et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "A hierarchical latent variable encoder-decoder model for generating dialogues", "author": ["Iulian Vlad Serban", "Alessandro Sordoni", "Ryan Lowe", "Laurent Charlin", "Joelle Pineau", "Aaron Courville", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1605.06069 .", "citeRegEx": "Serban et al\\.,? 2016e", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "Neural responding machine for short-text conversation", "author": ["Lifeng Shang", "Zhengdong Lu", "Hang Li."], "venue": "Proceedings of ACL-IJCNLP. pages 1577\u20131586.", "citeRegEx": "Shang et al\\.,? 2015", "shortCiteRegEx": "Shang et al\\.", "year": 2015}, {"title": "Generating long and diverse responses with neural conversational models", "author": ["Louis Shao", "Stephan Gouws", "Denny Britz", "Anna Goldie", "Brian Strope", "Ray Kurzweil"], "venue": null, "citeRegEx": "Shao et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Shao et al\\.", "year": 2016}, {"title": "Minimum risk training for neural machine translation", "author": ["Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu."], "venue": "arXiv preprint arXiv:1512.02433 .", "citeRegEx": "Shen et al\\.,? 2015", "shortCiteRegEx": "Shen et al\\.", "year": 2015}, {"title": "Mastering the game of Go with deep neural networks and tree", "author": ["David Silver", "Aja Huang", "Chris J Maddison", "Arthur Guez", "Laurent Sifre", "George Van Den Driessche", "Julian Schrittwieser", "Ioannis Antonoglou", "Veda Panneershelvam", "Marc Lanctot"], "venue": null, "citeRegEx": "Silver et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Silver et al\\.", "year": 2016}, {"title": "A neural network approach to context-sensitive generation of conversational responses", "author": ["Alessandro Sordoni", "Michel Galley", "Michael Auli", "Chris Brockett", "Yangfeng Ji", "Meg Mitchell", "JianYun Nie", "Jianfeng Gao", "Bill Dolan."], "venue": "Proceedings of", "citeRegEx": "Sordoni et al\\.,? 2015", "shortCiteRegEx": "Sordoni et al\\.", "year": 2015}, {"title": "Continuously learning neural dialogue management", "author": ["Pei-Hao Su", "Milica Gasic", "Nikola Mrksic", "Lina RojasBarahona", "Stefan Ultes", "David Vandyke", "TsungHsien Wen", "Steve Young."], "venue": "arxiv .", "citeRegEx": "Su et al\\.,? 2016", "shortCiteRegEx": "Su et al\\.", "year": 2016}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V Le."], "venue": "Advances in neural information processing systems. pages 3104\u20133112.", "citeRegEx": "Sutskever et al\\.,? 2014", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Computing machinery and intelligence", "author": ["Alan M Turing."], "venue": "Mind 59(236):433\u2013460.", "citeRegEx": "Turing.,? 1950", "shortCiteRegEx": "Turing.", "year": 1950}, {"title": "A neural conversational model", "author": ["Oriol Vinyals", "Quoc Le."], "venue": "Proceedings of ICML Deep Learning Workshop.", "citeRegEx": "Vinyals and Le.,? 2015", "shortCiteRegEx": "Vinyals and Le.", "year": 2015}, {"title": "A networkbased end-to-end trainable task-oriented dialogue system", "author": ["Tsung-Hsien Wen", "Milica Gasic", "Nikola Mrksic", "Lina M Rojas-Barahona", "Pei-Hao Su", "Stefan Ultes", "David Vandyke", "Steve Young."], "venue": "arXiv preprint arXiv:1604.04562 .", "citeRegEx": "Wen et al\\.,? 2016", "shortCiteRegEx": "Wen et al\\.", "year": 2016}, {"title": "Simple statistical gradientfollowing algorithms for connectionist reinforcement learning", "author": ["Ronald J Williams."], "venue": "Machine learning 8(3-4):229\u2013256.", "citeRegEx": "Williams.,? 1992", "shortCiteRegEx": "Williams.", "year": 1992}, {"title": "Sequence-to-sequence learning as beam-search optimization", "author": ["Sam Wiseman", "Alexander M Rush."], "venue": "arXiv preprint arXiv:1606.02960 .", "citeRegEx": "Wiseman and Rush.,? 2016", "shortCiteRegEx": "Wiseman and Rush.", "year": 2016}, {"title": "Incorporating loose-structured knowledge into LSTM with recall gate for conversation modeling", "author": ["Zhen Xu", "Bingquan Liu", "Baoxun Wang", "Chengjie Sun", "Xiaolong Wang."], "venue": "arXiv preprint arXiv:1605.05110 .", "citeRegEx": "Xu et al\\.,? 2016", "shortCiteRegEx": "Xu et al\\.", "year": 2016}, {"title": "Attention with intention for a neural network conversation model", "author": ["Kaisheng Yao", "Geoffrey Zweig", "Baolin Peng."], "venue": "NIPS workshop on Machine Learning for Spoken Language Understanding and Interaction.", "citeRegEx": "Yao et al\\.,? 2015", "shortCiteRegEx": "Yao et al\\.", "year": 2015}, {"title": "Seqgan: sequence generative adversarial nets with policy gradient", "author": ["Lantao Yu", "Weinan Zhang", "Jun Wang", "Yong Yu."], "venue": "arXiv preprint arXiv:1609.05473 .", "citeRegEx": "Yu et al\\.,? 2016a", "shortCiteRegEx": "Yu et al\\.", "year": 2016}, {"title": "Strategy and policy learning for nontask-oriented conversational systems", "author": ["Zhou Yu", "Ziyu Xu", "Alan W Black", "Alex I Rudnicky."], "venue": "17th Annual Meeting of the Special Interest Group on Discourse and Dialogue. page 404.", "citeRegEx": "Yu et al\\.,? 2016b", "shortCiteRegEx": "Yu et al\\.", "year": 2016}, {"title": "Aspect-augmented adversarial networks for domain adaptation", "author": ["Yuan Zhang", "Regina Barzilay", "Tommi Jaakkola."], "venue": "arXiv preprint arXiv:1701.00188 .", "citeRegEx": "Zhang et al\\.,? 2017", "shortCiteRegEx": "Zhang et al\\.", "year": 2017}], "referenceMentions": [{"referenceID": 26, "context": ", phrase-based machine translation systems (Ritter et al., 2011; Sordoni et al., 2015) or end-to-end neural systems (Shang et al.", "startOffset": 43, "endOffset": 86}, {"referenceID": 37, "context": ", phrase-based machine translation systems (Ritter et al., 2011; Sordoni et al., 2015) or end-to-end neural systems (Shang et al.", "startOffset": 43, "endOffset": 86}, {"referenceID": 33, "context": ", 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function.", "startOffset": 37, "endOffset": 134}, {"referenceID": 41, "context": ", 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function.", "startOffset": 37, "endOffset": 134}, {"referenceID": 14, "context": ", 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function.", "startOffset": 37, "endOffset": 134}, {"referenceID": 46, "context": ", 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function.", "startOffset": 37, "endOffset": 134}, {"referenceID": 22, "context": ", 2015) or end-to-end neural systems (Shang et al., 2015; Vinyals and Le, 2015; Li et al., 2016a; Yao et al., 2015; Luan et al., 2016) approximate such a goal by predicting the next dialogue utterance given the dialogue history using the maximum likelihood estimation (MLE) objective function.", "startOffset": 37, "endOffset": 134}, {"referenceID": 37, "context": "Despite its success, many issues emerge resulting from this over-simplified training objective: responses are highly dull and generic (Sordoni et al., 2015; Serban et al., 2016a; Li et al., 2016a), repetitive and short-sighted (Li et al.", "startOffset": 134, "endOffset": 196}, {"referenceID": 28, "context": "Despite its success, many issues emerge resulting from this over-simplified training objective: responses are highly dull and generic (Sordoni et al., 2015; Serban et al., 2016a; Li et al., 2016a), repetitive and short-sighted (Li et al.", "startOffset": 134, "endOffset": 196}, {"referenceID": 14, "context": "Despite its success, many issues emerge resulting from this over-simplified training objective: responses are highly dull and generic (Sordoni et al., 2015; Serban et al., 2016a; Li et al., 2016a), repetitive and short-sighted (Li et al.", "startOffset": 134, "endOffset": 196}, {"referenceID": 18, "context": ", 2016a), repetitive and short-sighted (Li et al., 2016d).", "startOffset": 39, "endOffset": 57}, {"referenceID": 14, "context": "Solutions to these problems require answering a few fundamental questions: what are the crucial aspects that define an ideal conversation, how can we quantitatively measure them, and how can we incorporate them into a machine learning system? For example, Li et al. (2016d) manually define three types of ideal dialogue properties such as ease of answering, informativeness and coherence, and use a reinforcement-learning framework to train the model to generate highly rewarded responses.", "startOffset": 256, "endOffset": 274}, {"referenceID": 14, "context": "Solutions to these problems require answering a few fundamental questions: what are the crucial aspects that define an ideal conversation, how can we quantitatively measure them, and how can we incorporate them into a machine learning system? For example, Li et al. (2016d) manually define three types of ideal dialogue properties such as ease of answering, informativeness and coherence, and use a reinforcement-learning framework to train the model to generate highly rewarded responses. Yu et al. (2016b) use keyword retrieval confidence as a reward.", "startOffset": 256, "endOffset": 508}, {"referenceID": 40, "context": "Such a goal suggests a training objective resembling the idea of the Turing test (Turing, 1950).", "startOffset": 81, "endOffset": 95}, {"referenceID": 9, "context": "We borrow the idea of adversarial training (Goodfellow et al., 2014; Denton et al., 2015) in computer vision, in which we jointly train two models, a generator (which takes the form of the neural SEQ2SEQ model) that defines the probability of generating a dialogue sequence, and", "startOffset": 43, "endOffset": 89}, {"referenceID": 7, "context": "We borrow the idea of adversarial training (Goodfellow et al., 2014; Denton et al., 2015) in computer vision, in which we jointly train two models, a generator (which takes the form of the neural SEQ2SEQ model) that defines the probability of generating a dialogue sequence, and", "startOffset": 43, "endOffset": 89}, {"referenceID": 4, "context": "Adversarial evaluation was first employed in Bowman et al. (2015) to evaluate sentence generation quality, and preliminarily studied in the context of dialogue generation by Kannan and Vinyals (2016).", "startOffset": 45, "endOffset": 66}, {"referenceID": 4, "context": "Adversarial evaluation was first employed in Bowman et al. (2015) to evaluate sentence generation quality, and preliminarily studied in the context of dialogue generation by Kannan and Vinyals (2016). In this paper, we discuss potential pitfalls of adversarial evaluations and necessary steps to avoid them and make evaluation reliable.", "startOffset": 45, "endOffset": 200}, {"referenceID": 41, "context": "Recent progress in SEQ2SEQ models have inspired several efforts (Vinyals and Le, 2015; Serban et al., 2016a,d; Luan et al., 2016) to build end-to-end conversational systems which first apply an encoder to map a message to a distributed vector representing its semantics and then generate a response from the message vector.", "startOffset": 64, "endOffset": 129}, {"referenceID": 22, "context": "Recent progress in SEQ2SEQ models have inspired several efforts (Vinyals and Le, 2015; Serban et al., 2016a,d; Luan et al., 2016) to build end-to-end conversational systems which first apply an encoder to map a message to a distributed vector representing its semantics and then generate a response from the message vector.", "startOffset": 64, "endOffset": 129}, {"referenceID": 25, "context": "Ritter et al. (2011) frame the response generation problem as a statistical machine translation (SMT) problem.", "startOffset": 0, "endOffset": 21}, {"referenceID": 25, "context": "Ritter et al. (2011) frame the response generation problem as a statistical machine translation (SMT) problem. Sordoni et al. (2015) improved Ritter et al.", "startOffset": 0, "endOffset": 133}, {"referenceID": 42, "context": "Our work is also related to recent efforts to integrate the SEQ2SEQ and reinforcement learning paradigms, drawing on the advantages of both (Wen et al., 2016).", "startOffset": 140, "endOffset": 158}, {"referenceID": 13, "context": "Our work adapts the encoder-decoder model to RL training, and can thus be viewed as an extension of Li et al. (2016d), but with more general RL rewards.", "startOffset": 100, "endOffset": 118}, {"referenceID": 13, "context": "Our work adapts the encoder-decoder model to RL training, and can thus be viewed as an extension of Li et al. (2016d), but with more general RL rewards. Li et al. (2016d) simulate dialogues between two virtual agents, using policy gradient methods to reward sequences that display three useful conversational properties: informativity, coherence, and ease of answering.", "startOffset": 100, "endOffset": 171}, {"referenceID": 13, "context": "Our work adapts the encoder-decoder model to RL training, and can thus be viewed as an extension of Li et al. (2016d), but with more general RL rewards. Li et al. (2016d) simulate dialogues between two virtual agents, using policy gradient methods to reward sequences that display three useful conversational properties: informativity, coherence, and ease of answering. Our work is also related to recent efforts to integrate the SEQ2SEQ and reinforcement learning paradigms, drawing on the advantages of both (Wen et al., 2016). For example, Su et al. (2016) combine reinforcement learning with neural generation on tasks with real users.", "startOffset": 100, "endOffset": 560}, {"referenceID": 1, "context": "Recent work from Asghar et al. (2016) trains an end-to-end RL dialogue model using human users.", "startOffset": 17, "endOffset": 38}, {"referenceID": 19, "context": "Some recent work (Liu et al., 2016) has started to look at more flexible and reliable evaluation metrics such as humanrating prediction (Lowe et al.", "startOffset": 17, "endOffset": 35}, {"referenceID": 20, "context": ", 2016) has started to look at more flexible and reliable evaluation metrics such as humanrating prediction (Lowe et al., 2016a) and next utterance classification (Lowe et al.", "startOffset": 108, "endOffset": 128}, {"referenceID": 21, "context": ", 2016a) and next utterance classification (Lowe et al., 2016b).", "startOffset": 43, "endOffset": 63}, {"referenceID": 24, "context": "Adversarial networks The idea of generative adversarial networks has enjoyed great success in computer vision (Radford et al., 2015; Chen et al., 2016a; Salimans et al., 2016).", "startOffset": 110, "endOffset": 175}, {"referenceID": 5, "context": "Adversarial networks The idea of generative adversarial networks has enjoyed great success in computer vision (Radford et al., 2015; Chen et al., 2016a; Salimans et al., 2016).", "startOffset": 110, "endOffset": 175}, {"referenceID": 27, "context": "Adversarial networks The idea of generative adversarial networks has enjoyed great success in computer vision (Radford et al., 2015; Chen et al., 2016a; Salimans et al., 2016).", "startOffset": 110, "endOffset": 175}, {"referenceID": 11, "context": "Some recent work has begun to address this issue: Lamb et al. (2016) propose providing the discriminator with the intermediate hidden vectors of the generator rather than its sequence outputs.", "startOffset": 50, "endOffset": 69}, {"referenceID": 11, "context": "Some recent work has begun to address this issue: Lamb et al. (2016) propose providing the discriminator with the intermediate hidden vectors of the generator rather than its sequence outputs. Such a strategy makes the system differentiable and achieves promising results in tasks like character-level language modeling and handwriting generation. Yu et al. (2016a) use policy gradient reinforcement learning to backpropagate the error from the discriminator, showing improvement in multiple generation tasks such as poem generation, speech language generation and music generation.", "startOffset": 50, "endOffset": 366}, {"referenceID": 5, "context": "Outside of sequence generation, Chen et al. (2016b) apply the idea of adversarial training to sentiment analysis and Zhang et al.", "startOffset": 32, "endOffset": 52}, {"referenceID": 5, "context": "Outside of sequence generation, Chen et al. (2016b) apply the idea of adversarial training to sentiment analysis and Zhang et al. (2017) apply the idea to domain adaptation tasks.", "startOffset": 32, "endOffset": 137}, {"referenceID": 25, "context": "Ranzato et al. (2015) train RNN decoders in a SEQ2SEQ model using policy gradient, and they obtain competitive machine translation results.", "startOffset": 0, "endOffset": 22}, {"referenceID": 35, "context": "Also related is recent work (Shen et al., 2015; Wiseman and Rush, 2016) to address the issues of exposure bias and lossevaluation mismatch in neural machine translation.", "startOffset": 28, "endOffset": 71}, {"referenceID": 44, "context": "Also related is recent work (Shen et al., 2015; Wiseman and Rush, 2016) to address the issues of exposure bias and lossevaluation mismatch in neural machine translation.", "startOffset": 28, "endOffset": 71}, {"referenceID": 16, "context": "The input dialogue is encoded into a vector representation using a hierarchical encoder (Li et al., 2015; Serban et al., 2016b),3 which is then fed to a 2-class softmax function, returning the probability of the input dialogue episode being a machinegenerated dialogue (denoted Q\u2212({x, y})) or a human-generated dialogue (denoted Q+({x, y})).", "startOffset": 88, "endOffset": 127}, {"referenceID": 29, "context": "The input dialogue is encoded into a vector representation using a hierarchical encoder (Li et al., 2015; Serban et al., 2016b),3 which is then fed to a 2-class softmax function, returning the probability of the input dialogue episode being a machinegenerated dialogue (denoted Q\u2212({x, y})) or a human-generated dialogue (denoted Q+({x, y})).", "startOffset": 88, "endOffset": 127}, {"referenceID": 10, "context": "To be specific, each utterance p or q is mapped to a vector representation hp or hq using LSTM (Hochreiter and Schmidhuber, 1997).", "startOffset": 95, "endOffset": 129}, {"referenceID": 43, "context": ", Q+({x, y})) is used as a reward for the generator, which is trained to maximize the expected reward of generated utterance(s) using the REINFORCE algorithm (Williams, 1992):", "startOffset": 158, "endOffset": 174}, {"referenceID": 43, "context": "The gradient of (1) is approximated using the likelihood ratio trick (Williams, 1992; Glynn, 1990; Aleksandrov et al., 1968):", "startOffset": 69, "endOffset": 124}, {"referenceID": 8, "context": "The gradient of (1) is approximated using the likelihood ratio trick (Williams, 1992; Glynn, 1990; Aleksandrov et al., 1968):", "startOffset": 69, "endOffset": 124}, {"referenceID": 0, "context": "The gradient of (1) is approximated using the likelihood ratio trick (Williams, 1992; Glynn, 1990; Aleksandrov et al., 1968):", "startOffset": 69, "endOffset": 124}, {"referenceID": 25, "context": "4 Like Ranzato et al. (2015), we train another neural network model (the critic) to estimate the value (or future reward) of current state (i.", "startOffset": 7, "endOffset": 29}, {"referenceID": 36, "context": "To mitigate this problem, we adopt a strategy similar to when training value networks in AlphaGo (Silver et al., 2016), in which for each collection of subsequences of Y , we randomly", "startOffset": 97, "endOffset": 118}, {"referenceID": 46, "context": "A similar strategy is adopted in Yu et al. (2016a). The downside of MC is that it requires repeating the sampling process for each prefix of each sequence and is thus significantly time-consuming.", "startOffset": 33, "endOffset": 51}, {"referenceID": 13, "context": "This can be seen as having a teacher intervene with the generator some fraction of the time and force it to generate the true responses, an approach that is similar to the professor-forcing algorithm of Lamb et al. (2016).", "startOffset": 203, "endOffset": 222}, {"referenceID": 39, "context": "We trained a SEQ2SEQ model (Sutskever et al., 2014) with an attention mechanism (Bahdanau et al.", "startOffset": 27, "endOffset": 51}, {"referenceID": 3, "context": ", 2014) with an attention mechanism (Bahdanau et al., 2015; Luong et al., 2015) on the OpenSubtitles dataset.", "startOffset": 36, "endOffset": 79}, {"referenceID": 23, "context": ", 2014) with an attention mechanism (Bahdanau et al., 2015; Luong et al., 2015) on the OpenSubtitles dataset.", "startOffset": 36, "endOffset": 79}, {"referenceID": 2, "context": ", 2014) with an attention mechanism (Bahdanau et al., 2015; Luong et al., 2015) on the OpenSubtitles dataset. We followed protocols recommended by Sutskever et al. (2014), such as gradient clipping, mini-batch and learning rate decay.", "startOffset": 37, "endOffset": 171}, {"referenceID": 14, "context": "Half of the negative examples are generated using beam-search with mutual information reranking as described in Li et al. (2016a), and the other half is generated from sampling.", "startOffset": 112, "endOffset": 130}, {"referenceID": 14, "context": "7 (3) Penalizing intra-sibling ranking when doing beam search decoding to promote N-best list diversity as described in Li et al. (2016c). (4) Penalizing word types (stop words excluded) that have already been generated.", "startOffset": 120, "endOffset": 138}, {"referenceID": 4, "context": "The idea of adversarial evaluation, first proposed by Bowman et al. (2015), is to train a discriminant function to separate generated and true sentences, in an attempt to evaluate the model\u2019s sentence generation capability.", "startOffset": 54, "endOffset": 75}, {"referenceID": 4, "context": "The idea of adversarial evaluation, first proposed by Bowman et al. (2015), is to train a discriminant function to separate generated and true sentences, in an attempt to evaluate the model\u2019s sentence generation capability. The idea has been preliminarily studied by Kannan and Vinyals (2016) in the context of dialogue generation.", "startOffset": 54, "endOffset": 293}, {"referenceID": 4, "context": "Bowman et al. (2015) propose two different discriminator models separately using unigram features and neural features.", "startOffset": 0, "endOffset": 21}, {"referenceID": 34, "context": "This resembles the N-choose-1 metric described in Shao et al. (2016). Higher accuracy indicates that the generated responses are distinguishable from randomly sampled human responses, indicating that the generative model is not fooling the generator simply by introducing randomness.", "startOffset": 50, "endOffset": 69}, {"referenceID": 12, "context": "Similar results are also reported in Kannan and Vinyals (2016). 5 Experimental Results", "startOffset": 37, "endOffset": 63}, {"referenceID": 11, "context": "Trained using the SVM-Light package (Joachims, 2002).", "startOffset": 36, "endOffset": 52}, {"referenceID": 14, "context": "Baselines we consider include standard SEQ2SEQ models using greedy decoding (MLEgreedy), beam-search (MLE+BS) and sampling, as well as the mutual information reranking model of Li et al. (2016a) with two algorithmic variations: (1) MMI+p(t|s), in which a large N-best list is first generated using a pre-trained SEQ2SEQ model and then reranked by the backward probability p(s|t) and (2) MMI\u2212p(t), in which language model probability is penalized during decoding.", "startOffset": 177, "endOffset": 195}, {"referenceID": 14, "context": "This result is in line with human-evaluation results from Li et al. (2016a). The two proposed adversarial algorithms", "startOffset": 58, "endOffset": 76}, {"referenceID": 14, "context": "For human evaluation, we follow protocols defined in Li et al. (2016d), employing crowdsourced judges to evaluate a random sample of 200 items.", "startOffset": 53, "endOffset": 71}, {"referenceID": 14, "context": "For human evaluation, we follow protocols defined in Li et al. (2016d), employing crowdsourced judges to evaluate a random sample of 200 items. We present both an input message and the generated outputs to 3 judges and ask them to decide which of the two outputs is better (singleturn general quality). Ties are permitted. Identical strings are assigned the same score. We also present the judges with multi-turn conversations simulated between the two agents. Each conversation consists of 3 turns. Results are presented in Table 4. We observe a significant quality improvement on both single-turn quality and multiturn quality from the proposed adversarial model. It is worth noting that the reinforcement learning system described in Li et al. (2016d), which simulates conversations between two bots and is trained based on manually designed reward functions, only improves multi-turn dialogue quality, while the model described in this paper improves both single-turn and multi-turn dialogue genera-", "startOffset": 53, "endOffset": 755}], "year": 2017, "abstractText": "In this paper, drawing intuition from the Turing test, we propose using adversarial training for open-domain dialogue generation: the system is trained to produce sequences that are indistinguishable from human-generated dialogue utterances. We cast the task as a reinforcement learning (RL) problem where we jointly train two systems, a generative model to produce response sequences, and a discriminator\u2014analagous to the human evaluator in the Turing test\u2014 to distinguish between the human-generated dialogues and the machine-generated ones. The outputs from the discriminator are then used as rewards for the generative model, pushing the system to generate dialogues that mostly resemble human dialogues. In addition to adversarial training we describe a model for adversarial evaluation that uses success in fooling an adversary as a dialogue evaluation metric, while avoiding a number of potential pitfalls. Experimental results on several metrics, including adversarial evaluation, demonstrate that the adversarially-trained system generates higher-quality responses than previous baselines. 1", "creator": "LaTeX with hyperref package"}}}