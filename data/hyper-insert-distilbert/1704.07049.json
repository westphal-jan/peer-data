{"id": "1704.07049", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Apr-2017", "title": "Probabilistic Vehicle Trajectory Prediction over Occupancy Grid Map via Recurrent Neural Network", "abstract": "in this paper, we propose an efficient ballistic vehicle digital trajectory prediction optimization framework based systematically on recurrent phase neural string network. basically, knowledge the spatial characteristic of the vehicle'predicted s trajectory response is different from knowing that of more regular moving objects only since it probably is affected by various seemingly latent data factors including conventional road material structure, traffic rules, and driver's intention. previous building state of the modern art composite approaches use super sophisticated vehicle discrete behavior model describing these trigger factors randomly and derive the corresponding complex trajectory prediction reduction algorithm, which requires a modular system designer to highly conduct intensive model of optimization for practical use. our approach is data - object driven and quite simple to use only in confidence that it learns complex cluster behavior problems of routing the orbiting vehicles from the exponential massive amount distortion of underlying trajectory calculated data through massive deep neural network model. the latest proposed trajectory prediction method employs implementing the recurrent neural data network called long short - term dynamic memory ( namely lstm ) to analyze the intrinsic temporal behavior and rapidly predict the future coordinate of the configuration surrounding vehicles. the proposed scheme feeds only the numerical sequence properties of vehicles'coordinates subsequently obtained from sensor measurements to calculate the lstm specifications and produces similarly the equivalent probabilistic reconstruction information on the future location of the vehicles over occupancy national grid map. the six experiments conducted yearly using double the gps data collected from highway data driving show conclude that the proposed smoothing method can produce reasonably good estimate of future future trajectory.", "histories": [["v1", "Mon, 24 Apr 2017 05:58:33 GMT  (3956kb,D)", "http://arxiv.org/abs/1704.07049v1", null], ["v2", "Fri, 1 Sep 2017 03:04:26 GMT  (5348kb)", "http://arxiv.org/abs/1704.07049v2", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["byeoungdo kim", "chang mook kang", "seung hi lee", "hyunmin chae", "jaekyum kim", "chung choo chung", "jun won choi"], "accepted": false, "id": "1704.07049"}, "pdf": {"name": "1704.07049.pdf", "metadata": {"source": "CRF", "title": "Probabilistic Vehicle Trajectory Prediction over Occupancy Grid Map via Recurrent Neural Network", "authors": ["ByeoungDo Kim", "Chang Mook Kang", "Seung Hi Lee", "Hyunmin Chae", "Jaekyum Kim", "Chung Choo Chung", "Jun Won Choi"], "emails": ["bdkim@spo.hanyang.ac.kr,", "kcm0728@hanyang.ac.kr,", "shlee@ieee.org,", "hmchae@spo.hanyang.ac.kr,", "jkkim@spo.hanyang.ac.kr,", "cchung@hanyang.ac.kr", "junwchoi@hanyang.ac.kr"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nIn order to build fully autonomous vehicle, it is necessary to guarantee high degree of safety even in uncertain and dynamically changing environments. In order to serve this goal, the autonomous vehicle should be able to anticipate what would happen to its environment in the future and respond to the change appropriately in advance. However, the behavior of the traffic participants (e.g. the vehicles surrounding the egovehicle) is often hard to predict since it is affected by various latent factors such as driver\u2019s intention, traffic situations, road structure, and so on. The prediction based on vehicle\u2019s dynamics model is accurate only for very near future and it does not match with true trajectory well for long term prediction (more than one second). In addition, it is hard to know the accurate maneuver control (e.g. steering and acceleration) of the other vehicles so that the trajectory prediction based on vehicle\u2019s dynamics model might not be effective in practical scenarios. In order to facilitate path planning and collision avoidance needed to realize fully autonomous driving, we need simple but powerful prediction framework which can analyze the complex temporal dynamics of the traffic participants well.\nIn fact, a problem of tracking the trajectory of moving tar-\ngets has been actively studied in computer vision and robotics fields. However, as mentioned, predicting the motion of traffic participants is not as simple as object tracking due to complex dynamics of the vehicles in traffic. So far, various approaches have been proposed to analyze the vehicles\u2019 motion [1]. Vehicle motion model such as kinematic or dynamic models has been used for trajectory prediction [2], [3]. Kalman filter has been widely used to perform prediction accounting for the uncertainty in vehicle model [2]. In order to improve the prediction accuracy further, Bayesian filtering techniques such as the context-dependent interactive multiple model filter [3] and Monte-Carlo method [4] have been proposed. Recently, machine learning techniques were employed to learn the complex model capturing driver\u2019s maneuver intention and their interactions from the data. The vehicle trajectory generating model has been learned through Gaussian process [5], [6] and Gaussian mixture model [7]. More sophisticated models considering the vehicle interactions were introduced, including dynamic Bayesian network [8] and coupled hidden Markov model [9]. Though these methods yield better prediction accuracy, the complexity for running training and inference algorithms on these models is significantly high. In addition, these models involve human\u2019s interpretation on the factors determining the trajectory so careful parameter tuning is needed for various environments.\nIn this paper, we introduce a new efficient vehicle trajectory prediction framework based on the deep neural network. In recent years, the deep neural network has received much attention since it has showed great performance for a variety of machine learning tasks [10]. Among the several DNN architectures, the recurrent neural network is widely used to learn the temporal structure in the time-series data. In particular, the long short term memory (LSTM) architecture has been successfully applied to analyze the temporal structure underlying in text, speech, and financial data [11]. The attractive feature of the deep neural network models is that using numerous data sources, they can find the features that are robust to a variety of changes in data. In our work, we employ LSTM to understand complex dynamics of vehicle motion. The proposed trajectory prediction system inputs the coordinates of the surrounding vehicles obtained from the sensor measurements to the LSTM and produces the vehicle\u2019s future location after \u2206 seconds. ar X\niv :1\n70 4.\n07 04\n9v 1\n[ cs\n.L G\n] 2\n4 A\npr 2\n01 7\nIn order to train the LSTM, we use a long record of the trajectory data acquired by long-term driving on real road. The LSTM is trained to predict the future coordinate based on the past trajectory input. In order to handle uncertainty in making prediction, the LSTM is designed to produce the probability of occupancy for the surrounding vehicles on the occupancy grid map. The experiments conducted with the data collected from highway driving show that the proposed method offers better prediction accuracy over the existing Kalman filter-based method.\nRecently, we found that similar LSTM-based trajectory analysis has been proposed independently in [12]. Note that our work is different from their method in that it focuses on classification of surrounding vehicles\u2019 maneuvers at intersection while we propose a system that predicts the future trajectory of the vehicles over the occupancy grid map.\nThe rest of this paper is organized as follows. In Section II, we describe the system setup used for developing the proposed prediction framework. In Section III, we briefly introduce the structure of the LSTM and in Section IV, we describe the details on the proposed vehicle trajectory prediction framework. In Section V, the experimental results are provided and the paper is concluded in Section VI."}, {"heading": "II. SYSTEM DESCRIPTION", "text": "In this section, we provide the basic system description for\nthe proposed trajectory prediction method.\nA. Vehicle Trajectory\nFig. 1 depicts the system model for the proposed scheme. The coordinate (x, y) of the vehicle represents the location of the vehicle center relative to the location of the ego-vehicle as shown in Fig. 2. We let the coordinate of the ego-vehicle be (0, 0) and the coordinate of the ith surrounding vehicle at the time step t is denoted as (x\n(i) t , y (t) t ). We assume that the coordinate information of the vehicle is obtained by processing the measurements from camera, radar, and Lidar sensors. The trajectory of the ith vehicle is determined by the sequence of the coordinates ..., (x(i)t\u22121, y (i) t\u22121), (x (i) t , y (i) t ), (x (i+1) t+1 , y (i+1) t+1 ), ..., where\neach coordinate is acquired every Ts second. Since the information on the velocity and heading angle of the vehicles can be inferred in the trajectory data, we do not use them explicitly for our trajectory prediction. We consider the coordinate of the surrounding vehicles in the range of -10.5 to 10.5 meters in lateral direction and 0 to 180 meters in the longitudinal direction. Such range is determined by considering the valid detection range of the sensors and the highway environments in which the data is collected."}, {"heading": "B. Occupancy Grid Map", "text": "In essence, at the current time step t, the objective of the trajectory prediction is to estimate the future coordinate (x(i)t+\u2206, y (t) t+\u2206) based on the past trajectory data ..., (x (i) t\u22121, y (i) t\u22121), (x (i) t , y (i) t ). The proposed system produces the prediction results in the form of probability using the occupancy grid map. The occupancy grid map is widely adopted for probabilistic localization and mapping in robotics [13]. The occupancy grid map is constructed by partitioning the range under consideration into Mx \u00d7My grid elements (see Fig. 3). We determine the grid size such that the grid element approximately covers half lane in the lateral direction and longer distance in longitudinal direction. Note that the occupancy grid map is aligned with heading angle of egovehicle since the coordinates of the vehicles are obtained through the sensors of the ego-vehicle."}, {"heading": "III. STRUCTURE OF LSTM", "text": "In this section, we briefly introduce the structure of the LSTM. Fig. 4 depicts the structure of the LSTM. The LSTM was developed to overcome shortcomings of the recurrent neural network that the gradient of the loss function vanishes\nor explodes over time [11]. The LSTM has a memory called \u201ccell\u201d which is used to store the state vector summarizing the sequence of the past input data. The current state of the cell is updated according to the input, the output, and the previous state of the cell. Unlike recurrent neural network, LSTM has a gating control mechanism that allows the network to forget past state in the memory or learn when to update its state given new information. Let ct be the state of the memory cell at the current time step t. Then, ct is updated by the following recursive equations\nit = \u03c3(Wxixt +Whiht\u22121 + bi) (1) ft = \u03c3(Wxfxt +Whfht\u22121 + bf ) (2) ot = \u03c3(Wxoxt +Whoht\u22121 + bo) (3) gt = tanh(Wxcxt +Whcht\u22121 + bc) (4) ct = ft ct\u22121 + it gt (5) ht = ot tanh(ct) (6)\nwhere \u2022 \u03c3(x) = 11+e\u2212x : sigmoid function \u2022 x y: element-wise product \u2022 Wxi,Whi,Wxf ,Whf ,Wxo,Who,Wxc,Whc: weight ma-\ntrix for linear transformation \u2022 bi, bf , bo, bc: bias vector \u2022 it: input gating vector \u2022 ft: forget gating vector \u2022 ot: output gating vector \u2022 gt: state update vector \u2022 ht: output hidden state vector\nNote that with the configuration ft = [0, ..., 0], the network can forget the information ct\u22121 stored in the memory cell. The input gate it and the output gate ft can control the information flow from the input and to the output, respectively. Note that the behavior of the gate control is learned from data as well. When unfolded in time, the LSTM is considered to be a deep model. We can also make the cell deep by adding additional layers. In order to extract the information relevant to the given task, we add additional output network to the hidden state\nht. For instance, for multi-class classification task, we use a softmax layer which contains the linear transformation of ht followed by the softmax function exp(ai)exp(\u2211j aj) ."}, {"heading": "IV. PROPOSED VEHICLE TRAJECTORY PREDICTION", "text": "In this section, we describe the proposed trajectory prediction framework in details."}, {"heading": "A. Proposed Trajectory Prediction Technique", "text": "Fig. 1 depicts the structure of the proposed system. The egovehicle estimates the current coordinates of N surrounding vehicles and feeds the estimates into the N LSTMs. Each of these N LSTMs produces the predicted result for each of the N nearest vehicles. Note that the same network parameters are used for all N LSTMs. Since the trajectory information is obtained from the sensors of the ego-vehicle, the coordinates of the surrounding vehicle would be affected by the change in the heading angle of ego-vehicle. To compensate such coordinate change due to the motion of the ego-vehicle, we input the yaw rate of the ego-vehicle to the LSTM along with the vehicle coordinates. Note that the yaw rate of the egovehicle is obtained using the inertial measurement unit (IMU) sensor.\nIt might be necessary to make prediction with different terms e.g., \u2206 = 0.5s, 1.0s, and 2.0s. In this case, we train the LSTM to perform different tasks, thus yielding the different set of the LSTM parameters. Once trained, we can load each parameter set to obtain the results for multiple future time steps. We reflect the uncertainty of the predicted trajectory using the occupancy grid map. The LSTM produces the probability of occupancy for each grid element of the occupancy grid map. Letting (ix, iy) be the two dimensional index for the occupancy grid, the softmax layer in the ith LSTM produces the probability P (i)o (ix, iy) for the grid element (ix, iy). Finally, we combine the outputs of the N LSTMs using\nPo(ix, iy) = 1\u2212 N\u220f i=1 (1\u2212 P (i)o (ix, iy)). (7)\nThe probability of occupancy for all N vehicles is shown in the single map. This map provides the comprehensive view on how N surrounding traffic participants would behave after \u2206 seconds."}, {"heading": "B. Training of LSTM", "text": "Using the vehicle equipped with sensors, the trajectory data for the surrounding vehicles can be collected through longterm driving on real road. The coordinate of the vehicles can be generated by employing the localization algorithm based on sensor fusion. From the trajectory history for all N nearest vehicles, we extract the data for individual vehicle and combine them to generate the training data. The training data containing the trajectory of each individual vehicle is used to train the single LSTM. We formulate the trajectory prediction problem as a multi-class classification problem where one grid element occupied by the target vehicle should\nbe chosen among all M grid elements. Given the sequence of the coordinates ..., (x(i)t\u22121, y (i) t\u22121), (x (i) t , y (i) t ) for the ith vehicle, the label is automatically generated from the coordinate of the vehicle \u2206 seconds later. We use one hot encoding to generate the label. For example, the label for the jth training example oj = [0, ..., 0\ufe38 \ufe37\ufe37 \ufe38\nl\n, 1, 0, ..., 0] indicates the occupancy of the lth\nelement in the occupancy grid map. Since human labor is not needed to label the data, the proposed system benefits from automatic logging system enabled in normal driving. In order to train the LSTM, we minimize the negative log-likelihood function\nC = \u2212 J\u2211\nj=1 M\u2211 m=1 oj,m ln yj,m + (1\u2212 oj,m) ln(1\u2212 yj,m), (8)\nwhere J is the total number of the training examples, oj,m is the mth entry of oj and yj,m is the mth output of the softmax layer associated with the label oj,m. In order to optimize the network parameters of the LSTM, we employ \u201cback propagation through time\u201d (BPTT) algorithm with minibatch size B [11]."}, {"heading": "V. EXPERIMENTS", "text": ""}, {"heading": "A. Experiment Description", "text": "In our experiment, we collected the training data from long hours of highway driving in the suburbs of Seoul, Korea. As a test vehicle, we use a Hyundai Genesis equipped with a long range radar from Delphi and a single front camera from Mobileye. Fig. 5 (a) and (b) show the picture of the test vehicle and the system configuration for data logging, respectively. During driving, the test vehicle collects the sensor\nmeasurements which are processed to obtain the relative coordinates of the surrounding vehicles. The yaw rate of the ego vehicle is also logged in the system. The sample rate for logging the coordinate data is 10 ms. However, we found that the data logged every 10 ms is subject to large noise and often cut off due to asynchronous sampling timing. In order to resolve these issues, we synchronized the data by averaging the coordinate samples for 100 ms of duration. As a result, new trajectory input data is updated every 100 ms. Acquisition of the training data was conducted under various real driving situations on highway such as cruising, lane change and merge junction. The collected data was 3730 seconds total from 26 scenarios. Of the collected 3730 seconds of data, there are a total of 1325 vehicles detected for more than 4 seconds within the valid detection range. Among 1325 cases, 1126 cases (85%) were used for training and 199 cases (15%) were used for validation."}, {"heading": "B. System Configurations", "text": "In our system, we consider the occupancy grid map with size (Mx,My) = (18, 11). Each grid element occupies an area of the width 1.75 meter and height 10 meter. When a target vehicle gets out of the boundary of the occupancy grid map, we label it as \u201cout of boundary\u201d class. In our experiments, we consider three scenarios with \u2206 = 0.5s, 1.0s, and 2.0s. We empirically search for the best performing architecture of the LSTM for each scenario. The LSTM used in the proposed system consists of two layer cell memory followed by the softmax layer. The number of nodes at the softmax layer is MxMy + 1 = 199 (including out of boundary class). The number of nodes in the cell memory was set to 1536, 1280, and 1280 for the scenarios with \u2206 = 0.5s, 1.0s and 2.0s, respectively. We set the initial learning rate to 1.0 and gradually decrease it whenever the validation error stops to improve. The mini-batch size B was set to 24. For the weight of the softmax layer, L2 regularization term was used in the loss function and the regularization parameter was set to 0.0005."}, {"heading": "C. Experimental Results", "text": "For performance evaluation in classification task, top-K classification errors are widely used. Since our objective is to predict the coordinate of the vehicle, we need an appropriate performance metric. Since the proposed system produces the probability of occupancy, it should be also accounted in the\nperformance metric. In our experiments, we use the weighted mean absolute error (MAE) as a performance metric.\nMAE = 1\nN N\u2211 i=1 Mx\u2211 ix=1 My\u2211 iy=1 \u2225\u2225\u2225\u2225\u2225 [ ix iy ] \u2212 [ i (desired) x i (desired) y ]\u2225\u2225\u2225\u2225\u2225P (i)o (ix, iy) (9)\nwhere (i(desired)x , i (desired) y ) is the index of the desired grid element in the label and P (i)o (ix, iy) is the probability occupancy for the grid element (ix, iy).\nTable I shows the accuracy of the trajectory prediction for the proposed algorithm. Besides the MAE defined in (9), we use several performance metric including the MAE in longitudinal direction (MAE X) and that in lateral direction (MAE Y). Obviously, the prediction accuracy of the proposed scheme is better for the case of short-term prediction as compared to long-term prediction. Note that for \u2206 = 0.5s and 1.0s, the MAE metric is smaller than 0.6 grid. Though the MAE can go up to 1.16 grid for \u2206 = 2.0s, such MAE levels seem to be good enough for the purpose of risk assessment and path planning.\nWe also compare the performance of the proposed scheme with that of the Kalman filter-based prediction. As shown in Table I, the LSTM outperforms the conventional Kalman filter for all cases considered. Note that the performance gap between them gets larger for long-term prediction. This shows that the proposed LSTM-based method is good at analyzing the complex patterns in vehicle motion that are needed to perform long-term prediction. We observe that the MAE Y of the Kalman filter is much larger than that of the proposed scheme. This means that the lateral motion is more difficult to predict than the longitudinal motion for the Kalman filter. We also notice that while the Kalman filter works well for the nominal cases where the trajectory of the vehicle looks smooth and predictable, it exhibits significant error for some difficult and ambiguous cases. On the contrary, the proposed scheme maintains reasonably good prediction accuracy for all cases considered.\nFig. 6 (a), (b), and (c) illustrate how the proposed algorithm predicts the trajectory for different scenarios. The small dots colored in red represent the past trajectory of the surrounding vehicles. The darker red color indicates more recently acquired coordinates. The cross mark colored with green indicates the future coordinate of the vehicle after \u2206 seconds, which should be predicted by the proposed method. The probability of the occupancy, which is the output of the proposed scheme, is shown on the occupancy grid map. Note that higher magnitude of the probability is translated into darker blue color. Fig. 6(a) shows the scenario where two vehicles detected in the right lane are driving at decelerating speed while keeping the same lane. In Fig. 6(b), two front vehicles are detected and the nearest vehicle of them is trying to change the lane to the left while the other one stays on the same lane. Since the speed of the ego-vehicle is close to that of the surrounding vehicles, the other vehicles appear to exhibit little movement in longitudinal direction. Fig. 6(c) shows the case where three vehicles exhibit\nvarious types of movement. Two of them accelerates relatively to ego-vehicle while the remaining vehicle speeds down. As shown in Fig. 6, the proposed scheme predicts the future position of the vehicles with good accuracy even when the trajectory data have some frequent fluctuation. This result shows that the proposed method offers a promising solution to predict the dynamic environments and thus promote the level of safety for the fully autonomous driving."}, {"heading": "VI. CONCLUSIONS", "text": "In this paper, we proposed the probabilistic vehicle trajectory prediction method based on the LSTM. Using the large amount of the trajectory data acquired by processing the sensor measurements during long-term driving, we trained the LSTM to learn complex dynamics of the surrounding vehicle\u2019s motion and predict its location in the future. We used the occupancy grid map to allow the LSTM to produce the probability of occupancy for each grid element so that the confidence\nlevel for the prediction can be represented. Our experiments performed using the data collected on real highway show that the proposed method provides the reasonably accurate prediction on the surrounding vehicles\u2019 trajectory."}], "references": [{"title": "A survey on motion prediction and risk assessment for intellgient vehicles", "author": ["S. Lefevre", "D. Vasquez", "C. Laugier"], "venue": "ROBOMECH Journal, vol. 1, no. 1, pp. 1-14, 2014.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2014}, {"title": "Real time trajectory prediction for collision risk estimation between vehicles", "author": ["S. Ammoun", "F. Nashashibi"], "venue": "Proc. IEEE Intelligent Computer Communication and Processing (ICCP), Aug. 2009, pp. 417-422.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "IMM object tracking for high dynamic driving maneuvers", "author": ["N. Kaempchen", "K. Weiss", "M. Schaefer", "K.C.J. Dietmayer"], "venue": "Proc. IEEE Intelligent Vehicles Symp., June 2004, pp. 825-830.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Statistical threat assessment for general raod scenes using Monte Carlo sampling", "author": ["A. Eidehall", "L. Petersson"], "venue": "IEEE Trans. Intellgient Transport. Syst., vol. 9, no. 1, pp. 137-147, March 2008.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Online maneuver recognition and multimodal trajectory rediction for intersection assistance using non-parametric regression", "author": ["Q. Tran", "J. Firl"], "venue": "Proc. IEEE Intelligent Vehicles Symposium, June 2014, pp. 918-923.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2014}, {"title": "Probabilistic analysis of dynamic scenes and collision risks assessment to improve driving safty", "author": ["C. Laugier", "I.E. Paromtchik", "M. Perrollaz", "M. Yong", "J. Yoder", "C. Tay", "K. Mekhnacha", "A. Negre"], "venue": "IEEE Intelligent Transport. Syst. Mag., vo. 3, no. 4, pp. 4-19, Oct. 2011.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "Probabilistic trajectory prediction with Gaussian mixture models", "author": ["J. Wiest", "M. Hoffken", "U. Krebel", "K. Dietmayer"], "venue": "IEEE Intelligent Vehicles Symp., June 2012, pp. 141-146.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning driver behavior models from traffic observations for decision making and planning", "author": ["T. Gindele", "S. Brechtel", "R. Dillmann"], "venue": "IEEE Intelligent Transport. Mag., vol. 7, no. 1, pp. 69-79, Spring 2015.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Coupled hidden Markov models for complex action recognition", "author": ["M. Brand", "N. Oliver", "A. Pentland"], "venue": "IEEE Proc. Computer Vision and Pattern Recog. (CVPR), June 1997, pp. 994-999.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1997}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural Computation, vol. 9, no. 8, pp. 1735-1780, 1997.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "Surround vehicles trajectory analysis with recurrent neural networks", "author": ["A. Khosroshahi", "E. Ohn-Bar", "M.M. Trivedi"], "venue": "IEEE Proc. Intelligent Transportation Systems (ITSC), Nov. 2016, pp. 2267-2272.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}], "referenceMentions": [{"referenceID": 0, "context": "So far, various approaches have been proposed to analyze the vehicles\u2019 motion [1].", "startOffset": 78, "endOffset": 81}, {"referenceID": 1, "context": "Vehicle motion model such as kinematic or dynamic models has been used for trajectory prediction [2], [3].", "startOffset": 97, "endOffset": 100}, {"referenceID": 2, "context": "Vehicle motion model such as kinematic or dynamic models has been used for trajectory prediction [2], [3].", "startOffset": 102, "endOffset": 105}, {"referenceID": 1, "context": "Kalman filter has been widely used to perform prediction accounting for the uncertainty in vehicle model [2].", "startOffset": 105, "endOffset": 108}, {"referenceID": 2, "context": "In order to improve the prediction accuracy further, Bayesian filtering techniques such as the context-dependent interactive multiple model filter [3] and Monte-Carlo method [4] have been proposed.", "startOffset": 147, "endOffset": 150}, {"referenceID": 3, "context": "In order to improve the prediction accuracy further, Bayesian filtering techniques such as the context-dependent interactive multiple model filter [3] and Monte-Carlo method [4] have been proposed.", "startOffset": 174, "endOffset": 177}, {"referenceID": 4, "context": "The vehicle trajectory generating model has been learned through Gaussian process [5], [6] and Gaussian mixture model [7].", "startOffset": 82, "endOffset": 85}, {"referenceID": 5, "context": "The vehicle trajectory generating model has been learned through Gaussian process [5], [6] and Gaussian mixture model [7].", "startOffset": 87, "endOffset": 90}, {"referenceID": 6, "context": "The vehicle trajectory generating model has been learned through Gaussian process [5], [6] and Gaussian mixture model [7].", "startOffset": 118, "endOffset": 121}, {"referenceID": 7, "context": "More sophisticated models considering the vehicle interactions were introduced, including dynamic Bayesian network [8] and coupled hidden Markov model [9].", "startOffset": 115, "endOffset": 118}, {"referenceID": 8, "context": "More sophisticated models considering the vehicle interactions were introduced, including dynamic Bayesian network [8] and coupled hidden Markov model [9].", "startOffset": 151, "endOffset": 154}, {"referenceID": 9, "context": "in text, speech, and financial data [11].", "startOffset": 36, "endOffset": 40}, {"referenceID": 10, "context": "Recently, we found that similar LSTM-based trajectory analysis has been proposed independently in [12].", "startOffset": 98, "endOffset": 102}, {"referenceID": 9, "context": "or explodes over time [11].", "startOffset": 22, "endOffset": 26}, {"referenceID": 9, "context": "In order to optimize the network parameters of the LSTM, we employ \u201cback propagation through time\u201d (BPTT) algorithm with minibatch size B [11].", "startOffset": 138, "endOffset": 142}], "year": 2017, "abstractText": "In this paper, we propose an efficient vehicle trajectory prediction framework based on recurrent neural network. Basically, the characteristic of the vehicle\u2019s trajectory is different from that of regular moving objects since it is affected by various latent factors including road structure, traffic rules, and driver\u2019s intention. Previous state of the art approaches use sophisticated vehicle behavior model describing these factors and derive the complex trajectory prediction algorithm, which requires a system designer to conduct intensive model optimization for practical use. Our approach is data-driven and simple to use in that it learns complex behavior of the vehicles from the massive amount of trajectory data through deep neural network model. The proposed trajectory prediction method employs the recurrent neural network called long short-term memory (LSTM) to analyze the temporal behavior and predict the future coordinate of the surrounding vehicles. The proposed scheme feeds the sequence of vehicles\u2019 coordinates obtained from sensor measurements to the LSTM and produces the probabilistic information on the future location of the vehicles over occupancy grid map. The experiments conducted using the data collected from highway driving show that the proposed method can produce reasonably good estimate of future trajectory.", "creator": "LaTeX with hyperref package"}}}