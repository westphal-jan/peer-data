{"id": "1709.01915", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Sep-2017", "title": "Towards Neural Machine Translation with Latent Tree Attention", "abstract": "efficient building models that quickly take advantage of the hierarchical structure construction of structured language without skipping a priori - annotation rule is merely a quite longstanding goal in natural language processing. we introduce such modeling a model for manipulating the linguistic task of machine translation, appropriately pairing a recurrent neural network namely grammar encoder with containing a supposedly novel novel attentional rnng decoder target and simply applying quantitative policy density gradient reinforcement learning to induce unsupervised tree structures on both namely the raw source and target. given when trained on various character - level datasets with largely no explicit memory segmentation semantics or parse annotation, hopefully the model learns a better plausible segmentation task and allows shallow parse, gradually obtaining performance parameters close to entering an attentional loop baseline.", "histories": [["v1", "Wed, 6 Sep 2017 17:44:53 GMT  (662kb,D)", "http://arxiv.org/abs/1709.01915v1", "Presented at SPNLP 2017"]], "COMMENTS": "Presented at SPNLP 2017", "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["james bradbury", "richard socher"], "accepted": false, "id": "1709.01915"}, "pdf": {"name": "1709.01915.pdf", "metadata": {"source": "CRF", "title": "Towards Neural Machine Translation with Latent Tree Attention", "authors": ["James Bradbury", "Richard Socher"], "emails": ["james.bradbury@salesforce.com", "rsocher@salesforce.com"], "sections": [{"heading": "1 Introduction", "text": "Many efforts to exploit linguistic hierarchy in NLP tasks make use of the output of a self-contained parser system trained from a human-annotated treebank (Huang et al., 2006). An alternative approach aims to jointly learn the task at hand and relevant aspects of linguistic hierarchy, inducing from an unannotated training dataset parse trees that may or may not correspond to treebank annotation practices (Wu, 1997; Chiang, 2005).\nMost deep learning models for NLP that aim to make use of linguistic hierarchy integrate an external parser, either to prescribe the recursive structure of the neural network (Pollack, 1990; Goller and Ku\u0308chler, 1996; Socher et al., 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al., 2010; Bowman et al., 2016; Dyer et al., 2016b). But some recently described neural network models take the second approach and treat hierarchical structure as a latent variable, applying infer-\nence over graph-based conditional random fields (Kim et al., 2017), the straight-through estimator (Chung et al., 2017), or policy gradient reinforcement learning (Yogatama et al., 2017) to work around the inapplicability of gradient-based learning to problems with discrete latent states.\nFor the task of machine translation, syntactically-informed models have shown promise both inside and outside the deep learning context, with hierarchical phrase-based models frequently outperforming traditional ones (Chiang, 2005) and neural MT models augmented with morphosyntactic input features (Sennrich and Haddow, 2016; Nadejde et al., 2017), a tree-structured encoder (Eriguchi et al., 2016; Hashimoto and Tsuruoka, 2017), and a jointly trained parser (Eriguchi et al., 2017) each outperforming purely-sequential baselines.\nDrawing on many of these precedents, we introduce an attentional neural machine translation model whose encoder and decoder components are both tree-structured neural networks that predict their own constituency structure as they consume or emit text. The encoder and decoder networks are variants of the RNNG model introduced by Dyer et al. (2016b), allowing tree structures of unconstrained arity, while text is ingested at the character level, allowing the model to discover and make use of structure within words.\nThe parsing decisions of the encoder and decoder RNNGs are parameterized by a stochastic policy trained using a weighted sum of two objectives: a language model loss term that rewards predicting the next character with high likelihood, and a tree attention term that rewards one-to-one attentional correspondence between constituents in the encoder and decoder.\nWe evaluate this model on the German-English language pair of the flickr30k dataset, where it obtains similar performance to a strong character-\nar X\niv :1\n70 9.\n01 91\n5v 1\n[ cs\n.C L\n] 6\nS ep\n2 01\n7\nlevel baseline. Analysis of the latent trees produced by the encoder and decoder shows that the model learns a reasonable segmentation and shallow parse, and most phrase-level constituents constructed while ingesting the German input sentence correspond meaningfully to constituents built while generating the English output."}, {"heading": "2 Model", "text": ""}, {"heading": "2.1 Encoder/Decoder Architecture", "text": "The model consists of a coupled encoder and decoder, where the encoder is a modified stackonly recurrent neural network grammar (Kuncoro et al., 2017) and the decoder is a stack-only RNNG augmented with constituent-level attention. An RNNG is a top-down transition-based model that jointly builds a sentence representation and parse tree, representing the parser state with a StackLSTM and using a bidirectional LSTM as a constituent composition function. Our implementation is detailed in Figure 1, and differs from Dyer et al. (2016b) in that it lacks separate newnonterminal tokens for different phrase types, and thus does not include the phrase type as an input to the composition function. Instead, the values of xi for the encoder are fixed to a constant xenc while the values of xj for the decoder are determined through an attention procedure (Section 2.2).\nAs originally described, the RNNG predicts parser transitions using a one-layer tanh perceptron with three concatenated inputs: the last state of a unidirectional LSTM over the stack contents (s), the last state of a unidirectional LSTM over the reversed buffer of unparsed tokens (b), and the result of an LSTM over the past transitions (a). All three of these states can be computed with at most one LSTM step per parser transition using the StackLSTM algorithm (Dyer et al., 2016a). But such a baseline RNNG is actually outperformed by one which conditions the parser transitions only on the stack representation (Kuncoro et al., 2017). Restricting our model to this stack-only case allows both the encoder and decoder to be supervised using a language model loss, while allowing the model access to b would give it a trivial way to predict the next character and obtain zero loss."}, {"heading": "2.2 Attention", "text": "With the exception of the attention mechanism, the encoder and decoder are identical. While the encoder uses a single token to represent a new non-\nterminal, the decoder represents a new nonterminal on the stack as a sum weighted by structural attention of the phrase representations of all nonterminal tree nodes produced by the encoder. In particular, we use the normalized dot products between the decoder stack representation sdecj and the stack representation at each encoder node sienc (that is, the hidden state of the StackLSTM up to and including xencj but not h enc j ) as coefficients in a weighted sum of the phrase embeddings hienc corresponding to the encoder nodes:\n\u03b1ij = softmax all i\n(senci \u00b7 sdecj ) xdecj = \u2211 i \u03b1ijh enc i .\n(1)\nSince the dot products between encoder and decoder stack representations are a measure of structural similarity between the (left context of) the current decoder state and the encoder state. Within a particular decoder nonterminal, the model reduces to ordinary sequence-to-sequence transduction. Starting from the encoder\u2019s representation of the corresponding nonterminal or a weighted combination of such representations, the decoder will emit a translated sequence of child constituents (both nonterminal and terminal) one by one\u2014 applying attention only when emitting nonterminal children."}, {"heading": "2.3 Training", "text": "We formulate our model as a stochastic computation graph (Schulman et al., 2015), leading to a training paradigm that combines backpropagation (which provides the exact gradient through deterministic nodes) and vanilla policy gradient (which provides a Monte Carlo estimator for the gradient through stochastic nodes).\nThere are several kinds of training signals in our model. First, when the encoder or decoder chooses the GEN action it passes the current stack state s through a one-layer softmax perceptron, giving the probability that the next token is each of the characters in the vocabulary. The language model loss Lk for each generated token is the negative log probability assigned to the ground-truth next token. The other differentiable training signal is the coverage loss Lc, which is a measure of how much the attention weights diverge from the ideal of a one-to-one mapping. This penalty is computed as a sum of three MSE terms:\nLc = mean all i (1\u2212 \u2211 all j \u03b1ij) 2\n+mean all i (1\u2212max all j \u03b1ij) 2\n+mean all j (1\u2212max all i \u03b1ij) 2\n(2)\nBackpropagation using the differentiable losses affects only the weights of the output softmax perceptron. The overall loss function for these weights is a weighted sum of all Lk terms and Lc:\nL = 100Lc + 10 \u2211 all k Lk (3)\nThere are additionally nondifferentiable rewards r that bias the model towards or away from certain kinds of tree structures. Here, negative num-\nbers correspond to penalties. We assign a tree reward of \u22121 when the model predicts a REDUCE with only one child constituent (REDUCE with zero child constituents is forbidden) or predicts two REDUCE or NT transitions in a row. This biases the model against unary branching and reduces its likelihood of producing an exclusively left- or right-branching tree structure. In addition, for all constituents except the root, we assign a tree reward based on the size and type of its children. If n and t are the number of nonterminal and terminal children, this reward is 4t if all children are terminal and 9 \u221a n otherwise. A reward structure like this biases the model against freely mixing terminals and nonterminals within the same constituent and provides incentive to build substantial tree structures early on in training so the model doesn\u2019t get stuck in trivial local minima.\nWithin both the encoder and decoder, each stochastic action node has a corresponding tree reward rk if the action was REDUCE (otherwise zero) and a corresponding language model loss Lk if the action was GEN (otherwise zero). We subtract an exponential moving average baseline from each tree reward and additional exponential moving average baselines\u2014computed independently for each character z in the vocabulary, because we want to reduce the effect of character frequency\u2014 from the language model losses. If GEN(k) is the number of GEN transitions among actions one through k, and \u03b3 is a decay constant, the final rewardRmk for action k with m \u2208 {enc, dec} is:\nr\u0302k = rk \u2212 rbaseline L\u0302k = Lk \u2212 Lbaseline(zk)\nR\u0302k = Km\u2211 \u03ba=k \u03b3GEN(\u03ba)\u2212GEN(k)(r\u0302\u03ba \u2212 L\u0302m\u03ba )\nRmk = R\u0302k \u2212 Lc \u2212 (m = enc) Kdec\u2211 \u03ba=1 Ldeck .\n(4)\nThese rewards define the gradient that each stochastic node (with normalized action probabilities pak and chosen action ak) produces during backpropagation according to the standard multinomial score function estimator (REINFORCE):\n\u2207\u03b8pak = meanak=a Rk\u2207\u03b8 log pakk = meanak=a \u2212Rk pakk (5)"}, {"heading": "3 Results", "text": "We evaluated our model on the German-English language pair of the flickr30k data, the tex-\nZwei Inderinnen sehen Stoff durch.\nTw o\nIn di\nan wo\nme n\nlo ok\nov er\nfa br\nic .\nEin Junge in einer Gruppe von sitzenden Kindern l\u00e4chelt f\u00fcr die Kamera.\nA bo y in\na g r ou p of\nse at ed\nch il dr en\nsm il e fo r th e ca me ra .\nFigure 2: Attention visualizations for two sentences from the development set. Attention between two constituents is represented by a shaded rectangle whose projections on the x and y axes cover the encoder and decoder constituents respectively.\ntual component of the WMT Multimodal Translation shared task (Specia et al., 2016). An attentional sequence-to-sequence model with two layers and 384 hidden units from the OpenNMT project (Klein et al., 2017) was run at the character level as a baseline, obtaining 32.0 test BLEU with greedy inference. Our model with the same hidden size and greedy inference achieves test BLEU of 28.5 after removing repeated bigrams.\nWe implemented the model in PyTorch, benefiting from its strong support for dynamic and stochastic computation graphs, and trained with batch size 10 and the Adam optimizer (Kingma and Ba, 2015) with early stopping after 12 epochs. Character embeddings and the encoder\u2019s xenc embedding were initialized to random 384- dimensional vectors. The value of \u03b3 and the decay constant for the baselines\u2019 exponential moving average were both set to 0.95. A random selec-\ntion of translations is included in the supplemental material, while two attention plots are shown in Figure 2. Figure 2b demonstrates a common pathology of the model, where a phrasal encoder constituent would be attended to during decoding of the head word of the corresponding decoder constituent, while the head word of the encoder constituent would be attended to during decoding of the decoder constituent corresponding to the whole phrase. Another common pathology is repeated sentence fragments in the translation, which are likely generated because the model cannot condition future attention directly on past attention weights (the \u201cinput feeding\u201d approach introduced by Luong et al. (2015)).\nTranslation quality also suffers because of our use of a stack-only RNNG, which we chose because an RNNG with both stack and buffer inputs is incompatible with a language model loss. During encoding, the model must decide at the very beginning of the sentence how deeply to embed the first character. But with a stack-only RNNG, it must make this decision randomly, since it isn\u2019t able to use the buffer representation\u2014which contains the entire sentence."}, {"heading": "4 Conclusion", "text": "We introduce a new approach to leveraging unsupervised tree structures in NLP tasks like machine translation. Our experiments demonstrate that a small-scale MT dataset contains sufficient training signal to infer latent linguistic structure, and we are excited to learn what models like the one presented here can discover in full-size translation corpora. One particularly promising avenue of research is to leverage the inherently compositional phrase representations henci produced by the encoder for other NLP tasks.\nThere are also many possible directions for improving the model itself and the training process. Value function baselines can replace exponential moving averages, pure reinforcement learning can replace teacher forcing, and beam search can be used in place of greedy inference. Solutions to the translation pathologies presented in Section 3 are likely more complex, although one possible approach would leverage variational inference using a teacher model that can see the buffer and helps train a stack-only student model."}], "references": [{"title": "A fast unified model for parsing and sentence understanding", "author": ["Samuel Bowman", "Jon Gauthier", "Abhinav Rastogi", "Raghav Gupta", "Christopher Manning", "Christopher Potts."], "venue": "ACL.", "citeRegEx": "Bowman et al\\.,? 2016", "shortCiteRegEx": "Bowman et al\\.", "year": 2016}, {"title": "A hierarchical phrase-based model for statistical machine translation", "author": ["David Chiang."], "venue": "ACL.", "citeRegEx": "Chiang.,? 2005", "shortCiteRegEx": "Chiang.", "year": 2005}, {"title": "Hierarchical multiscale recurrent neural networks", "author": ["Junyoung Chung", "Sungjin Ahn", "Yoshua Bengio."], "venue": "ICLR.", "citeRegEx": "Chung et al\\.,? 2017", "shortCiteRegEx": "Chung et al\\.", "year": 2017}, {"title": "Transitionbased dependency parsing with stack long shortterm memory", "author": ["Chris Dyer", "Miguel Ballesteros", "Wang Ling", "Austin Matthews", "Noah A Smith."], "venue": "EMNLP.", "citeRegEx": "Dyer et al\\.,? 2016a", "shortCiteRegEx": "Dyer et al\\.", "year": 2016}, {"title": "Recurrent neural network grammars", "author": ["Chris Dyer", "Adhiguna Kuncoro", "Miguel Ballesteros", "Noah Smith."], "venue": "NAACL.", "citeRegEx": "Dyer et al\\.,? 2016b", "shortCiteRegEx": "Dyer et al\\.", "year": 2016}, {"title": "Tree-to-sequence attentional neural machine translation", "author": ["Akiko Eriguchi", "Kazuma Hashimoto", "Yoshimasa Tsuruoka."], "venue": "ACL.", "citeRegEx": "Eriguchi et al\\.,? 2016", "shortCiteRegEx": "Eriguchi et al\\.", "year": 2016}, {"title": "Learning to parse and translate improves neural machine translation", "author": ["Akiko Eriguchi", "Yoshimasa Tsuruoka", "Kyunghyun Cho."], "venue": "ACL.", "citeRegEx": "Eriguchi et al\\.,? 2017", "shortCiteRegEx": "Eriguchi et al\\.", "year": 2017}, {"title": "Learning task-dependent distributed representations by backpropagation through structure", "author": ["Christoph Goller", "Andreas K\u00fcchler."], "venue": "IEEE International Conference on Neural Networks. IEEE, volume 1, pages 347\u2013352.", "citeRegEx": "Goller and K\u00fcchler.,? 1996", "shortCiteRegEx": "Goller and K\u00fcchler.", "year": 1996}, {"title": "Neural machine translation with source-side latent graph parsing", "author": ["Kazuma Hashimoto", "Yoshimasa Tsuruoka."], "venue": "EMNLP.", "citeRegEx": "Hashimoto and Tsuruoka.,? 2017", "shortCiteRegEx": "Hashimoto and Tsuruoka.", "year": 2017}, {"title": "A syntax-directed translator with extended domain of locality", "author": ["Liang Huang", "Kevin Knight", "Aravind Joshi."], "venue": "CHPJI-NLP. Association for Computational Linguistics.", "citeRegEx": "Huang et al\\.,? 2006", "shortCiteRegEx": "Huang et al\\.", "year": 2006}, {"title": "Structured attention networks", "author": ["Yoon Kim", "Carl Denton", "Luong Hoang", "Alexander Rush."], "venue": "ICLR.", "citeRegEx": "Kim et al\\.,? 2017", "shortCiteRegEx": "Kim et al\\.", "year": 2017}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik Kingma", "Jimmy Ba."], "venue": "ICLR.", "citeRegEx": "Kingma and Ba.,? 2015", "shortCiteRegEx": "Kingma and Ba.", "year": 2015}, {"title": "OpenNMT: Open-source toolkit for neural machine translation", "author": ["G. Klein", "Y. Kim", "Y. Deng", "J. Senellart", "A.M. Rush."], "venue": "ArXiv preprint arXiv:1701.02810 .", "citeRegEx": "Klein et al\\.,? 2017", "shortCiteRegEx": "Klein et al\\.", "year": 2017}, {"title": "What do recurrent neural network grammars learn about syntax? In EACL", "author": ["Adhiguna Kuncoro", "Miguel Ballesteros", "Lingpeng Kong", "Chris Dyer", "Graham Neubig", "Noah Smith"], "venue": null, "citeRegEx": "Kuncoro et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Kuncoro et al\\.", "year": 2017}, {"title": "Effective approaches to attentionbased neural machine translation", "author": ["Minh-Thang Luong", "Hieu Pham", "Christopher D Manning."], "venue": "EMNLP.", "citeRegEx": "Luong et al\\.,? 2015", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Syntax-aware neural machine translation using CCG", "author": ["Maria Nadejde", "Siva Reddy", "Rico Sennrich", "Tomasz Dwojak", "Marcin Junczys-Dowmunt", "Philipp Koehn", "Alexandra Birch."], "venue": "arXiv preprint arXiv:1702.01147 .", "citeRegEx": "Nadejde et al\\.,? 2017", "shortCiteRegEx": "Nadejde et al\\.", "year": 2017}, {"title": "Recursive distributed representations", "author": ["Jordan B Pollack."], "venue": "Artificial Intelligence 46(1):77\u2013105.", "citeRegEx": "Pollack.,? 1990", "shortCiteRegEx": "Pollack.", "year": 1990}, {"title": "Gradient estimation using stochastic computation graphs", "author": ["John Schulman", "Nicolas Heess", "Theophane Weber", "Pieter Abbeel."], "venue": "NIPS.", "citeRegEx": "Schulman et al\\.,? 2015", "shortCiteRegEx": "Schulman et al\\.", "year": 2015}, {"title": "Linguistic input features improve neural machine translation", "author": ["Rico Sennrich", "Barry Haddow."], "venue": "WMT .", "citeRegEx": "Sennrich and Haddow.,? 2016", "shortCiteRegEx": "Sennrich and Haddow.", "year": 2016}, {"title": "Learning continuous phrase representations and syntactic parsing with recursive neural networks", "author": ["Richard Socher", "Christopher Manning", "Andrew Ng."], "venue": "NIPS Workshop on Deep Learning and Unsupervised Feature Learning.", "citeRegEx": "Socher et al\\.,? 2010", "shortCiteRegEx": "Socher et al\\.", "year": 2010}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Richard Socher", "Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher Manning", "Andrew Ng", "Christopher Potts."], "venue": "EMNLP.", "citeRegEx": "Socher et al\\.,? 2013", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "A shared task on multimodal machine translation and crosslingual image description", "author": ["Lucia Specia", "Stella Frank", "Khalil Simaan", "Desmond Elliott."], "venue": "WMT .", "citeRegEx": "Specia et al\\.,? 2016", "shortCiteRegEx": "Specia et al\\.", "year": 2016}, {"title": "Stochastic inversion transduction grammars and bilingual parsing of parallel corpora", "author": ["Dekai Wu."], "venue": "Computational linguistics 23(3):377\u2013403.", "citeRegEx": "Wu.,? 1997", "shortCiteRegEx": "Wu.", "year": 1997}, {"title": "Learning to compose words into sentences with reinforcement learning", "author": ["Dani Yogatama", "Phil Blunsom", "Chris Dyer", "Edward Grefenstette", "Wang Ling."], "venue": "ICLR.", "citeRegEx": "Yogatama et al\\.,? 2017", "shortCiteRegEx": "Yogatama et al\\.", "year": 2017}], "referenceMentions": [{"referenceID": 9, "context": "Many efforts to exploit linguistic hierarchy in NLP tasks make use of the output of a self-contained parser system trained from a human-annotated treebank (Huang et al., 2006).", "startOffset": 155, "endOffset": 175}, {"referenceID": 22, "context": "An alternative approach aims to jointly learn the task at hand and relevant aspects of linguistic hierarchy, inducing from an unannotated training dataset parse trees that may or may not correspond to treebank annotation practices (Wu, 1997; Chiang, 2005).", "startOffset": 231, "endOffset": 255}, {"referenceID": 1, "context": "An alternative approach aims to jointly learn the task at hand and relevant aspects of linguistic hierarchy, inducing from an unannotated training dataset parse trees that may or may not correspond to treebank annotation practices (Wu, 1997; Chiang, 2005).", "startOffset": 231, "endOffset": 255}, {"referenceID": 16, "context": "Most deep learning models for NLP that aim to make use of linguistic hierarchy integrate an external parser, either to prescribe the recursive structure of the neural network (Pollack, 1990; Goller and K\u00fcchler, 1996; Socher et al., 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al.", "startOffset": 175, "endOffset": 237}, {"referenceID": 7, "context": "Most deep learning models for NLP that aim to make use of linguistic hierarchy integrate an external parser, either to prescribe the recursive structure of the neural network (Pollack, 1990; Goller and K\u00fcchler, 1996; Socher et al., 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al.", "startOffset": 175, "endOffset": 237}, {"referenceID": 20, "context": "Most deep learning models for NLP that aim to make use of linguistic hierarchy integrate an external parser, either to prescribe the recursive structure of the neural network (Pollack, 1990; Goller and K\u00fcchler, 1996; Socher et al., 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al.", "startOffset": 175, "endOffset": 237}, {"referenceID": 19, "context": ", 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al., 2010; Bowman et al., 2016; Dyer et al., 2016b).", "startOffset": 106, "endOffset": 168}, {"referenceID": 0, "context": ", 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al., 2010; Bowman et al., 2016; Dyer et al., 2016b).", "startOffset": 106, "endOffset": 168}, {"referenceID": 4, "context": ", 2013) or to provide a supervision signal or training data for a network that predicts its own structure (Socher et al., 2010; Bowman et al., 2016; Dyer et al., 2016b).", "startOffset": 106, "endOffset": 168}, {"referenceID": 10, "context": "But some recently described neural network models take the second approach and treat hierarchical structure as a latent variable, applying inference over graph-based conditional random fields (Kim et al., 2017), the straight-through estimator (Chung et al.", "startOffset": 192, "endOffset": 210}, {"referenceID": 2, "context": ", 2017), the straight-through estimator (Chung et al., 2017), or policy gradient reinforcement learning (Yogatama et al.", "startOffset": 40, "endOffset": 60}, {"referenceID": 23, "context": ", 2017), or policy gradient reinforcement learning (Yogatama et al., 2017) to work around the inapplicability of gradient-based learning to problems with discrete latent states.", "startOffset": 51, "endOffset": 74}, {"referenceID": 1, "context": "For the task of machine translation, syntactically-informed models have shown promise both inside and outside the deep learning context, with hierarchical phrase-based models frequently outperforming traditional ones (Chiang, 2005) and neural MT models augmented with morphosyntactic input features (Sennrich and Haddow, 2016; Nadejde et al.", "startOffset": 217, "endOffset": 231}, {"referenceID": 18, "context": "For the task of machine translation, syntactically-informed models have shown promise both inside and outside the deep learning context, with hierarchical phrase-based models frequently outperforming traditional ones (Chiang, 2005) and neural MT models augmented with morphosyntactic input features (Sennrich and Haddow, 2016; Nadejde et al., 2017), a tree-structured encoder (Eriguchi et al.", "startOffset": 299, "endOffset": 348}, {"referenceID": 15, "context": "For the task of machine translation, syntactically-informed models have shown promise both inside and outside the deep learning context, with hierarchical phrase-based models frequently outperforming traditional ones (Chiang, 2005) and neural MT models augmented with morphosyntactic input features (Sennrich and Haddow, 2016; Nadejde et al., 2017), a tree-structured encoder (Eriguchi et al.", "startOffset": 299, "endOffset": 348}, {"referenceID": 5, "context": ", 2017), a tree-structured encoder (Eriguchi et al., 2016; Hashimoto and Tsuruoka, 2017), and a jointly trained parser (Eriguchi et al.", "startOffset": 35, "endOffset": 88}, {"referenceID": 8, "context": ", 2017), a tree-structured encoder (Eriguchi et al., 2016; Hashimoto and Tsuruoka, 2017), and a jointly trained parser (Eriguchi et al.", "startOffset": 35, "endOffset": 88}, {"referenceID": 6, "context": ", 2016; Hashimoto and Tsuruoka, 2017), and a jointly trained parser (Eriguchi et al., 2017) each outperforming purely-sequential baselines.", "startOffset": 68, "endOffset": 91}, {"referenceID": 0, "context": ", 2010; Bowman et al., 2016; Dyer et al., 2016b). But some recently described neural network models take the second approach and treat hierarchical structure as a latent variable, applying inference over graph-based conditional random fields (Kim et al., 2017), the straight-through estimator (Chung et al., 2017), or policy gradient reinforcement learning (Yogatama et al., 2017) to work around the inapplicability of gradient-based learning to problems with discrete latent states. For the task of machine translation, syntactically-informed models have shown promise both inside and outside the deep learning context, with hierarchical phrase-based models frequently outperforming traditional ones (Chiang, 2005) and neural MT models augmented with morphosyntactic input features (Sennrich and Haddow, 2016; Nadejde et al., 2017), a tree-structured encoder (Eriguchi et al., 2016; Hashimoto and Tsuruoka, 2017), and a jointly trained parser (Eriguchi et al., 2017) each outperforming purely-sequential baselines. Drawing on many of these precedents, we introduce an attentional neural machine translation model whose encoder and decoder components are both tree-structured neural networks that predict their own constituency structure as they consume or emit text. The encoder and decoder networks are variants of the RNNG model introduced by Dyer et al. (2016b), allowing tree structures of unconstrained arity, while text is ingested at the character level, allowing the model to discover and make use of structure within words.", "startOffset": 8, "endOffset": 1366}, {"referenceID": 13, "context": "The model consists of a coupled encoder and decoder, where the encoder is a modified stackonly recurrent neural network grammar (Kuncoro et al., 2017) and the decoder is a stack-only RNNG augmented with constituent-level attention.", "startOffset": 128, "endOffset": 150}, {"referenceID": 3, "context": "All three of these states can be computed with at most one LSTM step per parser transition using the StackLSTM algorithm (Dyer et al., 2016a).", "startOffset": 121, "endOffset": 141}, {"referenceID": 13, "context": "But such a baseline RNNG is actually outperformed by one which conditions the parser transitions only on the stack representation (Kuncoro et al., 2017).", "startOffset": 130, "endOffset": 152}, {"referenceID": 3, "context": "Our implementation is detailed in Figure 1, and differs from Dyer et al. (2016b) in that it lacks separate newnonterminal tokens for different phrase types, and thus does not include the phrase type as an input to the composition function.", "startOffset": 61, "endOffset": 81}, {"referenceID": 17, "context": "We formulate our model as a stochastic computation graph (Schulman et al., 2015), leading to a training paradigm that combines backpropagation (which provides the exact gradient through deterministic nodes) and vanilla policy gradient (which provides a Monte Carlo estimator for the gradient through stochastic nodes).", "startOffset": 57, "endOffset": 80}, {"referenceID": 21, "context": "tual component of the WMT Multimodal Translation shared task (Specia et al., 2016).", "startOffset": 61, "endOffset": 82}, {"referenceID": 12, "context": "An attentional sequence-to-sequence model with two layers and 384 hidden units from the OpenNMT project (Klein et al., 2017) was run at the character level as a baseline, obtaining 32.", "startOffset": 104, "endOffset": 124}, {"referenceID": 11, "context": "We implemented the model in PyTorch, benefiting from its strong support for dynamic and stochastic computation graphs, and trained with batch size 10 and the Adam optimizer (Kingma and Ba, 2015) with early stopping after 12 epochs.", "startOffset": 173, "endOffset": 194}, {"referenceID": 11, "context": "We implemented the model in PyTorch, benefiting from its strong support for dynamic and stochastic computation graphs, and trained with batch size 10 and the Adam optimizer (Kingma and Ba, 2015) with early stopping after 12 epochs. Character embeddings and the encoder\u2019s xenc embedding were initialized to random 384dimensional vectors. The value of \u03b3 and the decay constant for the baselines\u2019 exponential moving average were both set to 0.95. A random selection of translations is included in the supplemental material, while two attention plots are shown in Figure 2. Figure 2b demonstrates a common pathology of the model, where a phrasal encoder constituent would be attended to during decoding of the head word of the corresponding decoder constituent, while the head word of the encoder constituent would be attended to during decoding of the decoder constituent corresponding to the whole phrase. Another common pathology is repeated sentence fragments in the translation, which are likely generated because the model cannot condition future attention directly on past attention weights (the \u201cinput feeding\u201d approach introduced by Luong et al. (2015)).", "startOffset": 174, "endOffset": 1158}], "year": 2017, "abstractText": "Building models that take advantage of the hierarchical structure of language without a priori annotation is a longstanding goal in natural language processing. We introduce such a model for the task of machine translation, pairing a recurrent neural network grammar encoder with a novel attentional RNNG decoder and applying policy gradient reinforcement learning to induce unsupervised tree structures on both the source and target. When trained on character-level datasets with no explicit segmentation or parse annotation, the model learns a plausible segmentation and shallow parse, obtaining performance close to an attentional baseline.", "creator": "LaTeX with hyperref package"}}}