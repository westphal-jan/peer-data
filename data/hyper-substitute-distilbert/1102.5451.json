{"id": "1102.5451", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Feb-2011", "title": "Reduction of fuzzy automata by means of fuzzy quasi-orders", "abstract": "in our recent paper experts have established close encounters between kernel reduction of a fuzzy recognizer and recovery of constraint computational department of indifference chain equations. using other paper we have confidently discovered closure by obstruction of sequential intersections which are sequential graphs. in this vein we initially insist that in overlapping cases these reductions shall be suggested using simpler suppression of this system that are fuzzy quasi - orders. generally, overlapping quasi - orders and fuzzy equivalences means relatively good in the state equations, but we contend that right and left invariant fuzzy quasi - orders give poorer findings given right and left invariant fuzzy arrangements. comparisons also show finding fast connection based abolition of fuzzy quasi - appearances give better results than alternate reductions by means of token equivalences. furthermore from study a more general type in fuzzy quasi - orders, weakly right and left invariant genera, plus we determine that each show closely related to removal of fuzzy recognizers. we also extended some cooperation onto other left invariant fuzzy quasi - orders in conflict analysis of inter traumatic event networks.", "histories": [["v1", "Sat, 26 Feb 2011 21:37:24 GMT  (51kb)", "http://arxiv.org/abs/1102.5451v1", "42 pages, submitted to Information Sciences"]], "COMMENTS": "42 pages, submitted to Information Sciences", "reviews": [], "SUBJECTS": "cs.FL cs.AI", "authors": ["aleksandar stamenkovi\\'c", "miroslav \\'ciri\\'c", "jelena ignjatovi\\'c"], "accepted": false, "id": "1102.5451"}, "pdf": {"name": "1102.5451.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Aleksandar Stamenkovi\u0107", "Miroslav \u0106iri\u0107", "Jelena Ignjatovi\u0107"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n10 2.\n54 51\nv1 [\ncs .F\nL ]\n2 6\nFe b\n20 11\nIn our recent paper we have established close relationships between state reduction of a fuzzy recognizer and resolution of a particular system of fuzzy relation equations. In that paper we have also studied reductions by means of those solutions which are fuzzy equivalences. In this paper we will see that in some cases better reductions can be obtained using the solutions of this system that are fuzzy quasiorders. Generally, fuzzy quasi-orders and fuzzy equivalences are equally good in the state reduction, but we show that right and left invariant fuzzy quasi-orders give better reductions than right and left invariant fuzzy equivalences. We also show that alternate reductions by means of fuzzy quasi-orders give better results than alternate reductions by means of fuzzy equivalences. Furthermore we study a more general type of fuzzy quasi-orders, weakly right and left invariant ones, and we show that they are closely related to determinization of fuzzy recognizers. We also demonstrate some applications of weakly left invariant fuzzy quasi-orders in conflict analysis of fuzzy discrete event systems.\nKey words: Fuzzy automaton; non-deterministic automaton; fuzzy quasi-order; fuzzy equivalence; state reduction; afterset; alternate reduction; simulation; bisimulation; fuzzy relation equation; complete residuated lattice, fuzzy discrete event system"}, {"heading": "1. Introduction", "text": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice. For that reason, many researchers aimed their attention to NFA state reduction methods which do not necessarily give a minimal one, but they give \u201dreasonably\u201d smallNFAs that can be constructed efficiently. The basic idea of reducing the number of states of NFAs by computing and merging indistinguishable states resembles the minimization algorithm for DFAs, but is more complicated. That led to the concept of a right invariant equivalence on an NFA, studied by Ilie andYu [36, 37], who showed that they can be used to construct smallNFAs from regular expressions. In particular, both the partial derivative automaton and the follow automaton of a given regular expression are factor automata of the position automaton with respect to the right invariant equivalences (cf. [19, 20, 35, 37, 38]). Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].Moreover, the same conceptwas studiedunder thename\u201dbisimulation equivalence\u201d inmanyareas of computer science and mathematics, such as modal logic, concurrency theory, set theory, formal verification, model checking, etc., and numerous algorithms have been proposed to compute the greatest bisimulation equivalence on a given labeled graph or a labeled transition system (cf. [52, 57, 58, 59, 62, 73, 75]). The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).\n\u2729Research supported by Ministry of Science and Technological Development, Republic of Serbia, Grant No. 174013 \u2217Corresponding author. Tel.: +38118224492; fax: +38118533014.\nEmail addresses: aca@pmf.ni.ac.rs (Aleksandar Stamenkovic\u0301), mciric@pmf.ni.ac.rs (Miroslav C\u0301iric\u0301), jekaignjatovic73@gmail.com (Jelena Ignjatovic\u0301)\nPreprint submitted to March 1, 2011\nBetter results in the state reduction of NFAs can be achieved in two ways. The first one was also proposed by Ilie and Yu in [36, 37, 39, 40] who introduced the dual concept of a left invariant equivalence on an NFA and showed that even smaller NFAs can be obtained alternating reductions by means of right invariant and left invariant equivalences. On the other hand, Champarnaud andCoulon in [17, 18] proposed use of quasi-orders (preorders) instead of equivalences and showed that the method based on quasi-orders gives better reductions than the method based on equivalences. They gave an algorithm for computing the greatest right invariant and left invariant quasi-orders on an NFA working in a polynomial time, which was later improved in [39, 40].\nFuzzy finite automata are generalizations of NFAs, and the above mentioned problems concerning minimization and reduction of NFAs are also present in the work with fuzzy automata. Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states. They were called minimization algorithms, but the term minimization is not adequate because it does not involve the usual construction of the minimal fuzzy automaton in the set of all fuzzy automata recognizing a given fuzzy language, but just the procedure of computing and merging indistinguishable states. Therefore, these are essentially just state reduction algorithms.\nIn the deterministic case we can effectively detect and merge indistinguishable states, but in the nondeterministic case we have sets of states and it is seemingly very difficult to decide whether two states are distinguishable or not. What we shall do in this paper is find a superset such that one is certain not to merge state that should not be merged. There can always be states which could be merged but detecting those is too computationally expensive. In the case of fuzzy automata, this problem is even worse because we work with fuzzy sets of states. However, it turned out that in the non-deterministic case indistinguishability can be successfully modelled by equivalences and quasi-orders. In [24, 25] we have shown that in the fuzzy case the indistinguishability can be modelled by fuzzy equivalences, and here we show that this can be done by fuzzy quasi-orders. It is worth noting that in all previous papers dealing with reduction of fuzzy automata (cf. [2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated. In this paper, as well as [24, 25], show that better reductions can be achieved employing fuzzy relations, namely, fuzzy equivalences and fuzzy quasi-orders.\nIn contrast to [24, 25], wherewe have started froma fuzzy equivalence on a set of statesA of a fuzzy automaton A , here we start from an arbitrary fuzzy quasi-order R on A, we form the set A/R of all aftersets of R, and we turn the fuzzy transition function on A into a related fuzzy transition function on A/R. This results in the afterset fuzzy automaton A /R. If, in addition, A is a fuzzy recognizer, then we also turn its fuzzy sets of initial and terminal states into related fuzzy sets of initial and terminal states of the afterset fuzzy recognizer A /R. In a similar way, we construct the foreset fuzzy recognizer of A w.r.t. R, but we show that they are isomorphic, and hence, it is enough to consider only afterset fuzzy automata and recognizers. However, if we do not impose any restriction on R, then the afterset fuzzy recognizer A /R does not necessary recognize the same fuzzy language as A . We show that A and A /R recognize the same fuzzy language, i.e., they are equivalent, if and only if R is a solution to a particular system of fuzzy relation equations including R, as an unknown fuzzy quasi-order, transition relations on A and fuzzy sets of initial and terminal states. This system, called the general system, has at least one solution in the set Q(A) of all fuzzy quasi-orders on A, the equality relation on A. Nevertheless, to obtain the best possible reduction of A , we have to find the greatest solution to the general system in Q(A), if it exists, or to find as big a solution as possible. The general system does not necessary have the greatest solution (Example 3.2), and also, it may consist of infinitely many equations, and finding its nontrivial solutions may be a very difficult task. For that reason we aim our attention to some instances of the general system. These instances have to be as general as possible, but they have to be easier to solve. From a practical point of view, these instances have to consist of finitely many equations.\nIn Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25]. Using a methodology similar to the one developed in [24, 25] for fuzzy equivalences, we give a characterization of right invariant fuzzy quasi-orders on a fuzzy automaton A , and we prove that they form a complete lattice\nwhose greatest element gives the best reduction of A by means of fuzzy quasi-orders of this type. Then by Theorem 4.3 we give a procedure for computing the greatest right invariant fuzzy quasi-order contained in a given fuzzy quasi-order, which works if the underlying structure L of truth values is locally finite, but it does not necessary work if L is not locally finite. In particular, it works for classical fuzzy automata over the Go\u0308del structure, but it does not necessary work for fuzzy automata over the Goguen (product) structure. We also characterize the greatest right invariant fuzzy quasi-order in the case when the structure L satisfies certain distributivity conditions for join and multiplication over infima. This characterization hold, for example, whenever multiplication is assumed to be a continuous t-norm on the real unit interval, and hence, they hold for \u0141ukasiewicz, Goguen and Go\u0308del structures. Although the results, as well as the methodology, are similar to those obtained in [24, 25] for fuzzy equivalences, there are some important differences which justify our study of state reductions by means of fuzzy quasi-orders. Generally, fuzzy quasi-orders and fuzzy equivalences are equally good in the reduction of fuzzy automata and recognizers, as we have shown by Theorem 3.4. However, Example 4.3 shows that the right invariant fuzzy quasi-orders give better reductions than right invariant fuzzy equivalences. Moreover, the iterative procedure for computing the greatest right invariant fuzzy quasi-order on a fuzzy automaton A , given in Theorem 4.3, can terminate in a finite number of steps even if a similar iteration procedure for computing the greatest right invariant fuzzy equivalence on A , developed in [24, 25], does not terminate in a finite number of steps (Example 4.2). It is worth noting that the greatest right and left invariant fuzzy quasi-orders are calculated using iterative procedures, but these calculations are not approximative. Whenever these procedures terminate in a finite number of steps, exact solutions to the considered systems of fuzzy relation equations are obtained.\nAs we have noted, the procedure for computing the greatest right invariant fuzzy quasi-orders on fuzzy automata does not necessarywork if the underlying structureL of truth values is not locally finite. For that reason in Section 5 we consider some special types of right and left invariant fuzzy quasi-orders, and we show that the greatest fuzzy quasi-orders of these types can be effectively computed even if L is not necessary locally finite. By Theorem 5.1 we give an iterative procedure for computing the greatest right invariant crisp quasi-order contained in a given crisp or fuzzy quasi-order. This procedureworks ifL is any complete residuated lattice, and even if L is a lattice ordered monoid. On the other hand, as Example 5.1 shows, in caseswhenwe are able to effectively compute the greatest right invariant fuzzy quasi-order, using it, better state reduction can be achieved than by using the greatest right invariant crisp quasi-order. We also study the strongly right invariant fuzzy quasi-orders, which can be effectively computed without any iteration procedure, by solving a simpler system of fuzzy relation equations. This procedure works if L is any complete residuated lattice, even though we also show that reductions by means of the greatest strongly right invariant fuzzy quasi-orders give worse results than reductions by means of the greatest right invariant ones (Example 5.2).\nIn addition to special types of right and left invariant fuzzy quasi-orders considered in Section 5, in Section 6we study somemore general types of these fuzzy quasi-orders \u2013 theweakly right and left invariant fuzzy quasi-orders. We show that the weakly right invariant fuzzy quasi-orders on a fuzzy recognizer A form a principal ideal of the lattice of quasi-orders on the set of states of A . We give a procedure for computing the greatest element of this principal ideal (Theorem 6.1), and we show that weakly right invariant fuzzy quasi-orders give better reductions than right invariant ones. However, although the system of fuzzy relation equations that defines the weakly right invariant fuzzy quasi-orders consists of fuzzy relation equations whose greatest solutions can be easily computed, computing the greatest solution to the whole system is computationally hard. Namely, the number of equations may be exponential in the number of states of A , or it may even be infinite. This is an immediate consequence of the fact that the procedure for computing the greatestweakly right invariant fuzzyquasi-order onA includes the procedure for determinization of the reverse fuzzy recognizer of A developed in [32], whereas the procedure for computing the greatest weakly left invariant one includes determinization of A .\nIn Section 7 we show that even better results in the state reduction can be obtained by alternating reductions bymeans of the greatest right and left invariant fuzzy quasi-orders, or bymeans of the greatestweakly right and left invariant ones. First we show that if we reduce a fuzzy automaton using the greatest right invariant fuzzy quasi-order, repeated reduction using right invariant fuzzy quasi-orders can not decrease\nthe number of states. The number of states can be decreased if we apply reduction by means of the greatest left invariant fuzzy quasi-order. The same observation is true for left invariant fuzzy quasi-orders, as well as for weakly right and left invariant ones. We also show that alternate reductions starting with a (weakly) right invariant fuzzy quasi-order, and those starting with a (weakly) left invariant one, can have different lengths, and related alternate reducts can have different number of states (Example 7.1). Moreover, there is no a general procedure to decide which of these alternate reductions will give better results. Also, there is no a general procedure to decide whether we have reached the smallest number of states in alternate reductions.\nLet us note that Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] studied the state reduction of non-deterministic recognizers by means of right and left invariant quasiorders. However, they do not used the afterset or foreset recognizers w.r.t. a quasi-order R. Instead, they used the factor recognizer w.r.t. the natural equivalence ER of R. Although these recognizers are equivalent and have the same number of states, there are some differences in their use if one works with alternate reductions. Indeed, by Example 7.1 we also show that in some cases alternate reductions by means of natural equivalences of right and left invariant quasi-orders and alternate reductions by means of right and left invariant equivalences do not decrease the number of states, while the alternate reductions by means of right and left invariant quasi-orders decrease this number.\nFinally, in Section 8 we demonstrate some applications of weakly left invariant fuzzy quasi-orders in the fuzzy discrete event systems theory. We show that every fuzzy recognizer A is conflict-equivalent with the afterset fuzzy recognizer A /R w.r.t. any weakly left invariant fuzzy quasi-order R on A . For the sake of conflict analysis, this means that in the parallel composition of fuzzy recognizers every component can be replaced by such afterset fuzzy recognizer, what results in a smaller fuzzy recognizer to be analysed, anddo not affect conflicting properties of the components. It is also interesting to study applications of fuzzy quasi-orders for reducing automaton states in other branches of the theory of discrete event systems, for example in the fault diagnosis, and these applications will be a subject of our future research.\nNote again that themeaningof state reductions bymeansof fuzzyquasi-orders and fuzzy equivalences is in their possible effectiveness, as opposed to the minimization which is not effective. However, by Theorem 3.5 we show that there exists a fuzzy recognizer such that no its state reduction by means of fuzzy quasiorders or fuzzy equivalences provide a minimal fuzzy recognizer."}, {"heading": "2. Preliminaries", "text": "2.1. Fuzzy sets and relations\nIn this paper we will use complete residuated lattices as structures of membership values. A residuated lattice is an algebra L = (L,\u2227,\u2228,\u2297,\u2192, 0, 1) such that\n(L1) (L,\u2227,\u2228, 0, 1) is a lattice with the least element 0 and the greatest element 1,\n(L2) (L,\u2297, 1) is a commutative monoid with the unit 1,\n(L3) \u2297 and \u2192 form an adjoint pair, i.e., they satisfy the adjunction property: for all x, y, z \u2208 L,\nx \u2297 y 6 z \u21d4 x 6 y \u2192 z. (1)\nIf, in addition, (L,\u2227,\u2228, 0, 1) is a complete lattice, then L is called a complete residuated lattice. The operations \u2297 (called multiplication) and \u2192 (called residuum) are intended for modeling the conjunction and implication of the corresponding logical calculus, and supremum ( \u2228 ) and infimum ( \u2227 ) are intended for modeling of the existential and general quantifier, respectively. An operation\u2194 defined by\nx \u2194 y = (x \u2192 y) \u2227 (y \u2192 x), (2)\ncalled biresiduum (or biimplication), is used for modeling the equivalence of truth values. It can be easily verified that with respect to 6, \u2297 is isotonic in both arguments, and\u2192 is isotonic in the second and antitonic in the first argument. Emphasizing their monoidal structure, in some sources residuated lattices are called\nintegral, commutative, residuated \u2113-monoids [30]. It can be easily verified that with respect to 6, \u2297 is isotonic in both arguments, \u2192 is isotonic in the second and antitonic in the first argument, and for any x, y, z \u2208 L and any {xi}i\u2208I, {yi}i\u2208I \u2286 L, the following hold:\nx \u2192 y 6 x \u2297 z \u2192 y \u2297 z, (3) (\u2228\ni\u2208I\nxi ) \u2297 x = \u2228\ni\u2208I\n(xi \u2297 x), (4)\n\u2227\ni\u2208I\n(xi \u2192 yi) 6 (\u2227\ni\u2208I\nxi ) \u2192 (\u2227\ni\u2208I\nyi )\n(5)\n\u2227\ni\u2208I\n(xi \u2192 yi) 6 (\u2228\ni\u2208I\nxi ) \u2192 (\u2228\ni\u2208I\nyi ) . (6)\nFor other properties of complete residuated lattices one can refer to [3, 4].\nThe most studied and applied structures of truth values, defined on the real unit interval [0, 1] with x \u2227 y = min(x, y) and x \u2228 y = max(x, y), are the \u0141ukasiewicz structure (x \u2297 y = max(x + y \u2212 1, 0), x \u2192 y = min(1 \u2212 x + y, 1)), the Goguen (product) structure (x \u2297 y = x \u00b7 y, x \u2192 y = 1 if x 6 y and = y/x otherwise) and the Go\u0308del structure (x \u2297 y = min(x, y), x \u2192 y = 1 if x 6 y and = y otherwise). More generally, an algebra ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1) is a complete residuated lattice if and only if \u2297 is a left-continuous t-norm and the residuum is defined by x \u2192 y = \u2228 {u \u2208 [0, 1] | u \u2297 x 6 y}. Another important set of truth values is the set {a0, a1, . . . , an}, 0 = a0 < \u00b7 \u00b7 \u00b7 < an = 1, with ak \u2297 al = amax(k+l\u2212n,0) and ak \u2192 al = amin(n\u2212k+l,n). A special case of the latter algebras is the two-element Boolean algebra of classical logic with the support {0, 1}. The only adjoint pair on the two-element Boolean algebra consists of the classical conjunction and implication operations. This structure of truth values we call the Boolean structure. A residuated lattice L satisfying x \u2297 y = x \u2227 y is called a Heyting algebra, whereas a Heyting algebra satisfying the prelinearity axiom (x \u2192 y) \u2228 (y \u2192 x) = 1 is called a Go\u0308del algebra. If any finitelly generated subalgebra of residuated lattice L is finite, then L is called locally finite. For example, every Go\u0308del algebra, and hence, the Go\u0308del structure, is locally finite, whereas the product structure is not locally finite.\nIn the further text L will be a complete residuated lattice. A fuzzy subset of a set A over L , or simply a fuzzy subset of A, is any mapping from A into L. Ordinary crisp subsets of A are considered as fuzzy subsets of A taking membership values in the set {0, 1} \u2286 L. Let f and g be two fuzzy subsets of A. The equality of f and g is defined as the usual equality of mappings, i.e., f = g if and only if f (x) = g(x), for every x \u2208 A. The inclusion f 6 g is also defined pointwise: f 6 g if and only if f (x) 6 g(x), for every x \u2208 A. Endowed with this partial order the set LA of all fuzzy subsets of A forms a complete residuated lattice, in which the meet (intersection) \u2227 i\u2208I fi and the join (union) \u2228 i\u2208I fi of an arbitrary family { fi}i\u2208I of fuzzy subsets of A are mappings from A into L defined by\n  \u2227\ni\u2208I\nfi   (x) = \u2227\ni\u2208I\nfi(x),\n  \u2228\ni\u2208I\nfi   (x) = \u2228\ni\u2208I\nfi(x),\nand the product f \u2297 g is a fuzzy subset defined by f \u2297 g(x) = f (x) \u2297 g(x), for every x \u2208 A. The crisp part\nof a fuzzy subset f of A is a crisp subset f\u0302 = {a \u2208 A | f (a) = 1} of A. We will also consider f\u0302 as a mapping\nf\u0302 : A \u2192 L defined by f\u0302 (a) = 1, if f (a) = 1, and f\u0302 (a) = 0, if f (a) < 1.\nA fuzzy relation on a set A is any mapping from A \u00d7 A into L, that is to say, any fuzzy subset of A \u00d7 A, and the equality, inclusion, joins, meets and ordering of fuzzy relations are defined as for fuzzy sets. The set of all fuzzy relations on A will be denoted by R(A).\nFor fuzzy relations P,Q \u2208 R(A), their composition P \u25e6Q is a fuzzy relation on A defined by\n(P \u25e6Q)(a, b) = \u2228\nc\u2208A\nP(a, c) \u2297Q(c, b), (7)\nfor all a, b \u2208 A, and for a fuzzy subset f of A and a fuzzy relation P \u2208 R(A), the compositions f \u25e6 P and P \u25e6 f are fuzzy subsets of A defined by\n( f \u25e6 P)(a) = \u2228\nb\u2208A\nf (b) \u2297 P(b, a), (P \u25e6 f )(a) = \u2228\nb\u2208A\nP(a, b) \u2297 f (b), (8)\nfor any a \u2208 A. Finally, for fuzzy subsets f and g of Awe write\nf \u25e6 g = \u2228\na\u2208A\nf (a) \u2297 g(a). (9)\nThe value f \u25e6 g can be interpreted as the \u201ddegree of overlapping\u201d of f and g. For any P,Q,R \u2208 R(A) and any {Pi}i\u2208I, {Qi}i\u2208I \u2286 R(A), the following hold:\n(P \u25e6Q) \u25e6 R = P \u25e6 (Q \u25e6 R), (10)\nP 6 Q implies P \u25e6 R 6 Q \u25e6 R and R \u25e6 P 6 R \u25e6Q, (11) P \u25e6 (\u2228\ni\u2208I\nQi ) = \u2228\ni\u2208I\n(P \u25e6Qi), (\u2228\ni\u2208I\nPi ) \u25e6Q = \u2228\ni\u2208I\n(Pi \u25e6Q) (12)\nP \u25e6 (\u2227\ni\u2208I\nQi ) 6 \u2227\ni\u2208I\n(P \u25e6Qi), (\u2227\ni\u2208I\nPi ) \u25e6Q 6 \u2227\ni\u2208I\n(Pi \u25e6Q). (13)\nWe can also easily verify that\n( f \u25e6 P) \u25e6Q = f \u25e6 (P \u25e6Q), ( f \u25e6 P) \u25e6 g = f \u25e6 (P \u25e6 g), (14)\nfor arbitrary fuzzy subsets f and g of A, and fuzzy relations P and Q on A, and hence, the parentheses in (10) can be omitted. For n \u2208 N, an n-th power of a fuzzy relation R on A is a fuzzy relation Rn on A defined inductively by R1 = R and Rn+1 = Rn \u25e6 R. We also define R0 to be the equality relation on A.\nNote also that if A is a finite set with n elements, then P and Q can be treated as n \u00d7 n fuzzy matrices over L and P \u25e6Q is the matrix product, whereas f \u25e6 P can be treated as the product of a 1\u00d7 nmatrix f and an n \u00d7 n matrix P, and P \u25e6 f as the product of an n \u00d7 n matrix P and an n \u00d7 1 matrix f t (the transpose of f ).\nA fuzzy relation R on A is said to be\n(R) reflexive (or fuzzy reflexive) if R(a, a) = 1, for every a \u2208 A;\n(S) symmetric (or fuzzy symmetric) if R(a, b) = R(b, a), for all a, b \u2208 A;\n(T) transitive (or fuzzy transitive) if for all a, b, c \u2208 Awe have\nR(a, b) \u2297 R(b, c) 6 R(a, c).\nFor a fuzzy relation R on a set A, a fuzzy relation R\u221e on A defined by\nR\u221e = \u2228\nn\u2208N\nRn\nis the least transitive fuzzy relation on A containing R, and it is called the transitive closure of R. A fuzzy relation on A which is reflexive, symmetric and transitive is called a fuzzy equivalence. With respect to the ordering of fuzzy relations, the set E (A) of all fuzzy equivalences on A is a complete lattice, in which the meet coincide with the ordinary intersection of fuzzy relations, but in the general case, the join in E (A) does not coincide with the ordinary union of fuzzy relations.\nFor a fuzzy equivalence E on A and a \u2208 A we define a fuzzy subset Ea of A by Ea(x) = E(a, x), for every x \u2208 A. We call Ea an equivalence class of E determined by a. The set A/E = {Ea | a \u2208 A} is called the factor set of A w.r.t. E (cf. [3, 22]). For an equivalence \u03c0 on A, the related factor set will be denoted by A/\u03c0 and the equivalence class of an element a \u2208 A by \u03c0a. A fuzzy equivalence E on a set A is called a fuzzy equality if for\nall x, y \u2208 A, E(x, y) = 1 implies x = y. In other words, E is a fuzzy equality if and only if its crisp part E\u0302 is a crisp equality.\nA fuzzy relationon a setAwhich is reflexive and transitive is called a fuzzy quasi-order, and a reflexive and transitive crisp relation onA is called a quasi-order. In some sources quasi-orders and fuzzy quasi-orders are called preorders and fuzzy preorders (for example, see [17, 18, 39, 40]). Note that a reflexive fuzzy relation R is a fuzzy quasi-order if and only if R2 = R. With respect to the ordering of fuzzy relations, the set Q(A) of all fuzzy quasi-orders on A is a complete lattice, in which the meet coincide with the ordinary intersection of fuzzy relations. Nevertheless, in the general case, the join in Q(A) does not coincide with the ordinary union of fuzzy relations. Namely, if R is the join in Q(A) of a family {Ri}i\u2208I of fuzzy quasi-orders on A, then R can be represented by\nR = (\u2228\ni\u2208I\nRi\n)\u221e = \u2228\nn\u2208N\n(\u2228\ni\u2208I\nRi\n)n . (15)\nIfR is a fuzzy quasi-order on a setA, then a fuzzy relation ER defined by ER = R\u2227R \u22121 is a fuzzy equivalence on A, and is called a natural fuzzy equivalence of R. A fuzzy quasi-order R on a set A is a fuzzy order if for all a, b \u2208 A, R(a, b) = R(b, a) = 1 implies a = b, i.e., if the natural fuzzy equivalence ER of R is a fuzzy\nequality. Clearly, a fuzzy quasi-order R is a fuzzy order if and only if its crisp part R\u0302 is a crisp order. It is worth noting that different concepts of a fuzzy order have been discussed in literature concerning fuzzy relations (for example, see [5, 6, 7, 8] and other sources cited there). In particular, fuzzy orders defined here differ from fuzzy orderings defined in [5, 6, 8].\nFor more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.\n2.2. Fuzzy automata and languages\nBy a fuzzy automaton overL , or simply a fuzzy automaton, is defined as a tripleA = (A,X, \u03b4A), whereA and X are the set of states and the input alphabet, and \u03b4A : A\u00d7X\u00d7A \u2192 L is a fuzzysubset ofA\u00d7X\u00d7A, called the fuzzy transition function. We can interpret \u03b4A(a, x, b) as the degree to which an input letter x \u2208 X causes a transition from a state a \u2208 A into a state b \u2208 A. The input alphabet X will be always finite, but for methodological reasons we will allow the set of states A to be infinite. A fuzzy automaton whose set of states is finite is called a fuzzy finite automaton. Cardinality of a fuzzy automaton A = (A,X, \u03b4A), denoted as |A |, is defined as the cardinality of its set of states A.\nLet X\u2217 denote the free monoid over the alphabet X, and let e \u2208 X\u2217 be the empty word. The mapping \u03b4A\ncan be extended up to a mapping \u03b4A\u2217 : A \u00d7 X \u2217 \u00d7 A \u2192 L as follows: If a, b \u2208 A, then\n\u03b4A\u2217 (a, e, b) =  1 if a = b 0 otherwise , (16)\nand if a, b \u2208 A, u \u2208 X\u2217 and x \u2208 X, then\n\u03b4A\u2217 (a, ux, b) = \u2228\nc\u2208A\n\u03b4A\u2217 (a, u, c)\u2297 \u03b4 A(c, x, b). (17)\nBy (4) and Theorem 3.1 [47] (see also [67, 68, 70]), we have that\n\u03b4A\u2217 (a, uv, b) = \u2228\nc\u2208A\n\u03b4A\u2217 (a, u, c)\u2297 \u03b4 A \u2217 (c, v, b), (18)\nfor all a, b \u2208 A and u, v \u2208 X\u2217, i.e., if w = x1 \u00b7 \u00b7 \u00b7xn, for x1, . . . , xn \u2208 X, then\n\u03b4A\u2217 (a,w, b) = \u2228\n(c1,...,cn\u22121)\u2208An\u22121\n\u03b4A(a, x1, c1) \u2297 \u03b4 A(c1, x2, c2) \u2297 \u00b7 \u00b7 \u00b7 \u2297 \u03b4 A(cn\u22121, xn, b). (19)\nIntuitively, the product \u03b4A(a, x1, c1) \u2297 \u03b4 A(c1, x2, c2) \u2297 \u00b7 \u00b7 \u00b7 \u2297 \u03b4 A(cn\u22121, xn, b) represents the degree to which the input word w causes a transition from a state a into a state b through the sequence of intermediate states c1, . . . , cn\u22121 \u2208 A, and \u03b4 A \u2217 (a,w, b) represents the supremum of degrees of all possible transitions from a into b caused by w.\nFor any u \u2208 X\u2217, and any a, b \u2208 A define a fuzzy relation \u03b4Au on A by\n\u03b4Au (a, b) = \u03b4 A \u2217 (a, u, b), (20)\ncalled the fuzzy transition relation determined by u. Then (18) can be written as\n\u03b4Auv = \u03b4 A u \u25e6 \u03b4 A v , (21)\nfor all u, v \u2208 X\u2217.\nAn initial fuzzy automaton is defined as a quadruple A = (A,X, \u03b4A, \u03c3A), where (A,X, \u03b4A) is a fuzzy automaton and \u03c3A \u2208 LA is the fuzzy set of initial states, and a fuzzy recognizer is defined as a five-tuple A = (A,X, \u03b4A, \u03c3A, \u03c4A), where (A,X, \u03b4A, \u03c3A) is as above, and \u03c4A \u2208 LA is the fuzzy set of terminal states. We also say that A is a fuzzy recognizer belonging to the fuzzy automaton (A,X, \u03b4A).\nA fuzzy language in X\u2217 over L , or briefly a fuzzy language, is any fuzzy subset of X\u2217, i.e., any mapping from X\u2217 into L. A fuzzy language recognized by a fuzzy recognizer A = (A,X, \u03b4A, \u03c3A, \u03c4A), denoted as L(A ), is a fuzzy language in LX \u2217 defined by\nL(A )(u) = \u2228\na,b\u2208A\n\u03c3A(a) \u2297 \u03b4A\u2217 (a, u, b) \u2297 \u03c4 A(b), (22)\nor equivalently,\nL(A )(e) = \u03c3A \u25e6 \u03c4A,\nL(A )(u) = \u03c3A \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03c4\nA, (23)\nfor any u = x1x2 . . . xn \u2208 X +, where x1, x2, . . . , xn \u2208 X. In other words, the equality (22) means that the membership degree of the word u to the fuzzy language L(A ) is equal to the degree to which A recognizes or accepts the word u.\nThe reverse fuzzy automaton of a fuzzy automaton A = (A,X, \u03b4A) denoted as \u00afA = (A,X, \u03b4\u0304A), is a fuzzy automaton with the fuzzy transition function defined by \u03b4\u0304A(a, x, b) = \u03b4A(b, x, a), for all a, b \u2208 A and x \u2208 X. A reverse fuzzy recognizer of a fuzzy recognizer A = (A,X, \u03b4A, \u03c3A, \u03c4A) is \u00afA = (A,X, \u03b4\u0304A, \u03c3\u0304A, \u03c4\u0304A), a fuzzy recognizer with the fuzzy transition function \u03b4\u0304A defined as above, and fuzzy sets of initial and terminal states defined by \u03c3\u0304A = \u03c4A and \u03c4\u0304A = \u03c3A.\nFuzzy automata A = (A,X, \u03b4A) and A \u2032 = (A\u2032,X, \u03b4A \u2032\n) are isomorphic if there is a bijective mapping \u03c6 : A \u2192 A\u2032 such that \u03b4A(a, x, b) = \u03b4A \u2032\n(\u03c6(a), x, \u03c6(b)), for all a, b \u2208 A and x \u2208 X. It is easy to check that in this case we also have that \u03b4A\u2217 (a, u, b) = \u03b4 A\u2032 \u2217 (\u03c6(a), u, \u03c6(b)), for all a, b \u2208 A and u \u2208 X\n\u2217. Similarly, fuzzy recognizers A = (A,X, \u03b4A, \u03c3A, \u03c4A) and A \u2032 = (A\u2032,X, \u03b4A \u2032 , \u03c3A \u2032 , \u03c4A \u2032\n) are isomorphic if there exists a bijective mapping \u03c6 : A \u2192 A\u2032 such that \u03b4A(a, x, b) = \u03b4A \u2032 (\u03c6(a), x, \u03c6(b)), for all a, b \u2208 A and x \u2208 X, and also, \u03c3A(a) = \u03c3A \u2032\n(\u03c6(a)) and \u03c4A(a) = \u03c4A \u2032 (\u03c6(a)), for every a \u2208 A.\nIf A = (A,X, \u03b4A) is a fuzzy automaton such that \u03b4A is a crisp relation, then A is an ordinary crisp non-deterministic automaton, while if \u03b4A is a mapping of A \u00d7 X into A, then A is an ordinary deterministic automaton. Evidently, in these two cases we have that \u03b4A\u2217 is also a crisp subset of A\u00d7X\n\u2217 \u00d7A, and a mapping of A \u00d7 X\u2217 into A, respectively. In other words, non-deterministic automata are fuzzy automata over the Boolean structure. If A = (A,X, \u03b4A, \u03c3A, \u03c4A) such that \u03b4A is a crisp relation and \u03c3A and \u03c4A are crisp subsets of A, then A is called a non-deterministic recognizer.\nFor undefined notions and notation one can refer to [3, 4, 60]."}, {"heading": "3. Afterset and foreset fuzzy automata", "text": "Let R be a fuzzy quasi-order on a set A. For each a \u2208 A, the R-afterset of a is the fuzzy set Ra \u2208 L A defined by Ra(b) = R(a, b), for any b \u2208 A, while the R-foreset of a is the fuzzy set R a \u2208 LA defined by Ra(b) = R(b, a), for any b \u2208 A (see [1, 26, 27]). The set of all R-aftersets will be denoted by A/R, and the set of all R-foresets will be denoted by A\\R. Clearly, if R is a fuzzy equivalence, then A/R = A\\R is the set of all equivalence classes of R.\nIf f is an arbitrary fuzzy subset of A, then fuzzy relations R f and R f on A defined by\nR f (a, b) = f (a) \u2192 f (b), R f (a, b) = f (b) \u2192 f (a), (24)\nfor all a, b \u2208 A, are fuzzy quasi-orders on A. In particular, if f is a normalized fuzzy subset of A, then it is an afterset of R f and a foreset of R f .\nTheorem 3.1. Let R be a fuzzy quasi-order on a set A and E the natural fuzzy equivalence of R. Then\n(a) For arbitrary a, b \u2208 A the following conditions are equivalent:\n(i) E(a, b) = 1;\n(ii) Ea = Eb; (iii) Ra = Rb; (iv) Ra = Rb.\n(b) Functions Ra 7\u2192 Ea of A/R to A/E, and Ra 7\u2192 R a of A/R to A\\R, are bijective functions.\nProof. (a) Consider arbitrary a, b \u2208 A. (i)\u21d2(ii). Let E(a, b) = 1, that is R(a, b) = R(b, a) = 1.Then for every c \u2208 A we have that\nRb(c) = R(b, c) = R(a, b) \u2297 R(b, c) 6 R(a, c) = Ra(c),\nwhence Rb 6 Ra. Analogously we prove that Ra 6 Rb, and therefore, Ra = Rb. (ii)\u21d2(i). Let Ra = Rb. Then\nR(a, b) = Ra(b) > Rb(b) = R(b, b) = 1,\nwhich yields R(a, b) = 1. Analogously we prove that R(b, a) = 1, and hence, E(a, b) = 1. Equivalence (i)\u21d4(iii) can be proved similarly as (i)\u21d4(ii). The assertion (b) follows immediately by (a).\nLet us consider the Go\u0308del structure and a fuzzy quasi-order R on a set A given by\nR =   1 0.3 0.3 0 1 0.2 0 1 1   .\nThe natural fuzzy equivalence ER of R is calculated by ER(a, b) = R(a, b) \u2227 R \u22121(a, b) = R(a, b) \u2227 R(b, a), i.e.\nER =   1 0 0 0 1 0.2 0 0.2 1   .\nIf A is a finite set with n elements and a fuzzy quasi-order R on A is treated as an n\u00d7n fuzzymatrix over L , then R-aftersets are row vectors, whereas R-foresets are column vectors of this matrix. The previous theorem says that i-th and j-th row vectors of this matrix are equal if and only if its i-th and j-th column vectors are equal, and vice versa. Moreover, we have that R is a fuzzy order if and only if all its row vectors are different, or equivalently, if and only if all its column vectors are different.\nLet A = (A,X, \u03b4A) be a fuzzy automaton and let R be a fuzzy quasi-order on A. We can define the fuzzy transition function \u03b4A/R : A/R \u00d7 X \u00d7 A/R \u2192 L by\n\u03b4A/R(Ra, x,Rb) = \u2228\na\u2032,b\u2032\u2208A\nR(a, a\u2032) \u2297 \u03b4A(a\u2032, x, b\u2032) \u2297 R(b\u2032, b), (25)\nor equivalently\n\u03b4A/R(Ra, x,Rb) = (R \u25e6 \u03b4 A x \u25e6 R)(a, b) = Ra \u25e6 \u03b4 A x \u25e6 R b, (26)\nfor all a, b \u2208 A and x \u2208 X. According to the statement (a) of Theorem 3.1, \u03b4A/R is well-defined, and we have that A /R = (A/R,X, \u03b4A/R) is a fuzzy automaton, called the afterset fuzzy automaton of A w.r.t. R.\nIn addition, if A = (A,X, \u03b4A, \u03c3A, \u03c4A) is a fuzzy recognizer, then we define the fuzzy transition function \u03b4A/R as in (25), and we also define a fuzzy set \u03c3A/R \u2208 LA/R of initial states and a fuzzy set \u03c4A/R \u2208 LA/R of terminal states by\n\u03c3A/R(Ra) = \u2228\na\u2032\u2208A\n\u03c3A(a\u2032) \u2297 R(a\u2032, a) = (\u03c3A \u25e6 R)(a) = \u03c3A \u25e6 Ra, (27)\n\u03c4A/R(Ra) = \u2228\na\u2032\u2208A\nR(a, a\u2032) \u2297 \u03c4A(a\u2032) = (R \u25e6 \u03c4A)(a) = Ra \u25e6 \u03c4 A, (28)\nfor any a \u2208 A. According to (a) of Theorem 3.1, \u03c3A/R and \u03c4A/R are well-defined functions, and we have that A /R = (A/R,X, \u03b4A/R, \u03c3A/R, \u03c4A/R) is a fuzzy recognizer, which is called the afterset fuzzy recognizer of A w.r.t. R.\nAnalogously, for a fuzzy automaton A = (A,X, \u03b4A), the foreset fuzzy automaton of A w.r.t. R is a fuzzy automaton A \\R = (A\\R,X, \u03b4A\\R) with the fuzzy transition function \u03b4A\\R defined by\n\u03b4A\\R(Ra, x,Rb) = \u2228\na\u2032,b\u2032\u2208A\nR(a, a\u2032) \u2297 \u03b4A(a\u2032, x, b\u2032) \u2297 R(b\u2032, b) = (R \u25e6 \u03b4Ax \u25e6 R)(a, b) = Ra \u25e6 \u03b4 A x \u25e6 R b, (29)\nfor all a, b \u2208 A and x \u2208 X. In addition, for a fuzzy recognizer A = (A,X, \u03b4A, \u03c3A, \u03c4A), the foreset fuzzy recognizer of A w.r.t. R is a fuzzy recognizer A \\R = (A\\R,X, \u03b4A\\R, \u03c3A\\R, \u03c4A\\R) with a a fuzzy set \u03c3A\\R \u2208 LA\\R of initial states and a fuzzy set \u03c4A\\R \u2208 LA\\R of terminal states by\n\u03c3A\\R(Ra) = \u2228\na\u2032\u2208A\n\u03c3A(a\u2032) \u2297 R(a\u2032, a) = (\u03c3A \u25e6 R)(a) = \u03c3A \u25e6 Ra, (30)\n\u03c4A\\R(Ra) = \u2228\na\u2032\u2208A\nR(a, a\u2032) \u2297 \u03c4A(a\u2032) = (R \u25e6 \u03c4A)(a) = Ra \u25e6 \u03c4 A, (31)\nfor any a \u2208 A. We can easily prove the following:\nTheorem 3.2. For any fuzzy quasi-order R on a fuzzy recognizer (automaton) A the afterset fuzzy recognizer (automaton) A /R and the foreset fuzzy recognizer (automaton) A \\R are isomorphic.\nProof. This follows immediately by (25), (29) and (b) of Theorem 3.1.\nIn view of Theorem 3.2, in the remainder of this paper we will consider only afterset fuzzy recognizers and automata. Wewill see in Example 4.3 that the factor fuzzy recognizer (automaton)A /ER ofA , w.r.t. the natural fuzzy equivalence ER of R, is not necessary isomorphic to fuzzy recognizers A /R and A \\R, but by (b) of Theorem 3.1, it has the same cardinality as A /R and A \\R, and if L(A ) = L(A /R) (= L(A \\R), then we also have that L(A ) = L(A /ER).\nIf A = (A,X, \u03b4A) is a fuzzy automaton and R is a fuzzy quasi-order on A, then we also define a new fuzzy transition function \u03b4A|R : A \u00d7 X \u00d7 A \u2192 L by\n\u03b4A|R(a, x, b) = (R \u25e6 \u03b4Ax \u25e6 R)(a, b), for all a, b \u2208 A and x \u2208 X,\ni.e., \u03b4A|Rx = R \u25e6 \u03b4 A x \u25e6 R, for each x \u2208 X, and we obtain a new fuzzy automaton A |R = (A,X, \u03b4 A|R) with the same set of states and input alphabet as the original one. Furthermore, if A = (A,X, \u03b4A, \u03c3A, \u03c4A) is a fuzzy recognizer, then we also set \u03c3A|R = \u03c3A and \u03c4A|R = \u03c4A, and we have thatA |R = (A,X, \u03b4A|R, \u03c3A|R, \u03c4A|R) is a fuzzy recognizer.\nThe following theorem can be conceived as a version of the well-known Second Isomorphism Theorem, concerning fuzzy automata and fuzzy quasi-orders on them. (cf. [9], \u00a72.6).\nTheorem 3.3. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer and let R and S be fuzzy quasi-orders on A such that R 6 S. Then a fuzzy relation S/R on A/R defined by\nS/R(Ra,Rb) = S(a, b), for all a, b \u2208 A, (32)\nis a fuzzy quasi-order on A/R and fuzzy recognizers A /S, (A /R)/(S/R) and (A |R)/S are isomorphic.\nProof. Let a, a\u2032, b, b\u2032 \u2208 A such that Ra = Ra\u2032 and Rb = Rb\u2032 , i.e., ER(a, a \u2032) = ER(b, b \u2032) = 1. Since R 6 S, we also have that R\u22121 6 S\u22121, whence ER 6 ES, and by this it follows that ES(a, a \u2032) = ES(b, b \u2032) = 1, so S(a, b) = S(a\u2032, b\u2032). Therefore, S/R is a well-defined fuzzy relation, and clearly, S/R is a fuzzy quasi-order. For the sake of simplicity set S/R = Q. Define a mapping \u03c6 : A/S \u2192 (A/R)/Q by\n\u03c6(Sa) = QRa , for every a \u2208 A.\nAccording to Theorem 3.1, for arbitrary a, b \u2208 A we have that\nSa = Sb \u21d4 S(a, b) = S(b, a) = 1 \u21d4 Q(Ra,Rb) = Q(Rb,Ra) = 1 \u21d4 QRa = QRb \u21d4 \u03c6(Sa) = \u03c6(Sb),\nand hence, \u03c6 is a well-defined and injective function. It is clear that \u03c6 is also a surjective function. Thus, \u03c6 is a bijective function of A/S onto (A/R)/Q.\nSince R 6 S implies R \u25e6 S = S \u25e6 R = S, for arbitrary a, b \u2208 A and x \u2208 X we have that\n\u03b4 (A/R)/Q x (\u03c6(Sa), \u03c6(Sb)) = \u03b4 (A/R)/Q x (QRa ,QRb) = (Q \u25e6 \u03b4 A/R x \u25e6Q)(Ra,Rb)\n= \u2228\nc,d\u2208A\nQ(Ra,Rc) \u2297 \u03b4 A/R x (Rc,Rd) \u2297Q(Rd,Rb)\n= \u2228\nc,d\u2208A\nS(a, c) \u2297 (R \u25e6 \u03b4Ax \u25e6 R)(c, d) \u2297 S(d, b)\n= (S \u25e6 R \u25e6 \u03b4Ax \u25e6 R \u25e6 S)(a, b) = (S \u25e6 \u03b4 A x \u25e6 S)(a, b) = \u03b4 A/S x (Sa, Sb).\nMoreover, for any a \u2208 Awe have that\n\u03c3(A/R)/Q(\u03c6(Sa)) = \u03c3 (A/R)/Q(QRa) = \u03c3 A/R(Ra) = \u03c3 A(a) = \u03c3A/S(Sa),\nand similarly, \u03c4(A/R)/Q(\u03c6(Sa)) = \u03c4 A/S(Sa). Therefore, \u03c6 is an isomorphism of the fuzzy recognizer A /S onto the fuzzy recognizer (A /R)/(S/R). Next, for all a, b \u2208 A and x \u2208 X we have that\n\u03b4(A|R)/S(Sa, x, Sb) = (S \u25e6 \u03b4 A|R x \u25e6 S)(a, b) = (S \u25e6 R \u25e6 \u03b4 A x \u25e6 R \u25e6 S)(a, b)\n= (S \u25e6 \u03b4Ax \u25e6 S)(a, b) = \u03b4 A/S(Sa, x, Sb),\nand \u03c3(A|R)/S = \u03c3A/S, \u03c4(A|R)/S = \u03c4A/S, so fuzzy recognizers (A |R)/S and A /S are isomorphic.\nIf in the proof of the previous theorem we disregard fuzzy sets of initial and terminal states, we see that the theorem also hold for fuzzy automata.\nRemark 3.1. For any given fuzzy quasi-orderR on a fuzzy recognizerA = (A,X, \u03b4A, \u03c3A, \u03c4A), the rule a 7\u2192 Ra defines a surjective function of A onto A/R. This means that the afterset fuzzy recognizer A /R has smaller or equal cardinality than the fuzzy recognizer A .\nNow, if R and S are fuzzy quasi-orders on A such that R 6 S, according to Theorem 3.3, the afterset fuzzy recognizer A /S has smaller or equal cardinality than A /R. This fact will be frequently used in the rest of the paper.\nLet us note that if A is a fuzzy recognizer or a fuzzy automaton, A is its set of states, and R, S and T are fuzzy quasi-orders on A such that R 6 S and R 6 T, then\nS 6 T \u21d4 S/R 6 T/R, (33)\nand hence, a mapping \u03a6 : QR(A) = {S \u2208 Q(A) | R 6 S} \u2192 Q(A/R), given by \u03a6 : S 7\u2192 S/R, is injective (in fact, it is an order isomorphism of QR(A) onto a subset of Q(A/R)). In particular, for a fuzzy quasi-order R on A, the fuzzy relation R/R on A/Rwill be denoted by R\u0303. It can be easily verified that R\u0303 is a fuzzy order on A/R,\nand if E is a fuzzy equivalence on A, then E\u0303 is a fuzzy equality on A/E. For a fuzzy recognizer A = (A,X, \u03b4A, \u03c3A, \u03c4A) and a fuzzy quasi-order R on A we have that the fuzzy language L(A /R) recognized by the afterset fuzzy recognizer A /R is given by\nL(A /R)(e) = \u03c3A \u25e6 R \u25e6 \u03c4A,\nL(A /R)(u) = \u03c3A \u25e6 R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u03b4 A x2 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4Axn \u25e6 R \u25e6 \u03c4\nA, (34)\nwhereas the fuzzy language L(A ) recognized by A is given by\nL(A )(e) = \u03c3A \u25e6 \u03c4A,\nL(A )(u) = \u03c3A \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03c4 A,\nfor any u = x1x2 . . . xn \u2208 X +, where x1, x2, . . . , xn \u2208 X. Let us note that the equation (34) follows immediately by definition of the afterset fuzzy recognizer A /R (the equations (26), (27) and (28)), by the equations (10) and (14), and the fact that R \u25e6 R = R, for every fuzzy quasi-order R. Hence, the fuzzy recognizer A and the afterset fuzzy recognizer A /R are equivalent, i.e., they recognize the same fuzzy language, if and only if the fuzzy quasi-order R is a solution to a system of fuzzy relation equations\n\u03c3A \u25e6 \u03c4A = \u03c3A \u25e6 R \u25e6 \u03c4A,\n\u03c3A \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03c4 A = \u03c3A \u25e6 R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u03b4 A x2 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4Axn \u25e6 R \u25e6 \u03c4\nA, (35)\nfor all n \u2208 N and x1, x2, . . . , xn \u2208 X. We will call (35) the general system. The general system has at least one solution in Q(A), the equality relation on A. It will be called the trivial solution. To attain the best possible reduction ofA , we have to find the greatest solution to the general system in Q(A), if it exists, or to find as big a solution as possible. However, the general system does not necessary have the greatest solution (see Example 3.2), and also, it may consist of infinitely many equations, and finding its nontrivial solutions may be a very difficult task. For that reason we will aim our attention to some instances of the general system. These instances have to be as general as possible, but they have to be easier to solve. From a practical point of view, these instances have to consist of finitely many equations.\nThe following theorem describes some properties of the set of all solutions to the general system.\nTheorem 3.4. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer. The set of all solutions to the general system in Q(A) is an order ideal of the lattice Q(A). Consequently, if a fuzzy quasi-order R on A is a solution to the general system, then its natural fuzzy equivalence ER is also a solution to the general system.\nProof. Consider arbitrary n \u2208 N, x1, x2, . . . , xn \u2208 X, and fuzzy quasi-orders R and S on A such that S is a solution to the general system and R 6 S. By the facts that S is a solution to the general system and R 6 S, by reflexivity of R, and by (11) we obtain that\n\u03c3A \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03c4 A 6 \u03c3A \u25e6 R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u03b4 A x2 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4Axn \u25e6 R \u25e6 \u03c4 A\n6 \u03c3A \u25e6 S \u25e6 \u03b4Ax1 \u25e6 S \u25e6 \u03b4 A x2 \u25e6 S \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 S \u25e6 \u03b4 A xn \u25e6 S \u25e6 \u03c4 A = \u03c3A \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03c4 A,\nand hence, R is a solution to the general system. By this it follows that solutions to the general system in Q(A) form an order ideal of the lattice Q(A).\nThe second part of the theorem follows immediately by the fact that ER = R \u2227 R \u22121 6 R.\nThe following example shows that there are fuzzy quasi-orders which are not solutions to the general system, but their natural fuzzy equivalences are solutions to this system.\nExample 3.1. LetL be the Boolean structure, letA = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x, y}, and \u03b4Ax , \u03b4 A y , \u03c3 A and \u03c4A are given by\n\u03b4Ax =   1 0 0 0 0 0 0 0 0   , \u03b4 A y =   0 1 0 1 1 1 1 0 0   , \u03c3 A = [ 1 1 1 ] , \u03c4A =   1 0 1   ,\nand consider a fuzzy quasi-order R on A given by\nR =   1 1 1 0 1 1 0 0 1   .\nThen we have that\n\u03c3A \u25e6 R \u25e6 \u03b4Ax \u25e6 R \u25e6 \u03b4 A y \u25e6 R \u25e6 \u03c4 A = 1 , 0 = \u03c3A \u25e6 \u03b4Ax \u25e6 \u03b4 A y \u25e6 \u03c4 A,\nso R is not a solution to the general system, but its natural fuzzy equivalence ER is the equality relation on A, and hence, it is a solution to the general system.\nThe next example shows that the general system does not necessary have the greatest solution.\nExample 3.2. LetL be the Boolean structure, letA = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x}, and \u03b4Ax , \u03c3 A and \u03c4A are given by\n\u03b4Ax =   0 1 0 0 0 0 0 0 0   , \u03c3 A = [ 1 1 1 ] , \u03c4A =   1 1 1   ,\nand consider fuzzy quasi-orders (in fact, fuzzy equivalences) E and F on A given by\nE =   1 0 0 0 1 1 0 1 1   , F =   1 0 1 0 1 0 1 0 1   .\nWe have that both E and F are solutions to the general system (since E is right invariant and F is left invariant, see the next section for details). On the other hand, the join of E and F in the lattice Q(A) is a fuzzy quasi-order U given by\nU =   1 1 1 1 1 1 1 1 1   ,\nand it is not a solution to the general system, since\n\u03c3A \u25e6U \u25e6 \u03b4Ax \u25e6U \u25e6 \u03b4 A x \u25e6U \u25e6 \u03c4 A = 1 , 0 = \u03c3A \u25e6 \u03b4Ax \u25e6 \u03b4 A x \u25e6 \u03c4 A.\nIf the general systemwould have the greatest solution R inQ(A), then E 6 R and F 6 Rwould implyU 6 R, and by Theorem 3.4 we would obtain that U is a solution to the general system. Hence, we conclude that the general system does not have the greatest solution in Q(A).\nThe next theorem demonstrates one shortcoming of state reductions by means of fuzzy quasi-orders and fuzzy equivalences. Namely, we show that for some fuzzy recognizers no reduction will result in its minimal automaton.\nTheorem 3.5. There exists a fuzzy automatonA such that no reduction ofA by means of fuzzy quasi-orders provide a minimal fuzzy recognizer.\nProof. Let L be the Boolean structure and A = (A,X, \u03b4A, \u03c3A, \u03c4A) a fuzzy recognizer over L , where |A| = 4, X = {x}, and \u03b4A,\u03c3A, and \u03c4A are given by\n\u03b4Ax =   1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0   , \u03c3A = [ 0 1 0 0 ] , \u03c4A =   0 0 1 1   .\nIt is easy to check that for each u \u2208 X\u2217 the following is true:\nL(A )(u) =  0 if u = e or u = xn, for n > 2,\n1 if u = x,\n(in fact, A is a nondeterministic recognizer and L(A ) is an ordinary crisp language consisting only of the letter x). If B = (B,X, \u03b4B, \u03c3B, \u03c4B) is a fuzzy recognizer over L with |B| = 2, and\n\u03b4Bx = [ 0 1 0 0 ] , \u03c3B = [ 1 0 ] , \u03c4B = [ 0 1 ] ,\nthen B recognizes L(A ), and it is a minimal fuzzy recognizer of L(A ), since L(A ) can not be recognized by a fuzzy recognizer with only one state.\nConsider now an arbitrary fuzzy equivalence\nE =   1 a12 a13 a14 a12 1 a23 a24 a13 a23 1 a34 a14 a24 a34 1  \non A, and suppose that E is a solution to the general system corresponding to the fuzzy automaton A . We will show that E can not reduce A to a fuzzy recognizer with two states.\nFirst, by \u03c3A \u25e6 E \u25e6 \u03c4A = a23 \u2228 a24 and \u03c3 A \u25e6 E \u25e6 \u03c4A = \u03c3A \u25e6 \u03c4A = L(A )(e) = 0 it follows a23 = a24 = 0. Next,\nreflexivity and transitivity of E yield E \u25e6 E = E, what implies\na12 \u2227 a13 = 0, a12 = 0 or a13 = 0 (36)\na12 \u2227 a14 = 0, a12 = 0 or a14 = 0 (37)\na13 \u2228 (a14 \u2227 a34) = a13, i.e., a13 = 0 implies a14 = 0 or a34 = 0, (38)\na14 \u2228 (a13 \u2227 a34) = a14, a14 = 0 implies a13 = 0 or a34 = 0, (39)\na34 \u2228 (a13 \u2227 a14) = a34, a34 = 0 implies a13 = 0 or a14 = 0. (40)\nIf a12 = 1, then by (36) and (37) we obtain a13 = a14 = 0, and hence\nE =   1 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1  \nor E =   1 1 0 0 1 1 0 0 0 0 1 1 0 0 1 1   .\nHowever, none of these twomatrices is a solution to the general system. Therefore, we conclude that a12 = 0. According to (38), (39) and (40), we distinguish the following five cases\na13 = a14 = a34 = 0,\na13 = a14 = 0, a34 = 1,\na13 = a34 = 0, a14 = 1,\na14 = a34 = 0, a13 = 1,\na13 = a14 = a34 = 1,\nand we obtain that E has one of the following forms\nE =   1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1   , E =   1 0 0 0 0 1 0 0 0 0 1 1 0 0 1 1   , E =   1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1   , E =   1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 1   , E =   1 0 1 1 0 1 0 0 1 0 1 1 1 0 1 1   . (41)\nIn the first case, E is the equality relation, and it does not provide any reduction of A , and in the second and fourth case, it can be easily verified that E is a solution to the general system, but it reduces A to a fuzzy recognizer with three states. Finally, in the third and fifth case, E is not a solution to the general system, since\n\u03c3A \u25e6 E \u25e6 \u03b4Ax \u25e6 E \u25e6 \u03b4 A x \u25e6 E \u25e6 \u03c4 A x = 1 , 0 = \u03c3 A \u25e6 \u03b4Ax \u25e6 \u03b4 A x \u25e6 \u03c4 A x .\nTherefore, any state reduction of A by means of fuzzy equivalences does not provide fuzzy recognizer with less than three states. According to (b) of Theorem 3.1, the same conclusion also holds for fuzzy quasi-orders. This completes the proof of the theorem."}, {"heading": "4. Right and left invariant fuzzy quasi-orders", "text": "As in [24, 25], where similar questions concerning fuzzy equivalences have been considered, here we study the following two instances of the general system. Let A = (A,X, \u03b4A) be a fuzzy automaton. If a fuzzy quasi-order R on A is a solution to a system\nR \u25e6 \u03b4Ax \u25e6 R = \u03b4 A x \u25e6 R, for every x \u2208 X, (42)\nthen it will be called a right invariant fuzzy quasi-order on A , and if it is a solution to a system\nR \u25e6 \u03b4Ax \u25e6 R = R \u25e6 \u03b4 A x , for every x \u2208 X, (43)\nthen it will be called a left invariant fuzzy quasi-order on A . A crisp quasi-order on A which is a solution to (42) is called a right invariant quasi-order on A , and a crisp quasi-order which is a solution to (43) is called a left invariant quasi-order on A . Let us note that a fuzzy quasi-order on A is both right and left invariant if and only if it is a solution to system\nR \u25e6 \u03b4Ax = \u03b4 A x \u25e6 R, for every x \u2208 X, (44)\nand then it is called an invariant fuzzy quasi-order.\nIf A = (A,X, \u03b4A, \u03c3A, \u03c4A) is a fuzzy recognizer, then by a right invariant fuzzy quasi-order on A we mean a fuzzy quasi-order R on Awhich is a solution to (42) and\nR \u25e6 \u03c4A = \u03c4A, (45)\nand a left invariant fuzzy quasi-order on A is a fuzzy quasi-order R on A which is a solution to (43) and\n\u03c3A \u25e6 R = \u03c3A. (46)\nIt is clear that all right and left invariant fuzzy quasi-orders on a fuzzy recognizer A are solutions of the general system (35), and hence, the corresponding afterset fuzzy automata are equivalent to A .\nIn other words, right (resp. left) invariant fuzzy quasi-orders on the fuzzy recognizerA are exactly those right (resp. left) invariant fuzzy quasi-orders on the fuzzy automaton (A,X, \u03b4A) which are solutions to the fuzzy relation equation (45) (resp. (46)). It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp. (46)) in Q(A) form a principal ideal of Q(A) whose greatest element is a fuzzy quasi-order R\u03c4 (resp. R\u03c3) defined by (24) (here we write \u03c4 A = \u03c4 and \u03c3A = \u03c3). This means that right (resp. left) invariant fuzzy quasi-orders on the fuzzy recognizer A are those right (resp. left) invariant fuzzy quasi-orders on the fuzzy automaton (A,X, \u03b4A) which are contained in R\u03c4 (resp. R\u03c3).\nLet us note that fuzzyequivalences satisfying (42) and (43) have been studied in [24, 25]. They are respectively called right and left invariant fuzzy equivalences. Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).\nBy the following theorem we give a characterization of right invariant fuzzy quasi-orders:\nTheorem 4.1. Let A = (A,X, \u03b4A) be a fuzzy automaton and R a fuzzy quasi-order on A. Then the following conditions are equivalent:\n(i) R is a right invariant fuzzy quasi-order;\n(ii) R \u25e6 \u03b4Ax 6 \u03b4 A x \u25e6 R, for every x \u2208 X;\n(iii) for all a, b \u2208 A we have\nR(a, b) 6 \u2227\nx\u2208X\n\u2227\nc\u2208A\n(\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c). (47)\nProof. (i)\u21d4(ii). Consider an arbitrary x \u2208 X. If R \u25e6 \u03b4Ax \u25e6 R = \u03b4 A x \u25e6 R, then by reflexivity of R it follows\nR \u25e6 \u03b4Ax 6 R \u25e6 \u03b4 A x \u25e6 R = \u03b4 A x \u25e6 R.\nConversely, if R \u25e6 \u03b4Ax 6 \u03b4 A x \u25e6R then R \u25e6 \u03b4 A x \u25e6R 6 \u03b4 A x \u25e6R \u25e6R = \u03b4 A x \u25e6R, and since the opposite inequality follows by reflexivity of R, we conclude that R \u25e6 \u03b4Ax \u25e6 R = \u03b4 A x \u25e6 R.\n(i)\u21d2(iii). Let R be a right invariant fuzzy equivalence. Then for all x \u2208 X and a, b, c \u2208 A we have that\nR(a, b) \u2297 (\u03b4Ax \u25e6 R)(b, c) 6 (R \u25e6 \u03b4 A x \u25e6 R)(a, c) = (\u03b4 A x \u25e6 R)(a, c),\nand by the adjunction property we obtain that R(a, b) 6 (\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c). Hence,\nR(a, b) 6 (\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c). (48)\nSince (48) is satisfied for all c \u2208 A and x \u2208 X, we conclude that (47) holds. (iii)\u21d2(i). If (iii) holds, then for arbitrary x \u2208 X and a, b, c \u2208 A we have that\nR(a, b) 6 (\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c),\nand by the adjunction property we obtain that R(a, b) \u2297 (\u03b4Ax \u25e6 R)(b, c) 6 (\u03b4 A x \u25e6 R)(a, c). Now,\n(R \u25e6 \u03b4Ax \u25e6 R)(a, c) = \u2228\nb\u2208A\nR(a, b) \u2297 (\u03b4Ax \u25e6 R)(b, c) 6 (\u03b4 A x \u25e6 R)(a, c),\nwhence R \u25e6 \u03b4Ax \u25e6 R 6 \u03b4 A x \u25e6 R, and since the opposite inequality follows immediately by reflexivity of R, we conclude that R \u25e6 \u03b4Ax \u25e6 R = \u03b4 A x \u25e6 R, for every x \u2208 X, i.e., R is a right invariant fuzzy quasi-order.\nLet A = (A,X, \u03b4A) be a fuzzy automaton and R a fuzzy quasi-order on A. Let us define a fuzzy relation Rr on A by\nRr(a, b) = \u2227\nx\u2208X\n\u2227\nc\u2208A\n(\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c), (49)\nfor all a, b \u2208 A. Since Rr is an intersection of a family of fuzzy quasi-orders defined as in (24), we have that Rr is also a fuzzy quasi-order. According to Theorem 4.1, R is a right invariant fuzzy quasi-order if and only if R 6 Rr.\nMoreover, we have the following:\nLemma 4.1. Let A = (A,X, \u03b4A) be a fuzzy automaton, and let R and S be fuzzy quasi-orders on A. If R 6 S, then Rr 6 Sr.\nProof. Consider arbitrary a, b \u2208 A and x \u2208 X. By R 6 S it follows R \u25e6 S = S, and by (3), for arbitrary c, d \u2208 A we have that\n(\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c) 6 (\u03b4x \u25e6 R)(b, c) \u2297 S(c, d) \u2192 (\u03b4 A x \u25e6 R)(a, c) \u2297 S(c, d).\nNow, by (6) we obtain that\nRr(a, b) 6 \u2227\nc\u2208A\n(\u03b4Ax \u25e6 R)(b, c) \u2192 (\u03b4 A x \u25e6 R)(a, c)\n6\n\u2227\nc\u2208A\n[ (\u03b4Ax \u25e6 R)(b, c) \u2297 S(c, d) \u2192 (\u03b4 A x \u25e6 R)(b, c) \u2297 S(c, d) ]\n6\n[\u2228\nc\u2208A\n(\u03b4Ax \u25e6 R)(b, c) \u2297 S(c, d) ] \u2192 [\u2228\nc\u2208A\n(\u03b4Ax \u25e6 R)(a, c) \u2297 S(c, d) ]\n= (\u03b4Ax \u25e6 R \u25e6 S)(b, d) \u2192 (\u03b4 A x \u25e6 R \u25e6 S)(a, d) = (\u03b4 A x \u25e6 S)(b, d) \u2192 (\u03b4 A x \u25e6 S)(a, d).\nSince this holds for all x \u2208 X and d \u2208 A, we conclude that\nRr(a, b) 6 \u2227\nx\u2208X\n\u2227\nd\u2208A\n(\u03b4Ax \u25e6 S)(b, d) \u2192 (\u03b4 A x \u25e6 S)(a, d) = S r(a, b),\nand hence, Rr 6 Sr.\nNow we prove the following:\nTheorem 4.2. Let A = (A,X, \u03b4A) be a fuzzy automaton and let A \u2032 = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer belonging to A . Then\n(a) The set Qri(A ) of all right invariant fuzzy quasi-orders on A forms a complete lattice, which is a complete join-subsemilattice of the lattice Q(A) of all fuzzy quasi-orders on A.\n(b) The set Qcri(A ) of all right invariant crisp quasi-orders on A forms a complete lattice, which is a complete join-subsemilattice of the lattice Qri(A).\n(c) The set Qri(A \u2032) of all right invariant fuzzy quasi-orders on A \u2032 is a principal ideal of the lattice Qri(A ).\nProof. (a) Let {Ri}i\u2208I \u2286 Q ri(A ), and let R be the join of this family in Q(A). Then for each i \u2208 I, by Ri 6 R and Lemma 4.1 we obtain that Ri 6 R r i 6 Rr, whence R 6 Rr. Now, by Theorem 4.1 it follows that R \u2208 Qri(A ), and hence, Qri(A ) is a complete join-subsemilattice of Q(A ). Since Qri(A ) contains the least element of Q(A), the equality relation on A, we conclude that Qri(A ) is a complete lattice.\n(b) This follows immediately by (a) and (15), since union and composition of fuzzy relations, applied to crisp relations, as results give crisp relations.\n(c) By definition, Qri(A \u2032) consists of allR \u2208 Qri(A ) which satisfyR\u25e6\u03c4 = \u03c4. It is well-known thatR\u25e6\u03c4 = \u03c4 is equivalent to R 6 R\u03c4, what implies that Q\nri(A \u2032) is an ideal of Qri(A ). Next, let {Ri}i\u2208I be an arbitrary family of elements of Qri(A \u2032) and let R be the join of this family in Qri(A ). According to (a) of this theorem, R is also the join of the family {Ri}i\u2208I in Q(A ), and since Ri 6 R\u03c4, for every i \u2208 I, we conclude that R 6 R\u03c4. By this it follows that, Qri(A \u2032) is a complete join-subsemilattice of Qri(A ), and hence, Qri(A \u2032) is an ideal of Q ri(A ) having the greatest element, what means that Qri(A \u2032) is a principal ideal of Qri(A ).\nAs we have noted before, the problem of computing the greatest right invariant fuzzy quasi-order on a fuzzy recognizerA = (A,X, \u03b4A, \u03c3A, \u03c4A) one reduces to the problem of computing the greatest right invariant fuzzy quasi-order on a fuzzy automaton (A,X, \u03b4A) contained in the fuzzy quasi-order R\u03c4 (\u03c4 = \u03c4A). For that reason, in the sequel we consider the problem how to construct the greatest right invariant fuzzy quasi-order Rri contained in a given fuzzy quasi-order R on a fuzzy automaton.\nTheorem 4.3. Let A = (A,X, \u03b4A) be a fuzzy automaton, let R be a fuzzy quasi-order on A and let Rri be the greatest right invariant fuzzy quasi-order on A contained in R.\nDefine inductively a sequence {Rk}k\u2208N of fuzzy quasi-orders on A as follows:\nR1 = R, Rk+1 = Rk \u2227 R r k, for each k \u2208 N. (50)\nThen\n(a) Rri 6 \u00b7 \u00b7 \u00b7 6 Rk+1 6 Rk 6 \u00b7 \u00b7 \u00b7 6 R1 = R;\n(b) If Rk = Rk+m, for some k,m \u2208 N, then Rk = Rk+1 = R ri;\n(c) If A is finite and L is locally finite, then Rk = R ri for some k \u2208 N.\nProof. (a) Clearly, Rk+1 6 Rk, for each k \u2208 N, and R ri 6 R1. Suppose that R ri 6 Rk, for some k \u2208 N. Then Rri 6 (Rri)r 6 Rr k , so Rri 6 Rk \u2227 R r k = Rk+1. Therefore, by induction we obtain that R ri 6 Rk, for every k \u2208 N.\n(b) Let Rk = Rk+m, for some k,m \u2208 N. Then Rk = Rk+m 6 Rk+1 = Rk \u2227 R r k 6 Rr k , what means that Rk is a right invariant fuzzy quasi-order. Since Rri is the greatest right invariant fuzzy quasi-order contained in R, we conclude that Rk = Rk+1 = R\nri. (c) Let A be a finite fuzzy automaton and L be a locally finite algebra. Let the carrier of a subalgebra\nof L generated by the set \u03b4A(A \u00d7 X \u00d7 A) \u222a R(A \u00d7 A) be denoted by LA . This generating set is finite, so LA is also finite, and hence, the set LA\u00d7A\nA of all fuzzy relations on Awith values in LA is finite. By definitions of\nfuzzy relations Rk and R r k we have that Rk \u2208 L A\u00d7A A , what implies that there exist k, n \u2208 N such that Rk = Rk+m, and by (b) we conclude that Rk = R ri.\nAccording to (c) of Theorem 4.3, if the structure L is locally finite, then for every fuzzy automaton A over L we have that every sequence of fuzzy quasi-orders defined by (50) is finite. However, this does not necessary hold if L is not locally finite, as the following example shows:\nExample 4.1. Let L be the Goguen (product) structure and A = (A,X, \u03b4A) a fuzzy automaton over L , where A = {1, 2}, X = {x}, and \u03b4Ax is given by\n\u03b4Ax = [ 0.2 0 0 0.1 ] ,\nand letRbe the universal relation onA. Applying toR the procedure fromTheorem4.3, we obtain a sequence {Rk}k\u2208N of fuzzy quasi-orders given by\nRk = [ 1 1 1\n2k\u22121 1\n] , k \u2208 N,\nwhose all members are different, i.e., this sequence is infinite. We also have that the greatest right invariant fuzzy quasi-order contained in R is given by\nRri = [ 1 1 0 1 ] .\nFor a fuzzy automaton A = (A,X, \u03b4A) over a complete residuated lattice L , the greatest left invariant fuzzy quasi-orderRli contained in a given fuzzy quasi-orderR onA can be computed in a similar way asRri. Indeed, inductively we define a sequence {Rk}k\u2208N of fuzzy quasi-orders on A by\nR1 = R, Rk+1 = Rk \u2227 R l k, for each k \u2208 N, (51)\nwhere Rl k is a fuzzy quasi-order on A defined by\nRlk(a, b) = \u2227\nx\u2208X\n\u2227\nc\u2208A\n(Rk \u25e6 \u03b4 A x )(c, a) \u2192 (Rk \u25e6 \u03b4 A x )(c, b), for all a, b \u2208 A.\nIf L is locally finite, then this sequence is necessary finite and Rli equals the least element of this sequence. It is worth noting that the greatest right and left invariant fuzzy quasi-orders are calculated using iterative procedures, but these calculations are not approximative.Whenever these procedures terminate in a finite number of steps, exact solutions to the considered systems of fuzzy relation equations are obtained.\nNote also that for a fuzzy automaton A = (A,X, \u03b4A) over a complete residuated lattice L , in [24, 25] we gave a procedure for computing the greatest right invariant fuzzy equivalence Erie contained in a given fuzzy equivalence E on A. This procedure is similar to the procedure given in Theorem 4.3 for fuzzy quasiorders, and it also works for all fuzzy finite automata over a locally finite complete residuated lattice. Namely, inductively we define a sequence {Ek}k\u2208N of fuzzy equivalences on A by\nE1 = E, Ek+1 = Ek \u2227 E req\nk , for each k \u2208 N, (52)\nwhere E req\nk is a fuzzy equivalence defined by\nE req\nk (a, b) =\n\u2227\nx\u2208X\n\u2227\nc\u2208A\n(\u03b4Ax \u25e6 Ek)(a, c) \u2194 (\u03b4 A x \u25e6 Ek)(b, c), for all a, b \u2208 A.\nIt was proved in [24, 25] that if L is locally finite, then this sequence is necessary finite and Erie equals the least element of this sequence.\nBy the next example we show that it is possible that the sequence of fuzzy equivalences defined by (52) is infinite, but the sequence of fuzzy quasi-orders defined by (50) is finite.\nExample 4.2. Let L be the Goguen (product) structure and A = (A,X, \u03b4A) a fuzzy automaton over L , where A = {1, 2, 3}, X = {x}, and \u03b4Ax is given by\n\u03b4Ax =   0 1 1 0 1 1 1 2 0 0   .\nIf we start from the universal relation on A, applying the rule (52) we obtain an infinite sequence {Ek}k\u2208N of fuzzy equivalences on A, where\nEk =   1 1 1 2k\u22121 1 1 1 2k\u22121\n1 2k\u22121 1 2k\u22121\n1\n  , k \u2208 N.\nOn the other hand, if we also start from the universal relation, the rule (50) gives a finite sequence {Rk}k\u2208N of fuzzy quasi-orders on A, where\nR1 =   1 1 1 1 1 1 1 1 1   , R2 =   1 1 1 1 1 1 1 2 1 2 1   , Rk = R2, for each k \u2208 N, k > 3.\nReduction of fuzzy automata by means of right and left invariant fuzzy equivalences has been studied in [24, 25]. Since the set of all right invariant fuzzy equivalences is a subset of the set of all right invariant fuzzy quasi-orders, the greatest element of this subset (the greatest right invariant fuzzy equivalence) is less or equal than the greatest element of the whole set (the greatest right invariant fuzzy quasi-order). The next example shows that this inequality can be strict. Thus, reduction of a fuzzy automaton by using the greatest right invariant fuzzy quasi-order gives better results than its reduction by using the greatest right invariant fuzzy equivalence, according to Remark 3.1.\nFurthermore, as we have shown by Theorem 3.4, if a fuzzy quasi-order R on a fuzzy automaton A is a solution to the general system, then its natural fuzzy equivalence ER is also a solution to the general system. But, the next example also shows that if R is a right invariant fuzzy quasi-order, then ER is not necessary a right invariant fuzzy equivalence.\nExample 4.3. Let L be the Boolean structure, and let A = (A,X, \u03b4A) be a fuzzy automaton over L , where A = {1, 2, 3}, X = {x, y}, and fuzzy transition relations \u03b4Ax and \u03b4 A y are given by\n\u03b4Ax =   1 0 0 0 0 0 0 0 0   , \u03b4 A y =   1 0 0 1 1 0 1 0 0   .\nThe greatest right invariant fuzzy quasi order Rri on A , its natural fuzzy equivalence ERri , and the greatest right invariant fuzzy equivalence Eri on A are given by\nRri =   1 1 1 0 1 1 0 1 1   , ERri =   1 0 0 0 1 1 0 1 1   , E ri =   1 0 0 0 1 0 0 0 1   .\nThus, Eri do not reduce the number of states of A , but Rri reduces A to a fuzzy automaton with two states. Moreover, Rri is a right invariant fuzzy quasi-order, but its natural fuzzy equivalence ERri is not a right invariant fuzzy equivalence, because Eri < ERri . We also have that the afterset fuzzy automaton A /R ri is not isomorphic to the factor fuzzy automaton A /ERri , since\nRri \u25e6 \u03b4Ay \u25e6 R ri =   1 1 1 1 1 1 1 1 1   , ERri \u25e6 \u03b4 A y \u25e6 ERri =   1 0 0 1 1 1 1 1 1   .\nNext we consider the case when L is a complete residuated lattice satisfying the following conditions:\nx \u2228 (\u2227\ni\u2208I\nyi ) = \u2227\ni\u2208I\n(x \u2228 yi), (53)\nx \u2297 (\u2227\ni\u2208I\nyi ) = \u2227\ni\u2208I\n(x \u2297 yi), (54)\nfor all x \u2208 L and {yi}i\u2208I \u2286 L. Let us note that if L = ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1),where [0, 1] is the real unit interval and \u2297 is a left-continuous t-norm on [0, 1], then (53) follows immediately by linearity of L , and L satisfies (54) if and only if \u2297 is a continuous t-norm, i.e., if and only if L is a BL-algebra (cf. [3, 4]). Therefore, conditions (53) and (54) hold for every BL-algebra on the real unit interval. In particular, the \u0141ukasiewicz, Goguen (product) and Go\u0308del structures fulfill (53) and (54).\nWe have that the following is true:\nTheorem 4.4. Let L be a complete residuated lattice satisfying (53) and (54), let A = (A,X, \u03b4A) be a fuzzy finite automaton over L , let R be a fuzzy quasi-order on A, let R ri be the greatest right invariant fuzzy quasi-order on A contained in R, and let {Rk}k\u2208N be the sequence of fuzzy quasi-orders on A defined by (50). Then\nRri = \u2227\nk\u2208N\nRk. (55)\nProof. It was proved in [25] that if (53) holds, then for all non-increasing sequences {xk}k\u2208N, {yk}k\u2208N \u2286 L we have\n\u2227\nk\u2208N\n(xk \u2228 yk) = (\u2227\nk\u2208N\nxk ) \u2228 (\u2227\nk\u2208N\nyk ) . (56)\nFor the sake of simplicity set\nS = \u2227\nk\u2208N\nRk.\nClearly, S is a fuzzy quasi-order. To prove (55) it is enough to prove that S is a right invariant fuzzy quasi-order on A . First, we have that\nS(a, b) 6 Rk+1(a, b) 6 R r k(a, b) 6 \u03b4 A x \u25e6 Rk(b, c) \u2192 \u03b4 A x \u25e6 Rk(a, c), (57)\nholds for all a, b, c \u2208 A, x \u2208 X and k \u2208 N. Now, by (57) and (5) we obtain that\nS(a, b) 6 \u2227\nk\u2208N\n( \u03b4Ax \u25e6 Rk(b, c) \u2192 \u03b4 A x \u25e6 Rk(a, c) ) 6 \u2227\nk\u2208N\n( \u03b4Ax \u25e6 Rk(b, c) ) \u2192 \u2227\nk\u2208N\n( \u03b4Ax \u25e6 Rk(a, c) ) , (58)\nfor all a, b, c \u2208 A and x \u2208 X. Next, \u2227\nk\u2208N\n( \u03b4Ax \u25e6 Rk(b, c) ) = \u2227\nk\u2208N\n(\u2228\nd\u2208A\n( \u03b4Ax (b, d) \u2297 Rk(d, c) ))\n= \u2228\nd\u2208A\n(\u2227\nk\u2208N\n( \u03b4Ax (b, d) \u2297 Rk(d, c) )) (by (56))\n= \u2228\nd\u2208A\n( \u03b4Ax (b, d) \u2297 (\u2227\nk\u2208N\nRk(d, c) ))\n(by (54))\n= \u2228\nd\u2208A\n( \u03b4Ax (b, d) \u2297 S(d, c) ) = (\u03b4Ax \u25e6 S)(b, c).\n(59)\nUse of condition (56) is justified by the facts thatA is finite, and that {Rk(d, c)}k\u2208N is a non-increasing sequence, so {\u03b4Ax (b, d) \u2297 Rk(d, c)}k\u2208N is also a non-increasing sequence. In the same way we prove that\n\u2227\nk\u2208N\n( \u03b4Ax \u25e6 Rk(a, c) ) = (\u03b4Ax \u25e6 S)(a, c). (60)\nTherefore, by (58), (59) and (60) we obtain that\nS(a, b) 6 (\u03b4Ax \u25e6 S)(b, c) \u2192 (\u03b4 A x \u25e6 S)(a, c).\nSince this inequality holds for all x \u2208 X and c \u2208 A, we have that\nS(a, b) 6 \u2227\nx\u2208X\n\u2227\nc\u2208A\n(\u03b4Ax \u25e6 S)(b, c) \u2192 (\u03b4 A x \u25e6 S)(a, c),\nand by (iii) of Theorem 4.1 we obtain that S is a right invariant fuzzy quasi-order on A ."}, {"heading": "5. Some special types of right and left invariant fuzzy quasi-orders", "text": "For a given fuzzy quasi-order R on a fuzzy automaton A , Theorem 4.3 gives a procedure for computing Rri in case when the complete residuated latticeL is locally finite, and Theorem 4.4 characterizesRri in case when L satisfies some additional distributivity conditions. But, what to do if L do not satisfy any of these conditions? In this case we could consider some subset of Qri(A ) whose greatest element can be effectively computed when L is any complete residuated lattice. Here we consider two such subsets. The first one is the set Qcri(A ) of all right invariant crisp quasi-orders on A , and the second one is the set Qsri(A ) of strongly right invariant fuzzy quasi-orders, which will be defined latter.\nNote that for a crisp relation \u033a and a fuzzy relation R on a set Awe have that \u033a 6 R if and only if \u033a \u2286 R\u0302, where R\u0302 denotes the crisp part of R. Let A = (A,X, \u03b4A) be a fuzzy automaton and R a fuzzy quasi-order on A. It is easy to verify that the crisp part of the fuzzy quasi-order Rr can be represented as follows: for all a, b \u2208 A we have\n(a, b) \u2208 R\u0302r \u21d4 (\u2200x \u2208 X)(\u2200c \u2208 A) (\u03b4Ax \u25e6 R)(b, c) 6 (\u03b4 A x \u25e6 R)(a, c). (61)\nWe have that R\u0302r is a quasi-order, since the crisp part of any fuzzy quasi-order is a quasi-order. The following theorem gives a procedure for computing the greatest right invariant crisp quasi-order on a fuzzy automaton contained in a given quasi-order.\nTheorem 5.1. Let A = (A,X, \u03b4A) be a fuzzy automaton, let \u033a be a quasi-order on A and let \u033ari be the greatest right invariant quasi-order on A contained in \u033a.\nDefine inductively a sequence {\u033ak}k\u2208N of quasi-orders on A as follows:\n\u033a1 = \u033a, \u033ak+1 = \u033ak \u2229 \u0302\u033ark, for each k \u2208 N.\nThen\n(a) \u033ari \u2286 \u00b7 \u00b7 \u00b7 \u2286 \u033ak+1 \u2286 \u033ak \u2286 \u00b7 \u00b7 \u00b7 \u2286 \u033a1 = \u033a;\n(b) If \u033ak = \u033ak+m, for some k,m \u2208 N, then \u033ak = \u033ak+1 = \u033a ri;\n(c) If A is finite, then \u033ak = \u033a ri for some k \u2208 N.\nProof. (a) Clearly, \u033ak+1 \u2286 \u033ak, for every k \u2208 N, and \u033a ri \u2286 \u033a1. If \u033a ri \u2286 \u033ak, for some k \u2208 N, then (\u033a ri)r 6 \u033ar\nk , and\nalso, \u033ari 6 (\u033ari)r, so we have that\n\u033ari \u2286 (\u0302\u033ari)r \u2286 \u0302\u033ar k ,\nand by this it follows that \u033ari \u2286 \u033ak+1. Hence, by induction we obtain that \u033a ri \u2286 \u033ak, for every k \u2208 N.\n(b) If \u033ak = \u033ak+m, for some k,m \u2208 N, then\n\u033ak = \u033ak+m \u2286 \u033ak+1 \u2286 \u0302\u033ark 6 \u033a r k,\nso we have that \u033ak is a right invariant quasi-order on A . Therefore, \u033ak = \u033ak+1 = \u033a ri.\n(c) If the set A is finite, then the set of all crisp relations on A is also finite, so there exist k,m \u2208 N such that \u033ak = \u033ak+m, and then \u033ak = \u033a ri.\nThe previous theorem shows that the greatest right invariant crisp quasi-order can be effectively computed for any fuzzy finite automaton over an arbitrary complete residuated lattice, not necessary locally finite, and even for a fuzzy finite automaton over an arbitrary lattice-orderedmonoid. However, in cases whenwe are able to effectively compute the greatest right invariant fuzzy quasi-order, using it we can attain better reduction than using the greatest right invariant crisp quasi-order, as the next example shows. Namely, the greatest right invariant crisp quasi-order \u033ari is less or equal than the greatest right invariant fuzzy quasi-order Rri and according to Remark 3.1 there holds |A /Rri| 6 |A /\u033ari|.\nExample 5.1. Let L be the Go\u0308del structure, and let A = (A,X, \u03b4A) be a fuzzy automaton over L , where A = {1, 2, 3}, X = {x}, and \u03b4Ax is given by\n\u03b4Ax =   0 0.1 0 0.2 0 0 0.1 0 0   .\nThen the greatest right invariant fuzzy quasi-order Rri and the greatest right invariant crisp quasi-order \u033ari on A are given by\nRri =   1 0.1 1 1 1 1 1 0.1 1   , \u033a ri =   1 0 0 0 1 1 0 0 1   .\nHence, \u033ari do not reduce the number of states of A , but Rri reducesA to a fuzzy automaton with two states.\nLet A = (A,X, \u03b4A) be a fuzzy automaton. If a fuzzy quasi-order R on A is a solution to system\nR \u25e6 \u03b4Ax = \u03b4 A x , for every x \u2208 X, (62)\nthen it is called a strongly right invariant fuzzy quasi-order on A , and if it is a solution to system\n\u03b4Ax \u25e6 R = \u03b4 A x , for every x \u2208 X, (63)\nthen it is a strongly left invariant fuzzy quasi-order on A . Clearly, every strongly right (resp. left) invariant fuzzy quasi-order is right (resp. left) invariant. Let us note that a fuzzy quasi-order on A is both strongly right and left invariant if and only if it is a solution to system\nR \u25e6 \u03b4Ax \u25e6 R = \u03b4 A x , for every x \u2208 X, (64)\nand then it is called a strongly invariant fuzzy quasi-order. If A = (A,X, \u03b4A, \u03c3A, \u03c4A) is a fuzzy recognizer, then by a stongly right invariant fuzzy quasi-order on A we mean a fuzzy quasi-order on A which is a solution to (62) and\nR \u25e6 \u03c4A = \u03c4A, (65)\nand a strongly left invariant fuzzy quasi-order on A is a fuzzy quasi-order which is a solution to (63) and\n\u03c3A \u25e6 R = \u03c3A. (66)\nIn the further text we study strongly right invariant fuzzy quasi-orders.\nTheorem 5.2. Let A = (A,X, \u03b4A) be a fuzzy automaton and let A \u2032 = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer belonging to A . Then\n(a) The set Qsri(A ) of all strongly right invariant fuzzy quasi-orders on A is a principal ideal of the lattice Q(A). The greatest element of this principal ideal is a fuzzy quasi-order Rsri defined by\nRsri(a, b) = \u2227\nx\u2208X\n\u2227\nc\u2208A\n\u03b4Ax (b, c) \u2192 \u03b4 A x (a, c), for all a, b \u2208 A. (67)\n(b) The set Qsri(A \u2032) of all strongly right invariant fuzzy quasi-orders on A \u2032 is the principal ideal of the lattice Q(A). The greatest element of this principal ideal is a fuzzy quasi-order R\u03c4 \u2227 R sri.\nProof. (a)We have thatRsri is a fuzzy quasi-order, as an intersection of a family of fuzzy quasi-orders defined as in (24). Let R be an arbitrary fuzzy quasi-order on A. Then we have that\nR 6 Rsri \u21d4 (\u2200x \u2208 X)(\u2200a, b, c \u2208 A) R(a, b) 6 \u03b4Ax (b, c) \u2192 \u03b4 A x (a, c)\n\u21d4 (\u2200x \u2208 X)(\u2200a, b, c \u2208 A) R(a, b) \u2297 \u03b4Ax (b, c) 6 \u03b4 A x (a, c) \u21d4 (\u2200x \u2208 X)(\u2200a, c \u2208 A) \u2228\nb\u2208A\nR(a, b) \u2297 \u03b4Ax (b, c) 6 \u03b4 A x (a, c)\n\u21d4 (\u2200x \u2208 X)(\u2200a, c \u2208 A) R \u25e6 \u03b4Ax (a, c) 6 \u03b4 A x (a, c) \u21d4 (\u2200x \u2208 X) R \u25e6 \u03b4Ax 6 \u03b4 A x \u21d4 (\u2200x \u2208 X) R \u25e6 \u03b4Ax = \u03b4 A x ,\nso R is the strongly right invariant if and only if it belongs to the principal ideal of Q(A) generated by Rsri. (b) This follows immediately by (a).\nAccording to (67), the greatest strongly right invariant crisp quasi-order can be effectively computed for any fuzzy finite automaton over an arbitrary complete residuated lattice, not necessary locally finite. However, in cases when we are able to effectively compute the greatest right invariant fuzzy quasi-order, using it we can attain better reduction than using the greatest strongly right invariant quasi-order. Indeed, the following example presents a fuzzy automaton whose number of states can be reduced by means of right invariant fuzzy quasi-orders, but it can not be reduced using strongly right invariant ones.\nExample 5.2. Consider again the fuzzy automaton A from Example 4.3. In this example we showed that the greatest right invariant fuzzy quasi-order Rri on A reduces A to a fuzzy automaton with two states. On the other hand, the greatest strongly right invariant fuzzy quasi-order Rsri on A is given by\nRsri =   1 0 1 0 1 1 0 0 1   ,\nand the related afterset fuzzy automatonA2 = A /R sri = (A2,X, \u03b4 A2) has also three states and fuzzy transition relations \u03b4A2x and \u03b4 A2 y are given by\n\u03b4A2x = \u03b4 A x \u25e6 R sri =   1 0 1 0 0 0 0 0 0   , \u03b4 A2 y = \u03b4 A y \u25e6 R sri =   1 0 1 1 1 1 1 0 1   .\nFurther, the greatest strongly right invariant fuzzy quasi-order Rsri 2 on A2 is given by\nRsri2 =   1 0 1 0 1 1 0 0 1   ,\nand the afterset fuzzy automaton A2/R sri 2\nis isomorphic to A2. Therefore, the number of states of A can not be reduced by means of strongly right invariant fuzzy quasi-orders."}, {"heading": "6. Weakly right and left invariant fuzzy quasi-orders", "text": "In the previous sections we have considered right and left invariant fuzzy quasi-orders and some special types of these fuzzy quasi-orders. In this section we study some fuzzy quasi-orders which are more general than right and left invariant ones.\nLet A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer. For any u \u2208 X\u2217 we define fuzzy sets \u03c3Au , \u03c4 A u \u2208 L A by\n\u03c3Au (a) = \u2228\nb\u2208A\n\u03c3A(b) \u2297 \u03b4A\u2217 (b, u, a), \u03c4 A u (a) =\n\u2228\nb\u2208A\n\u03b4A\u2217 (a, u, b) \u2297 \u03c4 A(b),\nfor each a \u2208 A, i.e., \u03c3Au = \u03c3 A \u25e6\u03b4Au and \u03c4 A u = \u03b4 A u \u25e6\u03c4 A. Evidently, for the emptyword e \u2208 X\u2217 we have that \u03c3Ae = \u03c3 A and \u03c4Ae = \u03c4 A. Fuzzy sets \u03c3Au have been already used in [32], and they played a key role in determinization of fuzzy automata. By the same rule, for any a \u2208 A we define fuzzy languages \u03c3Aa , \u03c4 A a \u2208 L X\u2217 , i.e., \u03c3Aa (u) = \u03c3 A u (a) and \u03c4Aa (u) = \u03c4 A u (a), for every u \u2208 X\n\u2217. Following terminology used in [18] for non-deterministic automata, we call \u03c3Aa the left fuzzy language of a, and \u03c4 A a the right fuzzy language of a. Left fuzzy languages have been already studied in [32, 34].\nA fuzzy quasi-order R on A which is a solution to a system of fuzzy relation equations\nR \u25e6 \u03c4Au = \u03c4 A u , for every u \u2208 X \u2217, (68)\nis called a weakly right invariant fuzzy quasi-order on the fuzzy recognizer A , and if R is a solution to\n\u03c3Au \u25e6 R = \u03c3 A u , for every u \u2208 X \u2217, (69)\nthen it is called a weakly left invariant fuzzy quasi-order on A . Fuzzy equivalences on A which are solutions to (68) will be called weakly right invariant fuzzy equivalences, and those which are solutions to (69) will be called weakly left invariant fuzzy equivalences.\nWe have the following\nTheorem 6.1. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer. Then\n(a) The setQwri(A) of all weakly right invariant fuzzy quasi orders onA is a principal ideal of the latticeQ(A). The greatest element of this principal ideal is a fuzzy quasi-order Rwri on A defined by\nRwri(a, b) = \u2227\nu\u2208X\u2217\n\u03c4Au (b) \u2192 \u03c4 A u (a), for all a, b \u2208 A. (70)\nMoreover, Rwri is the greatest solution to the system (68) in R(A).\n(b) Every weakly right invariant fuzzy quasi-order on A is a solution to the general system.\n(c) Every right invariant fuzzy quasi-order on A is weakly right invariant.\nProof. (a) Beeing an intersection of a family of fuzzy quasi-orders defined as in (24), Rwri is a fuzzy quasiorder. According to results from [74] (see also [63, 64, 65]), Rwri is the greatest solution to (68), and it is easy to check that solutions to (68) in Q(A) form an ideal of Q(A), and thus, they form a principal ideal of Q(A).\nLet R be an arbitrary solution to (68) in R(A). The equality relation I on A is also a solution to (68), and by (12) we obtain that (R \u2228 I)\u221e is a solution to (68). Since (R \u2228 I)\u221e is a fuzzy quasi-order on A, we conclude that R 6 (R \u2228 I)\u221e 6 Rwri, and therefore, Rwri is the greatest solution to (68) in R(A).\n(b) LetR be an arbitraryweakly right invariant fuzzy quasi-order on A . By induction on nwewill prove that\nR \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u03b4 A x2 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4 A xn \u25e6 R \u25e6 \u03c4 A = \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A xn \u25e6 \u03c4 A, (71)\nfor every n \u2208 N and all x1, x2, . . . , xn \u2208 X. First we note that \u03c4 A e = \u03c4 A, where e \u2208 X\u2217 is the empty word, and by (68) we obtain that R \u25e6 \u03c4A = \u03c4A. By this and by (68), for each x \u2208 X we have that\nR \u25e6 \u03b4Ax \u25e6 R \u25e6 \u03c4 A = R \u25e6 \u03b4Ax \u25e6 \u03c4 A = \u03b4Ax \u25e6 \u03c4 A,\nand hence, (71) holds for n = 1. Suppose now that (71) holds for some n \u2208 N. Then by (71) and (68), for arbitrary x1, . . . , xn, xn+1 \u2208 X we have that\nR \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4 A xn \u25e6 R \u25e6 \u03b4 A xn+1 \u25e6 R \u25e6 \u03c4 A =\n= R \u25e6 \u03b4Ax1 \u25e6 (R \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4Axn \u25e6 R \u25e6 \u03b4 A xn+1 \u25e6 R \u25e6 \u03c4A) = R \u25e6 \u03b4Ax1 \u25e6 (\u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A xn \u25e6 \u03b4 A xn+1 \u25e6 \u03c4 A) = R \u25e6 \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4Axn \u25e6 \u03b4 A xn+1 \u25e6 \u03c4A = \u03b4Ax1 \u25e6 \u03b4 A x2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A xn \u25e6 \u03b4 A xn+1 \u25e6 \u03c4 A.\nTherefore, by induction we conclude that (71) holds for every n \u2208 N. Finally, it follows immediately by (71) that R is a solution to the general system.\n(c) Let R be a right invariant fuzzy quasi-order on A . For each u \u2208 X\u2217 we have R \u25e6 \u03b4Au \u25e6 R = \u03b4 A u \u25e6 R, and\nalso R \u25e6 \u03c4A = \u03c4A, what implies R \u25e6 \u03c4Au = R \u25e6 \u03b4 A u \u25e6 \u03c4 A = R \u25e6 \u03b4Au \u25e6 R \u25e6 \u03c4 A = \u03b4Au \u25e6 R \u25e6 \u03c4 A = \u03b4Au \u25e6 \u03c4 A = \u03c4Au . Hence, R is the weakly right invariant.\nLet us note that Rwri can be also represented by\nRwri(a, b) = \u2227\nu\u2208X\u2217\n\u03c4Ab (u) \u2192 \u03c4 A a (u), for all a, b \u2208 A, (72)\ni.e., Rwri(a, b) can be interpreted as the degree of inclusion of a fuzzy language \u03c4A b in the fuzzy language \u03c4Aa .\nAnalogously, we can define a fuzzy quasi-order Rwli on A by\nRwli(a, b) = \u2227\nu\u2208X\u2217\n\u03c3Au (a) \u2192 \u03c3 A u (b) =\n\u2227\nu\u2208X\u2217\n\u03c3Aa (u) \u2192 \u03c3 A b (u), for all a, b \u2208 A, (73)\nand we can prove that Rwli is the greatest weakly left invariant fuzzy quasi-order on A , that every weakly left invariant fuzzy quasi-order on A is also a solution to the general system, and that every left invariant fuzzy quasi-order on A is weakly left invariant. We can also show that the greatest weakly right invariant fuzzy equivalence Ewrie on A is given by\nEwrie(a, b) = \u2227\nu\u2208X\u2217\n\u03c4Au (a) \u2194 \u03c4 A u (b) =\n\u2227\nu\u2208X\u2217\n\u03c4Aa (u) \u2194 \u03c4 A b (u), for all a, b \u2208 A, (74)\nand the greatest weakly left invariant fuzzy equivalence Ewlie on A is given by\nEwlie(a, b) = \u2227\nu\u2208X\u2217\n\u03c3Au (a) \u2194 \u03c3 A u (b) =\n\u2227\nu\u2208X\u2217\n\u03c3Aa (u) \u2194 \u03c3 A b (u), for all a, b \u2208 A, (75)\nClearly, Ewrie is the natural fuzzy equivalence of Rwri, and Ewlie is the natural fuzzy equivalence of Rwlie. We will also call Rwri the rightMyhill-Nerode\u2019s fuzzy quasi-order of A , Rwli the left Myhill-Nerode\u2019s fuzzy quasi-order of A , Ewrie the right Myhill-Nerode\u2019s fuzzy eqivalence of A , and Ewlie the left Myhill-Nerode\u2019s fuzzy eqivalence of A . Note that a fuzzy relation N\u03c3 on the free monoid X \u2217 defined in a similar way by\nN\u03c3(u, v) = \u2227\na\u2208A\n\u03c3Au (a) \u2194 \u03c3 A v (a) =\n\u2227\na\u2208A\n\u03c3Aa (u) \u2194 \u03c3 A a (v), for all u, v \u2208 X \u2217,\nis called the Nerode\u2019s fuzzy right congruence on X\u2217. Nerode\u2019s fuzzy right congruences and Myhill\u2019s fuzzy congruences on free monoids associated with fuzzy automata have been studied in [32, 34].\nThe following example shows that there areweakly right invariant fuzzyquasi-orderswhich are not right invariant, and that weakly right invariant fuzzy quasi-orders generally give better reductions than right invariant ones, according to Remark 3.1.\nExample 6.1. Let L be the Boolean structure and A = (A,X, \u03b4A, \u03c3A, \u03c4A) a fuzzy recognizer over L , where A = {1, 2, 3, 4},X = {x}, \u03c3A is any fuzzy subset of A and \u03b4Ax , and \u03c4 A are given by\n\u03b4Ax =   1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0   , \u03c4A =   0 0 1 0   .\nFor the sake of simplicity set \u03c4A = \u03c4. Aswe have noted before, the greatest right invariant fuzzy equivalence on the fuzzy recognizerA is the greatest right invariant fuzzy equivalence on the fuzzy automaton (A,X, \u03b4A) contained in the fuzzy quasi-order R\u03c4. In this example we have\nR\u03c4 =   1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1   ,\nand hence, applying the procedure from Theorem 4.3 to R\u03c4 we obtain that the greatest right invariant fuzzy equivalence Rri on A is\nRri =   1 1 0 1 0 1 0 1 0 0 1 1 0 0 0 1   .\nOn the other hand, we have that \u03c4e = \u03c4 and\n\u03c4x = \u03b4 A x \u25e6 \u03c4 =   0 0 0 0   , \u03c4x2 = \u03b4 A x \u25e6 \u03c4x = \u03c4x\nwhat means that \u03c4u = \u03c4x, for every u \u2208 X \u2217, u , e, whence\nRwri = R\u03c4 \u2227 R\u03c4x =   1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1   \u2227   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1   =   1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1   .\nHence,Rri is strictly smaller thanRwri, andRri do not reduce the number of states ofA , whereasRwri reduces A to a fuzzy recognizer A /Rwri = (A2,X, \u03b4 A2 , \u03c3A2 , \u03c4A2) with two states, where \u03b4A2x and \u03c4 A2 are given by\n\u03b4A2x = [ 1 0 1 0 ] , \u03c4A2 = [ 0 1 ] ,\nand \u03c3A2 is defined as in (27).\nHowever, although weakly right invariant and weakly left invariant fuzzy quasi-orders generally give better reductions than right invariant and left invariant ones, they have a serious shortcoming. For fuzzy automata and fuzzy recognizers over a locally finite complete residuated lattice, the greatest right and left invariant fuzzy equivalences can be computed in a polynomial time, using a procedure from Theorem 4.3, but computing the greatest weakly right and left invariant ones is computationally hard. Namely, any particular equation R \u25e6 \u03c4Au = \u03c4 A u in (68) can be easily solved if the fuzzy set \u03c4 A u is given, but computing \u03c4 A u , for all u \u2208 X\u2217, may be very hard. In fact, computing \u03c4Au , for all u \u2208 X \u2217, is nothing else than determinization\nof the reverse fuzzy recognizer of A , whereas computing \u03c3Au , for all u \u2208 X \u2217, is the determinization of A using a procedure developed in [32], called the accessible fuzzy subset construction. It is well-known that determinization of crisp non-deterministic recognizers may require an exponential time, because numbers of elements of the sets {\u03c3Au | u \u2208 X \u2217} and {\u03c4Au | u \u2208 X \u2217} may be exponential in the number of states of A , and in the case of fuzzy recognizers these sets may even be infinite. Conditions under which these sets must be finite have been determined in [32, 34]. Moreover, because of exponential growth in the number of states during determinization of non-deterministic recognizers, state reduction procedures are often used to decrease the number of states prior to determinization. But, here we have that determinization is needed prior to the state reduction by means of the greatest weakly right and left invariant fuzzy quasi-orders."}, {"heading": "7. Alternate reductions", "text": "In this section we show that better reductions can be obtained alternating reductions by means of the greatest right and left invariant fuzzy quasi-orders, or the greatest weakly right and left invariant fuzzy quasi-orders. We show that even if any of these fuzzy quasi-orders separately do not reduce the number of states, alternating right and left invariant ones, or weakly right and left invariant ones, the number of states can be reduced.\nTheorem 7.1. Let A be a fuzzy automaton or a fuzzy recognizer, let R be a right invariant fuzzy quasi-order on A and let S be a fuzzy quasi-order on the set of states of A such that R 6 S. Then\n(a) S is a right invariant fuzzy quasi-order on A if and only if S/R is a right invariant fuzzy quasi-order on A /R;\n(b) S is the greatest right invariant fuzzy quasi-order on A if and only if S/R is the greatest right invariant fuzzy quasi-order on A /R;\n(c) R is the greatest right invariant fuzzy quasi-order on A if and only if R\u0303 is the greatest right invariant fuzzy quasi-order on A /R.\nProof. First we note that R 6 S is equivalent to R \u25e6 S = S \u25e6 R = S. (a) Assume first that A = (A,X, \u03b4A) is a fuzzy automaton. Consider any a, b \u2208 A and x \u2208 X. Then\n(\u03b4A/Rx \u25e6 S/R)(Ra,Rb) = \u2228\nc\u2208A\n\u03b4A/Rx (Ra,Rc) \u2297 S/R(Rc,Rb) = \u2228\nc\u2208A\n(R \u25e6 \u03b4Ax \u25e6 R)(a, c) \u2297 S(c, b)\n= (R \u25e6 \u03b4Ax \u25e6 R \u25e6 S)(a, b) = (\u03b4 A x \u25e6 R \u25e6 S)(a, b) = (\u03b4 A x \u25e6 S)(a, b),\n(76)\nand by the proof of Theorem 3.3 it follows that\n(S/R \u25e6 \u03b4A/Rx \u25e6 S/R)(Ra,Rb) = (S \u25e6 \u03b4 A x \u25e6 S)(a, b). (77)\nTherefore, by (76) and (77) we obtain that (a) holds. Next, let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer. Then for any a \u2208 A we have that\n(S/R \u25e6 \u03c4A/R)(Ra) = \u2228\nb\u2208A\nS/R(Ra,Rb) \u2297 \u03c4 A/R(Rb) =\n\u2228\nb\u2208A\nS(a, b) \u2297 \u03c4A(b) = (S \u25e6 \u03c4A)(a),\nso S/R \u25e6 \u03c4A/R = \u03c4A/R if and only if S \u25e6 \u03c4A = \u03c4A. Therefore, in this case we also have that (a) holds. (b) Let S be the greatest right invariant fuzzy quasi-order on A . By (a), S/R is a right invariant fuzzy quasi-order onA /R. LetQ be the greatest right invariant fuzzy quasi-order onA /R. Define a fuzzy relation T on A by\nT(a, b) = Q(Ra,Rb), for all a, b \u2208 A.\nIt is easy to verify thatT is a fuzzyquasi-order onA . According to (a), R\u0303 is a right invariant fuzzyquasi-order\non A /R, what implies R\u0303 6 Q, and for arbitrary a, b \u2208 Awe obtain that\nR(a, b) = R\u0303(Ra,Rb) 6 Q(Ra,Rb) = T(a, b),\nwhat means that R 6 T. Therefore, we have that Q = T/R, and by (a) we obtain that T is a right invariant fuzzy quasi-order on A , what implies T 6 S. Now, according to (33), we have that Q = T/R 6 S/R, and since S/R is a right invariant fuzzy quasi-order on A /R, we conclude that Q = S/R, i.e., S/R is the greatest right invariant fuzzy quasi-order on A /R.\nConversely, let S/R be the greatest right invariant fuzzy quasi-order on A /R. According to (a), S is a right invariant fuzzy quasi-order on A . Let T be the greatest right invariant fuzzy quasi-order on A . Then we have that R 6 S 6 T, and by (a) it follows that T/R is a right invariant fuzzy quasi-order on A /R, what yields T/R 6 S/R. Now, by (33) it follows that T 6 S, and hence, T = S, and we have proved that S is the greatest right invariant fuzzy quasi-order on A .\n(c) This assertion follows immediately by (b).\nCertainly, theprevious theoremalsoholds for left invariant fuzzyquasi orders. Furthermore,wehave that a similar theorem concerning weakly right invariant fuzzy quasi-orders is true:\nTheorem 7.2. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer, let R be a weakly right invariant fuzzy quasi-order on A and let S be a fuzzy quasi-order on A such that R 6 S. Then\n(a) S is a weakly right invariant fuzzy quasi-order on A if and only if S/R is a weakly right invariant fuzzy quasi-order on A /R;\n(b) S is the greatest weakly right invariant fuzzy quasi-order on A if and only if S/R is the greatest weakly right invariant fuzzy quasi-order on A /R;\n(c) R is the greatest weakly right invariant fuzzy quasi-order on A if and only if R\u0303 is the greatest weakly right invariant fuzzy quasi-order on A /R.\nProof. (a) For arbitrary a \u2208 A and u = x1 . . . xn \u2208 X \u2217, x1, . . . , xn \u2208 X, by (71) we obtain that\n\u03c4A/Ru (Ra) = (\u03b4 A/R u \u25e6 \u03c4 A/R)(Ra) = \u2228\nb\u2208A\n\u03b4A/Ru (Ra,Rb) \u2297 \u03c4 A/R(Rb)\n= \u2228\nb\u2208A\n(R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4 A xn \u25e6 R)(a, b) \u2297 (R \u25e6 \u03c4A)(b)\n= (R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4 A xn \u25e6 R \u25e6 \u03c4A)(a) = (\u03b4Ax1 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A xn \u25e6 \u03c4 A)(a) = \u03c4Au (a).\nNext, for any a \u2208 A and u \u2208 X\u2217 we have that\n(S/R \u25e6 \u03c4A/Ru )(Ra) = \u2228\nb\u2208A\nS/R(Ra,Rb) \u2297 \u03c4 A/R u (Rb) =\n\u2228\nb\u2208A\nS(a, b) \u2297 \u03c4Au (b) = (S \u25e6 \u03c4 A u )(a).\nTherefore S/R \u25e6 \u03c4A/Ru = \u03c4 A/R u if and only if S \u25e6 \u03c4 A u = \u03c4 A u , and we have proved that (a) is true.\nThe assertion (b) can be proved similarly as (b) of Theorem 7.1, and (c) follows immediately by (b).\nLet A be a fuzzy automaton. A sequence A1,A2, . . . ,An of fuzzy automata we will call a Q ri-reduction of A if A1 = A and for each k \u2208 {1, 2, . . . , n \u2212 1} we have that Ak+1 is the afterset fuzzy automaton of Ak w.r.t. the greatest right invariant fuzzy quasi-order on Ak. Analogously, using left invariant fuzzy quasiorders instead of right invariant ones we define a Qli-reduction of A , using strongly right and left invariant fuzzy quasi-orders we define a Qsri-reduction and a Qsli-reduction of A , and using right and left invariant fuzzy equivalences we define a E ri-reduction and a E li-reduction of A . If we consider fuzzy recognizers, in a similar way we define Qwri- and Qwli-reductions, as well as Qri- and Qli-reductions of fuzzy recognizers.\nLet us note that for each fuzzy finite automaton A there exists a Qri-reduction A1,A2, . . . ,An of A such that for every Qri-reduction A1,A2, . . . ,An,An+1, . . . ,An+m of A which is a continuation of this reduction we have that\n|An| = |An+1| = \u00b7 \u00b7 \u00b7 = |An+m|,\ni.e., all fuzzy automata An+1, . . . ,An+m have the same number of states as An. Also, there is a shortest Q rireduction A1,A2, . . . ,An of A having this property, which we will call the shortest Q ri-reduction of A , and then we will call An a Q ri-reduct of A , and we will cal n the length of this shortest Qri-reduction. If a fuzzy automaton A is its own Qri-reduct, then it is called Qri-reduced. Analogously we define a Qli-reduct of A and a Qli-reduced fuzzy automaton, as well as Qsri- and Qsli-reducts, Qsri- and Qsli-reduced fuzzy automata, E ri- and E li-reducts, E ri- and E li-reduced fuzzy automata, and other related notions. For fuzzy recognizers we similarly define Qwri- and Qwli-reducts, Qwri- and Qwli-reduced fuzzy recognizers, Qri- and Qli-reducts, Qri- and Qli-reduced fuzzy recognizers, and so forth.\nThe next theorem shows that length of the shortest Qri- and Qli-reductions do not exceed 2.\nTheorem 7.3. A fuzzy recognizer (automaton) A is Qri-reduced if and only if the greatest right invariant fuzzy quasi-order Rri on A is a fuzzy order.\nConsequently, for each fuzzy finite recognizer (automaton) A , the afterset fuzzy recognizer (automaton) A /Rri\nis Qri-reduced.\nProof. Let A be Qri-reduced. If Rri is not a fuzzy order, then |A /Rri| < |A |, what contradicts our starting hypothesis that A is Qri-reduced. Thus, we conclude that Rri is a fuzzy order.\nConversely, let Rri be a fuzzy order. Consider an arbitrary Qri-reduction A1 = A ,A2, . . . ,An of A . For each k \u2208 {1, 2, . . . , n} let Rri\nk be the greatest right invariant fuzzy quasi-order on Ak. By Theorem 7.1,\nfor every k \u2208 {2, . . . , n} we have that Rri k = R\u0303ri k\u22121 , so Rri k is a fuzzy order, and by the hypothesis, Rri 1 = Rri is a fuzzy order. Now, for every k \u2208 {2, . . . , n} we have that |Ak| = |(Ak\u22121)/R ri k\u22121 | = |Ak\u22121|, and hence, |A | = |A1| = |A2| = \u00b7 \u00b7 \u00b7 = |An|. Therefore, the fuzzy recognizer (automaton) A is Q ri-reduced.\nFurther, let A be an arbitrary fuzzy finite recognizer (automaton) and Rri the greatest right invariant fuzzy quasi-order on A . Then by Theorem 7.1 it follows that R\u0303ri is the greatest right invariant fuzzy quasiorder on the afterset fuzzy recognizer (automaton) A /Rri, and since it is a fuzzy order, we conclude that A /Rri is Qri-reduced.\nSimilarly we prove the following:\nTheorem 7.4. A fuzzy recognizer A is Qwri-reduced if and only if the greatest weakly right invariant fuzzy quasiorder Rwri on A is a fuzzy order.\nConsequently, for each fuzzy finite recognizer A , the afterset fuzzy recognizer A /Rwri is Qwri-reduced.\nIf a fuzzy automaton A = (A,X, \u03b4A) is Qri-reduced, that is, if the greatest right invariant fuzzy quasiorder Rri on A is a fuzzy order, then the afterset fuzzy automaton A /Rri has the same cardinality as A , but it is not necessary isomorphic to A (see Example 7.1). If the afterset fuzzy automaton A /Rri is isomorphic to A , then A is called completely Qri-reduced. Analogously we define completely Qli-, E ri- and E li-reduced fuzzy automata, as well as completely Qri-, Qli-, Qwri-, and Qwli-reduced fuzzy recognizers.\nExample 7.1 will show that even if a fuzzy recognizer or a fuzzy automaton A is Qwri- and/or Qwlireduced, or it is Qri- and/or Qli-reduced, it is still possible to continue reduction of the number of states of A alternating reductions by means of the greatest weakly right and left invariant fuzzy quasi-orders, or by means of the greatest right and left invariant fuzzy quasi-orders. For that reasonwe introduce the following concepts.\nLet A be a fuzzy automaton. A sequence A1,A2, . . . ,An of fuzzy automata will be called an alternate Q-reduction of A if A1 = A and for every k \u2208 {1, 2, . . . , n \u2212 2} the following is true:\n(1) Ak+1 is the afterset fuzzy automaton ofAk w.r.t. the greatest right invariant or the greatest left invariant fuzzy quasi-odred on Ak;\n(2) If Ak+1 is the afterset fuzzy automaton of Ak w.r.t. the greatest right invariant fuzzy quasi-order on Ak, then Ak+2 is the afterset fuzzy automaton of Ak+1 w.r.t. the greatest left invariant fuzzy quasi-order on Ak;\n(3) If Ak+1 is the afterset fuzzy automaton of Ak w.r.t. the greatest left invariant fuzzy quasi-order on Ak, then Ak+2 is the afterset fuzzy automaton of Ak+1 w.r.t. the greatest right invariant fuzzy quasi-order on Ak.\nIf A2 is the afterset fuzzy automaton of A1 w.r.t. the greatest right invariant fuzzy quasi-order on A1, then this alternate Q-reduction is called an alternate Qrl-reduction, and if A2 is the afterset fuzzy automaton of A1 w.r.t. the greatest left invariant fuzzy quasi-order on A1, then this alternate Q-reduction is called an alternate Qlr-reduction.\nNote that for each fuzzy finite automaton A there exists an alternate Qrl-reduction A1,A2, . . . ,An of A such that for every alternate Qrl-reduction A1,A2, . . . ,An,An+1, . . . ,An+m which is a continuation of this reduction we have that\n|An| = |An+1| = \u00b7 \u00b7 \u00b7 = |An+m|,\ni.e., all fuzzy automataAn+1, . . . ,An+m have the samenumber of states asAn. Also, there is a shortest alternate Qrl-reductionA1,A2, . . . ,An of A having this property, which wewill call the shortest alternate Q\nrl-reduction of A , and we will call An an alternate Q\nrl-reduct of A , whereas the number nwill be called the length of the shortest alternate Qrl-reduction of A . Analogously we define the shortest alternate Qlr-reduction, its length, and the alternateQlr-reduct ofA . Using the greatest right and left invariant fuzzy equivalences instead of the greatest right and left invariant fuzzy quasi-orders, we also define alternate E -reductions, alternate E rl-and E\nlr-reductions, alternate E rl-and E lr-reducts, etc. For fuzzy recognizers, weakly right invariant andweakly left invariant fuzzy quasi-orders, similarly we define alternate Qw- and E w-reductions, alternate Qwrl- and Qwlrreductions, alternate Qwrl- and Qwlr-reducts, as well as alternate Q-reductions, alternate Qrl- and Qlr-reductions, alternate Qrl- and Qlr-reducts of fuzzy recognizers, and other related concepts.\nConsider now the following example.\nExample 7.1. Let L be the Boolean structure and let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer over L , where A = {1, 2, 3}, X = {x, y}, and \u03b4Ax , \u03b4 A y , \u03c3 A and \u03c4A are given by\n\u03b4Ax =   1 0 0 0 0 0 0 0 0   , \u03b4 A y =   0 1 0 1 1 1 1 0 0   , \u03c3 A = [ 1 0 0 ] , \u03c4A =   0 1 1   .\nLet us note that the fuzzy automaton (A,X, \u03b4A) has been already considered in Example 7.1. The greatest weakly right invariant fuzzy quasi-order Rwri on A and related afterset fuzzy recognizer A2 = A /R wri = (A2,X, \u03b4 A2 , \u03c3A2 , \u03c4A2) are given by\nRwri =   1 0 0 0 1 1 0 0 1   , \u03b4 A2 x =   1 0 0 0 0 0 0 0 0   , \u03b4 A2 y =   0 1 1 1 1 1 1 0 1   , \u03c3 A2 = [ 1 0 0 ] , \u03c4A2 =   0 1 1   ,\nand the greatest weakly left invariant fuzzy quasi-order Rwli2 on A2 and related afterset fuzzy recognizer A3 = A2/R wri = (A3,X, \u03b4 A3 , \u03c3A3 , \u03c4A3) are given by\nRwli2 =   1 0 0 0 1 1 0 1 1   , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b4A3y = [ 0 1 1 1 ] , \u03c3A3 = [ 1 0 ] , \u03c4A3 = [ 0 1 ] .\nIt can be easily verified that both the greatest weakly right invariant fuzzy quasi-order and the greatest weakly left invariant fuzzy quasi-order on A3 coincide with the equality relation on A3, and the afterset fuzzy recognizers of A3 w.r.t. these fuzzy quasi-orders are isomorphic to A3. By this it follows that none alternate Qw-reduction decreases the number of states of A3, and we obtain that the sequence A = A1, A2, A3 is the shortest alternate Q wrl-reduction of A , and A3 is the alternate Q wrl-reduct of A .\nOn the other hand, the greatest weakly left invariant fuzzy quasi-order Rwli on A and the afterset fuzzy recognizer A \u20322 = A /R wli = (A\u20322,X, \u03b4 A\u2032 2 , \u03c3A \u2032 2 , \u03c4A \u2032 2) are given by\nRwli =   1 0 0 0 1 0 1 1 1   , \u03b4 A\u2032 2 x =   1 0 0 0 0 0 1 0 0   , \u03b4 A\u2032 2 y =   0 1 0 1 1 1 1 1 1   , \u03c3 A\u2032 2 = [ 1 0 0 ] , \u03c4A \u2032 2 =   0 1 1   ,\nand both the greatest weakly right invariant fuzzy quasi-order and the greatest weakly left invariant fuzzy quasi-order onA \u20322 coincidewithR\nwli, and the afterset fuzzy recognizers ofA \u20322 w.r.t. these fuzzy quasi-orders are isomorphic to A \u2032\n2 . This means that none alternate Qw-reduction of A \u2032 2 decreases the number of states\nof A \u20322 , i.e., none alternate Q wlr-reduction decreases the number of states of A , and we obtain that A is its own alternate Qwlr-reduct. Let us note thatRwri andRwri2 are also the greatest right invariant fuzzyquasi-orders on fuzzy recognizers A and A2, as well as on fuzzy automata (A,X, \u03b4 A) and (A2,X, \u03b4\nA2), and Rwli is also the greatest left invariant fuzzy quasi-order on the fuzzy recognizer A and the fuzzy automaton (A,X, \u03b4A). Therefore, everything we have shown for weakly right invariant and weakly left invariant fuzzy quasi-orders holds also for right invariant and left invariant ones.\nExample 7.1 shows that even if a fuzzy recognizer A is Qwri- and/or Qwli-reduced, it is still possible to continue reduction of the number of states ofA alternating reductions bymeans of the greatestweakly right and left invariant fuzzy quasi-orders. Namely, the fuzzy recognizer A from this example is both Qwri- and Qwli-reduced, but alternate Qwrl-reduction decreases its number of states. The same example also shows that shortest alternate Qwrl- and Qwlr-reductions can have different lengths, and that alternate Qwrl- and Qwlr-reducts can have different number of states. Indeed, alternate Qwrl-reduction reduces A from three to two states, whereas alternate Qwlr-reduction do not decrease number of states of A . The above remarks also hold for alternate Qrl- and Qlr-reductions.\nThe state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]). In these papers a non-deterministic recognizer A has been reduced using factor recognizers A /ERri and A /ERli w.r.t. natural equivalences of R\nri and Rli, but none of the mentioned authors have considered afterset recognizers A /Rri and A /Rli. As we have noted earlier, recognizers A /ERri and A /R ri, as well as A /ERli and A /R li, are not necessary isomorphic, but they have the same number of states and both of them are equivalent to A . Therefore, it is all the same if we use A /ERri or A /R ri, and A /ERli or A /R li. However, there are differences if we work with alternate reductions. For the recognizer A with three states given in Example 7.1, natural equivalences ERri and ERli coincide with the equality relation, so alternate reductions by means of these equivalences do not decrease the number of states ofA , but the alternateQwrl-reduction ofA gives a recognizerwith two states. The same conclusion can be drawn for alternate E -reductions. Equivalences Eri and Eli on A also coincide with the equality relation, and none alternate E -reduction decrease the number of states of A .\nIn alternate Qw-reductions considered in Example 7.1 we have obtained three consecutive members which are isomorphic, and by this fact we have concluded that none alternate Qw-reduction can further decrease the number of states. A similar conclusionwe can draw in caseswhenwe obtain a fuzzy recognizer with only one state. However, we have no yet a general procedure to decide whether we have reached the smallest number of states in an alternate Q- or Qw-reduction. An exception are alternate E - and E wreductions of non-deterministic automata and recognizers, for which there exists such general procedure. Indeed, if after two successive steps the number of states did not changed, then we can be sure that we have reached the smallest number of states and this alternate E - or E w-reduction is finished. In other words, an alternate E -reduction finishes when we obtain a non-deterministic automaton which is both E ri- and E li-reduced, and this automaton is an alternate E -reduct of the staring automaton. The same holds for alternate E w-reductions of non-deterministic recognizers. AlternateQ- andQw-reductions do not have this property even in the case of non-deterministic automata and recognizers, because making an afterset automaton or recognizer w.r.t. an order relation we change the transition relation and we obtain an automaton\nor recognizer which is not necessary isomorphic to the original one, what makes possible to continue an alternate Q- or Qw-reduction and decrease the number of states (see again Example 7.1). The same conclusion can be drawn for alternate Q-, Qw-, E - and E w-reductions of fuzzy automata and recognizers.\nFinally, let us give several remarks concerning strongly right and left invariant fuzzy quasi-orders. It can\nbe easily verified that for every fuzzy quasi-order R on a fuzzy automaton A , the fuzzy order R\u0303 on the afterset fuzzy automaton A /R is strongly invariant, i.e., it is both strongly right and strongly left invariant. Consequently, for the greatest right invariant fuzzy quasi-order Rri on A , by Theorem 7.1 it follows that R\u0303ri is the greatest right invariant fuzzy quasi-order on A /Rri, and hence, R\u0303ri is the greatest strongly right invariant fuzzy quasi-order on A /Rri, and every right invariant fuzzy quasi-order on A /Rri is a strongly right invariant.\nHowever, for the greatest strongly right invariant fuzzy quasi-order Rsri on A we have that R\u0303sri is a strongly right invariant fuzzy quasi-order on A /Rsri, but the next example shows that it is not necessary the greatest element of Qsri(A ). For that reason, the analogue of Theorem 7.3 does not hold for strongly right invariant fuzzy quasi-orders, i.e., the afterset fuzzy automaton A /Rsri is not necessary Qsri-reduced, and contrary to Qri-reductions, a Qsri-reduction does not necessary stop after its first step. This will be also shown by the next example.\nExample 7.2. Let L be the Boolean structure and let A = (A,X, \u03b4A) be a fuzzy automaton over L , where A = {1, 2, 3}, X = {x}, and a fuzzy transition relation \u03b4Ax is given by\n\u03b4Ax =   1 0 1 1 0 0 1 0 0   .\nThen the greatest strongly right invariant fuzzy quasi-order Rsri on A is given by\nRsri =   1 1 1 0 1 1 0 1 1   ,\nthe afterset fuzzy automatonA2 = A /R sri = (A2,X, \u03b4 A2) has two states, i.e.,A2 = {1, 2}, and a fuzzy transition relation \u03b4A2x is given by\n\u03b4A2x = [ 1 1 1 1 ] .\nConsequently, the greatest strongly right invariant fuzzy quasi-order Rsri 2 on A2 is given by\nRsri2 = [ 1 1 1 1 ] ,\nand it reduces A2 to a fuzzy automaton A3 = A2/R sri 2 = (A3,X, \u03b4 A3) having only one state and a fuzzy\ntransition relation \u03b4A3x = [ 1 ] . Therefore, the sequence A = A1, A2, A3 is the shortest Q sri-reduction of A .\nThis example also shows that the converse implication in (a) of Theorem 7.1 does not necessary hold for strongly right invariant fuzzy quasi-orders. Namely, if we assume that S is the universal relation on A, then we have that S/Rsri = Rsri\n2 is a strongly right invariant fuzzy quasi-order on A /Rsri, but S is not a strongly\nright invariant fuzzy quasi-order on A ."}, {"heading": "8. An example demonstrating some applications to fuzzy discrete event systems", "text": "In this section we give an example demonstrating some applications of weakly left invariant fuzzy quasi-orders to fuzzy discrete event systems. A more complete study of fuzzy discrete event systems will be a subject of our further work.\nA discrete event system (DES) is a dynamical system whose state space is described by a discrete set, and states evolve as a result of asynchronously occurring discrete events over time [15, 31]. Such systems have significant applications in many fields of computer science and engineering, such as concurrent and distributed software systems, computer and communication networks, manufacturing, transportation and traffic control systems, etc. Usually, a discrete event system is modeled by a finite state automaton (deterministic or nondeterministic), with events modeled by input letters, and the behavior of a discrete event system is described by the language generated by the automaton. However, in many situations states and state transitions, as well as control strategies, are somewhat imprecise, uncertain and vague. To take this kind of uncertainty into account, Lin and Ying extended classical discrete event systems to fuzzy discrete event systems (FDES) by proposing a fuzzy finite automaton model [48, 49]. Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.\nIn [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way. In fact, such an automaton can be regarded as the determinization of a fuzzy automaton (defined as in this paper) by means of the accessible fuzzy subset construction (see [32, 34]). On the other hand, in [12, 13, 51] fuzzy discrete event systems have been modeled by fuzzy automata with single crisp initial states. In all mentioned papers membership values have been taken in the Go\u0308del or product structure.\nHere, a fuzzy discrete event system will be modeled by a fuzzy finite recognizer A = (A,X, \u03b4A, \u03c3A, \u03c4A) over a complete residuated latticeL , defined as in Section 2.2. Two kinds of fuzzy languages associatedwith this fuzzy recognizer play a key role in study of fuzzy discrete event systems. The first one is the fuzzy language L(A ) recognized by A , which is defined as in (22) (or (23)), and the second one is the fuzzy language Lg(A ) generated by A , which is defined by\nLg(A )(u) = \u2228\na,b\u2208A\n\u03c3A(a) \u2297 \u03b4A\u2217 (a, u, b) = \u2228\nb\u2208A\n(\u03c3A \u25e6 \u03b4Au )(b) = \u2228\nb\u2208A\n\u03c3Au (b), (78)\nfor every u \u2208 X\u2217. Intuitively, Lg(A )(u) represents the degree to which the input word u causes a transition from some initial state to any other state. Two fuzzy recognizers A and B are called language-equivalent if L(A ) = L(B) and Lg(A ) = Lg(B).\nDiscrete event models of complex dynamic systems are built rarely in a monolithic manner. Instead, a modular approach is used where models of individual components are built first, followed by the compositionof thesemodels to obtain themodel of the overall system. In the automatonmodeling formalism the composition of individual automata (that model interacting system components) is usually formalized by the parallel composition of automata. Once a complete system model has been obtained by parallel composition of a set of automata, the resulting monolithic model can be used to analyze the properties of the system.\nLet A = (A,X, \u03b4A, \u03c3A, \u03c4A) and B = (A,Y, \u03b4B, \u03c3B, \u03c4B) be fuzzy recognizers. The product of A and B is a fuzzy recognizer A \u00d7 B = (A \u00d7 B,X \u2229 Y, \u03b4A\u00d7B, \u03c3A\u00d7B, \u03c4A\u00d7B), defined by\n\u03b4A\u00d7B((a, b), x, (a\u2032, b\u2032)) = \u03b4A(a, x, a\u2032) \u2297 \u03b4B(b, x, b\u2032), \u03c3A\u00d7B(a, b) = \u03c3A(a) \u2297 \u03c3B(b), \u03c4A\u00d7B(a, b) = \u03c4A(a) \u2297 \u03c4B(b), (79)\nfor all a, a\u2032 \u2208 A, b, b\u2032 \u2208 B and x \u2208 X \u2229 Y, and the parallel composition of A and B is a fuzzy recognizer A \u2016B = (A \u00d7 B,X \u222a Y, \u03b4A\u2016B, \u03c3A\u2016B, \u03c4A\u2016B), defined by\n\u03b4A\u2016B((a, b), x, (a\u2032, b\u2032)) =  \u03b4A(a, x, a\u2032) \u2297 \u03b4B(b, x, b\u2032) if x \u2208 X \u2229 Y \u03b4A(a, x, a\u2032) if x \u2208 X \\ Y and b = b\u2032 \u03b4B(b, x, b\u2032) if x \u2208 Y \\ X and a = a\u2032\n0 otherwise\n,\n\u03c3A\u2016B(a, b) = \u03c3A(a) \u2297 \u03c3B(b), \u03c4A\u2016B(a, b) = \u03c4A(a) \u2297 \u03c4B(b),\n(80)\nfor all a, a\u2032 \u2208 A, b, b\u2032 \u2208 B. Associativity is used to extend the definition of parallel composition to more than two automata.\nIn the parallel composition of fuzzy automataA andB, a common input letter fromX\u2229Y is executed in both automata simultaneously, whatmeans that these two automata are synchronized on the common input letter. On the other hand, a private input letter from X \\ Y is executed in A , while B is staying in the same state, and similarly for private letters from Y \\ X. Clearly, if X = Y, then the parallel composition reduces to the product. However, even if X , Y, the parallel composition of fuzzy automata can be regarded as the product of suitable input extensions of these fuzzy automata, what will be shown in the sequel. IfX\u2229Y = \u2205, then no synchronized transitions occur and A \u2016B is the concurrent behavior of A and B. This behavior is often termed the shuffle of A and B.\nLet A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer and let Y be an alphabet such that X \u2286 Y. Let us define a new transition function \u03b4AY : A \u00d7 Y \u00d7 A \u2192 L by\n\u03b4AY (a, x, a\u2032) =  \u03b4A(a, x, a\u2032) if x \u2208 X 1 if x \u2208 Y \\ X and a = a\u2032\n0 otherwise\n, (81)\nfor all a, a\u2032 \u2208 A and x \u2208 Y. Then a fuzzy recognizer AY = (A,Y, \u03b4 AY , \u03c3A, \u03c4A) is called a Y-input extension of A . In other words, input letters from X cause in AY the same transitions as in A , while those from Y \\ X cause AY to stay in the same state. Evidently, \u03b4 AY u is the equality relation on A, for each u \u2208 (Y \\ X)\n\u2217. An operation frequently performed on words and languages is the so-called natural projection, which transforms words over an alphabet Y to words over a smaller alphabetX \u2286 Y. Formally, a natural projection, or briefly a projection, is a mapping \u03c0\nX : Y\u2217 \u2192 X\u2217, where X \u2286 Y, defined inductively by\n\u03c0 X (w) =  e if w \u2208 (Y \\ X)\u2217 w if w \u2208 X\u2217\n\u03c0 X (u)\u03c0 X (v) if w = uv, for some u, v \u2208 Y\u2217\n, (82)\nfor eachw \u2208 Y\u2217 (cf. [15]). In other words, theword\u03c0 X (w) \u2208 X\u2217 is obtained fromw by deleting all appearances of letters from Y \\ X. First we prove the following:\nLemma 8.1. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer, let Y be an alphabet such that X \u2286 Y, and let AY = (A,Y, \u03b4 AY , \u03c3A, \u03c4A) be the Y-input extension of A . Then for every u \u2208 Y\u2217 we have that\nLg(AY)(u) = Lg(A )(\u03c0X (u)) and L(AY)(u) = L(A )(\u03c0X (u)).\nProof. An arbitrary word u \u2208 Y\u2217 can be represented in the form u = u1v1u2v2 \u00b7 \u00b7 \u00b7unvnun+1, where n \u2208 N, u1, u2, . . . , un+1 \u2208 (Y \\X) \u2217, and v1, v2, . . . , vn \u2208 X\n\u2217, and clearly, \u03c0 X (u) = v, where v = v1v2 \u00b7 \u00b7 \u00b7vn. Since \u03b4 AY p is the\nequality relation on A and \u03b4AYq = \u03b4 A q , for all p \u2208 (Y \\ X) \u2217 and q \u2208 X\u2217, then we have that\nLg(AY)(u) = \u2228\na\u2208A\n(\u03c3A \u25e6 \u03b4AYu )(a) = \u2228\na\u2208A\n(\u03c3A \u25e6 \u03b4AYu1 \u25e6 \u03b4 AY v1 \u25e6 \u03b4 AY u2 \u25e6 \u03b4 AY v2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 AY un \u25e6 \u03b4 AY vn \u25e6 \u03b4 AY un+1 )(a)\n= \u2228\na\u2208A\n(\u03c3A \u25e6 \u03b4Av1 \u25e6 \u03b4 A v2 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A vn )(a) =\n\u2228\na\u2208A\n(\u03c3A \u25e6 \u03b4Av )(a) = Lg(A )(v) = Lg(A )(\u03c0X (u)),\nand similarly, L(AY)(u) = L(A )(\u03c0X (u)).\nNow we prove the following:\nTheorem 8.1. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) and B = (B,Y, \u03b4B, \u03c3B, \u03c4B) be fuzzy recognizers, let Z = X \u222a Y, and let AZ = (A,Z, \u03b4 AZ , \u03c3A, \u03c4A) and BZ = (B,Z, \u03b4 BZ , \u03c3B, \u03c4B) be respectively their Z-input extensions.\nThen fuzzy recognizers A \u2016B and AZ\u2016BZ are isomorphic, and for each u \u2208 Z \u2217 we have that\nLg(A \u2016B)(u) = Lg(AZ)(u) \u2297 Lg(BZ)(u) = Lg(A )(\u03c0X (u)) \u2297 Lg(B)(\u03c0Y (u)), (83) L(A \u2016B)(u) = L(AZ)(u) \u2297 L(BZ)(u) = L(A )(\u03c0X (u)) \u2297 L(B)(\u03c0Y (u)). (84)\nProof. According to (81) and (80), for every x \u2208 Z = X \u222a Y we have that\n\u03b4AZ\u2016BZ ((a, b), x, (a\u2032, b\u2032)) = \u03b4AZ (a, x, a\u2032) \u2297 \u03b4BZ(b, x, b\u2032)\n=  \u03b4A(a, x, a\u2032) \u2297 \u03b4B(b, x, b\u2032), if x \u2208 X \u2229 Y \u03b4A(a, x, a\u2032) \u2297 1, if x \u2208 X \\ Y and b = b\u2032\n1 \u2297 \u03b4B(b, x, b\u2032), if x \u2208 Y \\ X and a = a\u2032\n= \u03b4A\u2016B((a, b), x, (a\u2032, b\u2032)),\nfor every a, a\u2032 \u2208 A, b, b\u2032 \u2208 B. Since fuzzy recognizers A and AZ, as well as B and BZ, have the same fuzzy sets of initial and terminal states, we conclude that A \u2016B and AZ\u2016BZ are isomorphic. Moreover, according to Lemma 8.1, for each u \u2208 Z\u2217 = (X \u222a Y)\u2217 we have that\nLg(A \u2016B)(u) = Lg(AZ\u2016BZ)(u) = \u2228\n(a,b),(a\u2032,b\u2032)\u2208A\u00d7B\n\u03c3A\u2016B(a, b) \u2297 \u03b4AZ\u2016BZ ((a, b), u, (a\u2032, b\u2032))\n=\n( \u2228\na,a\u2032\u2208A\n\u03c3A(a) \u2297 \u03b4AZ (a, u, a\u2032) ) \u2297 ( \u2228\nb,b\u2032\u2208B\n\u03c3B(b) \u2297 \u03b4BZ (b, u, b\u2032) )\n= Lg(AZ)(u) \u2297 Lg(BZ)(u) = Lg(A )(\u03c0X(u)) \u2297 Lg(B)(\u03c0Y (u)).\nThe rest of the assertion can be proved in a similar way.\nIn particular, if X = Y, i.e., if A \u2016B = A \u00d7 B, then by (83) and (84) it follows that\nLg(A \u00d7 B)(u) = Lg(A )(u) \u2297 Lg(B)(u), (85)\nL(A \u00d7 B)(u) = L(A )(u) \u2297 L(B)(u), (86)\nfor every u \u2208 X\u2217. One of the key reasons for using automata to model discrete event systems is their amenability to analysis for answering various questions about the structure and behavior of the system, such as safety properties, blocking properties, diagnosability, etc. In the context of fuzzy automata we will consider blocking properties, which are originally concerned with the presence of deadlock and/or livelock in the automaton, i.e., with the problem of checking whether a terminal state can be reached from every reachable state.\nA prefix-closure of a fuzzy language f \u2208 LX \u2217 , denoted by f , is a fuzzy language in LX \u2217 defined by\nf (u) = \u2228\nv\u2208X\u2217\nf (uv), (87)\nfor any u \u2208 X\u2217. It is easy to verify that the mapping f 7\u2192 f is a closure operator on LX \u2217\n, i.e., for arbitrary f , f1, f2 \u2208 L X\u2217 we have that\nf 6 f , f = f and f1 6 f2 implies f1 6 f2. (88)\nA fuzzy language f \u2208 LX \u2217\nis called prefix-closed if f = f . We have that the following is true:\nLemma 8.2. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer. Then\nL(A ) 6 L(A ) 6 Lg(A ) = Lg(A ). (89)\nProof. According to L(A ) 6 Lg(A ) and (88), it is enough to prove Lg(A ) 6 Lg(A ). Indeed, for arbitrary a, b, c \u2208 A and u, v \u2208 X\u2217 we have that\n\u03c3A(a) \u2297 \u03b4Au (a, c) \u2297 \u03b4 A v (c, b) 6 \u03c3 A(a) \u2297 \u03b4Au (a, c) 6 Lg(A )(u),\nwhat implies that\nLg(A )(u) = \u2228\nv\u2208X\u2217\nLg(A )(uv) = \u2228\nv\u2208X\u2217\n\u2228\na,b\u2208A\n\u03c3A(a) \u2297 \u03b4Auv(a, b)\n= \u2228\nv\u2208X\u2217\n\u2228\na,b\u2208A\n\u2228\nc\u2208A\n\u03c3A(a) \u2297 \u03b4Au (a, c)\u2297 \u03b4 A v (c, b) =\n\u2228\na,c\u2208A\n( \u03c3A(a) \u2297 \u03b4Au (a, c) ) \u2297 (\u2228\nv\u2208X\u2217\n\u2228\nb\u2208A\n\u03b4Av (c, b) )\n6\n\u2228\na,c\u2208A\n\u03c3A(a) \u2297 \u03b4Au (a, c) = Lg(A )(u),\nfor every u \u2208 X\u2217. Therefore, Lg(A ) 6 Lg(A ).\nIt is worth noting that the fuzzy language L(A ) can be represented by\nL(A )(u) = \u2228\nv\u2208X\u2217\nL(A )(uv) = \u2228\nv\u2208X\u2217\n\u03c3A \u25e6 \u03b4Auv \u25e6 \u03c4 A =\n\u2228\nv\u2208X\u2217\n\u03c3A \u25e6 \u03b4Au \u25e6 \u03b4 A v \u25e6 \u03c4\nA = \u2228\nv\u2208X\u2217\n\u03c3Au \u25e6 \u03c4 A v ,\nfor every u \u2208 X\u2217.\nA fuzzy recognizer A is said to be blocking if L(A ) < Lg(A ), where the inequality is proper, and other-\nwise, if L(A ) = Lg(A ), then A is referred to as nonblocking. These concepts generalize related concepts of the crisp discrete event systems theory, where a crisp automaton is considered to be blocking if it can reach a state fromwhich no terminal state can be reached anymore. This includes both the possibility of a deadlock, where an automaton is stuck and unable to continue at all, and a livelock, where an automaton continues to run forever without achieving any further progress.\nWhen we work with parallel compositions, the term conflicting is used instead of blocking. Namely, fuzzy recognizers A and B are said to be nonconflicting if their parallel composition A \u2016B is nonblocking, and otherwise they are said to be conflicting. The parallel composition of a set of automata may be blocking even if each of the individual components is nonblocking (cf. [15]), and hence, it is necessary to examine the transition structure of the parallel composition to answer blocking properties. But, the size of the state set of the parallel composition may in the worst case grow exponentially in the number of automata that are composed. This process is known as the curse of dimensionality in the study of complex systems composed of many interacting components.\nThe mentioned problems in analysis of large discrete event models may be mitigated if we adopt modular reasoning, which can make it possible to replace components in the parallel composition by smaller equivalent automata, and then to analyse a simpler system. Such an approach has been used in [54] in study of conflicting properties of crisp discrete event systems. Here we will show that every fuzzy recognizer A is conflict-equivalent with the afterset fuzzy recognizer A /R w.r.t. any weakly left invariant fuzzy quasi-orderR onA . Thismeans that in the parallel composition of fuzzy recognizers every component can be replaced by such afterset fuzzy recognizer, what results in a smaller fuzzy recognizer to be analysed, and do not affect conflicting properties of the components.\nTwo fuzzy recognizersA andB are said to be conflict-equivalent if for every fuzzy recognizerC we have that A \u2016C is nonblocking if and only if B\u2016C is nonblocking, i.e., if A and B are nonconflicting (conflicting) with the same fuzzy recognizers (cf. [54]).\nNow we are ready to state and prove the main results of this section.\nTheorem 8.2. Let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer and let R be a weakly left invariant fuzzy quasi-order on A . Then fuzzy recognizers A and A /R are language-equivalent, and consequently, they are conflict-equivalent.\nProof. As we already know, L(A ) = L(A /R). Moreover, according to the dual statement of (71), for an arbitrary u = x1 \u00b7 \u00b7 \u00b7 xn \u2208 X \u2217, where n \u2208 N and x1, . . . , xn \u2208 X, we have that\nLg(A /R)(u) = \u2228\nb\u2208A\n(\u03c3A/R \u25e6 \u03b4A/Ru )(Rb) = \u2228\nb\u2208A\n(\u03c3A/R \u25e6 \u03b4A/Rx1 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A/R xn )(Rb)\n= \u2228\na1,a2,...,an,b\u2208A\n\u03c3A/R(Ra1) \u2297 \u03b4 A/R x1 (Ra1 ,Ra2) \u2297 \u00b7 \u00b7 \u00b7 \u2297 \u03b4 A/R xn (Ran ,Rb)\n= \u2228\na1,a2,...,an,b\u2208A\n(\u03c3A \u25e6 R)(a1) \u2297 (R \u25e6 \u03b4 A x1 \u25e6 R)(a1, a2) \u2297 \u00b7 \u00b7 \u00b7 \u2297 (R \u25e6 \u03b4 A xn \u25e6 R)(an, b)\n= \u2228\nb\u2208A\n(\u03c3A \u25e6 R \u25e6 \u03b4Ax1 \u25e6 R \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 R \u25e6 \u03b4 A xn \u25e6 R)(b)\n= \u2228\nb\u2208A\n(\u03c3A \u25e6 \u03b4Ax1 \u25e6 \u00b7 \u00b7 \u00b7 \u25e6 \u03b4 A xn )(b) =\n\u2228\nb\u2208A\n(\u03c3A \u25e6 \u03b4Au )(b) = Lg(A )(u),\nand therefore, Lg(A /R) = Lg(A ). Hence, A and A /R are language-equivalent. Next, let B = (B,Y, \u03b4B, \u03c3B, \u03c4B) be an arbitrary fuzzy recognizer, and let Z = X \u222a Y. By the language-\nequivalence of A and A /R and Theorem 8.1, for every u \u2208 Z\u2217 = (X \u222a Y)\u2217 we have that\nLg((A /R)\u2016B)(u) = Lg((A /R)Z)(u) \u2297 Lg(BZ)(u) = Lg((A /R))(\u03c0X(u)) \u2297 Lg(B)(\u03c0Y (u))\n= Lg(A )(\u03c0X (u)) \u2297 Lg(B)(\u03c0Y (u) = Lg(AZ)(u) \u2297 Lg(BZ)(u) = Lg(A \u2016B)(u),\nand hence, Lg((A /R)\u2016B) = Lg(A \u2016B). Similarly we prove that L((A /R)\u2016B) = L(A \u2016B), and by this it follows\nthat L((A /R)\u2016B) = L(A \u2016B).\nHence, we have that L(A \u2016B) = Lg(A \u2016B) if and only if L((A /R)\u2016B) = Lg((A /R)\u2016B), what means that A and A /R are conflict-equivalent.\nThe following example shows that the previous theorem do not hold for weakly right invariant fuzzy quasi-orders, i.e., a fuzzy recognizer and its afterset fuzzy recognizer w.r.t. a weakly right invariant fuzzy quasi-order are not necessary language-equivalent nor conflict-equivalent.\nExample 8.1. Let L be the Boolean structure and let A = (A,X, \u03b4A, \u03c3A, \u03c4A) be a fuzzy recognizer over L , where A = {1, 2, 3, 4},X = {x}, and \u03b4Ax , \u03c3 A and \u03c4A are given by\n\u03b4Ax =   1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0   , \u03c3A = [ 0 1 0 1 ] , \u03c4A =   0 1 0 1   .\nFor every u \u2208 X\u2217 we have that\nL(A )(u) = Lg(A )(u) =  1 if u = e or u = x 0 if u = xn, for some n > 2 ,\nand hence, the fuzzy recognizer A is nonblocking. A fuzzy relation R on A given by\nR =   1 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1   ,\nis a weakly right invariant fuzzy quasi-order on A (it is just the greatest one), and the related afterset fuzzy recognizer is A /R = (A/R,X, \u03b4A/R, \u03c3A/R, \u03c4A/R), where \u03b4A/Rx , \u03c3 A/R and \u03c4A/R are given by\n\u03b4A/Rx =   0 1 1 0 1 0 0 1 0   , \u03c3 A/R = [ 1 1 1 ] , \u03c4A/R =   1 0 1   .\nFor every u \u2208 X\u2217 we have that\nL(A /R)(u) =  1 if u = e or u = x 0 if u = xn, for some n > 2 ,\nand Lg(A /R)(u) = 1, for eachu \u2208 X \u2217. Hence, L(A /R) < Lg(A /R), andwehave that the fuzzy recognizerA /R is blocking. We also have that Lg(A ) , Lg(A /R), what means that A andA /R are not language-equivalent. Next, let B = (B,X, \u03b4B, \u03c3B, \u03c4B), where B = {b}, \u03b4B(b, x, b) = 1, for each x \u2208 X, and \u03c3B(b) = \u03c4B(b) = 1. Then A \u2016B = A \u00d7 B, and by (85) and (86) it follows that\nLg(A \u2016B) = Lg(A ) \u2297 Lg(B) = Lg(A ), L(A \u2016B) = L(A ) \u2297 L(B) = L(A ),\nLg((A /R)\u2016B) = Lg(A /R) \u2297 Lg(B) = Lg(A /R), L((A /R)\u2016B) = L(A /R) \u2297 L(B) = L(A /R).\nTherefore,\nL(A \u2016B) = L(A ) = Lg(A ) = Lg(A \u2016B), L((A /R)\u2016B) = L(A /R) < Lg(A /R) = Lg((A /R)\u2016B),\nwhat means that A \u2016B is nonblocking and (A /R)\u2016B is blocking, and hence, A and A /R are not conflictequivalent."}, {"heading": "9. Concluding remarks", "text": "In our recent paper we have established close relationships between the state reduction of a fuzzy recognizer and the resolution of a particular system of fuzzy relation equations. We have studied reductions bymeans of those solutions which are fuzzy equivalences. In this paperwe demonstrated that in some cases better reductions can be obtained using the solutions of this system that are fuzzy quasi-orders. Although by Theorem 3.4 we have proved that in the general case fuzzy quasi-orders and fuzzy equivalences are equally good in the state reduction, we have shown that in some cases fuzzyquasi-orders give better reductions. The meaning of state reductions by means of fuzzy quasi-orders and fuzzy equivalences is in their possible effectiveness, as opposed to the minimization which is not effective. By Theorem 3.5 we have shown that minimization of some fuzzy recognizers can not be realized as its state reduction by means of fuzzy quasi-orders or fuzzy equivalences.\nWe gave a procedure for computing the greatest right invariant fuzzy quasi-order on a fuzzy automaton or fuzzy recognizer, which works if the underlying structure of truth values is a locally finite, but not only in this case. We also gave procedures for computing the greatest right invariant crisp quasi-order and the greatest strongly right invariant fuzzy quasi-order. They work for fuzzy automata over any complete residuated lattice.However, although these proceduresare applicable to a larger class of fuzzy automata, we have proved that right invariant fuzzy quasi-orders give better reductions than right invariant crisp quasiorders and strongly right invariant fuzzy quasi-orders. We also have studied a more general type of fuzzy quasi-orders, weakly right and left invariant ones. These fuzzy quasi-orders give better reductions than right and left invariant ones, but are harder to compute. In fact, weakly right and left invariant fuzzy quasi-orders on a fuzzy recognizer are defined by means of two systems of fuzzy relation equations whose resolution include determinization of this fuzzy recognizer and its reverse fuzzy recognizer.\nFinally,we have shown that better results in the state reduction can be achieved ifwe alternate reductions by means of right and left invariant fuzzy quasi-orders, or weakly right and left invariant fuzzy quasiorders. Furthermore, we show that alternate reductions by means of fuzzy quasi-orders give better results\nthan those bymeans of fuzzy equivalences. It is worth noting that the presented state reductionmethods are based on the construction of the afterset fuzzy recognizerw.r.t. a fuzzy quasi-order, andwe have proved that such approach gives better results in alternate reductions than approach by Champarnaud and Coulon, Ilie, Navarro and Yu, and Ilie, Solis-Oba and Yu, whose state reductionmethods are based on the construction of the factor recognizer w.r.t. the natural equivalence of a quasi-order.\nAt the end of the paper we have demonstrated some applications of weakly left invariant fuzzy quasiorders in conflict analysis of fuzzy discrete event systems. Another interesting problem is application of state reductions by means of fuzzy quasi-orders in fault diagnosis of discrete event systems. Since this problem is very complex and deserves special attention, it will be discussed in a separate paper.\nSeveral questions remained unsolved, too. They include determining more precise conditions under which our iterative procedures for computing the greatest right and left invariant fuzzy quasi-orders terminate in a finite number of steps, finding alternative algorithms for computing the greatest right and left invariant fuzzy quasi-orders for use in caseswhere thementioned iterative procedures do not terminate in a finite number of steps, as well as finding even faster algorithms for computing such fuzzy quasi-orders, and general procedures to decide whether we have reached the smallest number of states in alternate reductions, and so forth. All these issues will be topics of our future research."}], "references": [{"title": "Fuzzy relational products as a tool for analysis and synthesis of the behaviour of complex natural and artificial systems", "author": ["W. Bandler", "L.J. Kohout"], "venue": "in: S.K. Wang, P.P. Chang (Eds.), Fuzzy Sets: Theory and Application to Policy Analysis and Information Systems, Plenum Press, New York", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1980}, {"title": "On quotient machines of a fuzzy automaton and the minimal machine", "author": ["N.C. Basak", "A. Gupta"], "venue": "Fuzzy Sets and Systems 125 ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Fuzzy Relational Systems: Foundations and Principles", "author": ["R. B\u011blohl\u00e1vek"], "venue": "Kluwer, New York", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2002}, {"title": "Fuzzy Equational Logic", "author": ["R. B\u011blohl\u00e1vek", "V. Vychodil"], "venue": "Springer, Berlin-Heidelberg", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "A similarity-based generalization of fuzzy orderings preserving the classical axioms", "author": ["U. Bodenhofer"], "venue": "Internat. J. Uncertain. Fuzziness Knowledge-based Systems 8 ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2000}, {"title": "A compendium of fuzzy weak orders: Representations and constructions", "author": ["U. Bodenhofer", "B. De Baets", "J. Fodor"], "venue": "Fuzzy Sets and Systems 158 ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2007}, {"title": "A formal study of linearity axioms for fuzzy orderings", "author": ["U. Bodenhofer", "F. Klawonn"], "venue": "Fuzzy Sets and Systems 145 ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2004}, {"title": "A Course in Universal Algebra", "author": ["S. Burris", "H.P. Sankappanavar"], "venue": "Springer-Verlag, New York", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1981}, {"title": "Finite nondeterministic automata: Simulation and minimality", "author": ["C.S. Calude", "E. Calude", "B. Khoussainov"], "venue": "Theoretical Computer Science 242 ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2000}, {"title": "Mergible states in large NFA", "author": ["C. C\u00e2mpeanu", "N. S\u00e2ntean", "S. Yu"], "venue": "Theoretical Computer Science 330 ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2005}, {"title": "Supervisory control of fuzzy discrete event systems", "author": ["Y.Z. Cao", "M.S. Ying"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics \u2013 Part B 35 ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}, {"title": "Observability and decentralized control of fuzzy discrete-event systems", "author": ["Y.Z. Cao", "M.S. Ying"], "venue": "IEEE Transactions Fuzzy Systems 14 ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2006}, {"title": "State-based control of fuzzy discrete-event systems", "author": ["Y.Z. Cao", "M.S. Ying", "G.Q. Chen"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics \u2013 Part B 37", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Introduction to Discrete Event Systems", "author": ["C.G. Cassandras", "S. Lafortune"], "venue": "Springer", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2008}, {"title": "Theoretical study and implementation of the canonical automaton", "author": ["J.-M. Champarnaud", "F. Coulon"], "venue": "Technical Report AIA 2003.03, LIFAR, Universit\u00e9 de Rouen", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2003}, {"title": "NFA reduction algorithms by means of regular inequalities", "author": ["J.-M. Champarnaud", "F. Coulon"], "venue": "in: Z. \u00c9sik, and Z. F\u00fcl\u00f6p (eds.), DLT 2003, Lecture Notes in Computer Science 2710 ", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}, {"title": "NFA reduction algorithms by means of regular inequalities", "author": ["J.-M. Champarnaud", "F. Coulon"], "venue": "Theoretical Computer Science 327 (2004) 241\u2013253 (erratum: Theoretical Computer Science 347 ", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2005}, {"title": "New finite automaton constructions based on canonical derivatives", "author": ["J.-M. Champarnaud", "D. Ziadi"], "venue": "in: S. Yu, A. Paun (eds.), CIAA 2000, Springer, Berlin, Lecture Notes in Computer Science 2088 ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2001}, {"title": "Computing the equation automaton of a regular expression in O (s2) space and time", "author": ["J.-M. Champarnaud", "D. Ziadi"], "venue": "in: A. Amir, G. Landau (eds.), CPM 2001, Springer, Berlin, Lecture Notes in Computer Science 2089 ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2001}, {"title": "Minimization algorithm of fuzzy finite automata", "author": ["W. Cheng", "Z. Mo"], "venue": "Fuzzy Sets and Systems 141 ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2004}, {"title": "Fuzzy equivalence relations and their equivalence classes", "author": ["M. \u0106iri\u0107", "J. Ignjatovi\u0107", "S. Bogdanovi\u0107"], "venue": "Fuzzy Sets and Systems 158 ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2007}, {"title": "Uniform fuzzy relations and fuzzymappings", "author": ["M. \u0106iri\u0107", "J. Ignjatovi\u0107", "S. Bogdanovi\u0107"], "venue": "Fuzzy Sets and Systems 160 ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2009}, {"title": "Factorization of fuzzy automata", "author": ["M. \u0106iri\u0107", "A. Stamenkovi\u0107", "J. Ignjatovi\u0107", "T. Petkovi\u0107"], "venue": "in: E. Csuhaj-Varju, and Z. \u00c9sik (eds.), FCT 2007, Lecture Notes in Computer Science 4639 ", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2007}, {"title": "Fuzzy relation equations and reduction of fuzzy automata", "author": ["M. \u0106iri\u0107", "A. Stamenkovi\u0107", "J. Ignjatovi\u0107", "T. Petkovi\u0107"], "venue": "Journal of Computer and System Sciences 76 ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "The cutting of compositions", "author": ["B. De Baets", "E. Kerre"], "venue": "Fuzzy Sets and Systems 62 ", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1994}, {"title": "Fuzzy modifiers based on fuzzy relations", "author": ["M. De Cock", "E.E. Kerre"], "venue": "Information Sciences 160 ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2004}, {"title": "An efficient algorithm for computing bisimulation equivalence", "author": ["A. Dovier", "C. Piazza", "A. Policriti"], "venue": "Theoretical Computer Science 311 ", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2004}, {"title": "Frombisimulation to simulation: coarsest partition problems", "author": ["R.Gentilini", "C. Piazza", "A. Policriti"], "venue": "Journal ofAutomatedReasoning", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2003}, {"title": "Commutative", "author": ["U. H\u00f6hle"], "venue": "residuated l-monoids, in: U. H\u00f6hle and E. P. Klement (Eds.), Non-Classical Logics and Their Applications to Fuzzy Subsets, Kluwer Academic Publishers, Boston, Dordrecht", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1995}, {"title": "Modeling and control of discrete-event dynamical systems: with Petri nets and other tools", "author": ["B. Hr\u00faz", "M.C. Zhou"], "venue": "Springer", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2007}, {"title": "Determinization of fuzzy automatawithmembership values in complete residuated lattices", "author": ["J. Ignjatovi\u0107", "M. \u0106iri\u0107", "S. Bogdanovi\u0107"], "venue": "Information Sciences 178 ", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2008}, {"title": "Fuzzy homomorphisms of algebras", "author": ["J. Ignjatovi\u0107", "M. \u0106iri\u0107", "S. Bogdanovi\u0107"], "venue": "Fuzzy Sets and Systems 160 ", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2009}, {"title": "Myhill-Nerode type theory for fuzzy languages and automata", "author": ["J. Ignjatovi\u0107", "M. \u0106iri\u0107", "S. Bogdanovi\u0107", "T. Petkovi\u0107"], "venue": "Fuzzy sets and Systems 161 ", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2010}, {"title": "Constructing NFAs by optimal use of positions in regular expressions", "author": ["L. Ilie", "S. Yu"], "venue": "in: A. Apostolico, M. Takeda (eds.), CPM 2002, Springer, Berlin, Lecture Notes in Computer Science 2373 ", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2002}, {"title": "Algorithms for computing small NFAs", "author": ["L. Ilie", "S. Yu"], "venue": "in: K. Diks et al. (eds): MFCS 2002, Lecture Notes in Computer Science 2420 ", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2002}, {"title": "Reducing NFAs by invariant equivalences", "author": ["L. Ilie", "S. Yu"], "venue": "Theoretical Computer Science 306 ", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2003}, {"title": "Follow automata", "author": ["L. Ilie", "S. Yu"], "venue": "Information and Computation 186 ", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2003}, {"title": "On NFA reductions", "author": ["L. Ilie", "G. Navarro", "S. Yu"], "venue": "in: J. Karhum\u00e4ki et al. (eds): Theory is Forever, Lecture Notes in Computer Science 3113 ", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2004}, {"title": "Reducing the size of NFAs by using equivalences and preorders", "author": ["L. Ilie", "R. Solis-Oba", "S. Yu"], "venue": "in: A. Apostolico, M. Crochemore, and K. Park (eds): CPM 2005, Lecture Notes in Computer Science 3537 ", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2005}, {"title": "Minimal NFA problems are hard", "author": ["T. Jiang", "B. Ravikumar"], "venue": "SIAM J. Comput. 22 (6) ", "citeRegEx": "41", "shortCiteRegEx": null, "year": 1993}, {"title": "On the state minimization of nondeterministic finite automata", "author": ["T. Kameda", "P. Weiner"], "venue": "IEEE Trans. Computers C-19(7) ", "citeRegEx": "42", "shortCiteRegEx": null, "year": 1970}, {"title": "CCS expressions", "author": ["P.C. Kannellakis", "S.A. Smolka"], "venue": "finite state processes, and three problems of equivalence, Information and Computation 86 ", "citeRegEx": "43", "shortCiteRegEx": null, "year": 1990}, {"title": "Diagnosability of fuzzy discrete event systems", "author": ["E. Kilic"], "venue": "Information Sciences 178 ", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2008}, {"title": "Fuzzy Sets and Fuzzy Logic", "author": ["G. Klir", "B. Yuan"], "venue": "Prentice-Hall PTR", "citeRegEx": "45", "shortCiteRegEx": null, "year": 1995}, {"title": "Minimization of states in automata theory based on finite lattice-ordered monoids", "author": ["H. Lei", "Y.M. Li"], "venue": "Information Sciences 177 ", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2007}, {"title": "Fuzzy finite automata and fuzzy regular expressions with membership values in lattice ordered monoids", "author": ["Y.M. Li", "W. Pedrycz"], "venue": "Fuzzy Sets and Systems 156 ", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2005}, {"title": "Fuzzy discrete event systems and their observability", "author": ["F. Lin", "H. Ying"], "venue": "in: Proceedings of the 2001 IFSA/NAFIP Conference", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2001}, {"title": "Modeling and control of fuzzy discrete event systems", "author": ["F. Lin", "H. Ying"], "venue": "IEEE Transactions on Man, Systems and Cybernetics \u2013 Part B 32 ", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2002}, {"title": "Decision making in fuzzy discrete event systems", "author": ["F. Lin", "H. Ying", "R.D. MacArthur", "J.A. Cohn", "D. Barth-Jones", "L.R. Crane"], "venue": "Information Sciences 177 ", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2007}, {"title": "The relationship of controllability between classical and fuzzy discrete-event systems", "author": ["J.P. Liu", "Y.M. Li"], "venue": "Information Sciences 178 ", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2008}, {"title": "Forward and backward simulations: Part I", "author": ["N. Lynch", "F. Vaandrager"], "venue": "Untimed systems, Information andComputation 121 ", "citeRegEx": "52", "shortCiteRegEx": null, "year": 1995}, {"title": "Minimization of fuzzy finite automata", "author": ["D.S. Malik", "J.N. Mordeson", "M.K. Sen"], "venue": "Information Sciences 113 ", "citeRegEx": "53", "shortCiteRegEx": null, "year": 1999}, {"title": "Fair testing revisited: A process-algebraic characterisation of conflicts", "author": ["R. Malik", "D. Streader", "S. Reeves"], "venue": "in: F. Wang (ed.), ATVA 2004, Lecture Notes in Computer Science 3299 ", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2004}, {"title": "A new algorithm of the state-minimization for the nondeterministic finite automata", "author": ["B.F. Melnikov"], "venue": "Korean J. Comput. Appl. Math. 6(2) ", "citeRegEx": "55", "shortCiteRegEx": null, "year": 1999}, {"title": "Once more about the state-minimization of the nondeterministic finite automata", "author": ["B.F. Melnikov"], "venue": "Korean J. Comput. Appl. Math. 7(3) ", "citeRegEx": "56", "shortCiteRegEx": null, "year": 2000}, {"title": "A calculus of communicating systems", "author": ["R. Milner"], "venue": "G. Goos and J. Hartmanis (eds.), Lecture Notes in Computer Science 92 ", "citeRegEx": "57", "shortCiteRegEx": null, "year": 1980}, {"title": "Communication and Concurrency", "author": ["R. Milner"], "venue": "Prentice-Hall International", "citeRegEx": "58", "shortCiteRegEx": null, "year": 1989}, {"title": "Communicating and Mobile Systems: the \u03c0-Calculus", "author": ["R. Milner"], "venue": "Cambridge University Press, Cambridge", "citeRegEx": "59", "shortCiteRegEx": null, "year": 1999}, {"title": "Fuzzy Automata and Languages: Theory and Applications", "author": ["J.N. Mordeson", "D.S. Malik"], "venue": "Chapman & Hall/CRC, Boca Raton, London", "citeRegEx": "60", "shortCiteRegEx": null, "year": 2002}, {"title": "Three partition refinement algorithms", "author": ["R. Paige", "R.E. Tarjan"], "venue": "SIAM J. Comput. 16(6) ", "citeRegEx": "61", "shortCiteRegEx": null, "year": 1987}, {"title": "Concurrency and automata on infinite sequences", "author": ["D. Park"], "venue": "in: P. Deussen (ed.), Proc. 5th GI Conf., Karlsruhe, Germany, Springer- Verlag, Lecture Notes in Computer Science 104 ", "citeRegEx": "62", "shortCiteRegEx": null, "year": 1981}, {"title": "Fuzzy function as an approximate solution to a system of fuzzy relation equations", "author": ["I. Perfilieva"], "venue": "Fuzzy Sets and Systems 147 ", "citeRegEx": "63", "shortCiteRegEx": null, "year": 2004}, {"title": "Solvability and approximate solvability of fuzzy relation equations", "author": ["I. Perfilieva", "S. Gottwald"], "venue": "Internat. J. Gen. Systems 32 ", "citeRegEx": "64", "shortCiteRegEx": null, "year": 2003}, {"title": "System of fuzzy relation equations as a continuous model of IF-THEN rules", "author": ["I. Perfilieva", "V. Nov\u00e1k"], "venue": "Information Sciences 177 ", "citeRegEx": "65", "shortCiteRegEx": null, "year": 2007}, {"title": "Congruences and homomorphisms of fuzzy automata", "author": ["T. Petkovi\u0107"], "venue": "Fuzzy Sets and Systems 157 ", "citeRegEx": "66", "shortCiteRegEx": null, "year": 2006}, {"title": "Automata theory based on completed residuated lattice-valued logic (I)", "author": ["D.W. Qiu"], "venue": "Science in China, Ser. F, 44 (6) ", "citeRegEx": "67", "shortCiteRegEx": null, "year": 2001}, {"title": "Automata theory based on completed residuated lattice-valued logic (II)", "author": ["D.W. Qiu"], "venue": "Science in China, Ser. F, 45 (6) ", "citeRegEx": "68", "shortCiteRegEx": null, "year": 2002}, {"title": "Supervisory control of fuzzy discrete event systems: a formal approach", "author": ["D. Qiu"], "venue": "IEEE Transactions on Systems, Man and Cybernetics \u2013 Part B 35 ", "citeRegEx": "69", "shortCiteRegEx": null, "year": 2005}, {"title": "Pumping lemma in automata theory based on complete residuated lattice-valued logic: A note", "author": ["D.W. Qiu"], "venue": "Fuzzy Sets and Systems 157 ", "citeRegEx": "70", "shortCiteRegEx": null, "year": 2006}, {"title": "Fuzzy discrete-event systems under fuzzy observability and a test algorithm", "author": ["D.W. Qiu", "F.C. Liu"], "venue": "IEEE Transactions on Fuzzy Systems 17 (3) ", "citeRegEx": "71", "shortCiteRegEx": null, "year": 2009}, {"title": "Generalizing the PaigeTarjan algorithm by abstract interpretation", "author": ["F. Ranzato", "F. Tapparo"], "venue": "Information and Computation 206 ", "citeRegEx": "72", "shortCiteRegEx": null, "year": 2008}, {"title": "Towards a unified view of bisimulation: a comparative study", "author": ["M. Roggenbach", "M. Majster-Cederbaum"], "venue": "Theoretical Computer Science 238 ", "citeRegEx": "73", "shortCiteRegEx": null, "year": 2000}, {"title": "Resolution of composite fuzzy relation equations", "author": ["E. Sanchez"], "venue": "Information and Control 30 ", "citeRegEx": "74", "shortCiteRegEx": null, "year": 1976}, {"title": "On the origins of bisimulation", "author": ["D. Sangiorgi"], "venue": "coinduction, and fixed points, Technical Report UBLCS-2007-24, Department of Computer Science, University of Bologna", "citeRegEx": "75", "shortCiteRegEx": null, "year": 2007}, {"title": "Minimization of nondeterministic finite automata", "author": ["H. Sengoku"], "venue": "Master thesis, Kyoto University", "citeRegEx": "76", "shortCiteRegEx": null, "year": 1992}, {"title": "Regular languages", "author": ["S. Yu"], "venue": "in: Handbook of Formal Languages (G. Rozenberg, A. Salomaa, eds.), Vol 1, Springer-Verlag, Berlin - Heidelberg", "citeRegEx": "77", "shortCiteRegEx": null, "year": 1997}, {"title": "Toward a generalized theory of uncertainty (GTU) \u2013 an outline", "author": ["L.A. Zadeh"], "venue": "Information Sciences 172 ", "citeRegEx": "78", "shortCiteRegEx": null, "year": 2005}, {"title": "Is there a need for fuzzy logic", "author": ["L.A. Zadeh"], "venue": "Information Sciences 178 ", "citeRegEx": "79", "shortCiteRegEx": null, "year": 2008}], "referenceMentions": [{"referenceID": 39, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 203, "endOffset": 211}, {"referenceID": 75, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 203, "endOffset": 211}, {"referenceID": 14, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 242, "endOffset": 262}, {"referenceID": 40, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 242, "endOffset": 262}, {"referenceID": 53, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 242, "endOffset": 262}, {"referenceID": 54, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 242, "endOffset": 262}, {"referenceID": 74, "context": "Unlike deterministic finite automata (DFA), whose efficient minimization is possible, the state minimization problem for non-deterministic finite automata (NFA) is computationally hard (PSPACE-complete, [41, 77]) and known algorithms like in [16, 42, 55, 56, 76] cannot be used in practice.", "startOffset": 242, "endOffset": 262}, {"referenceID": 34, "context": "That led to the concept of a right invariant equivalence on an NFA, studied by Ilie andYu [36, 37], who showed that they can be used to construct smallNFAs from regular expressions.", "startOffset": 90, "endOffset": 98}, {"referenceID": 35, "context": "That led to the concept of a right invariant equivalence on an NFA, studied by Ilie andYu [36, 37], who showed that they can be used to construct smallNFAs from regular expressions.", "startOffset": 90, "endOffset": 98}, {"referenceID": 17, "context": "[19, 20, 35, 37, 38]).", "startOffset": 0, "endOffset": 20}, {"referenceID": 18, "context": "[19, 20, 35, 37, 38]).", "startOffset": 0, "endOffset": 20}, {"referenceID": 33, "context": "[19, 20, 35, 37, 38]).", "startOffset": 0, "endOffset": 20}, {"referenceID": 35, "context": "[19, 20, 35, 37, 38]).", "startOffset": 0, "endOffset": 20}, {"referenceID": 36, "context": "[19, 20, 35, 37, 38]).", "startOffset": 0, "endOffset": 20}, {"referenceID": 8, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 9, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 16, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 35, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 37, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 38, "context": "Right invariant equivalenceshave beenalso studied in [10, 11, 18, 37, 39, 40].", "startOffset": 53, "endOffset": 77}, {"referenceID": 50, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 55, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 56, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 57, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 60, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 71, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 73, "context": "[52, 57, 58, 59, 62, 73, 75]).", "startOffset": 0, "endOffset": 28}, {"referenceID": 26, "context": "The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).", "startOffset": 156, "endOffset": 176}, {"referenceID": 27, "context": "The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).", "startOffset": 156, "endOffset": 176}, {"referenceID": 41, "context": "The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).", "startOffset": 156, "endOffset": 176}, {"referenceID": 70, "context": "The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).", "startOffset": 156, "endOffset": 176}, {"referenceID": 59, "context": "The faster algorithms are based on the crucial equivalence between the greatest bisimulation equivalence and the relational coarsest partition problem (see [28, 29, 43, 72, 61]).", "startOffset": 156, "endOffset": 176}, {"referenceID": 34, "context": "The first one was also proposed by Ilie and Yu in [36, 37, 39, 40] who introduced the dual concept of a left invariant equivalence on an NFA and showed that even smaller NFAs can be obtained alternating reductions by means of right invariant and left invariant equivalences.", "startOffset": 50, "endOffset": 66}, {"referenceID": 35, "context": "The first one was also proposed by Ilie and Yu in [36, 37, 39, 40] who introduced the dual concept of a left invariant equivalence on an NFA and showed that even smaller NFAs can be obtained alternating reductions by means of right invariant and left invariant equivalences.", "startOffset": 50, "endOffset": 66}, {"referenceID": 37, "context": "The first one was also proposed by Ilie and Yu in [36, 37, 39, 40] who introduced the dual concept of a left invariant equivalence on an NFA and showed that even smaller NFAs can be obtained alternating reductions by means of right invariant and left invariant equivalences.", "startOffset": 50, "endOffset": 66}, {"referenceID": 38, "context": "The first one was also proposed by Ilie and Yu in [36, 37, 39, 40] who introduced the dual concept of a left invariant equivalence on an NFA and showed that even smaller NFAs can be obtained alternating reductions by means of right invariant and left invariant equivalences.", "startOffset": 50, "endOffset": 66}, {"referenceID": 15, "context": "On the other hand, Champarnaud andCoulon in [17, 18] proposed use of quasi-orders (preorders) instead of equivalences and showed that the method based on quasi-orders gives better reductions than the method based on equivalences.", "startOffset": 44, "endOffset": 52}, {"referenceID": 16, "context": "On the other hand, Champarnaud andCoulon in [17, 18] proposed use of quasi-orders (preorders) instead of equivalences and showed that the method based on quasi-orders gives better reductions than the method based on equivalences.", "startOffset": 44, "endOffset": 52}, {"referenceID": 37, "context": "They gave an algorithm for computing the greatest right invariant and left invariant quasi-orders on an NFA working in a polynomial time, which was later improved in [39, 40].", "startOffset": 166, "endOffset": 174}, {"referenceID": 38, "context": "They gave an algorithm for computing the greatest right invariant and left invariant quasi-orders on an NFA working in a polynomial time, which was later improved in [39, 40].", "startOffset": 166, "endOffset": 174}, {"referenceID": 1, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 19, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 44, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 51, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 58, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 64, "context": "Reduction of the number of states of fuzzy automata was studied in [2, 21, 46, 53, 60, 66], and the algorithms given there were also based on the idea of computing and merging indistinguishable states.", "startOffset": 67, "endOffset": 90}, {"referenceID": 22, "context": "In [24, 25] we have shown that in the fuzzy case the indistinguishability can be modelled by fuzzy equivalences, and here we show that this can be done by fuzzy quasi-orders.", "startOffset": 3, "endOffset": 11}, {"referenceID": 23, "context": "In [24, 25] we have shown that in the fuzzy case the indistinguishability can be modelled by fuzzy equivalences, and here we show that this can be done by fuzzy quasi-orders.", "startOffset": 3, "endOffset": 11}, {"referenceID": 1, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 19, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 44, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 51, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 58, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 64, "context": "[2, 21, 46, 53, 60, 66]) only reductions by means of crisp equivalences have been investigated.", "startOffset": 0, "endOffset": 23}, {"referenceID": 22, "context": "In this paper, as well as [24, 25], show that better reductions can be achieved employing fuzzy relations, namely, fuzzy equivalences and fuzzy quasi-orders.", "startOffset": 26, "endOffset": 34}, {"referenceID": 23, "context": "In this paper, as well as [24, 25], show that better reductions can be achieved employing fuzzy relations, namely, fuzzy equivalences and fuzzy quasi-orders.", "startOffset": 26, "endOffset": 34}, {"referenceID": 22, "context": "In contrast to [24, 25], wherewe have started froma fuzzy equivalence on a set of statesA of a fuzzy automaton A , here we start from an arbitrary fuzzy quasi-order R on A, we form the set A/R of all aftersets of R, and we turn the fuzzy transition function on A into a related fuzzy transition function on A/R.", "startOffset": 15, "endOffset": 23}, {"referenceID": 23, "context": "In contrast to [24, 25], wherewe have started froma fuzzy equivalence on a set of statesA of a fuzzy automaton A , here we start from an arbitrary fuzzy quasi-order R on A, we form the set A/R of all aftersets of R, and we turn the fuzzy transition function on A into a related fuzzy transition function on A/R.", "startOffset": 15, "endOffset": 23}, {"referenceID": 15, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 227, "endOffset": 243}, {"referenceID": 16, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 227, "endOffset": 243}, {"referenceID": 37, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 227, "endOffset": 243}, {"referenceID": 38, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 227, "endOffset": 243}, {"referenceID": 22, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 305, "endOffset": 313}, {"referenceID": 23, "context": "In Section 4 we study two instances of the general system whose solutions, called the right and left invariant fuzzy quasi-orders, are common generalization of right and left invariant quasi-orders and equivalences, studied in [17, 18, 39, 40], and right and left invariant fuzzy equivalences, studied in [24, 25].", "startOffset": 305, "endOffset": 313}, {"referenceID": 22, "context": "Using a methodology similar to the one developed in [24, 25] for fuzzy equivalences, we give a characterization of right invariant fuzzy quasi-orders on a fuzzy automaton A , and we prove that they form a complete lattice 2", "startOffset": 52, "endOffset": 60}, {"referenceID": 23, "context": "Using a methodology similar to the one developed in [24, 25] for fuzzy equivalences, we give a characterization of right invariant fuzzy quasi-orders on a fuzzy automaton A , and we prove that they form a complete lattice 2", "startOffset": 52, "endOffset": 60}, {"referenceID": 22, "context": "Although the results, as well as the methodology, are similar to those obtained in [24, 25] for fuzzy equivalences, there are some important differences which justify our study of state reductions by means of fuzzy quasi-orders.", "startOffset": 83, "endOffset": 91}, {"referenceID": 23, "context": "Although the results, as well as the methodology, are similar to those obtained in [24, 25] for fuzzy equivalences, there are some important differences which justify our study of state reductions by means of fuzzy quasi-orders.", "startOffset": 83, "endOffset": 91}, {"referenceID": 22, "context": "3, can terminate in a finite number of steps even if a similar iteration procedure for computing the greatest right invariant fuzzy equivalence on A , developed in [24, 25], does not terminate in a finite number of steps (Example 4.", "startOffset": 164, "endOffset": 172}, {"referenceID": 23, "context": "3, can terminate in a finite number of steps even if a similar iteration procedure for computing the greatest right invariant fuzzy equivalence on A , developed in [24, 25], does not terminate in a finite number of steps (Example 4.", "startOffset": 164, "endOffset": 172}, {"referenceID": 30, "context": "This is an immediate consequence of the fact that the procedure for computing the greatestweakly right invariant fuzzyquasi-order onA includes the procedure for determinization of the reverse fuzzy recognizer of A developed in [32], whereas the procedure for computing the greatest weakly left invariant one includes determinization of A .", "startOffset": 227, "endOffset": 231}, {"referenceID": 15, "context": "Let us note that Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] studied the state reduction of non-deterministic recognizers by means of right and left invariant quasiorders.", "startOffset": 40, "endOffset": 48}, {"referenceID": 16, "context": "Let us note that Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] studied the state reduction of non-deterministic recognizers by means of right and left invariant quasiorders.", "startOffset": 40, "endOffset": 48}, {"referenceID": 37, "context": "Let us note that Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] studied the state reduction of non-deterministic recognizers by means of right and left invariant quasiorders.", "startOffset": 71, "endOffset": 75}, {"referenceID": 38, "context": "Let us note that Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] studied the state reduction of non-deterministic recognizers by means of right and left invariant quasiorders.", "startOffset": 104, "endOffset": 108}, {"referenceID": 28, "context": "integral, commutative, residuated l-monoids [30].", "startOffset": 44, "endOffset": 48}, {"referenceID": 2, "context": "For other properties of complete residuated lattices one can refer to [3, 4].", "startOffset": 70, "endOffset": 76}, {"referenceID": 3, "context": "For other properties of complete residuated lattices one can refer to [3, 4].", "startOffset": 70, "endOffset": 76}, {"referenceID": 0, "context": "The most studied and applied structures of truth values, defined on the real unit interval [0, 1] with x \u2227 y = min(x, y) and x \u2228 y = max(x, y), are the \u0141ukasiewicz structure (x \u2297 y = max(x + y \u2212 1, 0), x \u2192 y = min(1 \u2212 x + y, 1)), the Goguen (product) structure (x \u2297 y = x \u00b7 y, x \u2192 y = 1 if x 6 y and = y/x otherwise) and the G\u00f6del structure (x \u2297 y = min(x, y), x \u2192 y = 1 if x 6 y and = y otherwise).", "startOffset": 91, "endOffset": 97}, {"referenceID": 0, "context": "More generally, an algebra ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1) is a complete residuated lattice if and only if \u2297 is a left-continuous t-norm and the residuum is defined by x \u2192 y = \u2228 {u \u2208 [0, 1] | u \u2297 x 6 y}.", "startOffset": 28, "endOffset": 34}, {"referenceID": 0, "context": "More generally, an algebra ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1) is a complete residuated lattice if and only if \u2297 is a left-continuous t-norm and the residuum is defined by x \u2192 y = \u2228 {u \u2208 [0, 1] | u \u2297 x 6 y}.", "startOffset": 174, "endOffset": 180}, {"referenceID": 2, "context": "[3, 22]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 20, "context": "[3, 22]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 15, "context": "In some sources quasi-orders and fuzzy quasi-orders are called preorders and fuzzy preorders (for example, see [17, 18, 39, 40]).", "startOffset": 111, "endOffset": 127}, {"referenceID": 16, "context": "In some sources quasi-orders and fuzzy quasi-orders are called preorders and fuzzy preorders (for example, see [17, 18, 39, 40]).", "startOffset": 111, "endOffset": 127}, {"referenceID": 37, "context": "In some sources quasi-orders and fuzzy quasi-orders are called preorders and fuzzy preorders (for example, see [17, 18, 39, 40]).", "startOffset": 111, "endOffset": 127}, {"referenceID": 38, "context": "In some sources quasi-orders and fuzzy quasi-orders are called preorders and fuzzy preorders (for example, see [17, 18, 39, 40]).", "startOffset": 111, "endOffset": 127}, {"referenceID": 4, "context": "It is worth noting that different concepts of a fuzzy order have been discussed in literature concerning fuzzy relations (for example, see [5, 6, 7, 8] and other sources cited there).", "startOffset": 139, "endOffset": 151}, {"referenceID": 5, "context": "It is worth noting that different concepts of a fuzzy order have been discussed in literature concerning fuzzy relations (for example, see [5, 6, 7, 8] and other sources cited there).", "startOffset": 139, "endOffset": 151}, {"referenceID": 6, "context": "It is worth noting that different concepts of a fuzzy order have been discussed in literature concerning fuzzy relations (for example, see [5, 6, 7, 8] and other sources cited there).", "startOffset": 139, "endOffset": 151}, {"referenceID": 4, "context": "In particular, fuzzy orders defined here differ from fuzzy orderings defined in [5, 6, 8].", "startOffset": 80, "endOffset": 89}, {"referenceID": 6, "context": "In particular, fuzzy orders defined here differ from fuzzy orderings defined in [5, 6, 8].", "startOffset": 80, "endOffset": 89}, {"referenceID": 2, "context": "For more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.", "startOffset": 76, "endOffset": 86}, {"referenceID": 3, "context": "For more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.", "startOffset": 76, "endOffset": 86}, {"referenceID": 43, "context": "For more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.", "startOffset": 76, "endOffset": 86}, {"referenceID": 76, "context": "For more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.", "startOffset": 116, "endOffset": 124}, {"referenceID": 77, "context": "For more information about fuzzy sets and fuzzy logic we refer to the books [3, 4, 45], as well as to recent papers [78, 79], which review fuzzy logic and uncertainty in a much broader perspective.", "startOffset": 116, "endOffset": 124}, {"referenceID": 45, "context": "1 [47] (see also [67, 68, 70]), we have that", "startOffset": 2, "endOffset": 6}, {"referenceID": 65, "context": "1 [47] (see also [67, 68, 70]), we have that", "startOffset": 17, "endOffset": 29}, {"referenceID": 66, "context": "1 [47] (see also [67, 68, 70]), we have that", "startOffset": 17, "endOffset": 29}, {"referenceID": 68, "context": "1 [47] (see also [67, 68, 70]), we have that", "startOffset": 17, "endOffset": 29}, {"referenceID": 2, "context": "For undefined notions and notation one can refer to [3, 4, 60].", "startOffset": 52, "endOffset": 62}, {"referenceID": 3, "context": "For undefined notions and notation one can refer to [3, 4, 60].", "startOffset": 52, "endOffset": 62}, {"referenceID": 58, "context": "For undefined notions and notation one can refer to [3, 4, 60].", "startOffset": 52, "endOffset": 62}, {"referenceID": 0, "context": "For each a \u2208 A, the R-afterset of a is the fuzzy set Ra \u2208 L A defined by Ra(b) = R(a, b), for any b \u2208 A, while the R-foreset of a is the fuzzy set R a \u2208 L defined by R(b) = R(b, a), for any b \u2208 A (see [1, 26, 27]).", "startOffset": 201, "endOffset": 212}, {"referenceID": 24, "context": "For each a \u2208 A, the R-afterset of a is the fuzzy set Ra \u2208 L A defined by Ra(b) = R(a, b), for any b \u2208 A, while the R-foreset of a is the fuzzy set R a \u2208 L defined by R(b) = R(b, a), for any b \u2208 A (see [1, 26, 27]).", "startOffset": 201, "endOffset": 212}, {"referenceID": 25, "context": "For each a \u2208 A, the R-afterset of a is the fuzzy set Ra \u2208 L A defined by Ra(b) = R(a, b), for any b \u2208 A, while the R-foreset of a is the fuzzy set R a \u2208 L defined by R(b) = R(b, a), for any b \u2208 A (see [1, 26, 27]).", "startOffset": 201, "endOffset": 212}, {"referenceID": 7, "context": "[9], \u00a72.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x, y}, and \u03b4x , \u03b4 A y , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 1 1 1 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 251, "endOffset": 260}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x, y}, and \u03b4x , \u03b4 A y , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 1 1 1 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 251, "endOffset": 260}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x, y}, and \u03b4x , \u03b4 A y , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 1 1 1 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 251, "endOffset": 260}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x}, and \u03b4x , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 194, "endOffset": 203}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x}, and \u03b4x , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 194, "endOffset": 203}, {"referenceID": 0, "context": "LetL be the Boolean structure, letA = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer overL , where A = {1, 2, 3}, X = {x}, and \u03b4x , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 194, "endOffset": 203}, {"referenceID": 0, "context": "\u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 = [ 0 1 0 0 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 67, "endOffset": 78}, {"referenceID": 0, "context": "\u03b4x = [ 0 1 0 0 ] , \u03c3 = [ 1 0 ] , \u03c4 = [ 0 1 ] ,", "startOffset": 5, "endOffset": 16}, {"referenceID": 0, "context": "\u03b4x = [ 0 1 0 0 ] , \u03c3 = [ 1 0 ] , \u03c4 = [ 0 1 ] ,", "startOffset": 23, "endOffset": 30}, {"referenceID": 0, "context": "\u03b4x = [ 0 1 0 0 ] , \u03c3 = [ 1 0 ] , \u03c4 = [ 0 1 ] ,", "startOffset": 37, "endOffset": 44}, {"referenceID": 22, "context": "As in [24, 25], where similar questions concerning fuzzy equivalences have been considered, here we study the following two instances of the general system.", "startOffset": 6, "endOffset": 14}, {"referenceID": 23, "context": "As in [24, 25], where similar questions concerning fuzzy equivalences have been considered, here we study the following two instances of the general system.", "startOffset": 6, "endOffset": 14}, {"referenceID": 21, "context": "It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp.", "startOffset": 22, "endOffset": 42}, {"referenceID": 61, "context": "It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp.", "startOffset": 22, "endOffset": 42}, {"referenceID": 62, "context": "It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp.", "startOffset": 22, "endOffset": 42}, {"referenceID": 63, "context": "It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp.", "startOffset": 22, "endOffset": 42}, {"referenceID": 72, "context": "It is well-known (see [23, 63, 64, 65, 74]) that solutions to (45) (resp.", "startOffset": 22, "endOffset": 42}, {"referenceID": 22, "context": "Let us note that fuzzyequivalences satisfying (42) and (43) have been studied in [24, 25].", "startOffset": 81, "endOffset": 89}, {"referenceID": 23, "context": "Let us note that fuzzyequivalences satisfying (42) and (43) have been studied in [24, 25].", "startOffset": 81, "endOffset": 89}, {"referenceID": 15, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 133, "endOffset": 141}, {"referenceID": 16, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 133, "endOffset": 141}, {"referenceID": 37, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 164, "endOffset": 168}, {"referenceID": 38, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 197, "endOffset": 201}, {"referenceID": 34, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 212, "endOffset": 220}, {"referenceID": 35, "context": "Right and left invariant quasi-orders have been used for the state reduction of non-deterministic automata by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 212, "endOffset": 220}, {"referenceID": 0, "context": "R = [ 1 1 0 1 ] .", "startOffset": 4, "endOffset": 15}, {"referenceID": 0, "context": "R = [ 1 1 0 1 ] .", "startOffset": 4, "endOffset": 15}, {"referenceID": 0, "context": "R = [ 1 1 0 1 ] .", "startOffset": 4, "endOffset": 15}, {"referenceID": 22, "context": "Note also that for a fuzzy automaton A = (A,X, \u03b4) over a complete residuated lattice L , in [24, 25] we gave a procedure for computing the greatest right invariant fuzzy equivalence E contained in a given fuzzy equivalence E on A.", "startOffset": 92, "endOffset": 100}, {"referenceID": 23, "context": "Note also that for a fuzzy automaton A = (A,X, \u03b4) over a complete residuated lattice L , in [24, 25] we gave a procedure for computing the greatest right invariant fuzzy equivalence E contained in a given fuzzy equivalence E on A.", "startOffset": 92, "endOffset": 100}, {"referenceID": 22, "context": "It was proved in [24, 25] that if L is locally finite, then this sequence is necessary finite and E equals the least element of this sequence.", "startOffset": 17, "endOffset": 25}, {"referenceID": 23, "context": "It was proved in [24, 25] that if L is locally finite, then this sequence is necessary finite and E equals the least element of this sequence.", "startOffset": 17, "endOffset": 25}, {"referenceID": 22, "context": "Reduction of fuzzy automata by means of right and left invariant fuzzy equivalences has been studied in [24, 25].", "startOffset": 104, "endOffset": 112}, {"referenceID": 23, "context": "Reduction of fuzzy automata by means of right and left invariant fuzzy equivalences has been studied in [24, 25].", "startOffset": 104, "endOffset": 112}, {"referenceID": 0, "context": "Let us note that if L = ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1),where [0, 1] is the real unit interval and \u2297 is a left-continuous t-norm on [0, 1], then (53) follows immediately by linearity of L , and L satisfies (54) if and only if \u2297 is a continuous t-norm, i.", "startOffset": 25, "endOffset": 31}, {"referenceID": 0, "context": "Let us note that if L = ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1),where [0, 1] is the real unit interval and \u2297 is a left-continuous t-norm on [0, 1], then (53) follows immediately by linearity of L , and L satisfies (54) if and only if \u2297 is a continuous t-norm, i.", "startOffset": 53, "endOffset": 59}, {"referenceID": 0, "context": "Let us note that if L = ([0, 1],\u2227,\u2228,\u2297,\u2192, 0, 1),where [0, 1] is the real unit interval and \u2297 is a left-continuous t-norm on [0, 1], then (53) follows immediately by linearity of L , and L satisfies (54) if and only if \u2297 is a continuous t-norm, i.", "startOffset": 123, "endOffset": 129}, {"referenceID": 2, "context": "[3, 4]).", "startOffset": 0, "endOffset": 6}, {"referenceID": 3, "context": "[3, 4]).", "startOffset": 0, "endOffset": 6}, {"referenceID": 23, "context": "It was proved in [25] that if (53) holds, then for all non-increasing sequences {xk}k\u2208N, {yk}k\u2208N \u2286 L we have \u2227", "startOffset": 17, "endOffset": 21}, {"referenceID": 30, "context": "Fuzzy sets \u03c3u have been already used in [32], and they played a key role in determinization of fuzzy automata.", "startOffset": 40, "endOffset": 44}, {"referenceID": 16, "context": "Following terminology used in [18] for non-deterministic automata, we call \u03c3a the left fuzzy language of a, and \u03c4 A a the right fuzzy language of a.", "startOffset": 30, "endOffset": 34}, {"referenceID": 30, "context": "Left fuzzy languages have been already studied in [32, 34].", "startOffset": 50, "endOffset": 58}, {"referenceID": 32, "context": "Left fuzzy languages have been already studied in [32, 34].", "startOffset": 50, "endOffset": 58}, {"referenceID": 72, "context": "According to results from [74] (see also [63, 64, 65]), R is the greatest solution to (68), and it is easy to check that solutions to (68) in Q(A) form an ideal of Q(A), and thus, they form a principal ideal of Q(A).", "startOffset": 26, "endOffset": 30}, {"referenceID": 61, "context": "According to results from [74] (see also [63, 64, 65]), R is the greatest solution to (68), and it is easy to check that solutions to (68) in Q(A) form an ideal of Q(A), and thus, they form a principal ideal of Q(A).", "startOffset": 41, "endOffset": 53}, {"referenceID": 62, "context": "According to results from [74] (see also [63, 64, 65]), R is the greatest solution to (68), and it is easy to check that solutions to (68) in Q(A) form an ideal of Q(A), and thus, they form a principal ideal of Q(A).", "startOffset": 41, "endOffset": 53}, {"referenceID": 63, "context": "According to results from [74] (see also [63, 64, 65]), R is the greatest solution to (68), and it is easy to check that solutions to (68) in Q(A) form an ideal of Q(A), and thus, they form a principal ideal of Q(A).", "startOffset": 41, "endOffset": 53}, {"referenceID": 30, "context": "Nerode\u2019s fuzzy right congruences and Myhill\u2019s fuzzy congruences on free monoids associated with fuzzy automata have been studied in [32, 34].", "startOffset": 132, "endOffset": 140}, {"referenceID": 32, "context": "Nerode\u2019s fuzzy right congruences and Myhill\u2019s fuzzy congruences on free monoids associated with fuzzy automata have been studied in [32, 34].", "startOffset": 132, "endOffset": 140}, {"referenceID": 0, "context": "\u03b42 x = [ 1 0 1 0 ] , \u03c42 = [ 0 1 ] ,", "startOffset": 7, "endOffset": 18}, {"referenceID": 0, "context": "\u03b42 x = [ 1 0 1 0 ] , \u03c42 = [ 0 1 ] ,", "startOffset": 7, "endOffset": 18}, {"referenceID": 0, "context": "\u03b42 x = [ 1 0 1 0 ] , \u03c42 = [ 0 1 ] ,", "startOffset": 26, "endOffset": 33}, {"referenceID": 30, "context": "of the reverse fuzzy recognizer of A , whereas computing \u03c3u , for all u \u2208 X , is the determinization of A using a procedure developed in [32], called the accessible fuzzy subset construction.", "startOffset": 137, "endOffset": 141}, {"referenceID": 30, "context": "Conditions under which these sets must be finite have been determined in [32, 34].", "startOffset": 73, "endOffset": 81}, {"referenceID": 32, "context": "Conditions under which these sets must be finite have been determined in [32, 34].", "startOffset": 73, "endOffset": 81}, {"referenceID": 0, "context": "Let L be the Boolean structure and let A = (A,X, \u03b4, \u03c3, \u03c4) be a fuzzy recognizer over L , where A = {1, 2, 3}, X = {x, y}, and \u03b4x , \u03b4 A y , \u03c3 A and \u03c4 are given by \u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 1 1 1 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A = [ 1 0 0 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 257, "endOffset": 266}, {"referenceID": 0, "context": "R = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A2 x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A2 y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 1 1 1 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A2 = [ 1 0 0 ] , \u03c42 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 143, "endOffset": 152}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 53, "endOffset": 64}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 74, "endOffset": 85}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 74, "endOffset": 85}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 74, "endOffset": 85}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 93, "endOffset": 100}, {"referenceID": 0, "context": "R 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 1 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A3 x = [ 1 0 0 0 ] , \u03b43 y = [ 0 1 1 1 ] , \u03c33 = [ 1 0 ] , \u03c43 = [ 0 1 ] .", "startOffset": 108, "endOffset": 115}, {"referenceID": 0, "context": "R = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 1 0 1 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A 2 x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 1 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03b4 A 2 y = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 1 1 1 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A 2 = [ 1 0 0 ] , \u03c4 \u2032 2 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb ,", "startOffset": 146, "endOffset": 155}, {"referenceID": 15, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 169, "endOffset": 177}, {"referenceID": 16, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 169, "endOffset": 177}, {"referenceID": 37, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 200, "endOffset": 204}, {"referenceID": 38, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 233, "endOffset": 237}, {"referenceID": 34, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 248, "endOffset": 256}, {"referenceID": 35, "context": "The state reduction of non-deterministic automata and recognizers by means of right invariant and left invariant quasi-orders has been studied by Champarnaud and Coulon [17, 18], Ilie, Navarro and Yu [39], and Ilie, Solis-Oba and Yu [40] (see also [36, 37]).", "startOffset": 248, "endOffset": 256}, {"referenceID": 0, "context": ",A2 = {1, 2}, and a fuzzy transition relation \u03b42 x is given by \u03b42 x = [ 1 1 1 1 ] .", "startOffset": 70, "endOffset": 81}, {"referenceID": 0, "context": ",A2 = {1, 2}, and a fuzzy transition relation \u03b42 x is given by \u03b42 x = [ 1 1 1 1 ] .", "startOffset": 70, "endOffset": 81}, {"referenceID": 0, "context": ",A2 = {1, 2}, and a fuzzy transition relation \u03b42 x is given by \u03b42 x = [ 1 1 1 1 ] .", "startOffset": 70, "endOffset": 81}, {"referenceID": 0, "context": ",A2 = {1, 2}, and a fuzzy transition relation \u03b42 x is given by \u03b42 x = [ 1 1 1 1 ] .", "startOffset": 70, "endOffset": 81}, {"referenceID": 0, "context": "R 2 = [ 1 1 1 1 ] ,", "startOffset": 6, "endOffset": 17}, {"referenceID": 0, "context": "R 2 = [ 1 1 1 1 ] ,", "startOffset": 6, "endOffset": 17}, {"referenceID": 0, "context": "R 2 = [ 1 1 1 1 ] ,", "startOffset": 6, "endOffset": 17}, {"referenceID": 0, "context": "R 2 = [ 1 1 1 1 ] ,", "startOffset": 6, "endOffset": 17}, {"referenceID": 0, "context": "and it reduces A2 to a fuzzy automaton A3 = A2/R sri 2 = (A3,X, \u03b4 3) having only one state and a fuzzy transition relation \u03b43 x = [ 1 ] .", "startOffset": 130, "endOffset": 135}, {"referenceID": 13, "context": "A discrete event system (DES) is a dynamical system whose state space is described by a discrete set, and states evolve as a result of asynchronously occurring discrete events over time [15, 31].", "startOffset": 186, "endOffset": 194}, {"referenceID": 29, "context": "A discrete event system (DES) is a dynamical system whose state space is described by a discrete set, and states evolve as a result of asynchronously occurring discrete events over time [15, 31].", "startOffset": 186, "endOffset": 194}, {"referenceID": 46, "context": "To take this kind of uncertainty into account, Lin and Ying extended classical discrete event systems to fuzzy discrete event systems (FDES) by proposing a fuzzy finite automaton model [48, 49].", "startOffset": 185, "endOffset": 193}, {"referenceID": 47, "context": "To take this kind of uncertainty into account, Lin and Ying extended classical discrete event systems to fuzzy discrete event systems (FDES) by proposing a fuzzy finite automaton model [48, 49].", "startOffset": 185, "endOffset": 193}, {"referenceID": 10, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 11, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 12, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 42, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 46, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 47, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 48, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 49, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 67, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 69, "context": "Fuzzy discrete event systems have been since studied in a number of papers [12, 13, 14, 44, 48, 49, 50, 51, 69, 71], and they have been successfully applied to biomedical control for HIV/AIDS treatment planning, robotic control, intelligent vehicle control, waste-water treatment, examination of chemical reactions, and in other fields.", "startOffset": 75, "endOffset": 115}, {"referenceID": 46, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 3, "endOffset": 11}, {"referenceID": 47, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 3, "endOffset": 11}, {"referenceID": 12, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 26, "endOffset": 42}, {"referenceID": 42, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 26, "endOffset": 42}, {"referenceID": 67, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 26, "endOffset": 42}, {"referenceID": 69, "context": "In [48, 49], and later in [14, 44, 69, 71], fuzzydiscrete event systems have beenmodeled by automatawith fuzzy states and fuzzy inputs, whose transition function is defined over the sets of fuzzy states and fuzzy inputs in a deterministic way.", "startOffset": 26, "endOffset": 42}, {"referenceID": 30, "context": "In fact, such an automaton can be regarded as the determinization of a fuzzy automaton (defined as in this paper) by means of the accessible fuzzy subset construction (see [32, 34]).", "startOffset": 172, "endOffset": 180}, {"referenceID": 32, "context": "In fact, such an automaton can be regarded as the determinization of a fuzzy automaton (defined as in this paper) by means of the accessible fuzzy subset construction (see [32, 34]).", "startOffset": 172, "endOffset": 180}, {"referenceID": 10, "context": "On the other hand, in [12, 13, 51] fuzzy discrete event systems have been modeled by fuzzy automata with single crisp initial states.", "startOffset": 22, "endOffset": 34}, {"referenceID": 11, "context": "On the other hand, in [12, 13, 51] fuzzy discrete event systems have been modeled by fuzzy automata with single crisp initial states.", "startOffset": 22, "endOffset": 34}, {"referenceID": 49, "context": "On the other hand, in [12, 13, 51] fuzzy discrete event systems have been modeled by fuzzy automata with single crisp initial states.", "startOffset": 22, "endOffset": 34}, {"referenceID": 13, "context": "[15]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[15]), and hence, it is necessary to examine the transition structure of the parallel composition to answer blocking properties.", "startOffset": 0, "endOffset": 4}, {"referenceID": 52, "context": "Such an approach has been used in [54] in study of conflicting properties of crisp discrete event systems.", "startOffset": 34, "endOffset": 38}, {"referenceID": 52, "context": "[54]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "\u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 = [ 0 1 0 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 67, "endOffset": 78}, {"referenceID": 0, "context": "\u03b4x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 = [ 0 1 0 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 67, "endOffset": 78}, {"referenceID": 0, "context": "is a weakly right invariant fuzzy quasi-order on A (it is just the greatest one), and the related afterset fuzzy recognizer is A /R = (A/R,X, \u03b4, \u03c3, \u03c4), where \u03b4 x , \u03c3 A/R and \u03c4 are given by \u03b4 x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 0 1 0 0 1 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A/R = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 241, "endOffset": 250}, {"referenceID": 0, "context": "is a weakly right invariant fuzzy quasi-order on A (it is just the greatest one), and the related afterset fuzzy recognizer is A /R = (A/R,X, \u03b4, \u03c3, \u03c4), where \u03b4 x , \u03c3 A/R and \u03c4 are given by \u03b4 x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 0 1 0 0 1 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A/R = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 241, "endOffset": 250}, {"referenceID": 0, "context": "is a weakly right invariant fuzzy quasi-order on A (it is just the greatest one), and the related afterset fuzzy recognizer is A /R = (A/R,X, \u03b4, \u03c3, \u03c4), where \u03b4 x , \u03c3 A/R and \u03c4 are given by \u03b4 x = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 0 1 1 0 1 0 0 1 0 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb , \u03c3 A/R = [ 1 1 1 ] , \u03c4 = \uf8ee \uf8ef\uf8ef\uf8ef\uf8ef\uf8ef\uf8f0 1 0 1 \uf8f9 \uf8fa\uf8fa\uf8fa\uf8fa\uf8fa\uf8fb .", "startOffset": 241, "endOffset": 250}], "year": 2011, "abstractText": "In our recent paper we have established close relationships between state reduction of a fuzzy recognizer and resolution of a particular system of fuzzy relation equations. In that paper we have also studied reductions by means of those solutions which are fuzzy equivalences. In this paper we will see that in some cases better reductions can be obtained using the solutions of this system that are fuzzy quasiorders. Generally, fuzzy quasi-orders and fuzzy equivalences are equally good in the state reduction, but we show that right and left invariant fuzzy quasi-orders give better reductions than right and left invariant fuzzy equivalences. We also show that alternate reductions by means of fuzzy quasi-orders give better results than alternate reductions by means of fuzzy equivalences. Furthermore we study a more general type of fuzzy quasi-orders, weakly right and left invariant ones, and we show that they are closely related to determinization of fuzzy recognizers. We also demonstrate some applications of weakly left invariant fuzzy quasi-orders in conflict analysis of fuzzy discrete event systems.", "creator": "LaTeX with hyperref package"}}}