{"id": "1201.3880", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2012", "title": "Modelling and simulation of complex systems: an approach based on multi-level agents", "abstract": "a systematic organization already conceived up of internal components with many interactions. so the design of systems such as simulation architecture, cooperative systems or assistance systems includes his comprehensive high sequence of diverse neural communicational concepts. the agent - based approach provides simple industrial abstraction merely indicating functional instance. after having explained the organizational context and computational functions connecting agentbased systems, quickly track the profits from a logistics manufacturing, to regulate an urban transport system, and continuously simulate this epidemic detection level, our thoughts on the interactional level were inspired by soft - machine interface models, especially those classified \" cognitive engineering \". to developing a general framework for process - based abstract mental modelling, we then try a proposal of four describes ensuring agents consciously demonstrate daily discussing complex systems ( reactive, routine, cognitive, conscious collective ). thus complete each description three multi - level agent models, which is the intention of this effort, we recommend behavior theory and discuss our ongoing work developing systemic level.", "histories": [["v1", "Wed, 18 Jan 2012 19:02:11 GMT  (851kb)", "http://arxiv.org/abs/1201.3880v1", "10 pages; IJCSI International Journal of Computer Science Issues, Vol. 8, Issue 6, No 1, November 2011"]], "COMMENTS": "10 pages; IJCSI International Journal of Computer Science Issues, Vol. 8, Issue 6, No 1, November 2011", "reviews": [], "SUBJECTS": "cs.MA cs.AI cs.HC", "authors": ["alain-j\\'er\\^ome foug\\`eres"], "accepted": false, "id": "1201.3880"}, "pdf": {"name": "1201.3880.pdf", "metadata": {"source": "CRF", "title": "Modelling and simulation of complex systems: an approach based on multi-level agents", "authors": ["Alain-J\u00e9r\u00f4me Foug\u00e8res"], "emails": [], "sections": [{"heading": "1. Introduction", "text": "The main objective of our research over the last decade has been agent-based simulation and complex system (CS) modelling. After studying the agent-based systems (ABS) organizational context, to simulate the reorganization of flexible manufacturing and regulate an urban transport system, we focused on modelling agents with strong communication skills, which may be used as building elements for the design of assistance systems to CS users. Our thoughts on the interactional level were inspired by models from human-machine interfaces field, especially those of the \"cognitive engineering\" approach [6]. Then we suggested a first agent model and defined the communication model of these agents [10,11,29]. Next, we realized that the agent architecture could vary (multi-level architecture), so as to support the more or less cognitive tasks that agents perform. We then defined the different granularities of these agents by placing them on a scale of behaviours inspired by Ramussen\u2019s three-level scale [31] to describe human operator behaviour.\nCS are \"made of many components with many interactions\" [34]. The CS design (cooperative systems, assistance systems, etc.) then includes a very specific modelling of interactional and communicational levels.\nMoreover, according to Morin [22], CS designer \"must have a method that allows to design the multiple points of view, and to move from one point of view to another.\"\nIn this sense, Wooldridge [37] and Jennings [19] have argued that agents are a new paradigm for CS engineering; they suggest a satisfactory response to three common techniques for reducing the software complexity: decomposition, abstraction and organization. Jennings [19] raises two hypotheses of adequacy and formation: (1) agent approach can significantly improve our ability to model, design and build complex and distributed software systems, (2) in addition to being able to design and build CS, agent approach is destined to become a major paradigm of software engineering.\nFrom the IAD field [36], ABS, and before that the actor model [17], all withhold the basic principle of the knowledge and information distribution necessary to solve a problem on a set of interacting agents, capable of pursuing and achieving a common goal. An agent is an active, interactive and proactive entity of a system. It is often differentiated according to its cognitive (social metaphor) or reactive (biological metaphor) nature; we frequently define the granularity of agents according to their degree of knowledge and functional complexity.\nA software agent, according to the Newell and Simon model [24], is an autonomous information processing system that means it is composed of reception and transmission devices, a processor and a memory (knowledge base). An agent-based system is a society of autonomous agents working together to reach a common goal from interaction, communication or transaction. For a first understanding of the agent paradigm, we can consider that an agent is a computer system located in an environment, in which it can act, possibly in interaction with others agents, and this in complete autonomy [19]. Autonomy is for us the main characteristic of an agent, relating to the object paradigm. It is realized by: (1) an independent computer process, (2) an individual memory (knowledge/data), and (3), an ability to interact (perception/reception, communication/action).\nThe paper is organized as follows. In the second section, the adequacy of the agent paradigm to model and simulate complex systems, and then a model of multilevel agents is suggested. In the third section, an\nillustration and a discussion of each of the four agent behaviour levels was drawn. Finally, in the last section, the conclusions of this research are presented."}, {"heading": "2. Agents for Complex Systems Simulation", "text": ""}, {"heading": "2.1. Agent Paradigm", "text": "There are many definitions of the agent paradigm [19, 37], supported by typology proposals, but new types of agents continue to emerge [35]. It is therefore difficult to establish a consensus. However, through these definitions we observe that three functions characterize agent activity: to perceive, decide, and act. An agent has its own knowledge. It acts in autonomy to reason and decides according to its objectives, its interactions with other agents in the system, and its environment perception. By extension, considering cognitive agents, experts of this domain generally agree on the following characteristics: intentionality, rationality, commitment, adaptability, and \"intelligence\". ABS are systems that allow distributing agents, communicating, autonomous, reactive, skilful, and finalized entities. They form intelligent solver networks, weakly bound, working together to solve problems beyond their individual capabilities and knowledge [18].\nAmong the suggested agent architectures with a cognitive orientation, the BDI model (Belief, Desire, and Intention) is best known [32]. It is built around three concepts inspired by human behaviour models: (1) beliefs, based on agent knowledge, (2) desires, corresponding to the knowledge that agent would express, and (3) intentions, or actions, that agents decide to do. Thus, a software agent, which has a desire, can transform it into intention when it knows it can achieve this; it is then left to act!"}, {"heading": "2.2. Agent Organisation and Interaction", "text": "Work in sociology or science organizations have always interested the ABS community, as a source of modelling [38]; the organizational configuration type scale by Mintzberg [21], from hierarchical structure (centralization) to the professional bureaucracy (decentralization), via the \"Adhocracy\" (mutual adjustment between groups), is one example.\nThe inherent problems to the partial agent knowledge in the pursuit of local goals or interlaced agents require the development of advanced coordination mechanisms [9]. An organization must allow ABS to behave as a coherent whole, to solve a problem uniquely. It controls and coordinates the interactions between agents of the system, and structures their activities.\nCommunication and interaction are interrelated. Following the definitions proposed for man-machine dialogue [5], it is possible to distinguish these two concepts as follows: interaction is an exchange between agents and their environment, this exchange depends on the intrinsic properties of the environment in which agents are active; agent perception may be passive by\nreceiving messages/signals, or active, when it is the result of voluntary action; communication is an exchange between agents themselves, using a language. In addition, the concept of interaction is associated with the protocol and interaction pattern concepts, allowing us to specify how and with whom an agent can interact - engineering has been suggested [9]. Interaction specifications differentiate levels of interaction, such as micro or macro levels. As in the case of human communication, communicative interactions among agents can obviously be linked together and produce information exchanges or dialogues [2].\nIn most of ABS, the agent behaviour in interaction consists of three phases: (1) information reception from another agent, or the perception of a change in its environment, (2) interpretation of this event taking into account other agents, (3) sending a message or taking action in an environment modification. If interactions between agents are frequently communicative, they also involve action coordination, cooperation and negotiation [39]."}, {"heading": "2.3. Agent-Based Systems Design", "text": "The ABS design, often questioned from process or methodological perspectives [4], presumes that the designer proceeds with a local vision to respect the fact that each agent manages its own knowledge and actions (autonomy). The support languages of ABS design are numerous [3].\nIn [11] we proposed an ABS design method in four stages making extensive reference to AUML (Agent Unified Modelling Language) [1]: (1) making the use case diagrams (services provided by ABS); (2) for each case, sequence diagrams carry out the interactions (message exchanges and scheduling) between the agents involved in this reference case; (3) from the sequence diagrams, which identified agents, objects and their interactions, making the class diagram: objects are associated with classes, exchanged messages (service requests between objects) are translated into operations on classes, parameters associated with operations are translated into class attributes - it may be possible to complete this diagram by a collaboration diagram; (4) from the class diagram, defining the behaviour of each agent (class agent) with a state diagram or an activity diagram. The description of roles played by various cooperative agents is insufficient since the notion of role, is non-existent from UML, and isn\u2019t the subject of a few short extensions in AUML [1]. It focuses on collaboration diagrams and sequence diagrams."}, {"heading": "2.4. Proposition of Agent-Based Systems Modelling", "text": "After studying the ABS organizational context, to simulate the reorganization of a flexible manufacturing system and the regulation of an urban transport system, we focused on the modelling of agents with strong communication skills, which may be used as building the foundation for the design of complex systems such as cooperative systems and user assistance systems. Our thoughts about this interactional level were fed by models from the man-machine interface field, especially those of the \"cognitive engineering\" approach [6]. We then proposed a variable granularity agent model based on Rasmussen\u2019s three level scale [10, 11, 28]."}, {"heading": "2.4.1 Notations", "text": "Following notations and definitions are used in this modelling section:\n{ }i\u03b1=\u0391 is the agents finite set, \u0391\u2208 Ii , { }\u0391\u0391 = qI ,...,2,1 ;\n{ }i\u03b9=\u0399 is the interactions finite set defined for all agents, \u0399\u2208 Ii , { }\u0399\u0399 = qI ,...,2,1 ;\n{ }i\u03c1=\u03a1 is the roles to be played by all agents finite set, \u03a1\u2208 Ii , { }\u03a1\u03a1 = qI ,...,2,1 ;\n{ }i\u03bf=\u039f is the agent organizations into communities finite set, \u039f\u2208 Ii , { }\u039f\u039f = qI ,...,2,1 ;\n{ }i\u03c3=\u03a3 is the sates finite set of agent-based system, \u03a3\u2208 Ii , { }\u03a3\u03a3 = qI ,...,2,1 ;\n\u03a3\u2286\u03a3 i\u03b1 is the states finite set of agent i\u03b1 ;\n\u03a3\u2286\u03a3\u039c i\u03b1 is the states finite set of agent-based\nsystem that agent i\u03b1 knows;\n{ }i\u03c0=\u03a0 is the observations finite set, \u03a0\u2208 Ii , { }\u03a0\u03a0 = qI ,...,2,1 ;\n\u03a0\u2286\u03a0 i\u03b1 is the observations finite set that agent i\u03b1 can do;\n{ }i\u03b4=\u2206 is the decision rules finite set, \u2206\u2208 Ii , { }\u2206\u2206 = qI ,...,2,1 ;\n\u2206\u2286\u2206 i\u03b1 is the decision rules finite set that agent i\u03b1 can trigger;\n{ }i\u03b3=\u0393 is the actions/reactions finite set of all agents, \u0393\u2208 Ii , { }\u0393\u0393 = qI ,...,2,1 ;\n\u0393\u2286\u0393 i\u03b1 is the actions finite set that agent i\u03b1 can process; \u0393\u2286\u0393\u039b i\u03b1 is the specific communication acts finite set\nthat agent i\u03b1 can process;\n{ }i\u03c9=\u2126 is the interpretations finite set of all agents, \u2126\u2208 Ii , { }\u2126\u2126 = qI ,...,2,1 ;\n\u2126\u2286\u2126 i\u03b1 is the finite set of interpretations of\nobservations made by agent i\u03b1 ;\n{ }i\u03ba=\u039a is the knowledge finite set of, \u039a\u2208 Ii , { }\u039a\u039a = qI ,...,2,1 ;\n\u039a\u2286\u039a i\u03b1 is the knowledge finite set of agent i\u03b1 , with\niiii \u03b1\u03b1\u03b1\u03b1 \u039c \u03a3\u222a\u03a3\u222a\u03a1=\u039a ;\n{ }i\u03b5=\u0395 is the events finite set, \u0395\u2208 Ii , { }\u0395\u0395 = qI ,...,2,1 ;\n\u0395\u2286\u0395 i\u03b1 is the events finite set that agent i\u03b1 can observe ;\n{ }i\u03c7=\u03a7 is the conditions finite set, \u03a7\u2208 Ii , { }\u03a7\u03a7 = qI ,...,2,1 ;\n\u03a7\u2208\u03a7 i\u03b1 is the conditions finite set associated to the\ninternal states of agent i\u03b1 ;\n{ }i\u03bd=\u039d is the configuration networks finite set of, \u039d\u2208 Ii , { } qI \u039d\u039d = ,...,2,1 ;\n{ }i\u03c5=\u03d2 is the connexions between agents finite set, \u03a5\u2208 Ii , { }\u03d2\u03d2 = qI ,...,2,1 ;\n{ }i\u03bb=\u039b is the speech acts finite set, \u039b\u2208 Ii , { }\u039b\u039b = qI ,...,2,1 ;\n{ }i\u03b7=\u0397 is the messages finite set, HIi\u2208 , { } qIH \u0397= ,...2,1 ;\n{ }i\u03c4=\u03a4 is the type of messages finite set, \u03a4\u2208 Ii , { }\u03a4\u03a4 = qI ,...,2,1 ;\niii \u03b1\u03b1 \u03b1 \u03a0\u2192\u03a3\u00d7\u03a3\u03a6 \u039c\u03a0 :)( is the function of\nobservations of agent i\u03b1 ;\niiii \u03b1\u03b1\u03b1 \u03b1 \u2126\u2192\u039a\u00d7\u03a3\u03a6 \u039c\u2126 :)( is the function of\ninterpretations of agent i\u03b1 ;\niiii \u03b1\u03b1\u03b1\u03b1 \u2206\u2192\u03a3\u00d7\u03a0\u03a6\u2206 :)( is the function of\ndecisions of agent i\u03b1 ;\niii \u03b1\u03b1\u03b1 \u0393\u2192\u03a3\u00d7\u2206\u03a6\u0393 :)( is the function of\nactions of agent i\u03b1 ."}, {"heading": "2.4.2 Modelling", "text": "The formal approach we follow to model and design CS is to define the modular architecture of agents, to define their model of interaction, communication and knowledge and to respect a rigorous methodology for acquiring expertise. Then, an ABS M is described by a 4-tuple (1):\nM = <A, I, P, O> (1)\nwhere A is a set of agents, I is the set of interactions defined for agents of A, P is the set of roles to be played by agents of A, and O is the set of organizations of agents into communities.\nMany agent structures known as \u201ccognitive\u201d are inspired by the cycle <perceive, decide, act> [23]. However, our agent model [10, 11] is rather inspired by Rasmussen\u2019s three-level operator [31]: 1) reflex-based behaviour, 2) rule-based behaviour, and 3) knowledge-based behaviour with interpretation, decision and plan (Figure 2). We interpreted this model as a model of process for agents. The latter are both cognitive and reactive. Moreover, they have behaviours adapted to the tasks they perform. We added one level at this scale to include behaviour based on cooperation. We call actor (or collective agent) a system of cooperative agents in which the behaviour is defined by collective decision tasks and collective coordination tasks [13].\nAgents developed in our various projects, whose behaviour is illustrated in the following, can perform reflex actions (automatic), routine actions, and actions in new situations (creative or cooperative situations). These models are based on the sequential character of the human cognitive system (serialization in the symbolic level), not excluding a certain degree of parallelism in the processing of sensorimotor signals [34]. Thus, an\nagent \u0391\u2208i\u03b1 can evolve on one of the first three levels of our scale (Figures 2 and 3); it is described by one of the following tuples (2, 3, 4):\n>\u03a6\u03a6=< \u0393\u03a0 )()( , iii \u03b1\u03b1\u03b1 (2)\n>\u039a\u03a6\u03a6\u03a6=< \u0393\u2206\u03a0 iiiii \u03b1\u03b1\u03b1\u03b1\u03b1 ,,, )()()( (3)\n>\u039a\u03a6\u03a6\u03a6\u03a6=< \u0393\u2206\u2126\u03a0 iiiiii \u03b1\u03b1\u03b1\u03b1\u03b1\u03b1 ,,,, )()()()( (4)\nwhere )( i\u03b1\u03a0\u03a6 is the function of observations of agent\ni\u03b1 ; )( i\u03b1\u2126\u03a6 is the function of interpretations of agent\ni\u03b1 ; )( i\u03b1\u2206\u03a6 is the function of decisions of agent i\u03b1 ;\n)( i\u03b1\u0393\u03a6 is the function of actions of agent i\u03b1 ; i\u03b1\u039a is\nthe finite set of knowledge of agent i\u03b1 - the knowledge contained in its memory, among which are the decision rules, the values of the domain, and the acquaintances and/or networks of affinities between agents, along with dynamic knowledge (observed events, internal states, etc.). The resource management associated with these various functions is provided by the set MG of managers: { }\u039a\u0393\u0397= MMMGM ,, , where \u0397M is the messages manager, \u0393M is the actions manager and\n\u039aM is the knowledge-base manager (Figure 3).\nThe decision rules i\u03b1\u2206 of the agent i\u03b1 , gathered in its knowledge base, are described by a 3-tuple (5):\n>\u0393\u03a7\u0395=<\u2206 iiii \u03b1\u03b1\u03b1\u03b1 ,, (5)\nwhere i\u03b1\u0395 is the set of events that agent i\u03b1 can\nobserve, i\u03b1\u03a7 is the set of conditions associated to the\ninternal states of agent i\u03b1 , and i\u03b1\u0393 is the set of actions\nthat agent i\u03b1 can perform. For instance, let us consider the decision rule 1\u03b4 with: (1) 1\u03b5 := <inform, if\u03b1 , kr\u03b1 ,\nt = 2, V> ; (2) 1\u03c7 := <V = sup(0.4)> ; (3) 1\u03b3 := <diffuse, if\u03b1 , F , t=2, V>.\nThis rule means that: (1) depending on following event 1\u03b5 : function agent if\u03b1 ( \u0391\u2286\u2208 FFif ,\u03b1 ) receives a message of type t whose value is equal to 2 (corresponding to the transmission of a value) by which a requirement agent kr\u03b1 ( \u0391\u2286\u2208 RRkr ,\u03b1 ) informs if\u03b1\nof its value V; (2) under condition 1\u03c7 \u201cV must be greater than the threshold value 0.4\u201d; (3) action 1\u03b3 will then be triggered: agent if\u03b1 will communicate this information to all function agents of the set F . Actions of agent\ni\u03b1 are controlled and memorized by a manager iM \u03b1\u0393 .\nAgent communicational interactions. Communication is the primary mechanism of interaction of an agent with its agent community. To communicate with other agents, an agent can exchange messages in syntax of an interaction language based on the concept of speech acts [33]. These information exchanges are controlled by a communication protocol in which a response is required for some speech acts (ask/[accept, refuse], inform/confirm, propose/[confirm, refuse], evaluate/[agree, disagree], etc.). We have compiled a lexicon of performative verbs we use in our applications (\u039b = {inform, diffuse, ask, reply, confirm...}). The basic elements of this language (variables and primitives) are presented in Table 1. These speech acts are sufficient to enable agents to perceive the intention associated with the proposition content in a message. In the course of an interaction, an agent chooses its destination agent according to its intentions, the activity context and the state of its acquaintances.\nA communication act rs,\u03bb exchanged between two agents (\nirs \u03b1 \u03bb \u039b\u0393\u2208, ) is defined by a 5-tuple (6):\n>=< \u03b7\u03c4\u03b1\u03b1\u03bb\u03bb ,,,,, rsrs (6)\nwhere \u039b\u2208\u03bb is a speech act denoted by a performative verb, s\u03b1 is the source agent of communication, r\u03b1 is the receiver agent, \u03a4\u2208\u03c4 is the type of message and\n\u0397\u2208\u03b7 is the message itself, which can be an assertion, a question, a response, etc.\nTable 1. Interaction language for cooperative agents\nSome elements of language Significance\n\u03c4\u03b2\u03b7\u03b3\u03b5\u03b1 ,,,,, respectively are agent, event, action, message, speech act and type of message\ninform( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 sends to r\u03b1 the fuzzy message \u03b7 of type \u03c4\ndiffuse( [ ] \u03b7\u03c4\u03b1\u03b1 ,,, ls ) s\u03b1 sends to the list [ ]l\u03b1 the fuzzy message \u03b7 of type \u03c4 ask( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 asks to r\u03b1 the fuzzy request\n\u03b7 of type \u03c4\nanswer( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 answers r\u03b1 the fuzzy message \u03b7 of type \u03c4\nconfirm( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 confirms to r\u03b1 that it is agree with fuzzy message \u03b7 of type \u03c4\npropose ( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 proposes to r\u03b1 the proposition contained in the fuzzy message \u03b7 of type \u03c4\nagainst-propose ( \u03b7\u03c4\u03b1\u03b1 ,,, rs )\ns\u03b1 against-proposes to r\u03b1 the proposition contained in the fuzzy message \u03b7 of type \u03c4\nrefuse( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 refuses the proposition proposes by r\u03b1 , contained in the fuzzy message \u03b7 of type \u03c4\naccept( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 accepts the proposition proposes by r\u03b1 , contained in the fuzzy message \u03b7 of type \u03c4\norder( \u03b7\u03c4\u03b1\u03b1 ,,, rs ) s\u03b1 orders r\u03b1 to do the task contained in the fuzzy message \u03b7 of type \u03c4\nCoordination and organization of agents. Interactions between agents of complex systems are not just communicational, they also involve cooperation and action coordination required to achieve the common goals of the agent system. Agent-oriented coordination models focus on the behaviour of agents in order to achieve a coordinated system. Initially organized in communities, agents are all involved in the same activity of production or problem solving. During activities, inter and intra-community networks of affinities between agents can emerge. Therefore, the coordination of agents and the self-organization of the communities are carried out by message exchange (mutual adjustment or emergence of networks of affinities, for examples).\nAgent knowledge. An agent of a complex system has four kinds of knowledge: (1) domain knowledge, (2) functional skills to operate on states and values according to the processes defined in the complex system, (3) knowledge to control the agent\u2019s activity (decision rules), and (4) knowledge to interact with other agents (language and protocol of communication, acquaintances, networks of affinities, etc.). This knowledge is constantly evolving during tasks processed in the complex system, following the interactions between agents and the interventions of human users."}, {"heading": "3. Illustration and Discussion", "text": "During the past decade, to validate the use of the proposed scale of agent behaviour (see Figure 2), we designed a set of agent-based systems and we also made numerous modelling. In the following we illustrate the agent modelling for each of our four-level scale with a representative application."}, {"heading": "3.1. Level 1 (reactive agent): Agents to Design an", "text": "Epidemic Simulation-Detection System\nThe main application for this level focused on the modelling and designs of simulation agents for an ABS called SIMBADE [10]. SIMBADE is an agent platform that aims to simulate and detect epidemics. This platform, designed in accordance with the French public health organization, allows simulating cases of disease (local or scattered) and regularly reporting diagnostic epidemic, from the messages exchanged by hierarchical agents of the detection system. SIMBADE combines complexity and clarity of presentation. Indeed, SIMBAD is composed of three subsystems (Figure 5.a): (1) an ABS for the simulation of epidemics, including agents from level 1 which interest us especially in this section; (2) an ABS for the detection of epidemics, including agents of Level 3; and (3) a system of decision support manager of medical knowledge to diagnose diseases and epidemics. Each agent of detection system has its own knowledge in relation to its role within the organization. Decision making is thus distributed. The simulation system is defined to control the two other systems and to understand what would be an autonomous system deployed on the public health system.\nThe ABS of epidemics simulation, related to artificial life systems, is composed of two types of agents at level 1: (1) <contaminant> agents, carriers of diseases known by the system, including reportable diseases, and (2) <individual> agents who consult their doctors if they are contaminated. An agent <contaminant> is introduced locally by an agent of simulation activating disease (influenza, meningitis, pertussis, listeriosis, etc.). This agent may, because of its proximity, infect healthy agent <individual>. It becomes bearer of the disease and may, in turn, move, contaminate other agents of its environment. Once infected, a <Patient> agent consults a <Doctor> agent from the doctors network (or medical community) (see scenario of Figure 5).\nThe agent behaviour, defined by the first level of our scale, is entirely satisfactory for this simulation activity. The reflex behaviour is inherently simple to model; we have not seen fit to reproduce it to validate the model at the first level."}, {"heading": "3.2. Level 2 (routine agent): Agents to Design a", "text": "Product Configuration System\nThe main application for this level focused on the modelling and designs of configuration agents for an ABS is called APIC [28]. APIC is an agent platform of collaborative design for an optimization of product integrated configuration. The configuration of product families is a collaborative and distributed process. Actors in the configuration access the APIC platform, using a specific \u03bc-tool to their domain [20]. These \u00b5tools communicate with the platform through an interface agent. In APIC, any configuration item is an\nagent. Then, each specification (characteristic of product), function, solution (component of product) and constraint, is represented by an agent. Agents are organized in four communities that communicate heavily with each other and the interface agents (Figure 6): (1) community of <requirement> agents, (2) community of <function> agents, (3) community of <solution> agents, and (4) community of <constraint> agents. Each of these communities provides constraints on the process of configuration.\nNote that APIC agents, defined by level 2 on our scale (using ECA rules to decide on their actions), were designed as fuzzy [16], in the sense that, not only the data they process are fuzzy (fuzzy knowledge), but their behaviours themselves are fuzzy. Indeed, the inter/intracommunities interactions are weighted by fuzzy values, this allows to weaken them, strengthen them, or even to inhibit them [29]. They operate in an environment defined by fuzzy variables and constraints of configuration.\nFigure 7 shows a typical scenario of configuration highlighting the communicative context between level 2 agents of APIC. Consider the first exchanges. An agent <Ri> sends a message M1 of type T (fuzzy value that characterizes it in the Requirements network, for example) to an agent <Fj,>, then, according to the defined communication protocol, awaits an acknowledgment message. This acknowledgment message will allow agent <Ri> to know that agent <Fj> has received the message M1 and was able to handle it. For its part, agent <Fj> consults its ECA rules. One of them includes: Event [receiving a message of type T], Conditions (value > threshold, for example), and Action [diffusion to entire functions community]. Then, agent <Fj> broadcasts the received message, and when it received all acknowledgments of his own message, it can send the acknowledgment expected by agent <Ri>. And so on.\nThe behaviour and knowledge (decision rules) of defined agents is entirely satisfactory for this configuration activity [29]. To further validate the model in this second level, we have recently reproduced for modelling simulation agents of a push service (information on mobility) for an on-demand transport system. Other cases of modelling in level 2 have been proposed [12, 13]."}, {"heading": "3.3. Level 3 (cognitive agent): Agents to Design an Assistance System for Student Projects Management", "text": "The main application for this level focused on the modelling and design of assistant agents for an ABS called iP\u00e9dagogique [25]. iP\u00e9dagogique is an agentbased platform that aims to track, manage, and evaluate students\u2019 projects. Management of students\u2019 project is a complex activity, cooperative and low-instrumented. After designing functionalities for the learning environment iP\u00e9dagogique, it is natural that we were interested in the right level of assistance to provide for facilitating its use. Then, iP\u00e9dagogique proposed an ideal testing environment for the design of an agentbased system in level 3 (high cognitive skills and specific knowledge to each agent). Modelling work has resulted in developing five assistant agents: (<aCourse>, <aPM>, <aUser>, <aForm>, <aTutorial>).\nDuring the semester, the assistant of project management <aPM> simplifies communication, project management and monitoring: for the concerned teacher, assisting in the information broadcasting task, project registration, schedules, and group monitoring, etc.; for student projects groups, assisting in the project registration tasks, compliance schedules, sharing roles, delivery of documents, making appointments, phases constraint reminders, etc.; for tutor projects, assisting in the tasks of monitoring schedules for project groups, receiving documents, making appointments, etc.\nThe cooperative behaviour of agent <aPM> to a group of students comes in two modes: an intervention mode and an informational mode (a reminder during the connection of students, for example). As an illustration, Figure 8 shows the reaction of <aPM> following the delay of a project group during the analysis phase - this should normally result in the delivery of a requirements\ndocument to the tutor of the group. An interaction will be maintained with the student responsible for the phase in question. Then <aPM> observes proposals from students A and B and tutor, and decides to inform according to these defined ECA rules.\nThe behaviour of these assistant agents is entirely satisfactory for this activity of assistance to project management. To further validate the model in this third level, we have recently reproduced for modelling five design roles with cognitive agents (<Prescriber>, <Legislator>, <Designer>, <Evaluator>, and <Observer>), to realize a demonstrator with the aim of validating an advanced model of mechanical design [8]. Other cases of modelling have been proposed [10, 27]."}, {"heading": "3.3. Level 4 (collective agents): an Actor of Mediation for a Functional Analysis System", "text": "The main application for this level is focused on the modelling and designs of an agent-based system of cooperative mediation called Mediator [26, 27]. Mediator is an artificial actor integrated in collaborative systems. Its role is to assist users in their cooperative activities of design, project management, functional analysis, or software development. The Mediator is designed as a group of agents; each agent has specific skills of cooperation (communication, co-memorization, co-production, coordination, and control_process, that we called the 5-Co [20]).\nThe Mediator is part of a group of human actors during a cooperative functional analysis activity, which means it\nis able to interact with them. For that it must perform cognitive tasks of observation, interpretation, decision and action.\nThe projection of the agents\u2019 skills in the Mediator activity pattern, allows to define that: the task \"observe\" will be performed by agents <Observer> specialized in the acquisition of cooperation information mediated by the cooperative system; the task \"interpret\" and \"decide\" will be performed by agents <Knowledge> and <Control>; monitoring of cooperative activity will be performed by the agent <Monitoring>; memorization by the agent <Memorization>, and the task \"act\" relating to the cooperation communication information (communication to act), will be performed by the agent <Communication>. Coordination is centralized at the agent <Control>. Figure 10 shows the agent architecture of Mediator. The cooperative system is artificially divided into two parts to facilitate understanding of the scheme. <Observer> agents are specialized by modes of cooperation, while <Communication> agent is unique (ie, performing tasks of similar nature).\nTo make explicit communication between Mediator and designers, we have made a strong case for cooperation: there can be interaction without a minimum level of cooperation, especially in the case of a mix of human and artificial actors. Communicative interactions are of two types: macro-interactions between the designers and the Mediator, and micro-interactions between the agents of Mediator. Figure 11 shows micro-interactions between the five agents comprising Mediator, resulting from the observation of a designer's proposal.\nThe cooperative behaviour of these agents, defined by the fourth level of our scale, is entirely satisfactory for this activity of cooperative mediation. To further validate the model in this fourth level, we have recently reproduced agents for modelling simulation for modelling design communities of APIC. These communities are seen as actors composed by the fuzzy cooperating agents previously described in the second level [28]."}, {"heading": "5. Conclusion and Perspectives", "text": "In this paper, we presented a generic framework for modelling agents defined for the modelling and design of complex systems (cooperative systems, assistance systems...). The correlated formal approach is to define a modular architecture for designing the various cognitive processes of agents, to respect a rigorous methodology to acquire expertise of each agent, to define their model of knowledge, and their interaction and communication patterns. Agent activity in a complex system is very variable (from simple reflex reaction to complex cognitive decisions). So we have adapted the behaviour of agents modelled in our various applications. We then proposed a scale of behaviours which completes the scale proposed by Rasmussen. This scale consists of four levels we have presented in this article.\nRecently, from the perspective of modelling communication and cooperation in CS, we have identified two levels of interaction situation: (1) microinteraction situations, such as intra-Mediator cooperation (between agents of Mediator) or intracommunity communication in APIC platform, for example; (2) macro-interaction situations, such as cooperation between the designers and the Mediator, or the communication between designers and requirement agents in APIC platform, for example. This extends our work on modelling of the interactions in complex\nsystems with mixed prospects for communication between software agents and humans.\nWe are now working on a better understanding and implementation of level changes of agent behaviour during their activities [14]. The current extension of the APIC platform to other design tasks then offers an experimental context to test the evolution of our model.\nR\u00e9f\u00e9rences [1] B. Bauer, and J. Odell, \"UML 2.0 and agents: how to\nbuild agent-based systems with the new UML standard\", Engineering Applications of Artificial Intelligence, Vol. 18, 2005, pp. 141-157. [2] J. Bentahar, K. Bouzoubaa, B. Moulin, \"A Computational Framework for Human/Agent Communication Using Argumentation, Implicit Information, and Social Influence\", in Proc. of the 2006 IEEE/WIC/ACM int. conf. on Web Intelligence and Intelligent Agent Technology, 2006, p. 372-377. [3] F. Bergenti, M.-P. Gleizes, F. Zambonelli, \"Methodologies and Software Engineering for Agent Systems\", Kluwer, 2004. [4] P.K. Biswas, \"Towards an agent-oriented approach to conceptualization\", Applied Soft Computing, Vol. 8, No. 1, 2008, pp. 127-139. [5] J. Caelen, A. Xuereb, \"Interaction et pragmatique. Jeux de dialogue et de langage\", Herm\u00e8s, 2007. [6] S. Card, T. Moran, A. Newell, \"The Psychology of Human-Computer Interaction\", Lawrence Erlbaum, New Jersey, 1983. [7] D. Choulier, \"Towards a new theory for design activity reasoning\", 1st Int. Conf. On Design Creativity, (ICDC2010), Kobe, Japan, November 29 \u2013 December 1, 2010. [8] D. Choulier, A.-J. Foug\u00e8res, E. Ostrosi, \"Analysis of a theory for design activity reasoning through a multiagent approach\", Proceedings of TMCE 2012, May 7\u201311, 2012, Karlsruhe, Germany, to appear. [9] A. El Fallah-Seghrouchni, \"Mod\u00e8les de coordination d\u2019agents cognitifs\", in Principes et architecture des syst\u00e8mes multi-agent, J.-P. Briot et Y. Demazeau (Dir.), p. 139-176, Herm\u00e8s, 2001. [10] A.-J. Foug\u00e8res, \"Model of cognitive agents to simulate complex information systems\", in Proc. of IEEE Int. Conf. on Systems, Man and Cybernetics, (SMC\u201902), Hammamet, Tunisia, October 6-9, 2002. [11] A.-J. Foug\u00e8res, \"Agents to cooperate in distributed design process\", in Proc. of IEEE Int. Conf. on Systems, Man and Cybernetics, (SMC\u201904), pp. 2629- 2634, The Hague, Netherlands, Oct. 10-13 2004. [12] A.-J. Foug\u00e8res, \"Agent-based micro-tools development for a co-operative design platform\", ITI 3rd Int. Conf. on Information and Communication Technology, (ICICT\u201905), Cairo, Egypt, December 5-6, 2005. [13] A.-J. Foug\u00e8res, \"Agent-Based \u00b5-Tools Integrated into a Co-Design Platform\", Int. J. of Computer Science Issues, Vol. 7, No. 3-8, 2010, pp. 1-10. [14] A.-J. Foug\u00e8res, and E. Ostrosi, \"Fuzzy agents communities for product integrated configuration\", in Proc. of the 11th Int. Conf. on Intelligent Systems Design and Applications (ISDA\u201911), November 22\u201324 2011, Cordoba, Spain. [15] A.-J. Foug\u00e8res, and V.E. Ospina, \"A mediation system to facilitate cooperation in a Co-design platform\", in\nProc. of the 10th Int. Conf. on Intelligent Systems Design and Applications (ISDA\u201910), pp. 664-669, November 29 \u2013 December 1 2010, Cairo, Egypt. [16] N. Ghasem-Aghaee, and T.I. \u00d6ren, \"Towards Fuzzy Agents with Dynamic Personality for Human Behavior Simulation\", in Proc. of SCSC 2003, Montreal, Canada, July 20-24 2003, p. 3-10. [17] C. Hewitt, P. Bishop, R. Steiger, \"A universal modular actor formalism for artificial intelligence\", in Proceedings of the 3rd IJCAI, 1973, p. 235-245, Standford, CA. [18] N.R. Jennings, K. Sycara, M. Wooldridge, \"A Roadmap of Agent Research and Development\", Autonomous Agents and Multi-Agent Systems, Vol. 1, No. 1, 1998, pp. 7-38. [19] N.R. Jennings, \"On agent-based software engineering\", AI, Vol. 117, No. 2, 2000, pp. 277-296. [20] J.-P. Mica\u00eblli, and A.-J. Foug\u00e8res, \"L\u2019\u00c9valuation creative\", Presses de l\u2019UTBM, Belfort, 2007. [21] H. Mintzberg, \"The structuring of Organization\", Englewood Cliffs, NY, Prentice Hall, 1979. [22] E. Morin, \"La M\u00e9thode. 1. La nature de la nature\", tome I, Editions du Seuil, Paris, 1977. [23] U. Neisser, \"Cognition and reality: principles and implications of cognitive psychology\", Freeman, 1976. [24] A. Newell, H.A. Simon, Human problem solving, Englewood Cliffs, Prentice-Hall, 1972. [25] V.E. Ospina, and A.-J. Foug\u00e8res, \"Knowledge modelling for Mediation system based on co-operative task: an e-learning application\", ITI 3rd International Conference on Information and Communication Technology, Cairo, Egypt, December 5-6 2005. [26] V.E. Ospina, and A.-J. Foug\u00e8res, \"The mediator: an artificial actor integrated in a cooperative design system\", in Proc. of the 5th IEEE Int. Conf. on Computational Cybernetics, (ICCC\u20192007), pp. 151- 159, Gammarth, Tunisia, October 19-21, 2007. [27] V.E. Ospina, and A.-J. Foug\u00e8res, \"Agent-based Mediation System to Facilitate Cooperation in Distributed Design\", WSEAS Transactions on Computers, Vol. 6, No. 8, 2009, pp. 937-948. [28] E. Ostrosi, and A.-J. Foug\u00e8res, \"Optimization of Product Configuration Assisted by Fuzzy Agents\", Int. J. on Interactive Design and Manufacturing, Vol. 15, No. 1, 2011, pp. 29-44. [29] E. Ostrosi, A.-J. Foug\u00e8res, M. Ferney, D. Klein D., \"A fuzzy configuration multi-agent approach for product family modelling in conceptual design\", Journal of Intelligent Manufacturing, Published online: 25 May 2011, DOI: 10.1007/s10845-011-0541-5.\n[30] J. Peng, A.-J. Foug\u00e8res, S. Deniaud, M. Ferney, \"Dynamic Shared Context Processing in an ECollaborative Learning Environment\", Int. J. of Computer Science Issues, Vol. 7, No. 5, 2010, pp. 1-10. [31] J. Rasmussen, \"Skills, rules, and knowledge; signals, signs, and symbols, and other distinctions in human performance models\", IEEE Transactions on Systems, Man, and Cybernetics, Vol. 13, 1983, pp. 257-266. [32] A.S. Rao, and M.P. Georgeff M.P., \"BDI agents: from theory to practice\", in Proceedings of ICMAS 95, 1995, San Fransisco. [33] J.R. Searle J.R., \"Speech acts\", Cambridge University Press, 1969. [34] H.A. Simon, \"The sciences of the artificial\", Cambridge (MA): MIT Press, 1969. [35] J. Tweedale, N. Ichalkaranje et al., \"Innovations in multi-agent systems\", Journal of Network and Computer Applications, Vol. 30, No. 3, 2007, pp. 1089-1115. [36] G. Weiss G., \"Multiagent Systems: A Modern Approach to Distributed Artificial Intelligence\", MIT Press, 1999. [37] M. Wooldridge, \"Agent-based Software Engineering\", in IEE Proceedings on Software Engineering, Vol. 144, No. 1, 1997, pp. 26-37. [38] F. Zambonelli, N.R. Jennings et al., \"Organizational abstractions in the analysis and design of multi-agent systems\", in Proc. of Agent-Oriented Software Engineering, P. Ciancarini and M. Wooldridge (Eds.), Berlin, Springer,Vol. 1957, No. 1, 2001, pp. 235-251. [39] X. Zhang, V. Lesser, T. Wagner, \"Integrative negotiation in complex organizational agent systems \", in Proc. of the IEEE/WIC Int. Conf. on Intelligent Agent Technology (IAT\u201903), Halifax, Canada. October 13\u201317 2003.\nAlain-J\u00e9r\u00f4me Foug\u00e8res is Computer Engineer and PhD in Artificial Intelligence from University of Technology of Compi\u00e8gne (UTC). He is currently member 1) of the Laboratory of Computer Science (LIFC) of the University of Franche-Comt\u00e9, where he conducts research on mobility mediation for on demand transport systems; and 2) of the Laboratory of Mecatronics3M (M3M) at University of Technology of Belfort \u2013 Montb\u00e9liard (UTBM), where he conducts research on cooperation in design. His areas of interests and scientific contributions concern: the natural language processing, the knowledge representation, the agent-based system design (architecture, interactions, communication and co-operation problems). In recent years, his research has focused on the context of co-operative work (mediation of cooperation and context sharing)."}], "references": [{"title": "and J", "author": ["B. Bauer"], "venue": "Odell, \"UML 2.0 and agents: how to build agent-based systems with the new UML standard\", Engineering Applications of Artificial Intelligence, Vol. 18", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2005}, {"title": "A Computational Framework for Human/Agent Communication Using Argumentation", "author": ["J. Bentahar", "K. Bouzoubaa", "B. Moulin"], "venue": "Implicit Information, and Social Influence\", in Proc. of the 2006 IEEE/WIC/ACM int. conf. on Web Intelligence and Intelligent Agent Technology", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Methodologies and Software Engineering for Agent Systems", "author": ["F. Bergenti", "M.-P. Gleizes", "F. Zambonelli"], "venue": "Kluwer", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Towards an agent-oriented approach to conceptualization", "author": ["P.K. Biswas"], "venue": "Applied Soft Computing, Vol. 8, No. 1", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Interaction et pragmatique", "author": ["J. Caelen", "A. Xuereb"], "venue": "Jeux de dialogue et de langage\", Herm\u00e8s", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "The Psychology of Human-Computer Interaction", "author": ["S. Card", "T. Moran", "A. Newell"], "venue": "Lawrence Erlbaum, New Jersey", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1983}, {"title": "Towards a new theory for design activity reasoning", "author": ["D. Choulier"], "venue": "1 Int. Conf. On Design Creativity, ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Analysis of a theory for design activity reasoning through a multiagent approach", "author": ["D. Choulier", "A.-J. Foug\u00e8res", "E. Ostrosi"], "venue": "Proceedings of TMCE 2012, May 7\u201311", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Mod\u00e8les de coordination d\u2019agents cognitifs", "author": ["A. El Fallah-Seghrouchni"], "venue": "Principes et architecture des syst\u00e8mes multi-agent, J.-P. Briot et Y. Demazeau (Dir.), p. 139-176, Herm\u00e8s", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "Model of cognitive agents to simulate complex information systems", "author": ["A.-J. Foug\u00e8res"], "venue": "Proc. of IEEE Int. Conf. on Systems, Man and Cybernetics, (SMC\u201902), Hammamet, Tunisia, October 6-9", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2002}, {"title": "Agents to cooperate in distributed design process", "author": ["A.-J. Foug\u00e8res"], "venue": "Proc. of IEEE Int. Conf. on Systems, Man and Cybernetics,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2004}, {"title": "Agent-based micro-tools development for a co-operative design platform", "author": ["A.-J. Foug\u00e8res"], "venue": "ITI 3rd Int. Conf. on Information and Communication Technology, (ICICT\u201905), Cairo, Egypt, December 5-6", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}, {"title": "Agent-Based \u03bc-Tools Integrated into a Co-Design Platform", "author": ["A.-J. Foug\u00e8res"], "venue": "Int. J. of Computer Science Issues, Vol. 7, No. 3-8", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Fuzzy agents communities for product integrated configuration", "author": ["A.-J. Foug\u00e8res", "E. Ostrosi"], "venue": "Proc. of the 11 Int. Conf. on Intelligent Systems Design and Applications (ISDA\u201911), November", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "A mediation system to facilitate cooperation in a Co-design platform", "author": ["A.-J. Foug\u00e8res", "V.E. Ospina"], "venue": " IJCSI International Journal of Computer Science Issues, Vol. 8, Issue 6, No 1, November 2011 ISSN ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1694}, {"title": "\u00d6ren, \"Towards Fuzzy Agents with Dynamic Personality for Human Behavior Simulation", "author": ["N. Ghasem-Aghaee", "T.I"], "venue": "in Proc. of SCSC", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2003}, {"title": "A universal modular actor formalism for artificial intelligence", "author": ["C. Hewitt", "P. Bishop", "R. Steiger"], "venue": "Proceedings of the 3rd IJCAI", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1973}, {"title": "A Roadmap of Agent Research and Development", "author": ["N.R. Jennings", "K. Sycara", "M. Wooldridge"], "venue": "Autonomous Agents and Multi-Agent Systems, Vol. 1, No. 1", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1998}, {"title": "On agent-based software engineering", "author": ["N.R. Jennings"], "venue": "AI, Vol. 117, No. 2", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2000}, {"title": "L\u2019\u00c9valuation creative", "author": ["J.-P. Mica\u00eblli", "A.-J. Foug\u00e8res"], "venue": "Presses de l\u2019UTBM, Belfort", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2007}, {"title": "The structuring of Organization", "author": ["H. Mintzberg"], "venue": "Englewood Cliffs, NY, Prentice Hall", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1979}, {"title": "La M\u00e9thode", "author": ["E. Morin"], "venue": "1. La nature de la nature\", tome I, Editions du Seuil, Paris", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1977}, {"title": "Cognition and reality: principles and implications of cognitive psychology", "author": ["U. Neisser"], "venue": "Freeman", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1976}, {"title": "Human problem solving", "author": ["A. Newell", "H.A. Simon"], "venue": "Englewood Cliffs, Prentice-Hall", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1972}, {"title": "Foug\u00e8res, \"Knowledge modelling for Mediation system based on co-operative task: an e-learning application", "author": ["V.E. Ospina", "A.-J"], "venue": "ITI 3rd International Conference on Information and Communication", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2005}, {"title": "The mediator: an artificial actor integrated in a cooperative design system", "author": ["V.E. Ospina", "A.-J. Foug\u00e8res"], "venue": "Proc. of the 5 IEEE Int. Conf. on Computational Cybernetics, ", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2007}, {"title": "Agent-based Mediation System to Facilitate Cooperation in Distributed Design", "author": ["V.E. Ospina", "A.-J. Foug\u00e8res"], "venue": "WSEAS Transactions on Computers, Vol. 6, No. 8", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2009}, {"title": "Optimization of Product Configuration Assisted by Fuzzy Agents", "author": ["E. Ostrosi", "A.-J. Foug\u00e8res"], "venue": "Int. J. on Interactive Design and Manufacturing, Vol. 15, No. 1", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "A fuzzy configuration multi-agent approach for product family modelling in conceptual design", "author": ["E. Ostrosi", "A.-J. Foug\u00e8res", "M. Ferney", "D. Klein D"], "venue": "Journal of Intelligent Manufacturing, Published online:", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2011}, {"title": "Dynamic Shared Context Processing in an E- Collaborative Learning Environment", "author": ["J. Peng", "A.-J. Foug\u00e8res", "S. Deniaud", "M. Ferney"], "venue": "Int. J. of Computer Science Issues, Vol. 7, No. 5", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2010}, {"title": "Skills", "author": ["J. Rasmussen"], "venue": "rules, and knowledge; signals, signs, and symbols, and other distinctions in human performance models\", IEEE Transactions on Systems, Man, and Cybernetics, Vol. 13", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1983}, {"title": "BDI agents: from theory to practice", "author": ["A.S. Rao", "M.P. Georgeff M.P"], "venue": "Proceedings of ICMAS", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 1995}, {"title": "Speech acts", "author": ["J.R.J.R. Searle"], "venue": null, "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1969}, {"title": "The sciences of the artificial", "author": ["H.A. Simon"], "venue": "Cambridge (MA): MIT Press", "citeRegEx": "34", "shortCiteRegEx": null, "year": 1969}, {"title": "N", "author": ["J. Tweedale"], "venue": "Ichalkaranje et al., \"Innovations in multi-agent systems\", Journal of Network and Computer Applications, Vol. 30, No. 3", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}, {"title": "Multiagent Systems: A Modern Approach to Distributed Artificial Intelligence", "author": ["G.G. Weiss"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 1999}, {"title": "Agent-based Software Engineering", "author": ["M. Wooldridge"], "venue": "IEE Proceedings on Software Engineering, Vol. 144, No. 1", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1997}, {"title": "Organizational abstractions in the analysis and design of multi-agent systems", "author": ["F. Zambonelli", "N.R. Jennings"], "venue": "Proc. of Agent-Oriented Software Engineering,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 1957}], "referenceMentions": [{"referenceID": 5, "context": "Our thoughts on the interactional level were inspired by models from human-machine interfaces field, especially those of the \"cognitive engineering\" approach [6].", "startOffset": 158, "endOffset": 161}, {"referenceID": 9, "context": "Then we suggested a first agent model and defined the communication model of these agents [10,11,29].", "startOffset": 90, "endOffset": 100}, {"referenceID": 10, "context": "Then we suggested a first agent model and defined the communication model of these agents [10,11,29].", "startOffset": 90, "endOffset": 100}, {"referenceID": 28, "context": "Then we suggested a first agent model and defined the communication model of these agents [10,11,29].", "startOffset": 90, "endOffset": 100}, {"referenceID": 30, "context": "We then defined the different granularities of these agents by placing them on a scale of behaviours inspired by Ramussen\u2019s three-level scale [31] to describe human operator behaviour.", "startOffset": 142, "endOffset": 146}, {"referenceID": 33, "context": "CS are \"made of many components with many interactions\" [34].", "startOffset": 56, "endOffset": 60}, {"referenceID": 21, "context": "Moreover, according to Morin [22], CS designer \"must have a method that allows to design the multiple points of view, and to move from one point of view to another.", "startOffset": 29, "endOffset": 33}, {"referenceID": 36, "context": "In this sense, Wooldridge [37] and Jennings [19] have argued that agents are a new paradigm for CS engineering; they suggest a satisfactory response to three common techniques for reducing the software complexity: decomposition, abstraction and organization.", "startOffset": 26, "endOffset": 30}, {"referenceID": 18, "context": "In this sense, Wooldridge [37] and Jennings [19] have argued that agents are a new paradigm for CS engineering; they suggest a satisfactory response to three common techniques for reducing the software complexity: decomposition, abstraction and organization.", "startOffset": 44, "endOffset": 48}, {"referenceID": 18, "context": "Jennings [19] raises two hypotheses of adequacy and formation: (1) agent approach can significantly improve our ability to model, design and build complex and distributed software systems, (2) in addition to being able to design and build CS, agent approach is destined to become a major paradigm of software engineering.", "startOffset": 9, "endOffset": 13}, {"referenceID": 35, "context": "From the IAD field [36], ABS, and before that the actor model [17], all withhold the basic principle of the knowledge and information distribution necessary to solve a problem on a set of interacting agents, capable of pursuing and achieving a common goal.", "startOffset": 19, "endOffset": 23}, {"referenceID": 16, "context": "From the IAD field [36], ABS, and before that the actor model [17], all withhold the basic principle of the knowledge and information distribution necessary to solve a problem on a set of interacting agents, capable of pursuing and achieving a common goal.", "startOffset": 62, "endOffset": 66}, {"referenceID": 23, "context": "A software agent, according to the Newell and Simon model [24], is an autonomous information processing system that means it is composed of reception and transmission devices, a processor and a memory (knowledge base).", "startOffset": 58, "endOffset": 62}, {"referenceID": 18, "context": "For a first understanding of the agent paradigm, we can consider that an agent is a computer system located in an environment, in which it can act, possibly in interaction with others agents, and this in complete autonomy [19].", "startOffset": 222, "endOffset": 226}, {"referenceID": 18, "context": "There are many definitions of the agent paradigm [19, 37], supported by typology proposals, but new types of agents continue to emerge [35].", "startOffset": 49, "endOffset": 57}, {"referenceID": 36, "context": "There are many definitions of the agent paradigm [19, 37], supported by typology proposals, but new types of agents continue to emerge [35].", "startOffset": 49, "endOffset": 57}, {"referenceID": 34, "context": "There are many definitions of the agent paradigm [19, 37], supported by typology proposals, but new types of agents continue to emerge [35].", "startOffset": 135, "endOffset": 139}, {"referenceID": 17, "context": "They form intelligent solver networks, weakly bound, working together to solve problems beyond their individual capabilities and knowledge [18].", "startOffset": 139, "endOffset": 143}, {"referenceID": 31, "context": "Among the suggested agent architectures with a cognitive orientation, the BDI model (Belief, Desire, and Intention) is best known [32].", "startOffset": 130, "endOffset": 134}, {"referenceID": 37, "context": "Work in sociology or science organizations have always interested the ABS community, as a source of modelling [38]; the organizational configuration type scale by Mintzberg [21], from hierarchical structure (centralization) to the professional bureaucracy (decentralization), via the \"Adhocracy\" (mutual adjustment between groups), is one example.", "startOffset": 110, "endOffset": 114}, {"referenceID": 20, "context": "Work in sociology or science organizations have always interested the ABS community, as a source of modelling [38]; the organizational configuration type scale by Mintzberg [21], from hierarchical structure (centralization) to the professional bureaucracy (decentralization), via the \"Adhocracy\" (mutual adjustment between groups), is one example.", "startOffset": 173, "endOffset": 177}, {"referenceID": 8, "context": "The inherent problems to the partial agent knowledge in the pursuit of local goals or interlaced agents require the development of advanced coordination mechanisms [9].", "startOffset": 164, "endOffset": 167}, {"referenceID": 4, "context": "Following the definitions proposed for man-machine dialogue [5], it is possible to distinguish these two concepts as follows: interaction is an exchange between agents and their environment, this exchange depends on the intrinsic properties of the environment in which agents are active; agent perception may be passive by receiving messages/signals, or active, when it is the result of voluntary action; communication is an exchange between agents themselves, using a language.", "startOffset": 60, "endOffset": 63}, {"referenceID": 8, "context": "In addition, the concept of interaction is associated with the protocol and interaction pattern concepts, allowing us to specify how and with whom an agent can interact engineering has been suggested [9].", "startOffset": 200, "endOffset": 203}, {"referenceID": 1, "context": "As in the case of human communication, communicative interactions among agents can obviously be linked together and produce information exchanges or dialogues [2].", "startOffset": 159, "endOffset": 162}, {"referenceID": 3, "context": "The ABS design, often questioned from process or methodological perspectives [4], presumes that the designer proceeds with a local vision to respect the fact that each agent manages its own knowledge and actions (autonomy).", "startOffset": 77, "endOffset": 80}, {"referenceID": 2, "context": "The support languages of ABS design are numerous [3].", "startOffset": 49, "endOffset": 52}, {"referenceID": 10, "context": "In [11] we proposed an ABS design method in four stages making extensive reference to AUML (Agent Unified Modelling Language) [1]: (1) making the use case diagrams (services provided by ABS); (2) for each case, sequence diagrams carry out the interactions (message exchanges and scheduling) between the agents involved in this reference case; (3) from the sequence diagrams, which identified agents, objects and their interactions, making the class diagram: objects are associated with classes, exchanged messages (service requests between objects) are translated into operations on classes, parameters associated with operations are translated into class attributes - it may be possible to complete this diagram by a collaboration diagram; (4) from the class diagram, defining the behaviour of each agent (class agent) with a state diagram or an activity diagram.", "startOffset": 3, "endOffset": 7}, {"referenceID": 0, "context": "In [11] we proposed an ABS design method in four stages making extensive reference to AUML (Agent Unified Modelling Language) [1]: (1) making the use case diagrams (services provided by ABS); (2) for each case, sequence diagrams carry out the interactions (message exchanges and scheduling) between the agents involved in this reference case; (3) from the sequence diagrams, which identified agents, objects and their interactions, making the class diagram: objects are associated with classes, exchanged messages (service requests between objects) are translated into operations on classes, parameters associated with operations are translated into class attributes - it may be possible to complete this diagram by a collaboration diagram; (4) from the class diagram, defining the behaviour of each agent (class agent) with a state diagram or an activity diagram.", "startOffset": 126, "endOffset": 129}, {"referenceID": 0, "context": "The description of roles played by various cooperative agents is insufficient since the notion of role, is non-existent from UML, and isn\u2019t the subject of a few short extensions in AUML [1].", "startOffset": 186, "endOffset": 189}, {"referenceID": 5, "context": "Our thoughts about this interactional level were fed by models from the man-machine interface field, especially those of the \"cognitive engineering\" approach [6].", "startOffset": 158, "endOffset": 161}, {"referenceID": 9, "context": "We then proposed a variable granularity agent model based on Rasmussen\u2019s three level scale [10, 11, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 10, "context": "We then proposed a variable granularity agent model based on Rasmussen\u2019s three level scale [10, 11, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 27, "context": "We then proposed a variable granularity agent model based on Rasmussen\u2019s three level scale [10, 11, 28].", "startOffset": 91, "endOffset": 103}, {"referenceID": 22, "context": "Many agent structures known as \u201ccognitive\u201d are inspired by the cycle <perceive, decide, act> [23].", "startOffset": 93, "endOffset": 97}, {"referenceID": 9, "context": "However, our agent model [10, 11] is rather inspired by Rasmussen\u2019s three-level operator [31]: 1) reflex-based behaviour, 2) rule-based behaviour, and 3) knowledge-based behaviour with interpretation, decision and plan (Figure 2).", "startOffset": 25, "endOffset": 33}, {"referenceID": 10, "context": "However, our agent model [10, 11] is rather inspired by Rasmussen\u2019s three-level operator [31]: 1) reflex-based behaviour, 2) rule-based behaviour, and 3) knowledge-based behaviour with interpretation, decision and plan (Figure 2).", "startOffset": 25, "endOffset": 33}, {"referenceID": 30, "context": "However, our agent model [10, 11] is rather inspired by Rasmussen\u2019s three-level operator [31]: 1) reflex-based behaviour, 2) rule-based behaviour, and 3) knowledge-based behaviour with interpretation, decision and plan (Figure 2).", "startOffset": 89, "endOffset": 93}, {"referenceID": 12, "context": "We call actor (or collective agent) a system of cooperative agents in which the behaviour is defined by collective decision tasks and collective coordination tasks [13].", "startOffset": 164, "endOffset": 168}, {"referenceID": 33, "context": "These models are based on the sequential character of the human cognitive system (serialization in the symbolic level), not excluding a certain degree of parallelism in the processing of sensorimotor signals [34].", "startOffset": 208, "endOffset": 212}, {"referenceID": 32, "context": "To communicate with other agents, an agent can exchange messages in syntax of an interaction language based on the concept of speech acts [33].", "startOffset": 138, "endOffset": 142}, {"referenceID": 9, "context": "The main application for this level focused on the modelling and designs of simulation agents for an ABS called SIMBADE [10].", "startOffset": 120, "endOffset": 124}, {"referenceID": 27, "context": "The main application for this level focused on the modelling and designs of configuration agents for an ABS is called APIC [28].", "startOffset": 123, "endOffset": 127}, {"referenceID": 19, "context": "Actors in the configuration access the APIC platform, using a specific \u03bc-tool to their domain [20].", "startOffset": 94, "endOffset": 98}, {"referenceID": 15, "context": "Note that APIC agents, defined by level 2 on our scale (using ECA rules to decide on their actions), were designed as fuzzy [16], in the sense that, not only the data they process are fuzzy (fuzzy knowledge), but their behaviours themselves are fuzzy.", "startOffset": 124, "endOffset": 128}, {"referenceID": 28, "context": "Indeed, the inter/intracommunities interactions are weighted by fuzzy values, this allows to weaken them, strengthen them, or even to inhibit them [29].", "startOffset": 147, "endOffset": 151}, {"referenceID": 28, "context": "The behaviour and knowledge (decision rules) of defined agents is entirely satisfactory for this configuration activity [29].", "startOffset": 120, "endOffset": 124}, {"referenceID": 11, "context": "Other cases of modelling in level 2 have been proposed [12, 13].", "startOffset": 55, "endOffset": 63}, {"referenceID": 12, "context": "Other cases of modelling in level 2 have been proposed [12, 13].", "startOffset": 55, "endOffset": 63}, {"referenceID": 24, "context": "The main application for this level focused on the modelling and design of assistant agents for an ABS called iP\u00e9dagogique [25].", "startOffset": 123, "endOffset": 127}, {"referenceID": 7, "context": "To further validate the model in this third level, we have recently reproduced for modelling five design roles with cognitive agents (<Prescriber>, <Legislator>, <Designer>, <Evaluator>, and <Observer>), to realize a demonstrator with the aim of validating an advanced model of mechanical design [8].", "startOffset": 296, "endOffset": 299}, {"referenceID": 9, "context": "Other cases of modelling have been proposed [10, 27].", "startOffset": 44, "endOffset": 52}, {"referenceID": 26, "context": "Other cases of modelling have been proposed [10, 27].", "startOffset": 44, "endOffset": 52}, {"referenceID": 25, "context": "The main application for this level is focused on the modelling and designs of an agent-based system of cooperative mediation called Mediator [26, 27].", "startOffset": 142, "endOffset": 150}, {"referenceID": 26, "context": "The main application for this level is focused on the modelling and designs of an agent-based system of cooperative mediation called Mediator [26, 27].", "startOffset": 142, "endOffset": 150}, {"referenceID": 19, "context": "The Mediator is designed as a group of agents; each agent has specific skills of cooperation (communication, co-memorization, co-production, coordination, and control_process, that we called the 5-Co [20]).", "startOffset": 200, "endOffset": 204}, {"referenceID": 27, "context": "These communities are seen as actors composed by the fuzzy cooperating agents previously described in the second level [28].", "startOffset": 119, "endOffset": 123}, {"referenceID": 13, "context": "We are now working on a better understanding and implementation of level changes of agent behaviour during their activities [14].", "startOffset": 124, "endOffset": 128}, {"referenceID": 0, "context": "[1] B.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] J.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] F.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] P.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] J.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] S.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] D.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] D.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[19] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] H.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[22] E.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[23] U.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[24] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[25] V.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[26] V.", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "[27] V.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[28] E.", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "[29] E.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "[30] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[31] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[33] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 33, "context": "[34] H.", "startOffset": 0, "endOffset": 4}, {"referenceID": 34, "context": "[35] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 35, "context": "[36] G.", "startOffset": 0, "endOffset": 4}, {"referenceID": 36, "context": "[37] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "[38] F.", "startOffset": 0, "endOffset": 4}], "year": 2011, "abstractText": "A complex system is made up of many components with many interactions. So the design of systems such as simulation systems, cooperative systems or assistance systems includes a very accurate modelling of interactional and communicational levels. The agent-based approach provides an adapted abstraction level for this problem. After having studied the organizational context and communicative capacities of agentbased systems, to simulate the reorganization of a flexible manufacturing, to regulate an urban transport system, and to simulate an epidemic detection system, our thoughts on the interactional level were inspired by human-machine interface models, especially those in \"cognitive engineering\". To provide a general framework for agent-based complex systems modelling, we then proposed a scale of four behaviours that agents may adopt in their complex systems (reactive, routine, cognitive, and collective). To complete the description of multi-level agent models, which is the focus of this paper, we illustrate our modelling and discuss our ongoing work on each level.", "creator": "Adobe Acrobat Pro 10.0.0"}}}