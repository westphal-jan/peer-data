{"id": "1202.3700", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Feb-2012", "title": "Solving Cooperative Reliability Games", "abstract": "comparative dilemma model the allocation of bonuses at joint actions, following considerations such as stability and risk. academics propose theoretically common extension of alliance games, where one may opt to integrate in mass market. in the hybrid dilemma, each agent party \" struggles \" with a certain condition, and hence coalition'next contribution is the probability that its surviving members cannot reach a winning prospect escaping the base game. we study prominent solution concepts concerning such games, discover how to approximate the shapley value and help to tolerate poor core in games with few agent types. we also show only applying weak reliability extension may stabilize the game, making the virtual cpu - economically feasible when the fusion game accepts an incomplete core.", "histories": [["v1", "Tue, 14 Feb 2012 16:41:17 GMT  (219kb)", "http://arxiv.org/abs/1202.3700v1", null]], "reviews": [], "SUBJECTS": "cs.GT cs.AI", "authors": ["yoram bachrach", "reshef meir", "michal feldman", "moshe tennenholtz"], "accepted": false, "id": "1202.3700"}, "pdf": {"name": "1202.3700.pdf", "metadata": {"source": "CRF", "title": "Solving Cooperative Reliability Games", "authors": ["Yoram Bachrach", "Reshef Meir", "Michal Feldman", "Moshe Tennenholtz"], "emails": [], "sections": [{"heading": null, "text": "Cooperative games model the allocation of profit from joint actions, following considerations such as stability and fairness. We propose the reliability extension of such games, where agents may fail to participate in the game. In the reliability extension, each agent only \u201csurvives\u201d with a certain probability, and a coalition\u2019s value is the probability that its surviving members would be a winning coalition in the base game. We study prominent solution concepts in such games, showing how to approximate the Shapley value and how to compute the core in games with few agent types. We also show that applying the reliability extension may stabilize the game, making the core non-empty even when the base game has an empty core."}, {"heading": "1 Introduction", "text": "Consider a communication network connecting a source and target vertices, where each link is controlled by a self-interested agent. Any link may fail, and if such failures result in the elimination of all paths between the source and target, information cannot be sent between them. Consider a planner aiming to maximize the probability of allowing communication between the source and target. Each link has its own probability of failure, and together with the network structure they determine the probability of connectivity between the source and target. When the planner is only allowed to use a certain subset of the links, we may consider links outside this set as failed links. Given a reward for achieving such connectivity, what is a reasonable way of allocating this reward between the agents? Which links are the most critical?\nThis domain can be modeled as a cooperative game, which we call the network reliability game. In this\ngame we are uncertain which links would survive, but link failures are independent. The value of a link subset, called a coalition, is the probability of achieving connectivity using only these links. Game theoretic solutions find ways of allocating the reward between the agents, under considerations of fairness and stability. The most prominent solution aiming at fairness is the Shapley value [19], which is a measure of the criticality of each edge to achieving connectivity. The core [13] is the most common solution considering stability, and contains all allocations where no subset of agents is incentivized to defect and form an alternative network. Applying these solutions requires finding tractable algorithms for computing them . Unfortunately, even in domains where determining the value of a subset of agents is easy, computing these solutions may be hard. Further, the problem of computing the value of a coalition in the network reliability game is the famous network reliability problem, which is known to be computationally hard [16], making it even harder to apply the required solutions.\nOur contribution We propose the reliability extension of cooperative games, providing a general framework for studying the effects of uncertain failures. We focus on techniques for solving such games. We show how to approximate the Shapley value in such games using sampling, and how to accurately compute the core in games with few agent types. We also show that in simple games (such as our network game), reducing the reliability of agents can only expand the core, surprisingly making the game more stable. Section 2 provides some definitions, Section 3 considers the Shapley value in network settings, Section 4 extends the results for general domains and Section 5 examines the core. We conclude in Section 6."}, {"heading": "2 Preliminaries", "text": "A transferable utility cooperative game is composed of a set of n agents, N , and a characteristic function\nv : 2N \u2192 R mapping any subset (coalition) of the agents to a real value indicating the total utility these agents achieve together. By convention v(\u2205) = 0. A game is monotone if for all coalitions C \u2032 \u2282 C we have v(C \u2032) \u2264 v(C). A game H = \u3008N, v\u3009 is simple, if v only gets values of 0 or 1 (v : 2N \u2192 {0, 1}). We say coalition C \u2282 N wins if v(C) = 1, and say it loses if v(C) = 0. An agent i is critical in a winning coalition C if her removal from that coalition would make it a losing coalition: v(C) = 1, v(C \\ {i}) = 0. A game is convex if for any A,B \u2286 N we have v(A \u222a B) \u2265 v(A) + v(B)\u2212 v(A \u2229B).\nThe characteristic function defines what gains a coalition achieves. Cooperative game theory provides solution concepts that define how the participants might agree to distribute the gains. An imputation p = (p1, . . . , pn) is a division of the gains among the agents, where pi \u2265 0 and \u2211n i=1 pi = v(N). The value pi is the payoff of agent i, and the payoff of a coalition C is p(C) = \u2211 i\u2208C pi.\nThe core A basic requirement for a good imputation is that for any agent i \u2208 C, we have pi \u2265 v({i}), otherwise i is better off working alone rather than as a part of C (which only offers her pi). Similarly, a coalition B blocks imputation p if p(B) < v(B), since B\u2019s members can defect, derive the gains v(B), give each member i \u2208 B its previous share pi, and still some utility remains, so each member can get more. If a blocked imputation is chosen, the coalition is unstable. The core is the set of all imputations that are not blocked by any coalition. That is, if p \u2208 core(H), then for any coalition C we have p(C) \u2265 v(C). The core is the prominent solution concept focusing on stability [13], but it may be empty or contain more than one imputation.\nThe Shapley value The Shapley value focuses on fairness rather than on stability, by evaluating the contribution of each agent to the grand coalition N . Further, it is the unique imputation that fulfills important fairness axioms [19]. The Shapley value relies on the notion of a marginal contribution of an agent in a permutation, the amount of additional utility generated when that agent joins the coalition of her predecessors in the permutation. We denote by \u03c0 \u2208 Sn a permutation of the agents, so \u03c0 : {1, . . . , n} \u2192 {1, . . . , n} and \u03c0 is onto. Denote by \u0393\u03c0i the predecessors of i in \u03c0, so \u0393\u03c0i = {j|\u03c0(j) < \u03c0(i)}. Agent i\u2019s marginal contribution in the permutation \u03c0 is m\u03c0i = v(\u0393\u03c0i \u222a {i}) \u2212 v(\u0393\u03c0i ). Note that in a simple game an agent has a marginal contribution of 1 in the permutation \u03c0 iff it is critical for the coalition \u0393\u03c0i . The Shapley value of an agent is her marginal contribution averaged across all possible agent permutations.\nDefinition 1. The Shapley value is the imputation (\u03c61(v), . . . , \u03c6n(v)) where\n\u03c6i(v) = 1 n! \u2211 \u03c0\u2208Sn m\u03c0i = 1 n! \u2211 \u03c0\u2208Sn (v (\u0393\u03c0i \u222a {i})\u2212 v (\u0393\u03c0i ))\nOne interpretation of \u201cpower\u201d is an agent\u2019s a priori probability of being critical in determining the outcome of the game. Thus the Shapley value measures an agent\u2019s power to affect the outcome of the game."}, {"heading": "3 Network Reliability Games", "text": "Consider the network reliability domain discussed in Section 1. Suppose the the planner obtains a reward of $1 for achieving s \u2212 t-connectivity. We can define the value of a set C of edges as the planner\u2019s expected reward when she is only allowed to use the edges in C. Since the reward is $1, the value of C is the probability of the planner to achieve connectivity when only allowed to use the edges of C.\nConsider a directed graph G = \u3008V,E\u3009 with a source s \u2208 V and target t \u2208 V , where each edge ei is controlled by an agent ai and has a failure probability of 1\u2212 ri \u2208 [0, 1]. Thus an edge ei survives with probability ri. Given a subset S \u2286 E of the edges, we use \u03b4S as the characteristic denoting whether S is successful, i.e. whether it allows connectivity between s and t:\n\u03b4S = { 1 if GS = \u3008V, S\u3009 has a path from s to t 0 otherwise\nThe graph\u2019s structure determines \u03b4S , which can be viewed as a function mapping any coalition S to {0, 1}, denoting whether S is successful or not. We can define a game with a characteristic function vbase where agents are the edges, and the value of coalition S is vbase(S) = 1 if S has a path from s to t and vbase(S) = 0 otherwise, so vbase(S) = \u03b4S . However, such a definition does not take into account different edge failure probabilities. This will be handled by the relaiablity extension defined next, which we generalize to other set-systems in Section 4.\nSuppose the planner can only use the edges C \u2286 E. It cannot use edges in E \\ C, and even the edges in C may not survive. Each edge i \u2208 C survives with probability ri, so from the original edges E we get a set C \u2032 \u2286 C of surviving edges. Denote the probability that the edges surviving from C are exactly those in C \u2032\nas Pr(C \u2032|C) = \u220f i\u2208C\u2032 ri \u00b7 \u220f\nj\u2208C\\C\u2032(1\u2212rj). The success of the surviving edges is a random variable, and the probability of the surviving edges to be successful is:\n\u2211 C\u2032\u2286C Pr(C \u2032|C) \u00b7 \u03b4C\u2032 = \u2211 C\u2032\u2286C \u220f i\u2208C\u2032 ri \u220f j\u2208C\\C\u2032 (1\u2212 rj) \u00b7 \u03b4C\u2032 . Thus, the above expression is the probability that the planner would achieve its goal of sending a message from s to t when it is only allowed to use the edges C \u2286 E.1 Any subset C \u2286 E the planner is allowed to use results in a different probability of connectivity between s and t. We define a game where the edges are the agents, and the characteristic function v : 2E \u2192 R maps any subset of edges C to the probability that the planner would achieve connectivity between s and t when only the edges C are at its disposal.\nDefinition 2 (The Network Reliability Game). Given a graph G = \u3008V,E\u3009 and survival probabilities ri for each ei \u2208 E, the network reliability game is a game over the agents E with the characteristic function:\nv(C) = \u2211 C\u2032\u2286C \u220f i\u2208C\u2032 ri \u00b7 \u220f j\u2208C\\C\u2032 (1\u2212 rj)  \u00b7 \u03b4C\u2032 . As an example consider a network with one edge e connecting the source to the target directly, and a parallel path C of 3 edges connected serially and forming a path between the source and target. Assume each link has a survival probability of 12 . Consider the coalition C of the serial edges only. To achieve connectivity all three must survive, an event whose probability is 1 23 = 1 8 . The value of this coalition C is thus v(C) = 1 8 . Adding the direct link e to C increases this probability to v(C \u222a {e}) = 1\u2212 ( 78 \u00b7 1 2 ).\nThe edges in the network may be unequal in their criticality in achieving connectivity between s and t. Some edges have little influence on the probability of achieving the goal because of their location in the network. Others have little influence because their survival probability is low, so including them is unlikely to change the outcome. How should we quantify all these effects to find reliability problems in the network?\nA key component in such an analysis is the marginal contribution of an edge in various contexts. One definition of a \u201ccontext\u201d is a permutation of the agents (edges). Using this definition we can use the Shapley value to rank edges by their impact on the probability of attaining the goal. Previous work already suggests game theoretic solutions (including the Shapley value) for analyzing network reliability problems [12, 5, 1, 4].\n1When the planner obtains one unit of reward for achieving connectivity between s and t, this expression is also the expected reward it obtains.\nHowever, these approaches do not model different link failure probabilities. Unfortunately, computing solutions such as the Shapley value are computationally hard in many domains. One way to overcome this difficulty is using approximation algorithms, such as sampling various contexts and computing an agent\u2019s contribution in each. The average contribution an agent has in the sampled contexts is used to estimate its average marginal contribution across all contexts. Computing m\u03c0i = v(\u0393 \u03c0 i \u222a {i})\u2212 v(\u0393\u03c0i ), the contribution in context \u03c0, requires computing the values of two coalitions. In the case of the network reliability game, this is the famous network reliability problem, known to be #P-hard [16]. Thus, a na\u0308\u0131ve sampling approach is intractable for this problem.\nAlthough solving network reliability exactly is hard, this problem is approximable through sampling. We show how to compute the Shapley value for the network reliability game using a sampling approach. The value of a coalition C \u2286 N is given by:\nv(C) = \u2211 S\u2286C \u03b4SPr(S|C) = \u2211 S\u2286C \u03b4S \u220f i\u2208S ri \u220f j\u2208C\\S (1\u2212 rj)\nThe contribution of x \u2208 N in permutation \u03c0 is:\nm\u03c0i = v(\u0393 \u03c0 i \u222a {i})\u2212 v(\u0393\u03c0i ) = \u2211\nS\u2286\u0393\u03c0i \u222a{i} \u03b4SPr(S|\u0393\u03c0i \u222a {i})\u2212 \u2211 S\u2286\u0393\u03c0i \u03b4SPr(S|\u0393\u03c0i )\nWe examine qi = \u2211\nS\u2286\u0393\u03c0i \u222a{i} \u03b4SPr(S|\u0393\u03c0i \u222a {i}):\nqi = \u2211\nS\u2286\u0393\u03c0i \u222a{i}\n\u03b4SPr(S|\u0393\u03c0i \u222a {i})\n= \u2211\nS\u2286\u0393\u03c0i \u222a{i}|i\u2208S\n\u03b4SPr(S|\u0393\u03c0i \u222a {i}) + \u2211\nS\u2286\u0393\u03c0i \u222a{i}|i/\u2208S\n\u03b4SPr(S|\u0393\u03c0i \u222a {i})\n= \u2211 S\u2286\u0393\u03c0i \u03b4S\u222a{i} \u00b7 ri \u00b7 Pr(S|\u0393\u03c0i )\n+ \u2211 S\u2286\u0393\u03c0i \u03b4S \u00b7 (1\u2212 rr) \u00b7 Pr(S|\u0393\u03c0i )\nWe now express m\u03c0i in terms of v(\u0393 \u03c0 i ):\nm\u03c0i =ri \u2211 S\u2286\u0393\u03c0i \u03b4S\u222a{i}Pr(S|\u0393\u03c0i ) + (1\u2212 ri)v(\u0393\u03c0i )\u2212 v(\u0393\u03c0i )\n=ri \u2211 S\u2286\u0393\u03c0i \u03b4S\u222a{i}Pr(S|\u0393\u03c0i )\u2212 ri \u2211 S\u2286\u0393\u03c0i \u03b4SPr(S|\u0393\u03c0i )\n=ri \u2211 S\u2286\u0393\u03c0i (\u03b4S\u222a{i} \u2212 \u03b4S)Pr(S|\u0393\u03c0i )\nThe Shapley value of agent i in the game H with characteristic function v can be written as\n\u03c6i(v) = 1 |N |! \u2211 \u03c0\u2208Sn m\u03c0i (Def. 1)\n= ri |N |! \u2211 \u03c0\u2208Sn \u2211 S\u2286\u0393\u03c0i (\u03b4S\u222a{i} \u2212 \u03b4S)Pr(S|\u0393\u03c0i )\n= ri |N |! \u2211 \u03c0\u2208Sn  \u2211 S\u2286\u0393\u03c0i (\u03b4S\u222a{i} \u2212 \u03b4S) \u220f j\u2208S rj \u220f j\u2032\u2208\u0393\u03c0i \\S (1\u2212 rj\u2032)  Consider selecting a permutation of N uniformly at random and constructing a random variable by sampling the survival of each of the agents in \u0393\u03c0i : Algorithm 1. ShapleyApproxBase(v) :\n1. Select \u03c0 \u2208 Sn uniformly at random from all permutations over N .\n2. Set \u0393\u03c0i to be the predecessors of i in \u03c0.\n3. Set li = 1 with probability ri and li = 0 with probability 1\u2212 ri.\n4. If li = 0 return Zi = 0.\n5. For each j \u2208 \u0393\u03c0i set lj = 1 with probability rj and set lj = 0 with probability 1\u2212 rj.\n6. Denote S = {j \u2208 \u0393\u03c0i |lj = 1} (survivor set)\n7. If \u03b4S\u222a{i} \u2212 \u03b4S = 1 then set Zi = 1 otherwise set Zi = 0.\n8. Return Zi\nLemma 1. Let Zi be the random variable generated by the above algorithm. Then the expected value of Zi is the Shapley value of x so: E(Zi) = \u03c6i(v).\nProof. We choose \u03c0 uniformly at random from the set Sn of all edge permutations, so by linearity of expectation:\nE(Zi) =\u2211 \u03c0\u2208Sn  ri |N |! \u2211 S\u2286\u0393\u03c0i \u220f j\u2208S rj \u220f j\u2032\u2208\u0393\u03c0i \\S (1\u2212 rj\u2032) \u00b7 (\u03b4S\u222a{i} \u2212 \u03b4S)  = \u03c6i(v),\nas required.\nWe can repeat the above algorithm k times, to obtain multiple random samples chosen i.i.d from the same distribution. We can then take an average over all samples as a better approximation for the Shapley value \u03c6i(v).\nAlgorithm 2. ShapleyApprox(v, k) :\n1. Z \u2032 = 0\n2. Repeat k times:\n(a) Zi = ShapleyApproxBase(v) (b) Z \u2032 = Z \u2032 + Zi\n3. return Z = 1k \u00b7 Z \u2032\nThe quality of the estimate Z returned by Algorithm 2 depends on k, the number of samples used. We use Hoeffding\u2019s inequality to evaluate the approximation quality of Z for \u03c6i(v). Our goal is to obtain the required number of times k we must sample such that with a high probability 1\u2212 \u03b4 we obtain an approximation Z to \u03c6i(v) that is within an distance from the true value, so |Z \u2212 \u03c6i(v)| \u2264 . Theorem 1 (Hoeffding\u2019s inequality [14]). Let X1, . . . , Xk be independent random variables, where all vairables are bounded s.t. Xt \u2208 [a, b], and let X = \u2211k t=1Xt. Then the following inequality holds.\nPr(|X \u2212 E[X]| \u2265 k ) \u2264 2 exp ( \u2212 2 k 2 2\n(b\u2212 a)2k ) We note that all Zt are numbers between 0 and 1 and that E[kZ] = E[Z \u2032] = k \u00b7 \u03c6i(v). Thus:\nPr(|Z\u2212\u03c6i(v)| \u2265 ) = Pr(|kZ\u2212k\u03c6i(v)| \u2265 k ) \u2264 2e\u22122 k 2\nWe next compute the required samples k to bound this probability below \u03b4. Theorem 2 (Power Confidence Interval). Given a required accuracy > 0 and confidence 1 \u2212 \u03b4 the interval [Z \u2212 , Z + ], where Z is the result of Algorithm 2, contains \u03c6i(v) with probability 1 \u2212 \u03b4 provided that the number of samples is at least: k \u2265 ln 2 \u03b4\n2 2 . Similarly, given a number of samples k and a required confidence of 1 \u2212 \u03b4, a confidence interval that contains the correct value \u03c6i(v) with probability 1 \u2212 \u03b4 is[ Z \u2212 \u221a 1 2k ln 2 \u03b4 , Z + \u221a 1 2k ln 2 \u03b4\n] Proof. We apply Hoeffding\u2019s inequality to make bound the error probability at \u03b4 and obtain:\nPr(|Z \u2212 \u03c6i(v)| \u2265 ) \u2264 2 e\u22122 k 2 \u2264 \u03b4\nExtracting the required and k we get: \u22122 k 2 \u2264 ln \u03b42 , or alternatively: 2 \u2265 \u2212 ln \u03b4 2\n2 k . Thus the relation between the number of samples k, the required confidence \u03b4 and the accuracy is:\n\u2265 \u221a\n1 2k ln 2 \u03b4\nk \u2265 ln 2\u03b4 2 2 ,\nas required."}, {"heading": "4 General Reliability Games", "text": "Section 3 has focused on a network domain with a specific goal connectivity goal when edges are susceptible to failures. However, a similar approach can be taken for other network goals, such as achieving a minimal bandwidth or minimizing latency. Similar situations also arise not only in network environments. Generally, consider any domain where a set of agents can cooperate on a task, where some subsets of the agents are successful and can achieve the task, while others cannot do so. Such a domain can be described as a simple game H over the set N of agents, with a characteristic function v : 2N \u2192 {0, 1}. We call this game v the base game. Now consider the case where each agent i \u2208 N only survives with probability ri and is eliminated with probability 1 \u2212 ri. In other words, given that the coalition C is formed, each agent i \u2208 C only survives with probability ri, so the coalition is transformed into the coalition C \u2032 \u2286 C of surviving agents. The value achieved by the surviving coalition C \u2032 is a random variable. The reliability extension of the base game is a new game, where a coalition C\u2019s value is the probability that after eliminating agents according to the individual survival probabilities, the surviving agents C \u2032 would win the game.2\nDefinition 3 (The Reliability Extension). Given a simple cooperative game H with characteristic function v : 2N \u2192 {0, 1} over the n agents N and the survival probability vector r = (r1, . . . , rn) (where 0 \u2264 ri \u2264 1), we define the reliability game Hr over the same agent set N with the characteristic function vr as follows.\nvr(C) = \u2211 C\u2032\u2286C \u03b1r(C \u2032|C) \u00b7 v(C \u2032), (1)\nwhere \u03b1r(C \u2032|C) = \u220f i\u2208C\u2032 ri \u00b7 \u220f j\u2208C\\C\u2032(1\u2212 rj).\nNote that \u03b1r(C \u2032|C) is Pr(C \u2032|C) according to the survival probability vector r.\nThe network reliability game is the reliability extension of the base game v where agents are the edges a coalition of edges wins if it contains an s\u2212 t-path. We denoted the value of coalition C \u2286 E in the base game as \u03b4C , so \u03b4 is the characteristic function of the base game. We show that our Shapley approximation algorithm can be used for any reliability extension game. Corollary 1. Let H be a simple cooperative game, with characteristic function v : 2N \u2192 {0, 1}, and let Hr = \u3008N, vr\u3009 be its reliability extension using the probability vector r. Given an algorithm for computing the\n2We focus on simple base games. It is easy to extend the results to general (non-boolean) games, by setting a coalition\u2019s value in the reliability extension to its expected revenue after retaining only the surviving agents.\nbase characteristic function v(C) (for any C \u2286 N), it is possible to approximate the Shapley \u03c6i(vr) of agent i \u2208 N in the reliability extension in polynomial time (in the confidence \u03b4 and accuracy ).\nProof. The analysis in Section 3 used \u03b4S to denote the value of a coalition S in the base game, and only assumed that given S one can compute \u03b4S in polynomial time. In the network reliability game this required testing for an s \u2212 t-path in the induced graph. In a general reliability game v, \u03b4C is the value of the coalition C in the base game, so \u03b4C = v(C). Thus, given a polynomial algorithm to compute v(C) we can evaluate \u03b4C for any coalition C in polynomial time. Due to Theorem 2, to achieve a confidence \u03b4 and accuracy we must run algorithm 2 with a number of samples k that is polynomial in and \u03b4. Each sample results in a call to Algorithm 1, which has a polynomial running time when evaluating \u03b4C can be done in polynomial time. Thus, the total running time of Algorithm 1 with the required k is also polynomial."}, {"heading": "5 The Core of Reliability Games", "text": "A natural question is how stability (in terms of strategic behavior) is affected as reliability decreases. While generally various effect are possible, we give a conclusive answer regarding convex and simple games. We show that if a simple or convex base game is stable (i.e. has a non-empty core), then any reliability extension of it is still stable. Further, the core of an extended simple game can be easily characterized.\nTheorem 3. Let H = \u3008N, v\u3009 be a convex game. For any probability vector r the reliability extension Hr has a non-empty core. Conversely, if H is not convex, then there is at least one extension with an empty core.\nProof sketch. A game v is know to be convex if and only if every subgame of v has a non-empty core [18]. For every C \u2208 2N \\ \u2205, let pC be a payoff vector in the core of v|C (the subgame of v that contains only players from C). Recall \u03b1r from Definition 3. It is easy to verify that the payoff vector pr = \u2211 C\u22082N\\\u2205 \u03b1\nr(C|N)pC is in the core of vr.3 First note that pr is a valid payoff vector, i.e. that pr(N) = vr(N). Indeed, pr(N) = \u2211 C\u22082N\\\u2205 \u03b1\nr(C|N)pC(N) =\u2211 C\u22082N\\\u2205 \u03b1 r(C|N)pC(C) = \u2211 C\u22082N\\\u2205 \u03b1 r(C|N)v(C) = vr(N), where the last equality is just the definition of vr (see Eq. (1)). It is also easy to show that no coalition S can block pr. The second direction follows trivially, as any subgame v|C is a reliability extension of v where ri = 1 iff i \u2208 C and 0 otherwise.\n3Note that pC only set the payoff of agents in C. We therefore pad it with zeros, i.e. pC(i) = 0 for all i /\u2208 C."}, {"heading": "5.1 Simple games", "text": "Even if the base game is simple, the reliability extension is typically not a simple game. Indeed, unless all the components of the probability vector r are either 0 or 1, in the reliability extension some coalitions are going to have a fractional value. We first discuss veto agents. In a simple game i is a veto agent if it is criticcal in every coalition, i.e. if i /\u2208 C then v(C) = 0. In a non-simple game i is a veto agent if no coalition has a strictly positive value without the agent. Lemma 2 (The Reliability Extension Preserves Veto Agents). Let v be a simple monotone game used as a base game. If i \u2208 N is a veto agent in the base game v, then for any probability vector r = (r1, . . . , rn), it holds that i is a veto agent in vr.\nProof. Let i be a veto agent in v. Assume by contradiction that it is not a veto agent in vr, so for some coalition C that i /\u2208 C we have vr(C) > 0. However, by definition of the reliability extension vr(C) =\u2211\nC\u2032\u2286C \u03b1 r(C \u2032|C) \u00b7 v(C \u2032), so at least one component in the sum must be strictly positive. Denote this component as \u03b1r(C\u2217|C)\u00b7v(C\u2217). Thus we have v(C\u2217) > 0. By monotonicity, since C\u2217 \u2286 C then 0 < v(C\u2217) \u2264 v(C) in contradiction to i being a veto agent.\nA known folklore theorem relates the core and veto agents in simple games. It states that in a simple game the core is empty if and only if the game has no veto agents. Further, in a simple game with veto agents, any imputation that allocates 0 to the non-veto agents and allocates v(N) in total to the veto agents (in any way) is in the core. Corollary 2. Let v be a simple monotone game to be used as a base game. If v has a non-empty core then for any probability vector r the reliability extension vr of v has a non-empty core.\nProof. First note that a simple game with a non-empty core is always convex. This is simply since the game must have a veto agent, and therefore every two winning coalitions intersect. Thus v(S \u222a T ) + v(S \u2229 T ) \u2265 v(S)+ v(T ) (there is actually an equality). Therefore, by Theorem 3, the core of vr is non-empty.\nBy Theorem 3 and Lemma 2, we can also find imputations in the core, when the core of the base game is non-empty. One simply allocates all the value of the game to the veto agents of the base game, in an arbitraty way. Since all veto agents must be contained in every subgame v|C with value greater than zero, this results in a stable imputation pr.\nThe folklore theorem also shows the converse regarding veto agents and the core: if a simple game has no\nveto agents then the core is empty. In the reliability extension of a game the core may be non-empty even when the base game has no veto agents.\nObservation 1. There exist a simple game v with no veto agents (and thus with an empty core) such that its reliability extension for some probability vector (r1, . . . , rn) has a non-empty core.\nProof. Consider the network reliability game with five edges in Figure 1. It is easy to see that for a coalition to win in the base game it must contain at least one of the following edge subsets {a, b}, {c, d}, {a, e, d}. The base game has no veto agent - edges a, b and e are not veto agents as the coalition {c, d} wins without them, and edges c, d are not veto agents as the coalition {a, b} wins without them. Thus the base connectivity game has an empty core.\nIt is easy to verify that the resulting reliability extension game for this probability vector has the following values: v({a, b} = v({c, d}) = 0.05, v({a, d, e} = 0.125, v({a, b, c, d}) = 0.0975, v({a, b, c, d, e}) = 0.19875. For all the other edge subsets, their value is either 0, or the maximal value over the previous subsets that they contain. Consider the following imputation ra = rc = 0, rb = rd = 0.05 and re = v(N) \u2212 rb \u2212 rd = 0.09875. It is easy to verify that for every edge subset C we have p(C) = \u2211 i\u2208C ri \u2265 v(C) (to see that this holds, one needs only consider the previously discussed coalitions and verify the core constraint holds for them). Since this is a core imputation, the core is not empty and we have a simple game with an empty core whose reliability extension has a non-empty core.\nConsider the same game where e is eliminated from the base game. The base game still has an empty core. The extension of this game (with the same survival probabilities for {a, b, c, d}) also has an empty core.\nObservation 1 shows that although applying the reliability extension (for any probability vector) to a simple game can never eliminate the core if it exists, applying it may or may not make the core non-empty when the original game had an empty core. We have not been able to construct a polynomial algorithm for testing whether the core is empty for general reliability games."}, {"heading": "5.2 Cores of Reliability Games With Few Agent Types and Survival Probabilities", "text": "We provide an algorithm for finding core imputations in reliability games with few survival probabilities and agent types. We first discuss typed-games. We say that two agents i, j \u2208 N are equivalent if for any coalition C such that i, j /\u2208 C we have v(C \u222a {i}) = v(C \u222a {j}). Typed-games consider equivalence classes of agents. A typed game is a game with a set T of agent types (t1, . . . , tk), where each agent i \u2208 N has a type t(i) \u2208 T and the value v(C) of a coalition C only depends on the types of the agents in C. Given a coalition C we denote qj(C) = |{i \u2208 C|t(i) = tj}| (i.e. the number of agents of type tj in C), and #T (C) = (q1(C), . . . , qk(C)). In a typed-game we require that if for two coalitions A,B we have #T (A) = #T (B) then v(A) = v(B). A coalition\u2019s value only depends on the quantities of agents of each type, so we can express the characteristic function as v : (N \u222a {0})k \u2192 R, where v(q1(C), q2(C), . . . , qk(C)) stands for the value v(C) of any coalition C that contains qj agents of type tj .\nOur algorithm operates on a reliability extension game vr, where the base game v is a typed-game where the number of different agents types is bounded by a constant k. We further assume that the survival probability vector r has a constant number m of different probabilities. Thus, each ri \u2208 R = {r1, r2, . . . , rm} (where R is a set of m different probability values). We call such games limited reliability games.\nGiven an agent i in the reliability extension vr, we denote its type in the base game as tbase(i). We further note that if two agents i, j have the same type in the base game (tbase(i) = tbase(j)), and both have the same survival probability (ri = rj), then the two agents are equivalent in the reliability extension (as can be seen directly from the formula for vr(C) in Definition 3). Both k,m are constants, so w.l.o.g. we assume that agents of the same type also have the same survival probability, and are therefore equivalent (this only increases the number of types from k to mk).\nConsider a coalition C such that #T (C) = (q1, . . . , qk). We denote the probability that exactly w of type ti would survive as Pi(w,C). we have Pi(w,C) = ( qi(C) w ) (ri)w(1\u2212 ri)(qi(C)\u2212w). We can then\nexpress the value of every coalition as follows:\nvr(C) = q1(C)\u2211 w1=0 . . . qk(C)\u2211 wk=0 k\u220f i=0 Pi(wi, C)v(w1, . . . , wk).\nSince k is constant and qi(C) \u2264 n, we can compute v(C) using this formula in time O(nk), which is polynomial in the number of agents.\nWe now turn to finding core imputations. The core can be defined using a simple feasibility linear program over the variables p1, . . . , pn that has a constraint for any coalition C, stating the \u2211 i\u2208C pi \u2265 v(C). However, since the number of different coalitions is 2n, this program has an exponential number of constrains, so it is intractable to use it find core imputations. To avoid this problem, use the following well-known folklore theorem regarding cooperative games: if the core is non-empty then there exists a core imputation p = (p1, . . . , pn) where for any two agents i, j that are equivalent we have pi = pj . In other words, if the core is non-empty then it contains an imputation where all agents of the same type have the same payoff.\nIn a limited reliability game we have a constant number k of agent types, so we can maintain a variable for each extended type. Denote the payment for an agent of base type ti by p(i) (where 1 \u2264 i \u2264 k). We now construct a feasibility linear program over the p(i) variables. We say that a coalition is of profile q = (q1, . . . , qk) if #T (C) = q (i.e. if the coalition contains the specified amounts of agents of each extended type). There are k types and n agents, so the number of different coalition profiles is at most nk, polynomial in the number of agents (as k is constant). All payoffs of agents of the same type are identical, thus for every coalition C of profile q, p(C) = \u2211k i=1 qip(i). Finally, we have the following core constraint for each coalition profile q:\nk\u2211 i=1 qip(i) \u2265 v(q1, . . . , qk).\nWe therefore have a linear program over k variables, p(1), . . . , p(k) with a polynomial number of constrains. If we solve this program (e.g. using the ellipsoid method), we obtain a core imputation. If there is no solution, then the core is empty."}, {"heading": "6 Conclusions and Related Work", "text": "We proposed the reliability extension of cooperative games, and discussed algorithms for solving this extension. Solving cooperative games has been well-studied and solutions have been offered for various representations [10, 6, 8] and even for games with uncertain payoffs [21]. To our knowledge, this is the first paper to consider computational issues in cooperative\ngames with uncertain rewards due to independent failures. Although computing the Shapley value is hard in various domains, several approximation methods have been suggested [10, 9, 11]. Our sampling approach for approximating the Shapley value is similar to [3], but does not assume a method for computing the characteristic function of any coalition in polynomial time (as mentioned, for the network reliability game, computing a coalition\u2019s value is #P-hard). We also showed how to compute the core when the base game has veto agents and for limited reliability games, and noted important differences between the core of a simple game and the core of its extension. We used game theoretic solutions to find reasonable reward allocations. Other applications of such solutions include analyzing prediction markets [7] and measuring inconsistencies in probabilistic knowledge bases [20].\nSome questions remain open. On the conceptual level, it is important to better characterize the conditions on the base game and survival probability that guaranty the non-emptiness of the core. On the algorithmic level, natural questions from computational game theory should be answered for this new rich family of games. What algorithms can compute the core of unrestricted reliability games? Can the Shapley value be exactly computed in restricted forms of these games? Can one tractably compute other solutions such as the kernel or least-core (see [15]) and the Cost of Stability [2, 17] in such games?\nAcknowledgment The third author is partially supported by the Israel Science Foundation (grant number 1219/09) and by the Leon Recanati Fund of the Jerusalem school of business administration."}], "references": [{"title": "Power indices in spanning connectivity games", "author": ["H. Aziz", "O. Lachish", "M. Paterson", "R. Savani"], "venue": "AAIM, pages 55\u201367,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2009}, {"title": "The cost of stability in coalitional games", "author": ["Y. Bachrach", "E. Elkind", "R. Meir", "D. Pasechnik", "M. Zuckerman", "J. Rothe", "J. Rosenschein"], "venue": "SAGT, pages 122\u2013134. Springer,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "Approximating power indices: theoretical and empirical analysis", "author": ["Y. Bachrach", "E. Markakis", "E. Resnick", "A. Procaccia", "J. Rosenschein", "A. Saberi"], "venue": "Autonomous Agents and Multi-Agent Systems, 20(2):105\u2013122,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2010}, {"title": "Power in threshold network flow games", "author": ["Y. Bachrach", "J. Rosenschein"], "venue": "Autonomous Agents and Multi-Agent Systems, 18(1):106\u2013132,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2009}, {"title": "Power and stability in connectivity games", "author": ["Y. Bachrach", "J. Rosenschein", "E. Porat"], "venue": "AAMAS, pages 999\u20131006,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "Cooperative Games on Combinatorial Structures", "author": ["J.M. Bilbao"], "venue": "Kluwer Publishers,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2000}, {"title": "Prediction markets, mechanism design, and cooperative game theory", "author": ["V. Conitzer"], "venue": "UAI,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Complexity of determining nonemptiness of the core", "author": ["V. Conitzer", "T. Sandholm"], "venue": "ACM EC, pages 230\u2013231,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2003}, {"title": "Computing Shapley values, manipulating value division schemes, and checking core membership in multi-issue domains", "author": ["V. Conitzer", "T. Sandholm"], "venue": "AAAI,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "On the complexity of cooperative solution concepts", "author": ["X. Deng", "C.H. Papadimitriou"], "venue": "Math. Oper. Res., 19(2):257\u2013266,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1994}, {"title": "A randomized method for the Shapley value for the voting game", "author": ["S. Fatima", "M. Wooldridge", "N. Jennings"], "venue": "AAMAS, pages 955\u2013962,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "Network formation with heterogeneous players", "author": ["A. Galeotti", "S. Goyal", "J. Kamphorst"], "venue": "Games and Economic Behavior, 54(2):353\u2013372,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2006}, {"title": "Some theorems on n-person games", "author": ["D.B. Gillies"], "venue": "PhD thesis, Princeton University,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1953}, {"title": "Probability inequalities for sums of bounded random variables", "author": ["W. Hoeffding"], "venue": "Journal of the American Statistical Association, 58(301):13\u201330,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1963}, {"title": "A course in game theory", "author": ["M. Osborne", "A. Rubinstein"], "venue": "MIT press,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1999}, {"title": "The complexity of counting cuts and of computing the probability that a graph is connected", "author": ["J. Provan", "M. Ball"], "venue": "SIAM Journal on Computing, 12:777,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1983}, {"title": "The cost of stability in network flow games", "author": ["E. Resnick", "Y. Bachrach", "R. Meir", "J. Rosenschein"], "venue": "MFCS, pages 636\u2013650. Springer,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Cores of convex games", "author": ["L. Shapley"], "venue": "International Journal of Game Theory, 1(1):11\u201326,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1971}, {"title": "A value for n-person games", "author": ["L.S. Shapley"], "venue": "Contrib. to the Theory of Games, pages 31\u201340,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1953}, {"title": "Measuring inconsistency in probabilistic knowledge bases", "author": ["M. Thimm"], "venue": "UAI,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2009}, {"title": "On three Shapley-like solutions for cooperative games with random payoffs", "author": ["J. Timmer", "P. Borm", "S. Tijs"], "venue": "International Journal of Game Theory, 32(4):595\u2013613,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2004}], "referenceMentions": [{"referenceID": 18, "context": "The most prominent solution aiming at fairness is the Shapley value [19], which is a measure of the criticality of each edge to achieving connectivity.", "startOffset": 68, "endOffset": 72}, {"referenceID": 12, "context": "The core [13] is the most common solution considering stability, and contains all allocations where no subset of agents is incentivized to defect and form an alternative network.", "startOffset": 9, "endOffset": 13}, {"referenceID": 15, "context": "Further, the problem of computing the value of a coalition in the network reliability game is the famous network reliability problem, which is known to be computationally hard [16], making it even harder to apply the required solutions.", "startOffset": 176, "endOffset": 180}, {"referenceID": 12, "context": "The core is the prominent solution concept focusing on stability [13], but it may be empty or contain more than one imputation.", "startOffset": 65, "endOffset": 69}, {"referenceID": 18, "context": "Further, it is the unique imputation that fulfills important fairness axioms [19].", "startOffset": 77, "endOffset": 81}, {"referenceID": 0, "context": "Consider a directed graph G = \u3008V,E\u3009 with a source s \u2208 V and target t \u2208 V , where each edge ei is controlled by an agent ai and has a failure probability of 1\u2212 ri \u2208 [0, 1].", "startOffset": 164, "endOffset": 170}, {"referenceID": 11, "context": "Previous work already suggests game theoretic solutions (including the Shapley value) for analyzing network reliability problems [12, 5, 1, 4].", "startOffset": 129, "endOffset": 142}, {"referenceID": 4, "context": "Previous work already suggests game theoretic solutions (including the Shapley value) for analyzing network reliability problems [12, 5, 1, 4].", "startOffset": 129, "endOffset": 142}, {"referenceID": 0, "context": "Previous work already suggests game theoretic solutions (including the Shapley value) for analyzing network reliability problems [12, 5, 1, 4].", "startOffset": 129, "endOffset": 142}, {"referenceID": 3, "context": "Previous work already suggests game theoretic solutions (including the Shapley value) for analyzing network reliability problems [12, 5, 1, 4].", "startOffset": 129, "endOffset": 142}, {"referenceID": 15, "context": "In the case of the network reliability game, this is the famous network reliability problem, known to be #P-hard [16].", "startOffset": 113, "endOffset": 117}, {"referenceID": 13, "context": "Theorem 1 (Hoeffding\u2019s inequality [14]).", "startOffset": 34, "endOffset": 38}, {"referenceID": 17, "context": "A game v is know to be convex if and only if every subgame of v has a non-empty core [18].", "startOffset": 85, "endOffset": 89}, {"referenceID": 9, "context": "Solving cooperative games has been well-studied and solutions have been offered for various representations [10, 6, 8] and even for games with uncertain payoffs [21].", "startOffset": 108, "endOffset": 118}, {"referenceID": 5, "context": "Solving cooperative games has been well-studied and solutions have been offered for various representations [10, 6, 8] and even for games with uncertain payoffs [21].", "startOffset": 108, "endOffset": 118}, {"referenceID": 7, "context": "Solving cooperative games has been well-studied and solutions have been offered for various representations [10, 6, 8] and even for games with uncertain payoffs [21].", "startOffset": 108, "endOffset": 118}, {"referenceID": 20, "context": "Solving cooperative games has been well-studied and solutions have been offered for various representations [10, 6, 8] and even for games with uncertain payoffs [21].", "startOffset": 161, "endOffset": 165}, {"referenceID": 9, "context": "Although computing the Shapley value is hard in various domains, several approximation methods have been suggested [10, 9, 11].", "startOffset": 115, "endOffset": 126}, {"referenceID": 8, "context": "Although computing the Shapley value is hard in various domains, several approximation methods have been suggested [10, 9, 11].", "startOffset": 115, "endOffset": 126}, {"referenceID": 10, "context": "Although computing the Shapley value is hard in various domains, several approximation methods have been suggested [10, 9, 11].", "startOffset": 115, "endOffset": 126}, {"referenceID": 2, "context": "Our sampling approach for approximating the Shapley value is similar to [3], but does not assume a method for computing the characteristic function of any coalition in polynomial time (as mentioned, for the network reliability game, computing a coalition\u2019s value is #P-hard).", "startOffset": 72, "endOffset": 75}, {"referenceID": 6, "context": "Other applications of such solutions include analyzing prediction markets [7] and measuring inconsistencies in probabilistic knowledge bases [20].", "startOffset": 74, "endOffset": 77}, {"referenceID": 19, "context": "Other applications of such solutions include analyzing prediction markets [7] and measuring inconsistencies in probabilistic knowledge bases [20].", "startOffset": 141, "endOffset": 145}, {"referenceID": 14, "context": "What algorithms can compute the core of unrestricted reliability games? Can the Shapley value be exactly computed in restricted forms of these games? Can one tractably compute other solutions such as the kernel or least-core (see [15]) and the Cost of Stability [2, 17] in such games?", "startOffset": 230, "endOffset": 234}, {"referenceID": 1, "context": "What algorithms can compute the core of unrestricted reliability games? Can the Shapley value be exactly computed in restricted forms of these games? Can one tractably compute other solutions such as the kernel or least-core (see [15]) and the Cost of Stability [2, 17] in such games?", "startOffset": 262, "endOffset": 269}, {"referenceID": 16, "context": "What algorithms can compute the core of unrestricted reliability games? Can the Shapley value be exactly computed in restricted forms of these games? Can one tractably compute other solutions such as the kernel or least-core (see [15]) and the Cost of Stability [2, 17] in such games?", "startOffset": 262, "endOffset": 269}], "year": 2011, "abstractText": "Cooperative games model the allocation of profit from joint actions, following considerations such as stability and fairness. We propose the reliability extension of such games, where agents may fail to participate in the game. In the reliability extension, each agent only \u201csurvives\u201d with a certain probability, and a coalition\u2019s value is the probability that its surviving members would be a winning coalition in the base game. We study prominent solution concepts in such games, showing how to approximate the Shapley value and how to compute the core in games with few agent types. We also show that applying the reliability extension may stabilize the game, making the core non-empty even when the base game has an empty core.", "creator": "TeX"}}}