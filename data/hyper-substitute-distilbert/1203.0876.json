{"id": "1203.0876", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Mar-2012", "title": "An MLP based Approach for Recognition of Handwritten `Bangla' Numerals", "abstract": "main work over next involves the design utilizing a multi layer sample ( mlp ) based pattern classifier rapid recognition symmetric handwriting bangla characters using a straight row numerical vector. malay represents the 12th main effective script and composition in the indian subcontinent and the fifth maximum popular language in the world. the reference format familiar with representing handwritten integer numerals here includes 24 shadow vectors, 40 texture features and 36 longest - run features. on experimentation with initial table of keyboard samples, the project yields polynomial average transformation algorithm lasting 52. 67 % evaluated after three - sample double tracking of results. one is useful for applications related to ocr of handwritten bangla handwriting and can eventually be extended to include ocr textual small characters of traditional manuscript.", "histories": [["v1", "Mon, 5 Mar 2012 12:06:54 GMT  (250kb)", "http://arxiv.org/abs/1203.0876v1", null]], "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["subhadip basu", "nibaran das", "ram sarkar", "mahantapas kundu", "mita nasipuri", "dipak kumar basu"], "accepted": false, "id": "1203.0876"}, "pdf": {"name": "1203.0876.pdf", "metadata": {"source": "CRF", "title": "An MLP based Approach for Recognition of Handwritten \u2018Bangla\u2019 Numerals", "authors": ["Subhadip Basu", "Nibaran Das", "Ram Sarkar", "Mahantapas Kundu", "Mita Nasipuri", "Dipak Kumar Basu"], "emails": ["{subhadip8@yahoo.com}"], "sections": [{"heading": null, "text": "Proc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune."}, {"heading": "1 Introduction", "text": "Optical Character Recognition (OCR) systems appear to ease the interface between\nman and machine and help in office automation with huge saving of time and human\neffort. The OCR system allows desired manipulation of the scanned text as the output\nis coded with ASCII or some other character code of such system prepared from the\npaper based input text. Success of the commercially available OCR system is yet to be\nextended to handwritten text. It is mainly due to the fact that numerous variations in\nwriting styles of individuals make recognition of handwritten characters difficult. For\na specific language based on some alphabet and numerals, OCR techniques are either\naimed at printed text or handwritten text. The present work is aimed at the latter.\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nBroadly speaking, OCR systems ease the barrier of the keyboard interface\nbetween man and machine to a great extent, and help in office automation with huge\nsaving of time and human effort. The systems have potential applications in extracting\ndata from filled in forms, interpreting handwritten addresses from postal documents\nfor automatic routing, automatic reading of bank cheques etc.\nPast work on OCR of handwritten alphabet and numerals has been mostly\nfound to concentrate on Roman script [1] related to English and some European\nlanguages, and scripts related to Asian languages like Chinese [2], Korean, and\nJapanese. Among Indian scripts, Devnagri, Tamil, Oriya and Bangla have started to\nreceive attention for OCR related research in the recent years.\nMajority of the past work e.g. [1], [6], [7], [8], related to offline handwritten\ncharacter recognition, concentrated on the analysis of English scripts. One of the most\nnotable early work on handwritten English cursive word recognition is that of\nBozinovic and Srihari [1], in which a word image is transformed through a hierarchy\nof representation levels: points, contours, features, letters, and words. They have used\na bottom-up technique to generate an unique feature representation from the input\nimage using statistical dependence between letters and features.\nApart from the work on the recognition of English script, a lot of significant\nwork on the recognition of different Asian languages have also been done. Wong et.\nal. [2] worked on the analysis of Chinese script. They have used a character template\ncodebook to match an unknown character. A. Amin in [3] presents a comparative\nstudy of various aspects of the machine recognition processes and research\npossibilities of off-line Arabic characters.\nVisibly, a variety of research work have been done on OCR over the years.\nBut certain popular languages have not yet received sufficient attention in this regard\nBangla is one such language. It is the fifth most popular language in the world [4], a\nwide-spoken language in India and the national language of Bangladesh as well.\nAbout 200 million people of Eastern India and Bangladesh use this language for\ncommunication [4]. Moreover, Assamese and Manipuri, two popular languages in\nIndia, are also written in Bangla script. Two of the important research contributions\nrelating to OCR of Bangla characters involve a multistage approach developed by\nRahman et al. [9] and an MLP classifier developed by Bhowmik et al. [10]. The major\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nfeatures used for the multistage approach include Matra, upper part of the character,\ndisjoint section of the character, vertical line and double vertical line. And, for the\nMLP classifier, the feature set is constructed from the stroke features of characters. S.\nBasu et. al. [5], have recently developed a two-pass approach for offline recognition\nof handwritten Bangla numerals. The work presents an effective technique for\nimprovement of recognition performances with multiple classifiers.\n0 1 2 3 4 5 6 7 8 9\nFig.1. The decimal digit set of Bangla script\nIn the light of above facts, the present work concentrates on the development\nof an MLP based pattern classifier for recognition of handwritten Bangla digits with a\nfeature set of 76 features. There is enough scope for extension of this work to include\nhandwritten characters of Bangla alphabet also. For experimentation on the present\ntechnique, we have used the standard handwritten Bangla digit set provided by the\nIndian Statistical Institute. Three fold cross validation of results are performed to find\nan average recognition performance of the MLP classifier designed for the present\nwork. The results show a sharp increase of average recognition performance with the\nnew feature set used here in comparison to one we previously used for design of the\nfirst pass classifier of the two pass approach [11]. In respect to the need of a wide\ncross section of world population using Bangla as a script or language, OCR of\nhandwritten Bangla digits has a high value of commercial importance in the present\ntime. It is still an active area of research in Pattern Recognition and Image Processing.\nThe work presented here not only targets the development of a suitable feature set for\nrepresentation of handwritten Bangla digits in the feature space but also the\ndevelopment of an effective classification technique for dealing with the same. All\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nthis has motivated the idea of the present work. Fig. 1 shows the typical digit patterns\nof the decimal digits of Bangla script."}, {"heading": "2 The Feature Sets", "text": "Choice of suitable features for pattern classes, as mentioned before, is a domain specific design Issue. In the present work, two different feature sets are designed for classification of handwritten Bangla digit patterns. The feature sets are denoted by Feature Set #1 and Feature Set #2. The features constituting these two sets are so selected that their values remain close to each other for the patterns of the same class and differ appreciably for the patterns of different classes. The feature sets should be capable of supplying complementary information about the digit patterns, at least to some extent. For extraction of features from the digit images, the same are first enclosed within minimal bounding boxes and then scaled to 32X32 pixels sizes. The scaled images, which are defined with gray scale pixel values, are finally converted to binary images through thresholding. Feature Set # 1 It consists of 40 features in all. These features are formed with 24 shadow features and 16 octant centroid features as described below:\nShadow features Shadow Features. Shadows features are computed by considering the lengths of projections of the digit images, as shown in Fig. 2, on the four sides and eight octant dividing sides of the minimal bounding boxes enclosing the same. Considering the lengths of projections on three sides of each such octant, 24 shadow features are extracted from each digit image, which is divided into eight octants inside the minimal box. Each value of the shadow feature so computed is to be normalized by dividing it with the maximum possible length of the projections on the respective side.\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nOctant Centroid Features. Coordinates of centroids of black pixels in all the 8 octants of a digit image are considered to add 16 features in all to the feature set. Fig. 3(a-b) shows approximate locations of all such centroids on two different digit images. It is noteworthy how these features can be of help to distinguish the two images. Feature Set # 2 It consists of 36 longest run features in all. It is described below. Longest Run Features. For computing longest-run features from a character image, the minimal bounding box enclosing the image is divided into 9 overlapping rectangular regions. Coordinates (r, c) of top left corners of all these regions, in terms of the row number r and the column number c, are given as follows: {(r, c) | r=0, h/4, 2h/4 and c=0, w/4, 2w/4}, where h and w denote the height and the width of the minimal bounding box respectively. In each such rectangular region, 4 longest-run features are computed row wise, column wise and along two of its major diagonals. The row wise longest-run feature is computed by considering the sum of the lengths of the longest bars that fit consecutive black pixels along each of all the rows of a rectangular region, as illustrated in Fig. 4(a-b). In fitting a bar with a number of consecutive black pixels within a rectangular region, the bar may be extended beyond the boundary of the region if the same is continued there. The three other longest-run features are computed in the same way but along the column wise and two major diagonal wise directions within the rectangle separately. Thus, in all, 9x4=36 longestrun features are computed from each character image. Each of these feature values is to be normalized by dividing the same with h x w. The product, h x w, represents the sum of the lengths of the bars, that fit consecutive black pixels individually in each of the four directions within the minimal square completely filled with black pixels.\n1 0 1 1 1 1\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\n(b) Every pixel position in each row of the image is marked with the length of the\nlongest bar that fits consecutive black pixels along the same row."}, {"heading": "3 The MLP Classifier", "text": "In the present work, an MLP classifier is employed for recognition of unknown digit patterns using Feature Set # 1 and Feature Set # 2. The MLP is a special kind of Artificial Neural Network (ANN). ANNs are developed to replicate learning and generalization abilities of human\u2019s behaviour with an attempt to model the functions of biological neural networks of the human brain. Architecturally, an MLP is a feed-forward layered network of artificial neurons. Each artificial neuron in the MLP computes a sigmoid function of the weighted sum of all its inputs. An MLP consists of one input layer, one output layer and a number of hidden or intermediate layers, as shown in Fig 5. The output from every neuron in a layer of the MLP is connected to all inputs of each neuron in the immediate next layer of the same. Neurons in the input layer of the MLP are all basically dummy neurons as they are used simply to pass on the input to the next layer just by computing an identity function each.\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nThe numbers of neurons in the input and the output layers of an MLP are chosen depending on the problem to be solved. The number of neurons in other layers and the number of layers in the MLP are all determined by a trial and error method at the time of its training. An ANN requires training to learn an unknown input-output relationship to solve a problem.\nDepending on the models of ANNs, training is performed either under\nsupervision of some teacher (i.e., with labeled data of known input-output responses) or without supervision. The MLP to be used for the present work requires supervised training. During training of an MLP weights or strengths of neuron-to-neuron connections, also called synapses, are iteratively tuned so that it can respond appropriately to all training data and also to other data, not considered at the time of training. Learning and generalization abilities of an ANN is determined on the basis of how best it can respond under these two respective situations. The MLP classifier designed for the present work is trained with the Back Propagation (BP) algorithm. It minimizes the sum of the squared errors for the training samples by conducting a gradient descent search in the weight space. The number neurons in a hidden layer in the same are also adjusted during its training. The problem of pattern classification involves two successive transformations as follows:\nM \u2192 F \u2192 D Where, M, F and D stand for the measurement space, the feature space and\nthe decision space respectively. Once a feature set is fixed up, it is left with the design of a mapping (\u03b4) as follows:\n\u03b4: F \u2192 D\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nANNs with their learning and generalization abilities can approximate a general class of functions given below.\nf : Pattern classification with ANNs requires approximating \u03b4 as a discrete\nvalued function shown below.\nwhere, n and m denotes the number of features and the number of pattern\nclasses respectively. So an ANN based pattern classifier requires n number of neurons in the input layer and m number of neurons in the output layer. Conventionally 1-outof-m representation is used for its output."}, {"heading": "4 Results and Discussion", "text": "MLP classifiers require training with labeled patterns of samples before they start operation as pattern classifiers. Training is followed by testing to check whether an MLP classifier can generalize from test data on the basis of what it has learnt from training data. For preparation of the training and the test sets of samples, a database of 6,000 Bangla digit samples is formed by collecting optically scanned handwritten digit samples of 10 digit symbols from each of 600 people of different age groups and sexes. A training set of 4000 samples and a test set of 2000 samples are then formed. Three such pairs of the training and the test sets are formed in all with the original database for cross validation of results at the time of experimentation. All the samples are scaled to 32x32 pixel images first and then converted to binary images through thresholding.\nFor the present work, a single layer MLP, i.e., an MLP with one hidden layer\nis chosen for each pair of 4000 training samples and 2000 test samples. This is mainly to keep the computational requirement of the same low without affecting its function approximation capability. To design an MLP for classification of handwritten alphabetic characters, several runs of BP algorithm with learning rate (\u03b7) = 0.8 and momentum term (\u03b1)=0.7 are executed for different numbers of neurons in its hidden\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nlayer. Recognition performances of the MLP on the test samples of the three sets observed from this experimentation are given in Table1."}, {"heading": "No of Hidden neurons Percentage recognition rate of the MLP on test samples", "text": "Curves showing variation of the Recognition performance of the MLP, for the test samples of the three sets, with increase in the number of neurons in its hidden layer are plotted in Fig. 7, Fig. 8 and Fig. 9 from the Table 1 respectively. It is required to fix up the number of neurons in the hidden layer of MLP so that it can show the optimal recognition performance on the test set. Recognition performances of the MLP for the Set#2, as observed from the curve shown in Fig. 8, initially rise as the number of neurons in the hidden layer is increased and falls after the same crosses some limiting value. It reflects the fact that for some fixed training and test sets, learning and generalization abilities of the MLP improve as the number of neurons in its hidden layer as increases up to certain limiting value and any further increase in the number of neurons in the hidden layer thereafter degrades the abilities. It is called the over-fitting problem. The optimal recognition performance of the MLP is observed at a point, on the curve of Fig. 7, where the number of neurons in its hidden layer is set to 65 in Set#1. Similarly, for Set#2 the optimal recognition performance is achieved where the number of neurons in its hidden layer is also 65 as shown in Fig. 8. In Set#3, on the curve of Fig. 9, the recognition performance is highest with 70 hidden neurons. However, the average recognition performance among the three sets is best with 65 neurons in the hidden layer. Thus the number of neurons in the hidden layer of the MLP is finally fixed up to 65. With this, the design process is completed producing an MLP (76-65-10) for recognition of handwritten numerals on the basis of the feature set explained before. The average Recognition performance of this MLP on the test sets, as observed with 65 hidden neurons, is 96.67%.\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nProc. 2nd Indian International Conference on Artificial Intelligence, pp. 407-417, Dec. 2005, Pune.\nRecognition performances of the MLP can be further improved firstly by adding newer variation of handwritten numeric samples to the training set and secondly considering more discriminating features for digits. The work presented here can have useful application in the development of a complete OCR system for handwritten Bangla script."}, {"heading": "Acknowledgement", "text": "Authors are thankful to the \u201cCenter for Microprocessor Application for Training Education and Research\u201d, \u201cProject on Storage Retrieval and Understanding of Video for Multimedia\u201d and Computer Science & Engineering Department, Jadavpur University, for providing infrastructural facilities during progress of the work. Authors are also thankful to the CVPR Unit, ISI Kolkata, for providing the necessary dataset of handwritten Bangla Numerals. One of the authors, Mr. Subhadip Basu, is thankful to MCKV Institute of Engineering for kindly permitting him to carry on the research work."}], "references": [{"title": "Off-line Cursive Script Word Recognition", "author": ["R.M. Bozinovic", "S.N. Srihari"], "venue": "IEEE Trans. Pattern Analysis and Machine Intelligence,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1989}, {"title": "Off-line Handwritten Chinese Character Recognition as a Compound Bays Decision Problem", "author": ["P.K. Wong", "C. Chan"], "venue": "IEEE Trans. Pattern Analysis and Machine Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1998}], "referenceMentions": [{"referenceID": 0, "context": "Past work on OCR of handwritten alphabet and numerals has been mostly found to concentrate on Roman script [1] related to English and some European languages, and scripts related to Asian languages like Chinese [2], Korean, and Japanese.", "startOffset": 107, "endOffset": 110}, {"referenceID": 1, "context": "Past work on OCR of handwritten alphabet and numerals has been mostly found to concentrate on Roman script [1] related to English and some European languages, and scripts related to Asian languages like Chinese [2], Korean, and Japanese.", "startOffset": 211, "endOffset": 214}, {"referenceID": 0, "context": "[1], [6], [7], [8], related to offline handwritten character recognition, concentrated on the analysis of English scripts.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "One of the most notable early work on handwritten English cursive word recognition is that of Bozinovic and Srihari [1], in which a word image is transformed through a hierarchy of representation levels: points, contours, features, letters, and words.", "startOffset": 116, "endOffset": 119}, {"referenceID": 1, "context": "[2] worked on the analysis of Chinese script.", "startOffset": 0, "endOffset": 3}], "year": 2012, "abstractText": "The work presented here involves the design of a Multi Layer Perceptron (MLP) based pattern classifier for recognition of handwritten Bangla digits using a 76 element feature vector. Bangla is the second most popular script and language in the Indian subcontinent and the fifth most popular language in the world. The feature set developed for representing handwritten Bangla numerals here includes 24 shadow features, 16 centroid features and 36 longest-run features. On experimentation with a database of 6000 samples, the technique yields an average recognition rate of 96.67% evaluated after three-fold cross validation of results. It is useful for applications related to OCR of handwritten Bangla Digit and can also be extended to include OCR of handwritten characters of Bangla alphabet.", "creator": "PScript5.dll Version 5.2"}}}