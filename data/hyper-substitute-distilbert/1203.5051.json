{"id": "1203.5051", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Mar-2012", "title": "Analysing Temporally Annotated Corpora with CAVaT", "abstract": "we present entropy, a tool that manages fourier analysis and enables aboard timeml. cavat is formally open source, modular specification code for statistical analysis of materials specific to temporally - induced random order corpora. it provides reporting, enables salient links between rich variety of general programming time - encoded sample modules, therefore frequently chooses a temporal grammar better ensure that it is already consistent and sufficiently annotated. currently, cavat provides analysis akin to task - triggered temporal information. timeml is typical dynamic languages retrieval learning algorithms since rapidly learning text. alongside this variant, we present far semantic part than cavat, and typically generate error - making ability, including elaborate workings allowing several novel timeml static searching methods. this comprises followed by the execution that some example tasks using the capabilities to show relations between times, events, terms and links. we also undertake experiments on a timeml corpus ( timebank ) that have concepts introduced within cavat.", "histories": [["v1", "Thu, 22 Mar 2012 17:45:39 GMT  (40kb)", "http://arxiv.org/abs/1203.5051v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["leon derczynski", "robert gaizauskas"], "accepted": false, "id": "1203.5051"}, "pdf": {"name": "1203.5051.pdf", "metadata": {"source": "CRF", "title": "Analysing Temporally Annotated Corpora with CAVaT", "authors": ["Leon Derczynski", "Robert Gaizauskas"], "emails": ["L.Derczynski@dcs.shef.ac.uk,", "R.Gaizauskas@dcs.shef.ac.uk"], "sections": [{"heading": null, "text": "ar X\niv :1\n20 3.\n50 51\nv1 [\ncs .C\nL ]\n2 2\nM ar\n2 01\n2"}, {"heading": "1. Introduction", "text": "In essence, TimeML mandates the mark up of expressions referring to times, expressions denoting events and expressions signalling temporal relations between times and events or events and events; it also allows links to be added between entities, which are labelled with the temporal relation holding between them. Existing TimeML tools can be divided into two categories: those which produce or alter mark-up, for example to assist annotation, and those that perform analysis. Only a few tools have as yet been developed for TimeML, mostly focusing on the annotation task, such as TTK (Verhagen and Pustejovsky, 2008), which does not support analysis. From the second category, in the absence of other software, the TimeML-using community is restricted to generic XML analysis tools, such as Xaira (Burnard and Dodd, 2003) or LT-XML1, as well as similar format-specific tools (TEI). These generic corpus tools are powerful applications, but require substantial effort to apply to TimeML data. We have constructed CAVaT (Corpus Analysis and Validation for TimeML) to process collections of temporally annotated documents. CAVaT\u2019s functionality is divided into two main parts; an integrated browsing and report generation system, and a modular extensible error checking and corpus validation framework. In this paper, we first describe the technical aspects of the tool. We then present the reporting part of CAVaT, and then its error-checking ability, followed by the execution of some example tasks using the tool. We present an overview of the tool\u2019s operation and capabilities in Section 2. This includes details of the corpus loading and folding process (Section 2.1), report generation, and also a detailed explanation of the advanced validation modules that are included with CAVaT (Section 2.3). A brief syntax summary is presented in Section 3; the full guide is on the CAVaT website2. Next, in Section 4, we present sample queries and output. In Section 5, we show inconsistencies and observations in a TimeML corpus (TimeBank) that have been de-\n1From http://www.ltg.ed.ac.uk/software/ltxml 2Available at http://code.google.com/p/cavat/\ntected with CAVaT. Finally, Section 6 summarises the tool and discusses future work."}, {"heading": "2. Overview of the tool", "text": "CAVaT is an open source tool, constructed from a set of Python modules and a database. It uses NLTK3 and MySQL4. The interface is a text-based interactive prompt, and all operations are performed with text commands. Command syntax strives to be simple, flexible and close to natural language. After loading and pre-processing a TimeML corpus, one can analyse it using built-in reporting functions, and perform data validation with one of many checking components."}, {"heading": "2.1. Preprocessing", "text": "CAVaT can work on any TimeML-annotated corpus that is stored as a collection of uncompressed files in a single directory, by importing it to a set of database tables. The corpus is initially processed by an XML parser (using Python\u2019s minidom and expat implementations), which retrieves document level data as well as all temporally annotated information, and places it into a MySQL database. Temporally annotated data includes all TimeML tags and their attributes, as well any enclosed tokens for EVENT, SIGNAL and TIMEX3 tags. In TimeML, events are represented with the EVENT tag, and temporal expressions with the TIMEX3 tag. These intervals are the elements which CAVaT and the rest of this paper assume as temporal primitives, unless otherwise stated. Temporal relations between intervals are described with the TLINK tag, and temporal signals with SIGNAL. See Figure 1 for an example. Automatically classifying the type of temporal relation between intervals is currently a difficult problem in temporal processing of text (Mani et al., 2006; Lapata and Lascarides, 2006; Hepple et al., 2007). The task is often made simpler by reducing the number of temporal link classes. TimeML includes BEFORE and AFTER relations, though\n3See http://www.nltk.org/ 4See http://www.mysql.com/\none may simply reverse the arguments of a BEFORE relation to turn it into an AFTER one \u2014 so, June 2008 was before August 2009 is equivalent to August 2009 was after June 2008. It is thus possible to convert all links of one of these types to the other. We call this technique folding. Given a set of mappings, the 13 TimeML relations can be reduced. CAVaT offers three folds:\n\u2022 CAVaT fold \u2013 Collapses all inverse relations, such as mapping INCLUDED BY to INCLUDES (see Table 1).\n\u2022 SputLink fold \u2013 The mapping introduced by Marc Verhagen, included in TTK (Verhagen, 2005).\n\u2022 Compact fold \u2013 Reduces TimeML\u2019s link relation set to 3 classes, using mappings defined in Setzer et al. (2005).\nThe first two are lossless, in that no temporal information is removed by the folding process. The third is lossy. It is possible to perform a lossy fold by, for example, reducing the TimeML BEGUN BY relationship to one of INCLUDES."}, {"heading": "2.2. Querying", "text": "The reporting part of CAVaT makes analysis of TimeML corpora simpler and easier than working directly with a set of XML documents, allowing flexible queries, and catering for inquiries specific to temporally-annotated data. The development of CAVaT has been driven by investigations of TimeML corpora. Many of the operations performed against a corpora had common elements, often centred around the retrieval of class distributions or token frequencies. A tool for TimeML corpus research could encompass all the required operations, while providing access to a larger range of reports.\nCAVaT uses a report generation system where one can view any number of pre-defined features that match conditions of the user\u2019s choosing. Queries can produce reports at varying levels of granularity \u2013 one may choose to examine data at sentence, document or corpus level. Reports can output counts, distributions, lists or text extracts. Example queries are listed in Section 4. Data such as part-of-speech information, tense, aspect, and event recurrence are captured by attributes described by TimeML, and any data like this (annotated by tags and their attributes) can be queried. In addition, properties specific to temporal data but not directly present in mark-up are implemented, including:\n\u2022 Event / event instance abstraction In some cases, one piece of text may refer to two separate events (an example is given later in Section 5.1.). To permit annotation of this, TimeML\u2019s EVENT tag is placed around the text, and then event instances are specified using one or more MAKEINSTANCE tags. Data relating to a piece of event text, such as part of speech, polarity and modality, are described in the MAKEINSTANCE tag. However, we would often like to see the part of speech data for an event; indeed, when discussing temporal entities, the term \u201cevent\u201d is often used in place of \u201cevent instance\u201d. Thus, CAVaT implicitly translates between these two related tags when requested; for example, when one asks to see event modality or cardinality.\n\u2022 Signalled links TLINKs may indicate a textual signal that suggests the type of relationship between their arguments. For example, in Lydia ate dinner before leaving the house, the word before acts as a signal, ordering two events. As signals are explicit indicators of temporal association, and correctly typing a temporal link is difficult, it is useful to be able to quickly identify which links employ a signal.\n\u2022 Signal text and TLINKs As SIGNAL text referenced from a TLINK may be thought of as that TLINK\u2019s signal text, CAVaT permits queries that specify signal text as an attribute of a TLINK.\n\u2022 Text position and lemma Although not part of the TimeML annotation schema, CAVaT logs text position (by sentence number and word number), and maintains lemmas of text found within tags.\nOne may view a particular TLINK\u2019s location in the original document, showing the link\u2019s arguments and their relation type. This helps understand the context of a single TLINK. For example, one may often see many links to a single document date, or discover that most links have arguments within the same paragraph \u2013 something not immediately obvious to humans while browsing the TLINK markup, and unclear with generic corpus tools."}, {"heading": "2.3. Checking", "text": "Temporal annotation is a complex task, and as a result, a relatively small amount of text has been annotated to date. The largest TimeML corpus is TimeBank (Pustejovsky et al., 2003), with less than 200 documents, and around 65000\ntokens. Because of the complexity of temporal annotation, errors can arise beyond those that may be detected using an XML DTD. CAVaT is both a reporting and validation tool, and seeks to automatically detect high-level and complex errors that are rarely immediately obvious. Part of the motivation behind this part of the tool is similar to that of writing unit tests that highlight bugs in an application: to improve quality by automatically detecting previously seen errors. In this section we detail some checks that CAVaT can perform on a TimeML corpus. Error checks are defined as Python modules, so that one may describe a detection method for an error case and share it with other researchers without modifying CAVaT\u2019s core code. The modules inherit from the cavatModule class; documentation is in the source code, and one may view a list of available modules with the commandcheck list."}, {"heading": "2.3.1. Inconsistent closure", "text": "It is possible to create an inconsistent configuration of temporal links. For example, we may have A BEFORE B and B INCLUDES A; this is clearly not possible, as INCLUDES stipulates that the start point of A occur after the start point of B (see Figure 2). While this example is fairly clear, it may not be at all clear to human annotators that a partial temporal link annotation could imply an inconsistent configuration. Automatically checking the consistency of a temporal network is hard. TimeML\u2019s relations are based on those of Allen (1983), and it is difficult to guarantee the consistency of networks formed using the latter set of relations (Vilain et al., 1989; Tsang, 1987). We re-state the problem in a more simple fashion, as follows. Intervals are represented by pairs of endpoints, and we define intervals and the TimeML relations between them in terms of relations between these points. Our model uses only simultaneous (=) and before (<) relations. The consistency checker works in a similar way to the closure algorithm in Setzer et al. (2005). It maintains an agenda and database. Assertions are taken from the agenda and used to infer further assertions when combined with assertions in the database. We initially process intervals in the document (taken from TLINK arguments) \u2013 for each interval I we add Istart < Iend to the database. We then generate initial data for the agenda based on TLINKs in the document and a mapping for each TLINK to one or more assertions, listed in Table 2. The only inference rules needed with our minimal set of relations are:\n\u2022 If x = y then y = x \u2022 If x = y and y = z then x = z \u2022 If x < y and y < z then x < z\nWe can take items from the agenda. For each such item, we compare it against the database, and deduce new relations using the above rules. If a newly generated relation conflicts with anything in the agenda or database, then the document is inconsistent. Otherwise, we will move the item from the agenda to the database, and add newly generated relations to the agenda. If we can clear the agenda, then the document is consistent; otherwise, it is not. Whether we add new relations to the top or bottom of the agenda (achieving depth- or breadth-first search, respectively) is irrelevant to the success of the algorithm, though computational performance differences have not been measured. Our baselines are the results of the tlink loop test (Section 2.3.3.) and also the results of closure success according to SputLink (Verhagen, 2005). This algorithm detected all known inconsistencies in TimeBank, and found one more; full details are later in Section 5.2. A test TimeML corpus is included with CAVaT for verifying that the consistency checker works, which alternative implementations may use for validation. Below is sample output from a consistency check:\ncavat> check consistent in 3 # Temporal graph consistency checker v1 loaded # Checking wsj_0927.tml (id 3) ! Inconsistent closure - could not assert (ei2415_2 < ei2414_1)"}, {"heading": "2.3.2. Disconnected sub-graph detection", "text": "After inferring a temporal closure (Verhagen, 2005) of a document, one is usually left with a single interconnected temporal graph, where nodes are TIMEX3s or EVENTs and edges represent TLINKs. However, disconnected groups of links may exist post-closure. This should be brought to the attention of the user; it often suggests that annotating a small number of additional links can greatly increase the amount of data inferable though closure, and that an annotation is incomplete. CAVaT\u2019s sub-graph identification module, split graph, works by processing TLINKs from a document sequentially. We maintain a list of sets that will hold intercon-\nnected intervals, beginning with an empty list. For each TLINK, we check to see if either of its arguments (which are both intervals) can be found in any set in our list. If one argument can but the other cannot, the new interval is added to the same set as the found interval. If they are both found in the same set, no action is taken. If they are found in different sets, those two sets are merged. If neither TLINK argument can be found anywhere, a new set holding both intervals is created. This process is repeated until all TLINKs have been processed, at which point each set in the list represents an independent sub-graph of connected intervals. The module will then report statistics about the graph(s) found in the specified document. These include:\n\u2022 Count of sub-graphs, intervals and TLINKs; \u2022 The number of \u201cisolated\u201d sub-graphs \u2013 that is, those\ndescribed by only one temporal link \u2013 and the proportion of intervals/links used to describe all these isolated sub-graphs; \u2022 Mean and maximum sub-graph size, and the proportion of the document\u2019s intervals that are in the largest sub-graph; \u2022 The entropy of sub-graph sizes, which acts as a \u201cfracturedness\u201d measure, showing how far the document is from having one single totally connected temporal graph including all TLINKs; \u2022 The distribution of sub-graph sizes.\nEven though sub-graphs are populated by processing the two intervals of a TLINK at the same time, it is possible to have a sub-graph containing just one node, in the case of a TLINK loop (Section 2.3.3.). Note that a document containing intervals but no temporal links between them is marked as \u201cun-fractured\u201d, as this check ignores any items not referenced at least once by a temporal link. Here is sample output from an attempt to identify disconnected sub-graphs:\ncavat> check split_graph in 3 # Split graph detection v1 loaded # Checking wsj_0927.tml (id 3) Subgraphs found: 13 - composed of 69 nodes and linked by 65 TLINKS. Isolated subgraphs, that contain just one TLINK: 5 (making up 38.5% of all subgraphs / consuming 14.5% of all nodes / described by 7.7% of all TLINKs); Mean graph size 5.3 nodes; largest subgraph (size 35) has 50.7% of all nodes. Entropy of subgraph sizes: 0.448277644573 2 nodes: ( 5) ..... 3 nodes: ( 4) .... 4 nodes: ( 3) ...\n35 nodes: ( 1) ."}, {"heading": "2.3.3. Superfluous TLINKs", "text": "Some TLINKs in TimeML corpora have been specified that associate an event with itself. For example: <TLINK lid=\"l67\" relType=\"IDENTITY\"\neventInstanceID=\"ei1241\" relatedToEventInstance=\"ei1241\"\n/> In this case, the only information conveyed is that ei1241 is identical to itself, making this a redundant TLINK. CAVaT includes a check that will identify TLINKs where both arguments reference the same event instance or event. Although such TLINK loops might be detected by consis-\ntency checking, those which specify a SIMULTANEOUS or IDENTITY relation will not. Below is sample output, showing some superfluous TLINKs:\ncavat> check tlink_loop in 165 159 143 # TLINK loop checker v1 loaded # Checking ABC19980304.1830.1636.tml (id 165) TLINK ID l23 may be a loop (eventID match), type INCLUDES, event ei286 / ei288 - check document manually # Checking wsj_1013.tml (id 159) TLINK ID l107 loops directly (instanceID match), type IDENTITY, event ei2495 / ei2495 # Checking wsj_0586.tml (id 143) TLINK ID l192 loops directly (instanceID match), type BEFORE, event ei1404 / ei1404"}, {"heading": "2.3.4. Orphaned object details", "text": "There is not yet a definition for TimeML annotation completeness, that states a minimal satisfactory level of annotation for a document. In the absence of such a definition, it is not a mistake to annotate entities without attaching them to anything else in the document. However, we believe that wherever possible, every interval should be connected to at least one other interval, and that the annotation of entities that do not contribute or relate to any other annotated information is superfluous. For example, if one chooses to mark text as a temporal signal, a related link or event instance should reference the signal. In this example, if the signal conveys no temporal information, it should not be annotated. To this end, CAVaT includes a module that is aware of five cases which describe objects attached to nothing else, and reports such orphan objects. Firstly, any TIMEX3 that is not related by any link is deemed to be independent. Also, any event instance (from MAKEINSTANCE) that is not referenced by a link is also orphaned. Next, an EVENT that is never instantiated is unattached, as instantiation is required by current TimeML syntax before EVENTs can be linked to anything else. Instances that come from nonexistent or mislabelled EVENTs are also orphans. Finally, SIGNALs that are not referenced by any link or event instance (as in our example above) are included in the list of orphaned objects. Here is the sample output from a check for orphans:\ncavat> check orphans in wsj_0927.tml # Orphaned tag detection v1 loaded TIMEX3 t104 not in any link TIMEX3 t131 not in any link"}, {"heading": "2.4. Limitations", "text": "CAVaT is currently limited in the number of objects (based on TimeML tags) that it can store for a single corpus. Objects are stored in MySQL tables, and these are limited by the operating system\u2019s maximum file size limit. The maximum number of corpora that CAVaT can stored is restricted to the operating system limit of files in a single directory."}, {"heading": "3. Syntax", "text": "Here we briefly introduce CAVaT\u2019s basic top-level commands, and some of their more useful features. A full specification of CAVaT\u2019s syntax is available at http://code.google.com/p/cavat."}, {"heading": "3.1. Corpus manipulation", "text": "Commands for manipulating TimeML corpora within CAVaT begin with corpus. One may view a list of available corpora with corpus list, and use a name from the resulting list to select a corpus for querying or checking with the corpus use command. It is also possible to view any notes attached to the currently selected corpus by using corpus info. Before one can use a corpus, though, a directory of TimeML files must be imported into CAVaT, using corpus import. One may also opt to fold the corpus on import (see Section 2.1.); a note will be attached to the database if this has been done."}, {"heading": "3.2. Querying", "text": "The show command generates reports from the current corpus. Reports focus on one tag type, and give information about its attributes. One can view all values for a tag with \u201clist\u201d reports, or the distribution of values with \u201cdistribution\u201d reports, or simply see how many instances of that tag use a particular field with \u201cstate\u201d reports. The general format for report generation is: show <report type> of <tag> <field> [as <format>] From the above example, <tag> corresponds to a TimeML tag, and is one of event, instance, timex3, signal, tlink, slink or alink. As well as the attributes available for each tag, the following extra values for <field> are available:\n\u2022 For TLINKs, signaltext refers to the text enclosed by the start and end tags of an associated signal; \u2022 For EVENTs, one may reference all the attributes of a MAKEINSTANCE tag too; \u2022 In TLINKs, SLINKs and ALINKs the arguments are referred to as arg1 and arg2, so that the CAVaT user does not have to worry about the implicit indication of interval type present in attribute names.\nReports are available in multiple formats. These can be specified by adding as <format> to the end of a show query.\n\u2022 screen - The default choice, screen gives text formatted for display in a fixed-width font. \u2022 csv - Output as comma separated values. \u2022 tex - TeX table format, including caption.\nThe TeX output of an example report, showing the distribution of TLINK relTypes in TimeBank v1.2, can be generated with show distribution of tlink reltype as tex and is shown in Table 3. One may also specify a subset of a corpus to be used for reporting, using a simple where clause. For example, one may ask: cavat> show state of tlink signalid where reltype is\nafter to see how many TLINKs of type AFTER use a signal; or, one may ask: cavat> show distribution of tlink reltype where signalid\nis not filled to find out which relTypes are most likely in TLINKs that do not specify a signal. As part of CAVaT\u2019s goal to be easy\nto use and close to natural language, there are multiple valid syntaxes for filled/unfilled attributes."}, {"heading": "3.3. Browsing", "text": "The ability to examine annotated entities in a TimeML corpus is required as part of investigative research. To enable this, CAVaT includes the browse command. Browsing allows the user to select a document (with browse doc, followed by a document ID or filename), and then view any tag within that document. Associated data is also shown; for example, if one browses an EVENT tag, any related MAKEINSTANCE tags will also be listed. One may view the tag in three formats \u2013 screen, the default; csv, as two rows of comma-separated values (the first with attribute names as column headings); or timeml, giving valid TimeML for the requested object. The syntax for these is the same as that for show commands; simply append as <output type> to the browse command. The document selected for browsing is also used as the default document for checks, which are detailed in Section 2.3."}, {"heading": "4. Example tasks", "text": "Below are some examples of using CAVaT to address real research problems. All are based on TimeBank v1.2."}, {"heading": "4.1. Show all temporal links that employ a signal", "text": "As part of research toward better automatic TLINK annotation, we wanted to know what proportion of TLINKs in a corpus had been annotated as employing a signal.\ncavat> show state of tlink signalid Count State of Tlink signalid\n=========================================== 718 signalid filled (11.2%)\n5700 signalid unfilled (88.8%)\nThe state keyword here treats signalID as having two states \u2013 filled or unfilled. The TLINK\u2019s signalid field will either be empty/absent or contain a reference to a signal annotated in text; for this task, we do not care which specific signal is being referenced."}, {"heading": "4.2. Dealing with ambiguous \u201cpart of speech\u201d values", "text": "Many instances of events in TimeBank assert pos=\"other\". This is a problem when, e.g., using WordNet to lemmatise event strings. The distribution in Table 4 can be created with the command: cavat> show distribution of event pos\nAfter this, we would like to view event text that is classified as other, using the following query:\ncavat> show list of event text where pos is other #10.86 #39.8 million #54.8 million $1 $1.05 (truncated)\nThe result suggests that there are at least some numeric values for these event tokens, as well as the more typical verbs. This led to the substitution of all currency and numeric event strings with representative tokens, as a feature for a CRF classifier, yielding a performance increase in TLINK classification (in unpublished results)."}, {"heading": "4.3. Which signals does the BEFORE relation use?", "text": "Sometimes, particular relation types are strongly suggested by related signals. To determine the signal texts used with BEFORE TLINKs, one may query: cavat> show distribution of tlink signaltext where\nreltype is before From the results in Table 5, we can see that the token \u201cbefore\u201d suggests a BEFORE relation, but that the majority of annotated BEFORE relations do not employ this signal (from Table 3, there are a total of 1408 such relations, only 24 of which use the signal). This indicates that building a relation classifier that relies solely on such signals will not be useful."}, {"heading": "4.4. Superfluous TLINK checking", "text": "One may want to find instances where a link has been made between an entity and itself. We have an error checking module for this, tlink loop:\ncavat> check tlink_loop in WSJ910225-0066.tml TLINK ID l383 matches, type IS_INCLUDED, event ei1482 TLINK ID l376 matches, type AFTER, event ei1454 TLINK ID l345 matches, type AFTER, event ei1356\nOne can explicitly query in all to search the entire corpus for similar mis-annotations."}, {"heading": "5. Validation of a sample corpus", "text": "As we can now load and process any TimeML corpus, and have a set of advanced validation tests, it is logical to test existing TimeML annotated corpora and examine them. In this section, we present the results of running CAVaT\u2019s check modules on TimeBank v1.2. This corpus is not new and has been amended and improved by the community (Boguraev et al., 2007), so may contain many fewer errors than freshly annotated documents."}, {"heading": "5.1. Checking for loops", "text": "We used the tlink loop module (Section 2.3.3.) on the corpus. This identifies TLINKs where both arguments are the same event or event instance. Of TimeBank\u2019s 183 documents, 19 have at least one TLINK containing such a loop, and there are 26 loops in total. Of these loops, 10 are on TLINKs of type SIMULTANEOUS or IDENTITY. Such TLINKs will not make a graph inconsistent, but are certainly redundant. The remaining 16 loops of other types will cause an inconsistency. All but one of the loops found are temporal links where both arguments reference the same event instance; only one references two different instances of the same event (TLINK L23, in document ABC19980304.1830.1636.tml). The TimeML in question is as follows: But they still have <EVENT eid=\"e28\" class=\"I ACTION\">catching</EVENT> up to do two hundred and thirty four Americans have <EVENT eid=\"e30\" class=\"OCCURRENCE\">flown</EVENT> in space, only twenty six of them women. <MAKEINSTANCE eventID=\"e30\" eiid=\"ei286\" tense=\"PRESENT\" aspect=\"PERFECTIVE\" polarity=\"POS\" cardinality=\"234\" pos=\"VERB\"/> <MAKEINSTANCE eventID=\"e30\" eiid=\"ei288\" tense=\"PRESENT\" aspect=\"PERFECTIVE\" polarity=\"POS\" cardinality=\"26\" pos=\"VERB\"/>\n<TLINK lid=\"l23\" relType=\"INCLUDES\"\neventInstanceID=\"ei286\" relatedToEventInstance=\"ei288\"/> In this case, the annotation suggests that during the flying in space of 234 Americans, 26 women flew, which is a correct interpretation of the text. CAVaT recommends the manual examination of eventID loops upon their detection. All the other tags reported by this check indicate redundant or incorrect annotations."}, {"heading": "5.2. Checking for consistent graphs", "text": "Since the consistency checker uses a novel method (see Section 2.3.1), we verified its output by comparing it with that of SputLink and CAVaT\u2019s loop detection, and finding explanations for every inconsistency. A small test corpus of TimeML documents is also included with CAVaT for assuring the accuracy of this tool.\nSputLink would not report an inconsistency with a TLINK loop that was not of type SIMULTANEOUS or IDENTITY; many of the inconsistent documents were found faulty by both SputLink and CAVaT. Some documents had an erroneous initial TLINK configuration; most faults were subtler than this, and their discovery required a closure attempt."}, {"heading": "5.3. Checking for split graphs", "text": "The split graph module checks for documents whose temporal graphs contain sets disconnected TLINKs. No single document in TimeBank has a fully-connected temporal graph, with a path traceable between every interval. The \u201cbest-connected\u201d document (least fractured) is wsj 0144.tml, which has 34 intervals split into only two subgraphs; one containing 32 intervals, the other two. The most fractured document is wsj 1033.tml, which is split into 12 sub-graphs having a mean graph size of only 2.7 intervals (a single TLINK connected to no other creates a graph of size 2). Despite having 32 intervals in total to connect, the largest sub-graphs in this document include only 4 intervals."}, {"heading": "5.4. Replication", "text": "The results above can be simply replicated by downloading CAVaT v1, gathering a copy of TimeBank v1.25, importing the data/timeml/ subdirectory of TimeBank, and running check test in all in CAVaT, where test is the name of the desired test module."}, {"heading": "6. Conclusion and future work", "text": "We have described CAVaT, a language-independent tool which adds a layer of abstraction between TimeML markup and human researchers, making data easier to analyse, and patterns easier to spot. It also helps identify trouble spots in annotations. TimeML corpora are only available at this time in Romanian (Fora\u0306scu et al., 2007) and English; this makes multilingual testing of the tool difficult. However, the markup is not language-specific, and results are likely to be equally useful across many languages; this may be shown using test corpora released for TempEval 26, which will include English, Italian, Spanish, Chinese, Korean and French.\nFuture work CAVaT may be able to provide repair suggestions. These may include fixes for inconsistent graphs, as well as suggestions for missing fields based on lexical resources, third-party tools or heuristics. The modular error checks allow creation of an open database of TimeML validations, to help improve the integrity of all TimeML corpora. Check modules that match the output of rule-based high confidence tools such as S2T (Verhagen and Pustejovsky, 2008) can be added. The consistency checker is \u201ca TimeML closure engine that uses the precise relations behind the scenes\u201d (Verhagen, 2005). Therefore, it may be used to empirically discover how often incorrect links are introduced in closure, when compared with the existing leading closure tool, SputLink.\n5LDC catalogue number LDC2006T08 6http://www.timeml.org/tempeval2/\nAcknowledgements The first author would like to acknowledge the UK Engineering and Physical Science Research Council for support in the form of a doctoral studentship, and Marc Verhagen of Brandeis University for useful comments on the temporal closure process."}, {"heading": "7. References", "text": "J.F. Allen. 1983. Maintaining Knowledge about Temporal\nIntervals. Communications of the ACM, 26(11). B. Boguraev, J. Pustejovsky, R. Ando, and M. Verhagen.\n2007. Timebank evolution as a community resource for timeml parsing. Language Resources and Evaluation, 41(1):91\u2013115. L. Burnard and T. Dodd. 2003. Xara: an XML aware tool for corpus searching. In Proceedings of Corpus Linguistics, pages 142\u20134. C. Fora\u0306scu, R. Ion, and D. Tufis\u0327. 2007. Semi-automatic Annotation of the Romanian TimeBank 1.2. In Proceedings of the RANLP Workshop on Computer-aided language processing, pages 978\u2013954. ISOTimeML Working Group. 2008. 24617-1: 2008. Language resources management\u2013Semantic annotation framework (SemAF)\u2013Part1: Time and events. ISO/TC 37/SC 4/WG 2. M. Hepple, A. Setzer, and R. Gaizauskas. 2007. USFD: preliminary exploration of features and classifiers for the TempEval-2007 tasks. In Proceedings of the 4th International Workshop on Semantic Evaluations, pages 438\u2013 441. Association for Computational Linguistics. M. Lapata and A. Lascarides. 2006. Learning sentenceinternal temporal relations. Journal of Artificial Intelligence Research, 27(1):85\u2013117. I. Mani, M. Verhagen, B. Wellner, C.M. Lee, and J. Pustejovsky. 2006. Machine learning of temporal relations. In Proceedings of the 44th annual meeting of the Association for Computational Linguistics, page 760. J. Pustejovsky, P. Hanks, R. Sauri, A. See, R. Gaizauskas, A. Setzer, D. Radev, B. Sundheim, D. Day, L. Ferro, et al. 2003. The TimeBank corpus. In Corpus Linguistics, pages 647\u2013656. A. Setzer, R. Gaizauskas, and M. Hepple. 2005. The role of inference in the temporal annotation and analysis of text. Language Resources and Evaluation, 39(2):243\u2013 265. E.P.K. Tsang. 1987. The consistent labeling problem in temporal reasoning. In Proc. AAAI Conference, Seattle, pages 251\u2013255. M. Verhagen and J. Pustejovsky. 2008. Temporal processing with the TARSQI toolkit. Proceedings of CoLing: Posters and Demonstrations, pages 189\u2013192. M. Verhagen. 2005. Temporal closure in an annotation environment. Language Resources and Evaluation, 39(2):211\u2013241. M. Vilain, H. Kautz, and P. Van Beek. 1989. Constraint propagation algorithms for temporal reasoning: A revised report. Readings in qualitative reasoning about physical systems, 373:381."}], "references": [{"title": "Maintaining Knowledge about Temporal Intervals", "author": ["J.F. Allen."], "venue": "Communications of the ACM, 26(11).", "citeRegEx": "Allen.,? 1983", "shortCiteRegEx": "Allen.", "year": 1983}, {"title": "Timebank evolution as a community resource for timeml parsing", "author": ["B. Boguraev", "J. Pustejovsky", "R. Ando", "M. Verhagen."], "venue": "Language Resources and Evaluation, 41(1):91\u2013115.", "citeRegEx": "Boguraev et al\\.,? 2007", "shortCiteRegEx": "Boguraev et al\\.", "year": 2007}, {"title": "Xara: an XML aware tool for corpus searching", "author": ["L. Burnard", "T. Dodd."], "venue": "Proceedings of Corpus Linguistics, pages 142\u20134.", "citeRegEx": "Burnard and Dodd.,? 2003", "shortCiteRegEx": "Burnard and Dodd.", "year": 2003}, {"title": "Semi-automatic Annotation of the Romanian TimeBank 1.2", "author": ["C. For\u0103scu", "R. Ion", "D. Tufi\u015f"], "venue": "In Proceedings of the RANLP Workshop on Computer-aided language processing,", "citeRegEx": "For\u0103scu et al\\.,? \\Q2007\\E", "shortCiteRegEx": "For\u0103scu et al\\.", "year": 2007}, {"title": "24617-1: 2008", "author": ["ISOTimeML Working Group."], "venue": "Language resources management\u2013Semantic annotation framework (SemAF)\u2013Part1: Time and events. ISO/TC 37/SC 4/WG 2.", "citeRegEx": "Group.,? 2008", "shortCiteRegEx": "Group.", "year": 2008}, {"title": "USFD: preliminary exploration of features and classifiers for the TempEval-2007 tasks", "author": ["M. Hepple", "A. Setzer", "R. Gaizauskas."], "venue": "Proceedings of the 4th International Workshop on Semantic Evaluations, pages 438\u2013 441. Association for Computational Linguistics.", "citeRegEx": "Hepple et al\\.,? 2007", "shortCiteRegEx": "Hepple et al\\.", "year": 2007}, {"title": "Learning sentenceinternal temporal relations", "author": ["M. Lapata", "A. Lascarides."], "venue": "Journal of Artificial Intelligence Research, 27(1):85\u2013117.", "citeRegEx": "Lapata and Lascarides.,? 2006", "shortCiteRegEx": "Lapata and Lascarides.", "year": 2006}, {"title": "Machine learning of temporal relations", "author": ["I. Mani", "M. Verhagen", "B. Wellner", "C.M. Lee", "J. Pustejovsky."], "venue": "Proceedings of the 44th annual meeting of the Association for Computational Linguistics, page 760.", "citeRegEx": "Mani et al\\.,? 2006", "shortCiteRegEx": "Mani et al\\.", "year": 2006}, {"title": "The role of inference in the temporal annotation and analysis of text", "author": ["A. Setzer", "R. Gaizauskas", "M. Hepple."], "venue": "Language Resources and Evaluation, 39(2):243\u2013 265.", "citeRegEx": "Setzer et al\\.,? 2005", "shortCiteRegEx": "Setzer et al\\.", "year": 2005}, {"title": "The consistent labeling problem in temporal reasoning", "author": ["E.P.K. Tsang."], "venue": "Proc. AAAI Conference, Seattle, pages 251\u2013255.", "citeRegEx": "Tsang.,? 1987", "shortCiteRegEx": "Tsang.", "year": 1987}, {"title": "Temporal processing with the TARSQI toolkit", "author": ["M. Verhagen", "J. Pustejovsky."], "venue": "Proceedings of CoLing: Posters and Demonstrations, pages 189\u2013192.", "citeRegEx": "Verhagen and Pustejovsky.,? 2008", "shortCiteRegEx": "Verhagen and Pustejovsky.", "year": 2008}, {"title": "Temporal closure in an annotation environment", "author": ["M. Verhagen."], "venue": "Language Resources and Evaluation, 39(2):211\u2013241.", "citeRegEx": "Verhagen.,? 2005", "shortCiteRegEx": "Verhagen.", "year": 2005}, {"title": "Constraint propagation algorithms for temporal reasoning: A revised report", "author": ["M. Vilain", "H. Kautz", "P. Van Beek."], "venue": "Readings in qualitative reasoning about physical systems, 373:381.", "citeRegEx": "Vilain et al\\.,? 1989", "shortCiteRegEx": "Vilain et al\\.", "year": 1989}], "referenceMentions": [{"referenceID": 10, "context": "Only a few tools have as yet been developed for TimeML, mostly focusing on the annotation task, such as TTK (Verhagen and Pustejovsky, 2008), which does not support analysis.", "startOffset": 108, "endOffset": 140}, {"referenceID": 2, "context": "From the second category, in the absence of other software, the TimeML-using community is restricted to generic XML analysis tools, such as Xaira (Burnard and Dodd, 2003) or LT-XML1, as well as similar format-specific tools (TEI).", "startOffset": 146, "endOffset": 170}, {"referenceID": 7, "context": "Automatically classifying the type of temporal relation between intervals is currently a difficult problem in temporal processing of text (Mani et al., 2006; Lapata and Lascarides, 2006; Hepple et al., 2007).", "startOffset": 138, "endOffset": 207}, {"referenceID": 6, "context": "Automatically classifying the type of temporal relation between intervals is currently a difficult problem in temporal processing of text (Mani et al., 2006; Lapata and Lascarides, 2006; Hepple et al., 2007).", "startOffset": 138, "endOffset": 207}, {"referenceID": 5, "context": "Automatically classifying the type of temporal relation between intervals is currently a difficult problem in temporal processing of text (Mani et al., 2006; Lapata and Lascarides, 2006; Hepple et al., 2007).", "startOffset": 138, "endOffset": 207}, {"referenceID": 11, "context": "\u2022 SputLink fold \u2013 The mapping introduced by Marc Verhagen, included in TTK (Verhagen, 2005).", "startOffset": 75, "endOffset": 91}, {"referenceID": 8, "context": "\u2022 Compact fold \u2013 Reduces TimeML\u2019s link relation set to 3 classes, using mappings defined in Setzer et al. (2005).", "startOffset": 92, "endOffset": 113}, {"referenceID": 12, "context": "TimeML\u2019s relations are based on those of Allen (1983), and it is difficult to guarantee the consistency of networks formed using the latter set of relations (Vilain et al., 1989; Tsang, 1987).", "startOffset": 157, "endOffset": 191}, {"referenceID": 9, "context": "TimeML\u2019s relations are based on those of Allen (1983), and it is difficult to guarantee the consistency of networks formed using the latter set of relations (Vilain et al., 1989; Tsang, 1987).", "startOffset": 157, "endOffset": 191}, {"referenceID": 0, "context": "TimeML\u2019s relations are based on those of Allen (1983), and it is difficult to guarantee the consistency of networks formed using the latter set of relations (Vilain et al.", "startOffset": 41, "endOffset": 54}, {"referenceID": 0, "context": "TimeML\u2019s relations are based on those of Allen (1983), and it is difficult to guarantee the consistency of networks formed using the latter set of relations (Vilain et al., 1989; Tsang, 1987). We re-state the problem in a more simple fashion, as follows. Intervals are represented by pairs of endpoints, and we define intervals and the TimeML relations between them in terms of relations between these points. Our model uses only simultaneous (=) and before (<) relations. The consistency checker works in a similar way to the closure algorithm in Setzer et al. (2005). It maintains an agenda and database.", "startOffset": 41, "endOffset": 569}, {"referenceID": 11, "context": "Similar to the table listed in (Verhagen, 2005).", "startOffset": 31, "endOffset": 47}, {"referenceID": 11, "context": ") and also the results of closure success according to SputLink (Verhagen, 2005).", "startOffset": 64, "endOffset": 80}, {"referenceID": 11, "context": "Disconnected sub-graph detection After inferring a temporal closure (Verhagen, 2005) of a document, one is usually left with a single interconnected temporal graph, where nodes are TIMEX3s or EVENTs and edges represent TLINKs.", "startOffset": 68, "endOffset": 84}, {"referenceID": 1, "context": "This corpus is not new and has been amended and improved by the community (Boguraev et al., 2007), so may contain many fewer errors than freshly annotated documents.", "startOffset": 74, "endOffset": 97}, {"referenceID": 3, "context": "TimeML corpora are only available at this time in Romanian (For\u0103scu et al., 2007) and English; this makes multilingual testing of the tool difficult.", "startOffset": 59, "endOffset": 81}, {"referenceID": 10, "context": "Check modules that match the output of rule-based high confidence tools such as S2T (Verhagen and Pustejovsky, 2008) can be added.", "startOffset": 84, "endOffset": 116}, {"referenceID": 11, "context": "The consistency checker is \u201ca TimeML closure engine that uses the precise relations behind the scenes\u201d (Verhagen, 2005).", "startOffset": 103, "endOffset": 119}], "year": 2012, "abstractText": "We present CAVaT, a tool that performs Corpus Analysis and Validation for TimeML. CAVaT is an open source, modular checking utility for statistical analysis of features specific to temporally-annotated natural language corpora. It provides reporting, highlights salient links between a variety of general and time-specific linguistic features, and also validates a temporal annotation to ensure that it is logically consistent and sufficiently annotated. Uniquely, CAVaT provides analysis specific to TimeML-annotated temporal information. TimeML is a standard for annotating temporal information in natural language text. In this paper, we present the reporting part of CAVaT, and then its error-checking ability, including the workings of several novel TimeML document verification methods. This is followed by the execution of some example tasks using the tool to show relations between times, events, signals and links. We also demonstrate inconsistencies in a TimeML corpus (TimeBank) that have been detected with CAVaT.", "creator": "dvips(k) 5.991 Copyright 2011 Radical Eye Software"}}}