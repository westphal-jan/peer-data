{"id": "1204.5805", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Apr-2012", "title": "Intelligent Automated Diagnosis of Client Device Bottlenecks in Private Clouds", "abstract": "designers present microsoft automated solution called client diagnosis global client device problems in private residential environments : the intelligent query driver positioning ( abs ) system. clients are diagnosed with the detection of incident control protocol ( gps ) packet optimization, by ( higher ) observation of anomalous congestion removed as a result of each step associated ( latter ) clinical use of direct inference capabilities of remote - margin flexible scheduling machine ( svm ) classifiers. the iacd system facilitates variable modular keyboard and is extendible to several faults, with detection capability unaffected by whatever tcp variant used while normal task. experimental evaluation by the fault system in externally controlled environment brought an overall diagnostic productivity along 98 %.", "histories": [["v1", "Thu, 26 Apr 2012 01:49:57 GMT  (1188kb)", "http://arxiv.org/abs/1204.5805v1", "2011 Fourth IEEE International Conference on Utility and Cloud Computing (UCC)"]], "COMMENTS": "2011 Fourth IEEE International Conference on Utility and Cloud Computing (UCC)", "reviews": [], "SUBJECTS": "cs.NI cs.AI", "authors": ["c widanapathirana", "j li", "y a sekercioglu", "m ivanovich", "p fitzpatrick"], "accepted": false, "id": "1204.5805"}, "pdf": {"name": "1204.5805.pdf", "metadata": {"source": "CRF", "title": "Intelligent Automated Diagnosis of Client Device Bottlenecks in Private Clouds", "authors": ["Chathuranga Widanapathirana", "Jonathan Li", "Y. Ahmet \u015eekercio\u011flu", "Milosh Ivanovich", "Paul Fitzpatrick"], "emails": [], "sections": [{"heading": null, "text": "I. INTRODUCTION\nWith the rapid adoption of the \u201ccloud applications\u201d by the ordinary, non-expert users, \u201calways available\u201d network connections, and consistently fast communication speeds are becoming critically important. The networking research community has converged on the common understanding that performance unpredictability and data transfer bottlenecks are going to be significant obstacles for satisfactory cloud computing experience [1], [2]. A number of recent industry surveys cite that a primary challenge in managing cloud services is the lack of tools to identify the sources of performance bottlenecks and rapid troubleshooting. Additionally, automation is a mandatory requirement for achieving highly scalable cloud services, which present a significant research challenge for creating comprehensive diagnostic solutions [3]. Since, data centers employ experienced technical staff that continuously monitor and resolve performance issues within their systems that host the cloud, connection performance problems experienced by a user are most likely to occur in the client device itself [4]. The problems are often\n\u2022 the result of overly conservative default networking parameters supplied with the operating system, \u2022 client device configuration errors, \u2022 mismatch between the client device and link settings, or \u2022 could even be some subtle, intermittent hardware errors.\nAs an example, a relatively large number of operating system parameters can be optimally set leading to significant improvement on user experience, but in\npractice these settings are difficult for ordinary users to manipulate. Some studies have found that network data rates reached by average users are only one third of those achieved by expert users, a phenomenon commonly referred to as the \u201dWizard Gap\u201d [5]. Hence, a fully automated and comprehensive solution is required for rapid diagnosis of client device problems. Diagnosis methods based on collected packet traces over TCP (Transmission Control Protocol) sessions have been shown to be effective for finding the root causes of a number of complicated network problems in special cases [6]. The packet traces contain artifacts that reveal the behavioral characteristics of the underlying network elements, and skilled investigators can use them to pinpoint the location and the root causes of the faults. A great advantage of TCP trace analysis methods is, the trace collection can easily be done quickly and without any special equipment. However, the expertise and resources required for these methods hinder their general applicability. In addition, TCP based diagnosis methods available today do not offer fully automated solutions, easy extendability through learning capabilities, robustness against TCP variants, or ease of implementation [7]\u2013 [11]. We think that TCP trace analysis based diagnosis tools can be made fully automated through machine learning methods, and their capabilities can be greatly extended. In this paper, we demonstrate the potential of machine learning by presenting our intelligent inference method \u201cIntelligent Automated Client Diagnostic (IACD)\u201d system, and early results of a feasibility study. In the feasibility study, we focus only on the private cloud1 environments becaouse they offer relative simplicity in access network architecture as compared to much more complex public or hybrid cloud networks. We will use this work as a starting point towards the creation of a broadly applicable general solution. The IACD system (i) relies only on collection of packet traces upon reporting of a problem, and (ii) focuses on identifying client device faults and misconfigurations to complement the existing diagnosis capabilities used by the network support personnel. The paper first presents the overall framework of the\n1A \u201cprivate cloud\u201d (also called an \u201cinternal cloud\u201d or \u201centerprise cloud\u201d) is a data center architecture that provides hosted services to a limited number of users behind a firewall [12].\n978-0-7695-4592-9/11 $26.00 \u00a9 2011 IEEE\nDOI 10.1109/UCC.2011.42\n261\nIACD system. Then the paper describes the details of the classifier training phase and how the diagnosis is performed. Next, the system performance is evaluated against various client faults and TCP types followed by a discussion on the system characteristics and comparison with other available solutions. Finally, the paper concludes with a summary and a description of the future directions.\nII. IACD FRAMEWORK\nThe outline of the IACD system is shown in Figure 1. The system\u2019s input is a TCP packet trace of a known stream of data between the client device and the access router of the data center. The packet trace can easily be obtained through a user initiated process by activating a program on a web page specially created for this purpose. The machine learning capabilities of the IACD system are provided by the Client Fault Diagnostic (CFD) classifier (Figure 2). The CFD classifier identifies the presence of artifacts belonging to specific types of faults that cause performance problems, and should be capable of both single fault and multiple simultaneous fault classifications. This requirement has bearing on the design choice for selecting either a binary or multiclass classifier. There are studies [13], [14] that compare these approaches for different applications outlining the benefits of each. In our design, we opted to use a parallel network of binary classifier modules (CF-classifiers), each trained to diagnose a single class of fault (Figure 2). This arrangement collectively performs a Multi-class classification. The reasons for this choice are as follows:\n\u2022 flexibility to continually add new diagnostic capabilities, without the need to retrain the complete system, \u2022 freedom to select classifier parameters optimized to detect a specific type of artifact independent of other fault classifiers, \u2022 parallelism which can shorten classification time in a scalable manner as the number of modules increases.\nDuring the training phase: (i) packet traces are obtained under controlled link conditions emulating healthy and\nfaulty clients (ii) \u201dclass labels\u201d are assigned to each trace, (iii) features are extracted, and (iv) feature vector-class label pairs are stored in a database\n\u0398cfd = {(x1, y1), . . . , (xn, yn)} . (1)\nHere xi \u2208 \u211c m is the m-dimensional feature vector, yi \u2208 {\ncf0, . . . , cfp }\nis the class label associated with the feature vector xi, p is the number of classes, i = 1, . . . , n, and n is the number of packet traces collected. The class label cf0 is used for a healthy client and cf1, cf2, . . . , cfp for p types of different client faults. The feature vector xi, combined with the class label yi, is called the \u201dsignature\u201d of the i th instance. Each CF-classifier module then selects a training data subset (\u0398 j cf) with signatures labeled as cfj for the faulty class and cf0 for the healthy class for training the j th binary CF-classifier as in (3)\n\u0398 j cf = {(xk, cf0), . . . , (xj, cfj)}, (2)\nwhere k and j constitute the signature subset used in training. Then, each module independently processes data and selects the unique feature subset (artifact) that separates the two classes. Subsequently, this feature subset is sent to the pattern classifier module to model the classifier boundaries. Each CF-classifier module uses an L2 softmargin Support Vector Machine (SVM) [15] for pattern classification (we conducted experiments with Decision Trees [16], Artificial Neural Networks [17], Na\u0131\u0308ve Bayes (NB) [18], k-Nearest Neighbour [19] as well, and found that SVM, so far, yields the most accurate results). During the diagnostic phase, the trained CF-classifiers determine if a trace sample contains the artifacts from each particular fault."}, {"heading": "III. CLASSIFIER TRAINING", "text": ""}, {"heading": "A. Data Collection", "text": "Training samples are collected either from a test bed to emulate the faults in a well-regulated network or from the live cloud network. The diagnostic accuracy of the classifier is highly dependent on the effectiveness of emulating the fault correctly, and the consistency of the artifacts collected. Using standard packet capture libraries, we collect two traces, one at the client and one at the server. Both traces are captured with bi-directional packet flows with file of size 100MB to ensure most connection details are intercepted."}, {"heading": "B. Trace Signature Creation", "text": "The two collected packet traces are analyzed individually, and their extracted features are combined to form an m-dimensional feature vector, x (in equation (1)). We have developed a signature extraction technique, based on an open source trace analysis tool \u201dtcptrace\u201d [20], that extracts 140 different statistical parameters for each trace which forms a combined total of 280 parameters for each\nsignature. For example, a raw feature vector xi from a faulty link before any data pre-processing may look like\nxi = {249256, 295, 0, 32, 39, 1, 1, ...}, (3)\nwith each numerical value representing an aggregated statistic from the trace such as total pkts, ack pkts, resets, rexmt data pkts, zero window probe pkts. This statistical trace characterization technique maps a packet stream into a set of numerical values encapsulating the connection characteristics and preserving the fault artifacts. The signatures are unique, even within the same class due to the minor variations of the connection. Yet, for each type of fault class, there exists a subset of features with common values and correlation which are specific for that class. This unique subset of features forms the artifact."}, {"heading": "C. Data Pre-Processing", "text": "The raw feature vectors are further processed before being used for classifier training. This step improves the overall classification accuracy by enhancing data coherency and consistency within the classes. First, categorical attributes such as the class labels cf0 and cfj are converted to numeric data as in\nyi \u2261cf0 \u2261 \u22121, (4a)\nyi \u2261cfj \u2261 +1 for j = 1, ..., p. (4b)\nThen the data is shifted and linearly re-scaled along each feature to fit in the range 0-1. Data re-scaling avoids numerical difficulties and avoids features with greater numeric range dominating the smaller."}, {"heading": "D. Feature Selection", "text": "Although the signature format is identical in every sample, only a particular subset of features contribute to\nthe artifact. We use a simple automated feature selection method to select the best suitable feature subset for a particular classifier. Our proposed feature selection method is shown in Figure 3. This algorithm, similar to work discussed by Xing et al. [21] and Das et al. [22], follows a hybrid approach (between filter and wrapper) for automatically isolating the best feature subsets. We first use a filter, Student\u2019s t-test (two sample t-test) (implemented similar to [23]) to assess the significance of every feature for separating the two classes. Next, the features sorted in the order of significance are crossvalidated by incrementing the number of features selected for each class (wrapper technique) against test samples to identify the best number of features required for each classifier. The feature selection process reduces the m-dimensional feature vector in (1) to q-dimensions, where the combination of q features create the artifact. Note that further fundamental analyses of the relationship between selected features and client faults can be facilitated by, and in turn aid in refining, the feature selection process."}, {"heading": "IV. FAULT DIAGNOSIS", "text": "Once the training phase is completed, each classifier module contains (i) filtering parameters (scale factors) derived during pre-processing, (ii) a feature list chosen during feature selection, and (iii) a classifier created using SVMs. During the diagnostic phase, packet traces are captured using the trace collection application at the undiagnosed client. Then the traces are sent through the IACD system which feeds the traces into the CFclassifier network. Each CF-classifier then identifies if the particular fault exists in the trace. The collective output of n CF-classifiers determine the faults that exists in the client. However, at this stage, the system is not capable of diagnosing unknown faults in a trace."}, {"heading": "V. PERFORMANCE EVALUATION", "text": ""}, {"heading": "A. Network Emulation and Experiment Criteria", "text": "As a proof of concept, data was collected in a network test bed which emulated an access link, client computer and the access server as shown in Figure 4. The client and server used Linux 2.6.32 systems (with Ubuntu distribution), capable of running multiple TCP variants. The access link was emulated using a network emulator, dummynet [24] on FreeBSD 7.3. Each box was connected using full-duplex cat5e ethernet. The dummynet emulated a full-duplex wired access link with a 80Mb/s bandwidth, 10ms delay with no packet losses and no packet reordering. Faulty links conditions were created by creating packet losses (from 1% up to 10%) and increased delays (from 15ms up to 100ms). Both the server, dummynet box, and the healthy client had an optimized protocol stack to avoid bottlenecks. Client faults were emulated using the Linux TCP parameter configurations. Then the traces were captured using the technique discussed previously. The performance of the IACD system was analyzed with a network of four CF-classifier modules. We emulated the disabled Selective Acknowledgement (SACK) option (CF-Classifier 1) and the disabled Duplicate Selective Acknowledgement (D-SACK) option (CF-Classifier 2), which have been found to cause performance issues in the high bandwidth connections [25]\u2013[28]. Also, Socket buffer limitations, another common and hard to diagnose performance bottleneck [6], [29] were emulated by creating insufficient read buffers (CF-Classifier 3) and write buffers (CF-Classifier 4) at the client as two separate cases. Multiple, simultaneous client faults were\nemulated by creating both read and write socket buffer limitations at the same time. All buffer limitations were emulated using three buffer levels to collect traces from a range of possible scenarios. For training data, both the server and client were limited to run TCP-CUBIC [30] with only 11 traces per each fault class being collected to re-create the worst case practical limitations. To analyze the system performance, we collected four testing data sets as follows: (i) the same data set used in training and, separately collected sets with (ii) TCP-CUBIC client, (iii) TCP-BIC [31] client, (iv) TCP-NewReno [32] client. The data sets (iii) and (iv) were collected with other TCP variants to evaluate the TCP agnostic properties of the system."}, {"heading": "B. Diagnostic Performance", "text": "Figure 5 shows the diagnostic accuracy of the CFD classifier, which considers the collective decision taken using the output of the CF-classifier network. When tested with the CUBIC training and testing data sets, the system was capable of diagnosing the client\u2019s disabled SACK option, disabled D-SACK option, read buffer limitation and write buffer limitations with high accuracy. Similarly, when tested with TCP-BIC and TCPNewReno, variants not used during the training phase, the four client faults were diagnosed with 100% accuracy. These results suggest that proposed CFD classifier design may be independent of TCP variant. The healthy clients were identified with a 94.81% and 93.5% accuracy during the first two tests of TCP-CUBIC train and test data sets. When samples from healthy clients with TCP-BIC and TCP-NewReno were tested, the detection accuracies were at 92.10% and 91.71%, marginally lower than the other cases. This is due to the slightly higher tendency of obtaining a false positive in at least one of the CF-classifiers by healthy clients\u2019 traces compared to other samples. When presented with traces taken from clients with simultaneous read and write buffer deficiencies, CF-classifier 3 and CF-classifier 4 were capable of independently identifying the faults from the trace. This capability led to a collective diagnostic accuracy of 96.97%, 96.90% and 100% for CUBIC, BIC and NewReno data sets, respectively."}, {"heading": "VI. SYSTEM CHARACTERISTICS AND COMPARISON WITH THE SIMILAR WORK", "text": "For the root cause diagnosis of client performance problems, the proposed IACD system offers many advantages over the other available trace inference methods.\n\u2022 The system offers a fully-automated, comprehensive framework which is extendible to diagnose a diverse range of faults, contrary to the limited capabilities of offered by tools that uses TCP traces for information gathering and measurement purposes [9], [11], [33]. \u2022 Diagnostic capability of the system evolves with the diversity of the fault signature databases, instead\nof the inference algorithm. Users can collaborate to create common signature repositories, encompassing a wide range of faults, networks, and client platforms. Most rule based systems are limited to a specific set of faults and lack the generality to operate effectively in a dynamic environment [7], [8], [10], [34]. \u2022 The system relies solely on packet traces collected at end-points and can be implemented as an application. This provides flexibility for the operator to deploy the IACD system at any desired network location. Popular client diagnostic solutions, mainly based on Web100 TCP kernel instrumentation require changes to the kernel and the system it self [10], [35], [36]. \u2022 End-user systems can be diagnosed without remotely accessing or physically logging on to the systems; a capability unavailable in many network diagnostic tools. Most machine learning based solution such as \u201dNEVERMIND\u201d [37], \u201dpinpoint\u201d [38], \u201dNetprints\u201d [33] require information such as user requests, event logs, system calls or private network traffic which demands privileged access. \u2022 The proposed technique, contrary to many other similar work, avoids both the idiosyncrasies of individual TCP implementation and the usage of TCP flags as an information source as they sometimes are misleading [7]\u2013[9], [39]. Instead, the connections are characterized using per-connection statistics without relying on the negotiated flags and independent of the TCP variant. \u2022 Although the system is designed to diagnose client terminals accessing the cloud, the same system can be used for diagnosing internal nodes of the cloud by deploying a trace collection module in a neighboring node and training with suitable data."}, {"heading": "VII. CONCLUSION AND FUTURE DIRECTIONS", "text": "We have proposed and evaluated the IACD system, an automated client diagnostic system for private cloud\nenvironments. IACD system uses an intelligent inference based approach of TCP packet traces to identify artifacts created by client faults. The CFD classifier performs a complex multi class classification of client faults using a parallel network of SVM-based CF-classifiers. The modular design of the CFD classifier offers extendibility to diagnose new faults by training CF-classifier modules independently. We evaluated the system by diagnosing four types of common client problems with various TCP implementations. Additionally, we analyzed system performance in the absence of any client faults and also in the case of multiple simultaneous faults. Our results show that, with a small number of training samples, CF-classifier modules collectively produce high diagnostic accuracy in all tested scenarios, including clients with different faults, TCP variants, default clients and multiple faults. To our knowledge, the IACD system is the first framework for automating the client diagnosis with TCP packet trace-based fault signatures and SVM-based learning. The work presented in the paper only serves as a feasibility study to explore the system capabilities in a limited network environments. This work provides the foundation to extend the system to a more complex cloud computing environments such as public and hybrid clouds with thousands of users, diverse client platforms and extremely complex traffic patterns."}], "references": [{"title": "A view of cloud computing", "author": ["M. Armbrust", "A. Fox", "R. Griffith", "A. Joseph", "R. Katz", "A. Konwinski", "G. Lee", "D. Patterson", "A. Rabkin", "I. Stoica", "Others"], "venue": "Communications of the ACM, vol. 53, no. 4, pp. 50\u201358, 2010.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2010}, {"title": "Elucidation of Upcoming Traffic Problems in Cloud Computing", "author": ["M. Mathur"], "venue": "Recent Trends in Networks and Communications, pp. 68\u201379, 2010.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2010}, {"title": "The Cost of a Cloud : Research Problems in Data Center Networks", "author": ["A. Greenberg", "J. Hamilton", "D.A. Maltz", "P. Patel"], "venue": "Computer Communication Review, vol. 39, no. 1, pp. 68\u201373, 2009.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2009}, {"title": "Wireless RF interference customer survey results", "author": ["Cisco"], "venue": "Cisco Systems, Inc, San Jose, CA, Survey. Rep 02-03, 2010. [Online]. Available: http://www.cisco.com/en/US/prod/collateral/ wireless/ps5678/ps10981/white paper c11-609300.pdf", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Pushing up performance for everyone", "author": ["M. Mathis"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1999}, {"title": "Experiences using Web100 for end-to-end network performance tuning", "author": ["T.J. Hacker", "B.D. Athey", "J. Sommerfield"], "venue": "Proceedings of the 4th Visible Human Project Conference, Nov. 2002.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2002}, {"title": "Automated packet trace analysis of TCP implementations", "author": ["V. Paxson"], "venue": "Proceedings of the ACM SIGCOMM\u201997 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication. Cannes, France: ACM, Sep. 1997, pp. 167\u2013179.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1997}, {"title": "On inferring TCP behavior", "author": ["J. Pahdye", "S. Floyd"], "venue": "Proceedings of the ACM SIGCOMM\u201901 Conference on Applications, technologies, architectures, and protocols for computer communications. New York, NY, USA: ACM, Aug. 2001, pp. 287\u2013298.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2001}, {"title": "Passive identification and analysis of TCP anomalies", "author": ["M. Mellia", "M. Meo", "L. Muscariello", "D. Rossi"], "venue": "Proceedings of the 2006 IEEE International Conference on Communications (ICC\u201906), vol. 2. Istanbul, Turkey: IEEE Communications Society, Jun. 2006, pp. 723 \u2013728.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2006}, {"title": "Pathdiag: automated TCP diagnosis", "author": ["M. Mathis", "J. Heffner", "P. O\u2019Neil", "P. Siemsen"], "venue": "Proceedings of the 9th International Conference on Passive and Active Network Measurement (PAM\u201908). Cleveland, OH, USA: Springer, 2008, pp. 152\u2013161.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2008}, {"title": "Inferring TCP connection characteristics through passive measurements", "author": ["S. Jaiswal", "G. Iannaccone", "C. Diot", "J. Kurose", "D. Towsley"], "venue": "Proceedings of the IEEE INFOCOM\u201904 Conference, vol. 3, Hong Kong, Mar. 2004, pp. 1582 \u20131592 vol.3.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2004}, {"title": "Virtual Infrastructure Management in Private and Hybrid Clouds", "author": ["B. Sotomayor", "R.S. Montero", "I.M. Llorente", "I. Foster"], "venue": "IEEE Internet Computing, vol. 13, no. 5, pp. 14\u201322, Sep. 2009.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2009}, {"title": "Discriminating against new classes: One-class versus multi-class classification", "author": ["K. Hempstalk", "E. Frank"], "venue": "Proceedings of the 21st Australasian Joint Conference on Artificial Intelligence (AI\u201908), Auckland, New Zealand, Dec. 2008, p. 325.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2008}, {"title": "Comparing techniques for multiclass classification using binary SVM predictors", "author": ["A.C. Lorena", "A.C.P.L.F. de Carvalho"], "venue": "Proceedings of the 3rd Mexican International Conference On Artificial Intelligence (MICAI\u201904), pp. 272\u2013281, 2004.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2004}, {"title": "The nature of statistical learning", "author": ["V. Vapnik"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1995}, {"title": "Automatic construction of decision trees from data: A multi-disciplinary survey", "author": ["S. Murthy"], "venue": "Data Mining and Knowledge Discovery, vol. 2, no. 4, pp. 345\u2013389, 1998.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1998}, {"title": "Assistant 86: A knowledge elicitation tool for sophisticated users", "author": ["B. Cestnik", "I. Kononenko", "I. Bratko"], "venue": "Progress in machine learning, pp. 31\u201345, 1987.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1987}, {"title": "Nearest neighbor pattern classification", "author": ["P. Hart"], "venue": "IEEE Transactions on Information Theory, vol. 13, no. 1, pp. 21\u201327, 1967.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1967}, {"title": "Feature selection for high-dimensional genomic microarray data", "author": ["E.P. Xing", "M.I. Jordan", "R.M. Karp"], "venue": "Proceedings of the Eighteenth International Conference on Machine Learning (ICML \u201901), Jun. 2001, pp. 601\u2013608.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2001}, {"title": "Filters, wrappers and a boosting-based hybrid for feature selection", "author": ["S. Das"], "venue": "Proceedings of the Eighteenth International Conference on Machine Learning (ICML \u201901), Jun. 2001, pp. 74\u201381.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2001}, {"title": "Detection of cancer-specific markers amid massive mass spectral data", "author": ["W. Zhu", "X. Wang", "Y. Ma", "M. Rao", "J. Glimm", "J. Kovach"], "venue": "Proceedings of the National Academy of Sciences of the United States of America, vol. 100, no. 25, 2003.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2003}, {"title": "Dummynet: a simple approach to the evaluation of network protocols", "author": ["L. Rizzo"], "venue": "ACM SIGCOMM Computer Communication Review, vol. 27, no. 1, pp. 31\u201341, 1997.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1997}, {"title": "Measuring the evolution of transport protocols in the internet", "author": ["A. Medina", "M. Allman", "S. Floyd"], "venue": "ACM SIGCOMM Computer Communication Review, vol. 35, pp. 37\u201352, Apr. 2005.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2005}, {"title": "Analysis of internet backbone traffic and header anomalies observed", "author": ["W. John", "S. Tafvelin"], "venue": "Proceedings of the ACM Internet Measurements Conference (IMC\u201907). San Diego, CA, USA: ACM, Oct. 2007, pp. 111\u2013116.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2007}, {"title": "A large-scale, passive analysis of end-to-end TCP performance over GPRS", "author": ["P. Benko", "G. Malicsko", "A. Veres"], "venue": "Proceedings of the IEEE INFOCOM\u201904 Conference, vol. 3, Hong Kong, Mar. 2004, pp. 1882 \u20131892.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2004}, {"title": "How good delayed acknowledgement effects rate-based pacing tcp over multi-hop wireless network", "author": ["M. Oo", "M. Othman"], "venue": "2009 International Conference on Signal Processing Systems, May 2009, pp. 464 \u2013468.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2009}, {"title": "Root cause analysis for long-lived TCP connections", "author": ["M. Siekkinen", "G. Urvoy-Keller", "E.W. Biersack", "T. En-Najjary"], "venue": "Proceedings of the ACM conference on Emerging network experiment and technology (CoNEXT\u201905), Toulouse, France, 2005, pp. 200\u2013210.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2005}, {"title": "CUBIC: a new TCP-friendly high-speed TCP variant", "author": ["S. Ha", "I. Rhee", "L. Xu"], "venue": "ACM SIGOPS Operating Systems Review, vol. 42, no. 5, pp. 64\u201374, 2008.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2008}, {"title": "Binary increase congestion control (bic) for fast long-distance networks", "author": ["L. Xu", "K. Harfoush", "I. Rhee"], "venue": "Proceedings of the IEEE INFOCOM\u201904 Conference, vol. 4, Hong Kong, Mar. 2004, pp. 2514 \u2013 2524.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2004}, {"title": "The NewReno Modification to TCP\u2019s Fast Recovery Algorithm", "author": ["S. Floyd", "T. Henderson", "A. Gurtov"], "venue": "RFC 3782, Sep. 2004.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2004}, {"title": "Netprints: diagnosing home network misconfigurations using shared knowledge", "author": ["B. Aggarwal", "R. Bhagwan", "T. Das", "S. Eswaran", "V. Padmanabhan", "G. Voelker"], "venue": "Proceedings of the 6th USENIX Symposium on Networked Systems Design and Implementation, Berkeley, CA, USA, 2009, pp. 349\u2013364.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2009}, {"title": "Developing the Web100 based network diagnostic tool (NDT)", "author": ["R. Carlson"], "venue": "Proceedings of the 4th International Conference on Passive and Active Network Measurement (PAM\u201903). San Diego, CA, USA: Springer, 2003.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2003}, {"title": "Web100: extended TCP instrumentation for research, education and diagnosis", "author": ["M. Mathis", "J. Heffner", "R. Reddy"], "venue": "ACM SIGCOMM Computer Communication Review, vol. 33, no. 3, pp. 69\u2013 79, 2003.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2003}, {"title": "Nevermind, the problem is already fixed: proactively detecting and troubleshooting customer dsl problems", "author": ["Y. Jin", "N. Duffield", "A. Gerber", "P. Haffner", "S. Sen", "Z. Zhang"], "venue": "Proceedings of the ACM conference on Emerging network experiment and technology (CoNEXT\u201910), New York, NY, USA, 2010, pp. 1\u201312.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2010}, {"title": "Pinpoint: problem determination in large, dynamic internet services", "author": ["M. Chen", "E. Kiciman", "E. Fratkin", "A. Fox", "E. Brewer"], "venue": "Proceedings of the International Conference on Dependable Systems and Networks(DSN\u201902), Jun. 2002, pp. 595 \u2013 604.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2002}, {"title": "Passive Analysis of TCP Anomalies", "author": ["M. Mellia", "M. Meo", "L. Muscariello", "D. Rossi"], "venue": "Computer Networks, vol. 52, no. 14, pp. 2663\u20132676, 2008. 266", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "The networking research community has converged on the common understanding that performance unpredictability and data transfer bottlenecks are going to be significant obstacles for satisfactory cloud computing experience [1], [2].", "startOffset": 222, "endOffset": 225}, {"referenceID": 1, "context": "The networking research community has converged on the common understanding that performance unpredictability and data transfer bottlenecks are going to be significant obstacles for satisfactory cloud computing experience [1], [2].", "startOffset": 227, "endOffset": 230}, {"referenceID": 2, "context": "lenge for creating comprehensive diagnostic solutions [3].", "startOffset": 54, "endOffset": 57}, {"referenceID": 3, "context": "performance problems experienced by a user are most likely to occur in the client device itself [4].", "startOffset": 96, "endOffset": 99}, {"referenceID": 4, "context": "Some studies have found that network data rates reached by average users are only one third of those achieved by expert users, a phenomenon commonly referred to as the \u201dWizard Gap\u201d [5].", "startOffset": 181, "endOffset": 184}, {"referenceID": 5, "context": "Diagnosis methods based on collected packet traces over TCP (Transmission Control Protocol) sessions have been shown to be effective for finding the root causes of a number of complicated network problems in special cases [6].", "startOffset": 222, "endOffset": 225}, {"referenceID": 6, "context": "In addition, TCP based diagnosis methods available today do not offer fully automated solutions, easy extendability through learning capabilities, robustness against TCP variants, or ease of implementation [7]\u2013 [11].", "startOffset": 206, "endOffset": 209}, {"referenceID": 10, "context": "In addition, TCP based diagnosis methods available today do not offer fully automated solutions, easy extendability through learning capabilities, robustness against TCP variants, or ease of implementation [7]\u2013 [11].", "startOffset": 211, "endOffset": 215}, {"referenceID": 11, "context": "1A \u201cprivate cloud\u201d (also called an \u201cinternal cloud\u201d or \u201centerprise cloud\u201d) is a data center architecture that provides hosted services to a limited number of users behind a firewall [12].", "startOffset": 182, "endOffset": 186}, {"referenceID": 12, "context": "There are studies [13], [14] that compare these approaches for different applications outlining the benefits of each.", "startOffset": 18, "endOffset": 22}, {"referenceID": 13, "context": "There are studies [13], [14] that compare these approaches for different applications outlining the benefits of each.", "startOffset": 24, "endOffset": 28}, {"referenceID": 14, "context": "Each CF-classifier module uses an L2 softmargin Support Vector Machine (SVM) [15] for pattern classification (we conducted experiments with Decision Trees [16], Artificial Neural Networks [17], Na\u0131\u0308ve Bayes (NB) [18], k-Nearest Neighbour [19] as well, and found that SVM, so far, yields the most accurate results).", "startOffset": 77, "endOffset": 81}, {"referenceID": 15, "context": "Each CF-classifier module uses an L2 softmargin Support Vector Machine (SVM) [15] for pattern classification (we conducted experiments with Decision Trees [16], Artificial Neural Networks [17], Na\u0131\u0308ve Bayes (NB) [18], k-Nearest Neighbour [19] as well, and found that SVM, so far, yields the most accurate results).", "startOffset": 155, "endOffset": 159}, {"referenceID": 16, "context": "Each CF-classifier module uses an L2 softmargin Support Vector Machine (SVM) [15] for pattern classification (we conducted experiments with Decision Trees [16], Artificial Neural Networks [17], Na\u0131\u0308ve Bayes (NB) [18], k-Nearest Neighbour [19] as well, and found that SVM, so far, yields the most accurate results).", "startOffset": 212, "endOffset": 216}, {"referenceID": 17, "context": "Each CF-classifier module uses an L2 softmargin Support Vector Machine (SVM) [15] for pattern classification (we conducted experiments with Decision Trees [16], Artificial Neural Networks [17], Na\u0131\u0308ve Bayes (NB) [18], k-Nearest Neighbour [19] as well, and found that SVM, so far, yields the most accurate results).", "startOffset": 238, "endOffset": 242}, {"referenceID": 18, "context": "[21] and Das et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[22], follows a hybrid approach (between filter and wrapper) for automatically isolating the best feature subsets.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "We first use a filter, Student\u2019s t-test (two sample t-test) (implemented similar to [23]) to assess the significance of every feature for separating the two classes.", "startOffset": 84, "endOffset": 88}, {"referenceID": 21, "context": "The access link was emulated using a network emulator, dummynet [24] on FreeBSD 7.", "startOffset": 64, "endOffset": 68}, {"referenceID": 22, "context": "2), which have been found to cause performance issues in the high bandwidth connections [25]\u2013[28].", "startOffset": 88, "endOffset": 92}, {"referenceID": 25, "context": "2), which have been found to cause performance issues in the high bandwidth connections [25]\u2013[28].", "startOffset": 93, "endOffset": 97}, {"referenceID": 5, "context": "diagnose performance bottleneck [6], [29] were emulated by creating insufficient read buffers (CF-Classifier 3)", "startOffset": 32, "endOffset": 35}, {"referenceID": 26, "context": "diagnose performance bottleneck [6], [29] were emulated by creating insufficient read buffers (CF-Classifier 3)", "startOffset": 37, "endOffset": 41}, {"referenceID": 27, "context": "For training data, both the server and client were limited to run TCP-CUBIC [30] with only 11 traces per", "startOffset": 76, "endOffset": 80}, {"referenceID": 28, "context": "we collected four testing data sets as follows: (i) the same data set used in training and, separately collected sets with (ii) TCP-CUBIC client, (iii) TCP-BIC [31] client, (iv) TCP-NewReno [32] client.", "startOffset": 160, "endOffset": 164}, {"referenceID": 29, "context": "we collected four testing data sets as follows: (i) the same data set used in training and, separately collected sets with (ii) TCP-CUBIC client, (iii) TCP-BIC [31] client, (iv) TCP-NewReno [32] client.", "startOffset": 190, "endOffset": 194}, {"referenceID": 8, "context": "framework which is extendible to diagnose a diverse range of faults, contrary to the limited capabilities of offered by tools that uses TCP traces for information gathering and measurement purposes [9], [11], [33].", "startOffset": 198, "endOffset": 201}, {"referenceID": 10, "context": "framework which is extendible to diagnose a diverse range of faults, contrary to the limited capabilities of offered by tools that uses TCP traces for information gathering and measurement purposes [9], [11], [33].", "startOffset": 203, "endOffset": 207}, {"referenceID": 30, "context": "framework which is extendible to diagnose a diverse range of faults, contrary to the limited capabilities of offered by tools that uses TCP traces for information gathering and measurement purposes [9], [11], [33].", "startOffset": 209, "endOffset": 213}, {"referenceID": 6, "context": "Most rule based systems are limited to a specific set of faults and lack the generality to operate effectively in a dynamic environment [7], [8], [10], [34].", "startOffset": 136, "endOffset": 139}, {"referenceID": 7, "context": "Most rule based systems are limited to a specific set of faults and lack the generality to operate effectively in a dynamic environment [7], [8], [10], [34].", "startOffset": 141, "endOffset": 144}, {"referenceID": 9, "context": "Most rule based systems are limited to a specific set of faults and lack the generality to operate effectively in a dynamic environment [7], [8], [10], [34].", "startOffset": 146, "endOffset": 150}, {"referenceID": 31, "context": "Most rule based systems are limited to a specific set of faults and lack the generality to operate effectively in a dynamic environment [7], [8], [10], [34].", "startOffset": 152, "endOffset": 156}, {"referenceID": 9, "context": "Popular client diagnostic solutions, mainly based on Web100 TCP kernel instrumentation require changes to the kernel and the system it self [10], [35], [36].", "startOffset": 140, "endOffset": 144}, {"referenceID": 32, "context": "Popular client diagnostic solutions, mainly based on Web100 TCP kernel instrumentation require changes to the kernel and the system it self [10], [35], [36].", "startOffset": 146, "endOffset": 150}, {"referenceID": 33, "context": "Most machine learning based solution such as \u201dNEVERMIND\u201d [37], \u201dpinpoint\u201d [38], \u201dNetprints\u201d [33] require information such as user requests, event logs, system calls or private network traffic which demands privileged access.", "startOffset": 57, "endOffset": 61}, {"referenceID": 34, "context": "Most machine learning based solution such as \u201dNEVERMIND\u201d [37], \u201dpinpoint\u201d [38], \u201dNetprints\u201d [33] require information such as user requests, event logs, system calls or private network traffic which demands privileged access.", "startOffset": 74, "endOffset": 78}, {"referenceID": 30, "context": "Most machine learning based solution such as \u201dNEVERMIND\u201d [37], \u201dpinpoint\u201d [38], \u201dNetprints\u201d [33] require information such as user requests, event logs, system calls or private network traffic which demands privileged access.", "startOffset": 92, "endOffset": 96}, {"referenceID": 6, "context": "flags as an information source as they sometimes are misleading [7]\u2013[9], [39].", "startOffset": 64, "endOffset": 67}, {"referenceID": 8, "context": "flags as an information source as they sometimes are misleading [7]\u2013[9], [39].", "startOffset": 68, "endOffset": 71}, {"referenceID": 35, "context": "flags as an information source as they sometimes are misleading [7]\u2013[9], [39].", "startOffset": 73, "endOffset": 77}], "year": 2012, "abstractText": "We present an automated solution for rapid diagnosis of client device problems in private cloud environments: the Intelligent Automated Client Diagnostic (IACD) system. Clients are diagnosed with the aid of Transmission Control Protocol (TCP) packet traces, by (i) observation of anomalous artifacts occurring as a result of each fault and (ii) subsequent use of the inference capabilities of soft-margin Support Vector Machine (SVM) classifiers. The IACD system features a modular design and is extendible to new faults, with detection capability unaffected by the TCP variant used at the client. Experimental evaluation of the IACD system in a controlled environment demonstrated an overall diagnostic accuracy of 98%.", "creator": "Adobe Acrobat 9.5.1"}}}