{"id": "1206.3246", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2012", "title": "Strategy Selection in Influence Diagrams using Imprecise Probabilities", "abstract": "this section describes a new algorithm to solved quantitative decision parameter problem in influence pathways based on algorithms for credal activation. decision pathways are correlated to imprecise probability entropy and a candidate is developing that finds the overall maximum response with fidelity to human expected entropy. we work with limited memory cost diagrams, please generalize most influential diagram situations and have detailed calculations. besides the exact statistical method, we explore smallest anytime finite solution with almost discrete maximum error and show that desired probabilities remain evaluated in a straightforward matrix. behavioral issues and experiments with random diagrams and an effects - based military integration capability get discussed.", "histories": [["v1", "Wed, 13 Jun 2012 15:08:24 GMT  (149kb)", "http://arxiv.org/abs/1206.3246v1", "Appears in Proceedings of the Twenty-Fourth Conference on Uncertainty in Artificial Intelligence (UAI2008)"]], "COMMENTS": "Appears in Proceedings of the Twenty-Fourth Conference on Uncertainty in Artificial Intelligence (UAI2008)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["cassio polpo de campos", "qiang ji"], "accepted": false, "id": "1206.3246"}, "pdf": {"name": "1206.3246.pdf", "metadata": {"source": "CRF", "title": "Strategy Selection in Influence Diagrams using Imprecise Probabilities", "authors": ["Cassio P. de Campos"], "emails": ["decamc@rpi.edu", "jiq@rpi.edu"], "sections": [{"heading": null, "text": "This paper describes a new algorithm to solve the decision making problem in Influence Diagrams based on algorithms for credal networks. Decision nodes are associated to imprecise probability distributions and a reformulation is introduced that finds the global maximum strategy with respect to the expected utility. We work with Limited Memory Influence Diagrams, which generalize most Influence Diagram proposals and handle simultaneous decisions. Besides the global optimum method, we explore an anytime approximate solution with a guaranteed maximum error and show that imprecise probabilities are handled in a straightforward way. Complexity issues and experiments with random diagrams and an effects-based military planning problem are discussed."}, {"heading": "1 INTRODUCTION", "text": "An influence diagram is a graphical model for decision making under uncertainty [13]. It is composed by a directed graph where utility nodes are associated to profits and costs of actions, chance nodes represent uncertainties and dependencies in the domain and decision nodes represent actions to be taken. Given an influence diagram, a strategy defines which decision to take at each node, given the information available at that moment. Each strategy has a corresponding expected utility. One of the most important problems in influence diagrams is strategy selection, where we need to find the strategy with maximum expected utility. A simple approach is to evaluate each possible strategy and compare their expected utilities. However, the number of strategies grows exponentially in the number of decision to be taken.\nIn this paper, we propose a new idea to find the best\nstrategy based on a reformulation of the problem as an inference in a credal network [4]. We show through experiments that this approach can handle small and medium diagrams exactly, and provides an anytime approximation in case we stop the process early. Our idea works with a very general class of influence diagrams, named Limited Memory Influence Diagrams (LIMIDs) [15]. Limited Memory means that the assumption of no-forgetting usually employed in Influence Diagrams (that is, values of observed variables and decisions that have been taken are remembered at all later times) is relaxed. This class of diagrams is interesting because most other influence diagram proposals can be efficiently converted into LIMIDs.\nTo solve strategy selection, many approaches work on special cases of influence diagrams, exploiting their characteristics to improve performance. In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21]. The ordering of decision nodes is exploited to evaluate the optimal strategy. There are also proposals in the class of simultaneous influence diagrams, where decisions are assumed to have no antecedents. This assumption reduces the number of possible strategies and allows for factorization ideas [22]. LIMIDs do not have assumptions about no-forgetting and ordering for decisions, even though it is possible to convert diagrams that have such assumptions into LIMIDs.\nIn order to test our method, we generate a data set of random influence diagrams. Empirical results indicate that the accuracy of our method is better than other approaches\u2019. We also apply our idea to solve an Effects-based operations (EBO) military planning. The EBO approach seeks for a campaign objective by considering direct, indirect and cascading effects of military, diplomatic, psychological and economic actions [6, 11]. We use an influence diagram to model an EBO hypothetical problem.\nSection 2 introduces our notation for influence diagrams and the problem of strategy selection. Section 3 describes the framework of credal networks and the inference problem on such networks. Section 4 presents how we solve strategy selection through a reformulation of the problem as an inference in credal networks. Section 5 presents some experiments, including the EBO military planning problem, and finally Section 6 concludes the paper and indicates future work."}, {"heading": "2 INFLUENCE DIAGRAMS", "text": "A Limited Memory Influence Diagram I is composed by a directed acyclic graph (V , E) where nodes are partitioned in three types: chance, decision and utility nodes. Let C, D and U be the set of chance, decision and utility nodes, respectively, and let X = C \u222a D. Links of E characterize dependencies among nodes. Explicitly, links toward a chance node indicate probabilistic dependence of the node on its parents; links toward a decision node indicate which information is available to take such decision, and links toward utility nodes represent that an utility for those parents is to be considered (utility nodes may not have children). Associated to each node, there are some parameters:\n1. A chance node has an associated categorical random variable C with finite domain \u2126C and conditional probability distributions p(C|\u03c0j(C)), for each configuration \u03c0j(C) of its parents \u03c0(C) in the graph. j is used to indicate a configuration of the parents of C, that is, \u03c0j(C) \u2208 \u2126\u03c0(C), where the notation \u2126V\u2032 = \u00d7V \u2208V\u2032 \u2126V , for any V \u2032 \u2286 V .\n2. A decision node D is associated to a finite set of mutually exclusive alternatives \u2126D. Parents of D describe the information that is available at the moment on which decision D has to be taken.\n3. An utility node U is associated to a rational function fU : \u2126\u03c0(U) \u2192 Q. The value corresponding to a parent configuration is the profit (cost is viewed as negative profit) of such parent configuration. Utility nodes have no children.\nA simple example is depicted in Figure 1. Decision nodes are represented by rectangles, chance nodes by ellipses and utility nodes by diamonds. do ground attack has an associated cost, which is depicted by the corresponding utility node. The same is modeled for bomb bridge. The goal is to achieve territory occupation, which also has an utility (the profit of the goal). ground attack and bridge condition represent the uncertain outcomes of the corresponding actions. Note that there is no known ordering on which\ncost_of attack\nground_attack\nterritory_occupation profit of_goal\ndo_ground_attack\nbridge_condition\nbomb_bridge\nbombing cost_of\nFigure 1: Simple Influence Diagram example.\ndecisions must be taken. Although decision nodes have no parents in this example, there is no such restriction.\nA policy \u03b4D for the decision node D is a function \u03b4D : \u2126D\u222a\u03c0(D) \u2192 [0, 1] defined for each alternative of D and each configuration of \u03c0(D) such that, for each \u03c0j(D) \u2208 \u2126\u03c0(D) we have \u2211\nd\u2208\u2126D \u03b4D(d, \u03c0j(D)) = 1.\nA pure policy is a policy such that its image is integer (\u03b4D : \u2126D\u222a\u03c0(D) \u2192 {0, 1}), and thus specifies with certainty which action (alternative of D) is taken for each parent configuration (in a pure policy, only one \u03b4D(d, \u03c0j(D)) for each \u03c0j(D) will be non-zero as they sum 1). A strategy \u2206 is a set of policies {\u03b4D : D \u2208 D}, one for each decision node of the diagram. A pure strategy is composed only by pure policies.\nThe expected utility EU(\u2206) of a strategy \u2206 is evaluated through the following equation:\n\u2211\nx\u2208\u2126X\n(\n\u220f\nC\np(xC |\u03c0j(C)) \u220f\nD\n\u03b4D(xD) \u2211\nU\nfU (\u03c0j\u2032 (U))\n)\n,\n(1) where xC , \u03c0j(C), xD and \u03c0j\u2032 (U) are respectively the projections of x in \u2126C , \u2126\u03c0(C), \u2126D\u222a\u03c0(D) and \u2126\u03c0(U). This equation means that, given a strategy, its expected utility is the sum of the utility values weighted by the probability of each diagram configuration (for all configurations). The maximum expected utility is obtained over all possible strategies:\nMEU = max \u2206 EU(\u2206).\nThe problem of strategy selection is to obtain the strategy that maximizes its expected utility, that is, argmaxmax\u2206 EU(\u2206)."}, {"heading": "3 CREDAL NETWORKS", "text": "We need some concepts of credal networks before presenting the reformulation to solve strategy selection. A convex set of probability distributions is called a\ncredal set [4]. A credal set for X is denoted by K(X); we assume that every random variable is categorical and that every credal set has a finite number of vertices. Given a credal set K(X) and an event A, the upper and lower probability of A are respectively maxp(X)\u2208K(X) p(A) and minp(X)\u2208K(X) p(A). A conditional credal set is a set of conditional distributions, obtained by applying Bayes rule to each distribution in a credal set of joint distributions.\nA (separately specified) credal network N = (G,X,K) is composed by a directed acyclic graph G = (V,E) where each node of V is associated with a random variable Xi \u2208 X and with a collection of conditional credal sets K(Xi|\u03c0(Xi)) \u2208 K, where \u03c0(Xi) denotes the parents of Xi in the graph. Note that we have a conditional credal set related to Xi for each configuration \u03c0j(Xi) \u2208 \u2126\u03c0(Xi). A root node is associated with a single marginal credal set. We take that in a credal network every random variable is independent of its non-descendants non-parents given its parents; this is the Markov condition on the network. In this paper we adopt the concept of strong independence1: two random variables Xi and Xj are strongly independent when every extreme point of K(Xi, Xj) satisfies standard stochastic independence of Xi and Xj (that is, p(Xi|Xj) = p(Xi) and p(Xj|Xi) = p(Xj)) [4]. Strong independence is the most commonly adopted concept of independence for credal sets, probably due to its connection with standard stochastic independence.\nGiven a credal network, its extension is any joint credal set that satisfies all constraints encoded in the network. The strong extension K of a credal network is the largest joint credal set such that every variable is strongly independent of its non-descendants nonparents given its parents. The strong extension of a credal network is the joint credal set that contains every possible combination of vertices for all credal sets in the network [5]; that is, each vertex of a strong extension factorizes as follows:\np(X1, . . . , Xn) = \u220f\ni\np(Xi|\u03c0(Xi)) . (2)\nThus, a credal network can be viewed as a representation for a set of Bayesian networks with distinct parameters but sharing the same graph."}, {"heading": "3.1 INFERENCE", "text": "A marginal inference in a credal network is the computation of upper (or lower) probabilities in an extension of the network. If Xq is a query variable, then a marginal inference is the computation of tight bounds\n1We note that other concepts of independence are found in the literature [3, 10].\nfor p(xq) for one or more categories xq of Xq. For inferences in strong extensions, it is known that distributions that maximize p(xq) belong to the set of vertices of the extension [12]. So, an inference can be produced by combinatorial optimization, as we must find a vertex for each local credal set K(Xi|\u03c0(Xi)) so that Expression (2) leads to a maximum of p(xq). In general, inference offers tremendous computational challenges, and exact inference algorithms based on enumeration of all potential vertices face serious difficulties [4].\nA different way to solve the problem is to recognize that an upper (or lower) value for p(xq) may be obtained by the optimization of a multilinear polynomial over probability values, subject to constraints. This idea is discussed in the literature and different methods to reformulate the inference problem were proposed [7, 9]. Empirical results suggest that this is the most effective way for exact inferences. In the next section, we describe an idea based on bilinear programming [9] to perform inferences in credal networks and show how it can be employed to solve the strategy selection problem of influence diagrams."}, {"heading": "4 STRATEGY SELECTION AS A CREDAL NET INFERENCE", "text": "Suppose we want to find the strategy \u2206opt that maximizes the expected utility in an influence diagram I, that is, \u2206opt = argmaxMEU. Let f and f be the minimum and maximum utility values specified in the diagram for all possible utility nodes and parent configurations, that is,\nf = min U,\u03c0j(U) fU (\u03c0j(U)), f = max U,\u03c0j(U) fU (\u03c0j(U)).\nWe create an identical influence diagram I \u2032 except that the utility function f \u2032U (for each node U) is defined as\n\u2200\u03c0j(U) f \u2032 U (\u03c0j(U)) =\nfU (\u03c0j(U))\u2212 f\nf \u2212 f .\nThe denominator is positive because f < f (if f =\nf , then the influence diagram is trivial as all utility values are equal). We note that this transformation is similar to that proposed by Cooper [2]. It is not hard to see that argmaxMEU = argmaxMEU\u2019 (just take the terms out of summations in Equation (1)), and\nmax \u2206\nEU\u2019(\u2206) = max\u2206 EU(\u2206)\u2212 |U|f\nf \u2212 f .\nThis implies that strategy selection in I is the same as strategy selection in I \u2032. Now, we translate the selection problem of I \u2032 to a credal network inference. Suppose we define a credal network with a similar graph as I \u2032 such that:\n\u2022 Chance nodes are directly translated as nodes of the credal network (parents are the same as in I \u2032).\n\u2022 Utility nodes are translated to binary random nodes. Let U be an utility node with function fU . In the credal network, U becomes a binary node (with the same parents as before) and categories u and \u00acu such that: p(u|\u03c0j(U)) = fU (\u03c0j(U)) and p(\u00acu|\u03c0j(U)) = 1\u2212 p(u|\u03c0j(U)) [2].\n\u2022 Decision nodes are translated to probabilistic nodes with imprecise distributions such that policies become probability distributions (in fact, according to our definition of policy, they are already greater than zero and sum 1). Thus, p(d|\u03c0j(D)) = \u03b4D(d, \u03c0j(D)) for all d and \u03c0j(D). Note that p(D|\u03c0j(D)), for each \u03c0j(D), is a distribution with unknown probability values (this interpretation of decision nodes as imprecise probability nodes is discussed by Antonucci and Zaffalon, see e.g. [1]).\nUsing this credal network formulation, the expected utility of a strategy \u2206 can be written as\nEU\u2019(\u2206) = \u2211\nx\u2208\u2126X\n(\n\u220f\nX\np\u2206(x|\u03c0j(X)) \u2211\nU\np(u|\u03c0j\u2032(U))\n)\n,\nwhere x, \u03c0j(X) and \u03c0j\u2032 (U) are projections of x into the corresponding domains, X ranges on all nodes corresponding to chance and decision nodes of the influence diagram, and p\u2206 represents the distribution induced by the strategy \u2206, that is, when the strategy is chosen, p\u2206 is a known probability distribution.\nWith some simple manipulations, we have:\nEU\u2019(\u2206) = \u2211\nx\u2208\u2126X\n(\np\u2206(x) \u2211\nU\np(u|\u03c0j\u2032(U))\n)\n,\nEU\u2019(\u2206) = \u2211\nx\u2208\u2126X\n(\n\u2211\nU\np(u|\u03c0j\u2032 (U))p\u2206(x)\n)\n,\nEU\u2019(\u2206) = \u2211\nU\n\u2211\nx\u2208\u2126X\np\u2206(u,x) = \u2211\nU\np\u2206(u),\nand then\nMEU\u2019 = max \u2206\n\u2211\nU\np\u2206(u) = max p\u2208K\n\u2211\nU\np(u),\nwhere p \u2208 K means that we select a distribution p in the extension of the credal network. In fact the only places p may vary are related to the imprecise probabilities of the former decision nodes. When we select p, we get a precise distribution that has a corresponding strategy \u2206. So, we have a credal network and need to find a distribution p that maximizes the sum of marginal probabilities of the U nodes."}, {"heading": "4.1 INFERENCE AS AN OPTIMIZATION PROBLEM", "text": "The sum of marginal inferences in the credal network can be formulated as a multilinear programming problem. The goal is to maximize the expression\n\u2211\nU\np(u) = \u2211\nU\n\u2211\nx\u2208\u2126X\n(\np(u|\u03c0j\u2032(U)) \u220f\nX\np(x|\u03c0j(X))\n)\n,\n(3) where x, \u03c0j\u2032 (U) and \u03c0j(X) are the projections of x in the corresponding domains, and where some distributions p(X |\u03c0j(X)) are precisely known and others are imprecise. In this formulation we must deal with a large number of multilinear terms. To avoid them, we briefly describe the bilinear transformation procedure proposed by de Campos and Cozman [9] to replace the large Expression (3) by simple bilinear expressions. We refer to [9] for additional details.\nThe idea is based on a precedence ordering of the network variables, which is an ordering where all ancestors of a given variable in the network\u2019s graph appear before it in the ordering. The bilinear transformation algorithm processes the network variables top-down: at each step some constraints are generated that define the relationship between the query and the current variable being processed. A variable may be processed only if all its ancestors have already been processed. The active nodes at each step form a pathdecomposition of the network\u2019s graph.\nTo better explain the method, we take the example of Figure 1. For simplicity, assume that variables are binary2 (with categories b and \u00acb) renamed as follows: do ground attack is D1, bomb bridge is D2, cost of attack is U1, cost of bombing is U2, ground attack is C1, bridge condition is C2, territory occupation is C3, and finally profit of goal is U3.\nAfter the translation of the utility functions into probability distributions and the replacement of decision nodes by nodes with imprecise probabilities (as previously described), we have a credal network and need to maximize the sum of the marginal probabilities of the U nodes. In fact this is an extension of the standard query in a credal network, because we have a summation instead of a single probability to maximize. So the objective function is max p(u1) + p(u2) + p(u3) (there are three utility nodes in the example) subject to constraints that define each marginal probability p(u1), p(u2) and p(u3). To create these constraints, we run a symbolic inference based on the precedence ordering for each of the marginal probabilities. The constraints for p(u1) and p(u2) are very\n2The method works on non-binary variables as well. The assumption is made here for ease of expose.\nsimple: p(u1) = p(u1|d1)p(d1) + p(u1|\u00acd1)p(\u00acd1) and p(u2) = p(u2|d2)p(d2)+p(u2|\u00acd2)p(\u00acd2), because they only depend on one other variable. Note that p(d1), p(\u00acd1), p(d2), and p(\u00acd2) that appear in these constraints are unknown and thus become optimization variables in the bilinear problem.\nTo write the constraints for p(u3), we need to choose a precedence ordering. We will use the ordering D2, C2, D1, C1, C3, U3 (variables U1 and U2 do not appear in the order as they are not relevant to evaluate the marginal p(u3)). Hence, the first variable to be processed is D2. We write a constraint that relates the query u3 and probabilities p(D2) (which are defined in the network specification):\np(u3) = \u2211\nd\u2208{d2,\u00acd2}\np(d) \u00b7 p(u3|d).\nD2 now appears in the conditional part of p(u3|d), which may be viewed as an artificial term in the optimization, as it does not appear in the network. Because of that, we must create constraints to define p(u3|d) in terms of network parameters (for all categories d \u2208 D2). According to our chosen ordering, the current variable to be processed is C2. Thus,\np(u3|d2) = \u2211\nc\u2208{c2,\u00acc2}\np(c|d2) \u00b7 p(u3|c),\np(u3|\u00acd2) = \u2211\nc\u2208{c2,\u00acc2}\np(c|\u00acd2) \u00b7 p(u3|c).\nNote that p(u3|c) = p(u3|c, d) (for any d), so we use the simpler. At this stage, our query is conditioned on C2. Following the same idea, we process D1, obtaining\np(u3|c2) = \u2211\nd\u2208{d1,\u00acd1}\np(d) \u00b7 p(u3|c2, d),\np(u3|\u00acc2) = \u2211\nd\u2208{d1,\u00acd1}\np(d) \u00b7 p(u3|\u00acc2, d).\nNow the current variable to be treated is C1, and our query is conditioned on C2, D1, that is, we must define how to evaluate p(u3|C2, D1) for all configurations. Thus, for all c \u2208 {c2,\u00acc2} and d \u2208 {d1,\u00acd1}:\np(u3|c, d) = \u2211\nc\u2032\u2208{c1,\u00acc1}\np(c\u2032|c, d) \u00b7 p(u3|c, c \u2032).\nAt this moment, u3 is conditioned on C1, C2 in the artificial term p(u3|c, c\n\u2032) (D1 is not present in the artificial term as C1, C2 separate u3 from D1). Now we process C3: for all c \u2032 \u2208 {c1,\u00acc1} and c \u2208 {c2,\u00acc2}\np(u3|c, c \u2032) =\n\u2211\nc\u2032\u2032\u2208{c3,\u00acc3}\np(c\u2032\u2032|c, c\u2032) \u00b7 p(u3|c \u2032\u2032).\nNote that, as p(u3|c \u2032\u2032) is specified in the network, we can stop. All artificial terms are related (through constraints) to parameters of the network. Besides all these constraints, we also include simplex constraints to ensure that probabilities sum 1.\nHence, we have a collection of linear and bilinear constraints on which non-linear programming can be employed [7]. It is also possible to use linear integer programming [9]. The steps to achieve a linear integer programming formulation are simple, because the only non-linear terms of the problem have the format b \u00b7 t, where b \u2208 {0, 1} and t \u2208 [0, 1]. b is an unknown probability value of the credal network (which is zero or one because the solution we look for lies on extreme points of credal sets [12]) and t is a constant or an artificial term created in the procedure just described. To linearize the problem, b \u00b7 t is replaced by an additional artificial optimization variable y and the following constraints are inserted: 0 \u2264 y \u2264 b and t\u2212 1 + b \u2264 y \u2264 t. After replacing all non-linear terms using this idea, the problem becomes a linear integer programming problem, where a solution is also a solution for the strategy selection in the initial influence diagram.\nWe emphasize that, as we are translating the strategy selection problem into a credal network inference, it is straightforward to use imprecise probabilities in the chance nodes of the influence diagram. Intervals or sets of probabilities may be used. The translation works in the same way, but the generated problem will have more imprecise probabilities to optimize.\nThe following theorem shows that, when reformulating the strategy selection problem as a modified credal network inference, we are not making use of \u201cmore effort\u201d than necessary, that is, strategy selection has the same complexity as inference in credal networks.\nTheorem 1 Let I be a LIMID and k a rational. Deciding whether there is a strategy \u2206 such that MEU is greater than k is NP-Complete when I has bounded induced width,3 and NPPP-Complete in general.\nProof sketch: Pertinence for the bounded induced width case is achieved because (given a strategy) we can compute MEU and verify if it is greater than k in polynomial time (using the reformulation and the sum of marginal queries, each marginal query takes polynomial time in a bounded induced width Bayesian network); in the general case, we can perform this verification using a PP oracle. Hardness for the bounded induced width case is obtained with the same reduc-\n3The maximum clique and the maximum degree in the moral graph are bounded by a logarithmic function in the size of the input needed to specify the problem, which for instance includes polytrees.\ntion as in [8] from the MAXSAT problem (replacing the credal nodes with decision nodes and introducing a single utility node). In the general case, the same reduction as in [17] from E-MAJSAT can be used (MAP nodes are replaced by decision nodes)."}, {"heading": "5 EXPERIMENTS", "text": "We conduct two experiments with the procedure. First, we use random generated influence diagrams to compare the solutions obtained by our procedure (which we call CR for credal reformulation) against the Single Policy Updating (SPU) of Lauritzen and Nilsson [15]. Later we work with a practical EBO military planning problem and compare the method against the factorization of Zhang and Ji [22].4\nConcerning random influence diagrams, we have generated a data set based on the total number of nodes and the number of decision nodes. The configurations chosen are presented in the first two columns of Table 1. We have from 10 to 120 nodes, where 3 to 35 are decision nodes. The number of utility nodes is chosen equal to the number of decision nodes. Each line in Table 1 contains the average result for 30 random generated diagrams within that configuration. The third column of the table shows the approximate average number of distinct strategies in the diagrams that would need to be evaluated by a brute force method.\nThe three columns of the CR method show the time spent to solve the problem, the number of nodes evaluated in the branch-and-bound tree of the optimization procedure (which is significantly smaller than the total number of strategies in brute force) and the maximum error of the solution (all numbers are averages). After the reformulation, the CPLEX solver [16] is used, which includes a heuristic search before starting the branch-and-bound procedure. The evaluations of this heuristic search are not counted in the fifth column of Table 1. Note that the first five rows are separated from the last three because they strongly differ on the size of the search space (exact solutions were found only for the former). The maximum error of each solution is obtained straightforward from the relaxation of the linear integer problem. The last two columns of Table 1 show the time and maximum error of the SPU approximate procedure. Although very fast, the SPU procedure has worse accuracy than the \u201capproximate\u201d CR (solution was approximate in last three rows because we have imposed a time-limit of ten minutes for each run). Furthermore, SPU does not provide an upper bound for the best possible expected utility, as obtained by CR. Still, a possible improvement is to use\n4The factorization idea only works on simultaneous influence diagrams, so it was not used in the other test cases.\nSPU to provide an initial guess to the optimization."}, {"heading": "5.1 EBO MILITARY PLANNING", "text": "In this section we describe the performance of our method in an hypothetical Effects-based Operations planning problem [11]. An influence diagram similar to the model described by Zhang and Ji [22] is employed. Its graph is shown in Figure 2. The goal is to win a war, which is represented by the Hypothesis node (on top of Figure 2). Just below there are the subgoals Air superiority, Territory occupation, and Commander surrender, which are directly related to the main goal. There are eleven decision nodes (represented by rectangles): destroy C2 (C2 stands for Command and Control), destroy Radars, destroy Communications, launch air strike, destroy RD, destroy storage, destroy assembly, launch ground attack, launch broadcasting, capture bodyguard, use special force. Just above decision nodes, we have chance nodes representing the outcomes of performing such actions (they indicate the workability of such systems), and below we have utility nodes (diamondshaped nodes) describing the cost of each action. Furthermore, we have six chance nodes (in the center of the figure) indicating general workability of IADS (Integrated Air Defense System), Air force, Artillery, Ground force, Morale and Commander in custody with respect to enemy forces. The overall profit of winning is given by the node UH , child of Hypothesis.\nAs this is an hypothetical example, we define utility functions and probability distributions as follows:\n\u2022 Probability of Hypothesis is one given that all subgoals are achieved. If one of subgoals is not achieved, then the probability of Hypothesis is 60%; if two of them are not achieved, then the probability of success is 30%; if none of subgoals is achieved, then we certainly fail in the campaign.\n\u2022 For the subgoals Air superiority, Territory occupation, and Commander surrender, we define that the subgoal is accomplished with probability one when both children were achieved, 50% when only one child is achieved, and zero when none is achieved.\n\u2022 For the probabilities of IADS, Air force, Artillery, Ground force, Morale and Commander in custody, we define a decrease of 50% for each unaccomplished child (with a minimum of zero, of course). Any node has probability zero if two or more of its children are not achieved.\n\u2022 The outcomes of actions (chance nodes above decision nodes) have 90% of success. For exam-\nNodes Approx.# of CR SPU Total Decision Strategies Time(sec) Evals (B&B) Max.Error(%) Time(sec) Max.Error(%) 10 3 217 0.66 5 0.000 0.10 0.740 20 6 234 1.73 125 0.000 0.39 2.788 50 10 251 30.42 4048 0.000 1.62 2.837 60 15 252 29.77 2937 0.000 2.99 1.964 70 20 254 125.06 7132 0.000 5.52 3.448 120 25 2102 254.80 15626 0.544 11.58 2.193 120 30 2116 403.13 5617 4.639 13.79 7.281 120 35 2120 578.99 9307 5.983 16.87 11.584\nTable 1: Average results on 30 random influence diagrams of different sizes for the CR and SPU methods.\nple, destroy Radars will have EW/GCI radars destroyed with 90% of odds (EW/GCI means Early Warning/Ground Control Interception).\n\u2022 The reward of achieving the main goal is 1000, while not achieving it costs 500.\n\u2022 Costs of actions are as follows: ground attack is 150, use special force is 100, capture bodyguard is 80, air strike is 50, and other actions cost 20 each.\nFor this problem, the best strategy found by SPU has expected utility of \u221255.2825, and suggests to take all action except destroy RD, destroy storage, destroy assembly and launch ground attack. The global optimum strategy is found in less than 5 seconds with our method and has expected utility equal to 156.4051 (all actions are taken). This is much faster than the solution reported by [22] (around 45 seconds)."}, {"heading": "6 CONCLUSION", "text": "We discuss in this paper a new idea for strategy selection in Influence Diagrams. We work with the Limited Memory Influence Diagram, as it generalizes many of the influence diagram proposals. The main contribution is the reformulation of the problem as a credal network inference, which makes possible to find the global maximum strategy for small- and medium-sized influence diagrams. Experiments indicate that many instances can be treated exactly. As far as we know, no deep investigation of exact procedures for this class of diagrams has been conducted.\nBecause of the characteristics of our procedure, an anytime approximate solution with a maximum guaranteed error is available during computations. It is clear that large diagrams must be treated approximately. Nevertheless, in the conducted experiments, our method produced results that surpass existing algorithms. Although spending more time, many situations require a solution to be as good as possible,\nwhile time is a secondary issue. The ability of our approach to provide an upper bound for the result is also valuable, which is not available with the SPU method.\nWe also discuss the theoretical complexity of the problem, which is derived from the known properties of MAP problems in Bayesian networks and belief updating inferences in credal networks. The complexity results show that the proposed idea is not making use of a harder problem to solve a simpler one, as the complexity of strategy selection is the same as the complexity of inferences in credal networks.\nBecause strategy selection in influence diagrams and inferences in credal networks are related, improvements on algorithms of credal networks can be directly applied to influence diagram problems. The application of other approximate techniques based on credal networks seems a natural path for investigation. We also intend to explore other optimization criteria for influence diagrams with imprecise probabilities, besides expected utility. Proposals in the theory of imprecise probabilities might be applied to this setting."}, {"heading": "Acknowledgements", "text": "The work described in this paper is supported in part by the U.S. Army Research Office grant W911NF0610331."}], "references": [{"title": "Decision-theoretic specification of credal networks: A unified language for uncertain modeling with sets of Bayesian networks", "author": ["A. Antonucci", "M. Zaffalon"], "venue": "Int. J. Approx. Reason., in press, doi:10.1016/j.ijar.2008.02.005", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "A method for using belief updating as influence diagrams", "author": ["G.F. Cooper"], "venue": "Conf. on Uncertainty in Artif. Intelligence, p. 55\u201363, Minneapolis", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1988}, {"title": "A survey of concepts of independence for imprecise probabilities", "author": ["I. Couso", "S. Moral", "P. Walley"], "venue": "Risk, Decision and Policy, 5:165\u2013181", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2000}, {"title": "Credal networks", "author": ["F.G. Cozman"], "venue": "Artif. Intelligence, 120:199\u2013233", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2000}, {"title": "Separation properties of sets of probabilities", "author": ["F.G. Cozman"], "venue": "Conf. on Uncertainty in Artif. Intelligence, p. 107\u2013115, San Francisco", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2000}, {"title": "Effects-based operations: a grand challenge for the analytical community", "author": ["P. Davis"], "venue": "Technical report, Rand corp.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "Inference in credal networks using multilinear programming", "author": ["C.P. de Campos", "F.G. Cozman"], "venue": "In Second Starting AI Researcher Symposium,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2004}, {"title": "The inferential complexity of Bayesian and credal networks", "author": ["C.P. de Campos", "F.G. Cozman"], "venue": "In Int. Joint Conf. on Artif. Intelligence,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2005}, {"title": "Inference in credal networks through integer programming", "author": ["C.P. de Campos", "F.G. Cozman"], "venue": "In Int. Symp. on Imprecise Probability: Theories and Applications,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Independence concepts for convex sets of probabilities", "author": ["L. de Campos", "S. Moral"], "venue": "In Conf. on Uncertainty in Artif. Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1995}, {"title": "Effects-based operations: change in the nature of warfare", "author": ["D.A. Deptula"], "venue": "Defense and Airpower Series, p. 3\u20136", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2001}, {"title": "2U: An exact interval propagation algorithm for polytrees with binary variables", "author": ["E. Fagiuoli", "M. Zaffalon"], "venue": "Artif. Intelligence, 106(1):77\u2013107", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1998}, {"title": "Influence diagrams", "author": ["R.A. Howard", "J.E. Matheson"], "venue": "volume II, p. 719\u2013762. Strategic Decisions Group, Menlo Park", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1984}, {"title": "From influence diagrams to junction trees", "author": ["F. Jensen", "F.V. Jensen", "S.L. Dittmer"], "venue": "Conf. on Uncertainty in Artif. Intelligence, p. 367\u2013373, San Francisco", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1994}, {"title": "Representing and solving decision problems with limited information", "author": ["S. Lauritzen", "D. Nilsson"], "venue": "Management Science, 47:1238\u20131251", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2001}, {"title": "Complexity results and approximation strategies for MAP explanations", "author": ["J.D. Park", "A. Darwiche"], "venue": "Journal of Artif. Intelligence Research, 21:101\u2013133", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2004}, {"title": "A new method for influence diagram evaluation", "author": ["R. Qi", "D. Poole"], "venue": "Computational Intelligence, 11:1:1\u201334", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1995}, {"title": "Evaluating influence diagrams", "author": ["R.D. Shachter"], "venue": "Operations Research, 34:871\u2013882", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1986}, {"title": "Probabilistic inferences in influence diagrams", "author": ["N.L. Zhang"], "venue": "Conf. on Uncertainty in Artif. Intelligence, p. 514\u2013522, Madison", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1998}, {"title": "Stepwisedecomposable influence diagram", "author": ["N.L. Zhang", "D. Poole"], "venue": "Int. Conf. on Principles of Knowledge Representation and Reasoning, p. 141\u2013152, Cambridge", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1992}, {"title": "A factorization approach to evaluating simultaneous influence diagrams", "author": ["W. Zhang", "Q. Ji"], "venue": "IEEE Transactions on Systems, Man and Cybernetics A, 36(4):746\u2013757", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2006}], "referenceMentions": [{"referenceID": 12, "context": "An influence diagram is a graphical model for decision making under uncertainty [13].", "startOffset": 80, "endOffset": 84}, {"referenceID": 3, "context": "In this paper, we propose a new idea to find the best strategy based on a reformulation of the problem as an inference in a credal network [4].", "startOffset": 139, "endOffset": 142}, {"referenceID": 14, "context": "Our idea works with a very general class of influence diagrams, named Limited Memory Influence Diagrams (LIMIDs) [15].", "startOffset": 113, "endOffset": 117}, {"referenceID": 13, "context": "In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21].", "startOffset": 209, "endOffset": 229}, {"referenceID": 16, "context": "In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21].", "startOffset": 209, "endOffset": 229}, {"referenceID": 17, "context": "In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21].", "startOffset": 209, "endOffset": 229}, {"referenceID": 18, "context": "In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21].", "startOffset": 209, "endOffset": 229}, {"referenceID": 19, "context": "In many cases, it is assumed that there is an ordering on which the decisions are to be taken and the no-forgetting rule, so as previous decisions are assumed to be known in the moment of the current decision [14, 18, 19, 20, 21].", "startOffset": 209, "endOffset": 229}, {"referenceID": 20, "context": "This assumption reduces the number of possible strategies and allows for factorization ideas [22].", "startOffset": 93, "endOffset": 97}, {"referenceID": 5, "context": "The EBO approach seeks for a campaign objective by considering direct, indirect and cascading effects of military, diplomatic, psychological and economic actions [6, 11].", "startOffset": 162, "endOffset": 169}, {"referenceID": 10, "context": "The EBO approach seeks for a campaign objective by considering direct, indirect and cascading effects of military, diplomatic, psychological and economic actions [6, 11].", "startOffset": 162, "endOffset": 169}, {"referenceID": 0, "context": "A policy \u03b4D for the decision node D is a function \u03b4D : \u03a9D\u222a\u03c0(D) \u2192 [0, 1] defined for each alternative of D and each configuration of \u03c0(D) such that, for each \u03c0j(D) \u2208 \u03a9\u03c0(D) we have \u2211", "startOffset": 65, "endOffset": 71}, {"referenceID": 3, "context": "credal set [4].", "startOffset": 11, "endOffset": 14}, {"referenceID": 3, "context": "In this paper we adopt the concept of strong independence: two random variables Xi and Xj are strongly independent when every extreme point of K(Xi, Xj) satisfies standard stochastic independence of Xi and Xj (that is, p(Xi|Xj) = p(Xi) and p(Xj|Xi) = p(Xj)) [4].", "startOffset": 258, "endOffset": 261}, {"referenceID": 4, "context": "The strong extension of a credal network is the joint credal set that contains every possible combination of vertices for all credal sets in the network [5]; that is, each vertex of a strong extension factorizes as follows:", "startOffset": 153, "endOffset": 156}, {"referenceID": 2, "context": "We note that other concepts of independence are found in the literature [3, 10].", "startOffset": 72, "endOffset": 79}, {"referenceID": 9, "context": "We note that other concepts of independence are found in the literature [3, 10].", "startOffset": 72, "endOffset": 79}, {"referenceID": 11, "context": "For inferences in strong extensions, it is known that distributions that maximize p(xq) belong to the set of vertices of the extension [12].", "startOffset": 135, "endOffset": 139}, {"referenceID": 3, "context": "In general, inference offers tremendous computational challenges, and exact inference algorithms based on enumeration of all potential vertices face serious difficulties [4].", "startOffset": 170, "endOffset": 173}, {"referenceID": 6, "context": "This idea is discussed in the literature and different methods to reformulate the inference problem were proposed [7, 9].", "startOffset": 114, "endOffset": 120}, {"referenceID": 8, "context": "This idea is discussed in the literature and different methods to reformulate the inference problem were proposed [7, 9].", "startOffset": 114, "endOffset": 120}, {"referenceID": 8, "context": "In the next section, we describe an idea based on bilinear programming [9] to perform inferences in credal networks and show how it can be employed to solve the strategy selection problem of influence diagrams.", "startOffset": 71, "endOffset": 74}, {"referenceID": 1, "context": "We note that this transformation is similar to that proposed by Cooper [2].", "startOffset": 71, "endOffset": 74}, {"referenceID": 1, "context": "In the credal network, U becomes a binary node (with the same parents as before) and categories u and \u00acu such that: p(u|\u03c0j(U)) = fU (\u03c0j(U)) and p(\u00acu|\u03c0j(U)) = 1\u2212 p(u|\u03c0j(U)) [2].", "startOffset": 172, "endOffset": 175}, {"referenceID": 0, "context": "[1]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "To avoid them, we briefly describe the bilinear transformation procedure proposed by de Campos and Cozman [9] to replace the large Expression (3) by simple bilinear expressions.", "startOffset": 106, "endOffset": 109}, {"referenceID": 8, "context": "We refer to [9] for additional details.", "startOffset": 12, "endOffset": 15}, {"referenceID": 6, "context": "Hence, we have a collection of linear and bilinear constraints on which non-linear programming can be employed [7].", "startOffset": 111, "endOffset": 114}, {"referenceID": 8, "context": "It is also possible to use linear integer programming [9].", "startOffset": 54, "endOffset": 57}, {"referenceID": 0, "context": "The steps to achieve a linear integer programming formulation are simple, because the only non-linear terms of the problem have the format b \u00b7 t, where b \u2208 {0, 1} and t \u2208 [0, 1].", "startOffset": 171, "endOffset": 177}, {"referenceID": 11, "context": "b is an unknown probability value of the credal network (which is zero or one because the solution we look for lies on extreme points of credal sets [12]) and t is a constant or an artificial term created in the procedure just described.", "startOffset": 149, "endOffset": 153}, {"referenceID": 7, "context": "tion as in [8] from the MAXSAT problem (replacing the credal nodes with decision nodes and introducing a single utility node).", "startOffset": 11, "endOffset": 14}, {"referenceID": 15, "context": "In the general case, the same reduction as in [17] from E-MAJSAT can be used (MAP nodes are replaced by decision nodes).", "startOffset": 46, "endOffset": 50}, {"referenceID": 14, "context": "First, we use random generated influence diagrams to compare the solutions obtained by our procedure (which we call CR for credal reformulation) against the Single Policy Updating (SPU) of Lauritzen and Nilsson [15].", "startOffset": 211, "endOffset": 215}, {"referenceID": 20, "context": "Later we work with a practical EBO military planning problem and compare the method against the factorization of Zhang and Ji [22].", "startOffset": 126, "endOffset": 130}, {"referenceID": 10, "context": "In this section we describe the performance of our method in an hypothetical Effects-based Operations planning problem [11].", "startOffset": 119, "endOffset": 123}, {"referenceID": 20, "context": "An influence diagram similar to the model described by Zhang and Ji [22] is employed.", "startOffset": 68, "endOffset": 72}, {"referenceID": 20, "context": "This is much faster than the solution reported by [22] (around 45 seconds).", "startOffset": 50, "endOffset": 54}], "year": 2008, "abstractText": "This paper describes a new algorithm to solve the decision making problem in Influence Diagrams based on algorithms for credal networks. Decision nodes are associated to imprecise probability distributions and a reformulation is introduced that finds the global maximum strategy with respect to the expected utility. We work with Limited Memory Influence Diagrams, which generalize most Influence Diagram proposals and handle simultaneous decisions. Besides the global optimum method, we explore an anytime approximate solution with a guaranteed maximum error and show that imprecise probabilities are handled in a straightforward way. Complexity issues and experiments with random diagrams and an effects-based military planning problem are discussed.", "creator": "dvips(k) 5.96 Copyright 2005 Radical Eye Software"}}}