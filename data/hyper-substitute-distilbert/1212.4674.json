{"id": "1212.4674", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Dec-2012", "title": "Natural Language Understanding Based on Semantic Relations between Sentences", "abstract": "in this figure, we define event interactions over flows of natural knowledge and semantic relations between events. based for this example, lets may consider text reading process having events as business unit.", "histories": [["v1", "Wed, 19 Dec 2012 14:40:38 GMT  (228kb)", "http://arxiv.org/abs/1212.4674v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["hyeok kong"], "accepted": false, "id": "1212.4674"}, "pdf": {"name": "1212.4674.pdf", "metadata": {"source": "CRF", "title": "Natural Language Understanding Based on Semantic Relations between Sentences", "authors": ["Hyeok Kong", "Kim Il Sung"], "emails": [], "sections": [{"heading": null, "text": "natural language and semantic relations between events. Based on this definition, we formally consider text understanding process having events as basic unit.\nKey words: text understanding, event expression, semantic relation, event schema, understanding diagram."}, {"heading": "1. Event and Semantic Relation", "text": "We introduce semantic representation model of sentences for text understanding, which is based on event expression by considering a sentence as a description of event. We first give event expression consisting of certain items which is called case-relations, where event expression represents the meaning of a sentence.\nFormally, an event corresponding to a sentence S can be represented as\nfollows:\n),,( 1 neeevent  or )(sevent\nIn some cases, we simply write event as e and omit event . Let ),,1( niei  be a tuple ))(,( ii AvA or ),( iTAi . Here, iA is a\ncase-relation shown in Table 1 and )( iAv is a value of case-relation iA which takes a Korean word or a variable. We call a case-relation taking a variable case-relation with undefined value.\niT is an event expression which is the value of case-relation iA . This reflects the internal nesting of natural language sentences and corresponds to subordinate clause of principal clause of a sentence. We introduced 14 case-relations in domain of our text understanding system(Table 1).\nThere exists semantic relation between sentences of a text. Naturally, there exists semantic relation between events corresponding to these sentences.\nWe propose 7 semantic relations of language domain which can be\nmanaged in our model.\n\u2460. We say that event A has inheritance relation with event B if\nB is a special case of A . We denote it BA inherit  .\n\u2461. We say that event A has accompany relation with event B if the occurrence of event A is equal to the occurrence of event B . We denote it BA accompany  .\n\u2462. We say that event A has subprocess relation with event B if B is a subevent of A and B occurs in some time segment of A . We\ndenote it BA part .\n\u2463. We say that event A has precondition relation with event B if\nevent B occurs before A occurs. We denote it BA pre .\n\u2464. We say that B has goal relation with event A if the occurrence\nof A is a motive of event B . We denote it BA goal .\n\u2465. We say that A has relation of cause or consequence with event B if the occurrence of B is a cause or consequence of A . We denote it BA cause   or BA cons .\n\u2466. We say that event A has sequential relation with event B if the event which can occur after event A occurs is always event B . We denote it BA sequel  .\n2\uff0eMemory schema\nLet nSSS ,,, 21  be n sentences of a text and nEEE ,,, 21  events corresponding to it. We suppose that subsequence of events\nnlnn EEE ,,, 21  )1( nl  of nEEE ,,, 21  occurs consequently and\ndenote it by\nnl sequelsequel n sequel n EEE     21 (*)\nIn our model, understanding of text is a process confirming the\nsemantic relations in (*). This process is performed by matching l events and its relevant events to a story schema, which is defined in our model. We consider this course as a process for text understanding\nDefinition 1. Let E , E be two events. We say that E matches E if\nevery case-relations and values of E are equal to ones of E . We call\nthat E is event schema and E matchable event.\nRemark: An event can match another event or can be matched by another event.\nThrough the matching, the value of case-relation with undefined value\nin E is unified by one in E . We call such a unifying process confirmation process of case-relation with undefined value.\nDefinition 2. We call the following relational diagram memory schema\nand denote by ),,( 21 nEEEMP  or MP .\nHere, ),,1( niTi  is a tree having iE as its root. Each node of\nthis tree is an event schema or an event. For two neighboring nodes there is a edge with label r denoting semantic relation between them. In\naddition to r , it is possible to add test factor \u201c$\u201dto edge. 1E is called a\nroot of memory schema ),,( 21 nEEEMP  .\nNow, let E ~ be a set of events. Memory mapping Memory is defined\nas follows:\nMemory : },{ ~ FalseTrueE \nWe say that E is understandable in memory if TrueEMemory )(\nfor EE ~  . So called \u201cunderstandable in memory\u201d means that our understanding model senses occurrence (or existence) of this event. We suppose that Memory satisfies the following 3 conditions:\n\u2460. 21, EE : two event schemas in memory schema MP . If 2 ,$ 1 EE pre   holds and there exist two event 21 , EE which are matched by 1E and 2E and TrueEMemory )( 2 , then relational diagram\n21 EE pre  holds.\n\u2461. Let us assume that there exists a following relational diagram in memory schema MP .\nIf events 131221 ,,,,, EEEEE m are matched by ,,,, 21 mEEE \n1312,EE ,\nTrueEMemorymEMemoryEMemoryEMemory  )13 ()() 2 () 1 ( \nand 13)( EEFs m  , then TrueEMemory )( 12 and the following relational diagram holds.\n\u2462. Let 21 , EE be two event schemas in memory schema MP and\n21 EE r  . Let 21 , EE be events being matched by 1E , 2E respectively.\nIf TrueEMemory )( 1 , then TrueEMemory )( 2 and relational diagram\n21 EE r  holds.\nDefinition 3. Let nEEE ,,, 21  be n events. If nEEE ,,, 21  satisfies the following 5 conditions, we call sequence of events constituting of n events is matched by memory schema ),,,( 21 kEEEMP  .\n(1) Each event schema in subsequence )1(,,, 21 klEEE klkk  of\nsequence of events kEEE ,,, 21  in ),,,( 21 kEEEMP  matches l events in subsequence nlnn EEE ,,, 21  of sequence of events\nnEEE ,,, 21  one by one.\n(2) Let },1|{),, 2 , 1 ( liniEnEEEQ  be a quotient set of nEEE ,,, 21  where  niE is a set of events between )1( inE and\n)1( inE and includes niE . That is  niE is a set of events of\n)1( inE \uff0c\u2026\uff0c niE \uff0c\u2026\uff0c )1( inE excepting )1( inE and )1( inE .\nFor li ,,2,1  , each event of  niE is matched by event schema of tree iT in memory schema ),,,( 21 kEEEMP  . All remained event schemas unmatched in iT can be event schemas including same variable. We can confirm its values through confirmation process of case-relation with the same variable.\n(3) If set },,,{\\},,,{ 2121 klkkk EEEEEEA  is not empty, event schemas of this set are event schemas including the same variable, We can confirm its values through confirmation process of case-relation with the same variable.\n(4) If },,,{ 21 kx EEEE  is matched by root 1E of\n),,,( 21 kEEEMP  , TrueEMemory x )( holds.\n(5) Let 21 , ii EE be two event schemas of tree iT in\n),,,( 21 kEEEMP  and we suppose that 2 ,$ 1 i r i EE  , 21 , ii EE can be\nconfirmed through confirmation process of the same variable. And let\n niii EEE 21 , be matched by 21 , ii EE respectively.\nIf r =\u201dpre\u201d, then TrueEMemory i )( 2 and if r = \u201dgoal\u201d, then there exists the following relational diagram in memory schema\n),,,( 21 kEEEMP  .\nAnd 3)( iim EEFS  holds.\nDefinition 4. Let nEEE ,,, 21  )1( n be sequence of events. We call that nEEE ,,, 21  is understandable in memory if TrueEMemory i )( for\nall ),1( nii  and subsequence )1(,,, 21 nlEEE nlnn  of\nnEEE ,,, 21  satisfies the following relational diagram.\nnl sequelsequel n sequel n EEE     21\nHere, l is not greater than n and must be close to n as much as\npossible.\nTheorem 1. Let nEEE ,,, 21  )1( n be sequence of events and MP memory schema matching nEEE ,,, 21  )1( n . And let\n},,,{ 21 nx EEEE  be event being matched by xE which is a root of MP . Then, nEEE ,,, 21  is understandable in memory if xE is\nunderstandable in memory\nNow, let nEEE ,,, 21  be a sequence consisting of n events corresponding to text P and mMPMPMP ,,, 21  m memory schemas dividing nEEE ,,, 21  into m parts mEPEPEP ,,2,1  . That is, iMP matches ),;,,2,1;,,( 10)1( nnmnniinii EEEEmiEEEPEP    . And let\nroot xiE of some tree in iMP and root )1( iyE of some tree in 1iMP satisfy relational diagram )1(   iy sequel xi EE . If 1xE is an event matched\nby root of 1MP corresponding to 1EP and is understandable in memory, then sequence of events nEEE ,,, 21  is understandable in memory.\n3\uff0eStory and understanding diagram in memory\nGenerally, story consists of a series of consequent events and some other events relating to it. To make system understand such a story, we defined\nmemory schema in this paper. That is, a memory schema is a kind of data structure base on this idea. Now, let nEEE ,,, 21  be sequence of\nevents and ),,,( 21 kEEEMP  be memory schema matching this sequence. Based on the condition (1)~(3) which is given in the definition of matching of memory schema, understanding system can deal with the following cases.\n\u2460 There exists xE , },,,{ 21 nx EEEE  which is matched by xE . In\nthis case xE of ),,,( 21 kEEEMP  is replaced with xE .\n\u2461 There exists xE , },,,{ 21 nx EEEE  which is matched by xE . Here, xE is an event schema with the same variable and xE is confirmed through confirmation process of case-relation with the same\nvariable. Also in this case, xE of ),,,( 21 kEEEMP  is replaced with\nxE .\n\u2462 xE is an event schema not including case-relation with undefined\nvalue. In this case, no one is replaced.\nFor all event schema of ),,,( 21 kEEEMP  , we apply the procedure described above and delete test factor \u201c$\u201d of edges in ),,,( 21 kEEEMP  . We call such a diagram story.\nLet us assume that nEEE ,,, 21  is a sequence of events in text P\nand is understandable in memory. Then, we can obtain m stories from m memory schemas by applying consequence 1 of theorem 1.This relational diagram consisting of m stories is called understanding diagram in memory of text P and is denoted by )(PU in our paper.\nFrom the above discussion we can see that understanding process in memory depends on memory schema. Description ability of memory schema depends on the structure of memory schema and semantic relations defined by system(Note that the memory schema of this paper assumes consequent occurrence of events)\uff0e"}, {"heading": "4. Conclusion", "text": "In this paper, we defined event expression over sentences in natural language and semantic relations between events. We also defined event schema, memory schema and understandable sequence of events in memory. Based on this definition, we formally considered text understanding process having understanding diagram in memory.\nScript model in [1] assumes some kind of concrete scripts(for example,\nmeal script and dentist script)\uff0eThese scripts consist of stories of some fixed and multistoried structure. Besides it, scripts assume rich and detailed contents which will be difficult constraints to realize. Memory schema of this paper can be constructed easily compare to [1].\nWe think it is possible to make memory schema if we have a history of some series. Of course, memory schema must be reasonable and standard as much as possible."}], "references": [], "referenceMentions": [], "year": 2012, "abstractText": "In this paper, we define event expression over sentences of natural language and semantic relations between events. Based on this definition, we formally consider text understanding process having events as basic unit.", "creator": "Microsoft\u00ae Word 2010"}}}