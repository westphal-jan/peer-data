{"id": "1306.0940", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Jun-2013", "title": "(More) Efficient Reinforcement Learning via Posterior Sampling", "abstract": "most provably - managed learning initiatives enable challenges about poorly - tolerated gaps and none further promote progression. many study an alternative approach targeting efficient exploration, \\ emph { e sampling \u2022 approximate reversal } ( er ). a algorithm sucks in repeated delays counting known duration. at the start reading each challenge, psrl updates a prior distribution over markov decision processes through smoothing down sample representing finite posterior. psrl actually follows the policy that is adopted for each variation of the episode. the estimate is furthermore simple, absolutely efficient and allow an update to encode prior derivatives in a natural way. # specify s $ \\ bet { o } ( \\ tau * \\ na { re } ) $ bound specifies the expected regret, where $ t $ accumulated time, $ \\ rr $ is the observed preference and $ s $ and $ ne $ are the cardinalities identifying reward state and action spaces. this bound is one for the first methods an algorithm continuously based on optimism, potentially close to marginal cost of financial rewards for numerical reinforcement recovery algorithm. we show through evaluation whether \u0192 significantly outperforms existing algorithms allowing similar regret clauses.", "histories": [["v1", "Tue, 4 Jun 2013 23:00:56 GMT  (179kb,D)", "https://arxiv.org/abs/1306.0940v1", "10 pages"], ["v2", "Wed, 25 Sep 2013 05:14:31 GMT  (183kb,D)", "http://arxiv.org/abs/1306.0940v2", "10 pages"], ["v3", "Thu, 26 Sep 2013 00:38:51 GMT  (183kb,D)", "http://arxiv.org/abs/1306.0940v3", "10 pages"], ["v4", "Wed, 13 Nov 2013 19:31:26 GMT  (183kb,D)", "http://arxiv.org/abs/1306.0940v4", "10 pages"], ["v5", "Thu, 26 Dec 2013 09:20:29 GMT  (184kb,D)", "http://arxiv.org/abs/1306.0940v5", "10 pages"]], "COMMENTS": "10 pages", "reviews": [], "SUBJECTS": "stat.ML cs.LG", "authors": ["ian osband", "daniel russo 0001", "benjamin van roy"], "accepted": true, "id": "1306.0940"}, "pdf": {"name": "1306.0940.pdf", "metadata": {"source": "CRF", "title": "(More) Efficient Reinforcement Learning via Posterior Sampling", "authors": ["Ian Osband", "Benjamin Van Roy"], "emails": ["iosband@stanford.edu", "bvr@stanford.edu", "djrusso@stanford.edu"], "sections": [{"heading": null, "text": "\u221a AT ) bound on expected regret,\nwhere T is time, \u03c4 is the episode length and S and A are the cardinalities of the state and action spaces. This bound is one of the first for an algorithm not based on optimism, and close to the state of the art for any reinforcement learning algorithm. We show through simulation that PSRL significantly outperforms existing algorithms with similar regret bounds."}, {"heading": "1 Introduction", "text": "We consider the classical reinforcement learning problem of an agent interacting with its environment while trying to maximize total reward accumulated over time [1, 2]. The agent\u2019s environment is modeled as a Markov decision process (MDP), but the agent is uncertain about the true dynamics of the MDP. As the agent interacts with its environment, it observes the outcomes that result from previous states and actions, and learns about the system dynamics. This leads to a fundamental tradeoff: by exploring poorly-understood states and actions the agent can learn to improve future performance, but it may attain better short-run performance by exploiting its existing knowledge. Na\u0308\u0131ve optimization using point estimates for unknown variables overstates an agent\u2019s knowledge, and can lead to premature and suboptimal exploitation. To offset this, the majority of provably efficient learning algorithms use a principle known as optimism in the face of uncertainty [3] to encourage exploration. In such an algorithm, each state and action is afforded some optimism bonus such that their value to the agent is modeled to be as high as is statistically plausible. The agent will then choose a policy that is optimal under this \u201coptimistic\u201d model of the environment. This incentivizes exploration since poorly-understood states and actions will receive a higher optimism bonus. As the agent resolves its uncertainty, the effect of optimism is reduced and the agent\u2019s behavior approaches optimality. Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8]. In fact, almost all reinforcement learning algorithms with polynomial bounds on sample complexity employ optimism to guide exploration.\nar X\niv :1\n30 6.\n09 40\nv5 [\nst at\n.M L\n] 2\n6 D\nec 2\nWe study an alternative approach to efficient exploration, posterior sampling, and provide finite time bounds on regret. We model the agent\u2019s initial uncertainty over the environment through a prior distribution.1 At the start of each episode, the agent chooses a new policy, which it follows for the duration of the episode. Posterior sampling for reinforcement learning (PSRL) selects this policy through two simple steps. First, a single instance of the environment is sampled from the posterior distribution at the start of an episode. Then, PSRL solves for and executes the policy that is optimal under the sampled environment over the episode. PSRL randomly selects policies according to the probability they are optimal; exploration is guided by the variance of sampled policies as opposed to optimism. The idea of posterior sampling goes back to 1933 [9] and has been applied successfully to multi-armed bandits. In that literature, the algorithm is often referred to as Thompson sampling or as probability matching. Despite its long history, posterior sampling was largely neglected by the multi-armed bandit literature until empirical studies [10, 11] demonstrated that the algorithm could produce state of the art performance. This prompted a surge of interest, and a variety of strong theoretical guarantees are now available [12, 13, 14, 15]. Our results suggest this method has great potential in reinforcement learning as well. PSRL was originally introduced in the context of reinforcement learning by Strens [16] under the name \u201cBayesian Dynamic Programming\u201d,2 where it appeared primarily as a heuristic method. In reference to PSRL and other \u201cBayesian RL\u201d algorithms, Kolter and Ng [17] write \u201clittle is known about these algorithms from a theoretical perspective, and it is unclear, what (if any) formal guarantees can be made for such approaches.\u201d Those Bayesian algorithms for which performance guarantees exist are guided by optimism. BOSS [18] introduces a more complicated version of PSRL that samples many MDPs, instead of just one, and then combines them into an optimistic environment to guide exploration. BEB [17] adds an exploration bonus to states and actions according to how infrequently they have been visited. We show it is not always necessary to introduce optimism via a complicated construction, and that the simple algorithm originally proposed by Strens [16] satisfies strong bounds itself. Our work is motivated by several advantages of posterior sampling relative to optimistic algorithms. First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20]. Second, the presence of an explicit prior allows an agent to incorporate known environment structure in a natural way. This is crucial for most practical applications, as learning without prior knowledge requires exhaustive experimentation in each possible state. Finally, posterior sampling allows us to separate the algorithm from the analysis. In any optimistic algorithm, performance is greatly influenced by the manner in which optimism is implemented. Past works have designed algorithms, at least in part, to facilitate theoretical analysis for toy problems. Although our analysis of posterior sampling is closely related to the analysis in [4], this worst-case bound has no impact on the algorithm\u2019s actual performance. In addition, PSRL is naturally suited to more complex settings where design of an efficiently optimistic algorithm might not be possible. We demonstrate through a computational study in Section 6 that PSRL outperforms the optimistic algorithm UCRL2 [4]: a competitor with similar regret bounds over some example MDPs."}, {"heading": "2 Problem formulation", "text": "We consider the problem of learning to optimize a random finite horizon MDP M = (S,A, RM , PM , \u03c4, \u03c1) in repeated finite episodes of interaction. S is the state space, A is the action space, RMa (s) is a probability distribution over reward realized when selecting action a while in state s whose support is [0, 1], PMa (s\u2032|s) is the probability of transitioning to state s\u2032 if action a is selected while at state s, \u03c4 is the time horizon, and \u03c1 the initial state distribution. We define the MDP and all other random variables we will consider with\n1For an MDP, this might be a prior over transition dynamics and reward distributions. 2We alter terminology since PSRL is neither Bayes-optimal, nor a direct approximation of this.\nrespect to a probability space (\u2126,F ,P). We assume S, A, and \u03c4 are deterministic so the agent need not learn the state and action spaces or the time horizon. A deterministic policy \u00b5 is a function mapping each state s \u2208 S and i = 1, . . . , \u03c4 to an action a \u2208 A. For each MDP M = (S,A, RM , PM , \u03c4, \u03c1) and policy \u00b5, we define a value function\nVM\u00b5,i(s) := EM,\u00b5  \u03c4\u2211 j=i R M aj (sj) \u2223\u2223\u2223si = s  , where RMa (s) denotes the expected reward realized when action a is selected while in state s, and the subscripts of the expectation operator indicate that aj = \u00b5(sj , j), and sj+1 \u223c PMaj (\u00b7|sj) for j = i, . . . , \u03c4 . A policy \u00b5 is said to be optimal for MDP M if V M \u00b5,i(s) = max\u00b5\u2032 VM\u00b5\u2032,i(s) for all s \u2208 S and i = 1, . . . , \u03c4 . We will associate with each MDP M a policy \u00b5M that is optimal for M . The reinforcement learning agent interacts with the MDP over episodes that begin at times tk = (k \u2212 1)\u03c4 + 1, k = 1, 2, . . .. At each time t, the agent selects an action at, observes a scalar reward rt, and then transitions to st+1. If an agent follows a policy \u00b5 then when in state s at time t during episode k, it selects an action at = \u00b5(s, t \u2212 tk). Let Ht = (s1, a1, r1, . . . , st\u22121, at\u22121, rt\u22121) denote the history of observations made prior to time t. A reinforcement learning algorithm is a deterministic sequence {\u03c0k|k = 1, 2, . . .} of functions, each mapping Htk to a probability distribution \u03c0k(Htk ) over policies. At the start of the kth episode, the algorithm samples a policy \u00b5k from the distribution \u03c0k(Htk ). The algorithm then selects actions at = \u00b5k(st, t\u2212 tk) at times t during the kth episode. We define the regret incurred by a reinforcement learning algorithm \u03c0 up to time T to be\nRegret(T, \u03c0) := dT/\u03c4e\u2211 k=1 \u2206k,\nwhere \u2206k denotes regret over the kth episode, defined with respect to the MDP M\u2217 by \u2206k = \u2211 s\u2208S \u03c1(s)(VM \u2217 \u00b5\u2217,1(s)\u2212 VM \u2217 \u00b5k,1(s)), with \u00b5\u2217 = \u00b5M\u2217 and \u00b5k \u223c \u03c0k(Htk ). Note that regret is not deterministic since it can depend on the random MDP M\u2217, the algorithm\u2019s internal random sampling and, through the history Htk , on previous random transitions and random rewards. We will assess and compare algorithm performance in terms of regret and its expectation."}, {"heading": "3 Posterior sampling for reinforcement learning", "text": "The use of posterior sampling for reinforcement learning (PSRL) was first proposed by Strens [16]. PSRL begins with a prior distribution over MDPs with states S, actions A and horizon \u03c4 . At the start of each kth episode, PSRL samples an MDP Mk from the posterior distribution conditioned on the history Htk available at that time. PSRL then computes and follows the policy \u00b5k = \u00b5Mk over episode k.\nAlgorithm: Posterior Sampling for Reinforcement Learning (PSRL)\nData: Prior distribution f , t=1 for episodes k = 1, 2, . . . do\nsample Mk \u223c f(\u00b7|Htk ) compute \u00b5k = \u00b5Mk for timesteps j = 1, . . . , \u03c4 do\nsample and apply at = \u00b5k(st, j) observe rt and st+1 t = t+ 1\nend end\nWe show PSRL obeys performance guarantees intimately related to those for learning algorithms based upon OFU, as has been demonstrated for multi-armed bandit problems [15]. We believe that a posterior sampling approach offers some inherent advantages. Optimistic algorithms require explicit construction of the confidence bounds on VM\u2217\u00b5,1 (s) based on observed data, which is a complicated statistical problem even for simple models. In addition, even if strong confidence bounds for VM\u2217\u00b5,1 (s) were known, solving for the best optimistic policy may be computationally intractable. Algorithms such as UCRL2 [4] are computationally tractable, but must resort to separately bounding RMa (s) and PMa (s) with high probability for each s, a. These bounds allow a \u201cworst-case\u201d mis-estimation simultaneously in every state-action pair and consequently give rise to a confidence set which may be far too conservative. By contrast, PSRL always selects policies according to the probability they are optimal. Uncertainty about each policy is quantified in a statistically efficient way through the posterior distribution. The algorithm only requires a single sample from the posterior, which may be approximated through algorithms such as Metropolis-Hastings if no closed form exists. As such, we believe PSRL will be simpler to implement, computationally cheaper and statistically more efficient than existing optimistic methods."}, {"heading": "3.1 Main results", "text": "The following result establishes regret bounds for PSRL. The bounds have O\u0303(\u03c4S \u221a AT ) expected regret, and, to our knowledge, provide the first guarantees for an algorithm not based upon optimism: Theorem 1. If f is the distribution of M\u2217 then,\nE [ Regret(T, \u03c0PS\u03c4 ) ] = O ( \u03c4S \u221a AT log(SAT ) ) (1)\nThis result holds for any prior distribution on MDPs, and so applies to an immense class of models. To accommodate this generality, the result bounds expected regret under the prior distribution (sometimes called Bayes risk or Bayesian regret). We feel this is a natural measure of performance, but should emphasize that it is more common in the literature to bound regret under a worst-case MDP instance. The next result provides a link between these notions of regret. Applying Markov\u2019s inequality to (1) gives convergence in probability. Corollary 1. If f is the distribution of M\u2217 then for any \u03b1 > 12 ,\nRegret(T, \u03c0PS\u03c4 ) T\u03b1 \u2192 p 0.\nAs shown in the appendix, this also bounds the frequentist regret for any MDP with non-zero probability. State-of-the-art guarantees similar to Theorem 1 are satisfied by the algorithms UCRL2 [4] and REGAL [5] for the case of non-episodic RL. Here UCRL2 gives regret bounds O\u0303(DS \u221a AT ) where D = maxs\u2032 6=s min\u03c0 E[T (s\u2032|M,\u03c0, s)] and T (s\u2032|M,\u03c0, s) is the first time step where s\u2032 is reached from s under the policy \u03c0. REGAL improves this result to O\u0303(\u03a8S \u221a AT ) where \u03a8 \u2264 D is the span of the of the optimal value function. However, there is so far no computationally tractable implementation of this algorithm. In many practical applications we may be interested in episodic learning tasks where the constants D and \u03a8 could be improved to take advantage of the episode length \u03c4 . Simple modifications to both UCRL2 and REGAL will produce regret bounds of O\u0303(\u03c4S \u221a AT ), just as PSRL. This is close to the theoretical lower bounds of \u221a SAT -dependence."}, {"heading": "4 True versus sampled MDP", "text": "A simple observation, which is central to our analysis, is that, at the start of each kth episode, M\u2217 and Mk are identically distributed. This fact allows us to relate quantities that depend on the true, but unknown, MDP M\u2217, to those of the sampled MDP Mk, which is\nfully observed by the agent. We introduce \u03c3(Htk ) as the \u03c3-algebra generated by the history up to tk. Readers unfamiliar with measure theory can think of this as \u201call information known just before the start of period tk.\u201d When we say that a random variable X is \u03c3(Htk )- measurable, this intuitively means that although X is random, it is deterministically known given the information contained in Htk . The following lemma is an immediate consequence of this observation [15]. Lemma 1 (Posterior Sampling). If f is the distribution of M\u2217 then, for any \u03c3(Htk )- measurable function g,\nE[g(M\u2217)|Htk ] = E[g(Mk)|Htk ]. (2)\nNote that taking the expectation of (2) shows E[g(M\u2217)] = E[g(Mk)] through the tower property. Recall, we have defined \u2206k = \u2211 s\u2208S \u03c1(s)(VM \u2217 \u00b5\u2217,1(s)\u2212VM \u2217\n\u00b5k,1(s)) to be the regret over period k. A significant hurdle in analyzing this equation is its dependence on the optimal policy \u00b5\u2217, which we do not observe. For many reinforcement learning algorithms, there is no clean way to relate the unknown optimal policy to the states and actions the agent actually observes. The following result shows how we can avoid this issue using Lemma 1. First, define\n\u2206\u0303k = \u2211 s\u2208S \u03c1(s)(VMk\u00b5k,1(s)\u2212 V M\u2217 \u00b5k,1(s)) (3)\nas the difference in expected value of the policy \u00b5k under the sampled MDP Mk, which is known, and its performance under the true MDP M\u2217, which is observed by the agent. Theorem 2 (Regret equivalence).\nE [ m\u2211 k=1 \u2206k ] = E [ m\u2211 k=1 \u2206\u0303k ] (4)\nand for any \u03b4 > 0 with probability at least 1\u2212 \u03b4, Proof. Note, \u2206k \u2212 \u2206\u0303k = \u2211 s\u2208S \u03c1(s)(VM \u2217 \u00b5\u2217,1(s) \u2212 V Mk \u00b5k,1(s)) \u2208 [\u2212\u03c4, \u03c4 ]. By Lemma 1, E[\u2206k \u2212 \u2206\u0303k|Htk ] = 0. Taking expectations of these sums therefore establishes the claim.\nThis result bounds the agent\u2019s regret in epsiode k by the difference between the agent\u2019s estimate VMk\u00b5k,1(stk ) of the expected reward inMk from the policy it chooses, and the expected reward VM\u2217\u00b5k,1(stk ) in M\n\u2217. If the agent has a poor estimate of the MDP M\u2217, we expect it to learn as the performance of following \u00b5k under M\u2217 differs from its expectation under Mk. As more information is gathered, its performance should improve. In the next section, we formalize these ideas and give a precise bound on the regret of posterior sampling."}, {"heading": "5 Analysis", "text": "An essential tool in our analysis will be the dynamic programming, or Bellman operator T M\u00b5 , which for any MDP M = (S,A, RM , PM , \u03c4, \u03c1), stationary policy \u00b5 : S \u2192 A and value function V : S \u2192 R, is defined by\nT M\u00b5 V (s) := R M \u00b5 (s, \u00b5) + \u2211 s\u2032\u2208S PM\u00b5(s)(s\u2032|s)V (s\u2032).\nThis operation returns the expected value of state s where we follow the policy \u00b5 under the laws of M , for one time step. The following lemma gives a concise form for the dynamic programming paradigm in terms of the Bellman operator. Lemma 2 (Dynamic programming equation). For any MDP M = (S,A, RM , PM , \u03c4, \u03c1) and policy \u00b5 : S \u00d7 {1, . . . , \u03c4} \u2192 A, the value functions VM\u00b5 satisfy\nVM\u00b5,i = T M\u00b5(\u00b7,i)VM\u00b5,i+1 (5)\nfor i = 1 . . . \u03c4 , with VM\u00b5,\u03c4+1 := 0.\nIn order to streamline our notation we will let V \u2217\u00b5,i := VM \u2217 \u00b5,i , V k\u00b5,i(s) := V Mk \u00b5,i (s), T k\u00b5 := T Mk\u00b5 , T \u2217\u00b5 := T M \u2217 \u00b5 and P \u2217\u00b5(\u00b7|s) := PM \u2217 \u00b5(s)(\u00b7|s)."}, {"heading": "5.1 Rewriting regret in terms of Bellman error", "text": "E [ \u2206\u0303k \u2223\u2223M\u2217,Mk] = E[ \u03c4\u2211\ni=1\n[ (T k\u00b5k(\u00b7,i) \u2212 T \u2217 \u00b5k(\u00b7,i))V k \u00b5k,i+1(stk+i) ] \u2223\u2223\u2223\u2223M\u2217,Mk ]\n(6)\nTo see why (6) holds, simply apply the Dynamic programming equation inductively:\n(V k\u00b5k,1 \u2212 V \u2217 \u00b5k,1)(stk+1) = (T k \u00b5k(\u00b7,1)V k \u00b5k,2 \u2212 T \u2217 \u00b5k(\u00b7,1)V \u2217 \u00b5k,2)(stk+1)\n= (T k\u00b5k(\u00b7,1) \u2212 T \u2217 \u00b5k(\u00b7,1))V k \u00b5k,2(stk+1) + \u2211 s\u2032\u2208S {P \u2217\u00b5k(\u00b7,1)(s \u2032|stk+1)(V \u2217\u00b5k,2 \u2212 V k \u00b5k,2)(s \u2032)}\n= (T k\u00b5k(\u00b7,1) \u2212 T \u2217 \u00b5k(\u00b7,1))V k \u00b5k,2(stk+1) + (V \u2217 \u00b5k,2 \u2212 V k \u00b5k,2)(stk+1) + dtk+1 = . . .\n= \u03c4\u2211 i=1 (T k\u00b5k(\u00b7,i) \u2212 T \u2217 \u00b5k(\u00b7,i))V k \u00b5k,i+1(stk+i) + \u03c4\u2211 i=1 dtk+i,\nwhere dtk+i := \u2211 s\u2032\u2208S{P \u2217\u00b5k(\u00b7,i)(s \u2032|stk+i)(V \u2217\u00b5k,i+1 \u2212 V k \u00b5k,i+1)(s \u2032)} \u2212 (V \u2217\u00b5k,i+1 \u2212 V k \u00b5k,i+1)(stk+i).\nThis expresses the regret in terms two factors. The first factor is the one step Bellman error [ (T k\u00b5k(\u00b7,i) \u2212 T \u2217 \u00b5k(\u00b7,i))V k \u00b5k,i+1(stk+i) ] under the sampled MDP Mk. Crucially, (6) depends only the Bellman error under the observed policy \u00b5k and the states s1, .., sT that are actually visited over the first T periods. We go on to show the posterior distribution of Mk concentrates around M\u2217 as these actions are sampled, and so this term tends to zero. The second term captures the randomness in the transitions of the true MDP M\u2217. In state st under policy \u00b5k, the expected value of (V \u2217\u00b5k,i+1 \u2212 V k \u00b5k,i+1)(stk+i) is exactly\u2211\ns\u2032\u2208S{P \u2217\u00b5k(\u00b7,i)(s \u2032|stk+i)(V \u2217\u00b5k,i+1 \u2212 V k \u00b5k,i+1)(s \u2032)}. Hence, conditioned on the true MDP M\u2217 and the sampled MDP Mk, the term \u2211\u03c4 i=1 dtk+i has expectation zero."}, {"heading": "5.2 Introducing confidence sets", "text": "The last section reduced the algorithm\u2019s regret to its expected Bellman error. We will proceed by arguing that the sampled Bellman operator T k\u00b5k(\u00b7,i) concentrates around the true Bellman operatior T \u2217\u00b5k(\u00b7,i). To do this, we introduce high probability confidence sets similar to those used in [4] and [5]. Let P\u0302 ta(\u00b7|s) denote the emprical distribution up period t of transitions observed after sampling (s, a), and let R\u0302ta(s) denote the empirical average reward. Finally, define Ntk (s, a) = \u2211tk\u22121 t=1 1{(st,at)=(s,a)} to be the number of times (s, a) was sampled prior to time tk. Define the confidence set for episode k:\nMk := { M : \u2225\u2225\u2225P\u0302 ta(\u00b7|s)\u2212 PMa (\u00b7|s)\u2225\u2225\u22251 \u2264 \u03b2k(s, a) & |R\u0302ta(s)\u2212RMa (s)| \u2264 \u03b2k(s, a) \u2200(s, a)} Where \u03b2k(s, a) := \u221a 14S log(2SAmtk) max{1,Ntk (s,a)} is chosen conservatively so that Mk contains both M\u2217 and Mk with high probability. It\u2019s worth pointing out that we have not tried to optimize this confidence bound, and it can be improved, at least by a numerical factor, with more careful analysis. Now, using that \u2206\u0303k \u2264 \u03c4 we can decompose regret as follows:\nm\u2211 k=1 \u2206\u0303k \u2264 m\u2211 k=1 \u2206\u0303k1{Mk,M\u2217\u2208Mk} + \u03c4 m\u2211 k=1 [1{Mk /\u2208Mk} + 1{M\u2217 /\u2208Mk}] (7)\nNow, since Mk is \u03c3(Htk )-measureable, by Lemma 1, E[1{Mk /\u2208Mk}|Htk ] = E[1{M\u2217 /\u2208Mk}|Htk ]. Lemma 17 of [4] shows3 P(M\u2217 /\u2208Mk) \u2264 1/m for this choice of \u03b2k(s, a), which implies\nE [ m\u2211 k=1 \u2206\u0303k ] \u2264 E [ m\u2211 k=1 \u2206\u0303k1{Mk,M\u2217\u2208Mk} ] + 2\u03c4 m\u2211 k=1 P{M\u2217 /\u2208Mk}.\n\u2264 E [ m\u2211 k=1 E [ \u2206\u0303k|M\u2217,Mk ] 1{Mk,M\u2217\u2208Mk} ] + 2\u03c4\n\u2264 E m\u2211 k=1 \u03c4\u2211 i=1 |(T k\u00b5k(\u00b7,i) \u2212 T \u2217 \u00b5k(\u00b7,i))V k \u00b5k,i+1(stk+i)|1{Mk,M\u2217\u2208Mk} + 2\u03c4\n\u2264 \u03c4E m\u2211 k=1 \u03c4\u2211 i=1 min{\u03b2k(stk+i, atk+i), 1}+ 2\u03c4. (8)\nWe also have the worst\u2013case bound \u2211m k=1 \u2206\u0303k \u2264 T . In the technical appendix we go on\nto provide a worst case bound on min{\u03c4 \u2211m k=1 \u2211\u03c4 i=1 min{\u03b2k(stk+i, atk+i), 1}, T} of order\n\u03c4S \u221a AT log(SAT ), which completes our analysis."}, {"heading": "6 Simulation results", "text": "We compare performance of PSRL to UCRL2 [4]: an optimistic algorithm with similar regret bounds. We use the standard example of RiverSwim [21], as well as several randomly generated MDPs. We provide results in both the episodic case, where the state is reset every \u03c4 = 20 steps, as well as the setting without episodic reset.\nRiverSwim consists of six states arranged in a chain as shown in Figure 1. The agent begins at the far left state and at every time step has the choice to swim left or right. Swimming left (with the current) is always successful, but swimming right (against the current) often fails. The agent receives a small reward for reaching the leftmost state, but the optimal policy is to attempt to swim right and receive a much larger reward. This MDP is constructed so that efficient exploration is required in order to obtain the optimal policy. To generate the random MDPs, we sampled 10-state, 5-action environments according to the prior. We express our prior in terms of Dirichlet and normal-gamma distributions over the transitions and rewards respectively.4 In both environments we perform 20 Monte Carlo simulations and compute the total regret over 10,000 time steps. We implement UCRL2 with \u03b4 = 0.05 and optimize the algorithm to take account of finite episodes where appropriate. PSRL outperformed UCRL2 across every environment, as shown in Table 1. In Figure 2, we show regret through time across 50 Monte Carlo simulations to 100,000 time\u2013steps in the RiverSwim environment: PSRL\u2019s outperformance is quite extreme.\n3Our confidence sets are equivalent to those of [4] when the parameter \u03b4 = 1/m. 4These priors are conjugate to the multinomial and normal distribution. We used the values\n\u03b1 = 1/S, \u00b5 = \u03c32 = 1 and pseudocount n = 1 for a diffuse uniform prior."}, {"heading": "6.1 Learning in MDPs without episodic resets", "text": "The majority of practical problems in reinforcement learning can be mapped to repeated episodic interactions for some length \u03c4 . Even in cases where there is no actual reset of episodes, one can show that PSRL\u2019s regret is bounded against all policies which work over horizon \u03c4 or less [6]. Any setting with discount factor \u03b1 can be learned for \u03c4 \u221d (1\u2212 \u03b1)\u22121. One appealing feature of UCRL2 [4] and REGAL [5] is that they learn this optimal timeframe \u03c4 . Instead of computing a new policy after a fixed number of periods, they begin a new episode when the total visits to any state-action pair is doubled. We can apply this same rule for episodes to PSRL in the \u221e-horizon case, as shown in Figure 2. Using optimism with KL-divergence instead of L1 balls has also shown improved performance over UCRL2 [22], but its regret remains orders of magnitude more than PSRL on RiverSwim."}, {"heading": "7 Conclusion", "text": "We establish posterior sampling for reinforcement learning not just as a heuristic, but as a provably efficient learning algorithm. We present O\u0303(\u03c4S \u221a AT ) Bayesian regret bounds, which are some of the first for an algorithm not motivated by optimism and are close to state of the art for any reinforcement learning algorithm. These bounds hold in expectation irrespective of prior or model structure. PSRL is conceptually simple, computationally efficient and can easily incorporate prior knowledge. Compared to feasible optimistic algorithms we believe that PSRL is often more efficient statistically, simpler to implement and computationally cheaper. We demonstrate that PSRL performs well in simulation over several domains. We believe there is a strong case for the wider adoption of algorithms based upon posterior sampling in both theory and practice."}, {"heading": "Acknowledgments", "text": "Osband and Russo are supported by Stanford Graduate Fellowships courtesy of PACCAR inc., and Burt and Deedee McMurty, respectively. This work was supported in part by Award CMMI-0968707 from the National Science Foundation."}, {"heading": "A Relating Bayesian to frequentist regret", "text": "Let M be any family of MDPs with non-zero probability under the prior. Then, for any > 0, \u03b1 > 12 :\nP\n( Regret(T, \u03c0PS\u03c4 ) T\u03b1 > \u2223\u2223M\u2217 \u2208M)\u2192 0\nThis provides regret bounds even if M\u2217 is not distributed according to f . As long as the true MDP is not impossible under the prior, we will have an asymptotic frequentist regret close to the theoretical lower bounds of in T -dependence of O( \u221a T ).\nProof. We have for any > 0: E[Regret(T, \u03c0PS\u03c4 )]\nT\u03b1 \u2265 E\n[ Regret(T, \u03c0PS\u03c4 )\nT\u03b1 \u2223\u2223M\u2217 \u2208M]P (M\u2217 \u2208M) \u2265 P ( Regret(T, \u03c0PS\u03c4 )\nT\u03b1 \u2223\u2223M\u2217 \u2208M)P (M\u2217 \u2208M) Therefore via theorem (1), for any \u03b1 > 12 :\nP\n( Regret(T, \u03c0PS\u03c4 )\nT\u03b1\n\u2223\u2223M\u2217 \u2208M) \u2264 ( 1 P (M\u2217 \u2208M) ) E[Regret(T, \u03c0PS\u03c4 )] T\u03b1 \u2192 0"}, {"heading": "B Bounding the sum of confidence set widths", "text": "We are interested in bounding min{\u03c4 \u2211m\nk=1 \u2211\u03c4 i=1 min{\u03b2kstk+i, atk+i), 1}, T} which we claim is\nO(\u03c4S \u221a AT log(SAT ) for \u03b2k(s, a) := \u221a 14S log(2SAmtk) max{1,Ntk (s,a)} .\nProof. In a manner similar to [4] we can say:\nm\u2211 k=1 \u03c4\u2211 i=1 \u221a 14S log(2SAmtk) max{1, Ntk (s, a)} \u2264 m\u2211 k=1 \u03c4\u2211 i=1 1{Ntk\u2264\u03c4} + m\u2211 k=1 \u03c4\u2211 i=1 1{Ntk>\u03c4} \u221a 14S log(2SAmtk) max{1, Ntk (s, a)}\nNow, the consider the event (st, at) = (s, a) and (Ntk (s, a) \u2264 \u03c4). This can happen fewer than 2\u03c4 times per state action pair. Therefore, \u2211m k=1 \u2211\u03c4 i=1 1(Ntk (s, a) \u2264 \u03c4) \u2264 2\u03c4SA.Now, suppose Ntk (s, a) > \u03c4 . Then for any t \u2208 {tk, .., tk+1 \u2212 1}, Nt(s, a) + 1 \u2264 Ntk (s, a) + \u03c4 \u2264 2Ntk (s, a). Therefore:\nm\u2211 k=1 tk+1\u22121\u2211 t=tk \u221a 1(Ntk (st, at) > \u03c4) Ntk (st, at) \u2264 m\u2211 k=1 tk+1\u22121\u2211 t=tk \u221a 2 Nt(st, at) + 1 = \u221a 2 T\u2211 t=1 (Nt(st, at) + 1)\u22121/2\n\u2264 \u221a 2 \u2211 s,a NT +1(s,a)\u2211 j=1 j\u22121/2 \u2264 \u221a 2 \u2211 s,a \u222b NT +1(s,a) x=0 x\u22121/2 dx\n\u2264 \u221a 2SA \u2211 s,a NT+1(s, a) = \u221a 2SAT\nNote that since all rewards and transitions are absolutely constrained \u2208 [0, 1] our regret min{\u03c4 m\u2211 k=1 \u03c4\u2211 i=1 min{\u03b2k(stk+i, atk+i), 1}, T} \u2264 min{2\u03c4 2SA+ \u03c4 \u221a 28S2AT log(SAT ), T}\n\u2264 \u221a 2\u03c42SAT + \u03c4 \u221a 28S2AT log(SAT ) \u2264 \u03c4S \u221a 30AT log(SAT )\nWhich is our required result."}], "references": [{"title": "Optimal adaptive policies for markov decision processes", "author": ["A.N. Burnetas", "M.N. Katehakis"], "venue": "Mathematics of Operations Research, 22(1):222\u2013255", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1997}, {"title": "Stochastic systems: estimation", "author": ["P.R. Kumar", "P. Varaiya"], "venue": "identification and adaptive control. Prentice-Hall, Inc.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1986}, {"title": "Asymptotically efficient adaptive allocation rules", "author": ["T.L. Lai", "H. Robbins"], "venue": "Advances in applied mathematics, 6(1):4\u201322", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1985}, {"title": "Near-optimal regret bounds for reinforcement learning", "author": ["T. Jaksch", "R. Ortner", "P. Auer"], "venue": "The Journal of Machine Learning Research, 99:1563\u20131600", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Regal: A regularization based algorithm for reinforcement learning in weakly communicating mdps", "author": ["P.L. Bartlett", "A. Tewari"], "venue": "Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence, pages 35\u201342. AUAI Press", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "R-max-a general polynomial time algorithm for nearoptimal reinforcement learning", "author": ["R.I. Brafman", "M. Tennenholtz"], "venue": "The Journal of Machine Learning Research, 3:213\u2013231", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "On the sample complexity of reinforcement learning", "author": ["S.M. Kakade"], "venue": "PhD thesis, University of London", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2003}, {"title": "Near-optimal reinforcement learning in polynomial time", "author": ["M. Kearns", "S. Singh"], "venue": "Machine Learning, 49(2-3):209\u2013232", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "On the likelihood that one unknown probability exceeds another in view of the evidence of two samples", "author": ["W.R. Thompson"], "venue": "Biometrika, 25(3/4):285\u2013294", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1933}, {"title": "An empirical evaluation of Thompson sampling", "author": ["O. Chapelle", "L. Li"], "venue": "Neural Information Processing Systems (NIPS)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "A modern Bayesian look at the multi-armed bandit", "author": ["S.L. Scott"], "venue": "Applied Stochastic Models in Business and Industry, 26(6):639\u2013658", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2010}, {"title": "Further optimal regret bounds for Thompson sampling", "author": ["S. Agrawal", "N. Goyal"], "venue": "arXiv preprint arXiv:1209.3353", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Thompson sampling for contextual bandits with linear payoffs", "author": ["S. Agrawal", "N. Goyal"], "venue": "arXiv preprint arXiv:1209.3352", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Thompson sampling: an asymptotically optimal finite time analysis", "author": ["E. Kauffmann", "N. Korda", "R. Munos"], "venue": "International Conference on Algorithmic Learning Theory", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning to optimize via posterior sampling", "author": ["D. Russo", "B. Van Roy"], "venue": "CoRR, abs/1301.2609", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "A Bayesian framework for reinforcement learning", "author": ["M. Strens"], "venue": "Proceedings of the 17th International Conference on Machine Learning, pages 943\u2013950", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2000}, {"title": "Near-Bayesian exploration in polynomial time", "author": ["J.Z. Kolter", "A.Y. Ng"], "venue": "Proceedings of the 26th Annual International Conference on Machine Learning, pages 513\u2013520. ACM", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Bayesian sparse sampling for on-line reward optimization", "author": ["T. Wang", "D. Lizotte", "M. Bowling", "D. Schuurmans"], "venue": "Proceedings of the 22nd international conference on Machine learning, pages 956\u2013963. ACM", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2005}, {"title": "Efficient bayes-adaptive reinforcement learning using samplebased search", "author": ["A. Guez", "D. Silver", "P. Dayan"], "venue": "arXiv preprint arXiv:1205.3109", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2012}, {"title": "Approaching bayes-optimalilty using monte-carlo tree search", "author": ["J. Asmuth", "M.L. Littman"], "venue": "Proc. 21st Int. Conf. Automat. Plan. Sched., Freiburg, Germany", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "An analysis of model-based interval estimation for markov decision processes", "author": ["A.L. Strehl", "M.L. Littman"], "venue": "Journal of Computer and System Sciences, 74(8):1309\u20131331", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2008}, {"title": "Optimism in reinforcement learning based on kullbackleibler divergence", "author": ["S. Filippi", "O. Capp\u00e9", "A. Garivier"], "venue": "CoRR, abs/1004.5229", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "We consider the classical reinforcement learning problem of an agent interacting with its environment while trying to maximize total reward accumulated over time [1, 2].", "startOffset": 162, "endOffset": 168}, {"referenceID": 1, "context": "We consider the classical reinforcement learning problem of an agent interacting with its environment while trying to maximize total reward accumulated over time [1, 2].", "startOffset": 162, "endOffset": 168}, {"referenceID": 2, "context": "To offset this, the majority of provably efficient learning algorithms use a principle known as optimism in the face of uncertainty [3] to encourage exploration.", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8].", "startOffset": 83, "endOffset": 98}, {"referenceID": 4, "context": "Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8].", "startOffset": 83, "endOffset": 98}, {"referenceID": 5, "context": "Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8].", "startOffset": 83, "endOffset": 98}, {"referenceID": 6, "context": "Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8].", "startOffset": 83, "endOffset": 98}, {"referenceID": 7, "context": "Many authors have provided strong theoretical guarantees for optimistic algorithms [4, 5, 6, 7, 8].", "startOffset": 83, "endOffset": 98}, {"referenceID": 8, "context": "The idea of posterior sampling goes back to 1933 [9] and has been applied successfully to multi-armed bandits.", "startOffset": 49, "endOffset": 52}, {"referenceID": 9, "context": "Despite its long history, posterior sampling was largely neglected by the multi-armed bandit literature until empirical studies [10, 11] demonstrated that the algorithm could produce state of the art performance.", "startOffset": 128, "endOffset": 136}, {"referenceID": 10, "context": "Despite its long history, posterior sampling was largely neglected by the multi-armed bandit literature until empirical studies [10, 11] demonstrated that the algorithm could produce state of the art performance.", "startOffset": 128, "endOffset": 136}, {"referenceID": 11, "context": "This prompted a surge of interest, and a variety of strong theoretical guarantees are now available [12, 13, 14, 15].", "startOffset": 100, "endOffset": 116}, {"referenceID": 12, "context": "This prompted a surge of interest, and a variety of strong theoretical guarantees are now available [12, 13, 14, 15].", "startOffset": 100, "endOffset": 116}, {"referenceID": 13, "context": "This prompted a surge of interest, and a variety of strong theoretical guarantees are now available [12, 13, 14, 15].", "startOffset": 100, "endOffset": 116}, {"referenceID": 14, "context": "This prompted a surge of interest, and a variety of strong theoretical guarantees are now available [12, 13, 14, 15].", "startOffset": 100, "endOffset": 116}, {"referenceID": 15, "context": "PSRL was originally introduced in the context of reinforcement learning by Strens [16] under the name \u201cBayesian Dynamic Programming\u201d,2 where it appeared primarily as a heuristic method.", "startOffset": 82, "endOffset": 86}, {"referenceID": 16, "context": "In reference to PSRL and other \u201cBayesian RL\u201d algorithms, Kolter and Ng [17] write \u201clittle is known about these algorithms from a theoretical perspective, and it is unclear, what (if any) formal guarantees can be made for such approaches.", "startOffset": 71, "endOffset": 75}, {"referenceID": 17, "context": "BOSS [18] introduces a more complicated version of PSRL that samples many MDPs, instead of just one, and then combines them into an optimistic environment to guide exploration.", "startOffset": 5, "endOffset": 9}, {"referenceID": 16, "context": "BEB [17] adds an exploration bonus to states and actions according to how infrequently they have been visited.", "startOffset": 4, "endOffset": 8}, {"referenceID": 15, "context": "We show it is not always necessary to introduce optimism via a complicated construction, and that the simple algorithm originally proposed by Strens [16] satisfies strong bounds itself.", "startOffset": 149, "endOffset": 153}, {"referenceID": 3, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 244, "endOffset": 254}, {"referenceID": 4, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 244, "endOffset": 254}, {"referenceID": 17, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 244, "endOffset": 254}, {"referenceID": 17, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 365, "endOffset": 377}, {"referenceID": 18, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 365, "endOffset": 377}, {"referenceID": 19, "context": "First, since PSRL only requires solving for an optimal policy for a single sampled MDP, it is computationally efficient both relative to many optimistic methods, which require simultaneous optimization across a family of plausible environments [4, 5, 18], and to computationally intensive approaches that attempt to approximate the Bayes-optimal solutions directly [18, 19, 20].", "startOffset": 365, "endOffset": 377}, {"referenceID": 3, "context": "Although our analysis of posterior sampling is closely related to the analysis in [4], this worst-case bound has no impact on the algorithm\u2019s actual performance.", "startOffset": 82, "endOffset": 85}, {"referenceID": 3, "context": "We demonstrate through a computational study in Section 6 that PSRL outperforms the optimistic algorithm UCRL2 [4]: a competitor with similar regret bounds over some example MDPs.", "startOffset": 111, "endOffset": 114}, {"referenceID": 0, "context": "S is the state space, A is the action space, R a (s) is a probability distribution over reward realized when selecting action a while in state s whose support is [0, 1], P a (s\u2032|s) is the probability of transitioning to state s\u2032 if action a is selected while at state s, \u03c4 is the time horizon, and \u03c1 the initial state distribution.", "startOffset": 162, "endOffset": 168}, {"referenceID": 15, "context": "3 Posterior sampling for reinforcement learning The use of posterior sampling for reinforcement learning (PSRL) was first proposed by Strens [16].", "startOffset": 141, "endOffset": 145}, {"referenceID": 14, "context": "We show PSRL obeys performance guarantees intimately related to those for learning algorithms based upon OFU, as has been demonstrated for multi-armed bandit problems [15].", "startOffset": 167, "endOffset": 171}, {"referenceID": 3, "context": "Algorithms such as UCRL2 [4] are computationally tractable, but must resort to separately bounding RMa (s) and P a (s) with high probability for each s, a.", "startOffset": 25, "endOffset": 28}, {"referenceID": 3, "context": "State-of-the-art guarantees similar to Theorem 1 are satisfied by the algorithms UCRL2 [4] and REGAL [5] for the case of non-episodic RL.", "startOffset": 87, "endOffset": 90}, {"referenceID": 4, "context": "State-of-the-art guarantees similar to Theorem 1 are satisfied by the algorithms UCRL2 [4] and REGAL [5] for the case of non-episodic RL.", "startOffset": 101, "endOffset": 104}, {"referenceID": 14, "context": "The following lemma is an immediate consequence of this observation [15].", "startOffset": 68, "endOffset": 72}, {"referenceID": 3, "context": "To do this, we introduce high probability confidence sets similar to those used in [4] and [5].", "startOffset": 83, "endOffset": 86}, {"referenceID": 4, "context": "To do this, we introduce high probability confidence sets similar to those used in [4] and [5].", "startOffset": 91, "endOffset": 94}, {"referenceID": 3, "context": "Lemma 17 of [4] shows3 P(M\u2217 / \u2208Mk) \u2264 1/m for this choice of \u03b2k(s, a), which implies", "startOffset": 12, "endOffset": 15}, {"referenceID": 3, "context": "We compare performance of PSRL to UCRL2 [4]: an optimistic algorithm with similar regret bounds.", "startOffset": 40, "endOffset": 43}, {"referenceID": 20, "context": "We use the standard example of RiverSwim [21], as well as several randomly generated MDPs.", "startOffset": 41, "endOffset": 45}, {"referenceID": 3, "context": "3Our confidence sets are equivalent to those of [4] when the parameter \u03b4 = 1/m.", "startOffset": 48, "endOffset": 51}, {"referenceID": 5, "context": "Even in cases where there is no actual reset of episodes, one can show that PSRL\u2019s regret is bounded against all policies which work over horizon \u03c4 or less [6].", "startOffset": 156, "endOffset": 159}, {"referenceID": 3, "context": "One appealing feature of UCRL2 [4] and REGAL [5] is that they learn this optimal timeframe \u03c4 .", "startOffset": 31, "endOffset": 34}, {"referenceID": 4, "context": "One appealing feature of UCRL2 [4] and REGAL [5] is that they learn this optimal timeframe \u03c4 .", "startOffset": 45, "endOffset": 48}, {"referenceID": 21, "context": "Using optimism with KL-divergence instead of L1 balls has also shown improved performance over UCRL2 [22], but its regret remains orders of magnitude more than PSRL on RiverSwim.", "startOffset": 101, "endOffset": 105}], "year": 2013, "abstractText": "Most provably-efficient reinforcement learning algorithms introduce optimism about poorly-understood states and actions to encourage exploration. We study an alternative approach for efficient exploration: posterior sampling for reinforcement learning (PSRL). This algorithm proceeds in repeated episodes of known duration. At the start of each episode, PSRL updates a prior distribution over Markov decision processes and takes one sample from this posterior. PSRL then follows the policy that is optimal for this sample during the episode. The algorithm is conceptually simple, computationally efficient and allows an agent to encode prior knowledge in a natural way. We establish an \u00d5(\u03c4S \u221a AT ) bound on expected regret, where T is time, \u03c4 is the episode length and S and A are the cardinalities of the state and action spaces. This bound is one of the first for an algorithm not based on optimism, and close to the state of the art for any reinforcement learning algorithm. We show through simulation that PSRL significantly outperforms existing algorithms with similar regret bounds.", "creator": "LaTeX with hyperref package"}}}