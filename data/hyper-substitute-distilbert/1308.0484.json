{"id": "1308.0484", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Aug-2013", "title": "Using Incomplete Information for Complete Weight Annotation of Road Networks -- Extended Version", "abstract": "we are witnessing important interests in the new use of road mapping. for simplest, to enable effective vehicle routing, wire - cross sequences of transportation characteristics are simplified, analyzing the weight of an edge at some direction associated directly finding the edge, e. g., natural gas ( ghg ) causes or pipeline accidents. development is increasingly precondition to using a graph algorithm for routing that all circuits have calculated. weights routinely capture travel times real ghg results can be extracted comparing gps trajectory coefficients collected from the network. however, other trajectory data providers lack the coverage needed properly assign weights to all gates. similar paper formulates mostly replaces the problem behind annotating all edges in a complicated network with travel cost of path from finite set of trips whatever the direction meaning otherwise corresponds their small layer behind the edges, each with an associated ground - truth transfer cost. more general framework is proposed to solve above results. specifically, the paper correctly named its texture regression problem and solved by minimizing a well designed objective function that take into account the topology of another road network. by particular, the use of these pagerank values. measurements is significant for assigning appropriate width to all edges, in increasing likelihood of directional adjacency behind loops is thus taken between account to plot items. empirical literature with instrumentation studying travel time over mean exposure by two road networks ( skagen, germany, and north copenhagen, denmark ) offer insight whereby the design properties of the scaled definitions further offer evidence that the instruments predict correct.", "histories": [["v1", "Fri, 2 Aug 2013 12:56:19 GMT  (905kb)", "https://arxiv.org/abs/1308.0484v1", "This is an extended version of \"Using Incomplete Information for Complete Weight Annotation of Road Networks,\" which is accepted for publication in IEEE TKDE"], ["v2", "Thu, 15 Aug 2013 20:00:22 GMT  (555kb)", "http://arxiv.org/abs/1308.0484v2", "This is an extended version of \"Using Incomplete Information for Complete Weight Annotation of Road Networks,\" which is accepted for publication in IEEE TKDE"]], "COMMENTS": "This is an extended version of \"Using Incomplete Information for Complete Weight Annotation of Road Networks,\" which is accepted for publication in IEEE TKDE", "reviews": [], "SUBJECTS": "cs.LG cs.DB", "authors": ["bin yang", "manohar kaul", "christian s jensen"], "accepted": false, "id": "1308.0484"}, "pdf": {"name": "1308.0484.pdf", "metadata": {"source": "CRF", "title": "Using Incomplete Information for Complete Weight Annotation of Road Networks\u2014 Extended Version", "authors": ["Bin Yang", "Manohar Kaul", "Christian S. Jensen"], "emails": ["mkaul}@cs.au.dk,", "csj@cs.aau.dk"], "sections": [{"heading": null, "text": "ar X\niv :1\n30 8.\n04 84\nv2 [\ncs .L\nG ]\n1 5\nA ug\nIndex Terms\u2014Spatial databases and GIS, correlation and regression analysis.\n\u2726"}, {"heading": "1 INTRODUCTION", "text": "R EDUCTION in greenhouse gas (GHG) emissionsis crucial in combating global climate change. For example, the EU has committed to reduce GHG emissions to 20% below 1990 levels by 2020 [2]. To achieve these reductions, the transportation sector needs to achieve reductions. For example, in the EU, emissions from transportation account for nearly a quarter of the total GHG emissions [3], making transportation the second largest GHG emitting sector, trailing only the energy sector.\nWhile improved vehicle and engine design are likely to yield GHG emission reductions, eco-routing is readily deployable and is a simple yet effective approach to reducing GHG emissions from road transportation [4]. Specifically, eco-routing can effectively reduce fuel usage and CO2 emissions. Studies suggest that by providing eco-routes to drivers, approximately 8\u201320% in fuel savings and lower CO2 emissions are possible in different settings, e.g., during peak versus off-peak hours, on highways versus areal roads, for light versus heavy duty vehicles [5], [6]. For example, an interesting municipal solid waste collection scenario, where a truck collects solid waste from several\nlocations on Santiago Island, demonstrates a 12% fuel reduction due to eco-routes [7]. Vehicle routing relies on a weighted-graph representation of the underlying road network. To achieve effective eco-routing, it is essential that accurate edge weights that capture environmental costs, e.g., fuel consumption or GHG emissions, associated with traversing the edges are available. Given a graph with appropriate weights, eco-routes can be efficiently computed by existing routing algorithms, e.g., based on Dijkstra\u2019s algorithm or the A\u2217 algorithm. However, accurate weights that capture environmental impact are not always readily available for a road network. This paper addresses the task of obtaining such weights for a road network from a collection of measured (trip, cost) pairs, where the cost can be any cost associated with a trip, e.g., GHG emissions, fuel consumption, or travel time. Because the trips given in the input collection of pairs generally do not cover all edges of the road network and also do not cover all times of the day, data sparsity is a key problem. The cost of a trip, e.g., GHG emissions, differs during peak versus off-peak hours. Thus, it is inappropriate to use costs associated with peak-hour trips for obtaining edge weights to be\n2 used for eco-routing during off-peak hours. Considering the road network and trips shown in Fig. 1, assume that the GHG emissions of trip 1 (traversed from 7:30 to 7:33) and trip 2 (traversed from 23:15 to 23:17) are also given, and assume that we are interested in assigning GHG emission weights to all edges in the network. The assignment of these\nweights to a large number of edges, e.g., BC, BD, EG, and FG, cannot be done directly since they are not covered by any trip. However, for example,BD can be annotated by considering its neighbor road segment AB which is covered by trip 2. Assuming that the period from 6:00 to 8:00 is the sole peak-hour period (the remaining times being offpeak), trip 1 is not useful for assigning an off-peak weight to the edge AE because trip 1 traversed AE during peak hours. By taking into account the offpeak weights of IA and AB (covered by trip 2), it is, however, possible to obtain an off-peak weight for AE. This paper proposes general techniques that take as input (i) a collection of (trip, cost) pairs, where trip captures the edges used and the times when the edges are traversed and the cost represents the cost of the entire trip; and (ii) an unweighted graph model of the road network in which the trips occurred. The techniques then assign travel cost based weights to all edges in the graph. To the best of our knowledge, this paper is the first to study complete weight annotation of road networks using incomplete information. In particular, the paper makes four contributions. First, a novel problem, road network weight annotation, is proposed and formalized. Second, a general framework for assigning timevarying trip cost based weights to the edges of the road network is presented, along with supportive models, including a directed, weighted graph model capable of capturing time-varying edge weights and a trip cost model based on time varying edge weights. Third, two novel and judiciously designed objective functions are proposed to contend with the data sparsity. A weighted PageRank-based objective function aims to measure the variance of weights on road segments with similar traffic flows, and a second objective function aims to measure the weight difference on road segments that are directionally adjacent. Fourth,\ncomprehensive empirical evaluations with real data sets are conducted to elicit pertinent design properties of the proposed framework.\nThe remainder of this paper is organized as follows. Following a survey of related work in Section 2, Section 3 covers problem definition and a general framework for solving the problem. Section 4 details the objective functions. Section 5 reports the empirical evaluation, and Section 6 concludes and discusses research directions.\nCompared to the IEEE TKDE paper [1], this extended version (i) provides a mathematical analysis of the foundation of PageRank and additional justification for the feasibility of using PageRank values to quantify movement flow based similarities (in Sections 4.2.1 and 4.2.3); (ii) reports on additional empirical studies aimed at identifying the behavior of PageRank values on graphs representing the Web, citations, and road networks; and (iii) provides justification for why the use of PageRank values are appropriate in the paper\u2019s setting (in Section 4.2.5)."}, {"heading": "2 RELATED WORK", "text": "Little work has been done on weight annotation of road neworks. Trip cost estimation is a core component of our weight annotation solution. Given a set of (trip, cost) pairs as input, trip cost estimation aims to estimate the costs for trips that do not exist in the given input set. Weight annotation can be regarded as a generalized version of trip cost estimation, since if pertinent weights can be assigned to a road network, the cost of any trip on the road network can be estimated. For example, if a GHG emissions based weighted graph is available, the GHG emissions of a certain trip can be estimated as the sum of the weights of the road segments that the trip traverses.\nMost existing work on trip cost estimation [8], [9], [10], [11] focuses on travel-time estimation. In other words, their work focuses on travel time as the trip cost. In general, the methods for estimating the travel times of trips can be classified into two categories: (i) segment models and (ii) trip models.\nSegment models [10], [11], [12], [13] concern travel time estimation for individual road segments. For example, observers (e.g., Bluetooth sensors or loop detectors deployed along road segments) monitor the traffic on road segments, recording the flows of vehicles along the road segments. Thus, travel-time estimation tends to concern particular road segments. For example, some studies model travel time on a particular road segment as a time series and apply autoregressive models [10] to estimate the travel time on the road segment. T-Drive [11] models time-dependent travel time distributions on road segments using sets of histograms and enables the inference of future travel times using Markov chains [14]. One study\n3 incorporates Lagrangian measurements [13] into existing traffic flow models for freeways to estimate travel time distributions on specific freeways. Segment models assume \u201chot\u201d road segments where, preferably, substantial data is available. However, far from every road segment may have enough historical data in practical settings, e.g., due to the limited deployment of costly sensors. Segment models are not well suited for the weight annotation problem because the given (trip, cost) pairs typically fail to cover the whole network, meaning that many road segments lack the data needed to apply such models. The trip models focus on estimating the costs of individual trips. Specifically, the costs of trips are considered more interesting than the costs of individual road segments. Given a collection of trips and their corresponding travel times, one study [9] proposes a Gaussian process regression based method to predict the travel times for unseen trips. However, the study has the limitation that all the trips are required to share the same source and target. This limitation renders the study of limited interest to us, since we aim at annotating every edge with a pertinent weight.\nTrajectory regression [8] was proposed recently to infer the travel times of arbitrary trips. The method is able to estimate the travel times of trips consisting of road segments with no or little traversal history by considering the travel time correlation of spatially adjacent road segments. Trajectory regression is the most related method to our weight annotation problem. However, our study distinguishes itself with several unique characteristics. First, we propose a general framework for annotating edges in a road network with a range of trip cost based weights and are not constrained to travel time. Second, we identify the cost correlation of road segments sharing similar traffic flows, and we quantify this by using weighted PageRank values. Third, we consider the temporal cost correlation of adjacent road segments. For example, although two road segments AB and BC are adjacent, the cost of traversing AB during peak hours is not necessarily correlated to the cost of traversing BC during off-peak hours. Fourth, we take into account the directionality of road segments and consider only directional adjacency when determining the cost correlation of spatially adjacent road segments. Last but not least, we conduct comprehensive experiments on real data sets (real trips and real road networks) to demonstrate the effectiveness of annotating road networks with both travel time based weights and GHG emissions based weights. The earlier study on trajectory regression [8] considers only synthetic data and estimates only travel times of trips. In the intelligent transportation system research field [4], [15], [16], other travel costs (besides travel time) of trips are studied. For example, fuel consumption and GHG emissions of a trip can be computed\nbased on instantaneous vehicle velocities and accelerations, the slopes of the road segments traversed, and the engine type. However, these methods are designed to estimate the costs of individual trips and are not readily applicable to the problem of annotating graph edges with trip cost based weights, notably edges that do not have any traversed trips."}, {"heading": "3 PRELIMINARIES", "text": "We cover the modeling that underlies the proposed framework, and we provide an overview of the framework and its setting. We use blackboard bold upper case letter for sets, e.g., E, bold lower case letters for vectors, e.g., d, and bold upper case letters for matrices, e.g., M. Unless stated otherwise, the vectors used are column vectors. The i-th element of vector d is denoted as d[i], and the element in the i-th row and j-th column of matrix M is denoted as M[i, j]. Matrix MT is M transposed. An overview of key notation used in the paper is provided in Table 1."}, {"heading": "3.1 Modeling a Temporal Road Network", "text": "A road network is modeled as a directed, weighted graph G = (V, E, L, F , H), where V and E are the vertex and edge sets, respectively; L is a function that records the lengths of edges; F is a function that maps times to traffic categories; and H is a function that assigns time-varying weights to edges. We proceed to cover each component in more detail. A vertex vi \u2208 V represents a road intersection or an end of a road. An edge ek \u2208 E \u2286 V \u00d7 V is defined by a pair of vertices and represents a directed road segment that connects the (intersections represented by) two vertices. For example, edge (vi, vj) represents a road segments that enables travel from vertex vi to vertex vj . For convenience, we call this graph representation of a road network the primal graph. Fig. 2 captures the upper right part of the road network shown in Fig. 1 in more detail. Here, Avenue 1 and Avenue 2 are bidirectional roads, and Street 3 is a one-way road that only allows travel from vertex B to vertex D.\n4 The corresponding primal graph is shown in Fig. 3. In order to capture the bidirectional Avenue 1, two edges (A,B) and (B,A) are generated. Since Street 3 is a one-way road, only one edge, (B,D), is created.\nIt is essential to model a road network as a directed graph because the cost associated with traveling in two different directions may differ very substantially. For example, traveling uphill is likely to have a higher fuel cost than traveling downhill. As another example, the congestion may also vary greatly for the two directions of a road. Function L : E \u2192 R takes as input an edge and outputs the length of the road segment that the edge represents. If road segment AB is 135 meters long, we have G.L((A,B)) = G.L((B,A)) = 135. Next, the cost of traversing the same edge may differ across time. This is typically due to varying degrees of congestions. Thus, GHG emissions or fuel consumption are likely to differ during peak versus off-peak times. To this end, function F : TD \u2192 TAGS models the varying traffic intensity during different periods. Specifically, F partitions time TD and assigns a traffic category tag in TAGS to each partition. The granularity of the tags are chosen so that the traffic intensity can be assumed to be constant during the time associated with the same tag. For example, F ([0:00, 7:00)) = OFFPEAK, F ([7:00, 9:00)) = PEAK, F ([9:00, 17:00)) = OFFPEAK, etc. Finally, function H : E \u00d7 TAGS \u2192 R assigns time dependent weights to all edges. In particular, H takes as input an edge and a traffic tag, and outputs the weight for the edge during the traffic tag. Specifically, G.H(ei, tagj) = d(ei, tagj)\u00b7 G.L(ei), where d(ei, tagj) indicates the cost per unit length of traversing edge ei during tag tagj and G.L(ei) is the length of edge ei. To maintain the different costs on different edges during different traffic tags, function H maintains |E|\u00b7|TAGS | cost variables, denoted as d(ei, tagj) (where 1 6 i 6 |E| and 1 6 j 6 |TAGS |). We organize all the cost variables into a cost vector d \u2208 R(|E|\u00b7|TAGS|) and d= [d(e1, tag1), . . ., d(e|E|, tag1), d(e1, tag2), . . ., d(e|E|, tag2), . . ., d(e1, tag|TAGS|), . . ., d(e|E|, tag|TAGS|)] T. The x-th element of the vector, i.e., d[x], equals d(ei, tagj) and x = pos(i, j) = (j \u2212 1) \u00b7|TAGS| + i. Note that if the cost vector d becomes available, the function G.H also becomes available. The proposed model is attractive in our setting. It\nis simpler than existing models capable of capturing time-varying weights (e.g., time-expanded graphs [17] and time-aggregated graphs [18]), and yet it is sufficiently expressive for the problem we solve."}, {"heading": "3.2 Trips and Trip Costs", "text": "Since vehicle tracking using GPS is widespread and growing, we take into account trips derived from GPS observations. A GPS trajectory gpsT r = (gps1, gps2, . . . , gpsn) is a sequence of GPS observations, where a GPS observation gpsi specifies the location of a vehicle at a particular time point. After map matching and some pre-processing, a GPS trajectory is transformed into a trip t = (l1, l2, . . . , lm) that consists of a sequence of link records li of the form:\nlink record li : (e, ts, te),\nwhere e \u2208 E indicates an edge in G and ts and te indicate the time points of the first and last GPS observations on edge ei. If a graph G is available that contains relevant edge costs, the cost of a trip t = (l1, l2, . . . , lm) can be estimated by Equation 1.\ncost(t) = \u2211\nli\u2208t\n\u2211\ntagj\u2208TAGS\nweight(li, tagj) \u00b7G.H(li.e, tagj), (1)\nwhere\nweight(li, tagj) =\n\u2211 I\u2208G.F\u22121(tagj) |I \u2229 [li.ts, li.te]|\n|[li.ts, li.te]| .\nHere, G.F\u22121 indicates the inverse function of F defined in G, which takes as input a traffic tag and outputs the set of its corresponding time intervals. Next, | \u00b7 | denotes the length of an interval. For example, given a trip that contains link record li = (ej , 6 : 51, 7 : 05) and the traffic tags given in Section 3.1, the cost of the trip is 1015 \u00b7 G.H(ej ,OFFPEAK) + 5 15 \u00b7 G.H(ej ,PEAK) = 10 15 \u00b7 d(ej ,OFFPEAK) \u00b7 G.L(ej)+ 5 15 \u00b7 d(ej ,PEAK) \u00b7 G.L(ej)."}, {"heading": "3.3 Framework Overview", "text": "Fig. 4 gives an overview of the framework for assigning trip cost based weights to a road network. Various types of raw data collected from a road network, such as GPS observations with corresponding CAN bus data and sensor data, are fed into a pre-processing module. While the GPS observations are obligatory, the CAN bus and sensor data are optional. Pre-processing module: The GPS observations are map matched and transformed into trips as defined in Section 3.2. Next, a cost is associated with each trip. If only GPS observations are available, some costs, e.g., travel time, can be associated with trips directly. Other costs, e.g., GHG emissions, can be derived. For example, models are available in the literature that are able to provide an estimate of a trip\u2019s GHG emissions and fuel consumption based on the GPS observations\n5 Pre-Processing Module GPS observations\nA set of (trip, cost) pairs {(t(i), c(i))}\nCAN bus\ndata\nSensor\ndata\nWeight Annotation Module\nG''(V, E, L, F, null)\nG(V, E, L, F, H)\noptionalobligatory\nFig. 4. Framework Overview\nof the trip [4]. If CAN bus data and sensor data are also available along with the GPS data, actual and more accurate fuel consumption and GHG emissions can be obtained directly, and thus can be associated with trips.\nThe pre-processing module outputs a set of (trip, cost) pairs {(t(i), c(i))}, which then serve as input to the edge annotation module. For example, if the goal is to assign GHG emissions based weights, cost value c(i) indicates the GHG emissions of trip t(i). Note that the cost c(i) is the total cost associated with the i-th trip, meaning that the cost for each individual link record in the i-th trip is not required to be known. This makes it easier to collect (trip, cost) pairs. Because pairs may be obtained in wide variety of ways, the proposed framework has the potential for wide applicability.\nWeight annotation module: The (trip, cost) pairs along with a corresponding un-weighted graph G\u2032\u2032 = (V,E, L, F, null) are fed into the weight annotation module. This module assigns pertinent weights to the edges of the graph, and it outputs an weighted graph G = (V,E, L, F,H).\nRecall that function G.H from Section 3.1 is defined by the cost vector d. Given a set of (trip, cost) pairs TC = {(t(i), c(i))}, the core task of this module is to estimate appropriate cost variables in vector d. We formulate the weight annotation problem as a supervised learning problem, namely a regression problem [19] that employs TC as the training data set to estimate cost variables in vector d.\nThe regression problem is solved by minimizing a judiciously designed objective function composed of three sub-objective items. The first item measures the misfit between the given actual cost and the estimated cost (i.e., the cost obtained from the cost model described in Equation 1) for every trip in TC. The second item measures the differences between the cost variables of two edges whose expected traffic flows (based on topological structures) are similar. The third item measures the differences between the cost variables of two edges which are directionally adjacent. Further, other appropriate metrics that can\nquantify the difference between the cost variables of two edges can also be incorporated into the module. Finally, minimizing the objective function is handled by solving a system of linear equations."}, {"heading": "4 OBJECTIVE FUNCTIONS", "text": "Since we regard the problem as a regression problem, we elaborate on the design of the proposed objective function and the solution to minimizing the objective function."}, {"heading": "4.1 Residual Sum of Squares", "text": "In order to obtain an appropriate estimation of the cost vector d, we need to make sure that for every (trip, cost) pair (t(i), c(i)) \u2208 TC, the misfit between the actual cost (e.g., c(i)) and the estimated cost (e.g., cost(t(i)) evaluated by Equation 1, which employs d), is as small as possible. To quantify the misfit, the residual sum of squares (RSS ) function is applied, where\nRSS(d) = \u2211\n(t(i),c(i))\u2208TC\n(c(i) \u2212 cost(t(i)))2.\nTo facilitate the following discussion, we derive a matrix representation of the RSS function, as shown in Equation 2.\nRSS(d) = ||c\u2212QTd||22 (2)\nLet the cardinality of the set TC be N (i.e., |TC| = N ). We define a vector c \u2208 RN = [c(1), c(2), . . ., c(N)]T, where c(i) is the given actual cost of the trip t(i), and (t(i), c(i)) \u2208 TC. A matrix Q \u2208 R|d|\u00d7N = [q(1), q(2), . . ., q(N)] is introduced to enable us to rephrase Equation 1 into a matrix representation. Specifically, q(k) is the k-th column vector in Q which corresponds to trip t(k). If trip t(k) contains a link record l whose corresponding edge is ei (i.e., l.e = ei), then q(k)[pos(i, j)] = G.L(ei) \u00b7 weight(l, tagj) where 1 6 j 6 |TAGS |; otherwise, it is set to 0.\nDifferent from ordinary regression problems, minimizing Equation 2 is insufficient for determining every cost variable in d because the trips in TC may not cover all the edges in the road network, e.g., all the edges in E. For the edges that are never traversed by any trip in TC, their corresponding cost variables in d cannot be determined by only minimizing the RSS function.\nIn this case, annotating the edges that do not appear in TC with weights seems to be difficult and even unsolvable. In the following, we try to use the topology of the road network to further propagate and constrain the cost variables in order to assign an appropriate weight to every edge.\n6"}, {"heading": "4.2 Topological Constraint", "text": "The topology of a road network is highly correlated with human movement flow [20], [21], including the movement of both pedestrians and vehicles. Edges with similar movement flows can be expected to have similar cost variables. Thus, if an edge is covered in TC, its cost variable information can be propagated to the edges that have similar movement flows. To this end, we study how to quantify movement flow based similarity between edges using topological information of road networks."}, {"heading": "4.2.1 Modeling Traffic Flows with PageRank", "text": "We transfer the idea of using PageRank for the modeling of web surfers to the modeling of vehicle movement in road networks. The original PageRank employs the hyperlink structure of the web to build a first-order Markov chain, where each web page corresponds to a state [22]. The Markov chain is governed by a transition probability matrix M. If web page i has a hyperlink pointing to web page j then M[i, j] is set to 1\noutDegree(i) ; otherwise, it is set to 0. M[i, j] indicates the probability of transition from state i to state j. PageRank models a user browsing the web as a Markov process based on matrix M, and the final PageRank vector is the stationary distribution vector x of matrix M. The PageRank of web page i, i.e., x[i], indicates the probability that the user visits page i or, equivalently, the fraction of time the user spends on page i in the long run [22]. According to the Perron\u2013Frobenius theorem, the existence and uniqueness of the stationary distribution vector x can only be guaranteed if matrix M is stochastic, non-negative, irreducible, and primitive [22]. However, the original transition probability matrix M that is derived purely from the hyperlink structure of the web cannot be guaranteed to satisfy these properties, e.g., due to dangling pages (pages without outlinks). Thus, a series of transformations (adding outlinks to a virtual page for dangling pages, introducing a damping factor, etc.) are applied to M to obtain matrix M\u2032 that satisfies the above properties. The transformations are well-known and can be found in the original PageRank paper [23] and in classical textbooks on Markov chains [24]. The modeling movements of vehicles on a road network as stochastic processes is well studied in the transportation field [25]. In particular, the modeling of vehicle movements as Markov processes is an easyto-use and effective approach [21]. Thus, we build a first-order Markov chain with a transition probability matrix derived from both the topology of the road network and the trips that occur in the road network. A state corresponds to an edge in the primal graph (i.e., a directed road segment), not a vertex (i.e., a road intersection). The PageRank value of a state indicates the probability that a vehicle travels on the edge or, equiv-\nalently, the fraction of time a vehicle spends on the edge in the long run. Thus, the PageRank value is expected to reflect the traffic flow on the edge. Further, a series of topological metrics [20], including centrality-based metrics, small-world metrics, spacesyntax metrics, and PageRank metrics, have been applied to capture human movement flows in urban environments. When using a graph representation of an urban environment, it is found that the classical and weighted PageRank metrics are highly correlated with human movements [20], [26]. Thus, if two edges have similar PageRank values, the traffic flow on the two segments should be similar. When modeling web surfers, PageRank assumes that the Markov chain is time-homogeneous, meaning that the probability of transferring from page i to page j has the same fixed value at all times. In other words, matrix M is static across time. In contrast, the timehomogenous assumption does not hold for vehicles traveling in road networks. For example, during peak hours, the transition probability from edge i to edge j may be substantially different from the probability during off-peak hours. Thus, we maintain a distinct transition probability matrix Mk for each traffic category tag tagk. During a particular traffic tag, we assume the Markov chain to be time-homogeneous."}, {"heading": "4.2.2 PageRank on Dual Graphs", "text": "PageRank was originally proposed to assign prestige to web pages in a web graph, where web pages are modeled as vertices and the hyper-links between web pages are modeled as edges. Unlike the web graph, we are not interested in the prestige of vertices (i.e., road intersections) in the primal graph representation of a road network; rather, we are interested in the prestige of edges (i.e., directed road segments). In order to assign PageRank values to edges, the primal graph G = (V, E, L, F , H) is transformed into a dual graph G\u2032 = (V\u2032, E\u2032), where each vertex in V\u2032 corresponds to an edge in the primal graph, and where each edge in E\u2032, denoted by a pair of vertices in V\u2032, corresponds to a vertex in the primal graph. Since functions L, F , and H are not of interest in this section, we do not keep them in the dual graph. To avoid ambiguity, we use the terms edge and vertex when referring to primal graphs and use dual edge and dual vertex when referring to dual graphs. Further, we use the term weight when referring to the weight of an edge in a primal graph, and we use dual weight in the context of dual edges in a dual graph. We define a mapping D2P : V\u2032\u222aE\u2032 \u2192 V\u222aE to record the correspondence between the elements in the dual and primal graphs. Fig. 5 show the dual graph that corresponds to the primal graph shown in Fig. 3. Since the dual vertex AB corresponds to the edge (A,B) in Fig. 3, D2P (AB) = (A,B). Similarly, since the dual edge (CB,BA) corresponds to the vertex B in Fig. 3, D2P((CB,BA)) = B.\n7 BA CB\nAB BC\nBD\nFig. 5. Dual Graph\nThe dual graph is able to model an important characteristic of a road network: at a particular intersection, the probability of which segment a vehicle follows depends on the segment via which the vehicle entered the intersection. Considering the road network shown in Fig 2, at intersection (i.e., vertex) B, a vehicle can proceed to follow segments (i.e., edges) (B,A), (B,C), or (B,D). If a vehicle entered the intersection using segment (C,B), it may be unlikely that the vehicle takes a u-turn to follow segment (B,C), while is more likely that it will use the other segments. Similar cases exist if a vehicle arrived at the intersection using segment (A,B). Modeling this characteristic in a primal graph is not easy. For example, we need to maintain two sets of probabilities on edge (B,C), for the vehicles came from edge (C,B) versus edge (A,B). In contrast, modeling this in a dual graph is straightforward, as how a vehicle entered a particular intersection is clearly represented as a dual vertex. For example, the probabilities on dual edges (CB,BC) and (AB,BC) record the probabilities that a vehicle entered intersection B from edge (C,B) and edge (A,B), respectively, and continues along edge (B,C). Given the dual graph G\u2032 = (V\u2032, E\u2032), original PageRank values are defined formally as follows.\nPR(v\u2032i) = 1\u2212 df\n|V\u2032| + df \u00b7\n\u2211\nv\u2032 j \u2208IN(v\u2032 i )\nPR(v\u2032j)\n|OUT (v\u2032j)| , v\n\u2032 i \u2208 V \u2032 , (3)\nwhere PR(v\u2032i) indicates the PageRank value of dual vertex v\u2032i; IN (v \u2032 i) indicates the set of in-link neighbors of v\u2032i, i.e., IN (v \u2032 i) = {v \u2032 x|(v \u2032 x, v \u2032 i) \u2208 E\n\u2032}; and OUT (v\u2032j) indicates the set of out-link neighbors of v\u2032j , i.e., OUT (v\u2032j) = {v \u2032 x|(v \u2032 j , v \u2032 x) \u2208 E\n\u2032}. Further, df \u2208 [0, 1] is a damping factor, which is normally set to 0.85 for ranking a web graph. The intuition behind Equation 3 is that the PageRank values are composed of two parts: jumping to another random vertex and continuing the random walk. This assumption works fine on the web graph, but we need to adapt this to the different characteristics of the graph representing a road network. In a road network, it is impossible for a vehicle to choose a random edge to traverse when at an intersection. Rather, it can only choose to continue along one of the out-link (dual) edges. Based on this observation, we set the damping factor df to 1. Some existing empirical\nstudies [20] also suggest that with the damping factor set to 1, the resulting PageRank values have the best correlation with the human movement flows."}, {"heading": "4.2.3 Weighted PageRank Computation", "text": "Definition of Dual Weights: In the original PageRank algorithm, a vertex propagates its PageRank value evenly to all its out-link neighbors. In other words, the dual weight for each dual edge from dual vertex v\u2032j is set uniformly to 1 |OUT(v\u2032\nj )| . The uniform weights\non the web graph indicate that a web surfer chooses its next target web page without any preferences to continue its random surfing. However, in a road network, such non-preference surfing usually does not occur. For example, the next step where a vehicle continues often depends on where the vehicle came from, as discussed in Section 4.2.2. Also, if Avenue 1 and Avenue 2 are the main roads in the road network shown in Fig. 2, more vehicles travel from AB to BC than from AB to BD. Further, during different traffic category tags, the transitions between dual vertices may also be quite different. With the availability of very large collections of GPS data, we are able to capture the probability that a vehicle transits from one road segment to another at an intersection during different traffic category tags. Assume we only distinguish between peak and offpeak hours, i.e., there are only two corresponding tags in TAGS . Suppose we obtain the number of trips that occurred on the dual edges, as shown in Table 2.\nFor example, among all the trips that occurred on dual vertex AB during the peak hours, 30 trips proceeded to follow BC, and 10 trips followed BD; during off-peak hours, 5 trips followed BC, and 5 trips followed BD. These observations suggest that the dual weight on dual edge (AB, BC) should be greater than the dual weight on dual edge (AB, BD) during peak hours; while they should be the same during off-peak hours. As the dual graph has different dual weights for different traffic tags, we need to maintain a dual graph for each traffic tag. Specifically, the training data set TC is partitioned into TC1, TC2, . . ., TC|TAGS | according to the traversal times. Partition TCk consists only of the trips that occurred during the time period indicated by the traffic tag tagk, i.e., G.F\n\u22121(tagk). The dual weight of a dual edge (v\u2032i, v \u2032 j) during tag tagk is related to the ratio of the number of trips that\n8 traversed the dual vertices v\u2032i and v \u2032 j to the number of trips that traversed the dual vertex v\u2032i, during tag tagk. Further, to contend with data sparsity, Laplace smoothing is applied to smooth the dual weight values for the dual edges that are not covered by any trip in TC. The dual weight of dual edge (v\u2032i, v \u2032 j) for the dual graph within tagk (denoted as G \u2032 k) is computed based on Equation 4.\nWk(v \u2032 i, v \u2032 j) =\n|Tripk (v \u2032 i, v \u2032 j)|+ 1\n\u2211\nv\u2032x\u2208OUT(v \u2032 i ) |Tripk (v\u2032i, v \u2032 x)|+ |OUT (v \u2032 i)|\n, (4)\nwhere Tripk (v \u2032 i, v \u2032 j) returns the set of trips in partition TCk that traversed the dual vertices v \u2032 i and v \u2032 j .\nContinuing the example shown in Table 2, although no trip goes from the dual vertex AB directly back to BA in TC, this does not mean that such a trip will not occur in the future. Thus, we need to give a small, non-zero value to the dual weight of dual edge (AB, BA). Using the dual weights provided by Equation 4, the dual weights of the out-linking dual edges of dual vertex AB are: WPEAK (AB, BC) = 31 43 , WPEAK (AB, BD) = 11 43 , and WPEAK (AB, BA) = 1 43 ; and WOFFPEAK (AB, BC) = 6 13 , WOFFPEAK (AB, BD) = 613 , and WOFFPEAK (AB, BA) = 1 13 .\nNote that for a given dual vertex v\u2032i, if no trips in TC are available to assign the dual weights during a traffic tag tagk, i.e., |Tripk(v \u2032 i, v \u2032 x)| = 0 for every v \u2032 x \u2208 OUT (v\u2032i), Equation 4 assigns weights with 1\n|OUT(v\u2032i)|\nto each dual edge, which is exactly what the original PageRank algorithm does. For instance, if no trips are available for dual vertex AB (i.e., if the numbers in Table 2 are all zeros), the dual weights for Wk(AB, BC), Wk(AB, BD), and Wk(AB, BA) are all 1 3 .\nFinally, we show why the constructed matrix Mk is stochastic, non-negative, irreducible, and primitive, thus ensuring that the PageRank vector exists uniquely, i.e., convergence is guaranteed. Equation 4 guarantees that the sum of the elements in a row in matrix Mk is 1, meaning that Mk is stochastic (in particular, stochastic by rows). Equation 4 also guarantees that all elements in matrix Mk are nonnegative. Irreducibility means that it is possible to each every vertex from every vertex [24]. This is also true for a graph representing a road network, where a vehicle can go from every road segment to every road segment. A matrix is primitive if some power of the matrix has only positive elements. Intuitively, this means that for some n, it is possible to go from any vertex to another vertex in n steps. This is not always guaranteed for a matrix representing a road network. However, simple mathematical operations can transfer a non-primitive matrix to a primitive matrix, and the two matrices have the same stationary distribution vector, i.e., the same PageRank vector [24]. Since such mathematical operations are normally implemented in various packages for computing PageRank values, a stochastic, non-negative, and irreducible Mk is\nsufficient to guarantee convergence of the PageRank vector on Mk. Computing Weighted PageRank Values: Based on the dual weights obtained from Equation 4, we construct the transition probability matrices Mk\u2208R\n|V\u2032|\u00d7|V\u2032|. Specifically, the ith row and jth column element in Mk, i.e., Mk[i, j], equals Wk(v \u2032 i, v \u2032 j) if the dual edge (v\u2032i, v \u2032 j) exists in the dual graph; otherwise, it equals 0. Note that the sum of all elements in a row equals 1, i.e., \u2211|V\u2032|\nj=1Mk[i, j] = 1 for every 1 6 i 6 |V\u2032|. Let vector vk\u2208R\n|V\u2032| record the PageRank values for every dual vertex in G\u2032k. Specifically, vk[i] = PRk(v \u2032 i), which is the PageRank value of v\u2032i during traffic category tag tagk. This way, the PageRank values can be computed iteratively as follows until converged.\nvk (n+1) = Mk T \u00b7 vk (n),\nwhere vk (n) is the PageRank vector in the n-th iteration."}, {"heading": "4.2.4 PageRank-Based Topological Constraint Objective Function", "text": "After obtaining the weighted PageRank values for every dual edge, the topological similarity between two edges in the primal graph is quantified in Equation 5.\nS PR k (ei, ej) =\nmin(PRk(v \u2032 ei ),PRk(v \u2032 ej )) max(PRk(v\u2032ei),PRk(v \u2032 ej ))\n(5)\nThe topological similarity between edges ei and ej , denoted as S PR k (ei, ej), is defined based on the weighted PageRank values of the two dual vertices representing the edges. To be specific, v\u2032ei and v \u2032 ej indicate the corresponding dual vertices of edges ei and ej , i.e., D2P(v \u2032 ei ) = ei and D2P(v \u2032 ej ) = ej . Note that Equation 5 returns a high similarity if two edges have similar weighted PageRank scores and that it returns a low similarity, otherwise. Based on the topological similarity, a PageRankbased Topological Constraint (PRTC ) function is incorporated into the overall objective function. The intuition behind the PRTC function is that for the same traffic category tag, if two edges have similar traffic flows (as measured by Equation 5), their cost variables tend to be similar as well. The PRTC function is defined in Equation 6.\nPRTC (d) =\n|TAGS| \u2211\nk=1\nPRTC (d, k), (6)\nwhere\nPRTC (d, k) =\n|G.E|\u2211\ni,j=1\nSPRk (ei, ej) \u00b7(d(ei,tagk)\u2212d(ej ,tagk)) 2.\nThe value of the PRTC function over the cost vector d is the sum of PRTC (d, k) for every 1 6 k 6 |TAGS |. The function PRTC (d, k) computes the weighted (decided by SPRk ) sum of the squared differences of\n9 between each pair of road segments\u2019 cost variables during traffic tag tagk. The PRTC function has two important features: (i) if the PageRank values of two edges are similar,\nthe similarity value SPRk is large, thus making the difference between their cost variables obvious; (ii) if two edges\u2019 PageRank values are dissimilar, the similarity value SPRk with a small value smoothes down the difference between their cost variables. This way, minimizing the PRTC function corresponds to minimizing the overall difference between two cost variables whose corresponding road segments have similar traffic flows. To obtain the matrix representation of the PRTC function, we introduce a matrix A \u2208 R|d|\u00d7|d|, which is a block diagonal matrix.\nA =\n\n \nA1 A2\n. . . A|TAGS|\n\n  (7)\nwhere Ak \u2208 R |E|\u00d7|E| and Ak[i, j] = S PR k (ei, ej), which obviously is a symmetric matrix. Let matrix LA be the graph Laplacian induced by the similarity matrixA. Specifically, LA[i, j] = \u03b4i,j \u00b7 \u2211 xA[i, x]\u2212A[i, j], where \u03b4i,j returns 1 if i equals j, and 0 otherwise. The matrix representation of PRTC function is shown in Equation 8.\nPRTC (d) = dTLAd (8)"}, {"heading": "4.2.5 Properties of PageRank on Road Networks", "text": "Web graphs, citation graphs, and road network graphs are quite different, rendering it of interest to study the distributions of PageRank values on these kinds of graphs. We consider three directed graphs, WEB, CIT, and NJ, representing a part of the web, citations in a particular domain, and a road network, respectively.\n1) WEB1: Vertices represent web pages, and directed edges represent hyperlinks between them. This dataset was released as a part of the 2002 Google programming contest. 2) CIT2: Vertices represent papers, and directed edges represent citations between them. This dataset is obtained from the arXiv e-print archive in the domain of high-energy physics theory. This dataset was released as a part of the 2003 KDD CUP. 3) NJ: Vertices represent road segments, and directed edges represent road junctions that enable movements between road segments. This dataset is the dual graph representation of the North Jutland, Denmark road network used in this paper.\nBasic Statistics of The Graphs: Basic statistics, including the numbers of vertices (# V) and edges (# E),\n1. http://snap.stanford.edu/data/web-Google.html 2. http://snap.stanford.edu/data/cit-HepTh.html\nthe maximum in-degree (MI) and out-degree (MO), and the average degree (AD) of the three graphs are shown in Table 3.\nTo understand better how in-degrees and outdegrees distribute among vertices, Figures 6 and 7 show in-degrees and out-degrees on the x-axis and the corresponding percentages of vertices on the yaxis. For WEB and CIT, Figures 6 and 7 only show the percentage up to degree 60\u2014the percentages for higher degrees are so small that they are invisible. All the statistics show that NJ is quite different from WEB and CIT. For WEB and CIT, the degrees (both in-degrees and out-degrees) vary a lot, from 0 to hundreds or even thousands. The distribution of degrees are also quite biased: most vertices have very small degrees. Taking WEB as an example, 64.2%, 78.3%, and 87.8% of the vertices have in-degrees smaller than 2, 5, and 10, respectively. For NJ, the degrees (both indegrees and out-degrees) of vertices vary only little, and only from 1 to 6, with most vertices having degree 3 and almost no vertices having degrees above 4. Since the basic statistics of NJ are quite different from those ofWEB and CIT, we expect the distribution of PageRank values for NJ to also be different. Statistics of the PageRank Values on the Graphs: As discussed in the coverage of the mathematical foundation of PageRank, PageRank is the stationary distribution vector x of the transition matrix, which satisfies the property \u2211N i=1 x[i] = 1 (N is the number of vertices in a graph). Since the three graphs have different numbers of vertices, a direct comparison of absolute PageRank values is meaningless. For instance, for a graph with 10 vertices, the average PageRank is 1 10 , whereas for a graph with 1000 vertices, the average PageRank is 11000 . Thus, for example, the PageRank value of a vertex in the first graph is likely to be larger than that of a vertex in the second graph. To conduct a meaningful analysis on the distribution of PageRank values, we normalize the original PageRank values into range (0, 100]. Given a PageRank vector x, let the k-th (k = argmaxi\u2208{1,2,...,N} x[i]) element in the vector have the biggest PageRank value. The normalized PageRank vector y can be computed by y[i] = x[i] x[k] \u00b7 100.\nNext, we divide the normalized PageRank values into 100 buckets, where the i-th bucket indicates the interval (i \u2212 1, i]. For example, the 10-th bucket represents the interval (9, 10]. We plot the buckets (on the x-axis) with respect to the percentage of vertices whose normalized PageRank values are in the buckets\n10\n(on the y-axis) for the three graphs in Figure 8.\nAs expected, the distribution of normalized PageRank values in NJ is substantially different from those in WEB and CIT. Most of the vertices in WEB and CIT have very small normalized PageRank values, and a small fraction of the vertices spread over the remaining buckets, which is consistent with the degree distributions shown in Figures 6 and 7. For example, 98.8% of the vertices in WEB have normalized PageRank values falling into the first bucket, i.e., (0, 1]; and 99.9% of the vertices in WEB have normalized PageRank values falling into the first 5 buckets.\nSuch a distribution is good for ranking web pages because users only care about a small fraction of the most important web pages. For example, the PageRank values of the remaining 0.1% of web pages (which have larger PageRank values and thus are considered as important) are spread over the remaining 95 buckets, making the PageRank based ranking very discriminative for these web pages.\nThe normalized PageRank values in NJ are distributed more uniformly when compared with WEB and CIT. This characteristic is bad for ranking: more vertices have the same or very similar PageRank values, rendering the values much less discriminating when compared to WEB and CIT. Although this distribution reduces the usability of pageRank values for ranking, the distribution does not reduce the utility of the PageRank values for identifying similar road segments. In the paper, we do not use PageRank values for ranking, but rather use PageRank values for identifying road segments that may have similar traffic flows.\nRecall that if a road segment is covered by a training data set, our approach (in particular, with the help of objective function F2) is able to propagate the obtained travel cost information to all the road segments with similar PageRank values. The kind of distribution observed on NJ yields benefits in our setting. For example, if a road segment is covered by\n11\na training data set, the corresponding bucket (based on its PageRank value) may contain relatively more segments, and thus the obtained travel cost can be propagated to more segments. In contrast, with the distributions observed in WEB and CIT, unless the segment falls into the first few buckets, the obtained travel cost can only be propagated to few segments. Additional Related Work About Using PageRank on Road Networks: Studies exist of the correlations between human movement flows and various geometrical and topological metrics [20], [26]. One study [20] considers human movement (both pedestrians and vehicles) in London and three central regions in London; another [26] considers vehicle movement (based on Annual Average Daily Traffic obtained from the Swedish Road Administration and GPS tracks) in seven regions in Sweden. Both studies suggest that weighted PageRank values have the best correlation with traffic flows. Further, both random and purposeful movements (movements for given sourcedestination pairs) are simulated [27], and both movements generate almost the same aggregate traffic flows, which are highly correlated with PageRank values. A live demo for the simulation is available3. Another study [21] uses the PageRank idea to model traffic on a road network as a Markov chain. The effectiveness of the model is validated by a wellknown traffic simulator, SUMO [28], [29]. PageRank values are also used to predict the congestion levels in a road network [30], which is applied to optimize the control of traffic lights. A benchmark [31] is developed to study the PageRank values on graphs representing the web, citations, and road networks with emphasis on convergence speed. The best convergence speed is achieved on the graph representing a road network. Further, PageRank is used for ranking groups of places in a road network [32]. The results show that, typically, a group of places have the same or highly similar PageRank values, which is consistent with our study on the NJ dataset. As a final remark, most of the works using PageRank on road networks are published in the recent three years, which indicates that this is a relatively new research direction that is not yet well studied. No existing works employ PageRank for predicting travel costs\u2014our study is the first to explore this."}, {"heading": "4.3 Adjacency Constraint", "text": "The PRTC function is derived from the overall structure of the road network. In this section, we consider a finer-grained topological aspect of the road network, namely, directional adjacency. An important feature of a road network is that an event at one road segment may propagate to influence adjacent road segments. Consider a typical event in\n3. http://fromto.hig.se/\u223cbjg/movingbehavior/\na road network, e.g., traffic congestion. If congestion occurs on road segment (A,B) in Fig. 2, road segment (B,C) may also experience congestion, or at least the traffic on (B,C) is affected by the congestion that occurs on (A,B). Thus, the cost variables of two directionally adjacent road segments should be similar. The directional adjacency we discus here is represented clearly in the dual graph. If and only if two dual vertices are connected by an dual edge in the dual graph, the two corresponding road segments are directionally adjacent. For example, although edges (B, D) and (B, C) (in Fig. 3) intersect, their cost variables may not necessarily tend to be similar because no vehicle can travel between these two edges. Directional adjacency is distinct from the \u201cnon-directional\u201d adjacency considered in previous work [8]. Another point worth noting is that if two road segments represent opposite directions of the same physical road segment, they are not directionally adjacent. It is natural that an event on a physical road only yields congestion in one direction, but not both directions. Considering the edges (A,B) and (B,A) (in Fig. 3), their corresponding vertices in the dual graph (AB and BA in Fig. 5) are connected by two edges, however, their cost variables are not necessarily similar. Directional adjacency is also temporally sensitive. For example, although edges (A,B) and (B,C) are directionally adjacent, the general traffic situation (indicated by the cost variable) on edge (A,B) during peak hours is not necessarily correlated with the traffic on edge (B,C) during non-peak hours. To incorporate directional adjacency, we incorporate a Directionally Adjacent Temporal Constraint (DATC ) function into the overall objective function.\nDATC (d) =\nk=|TAGS| \u2211\nk=1\nDATC (d, k), (9)\nwhere\nDATC (d, k) =\n|G.E|\u2211\ni,j=1\nW \u2032k(v \u2032 ei , v\u2032ej )\u00b7(d(ei,tagk)\u2212d(ej ,tagk)) 2,\nand where v\u2032ei and v \u2032 ej have the same meaning as in Equation 5. W \u2032k(v \u2032 ei , v\u2032ej ) is as defined in Equation 4 if v\u2032ei and v \u2032 ej\ndo not indicate the same physical road segment; and W \u2032k(v \u2032 ei , v\u2032ej ) equals 0 otherwise. For instance, although WPEAK (AB,BA) = 1 43 as discussed in Section 4.2.3, W \u2032PEAK (AB,BA) = 0 since AB and BA indicate the same physical road segment, Avenue 1. The DATC function aims to make the cost variables satisfy the following property: given road segments ei and ej , if a many of the trips that follow ei also follow ej , as indicated by W \u2032 k(v \u2032 ei , v\u2032ej ), the cost variables on the two edges tend to be more correlated.\n12\nSimilar to the discussion in Section 4.2.4, we introduce a block diagonal matrix B \u2208 R|d|\u00d7|d| with the same format as matrix A (defined in Equation 7). In particular, in each block matrix, Bk[i, j] = max(W \u2032k(v \u2032 ei , v\u2032ej ), W \u2032 k(v \u2032 ei , v\u2032ej )), which guarantees that matrix Bk, and hence matrix B, are symmetric. Note that it is not possible that both W \u2032k(v \u2032 ei , v\u2032ej ) and W \u2032k(v \u2032 ej , v\u2032ei ) are non-zero because if edge D2P(v \u2032 ei ) is directionally adjacent to edge D2P(v\u2032ej ) then edge D2P(v\u2032ej ) cannot be directionally adjacent to edge D2P(v\u2032ei). Let LB to be the graph Laplacian derived by matrix B. The DATC function is represented by Equation 10.\nDATC (d) = dTLBd (10)"}, {"heading": "4.4 Solving The Problem", "text": "Combining the three individual objective functions and a classical L2 regularizer, we obtain the overall objective function O(d):\nO(d) = RSS(d)+\u03b1\u00b7PRTC (d)+\u03b2 \u00b7DATC (d)+\u03b3 \u00b7||d||22,\nwhere \u03b1, \u03b2, and \u03b3 are hyper-parameters that control the tradeoff among the losses on RSS , PRTC , DATC , and the L2 regularizer. The matrix representation of the objective function is shown in Equation 11.\nO(d) = ||c\u2212QTd||22+\u03b1\u00b7d T LAd+\u03b2 \u00b7d T LBd+\u03b3 \u00b7||d|| 2 2 (11)\nBy differentiating Equation 11 w.r.t. vector d and setting it to 0, we get\n[QQT + \u03b1 \u00b7 LA + \u03b2 \u00b7 LB + \u03b3 \u00b7 I]d = Qc. (12)\nThe solution to Equation 12 is the optimal solution\nto the cost vector, denoted as d\u0302, that minimizes the overall objective function in Equation 11. The linear system in Equation 12 can be solved efficiently by several iterative algorithms such as the conjugate gradient algorithm [33]. Finally, feeding the optimized cost variable vector\nd\u0302 to function G.H , the time varying weights of the graph become available."}, {"heading": "4.5 Discussion", "text": "In addition to the topology of a road network, other aspects of edges may be useful for identifying similarities among edges, e.g., the shapes and capacities of edges and the points of interest along edges [34]. Such information is not always available in digital maps and can be difficult to obtain. However, it is of interest to extend the proposed methods to take additional information, when available, into account. To achieve general applicability of the paper\u2019s methods, we minimize the requirements of the input graph G\u2032\u2032: both PRTC and DATC rely solely on the topology of a road network, which can be obtained easily from any digital map.\nThe weight annotation problem is finally handled by solving a system of linear equations, i.e., Equation 12. Alternative edge similarity metrics (e.g., considering the shapes and capacities of edges) can be easily incorporated into the linear system by adding new terms of the form \u03d5 \u00b7 LM, where \u03d5 is the hyperparameter and LM is the Laplacian matrix derived by an alternative similarity metric. An alternative similarity metric sim should satisfy symmetry: sim(ei, ej) = sim(ej , ei). Both PRTC and DATC satisfy symmetry. The core operations in solving a system of linear equations using a conjugate gradient algorithm are matrix multiplication and transposition. This means that existing scalable matrix computation algorithms [35], [36] can be applied directly to make the proposed framework scalable and applicable to large road networks."}, {"heading": "5 EXPERIMENTAL STUDY", "text": "We study the effectiveness of the proposed method for weight annotation of road networks with both travel time (TTWA) and GHG emissions (GEWA)."}, {"heading": "5.1 Experimental Setup", "text": "Road Networks: We use two road networks. The SK network is from Skagen, Denmark and has a primal graph with 543 vertices and 1, 244 edges. The NJ network contains almost all of North Jutland, Denmark and has a primal graph with 17, 956 vertices and 39, 372 edges. Trips: We use GPS observations collected from 28 vehicles in the period 2007-10-01 to 2007-10-15. When the vehicles were moving, positions were sampled at 1 Hz. The data is collected as part of an experiment where young drivers start out with a substantial rebate on their car insurance and then are warned if they exceed the speed limit and are penalized financially if they continue to speed. We apply an existing tool for map matching GPS observations onto road segments, thus obtaining 431 trips in the SK network and 11, 516 trips in the NJ network. For TTWA, we use the total travel time for each trip, which can be obtained directly from the GPS observations of the trip, as the cost. For GEWA, we use the GHG emissions of each trip as trip cost. Ideally, the exact fuel consumption should be obtained from CAN bus sensor data. Since such data is hard to obtain in a scalable fashion, we use instead the VT-micro model [16] that is able to compute the GHG emissions of trips based on the instantaneous velocities and accelerations derived from the GPS records of the trips in a robust fashion [4]. The 1 Hz GPS sampling frequency makes the VT-Micro model easy to use. Traffic Category Tags: In transporation research, PEAK and OFFPEAK periods are used widely to\n13\ndistinguish different traffic flows over the course of a day [37]. Thus, we use PEAK and OFFPEAK as traffic category tags. Further, we distinguish between weekdays from weekend days, as traffic differs between weekdays and weekend days. To appropriately assign PEAK and OFFPEAK tags to the data set, we plot the numbers of GPS records according to their corresponding observed time at an one-hour granularity for weekdays and weekend days, respectively. Based on the generated histograms, we identify PEAK and OFFPEAK periods for weekdays. We find no clear peak periods during weekends and thus use WEEKENDS as the single tag for weekends. Table 4 provides the mapping (i.e., the function G.F ) from time periods to tags.\nT-Drive [11] is able to assign distinct and finegrained traffic tags to individual edges. The precondition of the method is that sufficient GPS data is associated with edges. However, a substantial fraction of all edges have no GPS data in our setting. Thus, we use traffic tags at the coarse granularity shown in Table 4.\nImplementation Details: The PageRank computation is implemented in C using the iGraph library version 0.5.4 [38]. All remaining experiments are implemented in Java, where the conjugate gradient algorithm for solving a linear system is implemented using the MTJ (matrix-toolkits-java) package [39].\nWe use the threshold 0.95 to filter the entries in the PageRank-based similarity matrix A (Equation 7): if the value of an entry in A is smaller than 0.95, the entry is set to 0. We use the speed limits associated with roads to classify the edges into two categories, highways (with speed limits above 90 km/h) and urban roads (with speed limits below 90 km/h). We only apply adjacency constraint on pairs of edges in the same category.\nDue to the space limitation, the experiments only report the results using the best set of hyper-parameters, which are is obtained by manual tuning on a separate data set using cross validation. This is a well known method [19] for choosing hyper-parameters."}, {"heading": "5.2 Experimental Results", "text": ""}, {"heading": "5.2.1 Effectiveness Measurements", "text": "To gain insight into the accuracy of the obtained trip cost based weights, we split the set of (trip, cost) pairs into a training set TCtrain and a testing set TCtest . We use the the training set to annotate the spatial network with weights, and we use the the testing set to evaluate the accuracy of the weights. In the following experiments, we randomly choose 50% of the pairs for training and the remaining 50% for testing, unless explicitly stated otherwise. Since no ground-truth time-dependent weights exist for the two road networks, the accuracy of the obtained weights can only be evaluated using the trips in testing set TCtest. If the obtained weights (using TCtrain) actually reflect the travel costs, the difference between the actual cost and the estimated cost using the obtained weights (i.e., by using Equation 1 defined in Section 3.2) for each trip in the testing set TCtest should be small. We use the sum of squared loss (SSL) value (defined in Equation 13) between the actual cost c(i) and the estimated cost cost(t(i)) over every trip in the testing set TCtest to measure the accuracy of the obtained weights.\nSSL(TCtest) = \u2211\n(t(i),c(i))\u2208TCtest\n(c(i) \u2212 cost(t(i)))2 (13)\nFor example, if the GHG emissions based weights really reflect the actual GHG emissions, the sum of squared loss between the actual GHG emissions and the estimated GHG emissions over every testing trip should tend to be small. The smaller the sum of squared loss, the more accurate the weights. To gain insight into the effectiveness of the proposed objective functions, we compare four combinations of the functions:\n1) F1=RSS(d) + \u03b3 \u00b7 ||d|| 2 2. 2) F2=RSS(d) + \u03b1 \u00b7 PRTC (d) + \u03b3 \u00b7 ||d|| 2 2. 3) F3=RSS(d) + \u03b2 \u00b7DATC (d) + \u03b3 \u00b7 ||d|| 2 2. 4) F4=RSS(d)+\u03b1\u00b7PRTC (d)+\u03b2\u00b7DATC (d)+ \u03b3 \u00b7||d|| 2 2. Function F1 only considers the residual sum of squares. Functions F2 and F3 take into account the PageRank-based topological constraint and the directional adjacency constraint, respectively. Function F4 takes into account both constraints. As the objective function used in trajectory regression [8] also considers adjacency, we can view the method using function F3 as an improved version of trajectory regression because (i) function F3 works not only for travel times, but also other travel costs, e.g., GHG emissions; (ii) function F3 considers the temporal variations of travel costs, while trajectory regression does not; and (iii) function F3 considers directional adjacency, while trajectory regression models a road network as a undirected graph and only considers undirected adjacency.\n14\nThe sum of squared loss value for using objective function Fi is denoted as SSLFi(TCtest). In order to show the relative effectiveness of the proposed objective functions, we report the ratios RatioF2= SSLF2(TCtest)\nSSLF1(TCtest) , RatioF3=\nSSLF3 (TCtest) SSLF1 (TCtest) , and\nRatioF4= SSLF4 (TCtest)\nSSLF1 (TCtest) .\nCoverage, defined in Equation 14, is introduced as another measurement.\nCoveFi(TCtrain ) = |{e|e \u2208 G.E \u2227 annotated (e)}|\n|G.E| , (14)\nwhere annotated(e) holds if edge e is annotated with weights using TCtrain . Function CoveFi indicates the ratio of the number of edges whose weights have been annotated by using objective function Fi to the total number of edges in the road network. The higher the coverage is, the more edges in the road network are annotated with weights, and thus the better performance."}, {"heading": "5.2.2 Travel Time Based Weight Annotation", "text": "Effectiveness of objective functions: Table 5 reports the results on travel time based weight annotation. Column SSLF1 reports the absolute SSL values over all test trips when using objective function F1 for both data sets. NJ has much larger SSL values than SK because it has much more testing trips. For both road networks, the weights annotated using objective function F4 have the least SSL values.\nWe also observe that the PageRank based topological constraint works more effectively on NJ than on SK. The reason is that Skagen is a small town in which few road segments have similar topology (e.g., similar weighted PageRank values). In the NJ network, the PageRank based topological constraint gives a better accuracy improvement since more road segments have similarly weighted PageRank values. The coverage reported in Table 6 also justifies the observation. When using objective function F1, only the edges in the set of training trips can be annotated, which can be expected to be a small portion of the road network. When using objective function F2, the\ncoverage of the SK network increases much less than\nfor the NJ network. This suggests that in a large road network, the PageRank based topological constraint substantially increases the coverage of the annotation, thus improving the overall annotation accuracy. The directed adjacency topological constraint yields similar accuracy improvements on both road networks, and the accuracy improvement is more substantial than the improvement given by the PageRank based topological constraint. This is as expected because a road network is fully connected, and DATC is able to finally affect almost every edge, which gives more information for the edges that are not traversed by trips in the training set. This can be observed from the third column of Table 6. For both road networks, PRTC and DATC together give the best accuracy, as shown in column RatioF4 in Table 5. This finding offers evidence of the overall effectiveness of the proposed objective functions. Accuracy comparison with a baseline: The test tips contain edges that are not covered by any training trips. Therefore, existing methods [11] that can estimate travel time based on historical data are inapplicable as baseline. If the speed limit of every edge in a road network is available, we can use speed limit derived weights as a baseline for travel time based weight annotation. While it is difficult to obtain a speed limit for every road segment in a road network, we can use default values were values are missing. In the NJ network, 62 edges lack a speed limit and are assigned a default value (50 km/h). Given an edge e and its speed limit sl(e) and length G.L(e), the corresponding travel time based weight for e is \u03bb \u00b7 G.L(e) sl(e) if e is an urban road (where \u03bb \u2265 1) and G.L(e) sl(e) if e is a highway.\nThe factor \u03bb is used because vehicles tend to travel at speeds below the speed limit on urban roads and at the speed limit on highways. Previous work [8] uses \u03bb = 2, meaning that vehicles normally travel at half the speed limit in urban regions. However, we find that \u03bb = 1 works the best for our data. The reason may be two-fold: (i) the data we use is collected from young drivers who tend to drive more aggressively than average drivers. (ii) the SK and NJ networks are relatively congestion-free when compared to Kyoto, Japan, which is simulated in previous work [8]. The above allows us to treat the speed limit derived weights as a baseline method for travel time based weight annotation. To observe the accuracy of the baseline method, its accuracy is also evaluated using SSL over every testing trip. Specifically, the baseline with \u03bb = 2 is denoted as SSLBL,\u03bb=2(TCtest), and the baseline with \u03bb = 1 is denoted as SSLBL,\u03bb=1(TCtest ). The two resulting baselines are compared with the proposed method, and the results are reported in Table 7, where Ratio\u03bb=2= SSLF4 (TCtest)\nSSLBL,\u03bb=2(TCtest) and\nRatio\u03bb=1= SSLF4(TCtest)\nSSLBL,\u03bb=1(TCtest) . The ratios Ratio\u03bb=1 on the\n15\ntwo road networks show that the weights obtained by our method are substantially better than the best cases of the weight obtained from the speed limits.\nThe same deviation has quite a different meaning for long versus short trips. For example, a 50-second deviation can be considered as a very good estimation error for a 30-minute trip, while it is a poor estimation error for a 2-minute trip. Thus, to better understand how the overall SSL values are distributed, we plot the number of test trips whose absolute loss ratio (ALR) values are within x percentage in Fig. 9. Given a test pair (t(i), c(i)) \u2208 TCtest , its ALR value equals the absolute difference between the estimated and actual costs divided by the actual cost, as defined in Equation 15.\nALR((t(i), c(i))) = absolute(cost(t(i))\u2212 c(i))\nc(i) (15)\nOur method shows the best result as the majority of the test trips have smaller ALR values. Assume that we consider and ALR below 30% as a good estimation. Fig. 9 shows that 84.3% of test trips have good estimations using the proposed method. In contrast, only 67.4% and 22.1% of test trips have good estimations using baseline methods with \u03bb = 1 and \u03bb = 2, respectively.\nWe do not integrate speed limits into our method because (i) for edges without available speed limits, the obtained weights are quite sensitive to the assigned default speed limits: inaccurate defaults deteriorate the performance severely; and (ii) speed limits do not give obvious benefits when annotating edges with GHG emissions based weights, as we will see shortly in Section 5.2.3 (in particular, in Fig. 10)."}, {"heading": "5.2.3 GHG Emissions Based Weight Annotation", "text": "Effectiveness of objective functions: Table 8 reports the results on GHG emissions based weight annotation. In general, the results are consistent with the re-\nsults from the travel time based weight annotation (as shown in Table 5): (i) The PageRank-based topological constraint works more effectively on the NJ network than on the SK network; (ii) the directed adjacency constraint works more effectively than the PageRankbased topological constraint; (iii) the weights obtained by using both PRTC and DATC give the best accuracy. The coverage when using the different objective functions is exactly the same as what was reported in Table 6. Comparison with a baseline: As we did for travel times, we use speed limits to devise a baseline for GHG emissions based weight annotation. Assuming a vehicle travels on an edge at constant speed (e.g., the speed limit of the edge), we can simulate a sequence of instantaneous velocities. For example, let an edge be 100 meters long and the speed limit be 60 km/h. The simulated trip on the road segment is represented by a sequence of 6 records, each with 60 km/h as the instantaneous velocity. This allows us to apply the VTmicro model to estimate GHG emissions based edge weights. Since in the previous set of experiments, we have already found that the speed limit (i.e., \u03bb = 1) is the best fit for our data we simply use the speed limit here. We obtain Ratio\u03bb=1 = 24.7% for SK and Ratio\u03bb=1 = 29.8% on NJ. Fig. 10 shows the percentage of test trips whose ALR values are less than x% using the baseline with \u03bb = 1 and the proposed method, respectively. These results clearly show the better performance of the proposed method, as the majority of test trips have smaller ALR values."}, {"heading": "5.2.4 Effectiveness of the Size of Training Trips", "text": "In this section, we study the accuracy when varying the training set size. Specifically, on the NJ network, we reserve 20% of the (trip, cost) pairs as the testing set, denoted as TCtest , and the remaining 80% as the training set, denoted as TCtrain. In order to observe\n16\nthe accuracy of weight annotation on different sizes of TCtrain , we use 100%, 80%, 60%, 40% and 20% of TCtrain to annotate the weights, respectively. The results are shown in Fig. 11.\nFor travel time, when only 20% of TCtrain is used, the accuracy of our method is worse than the baseline method with \u03bb = 1 because the baseline has a rough estimation for the costs of all edges, while the 20% of TCtrain covers only 16.3% of the edges in the road network. Although our method propagates weights to edges that are not covered by the training trips, the accuracy suffers when the initial coverage of the training trips is low. When 40% of TCtrain is used, the accuracy of our method is much better than that of the baseline. In this case, the training trips cover 23.3% of all edges. As the training set size increases, the accuracy of the travel time weights also increases. When we use all trips in TCtrain , the accuracy of our method is almost twice that of the baseline. For GHG emissions, we observe a similar trend: with more training trips, the accuracy of the corresponding weights improves, and our method always outperforms the baseline when annotating edges with GHG emissions based weights. This experiment justifies that (i) our method works effectively even when the coverage of the trips in the training set is low; (ii) if the coverage of the trips in the training set increases, e.g., by providing more (trip, cost) pairs as training set, the accuracy of the obtained weights also increases."}, {"heading": "6 CONCLUSION AND OUTLOOK", "text": "Reduction in GHG emissions from transportation calls for effective eco-routing, and road network graphs where all edges are annotated with accurate weights that capture environmental costs, e.g., fuel usage or GHG emissions, are needed for eco-routing. However, such weights are not always readily available for a road network. This paper proposes a general framework that takes as input a collection of (trip, cost) pairs and assigns trip cost based weights to a graph representing a road network, where trip cost based weights may reflect GHG emissions, fuel consumption, or travel time. By using the framework, edge weights capturing environmental impact can be\ncomputed for the whole road network, thus enabling eco-routing. To the best of our knowledge, this is the first work that provides a general framework for assigning trip cost based edge weights based on a set of (trip, cost) pairs. Two directions for future work are of particular interest. It is of interest to explore whether accuracy improvement is possible by using distinct PEAK and OFFPEAK tags for different road segments. Likewise, it is of interest to explore means of updating weights in real time. A module that takes as input real time streaming data, e.g., real time GPS observations along with costs, can be incorporated into the framework."}, {"heading": "ACKNOWLEDGMENTS", "text": "This work was supported by the Reduction project that is funded by the European Commission as FP7ICT-2011-7 STREP project number 288254."}], "references": [{"title": "Using Incomplete Information for Complete Weight Annotation of Road Networks", "author": ["B. Yang", "M. Kaul", "C.S. Jensen"], "venue": "In IEEE Transactions on Knowledge and Data Engineering,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "EcoMark: Evaluating models of vehicular environmental impact", "author": ["C. Guo", "Y. Ma", "B. Yang", "C.S. Jensen", "M. Kaul"], "venue": "In GIS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Fuel consumption analysis and prediction model for eco?route search", "author": ["T. Kono", "T. Fushiki", "K. Asada", "K. Nakano"], "venue": "In 15th World Congress on Intelligent Transport Systems and ITS America\u2019s 2008 Annual Meeting,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Optimizing route choice for lowest fuel consumption-potential effects of a new driver support tool", "author": ["E. Ericsson", "H. Larsson", "K. Brundell-Freij"], "venue": "Transportation Research Part C: Emerging Technologies,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "Optimisation of MSW collection routes for minimum fuel consumption using 3D GIS modelling", "author": ["G. Tavares", "Z. Zsigraiova", "V. Semiao", "M.G. Carvalho"], "venue": "Waste Management,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Trajectory regression on road networks", "author": ["T. Id\u00e9", "M. Sugiyama"], "venue": "In AAAI,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Travel-time prediction using gaussian process regression: A trajectory-based approach", "author": ["T. Id\u00e9", "S. Kato"], "venue": "In SDM,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Traffic prediction using multivariate nonparametric regression", "author": ["S. Clark"], "venue": "Journal of Transportation Engineering,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "T-drive: driving directions based on taxi trajectories", "author": ["J. Yuan", "Y. Zheng", "C. Zhang", "W. Xie", "X. Xie", "G. Sun", "Y. Huang"], "venue": "In GIS,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2010}, {"title": "Travel time estimation on the san francisco bay area network using cellular phones as probes", "author": ["J. Ygnace", "C. Drane", "Y.B. Yim", "L. Renaud"], "venue": "Technical report, Institute of Transportation Studies, UC Berkeley,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2000}, {"title": "Incorporation of lagrangian measurements in freeway traffic state estimation", "author": ["J.C. Herrera", "A.M. Bayen"], "venue": "Transportation Research Part B: Methodological,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}, {"title": "Driving with knowledge from the physical world", "author": ["J. Yuan", "Y. Zheng", "X. Xie", "G. Sun"], "venue": "In KDD,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Aggregate fuel consumption model of light-duty vehicles for evaluating effectiveness of traffic management strategies on fuels", "author": ["G. Song", "L. Yu", "Z. Wang"], "venue": "Journal of Transportation Engineering,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2009}, {"title": "Estimating vehicle fuel consumption and emissions based on instantaneous speed and acceleration levels", "author": ["K. Ahn", "H. Rakha", "A. Trani", "M. Van Aerde"], "venue": "Journal of Transportation Engineering,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2002}, {"title": "Time-expanded graphs for flow-dependent transit times", "author": ["E. K\u00f6hler", "K. Langkau", "M. Skutella"], "venue": "In ESA,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2002}, {"title": "Time-aggregated graphs for modeling spatio-temporal networks", "author": ["B. George", "S. Shekhar"], "venue": "In ER (Workshops),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2006}, {"title": "Pattern recognition and machine learning", "author": ["C.M. Bishop"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2006}, {"title": "Ranking spaces for predicting human movement in an urban environment", "author": ["B. Jiang"], "venue": "International Journal of Geographical Information Science,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "A google-like model of road network dynamics and its application to regulation and control", "author": ["E. Crisostomi"], "venue": "International Journal of Control,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2011}, {"title": "Survey: Deeper inside pagerank", "author": ["A.N. Langville", "C.D. Meyer"], "venue": "Internet Mathematics,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2003}, {"title": "The pagerank citation ranking: bringing order to the web", "author": ["Lawrence Page", "Sergey Brin", "Rajeev Motwani", "Terry Winograd"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1999}, {"title": "Introduction to probability", "author": ["C.M. Grinstead", "J.L. Snell"], "venue": "Amer Mathematical Society,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1997}, {"title": "On stochastic models of traffic assignment", "author": ["C.F. Daganzo", "Y. Sheffi"], "venue": "Transportation Science,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1977}, {"title": "Self-organized natural roads for predicting traffic flow: a sensitivity study", "author": ["B. Jiang", "S. Zhao", "J. Yin"], "venue": "Journal of Statistical Mechanics: Theory and Experiment,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2008}, {"title": "Agent-based simulation of human movement shaped by the underlying street structure", "author": ["B. Jiang", "T. Jia"], "venue": "International Journal of Geographical Information Science,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2011}, {"title": "Sumo  (simulation of urban mobility)", "author": ["D. Krajzewicz", "G. Hertkorn", "C. R\u00f6ssel", "P. Wagner"], "venue": "In Proc. of the 4th Middle East Symposium on Simulation and Modelling,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2002}, {"title": "The open source traffic simulation package sumo", "author": ["D. Krajzewicz", "M. Bonert", "P. Wagner"], "venue": "RoboCup 2006 Infrastructure Simulation Competition,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2006}, {"title": "An efficient pagerank approach for urban traffic optimization", "author": ["F. Pop", "C. Dobre"], "venue": "Mathematical Problems in Engineering,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2012}, {"title": "Benchmarking link analysis ranking methods in assistive environments", "author": ["K. Georgatzis", "P. Papapetrou"], "venue": "In PETRA, page", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2012}, {"title": "An algorithm for ranking the nodes of an urban network based on the concept of pagerank vector", "author": ["T. Agryzkov", "J.L. Oliver", "L. Tortosa", "J.F. Vicent"], "venue": "Applied Mathematics and Computation,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2012}, {"title": "Matrix Computations", "author": ["G.H. Golub", "C.F. Van Loan"], "venue": null, "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1996}, {"title": "T-finder: A recommender system for finding passengers and vacant taxis", "author": ["N.J. Yuan", "Y. Zheng", "L. Zhang", "X. Xie"], "venue": "IEEE Transactions on Knowledge and Data Engineering,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2012}, {"title": "Hama: An efficient matrix computation with the mapreduce framework", "author": ["S. Seo", "E.J. Yoon", "J. Kim", "S. Jin", "J.S. Kim", "S. Maeng"], "venue": "In CloudCom,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2010}, {"title": "Data-intensive text processing with mapreduce", "author": ["J. Lin", "C. Dyer"], "venue": "Synthesis Lectures on Human Language Technologies,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2010}, {"title": "Viability of new road infrastructure with heterogeneous users", "author": ["P. Cantos-Sanchez", "R. Moner-Colonques", "J.J. Sempere- Monerris", "A. Alvarez-SanJaime"], "venue": "Transportation Research, Part A,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "This is an extended version of \u201cUsing Incomplete Information for Complete Weight Annotation of Road Networks\u201d [1], which is accepted for publication in IEEE TKDE.", "startOffset": 110, "endOffset": 113}, {"referenceID": 1, "context": "While improved vehicle and engine design are likely to yield GHG emission reductions, eco-routing is readily deployable and is a simple yet effective approach to reducing GHG emissions from road transportation [4].", "startOffset": 210, "endOffset": 213}, {"referenceID": 2, "context": ", during peak versus off-peak hours, on highways versus areal roads, for light versus heavy duty vehicles [5], [6].", "startOffset": 106, "endOffset": 109}, {"referenceID": 3, "context": ", during peak versus off-peak hours, on highways versus areal roads, for light versus heavy duty vehicles [5], [6].", "startOffset": 111, "endOffset": 114}, {"referenceID": 4, "context": "For example, an interesting municipal solid waste collection scenario, where a truck collects solid waste from several locations on Santiago Island, demonstrates a 12% fuel reduction due to eco-routes [7].", "startOffset": 201, "endOffset": 204}, {"referenceID": 0, "context": "Compared to the IEEE TKDE paper [1], this extended version (i) provides a mathematical analysis of the foundation of PageRank and additional justification for the feasibility of using PageRank values to quantify movement flow based similarities (in Sections 4.", "startOffset": 32, "endOffset": 35}, {"referenceID": 5, "context": "Most existing work on trip cost estimation [8], [9], [10], [11] focuses on travel-time estimation.", "startOffset": 43, "endOffset": 46}, {"referenceID": 6, "context": "Most existing work on trip cost estimation [8], [9], [10], [11] focuses on travel-time estimation.", "startOffset": 48, "endOffset": 51}, {"referenceID": 7, "context": "Most existing work on trip cost estimation [8], [9], [10], [11] focuses on travel-time estimation.", "startOffset": 53, "endOffset": 57}, {"referenceID": 8, "context": "Most existing work on trip cost estimation [8], [9], [10], [11] focuses on travel-time estimation.", "startOffset": 59, "endOffset": 63}, {"referenceID": 7, "context": "Segment models [10], [11], [12], [13] concern travel time estimation for individual road segments.", "startOffset": 15, "endOffset": 19}, {"referenceID": 8, "context": "Segment models [10], [11], [12], [13] concern travel time estimation for individual road segments.", "startOffset": 21, "endOffset": 25}, {"referenceID": 9, "context": "Segment models [10], [11], [12], [13] concern travel time estimation for individual road segments.", "startOffset": 27, "endOffset": 31}, {"referenceID": 10, "context": "Segment models [10], [11], [12], [13] concern travel time estimation for individual road segments.", "startOffset": 33, "endOffset": 37}, {"referenceID": 7, "context": "For example, some studies model travel time on a particular road segment as a time series and apply autoregressive models [10] to estimate the travel time on the road segment.", "startOffset": 122, "endOffset": 126}, {"referenceID": 8, "context": "T-Drive [11] models time-dependent travel time distributions on road segments using sets of histograms and enables the inference of future travel times using Markov chains [14].", "startOffset": 8, "endOffset": 12}, {"referenceID": 11, "context": "T-Drive [11] models time-dependent travel time distributions on road segments using sets of histograms and enables the inference of future travel times using Markov chains [14].", "startOffset": 172, "endOffset": 176}, {"referenceID": 10, "context": "incorporates Lagrangian measurements [13] into existing traffic flow models for freeways to estimate travel time distributions on specific freeways.", "startOffset": 37, "endOffset": 41}, {"referenceID": 6, "context": "Given a collection of trips and their corresponding travel times, one study [9] proposes a Gaussian process regression based method to predict the travel times for unseen trips.", "startOffset": 76, "endOffset": 79}, {"referenceID": 5, "context": "Trajectory regression [8] was proposed recently to infer the travel times of arbitrary trips.", "startOffset": 22, "endOffset": 25}, {"referenceID": 5, "context": "The earlier study on trajectory regression [8] considers only synthetic data and estimates only travel times of trips.", "startOffset": 43, "endOffset": 46}, {"referenceID": 1, "context": "In the intelligent transportation system research field [4], [15], [16], other travel costs (besides travel time) of trips are studied.", "startOffset": 56, "endOffset": 59}, {"referenceID": 12, "context": "In the intelligent transportation system research field [4], [15], [16], other travel costs (besides travel time) of trips are studied.", "startOffset": 61, "endOffset": 65}, {"referenceID": 13, "context": "In the intelligent transportation system research field [4], [15], [16], other travel costs (besides travel time) of trips are studied.", "startOffset": 67, "endOffset": 71}, {"referenceID": 14, "context": ", time-expanded graphs [17] and time-aggregated graphs [18]), and yet it is sufficiently expressive for the problem we solve.", "startOffset": 23, "endOffset": 27}, {"referenceID": 15, "context": ", time-expanded graphs [17] and time-aggregated graphs [18]), and yet it is sufficiently expressive for the problem we solve.", "startOffset": 55, "endOffset": 59}, {"referenceID": 1, "context": "of the trip [4].", "startOffset": 12, "endOffset": 15}, {"referenceID": 16, "context": "We formulate the weight annotation problem as a supervised learning problem, namely a regression problem [19] that employs TC as the training data set to estimate cost variables in vector d.", "startOffset": 105, "endOffset": 109}, {"referenceID": 17, "context": "The topology of a road network is highly correlated with human movement flow [20], [21], including the movement of both pedestrians and vehicles.", "startOffset": 77, "endOffset": 81}, {"referenceID": 18, "context": "The topology of a road network is highly correlated with human movement flow [20], [21], including the movement of both pedestrians and vehicles.", "startOffset": 83, "endOffset": 87}, {"referenceID": 19, "context": "The original PageRank employs the hyperlink structure of the web to build a first-order Markov chain, where each web page corresponds to a state [22].", "startOffset": 145, "endOffset": 149}, {"referenceID": 19, "context": ", x[i], indicates the probability that the user visits page i or, equivalently, the fraction of time the user spends on page i in the long run [22].", "startOffset": 143, "endOffset": 147}, {"referenceID": 19, "context": "According to the Perron\u2013Frobenius theorem, the existence and uniqueness of the stationary distribution vector x can only be guaranteed if matrix M is stochastic, non-negative, irreducible, and primitive [22].", "startOffset": 203, "endOffset": 207}, {"referenceID": 20, "context": "The transformations are well-known and can be found in the original PageRank paper [23] and in classical textbooks on Markov chains [24].", "startOffset": 83, "endOffset": 87}, {"referenceID": 21, "context": "The transformations are well-known and can be found in the original PageRank paper [23] and in classical textbooks on Markov chains [24].", "startOffset": 132, "endOffset": 136}, {"referenceID": 22, "context": "The modeling movements of vehicles on a road network as stochastic processes is well studied in the transportation field [25].", "startOffset": 121, "endOffset": 125}, {"referenceID": 18, "context": "In particular, the modeling of vehicle movements as Markov processes is an easyto-use and effective approach [21].", "startOffset": 109, "endOffset": 113}, {"referenceID": 17, "context": "Further, a series of topological metrics [20], including centrality-based metrics, small-world metrics, spacesyntax metrics, and PageRank metrics, have been applied to capture human movement flows in urban environments.", "startOffset": 41, "endOffset": 45}, {"referenceID": 17, "context": "When using a graph representation of an urban environment, it is found that the classical and weighted PageRank metrics are highly correlated with human movements [20], [26].", "startOffset": 163, "endOffset": 167}, {"referenceID": 23, "context": "When using a graph representation of an urban environment, it is found that the classical and weighted PageRank metrics are highly correlated with human movements [20], [26].", "startOffset": 169, "endOffset": 173}, {"referenceID": 0, "context": "Further, df \u2208 [0, 1] is a damping factor, which is normally set to 0.", "startOffset": 14, "endOffset": 20}, {"referenceID": 17, "context": "Some existing empirical studies [20] also suggest that with the damping factor set to 1, the resulting PageRank values have the best correlation with the human movement flows.", "startOffset": 32, "endOffset": 36}, {"referenceID": 21, "context": "Irreducibility means that it is possible to each every vertex from every vertex [24].", "startOffset": 80, "endOffset": 84}, {"referenceID": 21, "context": ", the same PageRank vector [24].", "startOffset": 27, "endOffset": 31}, {"referenceID": 17, "context": "on Road Networks: Studies exist of the correlations between human movement flows and various geometrical and topological metrics [20], [26].", "startOffset": 129, "endOffset": 133}, {"referenceID": 23, "context": "on Road Networks: Studies exist of the correlations between human movement flows and various geometrical and topological metrics [20], [26].", "startOffset": 135, "endOffset": 139}, {"referenceID": 17, "context": "One study [20] considers human movement (both pedestrians and vehicles) in London and three central regions in London; another [26] considers vehicle movement (based on Annual Average Daily Traffic obtained from the Swedish Road Administration and GPS tracks) in seven regions in Sweden.", "startOffset": 10, "endOffset": 14}, {"referenceID": 23, "context": "One study [20] considers human movement (both pedestrians and vehicles) in London and three central regions in London; another [26] considers vehicle movement (based on Annual Average Daily Traffic obtained from the Swedish Road Administration and GPS tracks) in seven regions in Sweden.", "startOffset": 127, "endOffset": 131}, {"referenceID": 24, "context": "Further, both random and purposeful movements (movements for given sourcedestination pairs) are simulated [27], and both movements generate almost the same aggregate traffic flows, which are highly correlated with PageRank values.", "startOffset": 106, "endOffset": 110}, {"referenceID": 18, "context": "Another study [21] uses the PageRank idea to model traffic on a road network as a Markov chain.", "startOffset": 14, "endOffset": 18}, {"referenceID": 25, "context": "The effectiveness of the model is validated by a wellknown traffic simulator, SUMO [28], [29].", "startOffset": 83, "endOffset": 87}, {"referenceID": 26, "context": "The effectiveness of the model is validated by a wellknown traffic simulator, SUMO [28], [29].", "startOffset": 89, "endOffset": 93}, {"referenceID": 27, "context": "PageRank values are also used to predict the congestion levels in a road network [30], which is applied to optimize the control of traffic lights.", "startOffset": 81, "endOffset": 85}, {"referenceID": 28, "context": "A benchmark [31] is developed to study the PageRank values on graphs representing the web, citations, and road networks with emphasis on convergence speed.", "startOffset": 12, "endOffset": 16}, {"referenceID": 29, "context": "Further, PageRank is used for ranking groups of places in a road network [32].", "startOffset": 73, "endOffset": 77}, {"referenceID": 5, "context": "Directional adjacency is distinct from the \u201cnon-directional\u201d adjacency considered in previous work [8].", "startOffset": 99, "endOffset": 102}, {"referenceID": 30, "context": "The linear system in Equation 12 can be solved efficiently by several iterative algorithms such as the conjugate gradient algorithm [33].", "startOffset": 132, "endOffset": 136}, {"referenceID": 31, "context": ", the shapes and capacities of edges and the points of interest along edges [34].", "startOffset": 76, "endOffset": 80}, {"referenceID": 32, "context": "This means that existing scalable matrix computation algorithms [35], [36] can be applied directly to make the proposed framework scalable and applicable to large road networks.", "startOffset": 64, "endOffset": 68}, {"referenceID": 33, "context": "This means that existing scalable matrix computation algorithms [35], [36] can be applied directly to make the proposed framework scalable and applicable to large road networks.", "startOffset": 70, "endOffset": 74}, {"referenceID": 13, "context": "Since such data is hard to obtain in a scalable fashion, we use instead the VT-micro model [16] that is able to compute the GHG emissions of trips based on the instantaneous velocities and accelerations derived from the GPS records of the trips in a robust fashion [4].", "startOffset": 91, "endOffset": 95}, {"referenceID": 1, "context": "Since such data is hard to obtain in a scalable fashion, we use instead the VT-micro model [16] that is able to compute the GHG emissions of trips based on the instantaneous velocities and accelerations derived from the GPS records of the trips in a robust fashion [4].", "startOffset": 265, "endOffset": 268}, {"referenceID": 34, "context": "distinguish different traffic flows over the course of a day [37].", "startOffset": 61, "endOffset": 65}, {"referenceID": 8, "context": "T-Drive [11] is able to assign distinct and finegrained traffic tags to individual edges.", "startOffset": 8, "endOffset": 12}, {"referenceID": 16, "context": "This is a well known method [19] for choosing hyper-parameters.", "startOffset": 28, "endOffset": 32}, {"referenceID": 5, "context": "As the objective function used in trajectory regression [8] also considers adjacency, we can view the method using function F3 as an improved version of trajectory regression because (i) function F3 works not only for travel times, but also other travel costs, e.", "startOffset": 56, "endOffset": 59}, {"referenceID": 8, "context": "Therefore, existing methods [11] that can estimate travel time based on historical data are inapplicable as baseline.", "startOffset": 28, "endOffset": 32}, {"referenceID": 5, "context": "Previous work [8] uses \u03bb = 2, meaning that vehicles normally travel at half the speed limit in urban regions.", "startOffset": 14, "endOffset": 17}, {"referenceID": 5, "context": "(ii) the SK and NJ networks are relatively congestion-free when compared to Kyoto, Japan, which is simulated in previous work [8].", "startOffset": 126, "endOffset": 129}], "year": 2012, "abstractText": "We are witnessing increasing interests in the effective use of road networks. For example, to enable effective vehicle routing, weighted-graph models of transportation networks are used, where the weight of an edge captures some cost associated with traversing the edge, e.g., greenhouse gas (GHG) emissions or travel time. It is a precondition to using a graph model for routing that all edges have weights. Weights that capture travel times and GHG emissions can be extracted from GPS trajectory data collected from the network. However, GPS trajectory data typically lack the coverage needed to assign weights to all edges. This paper formulates and addresses the problem of annotating all edges in a road network with travel cost based weights from a set of trips in the network that cover only a small fraction of the edges, each with an associated ground-truth travel cost. A general framework is proposed to solve the problem. Specifically, the problem is modeled as a regression problem and solved by minimizing a judiciously designed objective function that takes into account the topology of the road network. In particular, the use of weighted PageRank values of edges is explored for assigning appropriate weights to all edges, and the property of directional adjacency of edges is also taken into account to assign weights. Empirical studies with weights capturing travel time and GHG emissions on two road networks (Skagen, Denmark, and North Jutland, Denmark) offer insight into the design properties of the proposed techniques and offer evidence that the techniques are effective. This is an extended version of \u201cUsing Incomplete Information for Complete Weight Annotation of Road Networks\u201d [1], which is accepted for publication in IEEE TKDE.", "creator": "gnuplot 4.4 patchlevel 4"}}}