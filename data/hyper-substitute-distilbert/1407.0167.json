{"id": "1407.0167", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Jul-2014", "title": "Mathematical Language Processing Project", "abstract": "both natural language, words and phrases themselves imply the relationship. see analogy, the meaning of identifiers in mathematical formulae is undefined. thus scientists purposely neglect the facts to obscure the meaning. later mathematical data processing ( owl ) tools goes much expand that process. while this paper, researches compare two methods to discover identifier - definition tuples. at first audiences use a linear pattern correlation method. second, at present functional mlp for why uses context - of - speech analytics tracking distances as well as sentence sizes because examine identifier - size judgments. the evaluation over my prototypical system, continually utilizing the wikipedia type corpus, shows extent our grasp varies the linguistic capability substantially. while hovering certain identifiers in the formula, tool - usage proves a most probable definitions improves. tests with random samples confirm that easily displayed definitions yields a substantial clue with the actual meaning supplying the equation.", "histories": [["v1", "Tue, 1 Jul 2014 09:56:42 GMT  (45kb,D)", "http://arxiv.org/abs/1407.0167v1", "8 pages, one figure, Conferences on Intelligent Computer Mathematics (CICM) 2014"]], "COMMENTS": "8 pages, one figure, Conferences on Intelligent Computer Mathematics (CICM) 2014", "reviews": [], "SUBJECTS": "cs.DL cs.CL cs.IR", "authors": ["robert pagael", "moritz schubotz"], "accepted": false, "id": "1407.0167"}, "pdf": {"name": "1407.0167.pdf", "metadata": {"source": "CRF", "title": "Mathematical Language Processing Project", "authors": ["Robert Pagel", "Moritz Schubotz"], "emails": [], "sections": [{"heading": null, "text": "Key words: definition discovery, text mining, parallel computing\n1 Introduction\nFig. 1. Screenshot of the energy mass relation page \u2018Mass\u2013energy equivalence\u2019, while hovering the letter \u2018E\u2019.\nMathematical formulae are viable sources of information for a wide range of scientists. Often, they contain identifiers whose meaning might be at first unknown or at least ambiguous to the reader (depending on their knowledge). Therefore, one usually needs to study the surrounding text to find the relevant definition. An automatic information retrieval system can be used to reduce the reader\u2019s effort by displaying the most relevant definition relation found to the reader. Students and scientists of other disciplines would especially profit from a system that helps them to understand formulae more quickly. In the long ar X\niv :1\n40 7.\n01 67\nv1 [\ncs .D\nL ]\n1 J\nul 2\nterm, the extracted identifier definition tuples contribute to an increased machine readability of scientific publications. This builds a foundation for added value services such as search, clustering and improved accessibility.\nTo build such a system, a labelled text corpus that annotates identifiers and their definition is desirable. At the project start, such a corpus was not available. Consequently we had to start manual investigation of individual articles. Our first observation was that many identifier definitions use a fixed string pattern to explain the definition to the reader. Furthermore, most definitions usually appear very close to the related identifier in the sentences. Thus, we calculate the probabilities for correct identifier definition tuples based on distance metrics for certain part-of-speech (POS) tagged words. This correlates to the experience that readers usually extract identifier definitions from context that is given by the surrounding text.\nWe chose the Wikipedia as the target text corpus because of two facts. First, most articles make use of <math/> tags (texvc as an input language) for formulae. The identification of <math/> tags is trivial, and from the MathML output, it is easy to extract the identifiers. Second, the articles are already annotated with mark-up. Particularly, hyperlinks to other articles within Wikipedia are of interest as they typically wrap around any number of words and indicate that these in combination are relevant in the given context or (respectively) sentence.\nThe English Wikipedia contains roughly four million articles. Even if we only pick articles containing <math/> tags, our processor still needs to compute with tens of thousands of articles. Especially when using text annotators (e.g., POS tagger [8]), like Stanford\u2019s NLP framework, one can make use of a parallel processing system to speed up computation. We implement the proposed strategy with the Stratosphere system [3]. It is based on the PACT programming model [2], which enables us to rapidly generate a large amount of definition relation candidates with only minimal implementation overhead for the parallelization.\nRelated Work. Quoc et al. [7] proposed an approach for relating whole formulas to sentences and their describing paragraphs. Yokoi et al. [10] trained a support vector machine to extract natural language descriptions for mathematical expressions. Furhter work in this field was done by [4] and [5]."}, {"heading": "2 Pattern-based Definition Discovery", "text": "At first, we implemented a simple identifier definition extractor that is based on a set of static patterns. As this is a fairly robust approach and easy to implement, it serves as a good reference point in terms of performance. It simply iterates through the text, trying to find word groups, that are matched by a pattern. The patterns being used to discover description terms are depicted in Table 1. Due to the fact that we already tokenized and annotated the articles in a previous step in the MLP system, we can make use of POS tags here as well.\nNote, determiners not only contain articles, but also quantifiers and distributives. The last pattern in Table 1 contains \u2018*/DT\u2019. This is a shorthand for every\nword, that has the POS tag \u2018DT\u2019 (determiner). Otherwise this pattern would be rather large, as it needs to contain every possible determiner. IDENTIFIER as well as DESCRIPTION are place-holder, that mark the positions of the entities from a possible definition relation."}, {"heading": "3 Statistical Definition Discovery", "text": "We detect relations between identifiers and their description in two steps. First, we extract the identifiers from the formulae found in an article, and second we determine their description from the surrounding text.\nExtracting relevant identifiers from the article relies on the assumption that the author will use <math/> tags for all formulae. This said, a formula that is written in the running text cannot be recognized, and therefore, cannot be extracted by our system.\nThe fact that we can estimate all relevant identifiers for an article (see Section 4.1), combined with some common assumptions about definition relations, can be exploited to largely reduce the set of candidates that need to be ranked. Please note that this reduction is essential for retrieving the correct relations for our approach. Otherwise almost any word would be ranked and the precision of the retrieval would drop significantly.\nThe basic assumption of our approach is that the two entities of a definition relation co-occur in the same sentence. In other words, if we want to retrieve the description for an identifier, only sentences containing the identifier could include the definition relation. Having said this, any other sentences can be ignored. Furthermore, we assume that it is more likely to find the description in first sentences than in the latter. This is based on the idea that authors introduce the meaning of an identifier and than subsequent use the identifier, without necessarily repeating its definition.\nAnother assumption can be made about the lexical class of the definition relation we want to rank. The descriptions are nouns or even noun phrases (e.g., \u2018the effective spring constant k\u2019 or \u2018mass m of something\u2019). We discard all other words (according to their POS tag) except noun phrases and Wikipedia hyper-links. These are the candidates descriptions for a definition\nrelation. Noun phrases and hyper-links may consist of multiple words. For all intents and purposes, it is not necessary to threat noun phrases and hyper-links as a set of words, and therefore, they will be treated subsequently as if they were one. This is important, due to the fact that the overall ranking will be greatly influenced by the distance of candidates to the position of the identifier."}, {"heading": "3.1 Numerical Statistics", "text": "Each description candidate is ranked with the weighted sum\nR(n,\u2206, t, d) = \u03b1R\u03c3d(\u2206) + \u03b2R\u03c3s(n) + \u03b3 tf(t, s)\n\u03b1+ \u03b2 + \u03b3 7\u2192 [0, 1]. (1)\nThe weighted sum depends on the distance \u2206 (amount of word tokens) between identifier and the description term t, the sentence number n counting (from the beginning of the article) all sentences containing the identifier, and the term frequency tf(t, s) in the set of sentences s. The distance was normalized\nwith R\u03c3(\u2206) = exp [ \u2212 12 \u22062\u22121 \u03c32 ] . We assume that the probability to find a relation at \u2206 = 1 is maximal. For example in the text fragment \u2018the energy E, and the mass m\u2019, in order to determine the full width at half maximum of our distribution, we evaluated some articles manually and found R\u03c3d(1) \u2248 2R\u03c3d(5) and thus \u03c3d = \u221a 12 ln 2 . The probability to find a correct definition decays to 50% within three sentences. Consequently \u03c3s = 2 (ln 2) \u2212 12 .\nRobustness. The classic tf-idf [9] statistic reflects the importance of a term to a document. For our task, the inverse document frequency (idf) assigns high penalties to frequent words like \u2018length\u2019, as opposed to words seldom seen such as \u2018Hamiltonian\u2019. These are both valid definitions for identifiers. As the influence of tf(t, s) on the sensitivity of the overall ranking (1) seems to be very high, we reduce the impact with the tuning parameters \u03b3 = 0.1 and remain \u03b1 = \u03b2 = 1. Please note that the algorithm currently only takes sentences into account which were found in a single article. In the future, the MLP system will examine sets of closely related articles. This will leverage the problem that distributional properties will be volatile on term universes with very few members (e.g., term frequencies in a single sentence).\nImplementation. We implemented the MLP processing system [6] as Stratosphere data-flow using Java which allows for scalable execution, application of complex higher order functions, and easy integration of third party tools such as Stanford NLP and the Mylyn framework for mark-up parsing."}, {"heading": "4 Evaluation", "text": ""}, {"heading": "4.1 Identifier Retrieval", "text": "Throughout our experiments, we made some observations that had an impact on the accuracy of retrieving the correct set of identifiers. First of all, people tend to use texvc only as a typesetting language and neglect its semantic capabilities. For example, \\text{log} is more often used than the correct operator \\log. Another problem is that sometimes people use indices as a form of \u2018in field\u2019 annotation, like Tbefore and Tafter. The identifier T is defined in the surrounding text, but neither Tbefore nor Tafter. There are more ambiguities. For example the superscripted 2 in x2 and \u03c32 can be interpreted as the power or as a part of the identifier. Another ambiguity is that the multiplication sign can be omitted, so that it is undecidable for a naive program whether ab2 contains one or two identifiers.\nWe took a very conservative approach and preprocessed all formulas. The TEX command \\text{} blocks along with subscriptions containing more than a single character will be removed before analysis. Superscripts will also be ignored in terms of being a part of the identifier. Moreover, we created a comprehensive blacklist to improve the results further. Identifier like \u2018a\u2019, \u2018A\u2019, and \u2018I\u2019, which are also very common in the English language, could be easily matched by our processor in the surrounding text, and therefore, will also be blacklisted. Additionally, we blacklist common mathematical operators, constants, and functions.\nWe took a sample of 30 random articles and counted all matches by hand. The resulting estimates for the identifier retrieval performance are Recall: 0.99 and Precision: 0.86, which satisfy our information needs, as we are mostly interested in recall at this stage."}, {"heading": "4.2 Description Retrieval", "text": "We ran our program on a dataset of about 20,000 articles, all containing <math/> tags, and retrieved about 550,000 candidate relations. The most common definition relations are listed in table 2.\nObservations. We observed some poorly ranked relations. For example, in the fragment \u2018where \u03c6( ri ) is the electrostatic potential\u2019, the distance is \u2206(\u03c6, electrostatic potential) = 6. This is due to counting brackets and function arguments as words. Also wrongly tagged words like \u2018Hamiltonian\u2019 as an adjective leads to false negatives.\nComparative Evaluation At the start of our project there were no gold standard datasets available to measure the performance of identifier definition extractors. Thus, we created one on our own. This is a very time consuming job. At the moment, the dataset only contains two large articles (revision ids are included) with around 100 identifier definitions. This dataset is also available on the project repository.\nAs in many articles, those in the evaluation dataset contain identifiers whose description cannot be retrieved. This is due to two reasons. First and foremost, the identifier found in a formula is never mentioned in the surrounding text, and therefore, no description can be extracted. Second, the identifier is somehow ambiguous (see Section 4.1) and has been dropped. Most notably, identifiers like Ixx will be discarded because of an ambiguous index that contains multiple letters.\nUnfortunately 32 out of 99 identifiers from our dataset fall into that category. We\u2019ve decided to evaluate the performance of the remainder, as those 32 do not convey any conceptual flaws. From the users standpoint, the overall performance (in terms of recall) of such a system would be rather annoying. As we are only interested in evaluating the performance of the MLP Ranking algorithm itself, it is safe to ignore those 32 identifiers.\nOur results show that the unoptimized MLP approach keeps up with the performance of the simple pattern matcher. Furthermore, we observed that it is more robust in terms of recall, as it is less vulnerable to small changes in the sentence structure."}, {"heading": "5 Further work", "text": "Our original intuition was to discover grammatical patterns like \u2018<identifier> indicates/stands for/denotes <description> \u2019 based on the statistical findings. However, our impression is that this would not lead to significant performance gain.\nThe distance measure R\u03c3d fails for the example of Fig. 1 since \u2206(energy, E) = \u2206(mass,m) = 2. Unfortunately, one cannot simply detect punctuation marks and introduce some kind of directed associativity (e.g., inflicting a penalty on the ranking if the candidate relations spans over a comma). This leads to whole classes of relation \u2018types\u2019 (in terms of the grammatical structure) never being retrieved. We plan to mitigate this problem by taking more closely related scientific articles (based on their specific fields) into consideration and count the frequencies of the candidate relations. The intuition behind this is, that articles of the same scientific field will likely use the same definition for the identifiers. Moreover, we also hope to resolve the problem of \u2018dangling\u2019 identifiers (those not mentioned in the article itself), as they might be described in related articles.\nCurrently, we use the ranking R to identify the most probable descriptionidentifier tuple on each article, even if it occurs multiple times on the page. For example, in the \u2018Mass-energy equivalence\u2019 article, 21 sentences contain the combination of the identifier E and the noun \u2018energy\u2019. A promising approach, is to use R\u03a3 = \u2211n i=1 2\n\u2212iRi, where Ri is a sorted list. Here, R1 is the highest ranked definition for that relation according to the current measure R. A systematic approach for determining a wise choice of the ranking parameters should significantly improve the overall performance of our system."}, {"heading": "6 Conclusion", "text": "Our experiments showed that selecting candidates according to their POS tags combined with numerical statistics about the text surface, can lead to quality results. However, this approach is only applicable under certain conditions. For identifiers which are seldom seen, our statistical approach tends to fail. In that situation, other methods, especially supervised ones, are preferred. Unfortunately, many of them require a labelled test corpus to measure the performance of a classifier that could be trained with our generated data. Currently, we are planning to use the NTCIR-Math-10 Task, Math Understanding Subtask gold standard dataset [1] for a comparable evaluation.\nDuring this project we had the impression that one could discover \u2018namespaces\u2019 (sets of documents, that use the same definitions for identifier) to aid\nin the retrieval process. Robert Pagel is currently working on this topic for his diploma thesis.\nAcknowledgments. Thanks to Howard Cohl for proofreading the paper and to Holmer Hemsen, the course instructor of the database project course at TUBerlin in Fall 2012. The implementation and a first draft of this paper was completed in the duration of this course."}], "references": [{"title": "NTCIR-10 Math Pilot Task Overview", "author": ["A. Aizawa", "M. Kohlhase", "I. Ounis"], "venue": "In Proceedings of the 10th NTCIR Conference on Evaluation of Information Access Technologies,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Massively parallel data analysis with PACTs on Nephele", "author": ["A. Alexandrov", "D. Battr\u00e9", "S. Ewen", "M. Heimel", "F. Hueske", "O. Kao", "V. Markl", "E. Nijkamp", "D. Warneke"], "venue": "Proceedings of the VLDB Endowment,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "The stratosphere platform for big data analytics", "author": ["A. Alexandrov", "R. Bergmann", "S. Ewen", "Freytag", "J.-C", "F. Hueske", "A. Heise", "O. Kao", "M. Leich", "U. Leser", "V Markl"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "The Language of Mathematics", "author": ["M. Ganesalingam"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Computerizing mathematical text with mathlang", "author": ["F. Kamareddine", "J.B. Wells"], "venue": "Electronic Notes in Theoretical Computer Science,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Mlp project repository. https://github.com/rbzn/ project-mlp", "author": ["R. Pagel"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Mining coreference relations between formulas and text using Wikipedia", "author": ["M.N. Quoc", "K. Yokoi", "Y. Matsubayashi", "A. Aizawa"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "A maximum entropy model for part-of-speech tagging", "author": ["A. Ratnaparkhi"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1996}, {"title": "Introduction to Modern Information Retrieval", "author": ["G. Salton", "M.J. McGill"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1986}, {"title": "Contextual Analysis of Mathematical Expressions for Advanced Mathematical Search", "author": ["K. Yokoi", "Nghiem", "M.-q", "Y. Matsubayashi", "A. Aizawa"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2010}], "referenceMentions": [{"referenceID": 7, "context": ", POS tagger [8]), like Stanford\u2019s NLP framework, one can make use of a parallel processing system to speed up computation.", "startOffset": 13, "endOffset": 16}, {"referenceID": 2, "context": "We implement the proposed strategy with the Stratosphere system [3].", "startOffset": 64, "endOffset": 67}, {"referenceID": 1, "context": "It is based on the PACT programming model [2], which enables us to rapidly generate a large amount of definition relation candidates with only minimal implementation overhead for the parallelization.", "startOffset": 42, "endOffset": 45}, {"referenceID": 6, "context": "[7] proposed an approach for relating whole formulas to sentences and their describing paragraphs.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] trained a support vector machine to extract natural language descriptions for mathematical expressions.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "Furhter work in this field was done by [4] and [5].", "startOffset": 39, "endOffset": 42}, {"referenceID": 4, "context": "Furhter work in this field was done by [4] and [5].", "startOffset": 47, "endOffset": 50}, {"referenceID": 0, "context": "R(n,\u2206, t, d) = \u03b1R\u03c3d(\u2206) + \u03b2R\u03c3s(n) + \u03b3 tf(t, s) \u03b1+ \u03b2 + \u03b3 7\u2192 [0, 1].", "startOffset": 58, "endOffset": 64}, {"referenceID": 8, "context": "The classic tf-idf [9] statistic reflects the importance of a term to a document.", "startOffset": 19, "endOffset": 22}, {"referenceID": 5, "context": "We implemented the MLP processing system [6] as Stratosphere data-flow using Java which allows for scalable execution, application of complex higher order functions, and easy integration of third party tools such as Stanford NLP and the Mylyn framework for mark-up parsing.", "startOffset": 41, "endOffset": 44}, {"referenceID": 0, "context": "Currently, we are planning to use the NTCIR-Math-10 Task, Math Understanding Subtask gold standard dataset [1] for a comparable evaluation.", "startOffset": 107, "endOffset": 110}], "year": 2014, "abstractText": "In natural language, words and phrases themselves imply the semantics. In contrast, the meaning of identifiers in mathematical formulae is undefined. Thus scientists must study the context to decode the meaning. The Mathematical Language Processing (MLP) project aims to support that process. In this paper, we compare two approaches to discover identifier-definition tuples. At first we use a simple pattern matching approach. Second, we present the MLP approach that uses part-of-speech tag based distances as well as sentence positions to calculate identifier-definition probabilities. The evaluation of our prototypical system, applied on the Wikipedia text corpus, shows that our approach augments the user experience substantially. While hovering the identifiers in the formula, tool-tips with the most probable definitions occur. Tests with random samples show that the displayed definitions provide a good match with the actual meaning of the identifiers.", "creator": "TeX"}}}