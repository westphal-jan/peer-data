{"id": "1412.6018", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Oct-2014", "title": "Automatic Training Data Synthesis for Handwriting Recognition Using the Structural Crossing-Over Technique", "abstract": "fuller paper launched a novel technique about \" structural crossing - translation \" to synthesize redundant data for neural machine input - standard input representations. the proposed language can model comparatively greater variety of responses toward training devices than the existing approaches including as elastic distortion \u2014 tangent - based point transformation. periodically couple of training pieces are chosen, the changes are analyzed by interpreting similar and different structures, and finally safely crossed over to generate relevant new characters. the experiments subsequently continuing to compare quantitative difference against source - based affine transformation utilize the complementary approach in areas of the matching across candidate characters and percent probability developmental errors. the standard mnist approach including 60, 000 coded letters and 10, 000 test characters eventually recognized in the experiments. the genetic method uses 700, 000 characters each portray 850, 000 characters, and periodically manages these data to train and test the benchmark handwriting character design that exploits histogram computed face ( ps ) language features such support vector machine ( soc ) description assets. her composite result exhibits 8. 06 % of errors. sequencing significantly contrasts the tangent - based affine data and the original mnist training data, wherein requires 11. 74 % and 72. 00 %, respectively.", "histories": [["v1", "Thu, 9 Oct 2014 04:32:20 GMT  (633kb)", "http://arxiv.org/abs/1412.6018v1", "8 pages, 6 figures"]], "COMMENTS": "8 pages, 6 figures", "reviews": [], "SUBJECTS": "cs.CV cs.LG", "authors": ["sirisak visessenee", "sanparith marukatat", "rachada kongkachandra"], "accepted": false, "id": "1412.6018"}, "pdf": {"name": "1412.6018.pdf", "metadata": {"source": "CRF", "title": "AUTOMATIC TRAINING DATA SYNTHESIS FOR HANDWRITING RECOGNITION USING THE STRUCTURAL CROSSING-OVER TECHNIQUE", "authors": ["Sirisak Visessenee", "Sanparith Marukatat", "Rachada Kongkachandra"], "emails": [], "sections": [{"heading": null, "text": "DOI : 10.5121/ijaia.2014.5507 85\nThe paper presents a novel technique called \u201cStructural Crossing-Over\u201d to synthesize qualified data for training machine learning-based handwriting recognition. The proposed technique can provide a greater variety of patterns of training data than the existing approaches such as elastic distortion and tangentbased affine transformation. A couple of training characters are chosen, then they are analyzed by their similar and different structures, and finally are crossed over to generate the new characters. The experiments are set to compare the performances of tangent-based affine transformation and the proposed approach in terms of the variety of generated characters and percent of recognition errors. The standard MNIST corpus including 60,000 training characters and 10,000 test characters is employed in the experiments. The proposed technique uses 1,000 characters to synthesize 60,000 characters, and then uses these data to train and test the benchmark handwriting recognition system that exploits Histogram of Gradient: HOG as features and Support Vector Machine: SVM as recognizer. The experimental result yields 8.06% of errors. It significantly outperforms the tangent-based affine transformation and the original MNIST training data, which are 11.74% and 16.55%, respectively.\nKEYWORDS\nDistortion, Handwriting Recognition, Structural Crossing-Over Technique, Support Vector Machine, Training Data Synthesis"}, {"heading": "1. INTRODUCTION", "text": "Handwriting recognition is a research field that is strongly associated with natural language processing. Its goal is to convert the character images into text that the computer can process. Although various input devices have been developed to provide facilities for users such as keyboard, mouse, digital pen, stylus, and touch screen, however, most people still prefer to write notes on paper with handwriting. To bring them into the computer, users have to waste their time typing them again. Therefore, the development of a handwriting recognition system allows users to easily record and can help bridge the gap between the skilled computer users and those who are not.\nIn the past, there were a lot of successful researches on handwriting recognition with a high recognition accuracy 90% approximately. Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10]. The big\nwhich are characterized by a specific individual. Also, the handwriting of an individual can vary according to the different emotions and situations. The recognition method used in most research is divided into two main ways.\n1. Recognition by the rules (Rule-based Recognition). 2. Recognition by machine learning (Machine Learning-based Recognition).\nFor the first method, the rules are derived from the experts that are limited, which could not cover all the variety of characters. The second method is more popular because of the following benefits.\n\u2022 Sophisticated pattern recognition \u2022 Intelligent decisions \u2022 Self-modifying \u2022 Multiple iterations [11]\nHowever, the major problem of the machine learning approach is that the amount of quality training data is insufficient. Garrett Wu [12] said that if we have a lot of data, combined with a simple algorithm, it will be able to overcome a complex algorithm. The good recognizer comes from a good learner. The more experience the learner has, the better the learner is. In this paper, we present a novel technique to automatically synthesize training data for handwriting recognition systems. The paper is structured as follows: Section 2 mentions some existing approaches used to cure the limited training data problem. Section 3 proposes an idea, called the structural crossing-over. Section 4 mentions the experiment settings and their results. The discussion and conclusion are in the last section."}, {"heading": "2. EXISTING APPROACHES SOLVING INSUFFICIENT TRAINING DATA", "text": "There are many researchers attempting to improve the accuracy of handwriting recognition systems by concentrating on training data synthesis. In 2000, M. Mori, et al. [13] proposed a point correspondence technique to generate new samples. They assigned one character as template and then randomly chose a character from the training data set. The point correspondences between the two characters are projected. The generated characters are produced by varying parameters in the defined distortion function, as shown in Fig.1 (a). In 2005, Kambar, Sapargali [14] applied morphing transformation to generate synthetic data for handwritten numeral recognition. He randomly selected two characters from training data set, then three features, i.e. gradient, structural, and concavity, of each character are extracted. Finally, he applied morphing transformation to produce various characters forms, as illustrated in Fig. 1 (b). In 2007, Buyoung Yun, et al. [15] used different tangent vectors to represent different variations. They proposed eight tangent vectors for i.e. scaling, rotation, X-translation, Y-translation, parallel hyperbolic, diagonal hyperbolic, thickness and modified thickness. Figure 1 (c) illustrates the example of applying tangent vectors to the number \u201c2\u201d. Although the previous research succeeded in increasing the quantity of training data, they are limited in increasing the variety of patterns for training data."}, {"heading": "3. STRUCTURAL CROSSING-OVER TECHNIQUE", "text": "Since the generated characters in the previous works are mostly derived from the source characters by considering the character structure of individual characters. Whether a character is distorted with different angles, its total structure is not much different from the original. In this paper, a couple of characters are selected, some common structures are extracted, the variations between two characters are considered, and finally some new hybrid characters are produced.\npreprocessing, crossing-over point finding, structure grouping, and character reproduction."}, {"heading": "3.1 Preprocessing", "text": "To generate the new training data, at least two characters are required. They are preprocessed by binarization and thinning, as shown in Fig.3."}, {"heading": "3.2 Crossing-Over Point Finding", "text": "This step is to find the common points between two characters. These points are called crossingover points. Consider in Fig. 4, two original characters, L and R, are overlapped. The coordinate of L is set to (0,0) and the coordinate of R could be varied both in X and Y axis. The number of generated training data depends on the times and the gap size when two characters are overlapped. Each overlapping frame provides one or more intersection points. We then call it \u201ccrossing-over point\u201d. In Fig.4, there are two points. These points are used as the separator therefore three fragments of each character are obtained."}, {"heading": "3.3 Structure Grouping", "text": "From step 3.2, the different fragments of each character are found. We believe that these various parts can yield various patterns of characters. However, if we make a combination by using these small fragments, some strange characters might occur. To make sure that the synthetic characters are the same as the original character, the structure of the character should be gained. Therefore, these fragments are then overlapped again to find the significant structure of each character. From\nstructures. Dilation process is then used to make the structures clear."}, {"heading": "3.4 Characters Reproduction", "text": "After the structure fragments of original characters are obtained, the character reproduction step is activated. The new characters are synthesized by using three parts i.e. one fragment from L, crossing-over points, and one fragment of R. The fragment L and R should have different structures. Figure 6 illustrated how new \u201c3\u201d are generated. The left \u201c3\u201d character is synthesized by combining the first structure in L, cross-over points, and the second structure in R while the right \u201c3\u201d uses the second structure in L, cross-over points, and the first structure in R. Finally, the dilation process is employed to enlarge the new characters."}, {"heading": "4. EXPERIMENTS AND RESULTS", "text": "We hypothesize the proposed \u201cStructural Crossing-over\u201d technique can generate the new characters with a greater variety of patterns than the previous research works. We select the\ncharacter patterns varieties and recognition accuracy are experimented. The standard corpus as MNIST [16] are employed. It includes 60,000 characters for training and 10,000 characters for testing.\nFigure 7 shows the appearances of new generated characters after using technique in [15] and our proposed technique. In Fig. 7 (a), ten characters in the right column are generated from the left character. Figure 7 (b) results the new generated characters derived from the proposed technique. The character patterns are more varied.\nWith the assumption that if a handwriting recognition is trained by a huge variety of patterns as training data, the recognition accuracy would be increased. We set the experiments by building a benchmark handwriting recognition system that uses the Histogram of Gradient (HOG) as the character features and the Support Vector Machine (SVM) with linear Kernel function and oneagainst-all approach as multiclass classifier. The benchmark system is trained by 60,000 numeric characters and then is tested with the 10,000 characters from MNIST [15]. The % of recognition error is 16.55.\nInstead of using the total 60,000 characters for training, we synthesize the training data from 1,000 numeric characters from MNIST [15]. With the small set of training data, when we applied two synthesis approaches i.e. tangent and structural crossing-over, the % of recognition errors are significantly decreased. The experimental results in the 2 nd through the 7 th column are the % of recognition errors, which are trained by the synthesized training data vary from 10,000 through 60,000 characters. The proposed technique illustrated the outperformed results."}, {"heading": "5. CONCLUSION", "text": "The paper presents a novel technique called \u201cStructural Crossing-Over\u201d to synthesize qualified data for training machine learning-based handwriting recognition. The proposed technique can provide a greater variety of patterns of training data than the existing approaches. The tangent vectors with affine transformation [15] are used as a competitive approach. The comparison in terms of character patterns varieties and recognition accuracy are experimented with the MNIST corpus [16]. The Support Vector Machine (SVM) with Histogram of Gradient (HOG) features, linear Kernel function and one-against-all approach for multiclass classification is implemented as a recognition system. The proposed technique can yield the outperformed results both in varieties and accuracy."}], "references": [{"title": "Offline handwriting recognition with multidimensional recurrent neural networks", "author": ["A. Graves", "J. Schmidhuber"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Offline Handwriting Recognition using Genetic Algorithm", "author": ["R. Kala", "H. Vazirani", "A. Shukla", "R. Tiwari"], "venue": "IJCSI International Journal of Computer Science Issues,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Handwritten Character Recognition Using Multi-resolution Technique and Euclidean Distance Metric", "author": ["D.K. Patel", "T. Som", "S.K. Yadav", "M.K. Singh"], "venue": "JSIP Journal of Signal and Information Processing,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "A Handwritten Chinese Character Recognition System Using Hierarchical Displacement Extraction Based on Directional Features", "author": ["Y. Mizukami"], "venue": "Pattern Recognition Letters,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1998}, {"title": "Optical Recognition of Handwritten Chineses Character by Hierarchical Radical Matching Method", "author": ["A.B. Wang", "K.C. Fan"], "venue": "Pattern Recognition,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2001}, {"title": "A Deformed Character Generation By A Computational Handwriting Model And A Genetic Algorithm", "author": ["H Kasuga", "K. Sumida", "K. Ohkawa", "Y. Wada"], "venue": "Information Processing Society Of Japan (IPSJ) Journal,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "An Arabic OCR System Using Recognition-Based Segmentation", "author": ["A. Cheung", "M. Bennamoun", "N.W. Bergmann"], "venue": "Pattern Recognition,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2001}, {"title": "The Clustering Technique for Thai Handwriting Recognition", "author": ["I. Methasate", "S. Sae-tang"], "venue": "Proceedings of the 9th International Workshop on Frontiers in Handwriting Recognition,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2004}, {"title": "Thai Handwriting Segmentation Using Proportional Invariant Recognition Technique", "author": ["A. Chatchinarat"], "venue": "Proceedings of the International Conference on Future Computer and Communication, Kuala Lumpar,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2009}, {"title": "Maximization of mutual information for offline Thai handwriting recognition", "author": ["R. Nopsuwanchai", "A. Biem", "W.F. Clocksin"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}, {"title": "Why More Data and Simple Algorithms Beat Complex Analytics Models.", "author": ["G. Wu"], "venue": "Wellesley Information Services. Retrieved October", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Generating new samples from handwriting numerals based on point correspondence", "author": ["M. Mori", "A. Suzuki", "A. Siho", "S. Ohtsuka"], "venue": "Proceedings of the 7th International Workshop on Frontiers of Handwriting Recognition,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2000}, {"title": "Generating synthetic data by morphing transformation for handwriting numeral recognition (with v-SVM)", "author": ["S. Kambar"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2005}, {"title": "Recognition of handwritten digit with transformed invariance distance", "author": ["Y. Buyoung", "C. Kim", "S. Yang"], "venue": "Project Final Report,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "THE MNIST DATABASE of handwriting digits", "author": ["Y. LeCun", "C. Cortes", "C.J.C. Burges"], "venue": "Retrieved October", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 71, "endOffset": 76}, {"referenceID": 1, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 71, "endOffset": 76}, {"referenceID": 2, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 71, "endOffset": 76}, {"referenceID": 3, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 86, "endOffset": 91}, {"referenceID": 4, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 86, "endOffset": 91}, {"referenceID": 5, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 102, "endOffset": 105}, {"referenceID": 6, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 114, "endOffset": 117}, {"referenceID": 7, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 127, "endOffset": 133}, {"referenceID": 8, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 127, "endOffset": 133}, {"referenceID": 9, "context": "Various approaches have been applied in many languages such as English [1-3], Chinese [4,5], Japanese [6], Arabic [7] and Thai [8-10].", "startOffset": 127, "endOffset": 133}, {"referenceID": 10, "context": "Garrett Wu [12] said that if we have a lot of data, combined with a simple algorithm, it will be able to overcome a complex algorithm.", "startOffset": 11, "endOffset": 15}, {"referenceID": 11, "context": "[13] proposed a point correspondence technique to generate new samples.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "In 2005, Kambar, Sapargali [14] applied morphing transformation to generate synthetic data for handwritten numeral recognition.", "startOffset": 27, "endOffset": 31}, {"referenceID": 13, "context": "[15] used different tangent vectors to represent different variations.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "90 tangent vectors with affine transformation [15] as benchmark.", "startOffset": 46, "endOffset": 50}, {"referenceID": 14, "context": "The standard corpus as MNIST [16] are employed.", "startOffset": 29, "endOffset": 33}, {"referenceID": 13, "context": "Figure 7 shows the appearances of new generated characters after using technique in [15] and our proposed technique.", "startOffset": 84, "endOffset": 88}, {"referenceID": 13, "context": "Comparative Synthetic Characters between the proposed technique and [15]", "startOffset": 68, "endOffset": 72}, {"referenceID": 13, "context": "The benchmark system is trained by 60,000 numeric characters and then is tested with the 10,000 characters from MNIST [15].", "startOffset": 118, "endOffset": 122}, {"referenceID": 13, "context": "Instead of using the total 60,000 characters for training, we synthesize the training data from 1,000 numeric characters from MNIST [15].", "startOffset": 132, "endOffset": 136}, {"referenceID": 13, "context": "The tangent vectors with affine transformation [15] are used as a competitive approach.", "startOffset": 47, "endOffset": 51}, {"referenceID": 14, "context": "The comparison in terms of character patterns varieties and recognition accuracy are experimented with the MNIST corpus [16].", "startOffset": 120, "endOffset": 124}], "year": 2014, "abstractText": "The paper presents a novel technique called \u201cStructural Crossing-Over\u201d to synthesize qualified data for training machine learning-based handwriting recognition. The proposed technique can provide a greater variety of patterns of training data than the existing approaches such as elastic distortion and tangentbased affine transformation. A couple of training characters are chosen, then they are analyzed by their similar and different structures, and finally are crossed over to generate the new characters. The experiments are set to compare the performances of tangent-based affine transformation and the proposed approach in terms of the variety of generated characters and percent of recognition errors. The standard MNIST corpus including 60,000 training characters and 10,000 test characters is employed in the experiments. The proposed technique uses 1,000 characters to synthesize 60,000 characters, and then uses these data to train and test the benchmark handwriting recognition system that exploits Histogram of Gradient: HOG as features and Support Vector Machine: SVM as recognizer. The experimental result yields 8.06% of errors. It significantly outperforms the tangent-based affine transformation and the original MNIST training data, which are 11.74% and 16.55%, respectively.", "creator": "PScript5.dll Version 5.2.2"}}}