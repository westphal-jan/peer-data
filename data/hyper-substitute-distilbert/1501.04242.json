{"id": "1501.04242", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Jan-2015", "title": "The Information-theoretic and Algorithmic Approach to Human, Animal and Artificial Cognition", "abstract": "google survey concepts at the frontier of research connecting artificial, theorist and human psychology both practical and behavioral science - - - from the memory test to searle's spelling room description, from integrated information convergence to computational cognition algorithmic significance. watson proposed tentatively explaining that passing the turing test presenting a trivial computational problem and that evolving cognitive difficulty threw light on the rigorous nature of young human mind failing once it sufficiently overlook the challenge of artificial intelligence. so then review our original algorithmic information - diversity measures regarding quantifying and characterizing cognition regarding various forms. some are capable of considering theoretically known biases in human behavior, thus proposing a computational algorithmic discovery : thought \" first suggested gabriel gates, perhaps this time rooted in the concept universal algorithmic probability, which again turn is demonstrated amidst seemingly universality while rather independent of computational diversity, and which uses the paradox of being predictive and formulated as a credible theory of mental behavior.", "histories": [["v1", "Sat, 17 Jan 2015 22:55:48 GMT  (44kb)", "http://arxiv.org/abs/1501.04242v1", "21 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag"], ["v2", "Fri, 23 Jan 2015 23:55:43 GMT  (45kb)", "http://arxiv.org/abs/1501.04242v2", "21 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag"], ["v3", "Tue, 27 Jan 2015 01:23:36 GMT  (46kb)", "http://arxiv.org/abs/1501.04242v3", "21 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag"], ["v4", "Wed, 28 Jan 2015 15:51:30 GMT  (27kb)", "http://arxiv.org/abs/1501.04242v4", "22 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag"], ["v5", "Thu, 24 Dec 2015 13:54:22 GMT  (29kb)", "http://arxiv.org/abs/1501.04242v5", "22 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag"]], "COMMENTS": "21 pages. Forthcoming in Gordana Dodig-Crnkovic and Raffaela Giovagnoli (eds). Representation and Reality: Humans, Animals and Machines, Springer Verlag", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["nicolas gauvrit", "hector zenil", "jesper tegn\\'er"], "accepted": false, "id": "1501.04242"}, "pdf": {"name": "1501.04242.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jesper Tegn\u00e9r"], "emails": ["hector.zenil@algorithmicnaturelab.org", "ngauvrit@me.com", "jesper/tegner@ki.se"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 1.\n04 24\n2v 1\n[ cs\n.A I]\n1 7\nJa n\nHector Zenil Unit of Computational Medicine, Department of Medicine, Centre for Molecular Medicine, Karolinska Institutet, Stockholm, Sweden. Corresponding author: e-mail: hector.zenil@algorithmicnaturelab.org\nNicolas Gauvrit Human and Artificial Cognition Lab Universite\u0301 Paris 8 & EPHE, Paris, France. e-mail: ngauvrit@me.com\nJesper Tegne\u0301r Unit of Computational Medicine, Department of Medicine, Centre for Molecular Medicine, Karolinska Institutet, Stockholm, Sweden. e-mail: jesper/tegner@ki.se\n\u2217 First two authors contributed equally.\n1"}, {"heading": "1 The algorithmic model of mind", "text": "Judea Pearl, a leading theorist of causality, believes that every computer scientist is in a sense a frustrated psychologist, because computer scientists learn about themselves (and about others) by writing computer programs that are emulators of intelligent human behavior [Pearl 2012]. As Pearl suggests, computer programs are in effect an enhanced version of an important intellectual component of ourselves: they perform calculations for us, albeit not always as we ourselves would perform them. Pearl claims that by emulating ourselves we externalize a part of our behavior; we mirror our inner selves, allowing them to become objects of investigation. We are able to monitor the consequences of changing our minds by changing the code of a computer program, which is effectively a reflection of our minds.\nPerhaps Alan Turing was the first such frustrated psychologist, attempting to explain human behavior by means of mechanical processes, first in his seminal work on universal computation [Turing 1938], but also in his later landmark paper connecting intelligence and computation through an imitation game [Turing 1950]. On the one hand, Artificial Intelligence has sought to automatize aspects of behavior that would in the past have been considered intelligent, in the spirit of Turing\u2019s first paper on universal computation. It has driven the evolution of computer programs from mere arithmetic calculators to machines capable of playing chess at levels beyond human capacity and answering questions at near\u2013and in some domains beyond\u2014human performance, to machines capable of linguistic translation and face recognition at human standards. On the other hand, the philosophical discussion epitomized by Turing\u2019s later paper on human and machine intelligence prompted an early tendency to conflate intelligence and consciousness, generating interesting responses from scholars such as John Searle. Searle\u2019s Chinese Room argument [Searle 1980] (CRA) is not an objection against Turing\u2019s main argument, which has its own virtues despite its many limitations, but a call to distinguish human consciousness from intelligent behavior in general. Additionally, the philosophy of mind has transitioned from materialism to functionalism to computationalism [Dodig-Crnkovic 2007], but until very recently little had been done by way of formally\u2014conceptually and technically\u2014connecting computation as a model of consciousness and cognition.\nWe now have a contending formal theory of consciousness, which may be right or wrong but has the virtue of being precise and well-defined, even though it has evolved in a short period of time. The so-called Integrated Information Theory [Oizumi et al. 2014] lays the groundwork for an interesting computational and information-theoretic account of the necessary conditions for consciousness. It proposes a measure of the integration of information between the interacting elements that account for what is essential to consciousness, viz. the feeling of an internal experience, and therefore the generation of information within the system in excess of information received from the external environment and independent of what the system retrieves, if anything.\nMoreover, we now have a formal theory capable of accounting for biases in human perception that classical probability theory could only quantify but not explain\nor generate a working hypothesis about [Gauvrit et al. 2014a, Gauvrit et al. 2014c]. This algorithmic model provides a strong formal connection between cognition and computation by means of recursion, which seems to be innate or else developed over the course of our lifetimes [Gauvrit et al. 2014c]. The theory is also not immune to arguments of super-Turing computation [Zenil & Hernandez-Quiroz 2007], suggesting that while the actual mechanisms of cognition and the mind may be very different from the operation of a Turing machine, its computational power may be that of Turing universality. But we do not yet know with certainty what conditions would be necessary or sufficient to algorithmically account for the same mental biases with more or less computational power, and this is an interesting direction for further investigation (more precisely, we need to ascertain whether theorems such as the algorithmic Coding theorem are valid under conditions of super- or subuniversality).\nThe connections suggested between computation and life go well beyond cognition. Sydney Brenner, one of the fathers of molecular biology, argues that Turing machines and cells have much in common [Brenner 2012]. More recently, it has been shown in systematic experiments with yeast that evolutionary paths taken by completely different mutations in equivalent environments reach the same evolutionary outcome [Kryazhimskiy et al. 2014], which may establish another computational property known as confluence in abstract rewriting systems, also known as the Church-Rosser property or diamond property. The name comes from a result known as the Church-Rosser theorem, named for the scientists who proved it [Church & Rosser 1936], which establishes that when applying reduction rules to terms in the lambda calculus, a language equivalent in expression and computational power to Turing machines, the order in which the reductions are chosen does not make a difference to the eventual result. This particular kind of contingency makes evolution more predictable than expected, but it also means that finding paths leading to a disease, such as a neurodegenerative disease, can be more difficult because of the great diversity of possible causes leading to the same undesirable outcome. Strong algorithmic connections between animal behavior, molecular biology and Turing computation have been explored in [Zenil et al. 2012a, Zenil & Marshall 2013]. But the connections between computation and cognition can be traced back to the very beginning of the field, which will help us lay the groundwork for what we believe is an important contribution towards a better understanding of cognition, particularly human cognition, through algorithmic lenses."}, {"heading": "1.1 The Turing test is trivial, ergo the mind is algorithmic", "text": "In principle, passing the Turing test is trivially achievable by brute force. This can be demonstrated using a simple Chinese Room Argument-type thought experiment. Take the number of (comprehensible) sentences in a conversation. This number is finite because the set of understandable finite sentences is bounded and is therefore finite. Write a lookup table with all possible answers to any possible question. Pass-\ning the Turing test is trivially achievable in finite time and space by brute force; it is just a combinatorial problem. Lookup tables run in O(1) computational time, but if a machine is to pass the Turing test by brute-force, their size would grow exponentially for sentences that only grow in a linear fashion, given the wide range of possible answers. Passing the Turing test would require more space and time than the age and size of the observable universe. For example, the novel Pride and Prejudice has an average sentence length of 19 words. For questions the number of words can be smaller, say 10, but that means a total of 10100000 possible sentence combinations, where 100000 is a conservative estimate of the average number of words in a typical small dictionary. But even limited to say 10000, the number is huge. (1) Encoding such a lookup table would require a number of bits larger than the number of atoms in the universe (which is believed to be between 1078 and 1082), but even if it were possible to encode it, then (2) accessing such a giant lookup table would take more time than the age of the universe. Indeed, Lloyd estimates that the universe cannot have performed more than 10120 ops on 1090 bits [Lloyd 2002]. Given arguments (1) and (2) it is not likely that the mind implements and works with a lookup table to pass the Turing test. This cannot be the way the mind works, because as (1) and (2) make clear, to do so would be a challenge, even if the number of words involved were small and the time for accessing the giant lookup table \u201cshort\u201d. While it is true that not all combinations of words form valid grammatical sentences, passing the Turing test by brute force may actually require the capacity to recognize invalid sentences in order either to avoid them or find suitable answers for each of them. This conservative number also assumes that for the same sentence the lookup table produces the same answer, because the same sentence will have assigned to it the same index produced by a hash function. This amounts to implementing a lookup table with no additional information\u2013such as the likelihood that a given word will be next to another\u2013thus effectively reducing the number of combinations. But assuming a raw lookup table with no other algorithmic implementation, in order to implement some sort of memory it would need to work at the level of conversations and not sentences or even paragraphs. Then the questioner can have a reasonable answer to the question \u201cDo you remember what my first question was?\u201d as they must in order to be able to pass a well-designed Turing test. While the final number of combinations of possible conversations, even using the most conservative numbers, is many orders of magnitude larger than the largest astronomical magnitudes, this is still a finite number. This means that, on the one hand, the Turing test is computationally trivially achievable because one only needs to build a large enough lookup table to have an answer for each possible sentence in a conversation. On the other hand, given both that the Turing test is in practice impossible to pass by brute force using a lookup table, and that passing the test is in fact achievable by the human mind, it cannot be the case that the mind implements a lookup table. It therefore has to pass it in a different way.\nAnd this is indeed what Searle helped emphasize. Understanding, for Searle, cannot be achieved by lookup table brute force, which is what he thinks of when he thinks of computer programs. But not all computer programs are lookup tables. Objections to the Turing test may be of a metaphysical stripe, or adhere to Searle\nand introduce resource constraints or some other option not covered here. But this means that either the mind has certain metaphysical properties that cannot be represented and reproduced by science, or that the Turing test and therefore the computational operation of the mind can only make sense if resources are taken into account. Which is to say that the Turing test must be passed using a certain limited amount of space and in a certain limited time, and if not, then machine intelligence is unrelated to the Turing test (and to computing), and must be understood as a form of rule/data compression and decompression. Searle is right in that the brain is unlikely to operate as a computer program working on a colossal lookup table, and the answer can be summarized by Chaitin\u2019s quote \u201ccompression is comprehension\u201d [Chaitin 2006].\nSearle opposes lookup table type programs epitomized by the CRA, but the CRA is not representative of all computer programs, hence Searle is not metaphysical (he agrees on this). This is again deeply related to computation, more precisely to questions of computational and algorithmic (program-size) complexity as well as to computational (resource) complexity.\nIn light of the theoretical triviality of passing the Turing test, S. Aaronson stresses [Aaronson 2011] the need to ask about resources. When weighing the merits of a computational model of mind while taking into consideration the implications of Searle\u2019s arguments, attention to resources suggests, for example, that the distinction of time complexity classes has some sort of metaphysical significance. An exponential-sized computer program that passes the Turing Test would not be sentient (or conscious, intelligent or self-aware), but a polynomially-bounded program with exactly the same input/output behavior as the exponentially-bounded one would be.\nThis means that the mind implements rules, that it is in some way strongly algorithmic in nature, and compresses large amounts of information in efficient ways. We have designed and conceived some tests based on this strong but reasonable assumption, using methods from algorithmic complexity and algorithmic probability to study the mind.\nAn interesting link to Integrated Information can also be established by way of compression. Imagine you are given two files. One is uncompressible and therefore any change to the uncompressed file can be simply replicated in the compressed file, the files being effectively the same. This is because any given bit is independent of every other in both versions, compressed and uncompressed. But reproducing any change in a compressible file leading to an effect in an uncompressed file requires a cryptic change in the former, because the compression algorithm takes advantage of short and long-range regularities, i.e. non-independency of the bits, encoded in a region of the compressed file that may be very far afield in the uncompressed version. This means that uncompressible files have little integrated information but compressible files have a greater degree of integrated information. Similar ideas are explored in [Maguire et al. 2014], making a case against integrated information theory by arguing that it does not conform to the intuitive concept of consciousness. For what people mean by the use of \u2018consciousness\u2019 is that a system cannot be broken down; if it could it would not amount to \u201dconsciousness\u201d.\nIn practice, search engines and the web constitute a sort of lookup table of exactly the type attacked by Searle\u2019s CRA. Indeed, the probability of finding a webpage containing a permutation of words representing a short sentence is high and tends to increase over time, even though the probability grows exponentially slowly due to the combinatorial explosion. The web contains about 4.73 billion pages (http://www.worldwidewebsize.com/ as estimated and accessed on Wednesday, 07 January, 2015) with text mostly written by humans. But that the web seen through a search engine is a lookup table of sorts is an argument against the idea that the web is a sort of \u201cglobal mind\u201d and therefore consonant with Searle\u2019s argument. Indeed, there is very little evidence that anything in the web is in compressed form (this is slightly different from the Internet in general, where many transactions and protocols implement compression in one way or another, e.g. encryption). We are therefore proposing that compression is a necessary condition for minds and consciousness, but clearly not a sufficient one (cf. compressed files, such as PNG images in a computer hard drive).\nIt has been suggested in field experiments that animals display a strong behavioral bias. For example, in Reznikova\u2019s communication experiments with ants, simpler instructions were communicated faster and more effectively than complex ones by scout ants searching for patches of food randomly located in a maze. The sequences consist of right and left movements encoded in binary (R and L) (see http://grahamshawcross.com/2014/07/26/counting-ants/ Accessed on Dec 23, 2014.) [Reznikova & Ryabko 2011, Reznikova & Ryabko 2012, Ryabko & Reznikova 2009] that are communicated by the scout ants returning to their foraging team in the colony to communicate instructions for reaching the food.\nHumans too display these biases, from their motion trajectories [Peng et al. 2014] to their perception of reality [Chater 1999]. Indeed, we have shown that cognition, including visual perception and the generation of subjective randomness, shows a bias that can be accounted for with the seminal concept of algorithmic probability. Using a computer to look at human behavior in a novel fashion, specifically by using a reverse Turing test where what is assessed is the human mind and an \u201caverage\u201d Turing machine or computer program implementing any possible compression algorithm, we will show that the human mind behaves more like a machine. We will in effect reverse the original question Turing posed via his imitation game as to whether machines behave like us."}, {"heading": "2 Algorithmic complexity as model of the mind", "text": "Since the emergence of the Bayesian paradigm in cognitive science, researchers have expressed the need for a formal account of complexity based on a sound complexity measure. They have also struggled to find a way of giving a formal normative account of the probability that a deterministic algorithm produces a given sequence, such as the heads-or-tails string \u201cHTHTHTHT\u201d, which intuitively looks like the result of a deterministic process even if it has the same probability of occurrence\nas any other sequence of the same length according to classical probability theory, which assigns a probability of 1/28 to all sequences of size 8."}, {"heading": "2.1 From bias to Bayes", "text": "Among the diverse areas of cognitive science that have expressed a need for a new complexity measure, the most obvious is the field of probabilistic reasoning. The famous work of Kahneman, Slovic and Tversky (1982) aimed at understanding how people reason and make decisions in the face of uncertain and noisy information sources. They showed that humans were prone to many errors about randomness and probability. For instance, people tend to claim that the sequence of heads or tails \u201cHTTHTHHHTT\u201d is more likely to appear when a coin is tossed than the series \u201cHHHHHTTTTT\u201d.\nIn the \u201cheuristics and bias\u201d approach advocated by Kahneman and Tversky, these \u201csystematic\u201d errors were interpreted as biases inhering in human psychology, or else as the result of using faulty heuristics. For instance, it was believed that people tend to say that \u201cHHHHHTTTTT\u201d is less random than \u201cHTTHTHHHTT\u201d because they are influenced by a so-called representativeness heuristic, according to which a sequence is more random the better it conforms to prototypical examples of random sequences. Human reasoning, it has been argued, works like a faulty computer. Although many papers have been published about these biases, not much is known about their causes.\nAnother example of a widespread error is the so-called \u201cequiprobability bias\u201d [Lecoutre 1992], a tendency to believe that any random variable should be uniform (with equal probability for every possible outcome). In the same vein as the seminal investigations by Kahneman et al. [Kahneman et al. 1982], this bias too, viz.the erroneous assumption that randomness implies uniformity, has long been interpreted as a fundamental flaw of the human mind.\nDuring the last decades, a paradigm shift has occurred in cognitive science. The \u201cnew paradigm\u201d\u2014or Bayesian approach\u2014suggests that the human (or animal) mind is not a faulty machine, but a probabilistic machine of a certain type. According to this understanding of human cognition, we all estimate and constantly revise probabilities of events in the world, taking into account any new pieces of information, and more or less following probabilistic (including Bayesian) rules.\nStudies along these lines often try to explain our probabilistic errors in terms of a sound intuition about randomness or probability applied in an inappropriate context. For instance, a mathematical and psychological reanalysis of the equiprobability bias was recently published [Gauvrit & Morsanyi 2014]. The mathematical theory of randomness, based on algorithmic complexity (or on entropy, as it happens) does in fact imply uniformity. Thus, claiming that the intuition that randomness implies uniformity is a bias does not fit with mathematical theory. On the other hand, if one follows the mathematical theory of randomness, one must admit that a combination of random events is, in general, not random anymore. Thus, the equiprobability bias\n(which indeed is a bias, since it yields frequent faulty answers in the probability class) is not, we argue, the result of a misconception regarding randomness, but a consequence of the incorrect intuition that random events can be combined without affecting their property of randomness.\nThe representativeness heuristic has also been reanalyzed from within the new Bayesian paradigm. Researchers now believe that when we have to compare the probability that a fair coin produces either \u201cHHHHHTTTTT\u201d or any other 10-item long series, we do not really do so. One reason is that the question is unnatural: our brain is built to estimate the probabilities of the causes of observed events, not the a priori probability of such events. Therefore, say researchers, when we have participants rate the probability of the string s =\u201cHHHHHTTTTT\u201d for instance (or any other), they do not actually estimate the probability that such a string will appear on tossing a fair coin, which we could write as P(s|R) where R stands for \u201crandom process\u201d, but the reverse probability P(R|s), that is, the probability that the coin is fair (or that the string is genuinely random), given that it produced s. Such a probability can be estimated using Bayes\u2019 theorem:\nP(R|s) = P(s|R)P(R)\nP(s|R)P(R)+P(s|D)P(D) ,\nwhere D stands for \u201cnot random\u201d (or deterministic). In this equation, the only problematic element is P(s|D), the probability that an undetermined but deterministic algorithmic will produce s. It was long believed that no normative measure of this value could be assumed, although some authors had the intuition that is was linked to the complexity of s: simple strings are more likely to appear as a result of an algorithm than complex ones.\nThe algorithmic theory of information actually provides a formal framework for this intuition. The algorithmic probability of a string s is the probability that a randomly chosen program running on a Universal (prefix-free) Turing Machine will produce s and then halt. It therefore serves as a natural formal definition of P(s|D). As we will see below, the algorithmic probability of a string s is negatively linked to its (Kolmogorov-Chaitin) algorithmic complexity, defined as the length of the shortest program that produces s and then halts: simpler strings have a higher algorithmic probability.\nOne important drawback of algorithmic complexity is that it is not computable. However, there now exist methods to approximate the probability, and thus the complexity, of any string, even short ones (see below), giving rise to a renewed interest in complexity in the cognitive sciences.\nUsing these methods, we can compute that, with a prior of 0.5, the probability that the string HHHHHTTTTT is random amounts to 0.58, whereas the probability that HTTHTHHHTT is random amounts to 0.83, thus confirming the common intuition that the latter is \u201cmore random\u201d than the former."}, {"heading": "2.2 The Coding theorem method", "text": "One method for assessing Kolmogorov-Chaitin complexity, namely lossless compression, as epitomized by the Lempel-Ziv algorithm, has been long and widely used. Such a tool, together with classical Shannon entropy [Wang et al. 2014], has been used recently in neuropsychology to investigate the complexity of EEG or fMRI data [Maguire et al. 2014] and [Casali et al. 2013]. Indeed, the size of a compressed file gives an indication of its algorithmic complexity. The size of a compressed file is, in fact, an upper bound of true algorithmic complexity. On the one hand, compression methods have a basic flaw; they can only recognize statistical regularities and are therefore implementations of variations of entropic measures, only assessing the rate of entropic convergence based on repetitions of strings of fixed sliding-window size. If lossless compression algorithms work to approximate Kolmogorov complexity, it is only because compression is a sufficient test for nonrandomness, but they clearly fail in the other direction, when it is a matter of ascertaining whether something is the result of or is produced by an algorithmic process (e.g. the digits of the mathematical constant \u03c0). That is, they cannot find structure that takes other forms than simple repetition. On the other hand, compression methods are inappropriate for short strings (of, say, less than a few hundreds symbols). For short strings, lossless compression algorithms often yield files that are longer than the strings themselves, hence providing results that are very unstable and difficult, if not impossible, to interpret.\nIn cognitive and behavioral science, researchers usually deal with short strings of at most a few tens of symbols, for which compression methods are thus useless. This is the reason they have long relied on tailor-made measures instead.\nThe Coding theorem method [Delahaye & Zenil 2012, Soler-Toscano et al. 2014] has been specifically designed to address this challenge. Thanks to the coding theorem method, researchers have provided values for the \u201calgorithmic complexity for short strings\u201d (which we will abbreviate as \u201cACSS\u201d). ACSS is available freely as an R-package (named ACSS), or through an online (www.complexitycalculator.com Accessed on 26 Dec, 2014) complexity calculator [Gauvrit et al. 2014a].\nAt the root of ACSS is the idea that algorithmic probability may be used to capture algorithmic complexity. The algorithmic probability of a string s is defined as the probability that a universal prefix-free Turing machine U will produce s and than halt. Formally,\nm(s) = \u2211 U(p)=s 1/2\u2212|p|\nThe algorithmic complexity of a string s is defined as the length of the shortest program that, running on a universal prefix-free Turing machine U , will produce s and then halt. Formally,\nK(s) = min(|p| : U(p) = s)\nK(s) and m(s) both depend on the choice of the Turing machine U. Thus, the expression \u201cthe algorithmic complexity of s\u201d is, in itself, a shortcut. For long strings, this dependency is relatively small. Indeed, the invariance theorem states that for any U and U \u2032, two universal prefix-free Turing machines, there exists a constant c independent of s such that\n|KU(s)\u2212KU \u2032(s)|< c\nThe constant c can be arbitrarily large. If one wishes to approximate the algorithmic complexity of short strings, the choice of U is thus determinant.\nTo overcome this inconvenience, we can take advantage of a formal link established between algorithmic probability and algorithmic complexity. The algorithmic coding theorem states that\nKU (s) =\u2212 log2(mU(s))+O(1)\nThis theorem can be used to approximate K(s) through an estimation of m(s). Instead of choosing a particular arbitrary universal Turing machine and feeding it with random programs, Delahaye and Zenil (2012) had the idea (equivalent in a formal way) of using a huge sample of Turing machines running on blank tapes. By doing so, they built a \u201cnatural\u201d (a quasi-lexicographical enumeration) experimental distribution approaching m(s), conceived of as an average mU(s).\nThey then defined ACSS(s) as \u2212 log2(m(s)). ACSS(s) approximates an average KU(s). To validate the method, researchers have studied how ACSS varies under different conditions. It has been found that ACSS as computed with different huge samples of small Turing machines remained stable [Gauvrit et al. 2014a]. Also, several descriptions of Turing machines did not alter ACSS [Zenil & Delahaye 2010]. Using cellular automata instead of Turing machines, they showed that ACSS remained relatively stable. On a more practical level, ACSS is also validated by experimental results. For instance, as we will see below, ACSS is linked to human complexity perception. And it has found applications in graph theory and network biology [Zenil et al. 2014]."}, {"heading": "2.3 The Block Decomposition Method", "text": "ACSS provides researchers with a user-friendly tool for assessing the algorithmic complexity of very short strings. Despite the huge sample (billions) of Turing machines used to build m(s) and K(s) using the coding theorem method, two strings of length 12 were never produced, yet ACSS can safely be used for strings up to length 12 by assigning the missing two the greatest complexity in the set plus 1.\nThe same method used with two-dimensional Turing machines produced a sample of binary patterns on grids, but here again of limited range. Not every 5\u00d75 grid is present in the output but one can approximate any square grid n\u00d7 n by decomposing it to 4\u00d7 4 squares for which there is a known estimation approximated by\na two-dimensional coding theorem method. The method simply involved running Turing machines on lattices rather than tapes, and then all the theory around the Coding theorem could be applied and a two-dimensional Coding theorem method conceived.\nThis idea of decomposing led to filling in the gap between the scope of classical lossless compression methods (large strings) and the scope of ACSS (short strings). To this end, a new method based on ACSS was developed: the Block decomposition method [Zenil et al. 2014].\nThe basic idea at the root of the Block decomposition method is to decompose strings for which we have exact approximations of their Kolmogorov complexity into shorter substrings (with possible overlapping). For instance, the string \u201c123123456\u201d can be decomposed into 6-symbol subsequences with a 3-symbol overlap \u201c123123\u201d and \u201c123456\u201d. Then, the block decomposition method takes advantage of known information-theoretic properties by penalizing n repetitions that can be transmitted by using only log2(n) bits through the formula:\nC(s) = \u2211 p log2(np)+K(p)\nwhere p denotes the different types of substrings, np the number of occurrences of each p, and K(p) the complexity of p as approximated by ACSS. As the formula shows, the Block decomposition method takes into account both the local complexity of the string and the (possibly long distance) repetitions.\nWith the Coding theorem method leading to ACSS, the block decomposition method and compression algorithms, the whole range of string lengths can now be covered with a family of formal methods. Within the field of cognitive and behavioral science, these new tools are really relevant. In the next section, we will describe three recent areas of cognitive science in which algorithmic complexity plays an important role. In these areas ACSS and Block decomposition methods have been key in the approximation of the algorithmic complexity of short (2-12) and medium (10-100) length strings and arrays."}, {"heading": "3 Cognition and complexity", "text": "An early example of an application to cognition of the Coding theorem and the Block decomposition methods was able to quantify the short sequence complexity in Reznikova\u2019s ant communication experiments, validating their results [Zenil 2013]. Indeed, it was found that ants communicate simpler strings (related to instructions for getting to food in a maze) in a shorter time, thus establishing an experimental connection between animal behavior, algorithmic complexity and time complexity.\nThe idea was taken further to establish a relation between information content and energy (spent both in foraging and communicating) to establish a fitness landscape based on the thresholds between these currencies as reported in [Zenil et al. 2012a]. As shown in [Zenil et al. 2012a], if the environment is too predictable the cost of\ninformation-processing is very low. In contrast, if the environment is random, the cost is at a maximum. The results obtained by these information-processing methods suggest that organisms with better learning capabilities save more energy and therefore have an evolutionary advantage.\nIn many ways, animal behavior (including, notably, human behavior) suggests that the brain acts as a data compression device. For example, despite our very limited memory, it is clear we can retain long strings if they have low algorithmic complexity (e.g. the sequence 123456. . . vs the digits of \u03c0 , see below). Cognitive and behavioral science deals for the most part with small series, barely exceeding a few tens of values. For such short sequences, estimating the algorithmic complexity is a challenge. Indeed, until now, behavioral science has largely relied on a subjective and intuitive account of complexity (e.g. Reznikova\u2019s ant communication experiments). Through the \u201cCoding theorem method\u201d, however, it is now possible to obtain a reliable approximation of the algorithmic complexity of any string length [Gauvrit et al. 2014a] and the methods have been put to the test and applied to validate several intuitions put forward by prominent researchers in cognitive science over the last few decades. We will describe some of these intuitions and explain how they have been confirmed by experimental studies."}, {"heading": "3.1 Working memory", "text": "Researchers in psychology have identified different types of memory in humans and other animals. Two related kinds of memory have been particularly well studied: short-term memory and working memory. Short-term memory refers to a kind of cognitive resource that allows the storage of information over a few seconds or minutes. According to a recent account of short-term memory [Barrouillet et al. 2009], items stored in short-term memory quickly and automatically decay as times passes, as a mere result of the passage of time, unless attention is devoted to the reactivation of the to-be-remembered item. Thus, constant reactivation is necessary to keep information stored for minutes. This is done by means of an internal language loop (one can continuously repeat the to-be-memorized items) or by using mental imagery (one can produce mental images of the items). On the other hand, some researchers believe that the decay observed in memory is entirely due to interference by new information [Oberauer 2004]. Researchers thus disagree as to the reasons while they all acknowledge that there is indeed a quick decay of memory traces. The span of short-term memory is estimated at around 7 items [Miller 1956, Klingberg et al. 2009]. To arrive at this estimation, psychologists use simple memory span tasks in which participants are required to repeat series of items of increasing length. For instance, the experimenter says \u201c3, 5\u201d and the participants must repeat \u201c3, 5\u201d. Then the experimenter says \u201c6, 2, 9\u201d out loud, which is repeated by the participant. Short-term memory span is defined as the length of the longest series one can recall. Strikingly, this span is barely dependent on the type of item to be memorized (letters, digits, words, etc.).\nTwo observations, however, shed new light on the concept of short-term memory. The first is the detrimental effect of cognitive load on short-term memory span. For instance, if humans usually recall up to 7 items in a basic situation as described above, the number of items correctly recalled drops if an individual must perform another task at the same time. For instance, if a subject had to repeat \u201cbaba\u201d while memorizing the digits, s/he would probably not store as many as 7 items [Barrouillet et al. 2004]. More demanding interfering tasks (such as checking whether equations are true or generating random letters) lead to even lower spans. The second observation is that when there is a structure in the to-be-recalled list, one can retain more items. For instance, it is unlikely that anyone can memorize, in a one-shot experiment, a series such as \u201c3, 5, 4, 8, 2, 1, 1, 9, 4, 5\u201d. However, longer series such as \u201c1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1\u201d will be easily memorized and recalled.\nThe first observation led to the notion of working memory. Working memory is a hypothetical cognitive resource used for both storing and processing information. When participants must recall series while performing a dual task, they assign part of their working memory to the dual task, which reduces the part of working memory allocated to storage, i.e. short-term memory [Baddeley 1992].\nThe second observation led to the notion of chunking. It is now believed that humans can divide to-be-recalled lists into simple sub-lists. For instance, when they have to store \u201c1, 2, 3, 4, 5, 3, 3, 3, 1, 1, 1\u201d they can build three \u201cchunks\u201d: \u201c1, 2, 3, 4, 5\u201d, \u201c3, 3, 3\u201d and \u201c1, 1, 1\u201d. As this example illustrates, chunks are not arbitrary: they are conceived to minimize complexity, and thus act as compression algorithms [Mathy & Feldman 2012]. An objective factor showing that chunking does occur is that while recalling the above series, people make longer pauses between the hypothetical chunks than within them. Taking these new concepts into account, it is now believed that the short-term memory span is not roughly 7 items, as established using unstructured lists, but more accurately around 4 chunks [Cowan 2001].\nThe short-term memory span is thus dependent on the type of list to be memorized. With structured series, one can recall more items, but fewer chunks. This apparent contradiction can be overcome by challenging the clear-cut opposition between short-term memory span and working-memory span. To overcome the limitations of short-term memory, humans can take advantage of the structure present in some series. Doing so requires using the \u201cprocessing\u201d component of working memory to analyze the data [Mathy & Feldman 2012]. Thus, even simple tasks where subjects must only store and recall series of items do tax the processing part of working memory.\nAccording to this hypothesis, working memory works as a compression algorithm, where part of the resource is allocated to data storage while another part is dedicated to the \u201ccompression/decompression\u201d program. Recent studies are perfectly in line with this idea. Mathy et al. (2014) used a Simon R\u00a9, a popular 80s game in which one must reproduce series of colors (chosen from among a set of 4 colors) of increasing length, echoing classical short-term memory tasks. They show that the algorithmic complexity of a series is a better predictor of correct recall than the length of the string. Moreover, when participants make mistakes, they generate, on\naverage, an (incorrect) string of lower algorithmic complexity than the string to be remembered.\nAll these experimental results suggest that working memory acts as a compression algorithm. In normal conditions, compression is lossless, but when the items to be remembered exceed working memory capacity, it may be that lossy compression is used instead."}, {"heading": "3.2 Randomness perception", "text": "Humans share some intuitive and seemingly innate (or at least precocious) concepts concerning mathematical facts, biology, physics and na\u0131\u0308ve psychology. This core knowledge [Spelke 2007] is found in babies as young as a few months. In the field of na\u0131\u0308ve mathematics, for instance, it has been shown that people share some basic knowledge or intuitions about numbers and geometry. Humans and other animals both manifest the ability to discriminate quantities based on an \u201cApproximate Number Sense\u201d, thanks to which one can immediately feel that 3 objects are more than 2, or 12 than 6 [Dehaene 2011]. Because this number sense is only approximate, it doesn\u2019t allow us to discriminate 12 from 15, for instance. There are many indications that we do have an innate sense of quantity. For instance, both children and adults are able to \u201ccount\u201d quantities not greater than 4 almost immediately, whereas larger quantities require a counting strategy. When faced with 1, 2 or 3 objects, we immediately perceive how many there are without counting. This phenomenon is known as \u201csubitizing\u201d [Mandler and Shebo 1982]. Babies are young as six months [Xu et al 2005], apes [Boysen & Hallberg 2000] and even birds [Pepperberg 2006] are able to perform basic comparisons between small numbers. However, for quantities above 4, we are bound to resort to learned strategies like counting.\nThe same results have been found in the field of na\u0131\u0308ve geometry. In a study of an Amazonian indigenous group, Dehaene et al (2006) found that people without any formal mathematical culture naturally reason in terms of points and lines. They also perceive symmetry and share intuitive notions of topology, such as connexity or simple connexity (holes).\nRecent findings in the psychology of subjective randomness suggest that probabilistic knowledge may well figure on the list of core human knowledges. Te\u0301gla\u0301s et al (2011) exposed 1-year old infants to images of jars containing various proportions of colored balls. When a ball is randomly taken from the jar, the duration of the infant\u2019s gaze is recorded. Also, one can easily compute the probability of the observed event. For instance, if a white ball is chosen, the corresponding probability is the proportion of white balls in the jar. It turned out that gazing time is correlated to the probability of the observed event: the more probable the event, the shorter the gaze. This is interpreted as proof that 1-year old children already have an intuitive and approximate probability sense, in the same way they have an approximate number sense.\nThis probability sense is even more complex and rich than the previous example suggests. Xu and Garcia (2008) proved that infants even younger (8 months old) could exhibit behaviors showing a basic intuition of Bayesian probability. In their experiment, children saw an experimenter taking white or red balls out of an opaque jar. The resulting sample could exhibit an excess of red or white, depending on the trial. After the sample was removed, the jar was uncovered, revealing either a large proportion of red balls or a large proportion of white balls. It was observed that children stared longer at the scene if what transpired was less probable according to a Bayesian account of sampling. For instance, if the sample had a large majority of red balls but the jar, once uncovered, showed an excess of white ones, the infant\u2019s gaze would be trained on the scene longer.\nIn the same vein, Ma and Xu (2009) presented 9 and 10-month old children with samples from a jar containing as many yellow as red balls. However, the sampling could be done either by a human or a robot. Ma and Xu show that children expect any regularity to come from a human hand. This experiment was meant to trace our intuition of intentionality behind any regularity. However, it also shows that humans have a precocious intuition of regularity and randomness.\nAdults are able to discriminate more finely between strings according to their complexity. For example, using classical randomness perception tasks, Matthews (2013) had people decide whether binary strings of length 21 were more likely to have been produced by a random process or a deterministic one. Matthews was primarily interested in the contextual effects associated with such a task. However, he also shows that adults usually agree about which strings are more random. A reanalysis of Mathews\u2019 data [Gauvrit et al. 2014b] showed that algorithmic complexity is actually a good predictor of subjective randomness\u2014that is, the probability that a human would consider that the string looks random.\nIn attempting to uncover the sources of our perception of randomness, Hsu et al (2010) have suggested that it could be learned from the world. More precisely, according to the authors, our idea of two-dimensional randomness could be based on the probability that a given pattern appears in visual natural scenes. They presented a series of patterns, which were 4\u00d7 4 grids with 8 black cells, and 8 white cells. Subjects had to decide whether these grids were \u201crandom\u201d or not. The proportion of subjects answering \u201crandom\u201d was used as a measure of subjective randomness. The authors also scanned a series of still nature shots. The pictures were binarized to black and white using the median as threshold and every 4\u00d7 4 grid was extracted from them. From this dataset, a distribution was computed. Hsu et al (2010) found that the probability that a grid appears in random photographs of natural scenes was correlated to the human estimate: the more frequent the grid, the less random it is rated. The authors interpret these results as evidence that we learn to perceive randomness through our eyes. An extension of the Hsu et al study (2010) confirmed the correlation, and found that both subjective randomness and frequency in natural scenes were correlated to the algorithmic complexity of the patterns [Gauvrit et al. 2014c]. It was found that natural scene statistics explain in part how we perceive randomness/complexity.\nIn contradistinction to the aforementioned experiments according to which even children under one year displayed the ability to detect regularities, these results suggest that the perception of randomness is not innate. Our sense of randomness could deploy very early in life, based on visual scenes we see and an innate sense of statistics, but it evolves over time."}, {"heading": "3.3 Culture and structure", "text": "In different areas of social science and cognitive science, it has been found that regularities may arise from the transmission of cultural items [Smith & Wonnacott 2010]. For instance, in the study of rumors, it has been found that some categories of rumor disseminate easily, while others simply disappear. The \u201cmemes\u201d that are easily remembered, believed and transmitted share some basic properties, such as a balance between expected and unexpected elements, as well as simplicity [Bronner 2010]. Too-complex stories, it is believed, are too hard to remember and are doomed to disappear. Moreover, in spreading rumors the transmitters make mistakes, in a partially predictable way. As a rule, errors make the message simpler and thus easier to retain.\nFor instance, Barrett and Nihoff (2001) had participants learn fabricated stories including some intuitive and some counter-intuitive elements. They found that slightly counterintuitive elements were better recalled than intuitive elements. In research along the same lines, Atran and Norenzayan (2004) found an inverse Ushaped curve between the proportion of counter-intuitive elements and the correct recall of stories.\nTwo complementary concepts are prominent in the experimental psychology of cultural transmission. Learnability measures how easily an item (story, word, pattern) is remembered by someone. More learnable elements are more readily disseminated. They are selected in a \u201cdarwinian\u201d manner, since learnability is a measure of how adapted the item is to the human community in which it will live or die.\nComplexity is another important property of cultural items. In general, complex items are less learnable, but there are exceptions. For instance, a story without any interest will not be learned, even if highly simple. Interest, unexpectedness or humoristic level also play a role in determining how learnable and also how \u201cbuzzy\u201d an item is.\nWhen researchers study complex cultural items such as stories, arguments, or even theories or religions, they are bound to measure complexity and learnability by using more or less taylor-made tools. Typically, researchers use the number of elements in a story, as well as their interrelations to rate its complexity. The number of elements and relations someone usually retains is an index of learnability.\nThe paradigm of iterative learning is an interesting way to study cultural transmission and investigate how it yields to structural transformations of the items to be transmitted. In the iterative learning design, a first participant has to learn a message (a story, a picture, a pseudo-language, etc.) and then reproduce or describe it to a\nsecond participant. The second participant will then describe the message to a third, etc. A chain of transmission can comprise tens of participants.\nCertainly, algorithmic complexity is not always usable in such situations. However, in fundamental research in cognitive psychology, it is appropriate. Instead of investigating complex cultural elements such as rumors or pseudo-sciences, we turned to simpler items, in the hope of achieving a better understanding of how structure emerges in language. Some pseudo-languages have been used [Kirby et al. 2008] and showed a decrease in intuitive complexity along the transmission chains.\nIn a more recent study, researchers used two-dimensional patterns of points [Kempe et al. 2015]. Twelve tokens were randomly placed on 10\u00d7 10 grids. The first participant had to memorize the pattern in 10 seconds, and then reproduce it on a blank grid, using new tokens. The second participant then had to reproduce the first participant\u2019s response, and so on. Participants in a chain were sometimes all adults, and sometimes all children. Learnability can be defined as the number of correctly placed tokens. As expected, learnability continuously increases within each transmission chain, at the same rate for children and adults. As a consequence of increasing learnability, each chain converges toward a highly learnable pattern (which also is simple), different from one chain to the other.\nThe fact that children\u2019s and adults\u2019 chains share the same rate of increase in learnability is striking, since they have different cognitive abilities. . ., but may be explained by complexity. Indeed, the algorithmic complexity of the patterns within each chain decreases continuously, but at a faster rate in children\u2019s chains than adult chains.\nThe Less-is-More effect [Kersten & Earles 2001] in psycholinguistics designates the fact that babies, with low cognitive abilities, are far better than adults at learning language. Thus, less cognitive ability could actually be better when it comes to learning language. One possible explanation of the paradox relies on complexity: as a consequence of the reduced cognitive power of babies, they could be bound to \u201ccompress the data\u201d more\u2014build a simpler though possibly faulty representation of the available data they have access to. The recent study of Kempe et al. (2015) supports this idea (albeit remotely), by showing that children achieve the same increase in learnability as adults by a much quicker decrease in algorithmic complexity, which can be a consequence of reduced cognitive power."}, {"heading": "4 Concluding remarks", "text": "We have surveyed most of what has formally been done to connect and explain cognition through computation. Turing connected human intelligence to computation. Searle indirectly connected understanding (and consciousness) to program complexity (soft AI). Tononi et al. have recently connected consciousness to information theory, and we have connected cognition and algorithmic information theory. Within cognitive science, the study of working memory, of probabilistic reasoning, and the emergence of structure in language is cutting-edge research. In these three areas,\nwe have made contributions from algorithmic complexity, which appears to be a very useful normative tool, shedding light on several cognitive processes. We have proceeded by taking the mind as a form of algorithmic compressor, for reasons that range from the fact that the mind operates otherwise than through lookup table implementations to the ways in which it manifests biases accounted for by algorithmic means based purely on computability theory. This research is generating and will likely generate even more insights into the fundamentals of animal and human cognition, with cross-fertilization taking place from the artificial to the natural realms and vice versa, as algorithmic measures of the properties characterizing human and animal behavior can be of use in artificial systems like robotics [Zenil to appear]. Which amounts to a sort of reverse Turing test as described in [Zenil 2014b] and [Zenil 2014a] and can be used, as argued in this paper, against claims such as the one that\u201cthe web has developed into a global mind,\u201d on the basis that, despite its potentially high level of integrated information, the web is still equivalent to a lookup table-type implementation, albeit a gigantic one, and is therefore susceptible to Searle\u2019s CRA. We believe that integrated information is therefore a necessary but not a sufficient condition for consciousness; and we have proposed that displaying algorithmic compressing capabilities (beyond only statistical compression as implemented in traditional entropic-type lossless compression algorithms) is a test for comprehension as Chaitin has proposed. This sometimes goes hand-in-hand with integrated information by way of the concept of internal experience, but not always, and is another necessary condition for avoiding Searle\u2019s CRA based on lookup-type programs. To advance this idea we have provided specific tools with a wide range of applications [Zenil and Villarreal-Zapata 2013, Zenil 2010] that also conform to animal and human mental behavior [Zenil 2013, Gauvrit et al. 2014a, Gauvrit et al. 2014b, Gauvrit et al. 2014c, Kempe et al. 2015, Mathy et al. 2014]."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "We survey concepts at the frontier of research connecting artificial, animal and human cognition to computation and information processing\u2014from the Turing test to Searle\u2019s Chinese Room argument, from Integrated Information Theory to computational and algorithmic complexity. We start by arguing that passing the Turing test is a trivial computational problem and that its pragmatic difficulty sheds light on the computational nature of the human mind more than it does on the challenge of artificial intelligence. We then review our proposed algorithmic information-theoretic measures for quantifying and characterizing cognition in various forms. These are capable of accounting for known biases in human behavior, thus vindicating a computational algorithmic view of cognition as first suggested by Turing, but this time rooted in the concept of algorithmic probability, which in turn is based on computational universality while being independent of computational model, and which has the virtue of being predictive and testable as a model theory of cognitive behavior. Hector Zenil Unit of Computational Medicine, Department of Medicine, Centre for Molecular Medicine, Karolinska Institutet, Stockholm, Sweden. Corresponding author: e-mail: hector.zenil@algorithmicnaturelab.org Nicolas Gauvrit Human and Artificial Cognition Lab Universit\u00e9 Paris 8 & EPHE, Paris, France. e-mail: ngauvrit@me.com Jesper Tegn\u00e9r Unit of Computational Medicine, Department of Medicine, Centre for Molecular Medicine, Karolinska Institutet, Stockholm, Sweden. e-mail: jesper/tegner@ki.se \u2217 First two authors contributed equally.", "creator": "LaTeX with hyperref package"}}}