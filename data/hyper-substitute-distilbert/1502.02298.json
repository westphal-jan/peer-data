{"id": "1502.02298", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Feb-2015", "title": "Belief Revision, Minimal Change and Relaxation: A General Framework based on Satisfaction Systems, and Applications to Description Logics", "abstract": "belief processing of knowledge bases represented by a set preserving premises within special given logic has been extensively trained jointly for specific logics, mainly propositional, but fewer recently formulation and description logics. here, and propose objects generalize this operation more outside knowledge - wide margin of view, by defining revision in general strongly abstract model theory known under basic alias of theory requiring translation. in this paradigm, objects generalize by any institution knowledge characterization combines naturally well received agm technique popularized by conway and colleagues for providing synthesis in languages of minimal change with access to uniform ordering among interpretations. moreover, we demonstrate how to define revision, these imperfect agm postulates, from interpreting notions to have never first tested whereas description logics to define dissimilarity measures between concepts, lastly the verification invariant which ensures logical relax partial formulation of models of the old belief until it becomes consistent via the new pieces of knowledge. the incomplete metaphysical formulation can evolve instantiated in different logics such the propositional, description over rational logics.", "histories": [["v1", "Sun, 8 Feb 2015 20:26:10 GMT  (19kb)", "https://arxiv.org/abs/1502.02298v1", null], ["v2", "Fri, 13 Jan 2017 20:46:28 GMT  (82kb)", "http://arxiv.org/abs/1502.02298v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["marc aiguier", "jamal atif", "isabelle bloch", "c\\'eline hudelot"], "accepted": false, "id": "1502.02298"}, "pdf": {"name": "1502.02298.pdf", "metadata": {"source": "CRF", "title": "Belief Revision, Minimal Change and Relaxation: A General Framework based on Satisfaction Systems, and Applications to Description Logics", "authors": ["Marc Aiguier", "Jamal Atif", "Isabelle Bloch", "C\u00e9line Hudelot"], "emails": ["marc.aiguier@centralesupelec.fr", "celine.hudelot@centralesupelec.fr", "jamal.atif@dauphine.fr", "isabelle.bloch@telecom-paristech.fr"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 2.\n02 29\n8v 2\n[ cs\nBelief revision of knowledge bases represented by a set of sentences in a given logic has been extensively studied but for specific logics, mainly propositional, and also recently Horn and description logics. Here, we propose to generalize this operation from a modeltheoretic point of view, by defining revision in an abstract model theory known under the name of satisfaction systems. In this framework, we generalize to any satisfaction systems the characterization of the well known AGM postulates given by Katsuno and Mendelzon for propositional logic in terms of minimal change among interpretations. Moreover, we study how to define revision, satisfying the AGM postulates, from relaxation notions that have been first introduced in description logics to define dissimilarity measures between concepts, and the consequence of which is to relax the set of models of the old belief until it becomes consistent with the new pieces of knowledge. We show how the proposed general framework can be instantiated in different logics such as propositional, first-order, description and Horn logics. In particular for description logics, we introduce several concrete relaxation operators tailored for the description logic ALC and its fragments EL and ELU , discuss their properties and provide some illustrative examples.\nKey words: Abstract belief revision, Relaxation, AGM theory, satisfaction systems, description logics"}, {"heading": "1 Introduction", "text": "Belief change is an important field of knowledge representation. It is defined by three change operations, expansion, contraction and revision, that make an agent\u2019s\nPreprint submitted to Artificial Intelligence 17 January 2017\nbelief evolve with newly acquired knowledge. Belief expansion consists in adding new knowledge without checking consistency, while both contraction and revision consist in consistently removing and adding new knowledge, respectively. When knowledge bases are logical theories, i.e. a set of sentences in a given logic, these changes are governed by a set of postulates proposed for the first time by Alchourr\u00f2n, Gardenfors and Makinson [1], and since known as the AGM theory. Although defined in the abstract framework of logics given by Tarski [38] (so called Tarskian logics), postulates of the AGM theory make strong assumptions on the considered logics. Indeed, in [1] the considered logics have to be closed under the standard propositional connectives in {\u2227,\u2228,\u00ac,\u21d2}, to be compact (i.e. property entailment depends on a finite set of axioms), and to satisfy the deduction theorem (i.e. entailment and implication are equivalent). While compactness is a standard property of logics, to be closed under the standard propositional connectives is more questionable. Indeed, many non-classical logics such as description logics, equational logic or Horn clause logic, widely used for various modern applications in computing science, do not satisfy such a constraint. Recently, in many works, belief change has been studied in such non-classical logics [12,17,33,34]. In this direction, we can cite Ribeiro & al.\u2019s work in [34] that studies contraction at the abstract level of Tarskian logics, and the recent work in [40] on the extension of AGM contraction to arbitrary logics. The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41]. The reason is that revision can be abstractly defined in terms of expansion and retraction following the Levi identity, but this requires the use of negation, which rules out some non-classical logics [33].\nIn [22] some AGM postulates are interpreted in terms of minimal change, in the sense that the models of the revision should be as close as possible, according to some metric, to the models of the initial knowledge set. Recently, both for contraction and revision, generalizations of the AGM theory have been proposed in the framework of Tarskian Logics considering minimality criteria on removed formulas [33,34]. The aim was to study contraction and revision for a larger family of logics containing non-classical ones such as description logics and Horn logics. However, to the best of our knowledge, the generalization of AGM theory with minimality criteria on the set of models of knowledge bases has never been proposed. The reason is that semantics is not explicit in the abstract framework of logics defined by Tarski.\nWe propose here to generalize AGM revision but in an abstract model theory, satisfaction systems [18,25], which formalizes the intuitive notion of logical system, including syntax, semantics and the satisfaction relation. Then, we propose to generalize to any satisfaction system the approach developed in [22] for propositional logic and in [29] for description logics. In this abstract framework, we will also show how to define revision operators from the relaxation notion that has been introduced in description logics to define dissimilarity measures between concepts [14,15] and\nthe consequence of which is to relax the set of models of the old belief until it becomes consistent with the new pieces of knowledge. This notion of relaxation, defined in an abstract way through a set of properties, turns out to generalize several revision operators introduced in different contexts e.g. [9,24,28,20]. This is another key contribution of our work..\nWe provide examples of relaxations in propositional logics, first order logics, and Horn logic. The case of description logics (DLs) is more detailed, since DLs are now pervasive in many knowledge-based representation systems, such as ontological reasoning, semantic web, scene understanding, cognitive robotics, to mention a few. In all these domains, the expert knowledge is not fixed, but rather a flux evolving over time, hence requiring the definition of rational revision operators. Revision is then a cornerstone in ontology engineering life-cycle where the expert knowledge is prone to change and inconsistency. Due to this growing interest in DLs, several attempts to generalize the well-known AGM theory, making it compliant with the meta-logical flavor of these logics, have been introduced recently, as mentioned above. The first efforts concentrated on the adaptation of contraction postulates, but more recently, the adaptation of revision postulates and the introduction of new minimality criteria were also addressed [33], not necessarily related to the contraction operator, throwing out the need for negation. One can find in [28] an attempt to adapt the AGM revision postulates to DL in a model-theoretic way, following the seminal work of [22] that translated the AGM postulates in propositional logic semantics.\nTo summarize, our aim is to introduce a general framework for defining easily instantiable concrete revision operators for arbitrary logics. This goes beyond discussing the validity of the AGM theory for some non-classical logics such as description logics or Horn clauses logics which have been a focus of intensive research during the last years, as mentioned above. Indeed, by formulating the AGM theory in the framework of satisfaction systems, we show that one can push the envelop of the AGM theory to make it suitable to some non-classical logics (at the price of loosing or adapting some properties) and define revision operators that can be adapted in quite a straightforward manner to different logics, including nonclassical ones. Hence, our paper participates in the recent effort for generalizing the AGM theory to non-classical logics. In particular, we introduce a meta-framework that can, by its general and abstract flavor, reduce this effort or at least make it easier. Besides, we introduce a concrete way of defining revision operators in different logics including non-classical ones, and focus on the particular case of DL, which is of great current interest in semantic web related applications.\nThe paper is organized as follows. Section 2 reviews some concepts, notations and terminology about satisfaction systems which are used in this work. In Section 3, we adapt the AGM theory in the framework of satisfaction systems, and then give an abstract model-theoretic rewriting of the AGM postulates. We then show in Section 3.2 that any revision operator satisfying such postulates accomplishes an up-\ndate with minimal change to the set of models of knowledge bases. In Section 3.3, we introduce a general framework of relaxation-based revision operators and show that our revision operators lead to faithful assignments and then also satisfy the AGM postulates. In Section 3.4, we illustrate our abstract approach by providing revision operators in different logics, including classical logics (propositional and first order logics) and non-classical ones (Horn and description logics). The case of DL is further developed in Section 4, with several examples. Finally, Section 5 is dedicated to related works."}, {"heading": "2 Satisfaction systems", "text": "Satisfaction systems [25] (\u201crooms\" in the terminology of [18]) generalize Tarski\u2019s classical \u201csemantic definition of truth\u201d [37] and Barwise\u2019s \u201cTranslation Axiom\u201d [4]. For the sake of generalization, sentences are simply required to form a set. All other contingencies such as inductive definition of sentences are not considered. Similarly, models are simply seen as elements of a class, i.e. no particular structure is imposed on them.\n2.1 Definition and examples\nDefinition 1 (Satisfaction system). A satisfaction system R = (Sen,Mod, |=) consists of\n\u2022 a set Sen of sentences, \u2022 a class Mod of models, and \u2022 a satisfaction relation |=\u2286 (Mod\u00d7 Sen).\nLet us note that the non-logical vocabulary, so-called signature, over which sentences and models are built, is not specified in Definition 1. Actually, it is left implicit. Hence, as we will see in the examples developed in the paper, a satisfaction system always depends on a signature. There is an extension of satisfaction systems that takes into account explicitly the notion of signatures, the theory of institutions [19]. The theory of institutions is a categorical model theory which has emerged in computing science studies of software specifications and semantics. Since their introduction, institutions have become a common tool in the area of formal specification mainly to abstractly study the preservation of properties through the structuring of specifications and programs represented by signature morphisms. In this paper, as all the results that we will study about revision will always be done for logical theories over a same signature, signature morphisms and their interpretation for model classes and sentence sets are not useful. This is why we consider the framework of satisfaction\nsystems in this paper. The advantage is to allow us to abstract from all underlying categorical concepts such as category, functor and other advanced notions such as adjunction, pushout, colimit, etc.\nExample 1. The following examples of satisfaction systems are of particular importance in computer science and in the remainder of this paper.\nPropositional Logic (PL) Given a set of propositional variables \u03a3, we can define the satisfaction system R = (Sen,Mod, |=) where Sen is the least set of sentences finitely built over propositional variables in \u03a3 and Boolean connectives in {\u00ac,\u2228}, Mod contains all the mappings \u03bd : \u03a3 \u2192 {0, 1} (0 and 1 are the usual truth values), and the satisfaction relation |= is the usual propositional satisfaction. Horn Logic (HCL) A Horn clause is a sentence of the form \u0393 \u21d2 \u03b1 where \u0393 is a finite conjunction of propositional variables and \u03b1 is a propositional variable. The satisfaction system of Horn clause logic is then defined as for PL except that sentences are restricted to be conjunctions of Horn clauses. Many-sorted First Order Logic (FOL) Signatures are triplets (S, F, P ) where S is a set of sorts, and F and P are sets of function and predicate names respectively, both with arities in S\u2217 \u00d7 S and S+ respectively (S+ is the set of all nonempty sequences of elements in S and S\u2217 = S+ \u222a {\u01eb} where \u01eb denotes the empty sequence). In the following, to indicate that a function name f \u2208 F (respectively a predicate name p \u2208 P ) has for arity (s1 . . . sn, s) (respectively s1 . . . sn), we will note f : s1 \u00d7 . . .\u00d7 sn \u2192 s (resp. p : s1 \u00d7 . . .\u00d7 sn). Given a signature \u03a3 = (S, F, P ), we can define the satisfaction system R = (Sen,Mod, |=) where: \u2022 Sen is the least set of sentences built over atoms of the form p(t1, . . . , tn) where p : s1 \u00d7 . . .\u00d7 sn \u2208 P and ti \u2208 TF (X)si for every i, 1 \u2264 i \u2264 n (TF (X)s is the term algebra of sort s built over F with sorted variables in a given set X) by finitely applying Boolean connectives in {\u00ac,\u2228} and the quantifier \u2200.\n\u2022 Mod is the class of models M defined by a family (Ms)s\u2208S of sets (one for every s \u2208 S), each one equipped with a function fM : Ms1 \u00d7 . . .\u00d7Msn \u2192 Ms for every f : s1 \u00d7 . . . \u00d7 sn \u2192 s \u2208 F and with an n-ary relation pM \u2286 Ms1 \u00d7 . . .\u00d7Msn for every p : s1 \u00d7 . . .\u00d7 sn \u2208 P . \u2022 Finally, the satisfaction relation |= is the usual first-order satisfaction. As for PL, we can consider the logic FHCL of first-order Horn Logic whose models are those of FOL and sentences are restricted to be conjunctions of universally quantified Horn sentences (i.e. sentences of the form \u0393 \u21d2 \u03b1 where \u0393 is a finite conjunction of atoms and \u03b1 is an atom).\nDescription logic (DL) Signatures are triplets (NC , NR, I) where NC , NR and I are nonempty pairwise disjoint sets where elements in NC , NR and I are called concept names, role names and individuals, respectively. Given a signature (NC , NR, I), we can define the satisfaction systemR = (Sen,Mod, |= ) where:\n\u2022 Sen contains 1 all the sentences of the form C \u2291 D, x : C and (x, y) : r where x, y \u2208 I , r \u2208 NR and C is a concept inductively defined from NC \u222a {\u22a4} and binary and unary operators in {_ \u2293 _, _ \u2294 _} and in {_c, \u2200r._, \u2203r._}, respectively. \u2022 Mod is the class of models I defined by a set \u2206I equipped for every concept name A \u2208 NC with a set AI \u2286 \u2206I , for every relation name r \u2208 NR with a binary relation rI \u2286 \u2206I \u00d7 \u2206I , and for every individual x \u2208 I with a value xI \u2208 \u2206I . \u2022 The satisfaction relation |= is then defined as: \u00b7 I |= C \u2291 D iff CI \u2286 DI , \u00b7 I |= x : C iff xI \u2208 CI , \u00b7 I |= (x, y) : r iff (xI , yI) \u2208 rI ,\nwhere CI is the evaluation of C in I inductively defined on the structure of C as follows:\n\u00b7 if C = A with A \u2208 NC , then CI = AI; \u00b7 if C = \u22a4 then CI = \u2206I; \u00b7 if C = C \u2032 \u2294 D\u2032 (resp. C = C \u2032 \u2293 D\u2032), then CI = C \u2032I \u222a D\u2032I (resp. CI = C \u2032I \u2229D\u2032I); \u00b7 if C = C \u2032c, then CI = \u2206I \\ C \u2032I; \u00b7 if C = \u2200r.C \u2032, then CI = {x \u2208 \u2206I | \u2200y \u2208 \u2206I , (x, y) \u2208 rI implies y \u2208 C \u2032I}; \u00b7 if C = \u2203r.C \u2032, then CI = {x \u2208 \u2206I | \u2203y \u2208 \u2206I , (x, y) \u2208 rI and y \u2208 C \u2032I}.\n2.2 Knowledge base and theories\nLet us now consider a fixed but arbitrary satisfaction system R = (Sen,Mod, |=).\nNotation 1. Let T \u2286 Sen be a set of sentences.\n\u2022 Mod(T ) is the sub-class of Mod whose elements are models of T , i.e. for every M \u2208 Mod(T ) and every \u03d5 \u2208 T , M |= \u03d5. When T is restricted to a formula \u03d5 (i.e. T = {\u03d5}), we will denote Mod(\u03d5), the class of model of {\u03d5}, rather than Mod({\u03d5}). \u2022 Cn(T ) = {\u03d5 \u2208 Sen | \u2200M \u2208 Mod(T ), M |= \u03d5} is the set of so-called semantic consequences of T . 2 \u2022 Let M \u2286 Mod. Let us note M\u2217 = {\u03d5 \u2208 Sen | \u2200M \u2208 M,M |= \u03d5}. Therefore, we have for every T \u2286 Sen, Cn(T ) = Mod(T )\u2217. When M is restricted to one\n1 The description logic defined here is better known under the acronym ALC. 2 Usually, in the framework of satisfaction systems and institutions, the set of semantic consequences of a theory T is noted T \u2022. Here, we prefer the notation Cn(T ) because it will allow us to make a connection with the abstraction of logics as defined by Tarski [38] and widely used in works dealing with belief change such as revision, expansion or contraction.\nmodel M, M\u2217 will be equivalently noted M\u2217. \u2022 Let us note Triv = {M \u2208 Mod | M\u2217 = Sen}.\nLet us note that for every T \u2286 Sen, Triv \u2286 Mod(T ).\nFrom the above notations, we obviously have:\nCn(T ) = Cn(T \u2032) \u21d4 Mod(T ) = Mod(T \u2032). (1)\nThe two functions Mod(_) and _\u2217 form what is known as a Galois connection in that they satisfy the following properties: for all T, T \u2032 \u2286 Sen and M,M\u2032 \u2286 Mod, we have (see [13])\n(1) T \u2286 T \u2032 =\u21d2 Mod(T \u2032) \u2286 Mod(T ) (2) M \u2286 M\u2032 =\u21d2 M\u2032\u2217 \u2286 M\u2217 (3) T \u2286 Mod(T )\u2217 (4) M \u2286 Mod(M\u2217)\nDefinition 2 (Knowledge base and theory). A knowledge base T is a set of sentences (i.e. T \u2286 Sen). A knowledge base T is said to be a theory if and only if T = Cn(T ). A theory T is finitely representable if there exists a finite set T \u2032 \u2286 Sen such that T = Cn(T \u2032).\nProposition 1. For every satisfaction system R, we have:\nInclusion \u2200T \u2286 Sen, T \u2286 Cn(T ); Iteration \u2200T \u2286 Sen, Cn(T ) = Cn(Cn(T )); Monotonicity \u2200T, T \u2032 \u2286 Sen, T \u2286 T \u2032 =\u21d2 Cn(T ) \u2286 Cn(T \u2032).\nProof. Inclusion and iteration are obvious properties of the mapping Cn by definition (inclusion is Property 3 of the Galois Connection above). Suppose T \u2286 T \u2032. By the first property of the Galois connection above, we have that Mod(T \u2032) \u2286 Mod(T ) and Mod(T )\u2217 \u2286 Mod(T \u2032)\u2217 from Property 2, hence Cn(T ) \u2286 Cn(T \u2032).\nHence, satisfaction systems are Tarskian according to the definition of logics given by Tarski under which a logic is a pair (L, Cn) where L is a set of expressions (formulas) and Cn : P(L) \u2192 P(L) is a mapping that satisfies the inclusion, iteration and monotonicity properties [38]. Indeed, from any satisfaction system R we can define the following Tarskian logic (L, Cn) where L = Sen and Cn is the mapping that associates to every T \u2286 Sen, the set Cn(T ) of semantic consequences of T .\nClassically, the consistency of a theory T is defined as Mod(T ) 6= \u2205. The problem of such a definition of consistency is that its significance depends on the actual\nlogic. Hence, this consistency is significant for FOL, while in FHCL it is a trivial property since each set of sentences is consistent because Mod(T ) always contains the trivial model. Here, for the consistency notion be more appropriate with our purpose to define revision for the largest family of logics, we propose a more general definition of consistency, the meaning of which is that there is at least a sentence which is not a semantic consequence.\nDefinition 3 (Consistency). T \u2286 Sen is consistent if Cn(T ) 6= Sen.\nProposition 2. For every T \u2286 Sen, T is consistent if and only if Mod(T )\\Triv 6= \u2205.\nProof. Let us prove that Cn(T ) = Sen iff Mod(T )\\Triv = \u2205. Let us first assume that Mod(T ) \\ Triv = \u2205. Therefore, by definition of Cn(T ), this means that the only models that satisfy T are M such that M\u2217 = Sen (if they exist). Hence, we have Cn(T ) = Sen. Conversely, let us assume that Cn(T ) = Sen. This means that every model M such that M\u2217 6= Sen does not belong to Mod(T ), and Mod(T ) \\ Triv = \u2205.\nCorollary 1. For every T \u2286 Sen, T is inconsistent is equivalent to Mod(T ) = Triv.\n3 AGM postulates for revision in satisfaction systems\n3.1 AGM postulates\nAGM postulates for knowledge base revision in satisfaction systems are easily adaptable. We build upon the model-theoretic characterization introduced by Katsuno and Mendelzon (KM) [22] for propositional logic. Note, however, that in propositional logic, a belief base can be represented by a formula, and then KM postulates exploit this property. This is no more the case in our context, but we argue that the postulates are still appropriate. Given two knowledge bases T, T \u2032 \u2286 Sen, T \u25e6 T \u2032 denotes the revision of T by T \u2032, that is, T \u25e6 T \u2032 is obtained by adding consistently new knowledge T \u2032 to the old knowledge base T . Note that T \u25e6 T \u2032 cannot be defined as T \u222a T \u2032 because nothing ensures that T \u222a T \u2032 is consistent. The revision operator has then to change minimally T so that T \u25e6 T \u2032 is consistent. This is what the AGM postulates ensure.\n(G1) If T \u2032 is consistent, then so is T \u25e6 T \u2032. (G2) Mod(T \u25e6 T \u2032) \u2286 Mod(T \u2032). (G3) if T \u222a T \u2032 is consistent, then T \u25e6 T \u2032 = T \u222a T \u2032. (G4) if Cn(T \u20321) = Cn(T \u2032 2), then Mod(T \u25e6 T \u2032 1) = Mod(T \u25e6 T \u2032 2). (G5) Mod((T \u25e6 T \u2032) \u222a T \u2032\u2032) \u2286 Mod(T \u25e6 (T \u2032 \u222a T \u2032\u2032)).\n(G6) if (T \u25e6T \u2032)\u222aT \u2032\u2032 is consistent, then Mod(T \u25e6(T \u2032\u222aT \u2032\u2032)) \u2286 Mod((T \u25e6T \u2032)\u222aT \u2032\u2032).\nIn the literature such as in [22,29], the following stronger version of Postulate (G4) can be found:\n(G\u20194) if Cn(T1) = Cn(T \u20321) and Cn(T2) = Cn(T \u2032 2), then\nMod(T1 \u25e6 T2) = Mod(T \u2032 1 \u25e6 T \u2032 2)\nRemark 1. This stronger version of Postulate (G4) states a complete independence of the syntactical forms of both the original knowledge base and the newly acquired knowledge. The problem with Postulate (G\u20194) is that it is almost never satisfied when we want to preserve the structure of knowledge bases and then apply revision operators over the formulas that compose knowledge bases. Indeed, let us consider in the logic PL the following knowledge bases T1 = {p, q} and T2 = {q \u21d2 p, q} over the signature {p, q}. Obviously, we have that Mod(T1) = Mod(T2) = {\u03bd : p 7\u2192 1, q 7\u2192 1}. Let us consider the knowledge base T \u2032 = {\u00acq}. We have now that T1 \u222a T\n\u2032 (and then T2 \u222a T \u2032) is inconsistent. A way to retrieve the consistency is to replace in T1 and T2 the atomic formula q by \u00acq. Hence, T1 \u25e6 T \u2032 = {p,\u00acq} and T2\u25e6T\n\u2032 = {q \u21d2 p,\u00acq}. Then Mod(T1\u25e6T \u2032) = {\u03bd : p 7\u2192 1, q 7\u2192 0}, Mod(T2\u25e6T \u2032) = {\u03bd : p 7\u2192 1, q 7\u2192 0; \u03bd \u2032 : p 7\u2192 0, q 7\u2192 0}, and Mod(T1 \u25e6 T \u2032) 6= Mod(T2 \u25e6 T \u2032). In [22], the authors bypass the problem by representing any knowledge base K (which is a theory in [22]) by a propositional formula \u03c8 such that K = Cn(\u03c8). Hence, they apply their revision operator on \u03c8 and not on K, and so they lose the structure of the knowledge base K.\nAnother remarkable point to note is that now Postulate (G4) in this weaker form can be derived from the other postulates.\nProposition 3. Postulates (G1)-(G3), (G5) and (G6) imply Postulate (G4).\nProof. Let us suppose that Cn(T \u20321) = Cn(T \u2032 2). Here, three cases have to be considered:\n(1) One of T \u20321 and T \u2032 2 is inconsistent (say T \u2032 1 without loss of generality). Since\nCn(T \u20321) = Cn(T \u2032 2) by hypothesis, T \u2032 2 is also inconsistent. By Postulate (G2), we then have that, for i = 1, 2, Mod(T \u25e6 T \u2032i ) \u2286 Mod(Ti), and Mod(Ti) = Triv (Corollary 1). Hence Mod(T\u25e6T \u2032i ) \u2286 Triv, and Mod(T\u25e6T \u2032 1) = Mod(T\u25e6\nT \u20322) = Triv. (2) Both T \u222aT \u20321 and T \u222aT \u2032 1 are consistent. Since Cn(T \u2032 1) = Cn(T \u2032 2), we know that\nMod(T \u20321) = Mod(T \u2032 2) (Equation 1), and then Mod(T \u222a T \u2032 1) = Mod(T \u222a T \u2032 2). Therefore, by Postulate (G3), we have that Mod(T \u25e6 T \u20321) = Mod(T \u25e6 T \u2032 2).\n(3) T \u20321 and T \u2032 2 are consistent but T \u222a T \u2032 1 or T \u222a T \u2032 2 is not (say T \u222a T \u2032 1). From\nCn(T \u20321) = Cn(T \u2032 2), we derive that T \u222a T \u2032 2 is also inconsistent. By Postulate\n(G1), both T \u25e6 T \u20321 and T \u25e6 T \u2032 2 are consistent. Let M \u2208 Mod(T \u25e6 T \u2032 1). If M \u2208 Triv, then obviously M \u2208 Mod(T \u25e6 T \u20322). Therefore, let us suppose that M 6\u2208 Triv. By Postulate (G2), M \u2208 Mod(T \u20321), and then M \u2208 Mod(T \u2032 2). Let M\u2032 \u2208 Mod(T \u25e6 T \u20322) \\ Triv. Such a model exists as T \u25e6 T \u2032 2 is consistent. By Postulate (G2) and the hypothesis that Cn(T \u20321) = Cn(T \u2032 2), {M,M \u2032}\u2217 contains both T \u20321 and T \u2032 2. Obviously, we have that (T \u25e6 T \u2032 1) \u222a {M,M\n\u2032}\u2217 and (T \u25e6 T \u20322) \u222a {M,M\n\u2032}\u2217 are consistent. Therefore, By Postulates (G5) and (G6), we have that Mod((T \u25e6 T \u20321) \u222a {M,M \u2032}\u2217) = Mod((T \u25e6 (T \u20321 \u222a {M,M \u2032}\u2217) = Mod(T \u25e6 {M,M\u2032}\u2217) and Mod((T \u25e6 T \u20322) \u222a {M,M \u2032}\u2217) = Mod((T \u25e6 (T \u20322 \u222a {M,M\u2032}\u2217) = Mod(T \u25e6{M,M\u2032}\u2217). We can then derive that Mod((T \u25e6T \u20321)\u222a {M,M\u2032}\u2217) = Mod((T \u25e6T \u20322)\u222a{M,M\n\u2032}\u2217), and conclude that M \u2208 Mod(T \u25e6 T \u20322). Similarly, by reversing the roles of T \u2032 1 and T \u2032 2, if M \u2208 Mod(T \u25e6 T \u2032 2), we can conclude that M \u2208 Mod(T \u25e6 T \u20321).\nIntuitively, any revision operator \u25e6 satisfying the six postulates above induces minimal change, that is the models of T \u25e6 T \u2032 are the models of T that are the closest to models of T \u2032, according to some distance for measuring how close are models. This is what will be shown in the next section by establishing a correspondence between AGM postulates and binary relations over models with minimality conditions.\n3.2 Faithful assignment and AGM postulates\nLet M \u2286 Mod. Let be a binary relation over M. We define \u227a as M \u227a M\u2032 if and only if M M\u2032 and M\u2032 6 M. We define Min(M, ) = {M \u2208 M | \u2200M\u2032 \u2208 M,M\u2032 6\u227aM}.\nDefinition 4 (Faithful assignment). An assignment is a mapping that assigns to each knowledge base T a binary relation T over Mod. We say that this assignment is faithful (FA) if the following two conditions are satisfied:\n(1) if M,M\u2032 \u2208 Mod(T ), M6\u227aTM \u2032. (2) for every M \u2208 Mod(T ) and every M\u2032 \u2208 Mod \\Mod(T ), M \u227aT M\u2032.\nA binary relation T assigned to a knowledge base T by a faithful assignment will be also said faithful.\nRemark 2. The definition of FA differs from the one originally given in [22] on two points:\n(1) In [22], a third condition is stated:\n\u2200T, T \u2032 \u2286 Sen,Mod(T ) = Mod(T \u2032) \u21d2 T= T \u2032 .\nAs for (G\u20194), this condition expresses a syntactical independence. (2) It is no longer required for T to be a pre-order. As shown below, the only\nimportant feature to have to make a correspondence between a FA and the fact that \u25e6 satisfies Postulates (G1)-(G6) is that there is a minimal model for T in Mod(T \u2032) as expressed by Theorem 1.\nTheorem 1. Let \u25e6 be a revision operator. \u25e6 satisfies AGM Postulates if and only if there exists a FA that maps each knowledge base T \u2286 Sen to a binary relation T such that for every knowledge base T \u2032 \u2286 Sen:\n\u2022 Mod(T \u25e6 T \u2032) \\ Triv = Min(Mod(T \u2032) \\ Triv, T ); \u2022 if T \u2032 is consistent, then Min(Mod(T \u2032) \\ Triv, T ) 6= \u2205; \u2022 for every T \u2032\u2032 \u2286 Sen, if (T \u25e6T \u2032)\u222aT \u2032\u2032 is consistent, then Min(Mod(T \u2032)\\Triv, T\n) \u2229Mod(T \u2032\u2032) = Min(Mod(T \u2032 \u222a T \u2032\u2032) \\ Triv, T ).\nNote that if T \u2032 is inconsistent, then so is T\u25e6T \u2032, and we can set arbitrarily T\u25e6T \u2032 = T \u2032, which corresponds to a cautious revision. The case where T is inconsistent is not considered in this paper, since in that case other operators could be more relevant than revision, in particular debugging methods (see e.g. [35] for debugging of terminologies, or [31] for base revision for ontology debugging, both in description logics.\nProof. (1) Let us suppose that \u25e6 satisfies AGM Postulates. For every knowledge base T , let us define the binary relation T\u2286 Mod\u00d7Mod by: for all M,M\u2032 \u2208 Mod,\nM T M \u2032 iff\n\n \n \neither M \u2208 Mod(T )\nor M \u2208 Mod(T \u25e6 {M,M\u2032}\u2217) and M\u2032 6\u2208Triv Let us first show that T satisfies the two conditions of FA.\n\u2022 The first condition easily follows from the definition of T . \u2022 To prove the second one, let us assume that M \u2208 Mod(T ) and M\u2032 6\u2208 Mod(T ). Since M \u2208 Mod(T ), we have M T M\u2032. Here two cases have to be considered: (a) M \u2208 Triv. In this case, we directly have by definition that M\u2032 6 T M. (b) M 6\u2208 Triv. Then T \u222a {M,M\u2032}\u2217 is consistent since M \u2208 Mod(T ) \\\nTriv and M \u2208 Mod(M\u2217) \u2286 Mod({M,M\u2032}\u2217). Then by Postulate (G3), we have that T \u25e6 {M,M\u2032}\u2217 = T \u222a {M,M\u2032}\u2217. Therefore, we have that M\u2032 6\u2208Mod(T \u25e6 {M,M\u2032}\u2217), and M\u2032 6 T M.\nHence M \u227aT M\u2032 in both cases. Let us now prove the three supplementary conditions.\n\u2022 First, let us show that Mod(T \u25e6 T \u2032) = Min(Mod(T \u2032) \\ Triv, T ). If T \u2032\nis inconsistent, then by Proposition 2 Mod(T \u2032) \\ Triv = \u2205, and by (G2) Mod(T \u25e6 T \u2032) \u2286 Mod(T \u2032) \u2286 Triv, hence Mod(T \u25e6 T \u2032) \\ Triv = \u2205 = Min(Mod(T \u2032) \\ Triv, T ). Let us assume now that T \u2032 is consistent.\n\u00b7 Let us first show that Mod(T\u25e6T \u2032)\\Triv \u2286 Min(Mod(T \u2032)\\Triv, T ). Let M \u2208 Mod(T\u25e6T \u2032)\\Triv. Let us assume thatM 6\u2208 Min(Mod(T \u2032)\\ Triv, T ). By (G2), M \u2208 Mod(T \u2032) \\ Triv. By hypothesis, there exists M\u2032 \u2208 Mod(T \u2032)\\Triv such that M\u2032 \u227aT M. Here, two cases have to be considered:\n(a) M\u2032 \u2208 Mod(T ). As M\u2032 \u2208 Mod(T \u2032) \\ Triv, then T \u222a T \u2032 is consistent, and then by (G3), T \u25e6 T \u2032 = T \u222a T \u2032. Thus, M \u2208 Mod(T ), and then M T M\u2032, which is a contradiction. (b) M\u2032 6\u2208 Mod(T ). By definition of T , this means that M\u2032 \u2208 Mod(T \u25e6{M,M\u2032}\u2217). As M,M\u2032 \u2208 Mod(T \u2032), by Postulate (G2), (T \u25e6 T \u2032) \u222a {M,M\u2032}\u2217 is consistent, and then by Postulates (G5) and (G6), we have that Mod(T \u25e6 {M,M\u2032}\u2217) = Mod((T \u25e6 T \u2032)\u222a {M,M\u2032}\u2217). By the hypothesis that M\u2032 \u227aT M, we can deduce that M 6\u2208 Mod(T \u25e6 {M,M\u2032}\u2217), whence by Postulate (G6) we have that M 6\u2208 Mod(T \u25e6 T \u2032) \\ Triv, which is a contradiction. Finally we can conclude that M \u2208 Min(Mod(T \u2032) \\ Triv, T ), and then Mod(T \u25e6 T \u2032) \\ Triv \u2286 Min(Mod(T \u2032) \\ Triv, T ).\n\u00b7 Let us now show that Min(Mod(T \u2032) \\ Triv, T ) \u2286 Mod(T \u25e6 T \u2032) \\ Triv. Let M \u2208 Min(Mod(T \u2032) \\ Triv, T ). Let us assume that M 6\u2208 Mod(T \u25e6 T \u2032) \\ Triv. As T \u2032 is consistent, by Postulates (G1) and (G2), there exists M\u2032 \u2208 Mod(T \u25e6 T \u2032) such that M\u2032\u2217 6= Sen, and M\u2032 \u2208 Mod(T \u2032). Since T \u2032 \u2286 {M,M\u2032}\u2217, we also have thatMod(T \u2032\u222a{M,M\u2032}\u2217) = Mod({M,M\u2032}\u2217). By Postulates (G5) and (G6), we can write Mod(T\u25e6 T \u2032) \u2229 Mod({M,M\u2032}\u2217) = Mod(T \u25e6 {M,M\u2032}\u2217), since (T \u25e6 T \u2032) \u222a {M,M\u2032}\u2217 is consistent. Hence, M 6\u2208 Mod(T \u25e6{M,M\u2032}\u2217), and then M\u2032 \u227aT M, which is a contradiction. We can conclude that M \u2208 Mod(T \u25e6T \u2032)\\Triv, and then Min(Mod(T \u2032)\\Triv, T ) \u2286 Mod(T \u25e6 T \u2032) \\ Triv.\n\u2022 Secondly, let us show that Min(Mod(T \u2032)\\Triv, T ) 6= \u2205 if T \u2032 is consistent. By Postulate (G1), we have that T \u25e6T \u2032 is consistent, and then Mod(T \u25e6T \u2032)\\ Triv 6= \u2205. We can directly conclude by the previous point thatMin(Mod(T \u2032)\\ Triv, T ) 6= \u2205. \u2022 Finally, let us show that for every T \u2032, T \u2032\u2032 \u2286 Sen, Min(Mod(T \u2032) \\Triv, T )\u2229Mod(T \u2032\u2032) = Min(Mod(T \u2032\u222aT \u2032\u2032)\\Triv, T ) if (T \u25e6T \u2032)\u222aT \u2032\u2032 is consistent. By (G5) and (G6), we have that Mod(T \u25e6 (T \u2032\u222aT \u2032\u2032)) = Mod((T \u25e6T \u2032)\u222aT \u2032\u2032). Therefore, by the first point, we can directly conclude that Min(Mod(T \u2032) \\ Triv, T ) \u2229Mod(T\n\u2032\u2032) = Min(Mod(T \u2032 \u222a T \u2032\u2032) \\ Triv, T ). (2) Let us now suppose that for a revision operation \u25e6 there exists a FA which\nmaps any knowledge base T \u2286 Sen to a binary relation T\u2286 Mod \u00d7 Mod satisfying the three conditions of Theorem 1. Let us prove that \u25e6 verifies the AGM Postulates. (G1) This postulate directly results from the fact thatMin(Mod(T \u2032)\\Triv, T\n) 6= \u2205 when T \u2032 is consistent, hence Mod(T \u25e6 T \u2032) \\ Triv 6= \u2205. (G2) Let M \u2208 Mod(T \u25e6 T \u2032). If M \u2208 Triv, then obviously M \u2208 Mod(T \u2032).\nNow, if M /\u2208 Triv, then by definition, M \u2208 Min(Mod(T \u2032) \\ Triv, T ).\nThis means that M \u2208 Mod(T \u2032). (G3) Suppose that T \u222a T \u2032 is consistent (hence Mod(T \u222a T \u2032) \\ Triv 6= \u2205).\n\u2022 Let us first prove that Mod(T \u25e6 T \u2032) \u2286 Mod(T \u222a T \u2032). Let M \u2208 Mod(T \u25e6 T \u2032). Here two cases have to be considered:\n(a) M \u2208 Triv. In this case, we obviously have that M \u2208 Mod(T \u222a T \u2032). (b) M 6\u2208 Triv. By definition, M \u2208 Min(Mod(T \u2032) \\ Triv, T ). Hence, we have that M \u2208 Mod(T \u2032). Let us suppose now that M6\u2208Mod(T ). As T is consistent, Mod(T ) \\Triv 6= \u2205 by Proposition 2. Therefore, there exists M\u2032 \u2208 Mod(T ) \\ Triv such that M\u2032 \u227aT M (from M /\u2208 Mod(T ) and the second property of FA), which is a contradiction. Hence M \u2208 Mod(T ) and M \u2208 Mod(T \u222a T \u2032). \u2022 Let us now prove that Mod(T \u222a T \u2032) \u2286 Mod(T \u25e6 T \u2032). Let M \u2208 Mod(T \u222a T \u2032) such that M6\u2208Mod(T \u25e6 T \u2032). Therefore, M \u2208 Mod(T ). By hypothesis, there exists M\u2032 \u2208 Mod(T \u2032) \\ Triv such that M\u2032 \u227aT M (since M /\u2208 Min(Mod(T \u2032) \\ Triv, T )), and then M\u2032 6\u2208Mod(T ) by the first condition of FA. However, by the second condition of FA, we have that M \u227aT M\u2032, which is a contradiction.\nFinally, we can conclude that Mod(T \u25e6 T \u2032) = Mod(T \u222a T \u2032). (G5) Let M \u2208 Mod(T\u25e6T \u2032)\u2229Mod(T \u2032\u2032). Let us assume that M6\u2208Min(Mod(T \u2032\u222a\nT \u2032\u2032)\\Triv, T ). This means that M \u2208 Triv or there existsM\u2032 \u2208 Mod(T \u2032\u222a T \u2032\u2032) such that M\u2032\u2217 6= Sen and M\u2032 \u227aT M. In the first case, we obviously have that M \u2208 Mod(T \u25e6 (T \u2032 \u222a T \u2032\u2032)). In the second case, we then have that M\u2032 \u2208 Mod(T \u2032), and then M\u2032 6\u227aTM since M \u2208 Min(Mod(T \u2032)\\Triv, T ), which is a contradiction. (G6) Let us suppose that (T \u25e6T \u2032)\u222aT \u2032\u2032 is consistent. Let M \u2208 Mod(T \u25e6(T \u2032\u222a T \u2032\u2032)). By hypothesis, either M \u2208 Triv and in this case, obviously we have that M \u2208 Mod((T \u25e6 T \u2032) \u222a T \u2032\u2032), or M \u2208 Min(Mod(T \u2032 \u222a T \u2032\u2032) \\ Triv, T ) as Mod(T \u25e6 (T \u2032 \u222a T \u2032\u2032))\\Triv = Min(Mod(T \u2032 \u222a T \u2032\u2032) \\ Triv, T ). As (T \u25e6T \u2032)\u222aT \u2032\u2032 is consistent, we have that Min(Mod(T \u2032\u222aT \u2032\u2032)\\Triv, T ) = Min(Mod(T \u2032)\\Triv, T )\u2229Mod(T \u2032\u2032) and then M \u2208 Mod((T \u25e6T \u2032)\u222aT \u2032\u2032).\nGiven a revision operator \u25e6 satisfying the AGM postulates, any FA satisfying the supplementary conditions of Theorem 1 will be called FA+. To a revision operator \u25e6 satisfying the AGM postulates, we can associate many FA+. An example of such a FA+ is the mapping f that associates to every T \u2286 Sen the binary relation T defined as follows:\nGiven T \u2032 \u2286 Sen, let us start by defining T \u2032 T \u2286 Mod(T \u2032)\u00d7Mod(T \u2032) as:\nM T \u2032 T M \u2032 \u21d0\u21d2 M \u2208 Mod(T \u25e6 T \u2032) and M\u2032 6\u2208Mod(T \u25e6 T \u2032).\nLet us then set f(T ) = T= \u22c3 T \u2032 T \u2032 T (i.e. M T M \u2032 \u21d4 \u2203T \u2032,M T \u2032 T M \u2032).\nTheorem 2. If \u25e6 satisfies the AGM postulates, then the mapping f defined above is a FA+.\nProof. First, let us show that f is a FA.\n\u2022 Let M,M\u2032 \u2208 Mod(T ). Let us suppose that M \u227aT M\u2032. This means that there exists T \u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032), M \u2208 Mod(T \u25e6 T \u2032) and M\u2032 6\u2208 Mod(T \u25e6T \u2032). Hence we have that T\u222aT \u2032 is consistent, and then by Postulate (G3), T \u25e6T \u2032 = T \u222aT \u2032. We then have that M\u2032 \u2208 Mod(T \u25e6T \u2032) which is a contradiction. \u2022 Let M \u2208 Mod(T ) and let M\u2032 \u2208 Mod \\ Mod(T ). We have that M \u2205T M \u2032,\nand then M T M\u2032 by definition of T . Now, let us suppose that M\u2032 T M. This means that there exists T \u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032), M\u2032 \u2208 Mod(T \u25e6 T \u2032) and M 6\u2208 Mod(T \u25e6 T \u2032). But, as M \u2208 Mod(T ), we have that T \u222a T \u2032 is consistent, and then by Postulate (G3), T \u25e6 T \u2032 = T \u222a T \u2032. Hence, we have that M \u2208 Mod(T \u25e6 T \u2032) which is a contradiction.\nLet us show now the supplementary conditions of Theorem 1.\n\u2022 First, let us show that Mod(T \u25e6 T \u2032) \\ Triv = Min(Mod(T \u2032) \\ Triv, T ). The case where T \u2032 is inconsistent follows the same proof as in Theorem 1. Let us suppose that T \u2032 is consistent. Let M \u2208 Mod(T \u25e6 T \u2032) \\ Triv. Let us suppose that M 6\u2208 Min(Mod(T \u2032) \\ Triv, T ). This means that there exists M\u2032 \u2208 Mod(T \u2032) \\ Triv such that M\u2032 \u227aT M. Therefore, there exists T \u2032\u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032\u2032), M\u2032 \u2208 Mod(T \u25e6 T \u2032\u2032) and M 6\u2208 Mod(T \u25e6 T \u2032\u2032). Hence, both (T \u25e6T \u2032)\u222aT \u2032\u2032 and (T \u25e6T \u2032\u2032)\u222aT \u2032 are consistent, and then by Postulates (G5) and (G6), Mod((T \u25e6T \u2032)\u222aT \u2032\u2032) = Mod((T \u25e6T \u2032\u2032)\u222aT \u2032) = Mod(T \u25e6(T \u2032\u222aT \u2032\u2032)). We can then derive that M \u2208 Mod(T \u25e6 T \u2032\u2032) which is a contradiction. Let M \u2208 Min(Mod(T \u2032) \\ Triv, T ). Let us suppose that M 6\u2208 Mod(T \u25e6 T \u2032) \\ Triv. As T \u2032 is consistent, by Postulates (G1) and (G2), there exists M\u2032 \u2208 Mod(T \u25e6 T \u2032) \\ Triv. By definition of T \u2032\nT , we have that M \u2032 T\n\u2032\nT M, and then M\u2032 T M which is a contradiction.\n\u2022 The proof of the two other conditions corresponds to the one given in Theorem 1.\nActually, the set of FA+ associated with a revision operator satisfying the AGM postulates has a lattice structure. Let f1, f2 be two FA. Let us denote f1 \u2294 f2 (resp. f1 \u2293 f2) the mapping that assigns to each knowledge base T \u2286 Sen the binary relation T= 1T \u222a 2 T (resp. T= 1 T \u2229 2 T ) where fi(T ) = i T for i = 1, 2.\nProposition 4. If f1 and f2 are FA+ for a same revision operator \u25e6, then so are f1 \u2294 f2 and f1 \u2293 f2.\nProof. It is sufficient to show that 1T \u222a 2 T and 1 T \u2229 2 T satisfy Conditions (1) and (2) of Definition 4 plus all the conditions of Theorem 1. Let us first show that they are FA. Let T \u2286 Sen. Let M,M\u2032 \u2208 Mod(T ). By definition of FA, then we have either M6 iTM \u2032 and M\u2032 6 iTM or M i T M\n\u2032 and M\u2032 iT M for i = 1, 2. We then have four cases to consider, but for f1 \u2293 f2(T ) = T (resp. f1 \u2294 f2(T ) = T ), we always end up at either M6 TM\u2032 and M\u2032 6 TM or M T M\u2032 and M\u2032 T M. Likewise, for every M \u2208 Mod(T ) and every M\u2032 \u2208 Mod \\Mod(T ), we have that M \u227aiT M\n\u2032 for i = 1, 2. Therefore, it is obvious to conclude that M \u227aT M\u2032. Now, by the first supplementary condition for 1T and 2 T in Theorem 1, we have for every T \u2032 \u2286 Sen that Min(Mod(T \u2032)\\Triv, 1T ) = Min(Mod(T \u2032)\\Triv, 2T ) = Mod(T \u25e6T \u2032) \\Triv. Hence, we can write that Min(Mod(T \u2032) \\Triv, 1T \u222a 2 T ) = Min(Mod(T \u2032) \\ Triv, 1T \u2229 2 T ) = Min(Mod(T\n\u2032) \\ Triv, iT ) for i = 1, 2. The three supplementary conditions are then straightforward, and this allows us to directly conclude that f1 \u2294 f2 and f1 \u2293 f2 are FA+.\nGiven a revision operator \u25e6, let us denote (FA+(\u25e6),\u2264) the poset of FA+ associated with \u25e6 where \u2264 is the partial order defined by:\nf\u2264g \u21d0\u21d2 \u2200T \u2286 Sen, f(T ) \u2286 g(T )\n(the fact that this relation actually defines a partial order is straightforward). It is easy to show that given f, g \u2208 FA+(\u25e6), f \u2294 g (respectively f \u2293 g) is the least upper bound (respectively greatest lower bound) of {f, g}. Hence, (FA+(\u25e6),\u2264) is a lattice. This lattice is further complete. Indeed, given a subset S \u2286 FA+(\u25e6), its least upper bound is the mapping \u2294S : T 7\u2192 \u22c3\nf\u2208S f(T ), and its greatest lower bound is the mapping \u2293S : T 7\u2192 \u22c2\nf\u2208S f(T ). By extending the proof of Proposition 4, it is easy to show that \u2294S and \u2293S are FA+.\n3.3 Relaxation and AGM postulates\nRelaxations have been introduced in [14,15] in the framework of description logics with the aim of defining dissimilarity between concepts. Here, we propose to generalize this notion in the framework of satisfaction systems.\nDefinition 5 (Relaxation). A relaxation is a mapping \u03c1 : Sen \u2192 Sen satisfying:\nExtensivity \u2200\u03d5 \u2208 Sen,Mod(\u03d5) \u2286 Mod(\u03c1(\u03d5)). Exhaustivity \u2203k \u2208 N,Mod(\u03c1k(\u03d5)) = Mod, where \u03c10 is the identity mapping, and\nfor all k > 0, \u03c1k(\u03d5) = \u03c1(\u03c1k\u22121(\u03d5)).\nLet us observe that relaxations exist if and only if the underlying satisfaction system (Sen,Mod, |=) has tautologies (i.e. formulas \u03d5 \u2208 Sen such that Mod(\u03d5) = Mod). Indeed, when the satisfaction system has tautologies, we can define the trivial relaxation \u03c1 : \u03d5 7\u2192 \u03c8 where \u03c8 is any tautology. Conversely, all relaxations imply that the underlying satisfaction system has tautologies to satisfy the exhaustivity condition.\nThe interest of relaxations is that they give rise to revision operators which have demonstrated their usefulness in practice (see Sections 3.4 and 4).\nNotation 2. Let T \u2286 Sen be a knowledge base. Let K = {k\u03d5 \u2208 N | \u03d5 \u2208 T}, and K\u2032 = {k\u2032\u03d5 \u2208 N | \u03d5 \u2208 T}. Let us note:\n\u2022 \u03c1K(T ) = {\u03c1k\u03d5(\u03d5) | k\u03d5 \u2208 K, \u03d5 \u2208 T}, \u2022 \u2211 K = \u2211\nk\u03d5\u2208K k\u03d5, \u2022 K \u2264 K\u2032 when for every \u03d5 \u2208 T , k\u03d5 \u2264 k\u2032\u03d5, \u2022 K < K\u2032 if K \u2264 K\u2032 and \u2203\u03d5 \u2208 T , k\u03d5 < k\u2032\u03d5.\nIn this notation, k\u03d5 is a number associated with each formula \u03d5 of the knowledge base, which represents intuitively by which amount \u03d5 is relaxed.\nDefinition 6 (Revision order). Let us define \u2291 the binary relation over P(Sen) as follows:\nT \u2032 \u2291 T \u2032\u2032 if \u2203T \u2032\u2032\u2032 \u2286 Sen,Mod(T \u2032\u2032\u2032) = Mod(T \u2032\u2032) and T \u2032 \u2286 T \u2032\u2032\u2032.\nIntuitively, this means that T \u2032 is included in T \u2032\u2032 up to an equivalent knowledge base. The binary relation \u2291 will allow us to define a coherence criterion in the definition of revision operators (see Condition 3 in Definition 7 just below).\nDefinition 7 (Revision based on relaxation). Let \u03c1 be a relaxation. A revision operator over \u03c1 is a mapping \u25e6 : P(Sen)\u00d7 P(Sen) \u2192 P(Sen) satisfying for every T, T \u2032 \u2286 Sen:\nT \u25e6 T \u2032 =\n\n \n \n\u03c1K(T ) \u222a T \u2032 if T \u2032 is consistent\nT \u2032 otherwise\nfor some K = {k\u03d5 \u2208 N | \u03d5 \u2208 T} such that:\n(1) if T \u2032 is consistent, then T \u25e6 T \u2032 is consistent; (2) for every K\u2032 such that \u03c1K \u2032 (T ) \u222a T \u2032 is consistent, \u2211 K \u2264 \u2211\nK\u2032 (minimality on the number of applications of the relaxation);\n(3) for every T \u2032\u2032 \u2291 T \u2032, if T \u25e6 T \u2032\u2032 = \u03c1K \u2032 (T ) \u222a T \u2032\u2032, then K\u2032 \u2264 K.\nIt is important to note that given a relaxation \u03c1, several revision operators can be defined. Without Condition 3 of Definition 7, we could accept revision operators \u25e6 that do not satisfy Postulates (G5) and (G6). Hence, Condition 3 allows us to exclude such operators. To illustrate this, let us consider in FOL the satisfaction\nsystem R = (Sen,Mod, |=) over the signature (S, F, P ) where S = {s}, F = \u2205 and P = {=: s\u00d7 s}. Let us consider T, T \u2032 \u2286 Sen such that:\nT =\n\n     \n     \n\u2203x.\u2203y.(\u00acx = y) \u2227 \u2200z(z = x \u2228 z = y)\n\u2203x.\u2203y.\u2203z.(\u00acx = y \u2227 \u00acy = z \u2227 \u00acx = z)\u2227\n\u2200w(w = x \u2228 w = y \u2228 w = z)\n\n     \n     \nT \u2032 =\n\n     \n     \n\u2200x.x = x\n\u2200x.\u2200y.x = y \u21d2 y = x\n\u2200x.\u2200y.\u2200z.x = y \u2227 y = z \u21d2 x = z\n\n     \n     \nObviously, T \u2032 is consistent. As T does not contain the axioms for equality, it is also consistent. Indeed, the model M with the carrier Ms = {0, 1, 2} and the binary relation =M\u2286 Ms \u00d7Ms defined by =M= {(0, 0), (1, 1), (2, 0)} satisfies T . But T \u222aT \u2032 is not consistent. The reason is that when the meaning of = is the equality, the first axiom of T can only be satisfied by models with two values while the second axiom is satisfied by models with three values. A way to retrieve the consistency is to remove one of the two axioms. This can be modeled by the relaxation \u03c1 that maps each formula to a tautology 3 . But in this case, we have then two options depending on whether we remove and change the first or the second axiom by a tautology, which give rise to two revision operators \u25e61 and \u25e62. In any cases, the first two conditions of Definition 7 are satisfied by both \u25e61 and \u25e62. Now, let us take T \u2032\u2032 = {\u2203x.\u2203y.\u00acx = y} which is satisfied, when added to the axioms in T \u2032, by any model with at least two elements. Hence, (T \u25e61 T \u2032) \u222a T \u2032\u2032 and (T \u25e62 T\n\u2032)\u222aT \u2032\u2032 are consistent. Without the third condition, nothing would prevent to define T \u25e61 (T \u2032 \u222a T \u2032\u2032) (respectively T \u25e62 (T \u2032 \u222a T \u2032\u2032)) by removing and change in T the second (respectively the first) axiom by a tautology which would be a counterexample to Postulates (G5) and (G6). Actually, as shown by the result below, this third condition of Definition 7 entails Postulates (G5) and (G6), and then, by Proposition 3, entails Postulate (G4). However in some situations Condition 3 may be considered as too strong, forcing to relax more than what would be needed to satisfy only Condition 2. This could be typically the case when Condition 2 could be obtained in two different ways, for instance for K\u2032 = {0, 1, 0, 0...} or for K\u2032\u2032 = {1, 0, 0, 0...}. Then taking Cn(T \u2032) = Cn(T \u2032\u2032), and revising T \u25e6 T \u2032 using K\u2032 and T \u25e6 T \u2032\u2032 using K\u2032\u2032 would not meet Condition 3. To satisfy it, relaxation should be done for instance with K = {1, 1, 0, 0...}. Therefore in concrete applications, we will have to find a compromise between Condition 3 and (G4)-(G6) at the price of potential larger relaxations on the one hand, and less relaxation but potentially the loss of (G4)-(G6) on\n3 We will see in Section 3.4 a less trivial but more interesting relaxation in FOL that consists in changing universal quantifiers into existential ones.\nthe other hand.\nNotation 3. In the context of Definition 7, let T, T \u2032 \u2286 Sen be two knowledge bases. If T \u25e6 T \u2032 = \u03c1K(T ) \u222a T \u2032 with K = {k\u03d5 \u2208 N | \u03d5 \u2208 T}, then let us note KT \u2032 T = K.\nTheorem 3. Any revision operator \u25e6 based on a relaxation (Definition 7) satisfies the AGM Postulates.\nProof. \u25e6 obviously satisfies Postulates (G1), (G2) and (G3). To prove (G5)-(G6), let us suppose T, T \u2032, T \u2032\u2032 \u2286 Sen such that (T \u25e6 T \u2032) \u222a T \u2032\u2032 is consistent (the case where (T \u25e6 T \u2032)\u222a T \u2032\u2032 is inconsistent is obvious). This means that \u03c1K T \u2032 T (T )\u222a T \u2032 \u222a T \u2032\u2032 is consistent. Now, obviously we have that T \u2032 \u2291 T \u2032 \u222a T \u2032\u2032. Hence, by the second and the third conditions of Definition 7, we necessarily have that T \u25e6 (T \u2032 \u222a T \u2032\u2032) = \u03c1K T \u2032 T (T ) \u222a T \u2032 \u222a T \u2032\u2032, and then Mod((T \u25e6 T \u2032) \u222a T \u2032\u2032) = Mod(T \u25e6 (T \u2032 \u222a T \u2032\u2032)).\nIn the previous section, we showed that several FA+ can be associated with a given revision operator \u25e6 satisfying the AGM postulates. Here, we define a particular one, which is more specific to revision operators based on relaxation. Let \u03c1 be a relaxation. Let f\u03c1 be the mapping that associates to every T \u2286 Sen the binary relation T defined as follows:\nGiven T \u2032 \u2286 Sen, let us start by defining T \u2032 T \u2286 Mod(T \u2032)\u00d7Mod(T \u2032) as : M T \u2032\nT M \u2032 \u21d0\u21d2\n\u2200K\u2032\u2032\u2265 KT \u2032 T ,M \u2032 \u2208 Mod(\u03c1K \u2032\u2032 (T )) \u21d2 \u2203K\u2032\u2265 KT \u2032 T ,\n\n \n \nK\u2032 < K\u2032\u2032 and\nM \u2208 Mod(\u03c1K \u2032 (T ))\nLet us then set T= \u22c3 T \u2032 T \u2032 T (i.e. M T M \u2032 \u21d4 \u2203T \u2032,M T \u2032 T M \u2032). Let us note that T\u2286 Mod \u00d7Mod because \u2205T\u2286 T .\nIntuitively, it means that T has to be relaxed more to be satisfied by M\u2032 than to be satisfied by M.\nTheorem 4. For any revision operator \u25e6 based on a relaxation \u03c1 as defined in Definition 7, the mapping f\u03c1 is a FA+.\nProof. Let T \u2286 Sen. Let us first show that f\u03c1(T ) = T is faithful.\n\u2022 Obviously, we have for every M,M\u2032 \u2208 Mod(T ) and every T \u2032 \u2286 Sen that both M6 T \u2032\nT M \u2032 and M\u2032 6 T\n\u2032\nT M. Hence the same relations hold for T . \u2022 Let M \u2208 Mod(T ) and let M\u2032 \u2208 Mod \\ Mod(T ). Obviously, we have that\nM \u2205T M \u2032. Let T \u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032) (the case where for all T \u2032 \u2286 SenM or M\u2032 is not in Mod(T \u2032) implies that M and M\u2032 are incomparable by T \u2032\nT , and then we directly have that M \u2032 6 TM). Here two cases have to be\nconsidered:\n(1) M \u2208 Triv. As M\u2032 6\u2208Mod(T ), then M\u2032 6\u2208Triv. Hence, there does not exist K\u2032 < K such that M\u2032 \u2208 Mod(\u03c1K \u2032 (T )). Otherwise, \u03c1K \u2032\n(T ) \u222a T \u2032 would be consistent, which would contradict the hypothesis that T \u25e6 T \u2032 = \u03c1K(T ) \u222a T \u2032. (2) M6\u2208Triv. We have that M \u2208 Mod(T \u222a T \u2032) but M\u2032 6\u2208Mod(T \u222a T \u2032), and then M\u2032 6 T \u2032\nT M By definition of \u25e6. Hence, in both cases we can conclude that M\u2032 6 TM.\nLet us prove that Mod(T \u25e6 T \u2032) \\ Triv = Min(Mod(T \u2032) \\ Triv, T ). This will directly prove that Min(Mod(T \u2032) \\ Triv, T ) 6= \u2205 when T \u2032 is consistent. Indeed, by definition, we have that T \u25e6 T \u2032 is consistent when T \u2032 is consistent, and then Min(Mod(T \u2032)\\Triv, T ) 6= \u2205 if Mod(T \u25e6T \u2032)\\Triv = Min(Mod(T \u2032)\\Triv, T ). If T \u2032 is inconsistent, then so is T \u25e6 T \u2032 by definition. Hence, Mod(T \u25e6 T \u2032) \\ Triv = Min(Mod(T \u2032) \\ Triv, T ) = \u2205. Let us now suppose that T \u2032 is consistent.\n\u2022 Let us show that Mod(T \u25e6 T \u2032) \\ Triv \u2286 Min(Mod(T \u2032) \\ Triv, T ). Let M \u2208 Mod(T \u25e6T \u2032)\\Triv. Let M\u2032 \u2208 Mod(T \u2032)\\Triv. Two cases have to be considered: (1) M\u2032 \u2208 Mod(T \u25e6T \u2032). Obviously, we have both M6 T \u2032\nT M \u2032 and M\u2032 6 T\n\u2032\nT M. Let us show that this is also true for every T \u2032\u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032\u2032). Let us suppose that there exists T \u2032\u2032 \u2286 Sen such that M\u2032 T \u2032\u2032\nT M. By hypothesis, we then have that (T \u25e6 T \u2032) \u222a T \u2032\u2032 is consistent. Therefore, by Conditions 2 and 3 of Definition 7, we have that (T \u25e6 T \u2032) \u222a T \u2032\u2032 = T \u25e6 (T \u2032 \u222a T \u2032\u2032). Hence, we also have that T \u25e6 (T \u2032 \u222a T \u2032\u2032) = \u03c1K T \u2032\nT (T ) \u222a T \u2032 \u222a T \u2032\u2032. Consequently, as T \u2032\u2032 \u2291 T \u2032 \u222a T \u2032\u2032, we have by Condition 3 of Definition 7 that KT \u2032\u2032\nT \u2264 K T \u2032 T . Therefore, as M\u2032 T \u2032\u2032\nT M, we can deduce that there exists K \u2032\u2032 < KT\n\u2032\nT such that M\u2032 \u2208 Mod(\u03c1K \u2032\u2032 (T )). We then have that \u03c1K \u2032\u2032\n(T )\u222aT \u2032 is consistent, and then by Condition 2 of Definition 7, \u2211 KT \u2032\nT \u2264 \u2211 K\u2032\u2032, which is a contradiction. (2) M\u2032 6\u2208Mod(T \u25e6 T \u2032). By definition of T \u2032\nT , we have that M T \u2032 T M \u2032, and there-\nfore M T M\u2032. Finally, we can conclude that M \u2208 Min(Mod(T \u2032) \\ Triv, T ).\n\u2022 Let us now show that Min(Mod(T \u2032) \\ Triv, T ) \u2286 Mod(T \u25e6 T \u2032) \\ Triv. Let M \u2208 Min(Mod(T \u2032) \\ Triv, T ). Let us suppose that M6\u2208Mod(T \u25e6 T \u2032) \\ Triv. As T \u2032 is consistent, then so is T\u25e6T \u2032. Hence, there existsM\u2032 \u2208 Mod(T\u25e6T \u2032)\\Triv. As M \u2208 Mod(T \u2032) \\ Mod(T \u25e6 T \u2032), we have that M\u2032 T \u2032\nT M, and then as M \u2208 Min(Mod(T \u2032) \\ Triv, T ) we also have that M T M\u2032. This means that there exists T \u2032\u2032 \u2286 Sen such that M,M\u2032 \u2208 Mod(T \u2032\u2032) and M T \u2032\u2032\nT M \u2032. By\nhypothesis, we then have that (T\u25e6T \u2032)\u222aT \u2032\u2032 is consistent. Therefore, by Conditions 2 and 3 of Definition 7, we have that (T \u25e6 T \u2032) \u222a T \u2032\u2032 = T \u25e6 (T \u2032 \u222a T \u2032\u2032). Hence, we also have that T \u25e6 (T \u2032 \u222a T \u2032\u2032) = \u03c1K T \u2032\nT (T ) \u222a T \u2032 \u222a T \u2032\u2032. Consequently, we have by Condition 3 of Definition 7 that KT \u2032\u2032\nT \u2264 K T \u2032 T . Hence, there exists K \u2032\u2032 \u2265 KT \u2032\u2032 T such that K\u2032\u2032 < KT \u2032\nT and M \u2208 Mod(\u03c1 K\u2032\u2032(T )). We can then deduce that \u03c1K \u2032\u2032 (T )\u222aT \u2032 is consistent, and then by Condition 2 of Definition 7 we have that \u2211 KT \u2032\nT \u2264 \u2211 K\u2032\u2032, which is a contradiction.\nFinally, to prove the last point, we follow the same steps as in the proof of Theorem 1.\n3.4 Applications\nIn this section, we illustrate our general approach by defining revision operators based on relaxations for the logics PL, HCL, and FOL. We further develop the case of DLs in Section 4, by defining several concrete relaxation operators for different fragments of the DL ALC.\n3.4.1 Revision in PL\nHere, drawing inspiration from Bloch & al.\u2019s works in [7,8] on Morpho-Logics, we define relaxations based on dilations from mathematical morphology [6]. It is well established in PL that knowing a formula is equivalent to knowing the set of its models. Hence, we can identify any propositional formula \u03d5 with the set of its interpretations Mod(\u03d5). To define relaxations in PL, we will apply set-theoretic morphological operations. First, let us recall basic definitions of dilation in mathematical morphology [6]. Let X and B be two subsets of Rn. The dilation of X by the structuring element B, denoted by DB(X), is defined as follows:\nDB(X) = {x \u2208 R n | Bx \u2229X 6= \u2205}\nwhere Bx denotes the translation of B at x. More generally, dilations in any space can be defined in a similar way by considering the structuring element as a binary relationship between elements of this space.\nIn PL, this leads to the following dilation of a formula \u03d5 \u2208 Sen:\nMod(DB(\u03d5)) = {\u03bd \u2208 Mod(\u03a3) | B\u03bd \u2229Mod(\u03d5) 6= \u2205}\nwhere B\u03bd contains all the models that satisfy some relationship with \u03bd. The relationship standardly used is based on a discrete distance \u03b4 between models, and the most commonly used is the Hamming distance dH where dH(\u03bd, \u03bd \u2032) for two propositional models over a same signature is the number of propositional symbols that are instantiated differently in \u03bd and \u03bd \u2032. From any distance \u03b4 between models, a distance from models to a formula is derived as follows: d(\u03bd, \u03d5) = min\u03bd\u2032|=\u03d5\u03b4(\u03bd, \u03bd \u2032). In this case, we can rewrite the dilation of a formula as follows:\nMod(DB(\u03d5)) = {\u03bd \u2208 Mod(\u03a3) | d(\u03bd, \u03d5) \u2264 1}\nThis consists in using the distance ball of radius 1 as structuring element. To ensure the exhaustivity condition to our relaxation, we need to add a condition on distances, the betweenness property [14].\nDefinition 8 (Betweenness property). Let \u03b4 be a discrete distance over a set S. \u03b4 has the betweenness property if for all x, y \u2208 S and all k \u2208 {0, 1, . . . , \u03b4(x, y)}, there exists z \u2208 S such that \u03b4(x, z) = k and \u03b4(z, y) = \u03b4(x, y)\u2212 k.\nThe Hamming distance trivially satisfies the betweenness property. The interest for our purpose of this property is that it allows from any model to reach any other one, and then ensuring the exhaustivity property of relaxation 4 .\nProposition 5. The dilation DB is a relaxation when it is applied to formulas \u03d5 \u2208 Sen for a finite signature, and it is based on a distance between models that satisfies the betweenness property.\nProof. It is extensive. Indeed, for every \u03d5 and for every model \u03bd \u2208 Mod(\u03d5), we have that d(\u03bd, \u03d5) = 0, and then \u03d5 |= DB(\u03d5). Exhaustivity results from the fact that the considered signature is a finite set and from the betweenness property.\n3.4.2 Revision in HCL\nMany works have focused on belief revision involving propositional Horn formulas (cf. [12] to have an overview on these works). Here, we propose to extend relaxations that we have defined in the framework of PL to deal with the Horn fragment of propositional theories. First, let us introduce some notions.\nDefinition 9 (Model intersection). Given a propositional signature \u03a3 and two \u03a3models \u03bd, \u03bd \u2032 : \u03a3 \u2192 {0, 1}, we note \u03bd \u2229 \u03bd \u2032 : \u03a3 \u2192 {0, 1} the \u03a3-model defined by:\np 7\u2192\n\n \n \n1 if \u03bd(p) = \u03bd \u2032(p) = 1\n0 otherwise\nGiven a set of \u03a3-models S, we note\ncl\u2229(S) = S \u222a {\u03bd \u2229 \u03bd \u2032 | \u03bd, \u03bd \u2032 \u2208 S}\ncl\u2229(S) is then the closure of S under intersection of positive atoms.\nIt is well-known that for any set S closed under intersection of positive atoms, there exists a Horn sentence \u03d5 that defines S (i.e. Mod(\u03d5) = S). Given a distance \u03b4 between models, we then define a relaxation \u03c1 as follows: for every Horn formula \u03d5, \u03c1(\u03d5) is any Horn formula \u03d5\u2032 such that Mod(\u03d5\u2032) = cl\u2229(Mod(DB(\u03d5)) (by the previous property, we know that such a formula \u03d5\u2032 exists).\nProposition 6. With the same conditions as in Proposition 5, the mapping \u03c1 is a relaxation.\n4 Hence, dilation of formulas could also be defined by using a distance ball of radius n as structuring element [7].\n3.4.3 Revision in FOL\nA trivial way to define a relaxation in FOL is to map any formula to a tautology. A less trivial and more interesting relaxation is to change universal quantifiers to existential ones. Indeed, given a formula \u03d5 of the form \u2200x.\u03c8. If \u03d5 is not consistent with a given theory T , \u2203x.\u03c8 may be consistent with T (if it cannot be consistent for all values, it can be for some of them). In the following we suppose that given a signature, every formula \u03d5 \u2208 Sen is a disjunction of formulas in prenex form (i.e. \u03d5 is of the form \u2228\nj Q j 1x j 1 . . . Q j nj xjnj .\u03c8j where each Q j i is in {\u2200, \u2203}). Let us define\nthe relaxation \u03c1 as follows, for a tautology \u03c4 :\n\u2022 \u03c1(\u03c4) = \u03c4 ; \u2022 \u03c1(\u22031x1 . . .\u2203nxn.\u03d5) = \u03c4 ; \u2022 Let \u03d5 = Q1x1 . . . Qnxn.\u03c8 be a formula such that the set E\u03d5 = {i, 1 \u2264 i \u2264 n |\nQi = \u2200} 6= \u2205. Then, \u03c1(Q1x1 . . . Qnxn.\u03d5) = \u2228 i\u2208E\u03d5 \u03d5i where \u03d5i = Q \u2032 1x1 . . . Q \u2032 nxn.\u03c8 such that for every j 6= i, 1 \u2264 j \u2264 n, Q\u2032j = Qj and Q \u2032 i = \u2203;\n\u2022 \u03c1( \u2228 j Q j 1x j 1 . . . Q j nj xjnj .\u03c8) = \u2228 j \u03c1(Q j 1x j 1 . . . Q j nj xjnj .\u03c8).\nProposition 7. \u03c1 is a relaxation.\nProof. It is obviously extensive, and exhaustivity results from the fact that in a finite number of steps, we always reach the tautology \u03c4 ."}, {"heading": "4 Relaxation of theories and associated revision operator in DL", "text": "Our idea to define revision operators is to relax the set of models of the old belief until it becomes consistent with the new pieces of knowledge. This is illustrated in Figure 1 where theories are represented as sets of their models. Intermediate steps to define the revision operators are then the definition of formula and theory relaxations. The whole scheme of our framework is provided in Figure 2.\n4.1 Concept relaxation\nAs already explained in Section 3.3, relaxation has been introduced in [14,15]. It has been first defined over concepts, and then extended to formulas. In [14,15], concept relaxation is defined as follows:\nDefinition 10 (Concept relaxation). Given a signature (NC , NR, I), we note C the set of concepts over this signature. A concept relaxation \u03c1 : C \u2192 C is a mapping that satisfies, for all C in C:\n(1) C \u2291 \u03c1(C) (2) \u2203k \u2208 N,\u22a4 \u2291 \u03c1k(C)\nNote that the non-decreasingness property in the original definition of a concept relaxation in [15] is removed here, since it is not needed in our construction.\nA trivial concept relaxation is the operation \u03c1\u22a4 that maps every concept C to \u22a4. Other non-trivial concrete concept relaxations such as the one that changes universal quantifiers to existential ones as in FOL will be detailed next.\n4.2 Formula relaxation and theory relaxation\nA formula relaxation \u03c1F in DL is defined as in Definition 5. From a formula relaxation, we can define a theory relaxation \u03c1K as in Notation 2.\nIn the satisfaction system DL, let \u03c1 be a relaxation for DL. Then from \u03c1 we define a revision operator as in Definition 7. According to Theorem 3, it satisfies the AGM postulates.\nAs mentioned above, Condition 3 in Definition 7 may be considered as too strong in many real world applications. This may be the case in particular in the context of ontological engineering, where one may want to change only one axiom (or a limited number of axioms) instead of the whole theory. We will come back to this point when we will introduce a first example to illustrate relaxation operators in the DL EL.\nIn the following, we introduce concrete relaxation operators suited to the syntax of the logic ALC, as defined in Section 2.1, and its fragments EL and ELU . ELconcept description constructors are existential restriction (\u2203), conjunction (\u2293), \u22a4 and \u22a5, while ELU-concept constructors are those of EL enriched with disjunction (\u2294).\n4.3 Abstract relaxation and retraction operators\nWe propose to define a formula relaxation in two ways (other definitions may also exist). For sentences of the form C \u2291 D, the first proposed approach consists in relaxing the set of models of D while the second one amounts to \u201cretract\u201d the set of models of C.\nFrom any concept relaxation \u03c1, we can define 1 relaxation on formulas We suppose that any signature (NC , NR, I) always contains in NR a relation name r\u22a4 the meaning of which is in any model O, rO\u22a4 = \u2206 O \u00d7\u2206O.\nDefinition 11 (Formula relaxation based on concept relaxation). Let \u03c1 a concept relaxation as in Definition 10. A formula relaxation based on \u03c1, denoted r\u03c1F is defined as follows, for any two complex concepts C and D, any individuals a, b, and any role r:\nr\u03c1F (C \u2291 D) \u2261 C \u2291 \u03c1(D), r\u03c1F (a : C) \u2261 a : \u03c1(C),\nr\u03c1F (\u3008a, b\u3009 : r)) \u2261 \u3008a, b\u3009 : r\u22a4.\nProposition 8. r\u03c1F is a formula relaxation, i.e. extensive and exhaustive.\nProof. It directly follows from the extensivity and exhaustivity of \u03c1.\nAnother strategy for defining a formula relaxation consists in retracting the concept in the left hand side of a sentence of the form C \u2291 D. Before providing this definition we need to formalize this notion of retraction, which could be seen as an anti-relaxation.\nDefinition 12 (Concept retraction). A (concept) retraction is an operator \u03ba : C \u2192 C that satisfies the following two properties for all C in C:\n(1) \u03ba is anti-extensive, i.e. \u03ba(C) \u2291 C, and (2) \u03ba is exhaustive, i.e. \u2200D \u2208 C, \u2203k \u2208 N such that \u03bak(C) \u2291 D.\nDefinition 13 (Formula relaxation based on concept retraction). A formula relaxation based on a concept retraction \u03ba, denoted c\u03c1F , is defined as follows, for any\ntwo complex concepts C and D, any individuals a, b, and any role r:\nc\u03c1F (C \u2291 D) \u2261 \u03ba(C) \u2291 D, c\u03c1F (a : C) \u2261 a : \u22a4,\nc\u03c1F (\u3008a, b\u3009 : r)) \u2261 \u3008a, b\u3009 : r\u22a4.\nA similar construction can be found in [28] for sentences of the form (a : C).\nProposition 9. c\u03c1F is a formula relaxation.\nProof. Extensivity and exhaustivity follow directly from the properties of \u03ba.\nFor coming up with revision operators, it remains to define concrete relaxation and retraction operators at the concept level, according to our general schema in Figure 2. Some examples of retraction and relaxation operators are given below for EL and ELU , respectively.\n4.4 Relaxation and retraction in EL\nEL-Concept Retractions. A trivial concept retraction is the operator \u03ba\u22a5 that maps every concept to \u22a5. This operator is particularly interesting for debugging ontologies expressed in EL [36]. Let us illustrate this operator through the following example adapted from [28] to restrict the language to EL.\nExample 2. Let T = {TWEETY \u2291 BIRD, BIRD \u2291 FLIES} and T \u2032 = {TWEETY \u2293 FLIES \u2291 \u22a5}. Clearly T \u222a T \u2032 is inconsistent. The formula relaxation based on the retraction \u03ba\u22a5 amounts to apply \u03ba\u22a5 to the concept TWEETY resulting in the following new knowledge base {\u22a5 \u2291 BIRD, BIRD \u2291 FLIES} which is now consistent with T \u2032. An alternative solution is to retract the concept BIRD in BIRD \u2291 FLIES which results in the following knowledge base {TWEETY \u2291 BIRD,\u22a5 \u2291 FLIES} which is also consistent with T \u2032. The sets of minimal sum K1 and K2 in Condition 2 of Definition 7 are K1 = {1, 0}, (i.e. k\u03d51 = 1, k\u03d52 = 0, where \u03d51 = TWEETY \u2291 BIRD, \u03d52 = BIRD \u2291 FLIES) and K2 = {0, 1}. However, to ensure Condition 3 of the same definition, we must relax one more time the axioms in T leading to the following knowledge base {\u22a5 \u2291 BIRD,\u22a5 \u2291 FLIES}. The final revision then writes T \u25e6 T \u2032 = {\u22a5 \u2291 BIRD,\u22a5 \u2291 FLIES, TWEETY \u2293 FLIES \u2291 \u22a5}. This revision satisfies the AGM postulates (G1-G6) but may appear too strong, and one may prefer one of the following solutions: T \u25e61T \u2032 = {\u22a5 \u2291 BIRD, BIRD \u2291 FLIES, TWEETY\u2293FLIES \u2291 \u22a5} or T \u25e62 T \u2032 = {TWEETY \u2291 BIRD,\u22a5 \u2291 FLIES, TWEETY \u2293 FLIES \u2291 \u22a5} at the price of loosing (G4)-(G6).\nAlthough the results are rather intuitive, one should note that it is pretty hard to figure out what each DL researcher would like to have as a result in such an exam-\nple, and this enforces the interest of relying on an established theory such as AGM or its extension. In our work we propose operators enjoying a bunch of properties stemming from our adaptation of the AGM theory. Some of them can meet the requirement of a knowledge engineer, and some other may not completely, depending on the context, the ontology, etc.\nEL-Concept Relaxations. Dually, a trivial relaxation is the operator \u03c1\u22a4 that maps every concept to \u22a4. Other non-trivial EL-concept description relaxations have been introduced in [14]. We summarize here some of these operators.\nEL concept descriptions can appropriately be represented as labeled trees, often called EL description trees [3]. An EL description tree is a tree whose nodes are labeled with sets of concept names and whose edges are labeled with role names. An EL concept description\nC \u2261 P1 \u2293 \u00b7 \u00b7 \u00b7 \u2293 Pn \u2293 \u2203r1.C1 \u2293 \u00b7 \u00b7 \u00b7 \u2293 \u2203rm.Cm (2)\nwith Pi \u2208 NC \u222a {\u22a4}, can be translated into a description tree by labeling the root node v0 with {P1, . . . , Pn}, creating an rj successor, and then proceeding inductively by expanding Cj for the rj-successor node for all j \u2208 {1, . . . , m}.\nAn EL-concept description relaxation then amounts to apply simple tree operations. Two relaxations can hence be defined [14]: (i) \u03c1depth that reduces the role depth of each concept by 1, simply by pruning the description tree, and (ii) \u03c1leaves that removes all leaves from a description tree.\n4.5 Relaxations in ELU\nThe relaxation defined above exploits the strong property that an EL concept description is isomorphic to a description tree. This is arguably not true for more expressive DLs. Let us try to go one step further in expressivity and consider the logic ELU . A relaxation operator as introduced in [14] requires a concept description to be in a special normal form, called normal form with grouping of existentials, defined recursively as follows.\nDefinition 14 (Normal form with grouping of existential restrictions). We say that an EL-concept D is written in normal form with grouping of existential restrictions if it is of the form\nD = l\nA\u2208ND\nA \u2293 l\nr\u2208NR\nDr, (3)\nwhere ND \u2286 NC is a set of concept names and the concepts Dr are of the form\nDr = l\nE\u2208CDr\n\u2203r.E, (4)\nwhere no subsumption relation holds between two distinct conjuncts and CDr is a set of complex EL-concepts that are themselves in normal form with grouping of existential restrictions.\nThe purpose of Dr terms is simply to group existential restrictions that share the same role name. For an ELU-concept C we say that C is in normal form if it is of the form (C \u2261 C1 \u2294 C2 \u2294 \u00b7 \u00b7 \u00b7 \u2294 Ck) and each of the Ci is an EL-concept in normal form with grouping of existential restrictions.\nDefinition 15 (Relaxation from normal form [14]). Given an ELU-concept description C we define an operator \u03c1e recursively as follows.\n\u2022 For C = \u22a4 we define \u03c1e(C) = \u22a4, \u2022 For C = Dr, where Dr is a group of existential restrictions as in Equation 4, we\nneed to distinguish two cases: \u00b7 if Dr \u2261 \u2203r.\u22a4 we define \u03c1e(Dr) = \u22a4, and\n\u00b7 ifDr 6\u2261 \u2203r.\u22a4 then we define \u03c1e(Dr) = \u2294\nS\u2286CDr\n(\nd E/\u2208S \u2203r.E \u2293 \u2203r.\u03c1e\n(\nd F\u2208S F\n))\n.\nNote that in the latter case \u22a4 /\u2208 CDr since Dr is in normal form.\n\u2022 ForC = D as in Equation 3 we define \u03c1e(D) = \u2294\nG\u2208CD\n(\n\u03c1e(G)\u2293 d\nH\u2208CD\\{G} H\n)\n,\nwhere CD = ND \u222a {Dr | r \u2208 NR}. \u2022 Finally for C = C1\u2294C2\u2294\u00b7 \u00b7 \u00b7\u2294Ck we set \u03c1e(C) = \u03c1e(C1)\u2294\u03c1e(C2)\u2294\u00b7 \u00b7 \u00b7\u2294\u03c1e(Ck).\nProposition 10. [14] \u03c1e is a relaxation.\nLet us illustrate this operator with an example.\nExample 3. Suppose an agent believes that a person BOB is married to a female judge: T = {BOB \u2291 MALE\u2293\u2203.MARRIEDTO . (FEMALE \u2293 JUDGE)}. Suppose now that due to some obscurantist law, it happens that females are not allowed to be judges. This new belief is captured as T \u2032 = {JUDGE \u2293 FEMALE \u2291 \u22a5}. By applying \u03c1e one can resolve the conflict between the two belief sets. To ease the reading, let us rewrite the concepts as follows: A \u2261 MALE, B \u2261 FEMALE, C \u2261 JUDGE, m \u2261 MARRIEDTO, D \u2261 \u2203MARRIEDTO . (FEMALE \u2293 JUDGE). Hence, from Definition 15 we have \u03c1e(A \u2293D) \u2261 (\u03c1e(A) \u2293D) \u2294 (A \u2293 \u03c1e(D)), with \u03c1e(A) \u2261 \u22a4 and\n\u03c1e(D) \u2261\u2203m.\u03c1e(B \u2293 C) \u2294 (\u2203m.B \u2293 \u2203m.\u03c1e(C)) \u2294 (\u2203m.\u03c1e(B) \u2293 \u2203m.C)\n\u2261\u2203m.(B \u2294 C) \u2294 (\u2203m.B \u2293 \u2203m.\u22a4) \u2294 (\u2203m.\u22a4 \u2293 \u2203m.C)\n\u2261\u2203m.B \u2294 \u2203m.C \u2294 \u2203m.(B \u2294 C) \u2261 \u2203m.B \u2294 \u2203m.C\nThen\n\u03c1e(A \u2293D) \u2261 (\u03c1e(A) \u2293D) \u2294 (A \u2293 \u03c1e(D))\n\u2261(\u22a4 \u2293D) \u2294 (A \u2293 (\u2203m.B \u2294 \u2203m.C))\n\u2261D \u2294 (A \u2293 (\u2203m.B \u2294 \u2203m.C))\nThe new agent\u2019s belief, up to a rewriting, becomes\n{BOB \u2291 \u2203.MARRIEDTO . (FEMALE \u2293 JUDGE) \u2294 (MALE \u2293 (\u2203MARRIED.FEMALE \u2294 \u2203MARRIED.JUDGE)) , JUDGE \u2293 FEMALE \u2291 \u22a5}.\nOne can notice from this example that the relaxation \u03c1e leads to a refined revision operator. Indeed, the resulting relaxed axiom in T emphasizes all the minimal possible changes (through the disjunction operator) on BOB\u2019s condition. This is due to the fact that the relaxation operator \u03c1e corresponds to dilating the set of models of a ball defined from an edit distance on the concept description tree of size one. For more details on the correspondence between this relaxation operator, the set of models and tree edit distances, one can refer to [14].\nAnother possibility for defining a relaxation in ELU is obtained by exploiting the disjunction constructor by augmenting a concept description with a set of exceptions.\nDefinition 16 (Relaxation from exceptions in ELU). Given a set of exceptions E = {E1, \u00b7 \u00b7 \u00b7 , En}, we define a relaxation of degree k of an ELU-concept description C as follows: for a finite set Ek \u2286 E with |Ek| = k, C is relaxed by adding the sets Eij \u2208 E k such that Eij \u2293 C \u2291 \u22a5\n\u03c1kE(C) = C \u2294 Ei1 \u2294 \u00b7 \u00b7 \u00b7 \u2294 Eik .\nProposition 11. \u03c1kE is extensive.\nProof. Extensivity of this operator follows directly from the definition.\nHowever, exhaustivity is not necessarily satisfied unless the exception set includes the \u22a4 concept or the disjunction of some or all of its elements entails the \u22a4 concept.\nIf we consider again Example 2, a relaxation of the formula BIRD \u2291 FLIES using the operator \u03c1kE over the concept FLIES with the exception set E = {TWEETY} results in the formula BIRD \u2291 FLIES \u2294 TWEETY. The new revised knowledge base, if Condition 3 in Definition 7 is not considered, is then {TWEETY \u2291 BIRD, BIRD \u2291 FLIES \u2294 TWEETY, TWEETY \u2293 FLIES \u2291 \u22a5} which is consistent. This is obviously a more refined revision than the one obtained from the operator \u03c1\u22a5, but requires the logic to be equipped with the disjunction connective and the definition of a set of exceptions.\nAnother example involving this relaxation will be discussed in the ALC case (cf. Example 4).\n4.6 Relaxation and retraction in ALC\nWe consider here operators suited to ALC language. Of course, all the operators defined for EL and ELU remain valid.\nALC-Concept Retractions. A first possibility for defining retraction is to remove iteratively from an ALC-concept description one or a set of its subconcepts. A similar construction has been introduced in [28]. Interestingly enough, almost all the operators defined in [20,28] are relaxations.\nDefinition 17 (Retraction from exceptions inALC). Given a set of exceptions E = {E1, \u00b7 \u00b7 \u00b7 , En} and let C be any ALC-concept description. We retract C by constraining it to the elements Eci such that Ei \u2291 C:\n\u03banE(C) = C \u2293 E c 1 \u2293 \u00b7 \u00b7 \u00b7 \u2293 E c n.\nProposition 12. \u03banE is anti-extensive.\nProof. The proof follows from the definition.\nAs for its counterpart relaxation (\u03c1kE ), exhaustivity of \u03ba n E is not necessarily satisfied unless the exception set includes the \u22a5 concept, or the conjunction of some or all of its elements entails the \u22a5 concept.\nConsider again Example 2. We have \u03ba1E(BIRD) = BIRD \u2293 TWEETY c. The resulting revised knowledge base, if Condition 3 in Definition 7 is not considered, is then {TWEETY \u2291 BIRD, BIRD \u2293 TWEETYc \u2291 FLIES, TWEETY \u2293 FLIES \u2291 \u22a5} which is consistent.\nAnother possibility, suggested in [20] and related to operators defined in propositional logic as introduced in [7], consists in applying the retraction at the atomic level. This captures somehow Dalal\u2019s idea of revision operators in propositional logic [10].\nDefinition 18. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qmrm.D, where Qi is a quantifier and D is quantifier-free and in CNF form, i.e. D = E1 \u2293 E2 \u2293 \u00b7 \u00b7 \u00b7En with Ei being disjunctions of possibly negated atomic concepts. Let us define, as in the propositional case [7], \u03bap(D) = dn j=1( \u2294\ni 6=j Ei). Then \u03baDalal(C) = Q1r1 \u00b7 \u00b7 \u00b7Qmrm.\u03bap(D).\nProposition 13. \u03banDalal is a retraction.\nProof. Exhaustivity and anti-extensivity follow from those of \u03bap. Indeed the operator \u03bap is exhaustive and anti-extensive, and if applied n times it reaches the \u22a5\nconcept (see [7] for properties of this operator).\nThis idea can be generalized to consider any retraction defined in ELU .\nDefinition 19. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qmrm.D, where Qi is a quantifier and D is a quantifier-free. Then we define \u03ba\u2229(C) = Q1r1 \u00b7 \u00b7 \u00b7Qmrm.\u03ba n E(D).\nProposition 14. \u03ban\u2229 is anti-extensive.\nProof. The properties of this operator follows from the ones of \u03banE(D). Hence, antiextensivity is verified but not necessarily exhaustivity.\nAnother possible ALC-concept description retraction is obtained by substituting the existential restriction by an universal one. This idea has been sketched in [20] for defining dilation operators (then by transforming \u2200 into \u2203), i.e. special relaxation operators enjoying additional properties [14]. We adapt it here to define retraction in DL syntax.\nDefinition 20. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qnrn.D, where Qi is a quantifier, D is quantifier-free, then we define\n\u03baq(C) = l {Q\u20321r1 \u00b7 \u00b7 \u00b7Q \u2032 nrn.D | \u2203j \u2264 n s.t. Qj = \u2203\nand Q\u2032j = \u2200, and for all i \u2264 n s.t. i 6= j, Q \u2032 i = Qi}\nProposition 15. \u03baq is anti-extensive.\nProof. The proof relies on the following general result:\n\u2200C, \u2200r, \u2200r.C \u2291 \u2203r.C\nIndeed, for each interpretation I, if rIi 6= \u2205, we have\nx \u2208 (\u2200r.C)I \u21d2 (\u2200y, (x, y) \u2208 rI \u21d2 y \u2208 CI) \u21d2 (\u2203y, (x, y) \u2208 rIand y \u2208 CI) \u21d2 x \u2208 (\u2203r.C)I .\nHence (\u2200r.C)I \u2286 (\u2203r.C)I for each I (if rIi = \u2205 it is obvious), and \u2200r.C \u2291 \u2203r.C.\nIn a similar way, we can show, that for any C1, C2, r, and Q \u2208 {\u2203, \u2200}:\nC1 \u2291 C2 \u21d2 Qr.C1 \u2291 Qr.C2.\nNow, let us consider any j such that Qj = \u2203, and set C \u2032 = Qj+1rj+1...Qnrn.D. We have from the first result Q\u2032jrj.C \u2032 \u2291 Qjrj .C \u2032. Applying the second result recursively on each Qi for i < j, we then have\nQ1r1...Qj\u22121rj\u22121Q \u2032 jrj .C \u2032 \u2291 Q1r1...Qj\u22121rj\u22121Qjrj.C \u2032.\nThe same relation holds for the conjunction over any j such that Qj = \u2203, from which we conclude that \u2200C, \u03baq(C) \u2291 C, i.e. \u03baq is anti-extensive.\nNote that for \u03baq exhaustivity can be obtained by further removing recursively the remaining universal quantifiers and apply at the final step any retraction defined above on the concept D.\nALC-Concept Relaxations. Let us now introduce some relaxation operators suited to ALC language.\nDefinition 21. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qmrm.D, where Qi is a quantifier and D is quantifier-free and in DNF form, i.e. D = E1 \u2294 E2 \u2294 \u00b7 \u00b7 \u00b7En with Ei being a conjunction of possibly negated atomic concepts. Define, as in the propositional case [7], \u03c1p(D) = \u2294n j=1( d i 6=j Ei), then \u03c1nDalal(C) = Q1r1 \u00b7 \u00b7 \u00b7Qmrm.\u03c1 n p (D).\nAs for retraction, this idea can be generalized to consider any relaxation defined in ELU .\nDefinition 22. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qnrn.D, where Qi is a quantifier andD is quantifier-free, then we define \u03c1n\u222a(C) = Q1r1 \u00b7 \u00b7 \u00b7Qnrn.\u03c1 n E(D).\nLet us consider another example adapted from the literature to illustrate these operators [28].\nExample 4. Let us consider the following knowledge bases: T = {BOB \u2291 \u2200HASCHILD .RICH, BOB \u2291 \u2203HASCHILD .MARY, MARY \u2291 RICH} and T \u2032 = {BOB \u2291 HASCHILD .JOHN, JOHN \u2291 RICHc}. Relaxing the formula BOB \u2291 \u2200HASCHILD .RICH by applying \u03c1n\u222a to the concept on the right hand side results in the following formula BOB \u2291 \u2200HASCHILD .(RICH\u2294 JOHN) which resolves the conflict between the two knowledge bases.\nA last possibility, dual to the retraction operator given in Definition 20, consists in transforming universal quantifiers to existential ones.\nDefinition 23. Let C be an ALC-concept description of the form Q1r1 \u00b7 \u00b7 \u00b7Qnrn.D, where Qi is a quantifier and D is quantifier-free, then we define a relaxation as:\n\u03c1q(C) = \u2294 {Q\u20321r1 \u00b7 \u00b7 \u00b7Q \u2032 nrn.D | \u2203j \u2264 n s.t. Qj = \u2200 and Q\u2032j = \u2203, and for all i \u2264 n s.t. i 6= j, Q \u2032 i = Qi}\nIf we consider again Example 4, relaxing the formula BOB \u2291 \u2200HASCHILD .RICH by applying \u03c1q to the concept on the right hand side results in the following formula\nBOB \u2291 \u2203HASCHILD .RICH, which resolves the conflict between the two knowledge bases.\nProposition 16. The operators \u03c1Dalal, \u03c1q are extensive and exhaustive. The operators \u03c1\u222a is extensive but not exhaustive.\nProof. The properties of \u03c1Dalal and \u03c1\u222a are directly derived from the definitions and from properties of \u03c1p detailed in [7] and \u03c1E . The proof of \u03c1q being extensive and exhaustive can be found in [20]."}, {"heading": "5 Related work", "text": "Recently a first generalization of AGM revision has been proposed in the framework of Tarskian logics considering minimality criteria on removed formulas [33] following previous works of the same authors for contraction [34]. Representation results that make a correspondence between a large family of logics containing nonclassical logics such as DL and HCL and AGM postulates for revision with such minimality criteria have then been obtained. Here, the proposed generalization also gives similar representation theorems (cf. Theorem 1) but for a different minimality criterion. Indeed, we showed in Section 3.2 that revision operators satisfying Postulates (G1)-(G6) are precisely the ones that accomplish an update with minimal change to the set of models of knowledge bases, generalizing to any institution the approach developed in [22] for the logic PL and [29] for DL. However, our revision operator based on relaxation also has a minimality criterion on transformed formulas. Indeed, a simple consequence of Definition 7 is the property\n(Relevance) Let T, T \u2032 \u2286 Sen be two knowledge bases such that T \u25e6 T \u2032 = \u03c1K(T ) \u222a T \u2032. Then, for every \u03d5 \u2208 T such that k\u03d5 6= 0, \u03c1K \u2032\n(T ) \u222a T \u2032 is inconsistent for K\u2032 = K \\ {k\u03d5} \u222a {k\u2032\u03d5 = 0}.\nThis property states that only formulas that contribute to inconsistencies with T \u2032 are allowed to be transformed. Our property (Relevance) is similar to the property with the same name in [33,34], but for contraction operators, and that states that only the formulas that somehow \u201ccontribute\u201d to derive the formulas to abandon can be removed.\nSince the primary aim of this paper is to show that a more general framework, encompassing different logics, can be useful, it is out of the scope of this paper to provide an overview of all existing relaxation methods. However, some works deserve to be mentioned, since they are based on ideas that show some similarity with the relaxation notion proposed in our framework.\nThe relaxation idea originates from the work on Morpho-Logics, initially introduced in [7,8]. In this seminal work, revision operators (and explanatory relations) were defined through dilation and erosion operators. These operators share some similarities with relaxation and retraction as defined in this paper. Dilation is a suppreserving operator and erosion is inf-preserving, hence both are increasing. Some particular dilations and erosions are exhaustive and extensive while relaxation and retraction operators are defined to be exhaustive and extensive but not necessarily sup- and inf-preserving. Dilation has been further exploited for merging first-order theories in [20].\nIn [1], the notion of partial meet contraction is defined as the intersection of a non empty family of maximal subsets of the theory than do not imply the proposition to be eliminated. Revision is then defined from the Levi identity. The maximal subsets can also be selected according to some choice function. The authors also define a notion of partial meet revision, which can be seen as a special case of the relaxation operator introduced in this paper. In [21], the author also discusses choice functions and compares the postulates for partial meet revision to the AGM postulates. He also highlights the distinction between belief sets (which can be very large) and belief bases (which are not necessarily closed by Cn). More precisely, A is a belief base of a belief set K iff K = Cn(A). A permissive belief revision is defined in [9], based on the notion of weakening. The beliefs which are suppressed by classical revision methods are replaced by weaker forms, which keep the resulting belief set consistent. This notion of weakening is closed to the one of relaxation developed in this paper. In the last decade, several works have studied revision operators in description logics. While most of them concentrated on the adaptation of AGM theory, few works have addressed the definition of concrete operators [24,27,28,26]. For instance, in [24], based on the seminal work in [5], revision in DL is studied by defining strategies to manage inconsistencies and using the notion of knowledge integration (see also the work by Hansson). The authors propose a conjunctive maxiadjustment, for stratified knowledge bases and lexicographic entailment. In [27], weakening operators, that are in fact relaxation operators, are defined. Our work brings a principled formal flavor to these operators. In [26], revision of ontologies in DL is based on the notion of forgetting, which is also a way to manage inconsistencies. The authors propose a model based approach, inspired by Dalal\u2019s revision in PL, and based on a distance between terminologies and on the difference set between two interpretation. The models of the revision T \u25e6 T \u2032 are then the interpretations I for which there exists an interpretation I \u2032 such that the cardinality of the difference set between I and I \u2032 is equal to the distance between T and T \u2032. In [23], updating Aboxes in DL is discussed, and some operators are introduced. The rationality of these operators is not discussed, hence the interest of a formal theory such as the AGM postulates. In [2] an original use of DL revision is introduced for the orchestration of processes. A closely related field is inconsistency handling in ontologies (e.g. [35,36]), with the main difference that the rationality of inconsistency repairing operators is not investigated, as suggested by the AGM theory.\nAs said before, some of our DL-based relaxation operators are closely related to the ones introduced in [28] for knowledge bases revision. Our relaxation-based revision framework, being abstract enough (i.e. defined through easily satisfied properties), encompasses these operators. Moreover, the revision operator defined in [28] considers only inconsistencies due to Abox assertions. Our operators are general in the sense that Abox assertions are handled as any formula of the language."}, {"heading": "6 Conclusion", "text": "The contribution of this paper is threefold. First, we provided a generalization of AGM postulates from a model-theoretic point of view, by defining this operator in an abstract model theory known under the name of satisfaction systems, so as they become applicable to a wide class of non-classical logics. In this framework, we then generalized to any satisfaction systems the characterization of the AGM postulates given by Katsuno and Mendelzon for propositional logic in terms of minimal change with respect to an ordering among interpretations. This work generalizes the previous ones in the area. It also suggests the theory behind satisfaction systems to be a principled framework for dealing with knowledge dynamics with the growing interest on non-classical logics such as DL. We do hope that bridges can thus be built, by working at the cross-road of different areas of theoretical computer sciences.\nSecondly, we proposed a general framework for defining revision operators based on the notion of relaxation. We demonstrated that such a relaxation-based framework for belief revision satisfies the AGM postulates. As a byproduct, we give a principled formal flavor to several operators defined in the literature (e.g. weakening operators defined in DL).\nThirdly, we introduced a bunch of concrete relaxations within the scope of description logics, discussed their properties and illustrated them through simple examples. It was out of the scope of this paper to discuss tools such as OWL. However, the proposed approach could be applied to SROIQ and implemented in OWL, by augmenting a relaxation with operations on complex constructors.\nFuture works will concern the study of the complexity of the introduced operators, the comparison of their induced ordering, and their generalization to more expressive DL as well as other non-classical logics such as first-order Horn logics or equational logics."}], "references": [{"title": "On the logic of theory change", "author": ["C. Alchourron", "P. Gardenfors", "D. Makinson"], "venue": "Journal of Symbolic Logic 50 (2) ", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1985}, {"title": "Constructive DL update and reasoning for modeling and executing the orchestration of heterogeneous processes", "author": ["S. Autexier", "D. Hutter"], "venue": "in: Description Logics", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "Computing least common subsumers in description logics with existential restrictions", "author": ["F. Baader", "R. K\u00fcsters", "R. Molitor"], "venue": "in: International Joint Conference on Artificial Intelligence (IJCAI\u201999), Morgan-Kaufmann", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1999}, {"title": "Axioms for abstract model theory", "author": ["J. Barwise"], "venue": "Ann. Math. Logic 7 ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1974}, {"title": "Weakening conflicting information for iterated revision and knowledge integration", "author": ["S. Benferhat", "S. Kaci", "D. Le Berre", "M.-A. Williams"], "venue": "Artificial Intelligence 153 (1) ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2004}, {"title": "Handbook of Spatial Logics (M", "author": ["I. Bloch", "H. Heijmans", "C. Ronse"], "venue": "Aiello, I. Pratt- Hartman and J. van Benthem, Eds), chap. Mathematical Morphology, Springer-Verlag", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2006}, {"title": "Towards mathematical morpho-logics", "author": ["I. Bloch", "J. Lang"], "venue": "in: B. Bouchon-Meunier, J. Gutierrez-Rios, L. Magdalena, R. Yager (eds.), Technologies for Constructing Intelligent Systems, Springer-Verlag", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2002}, {"title": "A unified Treatment of Knowledge Dynamics", "author": ["I. Bloch", "R. Pino-P\u00e9rez", "C. Uzcategui"], "venue": "in: International Conference on Principles of Knowledge Representation and Reasoning (KR), AAAI Press", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2004}, {"title": "Permissive belief revision", "author": ["M.R. Cravo", "J.P. Cachopo", "A.C. Cachopo", "J.P. Martins"], "venue": "in: Portuguese Conference on Artificial Intelligence, vol. LNAI 2258", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "Investigations into a Theory of Knowledge Base Revision: Preliminary Report", "author": ["M. Dalal"], "venue": "in: Association for the Advancement of Artificial Intelligence (AAAI\u201988)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1988}, {"title": "Revising Horn theories", "author": ["J.-P. Delgrande", "P. Peppas"], "venue": "in: T. Walsh (ed.), 22nd International Joint Conference on Artificial Intelligence (IJCAI), IJCAI/AAAI", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Belief revision in Horn theories", "author": ["J.-P. Delgrande", "P. Peppas"], "venue": "Artificial Intelligence 218 ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "Institution-independent Model Theory", "author": ["R. Diaconescu"], "venue": "Universal Logic, Birkauser", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2008}, {"title": "Concept dissimilarity on tree edit distance and morphological dilatations", "author": ["F. Distel", "J. Atif", "I. Bloch"], "venue": "in: European Conference on Artificial Intelligence (ECAI)", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Concept dissimilarity with triangle inequality", "author": ["F. Distel", "J. Atif", "I. Bloch"], "venue": "in: C. Baral, G. D. Giacomo, T. Eiter (eds.), Fourteenth International Conference on Principles of Knowledge Representation and Reasoning (KR), AAAI Press", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Inconsistencies", "author": ["G. Flouris", "Z. Huang", "J. Pan", "D. Plexousakis", "H. Wache"], "venue": "negations and changes in ontologies, in: 21st AAAI National Conference on Artificial Intelligence", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "On applying the AGM theory to DLs and OWL", "author": ["G. Flouris", "D. Plexousakis", "G. Antoniou"], "venue": "in: The Semantic Web\u2013ISWC 2005, vol. LNCS 5341, Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2005}, {"title": "A study in the foundations of programming methodology: Specifications", "author": ["J.-A. Goguen", "R.-M. Burstall"], "venue": "institutions, charters and parchments, in: D. P. . al. (ed.), Category Theory and Computer Programming, vol. 240 of Lecture Notes in Computer Science, Springer-Verlag", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1985}, {"title": "Institutions: Abstract model theory for specification and programming", "author": ["J.-A. Goguen", "R.-M. Burstall"], "venue": "Journal of the ACM 39 (1) ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1992}, {"title": "Merging First-Order Knowledge using Dilation Operators", "author": ["N. Gorogiannis", "A. Hunter"], "venue": "in: Fifth International Symposium on Foundations of Information and Knowledge Systems, FoIKS\u201908, vol. LNCS 4932", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2008}, {"title": "Knowledge-level analysis of belief base operations", "author": ["S.O. Hansson"], "venue": "Artificial Intelligence 82 (1) ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1996}, {"title": "Propositional knowledge base revision and minimal change", "author": ["H. Katsuno", "A.-O. Mendelzon"], "venue": "Artificial Intelligence 52 ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1991}, {"title": "Updating description logic ABoxes", "author": ["H. Liu", "C. Lutz", "M. Milicic", "F. Wolter"], "venue": "in: KR", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2006}, {"title": "Knowledge integration for description logics", "author": ["T. Meyer", "K. Lee", "R. Booth"], "venue": "in: Association for the Advancement of Artificial Intelligence (AAAI\u201905), vol. 5", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2005}, {"title": "What is a Logic Translation", "author": ["T. Mossakowski", "R. Diaconescu", "A. Tarlecki"], "venue": "Logica Universalis 3 (1) ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2009}, {"title": "J", "author": ["G. Qi"], "venue": "Du, Model-based revision operators for terminologies in description logics., in: IJCAI", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "A revision-based approach to handling inconsistency in description logics", "author": ["G. Qi", "W. Liu", "D. Bell"], "venue": "Artificial Intelligence Review 26 (1-2) ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2006}, {"title": "Knowledge base revision in description logics", "author": ["G. Qi", "W. Liu", "D.-A. Bell"], "venue": "in: M. Fisher, W. V. der Hoek, B. Konev, A. Lisitsa (eds.), European Conference on Logics in Artificial Intelligence (JELIA), vol. LNAI 4160, Springer-Verlag", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2006}, {"title": "A survey of revision approaches in description logics", "author": ["G. Qi", "F. Yang"], "venue": "in: D. Calvanese, G. Lausen (eds.), Web Reasoning and Rule Systems (RR), Second International Conference, vol. 5341 of Lecture Notes in Computer Science, Springer-Verlag", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2008}, {"title": "AGM revision in description logics", "author": ["M.-M. Ribeiro", "R. Wassermann"], "venue": "in: First Workshop on Automated Reasoning about Context and Ontology Evolution (ARCOE)", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Base revision for ontology debugging", "author": ["M.M. Ribeiro", "R. Wassermann"], "venue": "Journal of Logic and Computation 19 (5) ", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2009}, {"title": "More about AGM revision in description logics", "author": ["M.-M. Ribeiro", "R. Wassermann"], "venue": "in: Second Workshop on Automated Reasoning about Context and Ontology Evolution (ARCOE)", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "Minimal change in AGM for non-classical logics", "author": ["M.-M. Ribeiro", "R. Wassermann"], "venue": "in: C. Baral, G. D. Giacomo, T. Eiter (eds.), Fourteenth International Conference on Principles of Knowledge Representation and Reasoning (KR), AAAI Press", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2014}, {"title": "Minimal change: Relevance and recovery revisited", "author": ["M.-M. Ribeiro", "R. Wassermann", "G. Flouris", "G. Antoniou"], "venue": "Artificial Intelligence 201 ", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2013}, {"title": "Non-standard reasoning services for the debugging of description logic terminologies", "author": ["S. Schlobach", "R. Cornet"], "venue": "in: International Joint Conference on Artificial Intelligence (IJCAI\u201903), vol. 3", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2003}, {"title": "Debugging incoherent terminologies", "author": ["S. Schlobach", "Z. Huang", "R. Cornet", "F.V. Harmelen"], "venue": "Journal of Automated Reasoning 39 (3) ", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2007}, {"title": "The Semantic Conception of Truth", "author": ["A. Tarski"], "venue": "Philos. Phenomenological Research 4 ", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1944}, {"title": "On  the Concept of Logical Consequence", "author": ["A.  Tarski"], "venue": "Logic, Semantics, Metamathematics ", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1956}, {"title": "Revising general knowledge bases in description logics", "author": ["Z. Wang", "K. Wang", "R.-W. Topor"], "venue": "in: F. Lin, U. Sattler, M. Truszczynski (eds.), Twelfth International Conference on Principles of Knowledge Representation and Reasoning (KR), AAAI Press", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2010}, {"title": "Extending AGM contraction to arbitrary logics", "author": ["Z. Zhuang", "Z. Wang", "K. Wang", "J. Delgrande"], "venue": "in: 24th International Joint Conference on Artificial Intelligence (IJCAI-15)", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2015}, {"title": "Definability of Horn revision from Horn contraction", "author": ["Z.-Q. Zhuang", "M. Pagnucco", "Y. Zhang"], "venue": "in: 23rd International Joint Conference on Artificial Intelligence (IJCAI), IJCAI/AAAI", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "a set of sentences in a given logic, these changes are governed by a set of postulates proposed for the first time by Alchourr\u00f2n, Gardenfors and Makinson [1], and since known as the AGM theory.", "startOffset": 154, "endOffset": 157}, {"referenceID": 37, "context": "Although defined in the abstract framework of logics given by Tarski [38] (so called Tarskian logics), postulates of the AGM theory make strong assumptions on the considered logics.", "startOffset": 69, "endOffset": 73}, {"referenceID": 0, "context": "Indeed, in [1] the considered logics have to be closed under the standard propositional connectives in {\u2227,\u2228,\u00ac,\u21d2}, to be compact (i.", "startOffset": 11, "endOffset": 14}, {"referenceID": 11, "context": "Recently, in many works, belief change has been studied in such non-classical logics [12,17,33,34].", "startOffset": 85, "endOffset": 98}, {"referenceID": 16, "context": "Recently, in many works, belief change has been studied in such non-classical logics [12,17,33,34].", "startOffset": 85, "endOffset": 98}, {"referenceID": 32, "context": "Recently, in many works, belief change has been studied in such non-classical logics [12,17,33,34].", "startOffset": 85, "endOffset": 98}, {"referenceID": 33, "context": "Recently, in many works, belief change has been studied in such non-classical logics [12,17,33,34].", "startOffset": 85, "endOffset": 98}, {"referenceID": 33, "context": "\u2019s work in [34] that studies contraction at the abstract level of Tarskian logics, and the recent work in [40] on the extension of AGM contraction to arbitrary logics.", "startOffset": 11, "endOffset": 15}, {"referenceID": 39, "context": "\u2019s work in [34] that studies contraction at the abstract level of Tarskian logics, and the recent work in [40] on the extension of AGM contraction to arbitrary logics.", "startOffset": 106, "endOffset": 110}, {"referenceID": 15, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 16, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 26, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 27, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 29, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 31, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 38, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 144, "endOffset": 166}, {"referenceID": 10, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 183, "endOffset": 190}, {"referenceID": 40, "context": "The adaptation of AGM postulates for revision for non-classical logics has been studied but only for specific logics, mainly description logics [16,17,27,28,30,32,39] and Horn logics [11,41].", "startOffset": 183, "endOffset": 190}, {"referenceID": 32, "context": "The reason is that revision can be abstractly defined in terms of expansion and retraction following the Levi identity, but this requires the use of negation, which rules out some non-classical logics [33].", "startOffset": 201, "endOffset": 205}, {"referenceID": 21, "context": "In [22] some AGM postulates are interpreted in terms of minimal change, in the sense that the models of the revision should be as close as possible, according to some metric, to the models of the initial knowledge set.", "startOffset": 3, "endOffset": 7}, {"referenceID": 32, "context": "Recently, both for contraction and revision, generalizations of the AGM theory have been proposed in the framework of Tarskian Logics considering minimality criteria on removed formulas [33,34].", "startOffset": 186, "endOffset": 193}, {"referenceID": 33, "context": "Recently, both for contraction and revision, generalizations of the AGM theory have been proposed in the framework of Tarskian Logics considering minimality criteria on removed formulas [33,34].", "startOffset": 186, "endOffset": 193}, {"referenceID": 17, "context": "We propose here to generalize AGM revision but in an abstract model theory, satisfaction systems [18,25], which formalizes the intuitive notion of logical system, including syntax, semantics and the satisfaction relation.", "startOffset": 97, "endOffset": 104}, {"referenceID": 24, "context": "We propose here to generalize AGM revision but in an abstract model theory, satisfaction systems [18,25], which formalizes the intuitive notion of logical system, including syntax, semantics and the satisfaction relation.", "startOffset": 97, "endOffset": 104}, {"referenceID": 21, "context": "Then, we propose to generalize to any satisfaction system the approach developed in [22] for propositional logic and in [29] for description logics.", "startOffset": 84, "endOffset": 88}, {"referenceID": 28, "context": "Then, we propose to generalize to any satisfaction system the approach developed in [22] for propositional logic and in [29] for description logics.", "startOffset": 120, "endOffset": 124}, {"referenceID": 13, "context": "In this abstract framework, we will also show how to define revision operators from the relaxation notion that has been introduced in description logics to define dissimilarity measures between concepts [14,15] and", "startOffset": 203, "endOffset": 210}, {"referenceID": 14, "context": "In this abstract framework, we will also show how to define revision operators from the relaxation notion that has been introduced in description logics to define dissimilarity measures between concepts [14,15] and", "startOffset": 203, "endOffset": 210}, {"referenceID": 8, "context": "[9,24,28,20].", "startOffset": 0, "endOffset": 12}, {"referenceID": 23, "context": "[9,24,28,20].", "startOffset": 0, "endOffset": 12}, {"referenceID": 27, "context": "[9,24,28,20].", "startOffset": 0, "endOffset": 12}, {"referenceID": 19, "context": "[9,24,28,20].", "startOffset": 0, "endOffset": 12}, {"referenceID": 32, "context": "The first efforts concentrated on the adaptation of contraction postulates, but more recently, the adaptation of revision postulates and the introduction of new minimality criteria were also addressed [33], not necessarily related to the contraction operator, throwing out the need for negation.", "startOffset": 201, "endOffset": 205}, {"referenceID": 27, "context": "One can find in [28] an attempt to adapt the AGM revision postulates to DL in a model-theoretic way, following the seminal work of [22] that translated the AGM postulates in propositional logic semantics.", "startOffset": 16, "endOffset": 20}, {"referenceID": 21, "context": "One can find in [28] an attempt to adapt the AGM revision postulates to DL in a model-theoretic way, following the seminal work of [22] that translated the AGM postulates in propositional logic semantics.", "startOffset": 131, "endOffset": 135}, {"referenceID": 24, "context": "Satisfaction systems [25] (\u201crooms\" in the terminology of [18]) generalize Tarski\u2019s classical \u201csemantic definition of truth\u201d [37] and Barwise\u2019s \u201cTranslation Axiom\u201d [4].", "startOffset": 21, "endOffset": 25}, {"referenceID": 17, "context": "Satisfaction systems [25] (\u201crooms\" in the terminology of [18]) generalize Tarski\u2019s classical \u201csemantic definition of truth\u201d [37] and Barwise\u2019s \u201cTranslation Axiom\u201d [4].", "startOffset": 57, "endOffset": 61}, {"referenceID": 36, "context": "Satisfaction systems [25] (\u201crooms\" in the terminology of [18]) generalize Tarski\u2019s classical \u201csemantic definition of truth\u201d [37] and Barwise\u2019s \u201cTranslation Axiom\u201d [4].", "startOffset": 124, "endOffset": 128}, {"referenceID": 3, "context": "Satisfaction systems [25] (\u201crooms\" in the terminology of [18]) generalize Tarski\u2019s classical \u201csemantic definition of truth\u201d [37] and Barwise\u2019s \u201cTranslation Axiom\u201d [4].", "startOffset": 163, "endOffset": 166}, {"referenceID": 18, "context": "There is an extension of satisfaction systems that takes into account explicitly the notion of signatures, the theory of institutions [19].", "startOffset": 134, "endOffset": 138}, {"referenceID": 37, "context": "Here, we prefer the notation Cn(T ) because it will allow us to make a connection with the abstraction of logics as defined by Tarski [38] and widely used in works dealing with belief change such as revision, expansion or contraction.", "startOffset": 134, "endOffset": 138}, {"referenceID": 12, "context": "The two functions Mod(_) and _ form what is known as a Galois connection in that they satisfy the following properties: for all T, T \u2032 \u2286 Sen and M,M \u2286 Mod, we have (see [13])", "startOffset": 169, "endOffset": 173}, {"referenceID": 37, "context": "Hence, satisfaction systems are Tarskian according to the definition of logics given by Tarski under which a logic is a pair (L, Cn) where L is a set of expressions (formulas) and Cn : P(L) \u2192 P(L) is a mapping that satisfies the inclusion, iteration and monotonicity properties [38].", "startOffset": 278, "endOffset": 282}, {"referenceID": 21, "context": "We build upon the model-theoretic characterization introduced by Katsuno and Mendelzon (KM) [22] for propositional logic.", "startOffset": 92, "endOffset": 96}, {"referenceID": 21, "context": "In the literature such as in [22,29], the following stronger version of Postulate (G4) can be found:", "startOffset": 29, "endOffset": 36}, {"referenceID": 28, "context": "In the literature such as in [22,29], the following stronger version of Postulate (G4) can be found:", "startOffset": 29, "endOffset": 36}, {"referenceID": 21, "context": "In [22], the authors bypass the problem by representing any knowledge base K (which is a theory in [22]) by a propositional formula \u03c8 such that K = Cn(\u03c8).", "startOffset": 3, "endOffset": 7}, {"referenceID": 21, "context": "In [22], the authors bypass the problem by representing any knowledge base K (which is a theory in [22]) by a propositional formula \u03c8 such that K = Cn(\u03c8).", "startOffset": 99, "endOffset": 103}, {"referenceID": 21, "context": "The definition of FA differs from the one originally given in [22] on two points:", "startOffset": 62, "endOffset": 66}, {"referenceID": 21, "context": "(1) In [22], a third condition is stated:", "startOffset": 7, "endOffset": 11}, {"referenceID": 34, "context": "[35] for debugging of terminologies, or [31] for base revision for ontology debugging, both in description logics.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[35] for debugging of terminologies, or [31] for base revision for ontology debugging, both in description logics.", "startOffset": 40, "endOffset": 44}, {"referenceID": 13, "context": "Relaxations have been introduced in [14,15] in the framework of description logics with the aim of defining dissimilarity between concepts.", "startOffset": 36, "endOffset": 43}, {"referenceID": 14, "context": "Relaxations have been introduced in [14,15] in the framework of description logics with the aim of defining dissimilarity between concepts.", "startOffset": 36, "endOffset": 43}, {"referenceID": 6, "context": "\u2019s works in [7,8] on Morpho-Logics, we define relaxations based on dilations from mathematical morphology [6].", "startOffset": 12, "endOffset": 17}, {"referenceID": 7, "context": "\u2019s works in [7,8] on Morpho-Logics, we define relaxations based on dilations from mathematical morphology [6].", "startOffset": 12, "endOffset": 17}, {"referenceID": 5, "context": "\u2019s works in [7,8] on Morpho-Logics, we define relaxations based on dilations from mathematical morphology [6].", "startOffset": 106, "endOffset": 109}, {"referenceID": 5, "context": "First, let us recall basic definitions of dilation in mathematical morphology [6].", "startOffset": 78, "endOffset": 81}, {"referenceID": 13, "context": "To ensure the exhaustivity condition to our relaxation, we need to add a condition on distances, the betweenness property [14].", "startOffset": 122, "endOffset": 126}, {"referenceID": 11, "context": "[12] to have an overview on these works).", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "4 Hence, dilation of formulas could also be defined by using a distance ball of radius n as structuring element [7].", "startOffset": 112, "endOffset": 115}, {"referenceID": 13, "context": "3, relaxation has been introduced in [14,15].", "startOffset": 37, "endOffset": 44}, {"referenceID": 14, "context": "3, relaxation has been introduced in [14,15].", "startOffset": 37, "endOffset": 44}, {"referenceID": 13, "context": "In [14,15], concept relaxation is defined as follows: Definition 10 (Concept relaxation).", "startOffset": 3, "endOffset": 10}, {"referenceID": 14, "context": "In [14,15], concept relaxation is defined as follows: Definition 10 (Concept relaxation).", "startOffset": 3, "endOffset": 10}, {"referenceID": 14, "context": "Note that the non-decreasingness property in the original definition of a concept relaxation in [15] is removed here, since it is not needed in our construction.", "startOffset": 96, "endOffset": 100}, {"referenceID": 27, "context": "A similar construction can be found in [28] for sentences of the form (a : C).", "startOffset": 39, "endOffset": 43}, {"referenceID": 35, "context": "This operator is particularly interesting for debugging ontologies expressed in EL [36].", "startOffset": 83, "endOffset": 87}, {"referenceID": 27, "context": "Let us illustrate this operator through the following example adapted from [28] to restrict the language to EL.", "startOffset": 75, "endOffset": 79}, {"referenceID": 13, "context": "Other non-trivial EL-concept description relaxations have been introduced in [14].", "startOffset": 77, "endOffset": 81}, {"referenceID": 2, "context": "EL concept descriptions can appropriately be represented as labeled trees, often called EL description trees [3].", "startOffset": 109, "endOffset": 112}, {"referenceID": 13, "context": "Two relaxations can hence be defined [14]: (i) \u03c1depth that reduces the role depth of each concept by 1, simply by pruning the description tree, and (ii) \u03c1leaves that removes all leaves from a description tree.", "startOffset": 37, "endOffset": 41}, {"referenceID": 13, "context": "A relaxation operator as introduced in [14] requires a concept description to be in a special normal form, called normal form with grouping of existentials, defined recursively as follows.", "startOffset": 39, "endOffset": 43}, {"referenceID": 13, "context": "Definition 15 (Relaxation from normal form [14]).", "startOffset": 43, "endOffset": 47}, {"referenceID": 13, "context": "[14] \u03c1e is a relaxation.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "For more details on the correspondence between this relaxation operator, the set of models and tree edit distances, one can refer to [14].", "startOffset": 133, "endOffset": 137}, {"referenceID": 27, "context": "A similar construction has been introduced in [28].", "startOffset": 46, "endOffset": 50}, {"referenceID": 19, "context": "Interestingly enough, almost all the operators defined in [20,28] are relaxations.", "startOffset": 58, "endOffset": 65}, {"referenceID": 27, "context": "Interestingly enough, almost all the operators defined in [20,28] are relaxations.", "startOffset": 58, "endOffset": 65}, {"referenceID": 19, "context": "Another possibility, suggested in [20] and related to operators defined in propositional logic as introduced in [7], consists in applying the retraction at the atomic level.", "startOffset": 34, "endOffset": 38}, {"referenceID": 6, "context": "Another possibility, suggested in [20] and related to operators defined in propositional logic as introduced in [7], consists in applying the retraction at the atomic level.", "startOffset": 112, "endOffset": 115}, {"referenceID": 9, "context": "This captures somehow Dalal\u2019s idea of revision operators in propositional logic [10].", "startOffset": 80, "endOffset": 84}, {"referenceID": 6, "context": "Let us define, as in the propositional case [7], \u03bap(D) = dn j=1( \u2294", "startOffset": 44, "endOffset": 47}, {"referenceID": 6, "context": "concept (see [7] for properties of this operator).", "startOffset": 13, "endOffset": 16}, {"referenceID": 19, "context": "This idea has been sketched in [20] for defining dilation operators (then by transforming \u2200 into \u2203), i.", "startOffset": 31, "endOffset": 35}, {"referenceID": 13, "context": "special relaxation operators enjoying additional properties [14].", "startOffset": 60, "endOffset": 64}, {"referenceID": 6, "context": "Define, as in the propositional case [7], \u03c1p(D) = \u2294n j=1( d i 6=j Ei), then \u03c1Dalal(C) = Q1r1 \u00b7 \u00b7 \u00b7Qmrm.", "startOffset": 37, "endOffset": 40}, {"referenceID": 27, "context": "Let us consider another example adapted from the literature to illustrate these operators [28].", "startOffset": 90, "endOffset": 94}, {"referenceID": 6, "context": "The properties of \u03c1Dalal and \u03c1\u222a are directly derived from the definitions and from properties of \u03c1p detailed in [7] and \u03c1E .", "startOffset": 112, "endOffset": 115}, {"referenceID": 19, "context": "The proof of \u03c1q being extensive and exhaustive can be found in [20].", "startOffset": 63, "endOffset": 67}, {"referenceID": 32, "context": "Recently a first generalization of AGM revision has been proposed in the framework of Tarskian logics considering minimality criteria on removed formulas [33] following previous works of the same authors for contraction [34].", "startOffset": 154, "endOffset": 158}, {"referenceID": 33, "context": "Recently a first generalization of AGM revision has been proposed in the framework of Tarskian logics considering minimality criteria on removed formulas [33] following previous works of the same authors for contraction [34].", "startOffset": 220, "endOffset": 224}, {"referenceID": 21, "context": "2 that revision operators satisfying Postulates (G1)-(G6) are precisely the ones that accomplish an update with minimal change to the set of models of knowledge bases, generalizing to any institution the approach developed in [22] for the logic PL and [29] for DL.", "startOffset": 226, "endOffset": 230}, {"referenceID": 28, "context": "2 that revision operators satisfying Postulates (G1)-(G6) are precisely the ones that accomplish an update with minimal change to the set of models of knowledge bases, generalizing to any institution the approach developed in [22] for the logic PL and [29] for DL.", "startOffset": 252, "endOffset": 256}, {"referenceID": 32, "context": "Our property (Relevance) is similar to the property with the same name in [33,34], but for contraction operators, and that states that only the formulas that somehow \u201ccontribute\u201d to derive the formulas to abandon can be removed.", "startOffset": 74, "endOffset": 81}, {"referenceID": 33, "context": "Our property (Relevance) is similar to the property with the same name in [33,34], but for contraction operators, and that states that only the formulas that somehow \u201ccontribute\u201d to derive the formulas to abandon can be removed.", "startOffset": 74, "endOffset": 81}, {"referenceID": 6, "context": "The relaxation idea originates from the work on Morpho-Logics, initially introduced in [7,8].", "startOffset": 87, "endOffset": 92}, {"referenceID": 7, "context": "The relaxation idea originates from the work on Morpho-Logics, initially introduced in [7,8].", "startOffset": 87, "endOffset": 92}, {"referenceID": 19, "context": "Dilation has been further exploited for merging first-order theories in [20].", "startOffset": 72, "endOffset": 76}, {"referenceID": 0, "context": "In [1], the notion of partial meet contraction is defined as the intersection of a non empty family of maximal subsets of the theory than do not imply the proposition to be eliminated.", "startOffset": 3, "endOffset": 6}, {"referenceID": 20, "context": "In [21], the author also discusses choice functions and compares the postulates for partial meet revision to the AGM postulates.", "startOffset": 3, "endOffset": 7}, {"referenceID": 8, "context": "A permissive belief revision is defined in [9], based on the notion of weakening.", "startOffset": 43, "endOffset": 46}, {"referenceID": 23, "context": "While most of them concentrated on the adaptation of AGM theory, few works have addressed the definition of concrete operators [24,27,28,26].", "startOffset": 127, "endOffset": 140}, {"referenceID": 26, "context": "While most of them concentrated on the adaptation of AGM theory, few works have addressed the definition of concrete operators [24,27,28,26].", "startOffset": 127, "endOffset": 140}, {"referenceID": 27, "context": "While most of them concentrated on the adaptation of AGM theory, few works have addressed the definition of concrete operators [24,27,28,26].", "startOffset": 127, "endOffset": 140}, {"referenceID": 25, "context": "While most of them concentrated on the adaptation of AGM theory, few works have addressed the definition of concrete operators [24,27,28,26].", "startOffset": 127, "endOffset": 140}, {"referenceID": 23, "context": "For instance, in [24], based on the seminal work in [5], revision in DL is studied by defining strategies to manage inconsistencies and using the notion of knowledge integration (see also the work by Hansson).", "startOffset": 17, "endOffset": 21}, {"referenceID": 4, "context": "For instance, in [24], based on the seminal work in [5], revision in DL is studied by defining strategies to manage inconsistencies and using the notion of knowledge integration (see also the work by Hansson).", "startOffset": 52, "endOffset": 55}, {"referenceID": 26, "context": "In [27], weakening operators, that are in fact relaxation operators, are defined.", "startOffset": 3, "endOffset": 7}, {"referenceID": 25, "context": "In [26], revision of ontologies in DL is based on the notion of forgetting, which is also a way to manage inconsistencies.", "startOffset": 3, "endOffset": 7}, {"referenceID": 22, "context": "In [23], updating Aboxes in DL is discussed, and some operators are introduced.", "startOffset": 3, "endOffset": 7}, {"referenceID": 1, "context": "In [2] an original use of DL revision is introduced for the orchestration of processes.", "startOffset": 3, "endOffset": 6}, {"referenceID": 34, "context": "[35,36]), with the main difference that the rationality of inconsistency repairing operators is not investigated, as suggested by the AGM theory.", "startOffset": 0, "endOffset": 7}, {"referenceID": 35, "context": "[35,36]), with the main difference that the rationality of inconsistency repairing operators is not investigated, as suggested by the AGM theory.", "startOffset": 0, "endOffset": 7}, {"referenceID": 27, "context": "As said before, some of our DL-based relaxation operators are closely related to the ones introduced in [28] for knowledge bases revision.", "startOffset": 104, "endOffset": 108}, {"referenceID": 27, "context": "Moreover, the revision operator defined in [28] considers only inconsistencies due to Abox assertions.", "startOffset": 43, "endOffset": 47}], "year": 2017, "abstractText": "Belief revision of knowledge bases represented by a set of sentences in a given logic has been extensively studied but for specific logics, mainly propositional, and also recently Horn and description logics. Here, we propose to generalize this operation from a modeltheoretic point of view, by defining revision in an abstract model theory known under the name of satisfaction systems. In this framework, we generalize to any satisfaction systems the characterization of the well known AGM postulates given by Katsuno and Mendelzon for propositional logic in terms of minimal change among interpretations. Moreover, we study how to define revision, satisfying the AGM postulates, from relaxation notions that have been first introduced in description logics to define dissimilarity measures between concepts, and the consequence of which is to relax the set of models of the old belief until it becomes consistent with the new pieces of knowledge. We show how the proposed general framework can be instantiated in different logics such as propositional, first-order, description and Horn logics. In particular for description logics, we introduce several concrete relaxation operators tailored for the description logic ALC and its fragments EL and ELU , discuss their properties and provide some illustrative examples.", "creator": "LaTeX with hyperref package"}}}