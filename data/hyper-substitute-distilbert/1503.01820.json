{"id": "1503.01820", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Mar-2015", "title": "Latent Hierarchical Model for Activity Recognition", "abstract": "moore invented a novel hierarchical model for data capability recognition. in contrast to graphs that successively recognize actions onto activities, our approach jointly models actions and activities making a unified behavior, before their labels are simultaneously differentiated. the tool is embedded with matching loop layer ensuring corresponds able to propose a suitable mesh of contextual elements in each state - state and observation - state pairs. utilizing loops already present among the model, whole ensemble has hardly overall capability - driven setup, meant the exact inference is tractable. instead, the idea is very close above polynomial inference mode learning. the specification of given graphical model parameters programmed with a structured support vector machine ( structured - controller ). each performance - driven approach is used for initialize the model variables ; therefore, fully manual labeling for correlated latent states is required. multiple experimental results from using simulation benchmark processors show that our model remains by state - amongst - the - fashion prediction, and our rendering technique subsequently very efficient.", "histories": [["v1", "Fri, 6 Mar 2015 00:05:12 GMT  (3515kb,D)", "http://arxiv.org/abs/1503.01820v1", null]], "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.CV cs.LG", "authors": ["ninghang hu", "gwenn englebienne", "zhongyu lou", "ben kr\\\"ose"], "accepted": false, "id": "1503.01820"}, "pdf": {"name": "1503.01820.pdf", "metadata": {"source": "CRF", "title": "Latent Hierarchical Model for Activity Recognition", "authors": ["Ninghang Hu", "Gwenn Englebienne", "Zhongyu Lou", "Ben Kr\u00f6se"], "emails": ["n.hu@uva.nl;", "g.englebienne@uva.nl;", "z.lou@uva.nl;", "b.j.a.krose@uva.nl)."], "sections": [{"heading": null, "text": "Index Terms\u2014Human activity recognition, RGB-D perception, Probabilistic Graphical Models, Personal Robots.\nI. INTRODUCTION\nTHE use of robots as companions to help people in theirdaily life is currently being widely studied. Numerous studies have focused on providing people with physical [1], cognitive [2] or social [3] support. To achieve this, a fundamental and necessary task is to recognize human activities. For example, to decide when to offer physical support, a robot needs to recognize that a person is walking. To decide whether to remind people to continue drinking, a robot needs to recognize past drinking activities. To determine whether a person is lonely, a robot needs to detect interactions between people. In this paper, we propose a hierarchical approach to model human activities.\nDifferent types of sensors have been applied to the task of activity recognition [4], [5]. Kasteren et al. [6] adopt a set of simple sensors, i.e. , pressure, contact, and motion sensors, to recognize daily activities of people in a smart home. Hu et al. [7] use a ceiling-mounted color camera to recognize human postures, and the postures are recognized based on still images. Recently, RGB-D sensors, such as the Microsoft Kinect and ASUS Xtion Pro, have become popular in activity recognition because they can capture 2.5D data using structured light, thereby allowing researchers to extract a rich class of depth features for activity recognition. In this work, we equip a robot with an RGB-D sensor to collect sequences of activity data, from which we extract object locations and human skeleton points, as shown in Fig. 1. Based on these observations, our\nThis work was supported by the EU Projects ACCOMPANY (FP7-287624) and MONARCH (FP7-601033).\nThe authors are with the Informatics Institute, University of Amsterdam, The Netherlands (e-mail: n.hu@uva.nl; g.englebienne@uva.nl; z.lou@uva.nl; b.j.a.krose@uva.nl).\nManuscript received xx xx, 2014; revised xx xx, 2014.\ntask is to estimate activities as well as sequences of composing actions.\nWe distinguish between activities and actions as follows. Actions are the atomic movements of a person that relate to at most one object in the environment, e.g. , reaching, placing, opening, and closing. Most of these actions are completed in a relatively short period of time. In contrast, activities refer to a complete sequence that is composed of different actions. For example, microwaving food is an activity that can be decomposed into a number of actions such as opening the microwave, reaching for food, moving food, placing food, and closing the microwave. The relation between actions and activities is illustrated in Fig. 2.\nThe recognition of actions is usually formulated as a sequential prediction problem [8] (see Fig. 2). In this approach, the\nar X\niv :1\n50 3.\n01 82\n0v 1\n[ cs\n.R O\n] 6\nM ar\n2 01\n5\n2 Opening Reaching Moving Placing Closing Microwave Food Actions Activity\nRGB-D video is first divided into smaller video segments so that each segment contains approximately one action. This can be accomplished either by manual annotation or by automated temporal segmentation based on motion features. Spatiotemporal features are extracted for each segment. For realworld tasks in HRI, it is desirable to recognize activities at a higher level whereby the activities are usually performed over a longer duration. The combination of actions and activities forms a sequential model with a hierarchy (Fig. 2).\nMost previous work addresses activity and action recognition as separate tasks [8]\u2013[10], i.e. , the action labels need to be inferred before the activity labels are predicted. In contrast, in this paper, we jointly model actions and activities in a unified framework, where the activity and action labels are learned simultaneously. Our experimental evaluation demonstrates that this framework is beneficial when compared to separate recognition. This can be intuitively understood by considering the case of learning actions: the activity label provides additional constraints to the action labels, which can result in a better estimation of the actions, and vice versa.\nFig. 3 is a graphical representation of our approach. The proposed model of this paper is based on our previous work [11], wherein we recognize the sequence of actions using Conditional Random Fields (CRFs). The model is augmented with a layer of latent nodes to enrich the model\u2019s expressiveness. For simplicity, we use latent variables to refer to the variables in the hidden layer, which are unknown both during training and testing. Labels, in contrast, are known during training but are latent during testing. The latent variables are able to capture such a difference and are able to model the rich variations of the actions. One can imagine that the latent variables represent sub-types of the actions: e.g. , for the action opening, we are able to model the difference between opening a bottle and opening a door using latent variables.\nFor each temporal segment, we preserve the full connectivity among observations, latent variables, and action nodes, thus avoiding making inappropriate conditional independence assumptions. We describe an efficient method of applying exact inference in our graph, whereby collapsing the latent states and target states allows our graphical model to be considered as a linear-chain structure. Applying exact inference under such a structure is very efficient. We use a max-margin approach for learning the parameters of the model. Benefiting from the discriminative framework, our method needs not model the correlation between the input data, thus providing us with a natural way of data fusion.\nThe model was evaluated using the RGB-D data from two different benchmark datasets [9], [12]. The results are compared with a number of the state-of-the-art approaches [8]\u2013[12]. The results show that our model performs better than the state-of-the-art approaches, and the model is more efficient in terms of inference.\nIn summary, the contribution of this paper is a novel Hidden CRF model for jointly predicting activities and their sublevel actions, which outperforms the state of the art both in terms of predictive performance and in computational cost. Our software is open source and freely accessible at http://ninghanghu.eu/activity recognition.html.\nIn this paper, we address the following research questions: \u2022 How important is it to add an activity hierarchy to the\nmodel? \u2022 How important is it to add the latent layer to the model? \u2022 How important is it to joint model actions and activities? \u2022 How does our model compare with state-of-the-art ap-\nproaches? \u2022 How well can the model be generalized to a new prob-\nlem? The remainder of the paper is organized as follows. We describe the related work in Section II. We formalize the model and present the objective function in Section III. The inference and learning algorithms are introduced in Section IV and Section V. We show the implementation details and the comparison of the results with the state-of-the-art approach in Section VI."}, {"heading": "II. RELATED WORK", "text": "The previous works can be categorized into two methodologies. The first methodology divides the approaches based\n3 on the hierarchical layout of the model, i.e. , whether the model contains a single layer or multiple layers. The second methodology is based on the nature of the learning method, i.e. , whether the method is discriminative or generative."}, {"heading": "A. Single-layer Approach and Hierarchical Approach", "text": "Human activity recognition is a key component for HRI, particularly for the re-ablement of the elderly [13]. Depending on the complexity and duration of activities, activity recognition approaches can be separated into two categories [14]: single-layer approaches and hierarchical approaches. Singlelayer approaches [15]\u2013[23] refer to methods that are able to directly recognize human activities from the data without defining any activity hierarchy. Usually, these activities are both simple and short; therefore, no higher level layers are required. Typical activities in this category include walking, waiting, falling, jumping and waving. Nevertheless, in the real world, activities are not always as simple as these basic actions. For example, the activity of preparing breakfast may consist of multiple actions such as opening a fridge, getting a salad and making coffee. Typical hierarchical approaches [9], [11], [24]\u2013[26] first estimate the sub-level actions, and then, the high-level activity labels are inferred based on the action sequences.\nSung et al. [12] proposed a hierarchical maximum entropy Markov model that detects activities from RGB-D videos. They consider the actions as hidden nodes that are learned implicitly. Recently, Koppula et al. [9] presented an interesting approach that models both activities and object affordance as random variables. The object affordance label is defined as the possible manners in which people can interact with an object, e.g. , reachable, movable, and eatable. These nodes are inter-connected to model object-object and object-human interactions. Nodes are connected across the segments to enable temporal interactions. Given a test video, the model jointly estimates both human activities and object affordance labels using a graph-cut algorithm. After the actions are recognized, the activities are estimated using a multi-class SVM. In this paper, we build a hierarchical approach that jointly estimates actions and activities from the RGB-D videos. The inference algorithm is more efficient compared with graph-cut methods."}, {"heading": "B. Generative Models and Discriminative Models", "text": "Many different graphical models, e.g. , Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities. The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9]. The generative models require making assumptions concerning both the correlation of data and how the data are distributed given the activity state. This is risky because the assumptions may not reflect the true attributes of the data. The discriminative models, in contrast, only focus on modeling the posterior probability regardless of how the data are distributed. The robotic and smart environment scenarios are usually equipped\nwith a combination of multiple sensors. Some of these sensors may be highly correlated both in the temporal and spatial domain, e.g. , a pressure sensor on a mattress and a motion sensor above a bed. In these scenarios, the discriminative models provide a natural way of data fusion for human activity recognition.\nThe linear-chain Conditional Random Field (CRF) is one of the most popular discriminative models and has been used for many applications. Linear-chain CRFs are efficient models because the exact inference is tractable. However, these models are limited because they cannot capture the intermediate structures within the target states [32]. By adding an extra layer of latent variables, the model allows for more flexibility and therefore can be used for modeling more complex data. The names of these models, including Hiddenunit CRF [33], Hidden-state CRF [32] or Hidden CRF [31], are inter-changeable in the literature.\nKoppula et al. [9] present a model for the temporal and spatial interactions between humans and objects in loopy CRFs. More specifically, they develop a model that has two types of nodes for representing the action labels of the human and the object affordance labels of the objects. Human nodes and object nodes within the same temporal segment are fully connected. Over time, the nodes are transited to the nodes with the same type. The results show that by modeling the human-object interaction, their model outperforms the earlier work in [12] and [34]. The inference in the loopy graph is solved as a quadratic optimization problem using the graph-cut method [35]. Their inference method, however, is less efficient compared with the exact inference in a linear-chain structure because the graph-cut method requires multiple iterations before convergence; more iterations are usually preferred to ensure that a good solution is obtained.\nAnother study [36] augments an additional layer of latent variables to the linear-chain CRFs. They explicitly model the new latent layer to represent the durations of activities. In contrast to [9], Tang et al. [36] solve the inference problem by reforming the graph into a set of cliques so that the exact inference can be efficiently solved using dynamic programming. In their model, the latent variables and the observation are assumed to be conditionally independent given the target states.\nOur work is different from the previous approaches in terms of both the utilized graphical model and the efficiency of inference. First, similar to [36], our model also uses an extra latent layer. However, instead of explicitly modeling the latent variables, we directly learn the latent variables from the data. Second, we do not make conditional independence assumptions between the latent variables and the observations. Instead, we add one extra edge between them to make the local graph fully connected. Third, although our graph also presents many loops, as in [9], we are able to transform the cyclic graph into a linear-chain structure wherein the exact inference is tractable. The exact inference in our graph only requires two passes of messages across the linear chain structure, which is substantially more efficient than the method in [9]. Finally, we model the interaction between the human and the objects at the feature level instead of modeling the object affordance\n4 as target states. Therefore, the parameters are learned and are directly optimized for activity recognition rather than for making the joint estimation of both object affordance and human activity. Because we apply a data-driven approach to initializing the latent variables, hand labeling of the object affordance is not necessary in our model. Our results show that the model outperforms the state-of-the-art approaches on the CAD120 dataset [9]."}, {"heading": "III. MODELING ACTIVITY HIERARCHY", "text": "The graphical model of our proposed system is illustrated in Fig. 3. Let x = {x1,x2, . . . ,xK |xk \u2208 RD} be the sequence of observations, where K is the total number of temporal segments in the video. Our goal is to predict the most likely underlying action sequence y = {y1, y2, . . . , yK |yk \u2208 Y} and its corresponding activity label A \u2208 H based on the observations. We define x0 as the global features that are extracted from x.\nEach observation xk is a feature vector extracted from the segment k. The form of xk is quite flexible. xk can be collections of data from different sources, e.g. , simple sensor readings, human locations, human poses, and object locations. Some of these observations may be highly correlated with each other, e.g. , wearable accelerate meters and motion sensors would be highly correlated. Because of the discriminative nature of our model, we do not need to model such correlation among the observations.\nWe define z = {z1, z2, . . . , zK |zk \u2208 Z} to be the latent variables in the model. The latent variables, which are implicitly learned from the data, can be considered as modeling the sub-level semantics of the actions. For clarity, one could imagine that yk = 1 refers to the action opening. Then, the joint (yk = 1, zk = 1) can describe opening a microwave, and (yk = 1, zk = 2) can describe opening a bottle. Note that these two sub-types of opening actions differ greatly in the observed videos. However, the latent variables allow us to capture large variations in the same action.\nNext, we will formulate our model in terms of these defined variables. For simplicity, we assume that there are in total Ny actions and Na activities to be recognized, and let us define Nz as the cardinality of the latent variable."}, {"heading": "A. Potential Function", "text": "Our model contains five types of potentials that together form the potential function.\nThe first potential measures the score of making an observation xk with a joint-state assignment (zk, yk). We define \u03a6(xk) to be the function that maps the input data into the feature space. w is a matrix that contains model parameters.\n\u03c81(yk, zk,xk;w1) = w1(yk, zk) \u00b7 \u03a6(xk) (1)\nwhere w1 \u2208 RY\u00d7Z\u00d7D and w1(yk, zk) is the concatenation of the parameters that corresponds to yk and zk.\nThis potential models the full connectivity among yk, zk and xk and avoids making any conditional independence assumptions. It is more accurate to have such a structure because zk and xk may not be conditionally independent over a given yk\nin many cases. Let us consider the aforementioned example. Knowing that the action is opening, whether the latent state refers to opening a microwave or opening a bottle depends on how the opening action is performed in the observed video, i.e. , the latent state and the observation are inter-dependent given the action label.\nThe second potential measures the score of coupling yk with zk. The score can be considered as either the bias entry of (1) or the prior of seeing the joint state (yk, zk).\n\u03c82(yk, zk;w2) = w2(yk, zk) (2)\nwhere w2 represents the parameter of the second potential with w2 \u2208 RY\u00d7Z .\nThe third potential characterizes the transition score from the joint state (yk\u22121, zk\u22121) to (yk, zk). Comparing with the normal transition potentials [31], our model leverages the latent variable zk for modeling richer contextual information over consecutive temporal segments. Our model not only contain the transition between the action states but also captures the sub-level context using the latent variables.\n\u03c83(yk\u22121, zk\u22121, yk, zk;w3) = w3(yk\u22121, zk\u22121, yk, zk) (3)\nwhere the potential is parameterized by w3 \u2208 RY\u00d7Z\u00d7Y\u00d7Z . The fourth potential models the compatibility among consecutive action pairs and the activity.\n\u03c84(yk\u22121, yk, A;w4) = w4(yk\u22121, yk, A) (4)\nwhere w4 \u2208 RY\u00d7Y\u00d7H and w4(yk\u22121, yk, A) is a scalar that reflects the compatibility between the transition of an action and the activity label.\nThe last potential models the compatibility between the activity label A and the global features x0.\n\u03c85(A,x0;w5) = w5(A) \u00b7 \u03a6(x0) (5)\nwhere the parameters w5 \u2208 RH can be interpreted as a global filter that favors certain combinations of x0 and A.\nSumming all potentials over the entire sequence, we can write the final potential function of our model as follows:\nF (A,y, z,x;w) = K\u2211 k=1 w1(yk, zk) \u00b7 \u03a6(xk) + K\u2211 k=1 w2(yk, zk)\n+ K\u2211 k=2 w3(yk\u22121, zk\u22121, yk, zk) + K\u2211 k=2 w4(yk\u22121, yk, A) + w5(A) \u00b7 \u03a6(x0) (6)\nThe potential function evaluates the matching score between the joint states (A,y, z) and the input (x, x0). The score equals the un-normalized joint probability in the log space. The objective function can be rewritten in a more general linear form F (y, z,x;w) = w \u00b7 \u03a8(y, z,x). Therefore, the model is in the class of log-linear models.\nNote that it is not necessary to explicitly model the latent variables; rather, the latent variables can be automatically learned from the training data. Theoretically, the latent variables can represent any form of data, e.g. , time duration and action primitives, as long as the data can be used to facilitate the task. The optimization of the latent model, however, may\n5 converge to a local minimum. The initialization of the random variables is therefore of great importance. We compare three initialization strategies in this paper. Details of the latent variable initialization will be discussed in Section VI-B1.\nOne may notice that our graphical model has many loops, which in general makes the exact inference intractable. Because our graph complies with the semi-Markov property, we will now show how we benefit from such a structure to obtain efficient inference and learning.\nIV. INFERENCE\nGiven the graph and the parameters, inference is used to find the most likely joint state (A,y, z) that maximizes the objective function.\n(A\u2217,y\u2217, z\u2217) = argmax (A,y,z)\u2208H\u00d7Y\u00d7Z F (A,y, z,x;w) (7)\nGenerally, solving (7) is an NP-hard problem that requires the evaluation of the objective function over an exponential number of state sequences. Exact inference is preferable because it is guaranteed to find the global optimum. However, the exact inference usually can only be applied efficiently when the graph is acyclic. In contrast, approximate inference is more suitable for loopy graphs but may take longer to converge and is likely to obtain a local optimum. Although our graph contains loops, we can transform the graph into a linear-chain structure, in which the exact inference becomes tractable. If we collapse the latent variable zk with yk and A into a single factor, the edges among zk, yk and A become the internal factor of the new node, and the transition edges collapse into a single transition edge. This results in a typical linear-chain CRF, where the cardinality of the new nodes is Ny\u00d7Nz\u00d7NA. In the linear-chain CRF, the exact inference can be efficiently performed using dynamic programming [37].\nUsing the chain property, we can write the following recursion procedure for computing the maximal score over all possible assignments of y, z and A.\nVk(A, yk, zk) =w1(yk, zk) \u00b7 \u03a6(xk) + w2(yk, zk) + max\n(yk\u22121,zk\u22121)\u2208Y\u00d7Z {w3(yk\u22121, zk\u22121, yk, zk)\n+ w4(yk\u22121, yk, A) + Vk\u22121(A, yk\u22121, zk\u22121)} (8)\nThe above function is evaluated iteratively across the entire sequence. For each iteration, we record the joint state (yk\u22121, zk\u22121) that contributes to the max. When the last segment is computed, the optimal assignment of segment K can be computed as\nA\u2217, y\u2217K , z \u2217 K = argmax\nA,yK ,zK\nVK(A, yK , zK) + w5(A) \u00b7 \u03a6(x0) (9)\nKnowing the optimal assignment at K, we can track back the best assignment in the previous time step K \u2212 1. The process continues until all y\u2217 and z\u2217 have been assigned, i.e. , the inference problem in (7) is solved.\nComputing (8) once involves O(NyNz) computations. In total, (8) needs to be evaluated for all possible assignments of (yk, zk, NA); thus, it is computed NyNz times. The total\ncomputational cost is, therefore, O(N2y N 2 z NAK). Such computation is manageable when NyNz is not very large, which is usually the case for the tasks of activity recognition.\nNext, we show how we can learn the parameters using the max-margin approach."}, {"heading": "V. LEARNING", "text": "We use the max-margin approach for learning the parameters in our graphical model. Given a set of N training examples, \u3008x(n),y(n), A(n)\u3009 (n = 1, 2, \u00b7 \u00b7 \u00b7 , N), we would like to learn the model parameters w that can produce the activity label A and action labels y given a new test input x. Note that both activities and action labels are observed during training. The latent variables z are unobserved and will be automatically inferred from the training process.\nThe goal of learning is to find the optimal model parameters w that minimize the objective function. A regularization term is used to avoid over-fitting.\nmin w\n{ 1\n2 \u2016w\u20162 + C N\u2211 i=1 \u2206(y(i), y\u0302, A(i), A\u0302)\n} (10)\nwhere C is a normalization constant that is used to provide a balance between the model complexity and fitting rate.\nThe loss function \u2206(y(i), y\u0302, A(i), A\u0302) measures the cost of making incorrect predictions. y\u0302 and A\u0302 are the most likely action and activity labels that are computed from (7). The loss function in (11) returns zero when the prediction is exactly the same as the ground truth; otherwise, it counts the number of disagreed elements.\n\u2206(y(i), y\u0302, A(i), A\u0302) = \u03bb1(A(i) = A\u0302) + 1\nK K\u2211 k=1 1(y (i) k = y\u0302k)\n(11) where 1(\u00b7) is an indicator function and 0 \u2264 \u03bb \u2264 1 is a scalar weight that balances between the two loss terms.\nThis object function can be viewed as a generalized form of our previous work [11], where we recognize only the sequence of actions. This is can be performed by simply setting \u03bb to 0 and leaving the graphical structure unchanged. The learning framework then only tracks the incorrectly predicted actions, regardless of the activities.\nDirectly optimizing (10) is not possible because the loss function involves computing the argmax in (7). Following [38] and [39], we substitute the loss function in (10) by the margin rescaling surrogate, which serves as an upper-bound of the loss function.\nmin w {1 2 \u2016w\u20162 + C n\u2211 i=1 max A,y,z [\u2206(y(i),y, A(i), A)+\nF (x(i),y, A,z,w)]\u2212 C n\u2211\ni=1\nmax z\nF (x(i),y(i), A(i), z,w)}\n(12)\nThe second term in (12) can be solved using the augmented inference, i.e. , by plugging in the loss function as an extra factor in the graph, the term can be solved in the same way\n6 as the inference problem using (7). Similarly, the third term of (12) can be solved by adding y(i) and A(i) as the evidence into the graph and then applying inference using (7). Because the exact inference is tractable in our graphical model, both of the terms can be computed very efficiently.\nNote that (12) is the summation of a convex and concave function. This can be solved with the Concave-Convex Procedure (CCCP) [40]. By substituting the concave function with its tangent hyperplane function, which serves as an upper bound of the concave function, the concave term is transformed into a linear function. Thus, (12) becomes convex again.\nWe can rewrite (12) in the form of minimizing a function subject to a set of constraints by adding slack variables\nmin w,\u03be {1 2 \u2016w\u20162+C n\u2211 i=1 \u03bei} (13)\ns.t. \u2200i \u2208 {1, 2, . . . , n},\u2200y \u2208 Y F (x(i),y(i), A(i), z\u2217,w)\u2212F (x(i),y, A,z,w)\n\u2265 \u2206(y(i),y, A(i), A)\u2212 \u03bei\nwhere z\u2217 is the most likely latent states that are inferred given the training data.\nNote that there are an exponential number of constraints in (13). This can be solved using the cutting-plane method [41].\nAnother intuitive method of understanding the CCCP algorithm is to consider the algorithm as one that solves the learning problem with incomplete data using ExpectationMaximization (EM) [42]. In our training data, the latent variables are unknown. We can start by initializing the latent variables. Once we have the latent variables, the data become complete. Then, we can use the standard Structured-SVM to learn the model parameters (M-step). Subsequently, we can update the latent states again using the parameters that are learned (E-step). The iteration continues until convergence.\nThe CCCP algorithm decreases the objective function in each iteration. However, the algorithm cannot guarantee a global optimum. To avoid being trapped in a local minimum, we present three different initialization strategies, and details will be presented in Section VI-B1.\nNote that the inference algorithm is extensively used in learning. Because we are able to compute the exact inference by transforming the loopy graph into a linear-chain graph, our learning algorithm is much faster and more accurate compared with the other approaches with approximate inference."}, {"heading": "VI. EXPERIMENTS AND RESULTS", "text": "We implemented the proposed model, denoted as full model, along with its three variations. Specifically, the first model recognizes only low-level actions, the second model recognizes high-level activities, and the third model recognizes activities based on actions. All models were evaluated on two different datasets. The results from the different models were compared to gain insight into our research questions (in Section I). The full model is also shown to outperform the state-of-the-art methods."}, {"heading": "A. Datasets", "text": "The methods were evaluated on two benchmark datasets, i.e. , CAD-60 [12] and CAD-120 [9]. Both of the datasets contain sequences of color and depth images that were collected by a RGB-D sensor. Skeleton joints of the person are obtained using OpenNI1.\nThe two datasets are quite different from each other; therefore, they can be used to test the generalizability of our methods. The CAD-60 dataset consists of 12 human action labels and no activity labels. The actions include rinsing mouth, brushing teeth, wearing contact lens, talking on the phone, drinking water, opening pill container, cooking (chopping), cooking (stirring), talking on couch, relaxing on couch, writing on white board, and working on computer. These actions are performed by 4 different subjects in 5 different environments, i.e. , a kitchen, a bedroom, a bathroom, a living room, and an office. In total, the dataset includes approximately 60 videos, and each video contains one action label. In contrast, the CAD-120 dataset [9] contains 126 RGBD videos, and each video contains one activity and a sequence of actions. There are in total 10 activities defined in the dataset, including making cereal, taking medicine, stacking objects, unstacking objects, microwaving food, picking up objects, cleaning objects, taking food, arranging objects, and having a meal. Fig. 4 shows various sample images of these activities. In addition, the dataset also consists of 10 sub-level actions, i.e. , reaching, moving, pouring, eating, drinking, opening, placing, closing, scrubbing, and null. The objects in CAD-120 are automatically detected as in [9], and the locations of the objects are also provided by the dataset.\nThe two datasets are very challenging in the following aspects. a) The activities in the dataset are performed by four different actors. The actors behave quite differently, e.g. , in terms of being left or right handed, being viewed from a front view or side view, and sitting or standing. b) There is a large variation even for the same action, e.g. , the action opening can refer to opening a bottle or opening the microwave. Although both of actions have the same label, they appear significantly different from each other in the video. c) Partial or full occlusion is also a very challenging aspect for this dataset. e.g. in certain videos, the actors\u2019 legs are completely occluded by the table, and objects are frequently occluded by the other objects. This makes it difficult to obtain accurate object locations as well as body skeletons; therefore, the generated data are noisy.\nA number of recent approaches [8]\u2013[12] have been evaluated on these two datasets; therefore, the results can be directly compared. To ensure a fair comparison, the same input features are extracted following [9]. Specifically, we have object features \u03c6o(xk) \u2208 R180, object-object interaction features \u03c6oo(xk) \u2208 R200, object-subject relation features \u03c6oa(xk) \u2208 R400, and the temporal object and subject features \u03c6t(xk) \u2208 R200. For CAD-120, we extract the complete set of features from the object locations, which are provided by the dataset. For CAD-60 dataset, only skeletal features are extracted because there is no object information. These\n1http://structure.io/openni\nfeatures are concatenated into a single feature vector, which is considered as the observation of one action segment, i.e. , \u03a6(xk).\nB. Implemented Models\nIn this section, we describe the three baseline models in detail, followed by the introduction of the full model. Note that all of the models were first evaluated on the CAD-120 dataset. To test the generalizability of the model, the same experiments are repeated using the CAD-60 dataset. Note that the CAD-60 dataset contains no activity labels, but it has additional labels to indicate the environments. In our experiments, we treat these additional labels as if they were activities; thus, the model structure is left unchanged compared with the experiments on CAD-120. The only difference is that we jointly model the actions with the environments instead of the activities.\n1) Recognize Only Low-level Actions: The first model is adopted from our previous work [11], which predicts action labels based on the video sequence. This model is a singlelayer approach that only contains the low-level layer of nodes. By setting the weight \u03bb to zero, the model focuses only on predicting correct action labels regardless of the activity label; therefore, the model can be considered as a special case of the full model. The parameters of this model are learned with the Structured-SVM framework [38]. We use the margin rescaling surrogate as the loss. For optimization, we use the 1-slack algorithm (primal), as described in [43].\nTo initialize the latent states on CAD-120, we adopt three different initialization strategies. a) Random initialization. The latent states are randomly selected. b) A data-driven approach. We apply clustering on the input data x. The number of clusters is set to be the same as the number of latent states. We run K-means for 10 times. Then, we choose the best clustering results based on minimal within-cluster distances. The labels of the clusters are assigned as the initial latent states. c) Initialized by Object affordance. The object affordance labels are provided by the CAD-120 dataset, which are used for training in [9]. We apply the K-means clustering upon the\naffordance labels. As the affordance labels are categorical, we use 1-of-N encoding to transform the affordance labels into binary values for clustering. The CAD-60 dataset do not contain affordance labels, therefore the latent variables are initialized only with the data-driven approach.\n2) Recognize Only High-level Activities: The second model contains only a single layer for recognizing activities, i.e. , we disregard the layer of actions; instead, we learn a direct mapping from video features to activity labels. Similar to the first model, the parameters are learned with the StructuredSVM, but the model contains no transition.\n3) Recognize Activities Based on Action Sequences: This approach is built upon the first baseline. Based on the inferred action labels, we learn a model to classify activities. We extract unigram and bigram features based on the action sequence as well as the occlusion features. The model parameters are estimated with a variation of multi-class SVM, where the latent layer is augmented in the model. In this approach, the actions and activities are recognized in succession.\n4) Joint Estimation of Activity and Actions using Hierarchical Approach (full model): This approach refers to the proposed model of the paper. Instead of successively recognizing actions and activities, our model uses a hierarchical framework to make joint predictions over both activity and action labels.\nWe compare two different segmentation methods to the videos in the CAD-120 dataset. In the first method, we use the ground truth segmentation, which is manually annotated. For the second segmentation, we apply a motion-based approach, i.e. , we extract the spatial-temporal features for all the frames, and similar frames are grouped together using a graph-based approach to form segments. For CAD-60, we apply uniform segmentation as in [9] to enable a fair comparison with other methods.\nThe above methods were evaluated on both the CAD-120 and CAD-60 datasets. Because the two datasets are quite different from each other, they can be used to test how the results can be generalized to new data. The performance of these methods on both datasets is reported in Section VI-D.\n8"}, {"heading": "C. Evaluation Criteria", "text": "Our model was evaluated with 4-fold cross-validation. The folds are split based on the 4 subjects. To choose the hyperparameters, i.e. , the number of latent states and segmentation methods, we used two subjects for training, one subject for validation and one subject for testing. Once the optimal hyperparameters are chosen, the performance of the model during testing is measured by another cross-validation process, i.e. , training using videos of 3 persons and testing on a new person. Each cross-validation is performed 3 times. To observe the generalization of our model across different data sets, the results are averaged across the folds. In this paper, the accuracy (classification rate), precision, recall and F-score are reported to enable a comparison of the results. In the CAD-120 dataset, more than half of the instances are reaching and moving. Therefore, we consider precision and recall to be relatively better evaluation criteria than accuracy because they remain meaningful despite class imbalance."}, {"heading": "D. Results and Analysis", "text": "In this section, we report the experimental results and compare the performance of different models. Table I shows the performance of all the models during testing on the CAD120 dataset. Both the performances of the action and activity recognition are reported. For comparison, the results of both ground-truth segmentation and motion-based segmentation are reported. Table II shows the performance during testing on the CAD-60 dataset.\nNext, we analyze the results while referring to our research questions posed in Section I.\nImportance of hierarchical model. In Table I, Single Layer refers to the second baseline approach, wherein we learn a direct mapping from video-level features to activity labels. There is no intermediate layer of labels. The Single Layer approach achieves an average performance of over 70% in both segmentation methods but with a large standard error of approximately 5%. In contrast, the other hierarchical approaches outperform the Single Layer approach by at least 10 percentage points when using ground-truth segmentation and 5 percentage points when using motion-based segmentation. By incorporating the layer of action labels, we can see significant improvements in terms of recognizing activities. Therefore, temporal information, such as transitions between actions, is a very important aspect of activity recognition.\nTable II shows the results using the CAD-60 dataset under similar experiment settings; however, the goal here is to predict actions together with the environment. We can see that the F-score of the environment prediction is increased by over 11 percentage points when using the hierarchical approach (full model), which is significantly better than the single-layer approach. The hierarchical approaches also exhibit significant improvements in terms of precision and recall. The increase in the mean is over 6 percentage points, with a reduced standard error rate.\nImportance of embedding the latent layer. To demonstrate the importance of using latent variables, we compare\nthe proposed model (full model) to the model without augmenting latent variables (no latent). Table I shows that the full model outperforms no latent in terms of recognition of both actions and activities. Notably, after adding the latent variable, the precision and recall for activity is increased by over 4 and 5 percentage points, respectively, using groundtruth segmentation. When using motion-based segmentation, the performance of full model for an activity is increased by 10 percentage points in terms of precision and 6 percentage points in terms of recall. The improvement is significant after using latent variables. Note that the no latent model is a special case of the full model, i.e. , no latent is equivalent to the full model when there is only one latent state. Here, we list these models separately to illustrate the effect of using multiple latent states. In contrast, Table II only shows the performance of the full model because the model starts overfitting the data when more than one latent states are applied to the model, i.e. , no latent (latent=1) achieves the best performance. From this, we can see that the model is quite flexible and that it can be used to fit data with varying levels of complexity by simply adjusting the number of latent states in the model.\nImportance of jointly modeling activity and action. Hu et al. [8] [11] in Table I refers to a combination of the first and third baseline approaches, where we used a two-step approach to successively recognize actions and activities. This method shows significant improvement over the Single layer approach. However, their approach is significantly outperformed by our proposed hierarchical method (full model) using both segmentation methods. Notably, for activity recognition, the Fscore is increased by 3 percentage points using our proposed model, with an increase of 4 percentage points in terms of precision and 6 percentage points in terms of recall. For action recognition, the performance gain in terms of F-score is approximately 3.7 percentage points and includes significant improvements in both precision and recall. This is because the full model allows the interaction between the low-level and high-level layers during both learning and inference, and labels with the hierarchy are jointly estimated when making predictions. Similar results were found using the CAD-60 dataset, see Table II. We note that the performance is largely increased when using the full model. The F-score is increased by 3 percentage points for predicting action and environment labels.\nComparison with the state-of-the-art approaches. The proposed method was evaluated on both the CAD-60 and CAD-120 datasets to provide a comparison with the state-ofthe-art methods.\nTo be comparable with the other approaches, following [9], [12], we conduct similar experiments on the CAD-60 dataset, where we group the actions based on their environment labels and a separate model is learned and tested for each of the groups. The results of these experiments are reported in Table III. We note that our model outperforms [12] in all five environments. Compared with the state of the art [9], our model outperforms [12] and [9] on most of the environments. On average, the precision of our model is the same as in [9], and the recall of the model outperforms [9] by over 8 percentage points, achieving 80.8% for precision and 80.1%\n9\nfor recall. The average F-Score is over 4% percentage points better than in [9].\nTable I compares the performance of different approaches on the CAD-120 datasets. Similar to [8], Koppula et al. [10] use a two-step approach to infer high-level activity labels only after the actions are estimated. Benefiting from the joint estimation of action and activity, our full model outperforms the state-of-the-art models in terms of both action and activity recognition tasks. Notably, using ground-truth segmentation, the F-score is improved by approximately 4 percentage points for recognizing actions. Based on motion segmentation, the activity recognition performance is improved by over 2 percentage points in terms of F-Score.\nFig. 5 shows the confusion matrix of both the action and activity classification results. The most difficult action class is scrubbing. This task is sometimes confused with reaching and placing. The overall performance of the activity recognition is very good, with most of the activities being correctly classified. The more difficult case is to distinguish between \u201cstacking objects\u201d and \u201carranging objects\u201d. Overall, we can see that high values are found on the diagonal using both segmentation methods, which demonstrates the good performance of our\nsystem."}, {"heading": "VII. CONCLUSION", "text": "In this paper, we present a hierarchical approach that simultaneously recognizes actions and activities based on RGB-D data. The interactions between actions and activities are captured by a Hidden-state CRF framework. In this framework, we use the latent variables to exploit the underlying structures of actions. The prediction is based on the joint interaction between activities and actions, which is in contrast to the traditional approach, which only focuses on one of them. Our results show a significant improvement when using the hierarchical model compared to using the single-layered approach. The results also demonstrate the effectiveness of adding a latent layer to the model and the importance of jointly estimating actions and activities. Finally, we show that the proposed hierarchical approach outperforms the state-of-theart methods on two benchmark datasets."}], "references": [{"title": "Towards robotic assistants in nursing homes: Challenges and results", "author": ["J. Pineau", "M. Montemerlo", "M. Pollack", "N. Roy", "S. Thrun"], "venue": "Robotics and Autonomous Systems, vol. 42, 2003, pp. 271\u2013281.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2003}, {"title": "Living with seal robots - Its sociopsychological and physiological influences on the elderly at a care house", "author": ["K. Wada", "T. Shibata"], "venue": "IEEE Transactions on Robotics, vol. 23, 2007, pp. 972\u2013980.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2007}, {"title": "A Survey on Human Activity Recognition using Wearable Sensors", "author": ["O.D. Lara", "M. a. Labrador"], "venue": "IEEE Communications Surveys & Tutorials, pp. 1\u201318, 2012.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Human activity prediction: Early recognition of ongoing activities from streaming videos", "author": ["M.S. Ryoo"], "venue": "Proceedings of the IEEE international conference on computer vision (ICCV). IEEE, 2011, pp. 1036\u2013 1043.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Activity recognition using semi-markov models on real world smart home datasets", "author": ["T.L.M. van Kasteren", "G. Englebienne", "B. Kr\u00f6se"], "venue": "Journal of Ambient Intelligence and Smart Environments, vol. 2, no. 3, pp. 311\u2013325, 2010.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Posture Recognition with a Top-view Camera", "author": ["N. Hu", "G. Englebienne", "B. Kr\u00f6se"], "venue": "Proceedings of the IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS). IEEE, 2013, pp. 2152\u20132157.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "A Two-layered Approach to Recognize High-level Human Activities", "author": ["\u2014\u2014"], "venue": "Proceedings of the IEEE International Symposium on Robot and Human Interactive Communication (ROMAN). IEEE, 2014, pp. 243\u2013248.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "Learning Human Activities and Object Affordances from RGB-D Videos", "author": ["H.S. Koppula", "R. Gupta", "A. Saxena"], "venue": "International Journal of Robotics Research (IJRR), vol. 32, no. 8, pp. 951\u2013970, 2013.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Learning Spatio-Temporal Structure from RGB-D Videos for Human Activity Detection and Anticipation", "author": ["H. Koppula", "A. Saxena"], "venue": "Proceedings of the International Conference on Machine Learning (ICML), 2013.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "Learning Latent Structure for Activity Recognition", "author": ["N. Hu", "G. Englebienne", "Z. Lou", "B. Kr\u00f6se"], "venue": "Proceedings of the IEEE  International Conference on Robotics and Automation (ICRA). IEEE, 2014, pp. 1048\u20131053.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Unstructured human activity detection from rgbd images", "author": ["J. Sung", "C. Ponce", "B. Selman", "A. Saxena"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation (ICRA). IEEE, 2012, pp. 842\u2013849.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Assistive technology design and development for acceptable robotics companions for ageing years", "author": ["F. Amirabdollahian", "S. Bedaf", "R. Bormann", "H. Draper", "V. Evers", "J.G. P\u00e9rez", "G.J. Gelderblom", "C.G. Ruiz", "D. Hewson", "N. Hu", "Others"], "venue": "Paladyn, Journal of Behavioral Robotics, pp. 1\u201319, 2013.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "Human Activity Analysis: A Review", "author": ["J.K. Aggarwal", "M.S. Ryoo"], "venue": "ACM Computing Surveys (CSUR), vol. 43, no. 3, p. 16, 2011.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Learning realistic human actions from movies", "author": ["I. Laptev", "M. Marszalek", "C. Schmid", "B. Rozenfeld"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2008.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2008}, {"title": "Learning human actions via information maximization", "author": ["J. Liu", "M. Shah"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), 2008.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2008}, {"title": "Analyzing and recognizing walking figures in XYT", "author": ["S. Niyogi", "E. Adelson"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), 1994.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1994}, {"title": "Spatio-temporal relationship match: Video structure comparison for recognition of complex human activities", "author": ["M. Ryoo", "J. Aggarwal"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), 2009.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2009}, {"title": "Joint segmentation and classification of human actions in video", "author": ["M. Hoai", "Z. Lan", "F.D. la Torre"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), 2011, pp. 3265\u2013 3272.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "Multi-User Identification and Efficient User Approaching by Fusing Robot and Ambient Sensors", "author": ["N. Hu", "R. Bormann", "T. Zw\u00f6lfer", "B. Kr\u00f6se"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation (ICRA). IEEE, 2014, pp. 5299\u20135306.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "Model recommendation  11 for action recognition", "author": ["P. Matikainen", "R. Sukthankar", "M. Hebert"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), 2012, pp. 2256\u2013 2263.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Human Action Segmentation and Recognition Using Discriminative Semi-Markov Models", "author": ["Q. Shi", "L. Cheng", "L. Wang", "A. Smola"], "venue": "International Journal of Computer Vision (IJCV), vol. 93, pp. 22\u201332, 2011.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "Understanding human intentions via hidden markov models in autonomous mobile robots", "author": ["R. Kelley", "M. Nicolescu", "A. Tavakkoli", "C. King", "G. Bebis"], "venue": "Proceedings of the International Conference on Human-Robot Interaction (HRI). IEEE, 2008, pp. 367\u2013374.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2008}, {"title": "Recognition of visual activities and interactions by stochastic parsing", "author": ["Y. Ivanov", "A. Bobick"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence (T-PAMI), vol. 22, 2000.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2000}, {"title": "Spatial- Temporal correlatons for unsupervised action classification", "author": ["S. Savarese", "A. DelPozo", "J. Niebles", "L.F.-F.L. Fei-Fei"], "venue": "2008 IEEE Workshop on Motion and video Computing, 2008.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2008}, {"title": "Anticipating human activities using object affordances for reactive robotic response", "author": ["H.S. Koppula", "A. Saxena"], "venue": "Proceedings of the Robotics Science and Systems (RSS). RSS, 2013.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2013}, {"title": "Human Daily Activity Recognition in Robotassisted Living using Multi-sensor Fusion", "author": ["C. Zhu", "W. Sheng"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation (ICRA). IEEE, 2009, pp. 2154\u20132159.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2009}, {"title": "Active-learning assisted self-reconfigurable activity recognition in a dynamic environment", "author": ["Y. chen Ho", "C. hu Lu", "I. han Chen", "S. shinh Huang", "C. yao Wang", "L. chen Fu"], "venue": "Proceedings of the IEEE International Conference on Robotics and Automation (ICRA). IEEE, 2009, pp. 1567\u20131572.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2009}, {"title": "Conditional Random Fields for Activity Recognition", "author": ["D.L. Vail", "M.M. Veloso", "J.D. Lafferty"], "venue": "Proceedings of the international joint conference on Autonomous agents and multiagent systems (AAMAS). ACM, 2007, p. 235.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2007}, {"title": "Hidden conditional random fields for gesture recognition", "author": ["S.B. Wang", "A. Quattoni"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR), vol. 2. IEEE, 2006, pp. 1521\u20131527.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2006}, {"title": "Max-margin hidden conditional random fields for human action recognition", "author": ["Y. Wang", "G. Mori"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR). IEEE, 2009, pp. 872\u2013879.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2009}, {"title": "Hidden Conditional Random Fields", "author": ["A. Quattoni", "S. Wang", "L.-P. Morency", "M. Collins", "T. Darrell"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence (T-PAMI), vol. 29, no. 10, pp. 1848\u2013 1852, 2007.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1848}, {"title": "Hidden-Unit Conditional Random Fields", "author": ["L. Maaten", "M. Welling", "L.K. Saul"], "venue": "Proceedings of the International Conference on Artificial Intelligence and Statistics, 2011, pp. 479\u2013488.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2011}, {"title": "Order-Preserving sparse coding for sequence classification", "author": ["B. Ni", "P. Moulin", "S. Yan"], "venue": "Proceedings of the IEEE european conference on computer vision (ECCV). Springer, 2012, pp. 173\u2013187.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2012}, {"title": "Optimizing binary MRFs via extended roof duality", "author": ["C. Rother", "V. Kolmogorov", "V. Lempitsky", "M. Szummer"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR). IEEE, 2007, pp. 1\u20138.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2007}, {"title": "Learning Latent Temporal Structure for Complex Event Detection", "author": ["K. Tang", "L. Fei-Fei", "D. Koller"], "venue": "Proceedings of the IEEE conference on Computer Vision and Pattern Recognition (CVPR). IEEE, 2012, pp. 1250\u20131257.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2012}, {"title": "Dynamic Programming and Lagrange Multipliers", "author": ["R. Bellman"], "venue": "The Bellman Continuum: A Collection of the Works of Richard E. Bellman, p. 49, 1986.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1986}, {"title": "Large margin methods for structured and interdependent output variables", "author": ["I. Tsochantaridis", "T. Joachims", "T. Hofmann", "Y. Altun"], "venue": "Journal of Machine Learning Research, pp. 1453\u20131484, 2005.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2005}, {"title": "Learning structural SVMs with latent variables", "author": ["C.N. Yu", "T. Joachims"], "venue": "Proceedings of the International Conference on Pattern Recognition (ICPR). ACM, 2009, pp. 1169\u20131176.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2009}, {"title": "The concave-convex procedure (CCCP)", "author": ["A. Yuille", "A. Rangarajan"], "venue": "Advances in neural information processing systems (NIPS), vol. 2, pp. 1033\u20131040, 2002.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2002}, {"title": "The cutting-plane method for solving convex programs", "author": ["J.E. Kelley", "Jr."], "venue": "Journal of the Society for Industrial and Applied Mathematics, vol. 8, no. 4, pp. 703\u2013712, 1960.", "citeRegEx": "41", "shortCiteRegEx": null, "year": 1960}, {"title": "The EM Algorithm and Extensions", "author": ["G.J. McLachlan", "T. Krishnan"], "venue": "New York, vol. 274, p. 359, 1997.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 1997}], "referenceMentions": [{"referenceID": 0, "context": "Numerous studies have focused on providing people with physical [1], cognitive [2] or social [3] support.", "startOffset": 79, "endOffset": 82}, {"referenceID": 1, "context": "Numerous studies have focused on providing people with physical [1], cognitive [2] or social [3] support.", "startOffset": 93, "endOffset": 96}, {"referenceID": 2, "context": "Different types of sensors have been applied to the task of activity recognition [4], [5].", "startOffset": 81, "endOffset": 84}, {"referenceID": 3, "context": "Different types of sensors have been applied to the task of activity recognition [4], [5].", "startOffset": 86, "endOffset": 89}, {"referenceID": 4, "context": "[6] adopt a set of simple sensors, i.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[7] use a ceiling-mounted color camera to recognize human postures, and the postures are recognized based on still images.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "The recognition of actions is usually formulated as a sequential prediction problem [8] (see Fig.", "startOffset": 84, "endOffset": 87}, {"referenceID": 6, "context": "Most previous work addresses activity and action recognition as separate tasks [8]\u2013[10], i.", "startOffset": 79, "endOffset": 82}, {"referenceID": 8, "context": "Most previous work addresses activity and action recognition as separate tasks [8]\u2013[10], i.", "startOffset": 83, "endOffset": 87}, {"referenceID": 9, "context": "The proposed model of this paper is based on our previous work [11], wherein we recognize the sequence of actions using Conditional Random Fields (CRFs).", "startOffset": 63, "endOffset": 67}, {"referenceID": 7, "context": "The model was evaluated using the RGB-D data from two different benchmark datasets [9], [12].", "startOffset": 83, "endOffset": 86}, {"referenceID": 10, "context": "The model was evaluated using the RGB-D data from two different benchmark datasets [9], [12].", "startOffset": 88, "endOffset": 92}, {"referenceID": 6, "context": "The results are compared with a number of the state-of-the-art approaches [8]\u2013[12].", "startOffset": 74, "endOffset": 77}, {"referenceID": 10, "context": "The results are compared with a number of the state-of-the-art approaches [8]\u2013[12].", "startOffset": 78, "endOffset": 82}, {"referenceID": 11, "context": "Single-layer Approach and Hierarchical Approach Human activity recognition is a key component for HRI, particularly for the re-ablement of the elderly [13].", "startOffset": 151, "endOffset": 155}, {"referenceID": 12, "context": "Depending on the complexity and duration of activities, activity recognition approaches can be separated into two categories [14]: single-layer approaches and hierarchical approaches.", "startOffset": 125, "endOffset": 129}, {"referenceID": 13, "context": "Singlelayer approaches [15]\u2013[23] refer to methods that are able to directly recognize human activities from the data without defining any activity hierarchy.", "startOffset": 23, "endOffset": 27}, {"referenceID": 21, "context": "Singlelayer approaches [15]\u2013[23] refer to methods that are able to directly recognize human activities from the data without defining any activity hierarchy.", "startOffset": 28, "endOffset": 32}, {"referenceID": 7, "context": "Typical hierarchical approaches [9], [11], [24]\u2013[26] first estimate the sub-level actions, and then, the high-level activity labels are inferred based on the action sequences.", "startOffset": 32, "endOffset": 35}, {"referenceID": 9, "context": "Typical hierarchical approaches [9], [11], [24]\u2013[26] first estimate the sub-level actions, and then, the high-level activity labels are inferred based on the action sequences.", "startOffset": 37, "endOffset": 41}, {"referenceID": 22, "context": "Typical hierarchical approaches [9], [11], [24]\u2013[26] first estimate the sub-level actions, and then, the high-level activity labels are inferred based on the action sequences.", "startOffset": 43, "endOffset": 47}, {"referenceID": 24, "context": "Typical hierarchical approaches [9], [11], [24]\u2013[26] first estimate the sub-level actions, and then, the high-level activity labels are inferred based on the action sequences.", "startOffset": 48, "endOffset": 52}, {"referenceID": 10, "context": "[12] proposed a hierarchical maximum entropy Markov model that detects activities from RGB-D videos.", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[9] presented an interesting approach that models both activities and object affordance as random variables.", "startOffset": 0, "endOffset": 3}, {"referenceID": 10, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 30, "endOffset": 34}, {"referenceID": 25, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 36, "endOffset": 40}, {"referenceID": 26, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 75, "endOffset": 79}, {"referenceID": 27, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 99, "endOffset": 103}, {"referenceID": 7, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 116, "endOffset": 119}, {"referenceID": 4, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 139, "endOffset": 142}, {"referenceID": 28, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 160, "endOffset": 164}, {"referenceID": 29, "context": ", Hidden Markov Models (HMMs) [12], [27], Dynamic Bayesian Networks (DBNs) [28], linear-chain CRFs [29], loopy CRFs [9], SemiMarkov Models [6], and Hidden CRFs [30], [31], have been applied to the recognition of human activities.", "startOffset": 166, "endOffset": 170}, {"referenceID": 10, "context": "The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9].", "startOffset": 75, "endOffset": 79}, {"referenceID": 25, "context": "The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9].", "startOffset": 81, "endOffset": 85}, {"referenceID": 4, "context": "The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9].", "startOffset": 112, "endOffset": 115}, {"referenceID": 5, "context": "The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9].", "startOffset": 117, "endOffset": 120}, {"referenceID": 7, "context": "The graphical models can be divided into two categories: generative models [12], [27] and discriminative models [6], [7], [9].", "startOffset": 122, "endOffset": 125}, {"referenceID": 30, "context": "However, these models are limited because they cannot capture the intermediate structures within the target states [32].", "startOffset": 115, "endOffset": 119}, {"referenceID": 31, "context": "The names of these models, including Hiddenunit CRF [33], Hidden-state CRF [32] or Hidden CRF [31], are inter-changeable in the literature.", "startOffset": 52, "endOffset": 56}, {"referenceID": 30, "context": "The names of these models, including Hiddenunit CRF [33], Hidden-state CRF [32] or Hidden CRF [31], are inter-changeable in the literature.", "startOffset": 75, "endOffset": 79}, {"referenceID": 29, "context": "The names of these models, including Hiddenunit CRF [33], Hidden-state CRF [32] or Hidden CRF [31], are inter-changeable in the literature.", "startOffset": 94, "endOffset": 98}, {"referenceID": 7, "context": "[9] present a model for the temporal and spatial interactions between humans and objects in loopy CRFs.", "startOffset": 0, "endOffset": 3}, {"referenceID": 10, "context": "The results show that by modeling the human-object interaction, their model outperforms the earlier work in [12] and [34].", "startOffset": 108, "endOffset": 112}, {"referenceID": 32, "context": "The results show that by modeling the human-object interaction, their model outperforms the earlier work in [12] and [34].", "startOffset": 117, "endOffset": 121}, {"referenceID": 33, "context": "The inference in the loopy graph is solved as a quadratic optimization problem using the graph-cut method [35].", "startOffset": 106, "endOffset": 110}, {"referenceID": 34, "context": "Another study [36] augments an additional layer of latent variables to the linear-chain CRFs.", "startOffset": 14, "endOffset": 18}, {"referenceID": 7, "context": "In contrast to [9], Tang et al.", "startOffset": 15, "endOffset": 18}, {"referenceID": 34, "context": "[36] solve the inference problem by reforming the graph into a set of cliques so that the exact inference can be efficiently solved using dynamic programming.", "startOffset": 0, "endOffset": 4}, {"referenceID": 34, "context": "First, similar to [36], our model also uses an extra latent layer.", "startOffset": 18, "endOffset": 22}, {"referenceID": 7, "context": "Third, although our graph also presents many loops, as in [9], we are able to transform the cyclic graph into a linear-chain structure wherein the exact inference is tractable.", "startOffset": 58, "endOffset": 61}, {"referenceID": 7, "context": "The exact inference in our graph only requires two passes of messages across the linear chain structure, which is substantially more efficient than the method in [9].", "startOffset": 162, "endOffset": 165}, {"referenceID": 7, "context": "Our results show that the model outperforms the state-of-the-art approaches on the CAD120 dataset [9].", "startOffset": 98, "endOffset": 101}, {"referenceID": 29, "context": "Comparing with the normal transition potentials [31], our model leverages the latent variable zk for modeling richer contextual information over consecutive temporal segments.", "startOffset": 48, "endOffset": 52}, {"referenceID": 35, "context": "In the linear-chain CRF, the exact inference can be efficiently performed using dynamic programming [37].", "startOffset": 100, "endOffset": 104}, {"referenceID": 9, "context": "This object function can be viewed as a generalized form of our previous work [11], where we recognize only the sequence of actions.", "startOffset": 78, "endOffset": 82}, {"referenceID": 36, "context": "Following [38] and [39], we substitute the loss function in (10) by the margin rescaling surrogate, which serves as an upper-bound of the loss function.", "startOffset": 10, "endOffset": 14}, {"referenceID": 37, "context": "Following [38] and [39], we substitute the loss function in (10) by the margin rescaling surrogate, which serves as an upper-bound of the loss function.", "startOffset": 19, "endOffset": 23}, {"referenceID": 38, "context": "This can be solved with the Concave-Convex Procedure (CCCP) [40].", "startOffset": 60, "endOffset": 64}, {"referenceID": 39, "context": "This can be solved using the cutting-plane method [41].", "startOffset": 50, "endOffset": 54}, {"referenceID": 40, "context": "Another intuitive method of understanding the CCCP algorithm is to consider the algorithm as one that solves the learning problem with incomplete data using ExpectationMaximization (EM) [42].", "startOffset": 186, "endOffset": 190}, {"referenceID": 10, "context": ", CAD-60 [12] and CAD-120 [9].", "startOffset": 9, "endOffset": 13}, {"referenceID": 7, "context": ", CAD-60 [12] and CAD-120 [9].", "startOffset": 26, "endOffset": 29}, {"referenceID": 7, "context": "In contrast, the CAD-120 dataset [9] contains 126 RGBD videos, and each video contains one activity and a sequence of actions.", "startOffset": 33, "endOffset": 36}, {"referenceID": 7, "context": "The objects in CAD-120 are automatically detected as in [9], and the locations of the objects are also provided by the dataset.", "startOffset": 56, "endOffset": 59}, {"referenceID": 6, "context": "A number of recent approaches [8]\u2013[12] have been evaluated on these two datasets; therefore, the results can be directly compared.", "startOffset": 30, "endOffset": 33}, {"referenceID": 10, "context": "A number of recent approaches [8]\u2013[12] have been evaluated on these two datasets; therefore, the results can be directly compared.", "startOffset": 34, "endOffset": 38}, {"referenceID": 7, "context": "To ensure a fair comparison, the same input features are extracted following [9].", "startOffset": 77, "endOffset": 80}, {"referenceID": 9, "context": "1) Recognize Only Low-level Actions: The first model is adopted from our previous work [11], which predicts action labels based on the video sequence.", "startOffset": 87, "endOffset": 91}, {"referenceID": 36, "context": "The parameters of this model are learned with the Structured-SVM framework [38].", "startOffset": 75, "endOffset": 79}, {"referenceID": 7, "context": "The object affordance labels are provided by the CAD-120 dataset, which are used for training in [9].", "startOffset": 97, "endOffset": 100}, {"referenceID": 7, "context": "For CAD-60, we apply uniform segmentation as in [9] to enable a fair comparison with other methods.", "startOffset": 48, "endOffset": 51}, {"referenceID": 6, "context": "[8] [11] in Table I refers to a combination of the first and third baseline approaches, where we used a two-step approach to successively recognize actions and activities.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[8] [11] in Table I refers to a combination of the first and third baseline approaches, where we used a two-step approach to successively recognize actions and activities.", "startOffset": 4, "endOffset": 8}, {"referenceID": 7, "context": "To be comparable with the other approaches, following [9], [12], we conduct similar experiments on the CAD-60 dataset, where we group the actions based on their environment labels and a separate model is learned and tested for each of the groups.", "startOffset": 54, "endOffset": 57}, {"referenceID": 10, "context": "To be comparable with the other approaches, following [9], [12], we conduct similar experiments on the CAD-60 dataset, where we group the actions based on their environment labels and a separate model is learned and tested for each of the groups.", "startOffset": 59, "endOffset": 63}, {"referenceID": 10, "context": "We note that our model outperforms [12] in all five environments.", "startOffset": 35, "endOffset": 39}, {"referenceID": 7, "context": "Compared with the state of the art [9], our model outperforms [12] and [9] on most of the environments.", "startOffset": 35, "endOffset": 38}, {"referenceID": 10, "context": "Compared with the state of the art [9], our model outperforms [12] and [9] on most of the environments.", "startOffset": 62, "endOffset": 66}, {"referenceID": 7, "context": "Compared with the state of the art [9], our model outperforms [12] and [9] on most of the environments.", "startOffset": 71, "endOffset": 74}, {"referenceID": 7, "context": "On average, the precision of our model is the same as in [9], and the recall of the model outperforms [9] by over 8 percentage points, achieving 80.", "startOffset": 57, "endOffset": 60}, {"referenceID": 7, "context": "On average, the precision of our model is the same as in [9], and the recall of the model outperforms [9] by over 8 percentage points, achieving 80.", "startOffset": 102, "endOffset": 105}, {"referenceID": 7, "context": "[9] 86.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[10] 89.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "[8] [11] 87.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[8] [11] 87.", "startOffset": 4, "endOffset": 8}, {"referenceID": 7, "context": "[9] 68.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[10] 70.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "[8] [11] 70.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[8] [11] 70.", "startOffset": 4, "endOffset": 8}, {"referenceID": 6, "context": "[8] [11] 66.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[8] [11] 66.", "startOffset": 4, "endOffset": 8}, {"referenceID": 7, "context": "The average F-Score is over 4% percentage points better than in [9].", "startOffset": 64, "endOffset": 67}, {"referenceID": 6, "context": "Similar to [8], Koppula et al.", "startOffset": 11, "endOffset": 14}, {"referenceID": 8, "context": "[10] use a two-step approach to infer high-level activity labels only after the actions are estimated.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[12] 72.", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[9] 88.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "[2] J.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[3] K.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[4] O.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[5] M.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[6] T.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[7] N.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[8] \u2014\u2014, \u201cA Two-layered Approach to Recognize High-level Human Activities,\u201d in Proceedings of the IEEE International Symposium on Robot and Human Interactive Communication (ROMAN).", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[9] H.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[10] H.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[11] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[12] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[13] F.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[14] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[15] I.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[16] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[17] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[18] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[19] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[20] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[21] P.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[22] Q.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[23] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[24] Y.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[25] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[26] H.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[27] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "[28] Y.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[29] D.", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "[30] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "[31] Y.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[32] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[33] L.", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[34] B.", "startOffset": 0, "endOffset": 4}, {"referenceID": 33, "context": "[35] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 34, "context": "[36] K.", "startOffset": 0, "endOffset": 4}, {"referenceID": 35, "context": "[37] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 36, "context": "[38] I.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "[39] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 38, "context": "[40] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "[41] J.", "startOffset": 0, "endOffset": 4}, {"referenceID": 40, "context": "[42] G.", "startOffset": 0, "endOffset": 4}], "year": 2015, "abstractText": "We present a novel hierarchical model for human activity recognition. In contrast to approaches that successively recognize actions and activities, our approach jointly models actions and activities in a unified framework, and their labels are simultaneously predicted. The model is embedded with a latent layer that is able to capture a richer class of contextual information in both state-state and observation-state pairs. Although loops are present in the model, the model has an overall linear-chain structure, where the exact inference is tractable. Therefore, the model is very efficient in both inference and learning. The parameters of the graphical model are learned with a Structured Support Vector Machine (Structured-SVM). A data-driven approach is used to initialize the latent variables; therefore, no manual labeling for the latent states is required. The experimental results from using two benchmark datasets show that our model outperforms the state-of-the-art approach, and our model is computationally more efficient.", "creator": "LaTeX with hyperref package"}}}