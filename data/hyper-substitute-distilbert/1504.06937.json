{"id": "1504.06937", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Apr-2015", "title": "Algorithms with Logarithmic or Sublinear Regret for Constrained Contextual Bandits", "abstract": "we study contextual bandits between budget response time constraints among noisy contexts, called to as dependent unit foraging. avoiding budget and locality constraints additionally increased the complexity upon exploration - exploitation tradeoff because learners introduce coupling among contexts. such coupling effects make strategically important to obtain these solutions that assume known statistics where bandits. to gain coupling, we explicitly study unit - kernel exploitation, concluding the costs of all businesses under any boundary have identical. two consider state - optimal properties dubbed weighted oracle, which know then reproduced with upper confidence bound ( ucb ) method in the general equilibrium where the expected rewards and unknown a priori. letting construct soon more proposed concepts, named pac - pb and ucb - alp, achieve this dynamics except in certain boundary cases. importantly, we discuss the aggregation of existing proposed information into real - cost systems.", "histories": [["v1", "Mon, 27 Apr 2015 06:03:50 GMT  (194kb,D)", "https://arxiv.org/abs/1504.06937v1", "23 pages, 4 figures; under submission; partly presented at Information Theory and Applications (ITA) workshop, 2015, San Diego, CA"], ["v2", "Thu, 23 Jul 2015 17:55:35 GMT  (235kb,D)", "http://arxiv.org/abs/1504.06937v2", "36 pages, 4 figures; under submission; partly presented at Information Theory and Applications (ITA) workshop, 2015, San Diego, CA"], ["v3", "Mon, 19 Oct 2015 16:47:20 GMT  (751kb,D)", "http://arxiv.org/abs/1504.06937v3", "36 pages, 4 figures; accepted by the 29th Annual Conference on Neural Information Processing Systems (NIPS), Montr\\'eal, Canada, Dec. 2015"]], "COMMENTS": "23 pages, 4 figures; under submission; partly presented at Information Theory and Applications (ITA) workshop, 2015, San Diego, CA", "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["huasen wu", "r srikant", "xin liu 0002", "chong jiang"], "accepted": true, "id": "1504.06937"}, "pdf": {"name": "1504.06937.pdf", "metadata": {"source": "CRF", "title": "Algorithms with Logarithmic or Sublinear Regret for Constrained Contextual Bandits", "authors": ["Huasen Wu", "Xin Liu", "Chong Jiang"], "emails": ["hswu@ucdavis.edu", "rsrikant@illinois.edu", "liu@cs.ucdavis.edu", "jiang17@illinois.edu"], "sections": [{"heading": "1 Introduction", "text": "The contextual bandit problem [1, 2, 3] is an important extension of the classic multi-armed bandit (MAB) problem [4], where the agent can observe a set of features, referred to as context, before making a decision. After the random arrival of a context, the agent chooses an action and receives a random reward with expectation depending on both the context and action. To maximize the total reward, the agent needs to make a careful tradeoff between taking the best action based on the historical performance (exploitation) and discovering the potentially better alternative actions under a given context (exploration). This model has attracted much attention as it fits the personalized service requirement in many applications such as clinical trials, online recommendation, and online hiring in crowdsourcing. Existing works try to reduce the regret of contextual bandits by leveraging the structure of the context-reward models such as linearity [5] or similarity [6], and more recent work [7] focuses on computationally efficient algorithms with minimum regret. For Markovian context arrivals, algorithms such as UCRL [8] for more general reinforcement learning problem can be used to achieve logarithmic regret.\nHowever, traditional contextual bandit models do not capture an important characteristic of real systems: in addition to time, there is usually a cost associated with the resource consumed by each action and the total cost is limited by a budget in many applications. Taking crowdsourcing [9] as an example, the budget constraint for a given set of tasks will limit the number of workers that an employer can hire. Another example is the clinical trials [10], where each treatment is usually costly and the budget of a trial is limited. Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.\nar X\niv :1\n50 4.\n06 93\n7v 3\n[ cs\n.L G\n] 1\n9 O\nct 2\nIn this paper, we study contextual bandit problems with budget and time constraints, referred to as constrained contextual bandits, where the agent is given a budget B and a time-horizon T . In addition to a reward, a cost is incurred whenever an action is taken under a context. The bandit process ends when the agent runs out of either budget or time. The objective of the agent is to maximize the expected total reward subject to the budget and time constraints. We are interested in the regime where B and T grow towards infinity proportionally.\nThe above constrained contextual bandit problem can be viewed as a special case of Resourceful Contextual Bandits (RCB) [17]. In [17], RCB is studied under more general settings with possibly infinite contexts, random costs, and multiple budget constraints. A Mixture Elimination algorithm is proposed and shown to achieve O( \u221a T ) regret. However, the benchmark for the definition of regret in [17] is restricted to within a finite policy set. Moreover, the Mixture Elimination algorithm suffers high complexity and the design of computationally efficient algorithms for such general settings is still an open problem.\nTo tackle this problem, motivated by certain applications, we restrict the set of parameters in our model as follows: we assume finite discrete contexts, fixed costs, and a single budget constraint. This simplified model is justified in many scenarios such as clinical trials [10] and rate selection in wireless networks [18]. More importantly, these simplifications allow us to design easily-implementable algorithms that achieve O(log T ) regret (except for a set of parameters of zero Lebesgue measure, which we refer to as boundary cases), where the regret is defined more naturally as the performance gap between the proposed algorithm and the oracle, i.e., the optimal algorithm with known statistics.\nEven with simplified assumptions considered in this paper, the exploration-exploitation tradeoff is still challenging due to the budget and time constraints. The key challenge comes from the complexity of the oracle algorithm. With budget and time constraints, the oracle algorithm cannot simply take the action that maximizes the instantaneous reward. In contrast, it needs to balance between the instantaneous and long-term rewards based on the current context and the remaining budget. In principle, dynamic programming (DP) can be used to obtain this balance. However, using DP in our scenario incurs difficulties in both algorithm design and analysis: first, the implementation of DP is computationally complex due to the curse of dimensionality; second, it is difficult to obtain a benchmark for regret analysis, since the DP algorithm is implemented in a recursive manner and its expected total reward is hard to be expressed in a closed form; third, it is difficult to extend the DP algorithm to the case with unknown statistics, due to the difficulty of evaluating the impact of estimation errors on the performance of DP-type algorithms.\nTo address these difficulties, we first study approximations of the oracle algorithm when the system statistics are known. Our key idea is to approximate the oracle algorithm with linear programming (LP) that relaxes the hard budget constraint to an average budget constraint. When fixing the average budget constraint at B/T , this LP approximation provides an upper bound on the expected total reward, which serves as a good benchmark in regret analysis. Further, we propose an Adaptive Linear Programming (ALP) algorithm that adjusts the budget constraint to the average remaining budget b\u03c4/\u03c4 , where \u03c4 is the remaining time and b\u03c4 is the remaining budget. Note that although the idea of approximating a DP problem with an LP problem has been widely studied in literature (e.g., [17, 19]), the design and analysis of ALP here is quite different. In particular, we show that ALP achieves O(1) regret, i.e., its expected total reward is within a constant independent of T from the optimum, except for certain boundaries. This ALP approximation and its regret analysis make an important step towards achieving logarithmic regret for constrained contextual bandits.\nUsing the insights from the case with known statistics, we study algorithms for constrained contextual bandits with unknown expected rewards. Complicated interactions between information acquisition and decision making arise in this case. Fortunately, the ALP algorithm has a highly desirable property that it only requires the ordering of the expected rewards and can tolerate certain estimation errors of system parameters. This property allows us to combine ALP with estimation methods that can efficiently provide a correct rank of the expected rewards. In this paper, we propose a UCB-ALP algorithm by combining ALP with the upper-confidence-bound (UCB) method [4]. We show that UCB-ALP achieves O(log T ) regret except for certain boundary cases, where its regret is O( \u221a T ). We note that UCB-type algorithms are proposed in [20] for non-contextual bandits with concave rewards and convex constraints, and further extended to linear contextual bandits. However, [20] focuses on static contexts1 and achieves O( \u221a T ) regret in our setting since it uses a fixed budget constraint in each round. In comparison, we consider random context arrivals and use an adaptive\n1After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].\nbudget constraint to achieve logarithmic regret. To the best of our knowledge, this is the first work that shows how to achieve logarithmic regret in constrained contextual bandits. Moreover, the proposed UCB-ALP algorithm is quite computationally efficient and we believe these results shed light on addressing the open problem of general constrained contextual bandits.\nAlthough the intuition behind ALP and UCB-ALP is natural, the rigorous analysis of their regret is non-trivial since we need to consider many interacting factors such as action/context ranking errors, remaining budget fluctuation, and randomness of context arrival. We evaluate the impact of these factors using a series of novel techniques, e.g., the method of showing concentration properties under adaptive algorithms and the method of bounding estimation errors under random contexts. For the ease of exposition, we study the ALP and UCB-ALP algorithms in unit-cost systems with known context distribution in Sections 3 and 4, respectively. Then we discuss the generalization to systems with unknown context distribution in Section 5 and with heterogeneous costs in Section 6, which are much more challenging and the details can be found in the supplementary material."}, {"heading": "2 System Model", "text": "We consider a contextual bandit problem with a context set X = {1, 2, . . . , J} and an action set A = {1, 2, . . . ,K}. At each round t, a context Xt arrives independently with identical distribution P{Xt = j} = \u03c0j , j \u2208 X , and each action k \u2208 A generates a non-negative reward Yk,t. Under a given context Xt = j, the reward Yk,t\u2019s are independent random variables in [0, 1]. The conditional expectation E[Yk,t|Xt = j] = uj,k is unknown to the agent. Moreover, a cost is incurred if action k is taken under context j. To gain insight into constrained contextual bandits, we consider fixed and known costs in this paper, where the cost is cj,k > 0 when action k is taken under context j. Similar to traditional contextual bandits, the contextXt is observable at the beginning of round t, while only the reward of the action taken by the agent is revealed at the end of round t.\nAt the beginning of round t, the agent observes the context Xt and takes an action At from {0}\u222aA, where \u201c0\u201d represents a dummy action that the agent skips the current context. Let Yt and Zt be the reward and cost for the agent in round t, respectively. If the agent takes an action At = k > 0, then the reward is Yt = Yk,t and the cost is Zt = cXt,k. Otherwise, if the agent takes the dummy action At = 0, neither reward nor cost is incurred, i.e., Yt = 0 and Zt = 0. In this paper, we focus on contextual bandits with a known time-horizon T and limited budget B. The bandit process ends when the agent runs out of the budget or at the end of time T .\nA contextual bandit algorithm \u0393 is a function that maps the historical observations Ht\u22121 = (X1, A1, Y1; X2, A2, Y2; . . . ;Xt\u22121, At\u22121, Yt\u22121) and the current context Xt to an action At \u2208 {0} \u222a A. The objective of the algorithm is to maximize the expected total reward U\u0393(T,B) for a given time-horizon T and a budget B, i.e.,\nmaximize\u0393 U\u0393(T,B) = E\u0393 [ T\u2211 t=1 Yt ]\nsubject to T\u2211 t=1 Zt \u2264 B,\nwhere the expectation is taken over the distributions of contexts and rewards. Note that we consider a \u201chard\u201d budget constraint, i.e., the total costs should not be greater than B under any realization.\nWe measure the performance of the algorithm \u0393 by comparing it with the oracle, which is the optimal algorithm with known statistics, including the knowledge of \u03c0j\u2019s, uj,k\u2019s, and cj,k\u2019s. Let U\u2217(T,B) be the expected total reward obtained by the oracle algorithm. Then, the regret of the algorithm \u0393 is defined as\nR\u0393(T,B) = U \u2217(T,B)\u2212 U\u0393(T,B).\nThe objective of the algorithm is then to minimize the regret. We are interested in the asymptotic regime where the time-horizon T and the budget B grow to infinity proportionally, i.e., with a fixed ratio \u03c1 = B/T ."}, {"heading": "3 Approximations of the Oracle", "text": "In this section, we study approximations of the oracle, where the statistics of bandits are known to the agent. This will provide a benchmark for the regret analysis and insights into the design of constrained contextual bandit algorithms.\nAs a starting point, we focus on unit-cost systems, i.e., cj,k = 1 for each j and k, from Section 3 to Section 5, which will be relaxed in Section 6. In unit-cost systems, the quality of action k under context j is fully captured by its expected reward uj,k. Let u\u2217j be the highest expected reward under context j, and k\u2217j be the best action for context j, i.e., u \u2217 j = maxk\u2208A uj,k and k \u2217 j = arg maxk\u2208A uj,k. For ease of exposition, we assume that the best action under each context is unique, i.e., uj,k < u\u2217j for all j and k 6= k\u2217j . Similarly, we also assume u\u22171 > u\u22172 > . . . > u\u2217J for simplicity.\nWith the knowledge of uj,k\u2019s, the agent knows the best action k\u2217j and its expected reward u \u2217 j under any context j. In each round t, the task of the oracle is deciding whether to take action k\u2217Xt or not depending on the remaining time \u03c4 = T \u2212 t+ 1 and the remaining budget b\u03c4 . The special case of two-context systems (J = 2) is trivial, where the agent just needs to procrastinate for the better context (see Appendix D of the supplementary material). When considering more general cases with J > 2, however, it is computationally intractable to exactly characterize the oracle solution. Therefore, we resort to approximations based on linear programming (LP)."}, {"heading": "3.1 Upper Bound: Static Linear Programming", "text": "We propose an upper bound for the expected total reward U\u2217(T,B) of the oracle by relaxing the hard constraint to an average constraint and solving the corresponding constrained LP problem. Specifically, let pj \u2208 [0, 1] be the probability that the agent takes action k\u2217j for context j, and 1\u2212 pj be the probability that the agent skips context j (i.e., taking action At = 0). Denote the probability vector as p = (p1, p2, . . . , pJ). For a time-horizon T and budget B, consider the following LP problem:\n(LPT,B) maximizep J\u2211 j=1 pj\u03c0ju \u2217 j , (1)\nsubject to J\u2211 j=1 pj\u03c0j \u2264 B/T, (2)\np \u2208 [0, 1]J . Define the following threshold as a function of the average budget \u03c1 = B/T :\nj\u0303(\u03c1) = max{j : j\u2211\nj\u2032=1\n\u03c0j\u2032 \u2264 \u03c1} (3)\nwith the convention that j\u0303(\u03c1) = 0 if \u03c01 > \u03c1. We can verify that the following solution is optimal for LPT,B :\npj(\u03c1) =  1, if 1 \u2264 j \u2264 j\u0303(\u03c1), \u03c1\u2212 \u2211j\u0303(\u03c1) j\u2032=1 \u03c0j\u2032 \u03c0j\u0303(\u03c1)+1 , if j = j\u0303(\u03c1) + 1,\n0, if j > j\u0303(\u03c1) + 1.\n(4)\nCorrespondingly, the optimal value of LPT,B is\nv(\u03c1) = j\u0303(\u03c1)\u2211 j=1 \u03c0ju \u2217 j + pj\u0303(\u03c1)+1(\u03c1)\u03c0j\u0303(\u03c1)+1u \u2217 j\u0303(\u03c1)+1 . (5)\nThis optimal value v(\u03c1) can be viewed as the maximum expected reward in a single round with average budget \u03c1. Summing over the entire horizon, the total expected reward becomes U\u0302(T,B) = Tv(\u03c1), which is an upper bound of U\u2217(T,B). Lemma 1. For a unit-cost system with known statistics, if the time-horizon is T and the budget is"}, {"heading": "B, then U\u0302(T,B) \u2265 U\u2217(T,B).", "text": "The proof of Lemma 1 is available in Appendix A of the supplementary material. With Lemma 1, we can bound the regret of any algorithm by comparing its performance with the upper bound U\u0302(T,B) instead of U\u2217(T,B). Since U\u0302(T,B) has a simple expression, as we will see later, it significantly reduces the complexity of regret analysis."}, {"heading": "3.2 Adaptive Linear Programming", "text": "Although the solution (4) provides an upper bound on the expected reward, using such a fixed algorithm will not achieve good performance as the ratio b\u03c4/\u03c4 , referred to as average remaining budget, fluctuates over time. We propose an Adaptive Linear Programming (ALP) algorithm that adjusts the threshold and randomization probability according to the instantaneous value of b\u03c4/\u03c4 .\nSpecifically, when the remaining time is \u03c4 and the remaining budget is b\u03c4 = b, we consider an LP problem LP\u03c4,b which is the same as LPT,B except that B/T in Eq. (2) is replaced with b/\u03c4 . Then, the optimal solution for LP\u03c4,b can be obtained by replacing \u03c1 in Eqs. (3), (4), and (5) with b/\u03c4 . The ALP algorithm then makes decisions based on this optimal solution.\nALP Algorithm: At each round twith remaining budget b\u03c4 = b, obtain pj(b/\u03c4)\u2019s by solvingLP\u03c4,b; take action At = k\u2217Xt with probability pXt(b/\u03c4), and At = 0 with probability 1\u2212 pXt(b/\u03c4).\nThe above ALP algorithm only requires the ordering of the expected rewards instead of their accurate values. This highly desirable feature allows us to combine ALP with classic MAB algorithms such as UCB [4] for the case without knowledge of expected rewards. Moreover, this simple ALP algorithm achieves very good performance within a constant distance from the optimum, i.e., O(1) regret, except for certain boundary cases. Specifically, for 1 \u2264 j \u2264 J , let qj be the cumulative probability defined as qj = \u2211j j\u2032=1 \u03c0j\u2032 with the convention that q0 = 0. The following theorem states the near optimality of ALP. Theorem 1. Given any fixed \u03c1 \u2208 (0, 1), the regret of ALP satisfies: 1) (Non-boundary cases) if \u03c1 6= qj for any j \u2208 {1, 2, . . . , J \u2212 1}, then RALP(T,B) \u2264 u \u2217 1\u2212u \u2217 J\n1\u2212e\u22122\u03b42 ,\nwhere \u03b4 = min{\u03c1\u2212 qj\u0303(\u03c1), qj\u0303(\u03c1)+1 \u2212 \u03c1}. 2) (Boundary cases) if \u03c1 = qj for some j \u2208 {1, 2, . . . , J \u2212 1}, then RALP(T,B) \u2264 \u0398(o) \u221a T +\nu\u22171\u2212u \u2217 J\n1\u2212e\u22122(\u03b4\u2032)2 , where \u0398(o) = 2(u\u22171 \u2212 u\u2217J) \u221a \u03c1(1\u2212 \u03c1) and \u03b4\u2032 = min{\u03c1\u2212 qj\u0303(\u03c1)\u22121, qj\u0303(\u03c1)+1 \u2212 \u03c1}.\nTheorem 1 shows that ALP achieves O(1) regret except for certain boundary cases, where it still achieves O( \u221a T ) regret. This implies that the regret due to the linear relaxation is negligible in most cases. Thus, when the expected rewards are unknown, we can achieve low regret, e.g., logarithmic regret, by combining ALP with appropriate information-acquisition mechanisms.\nSketch of Proof: Although the ALP algorithm seems fairly intuitive, its regret analysis is nontrivial. The key to the proof is to analyze the evolution of the remaining budget b\u03c4 by mapping ALP to \u201csampling without replacement\u201d. Specifically, from Eq. (4), we can verify that when the remaining time is \u03c4 and the remaining budget is b\u03c4 = b, the system consumes one unit of budget with probability b/\u03c4 , and consumes nothing with probability 1 \u2212 b/\u03c4 . When considering the remaining budget, the ALP algorithm can be viewed as \u201csampling without replacement\u201d. Thus, we can show that b\u03c4 follows the hypergeometric distribution [23] and has the following properties: Lemma 2. Under the ALP algorithm, the remaining budget b\u03c4 satisfies: 1) The expectation and variance of b\u03c4 are E[b\u03c4 ] = \u03c1\u03c4 and Var(b\u03c4 ) = T\u2212\u03c4T\u22121 \u03c4\u03c1(1\u2212 \u03c1), respectively. 2) For any positive number \u03b4 satisfying 0 < \u03b4 < min{\u03c1, 1\u2212 \u03c1}, the tail distribution of b\u03c4 satisfies\nP{b\u03c4 < (\u03c1\u2212 \u03b4)\u03c4} \u2264 e\u22122\u03b4 2\u03c4 and P{b\u03c4 > (\u03c1+ \u03b4)\u03c4} \u2264 e\u22122\u03b4 2\u03c4 .\nThen, we prove Theorem 1 based on Lemma 2. Note that the expected total reward under ALP is UALP(T,B) = E [\u2211T \u03c4=1 v(b\u03c4/\u03c4) ] , where v(\u00b7) is defined in (5) and the expectation is taken over the distribution of b\u03c4 . For the non-boundary cases, the single-round expected reward satisfies E[v(b\u03c4/\u03c4)] = v(\u03c1) if the threshold j\u0303(b\u03c4/\u03c4) = j\u0303(\u03c1) for all possible b\u03c4 \u2019s. The regret then is bounded by a constant because the probability of the event j\u0303(b\u03c4/\u03c4) 6= j\u0303(\u03c1) decays exponentially due to the concentration property of b\u03c4 . For the boundary cases, we show the conclusion by relating the regret with the variance of b\u03c4 . Please refer to Appendix B of the supplementary material for details."}, {"heading": "4 UCB-ALP Algorithm for Constrained Contextual Bandits", "text": "Now we get back to the constrained contextual bandits, where the expected rewards are unknown to the agent. We assume the agent knows the context distribution as [17], which will be relaxed in Section 5. Thanks to the desirable properties of ALP, the maxim of \u201coptimism under uncertainty\u201d\n[8] is still applicable and ALP can be extended to the bandit settings when combined with estimation policies that can quickly provide correct ranking with high probability. Here, combining ALP with the UCB method [4], we propose a UCB-ALP algorithm for constrained contextual bandits."}, {"heading": "4.1 UCB: Notations and Property", "text": "Let Cj,k(t) be the number of times that action k \u2208 A has been taken under context j up to round t. If Cj,k(t \u2212 1) > 0, let u\u0304j,k(t) be the empirical reward of action k under context j, i.e., u\u0304j,k(t) =\n1 Cj,k(t\u22121) \u2211t\u22121 t\u2032=1 Yt\u20321(Xt\u2032 = j, At\u2032 = k), where 1(\u00b7) is the indicator function. We define the UCB\nof uj,k at t as u\u0302j,k(t) = u\u0304j,k(t) + \u221a\nlog t 2Cj,k(t\u22121) for Cj,k(t \u2212 1) > 0, and u\u0302j,k(t) = 1 for Cj,k(t \u2212\n1) = 0. Furthermore, we define the UCB of the maximum expected reward under context j as u\u0302\u2217j (t) = maxk\u2208A u\u0302j,k(t). As suggested in [24], we use a smaller coefficient in the exploration term\u221a\nlog t 2Cj,k(t\u22121) than the traditional UCB algorithm [4] to achieve better performance.\nWe present the following property of UCB that is important in regret analysis. Lemma 3. For two context-action pairs, (j, k) and (j\u2032, k\u2032), if uj,k < uj\u2032,k\u2032 , then for any t \u2264 T ,\nP{u\u0302j,k(t) \u2265 u\u0302j\u2032,k\u2032(t)|Cj,k(t\u2212 1) \u2265 `j,k} \u2264 2t\u22121, (6) where `j,k = 2 log T(uj\u2032,k\u2032\u2212uj,k)2 .\nLemma 3 states that for two context-action pairs, the ordering of their expected rewards can be identified correctly with high probability, as long as the suboptimal pair has been executed for sufficient times (on the order of O(log T )). This property has been widely applied in the analysis of UCBbased algorithms [4, 13], and its proof can be found in [13, 25] with a minor modification on the coefficients."}, {"heading": "4.2 UCB-ALP Algorithm", "text": "We propose a UCB-based adaptive linear programming (UCB-ALP) algorithm, as shown in Algorithm 1. As indicated by the name, the UCB-ALP algorithm maintains UCB estimates of expected rewards for all context-action pairs and then implements the ALP algorithm based on these estimates. Note that the UCB estimates u\u0302\u2217j (t)\u2019s may be non-decreasing in j. Thus, the solution of LP\u03c4,b based on u\u0302\u2217j (t) depends on the actual ordering of u\u0302\u2217j (t)\u2019s and may be different from Eq. (4). We use p\u0302j(\u00b7) rather than pj(\u00b7) to indicate this difference.\nAlgorithm 1 UCB-ALP Input: Time-horizon T , budget B, and context distribution \u03c0j\u2019s; Init: \u03c4 = T , b = B;\nCj,k(0) = 0, u\u0304j,k(0) = 0, u\u0302j,k(0) = 1, \u2200j \u2208 X and \u2200k \u2208 A; u\u0302\u2217j (0) = 1, \u2200j \u2208 X ; for t = 1 to T do k\u2217j (t)\u2190 arg maxk u\u0302j,k(t), \u2200j; u\u0302\u2217j (t)\u2190 u\u0302\u2217j,k\u2217j (t)(t); if b > 0 then\nObtain the probabilities p\u0302j(b/\u03c4)\u2019s by solving LP\u03c4,b with u\u2217j replaced by u\u0302\u2217j (t); Take action k\u2217Xt(t) with probability p\u0302Xt(b/\u03c4);\nend if Update \u03c4 , b, Cj,k(t), u\u0304j,k(t), and u\u0302j,k(t).\nend for"}, {"heading": "4.3 Regret of UCB-ALP", "text": "We study the regret of UCB-ALP in this section. Due to space limitations, we only present a sketch of the analysis. Specific representations of the regret bounds and proof details can be found in the supplementary material.\nRecall that qj = \u2211j j\u2032=1 \u03c0j\u2032 (1 \u2264 j \u2264 J) are the boundaries defined in Section 3. We show that as the budget B and the time-horizon T grow to infinity in proportion, the proposed UCB-ALP algorithm achieves logarithmic regret except for the boundary cases.\nTheorem 2. Given \u03c0j\u2019s, uj,k\u2019s and a fixed \u03c1 \u2208 (0, 1), the regret of UCB-ALP satisfies: 1) (Non-boundary cases) if \u03c1 6= qj for any j \u2208 {1, 2, . . . , J \u2212 1}, then the regret of UCB-ALP is RUCB\u2212ALP(T,B) = O ( JK log T ) . 2) (Boundary cases) if \u03c1 = qj for some j \u2208 {1, 2, . . . , J \u2212 1}, then the regret of UCB-ALP is RUCB\u2212ALP(T,B) = O (\u221a T + JK log T ) .\nTheorem 2 differs from Theorem 1 by an additional termO(JK log T ). This term results from using UCB to learn the ordering of expected rewards. Under UCB, each of the JK content-action pairs should be executed roughly O(log T ) times to obtain the correct ordering. For the non-boundary cases, UCB-ALP is order-optimal because obtaining the correct action ranking under each context will result in O(log T ) regret [26]. Note that our results do not contradict the lower bound in [17] because we consider discrete contexts and actions, and focus on instance-dependent regret. For the boundary cases, we keep both the \u221a T and log T terms because the constant in the log T term is typically much larger than that in the \u221a T term. Therefore, the log T term may dominate the regret particularly when the number of context-action pairs is large for medium T . It is still an open problem if one can achieve regret lower than O( \u221a T ) in these cases.\nSketch of Proof: We bound the regret of UCB-ALP by comparing its performance with the benchmark U\u0302(T,B). The analysis of this bound is challenging due to the close interactions among different sources of regret and the randomness of context arrivals. We first partition the regret according to the sources and then bound each part of regret, respectively.\nStep 1: Partition the regret. By analyzing the implementation of UCB-ALP, we show that its regret is bounded as\nRUCB\u2212ALP(T,B) \u2264 R(a)UCB\u2212ALP(T,B) +R (c) UCB\u2212ALP(T,B),\nwhere the first part R(a)UCB\u2212ALP(T,B) = \u2211J j=1 \u2211 k 6=k\u2217j (u\u2217j \u2212 uj,k)E[Cj,k(T )] is the regret from\naction ranking errors within a context, and the second part R(c)UCB\u2212ALP(T,B) = \u2211T \u03c4=1 E [ v(\u03c1) \u2212\u2211J\nj=1 p\u0302j(b\u03c4/\u03c4)\u03c0ju \u2217 j ] is the regret from the fluctuations of b\u03c4 and context ranking errors.\nStep 2: Bound each part of regret. For the first part, we can show that R(a)UCB\u2212ALP(T,B) = O(log T ) using similar techniques for traditional UCB methods [25]. The major challenge of regret analysis for UCB-ALP then lies in the evaluation of the second part R(c)UCB\u2212ALP(T,B).\nWe first verify that the evolution of b\u03c4 under UCB-ALP is similar to that under ALP and Lemma 2 still holds under UCB-ALP. With respect to context ranking errors, we note that unlike classic UCB methods, not all context ranking errors contribute to the regret due to the threshold structure of ALP. Therefore, we carefully categorize the context ranking results based on their contributions. We briefly discuss the analysis for the non-boundary cases here. Recall that j\u0303(\u03c1) is the threshold for the static LP problem LPT,B . We define the following events that capture all possible ranking results based on UCBs:\nErank,0(t) = { \u2200j \u2264 j\u0303(\u03c1), u\u0302\u2217j (t) > u\u0302\u2217j\u0303(\u03c1)+1(t);\u2200j > j\u0303(\u03c1) + 1, u\u0302 \u2217 j (t) < u\u0302 \u2217 j\u0303(\u03c1)+1 (t) } ,\nErank,1(t) = { \u2203j \u2264 j\u0303(\u03c1), u\u0302\u2217j (t) \u2264 u\u0302\u2217j\u0303(\u03c1)+1(t);\u2200j > j\u0303(\u03c1) + 1, u\u0302 \u2217 j (t) < u\u0302 \u2217 j\u0303(\u03c1)+1 (t) } ,\nErank,2(t) = { \u2203j > j\u0303(\u03c1) + 1, u\u0302\u2217j (t) \u2265 u\u0302\u2217j\u0303(\u03c1)+1(t) } .\nThe first event Erank,0(t) indicates a roughly correct context ranking, because under Erank,0(t) UCBALP obtains a correct solution for LP\u03c4,b\u03c4 if b\u03c4/\u03c4 \u2208 [qj\u0303(\u03c1), qj\u0303(\u03c1)+1]. The last two events Erank,s(t), s = 1, 2, represent two types of context ranking errors: Erank,1(t) corresponds to \u201ccertain contexts with above-threshold reward having lower UCB\u201d, while Erank,2(t) corresponds to \u201ccertain contexts with below-threshold reward having higher UCB\u201d. Let T (s) = \u2211T t=1 1(Erank,s(t)) for 0 \u2264 s \u2264 2. We can show that the expected number of context ranking errors satisfies E[T (s)] = O(JK log T ), s = 1, 2, implying that R(c)UCB\u2212ALP(T,B) = O(JK log T ). Summarizing the two parts, we have RUCB\u2212ALP(T,B) = O(JK log T ) for the non-boundary cases. The regret for the boundary cases can be bounded using similar arguments.\nKey Insights from UCB-ALP: Constrained contextual bandits involve complicated interactions between information acquisition and decision making. UCB-ALP alleviates these interactions by\napproximating the oracle with ALP for decision making. This approximation achieves near-optimal performance while tolerating certain estimation errors of system statistics, and thus enables the combination with estimation methods such as UCB in unknown statistics cases. Moreover, the adaptation property of UCB-ALP guarantees the concentration property of the system status, e.g., b\u03c4/\u03c4 . This allows us to separately study the impact of action or context ranking errors and conduct rigorous analysis of regret. These insights can be applied in algorithm design and analysis for constrained contextual bandits under more general settings."}, {"heading": "5 Bandits with Unknown Context Distribution", "text": "When the context distribution is unknown, a reasonable heuristic is to replace the probability \u03c0j in ALP with its empirical estimate, i.e., \u03c0\u0302j(t) = 1t \u2211t t\u2032=1 1(Xt\u2032 = j). We refer to this modified ALP algorithm as Empirical ALP (EALP), and its combination with UCB as UCB-EALP.\nThe empirical distribution provides a maximum likelihood estimate of the context distribution and the EALP and UCB-EALP algorithms achieve similar performance as ALP and UCB-ALP, respectively, as observed in numerical simulations. However, a rigorous analysis for EALP and UCBEALP is much more challenging due to the dependency introduced by the empirical distribution. To tackle this issue, our rigorous analysis focuses on a truncated version of EALP where we stop updating the empirical distribution after a given round. Using the method of bounded averaged differences based on coupling argument, we obtain the concentration property of the average remaining budget b\u03c4/\u03c4 , and show that this truncated EALP algorithm achieves O(1) regret except for the boundary cases. The regret of the corresponding UCB-based version can by bounded similarly as UCB-ALP."}, {"heading": "6 Bandits with Heterogeneous Costs", "text": "The insights obtained from unit-cost systems can also be used to design algorithms for heterogeneous cost systems where the cost cj,k depends on j and k. We generalize the ALP algorithm to approximate the oracle, and adjust it to the case with unknown expected rewards. For simplicity, we assume the context distribution is known here, while the empirical estimate can be used to replace the actual context distribution if it is unknown, as discussed in the previous section.\nWith heterogeneous costs, the quality of an action k under a context j is roughly captured by its normalized expected reward, defined as \u03b7j,k = uj,k/cj,k. However, the agent cannot only focus on the \u201cbest\u201d action, i.e., k\u2217j = arg maxk\u2208A \u03b7j,k, for context j. This is because there may exist another action k\u2032 such that \u03b7j,k\u2032 < \u03b7j,k\u2217j , but uj,k\u2032 > uj,k\u2217j (and of course, cj,k\u2032 > cj,k\u2217j ). If the budget allocated to context j is sufficient, then the agent may take action k\u2032 to maximize the expected reward. Therefore, to approximate the oracle, the ALP algorithm in this case needs to solve an LP problem accounting for all context-action pairs with an additional constraint that only one action can be taken under each context. By investigating the structure of ALP in this case and the concentration of the remaining budget, we show that ALP achieves O(1) regret in non-boundary cases, and O( \u221a T ) regret in boundary cases. Then, an -First ALP algorithm is proposed for the unknown statistics case where an exploration stage is implemented first and then an exploitation stage is implemented according to ALP."}, {"heading": "7 Conclusion", "text": "In this paper, we study computationally-efficient algorithms that achieve logarithmic or sublinear regret for constrained contextual bandits. Under simplified yet practical assumptions, we show that the close interactions between the information acquisition and decision making in constrained contextual bandits can be decoupled by adaptive linear relaxation. When the system statistics are known, the ALP approximation achieves near-optimal performance, while tolerating certain estimation errors of system parameters. When the expected rewards are unknown, the proposed UCB-ALP algorithm leverages the advantages of ALP and UCB, and achieves O(log T ) regret except for certain boundary cases, where it achieves O( \u221a T ) regret. Our study provides an efficient approach of dealing with the challenges introduced by budget constraints and could potentially be extended to more general constrained contextual bandits.\nAcknowledgements: This research was supported in part by NSF Grants CCF-1423542, CNS1457060, CNS-1547461, and AFOSR MURI Grant FA 9550-10-1-0573."}, {"heading": "Appendices", "text": ""}, {"heading": "A Proof of Lemma 1: Upper Bound", "text": "We prove Lemma 1 by comparing U\u0302(T,B) with the expected total reward under any feasible algorithm satisfying the budget constraint.\nLet Cj be the number of rounds that an action is taken under context j for any realization under any feasible algorithm with known statistics. Let pj = E[Cj ]/(\u03c0jT ), which satisfies 0 \u2264 pj \u2264 1. Then the expected total reward becomes \u2211J j=1 u \u2217 jE[Cj ] = T \u2211J j=1 pj\u03c0ju \u2217 j . Further, because\nthe hard budget constraint is met for all realizations, i.e., \u2211J j=1 Cj \u2264 B, we have \u2211 j=1 pj\u03c0j =\u2211\nj E[Cj ]/T \u2264 B/T . Thus, the expected total reward obtained by any feasible algorithm, including the oracle algorithm, is upper bounded by U\u0302(T,B)."}, {"heading": "B Proof of Theorem 1: Near Optimality of ALP", "text": ""}, {"heading": "B.1 Proof of Lemma 2: Evolution of Remaining Budget", "text": "The evolution of the remaining budget b\u03c4 is critical for evaluating the expected total reward under ALP. We prove Lemma 2 by casting ALP to a sampling problem without replacement.\nFrom the implementation of ALP, we can verify that when the remaining time is \u03c4 and remaining budget is b\u03c4 = b, the system consumes one unit of budget with probability b/\u03c4 , and consumes nothing with probability 1 \u2212 b/\u03c4 . Thus, when focusing on the remaining budget, we can view the ALP algorithm as a sampling problem without replacement as follows.\nMapping ALP to Sampling without Replacement: Consider T balls in an urn, including B black balls and T \u2212 B white balls. Running ALP is equivalent to randomly drawing a ball without replacement. Taking an action At > 0 is equivalent to drawing a black ball and taking the dummy action At = 0 is equivalent to drawing a white ball. The event that b\u03c4 = b is equivalent to the event that the agent draws T \u2212 \u03c4 balls, and the number of drawn black balls is B \u2212 b. Based on the above mapping and using its symmetric property, we know that b\u03c4 follows the hypergeometric distribution [23] and complete the proof of Lemma 2."}, {"heading": "B.2 Part 1: Non-Boundary Cases", "text": "According to Lemma 1, U\u0302(T,B) is an upper bound on the total expected reward. Thus,\nU\u2217(T,B)\u2212 UALP(T,B) \u2264 U\u0302(T,B)\u2212 UALP(T,B) = T\u2211 \u03c4=1 { v(\u03c1)\u2212 E[v(b\u03c4/\u03c4)] } . (7)\nTo evaluate the gap between the single-round values, we define an auxiliary function v\u0303(b/\u03c4) for a given \u03c1 as follows:\nv\u0303(b/\u03c4) = j\u0303(\u03c1)\u2211 j=1 \u03c0ju \u2217 j + \u03c0j\u0303(\u03c1)+1p\u0303j\u0303(\u03c1)+1(b/\u03c4)u \u2217 j\u0303(\u03c1)+1 , (8)\nwhere\np\u0303j\u0303(\u03c1)+1(b/\u03c4) = b/\u03c4 \u2212\n\u2211j\u0303(\u03c1) j=1 \u03c0j\n\u03c0j\u0303(\u03c1)+1 .\nThis auxiliary function bridges the gap of single-round values, v(\u03c1) and E[v(b\u03c4/\u03c4)], as follows:\nFirst, we note that v\u0303(b/\u03c4) uses the same threshold j\u0303(\u03c1) as in v(\u03c1). The only difference between v\u0303(b/\u03c4) and v(\u03c1) is that v\u0303(b/\u03c4) uses the instantaneous average budget b/\u03c4 instead of the fixed average budget \u03c1. Considering all possible b\u2019s and according to Lemma 2, we have\nv(\u03c1)\u2212 E[v\u0303(b\u03c4/\u03c4)] = { \u03c1\u2212 E[b\u03c4/\u03c4 ] } u\u2217 j\u0303(\u03c1)+1 = 0. (9)\nSecond, compared with v(b/\u03c4), the difference of the auxiliary function v\u0303(b/\u03c4) comes from the event of j\u0303(b/\u03c4) 6= j\u0303(\u03c1), which only occurs when b/\u03c4 < qj\u0303(\u03c1) or b/\u03c4 > qj\u0303(\u03c1)+1. Because \u03c1 6= qj , 1 \u2264 j \u2264 J \u2212 1, there exists a positive number \u03b4 = min{\u03c1 \u2212 qj\u0303(\u03c1), qj\u0303(\u03c1)+1 \u2212 \u03c1} such that for all \u03c1\u2212 \u03b4 \u2264 \u03c1\u2032 < \u03c1+ \u03b4, the threshold under \u03c1\u2032 is the same as that under \u03c1, i.e., j\u0303(\u03c1\u2032) = j\u0303(\u03c1). Therefore, for all b satisfying \u03c1\u2212 \u03b4 \u2264 b/\u03c4 \u2264 \u03c1+ \u03b4, v(b/\u03c4) = v\u0303(b/\u03c4). If b/\u03c4 < \u03c1\u2212 \u03b4, then\nv\u0303(b/\u03c4)\u2212 v(b/\u03c4)\n= [ j\u0303(\u03c1)\u2211 j=j\u0303(b/\u03c4)+1 \u03c0ju \u2217 j + ( b \u03c4 \u2212 qj\u0303(\u03c1) ) u\u2217 j\u0303(\u03c1)+1 ] \u2212 ( b \u03c4 \u2212 qj\u0303(b/\u03c4) ) u\u2217 j\u0303(b/\u03c4)+1\n\u2264 [ u\u22171 j\u0303(\u03c1)\u2211 j=j\u0303(b/\u03c4)+1 \u03c0j + ( b \u03c4 \u2212 qj\u0303(\u03c1) ) u\u2217 j\u0303(\u03c1)+1 ] \u2212 ( b \u03c4 \u2212 qj\u0303(b/\u03c4) ) u\u2217 j\u0303(\u03c1)+1 \u2264 (u\u22171 \u2212 u\u2217j\u0303(\u03c1)+1) j\u0303(\u03c1)\u2211\nj=j\u0303(b/\u03c4)+1\n\u03c0j\n\u2264 qj\u0303(\u03c1)(u \u2217 1 \u2212 u\u2217J). (10)\nSimilarly, if b/\u03c4 > \u03c1+ \u03b4, then\nv\u0303(b/\u03c4)\u2212 v(b/\u03c4)\n= ( b \u03c4 \u2212 qj\u0303(\u03c1) ) u\u2217 j\u0303(\u03c1)+1 \u2212 [ j\u0303(b/\u03c4)\u2211 j=j\u0303(\u03c1)+1 \u03c0ju \u2217 j + ( b \u03c4 \u2212 qj\u0303(b/\u03c4) ) u\u2217 j\u0303(b/\u03c4)+1 ] \u2264 (1\u2212 qj\u0303(\u03c1))(u \u2217 1 \u2212 u\u2217J). (11)\nSumming all the above three cases (\u03c1\u2212 \u03b4 \u2264 b/\u03c4 \u2264 \u03c1+ \u03b4, b/\u03c4 < \u03c1\u2212 \u03b4, and b/\u03c4 > \u03c1+ \u03b4) and using Eq. (9), we have\nv(\u03c1)\u2212 E[v(b\u03c4/\u03c4)] = v(\u03c1)\u2212 E[v\u0303(b\u03c4/\u03c4)] + E[v\u0303(b\u03c4/\u03c4)\u2212 v(b\u03c4/\u03c4)] =\n\u2211 b<\u03c4(\u03c1\u2212\u03b4) or b>\u03c4(\u03c1+\u03b4) P(b\u03c4 = b)[v\u0303(b/\u03c4)\u2212 v(b/\u03c4)]\n\u2264 qj\u0303(\u03c1)(u \u2217 1 \u2212 u\u2217J)P{b\u03c4 < \u03c4(\u03c1\u2212 \u03b4)}\n+(1\u2212 qj\u0303(\u03c1))(u \u2217 1 \u2212 u\u2217J)P{b\u03c4 > \u03c4(\u03c1+ \u03b4)}\n\u2264 (u\u22171 \u2212 u\u2217J)e\u22122\u03b4 2\u03c4 . (12)\nPart 1 of Theorem 1 then follows by substituting Eq. (12) into Eq. (7)."}, {"heading": "B.3 Part 2: Boundary Cases", "text": "The proof of Part 2 of Theorem 1 is similar to that of Part 1. Specifically, when \u03c1 = qj\u0303(\u03c1), let \u03b4\u2032 = min{\u03c1\u2212 qj\u0303(\u03c1)\u22121, qj\u0303(\u03c1)+1 \u2212 \u03c1}. From the proof of Part 1, we know that\nv(\u03c1)\u2212 E[v\u0303(b\u03c4/\u03c4)] = 0. (13)\nIn addition, if \u03c1 \u2264 b/\u03c4 \u2264 \u03c1+ \u03b4\u2032, then j\u0303(b/\u03c4) = j\u0303(\u03c1) and v(b/\u03c4) = v\u0303(b/\u03c4).\nIf \u03c1\u2212 \u03b4\u2032 \u2264 b/\u03c4 < \u03c1, we have j\u0303(b/\u03c4) = j\u0303(\u03c1)\u2212 1, and\nv\u0303(b/\u03c4)\u2212 v(b/\u03c4)\n= \u03c0j\u0303(\u03c1)u \u2217 j\u0303(\u03c1)\n+ ( b\n\u03c4 \u2212 qj\u0303(\u03c1))u \u2217 j\u0303(\u03c1)+1 \u2212 ( b \u03c4 \u2212 qj\u0303(b/\u03c4))u \u2217 j\u0303(b/\u03c4)+1\n= (\u03c0j\u0303(\u03c1) + qj\u0303(\u03c1)\u22121 \u2212 b \u03c4 )u\u2217 j\u0303(\u03c1) + ( b \u03c4 \u2212 qj\u0303(\u03c1))u \u2217 j\u0303(\u03c1)+1\n= (\u03c1\u2212 b \u03c4 )u\u2217 j\u0303(\u03c1) + ( b \u03c4 \u2212 \u03c1)u\u2217 j\u0303(\u03c1)+1\n\u2264 \u2223\u2223 b \u03c4 \u2212 \u03c1 \u2223\u2223(u\u22171 \u2212 u\u2217J). (14)\nMoreover, we still have (10) if b/\u03c4 < \u03c1\u2212 \u03b4\u2032, and (11) if b/\u03c4 > \u03c1+ \u03b4\u2032. Compared with the proof of Part 1, we know that the only difference relies on the case of \u03c1 \u2212 \u03b4\u2032 \u2264 b/\u03c4 < \u03c1. Thus, summing all the above cases and using the results in the analysis of Part 1, we have\nE[v\u0303(b\u03c4/\u03c4)\u2212 v(b\u03c4/\u03c4)] \u2264 (u\u22171 \u2212 u\u2217J) { E[|b\u03c4/\u03c4 \u2212 \u03c1|] + e\u22122(\u03b4 \u2032)2\u03c4 } \u2264 (u\u22171 \u2212 u\u2217J) [\u221aVar(b\u03c4 ) \u03c42 + e\u22122(\u03b4 \u2032)2\u03c4 ] .\nConsequently,\nU\u2217(T,B)\u2212 UALP(T,B) \u2264 U\u0302(T,B)\u2212 UALP(T,B)\n= T\u2211 \u03c4=1 { v(\u03c1)\u2212 E[v(b\u03c4/\u03c4)]}\n= T\u2211 \u03c4=1 { v(\u03c1)\u2212 E[v\u0303(b\u03c4/\u03c4)] } + T\u2211 \u03c4=1 E[v\u0303(b\u03c4/\u03c4)\u2212 v(b\u03c4/\u03c4)]\n\u2264 (u\u22171 \u2212 u\u2217J) T\u2211 \u03c4=1 [\u221aVar(b\u03c4 ) \u03c42 + e\u22122(\u03b4 \u2032)2\u03c4 ]\n= (u\u22171 \u2212 u\u2217J) T\u2211 \u03c4=1 [\u221a (T \u2212 \u03c4)\u03c1(1\u2212 \u03c1) (T \u2212 1)\u03c4 + e\u22122(\u03b4 \u2032)2\u03c4 ]\n\u2264 (u\u22171 \u2212 u\u2217J) \u221a \u03c1(1\u2212 \u03c1) T\u2211 \u03c4=1\n\u221a 1\n\u03c4 + u\u22171 \u2212 u\u2217J 1\u2212 e\u22122(\u03b4\u2032)2\n\u2264 2 \u221a \u03c1(1\u2212 \u03c1)(u\u22171 \u2212 u\u2217J) \u221a T +\nu\u22171 \u2212 u\u2217J 1\u2212 e\u22122(\u03b4\u2032)2 ."}, {"heading": "C Proof of Theorem 2: Regret of UCB-ALP", "text": "We bound the regret of UCB-ALP by comparing its performance with the benchmark U\u0302(T,B). To obtain this upper bound, we first partition the regret according to the sources and then bound each part of the regret, respectively.\nBefore presenting the proof, we first introduce a notation that will be widely used later. For contexts j and j\u2032, and an action k, let \u2206(j\n\u2032) j,k be the difference between the expected reward for action k under\ncontext j and the highest expected reward under context j\u2032, i.e., \u2206(j \u2032)\nj,k = u \u2217 j\u2032 \u2212 uj,k. When j\u2032 = j,\n\u2206 (j) j,k is the difference of expected reward between the suboptimal action k and the best action under context j."}, {"heading": "C.1 Step 1: Partition the Regret", "text": "Note that the total reward of the oracle solution U\u2217(T,B) \u2264 U\u0302(T,B). Thus, we can bound the regret of UCB-ALP by comparing its total expected reward UUCB\u2212ALP(T,B) with U\u0302(T,B), i.e.,\nRUCB\u2212ALP(T,B)\n= U\u2217(T,B)\u2212 UUCB\u2212ALP(T,B) \u2264 U\u0302(T,B)\u2212 UUCB\u2212ALP(T,B)\n= Tv(\u03c1)\u2212 J\u2211 j=1 K\u2211 k=1 uj,kE[Cj,k(T )]. (15)\nThe total expected reward of UCB-ALP can be further divided as\nUUCB\u2212ALP(T,B)\n= J\u2211 j=1 u\u2217jE [ K\u2211 k=1 Cj,k(T ) ] \u2212 J\u2211 j=1 K\u2211 k=1 \u2206 (j) j,kE[Cj,k(T )]\n= J\u2211 j=1 u\u2217jE [ Cj(T ) ] \u2212 J\u2211 j=1 K\u2211 k=1 \u2206 (j) j,kE[Cj,k(T )],\nwhere Cj(T ) = \u2211K k=1 Cj,k(T ) is the total number that actions have been taken under context j up to round T .\nConsequently, the regret of UCB-ALP can be bounded as\nRUCB\u2212ALP(T,B) \u2264 R(a)UCB\u2212ALP(T,B) +R (c) UCB\u2212ALP(T,B), (16)\nwhere\nR (a) UCB\u2212ALP(T,B) = J\u2211 j=1 K\u2211 k=1 \u2206 (j) j,kE[Cj,k(T )],\nand\nR (c) UCB\u2212ALP(T,B) = T\u2211 \u03c4=1 E [ v(\u03c1)\u2212 J\u2211 j=1 p\u0302j(b\u03c4/\u03c4)\u03c0ju \u2217 j ] .\nEq. (16) clearly shows that the regret of the UCB-ALP algorithm can be divided into two parts: the first partR(a)UCB\u2212ALP(T,B) is from taking suboptimal actions under a given context; the second part R (c) UCB\u2212ALP(T,B) is from the deviation of remaining budget b\u03c4 and context ranking errors."}, {"heading": "C.2 Step 2: Bound Each Part of Regret", "text": "C.2.1 Step 2.1: Bound of R(a)UCB-ALP(T,B)\nFor the regret from action ranking errors, we show in Lemma 4 that R(a)UCB-ALP(T,B) = O(log T ) using similar techniques for traditional UCB methods [25].\nLemma 4. Under UCB-ALP, the regret due to the action ranking errors within context j satisfies\nR (a) UCB-ALP(T,B)\n\u2264 J\u2211 j=1 \u2211 k 6=k\u2217j [( 2 \u2206 (j) j,k + 2\u2206 (j) j,k ) log T + 2\u2206 (j) j,k ] . (17)\nProof. For k 6= k\u2217j , let ` (j) j,k = 2 log T\n(\u2206 (j) j,k)\n2 . According to Lemma 3, we have\nE[Cj,k(T )]\n\u2264 `(j)j,k + T\u2211 t=1 P{Xt = j, At = k,Cj,k(t\u2212 1) \u2265 `(j)j,k}\n\u2264 `(j)j,k + T\u2211 t=1 P{Xt = j, At = k|Cj,k(t\u2212 1) \u2265 `(j)j,k}\n\u2264 `(j)j,k + T\u2211 t=1 2t\u22121.\nThe conclusion then follows by the facts that \u2211T t=1 t\n\u22121 \u2264 1 + log T and R(a)UCB-ALP(T,B) =\u2211J j=1 \u2211 k 6=k\u2217j \u2206 (j) j,kE[Cj,k(T )].\nC.2.2 Step 2.2: Bound of R(c)UCB-ALP(T,B)\nNext, we show that the second part R(c)UCB\u2212ALP(T,B) = O(log T ). We first present the proof for the non-boundary cases, and discuss the boundary cases later.\nNote that we have separately considered the regret due to action ranking errors in R(a)UCB-ALP(T,B) and we only need to consider the best action of each context for R(c)UCB-ALP(T,B). Thus, we define v\u2217UCB\u2212ALP(\u03c4, b\u03c4 ) as follows:\nv\u2217UCB\u2212ALP(\u03c4, b\u03c4 ) = J\u2211 j=1 p\u0303j(b\u03c4/\u03c4)\u03c0ju \u2217 j .\nLet \u2206v\u03c4 be the single-round difference between UCB-ALP and the upper bound, i.e.,\n\u2206v\u03c4 = v(\u03c1)\u2212 v\u2217UCB\u2212ALP(\u03c4, b\u03c4 ).\nThen R(c)UCB\u2212ALP(T,B) = \u22111 \u03c4=T E[\u2206v\u03c4 ]. We study the expectation E[\u2206v\u03c4 ] under all possible situations. For a random variable X and event E , let E[X, E ] = E[X1(E)]. Then, the expectation E[X] = E[X, E ] + E[X, qE ]. Therefore,\nE[\u2206v\u03c4 ] = 2\u2211 s=0 E[\u2206v\u03c4 , Erank,s(T \u2212 \u03c4 + 1)]. (18)\nWe first consider the case of s = 0 and convert the expectation value into other two cases. Considering all possible value of b\u03c4 , we have\nE[\u2206v\u03c4 , Erank,0(T \u2212 \u03c4 + 1)]\n= B\u2211 b=0 E[\u2206v\u03c4 |b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)]P{b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)}. (19)\nFor the probability, we have\nP{b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)} = P{b\u03c4 = b} \u2212 2\u2211 s=1 P{b\u03c4 = b, Erank,s(T \u2212 \u03c4 + 1)}. (20)\nFor the conditioned expectation, we note that Erank,0(T \u2212 \u03c4 + 1) provides a roughly correct context rank in the sense that if b\u03c4/\u03c4 is close to \u03c1, then v\u2217UCB\u2212ALP(\u03c4, b\u03c4 ) = v(b\u03c4/\u03c4), where v(b\u03c4/\u03c4) is the single round value with the correct context rank. Specifically, letting \u03b4 = 12 min{\u03c1\u2212qj\u0303(\u03c1), qj\u0303(\u03c1)+1\u2212 \u03c1}. If b \u2208 [\u03c1\u2212 \u03b4, \u03c1+ \u03b4], then v\u2217UCB\u2212ALP(\u03c4, b) = v(b/\u03c4), and thus,\nE[\u2206v\u03c4 |b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)] = v(\u03c1)\u2212 v(b/\u03c4). (21)\nCombining Eqs. (19) \u223c (21) and using the facts that v(\u03c1) \u2265 0 and v\u2217UCB\u2212ALP(\u03c4, b) \u2265 0, we have\nE[\u2206v\u03c4 , Erank,0(T \u2212 \u03c4 + 1)]\n\u2264 v(\u03c1)\u2212 B\u2211 b=0 v(b/\u03c4)P{b\u03c4 = b}\n+ 2\u2211 s=1 B\u2211 b=0 v(b/\u03c4)P{b\u03c4 = b, Erank,s(T \u2212 \u03c4 + 1)}\n+ \u2211\nb/\u2208[\u03c1\u2212\u03b4,\u03c1+\u03b4]\nv(b/\u03c4)P{b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)}. (22)\nRecall that under UCB-ALP, the remaining budget b\u03c4 follows the hypergeometric distribution. Using the same method as the analysis of Eq. (12), we have\nv(\u03c1)\u2212 B\u2211 b=0 v(b/\u03c4)P{b\u03c4 = b} \u2264 (u\u22171 \u2212 u\u2217J)e\u22122\u03b4 2\u03c4 . (23)\nIn addition,\u2211 b/\u2208[\u03c1\u2212\u03b4,\u03c1+\u03b4] v(b/\u03c4)P{b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)} \u2264 u\u0304\u2217 \u2211 b/\u2208[\u03c1\u2212\u03b4,\u03c1+\u03b4] P{b\u03c4 = b} \u2264 2u\u0304\u2217e\u22122\u03b4 2\u03c4 , (24)\nwhere u\u0304\u2217 = \u2211J j=1 \u03c0ju \u2217 j is the expected reward without budget constraint.\nMoreover, B\u2211 b=0 v(b/\u03c4)P{b\u03c4 = b, Erank,s(T \u2212 \u03c4 + 1)} \u2264 u\u0304\u2217P{Erank,s(T \u2212 \u03c4 + 1)}, (25)\nSubstituting Eqs. (23) \u223c (25) into Eq. (22), we have\nE[\u2206v\u03c4 , Erank,0(T \u2212 \u03c4 + 1)] \u2264 [u\u22171 \u2212 u\u2217J + 2u\u0304\u2217]e\u22122\u03b4 2\u03c4 + u\u0304\u2217 2\u2211 s=1 P{Erank,s(T \u2212 \u03c4 + 1)}. (26)\nWhen the rank is wrong, i.e., 1 \u2264 s \u2264 2, since \u2206v\u03c4 \u2264 v(\u03c1) under any possible ranking results, we have\nE[\u2206v\u03c4 , Erank,s(T \u2212 \u03c4 + 1)] \u2264 v(\u03c1)P{Erank,s(T \u2212 \u03c4 + 1)}. (27)\nSubstituting Eqs. (26) and (27) into Eq. (18), we have\nE[\u2206v\u03c4 ] \u2264 [u\u22171 \u2212 u\u2217J + 2u\u0304\u2217]e\u22122\u03b4 2\u03c4 + [u\u0304\u2217 + v(\u03c1)] 2\u2211 s=1 P{Erank,s(T \u2212 \u03c4 + 1)}.\nNote that R(c)UCB\u2212ALP(T,B) = \u2211T \u03c4=1 E[\u2206v\u03c4 ]. Thus\nR (c) UCB\u2212ALP(T,B) \u2264\n[u\u22171 \u2212 u\u2217J + 2u\u0304\u2217]e\u22122\u03b4 2\n1\u2212 e\u22122\u03b42 + [u\u0304\u2217 + v(\u03c1)] 2\u2211 s=1 E[T (s)], (28)\nwhere T (s) = \u2211T t=1 1(Erank,s(t)) (s = 1, 2) is the number of type-s ranking errors.\nNext, we bound the expected number of context ranking errors. From Lemma 3, we know that to obtain the correct ordering of two context-action pairs with high probability, the agent needs to execute the suboptimal context-action pair for enough times. Unlike traditional MABs, however, the context-action pair with the higher UCB in a round might not be executable, as the context of that round could be different. Fortunately, the following lemma will show that if the condition that causes the an context-action pair to be executed with a positive probability appears many times, the context-action pair will indeed be executed proportionally with high probability.\nLemma 5. Assume Et\u2019s, E\u0302t\u2019s are events in round t (1 \u2264 t \u2264 T ), satisfying P{Et|E\u0302t,H1:t\u22121} = P{Et|E\u0302t} \u2265 p > 0, where H1:t\u22121 is the filtration from 1 to t \u2212 1. Let C(T ) = \u2211T t=1 1(Et) and\nC\u0302(T ) = \u2211T t=1 1(E\u0302t). Then,\nP{C(T ) \u2264 (p\u2212 )N, C\u0302(T ) \u2265 N} \u2264 e\u22122 2N .\nProof. One may think the proof of this lemma is trivial because P{C(T ) \u2264 (p \u2212 )N, C\u0302(T ) \u2265 N} \u2264 P{C(T ) \u2264 (p \u2212 )N |C\u0302(T ) \u2265 N} and we can bound the right-hand-side using Chernoff bound. However, this is incorrect because although Et is independent of the history given E\u0302t, the event E\u0302t+1 may depend on E(t).\nWe prove this lemma using the coupling argument. Let St = 1(Et \u2229 E\u0302t), and CS(T ) = \u2211T t=1 St. Then, we have\nP{C(T ) \u2264 (p\u2212 )N, C\u0302(T ) \u2265 N} \u2264 P{CS(T ) \u2264 (p\u2212 )N, C\u0302(T ) \u2265 N}. (29)\nNow, we show P{CS(T ) \u2264 (p\u2212 )N, C\u0302(T ) \u2265 N} \u2264 e\u22122 2N using the coupling argument.\nFirst, generate W1,W2, . . . ,WT i.i.d. according to Bernoulli distribution with P{Wt = 1} = p. Next, generate a sequences (V \u2032t , S \u2032 t, 1 \u2264 t \u2264 T ) as follows:\nFor each t, generate V \u2032t according to Bernoulli distribution with P{V \u2032t = 1} = P{E\u0302t = 1|1(E\u0302t\u2032) = V \u2032t\u2032 ,1(Et\u2032) = S\u2032t\u2032 1 \u2264 t\u2032 \u2264 t\u2212 1}. Further, we generate S\u2032t conditioned on the value of V \u2032t and Wt. Specifically, let CV \u2032(t) = \u2211t t\u2032=1 V \u2032 t .\n1) If V \u2032t = 1, generate S\u2032t conditioned on WCV \u2032 (t): a. If WCV \u2032 (t) = 1, then S \u2032 t = 1; b. If WCV \u2032 (t) = 0, then generate S \u2032 t according to Bernoulli distribution with\nP{S\u2032t = 1|WCV \u2032 (t) = 0} = P[1(Et) = 1|1(E\u0302t) = 1]\u2212 p\n1\u2212 p ."}, {"heading": "2) If V \u2032t = 0, let S\u2032t = 0.", "text": "We can verify that (V \u2032t , S \u2032 t, 1 \u2264 t \u2264 T ) has the same distribution as (1(E\u0302t), St, 1 \u2264 t \u2264 T ). Hence, P{CS(T ) \u2264 (p\u2212 )N, C\u0302(T ) \u2265 N} = P{ \u2211T t=1 S \u2032 t \u2264 (p\u2212 )N, \u2211T t=1 V \u2032 t \u2265 N}.\nOn the other hand, from the generation of S\u2032t, we have \u2211T t=1 S \u2032 t \u2265 \u2211CV \u2032 (T ) t=1 Wt. Thus, the event\n{ \u2211T t=1 S \u2032 t \u2264 (p\u2212 )N, \u2211T t=1 V \u2032 t \u2265 N} implies { \u2211N t=1Wt \u2264 (p\u2212 )N}, and\nP{ T\u2211 t=1 S\u2032t \u2264 (p\u2212 )N, T\u2211 t=1 V \u2032t \u2265 N} \u2264 P{ N\u2211 t=1 Wt \u2264 (p\u2212 )N} \u2264 e\u22122 2N . (30)\nThe conclusion of the lemma then follows.\nThe following lemma bounds the expected number of context ranking errors. Lemma 6. Given \u03c0j\u2019s, uj,k\u2019s and a fixed \u03c1 \u2208 (0, 1), \u03c1 6= qj (1 \u2264 j \u2264 J \u2212 1), under the UCB-ALP algorithm, we have\nE[T (1)] \u2264 j\u0303(\u03c1)\u2211 j=1 K\u2211 k=1\n27 log T\n2gj\u0303(\u03c1)+1[\u2206 (j) j\u0303(\u03c1)+1,k ]2\n+ 2Kj\u0303(\u03c1) log T +O(1),\nE[T (2)] \u2264 J\u2211\nj=j\u0303(\u03c1)+2\nK\u2211 k=1\n27 log T\n2gj [\u2206 (j\u0303(\u03c1)+1) j,k ]\n2 + 2K[J \u2212 j\u0303(\u03c1)\u2212 1] log T +O(1),\nwhere gj = min { \u03c0j , 1 2 (\u03c1\u2212 qj\u0303(\u03c1)), 1 2 (qj\u0303(\u03c1)+1 \u2212 \u03c1) } .\nProof. We only prove the conclusion for the case of s = 1 as the other case can be analyzed similarly. From Algorithm 1, we can see that the evolution of the remaining budget also affects the execution of the UCB-ALP algorithm. Under the assumption of known context distribution, it can be verified that Lemma 2 holds under UCB-ALP, i.e., the remaining budget b\u03c4 follows the hypergeometric distribution and has the properties described in Lemma 2. We define an event Ebudget,0(t) as follows,\nEbudget,0(t) = {(\u03c1\u2212 \u03b4)\u03c4 \u2264 b\u03c4 \u2264 (\u03c1+ \u03b4)\u03c4},\nwhere \u03b4 is given by\n\u03b4 = 1\n2 min{\u03c1\u2212 qj\u0303(\u03c1), qj\u0303(\u03c1)+1 \u2212 \u03c1}.\nAccording to Lemma 2, we have\nP{qEbudget,0(t)} = P{b\u03c4 < (\u03c1\u2212 \u03b4)\u03c4}+ P{b\u03c4 > (\u03c1+ \u03b4)\u03c4} \u2264 2e\u22122\u03b4 2(T\u2212t+1).\nBack to the ranking event Erank,1(t), we have\nP(Erank,1(t)) \u2264 P(qEbudget,0(t)) + P(Erank,1(t) \u2229 Ebudget,0(t)).\nNote that the event Erank,1(t) can be divided as follow: Erank,1(t) \u2286 \u22c3\n1\u2264j\u2264j\u0303(\u03c1),1\u2264k\u2264K\nE(j,k)rank,1(t),\nwhere for 1 \u2264 j \u2264 j\u0303(\u03c1) and 1 \u2264 k \u2264 K,\nE(j,k)rank,1(t) = { \u2200j\u2032 > j\u0303(\u03c1) + 1, u\u0302\u2217j\u2032(t) < u\u0302\u2217j\u0303(\u03c1)+1(t); u\u0302 \u2217 j (t) \u2264 u\u0302\u2217j\u0303(\u03c1)+1(t), k \u2217 j (t) = k } .\nThus,\nE[T (1)] = T\u2211 t=1 P(Erank,1(t)) \u2264 2e\u22122\u03b4 2 1\u2212 e\u22122\u03b42 + j\u0303(\u03c1)\u2211 j=1 K\u2211 k=1 E[N (1)j,k (T )],\n(31)\nwhere for 1 \u2264 j \u2264 j\u0303(\u03c1) and 1 \u2264 k \u2264 K,\nN (1) j,k (t) = t\u2211 t\u2032=1 1(E(j,k)rank,1(t \u2032), Ebudget,0(t\u2032)).\nLet \u02c6\u0300(j1)j2,k = 2 log T\ngj2 (1\u2212 ) 2(\u2206 (j1) j2,k )2\n, where gj2 = min{\u03c0j2 , \u03b4} and \u2208 (0, 1). Similar to the analysis of\nUCB in [4], we have\nE[N (1)j,k (T )] \u2264 \u02c6\u0300 (j) j\u0303(\u03c1)\u22121,k + T\u2211 t=1 P { E(j,k)rank,1(t), Ebudget,0(t), N (1) j,k (t\u2212 1) \u2265 \u02c6\u0300 (j) j\u0303(\u03c1)+1,k } . (32)\nFor each t in the second term, we have\nP{E(j,k)rank,1(t), Ebudget,0(t), N (1) j,k (t\u2212 1) \u2265 \u02c6\u0300 (j) j\u0303(\u03c1)+1,k }\n\u2264 P{E(j,k)rank,1(t), Ebudget,0(t)|Cj\u0303(\u03c1)+1,k(t\u2212 1) \u2265 gj\u0303(\u03c1)+1(1\u2212 )\u02c6\u0300 (j) j\u0303(\u03c1)+1,k }\n+ P{Cj\u0303(\u03c1)+1,k(t\u2212 1) < gj\u0303(\u03c1)+1(1\u2212 )\u02c6\u0300 (j) j\u0303(\u03c1)+1,k , N (1) j,k (t\u2212 1) \u2265 \u02c6\u0300 (j) j\u0303(\u03c1)+1,k },\nwhere Cj\u0303(\u03c1)+1,k(t) = \u2211t t\u2032=1 1(Xt\u2032 = j\u0303(\u03c1) + 1, At\u2032 = k) is the number that the context-action pair\n(j\u0303(\u03c1) + 1, k) has been executed up to round t.\nFor the first term, we note that the event {E(j,k)rank,1(t), Ebudget,0(t)} implies that u\u0302j,k\u2217j (t) \u2264 u\u0302j\u0303(\u03c1)+1,k(t). Because uj,k\u2217j > uj\u0303(\u03c1)+1,k for all j \u2264 j\u0303(\u03c1) and k, according to Lemma 3, we have\nP{E(j,k)rank,1(t), Ebudget,0(t)|Cj\u0303(\u03c1)+1,k(t\u2212 1) \u2265 gj\u0303(\u03c1)+1(1\u2212 )\u02c6\u0300 (j) j\u0303(\u03c1)+1,k }\n\u2264 P{u\u0302j,k\u2217j (t) \u2264 u\u0302j\u0303(\u03c1)+1,k(t)|Cj\u0303(\u03c1)+1,k(t\u2212 1) \u2265 gj\u0303(\u03c1)+1(1\u2212 )\u02c6\u0300 (j) j\u0303(\u03c1)+1,k }\n\u2264 2t\u22121. (33)\nFor the second term, we note that since context j\u0303(\u03c1)+1 arrives with probability \u03c0j\u0303(\u03c1)+1 independent of the observations, we have\nP { Xt = j\u0303(\u03c1) + 1, At = k|E(j,k)rank,1(t), Ebudget,0(t) } = min{\u03b4, \u03c0j\u0303(\u03c1)+1} = gj\u0303(\u03c1)+1.\nThus, according to Lemma 5, we have\nP{Cj\u0303(\u03c1)+1,k(t\u2212 1) < gj\u0303(\u03c1)+1(1\u2212 )\u02c6\u0300 (j) j\u0303(\u03c1)+1,k , N (1) j,k (t\u2212 1) \u2265 \u02c6\u0300 (j) j\u0303(\u03c1)+1,k } \u2264 e\u22122 2 \u02c6\u0300(j) j\u0303(\u03c1)+1,k \u2264 T\u22124.\n(34)\nSubstituting Eqs. (33) and (34) into Eq. (32), we have\nE[N (1)j,k (T )] \u2264 \u02c6\u0300 (j) j\u0303(\u03c1)+1,k + T\u2211 t=1 (2t\u22121 + T\u22124) \u2264 \u02c6\u0300(j) j\u0303(\u03c1)+1,k + 2 log T + 2 + T\u22123. (35)\nSubstituting Eq. (35) to Eq. (31) and letting = 2/3 in \u02c6\u0300(j) j\u0303(\u03c1)\u22121,k, we have\nE[T (1)] \u2264 2e \u22122\u03b42\n1\u2212 e\u22122\u03b42 + j\u0303(\u03c1)\u2211 j=1 K\u2211 k=1 \u02c6\u0300(j) j\u0303(\u03c1)+1,k + 2Kj\u0303(\u03c1) log T +O(1)\n\u2264 j\u0303(\u03c1)\u2211 j=1 K\u2211 k=1\n27 log T\n2gj\u0303(\u03c1)+1(\u2206 (j) j\u0303(\u03c1)+1,k )2\n+ 2Kj\u0303(\u03c1) log T +O(1). (36)\nCombining Lemma 4, Lemma 6, and Eq. (28), we have\nlim sup T\u2192\u221e\nRUCB\u2212ALP(T,B)\nlog T \u2264 \u0398(a) + \u0398(c)nb ,\nwhere\n\u0398(a) = J\u2211 j=1 \u2211 k 6=k\u2217j ( 2 \u2206 (j) j,k + 2\u2206 (j) j,k ) ,\n\u0398 (c) nb = [u\u0304 \u2217 + v(\u03c1)] { j\u0303(\u03c1)\u2211 j=1 K\u2211 k=1\n27\n2gj\u0303(\u03c1)+1[\u2206 (j) j\u0303(\u03c1)+1,k ]2\n+ J\u2211 j=j\u0303(\u03c1)+2 K\u2211 k=1\n27\n2gj [\u2206 (j\u0303(\u03c1)+1) j,k ]\n2 + 2KJ\n} .\nThis completes the proof of Part 1 in Theorem 2.\nNext, we discuss the bound of R(c)UCB\u2212ALP(T,B) for the boundary cases. The analysis is similar to the non-boundary cases with slight modification on the threshold.\nWe note that fundamentally, the context j\u0303(\u03c1) + 1 for \u03c1 6= qj and the context j\u0303(\u03c1) for \u03c1 = qj are both the minimum context with positive probability in the static LP problem. Thus, we can define the context ranking events Erank,s(t) (0 \u2264 s \u2264 2) similar to the analysis of Part 1, with j\u0303(\u03c1) + 1 replaced by j\u0303(\u03c1). Then, we have\nR (c) UCB\u2212ALP(T,B) = T\u2211 \u03c4=1 E[\u2206v\u03c4 ],\nwhere\nE[\u2206v\u03c4 ] = 2\u2211 s=0 E[\u2206v\u03c4 , Erank,s(T \u2212 \u03c4 + 1)].\nFor the case of s = 0, E[\u2206v\u03c4 , Erank,0(T \u2212 \u03c4 + 1)] = B\u2211 b=0 E[\u2206v\u03c4 |b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)]P{b\u03c4 = b, Erank,0(T \u2212 \u03c4 + 1)}.\nWhen b/\u03c4 \u2208 [\u03c1 \u2212 \u03b4, \u03c1 + \u03b4] and Erank,0(T \u2212 \u03c4 + 1) occurs, we have \u2206v\u03c4 \u2264 (u\u22171 \u2212 u\u2217J)|\u03c1 \u2212 b/\u03c4 |. Moreover, \u2206v\u03c4 \u2264 v(\u03c1) under any condition. Thus,\nE[\u2206v\u03c4 , Erank,0(T \u2212 \u03c4 + 1)] \u2264 u\u22171E[|b\u03c4/\u03c4 \u2212 \u03c1|] + v(\u03c1) \u2211\nb/\u2208[\u03c1\u2212\u03b4,\u03c1+\u03b4]\nP{b\u03c4 = b}\n\u2264 u\u22171\n\u221a Var(b\u03c4 )\n\u03c42 + 2v(\u03c1)e\u22122\u03b4 2\u03c4 .\nFor the other cases of s = 1, 2, we have E[\u2206v\u03c4 , Erank,s(T \u2212 \u03c4 + 1)] \u2264 v(\u03c1)P{Erank,s(T \u2212 \u03c4 + 1)}.\nOn the other hand, we extend Lemma 6 to the boundary cases:\nlim sup T\u2192\u221e E[T (1)] log T \u2264 \u2211 j<j\u0303(\u03c1) K\u2211 k=1\n27\n2gj\u0303(\u03c1)[\u2206 (j) j\u0303(\u03c1),k ]2\n+ 2K[j\u0303(\u03c1)\u2212 1],\nlim sup T\u2192\u221e E[T (2)] log T\n\u2264 \u2211\nj\u2265j\u0303(\u03c1)+1\nK\u2211 k=1\n27\n2gj [\u2206 (j\u0303(\u03c1)) j,k ]\n2 + 2K[J \u2212 j\u0303(\u03c1)],\nwhere\ngj = min { \u03c0j , 1\n2 (\u03c1\u2212 qj\u0303(\u03c1)\u22121),\n1 2 (qj\u0303(\u03c1)+1 \u2212 \u03c1)\n} .\nConsequently, we can bound R(c)UCB\u2212ALP(T,B) by summing over the entire horizon and using the properties of T (1) and T (2). The conclusion of Part 2 of Theorem 2 then follows by adding the bound of R(a)UCB\u2212ALP(T,B) and R (c) UCB\u2212ALP(T,B)."}, {"heading": "D Two-Context Systems with Unit-Cost", "text": "As a special case, the oracle algorithm can be obtained for two-context systems with unit costs. When the context distribution and expected rewards are unknown, the oracle algorithm can be combined with the UCB method to achieve logarithmic regret under both boundary and non-boundary cases."}, {"heading": "D.1 Oracle Algorithm: Procrastinate-for-the-Better-context", "text": "When there are only two contexts, the oracle algorithm is trivial. Under the unit-cost assumption, skipping the worse context does not waste any opportunities if b\u03c4 < \u03c4 . Thus, the agent can reserve budget for the better context, unless there is sufficient budget; i.e., we have the following algorithm:\nProcrastinate-for-the-Better (PB): If Xt = 1 and b\u03c4 > 0, or if b\u03c4 \u2265 \u03c4 , take action At = k\u2217Xt ; otherwise, At = 0.\nWe can verify that the above PB algorithm achieves the highest expected reward for any realization of the context arrival process. Thus, the PB algorithm is optimal in two-context systems. We note that the PB algorithm does not need to know the context distribution and only requires the ordering of the expected rewards. This property allows us to extend it to the case where the context distribution or expected rewards are unknown."}, {"heading": "D.2 UCB-PB: Logarithmic Regret Algorithm for Two-Context Bandits with Unit-Cost", "text": "When the context distribution and expected rewards are unknown, we propose the UCB-based Procrastinate-for-the-Better (UCB-PB) algorithm for solving the constrained contextual bandit problem with two contexts and unit costs.\nAlgorithm 2 UCB-PB Input: Time-horizon T , budget B; Init: Remaining time \u03c4 = T , remaining budget b = B;\nCj,k(0) = 0, u\u0304j,k(0) = 0, u\u0302j,k(0) = 1, for all j \u2208 X and k \u2208 A; u\u0302\u2217j (0) = 1 for all j \u2208 X ;\nfor t = 1 to T do k\u2217j (t)\u2190 arg maxk u\u0302j,k(t), \u2200j; u\u0302\u2217j (t)\u2190 u\u0302\u2217j,k\u2217j (t)(t), \u2200j; j\u2217(t)\u2190 arg maxj u\u0302\u2217j (t); if b \u2265 \u03c4 or (0 < b < \u03c4 and Xt = j\u2217(t)) then\nTake action k\u2217Xt(t); end if Update \u03c4 , b, Cj,k(t), u\u0304j,k(t), and u\u0302j,k(t);\nend for\nAs shown in Algorithm 2, the agent maintains UCB estimates u\u0302j,k(t)\u2019s for the expected rewards of all context-action pairs. In each round, the agent implements the PB algorithm based on these estimates.\nNext, we study the regret of the UCB-PB algorithm. We show that the UCB-PB algorithm achieves logarithmic regret for any given \u03c1 \u2208 (0, 1). Theorem 3. For a constrained contextual bandit with unit-cost and two contexts, the UCB-PB algorithm achieves logarithmic regret as T goes to infinity, i.e.,\nlim sup T\u2192\u221e\nRUCB-PB(T,B)\nlog T \u2264 K\u2211 k=1 [ 27 2\u03c02\u2206 (1) 2,k + 2\u2206 (1) 2,k ] + 2\u2211 j=1 \u2211 k 6=k\u2217j [ 2 \u2206 (j) j,k + 2\u2206 (j) j,k ] .\nProof. The proof of Theorem 3 is similar to that of Theorem 2, while the analysis on the error events is even simpler. Note that the regret is defined as the difference between the expected total rewards achieved by the UCB-PB algorithm and the oracle algorithm. For the oracle algorithm, let C\u2217j (t) = \u2211t t\u2032=1 1{Xt\u2032 = j, At\u2032 = k\u2217j } be the number of times that the context-action pair (j, k\u2217j )\nhas been executed up to round t. For the UCB-PB algorithm, Recall that Cj,k(t) = \u2211t t\u2032=1 1{Xt\u2032 = j, At\u2032 = kj} is the number of times that the context-action pair (j, k) has been executed up to round t, and let Cj(t) = \u2211K k=1 Cj,k(t). Then the regret of UCB-PB can be expressed as\nRUCB-PB(T,B)\n= J\u2211 j=1 u\u2217jE[C\u2217j (T )]\u2212 J\u2211 j=1 K\u2211 k=1 uj,kE[Cj,k(T )]\n= J\u2211 j=1 K\u2211 k=1 \u2206 (j) j,kE[Cj,k(T )] + J\u2211 j=1 u\u2217jE [ C\u2217j (T )\u2212 K\u2211 k=1 Cj,k(T ) ]\n= R (a) UCB-PB(T,B) +R (c) UCB-PB(T,B), (37)\nwhere R(a)UCB-PB(T,B) is the regret due to action-ranking errors, i.e.,\nR (a) UCB-PB(T,B) = J\u2211 j=1 \u2211 k 6=k\u2217j \u2206 (j) j,kE[Cj,k(T )],\nand R(c)UCB-PB(T,B) is the regret due to context-ranking errors, i.e.,\nR (c) UCB-PB(T,B) = J\u2211 j=1 u\u2217jE [ C\u2217j (T )\u2212 K\u2211 k=1 Cj,k(T ) ] = (u\u22171 \u2212 u\u22172)E [ C\u22171 (T )\u2212 C1(T ) ] . (38)\nThe expression of R(c)UCB-PB(T,B) uses the fact that both the oracle algorithm and UCB-PB will exhaust their entire budget, i.e., \u2211J j=1 C \u2217 j (T ) = \u2211J j=1 Cj(T ) = B.\nFor R(a)UCB-PB(T,B), we note that Lemma 4 also holds under UCB-PB, i.e.,\nR (a) UCB-PB(T,B) \u2264 J\u2211 j=1 \u2211 k 6=k\u2217j [( 2 \u2206 (j) j,k + 2\u2206 (j) j,k ) log T + 2\u2206 (j) j,k ] . (39)\nNext, we show that R(c)UCB-PB(T,B) is also of order O(log T ). Let (X\u0302t, A\u0302t) be the context-action pair that has the highest UCB in round t. Moreover, let C\u0302j(t) be the number of events that context j has the maximum index up to round t, i.e., C\u0302j(t) = \u2211t t\u2032=1 1(X\u0302t = j), and C\u0302j,k(t) be the number of events that the context-action pair (j, k) has the highest UCB up to round t, i.e., C\u0302j,k(t) =\u2211t t\u2032=1 1(X\u0302t = j, A\u0302t = k). We show that the UCB-PB algorithm mistakes the suboptimal context\nas the optimal context for at most O(log T ) times, i.e., E[C\u03022(T )] = O(log T ), and then E [ C\u22171 (T )\u2212\nC1(T ) ] \u2264 E[C\u03022(T )] = O(log T ).\nSpecifically, consider the suboptimal context j = 2. For 1 \u2264 k \u2264 K, we have\nE [ C\u03022,k(T ) ] \u2264 \u02c6\u0300(1)2,k + T\u2211 t=1 P{X\u0302t = 2, A\u0302t = k, b\u03c4 > 0, C\u03022,k(t\u2212 1) \u2265 \u02c6\u0300(1)2,k},\nwhere \u02c6\u0300(1)2,k = 2 log T \u03c02(1\u2212 ) 2(\u2206(1)2,k)2 , and \u2208 (0, 1).\nBased on Lemma 5, we have\nP{C2,k(t\u2212 1) < \u03c02(1\u2212 )\u02c6\u0300(1)2,k, b\u03c4 > 0, C\u03022,k(t\u2212 1) \u2265 \u02c6\u0300 (1) 2,k} \u2264 e \u22122 2 \u02c6\u03002,k \u2264 T\u22124. (40)\nThus,\nP{X\u0302t = 2, A\u0302t = k, C\u03022,k(t\u2212 1) \u2265 \u02c6\u0300(1)2,k, b\u03c4 > 0}\n\u2264 P{X\u0302t = 2, A\u0302t = k,C2,k(t\u2212 1) \u2265 \u03c02(1\u2212 )\u02c6\u0300(1)2,k}\n+ P{C2,k(t\u2212 1) < \u03c02(1\u2212 )\u02c6\u0300(1)2,k, C\u03022,k(t\u2212 1) \u2265 \u02c6\u0300 (1) 2,k, b\u03c4 > 0}\n\u2264 P{u\u0302\u22172,k(t) > u\u03021,k\u22171 (t)|C2,k(t\u2212 1) \u2265 \u03c02(1\u2212 )\u02c6\u0300 (1) 2,k}\n+ P{C2,k(t\u2212 1) < \u03c02(1\u2212 )\u02c6\u0300(1)2,k, C\u03022,k(t\u2212 1) \u2265 \u02c6\u0300 (1) 2,k, b\u03c4 > 0}\n\u2264 2t\u22121 + T\u22124,\nwhere the last inequality results from Lemma 3 (note that for j = 2, u\u03022,k(t) < u\u03021,k\u22171 (t) \u2264 u\u0302 \u2217 1(t)) and Eq. (40).\nSumming over all actions, we have\nE[C\u03022(T )] = K\u2211 k=1 E [ C\u03022,k(T ) ] \u2264 K\u2211 k=1 \u02c6\u0300(1) 2,k + T\u2211 t=1 K\u2211 k=1 (2t\u22121 + T\u22124)\n= K\u2211 k=1 [ 2 \u03c02(1\u2212 ) 2(\u2206(1)2,k)2 + 2 ] log T +O(1).\nConsequently,\nE[C\u22171 (T )\u2212 C1(T )] \u2264 K\u2211 k=1 [ 2 \u03c02(1\u2212 ) 2(\u2206(1)2,k)2 + 2 ] log T +O(1)\n= K\u2211 k=1 [ 27 2\u03c02(\u2206 (1) 2,k) 2 + 2 ] log T +O(1). (41)\nThe last equality is obtained by letting = 2/3. Combining Eqs. (39), (38), and (41), and using the fact that u\u22171 \u2212 u\u22172 \u2264 u\u22171 \u2212 u2,k for all k, we can obtain the conclusion of Theorem 3."}, {"heading": "E Constrained Contextual Bandits with Unknown Context Distribution", "text": "In this section, we relax the assumption of known context distribution and study unit-cost systems with unknown context distribution. Since the arrival of contexts is independent of the actions taken by the agent. a natural idea is to implement the ALP or UCB-ALP algorithm based on the empirical distribution as follows:\nEALP and UCB-EALP Algorithms: the agent maintains the empirical distribution of the contexts, denoted by \u03c0\u0302t = (\u03c0\u03021,t, \u03c0\u03022,t, . . . , \u03c0\u0302J,t), where \u03c0\u0302j,t = 1t \u2211t t\u2032=1 1(Xt\u2032 = j). In each round, the agent executes the ALP (when the expected rewards are known) or UCB-ALP (when the expected rewards are unknown) algorithms with the context distribution \u03c0 in LP\u03c4,b replaced by \u03c0\u0302t. These algorithms are referred to as Empirical ALP (EALP) and UCB-EALP, respectively.\nAs we can see from the numerical simulations in Appendix G, the above EALP and UCB-EALP algorithms have similar performance as ALP and UCB-ALP, respectively. However, the regret analysis for these algorithms is challenging because the empirical distribution introduces complex temporal dependency since the empirical distribution depends on the context arrivals in all the past rounds, which makes it difficult to analyze the evolution of the remaining budget. Thus, we focus on the non-boundary cases and consider truncated version of EALP and UCB-EALP. Specifically, we study algorithms that stop updating the empirical distribution from the T1-th (will be defined later) round and use the fixed estimate \u03c0\u0302T1 for the remaining rounds, which are referred to as EALP2 (as shown in Algorithm 3) and UCB-EALP2, respectively. We focus on the EALP2 algorithm for the case where the expected rewards are known, while the properties of UCB-EALP2 can be obtained by similar techniques in the analysis of UCB-ALP combined with the properties of EALP2.\nAlgorithm 3 EALP2 Input: Time horizon T , budget B, learning stage length T1, and expected rewards u\u2217j \u2019s; Init: \u03c4 = T ; b = B; \u03c0\u0302j,0 = 0, \u2200j; for t = 1 to T do\nif t \u2264 T1 then \u03c0\u0302j,t \u2190 (t\u22121)\u03c0\u0302j,t\u22121+1(Xt=j)t , \u2200j; end if if b > 0 then\nObtain the probabilities pj(b/\u03c4)\u2019s by solving LP\u03c4,b with \u03c0 replaced by \u03c0\u0302t. Take action k\u2217Xt with probability pXt(b/\u03c4).\nend if end for\nNow we show that for a sufficiently large T and an appropriate chosen T1, the EALP2 algorithm achieves similar performance as ALP in the non-boundary cases. Let \u03b4 = min{qj\u0303(\u03c1)+1\u2212\u03c1, \u03c1\u2212qj\u0303(\u03c1)} be the gap between \u03c1 and the boundaries. The following theorem shows that EALP2 achieves O(1) regret with appropriately chosen T and T1.\nTheorem 4. Given a fixed \u03c1 \u2208 (0, 1), \u03c1 6= qj , j = 1, 2, . . . , J \u2212 1. If T1 = 16J2 log3 T/\u03b42 and T satisfies log3 T/T \u2264 \u03b43/(64J2), then the regret of EALP2 satisfies REALP2(T,B) = O(1).\nNote that here we assume \u03b4 is known for the simplicity of presentation. When considering practical scenarios where \u03b4 is unknown, we can obtain a lower confidence bound of \u03b4 as follows. At round t, let q\u0302j,t = \u2211j j\u2032=1 \u03c0\u0302j,t be the empirical estimate of the cumulative probability. Further, let j\u0303 \u2032 t(\u03c1) =\nmax{j : q\u0302j,t \u2264 \u03c1} be the threshold under the empirical estimate. Let \u03b4\u0302t = min{q\u0302j\u0303\u2032t(\u03c1)+1 \u2212 \u03c1, \u03c1 \u2212 q\u0302j\u0303\u2032t(\u03c1)} and \u03b4\u030ct = 1 2 \u03b4\u0302t. Then \u03b4\u030ct is a lower confidence bound of \u03b4 with P{\u03b4 \u2265 \u03b4\u030ct} \u2265 1 \u2212 e \u22122\u03b4\u030c2t t. We choose T1 which is the smallest t such that e\u22122\u03b4\u030c 2 t t \u2264 1T 2 and t \u2265 16J\n2 log3 T/\u03b4\u030c2t . Then the following analysis holds, while the regret due to the event that \u03b4 \u2265 \u03b4\u030ct will be O(1). Moreover, such a t will appear with high probability after 64J2 log3 T/\u03b42 rounds for the non-boundary cases, and not appear with high probability for the boundary cases.\nSimilar to the non-boundary cases in Theorem 1, the key idea of proving Theorem 4 is to show that under EALP2, the average remaining budget b\u03c4/\u03c4 will not cross the boundaries with high probability. To achieve this, we examine the expectation of b\u03c4/\u03c4 and its concentration properties under EALP2.\nStep 1: Estimation error of \u03c0\u0302T1 . Let \u03b1 = \u03b4/(4J log T ). According to Hoeffding-Chernoff bound, we have\nP{|\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1,\u2200j} \u2265 1\u2212 2J\nT 2 . (42)\nStep 2: Bound on the expectation of b\u03c4/\u03c4 . Lemma 7. Assume |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1 for all j. Then, for all T1 \u2264 t \u2264 T , the expectation of the average remaining budget satisfies\n|E[b\u03c4/\u03c4 ]\u2212 \u03c1| \u2264 \u03b4\n2 , (43)\nwhere \u03c4 = T \u2212 t+ 1.\nProof. First, we note that the average remaining budget b\u03c4/\u03c4 is close to the initial value \u03c1 at round T1, because we can verify that for all t \u2264 T1,\n\u03c1\u2212 \u03b4 4 \u2264 B \u2212 T1 T \u2212 T1 + 1 \u2264 b\u03c4 \u03c4 \u2264 B T \u2212 T1 + 1 \u2264 \u03c1+ \u03b4 4 . (44)\nNow we show by mathematical induction that, if |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1 for all j, then |E[b\u03c4/\u03c4 ] \u2212 \u03c1| \u2264 J\u03b1 \u2211\u03c4 \u03c4 \u2032=T\u2212T1+1 1 \u03c4 \u2032 + \u03b4 4 for \u03c4 \u2264 T \u2212 T1 + 1 (i.e., t \u2265 T1).\nSpecifically, for t = T1, we have \u2223\u2223E[ bT\u2212T1+1T\u2212T1+1 ]\u2212\u03c1\u2223\u2223 \u2264 \u03b44 according to Eq. (44). For any given t \u2265 T1, we have \u03c4 = T \u2212 t+ 1, and E[b\u03c4\u22121|b\u03c4 = b]\n= b\u2212 ( b/\u03c4 \u2212 \u2211 j\u2264j\u0303(b/\u03c4) \u03c0\u0302j,T1\n\u03c0\u0302j\u0303(b/\u03c4)+1,T1 \u03c0j\u0303(b/\u03c4)+1 + \u2211 j\u2264j\u0303(b/\u03c4) \u03c0j\n)\n= b\u2212 b/\u03c4 + b/\u03c4 \u2212\n\u2211 j\u2264j\u0303(b/\u03c4) \u03c0\u0302j,T1\n\u03c0\u0302j\u0303(b/\u03c4)+1,T1 (\u03c0\u0302j\u0303(b/\u03c4)+1,T1 \u2212 \u03c0j\u0303(b/\u03c4)+1) + \u2211 j\u2264j\u0303(b/\u03c4) (\u03c0\u0302j,T1 \u2212 \u03c0j).\nNote that 0 < b/\u03c4\u2212\n\u2211 j\u2264j\u0303(b/\u03c4) \u03c0\u0302j,T1\n\u03c0\u0302j\u0303(b/\u03c4)+1,T1 < 1. Thus, \u2223\u2223E[b\u03c4\u22121|b\u03c4 = b] \u2212 b(\u03c4\u22121)\u03c4 \u2223\u2223 \u2264 J\u03b1, implying that\u2223\u2223E[ b\u03c4\u22121\u03c4\u22121 |b\u03c4 = b]\u2212 b\u03c4 \u2223\u2223 \u2264 J\u03b1\u03c4\u22121 . If \u2223\u2223E[b\u03c4/\u03c4 ]\u2212 \u03c1| \u2264 J\u03b1\u2211\u03c4\u03c4 \u2032=T\u2212T1+1 1\u03c4 \u2032 + \u03b44 for 2 \u2264 \u03c4 \u2264 T \u2212T1 + 1, then\n\u2223\u2223E[b\u03c4\u22121/(\u03c4 \u2212 1)]\u2212 \u03c1| \u2264 J\u03b1\u2211\u03c4\u03c4 \u2032=T\u2212T1+1 1\u03c4 \u2032 + J\u03b1\u03c4\u22121 + \u03b44 . The conclusion of Lemma 7 then follows because |E[b\u03c4/\u03c4 ] \u2212 \u03c1| \u2264 J\u03b1 \u2211\u03c4 \u03c4 \u2032=T\u2212T1+1 1 \u03c4 \u2032 + \u03b4 4 \u2264 J\u03b1 log T + \u03b44 \u2264 \u03b4 2 .\nStep 3: Concentration of b\u03c4/\u03c4 . The next lemma shows the concentration of the average remaining budget b\u03c4/\u03c4 . Lemma 8. Assume |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1 for all j. The average remaining budget b\u03c4/\u03c4 in round t = T \u2212 \u03c4 + 1 satisfies\nP { |b\u03c4 \u03c4 \u2212 E[b\u03c4 \u03c4 ]| \u2265 \u03b4/4 } \u2264 2 exp ( \u2212 \u03b4 2\u03c4 32 ) . (45)\nTo show the concentration of b\u03c4/\u03c4 , we first use the coupling argument to show the following lemma and then use the method of averaged bounded differences [23]. Lemma 9. Assume |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1 for all j. The remaining budget b\u03c4 in round t = T \u2212 \u03c4 + 1 satisfies\u2223\u2223E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 1]\u2212 E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 0]\u2223\u2223 \u2264 2( \u03c4 T \u2212 t\u2032 )1\u2212\u03c3 , T1 \u2264 t\u2032 < t. (46)\nwhere Zt\u2032\u22121 = (Z1, Z2, . . . , Zt\u2032\u22121) and \u03c3 = 1\u2212minj \u03c0j\u03c0j+\u03b1 .\nProof. We bound the difference by constructing a couplingM of the two conditional distributions (\u00b7|Zt\u2032\u22121, Zt\u2032 = 1) and (\u00b7|Zt\u2032\u22121, Zt\u2032 = 0). Let \u03b6t\u2032+1, \u03b6t\u2032+2, . . . , \u03b6T\u2212\u03c4 and \u03b6 \u2032t\u2032+1, \u03b6 \u2032t\u2032+2, . . . , \u03b6 \u2032T\u2212\u03c4 be the pair of random variables in the couplingM. We construct the coupling as follows:\nCoupling: We generate the value of \u03b6t\u2032\u2032 \u2019s and \u03b6 \u2032t\u2032\u2032 \u2019s sequentially. For each t\u2032\u2032 > t\u2032, let b\u0303T\u2212t\u2032\u2032+1 = B \u2212 1 \u2212 \u2211t\u2032\u22121 s=1 Zs \u2212 \u2211t\u2032\u2032\u22121 s=t\u2032+1 \u03b6s and b\u0303 \u2032 T\u2212t\u2032\u2032+1 = B \u2212 \u2211t\u2032\u22121 s=1 Zs \u2212 \u2211t\u2032\u2032\u22121 s=t\u2032+1 \u03b6 \u2032 s be the remaining budgets in round t\u2032\u2032 corresponding to the pair of random variables. For \u03b6t\u2032\u2032 , We pick its value\nrandomly with distribution P{\u03b6t\u2032\u2032 = 1} = h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) and P{\u03b6t\u2032\u2032 = 0} = 1 \u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) , where h(\u03c1) is the probability that one unit of budget will be consumed under EALP2 when the average remaining budget is \u03c1, i.e.,\nh(\u03c1) = \u03c1\u2212\n\u2211 j\u2032\u2264j\u0303(\u03c1) \u03c0\u0302j,T1 \u03c0\u0302j\u0303(\u03c1)+1,T1 \u03c0j\u0303(\u03c1)+1 + \u2211 j\u2032\u2264j\u0303(\u03c1) \u03c0j . (47)\nFor \u03b6 \u2032t\u2032\u2032 , we generate its value conditioned on \u03b6t\u2032\u2032 . If b\u0303 \u2032 T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1, then \u03b6 \u2032 t\u2032\u2032 = \u03b6t\u2032\u2032 . If b\u0303\u2032T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1 + 1, then\nP { \u03b6 \u2032t\u2032\u2032 = \u03b6t\u2032\u2032 |b\u0303\u2032T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1 } = 1,\nP { \u03b6 \u2032t\u2032\u2032 = 1|b\u0303\u2032T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1 + 1, \u03b6t\u2032\u2032 = 1 } = 1, P { \u03b6 \u2032t\u2032\u2032 = 1|b\u0303\u2032T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1 + 1, \u03b6t\u2032\u2032 = 0 } = h ( b\u0303\u2032 T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) \u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) 1\u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1\n) . Note that according to the above construction, b\u0303\u2032T\u2212t\u2032\u2032+1 \u2212 b\u0303T\u2212t\u2032\u2032+1 could only be 0 or 1. We can verify that the marginals satisfy\n(\u03b6t\u2032\u2032 , t \u2032\u2032 > t\u2032) \u223c (Zt\u2032\u2032 , t\u2032\u2032 > t\u2032|Zt\u2032\u22121, Zt\u2032 = 1),\nand\n(\u03b6 \u2032t\u2032\u2032 , t \u2032\u2032 > t\u2032) \u223c (Zt\u2032\u2032 , t\u2032\u2032 > t\u2032|Zt\u2032\u22121, Zt\u2032 = 0).\nFrom the construction of the coupling, we know that b\u0303\u2032\u03c4 \u2212 b\u0303\u03c4 = 1 if and only if \u03b6t\u2032\u2032 = \u03b6 \u2032t\u2032\u2032 for all t\u2032 < t\u2032\u2032 \u2264 T \u2212 \u03c4 . Thus, \u2223\u2223E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 1]\u2212 E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 0]\u2223\u2223\n= P { \u03b6t\u2032\u2032 = \u03b6 \u2032 t\u2032\u2032 , t \u2032 < t\u2032\u2032 \u2264 T \u2212 \u03c4 }\n= T\u2212\u03c4\u220f t\u2032\u2032=t\u2032+1 P { \u03b6t\u2032\u2032 = \u03b6 \u2032 t\u2032\u2032 |\u03b6s = \u03b6 \u2032s, t\u2032 < s \u2264 t\u2032\u2032 \u2212 1 } . (48)\nWe show that each term in Eq. (48) can be bounded as follows.\nLemma 10. The couplingM satisfies\nP { \u03b6t\u2032\u2032 = \u03b6 \u2032 t\u2032\u2032 |\u03b6s = \u03b6 \u2032s, t\u2032 < s \u2264 t\u2032\u2032 \u2212 1 } \u2264 1\u2212 1\u2212 \u03c3\nT \u2212 t\u2032\u2032 + 1 ,\nwhere \u03c3 = 1\u2212minj \u03c0j\u03c0j+\u03b1 .\nProof. Conditioned on \u03b6s = \u03b6 \u2032s, t \u2032 < s \u2264 t\u2032\u2032 \u2212 1, we have b\u0303\u2032T\u2212t\u2032\u2032+1 = b\u0303T\u2212t\u2032\u2032+1 + 1, and \u03b6t\u2032\u2032 6= \u03b6 \u2032t\u2032\u2032 i.f.f. \u03b6 \u2032t\u2032\u2032 = 0 and \u03b6t\u2032\u2032 = 1. Thus,\nP { \u03b6t\u2032\u2032 = \u03b6 \u2032 t\u2032\u2032 |\u03b6s = \u03b6 \u2032s, t\u2032 < s \u2264 t\u2032\u2032 \u2212 1 } = 1\u2212\nh ( b\u0303\u2032 T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) \u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) 1\u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T\u2212t\u2032\u2032+1 ) [1\u2212 h( b\u0303T\u2212t\u2032\u2032+1T \u2212 t\u2032\u2032 + 1) ]\n= 1\u2212 [ h ( b\u0303\u2032T\u2212t\u2032\u2032+1 T \u2212 t\u2032\u2032 + 1 ) \u2212 h ( b\u0303T\u2212t\u2032\u2032+1 T \u2212 t\u2032\u2032 + 1 )] . (49)\nTo prove Lemma 10, it suffices to show that for any b and \u03c4 satisfying b \u2264 \u03c4 \u22121, we have h ( b+1 \u03c4 ) \u2212\nh ( b \u03c4 ) \u2265 \u03b3/\u03c4 , where \u03b3 = minj \u03c0j\u03c0j+\u03b1 .\nSpecifically, from the definition of h(\u00b7) in Eq. (47), we know that if j\u0303 ( b+1 \u03c4 ) = j\u0303 ( b \u03c4 ) , we have\nh ( b+1 \u03c4 ) \u2212 h ( b \u03c4 ) = \u03c0 j\u0303( b \u03c4 )\n\u03c0\u0302 j\u0303( b \u03c4 ),T1\n\u00b7 1\u03c4 \u2265 \u03b3/\u03c4 .\nIf j\u0303 ( b+1 \u03c4 ) > j\u0303 ( b \u03c4 ) , we have b\u03c4 \u2212 \u2211 j\u2264j\u0303( b\u03c4 ) \u03c0\u0302j,T1 < \u03c0\u0302j\u0303( b\u03c4 )+1,T1 and b+1\u03c4 \u2212 \u2211 j\u2264j\u0303( b+1\u03c4 )\n\u03c0\u0302j,T1 > 0. Therefore,\nh (b+ 1\n\u03c4 ) \u2212 h ( b \u03c4 ) =\nj\u0303( b+1\u03c4 )\u2211 j=j\u0303( b\u03c4 )+1 \u03c0j + b+1 \u03c4 \u2212\n\u2211 j\u2264j\u0303( b+1\u03c4 ) \u03c0\u0302j,T1\n\u03c0\u0302j\u0303( b+1\u03c4 )+1,T1 \u03c0j\u0303( b+1\u03c4 )+1\n\u2212 b \u03c4 \u2212\n\u2211 j\u2264j\u0303( b\u03c4 ) \u03c0\u0302j,T1 \u03c0\u0302j\u0303( b\u03c4 )+1,T1 \u03c0j\u0303( b\u03c4 )+1\n= j\u0303( b+1\u03c4 )\u2211 j=j\u0303( b\u03c4 )+2 \u03c0j + \u03c0j\u0303( b\u03c4 )+1 \u03c0\u0302j\u0303( b\u03c4 )+1,T1 [ \u03c0\u0302j\u0303( b\u03c4 )+1,T1 \u2212 ( b \u03c4 \u2212 \u2211 j\u2264j\u0303( b\u03c4 ) \u03c0\u0302j,T1 )] + \u03c0j\u0303( b+1\u03c4 )+1 \u03c0\u0302j\u0303( b+1\u03c4 )+1,T1 [ b+ 1 \u03c4 \u2212 \u2211 j\u2264j\u0303( b+1\u03c4 ) \u03c0\u0302j,T1 ] \u2265 j\u0303( b+1\u03c4 )\u2211\nj=j\u0303( b\u03c4 )+2\n\u03c0j \u03c0\u0302j,T1 \u03c0\u0302j,T1 + \u03b3\n( 1\n\u03c4 \u2212 j\u0303( b+1\u03c4 )\u2211 j=j\u0303( b\u03c4 )+2 \u03c0\u0302j,T1 ) \u2265 \u03b3/\u03c4. (50)\nUsing Lemma 10, we have\u2223\u2223E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 1]\u2212 E[b\u03c4 |Zt\u2032\u22121, Zt\u2032 = 0]\u2223\u2223 \u2264 T\u2212\u03c4\u220f t\u2032\u2032=t\u2032+1 ( 1\u2212 1\u2212 \u03c3 T \u2212 t\u2032\u2032 + 1 )\n(a) =\n\u03c4 + \u03c3 T \u2212 t\u2032 T\u2212t\u2032\u2212\u03c4\u22121\u220f\ns=1\n( 1 + \u03c3\n\u03c4 + s ) (b) \u2264 \u03c4 + \u03c3 T \u2212 t\u2032 (T \u2212 t\u2032 \u2212 1 \u03c4\n)\u03c3 \u2264 2\n( \u03c4 T \u2212 t\u2032 )1\u2212\u03c3 .\nEquality (a) is obtained by merging the numerator of each term with the denominator of the next term. Inequality (b) is true because \u03c3 < 1, and\nlog T\u2212t\u2032\u2212\u03c4\u22121\u220f s=1 ( 1 + \u03c3 \u03c4 + s ) = T\u2212t\u2032\u2212\u03c4\u22121\u2211 s=1 log ( 1 + \u03c3 \u03c4 + s ) \u2264 T\u2212t\u2032\u2212\u03c4\u22121\u2211 s=1 \u03c3 \u03c4 + s \u2264 \u03c3 log (T \u2212 t\u2032 \u2212 1 \u03c4 ) .\nTo use the method of averaged bounded differences [23], we note that T\u2212\u03c4\u2211 t\u2032=T1 [ 2 ( \u03c4 T \u2212 t\u2032 )1\u2212\u03c3]2 \u2264 4\u03c42\u22122\u03b1 \u00b7 [ 1 \u03c41\u22122\u03c3 \u2212 1 (T \u2212 T1 + 1)1\u22122\u03c3 ] \u2264 4\u03c4. (51)\nThen, according to Corollary 5.1 in [23] and Lemma 9, we have\nP { |b\u03c4 \u2212 E[b\u03c4 ]| \u2265 \u03b4\u03c4/4 } \u2264 2 exp ( \u2212 2(\u03b4\u03c4/4) 2\n4\u03c4\n) = 2 exp ( \u2212 \u03b4 2\u03c4\n32\n) .\nimplying Eq. (45) in Lemma 8.\nStep 4: Upper bound ofREALP2(T,B). Now we bound the regretREALP2(T,B) using the results obtained in the previous steps. We analyze the event of \u201cboundary-crossing\u201d in round t, denoted as Ecross,t, which is the event that j\u0303(b\u03c4/\u03c4) 6= j\u0303(\u03c1). The event of \u201cboundary-crossing\u201d may happen when the estimates of empirical distribution is inaccurate or the average remaining budget b\u03c4/\u03c4 deviates far from \u03c1. We study the probability of Ecross,t for t \u2264 T1 and t > T1, respectively.\nFor t \u2264 T1, the average remaining budget satisfies \u03c1 \u2212 \u03b4/4 \u2264 b\u03c4/\u03c4 \u2264 \u03c1 + \u03b4/4, as discussed in Step 2. The event Ecross,t may occur only when there is some j such that |\u03c0\u0302j,t \u2212 \u03c0j | \u2265 \u03b4/(4J). Thus,\nP{Ecross,t} \u2264 P{\u2203j, |\u03c0\u0302j,t \u2212 \u03c0j | \u2265 \u03b4/(4J)} \u2264 2J exp(\u2212\u03b42t/8J2), t \u2264 T1. (52)\nFor t > T1, if the empirical distribution |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2264 \u03b1 (< \u03b4/(4J) for sufficiently large T ) for all j, then the average remaining budget satisfies P { | b\u03c4\u03c4 \u2212 E[ b\u03c4 \u03c4 ]| \u2265 3\u03b4/4 } \u2264 2 exp ( \u2212 \u03b4 2\u03c4 32 ) due to Lemma 7 and Lemma 8. Thus,\nP{Ecross,t} \u2264 P{\u2203j, |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2265 \u03b1}+ P { |b\u03c4 \u03c4 \u2212 E[b\u03c4 \u03c4 ]| \u2265 3\u03b4/4|\u2200j, |\u03c0\u0302j,T1 \u2212 \u03c0j | \u2265 \u03b1 } \u2264 2J\nT 2 + 2 exp\n( \u2212 \u03b4 2\u03c4\n32\n) , t > T1. (53)\nNow we bound the expectation of Cj(T ), i.e., the number of executions under context j.\nFor j \u2264 j\u0303(\u03c1), E[Cj(T )] = E [ T\u2211 t=1 1(Xt = j, At = k \u2217 j ) ]\n\u2265 T\u2211 t=1 P{Xt = j, At = k\u2217j |qEcross,t}P{qEcross,t}\n= T\u2211 t=1 \u03c0j ( 1\u2212 P{Ecross,t} ) \u2265 \u03c0jT \u2212\nT1\u2211 t=1 2J exp(\u2212\u03b42t/8J2)\u2212 T\u2211\nt=T1+1\n[2J T 2 + 2 exp ( \u2212 \u03b4 2\u03c4 32 )] = \u03c0jT +O(1),\nand\nE[Cj(T )] \u2264 \u03c0jT,\nSimilarly, for j > j\u0303(\u03c1) + 1, we have\nE[Cj(T )] \u2264 T\u2211 t=1 P{Xt = j, At = k\u2217j |Ecross,t}P{Ecross,t} = O(1).\n(54)\nFor j = j\u0303(\u03c1) + 1, we have E[Cj(T )] = E[B \u2212 b0]\u2212 \u2211\nj 6=j\u0303(\u03c1)+1 E[Cj(t)] \u2265 B \u2212 T \u2211 j\u2264j\u0303(\u03c1) \u03c0j \u2212O(1) = ( \u03c1\u2212 \u2211 j\u2264j\u0303(\u03c1) \u03c0j ) T \u2212O(1).\nWe complete the proof of Theorem 4 by summing over all contexts:\nUEALP2(T,B) = J\u2211 j=1 \u00b5\u2217jE[Cj(T )] \u2265 T v\u0303(\u03c1)\u2212O(1) = U\u0302(T,B)\u2212O(1)."}, {"heading": "F Constrained Contextual Bandits with Heterogeneous Costs", "text": "In this section, we consider the case where the cost for each action k under context j is fixed at cj,k, which may be different for different j and k. We discuss how to use the insight from unit-cost systems in heterogeneous-cost systems."}, {"heading": "F.1 Approximation of the Oracle Algorithm", "text": "Similar to unit-cost systems, we first study the case with known statistics. We generalize the upper bound and the ALP algorithm in Section 3 to general-cost systems."}, {"heading": "F.1.1 Upper Bound", "text": "With known statistics, the agent knows the context distribution \u03c0j\u2019s, the costs cj,k\u2019s, and the expected rewards uj,k\u2019s. In heterogeneous-cost systems, the quality of a context-action pair (j, k) is roughly captured by the normalized reward, denoted by \u03b7j,k = uj,k/cj,k. However, unlike the unit-cost case, the agent cannot only focus on the \u201cbest\u201d action with highest normalized reward, i.e., k\u2217j = arg maxk \u03b7j,k, when making a decision under context j. This is because there may exist another action k such that \u03b7j,k < \u03b7j,k\u2217j , but uj,k > uj,k\u2217j (and of course, cj,k > cj,k\u2217j ). If there is sufficient budget allocated for context j, then the agent may take action k to maximize the expected reward. Therefore, the agent needs to consider all actions under each context. Let pj,k be the probability that action k is taken under context j. We define the following LP problem:\n(LP \u2032T,B) maximize J\u2211 j=1 \u03c0j K\u2211 k=1 pj,kuj,k, (55)\nsubject to J\u2211 j=1 \u03c0j K\u2211 k=1 pj,kcj,k \u2264 B/T, (56)\nK\u2211 k=1 pj,k \u2264 1, \u2200j, (57)\npj,k \u2208 [0, 1].\nThe above LP problem LP \u2032T,B can be solved efficiently by optimization tools. Let v\u0302(\u03c1) be the maximum value of LP \u2032T,B . Similar to Lemma 1, we can show that T v\u0302(\u03c1) is an upper bound of the expected total reward, i.e., T v\u0302(\u03c1) \u2265 U\u2217(T,B).\nTo obtain insight from the solution of LP \u2032T,B , we derive an explicit representation for the solution by analyzing the structure of LP \u2032T,B . Note that there are two types of (non-trivial) constraints in LP \u2032T,B , one is the \u201cinter-context\u201d budget constraint (56), the other is the \u201cintra-context\u201d constraint (57). These constraints can be decoupled by first allocating budget for each context, and then solving a subproblem with the allocated budget constraint for each context. Specifically, let \u03c1j be the budget allocated to context j, then LP \u2032T,B can be decomposed as follows:\nmaximize J\u2211 j=1 \u03c0j v\u0302j(\u03c1j), subject to J\u2211 j=1 \u03c0j\u03c1j \u2264 B/T,\nwhere\n(SPj) vj(\u03c1j) = maximize K\u2211 k=1 pj,kuj,k, (58)\nsubject to K\u2211 k=1 pj,kcj,k \u2264 \u03c1j , (59)\nK\u2211 k=1 pj,k \u2264 1, (60)\npj,k \u2208 [0, 1].\nNext, by analyzing sub-problem SPj , we show that some actions can be deleted without affecting the performance, i.e., the probability is 0 in the optimal solution.\nLemma 11. For any given \u03c1j \u2265 0, there exists an optimal solution of SPj , i.e., p\u2217j = (p\u2217j,1, p \u2217 j,2, . . . , p \u2217 j,K), satisfies: (1) For k1, if there exists another action k2, such that \u03b7j,k1 \u2264 \u03b7j,k2 and uk1 \u2264 uk2 , then p\u2217j,k1 = 0; (2) For k1, if there exists two actions k2 and k3, such that \u03b7j,k2 \u2264 \u03b7j,k1 \u2264 \u03b7j,k3 , uj,k2 \u2265 uj,k1 \u2265 uj,k3 , and\nuj,k1\u2212uj,k3 cj,k1\u2212cj,k3 \u2264 uj,k2\u2212uj,k3cj,k2\u2212cj,k3 , then p \u2217 j,k1 = 0.\nIntuitively, the first part of Lemma 11 shows that if an action has small normalized and original expected reward, then it can be removed. The second part of Lemma 11 shows that if an action has small normalized expected reward and medium original expected reward, but the increasing rate is smaller than another action with larger expected reward, then it can also be removed.\nProof. The key idea of this proof is that, if the conditions is satisfied, and there is a feasible solution pj = (pj,1, pj,2, . . . , pj,K) such that pj,k1 > 0, then we can construct another feasible solution p \u2032 j such that p\u2032j,k1 = 0, without reducing the objective value vj(\u03c1j).\nWe first prove part (1). Under the conditions of part (1), if pj is a feasible solution of SPj with pj,k1 > 0, then consider another solution p \u2032 j , where p \u2032 j,k = pj,k for k /\u2208 {k1, k2}, p\u2032j,k1 = 0, and p\u2032j,k2 = pj,k2 + pj,k1 min{ cj,k1 cj,k2\n, 1}. Then, we can verify that p\u2032j is a feasible solution of (SPj), and the objective value under p\u2032j is no less than that under pj .\nFor the second part, if the conditions are satisfied and pj,k1 > 0, then we construct a new solution p \u2032 j by re-allocating the budget consumed by action k1 to actions k2 and k3, without violating the constraints. Specifically, we set the probability the same as the original solution for other actions, i.e., p\u2032j,k = pj,k for k /\u2208 {k1, k2, k3}, and set p\u2032j,k1 = 0 for action k1. For k2 and k3, to maximize the objective function, we would like to allocate as much budget as possible to k3 unless there is remaining budget. Therefore, we set p\u2032j,k2 = pj,k2 and p \u2032 j,k3 = pj,k3 + pj,k1cj,k1 cj,k3 , if \u2211 k 6=k1 pj,k+ pj,k1cj,k1 cj,k3 \u2264 1; or, p\u2032j,k2 = pj,k2 + pj,k1cj,k1\u2212(1\u2212 \u2211 k 6=k1 pj,k)cj,k3 cj,k2\u2212cj,k3 and p\u2032j,k3 = pj,k3 + (1\u2212 \u2211 k 6=k1 pj,k)cj,k2\u2212pj,k1cj,k1 cj,k2\u2212cj,k3 ,\nif \u2211 k 6=k1 pj,k + pj,k1cj,k1 cj,k3\n> 1. We can verify that pj satisfies the constraints of (SPj) but the objective value is no less than that under pj .\nWith Lemma 11, the agent can ignore some actions that will obviously be allocated with zero probability under a given context j. We call the set of the remaining actions as candidate set for context j, denoted as Aj . We propose an algorithm to construct the candidate action set for context j, as shown in Algorithm 4.\nFor context j, assume that the candidate setAj = {kj,1, kj,2, . . . , kj,Kj} has been sorted in descending order of their normalized rewards, i.e., \u03b7j,kj,1 \u2265 \u03b7j,kj,2 \u2265 . . . \u2265 \u03b7j,kj,Kj . From Algorithm 4, we know that uj,kj,1 < uj,kj,2 < . . . < uj,kj,Kj , and cj,kj,1 < cj,kj,2 < . . . < cj,kj,Kj .\nThe agent now only needs to consider the actions in the candidate set Aj . To decouple the \u201cintracontext\u201d constraint (57), we introduce the following transformation:\npj,kj,a = { p\u0303j,kj,a \u2212 p\u0303j,kj,a+1 , if 1 \u2264 a \u2264 Kj \u2212 1, p\u0303j,kj,Kj , if a = Kj ,\nAlgorithm 4 Find Candidate Set for Context j Input: cj,k\u2019s, uj,k\u2019s, for all 1 \u2264 k \u2264 K; Output: Aj ; Init: Aj = {1, 2, . . . ,K} ; Calculate normalized rewards: \u03b7j,k = uj,k/cj,k; Sort actions in descending order of their normalized rewards:\n\u03b7j,k1 \u2265 \u03b7j,k2 \u2265 . . . \u2265 \u03b7j,kK .\nfor a = 2 to K do if \u2203a\u2032 < a such that uj,ka \u2264 uj,ka\u2032 then Aj = Aj\\{ka};\nend if end for a = 1; while a \u2264 K \u2212 1 do\nFind the action with highest increasing rate:\na\u2217 = arg max a\u2032:a\u2032>a,ka\u2032\u2208Aj uj,ka\u2032 \u2212 uj,ka cj,ka\u2032 \u2212 cj,ka .\nRemove the actions in between:\nAj = Aj\\{ka\u2032 : a < a\u2032 < a\u2217}.\nMove to the next candidate action: a = a\u2217; end while\nwhere p\u0303j,kj,a \u2208 [0, 1], and p\u0303j,kj,a \u2265 p\u0303j,kj,a+1 for 1 \u2264 a \u2264 Kj \u2212 1. Substituting the transformations into (SPj) and reorganize it as\n(S\u0303Pj) maximize Kj\u2211 a=1 p\u0303j,kj,a u\u0303j,kj,a ,\nsubject to Kj\u2211 a=1 p\u0303j,kj,a c\u0303j,kj,a \u2264 \u03c1j ,\np\u0303j,kj,a \u2265 p\u0303j,kj,a+1 , 1 \u2264 a \u2264 Kj \u2212 1, (61) p\u0303j,kj,a \u2208 [0, 1], \u2200a,\nwhere\nu\u0303j,kj,a = { uj,kj,1 , if a = 1, uj,kj,a \u2212 uj,kj,a\u22121 , if 2 \u2264 a \u2264 Kj ,\nc\u0303j,kj,a = { cj,kj,1 , if a = 1, cj,kj,a \u2212 cj,kj,a\u22121 , if 2 \u2264 a \u2264 Kj .\nNext, we show that the constraint (61) can indeed be removed. For each kj,a, we can view c\u0303j,kj,a and u\u0303j,kj,a as the cost and expected reward of a virtual action. Let \u03b7\u0303j,kj,a = u\u0303j,kj,a/c\u0303j,kj,a be the normalized expected reward of virtual action kj,a. For a = 1, using\nuj,kj,1 cj,kj,1 \u2265 uj,kj,2cj,kj,2 , we can show\nthat \u03b7\u0303j,kj,1 \u2265 \u03b7\u0303j,kj,2 . For 2 \u2264 a \u2264 Kj \u2212 1, using uj,kj,a\u2212uj,kj,a\u22121 cj,kj,a\u2212cj,kj,a\u22121 \u2265 uj,kj,a+1\u2212uj,kj,a\u22121cj,kj,a+1\u2212cj,kj,a\u22121 , we can show that \u03b7\u0303j,kj,a \u2265 \u03b7\u0303j,kj,a+1 . In other words, we can verify that \u03b7\u0303j,kj,1 \u2265 \u03b7\u0303j,kj,2 \u2265 . . . \u2265 \u03b7\u0303j,kj,Kj . Thus, without constraint (61), the optimal solution p\u0303\u2217j = [p\u0303 \u2217 j,k1 , p\u0303\u2217j,k2 , . . . , p\u0303 \u2217 j,kKj\n] automatically satisfies p\u0303\u2217j,k1 \u2265 p\u0303 \u2217 j,k2 \u2265 . . . \u2265 p\u0303\u2217j,kKj . Hence, we can remove the constraint (61), and thus decouple the probability constraint under a context.\nWith the above transformations, we can thus rewrite the global LP problem\n(L\u0303P \u2032 T,B) maximize J\u2211 j=1 Kj\u2211 a=1 \u03c0j p\u0303j,kj,a u\u0303j,kj,a ,\nsubject to J\u2211 j=1 Kj\u2211 a=1 \u03c0j p\u0303j,kj,a c\u0303j,kj,a \u2264 B/T,\np\u0303j,kj,a \u2208 [0, 1], \u2200j, and 1 \u2264 a \u2264 Kj .\nThe solution of L\u0303P \u2032 T,B follows a threshold structure. We sort all context-(virtual-)action pairs (j, ka) in descending order of their normalized expected reward. Let j(i), k(i) be the context index and action index of the i-th pair, respectively. Namely, \u03b7\u0303j(1),k(1) \u2265 \u03b7\u0303j(2),k(2) \u2265 . . . \u2265 \u03b7\u0303j(M),k(M) , where M = \u2211J j=1Kj is the total number of candidate actions for all contexts. Define a threshold corresponding to \u03c1 = B/T ,\ni\u0303(\u03c1) = max{i : i\u2211\ni\u2032=1\n\u03c0j(i\u2032) c\u0303j(i\u2032),k(i\u2032) \u2264 \u03c1}, (62)\nwhere \u03c1 = B/T is the average budget. We can verify that the following solution is optimal for L\u0303P \u2032 T,B :\np\u0303j(i),k(i)(\u03c1) =  1, if 1 \u2264 i \u2264 i\u0303(\u03c1), \u03c1\u2212 \u2211i\u0303(\u03c1) i\u2032=1 \u03c0j(i\u2032) c\u0303 j(i \u2032),k(i\u2032) \u03c0 j(i\u0303(\u03c1)+1) c\u0303 j(i\u0303(\u03c1)+1),k(i\u0303(\u03c1)+1) , if i = i\u0303(\u03c1) + 1,\n0, if i > i\u0303(\u03c1) + 1.\nThen, the optimal solution of L\u0303P \u2032 T,B can be calculated using the reverse transformation from p\u0303j,k(\u03c1)\u2019s to pj,k(\u03c1)\u2019s"}, {"heading": "F.1.2 ALP Algorithm", "text": "Similar to unit-cost systems, the ALP algorithm replaces the average constraintB/T in LP \u2032T,B with the average remaining budget b\u03c4/\u03c4 , and obtains probability pj,k(b\u03c4/\u03c4). Under context j, the ALP algorithm take action k with probability pj,k(b\u03c4/\u03c4).\nUnlike unit-cost systems, the remaining budget b\u03c4 does not follow any classic distribution in heterogeneous-cost systems. However, we can show that the concentration property still holds for this general case by using the method of averaged bounded differences [23]. Lemma 12. For 0 < \u03b4 < 1, there exists a positive number \u03ba, such that under the ALP algorithm, the remaining budget b\u03c4 satisfies\nP{b\u03c4 > (\u03c1+ \u03b4)\u03c4} \u2264 e\u2212\u03ba\u03b4 2\u03c4 ,\nP{b\u03c4 < (\u03c1\u2212 \u03b4)\u03c4} \u2264 e\u2212\u03ba\u03b4 2\u03c4 .\nProof. We prove the lemma using the method of averaged bounded differences [23]. The process is similar to Section 7.1 in [23], except that we consider the remaining budget and the successive differences of the remaining budget are bounded by cmax.\nSpecifically, let c\u0303t\u2032 , 1 \u2264 t\u2032 \u2264 T be the budget consumed under ALP, and let c\u0303t\u2032 = (c\u03031, c\u03032, . . . , c\u0303t\u2032). Then the remaining budget at round t (the remaining time \u03c4 = T \u2212 t+ 1), i.e., bT\u2212t+1 is a function of c\u0303t. We note that under ALP, the expectation of the ratio between the remaining budget and the remaining time does not change, i.e., for any b \u2264 \u2211 j=1 \u03c0jc \u2217 j (here c \u2217 j = maxk cj,k), if b\u03c4 = b, then E[b\u03c4\u22121/(\u03c4 \u2212 1)] = b/\u03c4 . Thus, we can verify that for any 1 \u2264 t\u2032 \u2264 t, we have\nE[bT\u2212t+1|c\u0303t\u2032 ] = bT\u2212t\u2032+1 \u2212 bT\u2212t\u2032+1 T \u2212 t\u2032 + 1 (t\u2212 t\u2032). (63)\nNote that \u2206b = bT\u2212t\u2032+2 \u2212 bT\u2212t\u2032+1 \u2264 cmax and bT\u2212t\u2032+2 \u2265 \u2212cmax, we have\u2223\u2223E[bT\u2212t+1|c\u0303t\u2032 ]\u2212 E[bT\u2212t+1|c\u0303t\u2032\u22121]\u2223\u2223 \u2264 max\n0\u2264\u2206b\u2264cmax {\u2223\u2223\u2206b\u2212 bT\u2212t\u2032+2 T \u2212 t\u2032 + 2 \u2223\u2223} T \u2212 t+ 1 T \u2212 t\u2032 + 1\n\u2264 2cmax(T \u2212 t+ 1) T \u2212 t\u2032 + 1 . (64)\nMoreover, t\u2211\nt\u2032=1\n[2cmax(T \u2212 t+ 1) T \u2212 t\u2032 + 1 ]2 = 4c2max(T \u2212 t+ 1)2\nt\u2211 t\u2032=1\n1\n(T \u2212 t\u2032 + 1)2\n= 4c2max(T \u2212 t+ 1)2 T\u2211\n\u03c4 \u2032=T\u2212t+1\n1\n(\u03c4 \u2032)2\n\u2248 4c2max(T \u2212 t+ 1)2 \u222b T T\u2212t+1 1 (\u03c4 \u2032)2 d\u03c4 \u2032 = 4c2max(T \u2212 t+ 1) t\u2212 1 T . (65)\nAccording to Theorem 5.3 in [23], and noting \u03c4 = T \u2212 t+ 1, E[b\u03c4 ] = \u03c1\u03c4 , we have\nP{b\u03c4 > E[b\u03c4 ] + \u03b4\u03c4} \u2264 e \u2212 2T (\u03b4\u03c1\u03c4)\n2\n4c2max(T\u2212t+1)(t\u22121) \u2264 e\u2212 T\u03b42B2\u03c4 2c2maxT 2(t\u22121) \u2264 e\u2212 \u03b42\u03c12 2c2max \u03c4 , (66)\nand similarly,\nP{b\u03c4 < E[b\u03c4 ]\u2212 \u03b4\u03c4} \u2264 e \u2212 \u03b4\n2\u03c12\n2c2max \u03c4 , (67)\nChoosing \u03ba = \u03c1 2\n2c2max concludes the proof.\nThen, using similar methods in Section 3, we can show that the generalized ALP algorithm achieves O(1) regret in non-boundary cases, and O( \u221a T ) regret in boundary cases, where the boundaries are\nnow defined as Qi = \u2211i i\u2032=1 \u03c0j(i\u2032) c\u0303j(i\u2032),k(i\u2032) ."}, {"heading": "F.2 -First ALP Algorithm", "text": "When the expected rewards are unknown, it is difficult to combine UCB method with the proposed ALP for general systems. As a special case, when all actions have the same cost under a given context, i.e., cj,k = cj for all k and j, the normalized expected reward \u03b7j,k represents the quality of action k under context j. In this case, the candidate set for each context only contains one action, which is the action with the highest expected reward. Thus, the ALP algorithm for the known statistics case is simple. When the expected rewards are unknown, we can extend the UCB-ALP algorithm by managing the UCB for the normalized expected rewards.\nWhen the costs for different actions under the same context are heterogeneous, it is difficult to combine ALP with the UCB method since the ALP algorithm in this case not only requires the ordering of \u03b7j,k\u2019s, but also the ordering of uj,k\u2019s and the ratios\nuj,k1\u2212uj,k2 cj,k1\u2212cj,k2\n. We propose an -First ALP Algorithm that explores and exploits separately: the agent takes actions under all contexts in the first (T ) rounds to estimate the expected rewards, and runs ALP based on the estimates in the remaining T \u2212 (T ) rounds.\nFor the ease of exposition, we assume cj,k1 6= cj,k2 for any j and k1 6= k2 2, and let \u2206 (c) min be the minimal difference, i.e., \u2206\n(c) min = min\nj\u2208X k1,k2\u2208{0}\u222aA\n{|cj,k1 \u2212 cj,k2 |}.\n2For the case with cj,k1 = cj,k2 for some j and k1 6= k2 (and uj,k1 6= uj,k2 ), we can correctly remove the suboptimal action with high probability by comparing their empirical rewards u\u0304j,k1 = u\u0304j,k2 .\nAlgorithm 5 -First ALP Input: Time horizon T , budget B, exploration stage length (T ), and cj,k\u2019s, for all j and k; Init: Remaining budget b = B; Cj,k = 0, u\u0304j,k = 0; for t = 1 to (T ) do\nif b > 0 then Take action At = arg mink\u2208A CXt,k (with random tie-breaking); Observe the reward YAt,t; Update counter CXt,At = CXt,At + 1; update remaining budget b = b\u2212 cXt,At ; Update the reward estimate:\nu\u0304Xt,At = (CXt,At \u2212 1)u\u0304Xt,At + YAt,t\nCXt,At .\nend if end for for t = (T ) + 1 to T do\nRemaining time \u03c4 = T \u2212 t+ 1; if b > 0 then\nObtain the probabilities pj,k(b/\u03c4)\u2019s by solving the problem (LP \u2032\u03c4,b) with uj,k replaced by u\u0304j,k; Take action k with probability pXt,k(b/\u03c4); Remaining budget b = b\u2212 cXt,At ;\nend if end for\nLet \u03bej,k1,k2 = uj,k1\u2212uj,k2 cj,k1\u2212cj,k2\nfor j \u2208 X , k1, k2 \u2208 {0} \u222a A, and k1 6= k2 (recall that uj,0 = 0 and cj,0 = 0 for the dummy action), \u03be\u0304j,k1,k2 be its estimate at the end of the exploration stage, i.e., \u03be\u0304j,k1,k2 =\nu\u0304j,k1\u2212u\u0304j,k2 cj,k1\u2212cj,k2 . Let \u2206(\u03be)min be the minimal difference between any \u03bej1,k11,k12 and \u03bej2,k21,k22 , i.e.,\n\u2206 (\u03be) min = min\nj1,j2\u2208X k11,k12,k21,k22\u2208{0}\u222aA\n{|\u03bej1,k11,k12 \u2212 \u03bej2,k21,k22 |}.\nMoreover, let \u03c0min = minj\u2208X \u03c0j and let \u2206\u2217 = \u2206 (c) min\u2206 (\u03be) min. Then, the following lemma states that under -First ALP with a sufficiently large (T ), the agent will obtain a correct ordering of \u03bej,k1,k2 \u2019s with high probability at the end of the exploration stage.\nLemma 13. Let 0 < \u03b4 < 1. Under -First ALP, if\n(T ) =\n\u2308 K\n(1\u2212 \u03b4)\u03c0min + log T max { 1 \u03b42 ,\n16K (1\u2212 \u03b4)\u03c0min(\u2206\u2217)2 }\u2309 ,\nthen for any contexts j1, j2 \u2208 X , and actions k11, k12, k21, k22 \u2208 {0}\u222aA, if \u03bej1,k11,k12 < \u03bej2,k21,k22 , then at the end of the (T )-th round, we have\nP { \u03be\u0304j1,k11,k12 \u2265 \u03be\u0304j2,k21,k22 } \u2264 (J + 4)T\u22122.\nMoreover, the agent ranks all the \u03bej,k1,k2 \u2019s correctly with probability no less than 1\u2212(4K+1)JT\u22122.\nProof. We first analyze the number of executions for each context-action pair (j, k) in the exploration stage. Let Nj = \u2211 (T ) t=1 1(Xt = j) be the number of occurrences of context j up to round\n(T ). Recall that the contexts Xt arrive i.i.d. in each round. Thus, using Hoeffding-Chernoff Bound\nfor each context j, we have\nP { \u2200j \u2208 X , Nj \u2265 (1\u2212 \u03b4)\u03c0j (T ) } \u2265 1\u2212\nJ\u2211 j=1 P { Nj < (1\u2212 \u03b4)\u03c0j (T ) } \u2265 1\u2212 Je\u22122\u03b4 2 (T )\n\u2265 1\u2212 Je\u22122 log T\n= 1\u2212 JT\u22122 (68)\nOn the other hand, the lower bound (1 \u2212 \u03b4)\u03c0j (T ) \u2265 K + 16K log T(\u2206\u2217)2 . From the implementation of the exploration stage in Algorithm 5, we know that if Nj \u2265 (1\u2212 \u03b4)\u03c0j (T ), then\nCj,k \u2265 \u230a 1 + 16 log T (\u2206\u2217)2 \u230b \u2265 16 log T (\u2206\u2217)2 , \u2200k \u2208 A. (69)\nTherefore,\nP { \u2200j \u2208 X ,\u2200k \u2208 A, Cj,k \u2265 16 log T\n(\u2206\u2217)2 } \u2265 1\u2212 JT\u22122 (70)\nNext, we study the relationship between the estimates \u03be\u0304j1,k11,k12 and \u03be\u0304j2,k21,k22 at the end of the exploration stage. We note that\n\u03be\u0304j1,k11,k12 \u2265 \u03be\u0304j2,k21,k22 \u21d4 ( \u03be\u0304j1,k11,k12 \u2212 \u03bej1,k11,k12 \u2212\n\u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 2 ) \u2212 ( \u03be\u0304j2,k21,k22 \u2212 \u03bej2,k21,k22 +\n\u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 2\n) \u2265 0\n\u21d4 ( u\u0304j1,k11 \u2212 uj1,k11 cj1,k11 \u2212 cj1,k12 \u2212 \u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 4 ) \u2212 ( u\u0304j1,k12 \u2212 uj1,k12 cj1,k11 \u2212 cj1,k12 + \u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 4\n) \u2212 ( u\u0304j2,k21 \u2212 uj2,k21 cj2,k21 \u2212 cj2,k22 + \u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 4\n) + ( u\u0304j2,k22 \u2212 uj2,k22 cj2,k21 \u2212 cj1,k22 \u2212 \u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 4 ) \u2265 0.\n(71)\nThus, for the event \u03be\u0304j1,k11,k12 \u2265 \u03be\u0304j2,k21,k22 to be true, we require that at least one term (with the sign) in the last inequation above is no less than zero. Conditioned on Cj,k \u2265 16 log T(\u2206\u2217)2 , we can bound the probability of each term according to the Hoeffding-Chernoff bound. For example, for the first term, we have\nP { u\u0304j1,k11 \u2212 uj1,k11 cj1,k11 \u2212 cj1,k12 \u2212 \u03bej2,k21,k22 \u2212 \u03bej1,k11,k12 4 \u2265 0\n|Cj1,k11 \u2265 16 log T (\u2206\u2217)2 }\n\u2264 P { u\u0304j1,k11 \u2265 uj1,k11 + \u2206\u2217\n4 |Cj1,k11 \u2265\n16 log T (\u2206\u2217)2 }\n\u2264 e\u22122 log T = T\u22122. The conclusion then follows by considering the event { Cj,k \u2265 16 log T(\u2206\u2217)2 ,\u2200j \u2208 X ,\u2200k \u2208 X } and its negation.\nTheorem 5. Let 0 < \u03b4 < 1. Under -First ALP, if\n(T ) \u2265 K (1\u2212 \u03b4)\u03c0min + log T max\n{ 1\n\u03b42 ,\n16K\n(1\u2212 \u03b4)\u03c0min(\u2206\u2217)2\n} ,\nthen the regret of -First ALP satisfies: 1) if \u03c1 = B/T 6= Qi, then R \u2212FirstALP(T,B) = O(log T ); 2) if \u03c1 = B/T = Qi, then R \u2212FirstALP(T,B) = O( \u221a T ).\nProof. (Sketch) The key idea of proving this theorem is considering the event where the \u03bej,k1,k2 \u2019s are ranked correctly and its negation. When the \u03bej,k1,k2 \u2019s are ranked correctly, we can use the properties of the ALP algorithm with modification on the time horizon and budget (subtracting the time and budget in the exploration stage, which is O(log T )); otherwise, if the agent obtains a wrong ranking results, the regret is bounded as O(1) because the probability is O(T\u22122) and the reward in each round is bounded."}, {"heading": "F.3 Deciding (T ) without Prior Information", "text": "In Theorem 5, the agent requires the value of \u2206\u2217 (in fact \u2206(\u03be)min because \u2206 (c) min is known) to calculate\n(T ). This is usually impractical since the expected rewards are unknown a priori. Thus, without the knowledge of \u2206(\u03be)min, we propose a Confidence Level Test (CLT) algorithm for deciding when to end the exploration stage.\nSpecifically, assume \u2206(\u03be)min > 0 and is unknown by the agent. In each round of the exploration stage, the agent tries to solve the problem (LP \u2032\u03c4,b) with uj,k replaced by u\u0304j,k using comparison, i.e., using Algorithm 4 and sorting the virtual actions. For each comparison, the agent tests the confidence level according to Algorithm 6. If all comparisons pass the test, i.e., flagSucc = true for all comparisons, then the agent ends the exploration stage and starts the exploitation stage.\nAlgorithm 6 Confidence Level Test (CLT) Input: Time horizon T , estimates \u03be\u0304j1,k11,k12 , \u03be\u0304j2,k21,k22 , number of executions Cj1,k11 , Cj1,k12 , Cj2,k21 , and Cj2,k22 ; Output: flagSucc; Init: flagSucc = false,\n\u2206\u2032 = \u2206\n(c) min(\u03be\u0304j1,k11,k12\u2212\u03be\u0304j2,k21,k22 )\n2 ; if e\u22122(\u2206\n\u2032)2 min{Cj1,k11 ,Cj1,k12} \u2264 T\u22122 & e\u22122(\u2206\u2032)2 min{Cj2,k21 ,Cj2,k22} \u2264 T\u22122 then flagSucc = true;\nend if return flagSucc;\nNext, we show that the -First policy with CLT will achieveO(log T ) regret except for the boundary cases, where it achieves O( \u221a T ) regret. On one hand, according to Hoeffding-Chernoff bound, if all comparisons pass the confidence level test, then with probability at least 1\u2212JK2T\u22122, the algorithm obtains the correct rank and provide a right solution for the problem (LP \u2032\u03c4,b). On the other hand, because \u2206\u2217 > 0, from the analysis in the previous section, we know that the exploration stage will end within O(log T ) rounds with high probability. Therefore, the expected regret is the same as that in the case with known \u2206(\u03be)min."}, {"heading": "G Numerical Experiments", "text": "In this section, we evaluate the regret of the proposed algorithms through numerical simulations. We study the performance of the proposed algorithms here for unit-cost systems as the parameter setting is relatively simple to control while providing us useful insights. The performance in heterogeneouscost systems is similar as we have shown theoretically, and omitted here. In the case with known statistics, we compare the proposed PB (two-context case) and ALP algorithms with Fixed LP (FLP) algorithm that uses a fixed average budget constraint B/T since both [17] and [20] use fixed average budget constraint. Then, the UCB-based FLP, i.e., UCB-FLP, is evaluated in the case without\nknowledge of expected rewards. We also evaluate algorithms for the case without knowledge of context distribution. When the context distribution is unknown to the agent, we use the Empirical ALP (EALP) algorithm, that uses the empirical distribution (histogram) of context for making decisions, in the case with known expected rewards. Then, the UCB-based EALP is proposed for the case without knowledge of expected rewards. The results are averaged from 5,000 independent runs of the simulations."}, {"heading": "G.1 Two-Context Systems", "text": "0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\nHorizon T\nR eg\nre t\nFLP ALP EALP\n(a)\n0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\nHorizon T\nR eg\nre t\nFLP ALP EALP\n(b)\n0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\nHorizon T\nR eg\nre t\nFLP ALP EALP\n(c)\nFigure 1: Comparison of algorithms for the two-context systems with perfect knowledge (\u03c01 = 0.4, \u03c02 = 0.6), (a) \u03c1 = 0.39, (b) \u03c1 = 0.4, (c) \u03c1 = 0.41.\nWe first consider a two-context scenario with K = 3 arms and Bernoulli rewards: the context distribution vector is \u03c0 = [0.4, 0.6], the expected rewards are u1 = 0.8 \u00d7 [1/3, 2/3, 1] for context 1, and u2 = 0.4 \u00d7 [1/3, 2/3, 1] for context 2. The boundary is q1 = \u03c01 = 0.4 and we study the cases with normalized budget \u03c1 = 0.39, 0.4, and 0.41, respectively.\nFigure 1 shows the regret of different algorithms in the case with known expected rewards. In the non-boundary cases (i.e., \u03c1 = 0.39, 0.41), the ALP algorithm achieves near optimal performance. Even without the knowledge of context distribution, the EALP algorithm performs much better than FLP. In the boundary case, i.e., \u03c1 = 0.4, the regret of ALP increases with T but is still lower than that of FLP. The EALP algorithm achieves higher regret than ALP and FLP due to the empirical distribution errors.\n0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\n250\n300\nHorizon T\nR eg\nre t\nUCB\u2212FLP UCB\u2212PB UCB\u2212ALP UCB\u2212EALP\n(a)\n0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\n250\n300\nHorizon T\nR eg\nre t\nUCB\u2212FLP UCB\u2212PB UCB\u2212ALP UCB\u2212EALP\n(b)\n0 2 4 6 8 10\nx 10 5\n0\n50\n100\n150\n200\n250\n300\nHorizon T\nR eg\nre t\nUCB\u2212FLP UCB\u2212PB UCB\u2212ALP UCB\u2212EALP\n(c)\nFigure 2: Comparison of algorithms for the two-context systems without perfect knowledge (\u03c01 = 0.4, \u03c02 = 0.6), (a) \u03c1 = 0.39, (b) \u03c1 = 0.4, (c) \u03c1 = 0.41.\nFigure 2 shows the regret of different algorithms in the case without knowledge of expected rewards. We can see that in the non-boundary cases, UCB-ALP and UCB-EALP achieves regret that is very close to UCB-PB and outperforms UCB-FLP. Interestingly, we can even see that UCB-ALP achieves slightly lower regret than UCB-PB in the case with \u03c1 = 0.41. This is because under UCB-PB, the better context may be skipped and wasted if it does not have the highest UCB. In contrast, the UCBALP algorithm may allocate certain resource to the better context, even when it does not have the highest UCB. On the boundary case, the regrets of UCB-ALP and UCB-EALP become larger than that of UCB-PB, but are still sublinear in T ."}, {"heading": "G.2 Multi-Context Systems", "text": "Next, we study a multi-context scenario with J = 10 contexts, K = 5 arms, and Bernoulli rewards. Specifically, the context distribution vector is \u03c0 =\n[0.025, 0.05, 0.075, 0.15, 0.2, 0.2, 0.15, 0.075, 0.05, 0.025]. The expected reward of action k under context j is uj,k = jkJK . One boundary in this system is q5 = 0.5. We study the cases with average budget \u03c1 = 0.49, 0.5, and 0.51, respectively. In this case, it is difficult to calculate the expected total reward obtained by the oracle solution. Thus, we calculate the regret by comparing with the upper bound, i.e., U\u0302(T,B) = Tv(\u03c1).\nFigure 3 shows the regret of different algorithms in the case with known expected rewards. In the non-boundary cases, both the ALP and EALP algorithm achieve similar performance as in the twocontext case. The regret of EALP is even lower than FLP in the boundary case, since the ratio of contexts that are executed with correct probability is higher than that in the two-context systems.\nFigure 4 shows the regret of different algorithms in the case without knowledge of expected rewards. We can see that all algorithms achieve sublinear regret, but the difference between the non-boundary cases and the boundary case is small. This is rooted in the fact that when the number of contexts and the number of actions are large, it requires more time to learn the expected rewards. Hence, the constant in the log T term is much larger than that in the \u221a T term, and the log T term dominates the regret and the impact of the \u221a T term could be small. Exploring the structure of the reward function in contextual bandits, e.g., similarity [6] and linearity [5], to reduce the exploration time is part of our future work."}], "references": [{"title": "The epoch-greedy algorithm for contextual multi-armed bandits", "author": ["J. Langford", "T. Zhang"], "venue": "Advances in Neural Information Processing Systems (NIPS), pages 817\u2013824,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2007}, {"title": "Contextual multi-armed bandits", "author": ["T. Lu", "D. P\u00e1l", "M. P\u00e1l"], "venue": "International Conference on Artificial Intelligence and Statistics, pages 485\u2013492,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2010}, {"title": "A survey on contextual multi-armed bandits", "author": ["L. Zhou"], "venue": "arXiv preprint arXiv:1508.03326,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "Finite-time analysis of the multiarmed bandit problem", "author": ["P. Auer", "N. Cesa-Bianchi", "P. Fischer"], "venue": "Machine learning, 47(2-3):235\u2013256,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2002}, {"title": "A contextual-bandit approach to personalized news article recommendation", "author": ["L. Li", "W. Chu", "J. Langford", "R.E. Schapire"], "venue": "ACM International Conference on World Wide Web (WWW), pages 661\u2013670,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Contextual bandits with similarity information", "author": ["A. Slivkins"], "venue": "The Journal of Machine Learning Research, 15(1):2533\u20132568,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "Taming the monster: A fast and simple algorithm for contextual bandits", "author": ["A. Agarwal", "D. Hsu", "S. Kale", "J. Langford", "L. Li", "R.E. Schapire"], "venue": "International Conference on Machine Learning (ICML),", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Logarithmic online regret bounds for undiscounted reinforcement learning", "author": ["P. Auer", "R. Ortner"], "venue": "Advances in Neural Information Processing Systems (NIPS), pages 49\u201356,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "Learning on a budget: posted price mechanisms for online procurement", "author": ["A. Badanidiyuru", "R. Kleinberg", "Y. Singer"], "venue": "ACM Conference on Electronic Commerce, pages 128\u2013145,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2012}, {"title": "Efficient adaptive randomization and stopping rules in multi-arm clinical trials for testing a new treatment", "author": ["T.L. Lai", "O.Y.-W. Liao"], "venue": "Sequential Analysis, 31(4):441\u2013457,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Knapsack based optimal policies for budget-limited multi-armed bandits", "author": ["L. Tran-Thanh", "A.C. Chapman", "A. Rogers", "N.R. Jennings"], "venue": "AAAI Conference on Artificial Intelligence,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2012}, {"title": "Bandits with knapsacks", "author": ["A. Badanidiyuru", "R. Kleinberg", "A. Slivkins"], "venue": "IEEE 54th Annual Symposium on Foundations of Computer Science (FOCS), pages 207\u2013216,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "Bandits with budgets", "author": ["C. Jiang", "R. Srikant"], "venue": "IEEE 52nd Annual Conference on Decision and Control (CDC), pages 5345\u20135350,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2013}, {"title": "Dynamic ad allocation: Bandits with budgets", "author": ["A. Slivkins"], "venue": "arXiv preprint arXiv:1306.0155,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Thompson sampling for budgeted multi-armed bandits", "author": ["Y. Xia", "H. Li", "T. Qin", "N. Yu", "T.-Y. Liu"], "venue": "International Joint Conference on Artificial Intelligence,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "Bandits with budgets: Regret lower bounds and optimal algorithms", "author": ["R. Combes", "C. Jiang", "R. Srikant"], "venue": "ACM Sigmetrics,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2015}, {"title": "Resourceful contextual bandits", "author": ["A. Badanidiyuru", "J. Langford", "A. Slivkins"], "venue": "Conference on Learning Theory (COLT),", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2014}, {"title": "Optimal rate sampling in 802.11 systems", "author": ["R. Combes", "A. Proutiere", "D. Yun", "J. Ok", "Y. Yi"], "venue": "In IEEE INFOCOM,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "Approximate linear programming for average cost MDPs", "author": ["M.H. Veatch"], "venue": "Mathematics of Operations Research, 38(3):535\u2013544,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Bandits with concave rewards and convex knapsacks", "author": ["S. Agrawal", "N.R. Devanur"], "venue": "ACM Conference on Economics and Computation, pages 989\u20131006. ACM,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "Contextual bandits with global constraints and objective", "author": ["S. Agrawal", "N.R. Devanur", "L. Li"], "venue": "arXiv preprint arXiv:1506.03374,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2015}, {"title": "Linear contextual bandits with global constraints and objective", "author": ["S. Agrawal", "N.R. Devanur"], "venue": "arXiv preprint arXiv:1507.06738,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Concentration of measure for the analysis of randomized algorithms", "author": ["D.P. Dubhashi", "A. Panconesi"], "venue": "Cambridge University Press,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2009}, {"title": "The KL-UCB algorithm for bounded stochastic bandits and beyond", "author": ["A. Garivier", "O. Capp\u00e9"], "venue": "Conference on Learning Theory (COLT), pages 359\u2013376,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2011}, {"title": "Asymptotically efficient adaptive allocation rules", "author": ["T.L. Lai", "H. Robbins"], "venue": "Advances in Applied Mathematics, 6(1):4\u201322,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1985}], "referenceMentions": [{"referenceID": 0, "context": "1 Introduction The contextual bandit problem [1, 2, 3] is an important extension of the classic multi-armed bandit (MAB) problem [4], where the agent can observe a set of features, referred to as context, before making a decision.", "startOffset": 45, "endOffset": 54}, {"referenceID": 1, "context": "1 Introduction The contextual bandit problem [1, 2, 3] is an important extension of the classic multi-armed bandit (MAB) problem [4], where the agent can observe a set of features, referred to as context, before making a decision.", "startOffset": 45, "endOffset": 54}, {"referenceID": 2, "context": "1 Introduction The contextual bandit problem [1, 2, 3] is an important extension of the classic multi-armed bandit (MAB) problem [4], where the agent can observe a set of features, referred to as context, before making a decision.", "startOffset": 45, "endOffset": 54}, {"referenceID": 3, "context": "1 Introduction The contextual bandit problem [1, 2, 3] is an important extension of the classic multi-armed bandit (MAB) problem [4], where the agent can observe a set of features, referred to as context, before making a decision.", "startOffset": 129, "endOffset": 132}, {"referenceID": 4, "context": "Existing works try to reduce the regret of contextual bandits by leveraging the structure of the context-reward models such as linearity [5] or similarity [6], and more recent work [7] focuses on computationally efficient algorithms with minimum regret.", "startOffset": 137, "endOffset": 140}, {"referenceID": 5, "context": "Existing works try to reduce the regret of contextual bandits by leveraging the structure of the context-reward models such as linearity [5] or similarity [6], and more recent work [7] focuses on computationally efficient algorithms with minimum regret.", "startOffset": 155, "endOffset": 158}, {"referenceID": 6, "context": "Existing works try to reduce the regret of contextual bandits by leveraging the structure of the context-reward models such as linearity [5] or similarity [6], and more recent work [7] focuses on computationally efficient algorithms with minimum regret.", "startOffset": 181, "endOffset": 184}, {"referenceID": 7, "context": "For Markovian context arrivals, algorithms such as UCRL [8] for more general reinforcement learning problem can be used to achieve logarithmic regret.", "startOffset": 56, "endOffset": 59}, {"referenceID": 8, "context": "Taking crowdsourcing [9] as an example, the budget constraint for a given set of tasks will limit the number of workers that an employer can hire.", "startOffset": 21, "endOffset": 24}, {"referenceID": 9, "context": "Another example is the clinical trials [10], where each treatment is usually costly and the budget of a trial is limited.", "startOffset": 39, "endOffset": 43}, {"referenceID": 10, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 11, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 12, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 13, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 14, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 15, "context": "Although budget constraints have been studied in non-contextual bandits where logarithmic or sublinear regret is achieved [11, 12, 13, 14, 15, 16], as we will see later, these results are inapplicable in the case with observable contexts.", "startOffset": 122, "endOffset": 146}, {"referenceID": 16, "context": "The above constrained contextual bandit problem can be viewed as a special case of Resourceful Contextual Bandits (RCB) [17].", "startOffset": 120, "endOffset": 124}, {"referenceID": 16, "context": "In [17], RCB is studied under more general settings with possibly infinite contexts, random costs, and multiple budget constraints.", "startOffset": 3, "endOffset": 7}, {"referenceID": 16, "context": "However, the benchmark for the definition of regret in [17] is restricted to within a finite policy set.", "startOffset": 55, "endOffset": 59}, {"referenceID": 9, "context": "This simplified model is justified in many scenarios such as clinical trials [10] and rate selection in wireless networks [18].", "startOffset": 77, "endOffset": 81}, {"referenceID": 17, "context": "This simplified model is justified in many scenarios such as clinical trials [10] and rate selection in wireless networks [18].", "startOffset": 122, "endOffset": 126}, {"referenceID": 16, "context": ", [17, 19]), the design and analysis of ALP here is quite different.", "startOffset": 2, "endOffset": 10}, {"referenceID": 18, "context": ", [17, 19]), the design and analysis of ALP here is quite different.", "startOffset": 2, "endOffset": 10}, {"referenceID": 3, "context": "In this paper, we propose a UCB-ALP algorithm by combining ALP with the upper-confidence-bound (UCB) method [4].", "startOffset": 108, "endOffset": 111}, {"referenceID": 19, "context": "We note that UCB-type algorithms are proposed in [20] for non-contextual bandits with concave rewards and convex constraints, and further extended to linear contextual bandits.", "startOffset": 49, "endOffset": 53}, {"referenceID": 19, "context": "However, [20] focuses on static contexts1 and achieves O( \u221a T ) regret in our setting since it uses a fixed budget constraint in each round.", "startOffset": 9, "endOffset": 13}, {"referenceID": 20, "context": "In comparison, we consider random context arrivals and use an adaptive After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].", "startOffset": 146, "endOffset": 154}, {"referenceID": 21, "context": "In comparison, we consider random context arrivals and use an adaptive After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].", "startOffset": 146, "endOffset": 154}, {"referenceID": 19, "context": "In comparison, we consider random context arrivals and use an adaptive After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].", "startOffset": 182, "endOffset": 186}, {"referenceID": 20, "context": "In comparison, we consider random context arrivals and use an adaptive After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].", "startOffset": 296, "endOffset": 300}, {"referenceID": 16, "context": "In comparison, we consider random context arrivals and use an adaptive After the online publication of our preliminary version, two recent papers [21, 22] extend their previous work [20] to the dynamic context case, where they focus on possibly infinite contexts and achieve O( \u221a T ) regret, and [21] restricts to a finite policy set as [17].", "startOffset": 337, "endOffset": 341}, {"referenceID": 0, "context": "Under a given context Xt = j, the reward Yk,t\u2019s are independent random variables in [0, 1].", "startOffset": 84, "endOffset": 90}, {"referenceID": 0, "context": "Specifically, let pj \u2208 [0, 1] be the probability that the agent takes action k\u2217 j for context j, and 1\u2212 pj be the probability that the agent skips context j (i.", "startOffset": 23, "endOffset": 29}, {"referenceID": 0, "context": "p \u2208 [0, 1] .", "startOffset": 4, "endOffset": 10}, {"referenceID": 3, "context": "This highly desirable feature allows us to combine ALP with classic MAB algorithms such as UCB [4] for the case without knowledge of expected rewards.", "startOffset": 95, "endOffset": 98}, {"referenceID": 22, "context": "Thus, we can show that b\u03c4 follows the hypergeometric distribution [23] and has the following properties: Lemma 2.", "startOffset": 66, "endOffset": 70}, {"referenceID": 16, "context": "We assume the agent knows the context distribution as [17], which will be relaxed in Section 5.", "startOffset": 54, "endOffset": 58}, {"referenceID": 7, "context": "[8] is still applicable and ALP can be extended to the bandit settings when combined with estimation policies that can quickly provide correct ranking with high probability.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "Here, combining ALP with the UCB method [4], we propose a UCB-ALP algorithm for constrained contextual bandits.", "startOffset": 40, "endOffset": 43}, {"referenceID": 23, "context": "As suggested in [24], we use a smaller coefficient in the exploration term \u221a log t 2Cj,k(t\u22121) than the traditional UCB algorithm [4] to achieve better performance.", "startOffset": 16, "endOffset": 20}, {"referenceID": 3, "context": "As suggested in [24], we use a smaller coefficient in the exploration term \u221a log t 2Cj,k(t\u22121) than the traditional UCB algorithm [4] to achieve better performance.", "startOffset": 129, "endOffset": 132}, {"referenceID": 3, "context": "This property has been widely applied in the analysis of UCBbased algorithms [4, 13], and its proof can be found in [13, 25] with a minor modification on the coefficients.", "startOffset": 77, "endOffset": 84}, {"referenceID": 12, "context": "This property has been widely applied in the analysis of UCBbased algorithms [4, 13], and its proof can be found in [13, 25] with a minor modification on the coefficients.", "startOffset": 77, "endOffset": 84}, {"referenceID": 12, "context": "This property has been widely applied in the analysis of UCBbased algorithms [4, 13], and its proof can be found in [13, 25] with a minor modification on the coefficients.", "startOffset": 116, "endOffset": 124}, {"referenceID": 24, "context": "For the non-boundary cases, UCB-ALP is order-optimal because obtaining the correct action ranking under each context will result in O(log T ) regret [26].", "startOffset": 149, "endOffset": 153}, {"referenceID": 16, "context": "Note that our results do not contradict the lower bound in [17] because we consider discrete contexts and actions, and focus on instance-dependent regret.", "startOffset": 59, "endOffset": 63}, {"referenceID": 0, "context": "References [1] J.", "startOffset": 11, "endOffset": 14}, {"referenceID": 1, "context": "[2] T.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] L.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] P.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] L.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] P.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] T.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] L.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[15] Y.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[16] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[19] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[20] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[22] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[23] D.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[24] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[26] T.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "Based on the above mapping and using its symmetric property, we know that b\u03c4 follows the hypergeometric distribution [23] and complete the proof of Lemma 2.", "startOffset": 117, "endOffset": 121}, {"referenceID": 3, "context": "Similar to the analysis of UCB in [4], we have", "startOffset": 34, "endOffset": 37}, {"referenceID": 22, "context": "To show the concentration of b\u03c4/\u03c4 , we first use the coupling argument to show the following lemma and then use the method of averaged bounded differences [23].", "startOffset": 155, "endOffset": 159}, {"referenceID": 22, "context": "To use the method of averaged bounded differences [23], we note that T\u2212\u03c4 \u2211 t\u2032=T1 [ 2 ( \u03c4 T \u2212 t\u2032 )1\u2212\u03c3]2 \u2264 4\u03c42\u22122\u03b1 \u00b7 [ 1 \u03c41\u22122\u03c3 \u2212 1 (T \u2212 T1 + 1)1\u22122\u03c3 ] \u2264 4\u03c4.", "startOffset": 50, "endOffset": 54}, {"referenceID": 22, "context": "1 in [23] and Lemma 9, we have P { |b\u03c4 \u2212 E[b\u03c4 ]| \u2265 \u03b4\u03c4/4 } \u2264 2 exp ( \u2212 2(\u03b4\u03c4/4) 2", "startOffset": 5, "endOffset": 9}, {"referenceID": 0, "context": "pj,k \u2208 [0, 1].", "startOffset": 7, "endOffset": 13}, {"referenceID": 0, "context": "pj,k \u2208 [0, 1].", "startOffset": 7, "endOffset": 13}, {"referenceID": 0, "context": "where p\u0303j,kj,a \u2208 [0, 1], and p\u0303j,kj,a \u2265 p\u0303j,kj,a+1 for 1 \u2264 a \u2264 Kj \u2212 1.", "startOffset": 17, "endOffset": 23}, {"referenceID": 0, "context": "a=1 p\u0303j,kj,a c\u0303j,kj,a \u2264 \u03c1j , p\u0303j,kj,a \u2265 p\u0303j,kj,a+1 , 1 \u2264 a \u2264 Kj \u2212 1, (61) p\u0303j,kj,a \u2208 [0, 1], \u2200a, where", "startOffset": 85, "endOffset": 91}, {"referenceID": 0, "context": "a=1 \u03c0j p\u0303j,kj,a c\u0303j,kj,a \u2264 B/T, p\u0303j,kj,a \u2208 [0, 1], \u2200j, and 1 \u2264 a \u2264 Kj .", "startOffset": 43, "endOffset": 49}, {"referenceID": 22, "context": "However, we can show that the concentration property still holds for this general case by using the method of averaged bounded differences [23].", "startOffset": 139, "endOffset": 143}, {"referenceID": 22, "context": "We prove the lemma using the method of averaged bounded differences [23].", "startOffset": 68, "endOffset": 72}, {"referenceID": 22, "context": "1 in [23], except that we consider the remaining budget and the successive differences of the remaining budget are bounded by cmax.", "startOffset": 5, "endOffset": 9}, {"referenceID": 22, "context": "3 in [23], and noting \u03c4 = T \u2212 t+ 1, E[b\u03c4 ] = \u03c1\u03c4 , we have P{b\u03c4 > E[b\u03c4 ] + \u03b4\u03c4} \u2264 e \u2212 2T (\u03b4\u03c1\u03c4) 2 4cmax(T\u2212t+1)(t\u22121) \u2264 e T\u03b42B2\u03c4 2cmaxT 2(t\u22121) \u2264 e \u03b42\u03c12 2cmax \u03c4 , (66) and similarly, P{b\u03c4 < E[b\u03c4 ]\u2212 \u03b4\u03c4} \u2264 e \u2212 \u03b4 2\u03c12 2cmax \u03c4 , (67) Choosing \u03ba = \u03c1 2 2cmax concludes the proof.", "startOffset": 5, "endOffset": 9}, {"referenceID": 16, "context": "In the case with known statistics, we compare the proposed PB (two-context case) and ALP algorithms with Fixed LP (FLP) algorithm that uses a fixed average budget constraint B/T since both [17] and [20] use fixed average budget constraint.", "startOffset": 189, "endOffset": 193}, {"referenceID": 19, "context": "In the case with known statistics, we compare the proposed PB (two-context case) and ALP algorithms with Fixed LP (FLP) algorithm that uses a fixed average budget constraint B/T since both [17] and [20] use fixed average budget constraint.", "startOffset": 198, "endOffset": 202}, {"referenceID": 5, "context": ", similarity [6] and linearity [5], to reduce the exploration time is part of our future work.", "startOffset": 13, "endOffset": 16}, {"referenceID": 4, "context": ", similarity [6] and linearity [5], to reduce the exploration time is part of our future work.", "startOffset": 31, "endOffset": 34}], "year": 2015, "abstractText": "We study contextual bandits with budget and time constraints, referred to as constrained contextual bandits. The time and budget constraints significantly complicate the exploration and exploitation tradeoff because they introduce complex coupling among contexts over time. To gain insight, we first study unit-cost systems with known context distribution. When the expected rewards are known, we develop an approximation of the oracle, referred to Adaptive-Linear-Programming (ALP), which achieves near-optimality and only requires the ordering of expected rewards. With these highly desirable features, we then combine ALP with the upper-confidence-bound (UCB) method in the general case where the expected rewards are unknown a priori. We show that the proposed UCB-ALP algorithm achieves logarithmic regret except for certain boundary cases. Further, we design algorithms and obtain similar regret bounds for more general systems with unknown context distribution and heterogeneous costs. To the best of our knowledge, this is the first work that shows how to achieve logarithmic regret in constrained contextual bandits. Moreover, this work also sheds light on the study of computationally efficient algorithms for general constrained contextual bandits.", "creator": "LaTeX with hyperref package"}}}