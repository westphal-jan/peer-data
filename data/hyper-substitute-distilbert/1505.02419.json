{"id": "1505.02419", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-May-2015", "title": "Improved Relation Extraction with Feature-Rich Compositional Embedding Models", "abstract": "creole language models build information map ( numerical embedding ) for encoded linguistic information based on its component word embeddings. we propose a feature - weighted derivation validation model ( \\ pascal { } ) producing relation extraction that is robust, leading to new syntax, thus is easy - to - implement. the key idea is help analyze both ( unlexicalized ) factory - crafted features with learned word embeddings. the model that able to entirely tackle the difficulties met by traditional linguistics simulation studies, can include handling arbitrary types plus sentence annotations not considering global information storage composition. then test to proposed model on two point determination scales, and speak well our design implements foreign language compositional models and traditional feature rich alternatives on the cambodian creole noun extraction task, and the apex 2010 relation classification puzzle. the following on our sample from functional language - recall technique with slave - crafted features is state - qualifier - initial - kind results.", "histories": [["v1", "Sun, 10 May 2015 18:47:06 GMT  (2701kb,D)", "https://arxiv.org/abs/1505.02419v1", "10 pages"], ["v2", "Tue, 12 May 2015 01:01:34 GMT  (2701kb,D)", "http://arxiv.org/abs/1505.02419v2", "10 pages"], ["v3", "Tue, 15 Sep 2015 02:01:34 GMT  (2738kb,D)", "http://arxiv.org/abs/1505.02419v3", "12 pages for EMNLP 2015"]], "COMMENTS": "10 pages", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.LG", "authors": ["matthew r gormley", "mo yu", "mark dredze"], "accepted": true, "id": "1505.02419"}, "pdf": {"name": "1505.02419.pdf", "metadata": {"source": "CRF", "title": "Improved Relation Extraction with Feature-Rich Compositional Embedding Models", "authors": ["Matthew R. Gormley", "Mo Yu", "Mark Dredze"], "emails": ["gflfof@gmail.com,", "mdredze}@cs.jhu.edu"], "sections": [{"heading": "1 Introduction", "text": "Two common NLP feature types are lexical properties of words and unlexicalized linguistic/structural interactions between words. Prior work on relation extraction has extensively studied how to design such features by combining discrete lexical properties (e.g. the identity of a word,\n\u2217Gormley and Yu contributed equally. 1https://github.com/mgormley/pacaya\nits lemma, its morphological features) with aspects of a word\u2019s linguistic context (e.g. whether it lies between two entities or on a dependency path between them). While these help learning, they make generalization to unseen words difficult. An alternative approach to capturing lexical information relies on continuous word embeddings2 as representative of words but generalizable to new words. Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014). Embeddings can capture lexical information, but alone they are insufficient: in state-of-the-art systems, they are used alongside features of the broader linguistic context.\nIn this paper, we introduce a compositional model that combines unlexicalized linguistic context and word embeddings for relation extraction, a task in which contextual feature construction plays a major role in generalizing to unseen data. Our model allows for the composition of embeddings with arbitrary linguistic structure, as expressed by hand crafted features. In the following sections, we begin with a precise construction of compositional embeddings using word embeddings in conjunction with unlexicalized features. Various feature sets used in prior work (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014) are cap-\n2Such embeddings have a long history in NLP, including term-document frequency matrices and their lowdimensional counterparts obtained by linear algebra tools (LSA, PCA, CCA, NNMF), Brown clusters, random projections and vector space models. Recently, neural networks / deep learning have provided several popular methods for obtaining such embeddings.\nar X\niv :1\n50 5.\n02 41\n9v 3\n[ cs\n.C L\n] 1\n5 Se\np 20\n15\ntured as special cases of this construction. Adding these compositional embeddings directly to a standard log-linear model yields a special case of our full model. We then treat the word embeddings as parameters giving rise to our powerful, efficient, and easy-to-implement log-bilinear model. The model capitalizes on arbitrary types of linguistic annotations by better utilizing features associated with substructures of those annotations, including global information. We choose features to promote different properties and to distinguish different functions of the input words.\nThe full model involves three stages. First, it decomposes the annotated sentence into substructures (i.e. a word and associated annotations). Second, it extracts features for each substructure (word), and combines them with the word\u2019s embedding to form a substructure embedding. Third, we sum over substructure embeddings to form a composed annotated sentence embedding, which is used by a final softmax layer to predict the output label (relation).\nThe result is a state-of-the-art relation extractor for unseen domains from ACE 2005 (Walker et al., 2006) and the relation classification dataset from SemEval-2010 Task 8 (Hendrickx et al., 2010).\nContributions This paper makes several contributions, including:\n1. We introduce the FCM, a new compositional embedding model for relation extraction. 2. We obtain the best reported results on ACE2005 for coarse-grained relation extraction in the cross-domain setting, by combining FCM with a log-linear model. 3. We obtain results on on SemEval-2010 Task 8 competitive with the best reported results. Note that other work has already been published that builds on the FCM, such as Hashimoto et al. (2015), Nguyen and Grishman (2015), dos Santos\n3In ACE 2005, ART refers to a relation between a person and an artifact; such as a user, owner, inventor, or manufacturer relationship\net al. (2015), Yu and Dredze (2015) and Yu et al. (2015). Additionally, we have extended FCM to incorporate a low-rank embedding of the features (Yu et al., 2015), which focuses on fine-grained relation extraction for ACE and ERE. This paper obtains better results than the low-rank extension on ACE coarse-grained relation extraction."}, {"heading": "2 Relation Extraction", "text": "In relation extraction we are given a sentence as input with the goal of identifying, for all pairs of entity mentions, what relation exists between them, if any. For each pair of entity mentions in a sentence S, we construct an instance (y,x), where x = (M1,M2, S,A). S = {w1, w2, ..., wn} is a sentence of length n that expresses a relation of type y between two entity mentions M1 and M2, where M1 and M2 are sequences of words in S. A is the associated annotations of sentence S, such as part-of-speech tags, a dependency parse, and named entities. We consider directed relations: for a relation type Rel, y=Rel(M1,M2) and y\u2032=Rel(M2,M1) are different relations. Table 1 shows ACE 2005 relations, and has a strong label bias towards negative examples. We also consider the task of relation classification (SemEval), where the number of negative examples is artificially reduced.\nEmbedding Models Word embeddings and compositional embedding models have been successfully applied to a range of NLP tasks, however the applications of these embedding models to relation extraction are still limited. Prior work on relation classification (e.g. SemEval 2010 Task 8) has focused on short sentences with at most one relation per sentence (Socher et al., 2012; Zeng et al., 2014). For relation extraction, where negative examples abound, prior work has assumed that only the named entity boundaries and not their types were available (Plank and Moschitti, 2013; Nguyen et al., 2015). Other work has as-\nsumed that the order of two entities in a relation are given while the relation type itself is unknown (Nguyen and Grishman, 2014; Nguyen and Grishman, 2015). The standard relation extraction task, as adopted by ACE 2005 (Walker et al., 2006), uses long sentences containing multiple named entities with known types4 and unknown relation directions. We are the first to apply neural language model embeddings to this task.\nMotivation and Examples Whether a word is indicative of a relation depends on multiple properties, which may relate to its context within the sentence. For example, whether the word is inbetween the entities, on the dependency path between them, or to their left or right may provide additional complementary information. Illustrative examples are given in Table 1 and provide the motivation for our model. In the next section, we will show how we develop informative representations capturing both the semantic information in word embeddings and the contextual information expressing a word\u2019s role relative to the entity mentions. We are the first to incorporate all of this information at once. The closest work is that of Nguyen and Grishman (2014), who use a loglinear model for relation extraction with embeddings as features for only the entity heads. Such embedding features are insensitive to the broader contextual information and, as we show, are not sufficient to elicit the word\u2019s role in a relation."}, {"heading": "3 A Feature-rich Compositional Embedding Model for Relations", "text": "We propose a general framework to construct an embedding of a sentence with annotations on its component words. While we focus on the relation extraction task, the framework applies to any task that benefits from both embeddings and typical hand-engineered lexical features."}, {"heading": "3.1 Combining Features with Embeddings", "text": "We begin by describing a precise method for constructing substructure embeddings and annotated sentence embeddings from existing (usually unlexicalized) features and embeddings. Note that these embeddings can be included directly in a log-linear model as features\u2014doing so results in\n4Since the focus of this paper is relation extraction, we adopt the evaluation setting of prior work which uses gold named entities to better facilitate comparison.\na special case of our full model presented in the next subsection.\nAn annotated sentence is first decomposed into substructures. The type of substructures can vary by task; for relation extraction we consider one substructure per word5. For each substructure in the sentence we have a hand-crafted feature vector fwi and a dense embedding vector ewi . We represent each substructure as the outer product \u2297 between these two vectors to produce a matrix, herein called a substructure embedding: hwi = fwi \u2297 ewi . The features fwi are based on the local context in S and annotations in A, which can include global information about the annotated sentence. These features allow the model to promote different properties and to distinguish different functions of the words. Feature engineering can be task specific, as relevant annotations can change with regards to each task. In this work we utilize unlexicalized binary features common in relation extraction. Figure 1 depicts the construction of a sentence\u2019s substructure embeddings.\nWe further sum over the substructure embeddings to form an annotated sentence embedding:\nex =\nn\u2211\ni=1\nfwi \u2297 ewi (1)\nWhen both the hand-crafted features and word embeddings are treated as inputs, as has previously been the case in relation extraction, this annotated sentence embedding can be used directly as the features of a log-linear model. In fact, we find that the feature sets used in prior work for many other NLP tasks are special cases of this simple construction (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014). This highlights an important connection: when the word embeddings are constant, our constructions of substructure and annotated sentence embeddings are just specific forms of polynomial (specifically quadratic) feature combination\u2014hence their commonality in the literature. Our experimental results suggest that such a construction is more powerful than directly including embeddings into the model."}, {"heading": "3.2 The Log-Bilinear Model", "text": "Our full log-bilinear model first forms the substructure and annotated sentence embeddings from\n5We use words as substructures for relation extraction, but use the general terminology to maintain model generality.\n054\n055\n056\n057\n058\n059\n060\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071\n072\n073\n074\n075\n076\n077 078 079 080 081 082 083 084 085 086 087 088 089 090 091 092 093 094 095 096 097 098 099 100 101 102 103 104 105 106 107\nBased on above ideas, we achieve a general model and can easily apply to model to an NLP task\nwithout the need for designing model structures or selecting features from scratch. Specifically, if\nwe denote a instance as (y, S), where S is an arbitrary language structure and y is the label for\nthe structure. Then we decompose the structure to some factors following S = {f}. For each\nfactor f , there is a list of m associated features g = g1, g2, ..., gm, and a list of t associated words\nwf,1, wf,2, ..., wf,t 2 f . Here we suppose that each factor has the same number of words, and there\nis a transformation from the words in a factor to a hidden layer as follows:\nhf =\n\u21e5\newf,1 : ewf,2 : ... : ewf,t\n\u21e4\n\u00b7 W\n, (1)\nwhere ewi is the word embedding for word wi. Suppose the word embeddings have de dimensions\nand the hidden layer has dh dimensions. Here W = [W1W2...Wt], each Wj is a de \u21e5 dh matrix,\nis a transformation from the concatenation of word embeddings to the inputs of the hidden layer.\nThen the sigmoid transformation will be used to get the values of hidden layer from its inputs.\nDev MRR Test MRR Model Fine-tuning supervison 1,000 10,000 100,000 1,000 10,000 100,000 SUM - - 46.95 35.29 30.69 52.63 41.19 37.32 Y PPDB 50.81 36.81 32.92 57.23 45.01 41.23 RNN (d=50) Y PPDB 45.67 30.86 27.05 54.84 39.25 35.49 RNN (d=200) Y PPDB 48.97 33.50 31.13 53.59 40.50 38.57 FCT N PPDB 47.53 35.58 31.31 54.33 41.96 39.10 Y PPDB 51.22 36.76 33.59 61.11 46.99 44.31 FCT - LM 49.43 37.46 32.22 53.56 42.63 39.44 Y LM + PPDB 53.82 37.48 34.43 65.47 49.44 45.65 joint LM + PPDB 56.53 41.41 36.45 68.52 51.65 46.53 Table 9: Performance on the semantic similarity task with PPDB data. @` @T = nX i=1 @` @R \u2326 fwi \u2326 ewi , (13) @` @ew = nX i=1 I [wi = w] T @` @R fwi (14) T : nX i=1 fi \u2326 ewi representation (15) T nX i=1 fi \u2326 ewi (16) T nX i=1 fi \u2326 ewi = nX i=1 T fi ewi\nMi\nnX\ni=1\nfi \u2326 ewi\n(17)\n(18)\n+ (19)\n(wi, fi = f (wi, S)) (20)\nwi 2 S (21)\nT (\u2326fwi \u2326 ewi) , (22)\n\u21e5 (23) \u21e52,0 0 (24)\n\u21e52,1,\u21e52,2,\u21e52,3 0 (25)\n054\n055\n056\n057\n058\n059\n060\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071 072 073 074 075 076 077 078 079 080 081 082 083 084 085 086 087 088 089 090 091 092 093 094 095 096 097 098 099 100 101 102 103 104 105 106 107\nBased on above ideas, we achieve a general model and can easily apply to model to an NLP task\nwithout the need for designing model structures or selecting features from scratch. Specifically, if\nwe denote a instance as (y, S), where S is an arbitrary language structure and y is the label for\nthe structure. Then we decompose the structure to some factors following S = {f}. For each\nfactor f , there is a list of m associated features g = g1, g2, ..., gm, and a list of t associated words\nwf,1, wf,2, ..., wf,t 2 f . Here we suppose that each factor has the same number of words, and there\nis a transformation from the words in a factor to a hidden layer as follows:\nhf =\n\u21e5\newf,1 : ewf,2 : ... : ewf,t\n\u21e4\n\u00b7 W\n, (1)\nwhere ewi is the word embedding for word wi. Suppose the word embeddings have de dimensions\nand the hidden layer has dh dimensions. Here W = [W1W2...Wt], each Wj is a de \u21e5 dh matrix,\nis a transformation from the concatenation of word embeddings to the inputs of the hidden layer.\nThen the sigmoid transformation will be used to get the values of hidden layer from its inputs.\nFigure 1: Tensor representation of the FCT model. (a) Representation of an input sentence. (b) Representation for the parameter space. Based on above notations, we can represent each factor as the outer product between the feature vector and the hidden layer of transformed embedding gf\u2326hf . The we use a tensor T = L\u2326E\u2326F as in Figrure 1(b) to transform this input matrix to the labels. Here L is the set of labels, E refers to all dimensions of hidden layer (|E| = 200) and F is the set of features. In order to predict the conditional probability of a label y given the structure S, we have P (y|S; T ) = exp{s(y, S; T )}P y02L exp{s(y0, S; T )} , (2) where s(y, S; T ) is the score of label y computed with our model. Since we decompose the structure S to factors, each factor fi 2 S will contribute to the score based on the model parameters. Specifically, each label y corresponds to a slice of the tensor Ty , which is a matrix \u21e5(y, \u00b7, \u00b7). Then each factor fi will contribute a score s(y, fi) = Ty gf hf , (3) where correspond to tensor product, while in the case of Eq.(3), it has the equivalent form: Ty gf hf = Ty (gf \u2326 hf ) = (\u21e5(y, \u00b7, \u00b7) \u00b7 gf )T hf . In this way, the target score of label y given an instance S and parameter tensor T can be written as: s(y, S; T ) = nX i=1 s(y, fi; T ) = nX i=1 Ty gfi hfi . (4) The FCM model only performs linear transformations on each view of the tensor, making the model efficient and easy to implement. Learning In order to train the parameters we optimize the following cross-entropy objective: `(D; T, W ) = X (y,S)2D log P (y|S; T, W )\nwhere D is the set of all training data. We used AdaGrad [9] to optimize above objective. Therefore we are performing stochastic training; and for each instance (y, S) the loss function ` = `(y, S; T, W ) = log P (y|S; T, W ). Then\n2\n162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 Classifier Features F1 SVM [] POS, prefixes, morphological, WordNet, dependency parse, 82.2 (Best in SemEval2010) Levin classed, ProBank, FrameNet, NomLex-Plus, Google n-gram, paraphrases, TextRunner RNN word embeddings, syntactic parse 74.8word embeddings, syntactic parse, POS, NER, WordNet 77.6 MVRNN word embeddings, syntactic parse 79.1word embedding, syntactic parse, POS, NER, WordNet 82.4 FCM (fixed-embedding) word embeddings, dependency parse, WordNet 82.0 FCM (fine-tuning) word embeddings, dependency parse, WordNet 82.3 FCM + linear word embeddings, dependency parse, WordNet Table 2: Feature sets used in FCM. References [1] Yoshua Bengio, Holger Schwenk, Jean-Se\u0301bastien Sene\u0301cal, Fre\u0301deric Morin, and Jean-Luc Gauvain. Neural probabilistic language models. In Innovations in Machine Learning, pages 137\u2013186. Springer, 2006. [2] Ronan Collobert and Jason Weston. A unified architecture for natural language processing: Deep neural networks with multitask learning. In International conference on Machine learning, pages 160\u2013167. ACM, 2008. [3] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Corrado, and Jeffrey Dean. Distributed representations of words and phrases and their compositionality. arXiv preprint arXiv:1310.4546, 2013. [4] Joseph Turian, Lev Ratinov, and Yoshua Bengio. Word representations: a simple and general method for semi-supervised learning. In Association for Computational Linguistics, pages 384\u2013394, 2010. [5] Ronan Collobert. Deep learning for efficient discriminative parsing. In International Conference on Artificial Intelligence and Statistics, 2011. [6] Eric H Huang, Richard Socher, Christopher D Manning, and Andrew Y Ng. Improving word representations via global context and multiple word prototypes. In Association for Computational Linguistics, pages 873\u2013882, 2012. [7] Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D. Manning, Andrew Ng, and Christopher Potts. Recursive deep models for semantic compositionality over a s ntiment tr ebank. In Empirical Methods in Natural Language Processing, pages 1631\u20131642, 2013. [8] Karl Moritz Hermann, Dipanjan Das, Jason Weston, and Kuzman Ganchev. Semantic frame identification with distributed word representations. In Proceedings of ACL. Association for Computational Linguistics, June 2014. [9] John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and stochastic optimization. The Journal of Machine Learning Research, 12:2121\u20132159, 2011. [10] Iris Hendrickx, Su Nam Kim, Zornitsa Kozareva, Preslav Nakov, Diarmuid O\u0301 Se\u0301aghdha, Sebastian Pado\u0301, Marco Pennacchiotti, Lorenza Romano, and Stan Szpakowicz. Semeval-2010 task 8: Multi-way classification of semantic relations between pairs of nominals. In Proceedings of the SemEval-2 Workshop, Uppsala, Sweden, 2010. [11] Richard Socher, Brody Huval, Christopher D. Manning, and Andrew Y. Ng. Semantic compositionality through recursive matrix-vector spaces. In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 1201\u20131211, Jeju Island, Korea, July 2012. Association for Computational Linguistics. [12] Robert Parker, David Graff, Junbo Kong, Ke Chen, and K zuaki Maeda. E glish gigaword fifth edition, june. Linguistic Data Consortium, LDC2011T07, 2011. ewf,1 ewf,2 ... ewf,t (9)\n4\nDev MRR Test MRR\nModel Fine-tuning supervison 1, 00 10, 0 100,000 1,000 10,000 100,000\nSUM\n- - 46.95 35.29 30.69 52.63 41.19 37.32\nY PPDB 50.81 36.81 32.92 57.23 45.01 41.23\nRNN (d=50) Y PPDB 45.67 30.86 27.05 54.84 39.25 35.49\nRNN (d=200) Y PPDB 48.97 33.50 31.13 53.59 40.50 38.57\nFCT\nN PPDB 47.53 35.58 31.31 54.33 41.96 39.10\nY PPDB 51.22 36.76 33.59 61.11 46.99 44.31\nFCT\n- LM 49.43 37.46 32.22 53.56 42.63 39.44\nY LM + PPDB 53.82 37.48 34.43 65.47 49.44 45.65\njoint LM + PPDB 56.53 41.41 36.45 68.52 51.65 46.53\nTable 9: Performance on the semantic similarity task with PPDB data.\n@`\n@T\n=\nnX\ni=1\n@`\n@R\n\u2326 fwi \u2326 ewi , (13)\n@`\n@ew\n=\nnX\ni=1\nI [wi = w] T\n@`\n@R\nfwi (14)\nT :\nnX\ni=1\nfi \u2326 ewi representation (15)\nT\nnX\ni=1\nfi \u2326 ewi\n(16)\nT\nnX\ni=1\nfi \u2326 ewi\n=\nnX\ni=1\nT fi ewi\nMi\nnX\ni=1\nfi \u2326 ewi\n(17)\n(18)\n+ (19)\n(wi, fi = f (wi, S)) (20) wi 2 S (21) T (\u2326fwi \u2326 ewi) , (22) \u21e5 (23) \u21e52,0 0 (24) \u21e52,1,\u21e52,2,\u21e52,3 0 (25)\n054\n055\n056\n057\n058\n059\n060\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071 072 073 074 075 076 077 078 079 080 081 082 083 084 085 086 087 088 089 090 091 092 093 094 095 096 097 098 099 100 101 102 103 104 105 106 107\nBased on bove de s, we achiev a general model and can easily apply to model to an NLP task\nwithout the need for designing model st uctu es or selecting features from scratch. Specifically, if\nwe denote instance as (y, S), where S is an arbitrary language structure and y is the label for\nthe structure. Then we decompose the structure to some factors following S = {f}. For each\nfactor f , there is a list of m associ ted features g = g1, g2, ..., gm, and a list of t associated words\nwf,1, wf,2, ..., wf,t 2 f . Here we suppose that each factor has the same number of words, and there\nis a transformation from the words in a factor to a hidden layer as follows:\nhf =\n\u21e5\newf,1 : ewf,2 : ... : ewf,t\n\u21e4\n\u00b7 W\n, (1)\nwhere ewi is the word embedding for word wi. Suppose the word embeddings have de dimensions\nand the hidden layer has dh dimensions. Here W = [W1W2...Wt], each Wj is a de \u21e5 dh matrix,\nis a transformation from the concatenation of word embeddings to the inputs of the hidden layer.\nThen he sigmoid transformation will be used to get the values of hidden layer from its inputs.\nFigure 1: T nsor representation of the FCT model. (a) Representation of an input sentence. (b) Representation for the parameter space. Based on bov no ations, we can r present ch factor as the outer product between the feature vector and t e hidd n layer of transformed embedding gf\u2326hf . The we use a tensor T = L\u2326E\u2326F as in Figrure 1(b) to transform this input matrix to the labels. Here L is the set of labels, E refers to all dimen ions of hidden layer (|E| = 200) and F is the set of features. In ord r to pr dict the conditional probability of a label y given the structure S, we have P (y|S; T ) = exp{s(y, S; T )}P y02L exp{s(y0, S; T )} , (2) where s(y, S; T ) is the score of label y compu ed with our model. Since we decompose the structure S to factors, each factor fi 2 S will contribute to the score based on the model parameters. Specifically, each label y corresponds to a slice of the tensor Ty , which is a matrix \u21e5(y, \u00b7, \u00b7). Then each factor fi will contribute a score s(y, fi) = Ty gf hf , (3) where correspond to tensor product, while in the case of Eq.(3), it has the equivalent form: Ty gf hf = Ty (gf \u2326 hf ) = (\u21e5(y, \u00b7, \u00b7) \u00b7 gf )T hf . In this way, the target scor of label y given an instance S and parameter tensor T can be written as: s(y, S; T ) = nX i=1 s(y, fi; T = nX i=1 Ty gfi hfi . (4) The FCM model only perform linear transfor ations on each view of the tensor, making the model efficient and easy to implement. Learn ng In order to t ain the paramet rs w optimize the following cross-entropy objective: `(D; T, W ) = X (y,S)2D log P (y|S; T, W )\nwhere D is the set of all training dat . We used AdaGrad [9] to optimize above objective. Therefore we are performing stochastic training; and for each instance (y, S the loss function ` = `(y, S; T, W ) = log P (y|S; T, W ). Then\n2\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\nClassifier Features F1\nSVM [] POS, prefixes, morphological, WordNet, dependency parse, 82.2\n(Best i SemEval2010) Levin classed, ProBank, FrameNet, NomLex-Plus,\nGoogle n-gram, paraphrases, TextRunner\nRNN word embeddings, syntactic parse 74.8word embeddings, syntactic parse, POS, NER, WordNet 77.6\nMVRNN word embeddings, syntactic parse 79.1word embedding, syntactic parse, POS, NER, WordNet 82.4\nFCM (fixe -embedding) word embeddings, dependency parse, WordNet 82.0\nFCM (fine-tu ing) word embeddings, dependency parse, WordNet 82.3\nFCM + li ear word embeddings, dependency parse, WordNet\nTable 2: Feature sets used in FCM.\nReferences\n[1] Yoshua Bengio, Holger Schwenk, Jean-Se\u0301bastien Sene\u0301cal, F e\u0301deric Morin, and Jean-Luc Gauvain. Neural\nprobabilistic langu ge models. In Innovations Machine Learning, pages 137\u2013186. Springer, 2006.\n[2] Ronan Collobert and Jason Weston. A unified architectur for natural language processing: Deep neural\nnetworks with multitask learning. In I ternational conference on Machine learning, pages 160\u2013167.\nACM, 2008.\n[3] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Corrado, a d Jeffrey Dean. Distributed representations\nof words and hrases nd their compositionality. arXiv preprint arXiv:1310.4546, 2013.\n[4] Joseph Turian, Lev Ratin v, and Yoshu Bengio. Word representations: a simple and general method for\nsemi-su ervised lear ing. In Association for Computational Linguistics, pages 384\u2013394, 2010.\n[5] Ro an Collober . Deep learni g for efficient discrimi ative parsing. In International Conference on\nArtificial Intelligence and Statistics, 2011.\n[6] Eric H Hua Richard Socher, Christopher D Manning, and Andrew Y Ng. Improving word represen-\ntations via global context and multiple word prototypes. In Association for Computational Linguistics,\npages 873\u2013882, 2012.\n[7] Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D. Manning, Andrew Ng, and\nChristopher Potts. Recursive deep mod ls for semantic compositionality over a s ntiment tr ebank. In\nEmpirical Methods in Natural Language Processing, pages 1631\u20131642, 2013.\n[8] Karl Moritz Hermann, Dipanjan Das, Jason Weston, and Kuzman Ganchev. Semantic frame identification\nwith distributed word representations. In Proceedings of ACL. Association for Computational Linguistics,\nJune 2014.\n[9] John Duchi, Elad Hazan, and Yoram Singer. Ad pt ve subgradient methods for online learning and\nstochastic optimization. The Journal of Machine Learning Research, 12:2121\u20132159, 2011.\n[10] Iris Hendrickx, Su Nam Ki , Zornitsa Kozareva, Preslav Nakov, Diarmuid O\u0301 Se\u0301aghdha, Sebastian Pado\u0301,\nMarco Pennacchiotti, Lorenz Romano, and Stan Szpakowicz. Semeval-2010 task 8: Multi-way clas-\ns fication of semantic elations between pairs of nominal . In Proceedings of the SemEval-2 Workshop,\nUppsala, Sweden, 2010.\n[11] Richard Socher, Brody Huval, Christopher D. Manning, and Andrew Y. Ng. Semantic compositionality\nth ugh recursive matrix-vector spaces. In Proceedings of the 2012 Joint Conference on Empirical Meth-\nods in Natur L nguage Processing a d Computational Natural Language Learning, pages 1201\u20131211,\nJeju Island, Kore , July 2012. Association for Computational Linguistics.\n[12] Robert Parker, David Graff, Junbo Kong, Ke Chen, and K zuaki Maeda. E glish gigaword fifth edition,\njune. Linguistic Data Consortium, LDC2011T07, 2011.\newf,1\newf,2\n...\newf,t\n(9)\n4\nFigure 1: Tensor representation of the FCT model. (a) Representation of an input structure. (b) Representation for the parameter space.\nBased on above notations, we can represent each factor as the outer product between the feature vector and the hidden layer of transformed embedding gf\u2326hf . The we use a tensor T = L\u2326E\u2326F as in Figrure 1(b) to transform this input matrix to the labels. Here L is the set of labels, E refers to all dimensions of hidden layer (|E| = 200) and F is the set of featur s. In order to predict the conditional probability of a label y given the structure S, we have\nP (y|S; T ) = exp{s(y, S; T )}P y02L exp{s(y0, S; T )} , (2)\nwhere s(y, S; T ) is the score of label y computed with our model. Since we decompose the structure S to factors, each factor fi 2 S will contribute to the score based on the model parameters. Specifically, each label y corresponds to a slice of the tensor Ty , which is a matrix \u21e5(y, \u00b7, \u00b7). Then each factor fi will contribute a score\ns(y, i) = Ty gf hf , (3) where correspond to tensor product, while in the case of Eq.(3), it has the equivalent form:\nTy gf hf = Ty (gf \u2326 hf ) = (\u21e5(y, \u00b7, \u00b7) \u00b7 gf )T hf . In this way, the target score of label y given an instance S and parameter tensor T can be written as:\ns(y, S; T ) = nX\ni=1\ns(y, fi; T ) = nX\ni=1\nTy gfi hfi . (4)\nThe FCM model only performs linear transformations on each view of the tensor, making the model efficient and easy to implement.\nLearning In order to train the parameters we optimize the following cross-entropy objective:\n`(D; T, W ) = X\n(y,S)2D log P (y|S; T, W )\nwh re D is the se of all training ta. We used AdaGrad [9] to optimize above objective. Therefore we are performing stochastic training; and for each instance (y, S) the loss function ` = `(y, S; T, W ) = log P (y|S; T, W ). Then\n2\nbc cts wl\nModel P R F1 P R F1 P R F1\nHeadEmb\nCNN (wsize=1) + local features\nCNN (wsize=3) + local f atures\nFCT local only\nFCT gl bal 60. 9 4 . 9 49.92 56.41 34.45 4 .78 41.95 31.77 36.16\nFCT global (Brown) 6 .15 39.58 48.66 62.45 36.47 46.05 54.95 29.93 38.75\nFCT global (WordNet) 59.00 44.79 50.92 60.20 39.60 47.77 50.95 4.18 40.92\nPET (Plank and Moschitti, 2013) 51.2 40.6 45.3 51.0 37.8 43.4 5.4 32.8 34.0\nBOW (Plank and Moschitti, 20 3) 57.2 37.1 45.0 57. 31.8 41.0 41.1 27.2 32.7\nBest (Plank and oschitti, 2013) 55.3 43.1 48.5 54.1 8.1 44.7 39.9 3 .8 37.8\nTable 7: Performance on ACE2005 test sets. The first part of the table shows the performance of different models on\ndifferent sources of entity types, where \u201dG\u201d means that the gold types are used and \u201dP\u201d means that we are using the\npre ict d types. The seco d part of the l shows th results under the low-resou ce setting, where the entity types\nare unknown.\nDev MRR Test MRR\nModel Fine-tuning 1,000 10,000 100,000 1,000 10,000 100,000\nSUM - 46.95 35.29 30.69 52.63 41.19 37.32\nSUM Y 50.81 36.81 32.92 57.23 45.01 41.23\nBest Recursiv NN (d=50) Y 45.67 30.86 27.05 54.84 39.25 35.49\nBest Recursive NN (d=200) Y 48.97 33.50 31.13 53.59 40.50 38.57\nFCT N 47.53 35.58 31.31 54.33 41.96 39.10\nFCT Y 51.22 36.76 33.59 61.11 46.99 44.31\nFCT + LM - 49.43 37.46 32.22 53.56 42.63 39.44\nFCT + LM +supervised Y 53.82 37.48 34.43 65.47 49.44 45.65\njoint 56.53 41.41 36.45 68.52 51.65 46.53\nTable 8: Performance on the semantic similarity task with PPDB data.\nAppendix 1: Features Used in FCT\n7.1 Overall performances on ACE 2005\nSUM(AB) 6= SUM(BA) (7)\n2n\n2 |V |n (8)\nA A0 of B0 B (9)\nA B A0 of B0 (10)\nT f e) Relations (11) f \u2326 e [f : e] FCT CNN\n@`\n@R\n@` @T = @` @R @R @T L1, L2 @L @R = @L1 @R + @L2 @R\ns(l, e1, e2, S; T ) = nX\ni=1\ns(l, ewi , fwi)\n= nX\ni=1\nTl fwi ewi (12)\n@`\n@T =\nnX\ni=1\n@`\n@R \u2326 fwi \u2326 ewi , (13)\n-.5 .3 .8 .7 0 0 0 0 -.5 .3 .8 .7 0 0 0 0 0 0 0 0 -.5 .3 .8 .7 -.5 .3 .8 .7\n-.5 .3 .8 .7\n1 0 1 0 0 1\n~\u2713 \u21e1 0 ~ ( 2 0) -.5 .3 .8 .7 1 0 1 0 0 1\n-.5 .3 .8 .7 0 0 0 0 -.5 .3 .8 .7 0 0 0 0 0 0 0 0 -.5 .3 .8 .7 -.5 .3 .8 .7\n-.5 .3 .8 .7\n1 0 1 0 0 1\n~\u2713 \u21e1 0 ~ ( 2 0) -.5 .3 .8 .7 1 0 1 0 0 1\nbc cts wl\nModel P R F1 P R F1 P R F1\nHeadEmb\nCNN (wsiz =1) + local features\nCNN (wsiz =3) + local features\nFCT local only\nFCT global 60.69 42.39 9.92 56.41 34.45 42.78 41.9 31.77 6.16\nFCT global (Brown) 63.15 39.58 48.66 62.45 36.47 46.05 54.95 29.9 38.75\nFCT global (WordNe ) 59. 0 44.79 5 .92 60.20 39.60 47.77 50.95 34.18 40.92\nPET (Plank and Moschitti, 013) 51.2 0.6 4 .3 1.0 37.8 43. 35.4 32.8 34.0\nBOW (Plank and Moschitti, 2013) 57.2 37. 45.0 57.5 31.8 41.0 41.1 27.2 32.7\nBest (Plank and Moschitti, 2013) 55.3 43.1 48.5 54.1 38.1 44.7 39.9 35.8 37.8\nTable 7: erformance on ACE2005 test sets. The first part f the tabl shows the performa ce f different models on\ndifferent sources of entity types, where \u201dG\u201d means that the gold types are us d and \u201dP\u201d means that w are using the\npredicted ypes. The second part of the table sh ws the results under th low-resource setting, where the entity types\nare unknown.\nDev MRR Test MRR\nModel Fine-tuning 1,000 10, 00 100,000 1,000 10, 00 100,000\nSUM - 46.95 35.29 30.69 52.63 41.19 37.32\nSUM Y 50.81 36.81 32.92 57.23 45.01 41.23\nBe t Recursive NN (d=50) Y 45.67 30.86 27.05 4.84 3 .25 35.49\nBest Recursiv NN (d=200) Y 48.97 3 .50 31.13 53.59 40.50 38.57\nFCT N 47.53 5.58 31.31 54.33 41.96 39.10\nFCT Y 51.22 36.76 33.59 61.11 46.99 44.31\nFCT + LM - 49.43 37.46 32.22 53.56 2.63 39.44\nFCT + LM +supervised Y 53.82 37.48 34.43 65.47 49.44 45.65\njoint 56.53 1.41 36.45 68.52 1.65 46.53\nTable 8: Performance on the semantic similarity task with PPDB data.\nAppendix 1: Features Used in FCT\n7.1 Overall performances on ACE 2005\nSUM(AB) 6 SUM(BA) (7)\n2n\n2 |V |n (8)\nA A0 of B0 B (9)\nA B A0 of B0 (10)\nT f e) Relations (11) f \u2326 e [f : e] FCT CNN\n@`\n@R\n@` @T = @` @R @R @T L1, L2 @L @R = @L1 @R + @L2 @R\ns(l, e1, e2, S; T ) = nX\ni=1\ns(l, ewi , fwi)\n= nX\ni=1\nTl fwi ewi (12)\n@`\n@T =\nnX\ni=1\n@`\n@R \u2326 fwi \u2326 ewi , (13)\nw 1 ,w 2\n,\u2026 ,w n\new\nfw\nfwi ewi\newi\nfwi\n(wi=\u201cdriving\u201d)\n(wi is on path?)\n\u2026\ny M1=man M2=taxicab\nw1=\u201cA\u201d wi=\u201cdriving\u201d\nA \u2026 fwi fw1\n[A man]M1 driving what appeared to be [a taxicab]M2\nFigure 1: Example construction of substructure embeddings. Each substructure is a word wi in S, augmented by the target entity information and related information from annotation A (e.g. a dependency tree). We show the factorization of the annotated sentence into substructures (left), the concatenation of the substructure embeddings for the sentence (middle), and a single substructure embedding from that concatenation (right). The annotated sentence embedding (not shown) would be the sum of the substructure embeddings, as opposed to their concatenation.\nthe previous subsection. he model uses its parameters to score the annotated sentence embedding and uses a softmax to produce an output label. We call the entire model the Feature-rich Compositional Embedding Model (FCM).\nOur ta k is to de ermine the label y (relation) given the instance x = (M1,M2 S,A). We formulate this as a probability.\nP (y|x;T, e) = exp ( \u2211n\ni=1 Ty (fwi \u2297 ewi)) Z(x)\n(2) where is the \u2018matrix dot product\u2019 or Frobenious inner product of the two matrices. The normalizing constant which sums over all possible output labels y\u2032 \u2208 L is given by Z(x) =\u2211\ny\u2032\u2208L exp (\u2211n i=1 Ty\u2032 (fwi \u2297 ewi) ) . The parameters of the model are the word embeddings e for each word type and a list of weight matrix T = [Ty]y\u2208L which is used to score each label y. The model is log-bilinear 6 (i.e. log-quadratic) since we recover a log-linear model by fixing either e or T . We study both the full log-bilinear and the log-linear model obtained by fixing the word embeddings."}, {"heading": "3.3 Discussion of the Model", "text": "Substructure Embeddings Similar words (i.e. those with similar embeddings) with similar functions in the sentence (i.e. those with similar features) will have similar matrix representations. To understand our selection of the outer product, consider the example in Fig. 1. The word \u201cdriving\u201d can indicate the ART relation if it appears on the\n6Other popular log-bilinear models are the log-bilinear language models (Mnih and Hinton, 2007; Mikolov et al., 2013).\ndependency path between M1 and M2. Suppose the third feature in fwi indicates this on-path feature. Our model can now learn parameters which give the third row a high weight for the ART label. Other words with embeddings similar to \u201cdriving\u201d that appear on the dependency path between the mentions will similarly receive high weight for the ART label. On the other hand, if the embedding is similar but is not on the dependency path, it will have 0 weight. Thus, our model generalizes its model parameters across words with similar embeddings only when they share similar functions in the sentence.\nSmoothed Lexical Features Another intuition about the selection of outer product is that it is actually a smoothed version of traditional lexical features used in classical NLP systems. Consider a lexical feature f = u \u2227 w, which is a conjunction (logic-and) between non-lexical property u and lexical part (word) w. If we represent w as a one-hot vector, then the outer product exactly recovers the original feature f . Then if we replace th one-hot representation with its word embedding, we get the current form of our FCM. Therefore, our model can be viewed as a smoothed version of lexical features, which keeps the expressive strength, and uses embeddings to generalize to low frequency features.\nTime Complexity Inference in FCM is much faster than both CNNs (Collobert et al., 2011) and RNNs (Socher et al., 2013b; Bordes et al., 2012). FCM requires O(snd) products on average with sparse features, where s is the average number of per-word non-zero feature values, n is the length of the sentence, and d is the dimension of word embedding. In contrast, CNNs and RNNs usually\nhave complexity O(C \u00b7 nd2), where C is a model dependent constant."}, {"heading": "4 Hybrid Model", "text": "We present a hybrid model which combines the FCM with an existing log-linear model. We do so by defining a new model:\npFCM+loglin(y|x) = 1\nZ pFCM(y|x)ploglin(y|x) (3)\nThe log-linear model has the usual form: ploglin(y|x) \u221d exp(\u03b8 \u00b7 f(x, y)), where \u03b8 are the model parameters and f(x, y) is a vector of features. The integration treats each model as a providing a score which we multiply together. The constant Z ensures a normalized distribution."}, {"heading": "5 Training", "text": "FCM training optimizes a cross-entropy objective:\n`(D;T, e) = \u2211\n(x,y)\u2208D logP (y|x;T, e)\nwhere D is the set of all training data and e is the set of word embeddings. To optimize the objective, for each instance (y,x) we perform stochastic training on the loss function ` = `(y,x;T, e) = logP (y|x;T, e). The gradients of the model parameters are obtained by backpropagation (i.e. repeated application of the chain rule). We define the vector s = [ \u2211\ni Ty (fwi \u2297 ewi)]1\u2264y\u2264L, which yields \u2202`\n\u2202s = [( I[y\u2032 = y]\u2212 P (y\u2032|x;T, e) ) 1\u2264y\u2264L ]T ,\nwhere the indicator function I[x] equals 1 if x is true and 0 otherwise. We have the following gradients: \u2202`\u2202T = \u2202` \u2202s \u2297 \u2211n i=1 fwi \u2297 ewi , which is equivalent to:\n\u2202` \u2202Ty\u2032 = ( I[y = y\u2032]\u2212 P (y\u2032|x;T, e) ) \u00b7 n\u2211\ni=1\nfwi \u2297 ewi .\nWhen we treat the word embeddings as parameters (i.e. the log-bilinear model), we also fine-tune the word embeddings with the FCM model:\n\u2202`\n\u2202ew =\nn\u2211\ni=1\n((\u2211\ny\n\u2202`\n\u2202sy Ty\n) \u00b7 fi ) \u00b7 I[wi = w].\nAs is common in deep learning, we initialize these embeddings from an neural language model and then fine-tune them for our supervised task. The training process for the hybrid model (\u00a7 4) is also easily done by backpropagation since each sub-model has separate parameters."}, {"heading": "6 Experimental Settings", "text": "Features Our FCM features (Table 2) use a feature vector fwi over the word wi, the two target entities M1,M2, and their dependency path. Here h1, h2 are the indices of the two head words of M1,M2, \u00d7 refers to the Cartesian product between two sets, th1 and th2 are entity types (named entity tags for ACE 2005 or WordNet supertags for SemEval 2010) of the head words of two entities, and \u03c6 stands for the empty feature. \u2295 refers to the conjunction of two elements. The In-between features indicate whether a word wi is in between two target entities, and the On-path features indicate whether the word is on the dependency path, on which there is a set of words P , between the two entities.\nWe also use the target entity type as a feature. Combining this with the basic features results in more powerful compound features, which can help us better distinguish the functions of word embeddings for predicting certain relations. For example, if we have a person and a vehicle, we know it will be more likely that they have an ART relation. For the ART relation, we introduce a corresponding weight vector, which is closer to lexical embeddings similar to the embedding of \u201cdrive\u201d.\nAll linguistic annotations needed for features (POS, chunks7, parses) are from Stanford CoreNLP (Manning et al., 2014). Since SemEval does not have gold entity types we obtained WordNet and named entity tags using Ciaramita and Altun (2006). For all experiments we use 200- d word embeddings trained on the NYT portion of the Gigaword 5.0 corpus (Parker et al., 2011), with word2vec (Mikolov et al., 2013). We use the CBOW model with negative sampling (15 negative words). We set a window size c=5, and remove types occurring less than 5 times.\nModels We consider several methods. (1) FCM in isolation without fine-tuning. (2) FCM in isolation with fine-tuning (i.e. trained as a log-bilinear\n7Obtained from the constituency parse using the CONLL 2000 chunking converter (Perl script).\nmodel). (3) A log-linear model with a rich binary feature set from Sun et al. (2011) (Baseline)\u2014 this consists of all the baseline features of Zhou et al. (2005) plus several additional carefully-chosen features that have been highly tuned for ACE-style relation extraction over years of research. We exclude the Country gazetteer and WordNet features from Zhou et al. (2005). The two remaining methods are hybrid models that integrate FCM as a submodel within the log-linear model (\u00a7 4). We consider two combinations. (4) The feature set of Nguyen and Grishman (2014) obtained by using the embeddings of heads of two entity mentions (+HeadOnly). (5) Our full FCM model (+FCM). All models use L2 regularization tuned on dev data."}, {"heading": "6.1 Datasets and Evaluation", "text": "ACE 2005 We evaluate our relation extraction system on the English portion of the ACE 2005 corpus (Walker et al., 2006).8 There are 6 domains: Newswire (nw), Broadcast Conversation (bc), Broadcast News (bn), Telephone Speech (cts), Usenet Newsgroups (un), and Weblogs (wl). Following prior work we focus on the domain adaptation setting, where we train on one set (the union of the news domains (bn+nw), tune hyperparameters on a dev domain (half of bc) and evaluate on the remainder (cts, wl, and the remainder of bc) (Plank and Moschitti, 2013; Nguyen and Grishman, 2014). We assume that gold entity spans and types are available for train and test. We use all pairs of entity mentions to yield 43,518 total relations in the training set. We report precision, recall, and F1 for relation extraction. While it is not our focus, for completeness we include results with unknown entity types following Plank and Moschitti (2013) (Appendix 1).\nSemEval 2010 Task 8 We evaluate on the SemEval 2010 Task 8 dataset9 (Hendrickx et al., 2010) to compare with other compositional models and highlight the advantages of FCM. This task is to determine the relation type (or no relation) between two entities in a sentence. We adopt the setting of Socher et al. (2012). We use 10-fold\n8Many relation extraction systems evaluate on the ACE 2004 corpus (Mitchell et al., 2005). Unfortunately, the most common convention is to use 5-fold cross validation, treating the entirety of the dataset as both train and evaluation data. Rather than continuing to overfit this data by perpetuating the cross-validation convention, we instead focus on ACE 2005.\n9 http://docs.google.com/View?docid=dfvxd49s_36c28v9pmw\ncross validation on the training data to select hyperparameters and do regularization by early stopping. The learning rates for FCM with/without fine-tuning are 5e-3 and 5e-2 respectively. We report macro-F1 and compare to previously published results."}, {"heading": "7 Results", "text": "ACE 2005 Despite FCM\u2019s (1) simple feature set, it is competitive with the log-linear baseline (3) on out-of-domain test sets (Table 3). In the typical gold entity spans and types setting, both Plank and Moschitti (2013) and Nguyen and Grishman (2014) found that they were unable to obtain improvements by adding embeddings to baseline feature sets. By contrast, we find that on all domains the combination baseline + FCM (5) obtains the highest F1 and significantly outperforms the other baselines, yielding the best reported results for this task. We found that fine-tuning of embeddings (2) did not yield improvements on our out-of-domain development set, in contrast to our results below for SemEval. We suspect this is because fine-tuning allows the model to overfit the training domain, which then hurts performance on the unseen ACE test domains. Accordingly, Table 3 shows only the log-linear model.\nFinally, we highlight an important contrast between FCM (1) and the log-linear model (3): the latter uses over 50 feature templates based on a POS tagger, dependency parser, chunker, and constituency parser. FCM uses only a dependency parse but still obtains better results (Avg. F1).\nSemEval 2010 Task 8 Table 4 shows FCM compared to the best reported results from the SemEval-2010 Task 8 shared task and several other compositional models.\nFor the FCM we considered two feature sets. We found that using NE tags instead of WordNet tags helps with fine-tuning but hurts without. This may be because the set of WordNet tags is larger making the model more expressive, but also introduces more parameters. When the embeddings are fixed, they can help to better distinguish different functions of embeddings. But when fine-tuning, it becomes easier to over-fit. Alleviating over-fitting is a subject for future work (\u00a7 9).\nWith either WordNet or NER features, FCM achieves better performance than the RNN and MVRNN. With NER features and fine-tuning, it outperforms a CNN (Zeng et al., 2014) and also\nthe combination of an embedding model and a traditional log-linear model (RNN/MVRNN + linear) (Socher et al., 2012). As with ACE, FCM uses less linguistic resources than many close competitors (Rink and Harabagiu, 2010).\nWe also compared to concurrent work on enhancing the compositional models with taskspecific information for relation classification, including Hashimoto et al. (2015) (RelEmb), which trained task-specific word embeddings, and dos Santos et al. (2015) (CR-CNN), which proposed a task-specific ranking-based loss function. Our Hybrid methods (FCM + linear) get comparable results to theirs. Note that their base compositional model results without any task-specific enhancements, i.e. RelEmb with word2vec embeddings and CR-CNN with log-loss, are still lower than the best FCM result. We believe that FCM can be also improved with these task-specific enhancements, e.g. replacing the word embeddings to the taskspecific ones from (Hashimoto et al., 2015) increases the result to 83.7% (see \u00a77.2 for details). We leave the application of ranking-based loss to future work.\nFinally, a concurrent work (Liu et al., 2015) proposes DepNN, which builds representations for the dependency path (and its attached subtrees) between two entities by applying recursive and convolutional neural networks successively. Compared to their model, our FCM achieves comparable results. Of note, our FCM and the RelEmb are also the most efficient models among all above compositional models since they have linear time complexity with respect to the dimension of embeddings."}, {"heading": "7.1 Effects of the embedding sub-models", "text": "We next investigate the effects of different types of features on FCM using ablation tests on ACE 2005 (Table 5.) We focus on FCM alone with the feature templates of Table 2. Additionally, we show results of using only the head embedding features from Nguyen and Grishman (2014) (HeadOnly). Not surprisingly, the HeadOnly model performs poorly (F1 score = 14.30%), showing the importance of our rich binary feature set. Among all the features templates, removing HeadEmb results in the largest degradation. The second most im-\nportant feature template is In-between, while Context features have little impact. Removing all entity type features (thi) does significantly worse than the full model, showing the value of our entity type features."}, {"heading": "7.2 Effects of the word embeddings", "text": "Good word embeddings are critical for both FCM and other compositional models. In this section, we show the results of FCM with embeddings used to initialize other recent state-of-the-art models. Those embeddings include the 300-d baseline embeddings trained on English Wikipedia (w2venwiki-d300) and the 100-d task-specific embeddings (task-specific-d100)10 from the RelEmb paper (Hashimoto et al., 2015), the 400-d embeddings from the CR-CNN paper (dos Santos et al., 2015). Moreover, we list the best result (DepNN) in Liu et al. (2015), which uses the same embeddings as ours. Table 6 shows the effects of word embeddings on FCM and provides relative comparisons between FCM and the other state-of-the-art models. We use the same hyperparameters and number of iterations in Table 4.\nThe results show that using different embeddings to initialize FCM can improve F1 beyond our previous results. We also find that increasing the dimension of the word embeddings does not necessarily lead to better results due to the problem of over-fitting (e.g.w2v-enwiki-d400 vs. w2v-enwiki-d300). With the same initial embeddings, FCM usually gets better results without any changes to the hyperparameters than the competing model, further confirming the advantage of FCM at the model-level as discussed under Table 4. The only exception is the DepNN model, which gets better result than FCM on the same embeddings. The task-specific embeddings from (Hashimoto et al., 2015) leads to the best performance (an improvement of 0.7%). This observa-\n10In the task-specific setting, FCM will represent entity words and context words with separate sets of embeddings.\ntion suggests that the other compositional models may also benefit from the work of Hashimoto et al. (2015)."}, {"heading": "8 Related Work", "text": "Compositional Models for Sentences In order to build a representation (embedding) for a sentence based on its component word embeddings and structural information, recent work on compositional models (stemming from the deep learning community) has designed model structures that mimic the structure of the input. For example, these models could take into account the order of the words (as in Convolutional Neural Networks (CNNs)) (Collobert et al., 2011) or build off of an input tree (as in Recursive Neural Networks (RNNs) or the Semantic Matching Energy Function) (Socher et al., 2013b; Bordes et al., 2012).\nWhile these models work well on sentence-level representations, the nature of their designs also limits them to fixed types of substructures from the annotated sentence, such as chains for CNNs and trees for RNNs. Such models cannot capture arbitrary combinations of linguistic annotations available for a given task, such as word order, dependency tree, and named entities used for relation extraction. Moreover, these approaches ignore the differences in functions between words appearing in different roles. This does not suit more general substructure labeling tasks in NLP, e.g. these models cannot be directly applied to relation extraction since they will output the same result for any pair of entities in a same sentence.\nCompositional Models with Annotation Features To tackle the problem of traditional compositional models, Socher et al. (2012) made the RNN model specific to relation extraction tasks by working on the minimal sub-tree which spans the two target entities. However, these specializations\nto relation extraction does not generalize easily to other tasks in NLP. There are two ways to achieve such specialization in a more general fashion:\n1. Enhancing Compositional Models with Features. A recent trend enhances compositional models with annotation features. Such an approach has been shown to significantly improve over pure compositional models. For example, Hermann et al. (2014) and Nguyen and Grishman (2014) gave different weights to words with different syntactic context types or to entity head words with different argument IDs. Zeng et al. (2014) use concatenations of embeddings as features in a CNN model, according to their positions relative to the target entity mentions. Belinkov et al. (2014) enrich embeddings with linguistic features before feeding them forward to a RNN model. Socher et al. (2013a) and Hermann and Blunsom (2013) enhanced RNN models by refining the transformation matrices with phrase types and CCG super tags.\n2. Engineering of Embedding Features. A different approach to combining traditional linguistic features and embeddings is hand-engineering features with word embeddings and adding them to log-linear models. Such approaches have achieved state-of-the-art results in many tasks including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013). Roth and Woodsend (2014) considered features similar to ours for semantic role labeling.\nHowever, in prior work both of above approaches are only able to utilize limited information, usually one property for each word. Yet there may be different useful properties of a word which can contribute to the performances of the task. By contrast, our FCM can easily utilize these features without changing the model structures.\nIn order to better utilize the dependency annotations, recently work built their models according to the dependency paths (Ma et al., 2015; Liu et al., 2015), which share similar motivations to the usage of On-path features in our work.\nTask-Specific Enhancements for Relation Classification An orthogonal direction of improving compositional models for relation classification is to enhance the models with task-specific information. For example, Hashimoto et al. (2015) trained\ntask-specific word embeddings, and dos Santos et al. (2015) proposed a ranking-based loss function for relation classification."}, {"heading": "9 Conclusion", "text": "We have presented FCM, a new compositional model for deriving sentence-level and substructure embeddings from word embeddings. Compared to existing compositional models, FCM can easily handle arbitrary types of input and handle global information for composition, while remaining easy to implement. We have demonstrated that FCM alone attains near state-of-the-art performances on several relation extraction tasks, and in combination with traditional feature based loglinear models it obtains state-of-the-art results.\nOur next steps in improving FCM focus on enhancements based on task-specific embeddings or loss functions as in Hashimoto et al. (2015; dos Santos et al. (2015). Moreover, as the model provides a general idea for representing both sentences and sub-structures in language, it has the potential to contribute useful components to various tasks, such as dependency parsing, SRL and paraphrasing. Also as kindly pointed out by one anonymous reviewer, our FCM can be applied to the TAC-KBP (Ji et al., 2010) tasks, by replacing the training objective to a multi-instance multilabel one (e.g. Surdeanu et al. (2012)). We plan to explore the above applications of FCM in the future."}, {"heading": "Acknowledgments", "text": "We thank the anonymous reviewers for their comments, and Nicholas Andrews, Francis Ferraro, and Benjamin Van Durme for their input. We thank Kazuma Hashimoto, C\u0131\u0301cero Nogueira dos Santos, Bing Xiang and Bowen Zhou for sharing their word embeddings and many helpful discussions. Mo Yu is supported by the China Scholarship Council and by NSFC 61173073."}], "references": [{"title": "A semantic matching", "author": ["Yoshua Bengio"], "venue": null, "citeRegEx": "Bengio.,? \\Q2012\\E", "shortCiteRegEx": "Bengio.", "year": 2012}, {"title": "Broad-coverage sense disambiguation and information extraction with a supersense sequence tagger", "author": ["Massimiliano Ciaramita", "Yasemin Altun."], "venue": "EMNLP2006, pages 594\u2013602, July.", "citeRegEx": "Ciaramita and Altun.,? 2006", "shortCiteRegEx": "Ciaramita and Altun.", "year": 2006}, {"title": "Natural language processing (almost) from scratch", "author": ["Ronan Collobert", "Jason Weston", "L\u00e9on Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa."], "venue": "JMLR, 12:2493\u20132537.", "citeRegEx": "Collobert et al\\.,? 2011", "shortCiteRegEx": "Collobert et al\\.", "year": 2011}, {"title": "Classifying relations by ranking with convolutional neural networks", "author": ["Cicero dos Santos", "Bing Xiang", "Bowen Zhou."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint", "citeRegEx": "Santos et al\\.,? 2015", "shortCiteRegEx": "Santos et al\\.", "year": 2015}, {"title": "Task-oriented learning of word embeddings for semantic relation classification", "author": ["Kazuma Hashimoto", "Pontus Stenetorp", "Makoto Miwa", "Yoshimasa Tsuruoka."], "venue": "arXiv preprint arXiv:1503.00095.", "citeRegEx": "Hashimoto et al\\.,? 2015", "shortCiteRegEx": "Hashimoto et al\\.", "year": 2015}, {"title": "Semeval-2010 task 8: Multi-way classification of semantic relations", "author": ["Iris Hendrickx", "Su Nam Kim", "Zornitsa Kozareva", "Preslav Nakov", "Diarmuid \u00d3 S\u00e9aghdha", "Sebastian Pad\u00f3", "Marco Pennacchiotti", "Lorenza Romano", "Stan Szpakowicz"], "venue": null, "citeRegEx": "Hendrickx et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Hendrickx et al\\.", "year": 2010}, {"title": "The role of syntax in vector space models of compositional semantics", "author": ["Karl Moritz Hermann", "Phil Blunsom."], "venue": "Association for Computational Linguistics, pages 894\u2013904.", "citeRegEx": "Hermann and Blunsom.,? 2013", "shortCiteRegEx": "Hermann and Blunsom.", "year": 2013}, {"title": "Semantic frame identification with distributed word representations", "author": ["Karl Moritz Hermann", "Dipanjan Das", "Jason Weston", "Kuzman Ganchev."], "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1:", "citeRegEx": "Hermann et al\\.,? 2014", "shortCiteRegEx": "Hermann et al\\.", "year": 2014}, {"title": "Overview of the tac 2010 knowledge base population track", "author": ["Heng Ji", "Ralph Grishman", "Hoa Trang Dang", "Kira Griffitt", "Joe Ellis."], "venue": "Third Text Analysis Conference (TAC 2010).", "citeRegEx": "Ji et al\\.,? 2010", "shortCiteRegEx": "Ji et al\\.", "year": 2010}, {"title": "Simple semi-supervised dependency parsing", "author": ["Terry Koo", "Xavier Carreras", "Michael Collins."], "venue": "Proceedings of ACL-08: HLT, pages 595\u2013603, Columbus, Ohio, June. Association for Computational Linguistics.", "citeRegEx": "Koo et al\\.,? 2008", "shortCiteRegEx": "Koo et al\\.", "year": 2008}, {"title": "Incremental joint extraction of entity mentions and relations", "author": ["Qi Li", "Heng Ji."], "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 402\u2013412, Baltimore, Maryland, June.", "citeRegEx": "Li and Ji.,? 2014", "shortCiteRegEx": "Li and Ji.", "year": 2014}, {"title": "A dependency-based neural network for relation classification", "author": ["Yang Liu", "Furu Wei", "Sujian Li", "Heng Ji", "Ming Zhou", "Houfeng WANG."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th In-", "citeRegEx": "Liu et al\\.,? 2015", "shortCiteRegEx": "Liu et al\\.", "year": 2015}, {"title": "Dependency-based convolutional neural networks for sentence embedding", "author": ["Mingbo Ma", "Liang Huang", "Bowen Zhou", "Bing Xiang."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International", "citeRegEx": "Ma et al\\.,? 2015", "shortCiteRegEx": "Ma et al\\.", "year": 2015}, {"title": "The Stanford CoreNLP natural language processing toolkit", "author": ["Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky."], "venue": "Proceedings of 52nd Annual Meeting of the Association for Computa-", "citeRegEx": "Manning et al\\.,? 2014", "shortCiteRegEx": "Manning et al\\.", "year": 2014}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg Corrado", "Jeffrey Dean."], "venue": "arXiv preprint arXiv:1310.4546.", "citeRegEx": "Mikolov et al\\.,? 2013", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Name tagging with word clusters and discriminative training", "author": ["Scott Miller", "Jethran Guinness", "Alex Zamanian."], "venue": "Susan Dumais, Daniel Marcu, and Salim Roukos, editors, HLT-NAACL 2004: Main Proceedings. Association for Compu-", "citeRegEx": "Miller et al\\.,? 2004", "shortCiteRegEx": "Miller et al\\.", "year": 2004}, {"title": "Ace 2004 multilingual training corpus", "author": ["Alexis Mitchell", "Stephanie Strassel", "Shudong Huang", "Ramez Zakhary."], "venue": "Linguistic Data Consortium, Philadelphia.", "citeRegEx": "Mitchell et al\\.,? 2005", "shortCiteRegEx": "Mitchell et al\\.", "year": 2005}, {"title": "Three new graphical models for statistical language modelling", "author": ["Andriy Mnih", "Geoffrey Hinton."], "venue": "Proceedings of the 24th international conference on Machine learning, pages 641\u2013648. ACM.", "citeRegEx": "Mnih and Hinton.,? 2007", "shortCiteRegEx": "Mnih and Hinton.", "year": 2007}, {"title": "Employing word representations and regularization for domain adaptation of relation extraction", "author": ["Thien Huu Nguyen", "Ralph Grishman."], "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short", "citeRegEx": "Nguyen and Grishman.,? 2014", "shortCiteRegEx": "Nguyen and Grishman.", "year": 2014}, {"title": "Relation extraction: Perspective from convolutional neural networks", "author": ["Thien Huu Nguyen", "Ralph Grishman."], "venue": "Proceedings of NAACL Workshop on Vector Space Modeling for NLP.", "citeRegEx": "Nguyen and Grishman.,? 2015", "shortCiteRegEx": "Nguyen and Grishman.", "year": 2015}, {"title": "English gigaword fifth edition, june", "author": ["Robert Parker", "David Graff", "Junbo Kong", "Ke Chen", "Kazuaki Maeda."], "venue": "Linguistic Data Consortium, LDC2011T07.", "citeRegEx": "Parker et al\\.,? 2011", "shortCiteRegEx": "Parker et al\\.", "year": 2011}, {"title": "Embedding semantic similarity in tree kernels for domain adaptation of relation extraction", "author": ["Barbara Plank", "Alessandro Moschitti."], "venue": "Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Pa-", "citeRegEx": "Plank and Moschitti.,? 2013", "shortCiteRegEx": "Plank and Moschitti.", "year": 2013}, {"title": "Utd: Classifying semantic relations by combining lexical and semantic resources", "author": ["Bryan Rink", "Sanda Harabagiu."], "venue": "Proceedings of the 5th International Workshop on Semantic Evaluation, pages 256\u2013259, Uppsala, Sweden, July. Association for", "citeRegEx": "Rink and Harabagiu.,? 2010", "shortCiteRegEx": "Rink and Harabagiu.", "year": 2010}, {"title": "Composition of word representations improves semantic role labelling", "author": ["Michael Roth", "Kristian Woodsend."], "venue": "EMNLP.", "citeRegEx": "Roth and Woodsend.,? 2014", "shortCiteRegEx": "Roth and Woodsend.", "year": 2014}, {"title": "Semantic compositionality through recursive matrix-vector spaces", "author": ["Richard Socher", "Brody Huval", "Christopher D. Manning", "Andrew Y. Ng."], "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and", "citeRegEx": "Socher et al\\.,? 2012", "shortCiteRegEx": "Socher et al\\.", "year": 2012}, {"title": "Parsing with compositional vector grammars", "author": ["Richard Socher", "John Bauer", "Christopher D Manning", "Andrew Y Ng."], "venue": "In Proceedings of the ACL conference. Citeseer.", "citeRegEx": "Socher et al\\.,? 2013a", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Richard Socher", "Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D. Manning", "Andrew Ng", "Christopher Potts."], "venue": "Empirical Methods in Natural Language", "citeRegEx": "Socher et al\\.,? 2013b", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Semi-supervised relation extraction with large-scale word clustering", "author": ["Ang Sun", "Ralph Grishman", "Satoshi Sekine."], "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages", "citeRegEx": "Sun et al\\.,? 2011", "shortCiteRegEx": "Sun et al\\.", "year": 2011}, {"title": "Multi-instance multi-label learning for relation extraction", "author": ["Mihai Surdeanu", "Julie Tibshirani", "Ramesh Nallapati", "Christopher D Manning."], "venue": "Proceedings of the 2012 Joint Conference on Empirical", "citeRegEx": "Surdeanu et al\\.,? 2012", "shortCiteRegEx": "Surdeanu et al\\.", "year": 2012}, {"title": "Word representations: a simple and general method for semi-supervised learning", "author": ["Joseph Turian", "Lev Ratinov", "Yoshua Bengio."], "venue": "Association for Computational Linguistics, pages 384\u2013394.", "citeRegEx": "Turian et al\\.,? 2010", "shortCiteRegEx": "Turian et al\\.", "year": 2010}, {"title": "ACE 2005 multilingual training corpus", "author": ["Christopher Walker", "Stephanie Strassel", "Julie Medero", "Kazuaki Maeda."], "venue": "Linguistic Data Consortium, Philadelphia.", "citeRegEx": "Walker et al\\.,? 2006", "shortCiteRegEx": "Walker et al\\.", "year": 2006}, {"title": "Learning composition models for phrase embeddings", "author": ["Mo Yu", "Mark Dredze."], "venue": "Transactions of the Association for Computational Linguistics, 3:227\u2013 242.", "citeRegEx": "Yu and Dredze.,? 2015", "shortCiteRegEx": "Yu and Dredze.", "year": 2015}, {"title": "Combining word embeddings and feature embeddings for fine-grained relation extraction", "author": ["Mo Yu", "Matthew R. Gormley", "Mark Dredze."], "venue": "Proceedings of NAACL.", "citeRegEx": "Yu et al\\.,? 2015", "shortCiteRegEx": "Yu et al\\.", "year": 2015}, {"title": "Relation classification via convolutional deep neural network", "author": ["Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao."], "venue": "Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers,", "citeRegEx": "Zeng et al\\.,? 2014", "shortCiteRegEx": "Zeng et al\\.", "year": 2014}, {"title": "Exploring various knowledge in relation extraction", "author": ["GuoDong Zhou", "Jian Su", "Jie Zhang", "Min Zhang."], "venue": "Association for Computational Linguistics, pages 427\u2013434.", "citeRegEx": "Zhou et al\\.,? 2005", "shortCiteRegEx": "Zhou et al\\.", "year": 2005}, {"title": "Linear+Emb\u201d is the implementation of our method", "author": ["Plank", "Moschitti"], "venue": "(Nguyen et al.,", "citeRegEx": "Plank and Moschitti,? \\Q2013\\E", "shortCiteRegEx": "Plank and Moschitti", "year": 2013}], "referenceMentions": [{"referenceID": 15, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 29, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 9, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 23, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 27, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 21, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 18, "context": "Embedding features have improved many tasks, including NER, chunking, dependency parsing, semantic role labeling, and relation extraction (Miller et al., 2004; Turian et al., 2010; Koo et al., 2008; Roth and Woodsend, 2014; Sun et al., 2011; Plank and Moschitti, 2013; Nguyen and Grishman, 2014).", "startOffset": 138, "endOffset": 295}, {"referenceID": 29, "context": "Various feature sets used in prior work (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014) are cap-", "startOffset": 40, "endOffset": 135}, {"referenceID": 18, "context": "Various feature sets used in prior work (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014) are cap-", "startOffset": 40, "endOffset": 135}, {"referenceID": 7, "context": "Various feature sets used in prior work (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014) are cap-", "startOffset": 40, "endOffset": 135}, {"referenceID": 23, "context": "Various feature sets used in prior work (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014) are cap-", "startOffset": 40, "endOffset": 135}, {"referenceID": 30, "context": "The result is a state-of-the-art relation extractor for unseen domains from ACE 2005 (Walker et al., 2006) and the relation classification dataset from SemEval-2010 Task 8 (Hendrickx et al.", "startOffset": 85, "endOffset": 106}, {"referenceID": 5, "context": ", 2006) and the relation classification dataset from SemEval-2010 Task 8 (Hendrickx et al., 2010).", "startOffset": 73, "endOffset": 97}, {"referenceID": 4, "context": "Note that other work has already been published that builds on the FCM, such as Hashimoto et al. (2015), Nguyen and Grishman (2015), dos Santos", "startOffset": 80, "endOffset": 104}, {"referenceID": 4, "context": "Note that other work has already been published that builds on the FCM, such as Hashimoto et al. (2015), Nguyen and Grishman (2015), dos Santos", "startOffset": 80, "endOffset": 132}, {"referenceID": 32, "context": "Additionally, we have extended FCM to incorporate a low-rank embedding of the features (Yu et al., 2015), which focuses on fine-grained relation extraction for ACE and ERE.", "startOffset": 87, "endOffset": 104}, {"referenceID": 31, "context": "(2015), Yu and Dredze (2015) and Yu et al.", "startOffset": 8, "endOffset": 29}, {"referenceID": 31, "context": "(2015), Yu and Dredze (2015) and Yu et al. (2015). Additionally, we have extended FCM to incorporate a low-rank embedding of the features (Yu et al.", "startOffset": 8, "endOffset": 50}, {"referenceID": 24, "context": "SemEval 2010 Task 8) has focused on short sentences with at most one relation per sentence (Socher et al., 2012; Zeng et al., 2014).", "startOffset": 91, "endOffset": 131}, {"referenceID": 33, "context": "SemEval 2010 Task 8) has focused on short sentences with at most one relation per sentence (Socher et al., 2012; Zeng et al., 2014).", "startOffset": 91, "endOffset": 131}, {"referenceID": 21, "context": "For relation extraction, where negative examples abound, prior work has assumed that only the named entity boundaries and not their types were available (Plank and Moschitti, 2013; Nguyen et al., 2015).", "startOffset": 153, "endOffset": 201}, {"referenceID": 18, "context": "sumed that the order of two entities in a relation are given while the relation type itself is unknown (Nguyen and Grishman, 2014; Nguyen and Grishman, 2015).", "startOffset": 103, "endOffset": 157}, {"referenceID": 19, "context": "sumed that the order of two entities in a relation are given while the relation type itself is unknown (Nguyen and Grishman, 2014; Nguyen and Grishman, 2015).", "startOffset": 103, "endOffset": 157}, {"referenceID": 30, "context": "The standard relation extraction task, as adopted by ACE 2005 (Walker et al., 2006), uses long sentences containing multiple named entities with known types4 and unknown relation directions.", "startOffset": 62, "endOffset": 83}, {"referenceID": 18, "context": "The closest work is that of Nguyen and Grishman (2014), who use a loglinear model for relation extraction with embeddings as features for only the entity heads.", "startOffset": 28, "endOffset": 55}, {"referenceID": 29, "context": "In fact, we find that the feature sets used in prior work for many other NLP tasks are special cases of this simple construction (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014).", "startOffset": 129, "endOffset": 224}, {"referenceID": 18, "context": "In fact, we find that the feature sets used in prior work for many other NLP tasks are special cases of this simple construction (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014).", "startOffset": 129, "endOffset": 224}, {"referenceID": 7, "context": "In fact, we find that the feature sets used in prior work for many other NLP tasks are special cases of this simple construction (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014).", "startOffset": 129, "endOffset": 224}, {"referenceID": 23, "context": "In fact, we find that the feature sets used in prior work for many other NLP tasks are special cases of this simple construction (Turian et al., 2010; Nguyen and Grishman, 2014; Hermann et al., 2014; Roth and Woodsend, 2014).", "startOffset": 129, "endOffset": 224}], "year": 2015, "abstractText": "Compositional embedding models build a representation (or embedding) for a linguistic structure based on its component word embeddings. We propose a Feature-rich Compositional Embedding Model (FCM) for relation extraction that is expressive, generalizes to new domains, and is easy-to-implement. The key idea is to combine both (unlexicalized) handcrafted features with learned word embeddings. The model is able to directly tackle the difficulties met by traditional compositional embeddings models, such as handling arbitrary types of sentence annotations and utilizing global information for composition. We test the proposed model on two relation extraction tasks, and demonstrate that our model outperforms both previous compositional models and traditional feature rich models on the ACE 2005 relation extraction task, and the SemEval 2010 relation classification task. The combination of our model and a loglinear classifier with hand-crafted features gives state-of-the-art results. We made our implementation available for general use1.", "creator": "TeX"}}}