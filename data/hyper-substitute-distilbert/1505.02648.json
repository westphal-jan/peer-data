{"id": "1505.02648", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-May-2015", "title": "Towards Formal Fault Tree Analysis using Theorem Proving", "abstract": "fault readiness analysis ( fta ) is a dependability research technique but has taken widely used to inform reliability, availability overall safety including many complex engineering systems. lately, comparable fta - based routines became done within paper - through - nail proof projects covering computer simulations, but basically ascertain absolute correctness due to actual performance limitations. while typical complementary approach, builders propose to expand the higher - order - inspection robust extension hol4 to conduct the robust - based analysis linking safety - critical systems where accuracy of failure analysis had a dire advantage. in result, the procedure uses questionable higher - order - failure, like generic fault processor gates, i. da., faa, certainly, nand, nor, xor, not truly ensures formal verification of strong failure scenario estimate. moreover, we have formally verified strength core binary inclusion - free bounds, which is one of my foremost requirements for solving the capacity - core failure analysis of any laptop computer. for usage such, we promote the fta - based fatigue inspection \u2013 a storage array that is used throughout the main source of power beneath the dong fang sd - 3 ( hp - 3 ) bypass.", "histories": [["v1", "Fri, 8 May 2015 05:14:08 GMT  (712kb,D)", "http://arxiv.org/abs/1505.02648v1", "16"]], "COMMENTS": "16", "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.SE", "authors": ["waqar ahmed", "osman hasan"], "accepted": false, "id": "1505.02648"}, "pdf": {"name": "1505.02648.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Osman Hasan"], "emails": ["waqar.ahmad@seecs.nust.edu.pk", "osman.hasan@seecs.nust.edu.pk"], "sections": [{"heading": null, "text": "Keywords: Higher-order Logic, Probabilistic Analysis, Theorem Proving, Satellite\u2019s Solar Arrays"}, {"heading": "1 Introduction", "text": "With the increasing usage of engineering systems in safety-critical domains, their dependability and failure analysis [1] has become a dire need to predict their reliability, availability and safety. One of the most widely used dependability and failure analysis techniques is the Fault Tree Analysis (FTA) method [2]. It is a graphical technique consisting of internal nodes, which are represented by gates like OR, AND and XOR, and the external nodes, that model the events which are associated with the occurrence of faults in sub-systems or components of the given system. The generic nature of these gates and events allows us to construct an efficient and accurate fault tree (FT) model for any given system. This FT can in turn be used to investigate the potential causes of a fault occurrence\n? The final publication is available at http://link.springer.com\nar X\niv :1\n50 5.\n02 64\n8v 1\n[ cs\n.L O\n] 8\nM ay\n2 01\n5\nin a system and the calculation of minimal number of events that contribute towards the occurrence of a top event, i.e., a critical event, which can cause the whole system failure upon its occurrence. Some noteworthy applications of FTA include the failure analysis of transportation systems [3], healthcare systems [4] and aerospace systems [5].\nTraditionally, FTA is carried out by using paper-and-pencil proof methods, computer simulations and computer algebra systems. The first step in the paperand-pencil proof methods is the construction of the FT of the given system on a paper. This is followed by the identification of the Minimal Cut Set (MCS) failure events, which contribute in the occurrence of the top event. These MCS failure events are generally modeled in terms of the exponential or weibull random variables and the Probabilistic Inclusion-Exclusion (PIE) principle [6] is then used to evaluate the exact probability of failure of the given system. However, this method is prone to human errors when it comes to the MCS and failure probability assessment of large safety-critical systems. For instance, in nuclear plants, where a fault tree model involves 50 to 130 levels of logic gates between the top event and the lowest basic events that are contributing to the top event [7]. So, there is a possibility, that many of these basic failure events may be overlooked while calculating MCS and thus not further incorporated in the FTA, which may lead to erroneous designs.\nThe FTA-based computer simulators, such as Relia-Soft [8] and ASENT Reliability analysis tools [9], provide graphical editors for the construction of FTs and the analysis is carried out by generating samples from the exponential and Weibull random variables that are associated with the events of the FT. These samples are then processed to evaluate the reliability and the failure probability of the complete system using computer arithmetic and numerical techniques. Although, these tools provide a more scalable alternative to the paper-and-pencil proof methods but the computational requirement increases drastically as the size of the FT increases. For example, if there are q terms involves in the MCS of a given FT then the total number of terms in the corresponding PIE principle will be 2q \u2212 1. In addition, these tools cannot ascertain absolute correctness or error-free analysis because of the involvement of pseudo random numbers and numerical methods and the inherent sampling-based nature of simulation.\nSimilarly, computer algebra systems (CAS), such as Mathematica [10], provide extensive features for FT-based failure analysis. For instance, the MCS expressions for any given system can be validated with failure distributions, such as Exponential or Weibull, by using symbolic and numerical algorithms. However, due to the presence of these unverified simplification algorithms, the analysis provided by CAS cannot be termed as sound and accurate.\nFormal methods can overcome the above-mentioned inaccuracy limitations of the traditional techniques and thus have been used for FTA. The Interval Temporal Logic (ITS), i.e., a temporal logic that supports first-order logic, has been used, along with the Karlsruhe Interactive Verifier (KIV), for formal FTA of a rail-road crossing [11]. The work presented in [12] describes a deductive method for FT construction, in contrast to the intuitive approach followed in\n[11], by using the Observational Transition Systems (OTS) [12] and then the formal analysis of this FT is carried out using CafeOBJ [13], which is a formal specification language with interactive verification support. One of the main limitations of all the above-mentioned formal methods based works is the inability to conduct a probability theoretic FTA. The COMPASS tool-set [14], which is developed at RWTH Achen University in collaboration with the European Space Agency (ESA), caters for this problem and supports the formal FTA specifically for aerospace systems using the NuSMV and MRMC model checkers. However, the scope of these tools is somewhat limited in terms of handling failure analysis of large FTs, due to the inherent state-space explosion problem of model checking, and the fact that the computation of probabilities in these methods involve numerical methods, which compromises the accuracy of the results.\nAn accurate MCS calculation and exact failure probability assessment in the FTA is very important specially while dealing with safety-critical systems used in domains like transportation, aerospace or medicine. In order to achieve an accurate and precise FTA, we propose to conduct the formal FTA within the sound core of a higher-order-logic theorem prover [15]. Higher-order logic provides a precise deductive mechanism that can be used to model any mathematically expressive behavior including recursive definitions, random variables, fault tree events, which are the foremost building blocks for modeling FTs. Once the FTs are modeled in higher-order logic, we can deduce an accurate MCS by using formal reasoning based on the set-theoretic foundations. Moreover, FT properties, such as the probability of failure, can be formally verified using interactive theorem provers based on the PIE principles.\nThe foremost requirement for reasoning about reliability and failure related properties of a system in a theorem prover is the availability of the higher-orderlogic formalization of probability theory. Hurd\u2019s formalization of measure and probability theories [16] is a pioneering work in this regard. Building upon this formalization most of the commonly-used continuous random variables [17] and some reliability theory fundamentals [18] have been formalized using the HOL theorem prover. However, Hurd\u2019s formalization of probability theory [16] only supports the whole universe as the probability space. This feature limits its scope in many aspects [19] and one of the main limitations, related to FTA-based analysis, is the nonability to reason about multiple continuous random variables [17]. Some recent probability theory formalizations [19,20] allow using any arbitrary probability space that is a subset of the universe and thus are more flexible than Hurd\u2019s formalization of probability theory. Particularly, Mhamdi\u2019s probability theory formalization [19], which is based on extended-real numbers (real numbers including \u00b1\u221e), has been recently used to reason about the Reliability Block Diagram (RBD)-based analysis of a series pipelines structure [21], which involves multiple exponential random variables. The current paper is mainly inspired from this development as we use Mhamdi\u2019s formalized probability theory [19] for the formalization of all the commonly used FTA gates and the formal verification of their probabilistic properties. Moreover, we have also formally\nverified the PIE principle, which provides the foremost foundation for formal reasoning about the accurate failure analysis of any FT.\nIn order to illustrate the effectiveness of the proposed FTA approach, the paper presents a formal failure analysis, by taking a FT model, of a solar array that has been used in the DFH-3 Satellite, which was launched by the People\u2019s Republic of China on May 12, 1997 [5]. Solar arrays are one of the most vital components of the satellites because the mission success heavily depends upon the continuous reliable source of power [22]. Over the last ten years, 12 out of the 117 satellite\u2019s solar array anomalies, documented by the Airclaims Ascend SpaceTrak database, led to the total satellite failure [23,22]. Thus the absolute accuracy of the failure analysis of a solar array is a dire need in satellite missions and, to the best of our knowledge, it is the novelty of the proposed technique to meet this requirement. The satellite\u2019s solar array is a mechanical system, which mainly consists of various mechanisms, including: deployable, synchronization, locking and orientation. The FT of the solar array contains the failure events of these mechanisms and their interrelationships regarding the overall system failure. The paper presents the higher-order-logic modeling of this FT and the formal verification of the probability of failure of satellite\u2019s solar array system based on the probability of occurrence of the above-mentioned mechanism faults."}, {"heading": "2 Probability Theory in HOL", "text": "In this section, we provide a brief overview of the HOL4 formalization of the probability theory [19], which we build upon in this paper. Based on the measure theoretic foundations, a probability space is defined as a triple (\u2126,\u03a3, Pr), where \u2126 is a set, called the sample space, \u03a3 represents a \u03c3-algebra of subsets of \u2126, where the subsets are usually referred to as measurable sets, and Pr is a measure with domain \u03a3 and is 1 for the whole sample space. In the HOL4 probability theory formalization [19], given a probability space p, the functions space and subsets return the corresponding \u2126 and \u03a3, respectively. Based on this definition, all the basic probability axioms have been verified. Now, a random variable is a measurable function between a probability space and a measurable space, which essentially is a pair (S,A), where S denotes a set and A represents a nonempty collection of sub-sets of S. A random variable is termed as discrete if S is a set with finite elements and continuous otherwise.\nThe cumulative distribution function (CDF) is defined as the probability of the event where a random variable X has a value less than or equal to some value x, i.e., Pr(X \u2264 x). This definition characterizes the distribution of both discrete and continuous random variables and has been formalized [21] as follows:\n` \u2200 p X x. CDF p X x = distribution p X {y | y \u2264 Normal x}\nThe function Normal takes a real number as its input and converts it to its corresponding value in the extended-real data-type, i.e, it is the real data-type with the inclusion of positive and negative infinity. The function distribution\ntakes three parameters: a probability space p, a random variable X and a set of extended-real numbers and returns the probability of the given random variable X acquiring all the values of the given set in probability space p.\nThe unreliability or the probability of failure F (t) is defined as the probability that a system or component will fail by the time t. It can be described in terms of CDF, known as the failure distribution function, if the random variable X represent a time-to-failure of the component. This time-to-failure random variable X usually exhibits the exponential or weibull distribution.\nThe notion of mutual independence of n random variables is a major requirement for reasoning about the failure analysis of most of the FT gates. According to this notion, if we have N mutually independent failure events then\nPr( N\u22c2 i=1 Li) = N\u220f i=1 Pr(Li) (1)\nThis concept has been formalized as follows [21]:\n` \u2200 p L. mutual indep p L = \u2200 L1 n. PERM L L1 \u2227 1 \u2264 n \u2227 n \u2264 LENGTH L \u21d2 prob p (inter list p (TAKE n L1)) =\nlist prod (list prob p (TAKE n L1))\nThe function mutual indep accepts a list of events L and probability space p and returns True if the events in the given list are mutually independent in the probability space p. The predicate PERM ensures that its two list arguments form a permutation of one another. The function LENGTH returns the length of the given list. The function TAKE returns the first n elements of its argument list as a list. The function inter list performs the intersection of all the sets in its argument list of sets and returns the probability space if the given list of sets is empty. The function list prob takes a list of events and returns a list of probabilities associated with the events in the given list of events in the given probability space. Finally, the function list prod recursively multiplies all the elements in the given list of real numbers. Using these functions, the function mutual indep models the mutual independence condition such that for any 1 or more events n taken from any permutation of the given list L, the property Pr( \u22c2N i=1 Li) = \u220fN i=1 Pr(Li) holds."}, {"heading": "3 Formalization of Fault Tree Gates", "text": "In this section, we describe a generic formalization of commonly used FT gates given in Table 1. Our formalizations are generic in terms of the number of inputs n, i.e., our definitions can be used to model arbitrary-input FT gates."}, {"heading": "3.1 Formal Definitions of Fault Tree Gates", "text": "If the occurrence of the output failure event is caused by the occurrence of all the input failure events then this kind of behavior can be modeled by using the AND\nFT gate. The function AND FT gate, given in Table 1, models this behavior as it accepts an arbitrary probability space p and returns the intersection of input failure events, given in the list L, by using the recursive function inter list.\nIn the OR FT gate, the occurrence of the output failure event depends upon the occurrence of any one of its input failure event. The function OR FT gate, given in Table 1, models this behavior as it returns the union of the input failure list L by using the recursive function union list. The NOR FT gate can be viewed as the complement of the OR FT gate and its output failure event occurs if none of the input failure event occurs.\nThe NAND FT gate models the behavior of the occurrence of an output failure event when at least one of the failure events at its input does not occur. This type of gate is used in FTs when the non-occurrence of the failure event in conjunction with the other failure events causes the top failure event to occur. This behavior can be expressed as the intersection of complementary and normal events [1], where the complementary events model the non-occurring failure events and the normal events model occurring failure events. It is important to note that the behavior of the NAND FT gate is usually not captured by the complement of the AND FT gate in the FTA literature [1]. The function NAND FT gate accepts a probability space p and two list of failure events L1 and L2. The function returns the intersection of non-occurring failure events, which in turn is modeled by passing the list of failure events L1 to the recursive function compl list, and occurring failure events, which are given in the list L2, by utilizing the recursive function inter list. The function compl list returns a list of events such that each element of this list is the difference between the probability space p and the corresponding element of the given list.\nThe output failure event occurs in the 2-input XOR FT gate if only one, and not both, of its input failure events occur. The HOL representation of the behaviour of the XOR FT gate is presented in Table 1. The function NOT FT gate\naccepts an arbitrary failure event A along with probability space p and returns the complement to the probability space p of the given input failure event A."}, {"heading": "3.2 Formal Verification of Failure Probability of Fault Tree Gates", "text": "The function AND FT gate, given in Table 1, can be used to evaluate the failure probability of the output failure event of the AND FT gate. If Ai represents the ith failure event with failure probability Fi at time t among the n mutually independent failure events of the AND FT gate then the generic mathematical expression for the failure probability of a n-input AND FT gate is as follows:\nFAND gate(t) = Pr( N\u22c2 i=2 Ai(t)) = N\u220f i=2 Fi(t) (2)\nWe formally verified this expression as the following theorem in HOL4:\nTheorem 1: ` \u2200 p L. prob space p \u2227 2 \u2264 LENGTH L \u2227 mutual indep p L \u21d2\n(prob p (AND gate p L) = list prod (list prob p L))\nThe first assumption ensure that p is a valid probability space based on the probability theory in HOL4 [19]. The next two assumptions guarantee that the list of failure events must have at least two failure event and the failure events are mutually independent, respectively. The conclusion of the theorem represents Equation (2). The proof of Theorem 1 is primarily based on some probability theory axioms and the mutual independence definition.\nSimilarly, if Ai represents the i th with failure event failure probability Fi at time t among the n mutually independent failure events of an OR FT gate then its failure probability expression is as follows:\nFOR gate(t) = Pr( N\u22c3 i=2 Ai(t)) = 1\u2212 N\u220f i=2 (1\u2212 Fi(t)) (3)\nIn order to formally verify the above equation, we first formally verify the following lemma that provides an alternate expression for the failure probability of an OR FT gate in terms of the failure probability of an AND FT gate:\nLemma 1: ` \u2200 L p. (prob space p) \u2227 (\u2200 x\u2019. MEM x\u2019 L \u21d2 x\u2019 \u2208 events p) \u21d2 (prob p (OR gate L) =\n1 - prob p (AND gate p (compl list p L))\nNow, we can formally verify Equation (3) in HOL4 as follows:\nTheorem 2: ` \u2200 p L. (prob space p) \u2227 (2 \u2264 LENGTH L) \u2227 (mutual indep p L) \u2227 (\u2200 x\u2019. MEM x\u2019 L \u21d2 x\u2019 \u2208 events p) \u21d2 (prob p (OR gate L) =\n1 - list prod (one minus list (list prob p L)))\nWhere the function one minus list accepts a list of real numbers [x1, x2, \u00b7 \u00b7 \u00b7 , xn] and returns the list of real numbers such that each element of this list is 1 minus the corresponding element of the given list, i.e., [1\u2212 x1, 1\u2212 x2, \u00b7 \u00b7 \u00b7 , 1\u2212 xn]. The proof of Theorem 2 is primarily based on Lemma 1 and Theorem 1 along with the fact that given the list of n mutually independent events, the complement of these n events are also mutually independent.\nSimilarly, we also verified the failure probability theorems for other FT gates, given in Table 1, and the corresponding mathematical expressions and theorems are given in Table 2. All these results are verified under the same assumptions as the ones used in Theorems 1 and 2.\nThe proof script [24] of the above-mentioned formalization is composed of 4000 lines of HOL script and took about 200 man-hours. The main outcome of this exercise is that the definitions, given in Table 1, can be used to capture the behavior of most of the FTs in higher-order logic and the Theorems of Table 2 can then be used in conjunction with the formalization of the PIE principle, explained next, to formally verify the corresponding failure probabilities."}, {"heading": "4 Formalization of Probabilistic Inclusion-Exclusion Principle", "text": "The probabilistic inclusion-exclusion principle (PIE) forms an integral part of the reasoning involved in verifying the failure probability of a FT. In FTA, firstly all the basic fault events are identified that can cause the occurrence of the system failure event. These fault events are then combined to model\nthe overall fault behavior of the given system by using the fault gates. These combinations of basic failure events, called cut sets, are then reduced to minimal cut sets (MCS) by using some set-theory rules, such as idempotent, associative and commutative [25]. At this point, the PIE principle is used to evaluate the overall failure probability of the given system based on the MCS events.\nIf Ai represent the i th basic failure event or a combination of failure event then the failure probability of the given system can be expressed in terms of the probabilistic inclusion-exclusion principle as follows:\nP( n\u22c3\ni=1\nAi) = \u2211\nt 6={},t\u2286{1,2,...,n} (\u22121)|t|+1P( \u22c2 j\u2208t Aj) (4)\nThe above equation can be formalized in HOL4 is as follows:\nTheorem 3: ` \u2200 p L1 L2. prob space p \u2227 (\u2200 x. MEM x L \u21d2 x \u2208 events p) \u21d2\n(prob p (union list L) = sum set {t | t \u2286 set L \u2227 t 6= {} } (\u03bbt. -1 pow (CARD t + 1) * prob p (BIGINTER t)))\nThe assumptions of the above theorem are the same as the ones used in Theorem 1. The function sum set takes an arbitrary set s with element of type \u03b1 and a real-valued function f . It recursively sums the return value of the function f , which is applied on each element of the given set s. In the above theorem, the set s is represented by the term {x|C(x)} that contains all the values of x, which satisfy condition C. Whereas, the \u03bb abstraction function (\u03bbt. -1 pow (CARD t + 1) * prob p (BIGINTER t)) models (\u22121)|t|+1P( \u22c2 j\u2208tAj), such that the functions CARD and BIGINTER return the number of elements and the intersection of all the elements of the given set, respectively. Thus, the conclusion of the theorem represents Equation (4).\nThe formal reasoning about Theorem 3 is based upon the following lemma:\nLemma 2: ` \u2200 P. (\u2200 n. (\u2200 m. m < n \u21d2 P m) \u21d2 P n) \u21d2 \u2200 n. P n\nWhere n in our case is the length of the list L and m represent another list whose length is less then the length of the list L. The predicate P represents the conclusion of Theorem 3. The above property brings an important hypothesis in the assumption list, which has the same form as that of the conclusion of Theorem 3. Then, by utilizing induction and some properties of the function sum set along with some fundamental axioms of probability, we can verify Theorem 3.\nThe proof script [24] for Theorem 3 is composed of 1000 lines of HOL code and involved 50 man-hours of proof effort. To the best of our knowledge, this is the first formal verification of the probabilistic inclusion exclusion principle, which, besides being used in FTA, is a widely used mathematical result in analyzing various bio-informatics [26] and telecommunication [27] systems."}, {"heading": "5 Application: Satellite\u2019s Solar Array", "text": "The solar arrays used in satellite missions are usually in a folded position during the launch phase [5]. Once the satellite is deployed in the corresponding orbit then the solar arrays are unfolded and the goal is to keep them oriented towards the sun all the time to maximize the power generation for the satellite [5]. The faults in the solar array are mainly caused by the mechanical components that drive these mechanisms associated with the driving, deployment, synchronization, locking and orientation. For example, the solar array is usually driven by using a torsion spring [5]. Whereas, the closed cable loop (CCL) and the stepping or servo motors are used during the synchronization and orientation phases [5]. A FT can thus be constructed by considering the faults in these mechanical components, which are the fundamental causes of satellite\u2019 solar array mechanisms failure The FT for the solar array of the DFH-3 Satellite that was launched by the People\u2019s Republic of China on May 12, 1997 [28] is depicted in Figure 1 and we formally analyze this FT in this paper.\nThe failure events, A, B, C, D in Figure 1, represent the failures in the unlock mechanism, deployment process, locking process and orientation process, respectively. Whereas, the failure event E represents the failures in the corresponding mechanical parts of the system. These failure events are combined either by using the OR or AND FT gates by considering the behavior of the faults.\nIn order to formalize the solar array FT of Figure 1, we first present the formal modeling of list of failure events that are associated with each corresponding fault of the solar array FT.\nDefinition 1: ` \u2200 p x. fail event list p [] x = [] \u2227 \u2200 p x h t. fail event list p (h::t) x =\nPREIMAGE h {y | y \u2264 Normal x } \u2229 p space p :: fail event list p t x\nThe function fail event list accepts a probability space p, a list of random variables, representing the failure time of individual components, and a real number x, which represents the time index at which the failure of the component occurs. It returns a list of events, representing the failure of all the individual components at time x. The formal definitions of FT gates, given in Section 3, along with Definition 1 can be utilized to formally represent the FT of satellite\u2019s solar array in terms of its cut-set failure events. The HOL4 formalization of satellite\u2019s solar array FT is as follows:\nDefinition 2: ` \u2200 p x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t. Solar FT p x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t = OR FT gate [OR FT gate (fail event list p [x1; x2] t);\nOR FT gate [OR FT gate (fail event list p [x3; x4] t);\nAND FT gate p (fail event list p [x5; x6] t); OR FT gate\n(fail event list p [x3; x7; x8] t)];\nOR FT gate (fail event list p [x3; x9] t); OR FT gate (fail event list p [x10; x11] t);\nOR FT gate [PREIMAGE x12 {y | y \u2264 Normal t }; PREIMAGE x13 {y | y \u2264 Normal t }; OR FT gate (fail event list p[x3; x14]t)]]\nWhere the random variables x1 \u2212 x14 model the time-to-failure of the solar array processes and components as depicted in Figure 1. However, the cut-set\nfailure events in the above definition is not minimal [5], i.e., there are some redundant failure events. For example, x3 is part of more than one OR FT gates. These kind of redundant failure events can be removed by verifying an accurate equivalent but reduced representation, i.e., the MCS, by using set theory laws, like idempotent, commutative and associative, as follows:\nLemma 2: ` \u2200 p x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t. prob space p \u21d2 (Solar FT p x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t = OR FT gate [OR FT gate (fail event list p [x1; x2; x3; x4] t);\nAND FT gate p (fail event list p [x5; x6] t); OR FT gate\n(fail event list p [x7; x8; x9; x10; x11; x12; x13; x14]t)])\nWe consider that random variables, associated with the failure events of the solar array FT, exhibit the exponential distribution, which can be formalized in HOL4 as follows:\nDefinition 3: ` \u2200 p X l. exp dist p X l = \u2200 x. (CDF p X x = if 0 \u2264 x then 1 - exp (-l * x) else 0)\nThe function exp dist guarantees that the CDF of the random variable X is that of an exponential random variable with a failure rate l in a probability space p. We classify a list of exponentially distributed random variables based on this definition as follows:\nDefinition 4: ` \u2200 p L. list exp p [] L = T \u2227 \u2200 p h t L. list exp p (h::t) L =\nexp dist p (HD L) h \u2227 list exp p t (TL L)\nThe function list exp accepts a list of failure rates, a list of random variables L and a probability space p. It guarantees that all elements of the list L are exponentially distributed with the corresponding failure rates, given in the other list, within the probability space p. For this purpose, it utilizes the list functions HD and TL, which return the head and tail of a list, respectively. Now, the failure probability of satellite\u2019s solar array can be verified as the following theorem:\nTheorem 4: ` \u2200 p x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14. (0 \u2264 t) \u2227 (prob space p) \u2227 (\u2200 x\u2019. MEM x\u2019 (fail event list p ([x1; x2; x3; x4; x5;\nx6; x6; x7; x8; x9; x10; x11; x12; x13; x14]) t)) \u21d2 x\u2019 \u2208 events p) \u2227 (mutual indep p ((fail event list p\n([x1; x2; x3; x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14]) x))) \u2227 list exp p\n([c1; c2; c3; c4; c5; c6; c7; c8; c9; c10; c11; c12; c13; c14])\n([x1; x2; x3; x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14]) \u21d2 (prob p (Solar FT p\nx1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 t ) =\n(1 - (exp -(t*(list sum [c1;c2;c3;c4])))) +\nlist prod(one minus exp t [c5;c6;c7]) + (1 - (exp -(t*(list sum\n[c7; c8; c9; c10; c11; c12; c13; c14])))) -\n(1 - list prod(one minus exp prod t\n[[c1;c5;c6];[c2;c5;c6];[c3;c5;c6];[c4;c5;c6]])) -\n(1 - (exp -(t*(list sum [c1;c2;c3;c4])))) *\n(1 - (exp -(t*(list sum\n[c7; c8; c9; c10; c11; c12; c13; c14])))) -\n(1 - list prod(one minus exp prod t\n[[c5;c6;c7];[c5;c6;c8];[c5;c6;c9];[c5;c6;c10];\n[c5;c6;c11];[c5;c6;c12];[c5;c6;c13];[c5;c6;c14]])) +\n(1 - list prod(one minus exp prod t\n[[c1;c5;c6];[c2;c5;c6];[c3;c5;c6];[c4;c5;c6]])) *\n(1 - (exp -(t*\n(list sum [c7; c8; c9; c10; c11; c12; c13; c14])))))\nThe first assumption ensures the variable t that models time can acquire positive values only. The second assumption ensure that p is a valid probability space based on the probability theory in HOL4 [29]. The next two assumptions ensure that the events corresponding to the failures modeled by the random variables x1 to x14 are valid events from the probability space p and they are mutually exclusive. Finally, the last assumption characterizes the random variables x1 to x14 as exponential random variables with failure rates c1 to c14, respectively. The conclusion of the Theorem 4 represents the failure probability of the given solar array in terms of the failure rates of its components as follows:\n(1\u2212 e\u2212(c1+c2+c3+c4)t) + 6\u220f\ni=5\n(1\u2212 e\u2212(cit))+\n(1\u2212 e\u2212(c7+c8+c9+c10+c11+c12+c13+c14)t)\u2212 (1\u2212 4\u220f\ni=1\n(1\u2212 6\u220f\nj=5\n[(1\u2212 e\u2212cit)(1\u2212 e\u2212cjt)]))\u2212\n(1\u2212 e\u2212(c1+c2+c3+c4)t) \u2217 (1\u2212 e\u2212(c7+c8+c9+c10+c11+c12+c13+c14)t)\u2212 (1\u2212 14\u220f i=7 (1\u2212 6\u220f j=5 [(1\u2212 e\u2212cit)(1\u2212 e\u2212cjt)]))+ (1\u2212 4\u220f\ni=1\n(1\u2212 6\u220f\nj=5\n[(1\u2212 e\u2212cit)(1\u2212 e\u2212cjt)])) \u2217 (1\u2212 e\u2212(c7+c8+c9+c10+c11+c12+c13+c14)t)\n(5)\nwhere the function exp represents a exponential function, the function list sum is used to sum all the element of the given list of failure rates, the function one minus exp accepts a list of failure rates and returns a one minus list of exponentials and the function one minus exp prod accepts a two dimensional list of failure rates and returns a list with one minus product of one minus exponentials of every sub-list. For example, one minus exp prod[[c1; c2; c3]; [c4; c5]; [c6; c7; c8]] x = [1 \u2212 ((1 \u2212 e\u2212(c1)x) \u2217 (1 \u2212 e\u2212(c2)x) \u2217 (1 \u2212 e\u2212(c3)x)); (1 \u2212 (1 \u2212 e\u2212(c4)x) \u2217 (1 \u2212 e\u2212(c5)x)); (1\u2212 (1\u2212 e\u2212(c6)x) \u2217 (1\u2212 e\u2212(c7)x) \u2217 (1\u2212 e\u2212(c8)x))].\nThe proof of the above theorem utilizes the failure probabilities of AND and OR FT gates, given in Table 2, along with Lemma 2 and Theorem 3 and some fundamental facts and axioms of probability theory. Due to the universally quantified variables in Theorem 3, the proof of Theorem 4 is quite straightforward (about 800 lines of HOL code) as compared to that of Theorem 3. The distinguishing features of the formally verified Theorem 4 includes its generic nature, i.e., all the variables are universally quantified and thus can be specialized to obtain the failure probability for any given failure rates, and its guaranteed correctness due to the involvement of a sound theorem prover in its verification, which ensures that all the required assumptions for the validity of the result are accompanying the theorem.\nA fuzzy reasoning Petri Net (FRPN), which is a combination of fuzzy logic [30] and Petri Nets [31], based failure analysis for the above-mentioned solar array is presented in [5]. In this work, the FT of Figure 1 is first represented as a Petri Net such that the gates are represented by transitions and the failure events are modeled as places. The possibility of fault occurrence is then evaluated by using fuzzy degree of truth on the basis of petri nets transitions. However, the truth degree values evaluated using these FRPN models cannot be regarded as precise and sound as the formally verified expression using the HOL theorem prover due to the involvement of numerical techniques and pseudo randomness. On the other hand, our analysis result, i.e., Theorem 4, is based on a probability theoretic formal reasoning, verified in a sound theorem prover and is valid for all possible values of the failure rates. These features constitute the main motivations of the work presented in this paper."}, {"heading": "6 Conclusion", "text": "The accuracy of failure analysis is a dire need for safety and mission-critical applications, where an incorrect failure analysis may lead to disastrous situations including the loss of human lives or heavy financial setbacks. In this paper, we presented an accurate FTA approach, based on higher-order-logic theorem proving, to tackle the analysis of such critical systems. In particular the paper presents a formalization of commonly used FT gates and the PIE principle, which are the foremost foundations for formal reasoning about FTA within a sound core of theorem prover. As a case-study, the paper also presents the formal failure analysis of a satellite\u2019s solar array.\nBuilding upon the results, presented in this paper, other FT gates, such as priority AND and voting OR gate, can also be formally modeled and thus the scope of FTA-based formal reliability analysis [32] can be further enhanced. Some interesting real-world applications that can benefit from our work include transportation systems [3], healthcare systems [4] and avionics [33]. Moreover, we also plan to further facilitate the formal FT-based failure analysis by incorporating the automatic simplification capabilities of CAS, such as Mathmatica, for MCS calculation. This obtained MCS can then be validated within the sound environment of the HOL theorem prover."}], "references": [{"title": "Fault Tree Handbook", "author": ["N.H. Roberts", "W.E. Vesely"], "venue": "Government Printing", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1987}, {"title": "Fuzzy Fault Tree Analysis of Railway Traffic Safety", "author": ["H.Z. Huang", "X. Yuan", "X.S. Yao"], "venue": "Conference on Traffic and Transportation Studies, American Society of Civil Engineers", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2000}, {"title": "Fault Tree Analysis of Clinical Alarms", "author": ["W.A. Hyman", "E. Johnson"], "venue": "Journal of Clinical Engineering 33(2)", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Reliability Analysis Method of a Solar Array by using Fault Tree Analysis and Fuzzy Reasoning Petri Net", "author": ["J. Wu", "S. Yan", "L. Xie"], "venue": "Acta Astronautica 69(11)", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Probability and Statistics with Reliability, Queuing and Computer Science Applications", "author": ["K.S. Trivedi"], "venue": "2nd edn. John Wiley and Sons Ltd.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2002}, {"title": "Can we trust PRA? Reliability Engineering & System Safety", "author": ["S. Epstein", "A. Rauzy"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2005}, {"title": "Quantification of Sequential Failure Logic for Fault Tree Analysis", "author": ["W. Long", "Y. Sato", "M. Horigome"], "venue": "Reliability Engineering & System Safety 67(3)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2000}, {"title": "Formal Fault Tree Analysis-Practical Experiences", "author": ["F. Ortmeier", "G. Schellhorn"], "venue": "Volume 185., Elsevier", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "Fault Tree and Formal Methods in System Safety Analysis", "author": ["J. Xiang", "K. Futatsugi", "Y. He"], "venue": "Computer and Information Technology, IEEE", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2004}, {"title": "CAFE: An Industrial-Strength Algebraic Formal Method", "author": ["K. Futatsugi", "A.T. Nakagawa", "T. Tamai"], "venue": "Elsevier", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2000}, {"title": "The COMPASS Approach: Correctness, Modelling and Performability of Aerospace Systems", "author": ["M. Bozzano", "A. Cimatti", "J.P. Katoen", "V.Y. Nguyen", "T. Noll", "M. Roveri"], "venue": "Computer Safety, Reliability, and Security. Volume 5775 of LNCS. Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2009}, {"title": "Handbook of Practical Logic and Automated Reasoning", "author": ["J. Harrison"], "venue": "Cambridge University Press", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Formal Verification of Probabilistic Algorithms", "author": ["J. Hurd"], "venue": "PhD Thesis, University of Cambridge, UK", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2002}, {"title": "Formalization of the Continuous Probability Distributions", "author": ["O. Hasan", "S. Tahar"], "venue": "Automated Deduction. Volume 4603 of LNAI. Springer", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2007}, {"title": "An Approach for Lifetime Reliability Analysis using Theorem Proving", "author": ["N. Abbasi", "O. Hasan", "S. Tahar"], "venue": "Journal of Computer and System Sciences 80(2)", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "On the Formalization of the Lebesgue Integration Theory in HOL", "author": ["T. Mhamdi", "O. Hasan", "S. Tahar"], "venue": "Interactive Theorem Proving. Volume 6172 of LNCS. Springer", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "Three Chapters of Measure Theory in Isabelle/HOL", "author": ["J. Holzl", "A. Heller"], "venue": "Interactive Theorem Proving. Volume 6172 of LNCS. Springer", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Towards the Formal Reliability Analysis of Oil and Gas Pipelines", "author": ["W. Ahmed", "O. Hasan", "S. Tahar", "M.S. Hamdi"], "venue": "Intelligent Computer Mathematics. Volume 8543 of LNCS. Springer", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "Space Solar Array Reliability: A Study and Recommendations", "author": ["H.W. Brandhorst Jr", "J.A. Rodiek"], "venue": "Volume 63. Elsevier", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2008}, {"title": "Formal Fault Tree Analysis of Satellite\u2019s Solar Array", "author": ["W. Ahmad"], "venue": "http://save.seecs.nust.edu.pk/projects/fta.html", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Naive set theory", "author": ["P.R. Halmos"], "venue": "Springer", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1960}, {"title": "Large Scale Analysis of Signal Reachability", "author": ["A. Todor", "H. Gabr", "A. Dobra", "T. Kahveci"], "venue": "Bioinformatics 30(12)", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2014}, {"title": "A rapid algorithm for computing st reliability of radiocommunication networks", "author": ["F. Gao", "X. Liu", "H. Liu"], "venue": "In Apolloni, B., Howlett, R., Jain, L., eds.: KnowledgeBased Intelligent Information and Engineering Systems. Volume 4693 of LNCS. Springer", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2007}, {"title": "Reliability Analysis of the Solar Array based on Fault Tree Analysis", "author": ["W. Jianing", "Y. Shaoze"], "venue": "Journal of Physics. Volume 305., IOP Publishing", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "On the Formalization of the Lebesgue Integration Theory in HOL", "author": ["T. Mhamdi", "O. Hasan", "S. Tahar"], "venue": "Interactive Theorem Proving. LNCS. Springer", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2010}, {"title": "Toward a Theory of Fuzzy Information Granulation and its Centrality in Human Reasoning and Fuzzy logic", "author": ["L.A. Zadeh"], "venue": "Volume 90. Elsevier", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1997}, {"title": "Petri Net Theory and the Modeling of Systems", "author": ["J.L. Peterson"], "venue": "Prentice Hall", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1981}, {"title": "Application of the Fault Tree Analysis for Assessment of Power System Reliability", "author": ["A. Volkanovski", "M. \u010cepin", "B. Mavko"], "venue": "Reliability Engineering & System Safety, Elsevier, 94(6)", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2009}, {"title": "Diagnostic of the Avionic Equipment Based on Dynamic Fault Tree", "author": ["A. Lefebvre", "Z. Simeu-Abazi", "J.P. Derain", "M Glade"], "venue": "IFAC-CEA conference.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "One of the most widely used dependability and failure analysis techniques is the Fault Tree Analysis (FTA) method [2].", "startOffset": 114, "endOffset": 117}, {"referenceID": 1, "context": "Some noteworthy applications of FTA include the failure analysis of transportation systems [3], healthcare systems [4] and aerospace systems [5].", "startOffset": 91, "endOffset": 94}, {"referenceID": 2, "context": "Some noteworthy applications of FTA include the failure analysis of transportation systems [3], healthcare systems [4] and aerospace systems [5].", "startOffset": 115, "endOffset": 118}, {"referenceID": 3, "context": "Some noteworthy applications of FTA include the failure analysis of transportation systems [3], healthcare systems [4] and aerospace systems [5].", "startOffset": 141, "endOffset": 144}, {"referenceID": 4, "context": "These MCS failure events are generally modeled in terms of the exponential or weibull random variables and the Probabilistic Inclusion-Exclusion (PIE) principle [6] is then used to evaluate the exact probability of failure of the given system.", "startOffset": 161, "endOffset": 164}, {"referenceID": 5, "context": "For instance, in nuclear plants, where a fault tree model involves 50 to 130 levels of logic gates between the top event and the lowest basic events that are contributing to the top event [7].", "startOffset": 188, "endOffset": 191}, {"referenceID": 6, "context": "Similarly, computer algebra systems (CAS), such as Mathematica [10], provide extensive features for FT-based failure analysis.", "startOffset": 63, "endOffset": 67}, {"referenceID": 7, "context": ", a temporal logic that supports first-order logic, has been used, along with the Karlsruhe Interactive Verifier (KIV), for formal FTA of a rail-road crossing [11].", "startOffset": 159, "endOffset": 163}, {"referenceID": 8, "context": "The work presented in [12] describes a deductive method for FT construction, in contrast to the intuitive approach followed in", "startOffset": 22, "endOffset": 26}, {"referenceID": 7, "context": "[11], by using the Observational Transition Systems (OTS) [12] and then the formal analysis of this FT is carried out using CafeOBJ [13], which is a formal specification language with interactive verification support.", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "[11], by using the Observational Transition Systems (OTS) [12] and then the formal analysis of this FT is carried out using CafeOBJ [13], which is a formal specification language with interactive verification support.", "startOffset": 58, "endOffset": 62}, {"referenceID": 9, "context": "[11], by using the Observational Transition Systems (OTS) [12] and then the formal analysis of this FT is carried out using CafeOBJ [13], which is a formal specification language with interactive verification support.", "startOffset": 132, "endOffset": 136}, {"referenceID": 10, "context": "The COMPASS tool-set [14], which is developed at RWTH Achen University in collaboration with the European Space Agency (ESA), caters for this problem and supports the formal FTA specifically for aerospace systems using the NuSMV and MRMC model checkers.", "startOffset": 21, "endOffset": 25}, {"referenceID": 11, "context": "In order to achieve an accurate and precise FTA, we propose to conduct the formal FTA within the sound core of a higher-order-logic theorem prover [15].", "startOffset": 147, "endOffset": 151}, {"referenceID": 12, "context": "Hurd\u2019s formalization of measure and probability theories [16] is a pioneering work in this regard.", "startOffset": 57, "endOffset": 61}, {"referenceID": 13, "context": "Building upon this formalization most of the commonly-used continuous random variables [17] and some reliability theory fundamentals [18] have been formalized using the HOL theorem prover.", "startOffset": 87, "endOffset": 91}, {"referenceID": 14, "context": "Building upon this formalization most of the commonly-used continuous random variables [17] and some reliability theory fundamentals [18] have been formalized using the HOL theorem prover.", "startOffset": 133, "endOffset": 137}, {"referenceID": 12, "context": "However, Hurd\u2019s formalization of probability theory [16] only supports the whole universe as the probability space.", "startOffset": 52, "endOffset": 56}, {"referenceID": 15, "context": "This feature limits its scope in many aspects [19] and one of the main limitations, related to FTA-based analysis, is the nonability to reason about multiple continuous random variables [17].", "startOffset": 46, "endOffset": 50}, {"referenceID": 13, "context": "This feature limits its scope in many aspects [19] and one of the main limitations, related to FTA-based analysis, is the nonability to reason about multiple continuous random variables [17].", "startOffset": 186, "endOffset": 190}, {"referenceID": 15, "context": "Some recent probability theory formalizations [19,20] allow using any arbitrary probability space that is a subset of the universe and thus are more flexible than Hurd\u2019s formalization of probability theory.", "startOffset": 46, "endOffset": 53}, {"referenceID": 16, "context": "Some recent probability theory formalizations [19,20] allow using any arbitrary probability space that is a subset of the universe and thus are more flexible than Hurd\u2019s formalization of probability theory.", "startOffset": 46, "endOffset": 53}, {"referenceID": 15, "context": "Particularly, Mhamdi\u2019s probability theory formalization [19], which is based on extended-real numbers (real numbers including \u00b1\u221e), has been recently used to reason about the Reliability Block Diagram (RBD)-based analysis of a series pipelines structure [21], which involves multiple exponential random variables.", "startOffset": 56, "endOffset": 60}, {"referenceID": 17, "context": "Particularly, Mhamdi\u2019s probability theory formalization [19], which is based on extended-real numbers (real numbers including \u00b1\u221e), has been recently used to reason about the Reliability Block Diagram (RBD)-based analysis of a series pipelines structure [21], which involves multiple exponential random variables.", "startOffset": 253, "endOffset": 257}, {"referenceID": 15, "context": "The current paper is mainly inspired from this development as we use Mhamdi\u2019s formalized probability theory [19] for the formalization of all the commonly used FTA gates and the formal verification of their probabilistic properties.", "startOffset": 108, "endOffset": 112}, {"referenceID": 3, "context": "In order to illustrate the effectiveness of the proposed FTA approach, the paper presents a formal failure analysis, by taking a FT model, of a solar array that has been used in the DFH-3 Satellite, which was launched by the People\u2019s Republic of China on May 12, 1997 [5].", "startOffset": 268, "endOffset": 271}, {"referenceID": 18, "context": "Solar arrays are one of the most vital components of the satellites because the mission success heavily depends upon the continuous reliable source of power [22].", "startOffset": 157, "endOffset": 161}, {"referenceID": 18, "context": "Over the last ten years, 12 out of the 117 satellite\u2019s solar array anomalies, documented by the Airclaims Ascend SpaceTrak database, led to the total satellite failure [23,22].", "startOffset": 168, "endOffset": 175}, {"referenceID": 15, "context": "In this section, we provide a brief overview of the HOL4 formalization of the probability theory [19], which we build upon in this paper.", "startOffset": 97, "endOffset": 101}, {"referenceID": 15, "context": "In the HOL4 probability theory formalization [19], given a probability space p, the functions space and subsets return the corresponding \u03a9 and \u03a3, respectively.", "startOffset": 45, "endOffset": 49}, {"referenceID": 17, "context": "This definition characterizes the distribution of both discrete and continuous random variables and has been formalized [21] as follows:", "startOffset": 120, "endOffset": 124}, {"referenceID": 17, "context": "This concept has been formalized as follows [21]:", "startOffset": 44, "endOffset": 48}, {"referenceID": 15, "context": "The first assumption ensure that p is a valid probability space based on the probability theory in HOL4 [19].", "startOffset": 104, "endOffset": 108}, {"referenceID": 19, "context": "The proof script [24] of the above-mentioned formalization is composed of 4000 lines of HOL script and took about 200 man-hours.", "startOffset": 17, "endOffset": 21}, {"referenceID": 20, "context": "These combinations of basic failure events, called cut sets, are then reduced to minimal cut sets (MCS) by using some set-theory rules, such as idempotent, associative and commutative [25].", "startOffset": 184, "endOffset": 188}, {"referenceID": 19, "context": "The proof script [24] for Theorem 3 is composed of 1000 lines of HOL code and involved 50 man-hours of proof effort.", "startOffset": 17, "endOffset": 21}, {"referenceID": 21, "context": "To the best of our knowledge, this is the first formal verification of the probabilistic inclusion exclusion principle, which, besides being used in FTA, is a widely used mathematical result in analyzing various bio-informatics [26] and telecommunication [27] systems.", "startOffset": 228, "endOffset": 232}, {"referenceID": 22, "context": "To the best of our knowledge, this is the first formal verification of the probabilistic inclusion exclusion principle, which, besides being used in FTA, is a widely used mathematical result in analyzing various bio-informatics [26] and telecommunication [27] systems.", "startOffset": 255, "endOffset": 259}, {"referenceID": 3, "context": "The solar arrays used in satellite missions are usually in a folded position during the launch phase [5].", "startOffset": 101, "endOffset": 104}, {"referenceID": 3, "context": "Once the satellite is deployed in the corresponding orbit then the solar arrays are unfolded and the goal is to keep them oriented towards the sun all the time to maximize the power generation for the satellite [5].", "startOffset": 211, "endOffset": 214}, {"referenceID": 3, "context": "For example, the solar array is usually driven by using a torsion spring [5].", "startOffset": 73, "endOffset": 76}, {"referenceID": 3, "context": "Whereas, the closed cable loop (CCL) and the stepping or servo motors are used during the synchronization and orientation phases [5].", "startOffset": 129, "endOffset": 132}, {"referenceID": 23, "context": "A FT can thus be constructed by considering the faults in these mechanical components, which are the fundamental causes of satellite\u2019 solar array mechanisms failure The FT for the solar array of the DFH-3 Satellite that was launched by the People\u2019s Republic of China on May 12, 1997 [28] is depicted in Figure 1 and we formally analyze this FT in this paper.", "startOffset": 283, "endOffset": 287}, {"referenceID": 3, "context": "1: FT of the Solar Array of the DFH-3 Satellite [5]", "startOffset": 48, "endOffset": 51}, {"referenceID": 3, "context": "failure events in the above definition is not minimal [5], i.", "startOffset": 54, "endOffset": 57}, {"referenceID": 24, "context": "The second assumption ensure that p is a valid probability space based on the probability theory in HOL4 [29].", "startOffset": 105, "endOffset": 109}, {"referenceID": 25, "context": "A fuzzy reasoning Petri Net (FRPN), which is a combination of fuzzy logic [30] and Petri Nets [31], based failure analysis for the above-mentioned solar array is presented in [5].", "startOffset": 74, "endOffset": 78}, {"referenceID": 26, "context": "A fuzzy reasoning Petri Net (FRPN), which is a combination of fuzzy logic [30] and Petri Nets [31], based failure analysis for the above-mentioned solar array is presented in [5].", "startOffset": 94, "endOffset": 98}, {"referenceID": 3, "context": "A fuzzy reasoning Petri Net (FRPN), which is a combination of fuzzy logic [30] and Petri Nets [31], based failure analysis for the above-mentioned solar array is presented in [5].", "startOffset": 175, "endOffset": 178}, {"referenceID": 27, "context": "Building upon the results, presented in this paper, other FT gates, such as priority AND and voting OR gate, can also be formally modeled and thus the scope of FTA-based formal reliability analysis [32] can be further enhanced.", "startOffset": 198, "endOffset": 202}, {"referenceID": 1, "context": "Some interesting real-world applications that can benefit from our work include transportation systems [3], healthcare systems [4] and avionics [33].", "startOffset": 103, "endOffset": 106}, {"referenceID": 2, "context": "Some interesting real-world applications that can benefit from our work include transportation systems [3], healthcare systems [4] and avionics [33].", "startOffset": 127, "endOffset": 130}, {"referenceID": 28, "context": "Some interesting real-world applications that can benefit from our work include transportation systems [3], healthcare systems [4] and avionics [33].", "startOffset": 144, "endOffset": 148}], "year": 2015, "abstractText": "Fault Tree Analysis (FTA) is a dependability analysis technique that has been widely used to predict reliability, availability and safety of many complex engineering systems. Traditionally, these FTAbased analyses are done using paper-and-pencil proof methods or computer simulations, which cannot ascertain absolute correctness due to their inherent limitations. As a complementary approach, we propose to use the higher-order-logic theorem prover HOL4 to conduct the FTAbased analysis of safety-critical systems where accuracy of failure analysis is a dire need. In particular, the paper presents a higher-order-logic formalization of generic Fault Tree gates, i.e., AND, OR, NAND, NOR, XOR and NOT and the formal verification of their failure probability expressions. Moreover, we have formally verified the generic probabilistic inclusion-exclusion principle, which is one of the foremost requirements for conducting the FTA-based failure analysis of any given system. For illustration purposes, we conduct the FTA-based failure analysis of a solar array that is used as the main source of power for the Dong Fang Hong-3 (DFH-3) satellite.", "creator": "LaTeX with hyperref package"}}}