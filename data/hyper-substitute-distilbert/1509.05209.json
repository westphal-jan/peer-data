{"id": "1509.05209", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Sep-2015", "title": "Extraction of evidence tables from abstracts of randomized clinical trials using a maximum entropy classifier and global constraints", "abstract": "examining use of the published results surrounding randomized clinical comparisons is increasingly important in methodology - based experiments. in order of collate and suggest new results before potentially fraudulent trials, evidence chart form mandated to represent trials concerning her set of interventions whose interest. individual evidence table has columns as the patient sample, for category one the interventions being compared, for comparison criterion by the comparison ( of. g. ones who survived until 8 years from tb ), and for each of the results. second, it is a labour - basis activity to read each published paper and give the information for each field in consolidated evidence store. there has been seven tentative studies investigating how some subjects the studies given papers look systematically extracted, sometimes finally least the accompanying sentences identified. ultimately, there is a lack of pure nlp system for the systematic interpretation of each item of information required for an evidence table. economists calculate q need by a combination of a maximum standard estimation, and straightforward linear programming. whoever use context parameters to construct constraints on information is publicly acceptable classification of all features to be extracted. evaluating experimental results, archaeologists discovered substantial advantages in using global constraints ( such as finding features explaining the human interactions, supporting the treatments, progressively evolve during the hypothesis describing the results of population comparison ).", "histories": [["v1", "Thu, 17 Sep 2015 11:20:35 GMT  (25kb)", "http://arxiv.org/abs/1509.05209v1", "27 pages, 10 tables"]], "COMMENTS": "27 pages, 10 tables", "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["antonio trenta", "anthony hunter", "sebastian riedel"], "accepted": false, "id": "1509.05209"}, "pdf": {"name": "1509.05209.pdf", "metadata": {"source": "CRF", "title": "Extraction of evidence tables from abstracts of randomized clinical trials using a maximum entropy classifier and global constraints", "authors": ["Antonio Trenta", "Anthony Hunter"], "emails": ["anthony.hunter@ucl.ac.uk"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 9.\n05 20\n9v 1\n[ cs\n.C L\nKeywords: Information extraction; Machine reading of medical information; Automated analysis of clinical evidence; Mining medical literature; Randomized clinical trials; Automated compilation of Evidence tables; Evidence-based medicine.\n\u2217Corresponding author email: anthony.hunter@ucl.ac.uk\n1\n2"}, {"heading": "1 Introduction", "text": "The systematic use of evidence is already established in healthcare in the form of evidence-based decision making [1]. Much of this evidence is in the form of randomized clinical trials (RCTs) published as articles in medical journals [2]. Unfortunately, the rapidly increasing number of published RCTs on a subject means that it is challenging for a clinician or biomedical researcher to effectively and efficiently acquire and assimilate that evidence."}, {"heading": "1.1 State of the art", "text": "Finding relevant RCTs involves information retrieval techniques applied to the free text and indexing of the RCTs via information providers such as PubMed, Medline, etc. Each of the retrieved RCTs then needs to be read in order to extract information about the RCT concerning the patient class, the interventions being compared in the trial, the outcomes by which the interventions are being compared (e.g. proportion of patients who live more than 5 years after treatment, proportion of patients who do not have a particular side-effect, etc), and the results of the comparison. The extracted information is then used to populate an evidence table. Currently, it is a labour-intensive activity to read each published paper and extract the information for each field in an evidence table. Although many annotation software tools have been developed [3], it is still very expensive and time consuming work that requires domain experts.\nGiven the large number of published RCTs, a number of researchers have investigated both knowledge-based and statistical NLP techniques for automating the information extraction process. Some of these attempts have concentrated on identifying entire sentences containing required information [4\u20139]. DemnerFushman et al. [9] employed an ensemble of knowledge-based and statistical classifiers to identify sentences containing statements about the study outcomes, and Chung [4] and Boudin et al. [5] tried to locate sentences containing a reference to the PIO elements (Participants, Intervention, Outcome Measure). The retrieved sentences may then require human intervention or additional methods to extract the information to populate an evidence table.\nOther attempts at applying NLP techniques have gone beyond the sentence level, with the aim of retrieving fine-grained information, though mostly they have concentrated on the identification of the patient group and the intervention and control treatments [10\u201318]. These approaches have resulted in good performances in extracting single information items. However, they all rely, to various extents, on rule-based and pattern matching approaches, which, although very powerful, can be error-prone and not robust. For instance, Demner-Fushman & Lin [18] used manually crafted rules, and DeBruijn et al. [11], Kiritchenko et al. [10], and Hara & Matsumoto [14] used regular expression matching. Moreover, dependencies between single information elements are not taken into account. We believe that these dependencies bear precious information that can be exploited to improve the performance, robustness, and scalability, of the information extraction system.\n3"}, {"heading": "1.2 Overview of our approach", "text": "The aim of this paper is to investigate the feasibility and performance of a classification-based fine-grained information extraction system to obtain information from RCT abstracts obtained from PubMed. The elements that we want to extract follow the PICO framework [19]: the patient group (P), the intervention (I) and control (C) arms, the outcome measure description and its measurements in the two arms (O). The PICO elements are fundamental for the practice of Evidence Based Medicine [1].\nFor this, we identify the words that represent the syntactic head of the phrase containing the information required. We can then extract individual information items using the parse tree of the sentence. In this work we concentrated on the identification of the syntactic heads only. However, once these are identified the extraction of the full phrase is a relatively trivial task. We leave this part to future work.\nThe output from our system will be used to fill out evidence tables that can be used by healthcare professionals [20], or collated in databases that can be more easily queried [21], or they can be used by analysis tools (e.g. for evidence aggregation [22]). We give an illustration of input and output to our system in Table 1.\nWe considered abstracts rather than full text articles because abstracts are the first section readers look at when evaluating a trial and in many cases the only part of the report that they can access to (the full text may require a journal subscription). Moreover, the CONSORT statement [23] requires authors to report all the PICO elements in the abstract, therefore for the purposes of this work the full text article is not needed.\nThe core of our system is completely based on statistical techniques. A Maximum Entropy classifier is first trained using a standard set of linguistic features (Table 5). The output of the classifier is processed by an optimisation procedure that finds the optimal location of each of the information elements that complies with a set of knowledge-based constraints (Table 6).\nIn contrast, most of the previous attempts to extract fine-grained information rely somehow on rule-based methods (e.g. pattern matching using regular expressions), usually in the final stage (e.g. [11]). In our system, the use of rules is restricted to the data preprocessing and to the definition of constraints for the inference phase. Therefore, the approach underlying our system can be considered to be a data-driven.\nThe sentence classification and filtering stage, common in previous work, is not necessary for our system. One reason for this is that most abstracts nowadays are already structured into four or five sections using a labelling policy (e.g. AIM, PATIENTS, METHODS, RESULTS, CONCLUSIONS) with one or more sentences per section. The majority of journals that publish RCTs now adopt a common policy for this labelling such as advised by CONSORT [23] (this was reflected in the set of abstracts retrieved for this study, in which 163 out of 176 abstracts had a paragraph structure (2.1)). Since, in our system, the abstract structure is used only as a feature to the classifier, and not for filtering\n4 out sentences, unstructured abstracts can still be processed. Our system takes into account dependencies between the target information items, through the use of abstract-wide constraints in the inference phase. To the best of our knowledge, this is the first attempt to directly consider dependencies between all the PICO elements in an RCT abstract. When in previous work some dependency was considered, it was done either at the sentence level (i.e. [4]) or for a limited number of elements (i.e. [12]). Finally, our approach is the first approach to use the inference with classifiers technique [24] for extracting information from RCTs.\nIn our test set the system achieved a 0.88 precision for the patient group, 0.72 for the intervention and 0.64 for the control arms, 0.72 for the outcome measure description and finally 0.68 and 0.48 for the outcome measurements in the two arms. The overall precision of the system is 0.687."}, {"heading": "2 Methods", "text": "In this section, we explain how we obtained our training and testing data from PubMed, and how we annotated this dataset. The dataset concerned interventions for glaucoma and ocular hypertension."}, {"heading": "2.1 Data Collection", "text": "The dataset used to train and test the system contains a number of RCT abstracts, that we retrieved directly from PubMed.\nFollowing the CONSORT statement 2010 [25], we focused on the most common randomised controlled trial design: individually randomised, two group, parallel. Different study designs, as well as trials with multiple intervention arms, are reported in different ways, with more complex linguistic structures, as they need varying amounts of additional information. The processing of these trial reports goes beyond the scope of this initial study, therefore we leave it to future work.\nWe retrieved the abstracts using three search strategies (Appendix A): (Strategy 1) titles or abstracts containing the word \u201cGlaucoma\u201d and that specified that the studies were randomized clinical trials; (Strategy 2) titles containing at least one element of a list of prescription drugs recognized as those used typically in the treatment of glaucoma or ocular hypertension and that specified that the studies were randomized clinical trials; and (Strategy 3) titles containing at least one element of a list of surgery procedures, identified as those typically used in the treatment of glaucoma or ocular hypertension, and that specified that the studies were randomized clinical trials. The search queries produced 176 abstracts.\nAn abstract was excluded from the dataset if:\n1. the study design did not match the randomized, double-blinded layout;\n5 2. the study involved three or more intervention arms (three or more compared interventions);\n3. the results were not stated clearly with a numerical value (or other formats such as confidence intervals or ranges) for the two arms.\nThe third condition comes again from the CONSORT statement, in its version for RCT abstracts, in which it is stated that the results should be reported as a summary of the outcome in each group (e.g. the number of participants with or without the event, or the mean and standard deviation of measurements) [26]. This is an increasingly common practice for trial reporting, although sometimes the study results are still reported in a less schematic and more discursive way (e.g. \u201cBimatoprost achieved high percentage IOP (intraocular pressure) reductions from baseline in a significantly higher proportion of patients\u201d from [27]).\nThe restriction of the analysis to a specific medical domain is a common practice in related work (i.e. [14]), and it was used to reduce the vocabulary variety in order to make the interpretation of the experimental results simple and clear. However, this does not exclude that the system can be trained and tested on different medical domains.\nAfter the filtering stage the dataset contained 99 abstracts, of which 96 abstracts were structured (i.e. each abstract was structured into four or five sections using a labelling policy (e.g. AIM, PATIENTS, METHODS, RESULTS, CONCLUSIONS) with one or more sentences per section (such as the CONSORT policy [23]).1 A listing of alternative headings and subheadings is given in Table 2.\nThe 99 abstracts in our dataset were annotated by hand. This involved enclosing in tags (e.g. <tag> ...</tag> ) the syntactic heads of the phrases containing the target information. The tags are listed in Table 3. All occurrences of patient group, intervention arm, control arm and main outcome measure evaluations were annotated. The main outcome measure descriptor was annotated within the RESULTS section, in the same sentence as the evaluations when possible.\nWe have made the dataset publicly available2."}, {"heading": "2.2 Preprocessing", "text": "Various procedures were used to preprocess the dataset. All the proceedures used in preprocessing are automated (i.e. there is no preprocessing by hand). The abstracts were first split into sentences, using the NLTK package [28].\nAll the abbreviations were substituted with their corresponding expanded version (e.g. \u201cIOP\u201d was expanded to \u201cIntraocular Pressure\u201d). This was done by either querying a dictionary of known abbreviations or by guessing the right expansion from the text. For the first case, a dictionary was built from the dataset with the most frequent abbreviations encountered with a mapping to\n1The number of structured abstracts before filtering was 163. 2http://www0.cs.ucl.ac.uk/staff/a.hunter/projects/crtdata (accessed 30 June 2014)\n6 their respective expansions. When a word that is a key in the dictionary is found in a sentence, it is substituted for its expanded version.\nTo account for possible new abbreviations, or different formats of known ones, a function tries to guess possible abbreviations from the abstract taking advantage of the usual way in which they are defined (e.g. This Is An Example (TIAE)). The function finds all capitalised words included in brackets, and takes an appropriate number of words preceding them as the expanded version of that abbreviation. This heuristic is designed to be conservative and it performs well with our data, correctly substituting most of the abbreviations3.\nNumbers and other mathematical constructions were substituted with an appropriate canonical form, for instance numbers were mapped to the tag NUM , percentages to PERC and measurement (i.e. \u201c33 mm\u201d) to MEAS . But also more complex constructions were replaced (e.g. confidence intervals to CONFINT ). For this task regular expressions were used to find the target patterns in the sentence. Patterns were searched multiple times for each sentence, and this makes it possible to use more complex designs that can, for instance, solve correctly some kind of ellipsis (i.e. \u201c10, 20 and 30 mmHg\u201d becomes \u201c MEAS , MEAS and MEAS \u201d rather than \u201c NUM , NUM and MEAS \u201d). In this stage hyphens and double spaces were also substituted with a single space.\nThe normalised sentence was then processed by the GENIA tagger [29], which is a well-known system for part-of-speech tagging, NP chunking and named entity recognition, and it has been designed specifically for biomedical text.\nAll chunks in the sentence were given a semantic class label according to their content. For instance \u201cPrimary open-angle Glaucoma\u201d is categorised as DISEASE-OR-MEDICAL-CONDITION (Table 4). This was done by combining a rule-based pattern-matching approach with a search routine in Freebase4.\nUsing regular expressions the chunk is first searched for a set of patterns that clearly identify one of the semantic classes in Table 4. For instance, if the chunk contains the tag \u201c GONE \u201d or it ends with the word \u201cgroup\u201d or \u201carm\u201d, it is given the semantic class \u201cARM\u201d.\nIf in this first round no semantic class is assigned, the chunk is searched in Freebase. The search routine is designed to avoid inappropriate results. The chunk is searched first in its entirety. If the search does not produce any appropriate result, one word is taken out from the start of the chunk and the remainder is searched again.\nThis continues until the chunk is reduced to its rightmost word. Only results referring to one of the semantic classes in Table 4 are considered, and only if they appear in the top positions of the retrieved list. If in the end no semantic class is found, the chunk is assigned to the class none.\nFinally, since the classifier considers single tokens rather than chunks, the chunk semantic class is assigned to the tokens in the chunk, unless the token is\n3However, it is unable to take into account pluralised abbreviations (i.e. IOPs) or more complex ones, containing characters like numbers and punctuation marks\n4https://developers.google.com/freebase/ (accessed 10 February 2014)\n7 a stopword (i.e. and, or, for, not), in which case the semantic class is changed to \u201cnone\u201d."}, {"heading": "2.3 System Overview", "text": "The problem of finding the syntactic heads of our target information items is formalized here as a classification problem, in which single tokens in the abstracts are classified in one of the seven classes as listed in Table 3. This produces a labelling for each abstract in the form of a sequence of class labels.\nAlthough we can think of the token labelling as mostly dependent on local features (e.g. bag-of-words, semantic classes, ...) there are also global, abstractwise factors to consider. For instance, we want to find one and only one instance of each class in each abstract, the trial results will never appear in the OBJECTIVE section, etc. Yet, the problem can be seen as a sequential one. Given an abstract, we ought to find the most likely sequence of labels or, in other words, the most likely location of the six target labels, that obey a set of rules based on general knowledge of how RCTs are reported.\nThe core of the system consists of two components: a basic classifier and an inference procedure (our code is freely available5). We follow the inference with classifiers paradigm [24]: a widely used framework for NLP tasks (e.g. [30\u201332]) that tackles the problem of combining several local predictors whose outcomes are mutually dependent. The dependency between predictions is due to global constraints, which may be related to syntactic or structural considerations. They may arise from the nature of the problem or other task-specific conditions. One alternative solution to this problem is to incorporate the constraints into a global probabilistic model, but this approach is conceptually more complex and it does not always seem to perform better experimentally [33].\nIn the inference with classifiers framework, inference is carried out in two separate steps. First, multiple local classifiers are trained, without any knowledge of the global constraints. In the second step, the outputs of the local classifiers are processed by an inference procedure that finds the optimal global prediction subject to the constraints.\nIn this work, the inference with classifiers framework has been instantiated in the following way:\n1. A maximum entropy classifier is trained on the dataset, using a set of local and global features. Tokens are classified in one of the seven classes in Table 3. The classifier outputs a vector of scores for each token which represent the probability of that token being in one of the classes; for each token we have a score for each of the six labels.\n2. The optimal labelling (e.g. the one that maximizes the sum of the scores) is found by solving an integer linear programming (ILP) problem, subject to a set of abstract-wise constraints. This chooses one label for\n5https://github.com/antoniotre86/IERCT (accessed 23 February 2014)\n8 each token such that the sum of such scores over the abstract is maximised, while making sure that none of the constraints are violated.\nTo train the maximum entropy classifier a set of local and global features have been devised (Table 5). The features represent characteristics of each token in the abstracts and may be specific to the single token, or to the chunk, the sentence and the paragraph in which the token is in (for instance, the word itself, the part-of-speech tags, the semantic class, the position, the paragraph label, and whether the word appears in the title). The token specific features include also features of the neighbouring tokens, in a window of one or two to each side. Sentences are treated as separate entities: when a token is at the start (or at the end) of the sentence, the features related to the tokens before (after) are given the value \u201cnone\u201d.\nBefore training the classifier, the training set is filtered in order to remove all the tokens that cannot contain any target information. The CONCLUSIONS section is often a concise re-wording of the previous sections, and so it is not likely to contain any PICO element that is not in the rest of the text. For this reason, when a paragraph of category CONCLUSIONS is present, all the tokens in it are filtered out. Moreover, it is reasonable to think that the syntactic heads targets of our classification problem should be nouns or numbers. Tokens that have part-of-speech tag in a restricted list (i.e. not nouns or numbers) are excluded from the analysis6.\nThe maximum entropy classifier is trained using the Scikit-learn [34] logistic regression module. When presented with a new token the trained maximum entropy classifier outputs a vector of estimated probabilities of the token being in one of the seven classes in Table 3. Given a new abstract, then, one such vector is estimated for each token and this, along with a set of appropriate constraints, is the input to the inference process.\nIn this second stage, integer linear programming (ILP) is used to find the best labelling, in terms of the sum of log-probabilities, that satisfies a set of knowledge-based constraints. Given the estimated probabilities returned by the classifier, we want to find the sequence of labels that maximizes the sum of the log-probabilities, and satisfied a set of specified constraints. These constraints arise from considerations concerning the nature of the discourse in a scientific abstract, the way the abstracts were annotated and other aspects that an appropriate annotation should take into account. For instance, since one word cannot be a syntactic head of multiple target information items at a time, we constrained the system to assign only one label per token. As another example, the system is constrained to look for the outcome measure and the results in the RESULTS section, and only after the patient group and the trial arms are reported. A detailed account of all the constraints used can be found in Table 6. We also seek to minimize the distance between the A1 and A2 labels and between the R1 and R2 labels.\n6\u201d\u2032\u2032,\u2032\u2032\u201d, \u201d:\u201d, \u201dCC\u201d, \u201dDT\u201d, \u201dEX\u201d, \u201dFW\u201d, \u201dIN\u201d, \u201dLS\u201d, \u201dPRP$\u201d, \u201dWDT\u201d, \u201dWP\u201d, \u201dRP\u201d, \u201dTO\u201d, \u201dPRP\u201d, \u201dWRB\u201d, \u201dPDT\u201d, \u201dWP$\u201d, \u201dMD\u201d, \u201dJJR\u201d, \u201dJJS\u201d\n9 If the abstract is unstructured, in order to apply some of the constraints in Table 6 (in particular (5) and (6)), in the preprocessing phase the paragraph category is guessed by a heuristic that splits the abstracts in five sections of equal length and assigns each section the labels \u2019BACKGROUND\u2019, \u2019OBJECTIVE\u2019, \u2019METHODS\u2019, \u2019RESULTS\u2019 and \u2019CONCLUSIONS\u2019 respectively.\nThe Gurobi optimizer [35] is used to solve the ILP problem with the constraints listed above. The output of the optimizer is then converted into a proper labelling, integrating also the tokens excluded in the filtering phase (which are given the null label O). This produces a list of estimated labels, one for each token in the abstract."}, {"heading": "3 Results and discussion", "text": ""}, {"heading": "3.1 Evaluation", "text": "The performance of the system (full model) has been tested against two baseline models (vanilla and zero models).\nThe vanilla model is a rudimentary version of the full one. It still includes the basic maximum entropy classifier but, in the inference phase, it employs a simpler ILP problem which does not consider most of the constraints introduced in the previous section. This model simply assigns the proper label to the token that in the abstract has the highest probability of being in that class (excluding the null class O). In other words, it does not take into account the sequential and positioning constraints of the full model. The maximum entropy classifier, instead, is identical to that in the full model, with also the same features (token, chunk, sentence, paragraph and conjunction features).\nThe zero model is essentially a maximum entropy classifier. It does not take into account any dependency, and the tokens are classified as one of the classes in Table 3 independently from each other.\nThe zero and vanilla models are used to see whether, and to what extent, the performances improve when we formally include the considerations described in the previous section in the model, that is, when taking into account the dependencies between the labels.\nThe performance measures are reported in terms of precision, that is\np\u2113 = TP\u2113 CP\u2113\n\u2113 \u2208 {P,A1, A2, OC,R1, R2}\nand recall :\nr\u2113 = TP\u2113 AP\u2113\n\u2113 \u2208 {P,A1, A2, OC,R1, R2}\nwhere TP\u2113 is the number of True Positives, the number of tokens correctly labelled as \u2113, CP\u2113 is the number of tokens labelled as \u2113 by the system and AP\u2113 is the number of tokens annotated as \u2113 in the dataset.\nSince the constraints 1 and 2 (Table 6) impose one and one only target label for each abstract, the number of tokens labelled by the vanilla and full models is\n10\nfixed, and often smaller than the number of annotated tokens, by construction. This makes the recall measure artificially small for these two models.\nMoreover, the objective of the system is to extract the correct information items, whose number and nature are fixed and we know them in advance. And even when they are reported multiple times, our final goal is to get the right information, regardless of where it is mentioned in the text. Therefore, the only meaningful evaluation measure for this purpose is the precision; the recall measures are reported here just for completeness."}, {"heading": "3.2 Results", "text": "Experiments were run on the datasets collected and annotated as described before. The dataset was first split into a development set and a test set. The development set included 74 abstracts and had been used for feature selection, parameter tuning and constraint testing. The test set had been used to test the models on unseen material, and included the remaining 25 abstracts. All the three unstructured abstract were included in the test set.\nThe features used in the maximum entropy classifier had been first devised and then tested, discarding those that decreased the performance or did not produce any improvement. The feature testing had been carried via 10-fold cross validation on the development set.\nA qualitative analysis of the outputs revealed that the most relevant features are the word-related ones: the current and neighbouring words, the sentence and chunk bag-of-words. This is not surprising, as in such a small dataset the diversity of the lexicon is not large. Moreover, having restricted the analysis to glaucoma and ocular hypertension studies, the range of content-specific terms is limited. For instance, the word \u201cpressure\u201d (as in \u201cintraocular pressure\u201d) is very often annotated as the syntactic head of the outcome measure, because it is indeed the typical outcome measure of glaucoma-related RCTs. Other very informative features are the token semantic class, the word-in-title feature and the conjunction features (e.g. semantic class and paragraph category, and word-in-title and semantic class).\nThe experimental results are shown in Table 7 in terms of precision, with confidence intervals in Table 8, and in Table 9 in terms of recall. The tests were run both on the development set, via 10-fold cross validation (CV), and on the test set (HO). The differences in precision between the three models have been tested for significance using the paired-rank test [36].\nPerformance of the zero model. The zero model, which does not take into account any kind of dependency between labels, was generally outperformed by the other two in terms of precision. The differences are highly significant considering the labelling on the whole (P < 0.01). However, although very simple, the zero model achieved high precision values with the identification of the patient group (0.92), values that are comparable with those produced by the full model. These results are not surprising though. The patient group was the most predictable item, as it was always expressed in a standard form.\n11\nIntuitively, it is very reasonable to think that the local features in the maximum entropy classifier play a crucial role in the patient group identification (the word \u201cpatients\u201d, or similar, is a very indicative clue, as well as the semantic class PATIENTS), whilst the positional and sequential constraints do not make a considerable difference.\nIt is also worth mentioning the performance of the zero model with the trial arms (labels A1 and A2), as the precisions were comparable to those of the full and the vanilla models. The reason for this comes from the fact that all occurrences of the information items were annotated, and P, A1 and A2 are reported multiple times in most abstracts. The zero model, which is not constrained to choose only one label per abstract, can classify correctly more than one token within an abstract, therefore achieving a higher precision.\nThis does not appear to be the case for the outcome measure (OC) and the results (R1 and R2). This may happen because these items are less predictable than the other three, in that they are not usually reported in a standardised way, or with the use of any particular strong cue word or syntactic structure.\nPerformance of the vanilla model. The only element that differentiates the vanilla from the zero model is the constraint that requires only one label instance per abstract (constraint (2) in Table ??).\nLooking at the results we can see that this constraint is beneficial for the identification of the OC, R1 and R2 tokens while the precisions for P are lower than the ones achieved by the Zero model and there is no clear advantage with the identification of A1 and A2, with the Vanilla model having higher precisions in the hold out setting, and lower precisions in the cross validation settings.\nThe fact that the vanilla model has a lower precision for P, A1 and A2 is mainly due to the fact that these are usually annotated multiple times in the abstract (because the same information is often repeated), in particular P. Since these labels are quite predictable, and repeated multiple times, it is easier for the zero model to identify them correctly, as it often finds at least one candidate and it can make multiple guesses.\nThe constraint (2) is helpful with those labels for which the classifier has less predictive power (OC, R1 and R2), due to a lack of consistent cue words or linguistic constructs. In many cases, for instance, the Zero model fails to identify a suitable candidate for such labels in the abstract (for no token is the model confident enough to label it as different from the null class O). The vanilla model does not have this problem because it always chooses the most likely token for each label; it introduces a global consideration of the abstract, unlike the zero model which takes into account only the local features.\nPerformance of the full model. The full model outperformed the vanilla and zero models in most cases. It achieved the highest precisions in the test set for all labels: 0.720 for A1, 0.640 for A2 (similar to the vanilla model), 0.720 for OC, 0.680 for R1 and 0.480 for R2. Only for label P were the full and vanilla models outperformed by the zero model (as mentioned before).\n12\nCompared to the vanilla model, the full model sees larger increases in performance for the results labels (OC, R1 and R2), while for P, A1 and A2 it achieves the same precisions in the HO setting or is slightly better in the CV setting. This, again, has to do with the fact that OC, R1 and R2 are less predictable than the other labels, and therefore they tend to benefit more from the positional constraints introduced in the full model.\nConversely, the comparable performances of the full and vanilla models for P, A1 and A2 confirm that the constraints have a weaker impact on these.\nHowever, we can conclude that the sequential and positional constraints, as well as the minimisation of the distances A1-A2 and R1-R2, have a positive impact on the performances. This suggests that we can use the dependencies between information items to improve the predictive power of the system.\nAs an example, Table 10a shows the effect that the sequential constraints introduced in the full model have on the labelling of P, A1 and A2. In particular, the constraints involved in this example require A1 to be labelled before A2, and P labelled either before or after A1 and A2. Table 10b shows a snippet of the same abstract, labelled by the vanilla model and by the full model.\nThe vanilla model gets the correct token for P (\u201cpatients\u201d) and A1 (the second \u2018\u2019Trabeculoplasty\u201d), but confuses the first \u201ctrabeculoplasty\u201d, which has the label A1, for A2. This is because the model is not aware of the fact that the first trial arm is always annotated before the other arm.\nMoreover, here we can clearly see that the two references to the trial arms are both expressed with a coordinating construction. Therefore, since the most sensible way to label A1 and A2 is to pick them both from the same coordinating construction, P has to be either to the right or to the left of these two. Constraint 6 undertakes this task. The full model, taking advantage of the additional information provided by these two constraints, is then able to label correctly both A1 and A2.\nFinally, we tested the system on the three unstructured abstracts separately. The zero model correctly identifies two out of three P labels (0.66 precision), all three A2 labels and two out of three A1 labels. For labels OC, R1 and R2 it is right in one case only. The vanilla model is correct in two out of three abstracts for all labels. The full model is able to identify the P label in all abstracts, while for the other labels it is correct in two cases."}, {"heading": "4 Conclusion and future work", "text": "This paper describes the development and evaluation of the first phase of an information extraction system, to mine key characteristics of randomized clinical trials from published abstracts on PubMed. The objective of the system is to support, and ultimately substitute, the manual extraction of trial information; an expensive process that is used for various tasks in the healthcare research and practice\nThe first step towards this objective, presented in this paper, regards the identification of six target information items (the patient group, the interven-\n13\ntion and control arms, the main outcome measure and the trial results in each arm) by locating the correct syntactic head of the phrase containing such items. We followed the inference with classifiers approach. First, single words in the abstract are classified as one of the six elements with a maximum entropy classifier. Then the outputs of this first phase are processed by an inference procedure involving the solution of an integer linear programming problem, subject to a set of manually crafted constraints. This approach has the advantage that it can take into account of dependencies between information items, as well as external knowledge of how RCTs evidence is reported in published abstracts.\nThe promising results achieved indicate that machine learning can be used in the identification of key elements in RCT abstracts. Moreover, they tell us that dependencies between trial elements can be successfully exploited to obtain better performances and more consistent outputs. We have restricted the domain to one area of medicine, but restricting the domain is a common practice in most of the related work because it reduces the vocabulary variety, thereby making the results clearer. Furthermore, whilst the trained model is indeed domain specific, the model structure is not, and in principle it can be trained to abstracts from different domains without changing the features or the constraints.\nThere are number of directions that our system could be developed. First, the output from our system is the syntactic head of the information we want to extract, and so to extract the required information, the phrase associated with the syntactic heads needs to be extracted from the parse tree. Secondly, sentences need to be de-normalized, that is, substituting back the normalization tags with the actual numbers or words. Then, a straightforward improvement could be the substitution of the chunk categorization routine used in the preprocessing phase with more sophisticated techniques, such as the UMLS MetaMap system7 or an ad-hoc statistical method. Furthermore, the system should be tested on a larger and more diverse dataset, perhaps extending the analysis to RCTs in different, and more complicated, fields (e.g. oncology).\nA possible extension of this work might be the extraction of additional information (i.e. secondary outcomes, eligibility criteria, etc.) and of results reported in a non-schematic way. This would present many challenges. First of all, with more items to extract it is less likely to find them all in a single abstract. To deal with this issue it may be useful to relax the constraint 2 (i.e. one label per abstract), allowing the system not to identify one or more items. Secondly, the extraction of more verbose result descriptions might require the extraction of entire sentences, and this would undermine the computable representation of the system outputs. Thirdly, the use of a probabilistic approach may be investigated for this task, with a probabilistic model representing the dependencies between information items. This approach, although more complex than the one presented here, may lead to very interesting results. Finally, we would like to investigate the automatization of the selection of the abstracts to determine\n7http://www.nlm.nih.gov/research/umls/implementation resources/metamap.html (accessed 10 February 2014)\n14\nfor instance whether an abstract is an RCT and whether it involves two arms. In the short term, we believe that our approach to automated information extraction would ease the retrieval of relevant evidence from the results of systematic queries. The system could be used, for instance, to produce a table with the key trial elements from each abstract. The user could then visualise the trial characteristics, and decide if the study is of interest or not, without having to read the whole abstract.\nOur system could also be useful to systematic reviewers who still rely on manual annotation to populate evidence tables. This standard approach usually requires high intellectual effort from domain experts. Although many annotation software tools have been developed [3], it is still a very expensive and time consuming work. Automated extraction systems would be then much useful and reduce significantly time and cost of transferring RCT information into evidence tables, or electronic databases, either by supporting human annotation or (ultimately) substituting it.\nFinally, an information extraction system could be useful in the context of automated logical reasoning from clinical evidence [22], where knowledge aggregation methods are used to synthesise clinical evidence to produce evidence based recommendations. In such a context, our information extraction system could ease the process of retrieving and assimilating evidence from full text reports, now based on the expensive manual annotation."}, {"heading": "5 Acknowledgments", "text": "The authors are grateful to Zi Wei Liu and Matthew Williams for feedback on the clinical aspects of this work. The authors are also grateful to the anonymous referees for a number of valuable suggestions for improving the paper."}, {"heading": "Appendix A", "text": "Glaucoma:\n(clinical trial\u2019\u2019[Publication Type]) AND (glaucoma[Title/Abstract]) AND\n(randomized OR randomised OR double-masked[Title/Abstract]) NOT (\u2019\u2019protocol\u2019\u2019 OR\n\u2019\u2019non-randomized\u2019\u2019[Title/Abstract])\nPrescription drugs:\n(mitomycin[Title] OR brimonidine[Title] OR brinzolamide[Title] OR\ndorzolamide[Title] OR carteolol[Title] OR betaxolol[Title] OR fluorouracil[Title]\nOR latanoprost[Title] OR bimatoprost[Title] OR travoprost[Title] OR\ntimolol[Title] AND (randomized[Title] OR randomised[Title]) AND\n(\u2019\u2019glaucoma\u2019\u2019[MeSH Terms] OR \u2019\u2019glaucoma\u2019\u2019[All Fields])\nSurgical interventions:\n(randomized[Title] OR randomised[Title]) AND (trabeculectomy[Title] OR\nphacoemulsification[Title] OR trabeculoplasty[Title] OR\nphacotrabeculectomy[Title])\n20"}, {"heading": "Appendix B", "text": "To formalize the ILP problem we introduce a set of decision variable X=[x0,x1,...,xN ] where N is the number of candidate tokens in the abstract, each xi is equal to [xi,A1, xi,A2, xi,P , xi,OC , xi,R1, xi,R2] and xi,\u2113 is equal to one if the token i is assigned the label \u2113, and zero otherwise. The following auxiliary variables are introduced:\n\u2022 z\u2113 \u2208 [0, N ], \u2113 \u2208 L = {P,A1, A2, OC,R1, R2, O}, to represent the position of label \u2113 in the abstract, that is\nz\u2113 = N\u2211\ni=1\nxi,\u2113 \u00b7 i \u2113 \u2208 L\n\u2022 dA and dR to represent the distances A1-A2 and R1-R2 respectively, which are set to be dA = zA2 \u2212 zA1 and dR = zR2 \u2212 zR1;\n\u2022 w\u2113 \u2208 [0, 15] \u222a {101}, \u2113 \u2208 {R1, R2}, which is related to the word of the tokens labelled as R1 and R2. They take values between 0 and 15 when the word is equal to one of the sixteen normalization tags, and 101 (an arbitrary large number) otherwise. The actual value of w\u2113 is a mapping to a list of normalization tag types, in which, for instance NUM and MEAS have the same type. This is to take into account possible ellipses that have not been resolved in the normalization phase. For instance: The mean changes were CONFINT in the timolol and CONFINTM in the brimonidine group.\n\u2022 q\u2113 \u2208 [0, 9], \u2113 \u2208 {OC,R1, R2}, represent the position of the sentence containing the token labelled as \u2113. The sentence positions are derived from the \u201cposition in sentence\u201d feature, presented before.\n\u2022 y0, y1 \u2208 {0, 1}, used in the disjunction constraint 7 (Table 6).\n\u2022 b0, b1 \u2208 {0, 1}, used in the disjunction constraint 10.\nThus, our optimization problem can be formalized as\nmax X\u2208{0,1}7\u00d7N\nN\u2211\ni=0\n\u2211\n\u2113\u2208L\nxi,\u2113 log p\u0302i,\u2113 \u2212 (\u03b4AdA + \u03b4RdR) (1)\nwhere p\u0302i,\u2113 is the estimated probability for token i to be assigned the label \u2113, which are the outputs of the maximum entropy classifier. The parameters \u03b4A and \u03b4R determine the importance of the distance variables in the problem. In this study, they were set to be equal to 10\u22125. The above is optimized subject to the linear constraints in Table 6.\n21\nTables\n22\n23\n24\n27"}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "Systematic use of the published results of randomized clinical trials is<lb>increasingly important in evidence-based medicine. In order to collate and<lb>analyze the results from potentially numerous trials, evidence tables are<lb>used to represent trials concerning a set of interventions of interest. An<lb>evidence table has columns for the patient group, for each of the interven-<lb>tions being compared, for the criterion for the comparison (e.g. proportion<lb>who survived after 5 years from treatment), and for each of the results.<lb>Currently, it is a labour-intensive activity to read each published paper<lb>and extract the information for each field in an evidence table. There have<lb>been some NLP studies investigating how some of the features from papers<lb>can be extracted, or at least the relevant sentences identified. However,<lb>there is a lack of an NLP system for the systematic extraction of each item<lb>of information required for an evidence table. We address this need by a<lb>combination of a maximum entropy classifier, and integer linear program-<lb>ming. We use the later to handle constraints on what is an acceptable<lb>classification of the features to be extracted. With experimental results,<lb>we demonstrate substantial advantages in using global constraints (such<lb>as the features describing the patient group, and the interventions, must<lb>occur before the features describing the results of the comparison).", "creator": "LaTeX with hyperref package"}}}