{"id": "1512.00964", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Dec-2015", "title": "Modeling Human Understanding of Complex Intentional Action with a Bayesian Nonparametric Subgoal Model", "abstract": "hierarchical animal behaviors occur of multiple parts, steps, / subtasks. such structures favor single action performing cognitive execution, while when we reproduce phenomena, giving direct presentation of their actions is typically unobservable, psychology must thus inferred because choosing towards learn new skills by demonstration, or to include engineers in completing their tasks. 1 example, an assistant who has detected the subgoal attributes of a employees'of task can better rapidly recognize and support their actions as part program. here we demonstrates how many infer numbers from observations predicting desired action sequences around a second bayesian test, which revealed that observed actions are generated by approximately time planning anticipating unknown prior behavior. we ally this model with a behavioral experiment in ways respondents observed different numbers of goal - satisfaction outcomes, meaning combine both with statistical group inference modes efficiently executing sequences matched with each goal. the bayesian model predicts human activity inferences with high diversity, and significantly better tells recent alternative models about straightforward heuristics. helping by this result, we simulate brain learning and observing of subgoals can restore performance in per elementary user programming task. this bayesian model learns the smaller subgoals from fewer candidates, and better informs psychologists by more delicately and accurately inferring existing goal by their algorithm pursuing alternative approaches.", "histories": [["v1", "Thu, 3 Dec 2015 06:44:35 GMT  (635kb,D)", "http://arxiv.org/abs/1512.00964v1", "Accepted at AAAI 16"]], "COMMENTS": "Accepted at AAAI 16", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ryo nakahashi", "chris l baker", "joshua b tenenbaum"], "accepted": true, "id": "1512.00964"}, "pdf": {"name": "1512.00964.pdf", "metadata": {"source": "CRF", "title": "Modeling Human Understanding of Complex Intentional Action with a Bayesian Nonparametric Subgoal Model", "authors": ["Ryo Nakahashi", "Chris L. Baker", "Joshua B. Tenenbaum"], "emails": ["Ryo.Nakahashi@jp.sony.com", "clbaker@mit.edu", "jbt@mit.edu"], "sections": [{"heading": "Introduction", "text": "Human behavior is hierarchically structured. Even simple actions \u2013 checking email, for example \u2013 consist of many steps, which span levels of description and complexity: moving fingers, arms, eyes; choosing whether to use the mouse or keyboard; searching for the email app among the others that are open, etc. Human behavior is also efficient: we attempt to perform each part of each action as swiftly and successfully as we can, at the least possible cost.\nClassical models of how humans understand the actions of others (originating from the plan recognition\nCopyright c\u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nliterature (Schank and Abelson 1977; Kautz and Allen 1986; Charniak and Goldman 1993; Bui, Venkatesh, and West 2002)) seek to leverage this hierarchical structure by building in prior knowledge of others\u2019 high-level actions, tasks, and goals. Behavioral evidence has shown that adults and even infants can learn simple hierarchical action structures from data, segmenting novel sequences along statistical action boundaries (Baldwin et al. 2008). These abilities can be captured with a nonparametric action segmentation model (Buchsbaum et al. 2015), which learns lists of actions that occur in sequence, and potentially cause observable effects.\nHowever, purely statistical learning from data leaves implicit the intrinsic efficiency of intentional actions. For adults and infants, the assumption that others\u2019 actions are rational functions of their beliefs, desires, and goals is fundamental (Dennett 1987; Gergely et al. 1995). Rather than simply memorizing repeated action sequences, people infer goals of complexity sufficient to rationalize these actions (Schachner and Carey 2013). A simple formalization of people\u2019s theory of rational, goal-directed action can be given in terms of approximately rational planning in Markov decision processes (MDPs), and human goal inferences can be accurately predicted using Bayesian inference over models of MDP planning (or inverse planning) (Baker, Saxe, and Tenenbaum 2009). This approach is closely related to recent plan recognition algorithms developed in the AI literature (Ram\u0131\u0301rez and Geffner 2010, e.g.).\nIn this paper, we integrate hierarchically structured actions into the inverse planning framework using hierarchical MDPs (Sutton, Precup, and Singh 1999). We consider scenarios in which agents pursue sequences of subgoals enroute to various destinations. Each destination can have multiple subgoal sequences, generated by a nonparametric Bayesian model. Together, a destination and subgoal sequence induce a hierarchical MDP, and agents\u2019 actions are assumed to be generated by approximately rational planning in this MDP.\nRepresenting agents\u2019 subgoal-based plans allows segmentation of behavior into extended chunks, separated by sparse subgoal boundaries, and can achieve greater generalization than purely statistical models by naturally capturing the context-sensitivity of rational action\nar X\niv :1\n51 2.\n00 96\n4v 1\n[ cs\n.A I]\n3 D\nec 2\n01 5\nsequences, rather than having to learn new sequences for each context. Further, the model predicts deviations from rationality (with respect to a single subgoal) at subgoal boundaries \u2013 a strong cue to hierarchical structure. This inductive bias should enable efficient learning of subgoal structure from small numbers of examples.\nWe present two experiments to test our model. The first is a behavioral experiment, in which human participants inferred the subgoal structure underlying series of action sequences. The second experiment is a simulation to show that the model is useful in an artificial user support task. The model first learns the subgoal structure of the task from a small number of observations. Then, the model infers a user\u2019s destination and subgoals from a partial action sequence, and attempts to assist the user to achieve a subset of the remaining subgoals. For each experiment, we compare the performance of our model with that of several natural alternatives."}, {"heading": "Computational Model", "text": "Fig. 1 represents the structure of our model in terms of separate graphical models for the hierarchical MDP and nonparametric subgoal models. These graphical models specify the structure of the joint distributions over actions, state sequences, and subgoal sequences. Our model represents the situational context in terms of a finite state space S. The variable s denotes a state sequence of length T , such that st \u2208 S is the tth state in the sequence. The variable g represents a sequence of M subgoals. We denote the mth subgoal of g as gm \u2208 S. For convenience, we assume that sT = gM = d is the destination. We denote the set of actions as A, and the action executed in st as at \u2208 A (see Fig. 1(a)).\nThe remainder of this section will first define the hierarchical MDP induced by a given destination and subgoal sequence, and derive the likelihood of a subgoal sequence, given an observed state sequence. Then we describe the nonparametric model of subgoal sequences, and a Markov chain Monte Carlo (MCMC) method for jointly inferring the number and composition of the subgoal sequences underlying a series of action sequences. Finally, we show how to use subgoal sequences learned from previous observations to predict the subgoals and destination of a novel partial action sequence."}, {"heading": "Subgoal sequence likelihood", "text": "Our hierarchical MDP formulation is closely related to the options framework for hierarchical reinforcement learning (Sutton, Precup, and Singh 1999). For simplicity, we assume that actions and state transitions are deterministic, that each action incurs a cost of 2, that the discount factor \u03b3 = 1.0, and that the destination yields a reward of 100 once all subgoals have been achieved.\nThe subgoal sequence g is analogous to a set of options, with initiation and termination conditions that require each subgoal to be achieved in sequential order. In Fig. 1(a), the variable g\u0303t keeps track of the current subgoal at time t. Assume the current subgoal is\ng\u0303t = gm; if the agent reaches the current subgoal, i.e., st = g\u0303t, then g\u0303t+1 \u2190 gm+1 should be the next subgoal, otherwise the subgoal should stay the same (g\u0303t+1 \u2190 g\u0303t).\nBased on this, an observed sequence s can be divided into multiple segments corresponding to g. We define boundary bm to be the first timestep t after gm\u22121 is achieved: bm = min({t|st\u22121 = gm \u2227 t > bj\u22121}); b0 = 1. We write the boundary vector b = \u3008b0, b1, ...\u3009. If s achieves all subgoals in g in order, the length of b, dim(b) should be dim(g) + 1. Otherwise, s does not satisfy g, so P (s|g) should be 0. The subgoal sequence likelihood is then:\nP (s|g) =  dim(g)\u220f m=1 bm\u22121\u220f t=bm\u22121 P (st+1|st, gm); (if dim(b) = dim(g) + 1)\n0; (otherwise),\n(1)\nwhere P (st+1|st, gm) = \u2211 at\u2208A P (st+1|st, at)P (at|st, gm) is the marginal probability of the state transition from st to st+1, integrating over actions. P (at|st, gm) \u221d exp(\u03b2Qgm(st, at)) is a softmax policy of the local MDP state-action value function for subgoal gm, based on the assumption that the observed agent plans approximately rationally, stochastically maximizing expected reward and minimizing cost.\nA similar likelihood computation was used by (Michini, Cutler, and How 2013) within an MCMC method for inferring subgoal sequences from user demonstrations. However, this approach focused on learning only one subgoal sequence from one action sequence; in the next section, we describe a nonparametric Bayesian model and MCMC methods for inferring multiple subgoal sequences, given a series of state sequences."}, {"heading": "Nonparametric subgoal inference", "text": "We now consider inference of subgoal structure by observing multiple sequences for a certain destination. We denote the set of N behavior sequences as s1:N and the ith sequence as si. We denote a set of K subgoal sequences as g1:K , and the kth sequence as gk. The problem of nonparametric subgoal inference is to compute P (g1:K |s1:N ) for an unbounded number of sequencesK.\nWe model the set of unknown subgoal sequences using a nonparametric Bayesian model, which allows us to consider an unbounded number of subgoal sequences for each destination. We use the Dirichlet process (DP) to express the distribution over subgoal sequences, following (Buchsbaum et al. 2015). A graphical model of our DP model is shown in Fig. 1(b). We use the Chinese Restaurant Process (CRP) representation to efficiently draw samples from the DP. First, the CRP selects a \u201ctable\u201d for each observation si, conditioned on all previous table assignments and the concentration parameter \u03b10. zi is the index of the table assigned to state sequence si. Next, for each CRP table, a subgoal sequence is sampled from the base distribution P0, and gk denotes the subgoal sequence associated with the kth table. The state sequence si is then generated given its associated subgoal sequence.\nWe use a MCMC method to compute the posterior probability over subgoal sequences, specifically, Gibbs sampling. Gibbs sampling allows us to approximate the complex DP distribution by inducing a Markov chain over samples from the CRP. Gibbs sampling over the CRP is a standard MCMC algorithm for DP inference (Neal 2000). Algorithm 1 is an overview of our algorithm. As an initialization step, we assign a different table for each state sequence, and draw subgoal sequences from the conditional distribution over subgoal sequences given the state sequence assigned to each table. We then repeat the table re-assignment step (resampling the table for each state sequence) and the parameter re-assignment step (drawing the subgoal sequences from the conditional distribution over subgoal sequences, given all sequences assigned to a table). For the table re-assignment step, we calculate the probability P (zi = k|z\u2212i, si) to assign sequence si to table k according to standard Gibbs sampling for the CRP:\nP (zi = k|z\u2212i, si) = n\u2212i,k N \u2212 1 + \u03b1 P (si|gk) (If k = zj for some i 6= j) \u03b1 N \u2212 1 + \u03b1 \u222b P (si|g)P0(g)dg\n(If k 6= zj for all i 6= j),\n(2)\nwhere z\u2212i denotes table assignments, excluding sequence i, and n\u2212i,k denotes the number of sequences assigned to table k, excluding sequence i.\nHowever, for our problem, P (si|g) is the MDP likelihood of a subgoal sequence. Because this is a nonconjugate distribution, we cannot integrate this equa-\ntion analytically. If the environment is small, we can enumerate all of g, and compute it directly as in the previous section. In large environments we must use an approximate method to choose a new table; some techniques are described by (Neal 2000). In the parameter re-assignment step, we draw the subgoal sequence from the posterior over subgoal sequences, given all sequences assigned to a table. Assume s1:l are the sequences assigned to table k. The distribution to draw a new subgoal sequence g for table k should be P (g|s1:l). This probability for each subgoal sequence can be calculated as follows:\nP (g|s1:l) \u221d P0(g)P (s1:l|g) = P0(g) l\u220f i=1 P (si|g) (3)\nAt the end of each step of the loop, we count the number of subgoal sequences for each state sequence. We represent the number of times that g is assigned any state sequence as c(g). The normalized count corresponds to P (g \u2208 g1:K |s1:N ).\nAlgorithm 1 Subgoal inference\nfor i = 1 to N do zi = i; gi \u223c P (gi|si) // Initialize Step (See, Eq. 1) end for for r = 1 to repeat do\nfor i = 1 to N do zi \u223c P (zi|z\u2212i, si) // Table Re-assign Step (See, Eq. 2) if zi is index for new table then\ngzi \u223c P (gzi |si) // Parameter Initialize for new table (See, Eq. 1)\nend if end for for k \u2208 {z1, z2, ...} do\ngk \u223c P (gk|{si|1 \u2264 i \u2264 N, zi = k}) // Parameter Re-assign Step (See, 3)\nend for for k \u2208 {z1, z2, ...} do\nc(gk)\u2190 c(gk) + 1 end for\nend for for all {g|c(g) > 0} do P (g \u2208 g1:K |s1:N )\u2190 c(g)/(repeat) end for output P (g \u2208 g1:K |s1:N )"}, {"heading": "Experiments", "text": "Our two experiments presented a \u201cwarehouse\u201d scenario involving the delivery of various items to destinations in the environment shown in Fig. 2. The warehouse has three delivery destinations: A, B, and C. There are nine potential items to be delivered, marked by numbers 1- 9. The items are arranged into three rows, and for each delivery, one item can be delivered from each row.\nEach job in the warehouse has a specific destination, and several possible \u201citem lists\u201d to deliver. An item list\nconsists of either one, two, three items that must be delivered to the destination. For each delivery, one of these item lists is selected by the warehouse scheduler. In addition to items from the current item list, workers are encouraged to pick up \u201cAdd-on\u201d items , but only if this won\u2019t increase the number of steps on their path to the destination. For example, if the item list for Fig. 2(b) is [2,8], item 5 is a good Add-on item for that delivery, because item 5 is the only additional item that does not require additional steps to obtain, given the start point, item list, and destination. There is a direct correspondence between delivery destinations and item lists in this setting and destinations and subgoals as represented by our model.\nExperiment 1: Subgoal inference\nParticipants We recruited participants for this study using Amazon Mechanical Turk. Participants were 29 adults located in the USA (Male 13, Female 14, Unknown 2). Mean age was 32 years old.\nProcedure First, in a training phase, subjects learned to perform an example warehouse job to learn the rules of the scenario. In each trial of the testing phase, participants saw 8 paths for a particular job, and inferred how many item lists the job had, and which items were on each list.\nStimuli We prepared 22 jobs for the testing phase, including a range of subgoal structures of varying complexity and difficulty. First were jobs with one item list, involving 1, 2, or 3 subgoals. Second were jobs with two item lists, involving 1, 2, or 3 subgoals for both item lists, or 1 and 3 subgoals for each item list, respectively. Some jobs presented two types of action sequences. In one type, the action sequence could reach all subgoals\nwithout deviating from the shortest path to the destination. These cases were difficult in that they did not provide direct evidence for any subgoal. In the other type, the action had to make a detour to reach the subgoal, which provided stronger evidence for that subgoal.\nModeling In our MDP representation of the environment, S corresponds to the agent location, and A is the set of movements (up, left, and right). We used a uniform distribution for the prior over subgoal sequences P0(g) and set \u03b2 = 6. For the nonparametric Bayesian model, we set the concentration parameter \u03b10 = 0.015. We used 5,000 iterations of Gibbs sampling, with 1,000 steps burn-in time to reach the stationary distribution.\nAlternative models We prepared 3 alternative models to compare with our Bayesian nonparametric model: Independent model, Logical possibility model, and Copy model. To explain each alternative model, we consider the case in which the model observes N sequences s1:N .\nThe Independent model is most similar to our approach. The only difference is that this model does not use the CRP, but instead calculates the posterior for each sequence P (gi|si) independently. The joint probability for all sequences is given by: P (g1:N |s1:N ) =\u220fN i=1 P (gi|si). The marginal probability for each sub-\ngoal sequence is given by: P (g \u2208 g1:N |s1:N ) =\u2211 {g1:N |g\u2208g1:N}\nP (g1:N |s1:N ). The Logical possibility model is a more heuristic approach, which computes the proportion of observations in which a subgoal sequence is present within the action sequence. Formally, P (g \u2208 g1:K |s1:N ) = |{i|1 \u2264 i \u2264 N \u2227 g \u2282 si}|/N .\nThe Copy model is the simplest alternative, but perhaps the most intuitive. It assigns probability 1 to the subgoals which have the highest likelihood for each observed sequence. In other words, the inferred subgoal sequence is the maximal subgoal sequence that is included by an observed action sequence. If we represent such a subgoal sequence MaxSubgoal(s), the copy model can be written: P (g \u2208 g1:K |s1:N ) = 1 if g = MaxSubgoal(si) for some i, otherwise 0.\nResults To compare human behavioral results with those of our models, we compute the proportion of participants who selected each item list for each trial. Model predictions were based on the marginal probability that each item list generated at least one path.\nTable 1 compares the correlation of the Bayesian nonparametric subgoal model and our three alternative models with human inferences. The Bayesian nonparametric model correlates very strongly with human inferences. The other models also correlate positively with human inferences, but all are substantially worse than the Bayesian nonparametric model.\nFig. 3 plots human inferences against the Bayesian nonparametric model predictions for all trials and subgoal sequences. This shows that our model can almost\nperfectly predict whether humans will infer that a certain item list is included in each job. For a small number of trials, humans are somewhat uncertain whether to include a particular item list, and the model captures this uncertainty as well.\nFinally, we compare our model predictions with human inferences for two specific jobs. In Fig. 4(a), each path includes item 5, but there are no paths which include only this item. Humans and the Bayesian nonparametric model infer that [5] is the most likely subgoal sequence, based on the systematic deviation from the shortest path to the destination to reach this item. All other models fail in revealing ways, inferring more item lists than are necessary to explain the data. In Fig. 4(b), there are two item lists. Although every path is an efficient route to the destination, without inferring an item list, humans and our model can infer these two subgoal sequences correctly by assessing the probability that these items are selected intentionally rather than by coincidence. Our alternative models once again fail to capture people\u2019s judgments.\nExperiment 2: User support using subgoal inference\nTask definition We call this the Worker-Helper Task. The main environment is the same as in Experiment 1, but there are two types of agents. One type is Worker, whose actions are structured identically to those presented in Experiment 1. The Worker\u2019s job remains the same: to deliver an item list to a destination. The other type is Helper, which must support Work-\ners in achieving their goals. The task of the Helper is to learn the structure of the Worker\u2019s jobs, then use this to help the Worker complete a job in progress by retrieving an item from the item list of the Worker, and delivering it to the destination. Helpers begin each trial on the left side of the warehouse, midway between the second row of items (4, 5 and 6) and the third row of\nitems (7, 8 and 9). Fig. 2(c) illustrates this task, with the start point of the Helper marked by a green dot.\nCollaboration protocol On each trial, the Worker randomly chooses a destination (A, B, or C) and an item list associated with that destination. The set of item lists for each destination is fixed and known to the Worker, but not the Helper. Next, the Worker plans a path to achieve their goals and begins to move through the warehouse. The Helper observes the Worker\u2019s behavior and decides which target item to retrieve by inferring the Worker\u2019s subgoal sequence (due to the Helper\u2019s starting location, the target item will always be in the third row, i.e., item 7, 8, or 9). Once the Helper decides their target item, the Helper shows this target to the Worker and begins to move. After the Worker observes the Helper\u2019s target item, the Worker re-plans its path under the assumption that the Helper will get the target item. After the Helper gets the target item, the Helper moves toward the destination inferred by observing the Worker\u2019s path. When the Helper cannot decide on a target item, they do nothing.\nModeling We assume that workers take the optimal actions, given their subgoal sequence, i.e., at = arg max\nat\nQ\u03c0 \u2217\ng (st, at). The Helper estimates the marginal\nprobability that each item is included in the subgoal sequence which the Worker is currently following. The Helper computes this probability based on the partial path of the Worker s1:t, and n previously observed paths s1:n, under the assumption that the Worker plans approximately rationally, with softmax parameter \u03b2 = 2. When the probability of a target exceeds a certain value, the Helper decides on this item. The Worker then re-plans by removing the target item and the Helper begins to take optimal actions, as does the Worker.\nProbability of target item and destination The marginal probability of target item g\u2032, given s1:t and s1:n is: P (g\n\u2032|s1:t, s1:n) =\u2211 d \u2211 {g|g\u2032\u2286g} P (s1:t|g, d)P (g \u2208 g1:K |sd1:n), where sd1:n is the subset of previously observed paths with destination d. P (g \u2208 g1:K |sd1:n) is calculated using the subgoal inference method in Section 2. P (s1:t|g, d) can be computed using Eq. 1, but without the constraint that dim(g) = dim(g) + 1. The marginal probability of destination d, given s1:t and s1:n is: P (d|s1:t, s1:n) \u221d \u2211 g P (s1:t|g, d)P (g \u2208 g1:K |sd1:n).\nAlternative models We use the same alternative models as in Experiment 1, and a common collaboration protocol (described above) for each subgoal inference model. We also add two new models. One is No Helper, which means the Helper has no subgoal knowledge. As a result, the Helper does nothing. The other is the Ground Truth model, which means the Helper knows the correct subgoal. It is a benchmark to measure the benefit of the Bayesian model.\nTest method We tested three natural types of subgoal settings. In the first, each of the three destinations has one subgoal sequence, which consists of either 7, 8, or 9. In the second, each of the three destinations has one subgoal sequence, which consists of either item 4, 5, or 6 and either item 7, 8, or 9. In the third, each of the three destinations has two subgoal sequences which consist of either item 7, 8, or 9. We generate every possible combination of items for each subgoal setting, then we learn many subgoal structures and evaluate the performance for each subgoal structure.\nEvaluation for one subgoal structure We generate a number of sequences of Workers from random start points for each destination. We then compute subgoal inferences for each model using the sequences. We then execute the collaborative task 99 times for each subgoal inference (11 points times 9 trials), and evaluate the performance of Workers in achieving their destination. We repeat these tests 5 times for each subgoal structure. We use the following score to measure performance. If the Worker achieves their goal, they score 100 points, but each action costs 2 points. This directly corresponds to the MDP reward and cost settings in Experiment 1.\nResults We executed the test, varying the number of input sequences to evaluate the dependence of each model on the amount of input data. Fig. 5(a) shows the average score of each model as a function of the number of input sequences. Generally, the Helper using the nonparametric Bayesian model is more beneficial than any alternative model. This model achieves good performance (almost as high as the Ground Truth model) using even a small number of input sequences.\nFurther, because the alternative models depend highly on the input sequences, the scores of these models are unstable. Fig. 5(b) shows the average variance of the results for each subgoal setting (we repeated the experiment 5 times for each subgoal setting; this score is the variance of these). None of the alternative models can provide stable user support. In contrast, the nonparametric Bayesian model provides stable support using even a small number of input sequences (over two input sequences). This stability is a key factor for user support, since unstable help can confuse and frustrate users."}, {"heading": "Conclusion", "text": "We presented a model of how humans infer subgoals from observations of complex action sequences. This model used rational hierarchical planning over subgoal structures generated by a nonparametric Bayesian model to capture people\u2019s intuitions about the structure of intentional actions. We showed how Bayesian inference over this generative model using a novel MCMC method predicts quantitative human subgoal inferences with high accuracy and precision. We then showed that\n(a) 1 2 3 4 5 6 7 8 9 10 11 Number of input sequences for each destination\n45\n46\n47\n48\nS co\nre No helper CRP Model Independent\nLogical Possibility Copy Ground Truth\n(b) 1 2 3 4 5 6 7 8 9 10 11 Number of input sequences for each destination\n0.0\n0.5\n1.0\n1.5\n2.0\n2.5\n3.0\nV a ri\na n ce\nNo helper CRP Model Independent\nLogical Possibility Copy Ground Truth\nFigure 5: Model scores (a) and variance (b) as a function of the number of input sequences. Variance of No helper and Ground Truth is always 0.\nour model is useful in practice, enhancing performance in an application to an artificial user support task.\nOur modeling and experimental scenarios are extremely simplistic in comparison with real human behavior. One limitation is our assumption that subgoal sequences are chosen according to probabilities determined by the Dirichlet Process. More generally, the probability of choosing a particular subgoal sequence will depend on the efficiency of that subgoal sequence, relative to the alternatives. To enhance the expressiveness of our model, Infinite PCFGs (Liang et al. 2007), Adaptor Grammars (Johnson, Griffiths, and Goldwater 2007), or fragment grammars (O\u2019Donnell 2015) are promising extensions to the simple Dirichlet Process we employ. These and other frameworks which can be applied to structured goal representation complement our work here by naturally interfacing with models of hierarchical planning analogously to the model we describe."}, {"heading": "Acknowledgments", "text": "This work was supported by the Center for Brains, Minds & Machines (CBMM), funded by NSF STC award CCF-1231216, and by NSF grant IIS-1227495."}], "references": [{"title": "J", "author": ["C.L. Baker", "R. Saxe", "Tenenbaum"], "venue": "B.", "citeRegEx": "Baker. Saxe. and Tenenbaum 2009", "shortCiteRegEx": null, "year": 2009}, {"title": "Segmenting dynamic human action via statistical structure. Cognition 106(3):1382\u20131407", "author": ["Baldwin"], "venue": null, "citeRegEx": "Baldwin,? \\Q2008\\E", "shortCiteRegEx": "Baldwin", "year": 2008}, {"title": "T", "author": ["Buchsbaum, D.", "Griffiths"], "venue": "L.; Plunkett, D.; Gopnik, A.; and Baldwin, D.", "citeRegEx": "Buchsbaum et al. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "H", "author": ["Bui"], "venue": "H.; Venkatesh, S.; and West, G.", "citeRegEx": "Bui. Venkatesh. and West 2002", "shortCiteRegEx": null, "year": 2002}, {"title": "and Goldman", "author": ["E. Charniak"], "venue": "R.", "citeRegEx": "Charniak and Goldman 1993", "shortCiteRegEx": null, "year": 1993}, {"title": "D", "author": ["Dennett"], "venue": "C.", "citeRegEx": "Dennett 1987", "shortCiteRegEx": null, "year": 1987}, {"title": "Taking the intentional stance at 12 months of age", "author": ["Gergely"], "venue": null, "citeRegEx": "Gergely,? \\Q1995\\E", "shortCiteRegEx": "Gergely", "year": 1995}, {"title": "T", "author": ["Johnson, M.", "Griffiths"], "venue": "L.; and Goldwater, S.", "citeRegEx": "Johnson. Griffiths. and Goldwater 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "J", "author": ["H.A. Kautz", "Allen"], "venue": "F.", "citeRegEx": "Kautz and Allen 1986", "shortCiteRegEx": null, "year": 1986}, {"title": "M", "author": ["P. Liang", "S. Petrov", "Jordan"], "venue": "I.; and Klein, D.", "citeRegEx": "Liang et al. 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "J", "author": ["B. Michini", "M. Cutler", "How"], "venue": "P.", "citeRegEx": "Michini. Cutler. and How 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "R", "author": ["Neal"], "venue": "M.", "citeRegEx": "Neal 2000", "shortCiteRegEx": null, "year": 2000}, {"title": "Probabilistic Plan Recognition Using Off-the-Shelf Classical Planners", "author": ["Ram\u0131\u0301rez", "M. Geffner 2010] Ram\u0131\u0301rez", "H. Geffner"], "venue": "In Proceedings of the 24th AAAI Conference on Artificial Intelligence,", "citeRegEx": "Ram\u0131\u0301rez et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ram\u0131\u0301rez et al\\.", "year": 2010}, {"title": "and Carey", "author": ["A. Schachner"], "venue": "S.", "citeRegEx": "Schachner and Carey 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "R", "author": ["R.C. Schank", "Abelson"], "venue": "P.", "citeRegEx": "Schank and Abelson 1977", "shortCiteRegEx": null, "year": 1977}, {"title": "R", "author": ["Sutton"], "venue": "S.; Precup, D.; and Singh, S.", "citeRegEx": "Sutton. Precup. and Singh 1999", "shortCiteRegEx": null, "year": 1999}], "referenceMentions": [], "year": 2015, "abstractText": "Most human behaviors consist of multiple parts, steps, or subtasks. These structures guide our action planning and execution, but when we observe others, the latent structure of their actions is typically unobservable, and must be inferred in order to learn new skills by demonstration, or to assist others in completing their tasks. For example, an assistant who has learned the subgoal structure of a colleague\u2019s task can more rapidly recognize and support their actions as they unfold. Here we model how humans infer subgoals from observations of complex action sequences using a nonparametric Bayesian model, which assumes that observed actions are generated by approximately rational planning over unknown subgoal sequences. We test this model with a behavioral experiment in which humans observed different series of goal-directed actions, and inferred both the number and composition of the subgoal sequences associated with each goal. The Bayesian model predicts human subgoal inferences with high accuracy, and significantly better than several alternative models and straightforward heuristics. Motivated by this result, we simulate how learning and inference of subgoals can improve performance in an artificial user assistance task. The Bayesian model learns the correct subgoals from fewer observations, and better assists users by more rapidly and accurately inferring the goal of their actions than alternative approaches.", "creator": "LaTeX with hyperref package"}}}