{"id": "1512.01100", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Dec-2015", "title": "Effective LSTMs for Target-Dependent Sentiment Classification", "abstract": "receiver - dependent stimulus classification remains a challenge : modeling easier marginal value of a target than its context words receiving a string. different context words have inherent restrictions on establishing the sentiment polarity of item sentence towards the term. therefore, it presents desirable players create the connections between type word becoming context words when building a learning system. also another paper, parents develop two aim dependent marketing short - term planning ( lstm ) models, since thematic information is automatically scraped into account. investigators obtain alignment methods on a quantitative dataset employing algorithms. numerical results estimate that quantitative language representation underlying standard lstm does not perform well. incorporating target term gathering evidence can significantly boost the empirical validity. the target - dependent lstm models achieve art - of - than - art performances where limiting syntactic diagrams or dynamic model lexicons.", "histories": [["v1", "Thu, 3 Dec 2015 14:54:39 GMT  (763kb,D)", "http://arxiv.org/abs/1512.01100v1", "7 pages, 3 figures"], ["v2", "Thu, 29 Sep 2016 09:40:39 GMT  (762kb,D)", "http://arxiv.org/abs/1512.01100v2", "7 pages, 3 figures published in COLING 2016"]], "COMMENTS": "7 pages, 3 figures", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["duyu tang", "bing qin", "xiaocheng feng", "ting liu"], "accepted": false, "id": "1512.01100"}, "pdf": {"name": "1512.01100.pdf", "metadata": {"source": "CRF", "title": "Target-Dependent Sentiment Classification with Long Short Term Memory", "authors": ["Duyu Tang", "Bing Qin", "Xiaocheng Feng", "Ting Liu"], "emails": ["dytang@ir.hit.edu.cn", "qinb@ir.hit.edu.cn", "xcfeng@ir.hit.edu.cn", "tliu@ir.hit.edu.cn"], "sections": [{"heading": "1 Introduction", "text": "Sentiment analysis, also known as opinion mining [Pang and Lee, 2008; Liu, 2012], is a fundamental task in natural language processing and computational linguistics [Manning and Schu\u0308tze, 1999; Jurafsky and Martin, 2000]. Sentiment analysis is crucial to understanding user generated text in social networks or product reviews, and has drawn a lot of attentions from both industry and academic communities. In this paper, we focus on target-dependent sentiment classification [Jiang et al., 2011; Dong et al., 2014; Vo and Zhang, 2015], which is a fundamental and extensively studied task in the field of sentiment analysis. Given a sentence and a target mention, the task calls for inferring the sentiment polarity (e.g. positive, negative, neutral) of the sentence towards the target. For example, let us consider the sentence: \u201cI bought a new camera. The picture quality is amazing but the battery life is too short\u201d. If the target string is picture quality, the expected sentiment polarity is \u201cpositive\u201d as the sentence expresses a positive opinion towards picture\n\u2217Corresponding author. 1On publication, codes will be made publicly available.\nquality. If we consider the target as battery life, the correct sentiment polarity should be \u201cnegative\u201d.\nTarget-dependent sentiment classification is typically regarded as a kind of text classification problem in literature. Majority of existing studies build sentiment classifiers with supervised machine learning approach, such as feature based Supported Vector Machine [Jiang et al., 2011] or neural network approaches [Dong et al., 2014; Vo and Zhang, 2015]. Despite the effectiveness of these approaches, we argue that target-dependent sentiment classification remains a challenge: how to effectively model the semantic relatedness of a target word with its context words in a sentence. One straight forward way to address this problem is to manually design a set of target-dependent features, and integrate them into existing feature-based SVM. However, feature engineering is labor intensive and the \u201csparse\u201d and \u201cdiscrete\u201d features are clumsy in encoding side information like target-context relatedness. In addition, a person asked to do this task will naturally \u201clook at\u201d parts of relevant context words which are helpful to determine the sentiment polarity of a sentence towards the target. These motivate us to develop a powerful neural network approach, which is capable of learning continuous features (representations) without feature engineering and meanwhile capturing the intricate relatedness between target and context words.\nIn this paper, we present neural network models to deal with target-dependent sentiment classification. The approach is an extension on long short-term memory (LSTM) [Hochreiter and Schmidhuber, 1997] by incorporating target information. Such target-dependent LSTM approach models the relatedness of a target word with its context words, and selects the relevant parts of contexts to infer the sentiment polarity towards the target. The model could be trained in an end-to-end way with standard backpropagation, where the loss function is cross-entropy error of supervised sentiment classification.\nWe apply the neural model to target-dependent sentiment classification on a benchmark dataset [Dong et al., 2014]. We compare with feature-based SVM [Jiang et al., 2011], adaptive recursive neural network [Dong et al., 2014] and lexiconenhanced neural network [Vo and Zhang, 2015]. Empirical results show that the proposed approach without using syntactic parser or external sentiment lexicon obtains state-ofthe-art classification accuracy. In addition, we find that modeling sentence with standard LSTM does not perform well\nar X\niv :1\n51 2.\n01 10\n0v 1\n[ cs\n.C L\n] 3\nD ec\n2 01\n5\non this target-dependent task. Integrating target information into LSTM could significantly improve the classification accuracy. The main contributions of this work are as follows:\n\u2022 We develop target-dependent LSTM models for targetdependent sentiment classification, where the relatedness of target word with context words is encoded. \u2022 Empirical results show that the neural model obtains\nstate-of-the-art performance on a benchmark dataset. Incorporating target information into LSTM could improve the classification accuracy."}, {"heading": "2 Related Work", "text": "We briefly review existing studies on target-dependent sentiment classification and neural network approaches for sentiment classification in this section."}, {"heading": "2.1 Target-Dependent Sentiment Classification", "text": "Target-dependent sentiment classification is typically regarded as a kind of text classification problem in literature. Therefore, standard text classification approach such as feature-based Supported Vector Machine [Pang et al., 2002; Jiang et al., 2011] can be naturally employed to build a sentiment classifier. For example, Jiang et al. [2011] manually design target-independent features and target-dependent features with expert knowledge, syntactic parser and external resources. Despite the effectiveness of feature engineering, it is labor intensive and unable to discover the discriminative or explanatory factors of data. To handle this problem, some recent studies [Dong et al., 2014; Vo and Zhang, 2015] use neural network methods and encode each sentence in continuous and low-dimensional vector space without feature engineering. Dong et al. [2014] transfer a dependency tree of a sentence into a target-specific recursive structure, and used an Adaptive Recursive Neural Network to learn higher level representation. Vo and Zhang [2015] use rich features including sentiment-specific word embedding and sentiment lexicons.\nDifferent from previous studies, we develop long shortterm memory models in this work, which do not use dependency parsing results or external sentiment lexicons. The approach is capable of capturing the relatedness of target word with its context words when composing continuous representation of sentence."}, {"heading": "2.2 Neural Network for Sentiment Classification", "text": "Neural network approaches have shown promising results on many sentiment analysis tasks like sentence/documentlevel sentiment classification [Socher et al., 2013b; Tang et al., 2015], opinion expression extraction [Irsoy and Cardie, 2014b], building sentiment lexicon [Tang et al., 2014a], open domain sentiment analysis [Zhang et al., 2015], fine-grained opinion mining [Liu et al., 2015], etc. The power of neural model lies in its ability in learning continuous text representation from data without any feature engineering. For sentence/document level sentiment classification, previous studies mostly have two steps. They first learn continuous word vector embeddings from data [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b]. Afterwards, semantic compositional approaches are\nused to compute the vector of a sentence/document from the vectors of its constituents based on the principle of compositionality [Frege, 1892]. Representative compositional approaches to learn sentence representation include recursive neural networks [Socher et al., 2013b; Irsoy and Cardie, 2014a], convolutional neural network [Kalchbrenner et al., 2014; Kim, 2014], long short-term memory [Li et al., 2015a] and tree-structured LSTM [Tai et al., 2015; Zhu et al., 2015]. There also exists some studies focusing on learning continuous representation of documents [Le and Mikolov, 2014; Tang et al., 2015; Bhatia et al., 2015]."}, {"heading": "3 The Approach", "text": "We describe the proposed approach for target-dependent sentiment classification in this section. We first present a basic long short-term memory (LSTM) approach, which models the semantic representation of a sentence without considering the target word being evaluated. Afterwards, we extend LSTM by considering the target word, obtaining the TargetDependent Long Short-Term Memory (TD-LSTM) model. Finally, we extend TD-LSTM with target connection, where the semantic relatedness of target with its context words are incorporated."}, {"heading": "3.1 Long Short-Term Memory (LSTM)", "text": "In this part, we describe a long short-term memory (LSTM) model for target-dependent sentiment classification. It is a basic version of our approach. In this setting, the target to be evaluated is ignored so that the task is considered in a target independent way.\nWe use LSTM as it is a state-of-the-art performer for semantic composition in the area of sentiment analysis [Li et al., 2015a; Tang et al., 2015]. It is capable of computing the representation of a longer expression (e.g. a sentence) from the representation of its children with multi levels of abstraction. The sentence representation can be naturally considered as the feature to predict the sentiment polarity of sentence.\nSpecifically, each word is represented as a low dimensional, continuous and real-valued vector, also known as word embedding [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b]. All the word vectors are stacked in a word embedding matrix Lw \u2208 Rd\u00d7|V |, where d is the dimension of word vector and |V | is vocabulary size. In this work, we pre-train the values of word vectors from text corpus with embedding learning algorithms [Pennington et al., 2014; Tang et al., 2014b] to make better use of semantic and grammatical associations of words.\nWe use LSTM to compute the vector of a sentence from the vectors of words it contains, an illustration of the model is shown in Figure 1. LSTM is a kind of recurrent neural network (RNN), which is capable of mapping vectors of words with variable length to a fixed-length vector by recursively transforming current word vector wt with the output vector of the previous step ht\u22121. The transition function of standard RNN is a linear layer followed by a pointwise non-linear layer such as hyperbolic tangent function (tanh).\nht = tanh(W \u00b7 [ht\u22121;wt] + b) (1)\nwhere W \u2208 Rd\u00d72d, b \u2208 Rd, d is dimension of word vector. However, standard RNN suffers the problem of gradient vanishing or exploding [Bengio et al., 1994; Hochreiter and Schmidhuber, 1997], where gradients may grow or decay exponentially over long sequences. Many researchers use a more sophisticated and powerful LSTM cell as the transition function, so that long-distance semantic correlations in a sequence could be better modeled. Compared with standard RNN, LSTM cell contains three additional neural gates: an input gate, a forget gate and an output gate. These gates adaptively remember input vector, forget previous history and generate output vector [Hochreiter and Schmidhuber, 1997]. LSTM cell is calculated as follows.\nit = \u03c3(Wi \u00b7 [ht\u22121;wt] + bi) (2) ft = \u03c3(Wf \u00b7 [ht\u22121;wt] + bf ) (3) ot = \u03c3(Wo \u00b7 [ht\u22121;wt] + bo) (4) gt = tanh(Wr \u00b7 [ht\u22121;wt] + br) (5) ct = it gt + ft ct\u22121 (6) ht = ot tanh(ct) (7)\nwhere stands for element-wise multiplication, \u03c3 is sigmoid function, Wi, bi, Wf , bf , Wo, bo are the parameters of input, forget and output gates.\nAfter calculating the hidden vector of each position, we regard the last hidden vector as the sentence representation [Li et al., 2015a; Tang et al., 2015]. We feed it to a linear layer whose output length is class number, and add a softmax\nlayer to output the probability of classifying the sentence as positive, negative or neutral. Softmax function is calculated as follows, where C is the number of sentiment categories.\nsoftmaxi = exp(xi)\u2211C\ni\u2032=1 exp(xi\u2032) (8)"}, {"heading": "3.2 Target-Dependent LSTM (TD-LSTM)", "text": "The aforementioned LSTM model solves target-dependent sentiment classification in a target-independent way. That is to say, the feature representation used for sentiment classification remains the same without considering the target words. Let us again take \u201cI bought a new camera. The picture quality is amazing but the battery life is too short\u201d as an example. The representations of this sentence with regard to picture quality and battery life are identical. This is evidently problematic as the sentiment polarity labels towards these two targets are different.\nTo take into account of the target information, we make a slight modification on the aforementioned LSTM model and introduce a target-dependent LSTM (TD-LSTM) in this subsection. The basic idea is to model the preceding and following contexts surrounding the target string, so that contexts in both directions could be used as feature representations for sentiment classification. We believe that capturing such target-dependent context information could improve the accuracy of target-dependent sentiment classification.\nSpecifically, we use two LSTM neural networks, a left one LSTML and a right one LSTMR, to model the preceding and\nfollowing contexts respectively. An illustration of the model is shown in Figure 1. The input of LSTML is the preceding contexts plus target string, and the input of LSTMR is the following contexts plus target string. We run LSTML from left to right, and run LSTMR from right to left. We favor this strategy as we believe that regarding target string as the last unit could better utilize the semantics of target string when using the composed representation for sentiment classification. Afterwards, we concatenate the last hidden vectors of LSTML and LSTMR, and feed them to a softmax layer to classify the sentiment polarity label. One could also try averaging or summing the last hidden vectors of LSTML and LSTMR as alternatives."}, {"heading": "3.3 Target-Connection LSTM (TC-LSTM)", "text": "Compared with LSTM model, target-dependent LSTM (TDLSTM) could make better use of the target information. However, we think TD-LSTM is still not good enough because it does not capture the interactions between target word and its contexts. Furthermore, a person asked to do target-dependent sentiment classification will select the relevant context words which are helpful to determine the sentiment polarity of a sentence towards the target.\nBased on the consideration mentioned above, we go one step further and develop a target-connection long short-term memory (TC-LSTM). This model extends TD-LSTM by incorporating an target connection component, which explicitly utilizes the connections between target word and each context word when composing the representation of a sentence.\nAn overview of TC-LSTM is illustrated in Figure 2. The input of TC-LSTM is a sentence consisting of n words {w1, w2, ...wn} and a target string t occurs in the sentence. We represent target t as {wl+1, wl+2...wr\u22121} because a target could be a word sequence of variable length, such as \u201cgoogle\u201d or \u201charry potter\u201d. When processing a sentence, we split it into three components: target words, preceding context words and following context words. We obtain target vector vtarget by averaging the vectors of words it contains, which has been proven to be simple and effective in representing named entities [Socher et al., 2013a; Sun et al., 2015]. When compute the hidden vectors of pre-\nceding and following context words, we use two separate long short-term memory models, which are similar with the strategy used in TD-LSTM. The difference is that in TC-LSTM the input at each position is the concatenation of word embedding and target vector vtarget, while in TD-LSTM the input at each position only includes the embedding of current word. We believe that TC-LSTM could make better use of the connection between target and each context word when building the representation of a sentence."}, {"heading": "3.4 Model Training", "text": "We train LSTM, TD-LSTM and TC-LSTM in an end-to-end way in a supervised learning framework. The loss function is the cross-entropy error of sentiment classification.\nloss = \u2212 \u2211 s\u2208S C\u2211 c=1 P gc (s) \u00b7 log(Pc(s)) (9)\nwhere S is the training data, C is the number of sentiment categories, s means a sentence, Pc(s) is the probability of predicting s as class c given by the softmax layer, P gc (s) indicates whether class c is the correct sentiment category, whose value is 1 or 0. We take the derivative of loss function through back-propagation with respect to all parameters, and update parameters with stochastic gradient descent."}, {"heading": "4 Experiment", "text": "We apply the proposed method to target-dependent sentiment classification to evaluate its effectiveness. We describe experimental setting and empirical results in this section."}, {"heading": "4.1 Experimental Settings", "text": "We conduct experiment in a supervised setting on a benchmark dataset [Dong et al., 2014]. Each instance in the training/test set has a manually labeled sentiment polarity. Training set contains 6,248 sentences and test set has 692 sentences. The percentages of positive, negative and neutral in training and test sets are both 25%, 25%, 50%. We train the model on training set, and evaluate the performance on test set. Evaluation metrics are accuracy and macro-F1 score\nover positive, negative and neutral categories [Manning and Schu\u0308tze, 1999; Jurafsky and Martin, 2000]."}, {"heading": "4.2 Comparison to Other Methods", "text": "We compare with several baseline methods, including:\nIn SVM-indep, SVM classifier is built with targetindependent features, such as unigram, bigram, punctuations, emoticons, hashtags, the numbers of positive or negative words in General Inquirer sentiment lexicon. In SVM-dep, target-dependent features [Jiang et al., 2011] are also concatenated as the feature representation.\nIn Recursive NN, standard Recursive neural network is used for feature learning over a transfered target-dependent dependency tree [Dong et al., 2014]. AdaRNN-w/oE, AdaRNN-w/E and AdaRNN-comb are different variations of adaptive recursive neural network [Dong et al., 2014], whose composition functions are adaptively selected according to the inputs.\nIn Target-dep, SVM classifier is built based on rich targetindependent and target-dependent features [Vo and Zhang, 2015]. In Target-dep+, sentiment lexicon features are further incorporated.\nThe neural models developed in this paper are abbreviated as LSTM, TD-LSTM and TC-LSTM, which are described in the previous section. We use 100-dimensional Glove vectors learned from Twitter, randomize the parameters with uniform distribution U(\u22120.003, 0.003), set the clipping threshold of softmax layer as 200 and set learning rate as 0.01.\nExperimental results of baseline models and our methods are given in Table 1. Comparing between SVM-indep and SVM-dep, we can find that incorporating target information can improve the classification accuracy of a basic SVM classifier. AdaRNN performs better than feature based SVM by making use of dependency parsing information and treestructured semantic composition. We can find that target-dep is a strong performer even without using lexicon features. It benefits from rich automatic features generated from word embeddings.\nAmong LSTM based models described in this paper, the basic LSTM approach performs worst. This is not surprising because this task requires understanding target-dependent\ntext semantics, while the basic LSTM model does not capture any target information so that it predicts the same result for different targets in a sentence. TD-LSTM obtains a big improvement over LSTM when target signals are taken into consideration. This result demonstrates the importance of target information for target-dependent sentiment classification. By incorporating target-connection mechanism, TC-LSTM obtains the best performances and outperforms all baseline methods in term of classification accuracy.\nComparing between Target-dep+ and Target-dep, we find that sentiment lexicon feature could further improve the classification accuracy. Our final model TC-LSTM without using sentiment lexicon information performs comparably with Target-dep+. We believe that incorporation lexicon information in TC-LSTM could get further improvement. We leave this as a potential future work."}, {"heading": "4.3 Effects of Word Embeddings", "text": "It is well accepted that a good word embedding is crucial to composing a powerful text representation at higher level. We therefore study the effects of different word embeddings on LSTM, TD-LSTM and TC-LSTM in this part. Since the benchmark dataset from [Dong et al., 2014] comes from Twitter, we compare between sentiment-specific word embedding (SSWE)2 [Tang et al., 2014b] and Glove vectors3 [Pennington et al., 2014]. All these word vectors are 50- dimensional and learned from Twitter. SSWEh, SSWEr and SSWEu are different embedding learning algorithms introduced in [Tang et al., 2014b]. SSWEh and SSWEr learn word embeddings by only using sentiment of sentences. SSWEu takes into account of sentiment of sentences and contexts of words simultaneously.\nFrom Figure 3, we can find that SSWEh and SSWEr perform worse than SSWEu, which is consistent with the results reported on target-independent sentiment classification of tweets [Tang et al., 2014b]. This shows the importance\n2SSWE vectors are publicly available at http://ir.hit. edu.cn/\u02dcdytang\n3Glove vectors are publicly available at http://nlp. stanford.edu/projects/glove/\nof context information for word embedding learning as both SSWEh and SSWEr do not encode any word contexts. Glove and SSWEu perform comparably, which indicates the importance of global context for estimating a good word representation. In addition, the target connection model TC-LSTM performs best when considering a specific word embedding.\nWe compare between Glove vectors with different dimensions (50/100/200). Classification accuracy and time cost are given in Figure 3 and Table 2, respectively. We can find that 100-dimensional word vectors perform better than 50- dimensional word vectors, while 200-dimensional word vectors do not show significant improvements. Furthermore, TDLSTM and LSTM have similar time cost, while TD-LSTM gets higher classification accuracy as target information is incorporated. TC-LSTM performs slightly better than TDLSTM while at the cost of longer training time because the parameter number of TC-LSTM is larger."}, {"heading": "4.4 Case Study", "text": "In this section, we explore to what extent the target-dependent LSTM models including TD-LSTM and TC-LSTM improve the performance of a basic LSTM model.\nIn Table 3, we list some examples whose polarity labels are incorrectly inferred by LSTM but correctly predicted by both TD-LSTM and TC-LSTM. We observe that LSTM model prefers to assigning the polarity of the entire sentence while ignoring the target to be evaluated. TD-LSTM and TC-LSTM could take into account of target information to some extend. For example, in the 2nd example the opinion holder expresses\na negative opinion about his work, but holds a neutral sentiment towards the target \u201clindsay lohan\u201d. In the last example, the whole sentence expresses a neutral sentiment while it holds a positive opinion towards \u201cgoogle\u201d.\nWe analyse the error cases that both TD-LSTM and TCLSTM cannot well handle, and find that 85.4% of the misclassified examples relate to neutral category. The positive instances are rarely misclassified as negative, and vice versa. A example of errors is: \u201cfreaky friday on television reminding me to think wtf happened to lindsay lohan, she was such a terrific actress , + my huge crush on haley hudson.\u201d, which is incorrectly predicted as positive towards target \u201cindsay lohan\u201d in both TD-LSTM and TC-LSTM."}, {"heading": "4.5 Discussion", "text": "In order to capture the semantic relatedness between target and context words, we extend TD-LSTM by adding a target connection component. One could also try other extensions to capture the connection between target and context words. For example, we also tried an attention-based LSTM model, which is inspired by the recent success of attention-based neural network in machine translation [Bahdanau et al., 2015] and document encoding [Li et al., 2015b]. We implement the soft-attention mechanism [Bahdanau et al., 2015] to enhance TD-LSTM. We incorporate two attention layers for preceding LSTM and following LSTM, respectively. The output vector for each attention layer is the weighted average among hidden vectors of LSTM, where the weight of each hidden vector is calculated with a feedforward neural network. The outputs of preceding and following attention models are concatenated and fed to softmax for sentiment classification. However, we cannot obtain better result with such an attention model. The accuracy of this attention model is slightly lower than the standard LSTM model (around 65%), which means that the attention component has a negative impact on the model. A potential reason might be that the attention based LSTM has larger number of parameters, which cannot be easily optimized with the small number of corpus."}, {"heading": "5 Conclusion", "text": "We develop target-specific long short term memory models for target-dependent sentiment classification. The approach captures the connection between target word and its contexts when generating the representation of a sentence. We train the model in an end-to-end way on a benchmark dataset, and show that incorporating target information could boost the performance of a long short-term memory model. The targetdependent LSTM model obtains state-of-the-art classification accuracy."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio"], "venue": "ICLR,", "citeRegEx": "Bahdanau et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "IEEE Transactions on", "author": ["Yoshua Bengio", "Patrice Simard", "Paolo Frasconi. Learning long-term dependencies with gradient descent is difficult. Neural Networks"], "venue": "5(2):157\u2013166,", "citeRegEx": "Bengio et al.. 1994", "shortCiteRegEx": null, "year": 1994}, {"title": "Journal of Machine Learning Research", "author": ["Yoshua Bengio", "R\u00e9jean Ducharme", "Pascal Vincent", "Christian Janvin. A neural probabilistic language model"], "venue": "3:1137\u20131155,", "citeRegEx": "Bengio et al.. 2003", "shortCiteRegEx": null, "year": 2003}, {"title": "In EMNLP", "author": ["Parminder Bhatia", "Yangfeng Ji", "Jacob Eisenstein. Better document-level sentiment analysis from rst discourse parsing"], "venue": "pages 2212\u20132218,", "citeRegEx": "Bhatia et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "In ACL", "author": ["Li Dong", "Furu Wei", "Chuanqi Tan", "Duyu Tang", "Ming Zhou", "Ke Xu. Adaptive recursive neural network for target-dependent twitter sentiment classification"], "venue": "pages 49\u201354,", "citeRegEx": "Dong et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "Ludlow (1997)", "author": ["Gottlob Frege. On sense", "reference"], "venue": "pages 563\u2013584,", "citeRegEx": "Frege. 1892", "shortCiteRegEx": null, "year": 1892}, {"title": "Neural computation", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber. Long short-term memory"], "venue": "9(8):1735\u20131780,", "citeRegEx": "Hochreiter and Schmidhuber. 1997", "shortCiteRegEx": null, "year": 1997}, {"title": "In NIPS", "author": ["Ozan Irsoy", "Claire Cardie. Deep recursive neural networks for compositionality in language"], "venue": "pages 2096\u20132104,", "citeRegEx": "Irsoy and Cardie. 2014a", "shortCiteRegEx": null, "year": 2014}, {"title": "In EMNLP", "author": ["Ozan Irsoy", "Claire Cardie. Opinion mining with deep recurrent neural networks"], "venue": "pages 720\u2013728,", "citeRegEx": "Irsoy and Cardie. 2014b", "shortCiteRegEx": null, "year": 2014}, {"title": "ACL", "author": ["Long Jiang", "Mo Yu", "Ming Zhou", "Xiaohua Liu", "Tiejun Zhao. Target-dependent twitter sentiment classification"], "venue": "1:151\u2013160,", "citeRegEx": "Jiang et al.. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "Speech & language processing", "author": ["Dan Jurafsky", "James H Martin"], "venue": "Pearson Education India,", "citeRegEx": "Jurafsky and Martin. 2000", "shortCiteRegEx": null, "year": 2000}, {"title": "In ACL", "author": ["Nal Kalchbrenner", "Edward Grefenstette", "Phil Blunsom. A convolutional neural network for modelling sentences"], "venue": "pages 655\u2013665,", "citeRegEx": "Kalchbrenner et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "In EMNLP", "author": ["Yoon Kim. Convolutional neural networks for sentence classification"], "venue": "pages 1746\u20131751,", "citeRegEx": "Kim. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "In ICML", "author": ["Quoc V. Le", "Tomas Mikolov. Distributed representations of sentences", "documents"], "venue": "pages 1188\u20131196,", "citeRegEx": "Le and Mikolov. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "and Eudard Hovy", "author": ["Jiwei Li", "Dan Jurafsky"], "venue": "When are tree structures necessary for deep learning of representations? EMNLP,", "citeRegEx": "Li et al.. 2015a", "shortCiteRegEx": null, "year": 2015}, {"title": "A hierarchical neural autoencoder for paragraphs and documents", "author": ["Jiwei Li", "Minh-Thang Luong", "Dan Jurafsky"], "venue": "ACL,", "citeRegEx": "Li et al.. 2015b", "shortCiteRegEx": null, "year": 2015}, {"title": "In EMNLP", "author": ["Pengfei Liu", "Shafiq Joty", "Helen Meng. Fine-grained opinion mining with recurrent neural networks", "word embeddings"], "venue": "pages 1433\u2013 1443,", "citeRegEx": "Liu et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Synthesis Lectures on Human Language Technologies", "author": ["Bing Liu. Sentiment analysis", "opinion mining"], "venue": "5(1):1\u2013167,", "citeRegEx": "Liu. 2012", "shortCiteRegEx": null, "year": 2012}, {"title": "Foundations of statistical natural language processing", "author": ["Christopher D Manning", "Hinrich Sch\u00fctze"], "venue": "MIT press,", "citeRegEx": "Manning and Sch\u00fctze. 1999", "shortCiteRegEx": null, "year": 1999}, {"title": "In NIPS", "author": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean. Distributed representations of words", "phrases", "their compositionality"], "venue": "pages 3111\u20133119,", "citeRegEx": "Mikolov et al.. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "Foundations and trends in information retrieval", "author": ["Bo Pang", "Lillian Lee. Opinion mining", "sentiment analysis"], "venue": "2(1-2):1\u2013135,", "citeRegEx": "Pang and Lee. 2008", "shortCiteRegEx": null, "year": 2008}, {"title": "Thumbs up?: sentiment classification using machine learning techniques", "author": ["Bo Pang", "Lillian Lee", "Shivakumar Vaithyanathan"], "venue": "EMNLP, pages 79\u2013 86,", "citeRegEx": "Pang et al.. 2002", "shortCiteRegEx": null, "year": 2002}, {"title": "Glove: Global vectors for word representation", "author": ["Jeffrey Pennington", "Richard Socher", "Christopher D Manning"], "venue": "EMNLP, pages 1532\u20131543,", "citeRegEx": "Pennington et al.. 2014", "shortCiteRegEx": null, "year": 2014}, {"title": "Reasoning with neural tensor networks for knowledge base completion", "author": ["Richard Socher", "Danqi Chen", "Christopher D Manning", "Andrew Y Ng"], "venue": "NIPS,", "citeRegEx": "Socher et al.. 2013a", "shortCiteRegEx": null, "year": 2013}, {"title": "In EMNLP", "author": ["Richard Socher", "Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D. Manning", "Andrew Ng", "Christopher Potts. Recursive deep models for semantic compositionality over a sentiment treebank"], "venue": "pages 1631\u20131642,", "citeRegEx": "Socher et al.. 2013b", "shortCiteRegEx": null, "year": 2013}, {"title": "context and entity with neural networks for entity disambiguation", "author": ["Yaming Sun", "Lei Lin", "Duyu Tang", "Nan Yang", "Zhenzhou Ji", "Xiaolong Wang. Modeling mention"], "venue": "IJCAI,", "citeRegEx": "Sun et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Improved semantic representations from tree-structured long short-term memory networks", "author": ["Kai Sheng Tai", "Richard Socher", "Christopher D Manning"], "venue": "ACL,", "citeRegEx": "Tai et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Building large-scale twitter-specific sentiment lexicon: A representation learning approach", "author": ["Duyu Tang", "Furu Wei", "Bing Qin", "Ming Zhou", "Ting Liu"], "venue": "COLING, pages 172\u2013182,", "citeRegEx": "Tang et al.. 2014a", "shortCiteRegEx": null, "year": 2014}, {"title": "In ACL", "author": ["Duyu Tang", "Furu Wei", "Nan Yang", "Ming Zhou", "Ting Liu", "Bing Qin. Learning sentimentspecific word embedding for twitter sentiment classification"], "venue": "pages 1555\u20131565,", "citeRegEx": "Tang et al.. 2014b", "shortCiteRegEx": null, "year": 2014}, {"title": "EMNLP", "author": ["Duyu Tang", "Bing Qin", "Ting Liu. Document modeling with gated recurrent neural network for sentiment classification"], "venue": "pages 1422\u20131432,", "citeRegEx": "Tang et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Targetdependent twitter sentiment classification with rich automatic features", "author": ["Duy-Tin Vo", "Yue Zhang"], "venue": "IJCAI,", "citeRegEx": "Vo and Zhang. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "In EMNLP", "author": ["Meishan Zhang", "Yue Zhang", "Duy Tin Vo. Neural networks for open domain targeted sentiment"], "venue": "pages 612\u2013621,", "citeRegEx": "Zhang et al.. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Long short-term memory over tree structures", "author": ["Xiaodan Zhu", "Parinaz Sobhani", "Hongyu Guo"], "venue": "ICML,", "citeRegEx": "Zhu et al.. 2015", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 20, "context": "Sentiment analysis, also known as opinion mining [Pang and Lee, 2008; Liu, 2012], is a fundamental task in natural language processing and computational linguistics [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 49, "endOffset": 80}, {"referenceID": 17, "context": "Sentiment analysis, also known as opinion mining [Pang and Lee, 2008; Liu, 2012], is a fundamental task in natural language processing and computational linguistics [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 49, "endOffset": 80}, {"referenceID": 18, "context": "Sentiment analysis, also known as opinion mining [Pang and Lee, 2008; Liu, 2012], is a fundamental task in natural language processing and computational linguistics [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 165, "endOffset": 219}, {"referenceID": 10, "context": "Sentiment analysis, also known as opinion mining [Pang and Lee, 2008; Liu, 2012], is a fundamental task in natural language processing and computational linguistics [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 165, "endOffset": 219}, {"referenceID": 9, "context": "In this paper, we focus on target-dependent sentiment classification [Jiang et al., 2011; Dong et al., 2014; Vo and Zhang, 2015], which is a fundamental and extensively studied task in the field of sentiment analysis.", "startOffset": 69, "endOffset": 128}, {"referenceID": 4, "context": "In this paper, we focus on target-dependent sentiment classification [Jiang et al., 2011; Dong et al., 2014; Vo and Zhang, 2015], which is a fundamental and extensively studied task in the field of sentiment analysis.", "startOffset": 69, "endOffset": 128}, {"referenceID": 30, "context": "In this paper, we focus on target-dependent sentiment classification [Jiang et al., 2011; Dong et al., 2014; Vo and Zhang, 2015], which is a fundamental and extensively studied task in the field of sentiment analysis.", "startOffset": 69, "endOffset": 128}, {"referenceID": 9, "context": "Majority of existing studies build sentiment classifiers with supervised machine learning approach, such as feature based Supported Vector Machine [Jiang et al., 2011] or neural network approaches [Dong et al.", "startOffset": 147, "endOffset": 167}, {"referenceID": 4, "context": ", 2011] or neural network approaches [Dong et al., 2014; Vo and Zhang, 2015].", "startOffset": 37, "endOffset": 76}, {"referenceID": 30, "context": ", 2011] or neural network approaches [Dong et al., 2014; Vo and Zhang, 2015].", "startOffset": 37, "endOffset": 76}, {"referenceID": 6, "context": "The approach is an extension on long short-term memory (LSTM) [Hochreiter and Schmidhuber, 1997] by incorporating target information.", "startOffset": 62, "endOffset": 96}, {"referenceID": 4, "context": "We apply the neural model to target-dependent sentiment classification on a benchmark dataset [Dong et al., 2014].", "startOffset": 94, "endOffset": 113}, {"referenceID": 9, "context": "We compare with feature-based SVM [Jiang et al., 2011], adaptive recursive neural network [Dong et al.", "startOffset": 34, "endOffset": 54}, {"referenceID": 4, "context": ", 2011], adaptive recursive neural network [Dong et al., 2014] and lexiconenhanced neural network [Vo and Zhang, 2015].", "startOffset": 43, "endOffset": 62}, {"referenceID": 30, "context": ", 2014] and lexiconenhanced neural network [Vo and Zhang, 2015].", "startOffset": 43, "endOffset": 63}, {"referenceID": 21, "context": "Therefore, standard text classification approach such as feature-based Supported Vector Machine [Pang et al., 2002; Jiang et al., 2011] can be naturally employed to build a sentiment classifier.", "startOffset": 96, "endOffset": 135}, {"referenceID": 9, "context": "Therefore, standard text classification approach such as feature-based Supported Vector Machine [Pang et al., 2002; Jiang et al., 2011] can be naturally employed to build a sentiment classifier.", "startOffset": 96, "endOffset": 135}, {"referenceID": 4, "context": "To handle this problem, some recent studies [Dong et al., 2014; Vo and Zhang, 2015] use neural network methods and encode each sentence in continuous and low-dimensional vector space without feature engineering.", "startOffset": 44, "endOffset": 83}, {"referenceID": 30, "context": "To handle this problem, some recent studies [Dong et al., 2014; Vo and Zhang, 2015] use neural network methods and encode each sentence in continuous and low-dimensional vector space without feature engineering.", "startOffset": 44, "endOffset": 83}, {"referenceID": 24, "context": "Neural network approaches have shown promising results on many sentiment analysis tasks like sentence/documentlevel sentiment classification [Socher et al., 2013b; Tang et al., 2015], opinion expression extraction [Irsoy and Cardie, 2014b], building sentiment lexicon [Tang et al.", "startOffset": 141, "endOffset": 182}, {"referenceID": 29, "context": "Neural network approaches have shown promising results on many sentiment analysis tasks like sentence/documentlevel sentiment classification [Socher et al., 2013b; Tang et al., 2015], opinion expression extraction [Irsoy and Cardie, 2014b], building sentiment lexicon [Tang et al.", "startOffset": 141, "endOffset": 182}, {"referenceID": 8, "context": ", 2015], opinion expression extraction [Irsoy and Cardie, 2014b], building sentiment lexicon [Tang et al.", "startOffset": 39, "endOffset": 64}, {"referenceID": 27, "context": ", 2015], opinion expression extraction [Irsoy and Cardie, 2014b], building sentiment lexicon [Tang et al., 2014a], open domain sentiment analysis [Zhang et al.", "startOffset": 93, "endOffset": 113}, {"referenceID": 31, "context": ", 2014a], open domain sentiment analysis [Zhang et al., 2015], fine-grained opinion mining [Liu et al.", "startOffset": 41, "endOffset": 61}, {"referenceID": 16, "context": ", 2015], fine-grained opinion mining [Liu et al., 2015], etc.", "startOffset": 37, "endOffset": 55}, {"referenceID": 2, "context": "They first learn continuous word vector embeddings from data [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 61, "endOffset": 149}, {"referenceID": 19, "context": "They first learn continuous word vector embeddings from data [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 61, "endOffset": 149}, {"referenceID": 22, "context": "They first learn continuous word vector embeddings from data [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 61, "endOffset": 149}, {"referenceID": 28, "context": "They first learn continuous word vector embeddings from data [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 61, "endOffset": 149}, {"referenceID": 5, "context": "Afterwards, semantic compositional approaches are used to compute the vector of a sentence/document from the vectors of its constituents based on the principle of compositionality [Frege, 1892].", "startOffset": 180, "endOffset": 193}, {"referenceID": 24, "context": "Representative compositional approaches to learn sentence representation include recursive neural networks [Socher et al., 2013b; Irsoy and Cardie, 2014a], convolutional neural network [Kalchbrenner et al.", "startOffset": 107, "endOffset": 154}, {"referenceID": 7, "context": "Representative compositional approaches to learn sentence representation include recursive neural networks [Socher et al., 2013b; Irsoy and Cardie, 2014a], convolutional neural network [Kalchbrenner et al.", "startOffset": 107, "endOffset": 154}, {"referenceID": 11, "context": ", 2013b; Irsoy and Cardie, 2014a], convolutional neural network [Kalchbrenner et al., 2014; Kim, 2014], long short-term memory [Li et al.", "startOffset": 64, "endOffset": 102}, {"referenceID": 12, "context": ", 2013b; Irsoy and Cardie, 2014a], convolutional neural network [Kalchbrenner et al., 2014; Kim, 2014], long short-term memory [Li et al.", "startOffset": 64, "endOffset": 102}, {"referenceID": 14, "context": ", 2014; Kim, 2014], long short-term memory [Li et al., 2015a] and tree-structured LSTM [Tai et al.", "startOffset": 43, "endOffset": 61}, {"referenceID": 26, "context": ", 2015a] and tree-structured LSTM [Tai et al., 2015; Zhu et al., 2015].", "startOffset": 34, "endOffset": 70}, {"referenceID": 32, "context": ", 2015a] and tree-structured LSTM [Tai et al., 2015; Zhu et al., 2015].", "startOffset": 34, "endOffset": 70}, {"referenceID": 13, "context": "There also exists some studies focusing on learning continuous representation of documents [Le and Mikolov, 2014; Tang et al., 2015; Bhatia et al., 2015].", "startOffset": 91, "endOffset": 153}, {"referenceID": 29, "context": "There also exists some studies focusing on learning continuous representation of documents [Le and Mikolov, 2014; Tang et al., 2015; Bhatia et al., 2015].", "startOffset": 91, "endOffset": 153}, {"referenceID": 3, "context": "There also exists some studies focusing on learning continuous representation of documents [Le and Mikolov, 2014; Tang et al., 2015; Bhatia et al., 2015].", "startOffset": 91, "endOffset": 153}, {"referenceID": 14, "context": "We use LSTM as it is a state-of-the-art performer for semantic composition in the area of sentiment analysis [Li et al., 2015a; Tang et al., 2015].", "startOffset": 109, "endOffset": 146}, {"referenceID": 29, "context": "We use LSTM as it is a state-of-the-art performer for semantic composition in the area of sentiment analysis [Li et al., 2015a; Tang et al., 2015].", "startOffset": 109, "endOffset": 146}, {"referenceID": 2, "context": "Specifically, each word is represented as a low dimensional, continuous and real-valued vector, also known as word embedding [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 125, "endOffset": 213}, {"referenceID": 19, "context": "Specifically, each word is represented as a low dimensional, continuous and real-valued vector, also known as word embedding [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 125, "endOffset": 213}, {"referenceID": 22, "context": "Specifically, each word is represented as a low dimensional, continuous and real-valued vector, also known as word embedding [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 125, "endOffset": 213}, {"referenceID": 28, "context": "Specifically, each word is represented as a low dimensional, continuous and real-valued vector, also known as word embedding [Bengio et al., 2003; Mikolov et al., 2013; Pennington et al., 2014; Tang et al., 2014b].", "startOffset": 125, "endOffset": 213}, {"referenceID": 22, "context": "In this work, we pre-train the values of word vectors from text corpus with embedding learning algorithms [Pennington et al., 2014; Tang et al., 2014b] to make better use of semantic and grammatical associations of words.", "startOffset": 106, "endOffset": 151}, {"referenceID": 28, "context": "In this work, we pre-train the values of word vectors from text corpus with embedding learning algorithms [Pennington et al., 2014; Tang et al., 2014b] to make better use of semantic and grammatical associations of words.", "startOffset": 106, "endOffset": 151}, {"referenceID": 1, "context": "However, standard RNN suffers the problem of gradient vanishing or exploding [Bengio et al., 1994; Hochreiter and Schmidhuber, 1997], where gradients may grow or decay exponentially over long sequences.", "startOffset": 77, "endOffset": 132}, {"referenceID": 6, "context": "However, standard RNN suffers the problem of gradient vanishing or exploding [Bengio et al., 1994; Hochreiter and Schmidhuber, 1997], where gradients may grow or decay exponentially over long sequences.", "startOffset": 77, "endOffset": 132}, {"referenceID": 6, "context": "These gates adaptively remember input vector, forget previous history and generate output vector [Hochreiter and Schmidhuber, 1997].", "startOffset": 97, "endOffset": 131}, {"referenceID": 14, "context": "After calculating the hidden vector of each position, we regard the last hidden vector as the sentence representation [Li et al., 2015a; Tang et al., 2015].", "startOffset": 118, "endOffset": 155}, {"referenceID": 29, "context": "After calculating the hidden vector of each position, we regard the last hidden vector as the sentence representation [Li et al., 2015a; Tang et al., 2015].", "startOffset": 118, "endOffset": 155}, {"referenceID": 23, "context": "We obtain target vector vtarget by averaging the vectors of words it contains, which has been proven to be simple and effective in representing named entities [Socher et al., 2013a; Sun et al., 2015].", "startOffset": 159, "endOffset": 199}, {"referenceID": 25, "context": "We obtain target vector vtarget by averaging the vectors of words it contains, which has been proven to be simple and effective in representing named entities [Socher et al., 2013a; Sun et al., 2015].", "startOffset": 159, "endOffset": 199}, {"referenceID": 4, "context": "We conduct experiment in a supervised setting on a benchmark dataset [Dong et al., 2014].", "startOffset": 69, "endOffset": 88}, {"referenceID": 18, "context": "over positive, negative and neutral categories [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 47, "endOffset": 101}, {"referenceID": 10, "context": "over positive, negative and neutral categories [Manning and Sch\u00fctze, 1999; Jurafsky and Martin, 2000].", "startOffset": 47, "endOffset": 101}, {"referenceID": 9, "context": "In SVM-dep, target-dependent features [Jiang et al., 2011] are also concatenated as the feature representation.", "startOffset": 38, "endOffset": 58}, {"referenceID": 4, "context": "In Recursive NN, standard Recursive neural network is used for feature learning over a transfered target-dependent dependency tree [Dong et al., 2014].", "startOffset": 131, "endOffset": 150}, {"referenceID": 4, "context": "AdaRNN-w/oE, AdaRNN-w/E and AdaRNN-comb are different variations of adaptive recursive neural network [Dong et al., 2014], whose composition functions are adaptively selected according to the inputs.", "startOffset": 102, "endOffset": 121}, {"referenceID": 30, "context": "In Target-dep, SVM classifier is built based on rich targetindependent and target-dependent features [Vo and Zhang, 2015].", "startOffset": 101, "endOffset": 121}, {"referenceID": 4, "context": "Since the benchmark dataset from [Dong et al., 2014] comes from Twitter, we compare between sentiment-specific word embedding (SSWE)2 [Tang et al.", "startOffset": 33, "endOffset": 52}, {"referenceID": 28, "context": ", 2014] comes from Twitter, we compare between sentiment-specific word embedding (SSWE)2 [Tang et al., 2014b] and Glove vectors3 [Pennington et al.", "startOffset": 89, "endOffset": 109}, {"referenceID": 22, "context": ", 2014b] and Glove vectors3 [Pennington et al., 2014].", "startOffset": 28, "endOffset": 53}, {"referenceID": 28, "context": "SSWEh, SSWEr and SSWEu are different embedding learning algorithms introduced in [Tang et al., 2014b].", "startOffset": 81, "endOffset": 101}, {"referenceID": 28, "context": "From Figure 3, we can find that SSWEh and SSWEr perform worse than SSWEu, which is consistent with the results reported on target-independent sentiment classification of tweets [Tang et al., 2014b].", "startOffset": 177, "endOffset": 197}, {"referenceID": 0, "context": "For example, we also tried an attention-based LSTM model, which is inspired by the recent success of attention-based neural network in machine translation [Bahdanau et al., 2015] and document encoding [Li et al.", "startOffset": 155, "endOffset": 178}, {"referenceID": 15, "context": ", 2015] and document encoding [Li et al., 2015b].", "startOffset": 30, "endOffset": 48}, {"referenceID": 0, "context": "We implement the soft-attention mechanism [Bahdanau et al., 2015] to enhance TD-LSTM.", "startOffset": 42, "endOffset": 65}], "year": 2015, "abstractText": "Target-dependent sentiment classification remains a challenge: modeling the semantic relatedness of a target with its context words in a sentence. Different context words have different influences on determining the sentiment polarity of a sentence towards the target. Therefore, it is desirable to integrate the connections between target word and context words when building a learning system. In this paper, we develop two target dependent long short-term memory (LSTM) models, where target information is automatically taken into account. We evaluate our methods on a benchmark dataset from Twitter. Empirical results show that modeling sentence representation with standard LSTM does not perform well. Incorporating target information into LSTM can significantly boost the classification accuracy. The target-dependent LSTM models achieve state-of-the-art performances without using syntactic parser or external sentiment lexicons.1", "creator": "LaTeX with hyperref package"}}}